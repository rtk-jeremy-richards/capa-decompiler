{
    "00401000": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401000(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint var_5ch;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    // [00] -r-x section size 32768 named .text\n    iVar3 = *0x473ddc;\n    if (arg_ch == 0xf) {\n        uVar4 = (*_sym.imp.USER32.dll_BeginPaint)(arg_8h, &var_5ch);\n        var_ch = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(arg_8h, &var_1ch);\n        iVar5 = var_10h;\n        pcVar1 = _sym.imp.GDI32.dll_DeleteObject;\n        var_10h = 0;\n        for (; var_18h < iVar5; var_18h = var_18h + 4) {\n            iVar7 = iVar5 - var_18h;\n            var_8h = CONCAT11((*(iVar3 + 0x52) * iVar7 + *(iVar3 + 0x56) * var_18h) / iVar5, \n                              (*(iVar3 + 0x51) * iVar7 + *(iVar3 + 0x55) * var_18h) / iVar5) << 8 |\n                     (*(iVar3 + 0x50) * iVar7 + *(iVar3 + 0x54) * var_18h) / iVar5 & 0xffU;\n            uVar6 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            var_10h = var_10h + 4;\n            (*_sym.imp.USER32.dll_FillRect)(uVar4, &var_1ch, uVar6);\n            (*pcVar1)(uVar6);\n        }\n        if (*(iVar3 + 0x58) != -1) {\n            iVar5 = (*_sym.imp.GDI32.dll_CreateFontIndirectW)(*(iVar3 + 0x34));\n            if (iVar5 != 0) {\n                var_1ch = 0x10;\n                var_18h = 8;\n                (*_sym.imp.GDI32.dll_SetBkMode)(uVar4, 1);\n                (*_sym.imp.GDI32.dll_SetTextColor)(uVar4, *(iVar3 + 0x58));\n                pcVar2 = _sym.imp.GDI32.dll_SelectObject;\n                uVar6 = (*_sym.imp.GDI32.dll_SelectObject)(uVar4, iVar5);\n                (*_sym.imp.USER32.dll_DrawTextW)(uVar4, 0x46bdc0, 0xffffffff, &var_1ch, 0x820);\n                (*pcVar2)(uVar4, uVar6);\n                (*pcVar1)(iVar5);\n            }\n        }\n        (*_sym.imp.USER32.dll_EndPaint)(arg_8h, &var_5ch);\n        uVar4 = 0;\n    }\n    else {\n        if (arg_ch == 0x46) {\n            *(arg_14h + 0x18) = *(arg_14h + 0x18) | 0x10;\n            *(arg_14h + 4) = *0x473dd4;\n        }\n        uVar4 = (*_sym.imp.USER32.dll_DefWindowProcW)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar4;\n}\n",
        "token_count": 850
    },
    "00407e30": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00407e30(uint32_t *param_1)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint16_t *puVar9;\n    uint32_t *puVar10;\n    uint32_t *puVar11;\n    bool bVar12;\n    uint32_t auStack140 [4];\n    int32_t iStack124;\n    uint32_t uStack120;\n    uint8_t *puStack116;\n    int32_t iStack112;\n    uint8_t *puStack108;\n    int32_t iStack104;\n    uint32_t uStack100;\n    uint8_t uStack96;\n    uint8_t uStack95;\n    uint16_t *puStack92;\n    uint16_t *puStack88;\n    int32_t iStack84;\n    uint32_t uStack80;\n    uint32_t uStack76;\n    uint32_t uStack72;\n    uint32_t uStack68;\n    uint32_t uStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    puVar10 = param_1;\n    puVar11 = auStack140;\n    for (iVar6 = 0x22; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar11 = *puVar10;\n        puVar10 = puVar10 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    iVar6 = iStack8;\n    uVar8 = uStack72;\n    puVar9 = puStack88;\n    if (iStack52 == -1) {\n        return 1;\n    }\ncode_r0x00407e62:\n    do {\n        uVar5 = uStack36;\n        puVar3 = puStack108;\n    // switch table (29 cases) at 0x408818\n        switch(auStack140[0]) {\n        case 0:\n            if (iStack112 == 0) goto code_r0x004087fe;\n            iStack112 = iStack112 + -1;\n            uVar1 = *puStack116;\n            puStack116 = puStack116 + 1;\n            if (0xe1 < uVar1) {\n                return 0xffffffff;\n            }\n            uStack64 = (uVar1 % 0x2d) % 9;\n            uStack32 = (1 << uVar1 / 0x2d) - 1;\n            uStack28 = (1 << (uVar1 % 0x2d) / 9) - 1;\n            iVar7 = (0x300 << uStack64 + uVar1 / 0x2d) + 0x736;\n            iVar6 = iVar7 * 2;\n            if (iVar6 != iStack124) {\n                if (iStack8 != 0) {\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(iStack8);\n                }\n                iStack8 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, iVar6);\n                if (iStack8 == 0) {\n                    return 0xffffffff;\n                }\n                iStack124 = iVar6;\n            }\n            while (iVar7 != 0) {\n                iVar7 = iVar7 + -1;\n                *(iStack8 + iVar7 * 2) = 0x400;\n            }\n            uStack68 = 0;\n            for (uStack76 = 0; uStack76 < 4; uStack76 = uStack76 + 1) {\ncode_r0x00407f1a:\n                if (iStack112 == 0) {\n                    auStack140[0] = 1;\n                    goto code_r0x004087fe;\n                }\n                iStack112 = iStack112 + -1;\n                uStack68 = uStack68 | *puStack116 << (uStack76 << 3 & 0x1f);\n                puStack116 = puStack116 + 1;\n            }\n            if (uStack68 != uStack120) {\n                uStack120 = uStack68;\n                if (iStack12 != 0) {\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(iStack12);\n                }\n                iStack12 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, uStack68);\n                if (iStack12 == 0) {\n                    return 0xffffffff;\n                }\n            }\n            *(iStack12 + -1 + uStack120) = 0;\n            uStack76 = 5;\n            while (uVar5 = uStack76,  uStack76 = uStack76 - 1,  iVar6 = iStack8,  uVar5 != 0) {\ncode_r0x00407f88:\n                if (iStack112 == 0) {\n                    auStack140[0] = 3;\n                    goto code_r0x004087fe;\n                }\n                uVar1 = *puStack116;\n                iStack112 = iStack112 + -1;\n                puStack116 = puStack116 + 1;\n                uStack16 = uStack16 << 8 | uVar1;\n            }\n        case 2:\n            uStack80 = uStack100 & uStack32;\n            puVar9 = iVar6 + (iStack60 * 0x10 + (uStack100 & uStack32)) * 2;\n            auStack140[1] = 6;\n            break;\n        case 1:\n            goto code_r0x00407f1a;\n        case 3:\n            goto code_r0x00407f88;\n        case 4:\n            goto code_r0x0040860c;\n        case 5:\n            goto code_r0x0040865b;\n        case 6:\n            if (uStack68 != 0) {\n                iStack56 = 1;\n                puVar9 = iVar6 + 0x180 + iStack60 * 2;\n                auStack140[1] = 7;\n                break;\n            }\n            puStack92 = ((uStack96 >> (8 - uStack64 & 0x1f)) + ((uStack100 & uStack28) << (uStack64 & 0x1f))) * 0x600 +\n                        0xe6c + iVar6;\n            if (iStack60 < 4) {\n                iStack60 = 0;\n            }\n            else if (iStack60 < 10) {\n                iStack60 = iStack60 + -3;\n            }\n            else {\n                iStack60 = iStack60 + -6;\n            }\n            if (iStack56 != 0) {\n                uVar8 = uStack24 - uStack48;\n                if (uStack120 <= uVar8) {\n                    uVar8 = uVar8 + uStack120;\n                }\n                uStack95 = *(uVar8 + iStack12);\n                uVar8 = 1;\n                do {\n                    uVar1 = uStack95;\n                    uStack95 = uStack95 << 1;\n                    uStack76 = uVar1 >> 7;\n                    puVar9 = puStack92 + ((uVar1 >> 7) + 1) * 0x100 + uVar8;\n                    uVar2 = *puVar9;\n                    uVar5 = (uStack20 >> 0xb) * uVar2;\n                    bVar12 = uVar5 <= uStack16;\n                    puStack88 = puVar9;\n                    if (bVar12) {\n                        uStack20 = uStack20 - uVar5;\n                        uStack16 = uStack16 - uVar5;\n                        uStack68 = 1;\n                        *puVar9 = uVar2 - (uVar2 >> 5);\n                        uVar8 = uVar8 * 2 + 1;\n                    }\n                    else {\n                        uStack68 = 0;\n                        uStack20 = uVar5;\n                        *puVar9 = (0x800 - uVar2 >> 5) + uVar2;\n                        uVar8 = uVar8 * 2;\n                    }\n                    uStack68 = bVar12;\n                    uStack72 = uVar8;\n                    if (uStack20 < 0x1000000) {\ncode_r0x00408067:\n                        if (iStack112 == 0) {\n                            auStack140[0] = 0xd;\n                            goto code_r0x004087fe;\n                        }\n                        uVar1 = *puStack116;\n                        uStack20 = uStack20 << 8;\n                        iStack112 = iStack112 + -1;\n                        puStack116 = puStack116 + 1;\n                        uStack16 = uStack16 << 8 | uVar1;\n                    }\n                    if (uStack76 != uStack68) goto code_r0x00408146;\n                } while (uVar8 < 0x100);\n                goto code_r0x004081ab;\n            }\n            uVar8 = 1;\n            do {\n                puVar9 = puStack92 + uVar8;\n                uVar2 = *puVar9;\n                uVar5 = (uStack20 >> 0xb) * uVar2;\n                puStack88 = puVar9;\n                if (uStack16 < uVar5) {\n                    uStack20 = uVar5;\n                    *puVar9 = (0x800 - uVar2 >> 5) + uVar2;\n                    uVar8 = uVar8 * 2;\n                }\n                else {\n                    uStack20 = uStack20 - uVar5;\n                    uStack16 = uStack16 - uVar5;\n                    *puVar9 = uVar2 - (uVar2 >> 5);\n                    uVar8 = uVar8 * 2 + 1;\n                }\n                uStack72 = uVar8;\n                if (uStack20 < 0x1000000) {\ncode_r0x004081e6:\n                    if (iStack112 == 0) {\n                        auStack140[0] = 0xf;\n                        goto code_r0x004087fe;\n                    }\n                    uVar1 = *puStack116;\n                    uStack20 = uStack20 << 8;\n                    iStack112 = iStack112 + -1;\n                    puStack116 = puStack116 + 1;\n                    uStack16 = uStack16 << 8 | uVar1;\n                }\n            } while (uVar8 < 0x100);\n            goto code_r0x004081af;\n        case 7:\n            if (uStack68 != 1) {\n                uStack36 = uStack40;\n                uStack40 = uStack44;\n                uStack44 = uStack48;\n                auStack140[2] = 0x16;\n                iStack60 = ((6 < iStack60) - 1 & 0xfffffffd) + 10;\n                puStack92 = iVar6 + 0x664;\n                goto code_r0x004082c1;\n            }\n            puVar9 = iVar6 + 0x198 + iStack60 * 2;\n            auStack140[1] = 8;\n            break;\n        case 8:\n            if (uStack68 == 0) {\n                auStack140[1] = 9;\n                puVar9 = iVar6 + ((iStack60 + 0xf) * 0x10 + uStack80) * 2;\n            }\n            else {\n                puVar9 = iVar6 + 0x1b0 + iStack60 * 2;\n                auStack140[1] = 10;\n            }\n            break;\n        case 9:\n            if (uStack68 != 0) goto code_r0x004083b6;\n            if (uStack100 == 0) {\n                return 0xffffffff;\n            }\n            iStack60 = (6 < iStack60) * 2 + 9;\n        case 0x1b:\n            if (iStack104 == 0) {\n                auStack140[0] = 0x1b;\n                goto code_r0x004087fe;\n            }\n            uVar5 = uStack24 - uStack48;\n            if (uStack120 <= uVar5) {\n                uVar5 = uVar5 + uStack120;\n            }\n            uStack96 = *(uVar5 + iStack12);\n            *(uStack24 + iStack12) = uStack96;\n            uStack100 = uStack100 + 1;\n            puStack108 = puStack108 + 1;\n            iStack104 = iStack104 + -1;\n            *puVar3 = uStack96;\n            goto code_r0x00408363;\n        case 10:\n            uVar4 = uStack44;\n            if (uStack68 == 0) goto code_r0x004083ad;\n            puVar9 = iVar6 + 0x1c8 + iStack60 * 2;\n            auStack140[1] = 0xb;\n            break;\n        case 0xb:\n            uVar4 = uStack40;\n            if (uStack68 != 0) {\n                uStack36 = uStack40;\n                uVar4 = uVar5;\n            }\n            uStack40 = uStack44;\ncode_r0x004083ad:\n            uStack44 = uStack48;\n            uStack48 = uVar4;\ncode_r0x004083b6:\n            puStack92 = iVar6 + 0xa68;\n            auStack140[2] = 0x15;\n        case 0x11:\ncode_r0x004082c1:\n            auStack140[1] = 0x12;\n            puVar9 = puStack92;\n            break;\n        case 0xc:\n            while (iStack112 != 0) {\n                uVar1 = *puStack116;\n                uStack20 = uStack20 << 8;\n                iStack112 = iStack112 + -1;\n                puStack116 = puStack116 + 1;\n                uStack16 = uStack16 << 8 | uVar1;\n                do {\n                    uStack76 = uStack76 - 1;\ncode_r0x0040847b:\n                    if (uStack76 < 1) {\n                        uStack48 = uStack48 + uVar8 * 0x10;\n                        puStack92 = iVar6 + 0x644;\n                        uStack68 = 4;\n                        goto code_r0x004084c0;\n                    }\n                    uStack20 = uStack20 >> 1;\n                    uVar8 = uVar8 * 2;\n                    uStack72 = uVar8;\n                    if (uStack20 <= uStack16) {\n                        uVar8 = uVar8 | 1;\n                        uStack16 = uStack16 - uStack20;\n                        uStack72 = uVar8;\n                    }\n                } while (0xffffff < uStack20);\n            }\n            auStack140[0] = 0xc;\n            goto code_r0x004087fe;\n        case 0xd:\n            goto code_r0x00408067;\n        case 0xe:\n            goto code_r0x00408121;\n        case 0xf:\n            goto code_r0x004081e6;\n        case 0x10:\n            goto code_r0x004084d1;\n        case 0x12:\n            if (uStack68 == 0) {\n                iStack52 = 0;\n                iVar7 = uStack80 * 8 + 2;\ncode_r0x004086a5:\n                puStack92 = puStack92 + iVar7;\n                uStack68 = 3;\n                goto code_r0x004086c6;\n            }\n            auStack140[1] = 0x13;\n            puVar9 = puStack92 + 1;\n            break;\n        case 0x13:\n            if (uStack68 == 0) {\n                iStack52 = 8;\n                iVar7 = uStack80 * 8 + 0x82;\n                goto code_r0x004086a5;\n            }\n            puStack92 = puStack92 + 0x102;\n            iStack52 = 0x10;\n            uStack68 = 8;\ncode_r0x004086c6:\n            auStack140[3] = 0x14;\n        case 0x17:\ncode_r0x004086cd:\n            iStack84 = 1;\n            for (uStack76 = uStack68; 0 < uStack76; uStack76 = uStack76 - 1) {\n                puVar9 = puStack92 + iStack84;\n                uVar2 = *puVar9;\n                uVar8 = (uStack20 >> 0xb) * uVar2;\n                puStack88 = puVar9;\n                if (uStack16 < uVar8) {\n                    uStack20 = uVar8;\n                    iStack84 = iStack84 << 1;\n                    *puVar9 = (0x800 - uVar2 >> 5) + uVar2;\n                }\n                else {\n                    uStack20 = uStack20 - uVar8;\n                    uStack16 = uStack16 - uVar8;\n                    *puVar9 = uVar2 - (uVar2 >> 5);\n                    iStack84 = iStack84 * 2 + 1;\n                }\n                if (uStack20 < 0x1000000) {\ncode_r0x004086dc:\n                    if (iStack112 == 0) {\n                        auStack140[0] = 0x18;\n                        goto code_r0x004087fe;\n                    }\n                    uVar1 = *puStack116;\n                    uStack20 = uStack20 << 8;\n                    iStack112 = iStack112 + -1;\n                    puStack116 = puStack116 + 1;\n                    uStack16 = uStack16 << 8 | uVar1;\n                }\n                iVar6 = iStack8;\n            }\n            uVar8 = iStack84 - (1 << (uStack68 & 0x1f));\n            uStack72 = uVar8;\n            auStack140[0] = auStack140[3];\n            goto code_r0x00408786;\n        case 0x14:\n            iStack52 = iStack52 + uVar8;\n            auStack140[0] = auStack140[2];\n            goto code_r0x00408786;\n        case 0x15:\n            iStack60 = ((6 < iStack60) - 1 & 0xfffffffd) + 0xb;\n            goto code_r0x00408579;\n        case 0x16:\n            iVar7 = iStack52;\n            if (3 < iStack52) {\n                iVar7 = 3;\n            }\n            puStack92 = iVar7 * 0x80 + 0x360 + iVar6;\n            uStack68 = 6;\n            auStack140[3] = 0x19;\n            goto code_r0x004086cd;\n        case 0x18:\n            goto code_r0x004086dc;\n        case 0x19:\n            uStack48 = uVar8;\n            if (3 < uVar8) {\n                iVar7 = uVar8 >> 1;\n                uStack68 = iVar7 - 1;\n                uStack48 = (uVar8 & 1 | 2) << (uStack68 & 0x1f);\n                if (0xd < uVar8) {\n                    uVar8 = 0;\n                    uStack76 = iVar7 - 5;\n                    goto code_r0x0040847b;\n                }\n                puStack92 = iVar6 + 0x55e + (uStack48 - uVar8) * 2;\ncode_r0x004084c0:\n                uVar8 = 0;\n                iStack84 = 1;\n                uStack72 = 0;\n                for (uStack76 = 0; uStack76 < uStack68; uStack76 = uStack76 + 1) {\n                    puVar9 = puStack92 + iStack84;\n                    uVar2 = *puVar9;\n                    uVar5 = (uStack20 >> 0xb) * uVar2;\n                    puStack88 = puVar9;\n                    if (uStack16 < uVar5) {\n                        uStack20 = uVar5;\n                        iStack84 = iStack84 << 1;\n                        *puVar9 = (0x800 - uVar2 >> 5) + uVar2;\n                    }\n                    else {\n                        uStack20 = uStack20 - uVar5;\n                        uStack16 = uStack16 - uVar5;\n                        uVar8 = uStack72 | 1 << (uStack76 & 0x1f);\n                        uStack72 = uVar8;\n                        *puVar9 = uVar2 - (uVar2 >> 5);\n                        iStack84 = iStack84 * 2 + 1;\n                    }\n                    if (uStack20 < 0x1000000) {\ncode_r0x004084d1:\n                        if (iStack112 == 0) {\n                            auStack140[0] = 0x10;\n                            goto code_r0x004087fe;\n                        }\n                        uVar1 = *puStack116;\n                        uStack20 = uStack20 << 8;\n                        iStack112 = iStack112 + -1;\n                        puStack116 = puStack116 + 1;\n                        uStack16 = uStack16 << 8 | uVar1;\n                    }\n                }\n                uStack48 = uStack48 + uVar8;\n            }\n            uStack48 = uStack48 + 1;\ncode_r0x00408579:\n            if (uStack48 == 0) {\n                iStack52 = 0xffffffff;\n                goto code_r0x004087fe;\n            }\n            if (uStack100 < uStack48) {\n                return 0xffffffff;\n            }\n            iStack52 = iStack52 + 2;\n            uStack100 = uStack100 + iStack52;\ncode_r0x00408597:\n            do {\n                puVar3 = puStack108;\n                if (iStack104 == 0) {\n                    auStack140[0] = 0x1c;\n                    goto code_r0x004087fe;\n                }\n                uVar5 = uStack24 - uStack48;\n                if (uStack120 <= uVar5) {\n                    uVar5 = uVar5 + uStack120;\n                }\n                uStack96 = *(uVar5 + iStack12);\n                *(uStack24 + iStack12) = uStack96;\n                puStack108 = puStack108 + 1;\n                iStack104 = iStack104 + -1;\n                iStack52 = iStack52 + -1;\n                *puVar3 = uStack96;\n                uStack24 = (uStack24 + 1) % uStack120;\n            } while (0 < iStack52);\n            goto code_r0x00408366;\n        case 0x1a:\n            goto code_r0x004081b5;\n        case 0x1c:\n            goto code_r0x00408597;\n        default:\n            return 0xffffffff;\n        }\n        puStack88 = puVar9;\ncode_r0x0040860c:\n        uVar2 = *puVar9;\n        uVar5 = (uStack20 >> 0xb) * uVar2;\n        bVar12 = uVar5 <= uStack16;\n        if (bVar12) {\n            uStack20 = uStack20 - uVar5;\n            uStack16 = uStack16 - uVar5;\n            *puVar9 = uVar2 - (uVar2 >> 5);\n            uStack68 = 1;\n        }\n        else {\n            uStack20 = uVar5;\n            uStack68 = 0;\n            *puVar9 = (0x800 - uVar2 >> 5) + uVar2;\n        }\n        uStack68 = bVar12;\n        auStack140[0] = auStack140[1];\n        if (uStack20 < 0x1000000) {\ncode_r0x0040865b:\n            if (iStack112 == 0) {\n                auStack140[0] = 5;\n                goto code_r0x004087fe;\n            }\n            uVar1 = *puStack116;\n            uStack20 = uStack20 << 8;\n            iStack112 = iStack112 + -1;\n            puStack116 = puStack116 + 1;\n            uStack16 = uStack16 << 8 | uVar1;\n            auStack140[0] = auStack140[1];\n        }\ncode_r0x00408786:\n    } while( true );\ncode_r0x00408146:\n    if (uVar8 < 0x100) {\n        puVar9 = puStack92 + uVar8;\n        uVar2 = *puVar9;\n        uVar5 = (uStack20 >> 0xb) * uVar2;\n        puStack88 = puVar9;\n        if (uStack16 < uVar5) {\n            uStack20 = uVar5;\n            *puVar9 = (0x800 - uVar2 >> 5) + uVar2;\n            uVar8 = uVar8 * 2;\n        }\n        else {\n            uStack20 = uStack20 - uVar5;\n            uStack16 = uStack16 - uVar5;\n            *puVar9 = uVar2 - (uVar2 >> 5);\n            uVar8 = uVar8 * 2 + 1;\n        }\n        uStack72 = uVar8;\n        if (uStack20 < 0x1000000) {\ncode_r0x00408121:\n            if (iStack112 == 0) {\n                auStack140[0] = 0xe;\n                goto code_r0x004087fe;\n            }\n            uVar1 = *puStack116;\n            uStack20 = uStack20 << 8;\n            iStack112 = iStack112 + -1;\n            puStack116 = puStack116 + 1;\n            uStack16 = uStack16 << 8 | uVar1;\n        }\n        goto code_r0x00408146;\n    }\ncode_r0x004081ab:\n    iStack56 = 0;\ncode_r0x004081af:\n    uStack96 = uStack72;\ncode_r0x004081b5:\n    if (iStack104 == 0) {\n        auStack140[0] = 0x1a;\ncode_r0x004087fe:\n        puVar10 = auStack140;\n        for (iVar6 = 0x22; iVar6 != 0; iVar6 = iVar6 + -1) {\n            *param_1 = *puVar10;\n            puVar10 = puVar10 + 1;\n            param_1 = param_1 + 1;\n        }\n        return 0;\n    }\n    uStack100 = uStack100 + 1;\n    puStack108 = puStack108 + 1;\n    iStack104 = iStack104 + -1;\n    *puVar3 = uStack96;\n    *(uStack24 + iStack12) = uStack96;\ncode_r0x00408363:\n    uStack24 = (uStack24 + 1) % uStack120;\ncode_r0x00408366:\n    auStack140[0] = 2;\n    iVar6 = iStack8;\n    goto code_r0x00407e62;\n}\n",
        "token_count": 6183
    },
    "00401593": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t * __cdecl fcn.00401593(int32_t **hWndChildAfter)\n\n{\n    uint32_t *puVar1;\n    int16_t iVar2;\n    uchar uVar3;\n    uint32_t uVar4;\n    int16_t *piVar5;\n    int32_t **lpString2_00;\n    code *pcVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int16_t *piVar10;\n    int32_t *arg_10h;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint uVar13;\n    int32_t **ppiVar14;\n    uint *puVar15;\n    int32_t **ppiVar16;\n    uint in_stack_fffffc1c;\n    uint in_stack_fffffc20;\n    int32_t **ppiVar17;\n    uint uVar18;\n    char16_t *pcVar19;\n    int32_t **lpFindFileData;\n    uint *puStack940;\n    uint *puStack936;\n    uint uStack928;\n    int32_t iStack924;\n    int32_t **ppiStack920;\n    uint var_380h;\n    uint var_15ch;\n    int32_t lpFileOp;\n    uint var_58h;\n    int32_t var_54h;\n    int32_t lpRect;\n    uint var_4ch;\n    int32_t lpString2;\n    uint nNumberOfBytesToWrite;\n    ushort uStack68;\n    int16_t *lpFileName;\n    char var_35h;\n    int32_t *lpNumberOfBytesRead;\n    int32_t var_30h;\n    int16_t *var_2ch;\n    int16_t *dwFileAttributes;\n    int16_t *var_24h;\n    int16_t *lpLastWriteTime;\n    int16_t *var_1ch;\n    int16_t *var_18h;\n    int32_t var_14h;\n    int32_t **hWndParent;\n    int32_t lpWideCharStr;\n    int16_t *lpNumberOfBytesWritten;\n    int16_t *var_4h;\n    \n    ppiVar14 = *0x40c0c0;\n    pcVar6 = _sym.imp.USER32.dll_ShowWindow;\n    lpWideCharStr = *0x473dd4;\n    puVar15 = &fcn.00401593::var_30h;\n    for (iVar12 = 7; iVar12 != 0; iVar12 = iVar12 + -1) {\n        *puVar15 = *hWndChildAfter;\n        hWndChildAfter = hWndChildAfter + 1;\n        puVar15 = puVar15 + 1;\n    }\n    iVar12 = var_2ch * 0x4008;\n    hWndChildAfter = dwFileAttributes * 0x4008 + 0x474000;\n    *0x40c0c4 = &fcn.00401593::var_2ch;\n    uVar13 = 0;\n    ppiVar16 = iVar12 + 0x474000;\n    var_4h = NULL;\n    if (0x47 < var_30h - 2U) goto code_r0x0040310b;\n    // switch table (72 cases) at 0x40311f\n    switch(*((var_30h - 2U) * 4 + 0x40311f)) {\n    case 0x4015f7:\n        fcn.00406429(L\"Jump: %d\", var_2ch);\n        return var_2ch;\n    case 0x40160c:\n        uVar13 = fcn.00401453();\n        fcn.00406429(L\"Aborting: \\\"%s\\\"\", uVar13);\n        goto code_r0x00401624;\n    case 0x401633:\n        *0x46bd94 = *0x46bd94 + 1;\n        if (lpWideCharStr == 0) {\n            return 0x7fffffff;\n        }\n        (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        return 0x7fffffff;\n    case 0x401647:\n        iVar12 = fcn.00401373(var_2ch);\n        fcn.00406429(L\"Call: %d\", iVar12 + -1);\n        piVar10 = fcn.00401392(iVar12 + -1, 0);\n        return piVar10;\n    case 0x401669:\n        uVar13 = fcn.00401453();\n        fcn.00406429(L\"detailprint: %s\", uVar13);\n        fcn.00405107(var_2ch, 0);\n        break;\n    case 0x40168b:\n        iVar12 = fcn.0040143d();\n        fcn.00406429(L\"Sleep(%d)\", iVar12);\n        if (iVar12 < 2) {\n            iVar12 = 1;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(iVar12);\n        break;\n    case 0x4016b5:\n        fcn.00406429(L\"BringToFront\");\n        (*_sym.imp.USER32.dll_SetForegroundWindow)(lpWideCharStr);\n        break;\n    case 0x4016ce:\n        iVar12 = var_2ch * 4;\n        if (var_24h == NULL) {\n            *(iVar12 + 0x473e40) = *(iVar12 + 0x473e80);\n            uVar13 = fcn.0040143d();\n            *(var_2ch * 4 + 0x473e80) = uVar13;\n        }\n        else {\n            *(iVar12 + 0x473e80) = *(iVar12 + 0x473e40);\n        }\n        break;\n    case 0x40170c:\n        puVar1 = var_24h * 4 + 0x473e80;\n        uVar11 = *puVar1;\n        *puVar1 = uVar11 & lpLastWriteTime;\n        return (&fcn.00401593::var_2ch)[uVar11 == 0];\n    case 0x40172d:\n        goto code_r0x00403106;\n    case 0x401739:\n        if (*0x46bda0 != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x46bda0, dwFileAttributes);\n        }\n        if (*0x46bd8c != 0) {\n            (*pcVar6)(*0x46bd8c, var_2ch);\n        }\n        break;\n    case 0x401765:\n        uVar13 = fcn.00401453();\n        fcn.00406429(L\"SetFileAttributes: \\\"%s\\\":%08X\", uVar13, dwFileAttributes);\n        iVar12 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(uVar13, dwFileAttributes);\n        if (iVar12 != 0) break;\n        var_4h = 0x1;\n        pcVar19 = L\"SetFileAttributes failed.\";\n        goto code_r0x0040179e;\n    case 0x4017a9:\n        hWndChildAfter = fcn.00401453();\n        fcn.00406429(L\"CreateDirectory: \\\"%s\\\" (%d)\", hWndChildAfter, dwFileAttributes);\n        piVar10 = fcn.00405ee2(hWndChildAfter);\n        if (piVar10 != NULL) {\n            do {\n                lpFindFileData = 0x5c;\n                piVar10 = fcn.00405e8e(piVar10);\n                iVar2 = *piVar10;\n                *piVar10 = 0;\n                iVar12 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(hWndChildAfter, 0);\n                if (iVar12 == 0) {\n                    lpFindFileData = 0x4017f7;\n                    iVar12 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    if (iVar12 == 0xb7) {\n                        lpFindFileData = hWndChildAfter;\n                        uVar11 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)();\n                        if ((uVar11 & 0x10) == 0) {\n                            lpFindFileData = hWndChildAfter;\n                            fcn.00406429(L\"CreateDirectory: can\\'t create \\\"%s\\\" - a file already exists\");\n                            var_4h = var_4h + 1;\n                        }\n                    }\n                    else {\n                        lpFindFileData = 0x401804;\n                        lpFindFileData = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                        fcn.00406429(L\"CreateDirectory: can\\'t create \\\"%s\\\" (err=%d)\", hWndChildAfter);\n                        var_4h = var_4h + 1;\n                    }\n                }\n                else {\n                    lpFindFileData = hWndChildAfter;\n                    fcn.00406429(L\"CreateDirectory: \\\"%s\\\" created\");\n                }\n                *piVar10 = iVar2;\n                piVar10 = piVar10 + 1;\n            } while (iVar2 != 0);\n        }\n        if (dwFileAttributes != NULL) {\n            lpFindFileData = 0xffffffe6;\n            fcn.0040142c();\n            fcn.0040618f(0x4cc0b0, hWndChildAfter);\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(hWndChildAfter);\n            break;\n        }\n        lpFindFileData = 0xfffffff5;\n        goto code_r0x0040187b;\n    case 0x401885:\n        uVar13 = fcn.00401453();\n        iVar12 = fcn.0040645b(uVar13);\n        if (iVar12 == 0) {\n            fcn.00406429(L\"IfFileExists: file \\\"%s\\\" does not exist, jumping %d\", uVar13, var_24h);\n            return var_24h;\n        }\n        fcn.00406429(L\"IfFileExists: file \\\"%s\\\" exists, jumping %d\", uVar13, dwFileAttributes);\n        return dwFileAttributes;\n    case 0x4018ca:\n        ppiVar16 = fcn.00401453();\n        hWndChildAfter = fcn.00401453();\n        ppiVar14 = fcn.00401453();\n        fcn.00406429(L\"Rename: %s\", ppiVar14);\n        pcVar19 = ppiVar16;\n        ppiVar17 = hWndChildAfter;\n        iVar12 = (*_sym.imp.KERNEL32.dll_MoveFileW)(ppiVar16, hWndChildAfter);\n        if (iVar12 == 0) {\n            if ((var_24h == NULL) || (lpFindFileData = ppiVar16,  iVar12 = fcn.0040645b(),  iVar12 == 0))\n            goto code_r0x00401938;\n            fcn.00406dde(ppiVar16, hWndChildAfter);\n            fcn.0040142c(0xffffffe4);\n            pcVar19 = L\"Rename on reboot: %s\";\n            goto code_r0x0040193f;\n        }\n        lpFindFileData = 0xffffffe3;\n        goto code_r0x0040187b;\n    case 0x40194a:\n        piVar10 = fcn.00401453();\n        ppiVar14 = hWndChildAfter;\n        iVar12 = (*_sym.imp.KERNEL32.dll_GetFullPathNameW)\n                           (piVar10, 0x2004, hWndChildAfter, &fcn.00401593::lpNumberOfBytesWritten);\n        if (iVar12 == 0) {\ncode_r0x0040198f:\n            *ppiVar14 = 0;\n            var_4h = 0x1;\n        }\n        else if ((piVar10 < lpNumberOfBytesWritten) && (*lpNumberOfBytesWritten != 0)) {\n            iVar12 = fcn.0040645b(piVar10);\n            if (iVar12 == 0) goto code_r0x0040198f;\n            fcn.0040618f(lpNumberOfBytesWritten, iVar12 + 0x2c);\n        }\n        if (var_24h == NULL) {\n            (*_sym.imp.KERNEL32.dll_GetShortPathNameW)(ppiVar14, ppiVar14, 0x2004);\n        }\n        break;\n    case 0x4019b4:\n        uVar13 = fcn.00401453();\n        iVar12 = (*_sym.imp.KERNEL32.dll_SearchPathW)(0, uVar13, 0, 0x2004, ppiVar16, &fcn.00401593::hWndChildAfter);\n        goto code_r0x004019cf;\n    case 0x4019e6:\n        uVar13 = fcn.00401453();\n        iVar12 = fcn.00406008(ppiVar16, uVar13);\n        goto code_r0x004019f7;\n    case 0x401a09:\n        iVar12 = fcn.00401453();\n        hWndChildAfter = var_2ch & 7;\n        lpWideCharStr = iVar12;\n        fcn.00406429(L\"File: overwriteflag=%d, allowskipfilesflag=%d, name=\\\"%s\\\"\", hWndChildAfter, var_2ch >> 3 & 2, \n                     iVar12);\n        iVar8 = fcn.00405ead(iVar12);\n        if (iVar8 == 0) {\n            uVar13 = fcn.0040618f(0x40c0c8, 0x4cc0b0, iVar12);\n            uVar13 = fcn.0040689f(uVar13);\n            sub.KERNEL32.dll_lstrcatW(uVar13);\n        }\n        else {\n            fcn.0040618f(0x40c0c8);\n        }\n        fcn.004061be(0x40c0c8);\n        while( true ) {\n            if (2 < hWndChildAfter) {\n                iVar12 = fcn.0040645b(0x40c0c8);\n                uVar11 = 0;\n                if (iVar12 != 0) {\n                    uVar11 = (*_sym.imp.KERNEL32.dll_CompareFileTime)(iVar12 + 0x14, &fcn.00401593::lpLastWriteTime);\n                }\n                hWndChildAfter = ((hWndChildAfter - 3U | 0x80000000) & uVar11) == 0;\n            }\n            if (hWndChildAfter == NULL) {\n                puStack936 = 0x40c0c8;\n                lpFindFileData = 0x401ab3;\n                fcn.00405fb9();\n            }\n            puStack940 = (hWndChildAfter != 0x1) + 1;\n            lpFindFileData = 0x40000000;\n            hWndParent = fcn.00405fd9(0x40c0c8);\n            if (hWndParent != 0xffffffff) {\n                fcn.00405107(0xffffffea, lpWideCharStr);\n                *0x473eb4 = *0x473eb4 + 1;\n                iVar12 = fcn.00403577(var_24h, hWndParent, 0, 0);\n                *0x473eb4 = *0x473eb4 + -1;\n                fcn.00406429(L\"File: wrote %d to \\\"%s\\\"\", iVar12, 0x40c0c8);\n                if ((lpLastWriteTime != 0xffffffff) || (var_1ch != 0xffffffff)) {\n                    (*_sym.imp.KERNEL32.dll_SetFileTime)\n                              (hWndParent, &fcn.00401593::lpLastWriteTime, 0, &fcn.00401593::lpLastWriteTime);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(hWndParent);\n                if (-1 < iVar12) goto code_r0x0040310b;\n                if (iVar12 == -2) {\n                    fcn.00406982(0x40c0c8, 0xffffffe9);\n                    sub.KERNEL32.dll_lstrcatW(var_24h, lpWideCharStr, 0x40c0c8);\n                }\n                else {\n                    fcn.00406982(0x40c0c8, 0xffffffee);\n                }\n                fcn.00406429(0x409aec, 0x40c0c8);\n                uVar9 = 0x200010;\n                uVar13 = 0x40c0c8;\n                goto code_r0x00401c27;\n            }\n            if (hWndChildAfter != NULL) {\n                fcn.00405107(0xffffffe2, lpWideCharStr);\n                if (hWndChildAfter == 0x2) {\n                    var_4h = 0x1;\n                }\n                ppiVar14 = 0x40c0c8;\n                pcVar19 = L\"File: skipped: \\\"%s\\\" (overwriteflag=%d)\";\n                ppiVar16 = hWndChildAfter;\n                goto code_r0x00401b71;\n            }\n            fcn.00406429(L\"File: error creating \\\"%s\\\"\", 0x40c0c8);\n            fcn.0040618f(0x4140d8, 0x474000);\n            fcn.0040618f(0x474000, 0x40c0c8);\n            fcn.00406982(0x4100d0, var_18h);\n            fcn.0040618f(0x474000, 0x4140d8);\n            iVar12 = fcn.00405e2a(0x4100d0, var_2ch >> 3);\n            if (iVar12 != 4) break;\n            fcn.00406429(L\"File: error, user retry\");\n        }\n        if (iVar12 == 5) {\n            fcn.00406429(L\"File: error, user cancel\");\n            *0x473e88 = *0x473e88 + 1;\n            return NULL;\n        }\n        fcn.00406429(L\"File: error, user abort\");\n        in_stack_fffffc20 = 0x40c0c8;\n        in_stack_fffffc1c = 0xfffffffa;\ncode_r0x00401624:\n        fcn.00405107(in_stack_fffffc1c, in_stack_fffffc20);\n        return 0x7fffffff;\n    case 0x401c31:\n        uVar13 = fcn.00401453();\n        pcVar19 = L\"Delete: \\\"%s\\\"\";\n        goto code_r0x00401c40;\n    case 0x401c55:\n        uVar13 = fcn.00401453();\n        fcn.00406429(L\"MessageBox: %d,\\\"%s\\\"\", var_2ch, uVar13);\n        piVar10 = fcn.00405e2a(uVar13, var_2ch);\n        if (piVar10 != NULL) {\n            if (piVar10 == var_24h) {\n                return lpLastWriteTime;\n            }\n            if (piVar10 == var_1ch) {\n                return var_18h;\n            }\n            break;\n        }\n        goto code_r0x004019fd;\n    case 0x401c9f:\n        uVar13 = fcn.00401453();\n        pcVar19 = L\"RMDir: \\\"%s\\\"\";\ncode_r0x00401c40:\n        fcn.00406429(pcVar19, uVar13);\n        fcn.00406e11(uVar13, dwFileAttributes);\n        break;\n    case 0x401cb1:\n        uVar13 = fcn.00401453();\n        sub.KERNEL32.dll_lstrlenW(uVar13);\n        goto code_r0x00403106;\n    case 0x401cc4:\n        hWndChildAfter = fcn.0040143d();\n        hWndParent = fcn.0040143d();\n        iVar12 = fcn.00401453();\n        *ppiVar16 = 0;\n        if (((var_24h == NULL) || (hWndChildAfter != NULL)) &&\n           ((iVar8 = sub.KERNEL32.dll_lstrlenW(iVar12),  -1 < hWndParent ||\n            (hWndParent = hWndParent + iVar8,  -1 < hWndParent)))) {\n            iVar7 = hWndParent;\n            if (iVar8 < hWndParent) {\n                iVar7 = iVar8;\n            }\n            fcn.0040618f(ppiVar16, iVar12 + iVar7 * 2);\n            if (hWndChildAfter != NULL) {\n                if (hWndChildAfter < 0) {\n                    iVar12 = sub.KERNEL32.dll_lstrlenW(ppiVar16);\n                    hWndChildAfter = hWndChildAfter + iVar12;\n                    if (hWndChildAfter < 0) {\n                        hWndChildAfter = NULL;\n                    }\n                }\n                if (hWndChildAfter < 0x2004) {\n                    *(ppiVar16 + hWndChildAfter * 2) = 0;\n                }\n            }\n        }\n        break;\n    case 0x401d4e:\n        uVar13 = fcn.00401453();\n        uVar9 = fcn.00401453();\n        if (var_1ch == NULL) {\n            iVar12 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)();\n            dwFileAttributes = lpLastWriteTime;\n        }\n        else {\n            iVar12 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(uVar13, uVar9);\n            dwFileAttributes = lpLastWriteTime;\n        }\n        goto joined_r0x00402056;\n    case 0x401d82:\n        uVar13 = fcn.00401453();\n        iVar8 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(uVar13, ppiVar16, 0x2004);\n        if ((iVar8 == 0) ||\n           ((var_24h != NULL && (iVar8 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(uVar13, ppiVar16),  iVar8 == 0)))) {\n            var_4h = 0x1;\n            *ppiVar16 = 0;\n        }\n        *(iVar12 + 0x478006) = 0;\n        break;\n    case 0x401dc4:\n        uVar11 = fcn.0040143d();\n        uVar4 = fcn.0040143d();\n        if (var_18h != NULL) {\n            if (uVar11 < uVar4) {\n                return lpLastWriteTime;\n            }\n            if (uVar11 <= uVar4) {\n                return var_24h;\n            }\n            return var_1ch;\n        }\n        if (uVar11 < uVar4) {\n            return lpLastWriteTime;\n        }\n        if (uVar11 <= uVar4) {\n            return var_24h;\n        }\n        return var_1ch;\n    case 0x401e00:\n        fcn.0040143d();\n        iVar12 = fcn.0040143d();\n        if (0xc < lpLastWriteTime) goto code_r0x00403106;\n    // switch table (13 cases) at 0x40323f\n        switch(*(lpLastWriteTime * 4 + 0x40323f)) {\n        case 0x401e23:\n            break;\n        case 0x401e27:\n            break;\n        case 0x401e2b:\n            break;\n        case 0x401e32:\n            goto joined_r0x00401e76;\n        case 0x401e48:\n            break;\n        case 0x401e4c:\n            break;\n        case 0x401e50:\n            break;\n        case 0x401e54:\n            break;\n        case 0x401e5f:\n            break;\n        case 0x401e6c:\n            break;\n        case 0x401e74:\njoined_r0x00401e76:\n            if (iVar12 == 0) {\n                var_4h = 0x1;\n            }\n            break;\n        case 0x401e81:\n            break;\n        case 0x401e85:\n        }\n        goto code_r0x00403106;\n    case 0x401e8d:\n        uVar13 = fcn.00401453();\n        uVar9 = fcn.0040143d();\n        (*_sym.imp.USER32.dll_wsprintfW)(ppiVar16, uVar13, uVar9);\n        break;\n    case 0x401ead:\n        piVar10 = var_24h;\n        ppiVar17 = *0x40c0c0;\n        if (var_24h != NULL) {\n            do {\n                piVar10 = piVar10 + -1;\n                if (ppiVar17 == NULL) goto code_r0x00401ec9;\n                ppiVar17 = *ppiVar17;\n            } while (piVar10 != NULL);\n            if (ppiVar17 == NULL) {\ncode_r0x00401ec9:\n                fcn.00406429(L\"Exch: stack < %d elements\", var_24h);\n                goto code_r0x00401ed8;\n            }\n            ppiVar17 = ppiVar17 + 1;\n            ppiVar16 = 0x40c0c8;\n            ppiVar14 = ppiVar17;\n            fcn.0040618f(0x40c0c8, ppiVar17);\n            fcn.0040618f(ppiVar17, *0x40c0c0 + 1);\n            goto code_r0x00402e73;\n        }\n        if (dwFileAttributes == NULL) {\n            ppiVar14 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, 0x400c);\n            fcn.00406982(ppiVar14 + 1, var_2ch);\n            *ppiVar14 = *0x40c0c0;\n            *0x40c0c0 = ppiVar14;\n            break;\n        }\n        if (*0x40c0c0 != NULL) {\n            fcn.0040618f(ppiVar16, *0x40c0c0 + 1);\n            *0x40c0c0 = *ppiVar14;\n            ppiVar17 = ppiVar16;\n            goto code_r0x0040239d;\n        }\n        fcn.00406429(L\"Pop: stack empty\");\n        goto code_r0x004019fd;\n    case 0x401f74:\n        hWndParent = fcn.0040143d();\n        hWndChildAfter = fcn.0040143d();\n        if ((var_18h & 1) != 0) {\n            hWndParent = fcn.00401453();\n        }\n        if ((var_18h & 2) != 0) {\n            hWndChildAfter = fcn.00401453();\n        }\n        if (var_30h == 0x21) {\n            uVar13 = fcn.0040143d();\n            uVar9 = fcn.0040143d();\n            if (var_18h >> 2 == 0) {\n                lpWideCharStr = (*_sym.imp.USER32.dll_SendMessageW)(uVar13, uVar9, hWndParent, hWndChildAfter);\n                dwFileAttributes = var_2ch;\n            }\n            else {\n                iVar12 = (*_sym.imp.USER32.dll_SendMessageTimeoutW)\n                                   (uVar13, uVar9, hWndParent, hWndChildAfter, 0, var_18h >> 2, \n                                    &fcn.00401593::lpWideCharStr);\n                var_4h = iVar12 == 0;\n                dwFileAttributes = var_2ch;\n            }\n        }\n        else {\n            uVar13 = fcn.00401453();\n            nNumberOfBytesToWrite._0_2_ = uVar13;\n            nNumberOfBytesToWrite._2_2_ = uVar13 >> 0x10;\n            piVar10 = fcn.00401453();\n            lpWideCharStr =\n                 (*_sym.imp.USER32.dll_FindWindowExW)\n                           (hWndParent, hWndChildAfter, \n                            -(*CONCAT22(nNumberOfBytesToWrite._2_2_, nNumberOfBytesToWrite) != 0) &\n                            CONCAT22(nNumberOfBytesToWrite._2_2_, nNumberOfBytesToWrite), -(*piVar10 != 0) & piVar10);\n            dwFileAttributes = var_2ch;\n        }\n        goto joined_r0x00402de6;\n    case 0x402046:\n        uVar13 = fcn.0040143d();\n        iVar12 = (*_sym.imp.USER32.dll_IsWindow)(uVar13);\njoined_r0x00402056:\n        if (iVar12 == 0) {\n            return var_24h;\n        }\n        return dwFileAttributes;\n    case 0x402061:\n        uVar13 = fcn.0040143d();\n        uVar13 = fcn.0040143d(uVar13);\n        (*_sym.imp.USER32.dll_GetDlgItem)(uVar13);\n        goto code_r0x00403106;\n    case 0x40207e:\n        uVar13 = fcn.0040143d(0xffffffeb, *0x473e08 + dwFileAttributes);\n        (*_sym.imp.USER32.dll_SetWindowLongW)(uVar13);\n        break;\n    case 0x40209b:\n        uVar13 = (*_sym.imp.USER32.dll_GetDlgItem)(lpWideCharStr, dwFileAttributes);\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar13, &fcn.00401593::lpRect);\n        uVar9 = fcn.00401453(0, lpString2 * var_24h, \n                             CONCAT22(nNumberOfBytesToWrite._2_2_, nNumberOfBytesToWrite) * var_24h, 0x10);\n        uVar9 = (*_sym.imp.USER32.dll_LoadImageW)(0, uVar9);\n        iVar12 = (*_sym.imp.USER32.dll_SendMessageW)(uVar13, 0x172, 0, uVar9);\n        if (iVar12 != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar12);\n        }\n        break;\n    case 0x4020f6:\n        uVar13 = (*_sym.imp.USER32.dll_GetDC)(lpWideCharStr, 0x5a, 0x48);\n        uVar13 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar13);\n        uVar13 = fcn.0040143d(uVar13);\n        *0x4200f0 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar13);\n        *0x4200f0 = -*0x4200f0;\n        *0x420100 = fcn.0040143d();\n        *0x420104 = var_1ch & 1;\n        *0x420105 = var_1ch & 2;\n        *0x420106 = var_1ch & 4;\n        *0x420107 = 1;\n        fcn.00406982(0x42010c, dwFileAttributes);\n        (*_sym.imp.GDI32.dll_CreateFontIndirectW)(0x4200f0);\n        goto code_r0x00403106;\n    case 0x402172:\n        uVar13 = fcn.0040143d();\n        uVar9 = fcn.0040143d();\n        if (var_24h != NULL) {\n            fcn.00406429(L\"HideWindow\");\n        }\n        if (lpLastWriteTime == NULL) {\n            (*_sym.imp.USER32.dll_ShowWindow)();\n        }\n        else {\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar13, uVar9);\n        }\n        break;\n    case 0x4021b2:\n        piVar10 = fcn.00401453();\n        hWndChildAfter = fcn.00401453();\n        piVar5 = fcn.00401453();\n        fcn.00401453();\n        fcn.0040142c(0xffffffec);\n        iVar12 = (*_sym.imp.SHELL32.dll_ShellExecuteW)\n                           (lpWideCharStr, -(*piVar10 != 0) & piVar10, hWndChildAfter, -(*piVar5 != 0) & piVar5, \n                            0x4cc0b0, lpLastWriteTime);\n        if (0x20 < iVar12) {\n            fcn.00406429(L\"ExecShell: success (\\\"%s\\\": file:\\\"%s\\\" params:\\\"%s\\\")\", piVar10, hWndChildAfter, piVar5);\n            break;\n        }\n        fcn.00406429(L\"ExecShell: warning: error (\\\"%s\\\": file:\\\"%s\\\" params:\\\"%s\\\")=%d\", piVar10, hWndChildAfter, \n                     piVar5, iVar12);\n        goto code_r0x004019fd;\n    case 0x40223d:\n        lpString2_00 = fcn.00401453();\n        fcn.00406429(L\"Exec: command=\\\"%s\\\"\", lpString2_00);\n        pcVar19 = 0xffffffeb;\n        ppiVar17 = lpString2_00;\n        fcn.00405107(0xffffffeb, lpString2_00);\n        ppiVar16 = lpString2_00;\n        hWndParent = fcn.00405dc9(lpString2_00);\n        ppiVar14 = lpFindFileData;\n        if (hWndParent != NULL) {\n            fcn.00406429(L\"Exec: success (\\\"%s\\\")\", lpString2_00);\n            pcVar6 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n            ppiVar14 = hWndParent;\n            if (var_24h != NULL) {\n                iVar12 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hWndParent, 100);\n                while (iVar12 == 0x102) {\n                    fcn.004064b9(0xf);\n                    iVar12 = (*pcVar6)(hWndParent, 100);\n                }\n                (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(hWndParent, &fcn.00401593::lpNumberOfBytesWritten);\n                if (dwFileAttributes < 0) {\n                    ppiVar14 = hWndParent;\n                    if (lpNumberOfBytesWritten != NULL) {\n                        var_4h = 0x1;\n                    }\n                }\n                else {\n                    fcn.004060d6(ppiVar16, lpNumberOfBytesWritten, hWndChildAfter);\n                    ppiVar14 = hWndParent;\n                }\n            }\n            goto code_r0x00402b08;\n        }\ncode_r0x00401938:\n        lpFindFileData = ppiVar14;\n        ppiVar14 = ppiVar17;\n        var_4h = 0x1;\n        goto code_r0x0040193f;\n    case 0x4022dd:\n        uVar13 = fcn.00401453();\n        iVar12 = fcn.0040645b(uVar13);\n        if (iVar12 == 0) {\n            *ppiVar16 = 0;\n            *hWndChildAfter = 0;\n            goto code_r0x004019fd;\n        }\n        fcn.004060d6(hWndChildAfter, *(iVar12 + 0x14));\n        goto code_r0x00403106;\n    case 0x402312:\n        uVar13 = fcn.00401453();\n        nNumberOfBytesToWrite._0_2_ = uVar13;\n        nNumberOfBytesToWrite._2_2_ = uVar13 >> 0x10;\n        iStack924 = sub.VERSION.dll_GetFileVersionInfoSizeW(uVar13, &fcn.00401593::lpNumberOfBytesRead);\n        *ppiVar16 = 0;\n        *hWndChildAfter = 0;\n        var_4h = 0x1;\n        if ((iStack924 == 0) ||\n           (ppiStack920 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, iStack924),  ppiStack920 == NULL)) break;\n        uStack928 = 0;\n        ppiVar17 = CONCAT22(nNumberOfBytesToWrite._2_2_, nNumberOfBytesToWrite);\n        puStack936 = 0x402360;\n        hWndParent = ppiStack920;\n        iVar12 = sub.VERSION.dll_GetFileVersionInfoW();\n        ppiVar14 = hWndParent;\n        if (iVar12 != 0) {\n            puStack936 = &fcn.00401593::nNumberOfBytesToWrite;\n            puStack940 = &fcn.00401593::lpNumberOfBytesWritten;\n            lpFindFileData = 0x4098a0;\n            ppiVar17 = hWndParent;\n            iVar12 = sub.VERSION.dll_VerQueryValueW();\n            ppiVar14 = hWndParent;\n            if (iVar12 != 0) {\n                fcn.004060d6(ppiVar16, *(lpNumberOfBytesWritten + 4));\n                ppiVar17 = hWndChildAfter;\n                fcn.004060d6(hWndChildAfter, *(lpNumberOfBytesWritten + 6));\n                var_4h = NULL;\n                ppiVar14 = hWndParent;\n            }\n        }\n        goto code_r0x0040239d;\n    case 0x4023a8:\n        ppiVar14 = fcn.00401453();\n        iVar12 = fcn.004072b6(ppiVar14, ppiVar16, 0x2004);\n        if (iVar12 == 0) {\n            var_4h = 0x1;\n        }\n        pcVar19 = L\"GetTTFVersionString(%s) returned %s\";\n        goto code_r0x00401b71;\n    case 0x4023d8:\n        ppiVar14 = fcn.00401453();\n        iVar12 = fcn.00407327(ppiVar14, ppiVar16, 0x2004);\n        if (iVar12 == 0) {\n            var_4h = 0x1;\n        }\n        pcVar19 = L\"GetTTFFontName(%s) returned %s\";\n        goto code_r0x00401b71;\n    case 0x402408:\n        var_4h = 0x1;\n        if (-1 < *0x473eb8) {\n            ppiVar14 = fcn.00401453();\n            hWndParent = fcn.00401453();\n            if (((var_1ch != NULL) &&\n                (hWndChildAfter = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(ppiVar14),  hWndChildAfter != NULL)) ||\n               (hWndChildAfter = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(ppiVar14, 0, 8),  hWndChildAfter != NULL)) {\n                pcVar6 = fcn.004064ec(hWndChildAfter, hWndParent);\n                if (pcVar6 == NULL) {\n                    fcn.00405107(0xfffffff7, hWndParent);\n                    fcn.00406429(L\"Error registering DLL: %s not found in %s\", hWndParent, ppiVar14);\n                }\n                else {\n                    var_4h = NULL;\n                    if (var_24h == NULL) {\n                        (*pcVar6)(lpWideCharStr, 0x2004, 0x474000, 0x40c0c0, 0x40c000);\n                    }\n                    else {\n                        fcn.0040142c(var_24h);\n                        iVar12 = (*pcVar6)();\n                        if (iVar12 != 0) {\n                            var_4h = 0x1;\n                        }\n                    }\n                }\n                if ((lpLastWriteTime == NULL) && (iVar12 = fcn.00403e62(hWndChildAfter),  iVar12 != 0)) {\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(hWndChildAfter);\n                }\n                break;\n            }\n            fcn.0040142c(0xfffffff6);\n            pcVar19 = L\"Error registering DLL: Could not load %s\";\n            goto code_r0x0040193f;\n        }\n        fcn.0040142c(0xffffffe7);\n        pcVar19 = L\"Error registering DLL: Could not initialize OLE\";\ncode_r0x0040179e:\n        fcn.00406429(pcVar19);\n        break;\n    case 0x40250b:\n        lpFileName = fcn.00401453();\n        uVar13 = fcn.00401453();\n        lpWideCharStr = fcn.00401453();\n        lpNumberOfBytesWritten = fcn.00401453();\n        lpNumberOfBytesRead = fcn.00401453();\n        iVar12 = fcn.00405ead(uVar13);\n        if (iVar12 == 0) {\n            fcn.00401453();\n        }\n        fcn.00406429(L\"CreateShortCut: out: \\\"%s\\\", in: \\\"%s %s\\\", icon: %s,%d, sw=%d, hk=%d\", lpFileName, uVar13, \n                     lpWideCharStr, lpNumberOfBytesWritten, var_1ch & 0xff, var_1ch >> 8 & 0xff, var_1ch >> 0x10);\n        iVar12 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x40adb4, 0, 1, 0x40ada4, &fcn.00401593::hWndChildAfter);\n        if (-1 < iVar12) {\n            lpFindFileData = &fcn.00401593::nNumberOfBytesToWrite;\n            hWndParent = (***hWndChildAfter)(hWndChildAfter, 0x40adc4);\n            if (-1 < hWndParent) {\n                hWndParent = (*(*hWndChildAfter)[0x14])(hWndChildAfter, uVar13);\n                (*(*hWndChildAfter)[9])(hWndChildAfter, 0x4cc0b0);\n                uVar11 = var_1ch >> 8 & 0xff;\n                if (uVar11 != 0) {\n                    (*(*hWndChildAfter)[0xf])(hWndChildAfter, uVar11);\n                }\n                (*(*hWndChildAfter)[0xd])(hWndChildAfter, var_1ch >> 0x10);\n                if (*lpNumberOfBytesWritten != 0) {\n                    (*(*hWndChildAfter)[0x11])(hWndChildAfter, lpNumberOfBytesWritten, var_1ch & 0xff);\n                }\n                (*(*hWndChildAfter)[0xb])(hWndChildAfter, lpWideCharStr);\n                (*(*hWndChildAfter)[7])(hWndChildAfter, lpNumberOfBytesRead);\n                if (-1 < hWndParent) {\n                    hWndParent = (**(*CONCAT22(nNumberOfBytesToWrite._2_2_, nNumberOfBytesToWrite) + 0x18))\n                                           (CONCAT22(nNumberOfBytesToWrite._2_2_, nNumberOfBytesToWrite), lpFileName, 1)\n                    ;\n                }\n                (**(*CONCAT22(nNumberOfBytesToWrite._2_2_, nNumberOfBytesToWrite) + 8))\n                          (CONCAT22(nNumberOfBytesToWrite._2_2_, nNumberOfBytesToWrite));\n            }\n            (*(*hWndChildAfter)[2])(hWndChildAfter);\n            if (-1 < hWndParent) {\n                lpFindFileData = 0xfffffff4;\n                goto code_r0x0040187b;\n            }\n        }\n        var_4h = 0x1;\n        lpFindFileData = 0xfffffff0;\n        goto code_r0x0040187b;\n    case 0x40266d:\n        iVar8 = fcn.00401453();\n        hWndChildAfter = fcn.00401453();\n        lpNumberOfBytesRead = fcn.00401453();\n        iVar12 = hWndChildAfter;\n        fcn.00406429(L\"CopyFiles \\\"%s\\\"->\\\"%s\\\"\", iVar8, hWndChildAfter);\n        iVar7 = fcn.0040645b(iVar8);\n        if (iVar7 != 0) {\n            lpFileOp = lpWideCharStr;\n            var_58h = 2;\n            iVar7 = sub.KERNEL32.dll_lstrlenW(iVar8);\n            *(iVar8 + 2 + iVar7 * 2) = 0;\n            iVar7 = sub.KERNEL32.dll_lstrlenW(iVar12);\n            *(iVar12 + 2 + iVar7 * 2) = 0;\n            lpRect = iVar12;\n            nNumberOfBytesToWrite._2_2_ = SUB42(lpNumberOfBytesRead, 0);\n            uStack68 = lpNumberOfBytesRead >> 0x10;\n            var_4ch._0_2_ = var_24h._0_2_;\n            var_54h = iVar8;\n            fcn.00405107(0, lpNumberOfBytesRead);\n            iVar12 = (*_sym.imp.SHELL32.dll_SHFileOperationW)(&fcn.00401593::lpFileOp);\n            if (iVar12 == 0) break;\n        }\n        fcn.00405107(0xfffffff9, 0);\n        goto code_r0x004019fd;\n    case 0x402707:\n        if (var_2ch != 0xbadf00d) {\ncode_r0x00401ed8:\n            uVar9 = 0;\n            uVar13 = fcn.00406982(0, 0xffffffe8, 0x200010);\ncode_r0x00401c27:\n            fcn.00405e2a(uVar13, uVar9);\n            return 0x7fffffff;\n        }\n        *0x473e94 = *0x473e94 + 1;\n        break;\n    case 0x40271e:\n        nNumberOfBytesToWrite._0_2_ = 0;\n        nNumberOfBytesToWrite._2_2_ = 0;\n        hWndChildAfter = NULL;\n        fcn.0040618f(0x4100d0, L\"<RM>\");\n        fcn.0040618f(0x4140d8, 0x4100d0);\n        if (var_2ch != NULL) {\n            uVar9 = fcn.00401453();\n            nNumberOfBytesToWrite._0_2_ = uVar9;\n            nNumberOfBytesToWrite._2_2_ = uVar9 >> 0x10;\n        }\n        if (dwFileAttributes != NULL) {\n            hWndChildAfter = fcn.00401453();\n        }\n        if (var_1ch != NULL) {\n            uVar13 = fcn.00401453();\n        }\n        uVar9 = fcn.00401453();\n        fcn.00406429(L\"WriteINIStr: wrote [%s] %s=%s in %s\", 0x40c0c8, 0x4100d0, 0x4140d8, uVar9);\n        iVar12 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)\n                           (CONCAT22(nNumberOfBytesToWrite._2_2_, nNumberOfBytesToWrite), hWndChildAfter, uVar13, uVar9)\n        ;\n        goto code_r0x004019f7;\n    case 0x4027a4:\n        lpString2 = *0x4095f4;\n        nNumberOfBytesToWrite._0_2_ = *0x4095f8;\n        nNumberOfBytesToWrite._2_2_ = *0x4095f8 >> 0x10;\n        lpNumberOfBytesRead = fcn.00401453();\n        hWndChildAfter = fcn.00401453();\n        uVar13 = fcn.00401453();\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)\n                  (lpNumberOfBytesRead, hWndChildAfter, &fcn.00401593::lpString2, ppiVar16, 0x2003, uVar13);\n        iVar12 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(ppiVar16, &fcn.00401593::lpString2);\ncode_r0x004019cf:\n        if (iVar12 == 0) {\ncode_r0x004019d7:\n            var_4h = 0x1;\n            *ppiVar16 = 0;\n        }\n        break;\n    case 0x4027f9:\n        hWndChildAfter = fcn.00406346(dwFileAttributes);\n        if (var_1ch == NULL) {\n            iVar12 = fcn.00401544(2);\n            if (iVar12 == 0) goto code_r0x004019fd;\n            uVar13 = fcn.00401453();\n            uVar9 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(iVar12, uVar13);\n            nNumberOfBytesToWrite._0_2_ = uVar9;\n            nNumberOfBytesToWrite._2_2_ = uVar9 >> 0x10;\n            fcn.00406429(L\"DeleteRegValue: \\\"%s\\\\%s\\\" \\\"%s\\\"\", hWndChildAfter, 0x4140d8, uVar13);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar12);\n        }\n        else {\n            uVar13 = fcn.00401453();\n            fcn.00406429(L\"DeleteRegKey: \\\"%s\\\\%s\\\"\", hWndChildAfter, uVar13);\n            if (dwFileAttributes == NULL) {\n                dwFileAttributes = *0x473e84 + 0x80000001;\n            }\n            uVar13 = fcn.0040148e(dwFileAttributes, uVar13, var_1ch & 2);\n            nNumberOfBytesToWrite._0_2_ = uVar13;\n            nNumberOfBytesToWrite._2_2_ = uVar13 >> 0x10;\n        }\n        if (CONCAT22(nNumberOfBytesToWrite._2_2_, nNumberOfBytesToWrite) == 0) break;\n        goto code_r0x004019fd;\n    case 0x402898:\n        if (var_2ch == NULL) {\n            var_2ch = *0x473e84 + 0x80000001;\n        }\n        lpNumberOfBytesWritten = var_1ch;\n        nNumberOfBytesToWrite._0_2_ = SUB42(var_18h, 0);\n        nNumberOfBytesToWrite._2_2_ = var_18h >> 0x10;\n        lpWideCharStr = fcn.00401453();\n        hWndChildAfter = fcn.00401453();\n        hWndParent = fcn.00406346(var_2ch);\n        var_4h = 0x1;\n        iVar12 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)\n                           (var_2ch, hWndChildAfter, 0, 0, 0, *0x473eb0 | 2, 0, &fcn.00401593::lpFileName, 0);\n        if (iVar12 == 0) {\n            iVar12 = 0;\n            if (lpNumberOfBytesWritten == 0x1) {\n                fcn.00401453();\n                iVar12 = sub.KERNEL32.dll_lstrlenW(0x4140d8);\n                iVar12 = iVar12 * 2 + 2;\n                if (CONCAT22(nNumberOfBytesToWrite._2_2_, nNumberOfBytesToWrite) != 1) {\n                    fcn.00406429(L\"WriteRegExpandStr: \\\"%s\\\\%s\\\" \\\"%s\\\"=\\\"%s\\\"\", hWndParent, hWndChildAfter, \n                                 lpWideCharStr, 0x4140d8);\n                    goto code_r0x00402951;\n                }\n                fcn.00406429(L\"WriteRegStr: \\\"%s\\\\%s\\\" \\\"%s\\\"=\\\"%s\\\"\", hWndParent, hWndChildAfter, lpWideCharStr, \n                             0x4140d8);\n            }\n            else {\ncode_r0x00402951:\n                if (lpNumberOfBytesWritten == 0x4) {\n                    *0x4140d8 = fcn.0040143d();\n                    iVar12 = 4;\n                    fcn.00406429(L\"WriteRegDWORD: \\\"%s\\\\%s\\\" \\\"%s\\\"=\\\"0x%08x\\\"\", hWndParent, hWndChildAfter, \n                                 lpWideCharStr, *0x4140d8);\n                }\n                if (lpNumberOfBytesWritten == 0x3) {\n                    iVar12 = fcn.00403577(lpLastWriteTime, 0, 0x4140d8, 0xc018);\n                    fcn.004063aa(&fcn.00401593::var_15ch, 0x100, 0x4140d8, iVar12);\n                    fcn.00406429(L\"WriteRegBin: \\\"%s\\\\%s\\\" \\\"%s\\\"=\\\"%s\\\"\", hWndParent, hWndChildAfter, lpWideCharStr, \n                                 &fcn.00401593::var_15ch);\n                }\n            }\n            iVar12 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)\n                               (lpFileName, lpWideCharStr, 0, \n                                CONCAT22(nNumberOfBytesToWrite._2_2_, nNumberOfBytesToWrite), 0x4140d8, iVar12);\n            if (iVar12 == 0) {\n                var_4h = NULL;\n            }\n            else {\n                fcn.00406429(L\"WriteReg: error writing into \\\"%s\\\\%s\\\" \\\"%s\\\"\", hWndParent, hWndChildAfter, \n                             lpWideCharStr);\n            }\ncode_r0x004029f9:\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(lpFileName);\n            break;\n        }\n        pcVar19 = L\"WriteReg: error creating key \\\"%s\\\\%s\\\"\";\n        ppiVar14 = hWndParent;\n        ppiVar16 = hWndChildAfter;\ncode_r0x00401b71:\n        fcn.00406429(pcVar19, ppiVar14, ppiVar16);\n        break;\n    case 0x402a14:\n        lpNumberOfBytesWritten = fcn.00401544(0x20019);\n        uVar13 = fcn.00401453();\n        *ppiVar16 = 0;\n        if (lpNumberOfBytesWritten != NULL) {\n            nNumberOfBytesToWrite._0_2_ = 0x4008;\n            nNumberOfBytesToWrite._2_2_ = 0;\n            iVar12 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                               (lpNumberOfBytesWritten, uVar13, 0, &fcn.00401593::hWndChildAfter, ppiVar16, \n                                &fcn.00401593::nNumberOfBytesToWrite);\n            lpFileName = lpNumberOfBytesWritten;\n            if (iVar12 == 0) {\n                if (hWndChildAfter == 0x4) {\n                    var_4h = var_1ch == NULL;\n                    fcn.004060d6();\n                    lpFileName = lpNumberOfBytesWritten;\n                }\n                else {\n                    if ((hWndChildAfter != 0x1) && (hWndChildAfter != 0x2)) goto code_r0x00402a8c;\n                    var_4h = var_1ch;\n                    *(ppiVar16 + CONCAT22(nNumberOfBytesToWrite._2_2_, nNumberOfBytesToWrite) * 2) = 0;\n                }\n            }\n            else {\ncode_r0x00402a8c:\n                *ppiVar16 = 0;\n                var_4h = 0x1;\n            }\n            goto code_r0x004029f9;\n        }\n        goto code_r0x004019fd;\n    case 0x402a9a:\n        lpFileName = fcn.00401544(0x20019);\n        uVar13 = fcn.0040143d();\n        *ppiVar16 = 0;\n        if (lpFileName != NULL) {\n            hWndChildAfter = 0x2003;\n            if (var_1ch == NULL) {\n                iVar8 = (*_sym.imp.ADVAPI32.dll_RegEnumValueW)\n                                  (lpFileName, uVar13, ppiVar16, &fcn.00401593::hWndChildAfter, 0, 0, 0, 0);\n                if (iVar8 != 0) goto code_r0x004019fd;\n            }\n            else {\n                (*_sym.imp.ADVAPI32.dll_RegEnumKeyW)(lpFileName, uVar13, ppiVar16, 0x2003);\n            }\n            *(iVar12 + 0x478006) = 0;\n            goto code_r0x004029f9;\n        }\n        goto code_r0x004019fd;\n    case 0x402af8:\n        if (*ppiVar16 == 0) break;\n        ppiVar14 = fcn.004060ef(ppiVar16);\ncode_r0x00402b08:\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(ppiVar14);\n        break;\n    case 0x402b13:\n        uVar13 = fcn.00401453();\n        iVar12 = fcn.00405fd9(uVar13, dwFileAttributes, var_24h);\n        if (iVar12 == -1) {\ncode_r0x00402b30:\n            *ppiVar16 = 0;\n            goto code_r0x004019fd;\n        }\n        goto code_r0x00403106;\n    case 0x402b38:\n        ppiVar17 = 0x40;\n        ppiVar14 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, 0x2004);\n        hWndChildAfter = ppiVar14;\n        if (var_24h == NULL) {\n            fcn.00401453();\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, 0x4100d0, 0xffffffff, hWndChildAfter, 0x2004, 0, 0);\n            uVar13 = (*_sym.imp.KERNEL32.dll_lstrlenA)(hWndChildAfter);\n        }\n        else {\n            uVar3 = fcn.0040143d();\n            *ppiVar14 = uVar3;\n            uVar13 = 1;\n        }\n        if (*ppiVar16 != 0) {\n            uVar18 = 0;\n            puVar15 = &fcn.00401593::lpNumberOfBytesRead;\n            ppiVar14 = hWndChildAfter;\n            uVar9 = fcn.004060ef(ppiVar16);\n            iVar12 = (*_sym.imp.KERNEL32.dll_WriteFile)(uVar9, ppiVar16, ppiVar14, uVar13, puVar15, uVar18);\n            ppiVar14 = hWndChildAfter;\n            if (iVar12 != 0) goto code_r0x0040239d;\n        }\n        var_4h = 0x1;\n        ppiVar14 = hWndChildAfter;\ncode_r0x0040239d:\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(ppiVar14, ppiVar17);\n        break;\n    case 0x402bb6:\n        iVar12 = 0;\n        lpNumberOfBytesWritten = fcn.0040143d();\n        if (lpNumberOfBytesWritten < 1) break;\n        if (0x2003 < lpNumberOfBytesWritten) {\n            lpNumberOfBytesWritten = 0x2003;\n        }\n        if (*ppiVar16 != 0) {\n            var_35h = '\\0';\n            uVar13 = fcn.004060ef(ppiVar16);\n            ppiVar14 = hWndChildAfter;\n            nNumberOfBytesToWrite._0_2_ = uVar13;\n            nNumberOfBytesToWrite._2_2_ = uVar13 >> 0x10;\n            if (0 < lpNumberOfBytesWritten) {\ncode_r0x00402bf9:\n                iVar8 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                  (CONCAT22(nNumberOfBytesToWrite._2_2_, nNumberOfBytesToWrite), \n                                   &fcn.00401593::hWndChildAfter + 3, 1, &fcn.00401593::lpNumberOfBytesRead, 0);\n                if ((iVar8 != 0) && (lpNumberOfBytesRead == 0x1)) {\n                    if (lpLastWriteTime != NULL) {\n                        uVar11 = hWndChildAfter >> 0x18;\ncode_r0x00402c5d:\n                        fcn.004060d6(ppiVar14, uVar11);\n                        return NULL;\n                    }\n                    (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                              (0, 0, &fcn.00401593::hWndChildAfter + 3, 1, &fcn.00401593::lpWideCharStr, 2);\n                    if ((var_35h != '\\r') && (var_35h != '\\n')) goto code_r0x00402c3f;\n                    if ((var_35h == hWndChildAfter._3_1_) ||\n                       ((hWndChildAfter._0_2_ = lpWideCharStr,  hWndChildAfter._3_1_ != '\\r' &&\n                        (hWndChildAfter._3_1_ != '\\n')))) {\n                        uVar13 = 0xffffffff;\ncode_r0x00402c8a:\n                        (*_sym.imp.KERNEL32.dll_SetFilePointer)\n                                  (CONCAT22(nNumberOfBytesToWrite._2_2_, nNumberOfBytesToWrite), uVar13, 0, 1);\n                    }\n                    else {\ncode_r0x00402c7e:\n                        *(ppiVar14 + iVar12 * 2) = hWndChildAfter;\n                        iVar12 = iVar12 + 1;\n                    }\n                }\n                goto code_r0x00402c98;\n            }\n        }\n        goto code_r0x00402c95;\n    case 0x402ca3:\n        if (var_24h == NULL) {\n            uVar13 = fcn.00401453();\n            iVar12 = sub.KERNEL32.dll_lstrlenW(uVar13);\n        }\n        else {\n            *0x4100d0 = fcn.0040143d();\n            iVar12 = 1;\n        }\n        if (*ppiVar16 != 0) {\n            uVar18 = 0;\n            puVar15 = &fcn.00401593::hWndChildAfter;\n            iVar12 = iVar12 * 2;\n            uVar9 = 0x4100d0;\n            uVar13 = fcn.004060ef(ppiVar16);\n            iVar12 = (*_sym.imp.KERNEL32.dll_WriteFile)(uVar13, ppiVar16, uVar9, iVar12, puVar15, uVar18);\n            goto code_r0x004019f7;\n        }\n        goto code_r0x004019fd;\n    case 0x402cf1:\n        iVar12 = 0;\n        lpNumberOfBytesWritten = fcn.0040143d();\n        if (lpNumberOfBytesWritten < 1) break;\n        if (0x2003 < lpNumberOfBytesWritten) {\n            lpNumberOfBytesWritten = 0x2003;\n        }\n        if (*ppiVar16 == 0) {\ncode_r0x00402c95:\n            iVar12 = 0;\n            ppiVar14 = hWndChildAfter;\n        }\n        else {\n            hWndParent = NULL;\n            uVar13 = fcn.004060ef(ppiVar16);\n            ppiVar14 = hWndChildAfter;\n            nNumberOfBytesToWrite._0_2_ = uVar13;\n            nNumberOfBytesToWrite._2_2_ = uVar13 >> 0x10;\n            if (lpNumberOfBytesWritten < 1) goto code_r0x00402c95;\n            while ((iVar8 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                      (CONCAT22(nNumberOfBytesToWrite._2_2_, nNumberOfBytesToWrite), \n                                       &fcn.00401593::hWndChildAfter, 2, &fcn.00401593::lpNumberOfBytesRead, 0), \n                   iVar8 != 0 && (lpNumberOfBytesRead == 0x2))) {\n                if (lpLastWriteTime != NULL) {\n                    uVar11 = hWndChildAfter & 0xffff;\n                    goto code_r0x00402c5d;\n                }\n                if ((hWndParent == 0xd) || (hWndParent == 10)) {\n                    if ((hWndParent != hWndChildAfter) && ((hWndChildAfter == 0xd || (hWndChildAfter == 10))))\n                    goto code_r0x00402c7e;\n                    uVar13 = 0xfffffffe;\n                    goto code_r0x00402c8a;\n                }\n                hWndParent = hWndChildAfter & 0xffff;\n                *(ppiVar14 + iVar12 * 2) = hWndChildAfter;\n                iVar12 = iVar12 + 1;\n                if ((hWndChildAfter == 0) || (lpNumberOfBytesWritten <= iVar12)) break;\n            }\n        }\ncode_r0x00402c98:\n        *(ppiVar14 + iVar12 * 2) = 0;\ncode_r0x004019f7:\n        if (iVar12 != 0) break;\ncode_r0x004019fd:\n        var_4h = 0x1;\n        break;\n    case 0x402dc0:\n        if (*ppiVar16 == 0) break;\n        uVar13 = fcn.0040143d(0, lpLastWriteTime);\n        uVar9 = fcn.004060ef(ppiVar16);\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(uVar9, ppiVar16, uVar13);\n        ppiVar16 = hWndChildAfter;\njoined_r0x00402de6:\n        if (dwFileAttributes < 0) break;\n        goto code_r0x00403106;\n    case 0x402df5:\n        if (*ppiVar16 != 0) {\n            uVar13 = fcn.004060ef(ppiVar16);\n            (*_sym.imp.KERNEL32.dll_FindClose)(uVar13);\n        }\n        break;\n    case 0x402e10:\n        if (*hWndChildAfter != 0) {\n            puVar15 = &fcn.00401593::lpFindFileData;\n            ppiVar14 = hWndChildAfter;\n            uVar13 = fcn.004060ef(hWndChildAfter);\n            iVar12 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(uVar13, ppiVar14, puVar15);\n            if (iVar12 != 0) goto code_r0x00402e6b;\n        }\n        goto code_r0x004019d7;\n    case 0x402e3c:\n        uVar13 = fcn.00401453();\n        iVar12 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(uVar13, &fcn.00401593::lpFindFileData);\n        if (iVar12 == -1) {\n            *hWndChildAfter = 0;\n            goto code_r0x00402b30;\n        }\n        fcn.004060d6(hWndChildAfter, iVar12);\ncode_r0x00402e6b:\n        ppiVar14 = &fcn.00401593::var_380h;\ncode_r0x00402e73:\n        fcn.0040618f(ppiVar16, ppiVar14);\n        break;\n    case 0x402e7d:\n        lpNumberOfBytesWritten = 0xfffffd66;\n        piVar10 = fcn.00401453();\n        lpFileName = piVar10;\n        iVar12 = fcn.00405ead(piVar10);\n        if (iVar12 == 0) {\n            fcn.00401453();\n        }\n        fcn.00405fb9(piVar10);\n        hWndChildAfter = fcn.00405fd9(piVar10, 0x40000000, 2);\n        pcVar6 = _sym.imp.KERNEL32.dll_GlobalAlloc;\n        if (hWndChildAfter != 0xffffffff) {\n            nNumberOfBytesToWrite._0_2_ = *0x473e2c;\n            nNumberOfBytesToWrite._2_2_ = *0x473e2c >> 0x10;\n            iVar12 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x473e2c);\n            if (iVar12 != 0) {\n                fcn.004033e2(0);\n                fcn.004033b0(iVar12, CONCAT22(nNumberOfBytesToWrite._2_2_, nNumberOfBytesToWrite));\n                arg_10h = (*pcVar6)(0x40, var_24h);\n                lpNumberOfBytesRead = arg_10h;\n                if (arg_10h != NULL) {\n                    fcn.00403577(dwFileAttributes, 0, arg_10h, var_24h);\n                    for (; *arg_10h != '\\0'; arg_10h = arg_10h + 2 + var_14h) {\n                        var_14h = *arg_10h;\n                        fcn.00405f95(arg_10h[1] + iVar12, arg_10h + 2, var_14h);\n                    }\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(lpNumberOfBytesRead);\n                }\n                (*_sym.imp.KERNEL32.dll_WriteFile)\n                          (hWndChildAfter, iVar12, CONCAT22(nNumberOfBytesToWrite._2_2_, nNumberOfBytesToWrite), \n                           &fcn.00401593::lpNumberOfBytesWritten, 0);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar12);\n                lpNumberOfBytesWritten = fcn.00403577(0xffffffff, hWndChildAfter, 0, 0);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hWndChildAfter);\n        }\n        lpFindFileData = lpFileName;\n        fcn.00406429(L\"created uninstaller: %d, \\\"%s\\\"\", lpNumberOfBytesWritten);\n        lpFindFileData = 0xfffffff3;\n        if (lpNumberOfBytesWritten < 0) {\n            lpFindFileData = lpFileName;\n            (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n            var_4h = 0x1;\n            lpFindFileData = 0xffffffef;\n        }\ncode_r0x0040187b:\n        fcn.0040142c();\n        break;\n    case 0x402f93:\n        if (var_2ch != NULL) {\n            fcn.00406429(L\"settings logging to %d\", dwFileAttributes);\n            *0x462538 = dwFileAttributes;\n            fcn.00406429(L\"logging set to %d\", dwFileAttributes);\n            if (dwFileAttributes == NULL) {\n                fcn.0040626d(1);\n            }\n            else {\n                fcn.0040401e();\n            }\n            break;\n        }\n        ppiVar14 = fcn.00401453();\n        pcVar19 = 0x409aec;\ncode_r0x0040193f:\n        fcn.00406429(pcVar19, ppiVar14);\n        break;\n    case 0x402fe6:\n        uVar11 = fcn.0040143d();\n        if (*0x473dec <= uVar11) goto code_r0x004019fd;\n        iVar12 = uVar11 * 0x4020 + *0x473de8;\n        if (var_24h < 0) {\n            var_24h = -1 - var_24h;\n            if (var_24h == NULL) {\n                fcn.00406982(iVar12 + 0x18, var_1ch);\n                *(iVar12 + 8) = *(iVar12 + 8) | 0x100;\n            }\n            else {\n                dwFileAttributes = fcn.0040143d();\n            }\n            *(iVar12 + var_24h * 4) = dwFileAttributes;\n            if (lpLastWriteTime != NULL) {\n                fcn.0040117d(uVar11);\n            }\n            break;\n        }\n        ppiVar16 = hWndChildAfter;\n        if (var_24h == NULL) {\n            ppiVar14 = iVar12 + 0x18;\n            goto code_r0x00402e73;\n        }\n        goto code_r0x00403106;\n    case 0x40306e:\n        uVar11 = fcn.0040143d();\n        if (0x1f < uVar11) goto code_r0x004019fd;\n        if (lpLastWriteTime == NULL) {\n            if (var_24h == NULL) {\n                fcn.00406982(hWndChildAfter, *(*0x473ddc + 0x94 + uVar11 * 4));\n            }\n            else {\n                *(*0x473ddc + 0x94 + uVar11 * 4) = dwFileAttributes;\n            }\n            break;\n        }\n        if (var_24h != NULL) {\n            fcn.0040129d(uVar11);\n            fcn.004011ef(0, 0);\n            break;\n        }\n        fcn.004012e8(0);\n        ppiVar16 = hWndChildAfter;\n        goto code_r0x00403106;\n    case 0x4030d0:\n        (*_sym.imp.USER32.dll_SendMessageW)(lpWideCharStr, 0xb, *0x458284 & var_2ch, 0);\n        if (var_2ch != NULL) {\n            (*_sym.imp.USER32.dll_InvalidateRect)(lpWideCharStr, 0, 0);\n        }\n        break;\n    case 0x4030f6:\n        uVar13 = fcn.00401453();\n        fcn.00406533(uVar13);\ncode_r0x00403106:\n        fcn.004060d6(ppiVar16);\n    }\ncode_r0x0040310b:\n    *0x473e88 = *0x473e88 + var_4h;\n    return NULL;\ncode_r0x00402c3f:\n    *(ppiVar14 + iVar12 * 2) = lpWideCharStr;\n    var_35h = hWndChildAfter._3_1_;\n    iVar12 = iVar12 + 1;\n    if ((hWndChildAfter._3_1_ == '\\0') || (lpNumberOfBytesWritten <= iVar12)) goto code_r0x00402c98;\n    goto code_r0x00402bf9;\n}\n",
        "token_count": 16579
    },
    "004036a2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar16_t * __cdecl fcn.004036a2(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *arg_10h;\n    int32_t *piVar5;\n    uint32_t lpNumberOfBytesRead;\n    uint lpFileName;\n    uint32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t dwBytes;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    *0x473e20 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    *0x473e20 = *0x473e20 + 1000;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, 0x4e00d8, 0x2004);\n    iVar1 = fcn.00405fd9(0x4e00d8, 0x80000000, 3);\n    if (iVar1 == -1) {\n        *0x40c010 = iVar1;\n        return L\"Error launching installer\";\n    }\n    *0x40c010 = iVar1;\n    fcn.0040618f(0x4d00b8, 0x4e00d8);\n    uVar2 = fcn.004068ce(0x4d00b8);\n    fcn.0040618f(0x4e40e0, uVar2);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar1, 0);\n    *0x4301e0 = uVar3;\n    for (; 0 < uVar3; uVar3 = uVar3 - lpNumberOfBytesRead) {\n        uVar4 = (-(*0x473e2c != 0) & 0x7e00) + 0x200;\n        lpNumberOfBytesRead = uVar3;\n        if (uVar4 <= uVar3) {\n            lpNumberOfBytesRead = uVar4;\n        }\n        iVar1 = fcn.004033b0(0x420158, lpNumberOfBytesRead);\n        if (iVar1 == 0) {\n            fcn.0040330e(1);\n            goto code_r0x004038b2;\n        }\n        if (*0x473e2c == 0) {\n            fcn.00405f95(&var_24h, 0x420158, 0x1c);\n            if (((((var_24h & 0xfffffff0) == 0) && (var_20h == -0x21524111)) && (var_14h == 0x74736e49)) &&\n               ((var_18h == 0x74666f73 && (var_1ch == 0x6c6c754e)))) {\n                arg_8h = arg_8h | var_24h;\n                *0x473ea0 = *0x473ea0 | arg_8h & 2;\n                *0x473e2c = *0x420154;\n                if (uVar3 < var_ch) goto code_r0x004038b2;\n                if (((arg_8h & 8) == 0) && ((arg_8h & 4) != 0)) break;\n                var_8h = var_8h + 1;\n                uVar3 = var_ch - 4;\n                if (uVar3 < lpNumberOfBytesRead) {\n                    lpNumberOfBytesRead = uVar3;\n                }\n            }\n        }\n        else if ((arg_8h & 2) == 0) {\n            fcn.0040330e(0);\n        }\n        if (uVar3 < *0x4301e0) {\n            var_4h = fcn.00407da2(var_4h, 0x420158, lpNumberOfBytesRead);\n        }\n        *0x420154 = *0x420154 + lpNumberOfBytesRead;\n    }\n    fcn.0040330e(1);\n    if (*0x473e2c != 0) {\n        if (var_8h != 0) {\n            fcn.004033e2(*0x420154);\n            iVar1 = fcn.004033b0(&arg_8h, 4);\n            if ((iVar1 == 0) || (var_4h != arg_8h)) goto code_r0x004038b2;\n        }\n        arg_10h = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, dwBytes);\n        fcn.00407e10();\n        fcn.00406008(&lpFileName, 0x4d80c8);\n        *0x40c014 = (*_sym.imp.KERNEL32.dll_CreateFileW)(&lpFileName, 0xc0000000, 0, 0, 2, 0x4000100, 0);\n        if (*0x40c014 == -1) {\n            return L\"Error writing temporary file. Make sure your temp folder is valid.\";\n        }\n        *0x4341ec = fcn.004033e2(*0x473e2c + 0x1c);\n        *0x4341e8 = (*0x4341ec - (~var_24h & 4)) + -0x1c + var_ch;\n        iVar1 = fcn.00403577(0xffffffff, 0, arg_10h, dwBytes);\n        if (iVar1 == dwBytes) {\n            *0x473e28 = *arg_10h;\n            if ((var_24h & 1) != 0) {\n                *0x473e24 = *0x473e24 + 1;\n            }\n            iVar1 = 8;\n            piVar5 = arg_10h + 0x11;\n            *0x473ddc = arg_10h;\n            do {\n                piVar5 = piVar5 + -2;\n                *piVar5 = *piVar5 + arg_10h;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n            arg_10h[0xf] = *0x4301e4;\n            fcn.00405f95(0x473de0, arg_10h + 1, 0x40);\n            return NULL;\n        }\n    }\ncode_r0x004038b2:\n    return \n    L\"Installer integrity check has failed. Common causes include\\nincomplete download and damaged media. Contact the\\ninstaller\\'s author to obtain a new copy.\\n\\nMore information at:\\nhttp://nsis.sf.net/NSIS_Error\"\n    ;\n}\n",
        "token_count": 1538
    },
    "004039c8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004039c8(void)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if (*0x40c010 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x40c010);\n        *0x40c010 = -1;\n    }\n    if (*0x40c014 != -1) {\n        (*pcVar1)(*0x40c014);\n        *0x40c014 = -1;\n    }\n    fcn.00403e2d();\n    fcn.00406e11(0x4dc0d0, 7);\n    return;\n}\n",
        "token_count": 151
    },
    "null": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid entry0(void)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    ushort *arg_8h;\n    int32_t iVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint uVar7;\n    char16_t *pcVar8;\n    int32_t iVar9;\n    int16_t *arg_8h_00;\n    char16_t *pcVar10;\n    uint uVar11;\n    char16_t *pcVar12;\n    char16_t *pcVar13;\n    uint uStack804;\n    int32_t iStack800;\n    char16_t *pcStack796;\n    int32_t iStack792;\n    uint32_t uStack788;\n    int32_t iStack784;\n    char16_t *pcStack780;\n    int16_t *piStack776;\n    uint uStack772;\n    uchar *puStack768;\n    uint uStack764;\n    char16_t *pcStack760;\n    uint uStack756;\n    uint uStack752;\n    uint uStack748;\n    uchar auStack704 [704];\n    \n    iVar9 = 0x20;\n    uStack748 = 0x403a2f;\n    (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    uStack748 = 0x403a39;\n    (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n    uStack748 = 0x8001;\n    uStack752 = 0x403a44;\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    uStack752 = 0;\n    uStack756 = 0x403a4b;\n    *0x473eb8 = (*_sym.imp.ole32.dll_OleInitialize)();\n    uStack756 = 8;\n    pcStack760 = 0x403a57;\n    *0x473dd0 = fcn.00406482();\n    pcStack760 = NULL;\n    uStack764 = 0x2b4;\n    puStack768 = &stack0xfffffd40;\n    uStack772 = 0;\n    piStack776 = 0x40a384;\n    pcStack780 = 0x403a73;\n    (*_sym.imp.SHELL32.dll_SHGetFileInfoW)();\n    pcStack780 = L\"NSIS Error\";\n    iStack784 = 0x46bdc0;\n    uStack788 = 0x403a82;\n    fcn.0040618f();\n    uStack788 = 0x403a88;\n    uStack788 = (*_sym.imp.KERNEL32.dll_GetCommandLineW)();\n    iStack792 = 0x4c40a0;\n    pcStack796 = 0x403a94;\n    fcn.0040618f();\n    pcStack796 = NULL;\n    iStack800 = 0x403a9b;\n    *0x473dd8 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n    uStack804 = 0x4c40a0;\n    if (*0x4c40a0 == 0x22) {\n        iVar9 = 0x22;\n        uStack804 = 0x4c40a2;\n    }\n    iStack800 = iVar9;\n    piVar2 = fcn.00405e8e();\n    piVar3 = (*_sym.imp.USER32.dll_CharNextW)(piVar2);\n    piStack776 = piVar3;\n    while (iVar1 = *piVar3,  iVar1 != 0) {\n        while (iVar1 == 0x20) {\n            piVar3 = piVar3 + 1;\n            iVar1 = *piVar3;\n        }\n        if (*piVar3 == 0x22) {\n            piVar3 = piVar3 + 1;\n        }\n        arg_8h_00 = piVar3;\n        if (*piVar3 == 0x2f) {\n            arg_8h_00 = piVar3 + 1;\n            if ((*arg_8h_00 == 0x53) && ((piVar3[2] == 0x20 || (piVar3[2] == 0)))) {\n                uStack788 = uStack788 | 2;\n            }\n            iVar9 = fcn.00403971(arg_8h_00, L\"NCRC\", 4);\n            if ((iVar9 == 0) && ((piVar3[5] == 0x20 || (piVar3[5] == 0)))) {\n                uStack788 = uStack788 | 4;\n            }\n            iVar9 = fcn.00403971(piVar3 + -1, L\" /D=\", 4);\n            if (iVar9 == 0) {\n                fcn.0040888c(piVar3 + -1, 0, 8);\n                fcn.0040618f(0x4c80a8, piVar3 + 3);\n                break;\n            }\n        }\n        piVar3 = fcn.00405e8e();\n        piVar2 = arg_8h_00;\n        if (*piVar3 == 0x22) {\n            piVar3 = piVar3 + 1;\n        }\n    }\n    pcVar8 = 0x4d80c8;\n    pcVar13 = 0x4d80c8;\n    (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x2004, 0x4d80c8, piVar2);\n    iVar9 = fcn.0040393d();\n    if (iVar9 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(0x4d80c8, 0x1fff);\n        pcVar13 = L\"\\\\Temp\";\n        pcVar12 = 0x4d80c8;\n        sub.KERNEL32.dll_lstrcatW(0x4d80c8, L\"\\\\Temp\");\n        iVar9 = fcn.0040393d();\n        if (iVar9 == 0) goto code_r0x00403c76;\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteFileW)(0x4d40c0);\n    piVar2 = 0x403bd6;\n    pcVar12 = pcStack780;\n    uStack788 = fcn.004036a2(pcStack780);\n    if (uStack788 == 0) {\n        if (*0x473e24 != 0) {\n            piVar2 = NULL;\n            pcVar13 = 0x4c40a0;\n            arg_8h = fcn.00405e8e(0x4c40a0, 0);\n            while ((0x4c409f < arg_8h && (iVar9 = fcn.00403971(arg_8h, L\" _?=\", 4),  iVar9 != 0))) {\n                arg_8h = arg_8h + -1;\n            }\n            pcStack796 = L\"Error launching installer\";\n            if (arg_8h < 0x4c40a0) goto code_r0x00403ca1;\n            *arg_8h = 0;\n            pcVar10 = arg_8h + 4;\n            pcVar12 = pcVar10;\n            iVar9 = fcn.004068fa(pcVar10);\n            if (iVar9 == 0) goto code_r0x00403c76;\n            fcn.0040618f(0x4c80a8, pcVar10);\n            fcn.0040618f(0x4cc0b0, pcVar10);\n        }\n        *0x473eac = -1;\n        piVar2 = fcn.00405ab9();\n        iVar9 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        fcn.00407b71(uStack788, iVar9 - iStack784);\n        pcVar12 = 0x1;\n        fcn.0040626d(1);\n    }\ncode_r0x00403c76:\n    do {\n        fcn.004039c8(pcVar12, pcVar13, piVar2);\n        (*_sym.imp.ole32.dll_OleUninitialize)();\n        if (iStack800 == 0) {\n            if (*0x473e94 != 0) {\n                uVar11 = 3;\n                pcVar8 = fcn.00406482(3);\n                pcVar5 = fcn.00406482(4);\n                pcVar6 = fcn.00406482(5);\n                if (((pcVar8 != NULL) && (pcVar5 != NULL)) && (pcVar6 != NULL)) {\n                    uVar7 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &stack0xfffffce0);\n                    iVar9 = (*pcVar8)(uVar7);\n                    if (iVar9 != 0) {\n                        (*pcVar5)(0, L\"SeShutdownPrivilege\", &stack0xfffffcec);\n                        uStack804 = 1;\n                        iStack792 = 2;\n                        (*pcVar6)(pcVar13, 0, &stack0xfffffcdc, 0, 0, 0);\n                    }\n                }\n                iVar9 = (*_sym.imp.USER32.dll_ExitWindowsEx)(2, 0);\n                if (iVar9 == 0) {\n                    fcn.00401414(uVar11, 9);\n                }\n            }\n            iVar9 = iStack792;\n            if (*0x473eac != -1) {\n                iStack792 = *0x473eac;\n                iVar9 = *0x473eac;\n            }\n        }\n        else {\n            iVar9 = 0x200010;\n            fcn.00405e2a(iStack800, 0x200010);\n        }\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(iVar9);\ncode_r0x00403ca1:\n        pcVar12 = 0x40a328;\n        sub.KERNEL32.dll_lstrcatW(pcVar8);\n        iVar9 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(pcVar8, 0x4d00b8);\n        if (iVar9 != 0) {\n            (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(pcVar8, 0);\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(pcVar8);\n            if (*0x4c80a8 == 0) {\n                pcStack796 = 0x4d00b8;\n                iStack792 = 0x4c80a8;\n                uStack804 = 0x403ce0;\n                fcn.0040618f();\n            }\n            pcStack796 = pcStack760;\n            iStack800 = 0x474000;\n            uStack804 = 0x403cee;\n            fcn.0040618f();\n            uStack804 = 0x40a324;\n            piVar2 = 0x478008;\n            fcn.0040618f();\n            iVar9 = 0x1a;\n            do {\n                fcn.00406982(0x4341f8, *(*0x473ddc + 0x134));\n                (*_sym.imp.KERNEL32.dll_DeleteFileW)(0x4341f8);\n                if ((iStack792 != 0) && (iVar4 = (*_sym.imp.KERNEL32.dll_CopyFileW)(0x4e00d8, 0x4341f8, 1),  iVar4 != 0)\n                   ) {\n                    fcn.00406dde(0x4341f8, 0);\n                    fcn.00406982(0x4341f8, *(*0x473ddc + 0x138));\n                    piVar2 = 0x4341f8;\n                    iVar4 = fcn.00405dc9(0x4341f8);\n                    if (iVar4 != 0) {\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n                        iStack792 = 0;\n                    }\n                }\n                *0x478008 = *0x478008 + 1;\n                iVar9 = iVar9 + -1;\n            } while (iVar9 != 0);\n            pcVar13 = NULL;\n            pcVar12 = pcVar8;\n            fcn.00406dde();\n        }\n    } while( true );\n}\n",
        "token_count": 2721
    },
    "00404b17": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404b17(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint32_t *var_3ch;\n    uint32_t *var_38h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    var_8h = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3f9);\n    var_4h = (*pcVar1)(arg_8h, 0x408);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    var_18h = *0x473de8;\n    var_1ch = *0x473ddc + 0x94;\n    if (arg_ch == 0x110) {\n        *0x473e30 = arg_8h;\n        var_20h = 0;\n        var_14h = 2;\n        *0x438224 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x473dec << 2);\n        var_10h = (*_sym.imp.USER32.dll_LoadBitmapW)(*0x473dd8, 0x6e);\n        *0x458280 = 0xffffffff;\n        *0x438210 = (*_sym.imp.USER32.dll_SetWindowLongW)(var_4h, 0xfffffffc, fcn.00404a67);\n        *0x438220 = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 6, 0);\n        (*_sym.imp.COMCTL32.dll_ImageList_AddMasked)(*0x438220, var_10h, 0xff00ff);\n        (*pcVar1)(var_4h, 0x1109, 2, *0x438220);\n        iVar2 = (*pcVar1)(var_4h, 0x111c, 0, 0);\n        if (iVar2 < 0x10) {\n            (*pcVar1)(var_4h, 0x111b, 0x10, 0);\n        }\n        (*_sym.imp.GDI32.dll_DeleteObject)(var_10h);\n        iVar2 = 0;\n        do {\n            iVar6 = *(var_1ch + iVar2 * 4);\n            if (iVar6 != 0) {\n                if (iVar2 != 0x20) {\n                    var_14h = 0;\n                }\n                uVar3 = fcn.00406982(0, iVar6);\n                uVar3 = (*pcVar1)(var_8h, 0x143, 0, uVar3);\n                (*pcVar1)(var_8h, 0x151, uVar3, iVar2);\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < 0x21);\n        fcn.00403ee9(arg_8h, 0x15, *(arg_14h + 0x30 + var_14h * 4));\n        fcn.00403ee9(arg_8h, 0x16, *(arg_14h + 0x34 + var_14h * 4));\n        iVar2 = 0;\n        var_ch = 0;\n        if (*0x473dec < 1) {\ncode_r0x00404d45:\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongW)(var_4h, 0xfffffff0);\n            (*_sym.imp.USER32.dll_SetWindowLongW)(var_4h, 0xfffffff0, uVar4 & 0xfffffffb);\n        }\n        else {\n            var_10h = var_18h + 8;\n            do {\n                puVar7 = var_10h + 4;\n                if (*puVar7 != 0) {\n                    var_54h = var_ch;\n                    var_44h = *var_10h & 0x20;\n                    var_50h = 0xffff0002;\n                    var_4ch = 0xd;\n                    var_40h = 0x20;\n                    var_3ch = puVar7;\n                    var_28h = iVar2;\n                    if ((*var_10h & 2) == 0) {\n                        if ((*var_10h & 4) != 0) {\n                            var_ch = (*pcVar1)(var_4h, 0x110a, 3, var_ch);\n                            goto code_r0x00404d2b;\n                        }\n                        uVar3 = (*pcVar1)(var_4h, 0x1132, 0, &var_54h);\n                    }\n                    else {\n                        var_4ch = 0x4d;\n                        var_2ch = 1;\n                        uVar3 = (*pcVar1)(var_4h, 0x1132, 0, &var_54h);\n                        var_20h = 1;\n                        var_ch = uVar3;\n                    }\n                    *(*0x438224 + iVar2 * 4) = uVar3;\n                }\ncode_r0x00404d2b:\n                var_10h = var_10h + 0x1008;\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < *0x473dec);\n            if (var_20h == 0) goto code_r0x00404d45;\n        }\n        if (var_14h == 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(var_8h, 5);\n            fcn.00403f42(var_8h);\n            goto code_r0x004050f2;\n        }\n        fcn.00403f42(var_4h);\n    }\n    if (arg_ch == 0x405) {\n        arg_10h = 0;\n        arg_14h = 1;\n        arg_ch = 0x40f;\n    }\n    uVar4 = arg_14h;\n    if (((arg_ch == 0x4e) || (arg_ch == 0x413)) && ((arg_ch == 0x413 || (*(arg_14h + 4) == 0x408)))) {\n        if (((*0x473e28 & 0x200) == 0) && ((arg_ch == 0x413 || (*(arg_14h + 8) == -2)))) {\n            iVar2 = fcn.004049e7(var_4h, arg_ch != 0x413);\n            if (-1 < iVar2) {\n                puVar7 = iVar2 * 0x4020 + 8 + var_18h;\n                uVar5 = *puVar7;\n                if ((uVar5 & 0x10) == 0) {\n                    if ((uVar5 & 0x40) == 0) {\n                        uVar5 = uVar5 ^ 1;\n                    }\n                    else {\n                        uVar5 = uVar5 ^ 0x80;\n                        if (uVar5 < '\\0') {\n                            uVar5 = uVar5 | 1;\n                        }\n                        else {\n                            uVar5 = uVar5 & 0xfffffffe;\n                        }\n                    }\n                    *puVar7 = uVar5;\n                    fcn.0040117d(iVar2);\n                    arg_14h = ~(*0x473e28 >> 8) & 1;\n                    arg_10h = 1;\n                    arg_ch = 0x40f;\n                }\n            }\n        }\n        if (uVar4 != 0) {\n            if (*(uVar4 + 8) == -0x1c3) {\n                (*pcVar1)(var_4h, 0x419, 0, *(uVar4 + 0x5c));\n            }\n            if (*(uVar4 + 8) == -0x1c7) {\n                puVar7 = *(uVar4 + 0x5c) * 0x4020 + 8 + var_18h;\n                if (*(uVar4 + 0xc) == 2) {\n                    *puVar7 = *puVar7 | 0x20;\n                }\n                else {\n                    *puVar7 = *puVar7 & 0xffffffdf;\n                }\n            }\n        }\n    }\n    if (arg_ch == 0x111) {\n        if ((arg_10h != 0x3f9) || (arg_10h >> 0x10 != 1)) goto code_r0x004050f2;\n        iVar2 = (*pcVar1)(var_8h, 0x147, 0, 0);\n        if (iVar2 == -1) goto code_r0x004050f2;\n        iVar2 = (*pcVar1)(var_8h, 0x150, iVar2, 0);\n        if ((iVar2 == -1) || (*(var_1ch + iVar2 * 4) == 0)) {\n            iVar2 = 0x20;\n        }\n        fcn.0040129d(iVar2);\n        (*pcVar1)(arg_8h, 0x420, 0, iVar2);\n        arg_10h = 1;\n        arg_14h = 0;\n        arg_ch = 0x40f;\n    }\n    if (arg_ch == 0x200) {\n        (*pcVar1)(var_4h, 0x200, 0, 0);\n    }\n    if (arg_ch == 0x40b) {\n        if (*0x438220 != 0) {\n            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(*0x438220);\n        }\n        if (*0x438224 != 0) {\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(*0x438224);\n        }\n        *0x438220 = 0;\n        *0x438224 = 0;\n        *0x473e30 = 0;\n    }\n    if (arg_ch == 0x40f) {\n        fcn.004011ef(0, 0);\n        if (arg_10h != 0) {\n            fcn.00401414(8);\n        }\n        if (arg_14h != 0) {\n            arg_14h = fcn.004012e8(*0x438224);\n            fcn.0040129d(arg_14h);\n            iVar2 = 0;\n            iVar6 = 0;\n            if (0 < arg_14h) {\n                do {\n                    if (*(var_1ch + iVar2 * 4) != 0) {\n                        iVar6 = iVar6 + 1;\n                    }\n                    iVar2 = iVar2 + 1;\n                } while (iVar2 < arg_14h);\n            }\n            (*pcVar1)(var_8h, 0x14e, iVar6, 0);\n            arg_ch = 0x420;\n        }\n        fcn.004011ef(0, 0);\n        var_20h = *0x438224;\n        var_3ch = 0xf030;\n        var_18h = 0;\n        if (0 < *0x473dec) {\n            puVar7 = *0x473de8 + 8;\n            do {\n                uVar4 = *(var_20h + var_18h * 4);\n                if (uVar4 != 0) {\n                    uVar5 = *puVar7;\n                    var_48h = 8;\n                    if ((uVar5 & 0x100) != 0) {\n                        var_38h = puVar7 + 4;\n                        var_48h = 9;\n                        *puVar7 = *puVar7 & 0xfffffeff;\n                    }\n                    if ((uVar5 & 0x40) == 0) {\n                        iVar2 = (uVar5 & 1) + 1;\n                        if ((uVar5 & 0x10) != 0) {\n                            iVar2 = (uVar5 & 1) + 4;\n                        }\n                    }\n                    else {\n                        iVar2 = 3;\n                    }\n                    var_40h = (iVar2 << 0xb | uVar5 & 8) * 2 | uVar5 & 0x20;\n                    var_44h = uVar4;\n                    (*pcVar1)(var_4h, 0x1102, (uVar5 >> 5 & 1U) + 1, uVar4);\n                    (*pcVar1)(var_4h, 0x113f, 0, &var_48h);\n                }\n                var_18h = var_18h + 1;\n                puVar7 = puVar7 + 0x1008;\n            } while (var_18h < *0x473dec);\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(var_4h, 0, 1);\n        if (*(*0x46bda8 + 0x10) != 0) {\n            fcn.0040461c(5);\n            fcn.00404553(0x3ff, 0xfffffffb);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n    if ((arg_ch == 0x420) && ((*0x473e28 & 0x100) != 0)) {\n        iVar2 = (arg_14h == 0x20) << 3;\n        (*_sym.imp.USER32.dll_ShowWindow)(var_4h, iVar2);\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fe, iVar2);\n        (*pcVar1)(uVar3);\n    }\ncode_r0x004050f2:\n    fcn.00403f74(arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 3252
    },
    "00405260": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405260(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    ushort *puVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint var_40h;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    ushort *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint uStack32;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar9 = *0x46bd8c;\n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    iVar8 = 0;\n    var_4h = *0x46bd8c;\n    if (arg_ch == 0x110) {\n        var_30h = 0xffffffff;\n        var_24h = 0xffffffff;\n        var_38h = 2;\n        var_34h = 0;\n        var_2ch = NULL;\n        var_28h = 0;\n        var_20h = 0;\n        uStack32 = 0;\n        iVar9 = *(*0x473ddc + 0x5c);\n        iVar8 = *(*0x473ddc + 0x60);\n        *0x46bda0 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x403);\n        *0x46bd98 = (*pcVar1)(arg_8h, 0x3ee);\n        *0x46bd8c = (*pcVar1)(arg_8h, 0x3f8);\n        var_4h = *0x46bd8c;\n        fcn.00403f42(*0x46bda0);\n        *0x46bda4 = fcn.0040461c(4);\n        *0x46bdac = 0;\n        uVar3 = fcn.00406982(0, 0xfffffffd, 0x4c80a8);\n        fcn.00406429(L\"New install of \\\"%s\\\" to \\\"%s\\\"\", uVar3);\n        (*_sym.imp.USER32.dll_GetClientRect)(var_4h, &var_18h);\n        var_30h = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x15);\n        pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n        var_30h = var_10h - var_30h;\n        (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1061, 0, &var_38h);\n        (*pcVar2)(var_4h, 0x1036, 0x4000, 0x4000);\n        if (-1 < iVar9) {\n            (*pcVar2)(var_4h, 0x1001, 0, iVar9);\n            (*pcVar2)(var_4h, 0x1026, 0, iVar9);\n        }\n        if (-1 < iVar8) {\n            (*pcVar2)(var_4h, 0x1024, 0, iVar8);\n        }\n        fcn.00403ee9(arg_8h, 0x1b, *(arg_14h + 0x30));\n        if ((*0x473e28 & 3) != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x46bda0, 0);\n            if ((*0x473e28 & 2) == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(var_4h, 8);\n            }\n            else {\n                *0x46bda0 = 0;\n            }\n            fcn.00403f42(*0x46bd98);\n        }\n        uVar3 = (*pcVar1)(arg_8h, 0x3ec);\n        (*pcVar2)(uVar3, 0x401, 0, 0x75300000);\n        if ((*0x473e28 & 4) != 0) {\n            (*pcVar2)(uVar3, 0x409, 0, iVar8);\n            (*pcVar2)(uVar3, 0x2001, 0, iVar9);\n        }\ncode_r0x0040541e:\n        uVar3 = 0;\n    }\n    else {\n        if (arg_ch == 0x405) {\n            uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3ec, 0, &var_8h);\n            uVar3 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.004051da, uVar3);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n        }\n        pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n        if (arg_ch == 0x111) {\n            if (arg_10h == 0x403) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x46bda0, 0);\n                (*pcVar1)(iVar9, 8);\n                fcn.00403f42(iVar9);\n                goto code_r0x00405481;\n            }\n        }\n        else {\ncode_r0x00405481:\n            if (arg_ch == 0x404) {\n                if (*0x46bd94 != 0) {\n                    *0x458278 = 2;\n                    fcn.00403ec2();\n                    goto code_r0x004054a3;\n                }\n                (*pcVar1)(*0x473dd4, 8);\n                if (*0x473e8c == 0) {\n                    fcn.00405107(*(*0x458270 + 0x34), 0);\n                }\n                fcn.00403ec2(1);\n            }\n            if ((arg_ch == 0x7b) && (arg_10h == iVar9)) {\n                iVar4 = (*_sym.imp.USER32.dll_SendMessageW)(iVar9, 0x1004, 0, 0);\n                if (0 < iVar4) {\n                    uVar3 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                    uVar5 = fcn.00406982(0, 0xffffffe1);\n                    (*_sym.imp.USER32.dll_AppendMenuW)(uVar3, 0, 1, uVar5);\n                    if (arg_14h == -1) {\n                        (*_sym.imp.USER32.dll_GetWindowRect)(iVar9, &var_18h);\n                    }\n                    else {\n                        var_18h = arg_14h;\n                        var_14h = arg_14h >> 0x10;\n                    }\n                    iVar6 = (*_sym.imp.USER32.dll_TrackPopupMenu)(uVar3, 0x180, var_18h, var_14h, 0, arg_8h, 0);\n                    iVar9 = 1;\n                    if (iVar6 == 1) {\n                        var_38h = 0;\n                        var_2ch = 0x448250;\n                        var_28h = 0x1001f;\n                        arg_8h = iVar4;\n                        do {\n                            arg_8h = arg_8h + -1;\n                            iVar6 = (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1073, arg_8h, &var_40h);\n                            iVar9 = iVar9 + 2 + iVar6;\n                        } while (arg_8h != 0);\n                        (*_sym.imp.USER32.dll_OpenClipboard)(0);\n                        (*_sym.imp.USER32.dll_EmptyClipboard)();\n                        uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, iVar9 * 2);\n                        puVar7 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar3);\n                        do {\n                            var_2ch = puVar7;\n                            iVar9 = (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1073, iVar8, &var_40h);\n                            puVar7 = puVar7 + iVar9;\n                            *puVar7 = 0xd;\n                            puVar7[1] = 10;\n                            puVar7 = puVar7 + 2;\n                            iVar8 = iVar8 + 1;\n                        } while (iVar8 < iVar4);\n                        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar3);\n                        (*_sym.imp.USER32.dll_SetClipboardData)(0xd, uVar3);\n                        (*_sym.imp.USER32.dll_CloseClipboard)();\n                    }\n                }\n                goto code_r0x0040541e;\n            }\n        }\ncode_r0x004054a3:\n        uVar3 = fcn.00403f74(arg_10h, arg_14h);\n    }\n    return uVar3;\n}\n",
        "token_count": 2055
    },
    "00405ab9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00405ab9(void)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    uint uStack180;\n    uint uStack176;\n    int32_t iStack172;\n    int32_t iStack168;\n    int32_t iStack164;\n    int32_t iStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint32_t uStack136;\n    char16_t *pcStack132;\n    uint32_t uStack128;\n    uint uStack124;\n    uint uStack120;\n    \n    iVar6 = *0x473ddc;\n    pcVar2 = fcn.00406482();\n    if (pcVar2 == NULL) {\n        *0x4d40c0 = 0x30;\n        *0x4d40c2 = 0x78;\n        *0x4d40c4 = 0;\n        fcn.0040605c(0x80000001, L\"Control Panel\\\\Desktop\\\\ResourceLocale\", 0, 0x448250, 0);\n        if (*0x448250 == 0) {\n            fcn.0040605c(0x80000003, L\".DEFAULT\\\\Control Panel\\\\International\", L\"Locale\", 0x448250, 0);\n        }\n        sub.KERNEL32.dll_lstrcatW();\n    }\n    else {\n        (*pcVar2)();\n        fcn.004060d6();\n    }\n    fcn.0040403f();\n    *0x473e80 = *0x473e28 & 0x20;\n    *0x473e9c = 0x10000;\n    iVar3 = fcn.004068fa();\n    if ((iVar3 == 0) && (*(iVar6 + 0x48) != 0)) {\n        uVar8 = 0x463540;\n        uStack120 = 0x405b98;\n        fcn.0040605c(*(iVar6 + 0x44), *0x473df8 + *(iVar6 + 0x48) * 2, *0x473df8 + *(iVar6 + 0x4c) * 2, 0x463540, 0);\n        if (*0x463540 != 0) {\n            if (*0x463540 == 0x22) {\n                uStack120 = 0x22;\n                uVar8 = 0x463542;\n                uStack124 = 0x463542;\n                uStack128 = 0x405bb6;\n                puVar4 = fcn.00405e8e();\n                *puVar4 = 0;\n            }\n            pcStack132 = 0x405bbf;\n            uStack128 = uVar8;\n            iVar3 = sub.KERNEL32.dll_lstrlenW();\n            uStack136 = (uVar8 - 8) + iVar3 * 2;\n            if (uVar8 < uStack136) {\n                pcStack132 = L\".exe\";\n                uStack140 = 0x405bd3;\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)();\n                if (iVar3 == 0) {\n                    uStack136 = 0x405bde;\n                    pcStack132 = uVar8;\n                    uVar5 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)();\n                    if ((uVar5 == 0xffffffff) || ((uVar5 & 0x10) == 0)) {\n                        uStack136 = 0x405bed;\n                        uStack128 = uVar8;\n                        fcn.004068ce();\n                    }\n                }\n            }\n            uStack136 = 0x405bf3;\n            pcStack132 = uVar8;\n            uStack136 = fcn.0040689f();\n            uStack140 = 0x4c80a8;\n            uStack144 = 0x405bfa;\n            fcn.0040618f();\n        }\n    }\n    uStack144 = 0x4c80a8;\n    uStack148 = 0x405c00;\n    iVar3 = fcn.004068fa();\n    if (iVar3 == 0) {\n        uStack148 = *(iVar6 + 0x118);\n        uStack152 = 0x4c80a8;\n        uStack156 = 0x405c10;\n        fcn.00406982();\n    }\n    if (((*0x473e28 & 0x10) != 0) && (*0x473e24 == 0)) {\n        uStack156 = 0x405c26;\n        fcn.0040401e();\n        *0x462538 = 1;\n    }\n    uStack156 = 0x8040;\n    iStack160 = 0;\n    iStack164 = 0;\n    iStack168 = 1;\n    iStack172 = 0x67;\n    uStack176 = *0x473dd8;\n    uStack180 = 0x405c47;\n    *0x46bd90 = (*_sym.imp.USER32.dll_LoadImageW)();\n    if (*(iVar6 + 0x50) == -1) {\ncode_r0x00405cf0:\n        uStack180 = 0;\n        iVar6 = fcn.00401414();\n        if (iVar6 == 0) {\n            fcn.0040403f();\n            if (*0x473ea0 == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x438228, 5);\n                pcVar2 = _sym.imp.KERNEL32.dll_LoadLibraryW;\n                iVar6 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"RichEd20\");\n                if (iVar6 == 0) {\n                    (*pcVar2)(L\"RichEd32\");\n                }\n                pcVar2 = _sym.imp.USER32.dll_GetClassInfoW;\n                iVar6 = (*_sym.imp.USER32.dll_GetClassInfoW)(0, L\"RichEdit20A\", 0x46bd60);\n                if (iVar6 == 0) {\n                    (*pcVar2)(0, L\"RichEdit\", 0x46bd60);\n                    *0x46bd84 = L\"RichEdit20A\";\n                    (*_sym.imp.USER32.dll_RegisterClassW)(0x46bd60);\n                }\n                uVar7 = (*_sym.imp.USER32.dll_DialogBoxParamW)(*0x473dd8, *0x46bd9c + 0x69U & 0xffff, 0, 0x405606, 0);\n                fcn.00401414(5);\n                fcn.00403e12(1);\n                return uVar7;\n            }\n            iVar6 = fcn.004051da(0);\n            if (iVar6 == 0) {\n                fcn.00401414(1);\n                goto code_r0x00405dbf;\n            }\n            if (*0x46bd94 == 0) {\n                fcn.00401414(2);\n            }\n        }\n        uVar7 = 2;\n    }\n    else {\n        iStack160 = *0x40a498;\n        uStack156 = *0x40a49c;\n        *0x46bd84 = &stack0xffffff60;\n        uStack180 = 0x46bd60;\n        *0x46bd64 = fcn.00401000;\n        *0x46bd70 = *0x473dd8;\n        *0x46bd74 = *0x46bd90;\n        iVar1 = (*_sym.imp.USER32.dll_RegisterClassW)();\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x30, 0, &stack0xffffff64, 0);\n            *0x438228 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                                  (0x80, &stack0xffffff4c, 0, 0x80000000, iStack172, iStack168, iStack164 - iStack172, \n                                   iStack160 - iStack168, 0, 0, *0x473dd8, 0);\n            goto code_r0x00405cf0;\n        }\ncode_r0x00405dbf:\n        uVar7 = 0;\n    }\n    return uVar7;\n}\n",
        "token_count": 1890
    },
    "00405fb9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00405fb9(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n    if (uVar1 != 0xffffffff) {\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(unaff_retaddr, uVar1 & 0xfffffffe);\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0040626d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040626d(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_WriteFile;\n    if (arg_8h != 0) {\n        if (*0x40c058 != -1) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x40c058);\n        }\n        *0x40c058 = 0xffffffff;\n        return;\n    }\n    if (*0x462538 == 0) {\n        return;\n    }\n    if (*0x46b560 != 0) {\n        if (*0x40c058 != -1) goto code_r0x00406316;\n        arg_8h = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(0x46b560);\n        *0x40c058 = fcn.00405fd9(0x46b560, 0x40000000, 4);\n        if (*0x40c058 == -1) {\n            return;\n        }\n        if (arg_8h == -1) {\n            arg_8h = 0xfeff;\n            (*pcVar1)(*0x40c058, &arg_8h, 2, &var_4h, 0);\n        }\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x40c058, 0, 0, 2);\n    }\n    if (*0x40c058 == -1) {\n        return;\n    }\ncode_r0x00406316:\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(0x462540, 0x40a710);\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(0x462540);\n    (*pcVar1)(*0x40c058, 0x462540, iVar2 * 2, &arg_8h, 0);\n    return;\n}\n",
        "token_count": 440
    },
    "0040645b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040645b(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(param_1, 0x45ced8);\n    if (iVar1 == -1) {\n        uVar2 = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n        uVar2 = 0x45ced8;\n    }\n    return uVar2;\n}\n",
        "token_count": 116
    },
    "00406533": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406533(int32_t lpString)\n\n{\n    code *pcVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint var_b98h;\n    uint var_b78h;\n    uint lpString1;\n    uint var_568h;\n    uint var_560h;\n    uint lpString2;\n    uint lpVersionInformation;\n    int32_t var_124h;\n    code *var_20h;\n    uint var_1ch;\n    code *var_18h;\n    uint32_t var_14h;\n    int32_t hLibModule;\n    code *var_ch;\n    code *var_8h;\n    int32_t hObject;\n    \n    hObject = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, 4000);\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString);\n    if (0x103 < iVar3 - 1U) {\n        return 0x278;\n    }\n    iVar8 = 0;\n    if (0 < iVar3) {\n        do {\n            uVar2 = fcn.004061b1(*(lpString + iVar8 * 2));\n            *(&lpString2 + iVar8 * 2) = uVar2;\n            iVar8 = iVar8 + 1;\n        } while (iVar8 < iVar3);\n    }\n    *(&lpString2 + iVar3 * 2) = 0;\n    lpVersionInformation = 0x114;\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetVersionExW)(&lpVersionInformation);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (iVar3 == 0) {\n        return 0x25e;\n    }\n    if (var_124h == 2) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"PSAPI.DLL\");\n        if (iVar3 != 0) {\n            hLibModule = iVar3;\n            pcVar5 = (*pcVar1)(iVar3, \"EnumProcesses\");\n            pcVar4 = (*pcVar1)(iVar3, \"EnumProcessModules\");\n            var_8h = (*pcVar1)(iVar3, \"GetModuleBaseNameW\");\n            if (((pcVar5 != NULL) && (pcVar4 != NULL)) && (var_8h != NULL)) {\n                iVar8 = (*pcVar5)(hObject, 1000, &var_14h);\n                if (iVar8 == 0) {\n                    uVar7 = 0x25d;\ncode_r0x00406659:\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(hObject);\n                    return uVar7;\n                }\n                var_ch = var_14h >> 2;\n                pcVar5 = NULL;\n                if (var_ch != NULL) {\n                    do {\n                        (*_sym.imp.KERNEL32.dll_lstrcpyW)(&lpString1, L\"Unknown\");\n                        iVar3 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x410, 0, *(hObject + pcVar5 * 4));\n                        if ((iVar3 != 0) && (iVar8 = (*pcVar4)(iVar3, &var_1ch, 4, &var_14h),  iVar8 != 0)) {\n                            (*var_8h)(iVar3, var_1ch, &lpString1, 0x104);\n                        }\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n                        uVar7 = (*_sym.imp.USER32.dll_CharUpperW)(&lpString1);\n                        iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(uVar7, &lpString2);\n                        if (iVar3 == 0) {\n                            uVar7 = 1;\n                            iVar3 = hLibModule;\n                            goto code_r0x00406659;\n                        }\n                        pcVar5 = pcVar5 + 1;\n                    } while (pcVar5 < var_ch);\n                }\n                goto code_r0x00406702;\n            }\ncode_r0x004067ce:\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\n        }\ncode_r0x004065fe:\n        uVar7 = 0x25d;\n    }\n    else {\n        if (var_124h != 1) {\n            return 0x25f;\n        }\ncode_r0x00406702:\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(hObject);\n        if (var_124h == 1) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"Kernel32.DLL\");\n            if (iVar3 == 0) goto code_r0x004065fe;\n            hLibModule = iVar3;\n            pcVar5 = (*pcVar1)(iVar3, \"CreateToolhelp32Snapshot\");\n            var_18h = (*pcVar1)(iVar3, \"Process32FirstW\");\n            var_8h = (*pcVar1)(iVar3, \"Process32NextW\");\n            var_ch = (*pcVar1)(iVar3, \"Module32FirstW\");\n            var_20h = (*pcVar1)(iVar3, \"Module32NextW\");\n            if (((var_8h == NULL) || (var_18h == NULL)) ||\n               ((var_20h == NULL ||\n                (((var_ch == NULL || (pcVar5 == NULL)) || (hObject = (*pcVar5)(2, 0),  hObject == -1))))))\n            goto code_r0x004067ce;\n            var_568h = 0x22c;\n            iVar8 = (*var_18h)(hObject, &var_568h);\n            while (iVar8 != 0) {\n                iVar8 = (*pcVar5)(8, var_560h);\n                if (iVar8 == -1) {\n                    uVar7 = 0x25d;\ncode_r0x0040686c:\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\n                    return uVar7;\n                }\n                var_b98h = 0x428;\n                iVar6 = (*var_ch)(iVar8, &var_b98h);\n                while (iVar6 != 0) {\n                    iVar6 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(&var_b78h, &lpString2);\n                    if (iVar6 == 0) {\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar8);\n                        uVar7 = 1;\n                        goto code_r0x0040686c;\n                    }\n                    var_b98h = 0x428;\n                    iVar6 = (*var_20h)(iVar8, &var_b98h);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar8);\n                var_568h = 0x22c;\n                iVar8 = (*var_8h)(hObject, &var_568h);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(hLibModule);\n        uVar7 = 0;\n    }\n    return uVar7;\n}\n",
        "token_count": 1626
    },
    "004068fa": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.004068fa(uint param_1)\n\n{\n    code *pcVar1;\n    int16_t *piVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    bool bVar5;\n    \n    fcn.0040618f(0x4582d0, param_1);\n    piVar2 = fcn.00405ee2(0x4582d0);\n    if ((piVar2 == NULL) ||\n       ((fcn.004061be(piVar2),  pcVar1 = _sym.imp.KERNEL32.dll_lstrlenW,  (*0x473e28 & 0x80) != 0 &&\n        ((*piVar2 == 0 || (*piVar2 == 0x5c)))))) {\n        bVar5 = false;\n    }\n    else {\n        while (iVar4 = (*pcVar1)(0x4582d0),  piVar2 + -0x22c168 >> 1 < iVar4) {\n            puVar3 = fcn.0040645b(0x4582d0);\n            if ((puVar3 != NULL) && ((*puVar3 & 0x10) == 0)) {\n                return false;\n            }\n            fcn.004068ce(0x4582d0);\n        }\n        fcn.0040689f(0x4582d0);\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(0x4582d0);\n        bVar5 = iVar4 != -1;\n    }\n    return bVar5;\n}\n",
        "token_count": 346
    },
    "00406c13": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00406c13(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    uchar *puVar8;\n    int32_t unaff_retaddr;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n    if (unaff_retaddr != 0) {\n        fcn.00405fd9();\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetShortPathNameW)();\n        if (iVar2 == 0) {\n            return;\n        }\n        if (0x400 < iVar2) {\n            return;\n        }\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetShortPathNameW)();\n    pcVar1 = _sym.imp.KERNEL32.dll_WideCharToMultiByte;\n    if ((((iVar2 != 0) && (iVar2 < 0x401)) && (iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(),  iVar2 != 0)) &&\n       (iVar2 = (*pcVar1)(),  iVar2 != 0)) {\n        iVar2 = (*_sym.imp.USER32.dll_wsprintfA)();\n        fcn.00406982();\n        iVar3 = fcn.00405fd9();\n        if (iVar3 != -1) {\n            puVar4 = (*_sym.imp.KERNEL32.dll_GetFileSize)();\n            iVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n            if (((iVar3 != 0) && (iVar5 = (*_sym.imp.KERNEL32.dll_ReadFile)(),  iVar5 != 0)) && (puVar4 == 0x461930)) {\n                iVar5 = fcn.00405f3f(iVar3, \"[Rename]\\r\\n\");\n                if (iVar5 == 0) {\n                    iVar5 = iVar3 + 0x461930;\n                    (*_sym.imp.KERNEL32.dll_lstrcpyA)();\n                    puVar4 = 0x46193a;\n                    puVar8 = puVar4;\n                }\n                else {\n                    iVar5 = iVar5 + 10;\n                    puVar6 = fcn.00405f3f(iVar5, 0x40a914);\n                    puVar8 = puVar4;\n                    if (puVar6 != NULL) {\n                        puVar8 = iVar3 + 0x461930;\n                        puVar7 = puVar8 + iVar2;\n                        for (; puVar6 < puVar8; puVar8 = puVar8 + -1) {\n                            *puVar7 = *puVar8;\n                            puVar7 = puVar7 + -1;\n                        }\n                        puVar8 = puVar6 + (1 - iVar3);\n                    }\n                }\n                fcn.00405f95(puVar8 + iVar3, 0x45d528, iVar2);\n                (*_sym.imp.KERNEL32.dll_SetFilePointer)(0x40, 0, 0, 0);\n                (*_sym.imp.KERNEL32.dll_WriteFile)(iVar5, iVar3, puVar4 + iVar2, &stack0xffffff58, 0);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar3);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        }\n    }\n    return;\n}\n",
        "token_count": 754
    },
    "00406e11": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00406e11(int16_t *hFindFile, uint32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    int16_t *piVar7;\n    char16_t *pcVar8;\n    uint lpFindFileData;\n    uint var_230h;\n    uint var_28h;\n    int32_t var_ch;\n    int16_t *var_8h;\n    uint32_t var_4h;\n    \n    var_ch = fcn.004068fa(hFindFile);\n    if ((arg_ch & 8) == 0) {\n        uVar5 = arg_ch & 1;\n        var_4h = uVar5;\n        if ((uVar5 == 0) || ((var_ch != 0 && ((arg_ch & 2) != 0)))) {\n            fcn.0040618f(0x45d928, hFindFile);\n            pcVar1 = _sym.imp.KERNEL32.dll_lstrcatW;\n            if (uVar5 == 0) {\n                fcn.004068ce(hFindFile);\n            }\n            else {\n                (*_sym.imp.KERNEL32.dll_lstrcatW)(0x45d928, L\"\\\\*.*\");\n            }\n            if ((*hFindFile != 0) || (*0x45d928 == 0x5c)) {\n                (*pcVar1)(hFindFile, 0x4098a0);\n            }\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(hFindFile);\n            var_8h = hFindFile + iVar2;\n            piVar7 = 0x45d928;\n            iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(0x45d928, &lpFindFileData);\n            if (iVar2 != -1) {\n                do {\n                    puVar6 = &var_230h;\n                    piVar3 = fcn.00405e8e(puVar6, 0x3f);\n                    if ((*piVar3 != 0) && (var_28h != 0)) {\n                        puVar6 = &var_28h;\n                    }\n                    if ((*puVar6 != 0x2e) || ((*(puVar6 + 2) != 0 && ((*(puVar6 + 2) != 0x2e || (*(puVar6 + 1) != 0)))))\n                       ) {\n                        fcn.0040618f(var_8h, puVar6);\n                        if ((lpFindFileData & 0x10) == 0) {\n                            fcn.00406429(L\"Delete: DeleteFile(\\\"%s\\\")\", hFindFile);\n                            fcn.00405fb9(hFindFile);\n                            piVar7 = hFindFile;\n                            iVar4 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(hFindFile);\n                            if (iVar4 == 0) {\n                                if ((arg_ch & 4) == 0) {\n                                    fcn.00406429(L\"Delete: DeleteFile failed(\\\"%s\\\")\");\n                                    *0x473e88 = *0x473e88 + 1;\n                                }\n                                else {\n                                    fcn.00406429(L\"Delete: DeleteFile on Reboot(\\\"%s\\\")\");\n                                    fcn.00405107(0xfffffff1, hFindFile);\n                                    piVar7 = hFindFile;\n                                    fcn.00406dde();\n                                }\n                            }\n                            else {\n                                piVar7 = 0xfffffff2;\n                                fcn.00405107(0xfffffff2, hFindFile);\n                            }\n                        }\n                        else if ((arg_ch & 3) == 3) {\n                            piVar7 = hFindFile;\n                            fcn.00406e11(hFindFile, arg_ch);\n                        }\n                    }\n                    iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar2, &lpFindFileData, piVar7);\n                } while (iVar4 != 0);\n                (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n            }\n            if (var_4h != 0) {\n                var_8h[-1] = 0;\n            }\n        }\n        if (var_4h != 0) {\n            if (var_ch == 0) {\n                pcVar8 = L\"RMDir: RemoveDirectory invalid input(\\\"%s\\\")\";\n            }\n            else {\n                iVar2 = fcn.0040645b(hFindFile);\n                if (iVar2 == 0) {\n                    return;\n                }\n                fcn.0040689f(hFindFile);\n                fcn.00406429(L\"RMDir: RemoveDirectory(\\\"%s\\\")\", hFindFile);\n                fcn.00405fb9(hFindFile);\n                iVar2 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryW)(hFindFile);\n                if (iVar2 != 0) {\n                    fcn.00405107(0xffffffe5, hFindFile);\n                    return;\n                }\n                if ((arg_ch & 4) != 0) {\n                    fcn.00406429(L\"RMDir: RemoveDirectory on Reboot(\\\"%s\\\")\");\n                    fcn.00405107(0xfffffff1, hFindFile);\n                    fcn.00406dde(hFindFile, 0);\n                    return;\n                }\n                pcVar8 = L\"RMDir: RemoveDirectory failed(\\\"%s\\\")\";\n            }\n            fcn.00406429(pcVar8);\n            *0x473e88 = *0x473e88 + 1;\n        }\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(hFindFile);\n        *0x473e88 = *0x473e88 + (iVar2 == 0);\n    }\n    return;\n}\n",
        "token_count": 1317
    },
    "00407048": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00407048(uint lpFileName, uint32_t arg_ch, uint arg_10h, uint iMaxLength)\n\n{\n    ushort *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint lpString2;\n    uint32_t var_3ch;\n    uint32_t var_38h;\n    uint var_34h;\n    uchar var_30h;\n    uint var_2fh;\n    uint var_28h;\n    ushort var_24h;\n    uchar var_22h;\n    uint var_21h;\n    uint var_1ch;\n    ushort lDistanceToMove;\n    uint lpString1;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t hObject;\n    \n    var_ch = 0;\n    var_8h = 0;\n    hObject = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 0x80000000, 1, 0, 3, 0x80, 0);\n    pcVar2 = _sym.imp.KERNEL32.dll_ReadFile;\n    if (hObject == -1) {\n        fcn.00406429(L\"%s: failed opening file \\\"%s\\\"\\n\", L\"GetTTFNameString\", lpFileName);\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_ReadFile)(hObject, &var_34h, 0xc, &var_8h, 0);\n        _var_30h = CONCAT11(var_30h, var_2fh);\n        var_34h._0_2_ = CONCAT11(var_34h, var_34h._1_1_);\n        var_34h._2_2_ = CONCAT11(var_34h._2_1_, var_34h._3_1_);\n        if ((var_34h == 1) && (var_34h._2_2_ == 0)) {\n            iVar4 = 0;\n            if (_var_30h != 0) {\n                do {\n                    (*pcVar2)(hObject, &lpString2, 0x10, &var_8h, 0);\n                    (*_sym.imp.KERNEL32.dll_lstrcpynA)(&lpString1, &lpString2, 5);\n                    var_10h._0_1_ = 0;\n                    iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(\"name\", &lpString1);\n                    if (iVar3 == 0) {\n                        var_38h = CONCAT11(var_38h, var_38h._1_1_) << 0x10 | (var_38h >> 0x10 & 0xff) << 8 |\n                                  var_38h >> 0x18;\n                        var_3ch = CONCAT11(var_3ch, var_3ch._1_1_) << 0x10 | (var_3ch >> 0x10 & 0xff) << 8 |\n                                  var_3ch >> 0x18;\n                        (*_sym.imp.KERNEL32.dll_SetFilePointer)(hObject, var_3ch, 0, 0);\n                        (*pcVar2)(hObject, &var_1ch, 6, &var_8h, 0);\n                        var_1ch._2_2_ = CONCAT11(var_1ch._2_1_, var_1ch._3_1_);\n                        iVar4 = 0;\n                        lDistanceToMove = CONCAT11(lDistanceToMove, lDistanceToMove._1_1_);\n                        if (var_1ch._2_2_ != 0) goto code_r0x004071b4;\n                        break;\n                    }\n                    iVar4 = iVar4 + 1;\n                } while (iVar4 < _var_30h);\n            }\ncode_r0x004072a1:\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        }\n        else {\n            var_ch = 0;\n        }\n    }\n    return var_ch;\ncode_r0x004071b4:\n    (*pcVar2)(hObject, &var_28h, 0xc, &var_8h, 0);\n    _var_22h = CONCAT11(var_22h, var_21h);\n    var_28h._0_2_ = CONCAT11(var_28h, var_28h._1_1_);\n    var_24h = CONCAT11(var_24h, var_24h._1_1_);\n    var_21h._1_2_ = CONCAT11(var_21h._1_1_, var_21h._2_1_);\n    *NULL = CONCAT11(var_21h._3_1_, var_1ch);\n    if (((_var_22h != arg_ch) || (var_28h != 3)) || (var_24h != 0x409)) goto code_r0x00407218;\n    uVar5 = var_21h._1_2_ >> 1;\n    (*_sym.imp.KERNEL32.dll_SetFilePointer)(hObject, lDistanceToMove + *NULL + var_3ch, 0, 0);\n    var_ch = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, var_21h._1_2_ + 2);\n    (*pcVar2)(hObject, var_ch, var_21h._1_2_, &var_8h, 0);\n    iVar4 = var_ch;\n    iVar3 = 0;\n    if (uVar5 != 0) {\n        do {\n            puVar1 = var_ch + iVar3 * 2;\n            iVar3 = iVar3 + 1;\n            *puVar1 = CONCAT11(*puVar1, *(puVar1 + 1));\n        } while (iVar3 < uVar5);\n    }\n    *(var_ch + uVar5 * 2) = 0;\n    (*_sym.imp.KERNEL32.dll_lstrcpynW)(arg_10h, var_ch, iMaxLength);\n    var_ch = 1;\n    (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar4);\n    goto code_r0x004072a1;\ncode_r0x00407218:\n    iVar4 = iVar4 + 1;\n    if (var_1ch._2_2_ <= iVar4) goto code_r0x004072a1;\n    goto code_r0x004071b4;\n}\n",
        "token_count": 1443
    },
    "0040117d": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nvoid fcn.0040117d(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    uVar1 = *(param_1 * 0x4020 + 8 + *0x473de8);\n    if ((uVar1 & 2) != 0) {\n        uVar4 = param_1 + 1;\n        if (uVar4 < *0x473dec) {\n            puVar3 = uVar4 * 0x4020 + 8 + *0x473de8;\n            iVar5 = 0;\n            do {\n                uVar2 = *puVar3;\n                if ((uVar2 & 2) == 0) {\n                    if ((uVar2 & 4) == 0) {\n                        iVar6 = iVar5;\n                        if ((uVar2 & 0x10) == 0) {\n                            *puVar3 = (uVar2 ^ uVar1) & 1 ^ uVar2;\n                        }\n                    }\n                    else {\n                        iVar6 = iVar5 + -1;\n                        if (iVar5 == 0) {\n                            return;\n                        }\n                    }\n                }\n                else {\n                    iVar6 = iVar5 + 1;\n                }\n                uVar4 = uVar4 + 1;\n                puVar3 = puVar3 + 0x1008;\n                iVar5 = iVar6;\n            } while (uVar4 < *0x473dec);\n        }\n    }\n    return;\n}\n",
        "token_count": 361
    },
    "004012e8": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004012e8(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    bool bVar3;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = *0x473ddc + 0x94;\n    do {\n        uVar1 = 0;\n        if (*var_8h != 0) {\n            bVar3 = *0x473dec == 0;\n            if (*0x473dec != 0) {\n                puVar2 = *0x473de8 + 8;\n                do {\n                    if (((*puVar2 & 6) == 0) &&\n                       (((arg_8h == 0 || (*(arg_8h + uVar1 * 4) != 0)) &&\n                        ((puVar2[-1] & 1 << (var_4h & 0x1f)) != (*puVar2 & 1) << (var_4h & 0x1f))))) break;\n                    uVar1 = uVar1 + 1;\n                    puVar2 = puVar2 + 0x1008;\n                } while (uVar1 < *0x473dec);\n                bVar3 = uVar1 == *0x473dec;\n            }\n            if (bVar3) {\n                return var_4h;\n            }\n        }\n        var_4h = var_4h + 1;\n        var_8h = var_8h + 1;\n        if (0x1f < var_4h) {\n            return var_4h;\n        }\n    } while( true );\n}\n",
        "token_count": 387
    },
    "0040425f": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040425f(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint16_t *puVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    uint32_t *puVar9;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint16_t *var_ch;\n    uint var_8h;\n    code *var_4h;\n    \n    pcVar3 = _sym.imp.USER32.dll_SendMessageW;\n    var_8h = 0;\n    if (arg_ch == 0x110) {\n        iVar6 = *(arg_14h + 0x30);\n        if (iVar6 < 0) {\n            iVar6 = *(*0x46bda8 - (iVar6 * 4 + 4));\n        }\n        puVar4 = *0x473df8 + iVar6 * 2;\n        uVar1 = *puVar4;\n        puVar4 = puVar4 + 1;\n        *0x458274 = 0;\n        if ((uVar1 & 0x10) == 0) {\n            var_4h = fcn.004041b4;\n            var_ch = fcn.00404171(puVar4);\n            *0x438218 = 1;\n        }\n        else {\n            var_4h = fcn.0040421e;\n            var_ch = puVar4;\n        }\n        uVar8 = (~(*(arg_14h + 0x14) >> 5) | *(arg_14h + 0x14)) & 1;\n        fcn.00403ee9(arg_8h, 0x22, *(arg_14h + 0x34));\n        fcn.00403ee9(arg_8h, 0x23, *(arg_14h + 0x38));\n        (*_sym.imp.USER32.dll_CheckDlgButton)(arg_8h, (uVar8 == 0) + 0x40a, 1);\n        fcn.00403f2f(uVar8);\n        uVar5 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1000);\n        fcn.00403f42(uVar5);\n        pcVar3 = _sym.imp.USER32.dll_SendMessageW;\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar5, 0x45b, 1, 0);\n        iVar6 = *(*0x473ddc + 0x68);\n        if (iVar6 < 0) {\n            iVar6 = (*_sym.imp.USER32.dll_GetSysColor)(-iVar6);\n        }\n        (*pcVar3)(uVar5, 0x443, 0, iVar6);\n        (*pcVar3)(uVar5, 0x445, 0, 0x4010000);\n        *0x438208 = 0;\n        uVar7 = sub.KERNEL32.dll_lstrlenW(puVar4);\n        (*pcVar3)(uVar5, 0x435, 0, uVar7);\n        (*pcVar3)(uVar5, 0x449, uVar1, &var_ch);\n        *0x45827c = 0;\n        return 0;\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h >> 0x10 != 0) || (*0x45827c != 0)) || (puVar9 = *0x458270 + 0x14,  (*puVar9 & 0x20) == 0))\n        goto code_r0x004044f6;\n        uVar5 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x40a, 0xf0, 0, 0);\n        uVar8 = (*pcVar3)(uVar5);\n        *puVar9 = *puVar9 & 0xfffffffe | uVar8 & 1;\n        fcn.00403f2f(uVar8 & 1);\n        fcn.00403f0b();\n    }\n    if (arg_ch == 0x4e) {\n        uVar5 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1000);\n        if ((*(arg_14h + 8) == 0x70b) && (*(arg_14h + 0xc) == 0x201)) {\n            var_14h = *(arg_14h + 0x1c);\n            var_18h = *(arg_14h + 0x18);\n            var_10h = 0x463540;\n            if (var_14h - var_18h < 0x8010) {\n                (*pcVar3)(uVar5, 1099, 0, &var_18h);\n                pcVar2 = _sym.imp.USER32.dll_LoadCursorW;\n                uVar5 = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f02);\n                (*_sym.imp.USER32.dll_SetCursor)(uVar5);\n                (*_sym.imp.SHELL32.dll_ShellExecuteW)(arg_8h, L\"open\", var_10h, 0, 0, 1);\n                uVar5 = (*pcVar2)(0, 0x7f00);\n                (*_sym.imp.USER32.dll_SetCursor)(uVar5);\n            }\n        }\n        if ((*(arg_14h + 8) == 0x700) && (*(arg_14h + 0xc) == 0x100)) {\n            if (*(arg_14h + 0x10) == 0xd) {\n                (*pcVar3)(*0x473dd4, 0x111, 1, 0);\n            }\n            if (*(arg_14h + 0x10) == 0x1b) {\n                (*pcVar3)(*0x473dd4, 0x10, 0, 0);\n            }\n            return 1;\n        }\n    }\n    else if (arg_ch == 0x40b) {\n        *0x45827c = *0x45827c + 1;\n    }\ncode_r0x004044f6:\n    uVar5 = fcn.00403f74(arg_10h, arg_14h);\n    return uVar5;\n}\n",
        "token_count": 1465
    },
    "00405107": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405107(uint arg_8h, int32_t lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *0x46bd8c;\n    if (*0x46bd8c != 0) {\n        var_8h = *0x473eb4;\n        uVar4 = *0x473eb4 & 1;\n        if (uVar4 == 0) {\n            fcn.00406982(0x43c238, arg_8h);\n        }\n        iVar2 = sub.KERNEL32.dll_lstrlenW(0x43c238);\n        if (lpString2 != 0) {\n            iVar3 = sub.KERNEL32.dll_lstrlenW(lpString2);\n            if (0x800f < iVar3 + iVar2) {\n                return;\n            }\n            sub.KERNEL32.dll_lstrcatW(0x43c238, lpString2);\n        }\n        if ((var_8h & 4) == 0) {\n            (*_sym.imp.USER32.dll_SetWindowTextW)(*0x46bd98, 0x43c238);\n        }\n        pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n        if ((var_8h & 2) == 0) {\n            var_1ch = 0x43c238;\n            var_30h = 1;\n            var_2ch = (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1004, 0, 0);\n            var_2ch = var_2ch - uVar4;\n            var_28h = 0;\n            (*pcVar1)(var_4h, 0x104d - uVar4, 0, &var_30h);\n            (*pcVar1)(var_4h, 0x1013, var_2ch, 0);\n        }\n        if (uVar4 != 0) {\n            *(iVar2 * 2 + 0x43c238) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 528
    },
    "00407da2": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00407da2(uint32_t arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (*0x46213c == 0) {\n        uVar2 = 0;\n        do {\n            iVar3 = 8;\n            uVar1 = uVar2;\n            do {\n                uVar1 = uVar1 >> 1 ^ -((uVar1 & 1) != 0) & 0xedb88320;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            *(uVar2 * 4 + 0x462138) = uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0x100);\n    }\n    arg_8h = ~arg_8h;\n    if (arg_10h != 0) {\n        do {\n            arg_10h = arg_10h + -1;\n            arg_8h = arg_8h >> 8 ^ *(((*arg_ch ^ arg_8h) & 0xff) * 4 + 0x462138);\n            arg_ch = arg_ch + 1;\n        } while (arg_10h != 0);\n    }\n    return ~arg_8h;\n}\n",
        "token_count": 317
    },
    "004011ef": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004011ef(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = *0x473de8;\n    iVar5 = arg_8h * 0x4020 + *0x473de8;\n    var_4h = 0;\n    var_8h = 0;\n    if (((*(iVar5 + 8) & 2) != 0) && (arg_ch != 0)) {\n        *(iVar5 + 8) = *(iVar5 + 8) & 0xffffffbe;\n        arg_8h = arg_8h + 1;\n    }\n    if (arg_8h < *0x473dec) {\n        do {\n            puVar1 = arg_8h * 0x4020 + 8 + iVar2;\n            uVar4 = *puVar1;\n            uVar3 = arg_8h + 1;\n            if ((uVar4 & 2) != 0) {\n                uVar3 = fcn.004011ef(arg_8h, 1);\n                uVar4 = *puVar1;\n            }\n            if ((uVar4 & 4) != 0) {\n                if (var_4h == 0) {\n                    return uVar3;\n                }\n                if (var_8h != 0) {\n                    *(iVar5 + 8) = *(iVar5 + 8) | 0x40;\n                    return uVar3;\n                }\n                *(iVar5 + 8) = *(iVar5 + 8) & 0xffffff7f | 1;\n                return uVar3;\n            }\n            if ((uVar4 & 0x40) != 0) {\n                var_4h = var_4h + 1;\n            }\n            if ((uVar4 & 1) == 0) {\n                var_8h = var_8h + 1;\n            }\n            else {\n                var_4h = var_4h + 1;\n            }\n            arg_8h = uVar3;\n        } while (uVar3 < *0x473dec);\n    }\n    return 0;\n}\n",
        "token_count": 536
    },
    "0040330e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040330e(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_80h;\n    \n    if (arg_8h == 0) {\n        if (*0x420150 == 0) {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            if (*0x473e20 < uVar1) {\n                if (*0x473dd4 == 0) {\n                    *0x420150 = (*_sym.imp.USER32.dll_CreateDialogParamW)(*0x473dd8, 0x6f, 0, fcn.0040328f, 0);\n                    (*_sym.imp.USER32.dll_ShowWindow)(*0x420150, 5);\n                }\n                else if ((*0x473eb4 & 1) != 0) {\n                    uVar2 = fcn.00403273();\n                    (*_sym.imp.USER32.dll_wsprintfW)(&var_80h, L\"... %d%%\", uVar2);\n                    fcn.00405107(0, &var_80h);\n                }\n            }\n        }\n        else {\n            fcn.004064b9(0);\n        }\n    }\n    else {\n        if (*0x420150 != 0) {\n            (*_sym.imp.USER32.dll_DestroyWindow)(*0x420150);\n        }\n        *0x420150 = 0;\n    }\n    return;\n}\n",
        "token_count": 322
    },
    "00403f74": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403f74(uint hdc, uint hWnd)\n\n{\n    code *pcVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    \n    if ((in_EAX - 0x133U < 6) &&\n       (puVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(hWnd, 0xffffffeb),  pcVar1 = _sym.imp.USER32.dll_GetSysColor, \n       puVar2 != NULL)) {\n        uVar3 = *puVar2;\n        if ((*(puVar2 + 5) & 2) != 0) {\n            uVar3 = (*_sym.imp.USER32.dll_GetSysColor)(uVar3);\n        }\n        if ((*(puVar2 + 5) & 1) != 0) {\n            (*_sym.imp.GDI32.dll_SetTextColor)(hdc, uVar3);\n        }\n        (*_sym.imp.GDI32.dll_SetBkMode)(hdc, puVar2[4]);\n        var_8h = puVar2[1];\n        if ((*(puVar2 + 5) & 8) != 0) {\n            var_8h = (*pcVar1)(var_8h);\n        }\n        if ((*(puVar2 + 5) & 4) != 0) {\n            (*_sym.imp.GDI32.dll_SetBkColor)(hdc, var_8h);\n        }\n        if ((*(puVar2 + 5) & 0x10) != 0) {\n            var_ch = puVar2[2];\n            if (puVar2[3] != 0) {\n                (*_sym.imp.GDI32.dll_DeleteObject)(puVar2[3]);\n            }\n            uVar3 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            puVar2[3] = uVar3;\n        }\n        return puVar2[3];\n    }\n    return 0;\n}\n",
        "token_count": 454
    },
    "0040461c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.0040461c(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    iVar2 = *0x473de8;\n    iVar3 = *0x473dec;\n    if (*0x473dec != 0) {\n        do {\n            iVar3 = iVar3 + -1;\n            if ((*(iVar2 + 8) & 1) != 0) {\n                iVar1 = iVar1 + *(iVar2 + param_1 * 4);\n            }\n            iVar2 = iVar2 + 0x4020;\n        } while (iVar3 != 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 164
    },
    "004051da": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.004051da(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    int32_t iVar3;\n    int32_t iVar4;\n    char16_t *pcVar5;\n    \n    iVar4 = *0x473dec;\n    iVar3 = *0x473de8;\n    uVar1 = (*_sym.imp.ole32.dll_OleInitialize)(0);\n    *0x473eb8 = *0x473eb8 | uVar1;\n    fcn.00403f59(0);\n    if (iVar4 != 0) {\n        iVar3 = iVar3 + 0x18;\n        do {\n            iVar4 = iVar4 + -1;\n            if ((*(iVar3 + -0x10) & 1) == 0) {\n                fcn.00406429(L\"Skipping section: \\\"%s\\\"\", iVar3);\n            }\n            else {\n                pcVar5 = L\"Section: \\\"%s\\\"\";\n                fcn.00406429(L\"Section: \\\"%s\\\"\", iVar3);\n                iVar2 = fcn.00401392(pcVar5, unaff_ESI, *(iVar3 + -0xc));\n                if (iVar2 != 0) {\n                    *0x473e8c = *0x473e8c + 1;\n                    break;\n                }\n            }\n            iVar3 = iVar3 + 0x4020;\n        } while (iVar4 != 0);\n    }\n    fcn.00403f59(0x404);\n    (*_sym.imp.ole32.dll_OleUninitialize)();\n    return *0x473e8c;\n}\n",
        "token_count": 364
    },
    "00401392": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint fcn.00401392(int32_t param_1)\n\n{\n    int32_t *hWndChildAfter;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_retaddr;\n    \n    while ((-1 < param_1 && (hWndChildAfter = param_1 * 0x1c + *0x473df0,  *hWndChildAfter != 1))) {\n        iVar1 = fcn.00401593(hWndChildAfter);\n        if (iVar1 == 0x7fffffff) {\n            return 0x7fffffff;\n        }\n        iVar1 = fcn.00401373();\n        if (iVar1 == 0) {\n            iVar2 = 1;\n            iVar1 = param_1 + 1;\n        }\n        else {\n            iVar1 = iVar1 + -1;\n            iVar2 = iVar1 - param_1;\n        }\n        param_1 = iVar1;\n        if (unaff_retaddr != 0) {\n            *0x46bdac = *0x46bdac + iVar2;\n            uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*0x46bdac, 30000, *0x46bda4, 0);\n            (*_sym.imp.USER32.dll_SendMessageW)(0x4013b1, 0x402, uVar3);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 318
    },
    "0040328f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040328f(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    char16_t *pcVar2;\n    uint var_80h;\n    \n    if (arg_ch == 0x110) {\n        (*_sym.imp.USER32.dll_SetTimer)(arg_8h, 1, 0xfa, 0);\n        arg_ch = 0x113;\n    }\n    if (arg_ch == 0x113) {\n        uVar1 = fcn.00403273();\n        pcVar2 = L\"unpacking data: %d%%\";\n        if (*0x473ddc == 0) {\n            pcVar2 = L\"verifying installer: %d%%\";\n        }\n        (*_sym.imp.USER32.dll_wsprintfW)(&var_80h, pcVar2, uVar1);\n        (*_sym.imp.USER32.dll_SetWindowTextW)(arg_8h, &var_80h);\n        sub.USER32.dll_SetDlgItemTextW(arg_8h, 0x406, &var_80h);\n    }\n    return 0;\n}\n",
        "token_count": 247
    },
    "00403577": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403577(int32_t arg_8h, uint hFile, int32_t arg_10h, int32_t lpNumberOfBytesWritten)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_8h;\n    int32_t nNumberOfBytesToWrite;\n    \n    if (-1 < arg_8h) {\n        *0x4301e4 = arg_8h + *0x473e18;\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x40c014, *0x4301e4, 0, 0);\n    }\n    iVar2 = fcn.004033f9(4);\n    pcVar1 = _sym.imp.KERNEL32.dll_ReadFile;\n    if (iVar2 < 0) {\n        return iVar2;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(*0x40c014, &arg_8h, 4, &nNumberOfBytesToWrite, 0);\n    if ((iVar2 != 0) && (nNumberOfBytesToWrite == 4)) {\n        *0x4301e4 = *0x4301e4 + 4;\n        iVar2 = fcn.004033f9(arg_8h);\n        if (iVar2 < 0) {\n            return iVar2;\n        }\n        if (arg_10h == 0) {\n            while( true ) {\n                if (arg_8h < 1) {\n                    return iVar2;\n                }\n                iVar4 = 0x4000;\n                if (arg_8h < 0x4000) {\n                    iVar4 = arg_8h;\n                }\n                iVar3 = (*pcVar1)(*0x40c014, 0x4301e8, iVar4, &nNumberOfBytesToWrite, 0);\n                if ((iVar3 == 0) || (iVar4 != nNumberOfBytesToWrite)) break;\n                iVar3 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                                  (hFile, 0x4301e8, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n                if ((iVar3 == 0) || (lpNumberOfBytesWritten != iVar4)) {\n                    return -2;\n                }\n                iVar2 = iVar2 + nNumberOfBytesToWrite;\n                arg_8h = arg_8h - nNumberOfBytesToWrite;\n                *0x4301e4 = *0x4301e4 + nNumberOfBytesToWrite;\n            }\n        }\n        else {\n            iVar2 = arg_8h;\n            if (lpNumberOfBytesWritten <= arg_8h) {\n                iVar2 = lpNumberOfBytesWritten;\n            }\n            iVar2 = (*pcVar1)(*0x40c014, arg_10h, iVar2, &nNumberOfBytesToWrite, 0);\n            if (iVar2 != 0) {\n                *0x4301e4 = *0x4301e4 + nNumberOfBytesToWrite;\n                return nNumberOfBytesToWrite;\n            }\n        }\n    }\n    return -3;\n}\n",
        "token_count": 695
    },
    "00403971": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403971(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    while( true ) {\n        uVar1 = *arg_8h;\n        uVar2 = *arg_ch;\n        arg_8h = arg_8h + 1;\n        arg_ch = arg_ch + 1;\n        arg_10h = arg_10h + -1;\n        if (uVar1 >= uVar2 && uVar1 != uVar2) {\n            iVar3 = 1;\n            goto code_r0x004039ab;\n        }\n        if (uVar1 < uVar2) break;\n        if (((uVar1 == 0) || (uVar2 == 0)) || (arg_10h == 0)) goto code_r0x004039ab;\n    }\n    iVar3 = -1;\ncode_r0x004039ab:\n    if (((arg_10h != 0) && (iVar3 == 0)) && (uVar1 != uVar2)) {\n        iVar3 = (uVar1 != 0) * 2 + -1;\n    }\n    return iVar3;\n}\n",
        "token_count": 296
    },
    "00403f0b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403f0b(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = *0x43821c;\n    if (*0x473e8c == 0) {\n        uVar1 = *0x43822c;\n    }\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0xf4, 1, 1);\n    return;\n}\n",
        "token_count": 91
    },
    "0040410b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040410b(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (arg_ch == 1) {\n        fcn.00405e0e(0x3fb, arg_14h);\n        (*pcVar1)(arg_8h, 0x467, 1, arg_14h);\n    }\n    if (arg_ch == 2) {\n        iVar2 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListW)(arg_10h, arg_14h);\n        if ((iVar2 == 0) || (iVar2 = fcn.00401414(7),  iVar2 != 0)) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 1;\n        }\n        (*pcVar1)(arg_8h, 0x465, 0, uVar3);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 258
    },
    "004041b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004041b4(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    \n    if (*0x458274 == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_ch, *0x438208 + arg_8h, arg_10h);\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n        *0x438208 = *0x438208 + iVar1;\n        *arg_14h = iVar1;\n        if (((0 < arg_10h) && (iVar1 == 0)) && (*0x438218 != 0)) {\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(arg_8h);\n            *0x458274 = 1;\n        }\n    }\n    else {\n        *arg_14h = 0;\n    }\n    return 0;\n}\n",
        "token_count": 221
    },
    "004049e7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004049e7(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_38h;\n    uint var_34h;\n    uint var_14h;\n    int32_t lpPoint;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    var_34h = (*_sym.imp.USER32.dll_SendMessageW)(arg_8h, 0x110a, 9, 0);\n    if (arg_ch != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n        lpPoint = uVar2;\n        var_ch = uVar2 >> 0x10;\n        (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &lpPoint);\n        (*pcVar1)(arg_8h, 0x1111, 0, &lpPoint);\n        var_34h = var_4h;\n        if ((var_8h & 0x66) == 0) {\n            return 0xffffffff;\n        }\n    }\n    var_38h = 4;\n    (*pcVar1)(arg_8h, 0x113e, 0, &var_38h);\n    return var_14h;\n}\n",
        "token_count": 321
    },
    "00405e2a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405e2a(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_2 & 0x1fffff;\n    if ((*0x473ea0 == 0) || (param_2 >> 0x15 == 0)) {\n        if (*0x473ea8 != 0) {\n            uVar1 = uVar1 ^ 0x180000;\n        }\n        *0x40c034 = *0x473dd4;\n        *0x40c038 = *0x473dd8;\n        *0x40c03c = param_1;\n        *0x40c040 = 0x46bdc0;\n        *0x40c044 = uVar1;\n        (*_sym.imp.USER32.dll_MessageBoxIndirectW)(0x40c030);\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "00405ee2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint16_t * fcn.00405ee2(int16_t *param_1)\n\n{\n    code *pcVar1;\n    int16_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_CharNextW;\n    piVar2 = (*_sym.imp.USER32.dll_CharNextW)(param_1);\n    uVar3 = (*pcVar1)(piVar2);\n    if (((*param_1 == 0) || (*piVar2 != 0x3a)) || (piVar2[1] != 0x5c)) {\n        if ((*param_1 == 0x5c) && (param_1[1] == 0x5c)) {\n            iVar4 = 2;\n            do {\n                iVar4 = iVar4 + -1;\n                piVar2 = fcn.00405e8e();\n                if (*piVar2 == 0) goto code_r0x00405f37;\n                piVar2 = piVar2 + 1;\n            } while (iVar4 != 0);\n        }\n        else {\ncode_r0x00405f37:\n            piVar2 = NULL;\n        }\n    }\n    else {\n        piVar2 = (*pcVar1)(uVar3);\n    }\n    return piVar2;\n}\n",
        "token_count": 295
    },
    "00405f95": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405f95(uchar *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    if (0 < arg_10h) {\n        arg_ch = arg_ch - arg_8h;\n        do {\n            arg_10h = arg_10h + -1;\n            *arg_8h = arg_8h[arg_ch];\n            arg_8h = arg_8h + 1;\n        } while (0 < arg_10h);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "0040605c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040605c(uint hKey, uint lpcbData, uint lpValueName, ushort *lpType, int32_t samDesired)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = lpType;\n    *lpType = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(hKey, lpcbData, 0, -(samDesired != 0) & 0x100 | 0x20019, &samDesired)\n    ;\n    if (iVar2 == 0) {\n        lpcbData = 0x4008;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(samDesired, lpValueName, 0, &lpType, puVar1, &lpcbData);\n        if ((iVar2 != 0) || ((lpType != 0x1 && (lpType != 0x2)))) {\n            *puVar1 = 0;\n        }\n        puVar1[0x2003] = 0;\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(samDesired);\n    }\n    return;\n}\n",
        "token_count": 267
    },
    "004061be": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004061be(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    uint16_t *arg_8h;\n    uint16_t *arg_ch;\n    \n    if ((((*param_1 == 0x5c) && (param_1[1] == 0x5c)) && (param_1[2] == 0x3f)) && (param_1[3] == 0x5c)) {\n        param_1 = param_1 + 4;\n    }\n    if ((*param_1 != 0) && (iVar3 = fcn.00405ead(param_1),  iVar3 != 0)) {\n        param_1 = param_1 + 2;\n    }\n    pcVar2 = _sym.imp.USER32.dll_CharNextW;\n    uVar1 = *param_1;\n    arg_ch = param_1;\n    arg_8h = param_1;\n    while (uVar1 != 0) {\n        if ((0x1f < uVar1) && (piVar4 = fcn.00405e8e(L\"*?|<>/\\\":\", uVar1),  *piVar4 == 0)) {\n            iVar3 = (*pcVar2)(arg_ch);\n            fcn.00405f95(arg_8h, arg_ch, iVar3 - arg_ch >> 1);\n            arg_8h = (*pcVar2)(arg_8h);\n        }\n        arg_ch = (*pcVar2)(arg_ch);\n        uVar1 = *arg_ch;\n    }\n    *arg_8h = 0;\n    while( true ) {\n        arg_8h = (*_sym.imp.USER32.dll_CharPrevW)(param_1, arg_8h);\n        if ((*arg_8h != 0x20) && (*arg_8h != 0x5c)) break;\n        *arg_8h = 0;\n        if (arg_8h <= param_1) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 472
    },
    "004063aa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004063aa(int32_t lpString1, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    int32_t ARG_0;\n    \n    ARG_0 = lpString1;\n    arg_ch = arg_ch / 3;\n    uVar2 = 0;\n    bVar1 = arg_ch < arg_14h;\n    if (bVar1) {\n        arg_14h = arg_ch - 1;\n    }\n    if (arg_14h != 0) {\n        do {\n            (*_sym.imp.USER32.dll_wsprintfW)(ARG_0, L\"%02x%c\", *(uVar2 + arg_10h), -(uVar2 != arg_14h - 1) & 0x20);\n            ARG_0 = ARG_0 + 6;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_14h);\n    }\n    if (bVar1) {\n        (*_sym.imp.KERNEL32.dll_lstrcatW)(lpString1, 0x40a83c);\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "00406982": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406982(uint16_t *param_1, int32_t param_2, uint param_3, uint param_4, int32_t param_5, uint param_6, \n                 uint param_7, int32_t param_8)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint16_t *puVar7;\n    uint16_t *lpType;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t unaff_retaddr;\n    \n    puVar7 = param_1;\n    iVar5 = param_2;\n    if (param_2 < 0) {\n        iVar5 = *(*0x46bda8 - (param_2 * 4 + 4));\n    }\n    puVar1 = *0x473df8 + iVar5 * 2;\n    lpType = 0x463540;\n    if ((0x46353f < param_1) && (param_1 + -0x231aa0 >> 1 < 0x4008)) {\n        param_1 = NULL;\n        lpType = puVar7;\n    }\n    uVar2 = *puVar1;\n    do {\n        if ((uVar2 == 0) || (0x4007 < (lpType + -0x231aa0 & 0xfffffffe))) {\n            *lpType = 0;\n            if (param_1 != NULL) {\n                fcn.0040618f(param_1, 0x463540);\n            }\n            return;\n        }\n        puVar7 = puVar1 + 1;\n        if (((uVar2 & 0xe000) == 0) || (uVar2 < 0xe001)) {\n            if (uVar2 == 0xe000) {\n                *lpType = *puVar7;\n                lpType = lpType + 1;\n                puVar7 = puVar1 + 2;\n            }\n            else {\n                *lpType = uVar2;\n                lpType = lpType + 1;\n            }\n        }\n        else {\n            uVar3 = *puVar7;\n            uVar4 = uVar3;\n            uVar6 = uVar4 & 0xff;\n            uVar8 = uVar4 & 0x7fff;\n            puVar7 = puVar1 + 2;\n            if (uVar2 == 0xe002) {\n                iVar9 = 2;\n                iVar5 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n                if ((((iVar5 < 0) && (iVar5 != 0x5a04)) && (param_5 != 0x23)) && (param_5 != 0x2e)) {\n                    param_8 = 0;\n                }\n                else {\n                    param_8 = 1;\n                }\n                if (*0x473e84 != 0) {\n                    iVar9 = 4;\n                }\n                if (uVar6 < '\\0') {\n                    fcn.0040605c(0x80000002, L\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\", \n                                 *0x473df8 + (uVar4 & 0x3f) * 2, lpType, uVar4 & 0x40);\n                    if (*lpType == 0) {\n                        fcn.00406982(lpType, unaff_retaddr);\n                        goto code_r0x00406b53;\n                    }\ncode_r0x00406b59:\n                    if (unaff_retaddr == 0x1a) {\n                        (*_sym.imp.KERNEL32.dll_lstrcatW)(lpType, L\"\\\\Microsoft\\\\Internet Explorer\\\\Quick Launch\");\n                    }\n                }\n                else {\n                    if (uVar6 == 0x25) {\n                        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(lpType, 0x2004);\n                    }\n                    else {\n                        if (uVar6 == 0x24) {\n                            (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(lpType, 0x2004);\n                            iVar9 = 0;\n                        }\n                        while ((iVar9 != 0 &&\n                               (((iVar9 = iVar9 + -1,  *0x473dd0 == NULL || (param_8 == 0)) ||\n                                (iVar5 = (**0x473dd0)(*0x473dd4, (&param_2)[iVar9], 0, 0, lpType),  iVar5 != 0))))) {\n                            iVar5 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderLocation)\n                                              (*0x473dd4, (&param_2)[iVar9], &param_1);\n                            if (iVar5 == 0) {\n                                iVar5 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListW)(param_1, lpType);\n                                (*_sym.imp.ole32.dll_CoTaskMemFree)(uVar3 >> 8);\n                                if (iVar5 != 0) break;\n                            }\n                            *lpType = 0;\n                        }\n                    }\ncode_r0x00406b53:\n                    if (*lpType != 0) goto code_r0x00406b59;\n                }\ncode_r0x00406ba4:\n                fcn.004061be(lpType);\n            }\n            else if (uVar2 == 0xe001) {\n                if (uVar8 == 0x1d) {\n                    fcn.004060d6(lpType, *0x473dd4);\n                }\n                else {\n                    fcn.0040618f(lpType, uVar8 * 0x4008 + 0x474000);\n                }\n                if (uVar8 - 0x15 < 7) goto code_r0x00406ba4;\n            }\n            else if (uVar2 == 0xe003) {\n                fcn.00406982(lpType, -1 - uVar8);\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpType);\n            lpType = lpType + iVar5;\n        }\n        uVar2 = *puVar7;\n        puVar1 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1384
    },
    "004072b6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004072b6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_114h;\n    uint var_104h;\n    uint lpString1;\n    uint var_4h;\n    \n    iVar2 = fcn.00407048(arg_8h, 5, &var_114h, 0x80);\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcpynW;\n    if (iVar2 == 1) {\n        puVar4 = &var_114h;\n        (*_sym.imp.KERNEL32.dll_lstrcpynW)(&lpString1, puVar4, 9);\n        var_4h._0_2_ = 0;\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(&lpString1, L\"Version \");\n        if (iVar3 == 0) {\n            puVar4 = &var_104h;\n        }\n        (*pcVar1)(arg_ch, puVar4, arg_10h);\n    }\n    return iVar2;\n}\n",
        "token_count": 279
    },
    "004075a7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004075a7(uint8_t *arg_8h, int32_t arg_ch, char *arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    char *pcVar3;\n    \n    if ((arg_ch + 2 < 0) || (0x3fffffff < (arg_ch + 2) / 3)) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        pcVar3 = arg_10h;\n        if (2 < arg_ch) {\n            iVar1 = (arg_ch - 3U) / 3 + 1;\n            arg_ch = arg_ch + iVar1 * -3;\n            do {\n                *pcVar3 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[*arg_8h >> 2];\n                pcVar3[1] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"\n                            [(arg_8h[1] >> 4) + (*arg_8h & 3) * 0x10];\n                pcVar3[2] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"\n                            [(arg_8h[1] & 0xf) * 4 + (arg_8h[2] >> 6)];\n                pcVar3[3] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[arg_8h[2] & 0x3f];\n                pcVar3 = pcVar3 + 4;\n                arg_8h = arg_8h + 3;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        if (arg_ch != 0) {\n            *pcVar3 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[*arg_8h >> 2];\n            iVar1 = (*arg_8h & 3) * 0x10;\n            if (arg_ch < 2) {\n                pcVar3[1] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[iVar1];\n                pcVar3[2] = '=';\n            }\n            else {\n                pcVar3[1] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[(arg_8h[1] >> 4) + iVar1]\n                ;\n                pcVar3[2] = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[(arg_8h[1] & 0xf) * 4];\n            }\n            pcVar3[3] = '=';\n            pcVar3 = pcVar3 + 4;\n        }\n        if (arg_14h != NULL) {\n            *arg_14h = pcVar3 - arg_10h;\n        }\n        *pcVar3 = '\\0';\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 609
    },
    "004076b2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004076b2(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t arg_10h;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA;\n    arg_10h = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h);\n    var_4h = 0;\n    var_8h = arg_10h;\n    iVar2 = fcn.0040735e(arg_10h * 2 + 0x24);\n    uVar3 = fcn.00407da2(0, arg_8h, arg_10h);\n    (*_sym.imp.USER32.dll_wsprintfA)(iVar2, \"#%u\\n\", uVar3);\n    fcn.0040757c(arg_8h, arg_10h);\n    iVar4 = (*pcVar1)(iVar2);\n    fcn.004075a7(arg_8h, arg_10h, iVar2 + iVar4, &var_8h);\n    var_8h = iVar4 + var_8h;\n    uVar3 = fcn.004073d9(\"stat.eliang.com\", \"/cstat.php\", iVar2, var_8h, &var_4h, &var_8h, 0x50, 2000);\n    if (var_4h != 0) {\n        fcn.0040737e(var_4h);\n    }\n    if (iVar2 != 0) {\n        fcn.0040737e(iVar2);\n    }\n    return uVar3;\n}\n",
        "token_count": 390
    },
    "0040421e": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040421e(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    \n    arg_10h = arg_10h >> 1;\n    if (arg_10h == 0) {\n        arg_10h = 1;\n    }\n    (*_sym.imp.KERNEL32.dll_lstrcpynW)(arg_ch, arg_8h + *0x438208 * 2, arg_10h);\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_ch);\n    *0x438208 = *0x438208 + iVar1;\n    *arg_14h = iVar1 * 2;\n    return 0;\n}\n",
        "token_count": 177
    },
    "0040464b": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl fcn.0040464b(uint *arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    ushort *puVar7;\n    uint *puVar8;\n    uint *puVar9;\n    uint *var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint var_3ch;\n    uint var_38h;\n    code *var_34h;\n    uint *var_30h;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    code *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar4 = _sym.imp.USER32.dll_GetDlgItem;\n    var_20h = *0x458270;\n    var_4h = *(*0x458270 + 0x38);\n    puVar8 = *(*0x458270 + 0x3c) * 0x4008 + 0x474000;\n    if (arg_ch == 0x40b) {\n        fcn.00405e0e(0x3fb, puVar8);\n        fcn.004061be(puVar8);\n        fcn.0040401e();\n        iVar2 = (*pcVar4)(arg_8h, 0x3f0);\n        if (iVar2 == 0) goto code_r0x004049d2;\n        *0x462538 = (*_sym.imp.USER32.dll_IsDlgButtonChecked)(arg_8h, 0x3f0);\n    }\n    if (arg_ch == 0x110) {\n        var_8h = (*pcVar4)(arg_8h, 0x3fb);\n        iVar1 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n        if (iVar1 < 0) {\n            uVar3 = (*pcVar4)(arg_8h, 0x3f0);\n            fcn.00403ee9(arg_8h, 8, 0xffffffe0);\n            (*_sym.imp.USER32.dll_ShowWindow)(uVar3, 8);\n        }\n        iVar2 = fcn.00405ead(puVar8);\n        if ((iVar2 != 0) && (iVar2 = fcn.00405ee2(puVar8),  iVar2 == 0)) {\n            fcn.0040689f(puVar8);\n        }\n        *0x46bd88 = arg_8h;\n        (*_sym.imp.USER32.dll_SetWindowTextW)(var_8h, puVar8);\n        var_38h = *(arg_14h + 0x34);\n        var_3ch = 1;\n        var_40h = arg_8h;\n        var_44h = 0x404738;\n        fcn.00403ee9();\n        var_44h = *(arg_14h + 0x30);\n        var_48h = 0x14;\n        fcn.00403ee9(arg_8h);\n        fcn.00403f42(var_8h);\n        pcVar4 = fcn.00406482(7);\n        if (pcVar4 == NULL) goto code_r0x004049d2;\n        (*pcVar4)(var_8h, 1);\n    }\n    iVar2 = var_4h;\n    if (arg_ch == 0x111) {\n        if ((arg_10h & 0xffff) == 0x3fb) {\n            if (arg_10h >> 0x10 != 0x300) goto code_r0x004049d2;\n            arg_ch = 0x40f;\n        }\n        if ((arg_10h & 0xffff) == 0x3e9) {\n            puVar9 = &fcn.0040464b::var_44h;\n            for (iVar6 = 7; iVar6 != 0; iVar6 = iVar6 + -1) {\n                *puVar9 = 0;\n                puVar9 = puVar9 + 1;\n            }\n            var_48h = arg_8h;\n            var_40h = 0x448250;\n            var_34h = fcn.0040410b;\n            var_30h = puVar8;\n            var_3ch = fcn.00406982(0x438230, iVar2);\n            var_38h = 0x41;\n            iVar2 = (*_sym.imp.SHELL32.dll_SHBrowseForFolderW)(&fcn.0040464b::var_48h);\n            if (iVar2 == 0) {\n                arg_ch = 0x40f;\n            }\n            else {\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar2);\n                var_48h = puVar8;\n                fcn.0040689f();\n                if ((*(*0x473ddc + 0x11c) != 0) && (puVar8 == 0x4c80a8)) {\n                    uVar3 = 0;\n                    fcn.00406982(0, *(*0x473ddc + 0x11c));\n                    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(0x463540, 0x448250);\n                    if (iVar2 != 0) {\n                        var_48h = puVar8;\n                        sub.KERNEL32.dll_lstrcatW(uVar3, 0x463540);\n                    }\n                }\n                *0x438214 = *0x438214 + 1;\n                sub.USER32.dll_SetDlgItemTextW(arg_8h, 0x3fb, puVar8);\n            }\n        }\n    }\n    if ((arg_ch == 0x40f) || (arg_ch == 0x405)) {\n        var_4h = 0;\n        var_8h = 0;\n        fcn.00405e0e(0x3fb, puVar8);\n        iVar2 = fcn.004068fa(puVar8);\n        if (iVar2 == 0) {\n            var_4h = 1;\n        }\n        fcn.0040618f(0x444248, puVar8);\n        puVar7 = NULL;\n        var_3ch = 0;\n        var_ch = fcn.00406482();\n        if (var_ch != NULL) {\n            do {\n                var_40h = &fcn.0040464b::var_1ch;\n                var_44h = &fcn.0040464b::var_14h;\n                var_48h = &fcn.0040464b::var_28h;\n                iVar2 = (*var_ch)(0x444248);\n                if (iVar2 != 0) {\n                    var_8h = 1;\n                    puVar8 = var_28h >> 10 | var_24h << 0x16;\n                    goto code_r0x0040493e;\n                }\n                if (puVar7 != NULL) {\n                    *puVar7 = 0;\n                }\n                var_3ch = 0x444248;\n                var_40h = 0x4048ba;\n                puVar7 = fcn.004068ce();\n                *puVar7 = 0;\n                puVar7 = puVar7 + -1;\n                *puVar7 = 0x5c;\n            } while (puVar7 != 0x444248);\n        }\n        var_44h = 0x444248;\n        var_48h = 0x4048d4;\n        var_40h = puVar8;\n        fcn.0040618f();\n        var_48h = 0x444248;\n        puVar7 = fcn.00405ee2();\n        if (puVar7 != NULL) {\n            *puVar7 = 0;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceW)\n                          (0x444248, &fcn.0040464b::var_10h, &fcn.0040464b::var_18h, &fcn.0040464b::var_ch, \n                           &fcn.0040464b::var_24h);\n        puVar8 = arg_8h;\n        if (iVar2 != 0) {\n            var_44h = var_10h * var_18h;\n            var_3ch = 0x400;\n            var_40h = var_ch;\n            var_48h = 0x404913;\n            puVar8 = (*_sym.imp.KERNEL32.dll_MulDiv)();\n            var_8h = 1;\n        }\ncode_r0x0040493e:\n        puVar9 = 0x5;\n        var_40h = 0x404945;\n        puVar5 = fcn.0040461c();\n        if ((var_8h != 0) && (puVar8 < puVar5)) {\n            var_4h = 2;\n        }\n        if (*(*0x46bda8 + 0x10) != 0) {\n            var_40h = 0xfffffffb;\n            var_44h = 0x3ff;\n            var_48h = 0x40496c;\n            fcn.00404553(0x3ff, 0xfffffffb);\n            if (var_8h == 0) {\n                var_48h = 0x40a384;\n                sub.USER32.dll_SetDlgItemTextW(arg_8h, 0x400);\n                puVar9 = arg_8h;\n            }\n            else {\n                var_48h = 0xfffffffc;\n                puVar9 = 0x40497b;\n                fcn.00404553(0x40497b, 0xfffffffc);\n            }\n        }\n        *0x473ea4 = var_4h;\n        if (var_4h == 0) {\n            puVar9 = 0x7;\n            var_4h = fcn.00401414();\n        }\n        if ((*(var_20h + 0x14) & 0x400) != 0) {\n            var_4h = 0;\n        }\n        fcn.00403f2f(var_4h == 0, puVar9);\n        if ((var_4h == 0) && (*0x438214 == 0)) {\n            fcn.00403f0b();\n        }\n        *0x438214 = 0;\n    }\ncode_r0x004049d2:\n    fcn.00403f74(arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 2474
    },
    "004060ef": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004060ef(uint16_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar2 = 10;\n    var_8h = 1;\n    uVar6 = 0x39;\n    if (*arg_8h == 0x2d) {\n        arg_8h = arg_8h + 1;\n        var_8h = -1;\n    }\n    puVar3 = arg_8h;\n    if (*arg_8h == 0x30) {\n        puVar3 = arg_8h + 1;\n        uVar1 = *puVar3;\n        if ((0x2f < uVar1) && (uVar1 < 0x38)) {\n            uVar2 = 8;\n            uVar6 = 0x37;\n        }\n        if ((uVar1 & 0xffdf) == 0x58) {\n            uVar2 = 0x10;\n            puVar3 = arg_8h + 2;\n        }\n    }\n    do {\n        uVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if ((uVar4 < 0x30) || (uVar6 < uVar4)) {\n            if ((uVar2 != 0x10) || (((uVar4 & 0xffffffdf) < 0x41 || (0x46 < (uVar4 & 0xffffffdf))))) {\n                return var_8h * var_4h;\n            }\n            iVar5 = (uVar4 & 7) + 9;\n        }\n        else {\n            iVar5 = uVar4 - 0x30;\n        }\n        var_4h = uVar2 * var_4h + iVar5;\n    } while( true );\n}\n",
        "token_count": 471
    },
    "0040888c": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint * fcn.0040888c(uint *param_1, uchar param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    \n    if (param_3 != 0) {\n        puVar2 = param_1;\n        for (uVar1 = param_3 >> 2; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *puVar2 = CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            puVar2 = puVar2 + 1;\n        }\n        for (param_3 = param_3 & 3; param_3 != 0; param_3 = param_3 - 1) {\n            *puVar2 = param_2;\n            puVar2 = puVar2 + 1;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 207
    },
    "00407935": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00407935(uchar *arg_8h)\n\n{\n    code *pcVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint lpBuffer;\n    uint var_78h;\n    uint32_t var_74h;\n    int32_t var_70h;\n    uint lpSystemInfo;\n    uint var_38h;\n    int32_t var_28h;\n    int32_t lpFrequency;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint hKey;\n    int32_t var_4h;\n    \n    lpSystemInfo = 0;\n    puVar5 = &var_38h;\n    for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    var_4h = 0;\n    lpBuffer = 0;\n    fcn.0040888c(&var_78h, 0, 0x3c);\n    puVar2 = arg_8h;\n    hKey = 0;\n    *arg_8h = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemInfo)(&lpSystemInfo);\n    var_10h = var_28h;\n    if (0 < var_28h) {\n        lpBuffer = 0x40;\n        iVar4 = (*_sym.imp.KERNEL32.dll_GlobalMemoryStatusEx)(&lpBuffer);\n        if (iVar4 != 0) {\n            var_ch = var_74h >> 0x14 | var_70h << 0xc;\n            iVar4 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)\n                              (0x80000002, L\"HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor\\\\0\", 0, 0x20019, &hKey);\n            if (iVar4 == 0) {\n                arg_8h = 0x4;\n                (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, L\"~MHz\", 0, 0, &var_4h, &arg_8h);\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n            }\n            if (var_4h < 1) {\n                iVar4 = (*_sym.imp.KERNEL32.dll_QueryPerformanceFrequency)(&lpFrequency);\n                if (iVar4 == 0) {\n                    return puVar2;\n                }\n                var_4h = lpFrequency / 1000000;\n                if (var_4h < 1) {\n                    return puVar2;\n                }\n            }\n            pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n            iVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(1);\n            arg_8h = iVar4 << 0x10;\n            uVar3 = (*pcVar1)(0);\n            (*_sym.imp.USER32.dll_wsprintfA)(puVar2, \"%d,%d,%d,%u\", var_10h, var_4h, var_ch, uVar3 | arg_8h);\n        }\n    }\n    return puVar2;\n}\n",
        "token_count": 720
    },
    "00407761": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuchar * fcn.00407761(uchar *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    code *pcVar3;\n    uint uStack292;\n    uint32_t uStack288;\n    uint uStack284;\n    uint uStack280;\n    ushort uStack16;\n    ushort uStack14;\n    uint8_t uStack10;\n    uint32_t uStack8;\n    \n    uStack292 = 0x11c;\n    fcn.0040888c(&uStack288, 0, 0x118);\n    uStack8 = 0;\n    *param_1 = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetVersionExW)(&uStack292);\n    if (iVar1 != 0) {\n        uStack8 = uStack10;\n        if (5 < uStack288) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"kernel32.dll\", \"GetProductInfo\");\n            pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n            if (pcVar3 != NULL) {\n                (*pcVar3)(uStack288, uStack284, uStack16, uStack14, &uStack8);\n            }\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetSystemDefaultLCID)();\n        (*_sym.imp.USER32.dll_wsprintfA)\n                  (param_1, \"%d,%d,%d,%d,%d,%d\", uStack288, uStack284, uStack16, uStack280, uStack8, uVar2);\n    }\n    return param_1;\n}\n",
        "token_count": 365
    },
    "00407827": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nulong fcn.00407827(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_ch = 0;\n    var_8h = 0;\n    piVar1 = fcn.0040735e(0x288);\n    if (piVar1 != NULL) {\n        fcn.0040888c(piVar1, 0, var_4h);\n        var_4h = 0x288;\n        iVar2 = sub.iphlpapi.dll_GetAdaptersInfo(piVar1, &var_4h);\n        if (iVar2 == 0x6f) {\n            fcn.0040737e(piVar1);\n            piVar1 = fcn.0040735e(var_4h);\n            if (piVar1 == NULL) goto code_r0x004078e7;\n            fcn.0040888c(piVar1, 0, var_4h);\n            iVar2 = sub.iphlpapi.dll_GetAdaptersInfo(piVar1, &var_4h);\n        }\n        piVar3 = piVar1;\n        if (iVar2 == 0) {\n            do {\n                if ((piVar3[0x68] == 6) &&\n                   (iVar2 = (*_sym.imp.SHLWAPI.dll_StrStrIA)(piVar3 + 0x43, \"vmware\"),  iVar2 == 0)) {\n                    fcn.00405f95(&var_ch, piVar3 + 0x65, 8);\n                    break;\n                }\n                piVar3 = *piVar3;\n            } while (piVar3 != NULL);\n        }\n        if (piVar1 != NULL) {\n            fcn.0040737e(piVar1);\n        }\n    }\ncode_r0x004078e7:\n    return CONCAT44(var_8h, var_ch);\n}\n",
        "token_count": 446
    },
    "0040148e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key",
            "delete registry key"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040148e(uint hKey, uint lpSubKey, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_210h;\n    uint phkResult;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(hKey, lpSubKey, 0, *0x473eb0 | 8, &phkResult);\n    pcVar2 = _sym.imp.ADVAPI32.dll_RegEnumKeyW;\n    if (iVar1 == 0) {\n        do {\n            iVar1 = (*pcVar2)(phkResult, 0, &var_210h, 0x105);\n            if (iVar1 != 0) break;\n            if (arg_10h != 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n                goto code_r0x00401520;\n            }\n            iVar1 = fcn.0040148e(phkResult, &var_210h, 0);\n        } while (iVar1 == 0);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n        pcVar2 = fcn.00406482(2);\n        if (pcVar2 == NULL) {\n            if ((*0x473eb0 != 0) || (iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(hKey, lpSubKey),  iVar1 != 0)) {\ncode_r0x00401520:\n                iVar1 = 1;\n            }\n        }\n        else {\n            iVar1 = (*pcVar2)(hKey, lpSubKey, *0x473eb0, 0);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 394
    },
    "004033f9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "write file on Windows"
        ],
        "decompiled_code": "\nuint fcn.004033f9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    int32_t lpNumberOfBytesRead;\n    int32_t iStack32;\n    uint uStack28;\n    int32_t iVar3;\n    \n    param_1 = (*0x4301e4 - *0x4341f0) + param_1;\n    *0x473e20 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    *0x473e20 = *0x473e20 + 500;\n    if (0 < param_1) {\n        uStack28 = 0x403433;\n        iVar3 = *0x4341ec;\n        fcn.004033e2();\n        uStack28 = 0;\n        iStack32 = 0;\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x40c014, *0x4341f0);\n        *0x420154 = 0;\n        *0x4301e0 = param_1;\n        do {\n            lpNumberOfBytesRead = 0x4000;\n            if (*0x4341e8 - *0x4341ec < 0x4001) {\n                lpNumberOfBytesRead = *0x4341e8 - *0x4341ec;\n            }\n            iVar1 = fcn.004033b0(0x4301e8, lpNumberOfBytesRead);\n            if (iVar1 == 0) {\n                return 0xffffffff;\n            }\n            *0x4341ec = *0x4341ec + lpNumberOfBytesRead;\n            *0x428170 = 0x4301e8;\n            *0x428174 = lpNumberOfBytesRead;\n            do {\n                if ((*0x473ddc != 0) && (*0x473ea0 == 0)) {\n                    *0x420154 = ((*0x4301e0 - *0x4301e4) - iVar3) + *0x4341f0;\n                    fcn.0040330e(0);\n                }\n                *0x428178 = 0x4281e0;\n                *0x42817c = 0x8000;\n                iVar1 = fcn.00407e30();\n                if (iVar1 < 0) {\n                    return 0xfffffffd;\n                }\n                iVar1 = *0x428178 + -0x4281e0;\n                if (iVar1 == 0) {\n                    if (*0x428174 != 0) {\n                        return 0xfffffffd;\n                    }\n                    if (lpNumberOfBytesRead == 0) {\n                        return 0xfffffffd;\n                    }\n                    break;\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(*0x40c014, 0x4281e0, iVar1, &stack0xffffffe0, 0);\n                if ((iVar2 == 0) || (iVar1 != iStack32)) {\n                    return 0xfffffffe;\n                }\n                *0x4341f0 = *0x4341f0 + iVar1;\n            } while (*0x428174 != 0);\n        } while (0 < (*0x4301e4 - *0x4341f0) + unaff_ESI);\n        (*_sym.imp.KERNEL32.dll_SetFilePointer)(*0x40c014, *0x4301e4, 0, 0);\n    }\n    uStack28 = 0x40355e;\n    fcn.0040330e(1);\n    return 0;\n}\n",
        "token_count": 797
    },
    "00404553": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404553(uint nIDDlgItem, uint arg_ch)\n\n{\n    uint32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int8_t iVar3;\n    uint var_84h;\n    uint var_44h;\n    uint var_4h;\n    \n    iVar3 = 0x14;\n    var_4h = 0xffffffdc;\n    if (in_EAX < 0x100000) {\n        iVar3 = 10;\n        var_4h = 0xffffffdd;\n    }\n    if (in_EAX < 0x400) {\n        iVar3 = 0;\n        var_4h = 0xffffffde;\n    }\n    if (in_EAX < 0xffff3333) {\n        in_EAX = in_EAX + (1 << iVar3) / 0x14;\n    }\n    fcn.00406982(0x448250, arg_ch);\n    uVar1 = fcn.00406982(&var_44h, 0xffffffdf);\n    uVar1 = fcn.00406982(&var_84h, var_4h, uVar1);\n    iVar2 = sub.KERNEL32.dll_lstrlenW\n                      (0x448250, L\"%u.%u%s%s\", in_EAX >> iVar3, ((in_EAX & 0xffffff) * 10 >> iVar3) % 10, uVar1);\n    (*_sym.imp.USER32.dll_wsprintfW)(iVar2 * 2 + 0x448250);\n    sub.USER32.dll_SetDlgItemTextW(*0x46bd88, nIDDlgItem, 0x448250);\n    return;\n}\n",
        "token_count": 373
    },
    "004073d9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "send HTTP request",
            "connect to HTTP server",
            "read data from Internet",
            "receive data",
            "send data"
        ],
        "decompiled_code": "\nint32_t fcn.004073d9(uint param_1, uint param_2, uint param_3, uint param_4, int32_t *param_5, int32_t *param_6, \n                    uint param_7, uint param_8)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    char cStack152;\n    char cStack151;\n    char cStack150;\n    uint uStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    iStack16 = 0;\n    uStack24 = 1;\n    iStack8 = 0;\n    cStack152 = '\\0';\n    fcn.0040888c(&cStack151, 0, 0x7f);\n    uVar2 = fcn.0040733e(param_1, param_7, 0x40ac45, 0x40ac45, 3, 0, 0);\n    iStack20 = (*_sym.imp.WININET.dll_InternetConnectA)(uVar2);\n    if (iStack20 != 0) {\n        iStack12 = (*_sym.imp.WININET.dll_HttpOpenRequestA)(iStack20, \"POST\", param_2, 0, 0, 0, 0x84080100, 0);\n        pcVar1 = _sym.imp.WININET.dll_InternetSetOptionA;\n        if (iStack12 != 0) {\n            (*_sym.imp.WININET.dll_InternetSetOptionA)(iStack12, 2, &param_8, 4);\n            (*pcVar1)(iStack12, 6, &param_8, 4);\n            (*pcVar1)(iStack12, 5, &param_8, 4);\n            (*pcVar1)(iStack12, 3, &uStack24, 4);\n            iVar3 = (*_sym.imp.WININET.dll_HttpSendRequestA)(iStack12, 0, 0, param_3, param_4);\n            if (iVar3 != 0) {\n                iStack8 = 0x80;\n                param_8 = 0;\n                iVar3 = (*_sym.imp.WININET.dll_HttpQueryInfoA)(iStack12, 0x13, &cStack152, &iStack8, &param_8);\n                if ((((iVar3 != 0) && (cStack152 == '2')) && (cStack151 == '0')) && (cStack150 == '0')) {\n                    *param_5 = 0;\n                    *param_6 = 0;\n                    iStack8 = 0x80;\n                    while ((iVar3 = (*_sym.imp.WININET.dll_InternetReadFile)(iStack12, &cStack152, 0x80, &iStack8), \n                           iVar3 != 0 && (iStack8 != 0))) {\n                        if (*param_6 == 0) {\n                            iVar3 = fcn.0040735e(iStack8);\n                        }\n                        else {\n                            iVar3 = fcn.0040739f(*param_5, *param_6 + iStack8);\n                        }\n                        *param_5 = iVar3;\n                        if (*param_5 == 0) goto code_r0x00407553;\n                        fcn.00405f95(*param_6 + *param_5, &cStack152, iStack8);\n                        *param_6 = *param_6 + iStack8;\n                    }\n                    iStack16 = 1;\n                }\n            }\ncode_r0x00407553:\n            (*_sym.imp.WININET.dll_InternetCloseHandle)(iStack12);\n        }\n        (*_sym.imp.WININET.dll_InternetCloseHandle)(iStack20);\n        if (iStack16 != 0) {\n            return iStack16;\n        }\n    }\n    *param_5 = 0;\n    *param_6 = 0;\n    return iStack16;\n}\n",
        "token_count": 898
    },
    "00407b71": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407b71(uint arg_8h, uint32_t arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uchar var_a08h;\n    uint var_a07h;\n    uchar var_208h;\n    uint var_207h;\n    uchar var_104h;\n    uint var_103h;\n    \n    var_a08h = 0;\n    fcn.0040888c(&var_a07h, 0, 0x7ff);\n    var_104h = 0;\n    fcn.0040888c(&var_103h, 0, 0x103);\n    var_208h = 0;\n    fcn.0040888c(&var_207h, 0, 0x103);\n    pcVar2 = _sym.imp.USER32.dll_wsprintfA;\n    if (*(*0x473ddc + 0x120) == '\\0') {\n        uVar3 = 0xffffffff;\n    }\n    else {\n        (*_sym.imp.USER32.dll_wsprintfA)(&var_a08h, \"v=%d\", 3);\n        (*pcVar2)(&var_104h, \"\\nid=%s\", *0x473ddc + 0x120);\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrcatA;\n        (*_sym.imp.KERNEL32.dll_lstrcatA)(&var_a08h, &var_104h);\n        (*pcVar2)(&var_104h, \"\\nret=%d\", arg_8h);\n        (*pcVar1)(&var_a08h, &var_104h);\n        (*pcVar2)(&var_104h, \"\\nut=%d\", arg_ch / 1000);\n        (*pcVar1)(&var_a08h, &var_104h);\n        (*pcVar2)(&var_104h, \"\\nun=%d\", *0x473e24 != 0);\n        (*pcVar1)(&var_a08h, &var_104h);\n        (*pcVar2)(&var_104h, \"\\nslt=%d\", *0x473ea0 != 0);\n        (*pcVar1)(&var_a08h, &var_104h);\n        uVar3 = fcn.00407761(&var_208h);\n        (*pcVar2)(&var_104h, \"\\nos=%s\", uVar3);\n        (*pcVar1)(&var_a08h, &var_104h);\n        uVar3 = fcn.00407935(&var_208h);\n        (*pcVar2)(&var_104h, \"\\nhw=%s\", uVar3);\n        (*pcVar1)(&var_a08h, &var_104h);\n        uVar3 = fcn.00407ad8(&var_208h);\n        (*pcVar2)(&var_104h, \"\\nii=%s\", uVar3);\n        (*pcVar1)(&var_a08h, &var_104h);\n        fcn.004078f2(&var_208h);\n        (*pcVar2)(&var_104h, \"\\ncid=%s\", &var_208h);\n        (*pcVar1)(&var_a08h, &var_104h);\n        fcn.004076b2(&var_a08h);\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 761
    },
    "0040129d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040129d(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if ((param_1 < 0x20) && (*0x473dec != 0)) {\n        puVar2 = *0x473de8 + 8;\n        do {\n            uVar1 = *puVar2;\n            if ((uVar1 & 6) == 0) {\n                if ((puVar2[-1] & 1 << (param_1 & 0x1f)) == 0) {\n                    uVar1 = uVar1 & 0xfffffffe;\n                }\n                else {\n                    uVar1 = uVar1 | 1;\n                }\n                *puVar2 = uVar1;\n            }\n            uVar3 = uVar3 + 1;\n            puVar2 = puVar2 + 0x1008;\n        } while (uVar3 < *0x473dec);\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "00401453": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401453(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_ESI;\n    \n    uVar1 = unaff_ESI;\n    if (unaff_ESI < 0) {\n        uVar1 = -unaff_ESI;\n    }\n    uVar2 = fcn.00406982((uVar1 >> 4) * 0x4008 + 0x40c0c8, *(*0x40c0c4 + (uVar1 & 0xf) * 4));\n    if (unaff_ESI < 0) {\n        fcn.004061be(uVar2);\n    }\n    return uVar2;\n}\n",
        "token_count": 159
    },
    "00401544": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401544(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*0x40c0c4 + 4);\n    if (iVar2 == 0) {\n        iVar2 = *0x473e84 + -0x7fffffff;\n    }\n    uVar1 = fcn.00401453(0, *0x473eb0 | arg_8h, &arg_8h);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(iVar2, uVar1);\n    return ~-(iVar2 != 0) & arg_8h;\n}\n",
        "token_count": 155
    },
    "00403ee9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403ee9(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    int32_t unaff_retaddr;\n    \n    uVar1 = fcn.00406982(0, param_3);\n    sub.USER32.dll_SetDlgItemTextW(param_3, unaff_retaddr + 1000, uVar1);\n    return;\n}\n",
        "token_count": 89
    },
    "0040403f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040403f(void)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint16_t uVar5;\n    int32_t *piVar6;\n    \n    uVar5 = 0xffff;\n    uVar1 = fcn.004060ef(0x4d40c0);\n    do {\n        if (*0x473e04 != 0) {\n            puVar2 = *(*0x473ddc + 100) * *0x473e04 + *0x473e00;\n            iVar4 = *0x473e04;\n            do {\n                puVar2 = puVar2 - *(*0x473ddc + 100);\n                iVar4 = iVar4 + -1;\n                if ((uVar5 & (*puVar2 ^ uVar1)) == 0) {\n                    *0x46bd9c = *(puVar2 + 1);\n                    *0x473ea8 = *(puVar2 + 3);\n                    *0x46bda8 = puVar2 + 5;\n                    if (*0x46bda8 != NULL) {\n                        fcn.004060d6(0x4d40c0, *puVar2);\n                        uVar3 = fcn.00406982(0x46bdc0, 0xfffffffe);\n                        (*_sym.imp.USER32.dll_SetWindowTextW)(*0x438228, uVar3);\n                        piVar6 = *0x473de8;\n                        iVar4 = *0x473dec;\n                        while (iVar4 != 0) {\n                            iVar4 = iVar4 + -1;\n                            if (*piVar6 != 0) {\n                                fcn.00406982(piVar6 + 6, *piVar6);\n                            }\n                            piVar6 = piVar6 + 0x1008;\n                        }\n                        return;\n                    }\n                    break;\n                }\n            } while (iVar4 != 0);\n        }\n        if (uVar5 == 0xffff) {\n            uVar5 = 0x3ff;\n        }\n        else {\n            uVar5 = 0;\n        }\n    } while( true );\n}\n",
        "token_count": 486
    },
    "00404509": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404509(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_ch == 0x110) {\n        fcn.00403ee9(arg_8h, 0x1d, *(arg_14h + 0x30));\n        sub.USER32.dll_SetDlgItemTextW(arg_8h, 1000, *(arg_14h + 0x3c) * 0x4008 + 0x474000);\n    }\n    fcn.00403f74(arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 146
    },
    "00405ead": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00405ead(uint16_t *param_1)\n\n{\n    uint uVar1;\n    \n    if (((*param_1 == 0x5c) && (param_1[1] == 0x5c)) || (((*param_1 | 0x20) - 0x61 < 0x1a && (param_1[1] == 0x3a)))) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 122
    },
    "00406008": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nushort * __cdecl fcn.00406008(ushort *arg_8h, uint lpPathName)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint lpPrefixString;\n    uint32_t var_4h;\n    \n    iVar3 = 100;\n    do {\n        lpPrefixString = *0x40a6f4;\n        iVar3 = iVar3 + -1;\n        var_4h = *0x40a6f8;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        var_4h = var_4h & 0xffff0000 | var_4h + uVar1 % 0x1a;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetTempFileNameW)(lpPathName, &lpPrefixString, 0, arg_8h);\n        if (iVar2 != 0) {\n            return arg_8h;\n        }\n    } while (iVar3 != 0);\n    *arg_8h = 0;\n    return NULL;\n}\n",
        "token_count": 248
    },
    "004060d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004060d6(uint param_1, uint param_2)\n\n{\n    (*_sym.imp.USER32.dll_wsprintfW)(param_1, 0x40a63c, param_2);\n    return;\n}\n",
        "token_count": 52
    },
    "004068ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.004068ce(int16_t *param_1)\n\n{\n    int32_t iVar1;\n    int16_t *piVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1);\n    piVar2 = param_1 + iVar1;\n    do {\n        if (*piVar2 == 0x5c) break;\n        piVar2 = (*_sym.imp.USER32.dll_CharPrevW)(param_1, piVar2);\n    } while (param_1 < piVar2);\n    *piVar2 = 0;\n    return piVar2 + 1;\n}\n",
        "token_count": 142
    },
    "00407327": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407327(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.00407048(param_1, 4, param_2, param_3);\n    return;\n}\n",
        "token_count": 50
    },
    "004078f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get disk information"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004078f2(uint ARG_0)\n\n{\n    ulong uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.00407827();\n    (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)(0x40acc0, 0, 0, &var_4h, 0, 0, 0, 0);\n    (*_sym.imp.USER32.dll_wsprintfA)(ARG_0, \"%u,%u,%u\", uVar1 >> 0x20, uVar1, var_4h);\n    return ARG_0;\n}\n",
        "token_count": 135
    },
    "00407ad8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar * __cdecl fcn.00407ad8(uchar *arg_8h)\n\n{\n    uint uVar1;\n    uchar lpFilename;\n    uint var_10bh;\n    uint var_8h;\n    ushort var_4h;\n    ushort var_2h;\n    \n    lpFilename = 0;\n    fcn.0040888c(&var_10bh, 0, 0x103);\n    var_8h._0_2_ = 0;\n    var_8h._2_2_ = 0;\n    var_4h = 0;\n    var_2h = 0;\n    *arg_8h = 0;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, &lpFilename, 0x104);\n    fcn.00407a4d(&lpFilename, &var_8h);\n    uVar1 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameA)(&lpFilename);\n    (*_sym.imp.USER32.dll_wsprintfA)(arg_8h, \"%u,%u,%u,%u,%s\", var_8h, var_8h._2_2_, var_4h, var_2h, uVar1);\n    return arg_8h;\n}\n",
        "token_count": 287
    },
    "00405fd9": {
        "rules": [
            "get file attributes",
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00405fd9(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n    (*_sym.imp.KERNEL32.dll_CreateFileW)(unaff_retaddr, param_1, 1, 0, param_2, -(uVar1 != 0xffffffff) & uVar1, 0);\n    return;\n}\n",
        "token_count": 111
    },
    "00405dc9": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405dc9(uint lpCommandLine)\n\n{\n    int32_t iVar1;\n    int32_t lpProcessAttributes;\n    uint hObject;\n    \n    *0x458288 = 0x44;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessW)(0, lpCommandLine, 0, 0, 0, 0, 0, 0, 0x458288, &lpProcessAttributes);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        iVar1 = lpProcessAttributes;\n    }\n    return iVar1;\n}\n",
        "token_count": 141
    },
    "00404171": {
        "rules": [
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nuint fcn.00404171(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_WideCharToMultiByte;\n    iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, 0xffffffff, 0, 0, 0, 0);\n    uVar3 = 0;\n    if (iVar2 != 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, iVar2 + 1);\n        (*pcVar1)(0, 0, param_1, 0xffffffff, uVar3, iVar2 + 1, 0, 0);\n    }\n    return uVar3;\n}\n",
        "token_count": 186
    },
    "0040757c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/01bb0ec37f0e4f748bf40bf8ad1af4de",
            "validate payment card number using luhn algorithm with lookup table/fb60ffb548f34d1da43070d509ac9033",
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid fcn.0040757c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < param_2) {\n        do {\n            *(iVar1 + param_1) = *(iVar1 + param_1) ^ \"JZS,URQ)Z5\"[iVar1 % 10];\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < param_2);\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "00403e12": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403e12(uint param_1)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *0x438200; puVar1 != NULL; puVar1 = *puVar1) {\n        (*puVar1[1])(param_1);\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00403e2d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403e2d(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *0x438200;\n    fcn.00403e12(0);\n    if (piVar2 != NULL) {\n        do {\n            piVar1 = *piVar2;\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(piVar2[2]);\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(piVar2);\n            piVar2 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    *0x438200 = NULL;\n    return;\n}\n",
        "token_count": 145
    },
    "00403e62": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00403e62(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *0x438200;\n    while( true ) {\n        if (puVar1 == NULL) {\n            return 1;\n        }\n        if (puVar1[2] == param_1) break;\n        puVar1 = *puVar1;\n    }\n    return 0;\n}\n",
        "token_count": 93
    },
    "00405e8e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405e8e(int16_t *param_1, int16_t param_2)\n\n{\n    for (; (*param_1 != 0 && (*param_1 != param_2)); param_1 = (*_sym.imp.USER32.dll_CharNextW)(param_1)) {\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00405f3f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405f3f(int32_t arg_8h, uint lpString2)\n\n{\n    uchar uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString2);\n    while( true ) {\n        iVar4 = (*pcVar2)(arg_8h);\n        if (iVar4 < iVar3) {\n            return 0;\n        }\n        uVar1 = *(iVar3 + arg_8h);\n        *(iVar3 + arg_8h) = 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(arg_8h, lpString2);\n        *(iVar3 + arg_8h) = uVar1;\n        if (iVar4 == 0) break;\n        arg_8h = (*_sym.imp.USER32.dll_CharNextA)(arg_8h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 248
    },
    "004064b9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004064b9(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageW;\n    while( true ) {\n        iVar2 = (*pcVar1)(&lpMsg, 0, arg_8h, arg_8h, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageW)(&lpMsg);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00407e10": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407e10(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0x80;\n    do {\n        iVar1 = iVar1 + -1;\n        *(iVar1 + param_1) = 0;\n    } while (iVar1 != 0);\n    *(param_1 + 0x78) = 0xffffffff;\n    *(param_1 + 0x68) = 1;\n    *(param_1 + 100) = 1;\n    *(param_1 + 0x60) = 1;\n    *(param_1 + 0x5c) = 1;\n    return;\n}\n",
        "token_count": 151
    },
    "0040393d": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\nvoid fcn.0040393d(void)\n\n{\n    int32_t iVar1;\n    \n    fcn.004061be(0x4d80c8);\n    iVar1 = fcn.00405ead(0x4d80c8);\n    if (iVar1 == 0) {\n        return;\n    }\n    fcn.0040689f(0x4d80c8);\n    (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(0x4d80c8, 0);\n    fcn.00406008(0x4d40c0, 0x4d80c8);\n    return;\n}\n",
        "token_count": 140
    },
    "004033b0": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004033b0(uint lpBuffer, int32_t lpNumberOfBytesRead)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = lpNumberOfBytesRead;\n    iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(*0x40c010, lpBuffer, lpNumberOfBytesRead, &lpNumberOfBytesRead, 0);\n    if ((iVar2 == 0) || (lpNumberOfBytesRead != iVar1)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 142
    },
    "00407a4d": {
        "rules": [
            "get file version info"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407a4d(uint lptstrFilename, ushort *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint puLen;\n    int32_t lplpBuffer;\n    uint lpdwHandle;\n    \n    lpdwHandle = 0;\n    iVar1 = sub.VERSION.dll_GetFileVersionInfoSizeA(lptstrFilename, &lpdwHandle);\n    if (iVar1 != 0) {\n        puLen = 0;\n        lplpBuffer = 0;\n        iVar2 = fcn.0040735e(iVar1);\n        if (((iVar2 != 0) &&\n            (iVar1 = sub.VERSION.dll_GetFileVersionInfoA(lptstrFilename, lpdwHandle, iVar1, iVar2),  iVar1 != 0)) &&\n           (iVar1 = sub.VERSION.dll_VerQueryValueA(iVar2, 0x40ad40, &lplpBuffer, &puLen),  iVar1 != 0)) {\n            *arg_ch = *(lplpBuffer + 0x12);\n            arg_ch[1] = *(lplpBuffer + 0x10);\n            arg_ch[2] = *(lplpBuffer + 0x16);\n            arg_ch[3] = *(lplpBuffer + 0x14);\n            fcn.0040737e(iVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 310
    },
    "00406482": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00406482(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = *(param_1 * 8 + 0x40c060);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar1);\n    if ((iVar2 == 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(uVar1),  iVar2 == 0)) {\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, *(param_1 * 8 + 0x40c064));\n    return;\n}\n",
        "token_count": 148
    },
    "0040733e": {
        "rules": [
            "create HTTP request"
        ],
        "decompiled_code": "\nvoid fcn.0040733e(void)\n\n{\n    if (*0x462130 == 0) {\n        *0x462130 = (*_sym.imp.WININET.dll_InternetOpenA)\n                              (\"Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; www.eliang.com)\", 0, 0, \n                               0, 0);\n    }\n    return;\n}\n",
        "token_count": 100
    }
}