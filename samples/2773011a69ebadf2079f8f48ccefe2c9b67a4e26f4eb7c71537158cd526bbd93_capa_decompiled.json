{
    "004010d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004010d0(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint uVar5;\n    bool bVar6;\n    uint var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = *(*(arg_8h + 4) + 4);\n    bVar6 = *(iVar1 + 0xc) == 0xe;\n    if (bVar6) {\n        puVar3 = fcn.00471037(&var_38h);\n        var_4h = 1;\n        var_18h = *puVar3;\n    }\n    else {\n        fcn.00408e90();\n        puVar3 = *(iVar1 + 8);\n        var_18h = *puVar3;\n        var_24h = puVar3[1];\n        var_20h = puVar3[2];\n        var_1ch = puVar3[3];\n        puVar3 = &var_28h;\n        *var_1ch = *var_1ch + 1;\n        var_4h = 0;\n        var_28h = var_18h;\n    }\n    var_4h = bVar6;\n    uVar5 = 0;\n    var_8h = puVar3[1];\n    var_14h = puVar3[1];\n    var_10h = puVar3[2];\n    var_ch = puVar3[3];\n    *var_ch = *var_ch + 1;\n    if (!bVar6) {\n        fcn.0040b1ff();\n    }\n    if (var_4h != 0) {\n        fcn.0040b1ff();\n    }\n    if (var_8h != 0) {\n        iVar1 = fcn.004025c1(&var_18h);\n        if (iVar1 == 0) {\n            fcn.0040e8a0();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n            iVar1 = *(*in_ECX + 4);\n            iVar4 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = 1;\n            iVar4 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x18) = 0;\n            uVar5 = 0xffffffff;\n            goto code_r0x004011a1;\n        }\n    }\n    uVar2 = uVar5;\n    if (2 < *(arg_8h + 8)) {\n        uVar2 = fcn.00471dda();\n    }\n    puVar3 = &var_18h;\n    arg_8h_00 = fcn.0040ce67();\n    uVar2 = fcn.004011b2(arg_8h_00, puVar3, uVar2);\n    fcn.0040e8a0();\n    arg_ch[3] = 1;\n    *arg_ch = uVar2;\ncode_r0x004011a1:\n    fcn.0040b1ff();\n    return uVar5;\n}\n",
        "token_count": 871
    },
    "004011b2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004011b2(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    if (arg_10h != 0) {\n        *0x4d191c = fcn.0041b021(arg_10h);\n    }\n    if ((*0x4d191c == -1) || (0xd < arg_8h + 0xdU)) {\n        uVar1 = 0;\n    }\n    else {\n        if (arg_8h * 0x10 + 0x15c + **(*0x4d1910 + *0x4d191c * 4) != arg_ch) {\n            fcn.0040c1c3(arg_ch);\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 194
    },
    "00401202": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401202(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    int32_t unaff_EBX;\n    int32_t *piVar7;\n    uint uVar8;\n    int32_t iStack92;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    int32_t *piStack56;\n    uchar auStack52 [4];\n    uchar auStack48 [12];\n    ushort uStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    iVar2 = **(arg_8h + 4);\n    if (*(iVar2 + 0xc) == 0xe) {\n        puVar5 = fcn.00471037(auStack52);\n        iStack92 = 1;\n        unaff_EBX = 0;\n        uVar6 = *puVar5;\n    }\n    else {\n        fcn.00408e90();\n        puVar5 = *(iVar2 + 8);\n        iStack92 = 2;\n        uVar6 = *puVar5;\n        uStack64 = puVar5[1];\n        uStack60 = puVar5[2];\n        piStack56 = puVar5[3];\n        puVar5 = &uStack68;\n        *piStack56 = *piStack56 + 1;\n        uStack68 = uVar6;\n    }\n    uVar8 = puVar5[1];\n    *puVar5[3] = *puVar5[3] + 1;\n    if (unaff_EBX != 0) {\n        fcn.0040b1ff();\n    }\n    if (iStack92 != 0) {\n        fcn.0040b1ff();\n    }\n    fcn.0040c7c9();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(uVar6, uVar8);\n    iVar2 = fcn.004025c1(&stack0xffffffa0);\n    if (iVar2 == 0) {\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        goto code_r0x00401363;\n    }\n    if (*(arg_8h + 8) == 2) {\n        iVar2 = fcn.0040ce67();\n        if (iVar2 < 1) goto code_r0x00442502;\n        uVar3 = fcn.0040ce67();\n    }\n    else {\ncode_r0x00442502:\n        uVar3 = 0xfa;\n    }\n    for (piVar7 = *(in_ECX + 0x430); piVar7 != NULL; piVar7 = piVar7[1]) {\n        cVar1 = fcn.004082dc();\n        if (cVar1 != '\\0') {\n            *(*piVar7 + 0x11) = 0;\n            *(*piVar7 + 0x18) = uVar3;\n            iVar2 = *piVar7;\n            if (*(iVar2 + 0x10) == '\\0') {\n                uVar6 = (*_sym.imp.WINMM.dll_timeGetTime)();\n                *(iVar2 + 0x14) = uVar6;\n            }\n            fcn.00407cb4(1, 0);\n            goto code_r0x00401363;\n        }\n    }\n    fcn.0040c25d();\n    uStack36 = 0;\n    fcn.0040c1c3(&stack0xffffff9c);\n    uStack32 = uVar8;\n    uStack28 = (*_sym.imp.WINMM.dll_timeGetTime)();\n    iVar2 = *(in_ECX + 0x434);\n    fcn.0041fd5b(0xc, uVar6);\n    iVar4 = fcn.00401377(auStack48);\n    if (iVar2 == 0) {\n        *(in_ECX + 0x430) = iVar4;\n    }\n    else {\n        *(iVar4 + 8) = *(in_ECX + 0x434);\n        *(*(in_ECX + 0x434) + 4) = iVar4;\n    }\n    *(in_ECX + 0x434) = iVar4;\n    *(in_ECX + 0x438) = *(in_ECX + 0x438) + 1;\n    fcn.0040b1ff();\ncode_r0x00401363:\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 1040
    },
    "0040149f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040149f(int32_t arg_8h, int32_t *arg_ch, int32_t **arg_10h, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *extraout_ECX;\n    int32_t *arg_8h_00;\n    int32_t arg_ch_00;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    var_24h = 0;\n    var_1ch = 0;\n    *arg_18h = 0;\n    var_18h = 1;\n    iVar3 = *(*(arg_8h + 4) + *arg_ch * 4);\n    arg_ch_00 = *(iVar3 + 10);\n    iVar1 = *(iVar3 + 8);\n    var_8h = arg_ch_00;\n    while (iVar1 == 0x4e) {\n        iVar3 = *(arg_8h + 4);\n        var_10h = *arg_ch + 1;\n        *arg_ch = var_10h;\n        iVar3 = *(iVar3 + var_10h * 4);\n        arg_ch_00 = *(iVar3 + 10);\n        var_8h = arg_ch_00;\n        if (*(iVar3 + 8) != 0x4f) {\n            iVar3 = fcn.00410540(arg_8h, arg_ch, &var_24h, 0xffffffff);\n            if (-1 < iVar3) goto code_r0x00401527;\ncode_r0x00442570:\n            uVar4 = 0x7b;\n            goto code_r0x00442585;\n        }\n        uVar4 = fcn.00402522(var_10h, 0);\n        fcn.0040e8a0();\n        var_18h = 1;\n        var_24h = uVar4;\ncode_r0x00401527:\n        if ((*(*(*(arg_8h + 4) + *arg_ch * 4) + 8) != 0x4f) || (0x40 < *arg_18h)) goto code_r0x00442570;\n        *arg_ch = *arg_ch + 1;\n        iVar3 = fcn.0040ce67();\n        if (iVar3 < 0) {\n            fcn.004022a9();\n            break;\n        }\n        iVar3 = *arg_18h;\n        uVar4 = fcn.0040ce67();\n        *(arg_14h + iVar3 * 4) = uVar4;\n        *arg_18h = iVar3 + 1;\n        iVar1 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 8);\n    }\n    if (arg_10h[3] == 0xf) {\ncode_r0x004015f5:\n        uVar4 = 0;\n    }\n    else {\n        fcn.00407d93();\n        if (arg_10h[3] == 0x5) {\n            arg_8h_00 = *arg_10h;\n        }\n        else {\n            arg_8h_00 = NULL;\n        }\n        if (*arg_18h < 1) {\n            uVar4 = 0x7e;\n        }\n        else {\n            iVar3 = 0;\n            *(*arg_8h_00 + 0x210) = 0;\n            if (0 < *arg_18h) {\n                do {\n                    fcn.004084b9(*(arg_14h + iVar3 * 4));\n                    iVar3 = iVar3 + 1;\n                    arg_8h_00 = extraout_ECX;\n                    arg_ch_00 = var_8h;\n                } while (iVar3 < *arg_18h);\n            }\n            cVar2 = fcn.004083e0(arg_8h_00, 0);\n            if (cVar2 != '\\0') goto code_r0x004015f5;\n            uVar4 = 0x82;\n        }\ncode_r0x00442585:\n        fcn.004734ba(uVar4, arg_ch_00);\n        uVar4 = 0xffffffff;\n    }\n    fcn.0040e8a0();\n    return uVar4;\n}\n",
        "token_count": 1010
    },
    "00401641": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00401641(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint *puVar3;\n    char cVar4;\n    ushort uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t *in_ECX;\n    int32_t *piVar10;\n    uint32_t *extraout_EDX;\n    uint32_t *arg_8h_00;\n    uint extraout_EDX_00;\n    uint extraout_EDX_01;\n    uint *puVar11;\n    int32_t *unaff_EDI;\n    int32_t iVar12;\n    bool bVar13;\n    ushort *puVar14;\n    uint32_t uStack460;\n    uint *puStack456;\n    int32_t iStack452;\n    uint32_t *puStack448;\n    uint32_t *puStack444;\n    uint *puStack440;\n    uint uStack436;\n    uint uStack428;\n    int32_t iStack424;\n    int32_t iStack420;\n    uint uStack416;\n    int32_t *piStack412;\n    uint32_t *apuStack408 [4];\n    char16_t *pcStack392;\n    int32_t iStack388;\n    uint uStack384;\n    char16_t *pcStack380;\n    int32_t iStack376;\n    uint uStack372;\n    char16_t *pcStack368;\n    uint uStack364;\n    uint uStack360;\n    char16_t *pcStack356;\n    uint uStack352;\n    char16_t *pcStack348;\n    char16_t *pcStack344;\n    uint uStack340;\n    char16_t *pcStack336;\n    char16_t *pcStack332;\n    uint uStack328;\n    char16_t *pcStack324;\n    char16_t *pcStack320;\n    uint uStack316;\n    uint uStack312;\n    char16_t *pcStack308;\n    uint uStack304;\n    char16_t *pcStack300;\n    char16_t *pcStack296;\n    int32_t *piStack292;\n    char16_t *pcStack288;\n    char16_t *pcStack284;\n    int32_t *piStack280;\n    char16_t *pcStack276;\n    char16_t *pcStack272;\n    int32_t *piStack268;\n    char16_t *pcStack264;\n    char16_t *pcStack260;\n    int32_t *piStack256;\n    char16_t *pcStack252;\n    char16_t *pcStack248;\n    int32_t *piStack244;\n    uint uStack240;\n    char16_t *pcStack236;\n    int32_t *piStack232;\n    char16_t *pcStack228;\n    char16_t *pcStack224;\n    int32_t iStack220;\n    uint uStack216;\n    char16_t *pcStack212;\n    int32_t *piStack208;\n    uint uStack204;\n    char16_t *pcStack200;\n    int32_t *piStack196;\n    char16_t *pcStack192;\n    char16_t *pcStack188;\n    int32_t *piStack184;\n    char16_t *pcStack180;\n    char16_t *pcStack176;\n    int32_t *piStack172;\n    uint uStack168;\n    char16_t *pcStack164;\n    int32_t *piStack160;\n    char16_t *pcStack156;\n    char16_t *pcStack152;\n    uint uStack148;\n    uint uStack144;\n    char16_t *pcStack140;\n    uint uStack136;\n    uint uStack132;\n    char16_t *pcStack128;\n    uint uStack124;\n    char16_t *pcStack120;\n    char16_t *pcStack116;\n    uint uStack112;\n    char16_t *pcStack108;\n    char16_t *pcStack104;\n    uint uStack100;\n    uint uStack96;\n    char16_t *pcStack92;\n    int32_t *piStack88;\n    uint uStack84;\n    char16_t *pcStack80;\n    int32_t iStack76;\n    uint uStack72;\n    char16_t *pcStack68;\n    int32_t *piStack64;\n    char16_t *pcStack60;\n    char16_t *pcStack56;\n    uint uStack52;\n    char16_t *pcStack48;\n    char16_t *pcStack44;\n    int32_t *piStack40;\n    char16_t *apcStack36 [8];\n    \n    uStack436 = *(arg_8h + 8);\n    iVar12 = **(arg_8h + 4);\n    fcn.00408e90();\n    puVar14 = 0x49d0d0;\n    puStack440 = **(iVar12 + 8);\n    fcn.004013dc(0x49d0d0);\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    apuStack408[2] = in_ECX + 0x44;\n    uStack384 = 0x49cd80;\n    iStack388 = in_ECX + 0x102;\n    uStack372 = 0x49cd80;\n    iStack376 = in_ECX + 0x103;\n    piStack292 = in_ECX + 0x45;\n    piStack280 = in_ECX + 0x46;\n    piStack268 = in_ECX + 0x47;\n    uStack312 = 0x49cd80;\n    piStack256 = in_ECX + 0x42;\n    pcStack288 = L\"d10m0\";\n    pcStack276 = L\"d10m0\";\n    piStack244 = in_ECX + 0x41;\n    arg_ch[3] = 1;\n    apuStack408[1] = 0x49c920;\n    apuStack408[3] = 0x49cd88;\n    pcStack392 = L\"ExpandEnvStrings\";\n    pcStack380 = L\"ExpandVarStrings\";\n    pcStack368 = L\"GUICloseOnESC\";\n    uStack364 = 0x4d18b0;\n    uStack360 = 0x49cd98;\n    pcStack356 = L\"GUICoordMode\";\n    uStack352 = 0x4d18b4;\n    pcStack348 = L\"d1r0,2\";\n    pcStack344 = L\"GUIDataSeparatorChar\";\n    uStack340 = 0x4d18c4;\n    pcStack336 = L\"d124c\";\n    pcStack332 = L\"GUIEventOptions\";\n    uStack328 = 0x4d18c0;\n    pcStack324 = L\"d0r0,3\";\n    pcStack320 = L\"GUIOnEventMode\";\n    uStack316 = 0x4d18bc;\n    pcStack308 = L\"GUIResizeMode\";\n    uStack304 = 0x4d18b8;\n    pcStack300 = L\"d0r0,1023\";\n    pcStack296 = L\"MouseClickDelay\";\n    pcStack284 = L\"MouseClickDownDelay\";\n    pcStack272 = L\"MouseClickDragDelay\";\n    pcStack264 = L\"d250m0\";\n    pcStack260 = L\"MouseCoordMode\";\n    pcStack252 = L\"d1r0,2\";\n    pcStack248 = L\"MustDeclareVars\";\n    uStack240 = 0x49cd80;\n    pcStack236 = L\"PixelCoordMode\";\n    piStack232 = in_ECX + 0x43;\n    pcStack228 = L\"d1r0,2\";\n    pcStack224 = L\"SendAttachMode\";\n    uStack216 = 0x49cd80;\n    iStack220 = in_ECX + 0x91;\n    pcStack192 = L\"d5m0\";\n    piStack208 = in_ECX + 0x24;\n    pcStack180 = L\"d5m0\";\n    piStack196 = in_ECX + 0x22;\n    uStack168 = 0x49cd80;\n    piStack184 = in_ECX + 0x23;\n    piStack172 = in_ECX + 0x48;\n    piStack160 = in_ECX + 0x114;\n    piStack88 = in_ECX + 0xb3;\n    iStack76 = in_ECX + 0x2cd;\n    piStack64 = in_ECX + 0xb2;\n    piStack40 = in_ECX + 0xb9;\n    uStack132 = 0x49cd80;\n    uStack96 = 0x49cd80;\n    uStack84 = 0x49cd80;\n    uStack72 = 0x49cd80;\n    uStack204 = 0x49cd98;\n    uStack144 = 0x49cd98;\n    pcStack212 = L\"SendCapsLockMode\";\n    pcStack200 = L\"SendKeyDelay\";\n    pcStack188 = L\"SendKeyDownDelay\";\n    pcStack176 = L\"SetExitCode\";\n    pcStack164 = L\"TCPTimeout\";\n    pcStack156 = L\"d100m0\";\n    pcStack152 = L\"TrayAutoPause\";\n    uStack148 = 0x4d1996;\n    pcStack140 = L\"TrayIconDebug\";\n    uStack136 = 0x4d1365;\n    pcStack128 = L\"TrayIconHide\";\n    uStack124 = 0;\n    pcStack120 = L\"d0#1\";\n    pcStack116 = L\"TrayMenuMode\";\n    uStack112 = 0;\n    pcStack108 = L\"d0#2\";\n    pcStack104 = L\"TrayOnEventMode\";\n    uStack100 = 0x4d1a30;\n    pcStack92 = L\"WinDetectHiddenText\";\n    pcStack80 = L\"WinSearchChildren\";\n    pcStack68 = L\"WinTextMatchMode\";\n    pcStack60 = L\"d1r1,2\";\n    pcStack56 = L\"WinTitleMatchMode\";\n    uStack52 = 0;\n    pcStack48 = L\"d1#3\";\n    pcStack44 = L\"WinWaitDelay\";\n    apcStack36[0] = L\"d250m0\";\n    if (*(**(arg_8h + 4) + 0xc) == 4) {\n        puVar11 = puStack456;\n        if (*puStack444 != 0x2a) {\n            if (puStack440 == 0x1) {\n                puStack448 = NULL;\n                arg_8h_00 = puStack444;\n            }\n            else {\n                cVar4 = fcn.00401fb9(0x29);\n                if (cVar4 == '\\0') {\n                    iStack452 = fcn.0040ce67();\n                    arg_8h_00 = puStack448;\n                }\n                else {\n                    iStack452 = 0;\n                    arg_8h_00 = extraout_EDX;\n                }\n            }\n            uStack416 = 0x69;\n            do {\n                puVar11 = NULL;\n                iVar12 = 0x1e;\n                iStack420 = 0x1e;\n                do {\n                    puStack456 = iVar12 + puVar11 >> 1;\n                    iVar6 = fcn.004249b8(arg_8h_00, apuStack408[puStack456 * 3]);\n                    in_ECX = piStack412;\n                    if (iVar6 < 0) {\n                        iVar12 = puStack456 + -1;\n                    }\n                    else {\n                        if (iVar6 < 1) break;\n                        puVar11 = puStack456 + 1;\n                    }\n                    arg_8h_00 = puStack448;\n                } while (puVar11 <= iVar12);\n                iStack420 = iVar12;\n                if (iVar12 < puVar11) break;\n                uStack460 = 0;\n                piVar10 = puStack456 * 0xc;\n                puStack448 = apuStack408[puStack456 * 3 + 2];\n                puStack456 = puVar11;\n                if (*puStack448 == 100) {\n                    uStack460 = 1;\n                    fcn.00401405(&puStack456);\n                    fcn.0040e8a0();\n                    uStack428 = 1;\n                    puStack440 = puStack456;\n                }\n                else if (*puStack448 == 0x44) {\n                    uVar7 = fcn.004248f3(puStack448);\n                    fcn.00407c18(uVar7);\n                    piVar10 = 0x2;\n                    uVar2 = *(iStack452 + 4);\n                    while ((uVar2 != 0 && (uVar2 != 0x27))) {\n                        fcn.004051ec(uVar2);\n                        unaff_EDI = unaff_EDI + 1;\n                        uVar2 = *(puStack456 + unaff_EDI * 2);\n                    }\n                    fcn.00407c5d(apcStack36);\n                    fcn.0040b1ff();\n                }\n                uVar8 = uStack460 + 1;\n                uVar2 = *(*(apuStack408 + 2 + piVar10) + uStack460 * 2);\n                puVar11 = puStack456;\n                if (uVar2 < uStack416 || uVar2 == uStack416) {\n                    if (uVar2 == uStack416) {\n                        uVar9 = **(apuStack408 + 1 + piVar10);\n                        fcn.0040e8a0();\n                        arg_ch[3] = 1;\n                        *arg_ch = uVar9;\n                        uStack460 = uVar8;\n                        if (0x1 < puStack444) {\n                            cVar4 = fcn.00401fb9(0x29);\n                            puVar11 = puStack456;\n                            if (cVar4 != '\\0') {\n                                puVar11 = fcn.0040ce67();\n                            }\n                            *unaff_EDI = puVar11;\n                        }\n                    }\n                    else if (uVar2 == 0x23) {\n                        fcn.00401405(&puStack456);\n                        uVar9 = *0x4d19a8;\n                        if (puStack456 == 0x1) {\n                            uVar9 = *0x4d1368 == '\\0';\n                            fcn.0040e8a0();\n                            *arg_ch = uVar9;\n                            arg_ch[3] = 1;\n                            uStack460 = uVar8;\n                            if (0x1 < puStack444) {\n                                cVar4 = fcn.00401fb9(0x29);\n                                if (cVar4 != '\\0') {\n                                    puStack456 = fcn.0040ce67();\n                                }\n                                if (puStack456 == NULL) {\n                                    fcn.004056c2();\n                                }\n                                else {\n                                    fcn.00404b1d();\n                                }\n                            }\n                        }\n                        else if (puStack456 == 0x2) {\n                            fcn.0040e8a0();\n                            arg_ch[3] = 1;\n                            *arg_ch = uVar9;\n                            uStack460 = uVar8;\n                            if ((0x1 < puStack444) && (cVar4 = fcn.00401fb9(0x29),  cVar4 == '\\0')) {\n                                cVar4 = fcn.00401fb9(0x29);\n                                if (cVar4 != '\\0') {\n                                    uVar8 = fcn.0040ce67();\n                                }\n                                *0x4d1994 = 0x101;\n                                *0x4d1997 = 1;\n                                bVar13 = (uVar8 & 1) != 0;\n                                if (bVar13) {\n                                    *0x4d1994 = 0x100;\n                                }\n                                *0x4d19a8 = bVar13;\n                                if ((uVar8 & 2) != 0) {\n                                    *0x4d19a8 = bVar13 | 2;\n                                    *0x4d1994 = *0x4d1994 & 0xff;\n                                }\n                                bVar13 = (uVar8 & 4) != 0;\n                                if (bVar13) {\n                                    *0x4d19a8 = *0x4d19a8 | 4;\n                                }\n                                *0x4d199a = !bVar13;\n                                uStack460 = uVar8;\n                                if ((uVar8 & 8) != 0) {\n                                    *0x4d19a8 = *0x4d19a8 | 8;\n                                    *0x4d1997 = 0;\n                                }\n                            }\n                        }\n                        else {\n                            if (puStack456 != 0x3) {\n                                iVar12 = *(*in_ECX + 4);\n                                iVar6 = *(iVar12 + 8 + in_ECX);\n                                if (*(iVar12 + 0xd + in_ECX) != '\\0') {\n                                    iVar6 = *(iVar6 + 0x38);\n                                }\n                                *(iVar6 + 0x14) = 1;\n                                iVar6 = *(iVar12 + 8 + in_ECX);\n                                if (*(iVar12 + 0xd + in_ECX) != '\\0') {\n                                    iVar6 = *(iVar6 + 0x38);\n                                }\n                                *(iVar6 + 0x18) = 0;\n                                goto code_r0x00401bfe;\n                            }\n                            uVar9 = in_ECX[0xb1];\n                            fcn.0040e8a0();\n                            arg_ch[3] = 1;\n                            *arg_ch = uVar9;\n                            uStack460 = uVar8;\n                            if (0x1 < puStack444) {\n                                cVar4 = fcn.00401fb9(0x29);\n                                if (cVar4 != '\\0') {\n                                    puStack456 = fcn.0040ce67();\n                                }\n                                puVar3 = puStack456;\n                                iVar12 = fcn.00428f54(puStack456);\n                                puVar11 = puStack456;\n                                if (3 < iVar12 - 1U) break;\n                                in_ECX[0xb1] = puVar3;\n                            }\n                        }\n                    }\n                    else if (uVar2 == 0x53) {\n                        fcn.0040b5c1(**(apuStack408 + 1 + piVar10));\n                        uStack460 = uVar8;\n                        if (0x1 < puStack448) {\n                            cVar4 = fcn.00401fb9(0x29);\n                            if (cVar4 == '\\0') {\n                                fcn.00408e90();\n                                puVar11 = unaff_EDI[2];\n                            }\n                            else {\n                                fcn.00408e90();\n                                puVar11 = puStack440;\n                            }\n                            fcn.004084e7(*puVar11);\n                        }\n                    }\n                    else if (uVar2 == 0x62) {\n                        uVar1 = **(apuStack408 + 1 + piVar10);\n                        fcn.0040e8a0();\n                        arg_ch[3] = 1;\n                        *arg_ch = uVar1;\n                        uStack460 = uVar8;\n                        if (0x1 < puStack444) {\n                            cVar4 = fcn.00401fb9(0x29);\n                            puVar11 = puStack456;\n                            if (cVar4 != '\\0') {\n                                puVar11 = fcn.0040ce67();\n                            }\n                            *unaff_EDI = puVar11 != NULL;\n                        }\n                    }\n                    else {\n                        if (uVar2 != 99) break;\n                        fcn.0040b5c1(*(apuStack408 + 1 + piVar10));\n                        uStack460 = uVar8;\n                        if (0x1 < puStack448) {\n                            cVar4 = fcn.00401fb9(0x29);\n                            if (cVar4 == '\\0') {\n                                fcn.00408e90();\n                                uVar5 = **unaff_EDI[2];\n                            }\n                            else {\n                                uVar5 = fcn.0040ce67();\n                            }\n                            *puVar14 = uVar5;\n                        }\n                    }\n                }\n                else if (uVar2 == 0x6d) {\n                    uVar9 = **(apuStack408 + 1 + piVar10);\n                    fcn.0040e8a0();\n                    arg_ch[3] = 1;\n                    *arg_ch = uVar9;\n                    fcn.00401405(&puStack456);\n                    uStack460 = uVar8;\n                    if (0x1 < puStack444) {\n                        cVar4 = fcn.00401fb9(0x29);\n                        if (cVar4 == '\\0') {\n                            if (uVar8 <= puStack456) {\ncode_r0x00442ab4:\n                                *piVar10 = puStack456;\n                                goto code_r0x00401be3;\n                            }\n                            cVar4 = fcn.0046ff5f();\n                            uVar7 = extraout_EDX_01;\n                            if (cVar4 == '\\0') {\ncode_r0x00442b1e:\n                                iVar12 = *(*in_ECX + 4);\n                                iVar6 = *(iVar12 + 8 + in_ECX);\n                                if (*(iVar12 + 0xd + in_ECX) != '\\0') {\n                                    iVar6 = *(iVar6 + 0x38);\n                                }\n                                *(iVar6 + 0x14) = uVar7;\n                                goto code_r0x00442998;\n                            }\n                        }\n                        iVar12 = fcn.0040ce67();\ncode_r0x00442ad5:\n                        *piVar10 = iVar12;\n                    }\n                }\n                else if (uVar2 == 0x72) {\n                    uVar8 = **(apuStack408 + 1 + piVar10);\n                    fcn.0040e8a0();\n                    arg_ch[3] = 1;\n                    *arg_ch = uVar8;\n                    fcn.00401405(&puStack456);\n                    uStack460 = uStack460 + 2;\n                    fcn.00401405(&iStack420);\n                    if (0x1 < puStack444) {\n                        cVar4 = fcn.00401fb9(0x29);\n                        if (cVar4 == '\\0') {\n                            if ((uStack460 <= puStack456) && (puStack456 <= iStack424)) goto code_r0x00442ab4;\n                            cVar4 = fcn.0046ff5f();\n                            uVar7 = extraout_EDX_00;\n                            if (cVar4 == '\\0') goto code_r0x00442b1e;\n                        }\n                        iVar12 = fcn.0040ce67();\n                        goto code_r0x00442ad5;\n                    }\n                }\n                else {\n                    uStack460 = uVar8;\n                    if (uVar2 != 0x76) break;\n                }\ncode_r0x00401be3:\n                arg_8h_00 = puStack448 + uStack460 * 2;\n                puStack448 = arg_8h_00;\n                if (*arg_8h_00 == 0) goto code_r0x00401bfe;\n                puVar11 = puStack456;\n            } while (*arg_8h_00 == 0x2a);\n        }\n        puStack456 = puVar11;\n        iVar12 = *(*in_ECX + 4);\n        iVar6 = *(iVar12 + 8 + in_ECX);\n        if (*(iVar12 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x14) = 1;\ncode_r0x00442998:\n        iVar6 = *(iVar12 + 8 + in_ECX);\n        if (*(iVar12 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x18) = 0;\n    }\n    else {\n        iVar12 = *(*in_ECX + 4);\n        iVar6 = *(iVar12 + 8 + in_ECX);\n        if (*(iVar12 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x14) = 1;\n        iVar6 = *(iVar12 + 8 + in_ECX);\n        if (*(iVar12 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x18) = 0;\n    }\ncode_r0x00401bfe:\n    fcn.0040e8a0();\n    return 0;\n}\n",
        "token_count": 5562
    },
    "00401c87": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401c87(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    puVar2 = arg_8h;\n    if (arg_8h[2] == 1) {\n        uVar3 = fcn.00408273(arg_8h + 3);\n        uVar3 = uVar3 & 0xff;\n    }\n    else {\n        uVar3 = fcn.00441f20(arg_8h[8], arg_8h[9], 0x100, 0);\n    }\n    *puVar2 = 0;\n    puVar1 = *(*(in_ECX + 0x14) + uVar3 * 4);\n    if (puVar1 == NULL) {\n        puVar2[1] = 0;\n    }\n    else {\n        puVar2[1] = puVar1;\n        *puVar1 = puVar2;\n    }\n    *(*(in_ECX + 0x14) + uVar3 * 4) = puVar2;\n    fcn.00401cde(&arg_8h);\n    return;\n}\n",
        "token_count": 274
    },
    "00401cde": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401cde(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    uint unaff_ESI;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        uVar3 = 8;\n        if (7 < uVar1) {\n            uVar3 = uVar1;\n        }\n        *(in_ECX + 0xc) = uVar3;\n        uVar4 = fcn.0041fd8b(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.00420db0(uVar4, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.0041fd94(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar4;\n    }\n    puVar2 = fcn.0041fd5b(4, unaff_ESI);\n    *puVar2 = *arg_8h;\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar2;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 366
    },
    "00401ea8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ea8(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if ((arg_8h != 2) && (arg_8h != 1)) {\n        fcn.00401edf();\n        if ((arg_8h == 8) || (arg_8h == 4)) {\n            if (**(in_ECX + 4) != 0x7fffffff) {\n                **(in_ECX + 4) = 1;\n            }\n        }\n        else {\n            **(in_ECX + 4) = 0x7fffffff;\n        }\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "00401edf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401edf(int32_t param_1)\n\n{\n    bool bVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = **(param_1 + 4);\n    if ((iVar3 < 2) || (iVar3 == 0x7fffffff)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (!bVar1) {\n        return;\n    }\n    **(param_1 + 4) = iVar3 + -1;\n    iVar3 = param_1;\n    fcn.0040206c(param_1);\n    puVar2 = fcn.0041fd5b(4, iVar3);\n    *puVar2 = 1;\n    *(param_1 + 4) = puVar2;\n    return;\n}\n",
        "token_count": 191
    },
    "0040206c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040206c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t **ppiVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    int32_t iVar8;\n    int32_t **ppiVar9;\n    uint uVar10;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    uVar10 = 0x400;\n    ppiVar3 = fcn.0041fd8b();\n    fcn.0041fd5b(0x10, uVar10);\n    uVar10 = *(in_ECX + 0x10);\n    iVar4 = fcn.00402331(uVar10);\n    var_14h = 0;\n    iVar1 = *(iVar4 + 8);\n    ppiVar5 = ppiVar3;\n    do {\n        *ppiVar5 = NULL;\n        var_8h = NULL;\n        for (iVar2 = *(var_14h + *(in_ECX + 0x14)); iVar2 != 0; iVar2 = *(iVar2 + 4)) {\n            piVar6 = fcn.0041fd5b(0x30, uVar10);\n            fcn.0040c25d();\n            if (*ppiVar5 == NULL) {\n                *ppiVar5 = piVar6;\n            }\n            piVar6[1] = 0;\n            *piVar6 = var_8h;\n            piVar6[2] = *(iVar2 + 8);\n            piVar6[8] = *(iVar2 + 0x20);\n            piVar6[9] = *(iVar2 + 0x24);\n            if (piVar6 + 3 != iVar2 + 0xc) {\n                fcn.0040c1c3(iVar2 + 0xc);\n            }\n            fcn.0041fd5b(0x10, uVar10);\n            uVar10 = *(iVar2 + 0x28);\n            iVar7 = fcn.00402290(uVar10);\n            iVar8 = 0;\n            piVar6[10] = iVar7;\n            if (0 < iVar1) {\n                ppiVar9 = *(iVar4 + 4);\n                do {\n                    if (**ppiVar9 == iVar2) {\n                        **(*(iVar4 + 4) + iVar8 * 4) = piVar6;\n                        break;\n                    }\n                    iVar8 = iVar8 + 1;\n                    ppiVar9 = ppiVar9 + 1;\n                } while (iVar8 < iVar1);\n            }\n            if (var_8h != NULL) {\n                var_8h[1] = piVar6;\n            }\n            var_8h = piVar6;\n        }\n        var_14h = var_14h + 4;\n        ppiVar5 = ppiVar5 + 1;\n        if (0x3ff < var_14h) {\n            *(in_ECX + 0x14) = ppiVar3;\n            *(in_ECX + 0x10) = iVar4;\n            *(in_ECX + 8) = *(arg_8h + 8);\n            *(in_ECX + 0xc) = *(arg_8h + 0xc);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 808
    },
    "004021a5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004021a5(int32_t *arg_8h)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_EDI;\n    uint var_4h;\n    \n    iVar2 = fcn.0041fd5b(0x214, unaff_EDI);\n    *(iVar2 + 8) = *(*arg_8h + 8);\n    iVar5 = 0;\n    iVar4 = *(*arg_8h + 0x10c);\n    *(iVar2 + 0x10c) = iVar4;\n    if (0 < iVar4) {\n        iVar4 = 0xc;\n        do {\n            iVar5 = iVar5 + 1;\n            *(iVar4 + iVar2) = *(iVar4 + *arg_8h);\n            iVar4 = iVar4 + 4;\n        } while (iVar5 < *(iVar2 + 0x10c));\n    }\n    iVar5 = 0;\n    iVar4 = *(*arg_8h + 0x210);\n    *(iVar2 + 0x210) = iVar4;\n    if (0 < iVar4) {\n        iVar4 = 0x110;\n        do {\n            iVar5 = iVar5 + 1;\n            *(iVar4 + iVar2) = *(iVar4 + *arg_8h);\n            iVar4 = iVar4 + 4;\n        } while (iVar5 < *(iVar2 + 0x210));\n    }\n    iVar4 = *(*arg_8h + 4);\n    *in_ECX = iVar2;\n    iVar1 = *(iVar2 + 8) * 4;\n    uVar3 = fcn.0041fd8b(-(iVar1 >> 0x20 != 0) | iVar1);\n    iVar5 = 0;\n    *(*in_ECX + 4) = uVar3;\n    iVar2 = *in_ECX;\n    if (0 < *(iVar2 + 8)) {\n        do {\n            if (*(iVar4 + iVar5 * 4) == 0) {\n                *(*(iVar2 + 4) + iVar5 * 4) = 0;\n            }\n            else {\n                fcn.0041fd5b(0x10, unaff_EDI);\n                uVar3 = fcn.00402290(*(iVar4 + iVar5 * 4));\n                *(*(*in_ECX + 4) + iVar5 * 4) = uVar3;\n            }\n            iVar2 = *in_ECX;\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < *(iVar2 + 8));\n    }\n    return;\n}\n",
        "token_count": 606
    },
    "0040240a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040240a(uint *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    *param_1 = 0x49cdd8;\n    iVar3 = *param_1[1];\n    if ((iVar3 == 1) || (iVar3 == 0x7fffffff)) {\n        iVar3 = 0;\n        do {\n            iVar2 = param_1[5];\n            iVar4 = *(iVar3 + iVar2);\n            if (iVar4 != 0) {\n                do {\n                    piVar1 = iVar4 + 0x28;\n                    iVar4 = *(iVar4 + 4);\n                    if (*piVar1 != 0) {\n                        fcn.004024b5(*piVar1);\n                    }\n                    fcn.0040249a();\n                } while (iVar4 != 0);\n                iVar2 = param_1[5];\n            }\n            iVar3 = iVar3 + 4;\n        } while (iVar3 < 0x400);\n        fcn.0041fd94(iVar2);\n        if (param_1[4] != NULL) {\n            (***param_1[4])(1);\n        }\n        fcn.0041fd4d(param_1[1]);\n    }\n    else {\n        *param_1[1] = iVar3 + -1;\n    }\n    *param_1 = 0x49cdc8;\n    return;\n}\n",
        "token_count": 341
    },
    "004025f5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004025f5(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t **ppiVar8;\n    uchar *puVar9;\n    uchar *unaff_ESI;\n    uint32_t uVar10;\n    char cVar11;\n    bool bVar12;\n    uchar *puStack108;\n    uchar *in_stack_ffffffa0;\n    int32_t iStack76;\n    uchar auStack68 [4];\n    uchar auStack64 [8];\n    uchar auStack56 [12];\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    int32_t *piStack32;\n    uchar auStack28 [24];\n    \n    uVar6 = *(arg_8h + 8);\n    fcn.0040c25d();\n    cVar11 = uVar6 == 1;\n    if (1 < uVar6) {\n        iVar4 = *(*(arg_8h + 4) + 4);\n        in_stack_ffffffa0 = 0x402639;\n        cVar11 = fcn.00401fb9(0x2a);\n        if (cVar11 == '\\0') {\n            bVar12 = *(iVar4 + 0xc) == 0xe;\n            if (bVar12) {\n                in_stack_ffffffa0 = &stack0xffffffe4;\n                puVar9 = fcn.00471037(in_stack_ffffffa0);\n                iStack76 = 1;\n            }\n            else {\n                fcn.00408e90();\n                puVar1 = *(iVar4 + 8);\n                in_stack_ffffffa0 = 0x2;\n                uStack44 = *puVar1;\n                uStack40 = puVar1[1];\n                uStack36 = puVar1[2];\n                piStack32 = puVar1[3];\n                *piStack32 = *piStack32 + 1;\n                puVar9 = &stack0xffffffd4;\n            }\n            if (&stack0xffffffc0 != puVar9) {\n                fcn.0040c1c3(puVar9);\n            }\n            if (!bVar12) {\n                fcn.0040b1ff();\n            }\n            if (iStack76 != 0) {\n                fcn.0040b1ff();\n            }\n            iVar4 = fcn.004025c1(&stack0xffffffc0);\n            if (iVar4 == 0) {\n                fcn.0040e8a0();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n                iVar4 = *(*in_ECX + 4);\n                iVar7 = *(in_ECX + iVar4 + 8);\n                if (*(in_ECX + iVar4 + 0xd) != '\\0') {\n                    iVar7 = *(iVar7 + 0x38);\n                }\n                *(iVar7 + 0x14) = 1;\n                iVar7 = *(in_ECX + iVar4 + 8);\n                if (*(in_ECX + iVar4 + 0xd) != '\\0') {\n                    iVar7 = *(iVar7 + 0x38);\n                }\n                *(iVar7 + 0x18) = 0;\n                goto code_r0x00402846;\n            }\n        }\n    }\n    iVar4 = **(arg_8h + 4);\n    fcn.00408e90();\n    puStack108 = 0x4026d1;\n    fcn.0040b606(**(iVar4 + 8));\n    puStack108 = &stack0xffffffa7;\n    puVar9 = &stack0xffffffa6;\n    puVar5 = &stack0xffffffa4;\n    cVar3 = fcn.004028c0(&stack0xffffffc8, &stack0xffffffac, &stack0xffffffa5, puVar5, puVar9, puStack108);\n    fcn.0040b1ff();\n    if (cVar3 == '\\0') {\n        if (puStack108 == 0xffffffff) {\n            iVar4 = *(*in_ECX + 4);\n            iVar7 = *(in_ECX + iVar4 + 8);\n            if (*(in_ECX + iVar4 + 0xd) != '\\0') {\n                iVar7 = *(iVar7 + 0x38);\n            }\n            *(iVar7 + 0x14) = 1;\n            iVar7 = *(in_ECX + iVar4 + 8);\n            if (*(in_ECX + iVar4 + 0xd) != '\\0') {\n                iVar7 = *(iVar7 + 0x38);\n            }\n            *(iVar7 + 0x18) = 0;\n        }\ncode_r0x00442da7:\n        fcn.0040e8a0();\n        *arg_ch = 0;\n    }\n    else {\n        if ((puStack108 == 0x13) && (puVar5 != '\\0')) {\n            puStack108 = 0x3;\n        }\n        if (puVar5 >> 8 != '\\0') {\n            puVar9 = 0x4;\n        }\n        if (puVar5 != '\\0') {\n            puVar9 = puVar9 | 2;\n        }\n        if (puVar5 >> 0x10 != '\\0') {\n            puVar9 = puVar9 | 1;\n        }\n        if (puVar5 >> 0x18 != '\\0') {\n            puVar9 = puVar9 | 8;\n        }\n        uVar10 = 0;\n        uVar6 = puStack108 << 0x10 | puVar9;\n        puStack108 = in_ECX[0x74];\n        if (puStack108 != NULL) {\n            do {\n                iVar4 = **(in_ECX[0x73] + uVar10 * 4);\n                if ((iVar4 != 0) && (*(iVar4 + 4) == uVar6)) {\n                    piVar2 = *(in_ECX[0x73] + uVar10 * 4);\n                    if (cVar11 == '\\0') {\n                        if (*piVar2 + 8 != &stack0xffffffa0) {\n                            fcn.0040c1c3(&stack0xffffffa0);\n                        }\n                    }\n                    else {\n                        (*_sym.imp.USER32.dll_UnregisterHotKey)(*0x4d138c, **piVar2);\n                        iVar4 = in_ECX[0x73];\n                        if (**(iVar4 + uVar10 * 4) != 0) {\n                            puStack108 = 0x442e3d;\n                            fcn.004029db();\n                            iVar4 = in_ECX[0x73];\n                        }\n                        **(iVar4 + uVar10 * 4) = 0;\n                    }\n                    goto code_r0x00402846;\n                }\n                uVar10 = uVar10 + 1;\n            } while (uVar10 < in_ECX[0x74]);\n        }\n        if (cVar11 != '\\0') goto code_r0x00442da7;\n        puVar9 = NULL;\n        if (puStack108 != NULL) {\n            ppiVar8 = in_ECX[0x73];\n            do {\n                if (**ppiVar8 == 0) break;\n                puVar9 = puVar9 + 1;\n                ppiVar8 = ppiVar8 + 1;\n            } while (puVar9 < in_ECX[0x74]);\n        }\n        puVar5 = fcn.0041fd5b(0x28, uVar6);\n        fcn.0040c25d();\n        fcn.0040c25d();\n        if (puVar9 == puStack108) {\n            puStack108 = puVar5;\n            fcn.0040285a(&stack0xffffff94);\n        }\n        else {\n            **(in_ECX[0x73] + puVar9 * 4) = puVar5;\n        }\n        ***(in_ECX[0x73] + puVar9 * 4) = puVar9;\n        *(**(in_ECX[0x73] + puVar9 * 4) + 4) = 0;\n        if (**(in_ECX[0x73] + puVar9 * 4) + 8 != &stack0xffffffbc) {\n            puStack108 = 0x4027f2;\n            fcn.0040c1c3(&stack0xffffffbc);\n        }\n        iVar4 = **(arg_8h + 4);\n        fcn.00408e90();\n        iVar7 = in_ECX[0x73];\n        puStack108 = unaff_ESI;\n        if (**(iVar7 + puVar9 * 4) + 0x18 != *(iVar4 + 8)) {\n            puStack108 = 0x40281c;\n            fcn.0040c1c3(*(iVar4 + 8));\n            iVar7 = in_ECX[0x73];\n            puStack108 = unaff_ESI;\n        }\n        iVar4 = (*_sym.imp.USER32.dll_RegisterHotKey)(*0x4d138c, ***(iVar7 + puVar9 * 4));\n        if (iVar4 != 0) goto code_r0x00402846;\n        iVar4 = in_ECX[0x73];\n        if (**(iVar4 + puVar9 * 4) != 0) {\n            puStack108 = 0x442ec3;\n            fcn.004029db();\n            iVar4 = in_ECX[0x73];\n        }\n        **(iVar4 + puVar9 * 4) = 0;\n        puStack108 = 0x442ed7;\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00407cb4(arg_8h_00, in_stack_ffffffa0);\n        fcn.0040e8a0();\n        *arg_ch = 0;\n    }\n    arg_ch[3] = 1;\ncode_r0x00402846:\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 2298
    },
    "0040285a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040285a(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    uint unaff_ESI;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        uVar2 = 8;\n        if (7 < uVar1) {\n            uVar2 = uVar1;\n        }\n        *(in_ECX + 0xc) = uVar2;\n        uVar3 = fcn.0041fd8b(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.00420db0(uVar3, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.0041fd94(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar3;\n    }\n    puVar4 = fcn.0041fd5b(4, unaff_ESI);\n    *puVar4 = *arg_8h;\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar4;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 366
    },
    "004028c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.004028c0(int32_t arg_8h, uint32_t *arg_ch, uchar *arg_10h, uchar *arg_14h, uchar *arg_18h, uchar *arg_1ch)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uchar *puVar7;\n    ushort *puVar8;\n    uint8_t uVar9;\n    int32_t iVar11;\n    ushort uVar12;\n    uint var_1ch;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    uint8_t uVar10;\n    \n    uVar3 = 0;\n    var_4h = 0;\n    uVar10 = 1;\n    uVar9 = 1;\n    var_ch = 0;\n    if (*(arg_8h + 4) == 0) {\ncode_r0x004029d7:\n        uVar6 = uVar3 & 0xffffff00;\n    }\n    else {\n        var_8h = 0x23;\n        *arg_1ch = 0;\n        *arg_ch = 0;\n        *arg_18h = 0;\n        *arg_14h = 0;\n        *arg_10h = 0;\n        while( true ) {\n            iVar11 = var_4h;\n            piVar4 = fcn.004058ca(var_4h);\n            iVar2 = *piVar4;\n            if ((((iVar2 != 0x2b) && (iVar2 != 0x5e)) && (iVar2 != 0x21)) && (iVar2 != var_8h)) break;\n            puVar7 = arg_10h;\n            if (((iVar2 == 0x2b) || (puVar7 = arg_14h,  iVar2 == 0x5e)) ||\n               ((puVar7 = arg_18h,  iVar2 == 0x21 || (puVar7 = arg_1ch,  iVar2 == 0x23)))) {\n                *puVar7 = 1;\n            }\n            var_4h = var_4h + 1;\n        }\n        arg_1ch = iVar11 + 1;\n        piVar4 = fcn.004058ca(iVar11);\n        iVar11 = var_ch;\n        if (*piVar4 == 0x7b) {\n            fcn.00407c18(0x40);\n            cVar1 = fcn.00403555(&var_1ch, &arg_1ch);\n            if (cVar1 == '\\0') {\ncode_r0x004029d3:\n                uVar9 = 0;\n            }\n            else {\n                do {\n                    iVar5 = fcn.004249b8(*(iVar11 * 4 + 0x4b1200), var_1ch);\n                    if (iVar5 == 0) break;\n                    iVar11 = iVar11 + 1;\n                } while (iVar11 < 99);\n                uVar9 = uVar10;\n                if (iVar11 == 99) {\n                    if ((arg_1ch == 0x2) && (piVar4 = fcn.004058ca(2),  *piVar4 == 0x7d)) {\n                        uVar12 = 0x7d;\n                    }\n                    else {\n                        puVar8 = fcn.0040660f(0);\n                        uVar12 = *puVar8;\n                    }\n                    iVar2 = (*_sym.imp.USER32.dll_VkKeyScanW)(uVar12);\n                    uVar3 = iVar2;\n                    *arg_ch = uVar3;\n                    if (uVar3 == 0xffffffff) {\n                        uVar3 = fcn.0040b1ff();\n                        goto code_r0x004029d7;\n                    }\n                    if ((uVar3 & 0x200) != 0) {\n                        *arg_14h = 1;\n                    }\n                    if ((uVar3 & 0x400) != 0) {\n                        *arg_18h = 1;\n                    }\n                    if ((uVar3 & 0x100) != 0) {\n                        *arg_10h = 1;\n                    }\n                }\n                else {\n                    if (*(iVar11 + 0x4b1198) != '\\0') goto code_r0x004029d3;\n                    *arg_ch = str._f_b_b..__reepqrstuvwxyz________t__[iVar11];\n                }\n            }\n            fcn.0040b1ff();\n            uVar3 = *arg_ch;\n        }\n        else {\n            iVar2 = (*_sym.imp.USER32.dll_VkKeyScanW)(*piVar4);\n            uVar3 = iVar2;\n            *arg_ch = uVar3;\n            if (uVar3 == 0xffffffff) goto code_r0x004029d7;\n            if ((uVar3 & 0x200) != 0) {\n                *arg_14h = 1;\n            }\n            if ((uVar3 & 0x400) != 0) {\n                *arg_18h = 1;\n            }\n            if ((uVar3 & 0x100) != 0) {\n                *arg_10h = 1;\n            }\n        }\n        uVar6 = uVar3 & 0xffffff00 | uVar9;\n        *arg_ch = uVar3 & 0xff;\n    }\n    return uVar6;\n}\n",
        "token_count": 1244
    },
    "00402d1b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402d1b(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint *arg_8h;\n    uint *puVar6;\n    uint *puVar7;\n    int32_t var_4h;\n    \n    piVar1 = param_1 + -0x46c;\n    *(*(*piVar1 + 4) + -0x46c + param_1) = 0x49ce24;\n    *(*(*piVar1 + 4) + -0x470 + param_1) = *(*piVar1 + 4) + -0x46c;\n    var_4h = param_1;\n    if (*(param_1 + -900) != 0) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(*(param_1 + -900));\n    }\n    uVar4 = 0;\n    arg_8h = 0x49ce10;\n    (*_sym.imp.WINMM.dll_mciSendStringW)(0x49ce10, 0, 0, 0);\n    if (*(param_1 + -0x29c) != 0) {\n        do {\n            puVar6 = **(*(param_1 + -0x2a0) + uVar4 * 4);\n            if (puVar6 != NULL) {\n                uVar5 = *puVar6;\n                (*_sym.imp.USER32.dll_UnregisterHotKey)(*0x4d138c, uVar5);\n                puVar6 = **(*(param_1 + -0x2a0) + uVar4 * 4);\n                if (puVar6 != NULL) {\n                    fcn.004029db(uVar5, puVar6);\n                    arg_8h = puVar6;\n                }\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *(param_1 + -0x29c));\n    }\n    uVar4 = 0;\n    if (*(param_1 + -0x2cc) != 0) {\n        do {\n            piVar2 = **(*(param_1 + -0x2d0) + uVar4 * 4);\n            if (piVar2 != NULL) {\n                if (*piVar2 == 0) {\n                    fcn.00407bee();\n                }\n                else {\n                    (*_sym.imp.KERNEL32.dll_FindClose)(piVar2[2]);\n                }\n                iVar3 = **(*(param_1 + -0x2d0) + uVar4 * 4);\n                if (iVar3 != 0) {\n                    fcn.004731cf(iVar3);\n                }\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *(param_1 + -0x2cc));\n    }\n    fcn.00403139();\n    uVar4 = 0;\n    if (*(param_1 + -700) != 0) {\n        do {\n            piVar2 = *(*(param_1 + -0x2c0) + uVar4 * 4);\n            if (*piVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(*piVar2);\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *(param_1 + -700));\n    }\n    uVar4 = 0;\n    if (*(param_1 + -0x2ac) != 0) {\n        do {\n            iVar3 = **(*(param_1 + -0x2b0) + uVar4 * 4);\n            if (iVar3 != 0) {\n                uVar5 = 0x8000;\n                (*_sym.imp.KERNEL32.dll_VirtualFree)(*(iVar3 + 0x10), 0, 0x8000);\n                puVar6 = **(*(param_1 + -0x2b0) + uVar4 * 4);\n                if (puVar6 != NULL) {\n                    fcn.00473235(uVar5, puVar6);\n                    arg_8h = puVar6;\n                }\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *(param_1 + -0x2ac));\n    }\n    fcn.0040e8a0();\n    *(param_1 + -0x288) = 1;\n    *(param_1 + -0x294) = 0;\n    if (*(*(*piVar1 + 4) + param_1 + -0x468) != 0) {\n        var_4h = 0;\n        do {\n            arg_8h = &var_4h;\n            fcn.00403310(arg_8h);\n            fcn.004032b9();\n        } while (*(*(*piVar1 + 4) + param_1 + -0x468) != 0);\n    }\n    (*_sym.imp.ole32.dll_OleUninitialize)();\n    puVar6 = *(param_1 + -0x20);\n    if (puVar6 != NULL) {\n        piVar1 = puVar6 + 1;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            (***puVar6)(1);\n        }\n    }\n    puVar6 = *(param_1 + -0x2c);\n    while (puVar7 = puVar6,  puVar7 != NULL) {\n        puVar6 = puVar7[1];\n        fcn.00473209();\n        arg_8h = puVar7;\n    }\n    *(param_1 + -0x24) = 0;\n    puVar6 = *(param_1 + -0x3c);\n    while (puVar7 = puVar6,  puVar7 != NULL) {\n        puVar6 = puVar7[1];\n        fcn.0041f8ed();\n        arg_8h = puVar7;\n    }\n    *(param_1 + -0x34) = 0;\n    fcn.0040b1ff(arg_8h);\n    fcn.0040324f();\n    *(param_1 + -0x19c) = 0x49ce08;\n    fcn.004030e0();\n    fcn.0041fd94(*(param_1 + -0x198));\n    fcn.00403087();\n    fcn.0040b1ff();\n    fcn.0040e8a0();\n    *(param_1 + -0x2a4) = 0x49ce0c;\n    fcn.00403109();\n    fcn.0041fd94(*(param_1 + -0x2a0));\n    uVar4 = 0;\n    *(param_1 + -0x2b4) = 0x49cde8;\n    if (*(param_1 + -0x2ac) != 0) {\n        do {\n            fcn.0041fd4d(*(*(param_1 + -0x2b0) + uVar4 * 4));\n            *(*(param_1 + -0x2b0) + uVar4 * 4) = 0;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *(param_1 + -0x2ac));\n    }\n    *(param_1 + -0x2ac) = 0;\n    fcn.0041fd94(*(param_1 + -0x2b0));\n    uVar4 = 0;\n    *(param_1 + -0x2c4) = 0x49cde8;\n    if (*(param_1 + -700) != 0) {\n        do {\n            fcn.0041fd4d(*(*(param_1 + -0x2c0) + uVar4 * 4));\n            *(*(param_1 + -0x2c0) + uVar4 * 4) = 0;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *(param_1 + -700));\n    }\n    *(param_1 + -700) = 0;\n    fcn.0041fd94(*(param_1 + -0x2c0));\n    uVar4 = 0;\n    *(param_1 + -0x2d4) = 0x49cde8;\n    if (*(param_1 + -0x2cc) != 0) {\n        do {\n            fcn.0041fd4d(*(*(param_1 + -0x2d0) + uVar4 * 4));\n            *(*(param_1 + -0x2d0) + uVar4 * 4) = 0;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *(param_1 + -0x2cc));\n    }\n    uVar5 = *(param_1 + -0x2d0);\n    *(param_1 + -0x2cc) = 0;\n    fcn.0041fd94(uVar5);\n    puVar6 = *(param_1 + -0x2dc);\n    while (puVar7 = puVar6,  puVar7 != NULL) {\n        puVar6 = puVar7[4];\n        fcn.0046642a(uVar5, puVar7);\n        arg_8h = puVar7;\n    }\n    *(param_1 + -0x2f0) = 0x49ce08;\n    fcn.004030e0();\n    uVar5 = *(param_1 + -0x2ec);\n    fcn.0041fd94(uVar5);\n    puVar6 = *(param_1 + -0x2f8);\n    while (puVar7 = puVar6,  puVar7 != NULL) {\n        puVar6 = puVar7[4];\n        fcn.0041b3e0(uVar5, puVar7);\n        arg_8h = puVar7;\n    }\n    puVar6 = *(param_1 + -0x304);\n    while (puVar7 = puVar6,  puVar7 != NULL) {\n        puVar6 = puVar7[0xc];\n        fcn.00473163(uVar5, puVar7);\n        arg_8h = puVar7;\n    }\n    fcn.0040b1ff();\n    fcn.00403215();\n    puVar6 = *(param_1 + -0x33c);\n    while (puVar7 = puVar6,  puVar7 != NULL) {\n        puVar6 = puVar7[1];\n        fcn.004731ea();\n        arg_8h = puVar7;\n    }\n    *(param_1 + -0x334) = 0;\n    puVar6 = *(param_1 + -0x348);\n    while (puVar7 = puVar6,  puVar7 != NULL) {\n        puVar6 = puVar7[1];\n        fcn.004731ea();\n        arg_8h = puVar7;\n    }\n    *(param_1 + -0x340) = 0;\n    fcn.0040b1ff(arg_8h);\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.00403181();\n    return;\n}\n",
        "token_count": 2551
    },
    "0040b1ff": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b1ff(uint *param_1)\n\n{\n    *param_1[3] = *param_1[3] + -1;\n    if (*param_1[3] == 0) {\n        fcn.0041fd94(*param_1);\n        fcn.0041fd4d(param_1[3]);\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00403215": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403215(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    \n    if (param_1[2] != 0) {\n        fcn.0041fd94(param_1[2]);\n    }\n    arg_8h = *param_1;\n    if (arg_8h != 0) {\n        do {\n            iVar1 = *(arg_8h + 0x24);\n            fcn.0040b1ff();\n            fcn.0041fd4d(arg_8h);\n            arg_8h = iVar1;\n        } while (iVar1 != 0);\n        return;\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "00403310": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403310(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint *puVar3;\n    \n    puVar3 = *(in_ECX + 8);\n    if (*(in_ECX + 0xd) != '\\0') {\n        puVar3 = puVar3[0xe];\n    }\n    uVar1 = *arg_8h;\n    fcn.0040e8a0();\n    *puVar3 = uVar1;\n    puVar3[3] = 1;\n    iVar2 = *(in_ECX + 8);\n    if (*(in_ECX + 0xd) != '\\0') {\n        iVar2 = *(iVar2 + 0x38);\n    }\n    *(iVar2 + 0x10) = 0;\n    return;\n}\n",
        "token_count": 194
    },
    "004033b6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004033b6(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint unaff_ESI;\n    \n    if (*(in_ECX + 9) == '\\0') {\n        iVar1 = fcn.0041fd5b(0x40, unaff_ESI);\n        fcn.004033ec(arg_8h);\n        *(iVar1 + 0x38) = in_ECX[1];\n        in_ECX[1] = iVar1;\n    }\n    else {\n        fcn.00473127(arg_8h);\n        *(in_ECX + 9) = 0;\n    }\n    *in_ECX = *in_ECX + 1;\n    return;\n}\n",
        "token_count": 169
    },
    "004035b3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004035b3(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    uint32_t *in_EDX;\n    ulong uVar5;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.004248f3(in_ECX);\n    *in_EDX = 0;\n    in_EDX[1] = 0;\n    var_8h = 0;\n    iVar3 = iVar3 + -1;\n    if (0 < arg_8h) {\n        do {\n            if (iVar3 < 0) break;\n            iVar1 = *(in_ECX + iVar3 * 2);\n            if (((9 < iVar1 - 0x30U) && (5 < iVar1 - 0x41U)) && (5 < iVar1 - 0x61U)) goto code_r0x00443315;\n            uVar5 = fcn.00441ce0();\n            uVar2 = *in_EDX;\n            *in_EDX = *in_EDX + uVar5;\n            in_EDX[1] = in_EDX[1] + (uVar5 >> 0x20) + CARRY4(uVar2, uVar5);\n            iVar3 = iVar3 + -1;\n            var_8h = var_8h + 1;\n        } while (var_8h < arg_8h);\n    }\n    if (iVar3 == -1) {\n        uVar4 = 1;\n    }\n    else {\ncode_r0x00443315:\n        *in_EDX = 0;\n        in_EDX[1] = 0;\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 419
    },
    "null": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl main(uint argv, uint noname_1, uint argv)\n\n{\n    uint uVar1;\n    \n    if (*0x4d13bd == '\\0') {\n        uVar1 = 1;\n    }\n    else {\n        *0x4d135c = 0;\n        *0x4d1350 = 0;\n        *0x4d1358 = argv;\n        *0x4d1390 = (*_sym.imp.UxTheme.dll_IsThemeActive)();\n        fcn.00424ed3(0x460a59);\n        fcn.00424f39(1);\n        fcn.00403656();\n        fcn.0040445d(argv);\n        (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x2001, 0, *0x4d2594, 2);\n        uVar1 = *0x4d135c;\n    }\n    return uVar1;\n}\n",
        "token_count": 206
    },
    "0040379a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040379a(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t *piVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    ulong uVar5;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint var_30h;\n    uint var_20h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_8h = 1;\n    fcn.00404343();\n    var_40h = 1;\n    iVar4 = fcn.0040399a(arg_8h, &var_8h, &var_1h);\n    if (-1 < iVar4) {\n        iVar4 = *(*(arg_8h + 4) + var_8h * 4);\n        if (*(iVar4 + 8) == 0x7f) {\n            bVar3 = false;\n            iVar4 = *arg_ch;\n            var_3ch = iVar4 + -1;\n            while( true ) {\n                arg_8h_00 = *arg_ch;\n                *arg_ch = arg_8h_00 + 1;\n                uVar5 = fcn.004041dc(arg_8h_00);\n                arg_ch = uVar5 >> 0x20;\n                if ((uVar5 == 0) || (bVar3)) break;\n                piVar1 = **(uVar5 + 4);\n                if ((((*(piVar1 + 2) == 0) && (iVar2 = *piVar1,  iVar2 != 9)) && (iVar2 == 10)) && (extraout_ECX == 0))\n                {\n                    bVar3 = true;\n                    var_38h = arg_8h_00;\n                }\n            }\n            if (var_1h == '\\0') {\n                *arg_ch = var_38h + 1;\n            }\n            else {\n                *arg_ch = iVar4;\n                fcn.004042c5(&var_40h);\n            }\n        }\n        else {\n            fcn.004734ba(0x72, *(iVar4 + 10));\n        }\n    }\n    fcn.0040e8a0();\n    fcn.0040e8a0();\n    return;\n}\n",
        "token_count": 579
    },
    "0040389f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040389f(int32_t *arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    iVar1 = *(in_ECX + 0x168);\n    if (*(in_ECX + 0x16d) != '\\0') {\n        iVar1 = *(iVar1 + 0x30);\n    }\n    _auStack8 = in_ECX;\n    arg_8h_00 = fcn.004041dc(*(iVar1 + 4));\n    var_8h = 1;\n    iVar1 = fcn.0040399a(arg_8h_00, &var_8h, &var_1h);\n    if (-1 < iVar1) {\n        if (var_1h == '\\0') {\n            fcn.00404271();\n        }\n        else {\n            iVar1 = *(in_ECX + 0x168);\n            if (*(in_ECX + 0x16d) != '\\0') {\n                iVar1 = *(iVar1 + 0x30);\n            }\n            *arg_8h = *(iVar1 + 4) + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 318
    },
    "0040392b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040392b(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    var_8h = 1;\n    _auStack8 = in_ECX;\n    iVar1 = fcn.0040399a(arg_8h, &var_8h, &var_1h);\n    if (-1 < iVar1) {\n        iVar1 = *(*(arg_8h + 4) + var_8h * 4);\n        if (*(iVar1 + 8) == 0x7f) {\n            if (var_1h == '\\0') {\n                iVar1 = *(in_ECX + 0x168);\n                if (*(in_ECX + 0x16d) != '\\0') {\n                    iVar1 = *(iVar1 + 0x30);\n                }\n                *arg_ch = *(iVar1 + 4) + 1;\n            }\n            else {\n                fcn.00404271();\n            }\n        }\n        else {\n            fcn.004734ba(0x72, *(iVar1 + 10));\n        }\n    }\n    return;\n}\n",
        "token_count": 311
    },
    "004039e5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004039e5(double *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    \n    iVar1 = *(param_1 + 0xc);\n    piVar2 = iVar1 + -1;\n    if (piVar2 != NULL) {\n        if (iVar1 == 2) {\n            uVar3 = *param_1 | *(param_1 + 4);\n            if (uVar3 != 0) {\ncode_r0x0044337e:\n                return CONCAT31(uVar3 >> 8, 1);\n            }\ncode_r0x00443388:\n            return uVar3 & 0xffffff00;\n        }\n        if (iVar1 == 3) {\n            uVar3 = (0.0 < *param_1) << 8 | (*param_1 == 0.0) << 0xe;\n            if (POPCOUNT(uVar3 >> 8 & 0x44) == '\\0') goto code_r0x0044337e;\n            goto code_r0x00443388;\n        }\n        if (iVar1 == 4) {\n            piVar2 = *(param_1 + 1);\n            bVar4 = piVar2[1] == 0;\n            goto code_r0x00403a19;\n        }\n        piVar2 = iVar1 + -7;\n        if (piVar2 != NULL) {\n            if (iVar1 == 9) {\n                return *param_1;\n            }\n            uVar3 = iVar1 - 0xb;\n            if (uVar3 != 0) goto code_r0x00443388;\n            piVar2 = *param_1;\n            bVar4 = *piVar2 == 0;\n            goto code_r0x00403a19;\n        }\n    }\n    bVar4 = *param_1 == 0;\ncode_r0x00403a19:\n    return piVar2 & 0xffffff00 | !bVar4;\n}\n",
        "token_count": 457
    },
    "00403a6d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n\nuint fcn.00403a6d(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t arg_8h;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t unaff_EBX;\n    ulong uVar6;\n    uint in_stack_ffffffc0;\n    uint in_stack_ffffffc4;\n    uint in_stack_ffffffc8;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar4 = 1;\n    while( true ) {\n        do {\n            var_4h = iVar4 + 1;\n            uVar6 = fcn.004041dc(iVar4);\n            iVar4 = uVar6 >> 0x20;\n            arg_8h = uVar6;\n            if (arg_8h == 0) {\n                fcn.004043c1();\n                return 0;\n            }\n            *0x4d1528 = iVar4 + -1;\n            piVar1 = **(arg_8h + 4);\n        } while ((*(piVar1 + 2) != 0) || ((iVar2 = *piVar1,  iVar2 != 0x20 && (iVar2 != 0x2b))));\n        unaff_EBX = unaff_EBX & 0xffffff00 | iVar2 == 0x2b;\n        piVar1 = (*(arg_8h + 4))[(iVar2 == 0x2b) + 1];\n        if (*(piVar1 + 2) != 0x34) {\n            fcn.004734ba(0x69, 0xffffffff);\n            return 0xffffffff;\n        }\n        puVar3 = *piVar1;\n        var_14h = puVar3[1];\n        uVar5 = *puVar3;\n        var_10h = puVar3[2];\n        var_ch = puVar3[3];\n        *var_ch = *var_ch + 1;\n        var_18h = uVar5;\n        fcn.0040b606(uVar5);\n        iVar4 = fcn.0040c6f0(uVar5, in_stack_ffffffc0, in_stack_ffffffc4, in_stack_ffffffc8);\n        if (iVar4 != 0) break;\n        if (*(*(*(arg_8h + 4) + 8 + (iVar2 == 0x2b) * 4) + 8) != 0x47) {\n            uVar5 = 0x69;\n            goto code_r0x00443390;\n        }\n        var_8h = (iVar2 == 0x2b) + 3;\n        iVar4 = fcn.00407ed4(arg_8h, &var_8h, &var_18h, &var_4h, unaff_EBX);\n        if (iVar4 < 0) goto code_r0x0044339d;\n        fcn.0040b1ff();\n        iVar4 = var_4h;\n    }\n    uVar5 = 0x84;\ncode_r0x00443390:\n    fcn.004734ba(uVar5, 0xffffffff);\ncode_r0x0044339d:\n    fcn.0040b1ff();\n    return 0xffffffff;\n}\n",
        "token_count": 786
    },
    "00403c08": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004040ff)\n// WARNING: Removing unreachable block (ram,0x0040419b)\n// WARNING: Removing unreachable block (ram,0x0040410c)\n// WARNING: Removing unreachable block (ram,0x00443433)\n// WARNING: Removing unreachable block (ram,0x0044343c)\n// WARNING: Removing unreachable block (ram,0x0044343f)\n// WARNING: Removing unreachable block (ram,0x004434e6)\n// WARNING: Removing unreachable block (ram,0x004434f4)\n// WARNING: Removing unreachable block (ram,0x004434ec)\n// WARNING: Removing unreachable block (ram,0x004434f7)\n// WARNING: Removing unreachable block (ram,0x00443582)\n// WARNING: Removing unreachable block (ram,0x0044358b)\n// WARNING: Removing unreachable block (ram,0x0044358e)\n// WARNING: Removing unreachable block (ram,0x004434aa)\n// WARNING: Removing unreachable block (ram,0x004434b3)\n// WARNING: Removing unreachable block (ram,0x004434b6)\n// WARNING: Removing unreachable block (ram,0x00403e8b)\n// WARNING: Removing unreachable block (ram,0x004433cd)\n// WARNING: Removing unreachable block (ram,0x00403e9b)\n// WARNING: Removing unreachable block (ram,0x0040415d)\n// WARNING: Removing unreachable block (ram,0x004041a8)\n// WARNING: Removing unreachable block (ram,0x00404169)\n// WARNING: Removing unreachable block (ram,0x00403f80)\n// WARNING: Removing unreachable block (ram,0x004433dd)\n// WARNING: Removing unreachable block (ram,0x00403f90)\n// WARNING: Removing unreachable block (ram,0x0044350e)\n// WARNING: Removing unreachable block (ram,0x0044351c)\n// WARNING: Removing unreachable block (ram,0x00443514)\n// WARNING: Removing unreachable block (ram,0x0044351f)\n\nint32_t fcn.00403c08(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint extraout_ECX;\n    int32_t **ppiVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t arg_8h;\n    ulong uVar10;\n    uint arg_8h_00;\n    int32_t iVar11;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    int32_t var_70h;\n    int32_t var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_68h = 1;\n    var_ch = 0;\n    var_20h = 0;\n    var_4ch = 0;\n    var_8h = 0;\n    var_4h = 0;\n    var_10h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    iVar7 = 0;\n    arg_8h = 0;\ncode_r0x00403cf0:\n    do {\n        var_24h = arg_8h;\n        uVar10 = fcn.004041dc(var_68h);\n        var_28h = uVar10;\n        var_68h = var_68h + 1;\n        iVar8 = -1;\n        if (var_28h == 0) {\n            iVar7 = fcn.0040435d(0, var_10h, uVar10 >> 0x20, iVar7, var_20h, var_1ch, var_ch, var_18h);\n            if (-1 < iVar7) {\n                iVar8 = 0;\n            }\n            goto code_r0x00403fdd;\n        }\n        var_70h = 0;\n        ppiVar6 = *(var_28h + 4);\n        piVar5 = *ppiVar6;\n        uVar1 = *(piVar5 + 2);\n        var_14h = uVar1;\n        iVar4 = 0;\n        iVar7 = 0;\n        if (uVar1 != 0x7f) {\n            do {\n                iVar4 = iVar7;\n                iVar7 = iVar4 + 1;\n            } while (*(ppiVar6[iVar7] + 2) != 0x7f);\n            piVar5 = *ppiVar6;\n            if (iVar7 == 0) {\n                iVar4 = iVar7;\n            }\n        }\n        iVar8 = -1;\n        iVar7 = var_4h;\n        *0x4d1528 = extraout_ECX;\n    } while (uVar1 != 0);\n    iVar2 = *piVar5;\n    iVar11 = iVar8;\n    if (iVar2 < 0x14) {\n        if (0x11 < iVar2) {\n            if (((var_10h == 0) && (var_8h == 0)) && (var_4h == 0)) {\n                arg_8h_00 = 0x96;\n                goto code_r0x00443629;\n            }\n            goto code_r0x00403cf0;\n        }\n    // switch table (11 cases) at 0x4041b0\n        switch(iVar2) {\n        case 4:\n            piVar5 = *ppiVar6;\n            iVar3 = 0;\n            while ((iVar3 != 0 || (*piVar5 != 5))) {\n                var_70h = var_70h + 1;\n                piVar5 = ppiVar6[var_70h];\n                iVar3 = *(piVar5 + 2);\n                if (iVar3 == 0x7f) {\n                    arg_8h_00 = 0xa1;\n                    goto code_r0x00443629;\n                }\n            }\n            uVar9 = arg_8h;\n            if ((*(ppiVar6[iVar4] + 2) == 0) && (*ppiVar6[iVar4] == 5)) {\n                var_ch = var_ch + 1;\n                uVar9 = arg_8h + 1;\n                var_14h = arg_8h;\n                fcn.00404242(&var_14h);\n                ppiVar6 = *(var_28h + 4);\n            }\n            piVar5 = ppiVar6[var_70h + 1];\n            iVar7 = var_4h;\n            arg_8h = uVar9;\n            if (*(piVar5 + 2) == 0) {\n                if (0x11 < *piVar5) {\n                    if (*piVar5 < 0x14) {\n                        if (((var_10h == 0) && (var_8h == 0)) && (var_4h == 0)) {\n                            arg_8h_00 = 0x96;\n                            goto code_r0x00443629;\n                        }\n                        goto code_r0x00403cf0;\n                    }\n                    if ((0x18 < *piVar5) && ((*piVar5 < 0x1f || ((0x21 < *piVar5 && (*piVar5 < 0x24))))))\n                    goto code_r0x00403cf0;\n                }\n                arg_8h_00 = 0x9f;\n                iVar11 = *(piVar5 + 10);\n                goto code_r0x00443629;\n            }\n            goto code_r0x00403cf0;\n        case 5:\n            arg_8h_00 = 0x81;\n            iVar11 = -1;\n            goto code_r0x00443629;\n        case 6:\n            piVar5 = ppiVar6[1];\n            if (*(piVar5 + 2) != 0x7f) break;\n        case 7:\n            if (var_ch == 0) {\n                arg_8h_00 = 0x74;\n                iVar11 = -1;\n                goto code_r0x00443629;\n            }\n            goto code_r0x00403cf0;\n        case 8:\n            piVar5 = ppiVar6[1];\n            if (*(piVar5 + 2) == 0x7f) {\n                var_ch = var_ch + -1;\n                arg_8h = arg_8h - 1;\n                if ((var_ch < 0) || (arg_8h != var_24h)) {\n                    arg_8h_00 = 0x75;\n                    iVar11 = -1;\n                    goto code_r0x00443629;\n                }\n                goto code_r0x00403cf0;\n            }\n            break;\n        case 9:\n            var_8h = var_8h + 1;\n            var_14h = arg_8h;\n            fcn.00404242(&var_14h);\n            iVar7 = var_4h;\n            arg_8h = arg_8h + 1;\n            goto code_r0x00403cf0;\n        case 10:\n            piVar5 = ppiVar6[1];\n            if (*(piVar5 + 2) == 0x7f) {\n                var_8h = var_8h + -1;\n                arg_8h = arg_8h - 1;\n                if ((var_8h < 0) || (arg_8h != var_24h)) {\n                    arg_8h_00 = 0x78;\n                    iVar11 = -1;\n                    goto code_r0x00443629;\n                }\n                goto code_r0x00403cf0;\n            }\n            break;\n        case 0xb:\n            piVar5 = ppiVar6[1];\n            if (*(piVar5 + 2) != 0x7f) {\ncode_r0x0044360c:\n                arg_8h_00 = 0x72;\n                iVar11 = *(piVar5 + 10);\n                goto code_r0x00443629;\n            }\n            var_10h = var_10h + 1;\n            var_14h = arg_8h;\n            fcn.00404242(&var_14h);\n            iVar7 = var_4h;\n            arg_8h = arg_8h + 1;\n            goto code_r0x00403cf0;\n        case 0xc:\n            var_10h = var_10h + -1;\n            arg_8h = arg_8h - 1;\n            if ((var_10h < 0) || (arg_8h != var_24h)) {\n                arg_8h_00 = 0x93;\n                iVar11 = -1;\n                goto code_r0x00443629;\n            }\n            goto code_r0x00403cf0;\n        case 0xd:\n            iVar7 = var_4h + 1;\n            var_14h = arg_8h;\n            var_4h = iVar7;\n            fcn.00404242(&var_14h);\n            arg_8h = arg_8h + 1;\n            goto code_r0x00403cf0;\n        case 0xe:\n            piVar5 = ppiVar6[1];\n            if (*(piVar5 + 2) == 0x7f) {\n                var_4h = var_4h + -1;\n                arg_8h = arg_8h - 1;\n                if ((var_4h < 0) || (iVar7 = var_4h,  arg_8h != var_24h)) {\n                    arg_8h_00 = 0x95;\n                    iVar11 = -1;\n                    goto code_r0x00443629;\n                }\n            }\n            break;\n        default:\n            goto code_r0x00403cf0;\n        }\n    }\n    else {\n        if (0x20 < iVar2) {\n            if (iVar2 == 0x21) {\n                piVar5 = ppiVar6[1];\n                if (*(piVar5 + 2) != 0x7f) goto code_r0x004435e9;\n                var_4ch = var_4ch + -1;\n                if (var_4ch == 0) goto code_r0x00403f31;\n                arg_8h_00 = 0x83;\n                iVar11 = -1;\n                goto code_r0x00443629;\n            }\n            if (iVar2 == 0x25) {\n                var_18h = var_18h + 1;\n                var_28h = arg_8h;\n                fcn.00404242(&var_28h);\n                iVar7 = var_4h;\n                arg_8h = arg_8h + 1;\n            }\n            else if (iVar2 == 0x26) {\n                piVar5 = ppiVar6[1];\n                if (*(piVar5 + 2) != 0x7f) goto code_r0x004435e9;\n                var_18h = var_18h + -1;\n                arg_8h = arg_8h - 1;\n                if ((var_18h < 0) || (arg_8h != var_24h)) {\n                    arg_8h_00 = 0x68;\n                    iVar11 = -1;\ncode_r0x00443629:\n                    fcn.004734ba(arg_8h_00, iVar11);\ncode_r0x00403fdd:\n                    fcn.004041ff();\n                    fcn.004041ff();\n                    fcn.004041ff();\n                    fcn.004041ff();\n                    fcn.004041ff();\n                    fcn.004041ff();\n                    fcn.004041ff();\n                    return iVar8;\n                }\n            }\n            else if (iVar2 == 0x2b) goto code_r0x00403f21;\n            goto code_r0x00403cf0;\n        }\n        if (iVar2 == 0x20) {\ncode_r0x00403f21:\n            var_4ch = var_4ch + 1;\n            if (1 < var_4ch) {\n                arg_8h_00 = 0x83;\n                goto code_r0x00443629;\n            }\ncode_r0x00403f31:\n            iVar4 = fcn.0040435d(arg_8h, var_10h, var_8h, var_4h, var_20h, var_1ch, var_ch, var_18h);\n            if (iVar4 < 0) goto code_r0x00403fdd;\n            goto code_r0x00403cf0;\n        }\n        if (iVar2 == 0x14) {\n            piVar5 = ppiVar6[1];\n            if (*(piVar5 + 2) != 0x7f) goto code_r0x0044360c;\n            var_20h = var_20h + 1;\n            var_28h = arg_8h;\n            fcn.00404242(&var_28h);\n            iVar7 = var_4h;\n            arg_8h = arg_8h + 1;\n            goto code_r0x00403cf0;\n        }\n        if (iVar2 == 0x15) {\n            arg_8h_00 = 0x98;\n            iVar11 = -1;\n            goto code_r0x00443629;\n        }\n        if (iVar2 == 0x16) {\n            piVar5 = ppiVar6[1];\n            if (*(piVar5 + 2) != 0x7f) goto code_r0x004435e9;\n            var_20h = var_20h + -1;\n            arg_8h = arg_8h - 1;\n            if ((var_20h < 0) || (arg_8h != var_24h)) {\n                arg_8h_00 = 0x99;\n                iVar11 = -1;\n                goto code_r0x00443629;\n            }\n            goto code_r0x00403cf0;\n        }\n        if (iVar2 == 0x17) {\n            var_1ch = var_1ch + 1;\n            var_28h = arg_8h;\n            fcn.00404242(&var_28h);\n            iVar7 = var_4h;\n            arg_8h = arg_8h + 1;\n            goto code_r0x00403cf0;\n        }\n        if (iVar2 != 0x18) goto code_r0x00403cf0;\n        piVar5 = ppiVar6[1];\n        if (*(piVar5 + 2) == 0x7f) {\n            var_1ch = var_1ch + -1;\n            arg_8h = arg_8h - 1;\n            if ((var_1ch < 0) || (arg_8h != var_24h)) {\n                arg_8h_00 = 0xb3;\n                iVar11 = -1;\n                goto code_r0x00443629;\n            }\n            goto code_r0x00403cf0;\n        }\n    }\ncode_r0x004435e9:\n    arg_8h_00 = 0x72;\n    iVar11 = *(piVar5 + 10);\n    goto code_r0x00443629;\n}\n",
        "token_count": 4148
    },
    "00404242": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404242(uint *arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *in_ECX;\n    uint unaff_ESI;\n    \n    if (*(in_ECX + 9) == '\\0') {\n        puVar1 = fcn.0041fd5b(8, unaff_ESI);\n        *puVar1 = *arg_8h;\n        puVar1[1] = in_ECX[1];\n        in_ECX[1] = puVar1;\n    }\n    else {\n        *in_ECX[1] = *arg_8h;\n        *(in_ECX + 9) = 0;\n    }\n    *in_ECX = *in_ECX + 1;\n    return;\n}\n",
        "token_count": 169
    },
    "004042c5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004042c5(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint unaff_ESI;\n    \n    if (*(in_ECX + 9) == '\\0') {\n        iVar1 = fcn.0041fd5b(0x38, unaff_ESI);\n        fcn.004042fb(arg_8h);\n        *(iVar1 + 0x30) = in_ECX[1];\n        in_ECX[1] = iVar1;\n    }\n    else {\n        fcn.0048562c(arg_8h);\n        *(in_ECX + 9) = 0;\n    }\n    *in_ECX = *in_ECX + 1;\n    return;\n}\n",
        "token_count": 170
    },
    "0040435d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040435d(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h)\n\n{\n    uint arg_8h_00;\n    \n    if (arg_8h < 1) {\n        if (arg_ch != 0) {\ncode_r0x004436d5:\n            arg_8h_00 = 0x92;\n            goto code_r0x004436e2;\n        }\n        if (arg_10h != 0) {\ncode_r0x004043af:\n            arg_8h_00 = 0x77;\n            goto code_r0x004436e2;\n        }\n        if (arg_14h != 0) {\ncode_r0x004436f4:\n            arg_8h_00 = 0x97;\n            goto code_r0x004436e2;\n        }\n        if (arg_18h != 0) {\ncode_r0x004436fd:\n            arg_8h_00 = 0xa0;\n            goto code_r0x004436e2;\n        }\n        if (arg_1ch != 0) {\ncode_r0x00443706:\n            arg_8h_00 = 0xb4;\n            goto code_r0x004436e2;\n        }\n        if (arg_20h != 0) {\ncode_r0x004043b8:\n            arg_8h_00 = 0x73;\n            goto code_r0x004436e2;\n        }\n    }\n    else {\n        if (arg_ch == arg_8h) goto code_r0x004436d5;\n        if (arg_10h == arg_8h) goto code_r0x004043af;\n        if (arg_14h == arg_8h) goto code_r0x004436f4;\n        if (arg_18h == arg_8h) goto code_r0x004436fd;\n        if (arg_1ch == arg_8h) goto code_r0x00443706;\n        if (arg_20h == arg_8h) goto code_r0x004043b8;\n    }\n    if (arg_24h == 0) {\n        return 0;\n    }\n    arg_8h_00 = 0x6a;\ncode_r0x004436e2:\n    fcn.004734ba(arg_8h_00, 0xffffffff);\n    return 0xffffffff;\n}\n",
        "token_count": 582
    },
    "0040445d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040445d(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint noname_2;\n    char cVar3;\n    uchar *puVar4;\n    \n    fcn.00441ef0();\n    fcn.0040c25d();\n    cVar3 = '\\0';\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)();\n    puVar4 = &stack0xfffffff7;\n    fcn.00404862(arg_8h, puVar4);\n    cVar1 = puVar4 >> 8;\n    iVar2 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar2 != 0) {\n        (*_sym.imp.USER32.dll_MessageBoxA)();\n        goto code_r0x0040459c;\n    }\n    if (*0x4d1400 == 0) {\n        *0x4d135c = 0xffffffff;\n    }\n    else {\n        if (*0x4d1400 == 1) {\n            puVar4 = 0xffffffff;\n            fcn.00408f2c(1, *0x4d1408, 0xffffffff);\n            *0x4d2392 = *0x4d1364;\n        }\n        else {\n            puVar4 = &stack0xffffffed;\n            cVar3 = cVar1;\n            cVar1 = fcn.0040480e(0x4d1418, 0x4d1400, noname_2, puVar4);\n            if (cVar1 == '\\0') {\n                *0x4d135c = 1;\n                goto code_r0x00404591;\n            }\n            *0x4d1404 = *0x4d2390;\n            (*_sym.imp.KERNEL32.dll_GetFullPathNameW)();\n            fcn.004084e7(&stack0x00000024);\n        }\n        iVar2 = fcn.004036fb(0x4d1418, *0x4d1400);\n        if (iVar2 != 0) {\n            fcn.00405ba6();\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)();\n            *0x4d135c = 1;\n            goto code_r0x0040459c;\n        }\n        if (puVar4 >> 0x10 == '\\x01') {\n            cVar1 = fcn.004615a7();\n            if ((cVar1 != '\\0') || (puVar4 >> 0x18 != '\\0')) goto code_r0x00404550;\n            fcn.004058e5();\n            fcn.0040b606(0x4c2244);\n            if (cVar3 == '\\0') {\n                fcn.004052b7(arg_8h);\n            }\n            else {\n                fcn.004052b7(0x4c59ec);\n                fcn.00407cf8(0x4d1418);\n                fcn.004052b7(0x4c59ec);\n            }\n            (*_sym.imp.USER32.dll_GetForegroundWindow)();\n            (*_sym.imp.SHELL32.dll_ShellExecuteW)();\n            fcn.0040b1ff();\n        }\n        else {\ncode_r0x00404550:\n            fcn.004045ae();\n            fcn.0040468e();\n            if (*0x4d1404 == '\\0') {\n                fcn.004056c2();\n            }\n            fcn.0040f060(1);\n            if (*0x4d1404 == '\\0') {\n                fcn.00404b1d();\n            }\n        }\n        fcn.00405ba6();\n    }\ncode_r0x00404591:\n    (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)();\ncode_r0x0040459c:\n    fcn.0040b1ff();\n    return;\n}\n",
        "token_count": 863
    },
    "0040480e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040480e(int32_t arg_8h, uint arg_ch, uint noname_2, uchar *arg_14h)\n\n{\n    uint arg_ch_00;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    ushort auStackY65628 [32768];\n    uint var_58h;\n    uint var_54h;\n    uint var_4ch;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    fcn.00441ef0();\n    *(extraout_ECX + 2) = *0x4d1364;\n    if (*(arg_8h + 4) == 0) {\n        auStackY65628[0] = 0;\n        *arg_14h = 1;\n        fcn.004222d0();\n        iVar2 = (*_sym.imp.COMDLG32.dll_GetOpenFileNameW)();\n        if (iVar2 == 0) {\n            return 0;\n        }\n        fcn.004084e7(auStackY65628);\n    }\n    fcn.0040592d();\n    fcn.004047d0();\n    uVar1 = extraout_ECX_00;\n    arg_ch_00 = fcn.00405489(arg_8h);\n    uVar1 = fcn.00406328(arg_8h, arg_ch_00, uVar1);\n    return uVar1;\n}\n",
        "token_count": 357
    },
    "00404b1d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404b1d(int32_t param_1)\n\n{\n    uint lpData;\n    uint var_3b4h;\n    uint var_3b0h;\n    uint var_3ach;\n    \n    if (*0x4d1368 != '\\0') {\n        *0x4d1368 = '\\0';\n        *(param_1 + 0x19c) = 0;\n        fcn.004222d0(&var_3ach, 0, 0x3ac);\n        var_3b4h = *0x4d138c;\n        lpData = 0x3a8;\n        var_3b0h = 1;\n        (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(2, &lpData);\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00404b9b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404b9b(uint wParam, uint32_t lParam)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint32_t in_EDX;\n    \n    if ((in_ECX == *0x4d138c) || (*0x4d138c == 0)) {\n        if (in_EDX < 0x12) {\n            if (in_EDX == 0x11) {\n                *0x4d1350 = (lParam >> 0x1f) + 4;\n                *0x4d1362 = 0;\n                fcn.004031ed();\n                fcn.0041e48c();\n                goto code_r0x00404bfb;\n            }\n            if (in_EDX == 1) {\n                (*_sym.imp.USER32.dll_SetTimer)();\n                *0x4d2528 = (*_sym.imp.USER32.dll_RegisterWindowMessageW)(L\"TaskbarCreated\");\n                if (*0x4d1990 == 0) {\n                    *0x4d1990 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                }\n            }\n            else if (in_EDX == 2) {\n                (*_sym.imp.USER32.dll_KillTimer)();\n                fcn.00404b1d();\n                fcn.00405adb();\n            }\n            else if (in_EDX == 5) {\n                (*_sym.imp.USER32.dll_MoveWindow)(*0x4d1388, 0, 0, lParam & 0xffff, lParam >> 0x10, 1);\n            }\n            else if (in_EDX == 7) {\n                (*_sym.imp.USER32.dll_SetFocus)(*0x4d1388);\n            }\n            else {\n                if (in_EDX != 0x10) goto code_r0x00404bef;\n                *0x4d1362 = 1;\n                fcn.004031ed();\n            }\n        }\n        else if (in_EDX == 0x82) {\n            (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        }\n        else if (in_EDX == 0x111) {\n            cVar1 = fcn.0046be4e(in_ECX, in_ECX, wParam, lParam);\n            if (cVar1 != '\\x01') goto code_r0x00404bfb;\n        }\n        else {\n            if (in_EDX != 0x113) {\n                if (in_EDX == 0x312) {\n                    if (*0x4d1367 == '\\0') {\n                        fcn.00460a1b(&wParam);\n                    }\n                }\n                else {\n                    if (in_EDX == 0x401) {\n                        fcn.00404c9a(in_ECX, in_ECX, in_ECX, lParam);\n                        goto code_r0x00404c44;\n                    }\ncode_r0x00404bef:\n                    if ((in_EDX == *0x4d2528) && (*0x4d1368 == '\\x01')) {\n                        fcn.00404b1d();\n                        fcn.004056c2();\n                    }\n                }\n                goto code_r0x00404bfb;\n            }\n            fcn.0046c07f(in_ECX, wParam);\n        }\ncode_r0x00404c44:\n        uVar2 = 0;\n    }\n    else {\ncode_r0x00404bfb:\n        uVar2 = (*_sym.imp.USER32.dll_DefWindowProcW)();\n    }\n    return uVar2;\n}\n",
        "token_count": 785
    },
    "00404c9a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpPoint\n// WARNING: Variable defined which should be unmapped: y\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: lpmii\n// WARNING: Removing unreachable block (ram,0x00443b08)\n// WARNING: Removing unreachable block (ram,0x00443b24)\n// WARNING: Removing unreachable block (ram,0x00443b10)\n\nvoid __cdecl fcn.00404c9a(uint hWnd, uint noname_1, uint noname_2, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *in_ECX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint arg_8h;\n    uint lpmii;\n    uint var_38h;\n    uint var_30h;\n    uint lpPoint;\n    uint y;\n    int32_t var_4h;\n    \n    lpmii = 0x30;\n    fcn.004222d0(&fcn.00404c9a::var_38h, 0, 0x2c);\n    var_4h = in_ECX[0x274];\n    uVar6 = 0;\n    uVar5 = 1;\n    if (arg_14h == 0x200) {\n        arg_8h = 0xfffffff5;\n        uVar5 = 0x40;\n    }\n    else if (arg_14h == 0x201) {\n        arg_8h = 0xfffffff9;\n    }\n    else if (arg_14h == 0x202) {\n        uVar5 = 2;\n        arg_8h = 0xfffffff8;\n    }\n    else if (arg_14h == 0x203) {\n        uVar5 = 4;\n        if (*(in_ECX + 10) != '\\0') {\n            iVar4 = 7;\n            var_38h = 1;\n            if (6 < var_4h) {\n                piVar3 = in_ECX + 0x74;\n                do {\n                    if (*piVar3 != NULL) {\n                        (*_sym.imp.USER32.dll_GetMenuItemInfoW)(**piVar3, iVar4, 0, &fcn.00404c9a::lpmii);\n                    }\n                    iVar4 = iVar4 + 1;\n                    piVar3 = piVar3 + 1;\n                } while (iVar4 <= in_ECX[0x274]);\n            }\n        }\n        arg_8h = 0xfffffff3;\n    }\n    else if (arg_14h == 0x204) {\n        arg_8h = 0xfffffff7;\n        uVar5 = 8;\n    }\n    else if (arg_14h == 0x205) {\n        arg_8h = 0xfffffff6;\n        uVar5 = 0x10;\n    }\n    else {\n        if (arg_14h != 0x206) goto code_r0x00404ce7;\n        arg_8h = 0xfffffff2;\n        uVar5 = 0x20;\n    }\n    fcn.00404cf7(arg_8h);\n    uVar6 = uVar5;\ncode_r0x00404ce7:\n    pcVar2 = _sym.imp.USER32.dll_GetMenuItemCount;\n    pcVar1 = _sym.imp.USER32.dll_DeleteMenu;\n    if (((in_ECX[3] & uVar6) != 0) && (*0x4d1366 != '\\0')) {\n        if (*(in_ECX + 1) == '\\0') {\n            (*_sym.imp.USER32.dll_DeleteMenu)(*in_ECX, 5, 0);\n            (*pcVar1)(*in_ECX, 4, 0);\n            (*pcVar1)(*in_ECX, 6, 0);\n            (*pcVar1)(*in_ECX, 3, 0);\n            *(in_ECX + 2) = 0;\n        }\n        else if (*(in_ECX + 2) == '\\0') {\n            iVar4 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*in_ECX);\n            if (0 < iVar4) {\n                in_ECX[0x274] = 4;\n                fcn.0046bb7c(0, 0x49d0d0, 0xffffffff, 0xffffffff, 0);\n            }\n            in_ECX[0x274] = 3;\n            fcn.0046bb7c(0, in_ECX[0x1f], 0xffffffff, 0xffffffff, 0);\n            var_38h = 0;\n            in_ECX[0x274] = 5;\n            lpmii = 0x443bca;\n            fcn.0046bb7c(0, 0x49d0d0, 0xffffffff, 0xffffffff, 0);\n            lpmii = 0;\n            in_ECX[0x274] = 2;\n            fcn.0046bb7c(0, in_ECX[0x1b], 0xffffffff, 0xffffffff, 0);\n            in_ECX[0x274] = var_4h;\n            *(in_ECX + 2) = 1;\n        }\n        iVar4 = (*pcVar2)(*in_ECX);\n        if (0 < iVar4) {\n            if (*(in_ECX + 1) == '\\0') {\n                *(in_ECX + 6) = 0;\n            }\n            else if (*(in_ECX + 6) != '\\0') {\n                *0x4d1367 = 1;\n                var_38h = 1;\n                (*_sym.imp.USER32.dll_SetMenuItemInfoW)(*in_ECX, 4, 0, &fcn.00404c9a::lpmii);\n            }\n            (*_sym.imp.USER32.dll_GetCursorPos)(&fcn.00404c9a::lpPoint);\n            (*_sym.imp.USER32.dll_SetForegroundWindow)(hWnd);\n            (*_sym.imp.USER32.dll_TrackPopupMenuEx)(*in_ECX, 0, lpPoint, y, hWnd, 0);\n            (*_sym.imp.USER32.dll_PostMessageW)(hWnd, 0, 0, 0);\n            fcn.004057ae();\n        }\n    }\n    return;\n}\n",
        "token_count": 1471
    },
    "00404d4c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404d4c(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t *in_ECX;\n    uint unaff_ESI;\n    \n    puVar2 = fcn.0041fd5b(8, unaff_ESI);\n    uVar1 = *arg_8h;\n    puVar2[1] = 0;\n    *puVar2 = uVar1;\n    if (in_ECX[1] == 0) {\n        in_ECX[1] = puVar2;\n    }\n    else {\n        *(in_ECX[2] + 4) = puVar2;\n    }\n    *in_ECX = *in_ECX + 1;\n    in_ECX[2] = puVar2;\n    return;\n}\n",
        "token_count": 183
    },
    "004051ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004051ec(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *in_ECX;\n    uint unaff_EDI;\n    uint var_4h;\n    \n    iVar2 = *in_ECX[3];\n    if (iVar2 < 2) {\n        uVar1 = in_ECX[1] + 2;\n        if (uVar1 <= in_ECX[2]) goto code_r0x00405211;\n        if (uVar1 < 0x41c2) {\n            iVar2 = uVar1 * 2;\n        }\n        else {\n            iVar2 = fcn.00442050();\n        }\n        if (iVar2 == 0) {\n            uVar1 = 8;\n        }\n        else {\n            uVar1 = iVar2 + 7U & 0xfffffff8;\n        }\n        in_ECX[2] = uVar1;\n        iVar2 = fcn.0041fd8b(-(uVar1 * 2 >> 0x20 != 0) | uVar1 * 2);\n        if (*in_ECX != 0) {\n            fcn.00420db0(iVar2, *in_ECX, in_ECX[1] * 2 + 2);\n            fcn.0041fd94(*in_ECX);\n        }\n    }\n    else {\n        *in_ECX[3] = iVar2 + -1;\n        puVar3 = fcn.0041fd5b(4, unaff_EDI);\n        *puVar3 = 1;\n        in_ECX[3] = puVar3;\n        if (in_ECX[1] == -2) {\n            uVar1 = 8;\n        }\n        else {\n            uVar1 = in_ECX[1] + 9U & 0xfffffff8;\n        }\n        in_ECX[2] = uVar1;\n        iVar2 = fcn.0041fd8b(-(uVar1 * 2 >> 0x20 != 0) | uVar1 * 2);\n        fcn.00420db0(iVar2, *in_ECX, in_ECX[1] * 2 + 2);\n    }\n    *in_ECX = iVar2;\ncode_r0x00405211:\n    *(*in_ECX + in_ECX[1] * 2) = arg_8h;\n    in_ECX[1] = in_ECX[1] + 1;\n    *(*in_ECX + in_ECX[1] * 2) = 0;\n    return;\n}\n",
        "token_count": 586
    },
    "004056c2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004056c2(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    uint uStack956;\n    uint uStack952;\n    uint uStack948;\n    \n    fcn.004222d0(&uStack956, 0);\n    if (*(param_1 + 0x198) == 0) {\n        *(param_1 + 0x198) = *0x4d13e4;\n    }\n    uVar1 = *0x4d13e8;\n    if (*(param_1 + 0x1a4) == 0) {\n        *(param_1 + 0x1a4) = *0x4d13e8;\n        *(param_1 + 0x1a8) = uVar1;\n    }\n    if (*(param_1 + 0x1b0) == 0) {\n        *(param_1 + 0x1b0) = *0x4d13ec;\n    }\n    arg_8h = param_1 + 0x19c;\n    fcn.00406092(arg_8h, param_1 + 0x1a0);\n    uStack948 = 0;\n    uStack956 = 3;\n    uStack952 = 0x401;\n    if (*(param_1 + 0x40) != 0) {\n        iVar2 = fcn.0046c792(*(param_1 + 0x10), *(param_1 + 0x3c), param_1 + 0x1a0);\n        *arg_8h = iVar2;\n        if ((*(param_1 + 0x40) != 0) && (*arg_8h != 0)) goto code_r0x0040577f;\n    }\n    *arg_8h = *(param_1 + 0x198);\ncode_r0x0040577f:\n    if (*0x4d1368 == '\\x01') {\n        (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(1, &stack0xfffffc2c);\n    }\n    else {\n        (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(0);\n        *0x4d1368 = '\\x01';\n    }\n    fcn.004057ae();\n    return;\n}\n",
        "token_count": 527
    },
    "004057ae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004057ae(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    ushort auStack1220 [116];\n    uint uStack988;\n    uint uStack984;\n    uint uStack980;\n    uint uStack976;\n    uchar auStack972 [8];\n    uchar auStack964 [960];\n    \n    if (*0x4d1368 != '\\0') {\n        fcn.00407c18(0x104);\n        if (*0x4d1367 == '\\x01') {\n            (*_sym.imp.USER32.dll_LoadStringW)(*0x4d1358, 0x65, auStack1220, 0x7f);\n        }\n        else {\n            auStack1220[0] = 0;\n        }\n        fcn.004084e7(auStack1220);\n        if (*0x4d1365 == '\\0') {\n            if (*(param_1 + 0x60) == 0) {\n                fcn.00407cf8(0x4d13f0);\n            }\n            else if (&stack0xfffffb28 != param_1 + 0x5c) {\n                fcn.0040c1c3(param_1 + 0x5c);\n            }\n        }\n        else {\n            fcn.00407cf8(0x4d13f0);\n            uVar2 = *0x4d1528;\n            iVar1 = fcn.00405e5a(*0x4d1528);\n            if (iVar1 != 0) {\n                fcn.004052b7(L\"\\nLine: \");\n                uVar2 = fcn.00405e5a(uVar2);\n                fcn.004052b7(uVar2);\n            }\n        }\n        fcn.004222d0(auStack972, 0, 0x3a8);\n        uStack988 = 0x3a8;\n        uStack984 = *0x4d138c;\n        uStack980 = 1;\n        uStack976 = 4;\n        fcn.004058a3(0x80);\n        fcn.00424913(auStack964, &stack0xfffffb24);\n        (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(1, &uStack988);\n        fcn.0040b1ff();\n    }\n    return;\n}\n",
        "token_count": 531
    },
    "004059a7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004059a7(int32_t lpValueName, uint32_t arg_ch, ushort *arg_10h)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint in_ECX;\n    uint32_t uVar3;\n    uint phkResult;\n    uint32_t lpcbData;\n    \n    if ((lpValueName != 0) && (arg_10h != NULL)) {\n        uVar3 = 0;\n        *arg_10h = 0;\n        in_EAX = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n        if (in_EAX == 0) {\n            lpcbData = arg_ch * 2;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(in_ECX, lpValueName, 0, 0, arg_10h, &lpcbData);\n            if (iVar1 == 0) {\n                if (lpcbData >> 1 < arg_ch) {\n                    *(arg_10h + (lpcbData & 0xfffffffe)) = 0;\n                }\n                else {\n                    arg_10h[arg_ch - 1] = 0;\n                }\n                uVar3 = 1;\n                lpcbData = lpcbData >> 1;\n            }\n            uVar2 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(in_ECX);\n            return uVar2 & 0xffffff00 | uVar3;\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 351
    },
    "00405adb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405adb(void)\n\n{\n    int32_t **ppiVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint extraout_ECX;\n    bool bVar5;\n    \n    while (*0x4d1914 != 0) {\n        puVar2 = **(*0x4d1910 + -4 + *0x4d1914 * 4);\n        if (puVar2 == NULL) {\n            fcn.0041a561();\n        }\n        else {\n            (*_sym.imp.USER32.dll_DestroyWindow)(*puVar2);\n        }\n    }\n    fcn.004030e0();\n    while (*0x4d1940 != 0) {\n        (*_sym.imp.GDI32.dll_DeleteObject)(*(**0x4d193c + 8));\n        piVar4 = *0x4d193c;\n        if (*0x4d193c != NULL) {\n            ppiVar1 = *0x4d193c + 2;\n            bVar5 = *0x4d193c != NULL;\n            *0x4d193c = *ppiVar1;\n            if (bVar5) {\n                fcn.00405b89(piVar4);\n            }\n            if (*0x4d193c == NULL) {\n                *0x4d1938 = 0;\n            }\n            else {\n                (*0x4d193c)[1] = 0;\n            }\n            *0x4d1940 = *0x4d1940 + -1;\n        }\n    }\n    if (*0x4d18dc != 0) {\n        do {\n            iVar3 = **0x4d18e0;\n            fcn.004060ff();\n            if (iVar3 != 0) {\n                fcn.0047328b(extraout_ECX);\n            }\n        } while (*0x4d18dc != 0);\n        return;\n    }\n    return;\n}\n",
        "token_count": 440
    },
    "00405ce6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00405ce6(void)\n\n{\n    uint32_t *puVar1;\n    int16_t *arg_ch;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    ulong uVar7;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar auStack48 [8];\n    int16_t iStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    uint32_t uStack20;\n    \n    puVar5 = *0x4d2398;\n    if (*0x4d23dc == NULL) {\n        if (*0x4d23a0 == 0) {\n            uStack32 = 0;\n        }\n        else {\n            iStack28 = fcn.0041fd8b(-(*0x4d23a0 * 4 >> 0x20 != 0) | *0x4d23a0 * 4);\n            iVar4 = 0;\n            uStack32 = 0;\n            *0x4d23a4 = iStack28;\n            if (0 < *0x4d23a0) {\n                do {\n                    *(*0x4d23a4 + iVar4 * 4) = *puVar5;\n                    iVar4 = iVar4 + 1;\n                    puVar5 = puVar5[3];\n                } while (iVar4 < *0x4d23a0);\n            }\n            uStack60 = 0;\n            uStack56 = 0;\n            uStack20 = 1;\n            uVar6 = *0x4d23a0 + 1;\n            iStack24 = 1;\n            uStack52 = 0;\n            uStack64 = 0x49d114;\n            uVar3 = -(uVar6 * 0x10 >> 0x20 != 0) | uVar6 * 0x10;\n            puVar1 = fcn.0041fd8b(-(0xfffffffb < uVar3) | uVar3 + 4);\n            if (puVar1 == NULL) {\n                *0x4d23dc = NULL;\n            }\n            else {\n                *0x4d23dc = puVar1 + 1;\n                *puVar1 = uVar6;\n                puVar1 = *0x4d23dc;\n                for (; uVar6 != 0; uVar6 = uVar6 - 1) {\n                    *puVar1 = 0x49d114;\n                    puVar1[1] = 0;\n                    puVar1[2] = 0;\n                    puVar1[3] = 0;\n                    puVar1 = puVar1 + 4;\n                }\n            }\n            iVar4 = 0;\n            iStack28 = 0x10;\n            while( true ) {\n                uVar7 = fcn.00405e5a(iStack24);\n                arg_ch = uVar7;\n                if (arg_ch == NULL) break;\n                if (*arg_ch == 0x3b) {\n                    fcn.00405fc0();\n                    iVar2 = **(iVar4 + *0x4d23e4);\n                    uVar6 = uStack20;\n                    if (uStack20 < *(iVar2 + 8)) {\n                        do {\n                            fcn.00470977(*(*(iVar2 + 4) + uVar6 * 4));\n                            fcn.0040bd9d(auStack48);\n                            uStack36 = uVar6 + 1;\n                            if (iStack40 == 0x7f) {\n                                uStack20 = uStack36;\n                                if (uVar6 == *(**(iVar4 + *0x4d23e4) + 8) - 1U) {\n                                    iVar4 = iVar4 + 4;\n                                    uStack20 = 1;\n                                }\n                                fcn.0041d6ea();\n                                break;\n                            }\n                            fcn.0041d6ea();\n                            iVar2 = **(iVar4 + *0x4d23e4);\n                            uVar6 = uStack36;\n                        } while (uStack36 < *(iVar2 + 8));\n                    }\n                }\n                else {\n                    iVar2 = fcn.0040b7e0(uVar7 >> 0x20, arg_ch, &uStack64);\n                    if (iVar2 < 0) goto code_r0x00405e2e;\n                }\n                fcn.00405e82(&uStack64);\n                iStack24 = iStack24 + 1;\n                iStack28 = iStack28 + 0x10;\n            }\n            uStack32 = CONCAT31(uStack32._1_3_, 1);\ncode_r0x00405e2e:\n            uStack64 = 0x49d114;\n            fcn.00405fc0();\n            fcn.0041fd94(uStack60);\n            uStack32 = uStack32 & 0xff;\n        }\n    }\n    else {\n        uStack32 = 1;\n    }\n    return uStack32;\n}\n",
        "token_count": 1166
    },
    "00405e82": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405e82(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    ulong *puVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    ulong *puVar7;\n    uint *puVar8;\n    int32_t in_ECX;\n    uint32_t uVar9;\n    uint unaff_EDI;\n    uint32_t var_4h;\n    \n    if (in_ECX != arg_8h) {\n        fcn.00405fc0();\n        uVar6 = *(arg_8h + 8);\n        if (*(in_ECX + 0xc) < uVar6) {\n            uVar9 = 8;\n            if (7 < uVar6) {\n                uVar9 = uVar6;\n            }\n            *(in_ECX + 0xc) = uVar9;\n            uVar5 = fcn.0041fd8b(-(uVar9 * 4 >> 0x20 != 0) | uVar9 * 4);\n            if (*(in_ECX + 4) != 0) {\n                fcn.0041fd94(*(in_ECX + 4));\n            }\n            *(in_ECX + 4) = uVar5;\n            uVar6 = *(arg_8h + 8);\n        }\n        *(in_ECX + 8) = uVar6;\n        var_4h = 0;\n        if (uVar6 != 0) {\n            do {\n                puVar7 = fcn.0041fd5b(0xc, unaff_EDI);\n                puVar2 = *(*(arg_8h + 4) + var_4h * 4);\n                iVar1 = *(puVar2 + 1);\n                *(puVar7 + 1) = iVar1;\n                *(puVar7 + 10) = *(puVar2 + 10);\n                if ((iVar1 < 0x40) && (0x2f < iVar1)) {\n                    puVar8 = fcn.0041fd5b(0x10, unaff_EDI);\n                    puVar3 = *puVar2;\n                    *puVar8 = *puVar3;\n                    puVar8[1] = puVar3[1];\n                    puVar8[2] = puVar3[2];\n                    piVar4 = puVar3[3];\n                    puVar8[3] = piVar4;\n                    *piVar4 = *piVar4 + 1;\ncode_r0x00405f25:\n                    *puVar7 = puVar8;\n                }\n                else if (iVar1 == 0x10) {\n                    *puVar7 = *puVar2;\n                    *(puVar7 + 4) = *(puVar2 + 4);\n                }\n                else {\n                    if (iVar1 != 0x20) {\n                        puVar8 = *puVar2;\n                        goto code_r0x00405f25;\n                    }\n                    *puVar7 = *puVar2;\n                }\n                *(*(in_ECX + 4) + var_4h * 4) = puVar7;\n                var_4h = var_4h + 1;\n            } while (var_4h < *(in_ECX + 8));\n        }\n    }\n    return;\n}\n",
        "token_count": 744
    },
    "00405fc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405fc0(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    uint *arg_8h_00;\n    uint32_t uVar1;\n    uint var_4h;\n    \n    uVar1 = 0;\n    if (*(param_1 + 8) == 0) {\n        *(param_1 + 8) = 0;\n    }\n    else {\n        do {\n            arg_8h = *(*(param_1 + 4) + uVar1 * 4);\n            if (arg_8h != NULL) {\n                if ((*(arg_8h + 2) - 0x30U < 0x10) && (arg_8h_00 = *arg_8h,  arg_8h_00 != NULL)) {\n                    *arg_8h_00[3] = *arg_8h_00[3] + -1;\n                    if (*arg_8h_00[3] == 0) {\n                        fcn.0041fd94(*arg_8h_00);\n                        fcn.0041fd4d(arg_8h_00[3]);\n                    }\n                    fcn.0041fd4d(arg_8h_00);\n                }\n                fcn.0041fd4d(arg_8h);\n            }\n            *(*(param_1 + 4) + uVar1 * 4) = 0;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(param_1 + 8));\n        *(param_1 + 8) = 0;\n    }\n    return;\n}\n",
        "token_count": 365
    },
    "00406053": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406053(void)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    int32_t *piVar2;\n    uint uVar3;\n    \n    piVar2 = 0x4d1b44;\n    do {\n        if (*piVar2 != 0) {\n            fcn.0041e44a(*piVar2);\n            *piVar2 = 0;\n        }\n        piVar2 = piVar2 + 1;\n    } while (piVar2 < 0x4d2360);\n    fcn.00406092(0x4d1b2c, 0x4d1b30);\n    uVar3 = 0x4d1b38;\n    fcn.00406092(0x4d1b38, 0x4d1b3c);\n    while (*0x4d1a1c != 0) {\n        iVar1 = **0x4d1a20;\n        fcn.004060ff(uVar3);\n        if (iVar1 != 0) {\n            fcn.004060e4(extraout_ECX);\n        }\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "00406092": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406092(int32_t *arg_8h, char *arg_ch)\n\n{\n    if ((*arg_8h != 0) && (*arg_ch != '\\0')) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(*arg_8h);\n    }\n    *arg_8h = 0;\n    *arg_ch = '\\0';\n    return;\n}\n",
        "token_count": 85
    },
    "00406398": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406398(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    uint unaff_ESI;\n    \n    if (in_ECX[2] == 0) {\n        puVar1 = fcn.0041fd5b(0x28, unaff_ESI);\n        fcn.0040c25d();\n        fcn.004063f0(arg_8h);\n        fcn.0040c7c9();\n        (*_sym.imp.USER32.dll_CharUpperBuffW)(*puVar1, puVar1[1]);\n        puVar1[9] = 0;\n        if (in_ECX[1] == 0) {\n            *in_ECX = puVar1;\n        }\n        else {\n            *(in_ECX[1] + 0x24) = puVar1;\n        }\n        in_ECX[1] = puVar1;\n        in_ECX[3] = in_ECX[3] + 1;\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "00406485": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.00406485(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    bool bVar2;\n    bool bVar3;\n    int16_t *piVar4;\n    uint *extraout_ECX;\n    int32_t iVar5;\n    int32_t arg_8h_00;\n    int16_t aiStackY8240 [4100];\n    uint uStackY40;\n    uint var_20h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    fcn.00441ef0();\n    fcn.00408320();\n    *extraout_ECX = 0;\n    *(extraout_ECX + 9) = 0;\n    if (*arg_8h == 0x21) {\n        arg_8h = arg_8h + 1;\n        *(extraout_ECX + 9) = 1;\n    }\n    fcn.004084e7(arg_8h);\n    iVar5 = 0;\n    bVar3 = false;\n    var_ch = 0;\n    while( true ) {\n        piVar4 = fcn.0040660f(iVar5);\n        if ((*piVar4 != 0x20) && (*piVar4 != 9)) break;\n        iVar5 = iVar5 + 1;\n    }\n    do {\n        var_8h = 0;\n        bVar2 = false;\n        arg_8h_00 = iVar5;\ncode_r0x004064fd:\n        while( true ) {\n            piVar4 = fcn.0040660f(arg_8h_00);\n            iVar5 = arg_8h_00 + 1;\n            iVar1 = *piVar4;\n            if ((iVar1 == 0) || (0xfff < var_8h)) {\n                if ((var_8h != 0) || ((bVar2 || (bVar3)))) {\n                    iVar5 = var_8h;\n                    if (bVar3) {\n                        while (iVar5 = iVar5 + -1,  var_ch <= iVar5) {\n                            *(&stack0xffffdfd2 + iVar5 * 2) = *(&stack0xffffdfd0 + iVar5 * 2);\n                        }\n                        var_8h = var_8h + 1;\n                        *(&stack0xffffdfd0 + var_ch * 2) = 0x22;\n                    }\n                    *(&stack0xffffdfd0 + var_8h * 2) = 0;\n                    fcn.0040b606(&stack0xffffdfd0);\n                    var_20h = 0x406600;\n                    fcn.00406aff(&fcn.00406485::var_20h);\n                    var_20h = 0x406608;\n                    fcn.0040b1ff();\n                }\n                return;\n            }\n            if ((iVar1 == 0x20) || (iVar1 == 9)) break;\n            if (iVar1 != 0x22) goto code_r0x00406537;\n            piVar4 = fcn.0040660f(iVar5);\n            if (*piVar4 != 0x22) {\n                if (bVar3) {\n                    bVar3 = false;\n                    goto code_r0x0040655d;\n                }\n                bVar3 = true;\n                arg_8h_00 = iVar5;\n                goto code_r0x004065c3;\n            }\n            if (bVar3) {\n                *(&stack0xffffdfd0 + var_8h * 2) = 0x22;\n                var_8h = var_8h + 1;\n            }\n            else {\n                bVar2 = true;\n                bVar3 = false;\n            }\n            iVar5 = arg_8h_00 + 2;\ncode_r0x0040655d:\n            arg_8h_00 = iVar5;\n            if (bVar3) {\ncode_r0x004065c3:\n                var_ch = var_8h;\n            }\n        }\n        if (bVar3) {\ncode_r0x00406537:\n            *(&stack0xffffdfd0 + var_8h * 2) = iVar1;\n            var_8h = var_8h + 1;\n            arg_8h_00 = iVar5;\n            goto code_r0x004064fd;\n        }\n        *(&stack0xffffdfd0 + var_8h * 2) = 0;\n        fcn.0040b606(&stack0xffffdfd0);\n        var_20h = 0x40658d;\n        fcn.00406aff(&fcn.00406485::var_20h);\n        var_20h = 0x406595;\n        fcn.0040b1ff();\n        while( true ) {\n            uStackY40 = 0x4065a7;\n            piVar4 = fcn.0040660f(iVar5);\n            if ((*piVar4 != 0x20) && (uStackY40 = 9,  *piVar4 != 9)) break;\n            iVar5 = iVar5 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 1189
    },
    "0040686d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040686d(uint lpLibFileName, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00406832();\n    iVar1 = fcn.0042e57b(lpLibFileName, 0x49d0b8);\n    *in_ECX = iVar1;\n    if (iVar1 == 0) {\n        fcn.004068db();\n        fcn.004067fb();\n        iVar1 = 1;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(lpLibFileName, 0, 2);\n        in_ECX[3] = iVar1;\n        fcn.004067fb();\n        iVar1 = fcn.00406920(arg_ch == 1);\n        if (iVar1 == 0) {\n            fcn.00406a95(&var_14h, 1, 0x10, *in_ECX);\n            fcn.0047281c(0x99f2);\n            in_ECX[2] = 0;\n            iVar1 = fcn.00406ae3(*in_ECX);\n            in_ECX[1] = iVar1;\n            iVar1 = 0;\n        }\n        else {\n            fcn.004068db();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 318
    },
    "00406920": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406920(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_28h;\n    char var_24h [4];\n    uchar auStack36 [8];\n    uint var_18h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    uVar1 = fcn.0041fd8b(0x10000);\n    fcn.004070c2(uVar1);\n    iVar3 = 0;\n    do {\n        var_24h[iVar3 + -4] = *(iVar3 + 0x4b1848);\n        auStack36[iVar3] = *(iVar3 + 0x4b1850);\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 8);\n    fcn.00420db0(&var_18h, \"AU3!\", 4);\n    if (in_ECX[3] != 0) {\n        if (arg_8h == '\\0') {\n            fcn.00472f6b();\n        }\n        else {\n            fcn.00406122();\n        }\n    }\n    arg_8h = fcn.00406ae3(*in_ECX);\n    while( true ) {\n        iVar3 = var_14h;\n        if (*(in_ECX + 5) == '\\0') {\n            uVar1 = 0x10000;\n        }\n        else {\n            uVar1 = 0x18;\n        }\n        var_8h = fcn.00406a95(var_14h, 1, uVar1, *in_ECX);\n        if (var_8h < 0x18) break;\n        iVar4 = 0;\n        if (0 < var_8h + -0x14) {\n            iVar3 = iVar3 + 2;\n            do {\n                iVar2 = 0;\n                do {\n                    if (var_24h[iVar2 + -4] != *(iVar3 + -2 + iVar2)) break;\n                    if (var_24h[iVar2 + -3] != *(iVar3 + -1 + iVar2)) {\n                        iVar2 = iVar2 + 1;\n                        break;\n                    }\n                    if (var_24h[iVar2 + -2] != *(iVar3 + iVar2)) {\n                        iVar2 = iVar2 + 2;\n                        break;\n                    }\n                    if (var_24h[iVar2 + -1] != *(iVar3 + 1 + iVar2)) {\n                        iVar2 = iVar2 + 3;\n                        break;\n                    }\n                    if (var_24h[iVar2] != *(iVar3 + 2 + iVar2)) {\n                        iVar2 = iVar2 + 4;\n                        break;\n                    }\n                    iVar2 = iVar2 + 5;\n                } while (iVar2 < 0x14);\n                if (iVar2 == 0x14) {\n                    fcn.00406abf(*in_ECX, arg_8h + 0x14 + iVar4, 0);\n                    fcn.00406a95(&var_ch, 4, 1, *in_ECX);\n                    if (var_ch == 0x36304145) {\n                        uVar1 = 0;\n                    }\n                    else {\n                        uVar1 = 4;\n                    }\n                    goto code_r0x00406a13;\n                }\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + 1;\n            } while (iVar4 < var_8h + -0x14);\n        }\n        if (*(in_ECX + 5) != '\\0') break;\n        arg_8h = arg_8h + -0x14 + var_8h;\n        fcn.00406abf(*in_ECX, 0xffffffec, 1);\n    }\n    uVar1 = 3;\ncode_r0x00406a13:\n    *var_10h = *var_10h + -1;\n    if (*var_10h == 0) {\n        uVar5 = 4;\n        fcn.0041fd4d(var_10h);\n        fcn.0041fd94(var_14h, var_10h, uVar5);\n    }\n    return uVar1;\n}\n",
        "token_count": 985
    },
    "00406a95": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406a95(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (*(in_ECX + 0x14) == '\\0') {\n        var_4h = fcn.0042e854(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        (**(**(in_ECX + 0x10) + 0xc))(*(in_ECX + 0x10), arg_8h, arg_ch * arg_10h, &var_4h);\n    }\n    return var_4h;\n}\n",
        "token_count": 173
    },
    "00406abf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406abf(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    int32_t var_8h;\n    \n    if (*(in_ECX + 0x14) == '\\0') {\n        var_8h = fcn.0042ec73(arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        var_8h = in_ECX;\n        (**(**(in_ECX + 0x10) + 0x14))(*(in_ECX + 0x10), arg_ch, arg_ch >> 0x1f, arg_10h, &var_8h);\n    }\n    return var_8h;\n}\n",
        "token_count": 170
    },
    "00406ae3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406ae3(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t var_8h;\n    \n    if (*(in_ECX + 0x14) == '\\0') {\n        var_8h = fcn.0042f1e5(arg_8h);\n    }\n    else {\n        var_8h = in_ECX;\n        (**(**(in_ECX + 0x10) + 0x14))(*(in_ECX + 0x10), 0, 0, 1, &var_8h);\n    }\n    return var_8h;\n}\n",
        "token_count": 144
    },
    "00406aff": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406aff(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t in_ECX;\n    uint unaff_EDI;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar2 = *(in_ECX + 0xc) * 2;\n        uVar3 = 8;\n        if (7 < uVar2) {\n            uVar3 = uVar2;\n        }\n        *(in_ECX + 0xc) = uVar3;\n        uVar4 = fcn.0041fd8b(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.00420db0(uVar4, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.0041fd94(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar4;\n    }\n    puVar5 = fcn.0041fd5b(0x10, unaff_EDI);\n    *puVar5 = *arg_8h;\n    puVar5[1] = arg_8h[1];\n    puVar5[2] = arg_8h[2];\n    piVar1 = arg_8h[3];\n    puVar5[3] = piVar1;\n    *piVar1 = *piVar1 + 1;\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar5;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 444
    },
    "00406b97": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406b97(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    uint unaff_ESI;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        uVar3 = 8;\n        if (7 < uVar1) {\n            uVar3 = uVar1;\n        }\n        *(in_ECX + 0xc) = uVar3;\n        uVar4 = fcn.0041fd8b(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.00420db0(uVar4, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.0041fd94(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar4;\n    }\n    puVar2 = fcn.0041fd5b(4, unaff_ESI);\n    *puVar2 = *arg_8h;\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar2;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 366
    },
    "00406e66": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00406e66(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint *in_ECX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar3 = arg_8h;\n    if ((in_ECX[2] != 0) && ((arg_10h == 0 || (arg_10h == 1)))) {\n        uVar5 = in_ECX[4];\n        var_4h = arg_ch;\n        uVar7 = arg_8h;\n        if (arg_10h == 1) {\n            uVar7 = uVar5 + arg_8h;\n            var_4h = in_ECX[5] + arg_ch + CARRY4(uVar5, arg_8h);\n        }\n        uVar1 = in_ECX[3];\n        uVar6 = uVar5 - uVar1;\n        iVar4 = (in_ECX[5] - (uVar1 >> 0x1f)) - (uVar5 < uVar1);\n        if ((iVar4 < var_4h) || ((iVar4 <= var_4h && (uVar6 <= uVar7)))) {\n            uVar5 = in_ECX[2];\n            var_8h = (uVar5 + uVar6) - 1;\n            iVar4 = ((uVar5 >> 0x1f) + iVar4 + CARRY4(uVar5, uVar6)) - (uVar5 + uVar6 == 0);\n            if ((var_4h < iVar4) || ((var_4h <= iVar4 && (uVar7 <= var_8h)))) {\n                in_ECX[5] = var_4h;\n                in_ECX[4] = uVar7;\n                in_ECX[3] = uVar7 - uVar6;\n                return CONCAT31(var_4h >> 8, 1);\n            }\n        }\n    }\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    pcVar2 = _sym.imp.KERNEL32.dll_SetFilePointerEx;\n    uVar5 = arg_ch;\n    uVar7 = arg_8h;\n    if (arg_10h == 1) {\n        (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(*in_ECX, 0, 0, &var_ch, 1);\n        uVar5 = in_ECX[4] - var_ch;\n        uVar7 = uVar3 + uVar5;\n        uVar5 = arg_ch + ((in_ECX[5] - var_8h) - (in_ECX[4] < var_ch)) + CARRY4(uVar3, uVar5);\n    }\n    iVar4 = (*pcVar2)(*in_ECX, uVar7, uVar5, 0, arg_10h);\n    (*pcVar2)(*in_ECX, 0, 0, &arg_8h, 1);\n    in_ECX[4] = arg_8h;\n    in_ECX[5] = arg_ch;\n    return arg_ch & 0xffffff00 | iVar4 != 0;\n}\n",
        "token_count": 777
    },
    "00406fb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406fb0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    char *in_ECX;\n    uint32_t uVar3;\n    \n    iVar2 = fcn.00407098();\n    if ((((iVar2 == 0) && (iVar2 = fcn.00407020(arg_8h, arg_ch),  iVar2 == 0)) && (iVar2 = fcn.0041b26a(),  iVar2 == 0))\n       && (iVar2 = fcn.0041b0ea(arg_8h, arg_ch),  iVar2 == 0)) {\n        uVar3 = 0;\n        if (arg_ch != 0) {\n            do {\n                pcVar1 = uVar3 + arg_8h;\n                uVar3 = uVar3 + 1;\n                if (*pcVar1 == '\\0') {\n                    if (*in_ECX != '\\0') {\n                        return 0;\n                    }\n                    break;\n                }\n            } while (uVar3 < arg_ch);\n        }\n        iVar2 = 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 264
    },
    "00407020": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407020(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    char *pcVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    uint32_t uVar4;\n    char *in_ECX;\n    int32_t iVar5;\n    uint var_4h;\n    \n    uVar4 = 0;\n    bVar3 = true;\n    if (arg_ch != 0) {\n        do {\n            uVar2 = *(uVar4 + arg_8h);\n            uVar4 = uVar4 + 1;\n            if (uVar2 == 0) {\n                if (*in_ECX != '\\0') {\n                    return 0;\n                }\n            }\n            else if (0x7f < uVar2) {\n                if (uVar2 + 0x3e < 0x1e) {\n                    iVar5 = 1;\n                }\n                else if (uVar2 + 0x20 < 0x10) {\n                    iVar5 = 2;\n                }\n                else {\n                    if (4 < uVar2 + 0x10) {\n                        return 0;\n                    }\n                    iVar5 = 3;\n                }\n                do {\n                    if (arg_ch <= uVar4) goto code_r0x00407049;\n                    pcVar1 = uVar4 + arg_8h;\n                    bVar3 = false;\n                    uVar4 = uVar4 + 1;\n                    if (0x3f < *pcVar1 + 0x80U) {\n                        return 0;\n                    }\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n        } while (uVar4 < arg_ch);\ncode_r0x00407049:\n        if (!bVar3) {\n            return 4;\n        }\n    }\n    return 2;\n}\n",
        "token_count": 413
    },
    "00407127": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407127(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uVar5;\n    int32_t *in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t iVar6;\n    int32_t unaff_ESI;\n    uint nNumberOfBytesToWrite;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint auStack32 [7];\n    \n    iVar8 = 0x49d0d0;\n    auStack32[0] = 0;\n    fcn.0040b5c1(0x49d0d0);\n    if (((*(arg_8h + 8) == 2) && (iVar3 = fcn.0040ce67(),  iVar3 != -1)) && (iVar3 < 1)) {\ncode_r0x00444c57:\n        iVar8 = *(*in_ECX + 4);\n        iVar3 = *(in_ECX + iVar8 + 8);\n        if (*(in_ECX + iVar8 + 0xd) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 1;\n        iVar3 = *(in_ECX + iVar8 + 8);\n        if (*(in_ECX + iVar8 + 0xd) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n        return 0;\n    }\n    iVar3 = **(arg_8h + 4);\n    if (*(iVar3 + 0xc) == 4) {\n        puVar4 = fcn.0041fd5b(0x38, iVar8);\n        *puVar4 = 0;\n        uVar5 = fcn.0041fd8b(0x10000);\n        puVar4[1] = uVar5;\n        fcn.00407bee();\n        fcn.0040c25d();\n        fcn.00407bee();\n        iVar3 = **(arg_8h + 4);\n        fcn.00408e90();\n        iVar3 = *(iVar3 + 8);\n        fcn.00407bee();\n        uVar7 = 0x8000;\n        puVar4[10] = 0x8000;\n        cVar1 = fcn.004070e5(iVar3, 0x8000);\n        if (cVar1 == '\\0') {\n            fcn.00407bbe(extraout_ECX);\n            goto code_r0x00444c57;\n        }\n        fcn.00406f3a();\n        fcn.00406d7e();\n        fcn.00406d67();\n        if (((*(puVar4 + 10) & 3) != 0) && (((*(puVar4 + 10) & 1) == 0 || ((puVar4[4] | puVar4[5]) == 0)))) {\n            if (puVar4[0xb] == 3) {\n                nNumberOfBytesToWrite = 3;\n                uVar5 = 0x4c364c;\n            }\n            else if (puVar4[0xb] == 5) {\n                nNumberOfBytesToWrite = 2;\n                uVar5 = 0x4c3654;\n            }\n            else {\n                if (puVar4[0xb] != 7) goto code_r0x00407205;\n                nNumberOfBytesToWrite = 2;\n                uVar5 = 0x4c3650;\n            }\n            fcn.0046cc1d(uVar5, nNumberOfBytesToWrite);\n        }\n    }\n    else {\n        uVar7 = 0;\n        cVar1 = fcn.00479bc8(auStack32, iVar3, 0);\n        if (cVar1 == '\\0') goto code_r0x00444c57;\n        puVar4 = *(**(in_ECX[0x67] + unaff_ESI * 4) + 4);\n    }\ncode_r0x00407205:\n    fcn.00407c18(0x400);\n    uVar7 = uVar7 & 0xffffff;\n    if (iVar8 == 0) {\n        cVar1 = fcn.0040b177(&stack0xffffffd4);\n        if (cVar1 == '\\0') {\n            iVar8 = *(*in_ECX + 4);\n            iVar3 = *(in_ECX + iVar8 + 8);\n            if (*(in_ECX + iVar8 + 0xd) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x14) = 0xffffffff;\n            iVar3 = *(in_ECX + iVar8 + 8);\n            if (*(in_ECX + iVar8 + 0xd) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x18) = 0;\n            cVar1 = '\\x01';\n            goto code_r0x0040725a;\n        }\n    }\n    else {\n        fcn.00406d67();\n        if (0 < iVar8) {\n            do {\n                cVar2 = fcn.0040b177(&stack0xffffffd4);\n                cVar1 = iVar3 >> 0x18;\n                if (cVar2 == '\\0') {\n                    if (iVar8 == 0x7fffffff) break;\n                    iVar3 = *(*in_ECX + 4);\n                    iVar6 = *(in_ECX + iVar3 + 8);\n                    if (*(in_ECX + iVar3 + 0xd) != '\\0') {\n                        iVar6 = *(iVar6 + 0x38);\n                    }\n                    *(iVar6 + 0x14) = 0xffffffff;\n                    iVar6 = *(in_ECX + iVar3 + 8);\n                    if (*(in_ECX + iVar3 + 0xd) != '\\0') {\n                        iVar6 = *(iVar6 + 0x38);\n                    }\n                    *(iVar6 + 0x18) = 0;\n                    iVar3 = 0x1000000;\n                }\n                cVar1 = iVar3 >> 0x18;\n                uVar7 = uVar7 + 1;\n            } while (uVar7 < iVar8);\ncode_r0x0040725a:\n            if (cVar1 != '\\0') goto code_r0x0040726b;\n        }\n    }\n    fcn.00407c5d(&stack0xffffffd0);\ncode_r0x0040726b:\n    if ((*(**(arg_8h + 4) + 0xc) == 4) && (fcn.00407bee(),  puVar4 != NULL)) {\n        fcn.00407bbe(extraout_ECX_00);\n    }\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 1569
    },
    "004072b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004072b4(uint32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint32_t arg_ch_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint uVar3;\n    uint *arg_8h_00;\n    int32_t *piStack108;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint auStack48 [2];\n    uint uStack40;\n    uint uStack36;\n    \n    uStack36 = 1;\n    arg_ch_00 = *(arg_ch + 8);\n    uStack40 = 0;\n    uVar3 = 0xffffffff;\n    uStack64 = 0xffffffff;\n    uStack60 = 0xffffffff;\n    uStack68 = 0xffffffff;\n    uStack72 = 0xffffffff;\n    auStack48[0] = 0xffffffff;\n    if (arg_8h == 0x15) {\n        if (arg_ch_00 != 0) {\n            fcn.0040e8a0();\n            *arg_10h = 0;\n            arg_10h[3] = 1;\n            iVar1 = *(*in_ECX + 4);\n            iVar2 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar2 = *(iVar2 + 0x38);\n            }\n            *(iVar2 + 0x14) = 2;\n            iVar2 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar2 = *(iVar2 + 0x38);\n            }\n            *(iVar2 + 0x18) = 0;\n            uVar3 = 0xffffffff;\n            goto code_r0x00407415;\n        }\n    }\n    else if (0x1d < arg_8h) {\n        if (6 < arg_ch_00) {\n            uStack72 = fcn.0040ce67();\n        }\n        if (5 < arg_ch_00) {\n            uStack68 = fcn.0040ce67();\n        }\n        if (4 < arg_ch_00) {\n            uStack64 = fcn.0040ce67();\n        }\n        if (3 < arg_ch_00) {\n            uVar3 = fcn.0040ce67();\n        }\n        if (2 < arg_ch_00) {\n            uStack60 = fcn.0040ce67();\n        }\n        if (1 < arg_ch_00) {\n            fcn.0040ce67();\n        }\n        arg_8h_00 = auStack48;\n        fcn.004119e0(arg_8h_00);\n        uVar3 = fcn.0040747e(arg_8h, arg_ch_00, uStack60, uStack64, uVar3, uStack68, uStack72, 0, 0, arg_8h_00);\n        fcn.0040e8a0();\n        arg_10h[3] = 1;\n        *arg_10h = uVar3;\n        iVar1 = fcn.0040ce67();\n        if (iVar1 == 0) {\n            iVar1 = *(*piStack108 + 4);\n            iVar2 = *(iVar1 + 8 + piStack108);\n            if (*(iVar1 + 0xd + piStack108) != '\\0') {\n                iVar2 = *(iVar2 + 0x38);\n            }\n            *(iVar2 + 0x14) = 1;\n            iVar2 = *(iVar1 + 8 + piStack108);\n            if (*(iVar1 + 0xd + piStack108) != '\\0') {\n                iVar2 = *(iVar2 + 0x38);\n            }\n            *(iVar2 + 0x18) = 0;\n        }\n        if (arg_8h != 0x1d) {\n            fcn.0041fd94(arg_ch_00);\n        }\n        uVar3 = 0;\ncode_r0x00407415:\n        fcn.0040e8a0();\n        return uVar3;\n    }\n    // WARNING: Could not recover jumptable at 0x00407314. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x40742c\n    uVar3 = (**(*(arg_8h + 0x407460) * 4 + 0x40742c))();\n    return uVar3;\n}\n",
        "token_count": 1037
    },
    "0040747e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: hWnd\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.0040747e(uint32_t arg_8h, int16_t *arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint arg_20h, uint arg_24h, uint32_t arg_28h, uint arg_2ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uchar uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint noname_9;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *arg_ch_00;\n    uint *arg_8h_00;\n    uint32_t var_28h;\n    int32_t *hWnd;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t bRepaint;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar7 = *0x4d191c;\n    if (((arg_8h == 0xc) || ((0xd < arg_8h && (((arg_8h < 0x10 || (arg_8h == 0x11)) || (arg_8h == 0x14)))))) &&\n       ((arg_10h != -1 && (cVar2 = fcn.0040c4db(arg_10h, &var_20h, &var_28h),  cVar2 != '\\0')))) {\n        iVar7 = var_20h;\n    }\n    if (iVar7 != -1) {\n        iVar7 = **(*0x4d1910 + iVar7 * 4);\n        var_1ch = iVar7;\n        var_20h = fcn.00407a76(iVar7);\n        if (var_20h != -1) {\n            arg_ch_00 = **(*0x4d1924 + var_20h * 4);\n            if (((arg_8h == 0xe) || (arg_8h == 0xf)) || (arg_8h == 0xc)) {\n                *(arg_ch_00 + 0x92) = 0;\n            }\n            else {\n                *(arg_ch_00 + 0x92) = 0x50;\n                *(arg_ch_00 + 0x86) = *0x4d18b8;\n            }\n            var_4h = arg_1ch;\n            var_28h = arg_28h & 2;\n            var_14h = arg_10h;\n            var_10h = arg_14h;\n            var_8h = arg_18h;\n            hWnd = arg_ch_00;\n            if (var_28h == 0) {\n                fcn.00407a34(arg_10h, arg_14h, arg_18h, arg_1ch, iVar7);\n                var_8h = *(iVar7 + 0x60);\n                var_4h = *(iVar7 + 100);\n                var_14h = *(iVar7 + 0x58);\n                var_10h = *(iVar7 + 0x5c);\n            }\n            else {\n                *(arg_ch_00 + 0x86) = 0;\n            }\n            iVar6 = var_20h;\n            if (arg_8h < 0x1e) {\n                bRepaint = 1;\n    // switch table (30 cases) at 0x407632\n                switch(*(arg_8h * 4 + 0x407632)) {\n                case 0x40758a:\n                    bRepaint._0_1_ =\n                         fcn.004078d0(iVar7, arg_ch_00, var_20h, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h);\n                    break;\n                case 0x444f17:\n                    bRepaint._0_1_ =\n                         fcn.00493122(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x444f35:\n                    bRepaint._0_1_ =\n                         fcn.004936ea(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x444f53:\n                    bRepaint._0_1_ =\n                         fcn.0049335c(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x444f71:\n                    bRepaint._0_1_ =\n                         fcn.004935ac(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x444f8f:\n                    bRepaint._0_1_ =\n                         fcn.0049340b(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x444fad:\n                    bRepaint._0_1_ =\n                         fcn.004932a2(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x444fcb:\n                    bRepaint._0_1_ =\n                         fcn.00493deb(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x444fe9:\n                    bRepaint._0_1_ =\n                         fcn.00493ecb(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x445007:\n                    arg_8h_00 = &arg_2ch;\n                    fcn.004119e0(arg_8h_00);\n                    bRepaint._0_1_ =\n                         fcn.0049349f(iVar7, arg_ch_00, iVar6, arg_ch, var_14h, var_10h, arg_18h, arg_1ch, arg_20h, \n                                      arg_24h, arg_8h_00);\n                    break;\n                case 0x44503b:\n                    bRepaint._0_1_ =\n                         fcn.00493fe2(iVar7, arg_ch_00, var_20h, var_10h, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x445057:\n                    bRepaint._0_1_ =\n                         fcn.00494120(iVar7, arg_ch_00, var_20h, var_10h, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x445073:\n                    uVar4 = fcn.0040ce67();\n                    bRepaint._0_1_ =\n                         fcn.00492e4a(iVar7, arg_ch_00, iVar6, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      noname_9, uVar4);\n                    break;\n                case 0x44509c:\n                    bRepaint._0_1_ = fcn.00494588(iVar7, arg_ch_00, var_20h, arg_ch, arg_10h);\n                    break;\n                case 0x4450af:\n                    bRepaint._0_1_ =\n                         fcn.004941c2(iVar7, arg_ch_00, var_20h, var_10h, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x4450cb:\n                    bRepaint._0_1_ = fcn.0049429b(iVar7, arg_ch_00, var_20h, arg_ch);\n                    break;\n                case 0x4450db:\n                    bRepaint._0_1_ = fcn.00493b79(iVar7, arg_ch_00, var_20h, arg_10h, arg_ch, arg_14h);\n                    break;\n                case 0x4450f1:\n                    bRepaint._0_1_ = fcn.004931d9(iVar7, arg_ch_00, var_10h, arg_10h);\n                    break;\n                case 0x445101:\n                    bRepaint._0_1_ = fcn.00493caf(iVar7, arg_ch_00, var_20h, arg_10h, arg_ch, arg_14h, arg_18h);\n                    break;\n                case 0x44511a:\n                    bRepaint._0_1_ =\n                         fcn.0049434b(iVar7, arg_ch_00, var_20h, var_10h, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x445136:\n                    bRepaint._0_1_ = fcn.0049446c(var_10h, arg_ch_00, var_20h, arg_ch, arg_10h);\n                    break;\n                case 0x445149:\n                    bRepaint._0_1_ =\n                         fcn.00493643(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x445167:\n                    bRepaint._0_1_ =\n                         fcn.00493005(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x445185:\n                    bRepaint._0_1_ =\n                         fcn.0049309e(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x4451a3:\n                    bRepaint._0_1_ =\n                         fcn.00494095(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x4451c1:\n                    bRepaint._0_1_ =\n                         fcn.004937b9(iVar7, arg_ch_00, var_20h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x4451df:\n                    bRepaint._0_1_ = fcn.00493956(var_10h, arg_ch_00, var_20h, arg_ch, arg_10h);\n                    break;\n                case 0x4451f2:\n                    bRepaint._0_1_ =\n                         fcn.00492f0c(iVar7, arg_ch_00, var_10h, arg_ch, var_14h, var_10h, var_8h, var_4h, arg_20h, \n                                      arg_24h);\n                    break;\n                case 0x445210:\n                    bRepaint._0_1_ = '\\x01';\n                    break;\n                case 0x4453bd:\n                    goto code_r0x004453bd;\n                }\n                if (bRepaint == '\\0') {\n                    fcn.0041a3e2(iVar6);\n                    if ((arg_8h != 0xb) || (iVar6 = bRepaint,  *arg_ch != 0)) {\n                        iVar6 = 0;\n                    }\n                }\n                else {\n                    *(arg_ch_00 + 0x24) = arg_8h;\n                    *(arg_ch_00 + 0x91) = arg_28h;\n                    *0x4d1948 = *0x4d191c;\n                    *0x4d1944 = iVar6;\n                    if (((arg_28h & 1) == 0) &&\n                       ((((*(iVar7 + 0x70) != 0 || (*(iVar7 + 0x7c) != 0x55)) || (*(iVar7 + 0x80) != 400)) ||\n                        ((*(iVar7 + 0x84) != 0 || (*(iVar7 + 0x88) != 2)))))) {\n                        fcn.00492c36(iVar7, arg_ch_00, iVar7 + 0x6c, *(iVar7 + 0x7c), *(iVar7 + 0x80), *(iVar7 + 0x84), \n                                     *(iVar7 + 0x88), 0);\n                    }\n                    if (((arg_28h & 4) == 0) && ((arg_18h == -1 || (arg_1ch == -1)))) {\n                        uVar4 = (*_sym.imp.USER32.dll_GetDC)(*arg_ch_00);\n                        uVar5 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_ch_00, 0x31, 0, 0);\n                        pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n                        uVar5 = (*_sym.imp.GDI32.dll_SelectObject)(uVar4, uVar5);\n                        fcn.0046deb3(&var_18h);\n                        (*pcVar1)(uVar4, uVar5);\n                        arg_ch_00 = hWnd;\n                        (*_sym.imp.USER32.dll_ReleaseDC)(*hWnd, uVar4);\n                        iVar7 = var_1ch;\n                        iVar6 = var_14h;\n                        if (arg_8h != 0x17) {\n                            if (arg_8h == 0x18) {\n                                iVar6 = var_14h + 4;\n                            }\n                            else if (arg_8h == 0x19) {\n                                var_18h = var_18h + 0xc;\n                            }\n                            else if (arg_8h == 0x1a) {\n                                var_18h = var_18h + 8;\n                            }\n                            else {\n                                var_18h = 0;\n                                iVar6 = var_18h;\n                            }\n                        }\n                        if ((arg_1ch == -1) && ((*(var_1ch + 100) == -1 || (*0x4d18b4 != 2)))) {\n                            *(var_1ch + 100) = iVar6 + 8;\n                        }\n                        if ((arg_18h == -1) && ((*(var_1ch + 0x60) == -1 || (*0x4d18b4 != 2)))) {\n                            *(var_1ch + 0x60) = var_18h + 8;\n                        }\n                        (*_sym.imp.USER32.dll_MoveWindow)\n                                  (*arg_ch_00, *(var_1ch + 0x58), *(var_1ch + 0x5c), *(var_1ch + 0x60), *(var_1ch + 100)\n                                   , bRepaint);\n                        iVar6 = var_20h;\n                    }\n                    if (var_28h == 0) {\n                        fcn.004076aa(iVar7, arg_ch_00, 0);\n                    }\n                    if (*(iVar7 + 0x198) != '\\0') {\n                        if (*(iVar7 + 400) == -1) {\n                            uVar3 = *(iVar7 + 0x18c);\n                        }\n                        else {\n                            uVar3 = *(iVar7 + 400);\n                        }\n                        *(arg_ch_00 + 0x93) = uVar3;\n                    }\n                    if (*(iVar7 + 0x50) != -1) {\n                        fcn.004951f6(iVar6, *(iVar7 + 0x50));\n                    }\n                    if (*(iVar7 + 0x54) != -1) {\n                        fcn.00495009(iVar6, *(iVar7 + 0x54));\n                    }\n                    if (*arg_ch_00 != 0) {\n                        (*_sym.imp.USER32.dll_SetWindowLongW)(*arg_ch_00, 0xffffffeb, iVar6);\n                    }\n                }\n            }\n            else {\ncode_r0x004453bd:\n                fcn.0041a3e2(var_20h);\n                bRepaint = -1;\n                iVar6 = bRepaint;\n            }\n            goto code_r0x00407620;\n        }\n    }\n    bRepaint = 0;\n    iVar6 = bRepaint;\ncode_r0x00407620:\n    fcn.0040e8a0();\n    return iVar6;\n}\n",
        "token_count": 4131
    },
    "004076aa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004076aa(uint *arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int16_t iVar4;\n    bool bVar5;\n    code *pcVar6;\n    uint *puVar7;\n    int16_t iVar8;\n    int32_t iVar9;\n    int16_t iVar10;\n    int16_t iVar11;\n    int32_t lpRect;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t lpPoint;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    puVar7 = arg_ch;\n    if (*(arg_8h + 0x3a) != '\\0') {\n        *(arg_ch + 0x22) = *(arg_8h + 0x16);\n        *(arg_ch + 0x8a) = *(arg_8h + 0x17);\n        if ((*(arg_ch + 0x24) != '\\a') || (arg_10h != '\\0')) {\n            *(arg_ch + 0x23) = *(arg_8h + 0x18);\n            *(arg_ch + 0x8e) = *(arg_8h + 0x19);\n        }\n        (*_sym.imp.USER32.dll_GetClientRect)(*arg_ch, &lpRect);\n        if (arg_8h[0x16] == -1) {\n            *(arg_ch + 0x22) = lpRect;\n        }\n        if (arg_8h[0x17] == -1) {\n            *(arg_ch + 0x8a) = var_2ch;\n        }\n        (*_sym.imp.USER32.dll_GetWindowRect)(*arg_ch, &lpRect);\n        if (arg_8h[0x18] == -1) {\n            *(arg_ch + 0x23) = var_28h - lpRect;\n        }\n        if ((arg_8h[0x19] != -1) && (*(arg_ch + 0x24) != '\\0')) {\n            return;\n        }\n        *(arg_ch + 0x8e) = var_24h - var_2ch;\n        return;\n    }\n    uVar1 = *(arg_ch + 0x86);\n    (*_sym.imp.USER32.dll_GetClientRect)(*arg_8h, &lpRect);\n    var_ch = arg_8h[0x11];\n    arg_10h = arg_8h[0x12];\n    arg_ch = var_28h;\n    var_8h = var_24h;\n    if ((var_28h == 0) && (arg_ch = 0x1,  var_ch != 0)) {\n        arg_ch = var_ch;\n    }\n    if ((var_24h == 0) && (var_8h = 1,  arg_10h != 0)) {\n        var_8h = arg_10h;\n    }\n    if (arg_8h[0x67] != 0) {\n        iVar9 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xf);\n        arg_10h = arg_10h - iVar9;\n    }\n    (*_sym.imp.USER32.dll_GetWindowRect)(*puVar7, &lpRect);\n    var_10h = var_28h - lpRect;\n    var_14h = var_24h - var_2ch;\n    var_1ch = var_2ch;\n    lpPoint = lpRect;\n    (*_sym.imp.USER32.dll_ScreenToClient)(*arg_8h, &lpPoint);\n    *(puVar7 + 0x22) = (lpPoint * var_ch) / arg_ch;\n    *(puVar7 + 0x8a) = (var_1ch * arg_10h) / var_8h;\n    *(puVar7 + 0x23) = (var_10h * var_ch) / arg_ch;\n    *(puVar7 + 0x8e) = (var_14h * arg_10h) / var_8h;\n    if (uVar1 == 0) {\n        return;\n    }\n    bVar5 = false;\n    iVar10 = lpPoint;\n    iVar2 = var_10h;\n    if (((uVar1 & 0x100) != 0) && (*(puVar7 + 0x23) = iVar2,  (uVar1 & 6) == 0)) {\n        if ((uVar1 & 8) == 0) {\n            if (arg_ch / 2 < lpPoint) {\n                *(puVar7 + 0x22) = ((((lpPoint - arg_ch) + var_10h) * var_ch) / arg_ch - iVar2) + var_ch;\n            }\n        }\n        else {\n            bVar5 = true;\n            *(puVar7 + 0x22) = iVar10;\n        }\n    }\n    iVar11 = var_1ch;\n    iVar3 = var_14h;\n    iVar4 = arg_10h;\n    if (((uVar1 & 0x200) != 0) && (*(puVar7 + 0x8e) = iVar3,  (uVar1 & 0x60) == 0)) {\n        if (uVar1 < '\\0') {\n            bVar5 = true;\n            iVar8 = iVar11;\n        }\n        else {\n            if (var_1ch <= var_8h / 2) goto code_r0x00407800;\n            iVar8 = ((((var_1ch - var_8h) + var_14h) * arg_10h) / var_8h - iVar3) + iVar4;\n        }\n        *(puVar7 + 0x8a) = iVar8;\n    }\ncode_r0x00407800:\n    var_18h = uVar1 & 2;\n    if ((uVar1 & 2) != 0) {\n        *(puVar7 + 0x22) = iVar10;\n    }\n    if ((uVar1 & 4) != 0) {\n        iVar8 = var_ch - arg_ch;\n        if (var_18h == 0) {\n            *(puVar7 + 0x22) = (iVar8 - *(puVar7 + 0x23)) + iVar2 + iVar10;\n        }\n        else {\n            *(puVar7 + 0x23) = (iVar8 - *(puVar7 + 0x22)) + iVar2 + iVar10;\n        }\n    }\n    arg_8h._0_2_ = uVar1 & 0x20;\n    if ((uVar1 & 0x20) != 0) {\n        *(puVar7 + 0x8a) = iVar11;\n    }\n    if ((uVar1 & 0x40) != 0) {\n        if (arg_8h == 0) {\n            *(puVar7 + 0x8a) = ((iVar4 - var_8h) - *(puVar7 + 0x8e)) + iVar3 + iVar11;\n        }\n        else {\n            *(puVar7 + 0x8e) = ((iVar4 - *(puVar7 + 0x8a)) - var_8h) + iVar3 + iVar11;\n        }\n    }\n    if (bVar5) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(*arg_8h, &lpRect);\n        pcVar6 = _sym.imp.USER32.dll_MoveWindow;\n        (*_sym.imp.USER32.dll_MoveWindow)(*arg_8h, lpRect, var_2ch, (var_28h - lpRect) + 1, var_24h - var_2ch, 0);\n        (*pcVar6)(*arg_8h, lpRect, var_2ch, var_28h - lpRect, var_24h - var_2ch, 0);\n    }\n    return;\n}\n",
        "token_count": 1832
    },
    "00407a34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407a34(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    if (*0x4d18b4 == 1) {\n        if (arg_8h != -1) {\n            *(arg_18h + 0x58) = arg_8h;\n        }\n        if (arg_ch != -1) {\n            *(arg_18h + 0x5c) = arg_ch;\n        }\n    }\n    else {\n        if (*0x4d18b4 == 2) {\n            if (arg_8h != -1) {\n                *(arg_18h + 0x58) = *(arg_18h + 0x58) + *(arg_18h + 0x60) + arg_8h;\n            }\n            if (arg_ch == -1) goto code_r0x00407a5e;\n            arg_ch = *(arg_18h + 100) + arg_ch;\n        }\n        else {\n            if (arg_8h != -1) {\n                *(arg_18h + 0x58) = *(arg_18h + 0x58) + arg_8h;\n            }\n            if (arg_ch == -1) goto code_r0x00407a5e;\n        }\n        *(arg_18h + 0x5c) = *(arg_18h + 0x5c) + arg_ch;\n    }\ncode_r0x00407a5e:\n    if (-1 < arg_10h) {\n        *(arg_18h + 0x60) = arg_10h;\n    }\n    if (-1 < arg_14h) {\n        *(arg_18h + 100) = arg_14h;\n    }\n    return;\n}\n",
        "token_count": 416
    },
    "00407a76": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407a76(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_EDI;\n    int32_t var_4h;\n    \n    if (*0x4d1930 == *0x4d1928) {\n        if (*0x4d1934 == 0xffff) {\n            return -1;\n        }\n        fcn.0041fd5b(0xa0, unaff_EDI);\n        iVar1 = fcn.00407b21();\n        var_4h = iVar1;\n        fcn.00406b97(&var_4h);\n        iVar2 = *0x4d1934 + 1;\n        *0x4d1934 = iVar2;\n    }\n    else {\n        iVar2 = 3;\n        if (3 < *0x4d1928) {\n            do {\n                if (**(*0x4d1924 + iVar2 * 4) == 0) break;\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < *0x4d1928);\n        }\n        fcn.0041fd5b(0xa0, unaff_EDI);\n        iVar1 = fcn.00407b21();\n    }\n    *0x4d1930 = *0x4d1930 + 1;\n    **(*0x4d1924 + iVar2 * 4) = iVar1;\n    *(iVar1 + 4) = *(arg_8h + 4);\n    return iVar2;\n}\n",
        "token_count": 351
    },
    "00407cb4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407cb4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    int32_t iVar1;\n    \n    iVar1 = *(in_ECX + 8);\n    if (*(in_ECX + 0xd) != '\\0') {\n        iVar1 = *(iVar1 + 0x38);\n    }\n    fcn.0040e8a0();\n    *(iVar1 + 0x2c) = 1;\n    *(iVar1 + 0x20) = arg_8h;\n    iVar1 = *(in_ECX + 8);\n    if (*(in_ECX + 0xd) != '\\0') {\n        iVar1 = *(iVar1 + 0x38);\n    }\n    *(iVar1 + 0x30) = arg_ch;\n    return;\n}\n",
        "token_count": 184
    },
    "00407d1b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407d1b(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    uint unaff_EDI;\n    \n    if ((arg_10h != 0) && (arg_ch < arg_8h[1])) {\n        if ((arg_10h == -1) || (arg_8h[1] <= arg_ch + arg_10h && arg_ch + arg_10h != arg_8h[1])) {\n            arg_10h = arg_8h[1] - arg_ch;\n        }\n        iVar2 = *in_ECX[3];\n        if (iVar2 < 2) {\n            fcn.0040be83(in_ECX[1] + arg_10h);\n            iVar2 = *in_ECX;\n        }\n        else {\n            *in_ECX[3] = iVar2 + -1;\n            puVar1 = fcn.0041fd5b(4, unaff_EDI);\n            *puVar1 = 1;\n            in_ECX[3] = puVar1;\n            iVar2 = in_ECX[1] + 1 + arg_10h;\n            if (iVar2 == 0) {\n                uVar3 = 8;\n            }\n            else {\n                uVar3 = iVar2 + 7U & 0xfffffff8;\n            }\n            in_ECX[2] = uVar3;\n            iVar2 = fcn.0041fd8b(-(uVar3 * 2 >> 0x20 != 0) | uVar3 * 2);\n            fcn.00420db0(iVar2, *in_ECX, in_ECX[1] * 2 + 2);\n            *in_ECX = iVar2;\n        }\n        fcn.00420db0(iVar2 + in_ECX[1] * 2, *arg_8h + arg_ch * 2, arg_10h * 2);\n        in_ECX[1] = in_ECX[1] + arg_10h;\n        *(*in_ECX + in_ECX[1] * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 514
    },
    "00407ed4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00407ed4(int32_t arg_8h, int32_t *arg_ch, uint *arg_10h, int32_t *arg_14h, uint arg_18h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uint32_t uVar6;\n    char cVar7;\n    int32_t *piVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint uVar11;\n    uint uVar12;\n    uint32_t uVar13;\n    int32_t iVar14;\n    uint var_6ch;\n    int32_t var_5ch;\n    int32_t var_58h;\n    int32_t var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    int32_t *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    \n    fcn.0040c25d();\n    var_38h = 0x49d0fc;\n    var_2ch = 0;\n    var_20h = 0;\n    var_34h = 0;\n    var_ch = 0;\n    var_30h = 0;\n    var_10h = 0;\n    iVar10 = *arg_ch;\n    iVar14 = 0x48;\n    var_28h = *arg_14h + -1;\n    var_8h = -1;\n    var_14h = arg_8h;\n    var_24h = 0x7f;\n    arg_8h = *(arg_8h + 4);\n    if (*(*(arg_8h + iVar10 * 4) + 8) == 0x48) {\ncode_r0x0040808c:\n        iVar14 = var_8h;\n        uVar12 = 0xffffffff;\n        *arg_ch = iVar10 + 1;\n        if (*(*(arg_8h + (iVar10 + 1) * 4) + 8) == 0x7f) {\n            iVar10 = fcn.00403a26(arg_14h);\n            if (-1 < iVar10) {\n                if (&fcn.00407ed4::var_6ch != arg_10h) {\n                    fcn.0040c1c3(arg_10h);\n                }\n                var_5ch = var_28h;\n                var_50h = *arg_14h + -1;\n                var_58h = var_10h;\n                var_54h = iVar14;\n                if (iVar14 == -1) {\n                    var_54h = var_10h;\n                }\n                var_4ch._0_1_ = arg_18h;\n                fcn.00406398(&fcn.00407ed4::var_6ch);\n                uVar12 = 0;\n            }\n        }\n        else {\n            uVar11 = 0x72;\n            iVar14 = -1;\ncode_r0x0044571a:\n            uVar12 = 0xffffffff;\n            fcn.004734ba(uVar11, iVar14);\n        }\ncode_r0x004080f6:\n        var_38h = 0x49d0fc;\n        fcn.00408320();\n        fcn.0041fd94(var_34h);\n        fcn.0040b1ff();\n        return uVar12;\n    }\n    var_1ch = 0x40;\n    do {\n        uVar6 = var_ch;\n        bVar5 = false;\n        iVar1 = *(*(arg_8h + iVar10 * 4) + 8);\n        while (var_34h = var_20h,  var_30h = var_ch,  var_18h = arg_8h,  iVar1 == 0) {\n            piVar8 = *(arg_8h + iVar10 * 4);\n            if (*piVar8 == 0x24) {\n                bVar5 = true;\n            }\n            else if (*piVar8 != 0x1e) {\n                iVar14 = *(piVar8 + 10);\n                uVar11 = 0x69;\n                goto code_r0x0044571a;\n            }\n            iVar10 = iVar10 + 1;\n            *arg_ch = iVar10;\n            iVar1 = *(*(arg_8h + iVar10 * 4) + 8);\n        }\n        piVar8 = *(arg_8h + iVar10 * 4);\n        if (*(piVar8 + 2) != 0x33) {\ncode_r0x00445729:\n            iVar14 = *(piVar8 + 10);\n            uVar11 = 0x91;\n            goto code_r0x0044571a;\n        }\n        puVar2 = *piVar8;\n        var_48h = *puVar2;\n        var_44h = puVar2[1];\n        var_40h = puVar2[2];\n        var_3ch = puVar2[3];\n        *var_3ch = *var_3ch + 1;\n        uVar13 = 0;\n        if (var_ch != 0) {\n            do {\n                iVar14 = 0x407fa5;\n                cVar7 = fcn.004082dc();\n                if (cVar7 != '\\0') break;\n                uVar13 = uVar13 + 1;\n            } while (uVar13 < uVar6);\n        }\n        uVar12 = 0xffffffff;\n        if (uVar13 != var_ch) {\n            uVar11 = 0xab;\n            iVar10 = *(*(*(var_14h + 4) + *arg_ch * 4) + 10);\ncode_r0x00445750:\n            fcn.004734ba(uVar11, iVar10);\n            fcn.0040b1ff();\n            goto code_r0x004080f6;\n        }\n        fcn.00406aff(&fcn.00407ed4::var_48h);\n        *arg_ch = *arg_ch + 1;\n        iVar10 = *arg_ch;\n        iVar3 = *(var_14h + 4);\n        if ((*(*(iVar3 + iVar10 * 4) + 8) != 0x41) || (bVar5)) {\n            if (var_8h != -1) {\ncode_r0x00445735:\n                uVar11 = 0x69;\n                iVar10 = -1;\n                goto code_r0x00445750;\n            }\n        }\n        else {\n            iVar9 = 0;\n            do {\n                while( true ) {\n                    while( true ) {\n                        iVar10 = iVar10 + 1;\n                        iVar4 = *(iVar3 + iVar10 * 4);\n                        *arg_ch = iVar10;\n                        iVar1 = *(iVar4 + 8);\n                        if (iVar1 != 0x47) break;\n                        iVar9 = iVar9 + 1;\n                    }\n                    if (iVar1 == 0x48) break;\n                    if (iVar1 == var_1ch) {\n                        if (iVar9 == 0) goto code_r0x00408127;\n                    }\n                    else if (iVar1 == var_24h) goto code_r0x00445735;\n                }\n                iVar9 = iVar9 + -1;\n            } while (-1 < iVar9);\ncode_r0x00408127:\n            if (var_8h == -1) {\n                var_8h = var_10h;\n            }\n        }\n        var_10h = var_10h + 1;\n        fcn.0040b1ff();\n        iVar10 = *arg_ch;\n        arg_8h = *(var_14h + 4);\n        iVar1 = *(*(arg_8h + iVar10 * 4) + 8);\n        if (iVar1 == var_1ch) {\n            iVar10 = iVar10 + 1;\n            *arg_ch = iVar10;\n            piVar8 = *(arg_8h + iVar10 * 4);\n            if (*(piVar8 + 2) == 0x48) goto code_r0x00445729;\n        }\n        else if (iVar1 != 0x48) {\n            uVar11 = 0x69;\n            goto code_r0x0044571a;\n        }\n        if (*(*(arg_8h + iVar10 * 4) + 8) == 0x48) goto code_r0x0040808c;\n        var_ch = var_30h;\n        var_20h = var_34h;\n    } while( true );\n}\n",
        "token_count": 2031
    },
    "004082a1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004082a1(int32_t param_1)\n\n{\n    if (*(param_1 + 0x14) != 0) {\n        fcn.0041fd94(*(param_1 + 0x14));\n    }\n    *(param_1 + 0x24) = 0x2800;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x1c) = 0;\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 4) = 0;\n    *(param_1 + 0x28) = 0x2000;\n    return;\n}\n",
        "token_count": 197
    },
    "00408320": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408320(int32_t param_1)\n\n{\n    uint *arg_8h;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(param_1 + 8) == 0) {\n        *(param_1 + 8) = 0;\n    }\n    else {\n        do {\n            iVar1 = *(param_1 + 4);\n            arg_8h = *(iVar1 + uVar2 * 4);\n            if (arg_8h != NULL) {\n                *arg_8h[3] = *arg_8h[3] + -1;\n                if (*arg_8h[3] == 0) {\n                    fcn.0041fd94(*arg_8h);\n                    fcn.0041fd4d(arg_8h[3]);\n                }\n                fcn.0041fd4d(arg_8h);\n                iVar1 = *(param_1 + 4);\n            }\n            *(iVar1 + uVar2 * 4) = 0;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *(param_1 + 8));\n        *(param_1 + 8) = 0;\n    }\n    return;\n}\n",
        "token_count": 286
    },
    "004084e7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004084e7(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint *in_ECX;\n    uint unaff_ESI;\n    \n    if (arg_8h == 0) {\n        fcn.0040ad22(0, 0xffffffff);\n    }\n    else {\n        uVar2 = fcn.004248f3(arg_8h);\n        in_ECX[1] = uVar2;\n        iVar1 = *in_ECX[3];\n        if (iVar1 < 2) {\n            fcn.004088bb(uVar2);\n        }\n        else {\n            *in_ECX[3] = iVar1 + -1;\n            puVar3 = fcn.0041fd5b(4, unaff_ESI);\n            *puVar3 = 1;\n            in_ECX[3] = puVar3;\n            if (in_ECX[1] == -1) {\n                uVar4 = 8;\n            }\n            else {\n                uVar4 = in_ECX[1] + 8 & 0xfffffff8;\n            }\n            in_ECX[2] = uVar4;\n            uVar2 = fcn.0041fd8b(-(uVar4 * 2 >> 0x20 != 0) | uVar4 * 2);\n            *in_ECX = uVar2;\n        }\n        fcn.00420db0(*in_ECX, arg_8h, in_ECX[1] * 2 + 2);\n    }\n    return;\n}\n",
        "token_count": 366
    },
    "00408577": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408577(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint arg_ch_00;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    int32_t unaff_ESI;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar uStack56;\n    uint uStack44;\n    \n    fcn.00408157();\n    iVar2 = **(arg_8h + 4);\n    fcn.00408e90();\n    uVar3 = *(iVar2 + 8);\n    iVar2 = *(*(arg_8h + 4) + 4);\n    fcn.00408e90();\n    uStack76 = *(iVar2 + 8);\n    iVar2 = *(*(arg_8h + 4) + 8);\n    fcn.00408e90();\n    uStack80 = 0;\n    uStack72 = *(iVar2 + 8);\n    if (*(arg_8h + 8) < 4) {\n        arg_ch_00 = 0;\n    }\n    else {\n        arg_ch_00 = fcn.0040ce67();\n    }\n    iVar2 = fcn.0040817f(uStack76);\n    if (iVar2 == 0) {\n        uStack44 = *(unaff_ESI + 4);\n        uStack56 = 1;\n        fcn.00407c18(*(unaff_ESI + 4));\n        uVar3 = fcn.004092a0(uVar3, arg_ch_00, &uStack80);\n        fcn.00407c5d(&stack0xffffffa4);\n        fcn.00407cb4(uVar3, 0);\n        fcn.0040b1ff();\n    }\n    else {\n        fcn.00407c5d(unaff_ESI);\n        iVar1 = *(*in_ECX + 4);\n        iVar4 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 2;\n        iVar4 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x18) = 0;\n        fcn.00407cb4(iVar2 + 1, 0);\n    }\n    fcn.004082a1();\n    return 0;\n}\n",
        "token_count": 604
    },
    "00408665": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408665(int32_t arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    uint16_t *in_ECX;\n    int32_t in_EDX;\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar2 = *in_ECX;\n    if ((arg_10h != 0) && ((uVar2 & 0xfc00) == 0xd800)) {\n        uVar2 = ((uVar2 & 0x3ff) << 10 | in_ECX[1] & 0x3ff) + 0x10000;\n    }\n    uVar1 = 2;\n    if (in_EDX == 2) {\n        if (uVar2 != 10) {\n            if (uVar2 == 0xd) {\n                if ((arg_8h + -2 <= in_ECX) || (in_ECX[1] != 10)) {\n                    uVar1 = 1;\n                }\n                *arg_ch = uVar1;\n                return 1;\n            }\n            return 0;\n        }\n    }\n    else {\n        if (uVar2 < 10) {\n            return 0;\n        }\n        if (0xc < uVar2) {\n            if (uVar2 == 0xd) {\n                if ((arg_8h + -2 <= in_ECX) || (in_ECX[1] != 10)) {\n                    uVar1 = 1;\n                }\n                *arg_ch = uVar1;\n                return 1;\n            }\n            if ((uVar2 != 0x85) && (1 < uVar2 - 0x2028)) {\n                return 0;\n            }\n        }\n    }\n    *arg_ch = 1;\n    return 1;\n}\n",
        "token_count": 400
    },
    "004086ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004086ac(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint unaff_EDI;\n    \n    if ((arg_10h != 0) && (arg_ch < arg_8h[1])) {\n        if ((arg_10h == -1) || (arg_8h[1] <= arg_ch + arg_10h && arg_ch + arg_10h != arg_8h[1])) {\n            arg_10h = arg_8h[1] - arg_ch;\n        }\n        iVar3 = *in_ECX[3];\n        if (iVar3 < 2) {\n            fcn.004088bb(arg_10h);\n        }\n        else {\n            *in_ECX[3] = iVar3 + -1;\n            puVar1 = fcn.0041fd5b(4, unaff_EDI);\n            *puVar1 = 1;\n            in_ECX[3] = puVar1;\n            if (arg_10h == -1) {\n                uVar2 = 8;\n            }\n            else {\n                uVar2 = arg_10h + 8U & 0xfffffff8;\n            }\n            in_ECX[2] = uVar2;\n            iVar3 = fcn.0041fd8b(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n            *in_ECX = iVar3;\n        }\n        in_ECX[1] = arg_10h;\n        fcn.00420db0(*in_ECX, *arg_8h + arg_ch * 2, arg_10h * 2);\n        *(arg_10h * 2 + *in_ECX) = 0;\n        return;\n    }\n    fcn.0040ad22(0, 0xffffffff);\n    return;\n}\n",
        "token_count": 451
    },
    "00408817": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408817(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint unaff_EDI;\n    \n    if (((arg_10h == 0) || (arg_10h == -1)) || (arg_8h == 0)) {\n        fcn.0040ad22(0, 0xffffffff);\n    }\n    else {\n        iVar3 = *in_ECX[3];\n        if (iVar3 < 2) {\n            fcn.004088bb(arg_10h);\n        }\n        else {\n            *in_ECX[3] = iVar3 + -1;\n            puVar1 = fcn.0041fd5b(4, unaff_EDI);\n            *puVar1 = 1;\n            in_ECX[3] = puVar1;\n            if (arg_10h == -1) {\n                uVar2 = 8;\n            }\n            else {\n                uVar2 = arg_10h + 8U & 0xfffffff8;\n            }\n            in_ECX[2] = uVar2;\n            iVar3 = fcn.0041fd8b(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n            *in_ECX = iVar3;\n        }\n        in_ECX[1] = arg_10h;\n        fcn.00420db0(*in_ECX, arg_8h + arg_ch * 2, arg_10h * 2);\n        *(arg_10h * 2 + *in_ECX) = 0;\n    }\n    return;\n}\n",
        "token_count": 395
    },
    "00408950": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t ** __cdecl fcn.00408950(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *arg_8h_00;\n    int32_t **in_ECX;\n    uint32_t uVar4;\n    uint unaff_EDI;\n    uint var_1ch;\n    uint *var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t **var_8h;\n    \n    var_8h = in_ECX;\n    fcn.00408388();\n    piVar1 = *in_ECX;\n    fcn.0040c910();\n    *(*piVar1 + 0x210) = 0;\n    uVar2 = *(arg_8h + 8);\n    if (uVar2 != 0) {\n        var_ch = uVar2;\n        fcn.004083e0(*in_ECX, 1);\n        uVar4 = 0;\n        if (uVar2 != 0) {\n            do {\n                puVar3 = *(*(arg_8h + 4) + uVar4 * 4);\n                arg_8h_00 = fcn.0041fd5b(0x10, unaff_EDI);\n                in_ECX = var_8h;\n                *arg_8h_00 = *puVar3;\n                arg_8h_00[1] = puVar3[1];\n                arg_8h_00[2] = puVar3[2];\n                piVar1 = puVar3[3];\n                arg_8h_00[3] = piVar1;\n                *piVar1 = *piVar1 + 1;\n                var_10h = 4;\n                var_14h = arg_8h_00;\n                fcn.00408a30(*var_8h, &var_1ch, 1);\n                *arg_8h_00[3] = *arg_8h_00[3] + -1;\n                if (*arg_8h_00[3] == 0) {\n                    fcn.0041fd94(*arg_8h_00);\n                    fcn.0041fd4d(arg_8h_00[3]);\n                }\n                fcn.0041fd4d(arg_8h_00);\n                uVar4 = uVar4 + 1;\n                var_14h = NULL;\n                var_10h = 1;\n                var_1ch = 0;\n            } while (uVar4 < var_ch);\n        }\n    }\n    return in_ECX;\n}\n",
        "token_count": 590
    },
    "00408a30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408a30(int32_t **arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    bool bVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **in_stack_ffffffec;\n    \n    piVar2 = *arg_8h;\n    iVar4 = *piVar2;\n    if ((iVar4 < 2) || (iVar4 == 0x7fffffff)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        *piVar2 = iVar4 + -1;\n        in_stack_ffffffec = arg_8h;\n        fcn.004021a5(arg_8h);\n        **arg_8h = 1;\n        piVar2 = *arg_8h;\n    }\n    if (*piVar2 != 0x7fffffff) {\n        *piVar2 = 1;\n        piVar2 = *arg_8h;\n    }\n    if ((arg_10h != 0) && (piVar2[0x84] = 0,  0 < arg_10h)) {\n        piVar2 = &arg_10h;\n        do {\n            piVar2 = piVar2 + 1;\n            iVar4 = (*arg_8h)[0x84];\n            if (iVar4 < 0x40) {\n                (*arg_8h)[iVar4 + 0x44] = *piVar2;\n                (*arg_8h)[0x84] = (*arg_8h)[0x84] + 1;\n            }\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    piVar2 = *arg_8h;\n    iVar4 = piVar2[2];\n    if ((iVar4 == 0) || (iVar7 = piVar2[0x43],  iVar7 != piVar2[0x84])) {\ncode_r0x00408ba6:\n        uVar5 = 0;\n    }\n    else {\n        iVar6 = 0;\n        if (0 < iVar7) {\n            piVar3 = piVar2 + 3;\n            do {\n                if ((piVar3[0x41] < 0) || (*piVar3 <= piVar3[0x41])) goto code_r0x00408ba6;\n                iVar6 = iVar6 + 1;\n                piVar3 = piVar3 + 1;\n            } while (iVar6 < iVar7);\n        }\n        arg_10h = 0;\n        if (0 < iVar7) {\n            piVar3 = piVar2 + 0x44;\n            do {\n                if (piVar3[-0x41] == 0x3ea) {\n                    iVar4 = iVar4 / 0x3ea;\n                }\n                else {\n                    iVar4 = iVar4 / piVar3[-0x41];\n                }\n                arg_10h = arg_10h + *piVar3 * iVar4;\n                piVar3 = piVar3 + 1;\n                iVar7 = iVar7 + -1;\n            } while (iVar7 != 0);\n            if (arg_10h < 0) goto code_r0x00408ba6;\n        }\n        iVar4 = arg_10h * 4;\n        if (*(iVar4 + piVar2[1]) == 0) {\n            iVar7 = fcn.0041fd5b(0x10, in_stack_ffffffec);\n            *(iVar7 + 8) = 0;\n            fcn.004119e0(arg_ch);\n            *(iVar4 + (*arg_8h)[1]) = iVar7;\n        }\n        else {\n            fcn.0040c5e7(arg_ch);\n        }\n        uVar5 = *(iVar4 + (*arg_8h)[1]);\n    }\n    return uVar5;\n}\n",
        "token_count": 909
    },
    "00408baa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408baa(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t unaff_EBX;\n    int32_t iVar5;\n    uint unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t iVar6;\n    ulong uVar7;\n    uint arg_8h_00;\n    char cVar8;\n    int32_t iStack108;\n    int32_t iStack104;\n    int32_t *piStack100;\n    int32_t iStack96;\n    int32_t iStack88;\n    int32_t iStack84;\n    int32_t iStack80;\n    uint32_t uStack76;\n    int32_t aiStack72 [3];\n    uchar auStack60 [12];\n    uchar auStack48 [4];\n    int32_t aiStack44 [2];\n    uint uStack36;\n    uint uStack32;\n    \n    fcn.00408e90();\n    iVar1 = **(arg_8h + 4);\n    fcn.00408e90();\n    iVar2 = *(*(iVar1 + 8) + 4);\n    iVar1 = *(*(arg_8h + 4) + 4);\n    fcn.00408e90();\n    iStack88 = **(iVar1 + 8);\n    iVar1 = *(*(arg_8h + 4) + 4);\n    fcn.00408e90();\n    iVar1 = *(*(iVar1 + 8) + 4);\n    iVar3 = iVar2;\n    fcn.00407c18(iVar2);\n    iVar5 = 0;\n    uStack76 = 0;\n    uVar4 = 0;\n    unaff_EBX = unaff_EBX & 0xffffff;\n    if (2 < *(arg_8h + 8)) {\n        uStack76 = fcn.0040ce67();\n        if ((uStack76 & 2) == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n            uStack76 = uStack76 & 1;\n            unaff_EBX = CONCAT13(1, unaff_EBX);\n        }\n    }\n    if (iVar1 == 0) {\n        uStack76 = uVar4 ^ 1;\n        aiStack72[0] = fcn.00407d93();\n        cVar8 = unaff_EBX >> 0x18;\n        fcn.004083e0(aiStack72[0], 1);\n        if (cVar8 == '\\0') {\n            uStack36 = 0;\n            uStack32 = 1;\n            aiStack44[0] = iVar2;\n            fcn.00408a30(aiStack72[0], aiStack44, 1);\n            fcn.0040e8a0();\n        }\n        if (0 < iVar2) {\n            do {\n                fcn.00408817(iStack108, iVar5, 1);\n                fcn.0040890f(aiStack72);\n                fcn.00408a30(iStack88, auStack60, 1);\n                fcn.0040e8a0();\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < iVar2);\n        }\n    }\n    else {\n        if (uStack76 == 0) {\n            iStack104 = 0;\n            aiStack72[0] = 0;\n            if (0 < iVar2) {\n                do {\n                    iVar5 = fcn.00408e71(iStack96);\n                    if (iVar5 != 0) {\n                        iStack104 = iStack104 + 1;\n                    }\n                    aiStack72[0] = aiStack72[0] + 1;\n                } while (aiStack72[0] < iVar2);\n            }\n        }\n        else if (uStack76 == 1) {\n            iStack104 = 0;\n            while (iVar6 = iVar2,  0 < iVar6) {\n                iStack80 = fcn.00408e71(iVar6);\n                iVar2 = iVar5;\n                if (iStack80 != 0) {\n                    aiStack72[0] = iVar6 - (iStack80 - iStack108 >> 1);\n                    iVar6 = aiStack72[0] - iStack96;\n                    if (-1 < iVar6) {\n                        iVar2 = fcn.0042637e(iStack80, iVar1, iStack96);\n                        if (iVar2 == 0) {\n                            iStack104 = iStack104 + 1;\n                            iVar2 = iStack96 * 2;\n                        }\n                        else {\n                            iVar2 = 2;\n                            iVar6 = aiStack72[0] + -1;\n                        }\n                        iStack108 = iStack80 + iVar2;\n                        iVar2 = iVar6;\n                    }\n                }\n            }\n            iVar2 = **(arg_8h + 4);\n            fcn.00408e90();\n            iStack108 = **(iVar2 + 8);\n            iVar2 = **(arg_8h + 4);\n            fcn.00408e90();\n            iVar2 = *(*(iVar2 + 8) + 4);\n        }\n        else {\n            iStack104 = -1;\n        }\n        piStack100 = fcn.00407d93();\n        cVar8 = unaff_EBX >> 0x18;\n        if (iStack104 < 1) {\n            if (cVar8 == '\\0') {\n                fcn.004083e0(piStack100, 1);\n                aiStack44[0] = 1;\n                uStack36 = 0;\n                uStack32 = 1;\n                fcn.00408a30(piStack100, aiStack44, 1);\n                fcn.0040e8a0();\n                iVar1 = **(arg_8h + 4);\n                fcn.00408e90();\n                fcn.00408817(iStack108, 0, *(*(iVar1 + 8) + 4));\n                fcn.0040890f(aiStack72);\n            }\n            else {\n                fcn.004083e0(piStack100, 1);\n                iVar1 = **(arg_8h + 4);\n                fcn.00408e90();\n                fcn.00408817(iStack108, 0, *(*(iVar1 + 8) + 4));\n                fcn.0040890f(aiStack72);\n            }\n            fcn.00408a30(unaff_ESI, auStack60, 1);\n            fcn.0040e8a0();\n            iVar1 = *(*piStack100 + 4);\n            iVar2 = *(iVar1 + 8 + piStack100);\n            if (*(iVar1 + 0xd + piStack100) != '\\0') {\n                iVar2 = *(iVar2 + 0x38);\n            }\n            *(iVar2 + 0x14) = 1 - unaff_EDI;\n            iVar2 = *(iVar1 + 8 + piStack100);\n            if (*(iVar1 + 0xd + piStack100) != '\\0') {\n                iVar2 = *(iVar2 + 0x38);\n            }\n            *(iVar2 + 0x18) = 0;\n        }\n        else {\n            aiStack72[0] = iStack104 + 1;\n            if (cVar8 == '\\0') {\n                arg_8h_00 = 1;\n                fcn.004083e0(piStack100, 1);\n                aiStack44[0] = aiStack72[0];\n                uStack36 = 0;\n                uStack32 = 1;\n                fcn.00408a30(piStack100, aiStack44, 1);\n                fcn.0040e8a0();\n            }\n            else {\n                arg_8h_00 = 1;\n                fcn.004083e0(piStack100, 1);\n            }\n            iStack84 = 0;\n            iStack80 = 0;\n            fcn.0040bfbf();\n            if (0 < aiStack72[0]) {\n                do {\n                    if (iVar1 == 0) {\n                        uVar7 = fcn.00408e71(unaff_EBX);\n                        if ((uVar7 == 0) && (iStack96 != iVar2)) {\n                            fcn.004051ec(uVar7 >> 0x20);\n                        }\n                        else {\n                            fcn.0040890f(&uStack76);\n                            fcn.00408a30(unaff_EDI, auStack48, 1);\n                            iVar3 = iVar3 + 1;\n                            fcn.0040e8a0();\n                            fcn.0040bfbf();\n                        }\n                        piStack100 = piStack100 + 1;\n                    }\n                    else {\n                        iVar5 = iVar3;\n                        if (iVar1 == 1) {\n                            while (iStack80 = iVar5,  iVar5 = fcn.00408e71(iVar2),  iVar5 != 0) {\n                                iStack84 = iVar2 - (iVar5 - iVar3 >> 1);\n                                iVar2 = iStack84 - unaff_EBX;\n                                if (iVar2 < 0) {\n                                    iVar5 = iVar5 + iStack84 * 2;\n                                    goto code_r0x00408ddb;\n                                }\n                                iVar6 = fcn.0042637e(iVar5, iStack108, unaff_EBX);\n                                if (iVar6 == 0) goto code_r0x00408ddb;\n                                iVar3 = iVar5 + 2;\n                                iVar2 = iStack84 + -1;\n                                iVar5 = iStack80;\n                            }\n                            iVar5 = iVar3 + iVar2 * 2;\ncode_r0x00408ddb:\n                            fcn.00408817(iStack80, 0, iVar5 - iStack80 >> 1);\n                            fcn.0040890f(&iStack88);\n                            fcn.00408a30(arg_8h_00, &uStack76, 1);\n                            fcn.0040e8a0();\n                        }\n                    }\n                } while (piStack100 < iStack88);\n            }\n        }\n    }\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 2286
    },
    "00408e90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00408e90(ulong *param_1)\n\n{\n    int32_t iVar1;\n    ushort *arg_8h;\n    uint *puVar2;\n    char16_t *arg_10h;\n    uint unaff_EDI;\n    ulong uVar3;\n    uint var_94h;\n    uint var_10h;\n    \n    if (*(param_1 + 1) == 0) {\n        iVar1 = *(param_1 + 0xc);\n        if (iVar1 == 1) {\n            arg_10h = 0xa;\n            fcn.00425156(*param_1, &var_94h, 10);\n        }\n        else if (iVar1 == 2) {\n            arg_10h = 0xa;\n            fcn.00425113(*param_1, *(param_1 + 4), &var_94h, 10);\n        }\n        else if (iVar1 == 3) {\n            uVar3 = *param_1;\n            fcn.0041faa3(&var_94h, L\"%.15g\", uVar3);\n            arg_10h = uVar3 >> 0x20;\n        }\n        else if (iVar1 == 7) {\n            arg_10h = *param_1;\n            fcn.0041faa3(&var_94h, L\"0x%p\", arg_10h);\n        }\n        else {\n            arg_10h = 0x2;\n            if (iVar1 == 9) {\n                arg_10h = L\"True\";\n                if (*param_1 == '\\0') {\n                    arg_10h = L\"False\";\n                }\n                fcn.00424913(&var_94h, arg_10h);\n            }\n            else if (iVar1 == 10) {\n                arg_10h = &var_10h;\n                puVar2 = fcn.00471e01(arg_10h);\n                fcn.00424913(&var_94h, *puVar2);\n                fcn.0040b1ff();\n            }\n            else {\n                if (iVar1 == 0xb) {\n                    arg_8h = fcn.0041fd8b();\n                    if (**param_1 == 0) {\n                        *arg_8h = 0;\n                    }\n                    else {\n                        fcn.0046eb5c(**param_1);\n                    }\n                    fcn.0041fd5b(0x10, unaff_EDI);\n                    iVar1 = fcn.0040b606(arg_8h);\n                    *(param_1 + 1) = iVar1;\n                    fcn.0041fd94(arg_8h);\n                    return;\n                }\n                var_94h._0_2_ = 0;\n            }\n        }\n        fcn.0041fd5b(0x10, arg_10h);\n        iVar1 = fcn.0040b606(&var_94h);\n        *(param_1 + 1) = iVar1;\n    }\n    return;\n}\n",
        "token_count": 682
    },
    "0040901d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040901d(uint16_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (arg_8h != NULL) {\n        if ((*arg_8h == 0x23) && (iVar2 = fcn.00428d9b(arg_8h, L\"#include\", 8),  iVar2 != 0)) {\n            iVar3 = 3;\n            arg_8h = arg_8h + 1;\n        }\n        uVar1 = *arg_8h;\n        while (in_EAX = uVar1,  uVar1 != 0) {\n            if (in_EAX == 0x22) {\n                if (iVar3 == 2) {\ncode_r0x00409070:\n                    iVar3 = 0;\n                }\n                else if (iVar3 == 0) {\n                    iVar3 = 2;\n                }\n            }\n            else if (in_EAX == 0x27) {\n                if (iVar3 == 1) goto code_r0x00409070;\n                if (iVar3 == 0) {\n                    iVar3 = 1;\n                }\n            }\n            else if ((uVar1 == 0x3b) && ((iVar3 == 0 || (iVar3 == 3)))) {\n                *arg_8h = 0;\n                goto code_r0x00409063;\n            }\n            arg_8h = arg_8h + 1;\n            uVar1 = *arg_8h;\n        }\n        if ((iVar3 == 0) || (iVar3 == 3)) {\ncode_r0x00409063:\n            return CONCAT31(uVar1 >> 8, 1);\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 422
    },
    "004090f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004090f8(int16_t *arg_8h, uint *arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    uint arg_ch_00;\n    uchar *in_ECX;\n    uint extraout_ECX;\n    uint uVar6;\n    uint32_t uVar7;\n    uint unaff_EDI;\n    int32_t *piVar8;\n    uint in_stack_ffffffa8;\n    char16_t *arg_10h_00;\n    int16_t *piVar9;\n    uint var_2ch;\n    uint var_1ch;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar5 = arg_8h;\n    var_8h = fcn.0041fd8b(0x2000);\n    var_ch = fcn.0041fd5b(4, unaff_EDI);\n    uVar6 = 1;\n    *var_ch = 1;\n    if ((*arg_8h != 0x23) ||\n       (iVar4 = fcn.00428d9b(arg_8h, L\"#pragma compile\", 0xf),  in_stack_ffffffa8 = uVar6,  iVar4 == 0))\n    goto code_r0x0040912d;\n    iVar4 = fcn.00428d9b(arg_8h, L\"#notrayicon\", 0xb);\n    if (iVar4 == 0) {\n        *in_ECX = 1;\n        goto code_r0x0040912d;\n    }\n    iVar4 = fcn.00428d9b(arg_8h, L\"#requireadmin\", 0xd);\n    if (iVar4 == 0) {\n        in_ECX[1] = 1;\n        goto code_r0x0040912d;\n    }\n    iVar4 = fcn.00428d9b(arg_8h, L\"#OnAutoItStartRegister\", 0x16);\n    if (iVar4 == 0) {\n        piVar5 = fcn.00408fa0();\n        fcn.00408fd0(piVar5);\n        fcn.004090bd(piVar5);\n        iVar4 = fcn.004248f3(piVar5);\n        iVar1 = piVar5[iVar4 + -1];\n        if ((iVar1 == 0x22) || (var_4h = 0x27,  iVar1 == 0x27)) {\n            if (*piVar5 != iVar1) goto code_r0x00445d68;\n            piVar5[iVar4 + -1] = 0;\n            (**(**(in_ECX + 4) + 8))(piVar5 + 1);\n        }\n        else {\n            if ((*piVar5 == 0x22) || (*piVar5 == 0x27)) {\ncode_r0x00445d68:\n                fcn.0041fd94(piVar5);\n                arg_10h_00 = L\"Bad directive syntax error\";\ncode_r0x00445e67:\n                fcn.004697b9(arg_ch, *arg_10h, arg_10h_00, arg_8h);\n                goto code_r0x00445e76;\n            }\n            (**(**(in_ECX + 4) + 8))(piVar5);\n        }\n        fcn.0041fd94(piVar5);\n    }\n    else {\n        iVar4 = fcn.00428d9b(arg_8h, L\"#include-once\", 0xd);\n        if (iVar4 == 0) {\n            uVar7 = 0;\n            if (*(in_ECX + 0x20) != 0) {\n                do {\n                    puVar2 = *(*(in_ECX + 0x1c) + uVar7 * 4);\n                    iVar4 = fcn.0041d5dc(*arg_ch, arg_ch[1], *puVar2, puVar2[1], 0);\n                    if (iVar4 == 0) {\n                        if (1 < **(*(in_ECX + 0x2c) + uVar7 * 4)) {\n                            in_stack_ffffffa8 = 4;\n                        }\n                        break;\n                    }\n                    uVar7 = uVar7 + 1;\n                } while (uVar7 < *(in_ECX + 0x20));\n            }\n            goto code_r0x0040912d;\n        }\n        iVar4 = fcn.00428d9b(arg_8h, L\"#include\", 8);\n        uVar6 = var_8h;\n        if (iVar4 != 0) {\n            piVar9 = arg_8h;\n            iVar4 = fcn.00428d9b(arg_8h, L\"#comments-start\", 0xf);\n            if ((iVar4 == 0) || (iVar4 = fcn.00428d9b(arg_8h, 0x49d0f4, 3),  piVar9 = arg_8h,  iVar4 == 0)) {\n                arg_8h = 0x1;\n                do {\n                    while( true ) {\n                        cVar3 = fcn.0040b0d9(piVar5);\n                        if (cVar3 == '\\0') {\n                            if (0 < arg_8h) {\n                                arg_10h_00 = L\"Unterminated group of comments\";\n                                arg_8h = piVar9;\n                                goto code_r0x00445e67;\n                            }\n                            goto code_r0x0040912d;\n                        }\n                        *arg_10h = *arg_10h + 1;\n                        fcn.004090bd(piVar5);\n                        fcn.00408fd0(piVar5);\n                        iVar4 = fcn.00428d9b(piVar5, L\"#comments-start\", 0xf);\n                        if ((iVar4 != 0) && (iVar4 = fcn.00428d9b(piVar5, 0x49d0f4, 3),  iVar4 != 0)) break;\n                        arg_8h = arg_8h + 1;\n                    }\n                    iVar4 = fcn.00428d9b(piVar5, L\"#comments-end\", 0xd);\n                } while (((iVar4 != 0) && (iVar4 = fcn.00428d9b(piVar5, 0x49d194, 3),  iVar4 != 0)) ||\n                        (arg_8h = arg_8h + -1,  0 < arg_8h));\n            }\n            goto code_r0x0040912d;\n        }\n        cVar3 = fcn.00469963(arg_8h + 8, var_8h);\n        if (cVar3 != '\\x01') {\n            arg_10h_00 = L\"Cannot parse #include\";\n            goto code_r0x00445e67;\n        }\n        fcn.0040b606(uVar6);\n        fcn.0040b606(uVar6);\n        uVar6 = extraout_ECX;\n        arg_ch_00 = fcn.00405489(&var_2ch);\n        cVar3 = fcn.0040ad7c(&var_1ch, arg_ch_00, uVar6, arg_ch, arg_8h);\n        fcn.0040b1ff();\n        fcn.0040b1ff();\n        if (cVar3 != '\\0') {\n            in_stack_ffffffa8 = 1;\n            goto code_r0x0040912d;\n        }\ncode_r0x00445e76:\n        in_stack_ffffffa8 = 0;\n    }\ncode_r0x0040912d:\n    *var_ch = *var_ch + -1;\n    if (*var_ch == 0) {\n        uVar6 = 4;\n        piVar8 = var_ch;\n        fcn.0041fd4d(var_ch);\n        fcn.0041fd94(var_8h, piVar8, uVar6);\n    }\n    return in_stack_ffffffa8;\n}\n",
        "token_count": 1829
    },
    "004092a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004092a0(uint arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    double dVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t *puVar6;\n    uint *puVar7;\n    uint32_t *in_ECX;\n    int32_t iVar8;\n    uint16_t in_FPUControlWord;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint var_64h;\n    uint var_54h;\n    uint32_t var_44h;\n    int32_t var_40h;\n    uint32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    int32_t *var_28h;\n    int32_t var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint32_t *var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_5h;\n    \n    if ((in_ECX[2] == 0) || (var_5h._0_1_ = *(*in_ECX + 4) == 0,  var_5h)) {\n        var_1ch = 0;\n    }\n    else {\n        arg_8h_01 = 0;\n        var_1ch = 0;\n        var_18h = in_ECX;\n        fcn.0040ad22(0, 0xffffffff);\n        if (arg_ch == 0) {\n            var_5h._0_1_ = '\\x01';\n        }\n        fcn.0040c25d();\n        fcn.0040c25d();\n        var_10h = 0;\n        var_14h = var_28h;\n        while (((((uVar4 = var_10h,  var_ch = var_10h,  var_5h != '\\0' || (arg_ch != 0)) && (in_ECX[2] != 0)) &&\n                ((*(in_ECX + 1) != '\\0' && (var_10h != 0xffffffff)))) && (var_10h <= in_ECX[4]))) {\n            uVar3 = fcn.004099d0(**in_ECX, in_ECX[4], var_10h, in_ECX[10] | in_ECX[8], in_ECX[5], in_ECX[6]);\n            in_ECX[7] = uVar3;\n            if (uVar3 < 1) {\n                if ((uVar3 != 0xffffffff) || (in_ECX[8] == 0)) break;\n                var_10h = var_10h + 1;\n                in_ECX[8] = 0;\n                uVar3 = fcn.0046905e(&var_10h, 1);\n            }\n            else {\n                puVar6 = in_ECX[5];\n                var_10h = puVar6[1];\n                in_ECX[8] = 0;\n                uVar1 = *puVar6;\n                _var_24h = _var_24h & 0xffffffff | uVar1 << 0x20;\n                if (uVar1 == puVar6[1]) {\n                    if (uVar1 == in_ECX[4]) {\n                        var_10h = in_ECX[4] + 1;\n                    }\n                    else {\n                        in_ECX[8] = 0x10000010;\n                    }\n                }\n            }\n            uVar1 = var_ch;\n            if (uVar3 == 0) break;\n            _var_24h = _var_24h & 0xffffffff | *in_ECX << 0x20;\n            iVar8 = *in_ECX[5] - var_ch;\n            if ((iVar8 == 0) || (uVar4 = *(*in_ECX + 4),  uVar4 <= var_ch)) {\n                fcn.0040ad22(0, 0xffffffff);\n                var_14h = var_28h;\n                iVar8 = var_30h;\n            }\n            else {\n                if ((iVar8 == -1) || (uVar4 < *in_ECX[5])) {\n                    iVar8 = uVar4 - var_ch;\n                }\n                if (*var_14h < 2) {\n                    if (var_2ch < iVar8 + 1U) {\n                        if (iVar8 == -1) {\n                            var_2ch = 8;\n                        }\n                        else {\n                            var_2ch = iVar8 + 8U & 0xfffffff8;\n                        }\n                        var_ch = var_2ch;\n                        fcn.0041fd94(var_34h);\n                        var_34h = fcn.0041fd8b(-(var_ch * 2 >> 0x20 != 0) | var_ch * 2);\n                        *(var_34h + iVar8 * 2) = 0;\n                    }\n                }\n                else {\n                    *var_14h = *var_14h + -1;\n                    var_28h = fcn.0041fd5b(4, arg_8h_01);\n                    *var_28h = 1;\n                    if (iVar8 == -1) {\n                        var_2ch = 8;\n                    }\n                    else {\n                        var_2ch = iVar8 + 8U & 0xfffffff8;\n                    }\n                    var_14h = var_28h;\n                    var_34h = fcn.0041fd8b(-(var_2ch * 2 >> 0x20 != 0) | var_2ch * 2);\n                }\n                var_30h = iVar8;\n                fcn.00420db0(var_34h, *var_20h + uVar1 * 2, iVar8 * 2);\n                *(iVar8 * 2 + var_34h) = 0;\n                in_ECX = var_18h;\n            }\n            if (arg_10h == &var_34h) {\n                puVar6 = fcn.004609c0(&var_54h, arg_10h);\n                if (arg_10h != puVar6) {\n                    fcn.0040c1c3(puVar6);\n                }\n                fcn.0040b1ff();\n            }\n            else if (iVar8 != 0) {\n                iVar5 = *arg_10h[3];\n                if (iVar5 < 2) {\n                    uVar4 = arg_10h[1] + 1 + iVar8;\n                    if (arg_10h[2] < uVar4) {\n                        if (uVar4 < 0x41c2) {\n                            var_24h = uVar4 * 2;\n                        }\n                        else {\n                            dVar2 = uVar4;\n                            if (uVar4 < 0) {\n                                dVar2 = dVar2 + *0x4c81d0;\n                            }\n                            if (uVar4 < 0x2000000) {\n                                var_ch = var_ch & 0xffff | in_FPUControlWord << 0x10;\n                                _var_24h = ROUND(dVar2 * *0x4c3418);\n                            }\n                            else if (uVar4 < 0x8000000) {\n                                var_ch = var_ch & 0xffff | in_FPUControlWord << 0x10;\n                                _var_24h = ROUND(dVar2 * *0x4c3410);\n                            }\n                            else {\n                                var_ch = var_ch & 0xffff | in_FPUControlWord << 0x10;\n                                _var_24h = ROUND(dVar2 * *0x4c3408);\n                            }\n                        }\n                        if (var_24h == 0) {\n                            uVar4 = 8;\n                        }\n                        else {\n                            uVar4 = var_24h + 7U & 0xfffffff8;\n                        }\n                        arg_10h[2] = uVar4;\n                        var_20h = fcn.0041fd8b(-(uVar4 * 2 >> 0x20 != 0) | uVar4 * 2);\n                        _var_24h = _var_24h & 0xffffffff | ZEXT48(var_20h) << 0x20;\n                        if (*arg_10h != 0) {\n                            fcn.00420db0(var_20h, *arg_10h, arg_10h[1] * 2 + 2);\n                            fcn.0041fd94(*arg_10h);\n                        }\n                        *arg_10h = var_20h;\n                    }\n                }\n                else {\n                    *arg_10h[3] = iVar5 + -1;\n                    puVar7 = fcn.0041fd5b(4, arg_8h_01);\n                    *puVar7 = 1;\n                    arg_10h[3] = puVar7;\n                    iVar5 = arg_10h[1] + 1 + iVar8;\n                    if (iVar5 == 0) {\n                        uVar4 = 8;\n                    }\n                    else {\n                        uVar4 = iVar5 + 7U & 0xfffffff8;\n                    }\n                    arg_10h[2] = uVar4;\n                    uVar4 = fcn.0041fd8b(-(uVar4 * 2 >> 0x20 != 0) | uVar4 * 2);\n                    fcn.00420db0(uVar4, *arg_10h, arg_10h[1] * 2 + 2);\n                    *arg_10h = uVar4;\n                    in_ECX = var_18h;\n                }\n                fcn.00420db0(*arg_10h + arg_10h[1] * 2, var_34h, iVar8 * 2);\n                arg_10h[1] = arg_10h[1] + iVar8;\n                *(*arg_10h + arg_10h[1] * 2) = 0;\n            }\n            arg_8h_00 = arg_8h;\n            iVar5 = fcn.0040ab30(arg_8h, &var_44h);\n            iVar8 = var_40h;\n            var_1ch = var_1ch + iVar5;\n            if (arg_10h == &var_44h) {\n                puVar6 = fcn.004609c0(&var_64h, arg_10h);\n                if (arg_10h != puVar6) {\n                    fcn.0040c1c3(puVar6);\n                }\n                fcn.0040b1ff();\n            }\n            else if (var_40h != 0) {\n                iVar5 = *arg_10h[3];\n                if (iVar5 < 2) {\n                    uVar4 = arg_10h[1] + 1 + var_40h;\n                    if (arg_10h[2] < uVar4) {\n                        if (uVar4 < 0x41c2) {\n                            var_24h = uVar4 * 2;\n                        }\n                        else {\n                            dVar2 = uVar4;\n                            if (uVar4 < 0) {\n                                dVar2 = dVar2 + *0x4c81d0;\n                            }\n                            if (uVar4 < 0x2000000) {\n                                var_ch = var_ch & 0xffff | in_FPUControlWord << 0x10;\n                                _var_24h = ROUND(dVar2 * *0x4c3418);\n                            }\n                            else if (uVar4 < 0x8000000) {\n                                var_ch = var_ch & 0xffff | in_FPUControlWord << 0x10;\n                                _var_24h = ROUND(dVar2 * *0x4c3410);\n                            }\n                            else {\n                                var_ch = var_ch & 0xffff | in_FPUControlWord << 0x10;\n                                _var_24h = ROUND(dVar2 * *0x4c3408);\n                            }\n                        }\n                        if (var_24h == 0) {\n                            uVar4 = 8;\n                        }\n                        else {\n                            uVar4 = var_24h + 7U & 0xfffffff8;\n                        }\n                        arg_10h[2] = uVar4;\n                        var_20h = fcn.0041fd8b(-(uVar4 * 2 >> 0x20 != 0) | uVar4 * 2);\n                        _var_24h = _var_24h & 0xffffffff | ZEXT48(var_20h) << 0x20;\n                        if (*arg_10h != 0) {\n                            fcn.00420db0(var_20h, *arg_10h, arg_10h[1] * 2 + 2);\n                            fcn.0041fd94(*arg_10h);\n                        }\n                        *arg_10h = var_20h;\n                    }\n                }\n                else {\n                    *arg_10h[3] = iVar5 + -1;\n                    puVar7 = fcn.0041fd5b(4, arg_8h_00);\n                    *puVar7 = 1;\n                    arg_10h[3] = puVar7;\n                    iVar5 = arg_10h[1] + 1 + iVar8;\n                    if (iVar5 == 0) {\n                        uVar4 = 8;\n                    }\n                    else {\n                        uVar4 = iVar5 + 7U & 0xfffffff8;\n                    }\n                    arg_10h[2] = uVar4;\n                    uVar4 = fcn.0041fd8b(-(uVar4 * 2 >> 0x20 != 0) | uVar4 * 2);\n                    fcn.00420db0(uVar4, *arg_10h, arg_10h[1] * 2 + 2);\n                    *arg_10h = uVar4;\n                    in_ECX = var_18h;\n                }\n                fcn.00420db0(*arg_10h + arg_10h[1] * 2, var_44h, iVar8 * 2);\n                arg_10h[1] = arg_10h[1] + iVar8;\n                *(*arg_10h + arg_10h[1] * 2) = 0;\n            }\n            arg_ch = arg_ch + -1;\n        }\n        fcn.004086ac(*in_ECX, uVar4, in_ECX[4] - uVar4);\n        fcn.00407cf8(&var_34h);\n        fcn.0040b1ff();\n        fcn.0040b1ff();\n    }\n    return var_1ch;\n}\n",
        "token_count": 3334
    },
    "004095c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004095c0(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    int32_t *unaff_EBX;\n    int32_t *piVar8;\n    int32_t *unaff_ESI;\n    int32_t iVar9;\n    int32_t *piVar10;\n    int32_t *piVar11;\n    uint32_t arg_8h_00;\n    uchar *in_stack_ffffff40;\n    int32_t in_stack_ffffff44;\n    uint in_stack_ffffff48;\n    int32_t iVar12;\n    int32_t *piVar13;\n    int32_t *piStack156;\n    int32_t *piStack152;\n    int32_t *piStack148;\n    int32_t *piStack144;\n    int32_t *piStack140;\n    int32_t *piStack136;\n    int32_t *piStack132;\n    int32_t *piStack128;\n    int32_t **ppiStack124;\n    int32_t *piStack120;\n    int32_t iStack116;\n    int32_t iStack108;\n    uint uStack104;\n    uint uStack100;\n    int32_t *piStack96;\n    uint32_t uStack92;\n    uint32_t uStack84;\n    int32_t iStack80;\n    int32_t *piStack76;\n    uchar auStack64 [8];\n    uint uStack56;\n    uint uStack52;\n    int32_t *piStack48;\n    int32_t iStack44;\n    uchar auStack40 [4];\n    int32_t *piStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    fcn.00408157();\n    iVar12 = **(arg_8h + 4);\n    fcn.00408e90();\n    iVar12 = *(iVar12 + 8);\n    iVar9 = *(*(arg_8h + 4) + 4);\n    fcn.00408e90();\n    piVar10 = *(iVar9 + 8);\n    iVar9 = 0;\n    if ((2 < *(arg_8h + 8)) && ((iVar9 = fcn.0040ce67(),  iVar9 < 0 || (4 < iVar9)))) {\n        iVar9 = 0;\n    }\n    iVar5 = 1;\n    if (3 < *(arg_8h + 8)) {\n        iVar5 = fcn.0040ce67();\n    }\n    if (iVar5 < 1) {\n        iVar5 = 1;\n    }\n    piStack156 = iVar5 + -1;\n    piVar13 = piVar10;\n    piVar2 = fcn.0040817f(piVar10);\n    if (piVar2 != NULL) {\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        iVar12 = *(*piStack156 + 4);\n        iVar9 = *(iVar12 + 8 + piStack156);\n        if (*(piStack156 + iVar12 + 0xd) != '\\0') {\n            iVar9 = *(iVar9 + 0x38);\n        }\n        *(iVar9 + 0x14) = 2;\n        iVar9 = *(piStack156 + iVar12 + 8);\n        if (*(piStack156 + iVar12 + 0xd) != '\\0') {\n            iVar9 = *(iVar9 + 0x38);\n        }\n        *(iVar9 + 0x18) = 0;\n        fcn.00407cb4(piVar2 + 1, 0);\n        goto code_r0x00409993;\n    }\n    uStack92 = *(iVar12 + 4);\n    uStack104 = CONCAT31(uStack104._1_3_, 1);\n    iStack108 = iVar12;\n    if (iVar9 == 0) {\n        iVar12 = fcn.0046905e(&stack0xffffff5c, 0);\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = iVar12 != 0;\n        goto code_r0x00409993;\n    }\n    iVar12 = 0x409687;\n    fcn.0040c25d();\n    if (iVar9 == 1) {\n        uVar6 = fcn.0046905e(&stack0xffffff5c, 0);\n        if (uVar6 == 0) {\n            fcn.0040e8a0();\n            arg_ch[3] = 1;\n            *arg_ch = 0;\n            iVar9 = *(*unaff_ESI + 4) + unaff_ESI;\n            cVar1 = *(iVar9 + 0xd);\n            iVar12 = *(iVar9 + 8);\n            goto joined_r0x0044633f;\n        }\n        uVar7 = fcn.00407d93();\n        fcn.004083e0(uVar7, 1);\n        for (arg_8h_00 = 1 < uVar6; arg_8h_00 < uVar6; arg_8h_00 = arg_8h_00 + 1) {\n            fcn.00468fa4(arg_8h_00, &stack0xffffff80);\n            fcn.0040890f(&stack0xffffff78);\n            fcn.00408a30(uVar7, &stack0xffffffc0, 1);\n            fcn.0040e8a0();\n        }\ncode_r0x0044646f:\n        fcn.00407cb4(piVar13 + 1, 0);\n    }\n    else if (iVar9 == 2) {\n        iVar12 = fcn.0046905e(&stack0xffffff5c, 0);\n        if (iVar12 != 0) {\n            uVar7 = fcn.00407d93();\n            fcn.004083e0(uVar7, 1);\n            iVar9 = 0;\n            if (0 < iVar12) {\n                do {\n                    fcn.00468fa4(iVar9, &stack0xffffff74);\n                    fcn.0040890f(&stack0xffffff6c);\n                    fcn.00408a30(uVar7, &stack0xffffffb4, 1);\n                    fcn.0040e8a0();\n                    iVar9 = iVar9 + 1;\n                } while (iVar9 < iVar12);\n            }\n            goto code_r0x0044646f;\n        }\n        iVar9 = *(*unaff_ESI + 4) + unaff_ESI;\n        cVar1 = *(iVar9 + 0xd);\n        iVar12 = *(iVar9 + 8);\njoined_r0x0044633f:\n        if (cVar1 != '\\0') {\n            iVar12 = *(iVar12 + 0x38);\n        }\n        *(iVar12 + 0x14) = 1;\n        iVar12 = *(iVar9 + 8);\n        if (*(iVar9 + 0xd) != '\\0') {\n            iVar12 = *(iVar12 + 0x38);\n        }\n        *(iVar12 + 0x18) = 0;\n    }\n    else {\n        if (iVar9 == 3) {\n            piStack152 = 0x49d0fc;\n            iStack116 = 0;\n            piStack140 = NULL;\n            piStack136 = piStack120;\n            iVar5 = iStack108;\n            iVar9 = iVar12;\n            piStack148 = piVar2;\n            piStack144 = piVar2;\n            while ((((iStack116 != 0 && (piStack120 != '\\0')) && (iVar12 != -1)) && (iVar12 <= iVar5))) {\n                piVar2 = fcn.004099d0(*ppiStack124, iVar5, iVar12, uStack92 | uStack84, uStack104, uStack100);\n                piStack96 = piVar2;\n                if (piVar2 < 1) {\n                    if ((uStack92 == 0) || (piVar2 != 0xffffffff)) break;\n                    iVar9 = iVar9 + 1;\n                    in_stack_ffffff40 = &stack0xffffff4c;\n                    uStack92 = 0;\n                    iVar12 = in_stack_ffffff44;\n                    piStack76 = fcn.0046905e(in_stack_ffffff40, 1);\n                    piVar2 = uStack104;\n                    iVar5 = iStack116;\n                    in_stack_ffffff44 = iVar12;\n                }\n                else {\n                    iVar12 = uStack104[1];\n                    uStack92 = 0;\n                    piStack76 = piVar2;\n                    iVar5 = iStack108;\n                    iVar9 = iVar12;\n                    if (*uStack104 == uStack104[1]) {\n                        if (*uStack104 == iStack108) {\n                            iVar12 = iStack108 + 1;\n                            iVar9 = iVar12;\n                        }\n                        else {\n                            uStack92 = 0x10000010;\n                        }\n                    }\n                }\n                if (piStack76 == NULL) break;\n                piVar8 = 1 < piStack76;\n                if (piVar8 < piStack76) {\n                    iStack80 = piVar8 * 8;\n                    iVar12 = iVar9;\n                    do {\n                        piVar11 = piStack156;\n                        if (piVar8 < piVar2) {\n                            piStack128 = *ppiStack124;\n                            if (piVar8 < 0) {\n                                piVar2 = 0xfffffff9;\n                                piVar3 = piVar10;\ncode_r0x004097f7:\n                                if (piVar3 == NULL) goto code_r0x0044651a;\n                                if (*piStack152 < 2) {\n                                    fcn.004088bb(piVar2);\n                                    piStack156 = piStack140;\n                                    piVar11 = piStack152;\n                                }\n                                else {\n                                    *piStack152 = *piStack152 + -1;\n                                    piStack152 = fcn.0041fd5b(4, in_stack_ffffff40);\n                                    *piStack152 = 1;\n                                    if (piVar2 == 0xffffffff) {\n                                        piStack140 = 0x8;\n                                    }\n                                    else {\n                                        piStack140 = piVar2 + 2 & 0xfffffff8;\n                                    }\n                                    piStack136 = piStack152;\n                                    piStack148 = fcn.0041fd8b(-(ZEXT48(piStack140) * 2 >> 0x20 != 0) |\n                                                              ZEXT48(piStack140) * 2);\n                                    piVar11 = piStack148;\n                                }\n                                piStack144 = piVar2;\n                                fcn.00420db0(piVar11, piVar3, piVar2 * 2);\n                                *(piVar11 + piVar2 * 2) = 0;\n                                piVar2 = piStack152;\n                            }\n                            else {\n                                piStack36 = uStack104 + iStack80;\n                                piVar2 = piStack36[1] - *piStack36;\n                                piVar3 = fcn.0042e99c(piVar2 * 2 + 2);\n                                if (piVar3 == NULL) {\n                                    piVar2 = 0xfffffffa;\n                                    piVar3 = piVar10;\n                                    goto code_r0x004097f7;\n                                }\n                                fcn.00420db0(piVar3, piStack128 + *piStack36 * 2, piVar2 * 2);\n                                *(piVar3 + piVar2 * 2) = 0;\n                                if ((piVar2 != NULL) && (piVar2 != 0xffffffff)) goto code_r0x004097f7;\ncode_r0x0044651a:\n                                fcn.0040ad22(0, 0xffffffff);\n                                piVar2 = piStack144;\n                                unaff_EBX = piStack144;\n                            }\n                            fcn.0042490e(in_stack_ffffff48);\n                            piVar10 = piVar3;\n                            piVar3 = unaff_ESI;\n                        }\n                        else {\n                            fcn.0040ad22(0, 0xffffffff);\n                            piVar2 = piStack144;\n                            piVar3 = unaff_ESI;\n                            unaff_EBX = piStack144;\n                        }\n                        unaff_ESI = piVar3;\n                        if (unaff_EBX == piStack132) {\n                            piStack132 = piStack132 * 2;\n                            if (piStack132 < 0x8) {\n                                piStack132 = 0x8;\n                            }\n                            piStack156 = piStack132;\n                            piStack128 = fcn.0041fd8b(-(ZEXT48(piStack132) * 4 >> 0x20 != 0) | ZEXT48(piStack132) * 4);\n                            unaff_ESI = piStack128;\n                            if ((piVar3 != NULL) && (unaff_EBX != NULL)) {\n                                fcn.00420db0(piStack128, piVar3, unaff_EBX * 4);\n                                fcn.0041fd94(piVar3);\n                                unaff_ESI = piStack128;\n                            }\n                        }\n                        ppiVar4 = fcn.0041fd5b(0x10, in_stack_ffffff40);\n                        piVar8 = piVar8 + 1;\n                        ppiVar4[1] = piStack144;\n                        ppiVar4[2] = piStack140;\n                        *ppiVar4 = piVar11;\n                        ppiVar4[3] = piVar2;\n                        *piVar2 = *piVar2 + 1;\n                        unaff_ESI[unaff_EBX] = ppiVar4;\n                        unaff_EBX = unaff_EBX + 1;\n                        iStack80 = iStack80 + 8;\n                        piVar2 = piStack96;\n                        iVar5 = iStack108;\n                        iVar9 = iVar12;\n                    } while (piVar8 < piStack76);\n                }\n            }\n            if (unaff_EBX == NULL) {\n                iVar12 = *(*piVar13 + 4);\n                iVar9 = *(piVar13 + iVar12 + 8);\n                if (*(piVar13 + iVar12 + 0xd) != '\\0') {\n                    iVar9 = *(iVar9 + 0x38);\n                }\n                *(iVar9 + 0x14) = 1;\n                iVar9 = *(piVar13 + iVar12 + 8);\n                if (*(piVar13 + iVar12 + 0xd) != '\\0') {\n                    iVar9 = *(iVar9 + 0x38);\n                }\n                *(iVar9 + 0x18) = 0;\n            }\n            else {\n                fcn.00408950(&stack0xffffff58);\n            }\n            fcn.00408320();\n        }\n        else {\n            if (iVar9 != 4) goto code_r0x0040998a;\n            piStack36 = 0x49d0fc;\n            uStack32 = 0;\n            uStack28 = 0;\n            uStack24 = 0;\n            piStack148 = NULL;\n            piStack144 = NULL;\n            piStack140 = NULL;\n            uStack56 = 0;\n            piStack48 = NULL;\n            iStack44 = 1;\n            while (iVar12 = fcn.00468ff1(&stack0xffffff58, &stack0xffffffd8, 1),  iVar12 != 0) {\n                if (iStack44 != 0) {\n                    fcn.00408950(&stack0xffffffcc);\n                    fcn.00466fef(&stack0xffffffb4);\n                }\n            }\n            if (unaff_EBX == NULL) {\n                iVar12 = *(*piVar13 + 4);\n                iVar9 = *(piVar13 + iVar12 + 8);\n                if (*(piVar13 + iVar12 + 0xd) != '\\0') {\n                    iVar9 = *(iVar9 + 0x38);\n                }\n                *(iVar9 + 0x14) = 1;\n                iVar9 = *(piVar13 + iVar12 + 8);\n                if (*(piVar13 + iVar12 + 0xd) != '\\0') {\n                    iVar9 = *(iVar9 + 0x38);\n                }\n                *(iVar9 + 0x18) = 0;\n            }\n            else {\n                uVar7 = fcn.00407d93();\n                fcn.004083e0(uVar7, 1);\n                piVar10 = NULL;\n                if (unaff_EBX != NULL) {\n                    do {\n                        fcn.00408a30(uVar7, unaff_ESI[piVar10], 1);\n                        piVar10 = piVar10 + 1;\n                    } while (piVar10 < unaff_EBX);\n                }\n            }\n            fcn.0040e8a0();\n            fcn.00466f23();\n            fcn.0041fd94(unaff_ESI);\n            uStack52 = 0x49d0fc;\n            fcn.00408320();\n            unaff_ESI = piStack48;\n        }\n        fcn.0041fd94(unaff_ESI);\n    }\ncode_r0x0040998a:\n    fcn.0040b1ff();\ncode_r0x00409993:\n    fcn.004082a1();\n    return 0;\n}\n",
        "token_count": 3877
    },
    "004099d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.004099d0(uint16_t *arg_8h, int32_t arg_ch, uint16_t *arg_10h, uint32_t arg_14h, int32_t *arg_18h, int32_t arg_1ch)\n\n{\n    bool bVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint16_t *puVar6;\n    uint16_t *puVar7;\n    int32_t iVar8;\n    int32_t *in_ECX;\n    uint32_t uVar9;\n    int32_t *piVar10;\n    int32_t iVar11;\n    uint32_t *in_EDX;\n    int32_t *piVar12;\n    uint16_t uVar13;\n    uint32_t uVar14;\n    uint16_t *puVar15;\n    uint var_11ch;\n    uint16_t *var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint32_t var_104h;\n    uint32_t var_100h;\n    int32_t *var_fch;\n    int32_t var_f8h;\n    int32_t var_f4h;\n    int32_t var_f0h;\n    int32_t var_ech;\n    uint32_t var_e8h;\n    uint32_t var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    int32_t var_d8h;\n    uint32_t var_d4h;\n    uint32_t var_cch;\n    int32_t var_c8h;\n    int32_t var_c4h;\n    uint32_t var_c0h;\n    uint32_t var_bch;\n    uint32_t var_b8h;\n    uint32_t var_b4h;\n    uint32_t var_b0h;\n    uint32_t var_ach;\n    uint32_t var_a8h;\n    uint32_t var_a4h;\n    int32_t var_a0h;\n    uint32_t var_9ch;\n    uint32_t var_98h;\n    int32_t var_94h;\n    uint16_t *var_90h;\n    uint16_t *var_8ch;\n    uint16_t *var_88h;\n    int32_t var_84h;\n    uint16_t *var_80h;\n    uint32_t var_7ch;\n    int32_t var_78h;\n    uint32_t var_74h;\n    int32_t var_70h;\n    uint var_6ch;\n    uint var_60h;\n    uint32_t var_5ch;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_48h;\n    uint16_t *var_44h;\n    uint32_t var_40h;\n    int32_t var_3ch;\n    uint32_t var_38h;\n    int32_t var_34h;\n    uint32_t var_30h;\n    int32_t var_2ch;\n    uint16_t *var_28h;\n    uint32_t var_24h;\n    uint32_t *var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint16_t *var_4h;\n    \n    iVar11 = arg_10h;\n    var_48h = 0;\n    puVar2 = arg_8h + arg_10h;\n    var_28h = puVar2 + -1;\n    var_3ch = 0;\n    bVar1 = false;\n    var_14h = 0;\n    var_10h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_34h = 0;\n    var_44h = NULL;\n    var_118h = NULL;\n    if ((((in_ECX == NULL) && (in_EDX == NULL)) && (arg_8h == NULL)) && ((arg_ch == -999 && (arg_10h == 0xfffffc19)))) {\n        iVar11 = fcn.0040a180(0, 0, 0, 0, 0);\n        return iVar11;\n    }\n    if ((arg_14h & 0xe20f5a6f) != 0) {\n        return -3;\n    }\n    if (((in_ECX == NULL) || (arg_8h == NULL)) || ((arg_18h == NULL && (0 < arg_1ch)))) {\n        return -2;\n    }\n    if (arg_1ch < 0) {\n        return -0xf;\n    }\n    if (arg_ch < 0) {\n        return -0x20;\n    }\n    if ((arg_10h < 0) || (arg_ch < arg_10h)) {\n        return -0x18;\n    }\n    if (*in_ECX != 0x50435245) {\n        return (-(*in_ECX != 0x45524350) & 0x19) - 0x1d;\n    }\n    if ((*(in_ECX + 3) & 2) == 0) {\n        return -0x1c;\n    }\n    uVar9 = in_ECX[2];\n    var_b8h = (uVar9 & 0x800) != 0;\n    if ((arg_14h & 0x8000000) == 0) {\n        if ((arg_14h & 0x8000) == 0) {\n            uVar14 = 0;\n        }\n        else {\n            uVar14 = 1;\n        }\n    }\n    else {\n        uVar14 = 2;\n    }\n    var_7ch = uVar14;\n    var_20h = in_EDX;\n    var_8h = var_b8h;\n    if ((var_b8h != 0) && ((arg_14h & 0x2000) == 0)) {\n        iVar8 = fcn.0049b8f7(&var_2ch);\n        if (iVar8 != 0) {\n            if (1 < arg_1ch) {\n                *arg_18h = var_2ch;\n                arg_18h[1] = iVar8;\n            }\n            if ((iVar8 < 2) && (1 < uVar14)) {\n                return -0x19;\n            }\n            return -10;\n        }\n        if (((0 < arg_10h) && (arg_10h < arg_ch)) && ((*puVar2 & 0xfc00) == 0xdc00)) {\n            return -0xb;\n        }\n        uVar9 = in_ECX[2];\n    }\n    var_e4h = *(in_ECX + 9);\n    var_104h = 10000000;\n    var_d8h = in_ECX + *(in_ECX + 0x22) * 2;\n    var_100h = 10000000;\n    var_e8h = *(in_ECX + 0x26);\n    var_38h = 0;\n    var_5ch = 0;\n    var_24h = in_ECX[0xc];\n    if (var_20h != NULL) {\n        uVar14 = *var_20h;\n        if ((uVar14 & 1) != 0) {\n            var_38h = var_20h[1];\n        }\n        if ((uVar14 & 2) != 0) {\n            var_104h = var_20h[2];\n        }\n        if ((uVar14 & 0x10) != 0) {\n            var_100h = var_20h[5];\n        }\n        if ((uVar14 & 4) != 0) {\n            var_5ch = var_20h[3];\n        }\n        uVar9 = in_ECX[2];\n        if ((uVar14 & 8) != 0) {\n            var_24h = var_20h[4];\n        }\n    }\n    if (((in_ECX[3] & 0x2000U) != 0) && (in_ECX[4] < var_104h)) {\n        var_104h = in_ECX[4];\n    }\n    if (((in_ECX[3] & 0x4000U) != 0) && (in_ECX[5] < var_100h)) {\n        var_100h = in_ECX[5];\n    }\n    var_cch = var_24h;\n    if (var_24h == 0) {\n        var_cch = 0x4b0bd0;\n    }\n    var_24h = ((uVar9 | arg_14h) & 0x10) != 0;\n    var_30h = (in_ECX[3] & 0x100U) != 0;\n    var_40h = (uVar9 & 0x40000) != 0;\n    var_70h = arg_10h;\n    var_94h = in_ECX + (var_e4h * *(in_ECX + 0x26) + *(in_ECX + 0x22)) * 2;\n    var_90h = arg_8h;\n    var_8ch = arg_8h + arg_ch;\n    var_ach = (uVar9 & 0x20) != 0;\n    var_b0h = (uVar9 & 0x20000000) != 0;\n    var_b4h = (uVar9 & 0x2000000) != 0;\n    var_dch = 0;\n    var_c0h = arg_14h < '\\0';\n    var_bch = (arg_14h & 0x100) != 0;\n    var_a8h = (arg_14h & 0x400) != 0;\n    var_a4h = (arg_14h & 0x10000000) != 0;\n    var_a0h = 0;\n    var_54h = 0;\n    var_58h = 0;\n    var_60h = 0;\n    var_98h = (in_ECX[3] & 0x1000U) != 0;\n    var_c8h = var_cch + 0x100;\n    var_c4h = var_cch + 0x340;\n    uVar14 = arg_14h & 0x1800000;\n    if (uVar14 == 0) {\n        if ((uVar9 & 0x1800000) == 0) {\ncode_r0x00409d1e:\n            var_9ch = 1;\n        }\n        else {\n            var_9ch = uVar9 >> 0x17 & 1;\n        }\n    }\n    else {\n        if (uVar14 == 0x800000) goto code_r0x00409d1e;\n        if (uVar14 != 0x1000000) {\n            return -0x17;\n        }\n        var_9ch = 0;\n    }\n    if ((arg_14h & 0x700000) != 0) {\n        uVar9 = arg_14h;\n    }\n    uVar9 = uVar9 & 0x700000;\n    if (uVar9 != 0) {\n        if (uVar9 < 0x300001) {\n            if (uVar9 == 0x300000) {\n                var_d4h = 0xa000d;\n                var_f0h = 0;\n                var_ech = 2;\n            }\n            else {\n                if (uVar9 == 0x100000) {\n                    uVar13 = 0xd;\n                }\n                else {\n                    if (uVar9 != 0x200000) {\n                        return -0x17;\n                    }\n                    uVar13 = 10;\n                }\n                var_d4h = var_d4h & 0xffff0000 | uVar13;\n                var_f0h = 0;\n                var_ech = 1;\n            }\n            goto code_r0x00409d4a;\n        }\n        if (uVar9 == 0x400000) {\n            var_f0h = 1;\n            goto code_r0x00409d4a;\n        }\n        if (uVar9 != 0x500000) {\n            return -0x17;\n        }\n    }\n    var_f0h = 2;\ncode_r0x00409d4a:\n    if ((var_7ch == 0) || ((in_ECX[3] & 0x200U) == 0)) {\n        var_ch = (arg_1ch / 3) * 3;\n        var_2ch = ((arg_1ch / 3) * 6) / 3;\n        uVar13 = *(in_ECX + 8);\n        var_fch = arg_18h;\n        var_4h = var_8ch;\n        if ((uVar13 != 0) && (var_ch / 3 <= uVar13)) {\n            iVar8 = uVar13 + 1;\n            var_ch = iVar8 * 3;\n            var_fch = fcn.0040ab22(iVar8 * 0xc);\n            if (var_fch == NULL) {\n                return -6;\n            }\n            var_48h = 1;\n        }\n        var_f8h = var_ch;\n        var_74h = 0;\n        var_f4h = (var_ch * 2) / 3;\n        if (var_fch != NULL) {\n            piVar12 = var_fch + (var_ch - *(in_ECX + 0x1e));\n            if (var_fch + (var_ch - *(in_ECX + 0x1e)) < var_fch + 2) {\n                piVar12 = var_fch + 2;\n            }\n            for (piVar10 = var_fch + var_ch + -1; piVar12 <= piVar10; piVar10 = piVar10 + -1) {\n                *piVar10 = -1;\n            }\n            if (0 < arg_1ch) {\n                *var_fch = -1;\n            }\n            if (1 < arg_1ch) {\n                var_fch[1] = -1;\n            }\n        }\n        if (var_24h == 0) {\n            if ((in_ECX[3] & 0x10U) == 0) {\n                if (((var_30h == 0) && (var_38h != 0)) && ((*(var_38h + 4) & 1) != 0)) {\n                    var_34h = var_38h + 8;\n                }\n            }\n            else {\n                uVar13 = *(in_ECX + 6);\n                var_14h = uVar13;\n                var_3ch = 1;\n                var_10h = var_14h;\n                if ((in_ECX[3] & 0x20U) != 0) {\n                    if (uVar13 < 0x100) {\n                        var_10h = *(var_14h + var_c8h);\n                    }\n                    if ((var_8h != 0) && (0x7f < uVar13)) {\n                        var_10h = *(*((*((uVar13 >> 7) + 0x4bff60) * 0x80 + (var_14h & 0x7f)) * 2 + 0x4b1c60) * 8 +\n                                   0x4af414) + uVar13;\n                    }\n                }\n            }\n        }\n        arg_10h = puVar2;\n        if ((in_ECX[3] & 0x40U) != 0) {\n            uVar13 = *(in_ECX + 0x1a);\n            var_1ch = uVar13;\n            bVar1 = true;\n            var_18h = var_1ch;\n            if (in_ECX[3] < '\\0') {\n                if (uVar13 < 0x100) {\n                    var_18h = *(var_c8h + var_1ch);\n                }\n                if ((var_8h != 0) && (0x7f < uVar13)) {\n                    var_18h = *(*((*((uVar13 >> 7) + 0x4bff60) * 0x80 + (var_1ch & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af414\n                               ) + uVar13;\n                }\n            }\n        }\ncode_r0x00409e60:\n        puVar7 = var_4h;\n        iVar8 = var_f0h;\n        puVar15 = var_4h;\n        if (var_40h != 0) {\n            if (var_8h == 0) {\n                iVar3 = var_ech;\n                puVar5 = var_8ch;\n                puVar15 = arg_10h;\n                if (arg_10h < var_8ch) {\n                    do {\n                        if (iVar8 == 0) {\n                            iVar8 = var_f0h;\n                            if (((puVar15 <= puVar5 + -iVar3) && (*puVar15 == var_d4h)) &&\n                               ((puVar7 = var_4h,  iVar3 == 1 || (puVar15[1] == var_d4h._2_2_)))) break;\n                        }\n                        else if ((puVar15 < puVar5) &&\n                                (iVar4 = fcn.00408665(puVar5, &var_ech, var_8h),  puVar7 = var_4h,  iVar8 = var_f0h, \n                                iVar3 = var_ech,  puVar5 = var_8ch,  iVar4 != 0)) break;\n                        puVar15 = puVar15 + 1;\n                        puVar7 = var_4h;\n                    } while (puVar15 < puVar5);\n                }\n            }\n            else {\n                iVar3 = var_ech;\n                puVar5 = var_8ch;\n                puVar6 = arg_10h;\n                puVar15 = arg_10h;\n                if (arg_10h < var_8ch) {\n                    do {\n                        puVar15 = puVar6;\n                        if (iVar8 == 0) {\n                            puVar7 = var_4h;\n                            iVar8 = var_f0h;\n                            if (((puVar6 <= puVar5 + -iVar3) && (*puVar6 == var_d4h)) &&\n                               ((iVar3 == 1 || (puVar6[1] == var_d4h._2_2_)))) break;\n                        }\n                        else if ((puVar6 < puVar5) &&\n                                (iVar4 = fcn.00408665(puVar5, &var_ech, var_8h),  puVar7 = var_4h,  iVar8 = var_f0h, \n                                iVar3 = var_ech,  puVar5 = var_8ch,  iVar4 != 0)) break;\n                        puVar15 = puVar6 + 1;\n                        if ((puVar15 < puVar7) && (var_ch = 0xdc00,  puVar7 = var_4h,  (*puVar15 & 0xfc00) == 0xdc00)) {\n                            puVar15 = puVar6 + 2;\n                        }\n                        puVar6 = puVar15;\n                    } while (puVar15 < puVar5);\n                }\n            }\n        }\n        uVar9 = (in_ECX[2] | arg_14h) & 0x4000000;\n        if (uVar9 == 0) {\n            if (var_3ch == 0) {\n                if (var_30h == 0) {\n                    if (var_34h != 0) {\n                        for (; arg_10h < puVar15; arg_10h = arg_10h + 1) {\n                            uVar14 = *arg_10h;\n                            if (0xff < uVar14) {\n                                uVar14 = 0xff;\n                            }\n                            puVar7 = var_4h;\n                            if ((*((uVar14 >> 3) + var_34h) & 1 << (uVar14 & 7)) != 0) break;\n                        }\n                    }\n                }\n                else {\n                    puVar7 = var_4h;\n                    if (var_90h + iVar11 < arg_10h) {\n                        puVar7 = arg_10h;\n                        if (arg_10h < puVar15) {\n                            puVar5 = var_90h;\n                            iVar3 = var_ech;\n                            if (var_8h == 0) {\n                                do {\n                                    puVar7 = arg_10h;\n                                    if (iVar8 == 0) {\n                                        puVar6 = var_90h;\n                                        iVar4 = var_ech;\n                                        if (puVar5 + iVar3 <= arg_10h) {\n                                            iVar8 = var_f0h;\n                                            if ((arg_10h[-iVar3] == var_d4h) &&\n                                               ((var_ech == 1 || ((arg_10h + -iVar3)[1] == var_d4h._2_2_)))) break;\n                                        }\n                                    }\n                                    else {\n                                        puVar6 = puVar5;\n                                        iVar4 = iVar3;\n                                        if ((puVar5 < arg_10h) &&\n                                           (iVar3 = fcn.0049b974(puVar5, &var_ech, var_8h),  puVar6 = var_90h, \n                                           iVar8 = var_f0h,  iVar4 = var_ech,  iVar3 != 0)) break;\n                                    }\n                                    arg_10h = arg_10h + 1;\n                                    puVar5 = puVar6;\n                                    iVar3 = iVar4;\n                                    puVar7 = arg_10h;\n                                } while (arg_10h < puVar15);\n                            }\n                            else {\n                                do {\n                                    puVar7 = arg_10h;\n                                    if (iVar8 == 0) {\n                                        iVar4 = var_ech;\n                                        if (var_90h + iVar3 <= arg_10h) {\n                                            iVar8 = var_f0h;\n                                            if ((arg_10h[-iVar3] == var_d4h) &&\n                                               ((var_ech == 1 || ((arg_10h + -iVar3)[1] == var_d4h._2_2_)))) break;\n                                        }\n                                    }\n                                    else {\n                                        iVar4 = iVar3;\n                                        if ((var_90h < arg_10h) &&\n                                           (iVar3 = fcn.0049b974(var_90h, &var_ech, var_8h),  iVar8 = var_f0h, \n                                           iVar4 = var_ech,  iVar3 != 0)) break;\n                                    }\n                                    puVar7 = arg_10h + 1;\n                                    if (puVar15 <= puVar7) break;\n                                    var_ch = 0xdc00;\n                                    if ((*puVar7 & 0xfc00) == 0xdc00) {\n                                        puVar7 = arg_10h + 2;\n                                    }\n                                    iVar3 = iVar4;\n                                    arg_10h = puVar7;\n                                } while (puVar7 < puVar15);\n                            }\n                        }\n                        arg_10h = puVar7;\n                        puVar7 = var_4h;\n                        if ((arg_10h[-1] == 0xd) &&\n                           ((((iVar8 == 1 || (iVar8 == 2)) && (arg_10h < puVar15)) && (*arg_10h == 10)))) {\n                            arg_10h = arg_10h + 1;\n                        }\n                    }\n                }\n            }\n            else if (arg_10h < puVar15) {\n                uVar13 = var_14h;\n                if (uVar13 == var_10h) {\n                    do {\n                        puVar7 = var_4h;\n                        if (*arg_10h == uVar13) break;\n                        arg_10h = arg_10h + 1;\n                    } while (arg_10h < puVar15);\n                }\n                else {\n                    do {\n                        puVar7 = var_4h;\n                        if ((*arg_10h == uVar13) || (*arg_10h == var_10h)) break;\n                        arg_10h = arg_10h + 1;\n                    } while (arg_10h < puVar15);\n                }\n            }\n        }\n        puVar15 = var_4h;\n        if ((uVar9 != 0) || (var_7ch != 0)) {\ncode_r0x00409ed7:\n            var_108h = 0;\n            var_6ch = 0;\n            var_78h = 0;\n            var_e0h = 0;\n            var_88h = arg_10h;\n            var_80h = arg_10h;\n            iVar3 = fcn.0040a180(arg_10h, 2, &var_108h, 0, 0);\n            iVar8 = var_2ch;\n            if ((var_a0h != 0) && (var_44h == NULL)) {\n                var_44h = var_80h;\n                var_118h = arg_10h;\n            }\n            if (0 < iVar3) {\ncode_r0x00409f3b:\n                if ((iVar3 == 1) || (iVar3 == -999)) {\n                    if (var_48h != 0) {\n                        if (3 < var_2ch) {\n                            fcn.00420db0(arg_18h + 2, var_fch + 2, var_2ch * 4 + -8);\n                        }\n                        if (iVar8 < var_78h) {\n                            var_74h = var_74h | 0x10000;\n                        }\n                        fcn.0040ab2b(var_fch);\n                    }\n                    if (((var_74h & 0x10000) == 0) || (var_78h < iVar8)) {\n                        iVar11 = var_78h / 2;\n                    }\n                    else {\n                        iVar11 = 0;\n                    }\n                    if ((var_78h / 2 <= *(in_ECX + 0x1e)) && (arg_18h != NULL)) {\n                        iVar8 = *(in_ECX + 0x1e) * 2 + 2;\n                        if (arg_1ch < iVar8) {\n                            iVar8 = arg_1ch;\n                        }\n                        uVar14 = 0;\n                        piVar12 = arg_18h + var_78h;\n                        uVar9 = ~-(arg_18h + iVar8 < piVar12) & arg_18h + iVar8 + (3 - piVar12) >> 2;\n                        if (uVar9 != 0) {\n                            do {\n                                uVar14 = uVar14 + 1;\n                                *piVar12 = -1;\n                                piVar12 = piVar12 + 1;\n                            } while (uVar14 < uVar9);\n                        }\n                    }\n                    if (arg_1ch < 2) {\n                        iVar11 = 0;\n                    }\n                    else {\n                        *arg_18h = var_88h - var_90h >> 1;\n                        arg_18h[1] = var_84h - var_90h >> 1;\n                    }\n                    if (var_20h != NULL) {\n                        if ((*var_20h & 0x20) != 0) {\n                            *var_20h[6] = var_58h;\n                            return iVar11;\n                        }\n                        return iVar11;\n                    }\n                    return iVar11;\n                }\n                goto code_r0x0040a12a;\n            }\n            if (iVar3 == 0) {\ncode_r0x00446eb0:\n                puVar7 = arg_10h + 1;\n                var_dch = 0;\n                if (((var_8h != 0) && (puVar7 < var_4h)) && ((*puVar7 & 0xfc00) == 0xdc00)) {\n                    puVar7 = arg_10h + 2;\n                }\n            }\n            else {\n    // switch table (5 cases) at 0x447107\n                switch(iVar3) {\n                default:\n                    goto code_r0x00409f3b;\n                case -0x3e4:\n                    goto code_r0x0040a114;\n                case -0x3e3:\n                case -0x3e0:\n                    goto code_r0x00446eb0;\n                case -0x3e2:\n                    puVar7 = var_88h;\n                    if (var_88h <= arg_10h) goto code_r0x00446eb0;\n                    break;\n                case -0x3e1:\n                    var_dch = var_e0h;\n                    puVar7 = arg_10h;\n                }\n            }\n            if (var_40h != 0) {\n                if (var_f0h == 0) {\n                    if (((arg_10h <= var_8ch + -var_ech) && (*arg_10h == var_d4h)) &&\n                       ((var_ech == 1 || (arg_10h[1] == var_d4h._2_2_)))) goto code_r0x0040a127;\n                }\n                else if ((arg_10h < var_8ch) && (iVar8 = fcn.00408665(var_8ch, &var_ech, var_8h),  iVar8 != 0))\n                goto code_r0x0040a127;\n            }\n            if ((var_24h != 0) || (var_4h < puVar7)) goto code_r0x0040a127;\n            if ((((puVar2 < puVar7) && (puVar7[-1] == 0xd)) && (puVar7 < var_4h)) &&\n               (((*puVar7 == 10 && ((in_ECX[3] & 0x800U) == 0)) &&\n                ((var_f0h == 1 || ((var_f0h == 2 || (var_ech == 2)))))))) {\n                puVar7 = puVar7 + 1;\n            }\n            var_58h = 0;\n            arg_10h = puVar7;\n            goto code_r0x00409e60;\n        }\n        if ((var_38h == 0) || (((*(var_38h + 4) & 2) == 0 || (*(var_38h + 0x28) <= puVar7 - arg_10h >> 1)))) {\n            if ((!bVar1) || (1999 < (var_4h - arg_10h & 0xfffffffeU))) goto code_r0x00409ed7;\n            if (var_3ch == 0) {\n                iVar8 = 0;\n            }\n            else {\n                iVar8 = 2;\n            }\n            puVar7 = iVar8 + arg_10h;\n            if (puVar7 <= var_28h) goto code_r0x00409ed7;\n            if (puVar7 < var_4h) {\n                uVar13 = var_1ch;\n                if (uVar13 == var_18h) {\n                    while (var_28h = puVar7,  *var_28h != uVar13) {\n                        puVar7 = var_28h + 1;\n                        if (var_4h <= var_28h + 1) goto code_r0x0040a114;\n                    }\n                }\n                else {\n                    while( true ) {\n                        var_28h = puVar7;\n                        if ((*var_28h == uVar13) || (*var_28h == var_18h)) break;\n                        puVar7 = var_28h + 1;\n                        if (var_4h <= var_28h + 1) goto code_r0x0040a114;\n                    }\n                }\n                if (var_28h < var_4h) goto code_r0x00409ed7;\n            }\ncode_r0x0040a114:\n            iVar3 = 0;\n            goto code_r0x0040a12a;\n        }\ncode_r0x0040a127:\n        iVar3 = 0;\n        puVar15 = var_4h;\ncode_r0x0040a12a:\n        if (var_48h != 0) {\n            fcn.0040ab2b(var_fch);\n        }\n        if ((iVar3 == 0) || (iVar3 == -0xc)) {\n            if (var_118h == NULL) {\n                iVar3 = -1;\n            }\n            else {\n                if (1 < arg_1ch) {\n                    *arg_18h = var_44h - arg_8h >> 1;\n                    arg_18h[1] = puVar15 - arg_8h >> 1;\n                    if (2 < arg_1ch) {\n                        arg_18h[2] = var_118h - arg_8h >> 1;\n                    }\n                }\n                iVar3 = -0xc;\n            }\n            if ((var_20h != NULL) && ((*var_20h & 0x20) != 0)) {\n                *var_20h[6] = var_54h;\n            }\n        }\n    }\n    else {\n        iVar3 = -0xd;\n    }\n    return iVar3;\n}\n",
        "token_count": 7508
    },
    "0040a180": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00448353)\n// WARNING: Removing unreachable block (ram,0x0044836b)\n// WARNING: Removing unreachable block (ram,0x004483bd)\n// WARNING: Removing unreachable block (ram,0x004483d5)\n// WARNING: Type propagation algorithm not settling\n\nuint32_t __cdecl fcn.0040a180(uint16_t *arg_8h, uint16_t *arg_ch, uint32_t *arg_10h, uint *arg_14h, uint32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint16_t **ppuVar3;\n    uint32_t *puVar4;\n    char cVar5;\n    uint8_t uVar6;\n    uint16_t uVar7;\n    uint16_t uVar8;\n    uint32_t **ppuVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint16_t *puVar12;\n    int32_t iVar13;\n    uint16_t *in_ECX;\n    uint16_t *puVar14;\n    int32_t iVar15;\n    uint16_t *puVar16;\n    uint16_t *puVar17;\n    uint16_t *in_EDX;\n    uint *puVar18;\n    uint16_t *puVar19;\n    bool bVar20;\n    bool bVar21;\n    uint var_14ch;\n    uint var_d4h;\n    uint32_t var_d0h;\n    uint32_t var_cch;\n    uint32_t var_c8h;\n    int32_t var_c4h;\n    int32_t var_c0h;\n    int32_t var_bch;\n    int32_t var_b8h;\n    uint32_t var_b4h;\n    uint32_t var_b0h;\n    uint32_t var_ach;\n    uint32_t var_a8h;\n    uint32_t var_a4h;\n    uint var_a0h;\n    uint32_t var_9ch;\n    uint32_t var_98h;\n    uint32_t var_94h;\n    int32_t var_90h;\n    int32_t var_8ch;\n    int32_t var_88h;\n    int32_t var_84h;\n    uint32_t var_80h;\n    uint32_t var_7ch;\n    uint32_t var_78h;\n    uint32_t var_74h;\n    uint32_t var_70h;\n    uint var_6ch;\n    uint *var_60h;\n    uint16_t *var_5ch;\n    uint32_t var_58h;\n    uint32_t var_54h;\n    uint *var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint16_t *var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    uint16_t *var_38h;\n    uint16_t *var_34h;\n    uint16_t *var_30h;\n    uint16_t *var_2ch;\n    uint32_t var_28h;\n    uint16_t *var_24h;\n    uint16_t *var_20h;\n    uint16_t *var_1ch;\n    uint16_t *var_18h;\n    uint16_t *var_14h;\n    uint16_t *var_10h;\n    uint16_t *var_ch;\n    uint16_t *var_8h;\n    \n    if (in_EDX == NULL) {\n        if (arg_18h != 0) {\n            uVar10 = &arg_18h - in_ECX >> 0x1f;\n            return -((&arg_18h - in_ECX ^ uVar10) - uVar10);\n        }\n        uVar10 = fcn.0040a180(NULL, NULL, NULL, NULL, 1);\n        return uVar10;\n    }\n    var_40h = 0;\n    var_3ch = 0;\n    uVar10 = *arg_10h;\n    var_28h = arg_10h[0x14];\n    var_30h = in_EDX;\n    var_8h = in_ECX;\n    if (arg_10h[1] <= uVar10) {\ncode_r0x0044f265:\n        *arg_10h = uVar10 + 1;\n        return 0xfffffff8;\n    }\ncode_r0x0040a1c1:\n    *arg_10h = uVar10 + 1;\n    if (arg_10h[2] <= arg_18h) {\n        return 0xffffffeb;\n    }\n    puVar16 = var_8h;\n    if (arg_10h[0x27] == 2) {\n        var_5ch = var_8h;\n        var_60h = arg_14h;\n        arg_14h = &var_60h;\n        arg_10h[0x27] = 0;\n        in_ECX = var_8h;\n    }\ncode_r0x0040a1dd:\n    var_8h = puVar16;\n    puVar16 = var_8h;\n    uVar10 = var_28h;\n    puVar14 = *in_EDX;\n    var_2ch = NULL;\n    var_10h = NULL;\n    var_38h = puVar14;\n    // switch table (162 cases) at 0x40a934\n    switch(puVar14) {\n    case NULL:\n    case 0x9e:\n    case 0x9f:\n        if (((var_8h == arg_8h) && (puVar14 != 0x9f)) && (arg_10h[0x2a] == 0)) {\n            if (arg_10h[0x18] != 0) {\n                return 0;\n            }\n            if ((arg_10h[0x19] != 0) && (arg_8h == arg_10h[0x1e] + arg_10h[0x26] * 2)) {\n                return 0;\n            }\n        }\n        arg_10h[0x21] = var_8h;\n        arg_10h[0x24] = arg_ch;\n        arg_10h[0x20] = arg_8h;\n        if (puVar14 != NULL) {\n            return 0xfffffc19;\n        }\n        return 1;\n    case 0x1:\n        goto code_r0x00447f56;\n    case 0x2:\n        if (in_ECX != arg_10h[0x1e] + arg_10h[0x26] * 2) {\n            return 0;\n        }\n        break;\n    case 0x3:\n        in_EDX = in_EDX + 1;\n        arg_8h = var_8h;\n        in_ECX = var_8h;\n        var_30h = in_EDX;\n        goto code_r0x0040a1dd;\n    case 0x4:\n    case 0x5:\n        if (var_28h == 0) {\n            if (var_8h == arg_10h[0x1e]) {\ncode_r0x00448396:\n                iVar15 = 0;\n            }\n            else {\n                if (var_8h < arg_10h[0x22] || var_8h == arg_10h[0x22]) {\n                    arg_10h[0x22] = var_8h + -1;\n                }\n                uVar10 = var_8h[-1];\n                if (arg_10h[0x16] == 0) {\n                    if ((0xff < var_8h[-1]) || ((*(uVar10 + arg_10h[0x11]) & 0x10) == 0)) goto code_r0x00448396;\n                    iVar15 = 1;\n                }\n                else {\n                    if (((uVar10 != 0x5f) &&\n                        (iVar15 = *(*(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x8000007f)) * 2 + 0x4b1c60) * 8\n                                     + 0x4af411) * 4 + 0x4c5370),  iVar15 != 1)) && (iVar15 != 3))\n                    goto code_r0x00448396;\n                    iVar15 = 1;\n                }\n            }\n            if (var_8h < arg_10h[0x1f]) {\n                if (arg_10h[0x16] == 0) {\n                    if ((0xff < *var_8h) || ((*(*var_8h + arg_10h[0x11]) & 0x10) == 0)) goto code_r0x004482fc;\n                }\n                else {\n                    uVar10 = *var_8h;\n                    if (uVar10 != 0x5f) {\n                        iVar13 = *((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x8000007f);\n                        goto code_r0x004483dc;\n                    }\n                }\n                goto code_r0x00448491;\n            }\ncode_r0x0044843f:\n            if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n               (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                return 0xfffffff4;\n            }\ncode_r0x004482fc:\n            iVar13 = 0;\n        }\n        else {\n            if (var_8h == arg_10h[0x1e]) {\ncode_r0x00448282:\n                iVar15 = 0;\n            }\n            else {\n                puVar14 = var_8h + -1;\n                if ((*puVar14 & 0xfc00) == 0xdc00) {\n                    puVar14 = var_8h + -2;\n                }\n                if (puVar14 < arg_10h[0x22]) {\n                    arg_10h[0x22] = puVar14;\n                }\n                uVar10 = *puVar14;\n                if ((uVar10 & 0xfc00) == 0xd800) {\n                    uVar10 = ((uVar10 & 0x3ff) << 10 | puVar14[1] & 0x3ff) + 0x10000;\n                }\n                if (arg_10h[0x16] == 0) {\n                    if ((0xff < uVar10) || ((*(uVar10 + arg_10h[0x11]) & 0x10) == 0)) goto code_r0x00448282;\n                    iVar15 = 1;\n                }\n                else {\n                    if (((uVar10 != 0x5f) &&\n                        (iVar15 = *(*(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 +\n                                     0x4af411) * 4 + 0x4c5370),  iVar15 != 1)) && (iVar15 != 3)) goto code_r0x00448282;\n                    iVar15 = 1;\n                }\n            }\n            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044843f;\n            uVar10 = *var_8h;\n            if ((uVar10 & 0xfc00) == 0xd800) {\n                uVar10 = ((uVar10 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n            }\n            if (arg_10h[0x16] == 0) {\n                if ((uVar10 < 0x100) && ((*(uVar10 + arg_10h[0x11]) & 0x10) != 0)) goto code_r0x00448491;\n                goto code_r0x004482fc;\n            }\n            if (uVar10 == 0x5f) {\ncode_r0x00448491:\n                iVar13 = 1;\n            }\n            else {\n                iVar13 = *((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f);\ncode_r0x004483dc:\n                iVar13 = *(*(*(iVar13 * 2 + 0x4b1c60) * 8 + 0x4af411) * 4 + 0x4c5370);\n                if (iVar13 == 1) goto code_r0x00448491;\n                if (iVar13 != 3) goto code_r0x004482fc;\n                iVar13 = 1;\n            }\n        }\n        uVar8 = *in_EDX;\n        in_EDX = in_EDX + 1;\n        var_30h = in_EDX;\n        if (uVar8 == 5) {\n            in_ECX = var_8h;\n            if (iVar13 == iVar15) {\n                return 0;\n            }\n        }\n        else {\n            in_ECX = var_8h;\n            if (iVar13 != iVar15) {\n                return 0;\n            }\n        }\n        goto code_r0x0040a1dd;\n    case 0x6:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x0044d99d;\n        uVar10 = *var_8h;\n        puVar16 = var_8h + 1;\n        if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n            uVar10 = ((uVar10 & 0x3ff) << 10 | *puVar16 & 0x3ff) + 0x10000;\n            puVar16 = var_8h + 2;\n        }\n        var_8h = puVar16;\n        in_ECX = var_8h;\n        puVar16 = var_8h;\n        if (uVar10 < 0x100) {\n            uVar6 = *(uVar10 + arg_10h[0x11]) & 4;\njoined_r0x004487c1:\n            in_ECX = var_8h;\n            puVar16 = var_8h;\n            if (uVar6 != 0) {\n                return 0;\n            }\n        }\n        break;\n    case 0x7:\n        if (var_8h < arg_10h[0x1f]) {\n            uVar10 = *var_8h;\n            puVar16 = var_8h + 1;\n            if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                uVar10 = ((uVar10 & 0x3ff) << 10 | *puVar16 & 0x3ff) + 0x10000;\n                puVar16 = var_8h + 2;\n            }\n            var_8h = puVar16;\n            if (0xff < uVar10) {\n                return 0;\n            }\n            uVar6 = *(uVar10 + arg_10h[0x11]) & 4;\n            goto joined_r0x0044882c;\n        }\n        goto code_r0x0044d99d;\n    case 0x8:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x0044d99d;\n        uVar10 = *var_8h;\n        puVar16 = var_8h + 1;\n        if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n            uVar10 = ((uVar10 & 0x3ff) << 10 | *puVar16 & 0x3ff) + 0x10000;\n            puVar16 = var_8h + 2;\n        }\n        var_8h = puVar16;\n        in_ECX = var_8h;\n        puVar16 = var_8h;\n        if (uVar10 < 0x100) {\n            uVar6 = *(uVar10 + arg_10h[0x11]) & 1;\n            goto joined_r0x004487c1;\n        }\n        break;\n    case 0x9:\n        if (var_8h < arg_10h[0x1f]) {\n            uVar10 = *var_8h;\n            puVar16 = var_8h + 1;\n            if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                uVar10 = ((uVar10 & 0x3ff) << 10 | *puVar16 & 0x3ff) + 0x10000;\n                puVar16 = var_8h + 2;\n            }\n            var_8h = puVar16;\n            if (0xff < uVar10) {\n                return 0;\n            }\n            uVar6 = *(uVar10 + arg_10h[0x11]) & 1;\n            goto joined_r0x0044882c;\n        }\n        goto code_r0x0044d99d;\n    case 0xa:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x0044d99d;\n        uVar10 = *var_8h;\n        puVar16 = var_8h + 1;\n        if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n            uVar10 = ((uVar10 & 0x3ff) << 10 | *puVar16 & 0x3ff) + 0x10000;\n            puVar16 = var_8h + 2;\n        }\n        var_8h = puVar16;\n        in_ECX = var_8h;\n        puVar16 = var_8h;\n        if (uVar10 < 0x100) {\n            uVar6 = *(uVar10 + arg_10h[0x11]) & 0x10;\n            goto joined_r0x004487c1;\n        }\n        break;\n    case 0xb:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x0044d99d;\n        uVar10 = *var_8h;\n        puVar16 = var_8h + 1;\n        if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n            uVar10 = ((uVar10 & 0x3ff) << 10 | *puVar16 & 0x3ff) + 0x10000;\n            puVar16 = var_8h + 2;\n        }\n        var_8h = puVar16;\n        if (0xff < uVar10) {\n            return 0;\n        }\n        uVar6 = *(uVar10 + arg_10h[0x11]) & 0x10;\njoined_r0x0044882c:\n        in_ECX = var_8h;\n        puVar16 = var_8h;\n        if (uVar6 == 0) {\n            return 0;\n        }\n        break;\n    case 0xc:\n        puVar16 = arg_10h[0x1f];\n        if (arg_10h[6] == 0) {\n            if ((var_8h <= puVar16 + -arg_10h[7]) && (*var_8h == *(arg_10h + 0xd))) {\n                if (arg_10h[7] == 1) {\n                    return 0;\n                }\n                if (var_8h[1] == *(arg_10h + 0x36)) {\n                    return 0;\n                }\n            }\n        }\n        else if ((var_8h < puVar16) && (iVar15 = fcn.00408665(puVar16, arg_10h + 7, var_28h),  iVar15 != 0)) {\n            return 0;\n        }\n        if (((((arg_10h[0x23] != 0) && (var_8h == arg_10h[0x1f] - 2)) && (arg_10h[6] == 0)) &&\n            ((arg_10h[7] == 2 && (*var_8h == *(arg_10h + 0xd))))) && (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n            return 0xfffffff4;\n        }\n        goto code_r0x00448555;\n    case 0xd:\ncode_r0x00448555:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x0044d99d;\n        in_ECX = var_8h + 1;\n        puVar16 = in_ECX;\n        if (((uVar10 != 0) && (in_ECX < arg_10h[0x1f])) && ((*in_ECX & 0xfc00) == 0xdc00)) {\n            in_ECX = var_8h + 2;\n            puVar16 = var_8h + 2;\n        }\n        break;\n    case 0xe:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x0044d99d;\n        in_EDX = in_EDX + 1;\n        in_ECX = var_8h + 1;\n        var_30h = in_EDX;\n        puVar16 = var_8h + 1;\n        goto code_r0x0040a1dd;\n    case 0xf:\n    case 0x10:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x0044d99d;\n        var_20h = *var_8h;\n        puVar16 = var_8h + 1;\n        if ((var_28h != 0) && ((var_20h & 0xfc00) == 0xd800)) {\n            var_20h = ((var_20h & 0x3ff) << 10 | *puVar16 & 0x3ff) + 0x10000;\n            puVar16 = var_8h + 2;\n        }\n        var_8h = puVar16;\n        uVar10 = *((*((var_20h >> 7) + 0x4bff60) * 0x80 + (var_20h & 0x7f)) * 2 + 0x4b1c60);\n    // switch table (11 cases) at 0x44f29f\n        switch(in_EDX[1]) {\n        case 0:\n            goto code_r0x00448bfd;\n        case 1:\n            cVar5 = *(uVar10 * 8 + 0x4af411);\n            if (((cVar5 == '\\t') || (cVar5 == '\\x05')) || (cVar5 == '\\b')) {\ncode_r0x00448c0b:\n                bVar20 = true;\n            }\n            else {\n                bVar20 = false;\n            }\n            goto code_r0x00448c27;\n        case 2:\n            if ((in_EDX[2] != *(*(uVar10 * 8 + 0x4af411) * 4 + 0x4c5370)) == (puVar14 == 0x10)) {\n                return 0;\n            }\n            break;\n        case 3:\n            uVar6 = *(uVar10 * 8 + 0x4af411);\n            goto code_r0x00448c7b;\n        case 4:\n            uVar6 = *(uVar10 * 8 + 0x4af410);\ncode_r0x00448c7b:\n            if ((in_EDX[2] != uVar6) == (puVar14 == 0x10)) {\n                return 0;\n            }\n            break;\n        case 5:\n            iVar15 = *(*(uVar10 * 8 + 0x4af411) * 4 + 0x4c5370);\n            if ((iVar15 == 1) || (iVar15 == 3)) goto code_r0x00448c0b;\n            bVar20 = false;\n            goto code_r0x00448c27;\n        case 6:\n        case 7:\n            if (var_20h < 0x180f) {\n                if (var_20h != 0x180e) {\n                    if (var_20h < 0x86) {\n                        if ((var_20h != 0x85) && ((var_20h < 0x9 || ((0xd < var_20h && (var_20h != 0x20)))))) {\ncode_r0x00448c12:\n                            bVar20 = *(*(uVar10 * 8 + 0x4af411) * 4 + 0x4c5370) == 6;\n                            goto code_r0x00448c27;\n                        }\n                    }\n                    else if ((var_20h != 0xa0) && (var_20h != 0x1680)) goto code_r0x00448c12;\n                }\n            }\n            else if (var_20h < 0x2030) {\n                if (var_20h != 0x202f) {\n                    if (var_20h + -0x1000 < 0x2a) {\n    // switch table (42 cases) at 0x44f2cb\n                        switch(*(*(var_20h + 0x44d2d3) * 4 + 0x44f2cb)) {\n                        case 0x448bfd:\n                            goto code_r0x00448bfd;\n                        }\n                    }\n                    goto code_r0x00448c12;\n                }\n            }\n            else if ((var_20h != 0x205f) && (var_20h != 0x3000)) goto code_r0x00448c12;\n            goto code_r0x00448bfd;\n        case 8:\n            iVar15 = *(*(uVar10 * 8 + 0x4af411) * 4 + 0x4c5370);\n            if (((iVar15 == 1) || (iVar15 == 3)) || (var_20h == 0x5f)) goto code_r0x00448c0b;\n            bVar20 = false;\n            goto code_r0x00448c27;\n        case 9:\n            ppuVar3 = in_EDX[2] * 4 + 0x4b0a90;\n            puVar16 = *(in_EDX[2] * 4 + 0x4b0a90);\n            while ((puVar16 <= var_20h && (ppuVar3 = ppuVar3 + 1,  var_20h != puVar16))) {\n                puVar16 = *ppuVar3;\n            }\n            if (puVar14 != 0x10) {\n                return 0;\n            }\n            break;\n        case 10:\n            if (((((var_20h == 0x24) || (var_20h == 0x40)) || (var_20h == 0x60)) ||\n                ((0x9f < var_20h && (var_20h < 0xd800)))) || (0xdfff < var_20h)) goto code_r0x00448c0b;\n            bVar20 = false;\ncode_r0x00448c27:\n            if (bVar20 == (puVar14 == 0xf)) {\n                return 0;\n            }\n            break;\n        default:\n            goto code_r0x0044eef0;\n        }\n        goto code_r0x0040a69a;\n    case 0x11:\n        if (var_8h < arg_10h[0x1f]) {\n            uVar10 = *var_8h;\n            puVar16 = var_8h + 1;\n            if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                uVar10 = ((uVar10 & 0x3ff) << 10 | *puVar16 & 0x3ff) + 0x10000;\n                puVar16 = var_8h + 2;\n            }\n            var_8h = puVar16;\n            if (0xd < uVar10) {\n                if ((uVar10 != 0x85) && (1 < uVar10 - 0x2028)) {\n                    return 0;\n                }\ncode_r0x004488ec:\n                uVar10 = arg_10h[0x1b];\njoined_r0x00447faf:\n                in_ECX = var_8h;\n                puVar16 = var_8h;\n                if (uVar10 == 0) {\n                    return 0;\n                }\n                break;\n            }\n            in_ECX = var_8h;\n            puVar16 = var_8h;\n            if (uVar10 != 0xd) {\n                if (uVar10 != 10) {\n                    if (uVar10 < 0xb) {\n                        return 0;\n                    }\n                    if (0xc < uVar10) {\n                        return 0;\n                    }\n                    goto code_r0x004488ec;\n                }\n                break;\n            }\n            if (var_8h < arg_10h[0x1f]) {\n                if (*var_8h == 10) {\n                    in_ECX = var_8h + 1;\n                    puVar16 = var_8h + 1;\n                }\n                break;\n            }\n            if (arg_10h[0x23] == 0) break;\n            bVar20 = var_8h < arg_10h[0x22];\n            bVar21 = var_8h == arg_10h[0x22];\n            goto code_r0x004480f0;\n        }\n        goto code_r0x0044d99d;\n    case 0x12:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x0044d99d;\n        uVar10 = *var_8h;\n        puVar16 = var_8h + 1;\n        if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n            uVar10 = ((uVar10 & 0x3ff) << 10 | *puVar16 & 0x3ff) + 0x10000;\n            puVar16 = var_8h + 2;\n        }\n        var_8h = puVar16;\n        in_ECX = var_8h;\n        puVar16 = var_8h;\n        if (uVar10 < 0x180f) {\n            if (uVar10 == 0x180e) {\n                return 0;\n            }\n            if (uVar10 < 0xa1) {\n                if (uVar10 == 0xa0) {\n                    return 0;\n                }\n                if (uVar10 == 9) {\n                    return 0;\n                }\n                if (uVar10 == 0x20) {\n                    return 0;\n                }\n            }\n            else if (uVar10 == 0x1680) {\n                return 0;\n            }\n        }\n        else if (uVar10 < 0x2060) {\n            if (uVar10 == 0x205f) {\n                return 0;\n            }\n            if (0x1fff < uVar10) {\n                if (uVar10 < 0x200b) {\n                    return 0;\n                }\n                if (uVar10 == 0x202f) {\n                    return 0;\n                }\n            }\n        }\n        else if (uVar10 == 0x3000) {\n            return 0;\n        }\n        break;\n    case 0x13:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x0044d99d;\n        uVar10 = *var_8h;\n        puVar16 = var_8h + 1;\n        if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n            uVar10 = ((uVar10 & 0x3ff) << 10 | *puVar16 & 0x3ff) + 0x10000;\n            puVar16 = var_8h + 2;\n        }\n        var_8h = puVar16;\n        in_ECX = var_8h;\n        puVar16 = var_8h;\n        if (uVar10 < 0x180f) {\n            if (uVar10 != 0x180e) {\n                if (uVar10 < 0xa1) {\n                    if (((uVar10 != 0xa0) && (uVar10 != 9)) && (uVar10 != 0x20)) {\n                        return 0;\n                    }\n                }\n                else if (uVar10 != 0x1680) {\n                    return 0;\n                }\n            }\n        }\n        else if (uVar10 < 0x2060) {\n            if (uVar10 != 0x205f) {\n                if (uVar10 < 0x2000) {\n                    return 0;\n                }\n                if ((0x200a < uVar10) && (uVar10 != 0x202f)) {\n                    return 0;\n                }\n            }\n        }\n        else if (uVar10 != 0x3000) {\n            return 0;\n        }\n        break;\n    case 0x14:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x0044d99d;\n        uVar10 = *var_8h;\n        puVar16 = var_8h + 1;\n        if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n            uVar10 = ((uVar10 & 0x3ff) << 10 | *puVar16 & 0x3ff) + 0x10000;\n            puVar16 = var_8h + 2;\n        }\n        var_8h = puVar16;\n        in_ECX = var_8h;\n        puVar16 = var_8h;\n        if (uVar10 < 0x86) {\n            if (uVar10 == 0x85) {\n                return 0;\n            }\n            if ((9 < uVar10) && (uVar10 < 0xe)) {\n                return 0;\n            }\n        }\n        else if ((0x2027 < uVar10) && (uVar10 < 0x202a)) {\n            return 0;\n        }\n        break;\n    case 0x15:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x0044d99d;\n        uVar10 = *var_8h;\n        puVar16 = var_8h + 1;\n        if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n            uVar10 = ((uVar10 & 0x3ff) << 10 | *puVar16 & 0x3ff) + 0x10000;\n            puVar16 = var_8h + 2;\n        }\n        var_8h = puVar16;\n        in_ECX = var_8h;\n        puVar16 = var_8h;\n        if (uVar10 < 0x86) {\n            if ((uVar10 != 0x85) && (3 < uVar10 - 10)) {\n                return 0;\n            }\n        }\n        else if (1 < uVar10 - 0x2028) {\n            return 0;\n        }\n        break;\n    case 0x16:\n        var_24h = arg_10h[0x1f];\n        if (var_8h < var_24h) {\n            uVar10 = *var_8h;\n            puVar16 = var_8h + 1;\n            if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                uVar10 = ((uVar10 & 0x3ff) << 10 | *puVar16 & 0x3ff) + 0x10000;\n                puVar16 = var_8h + 2;\n            }\n            var_8h = puVar16;\n            var_34h = *(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af412);\n            puVar14 = arg_10h[0x1f];\n            if (var_8h < arg_10h[0x1f]) {\n                do {\n                    iVar15 = 1;\n                    uVar10 = *var_8h;\n                    if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                        iVar15 = 2;\n                        uVar10 = ((uVar10 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                    }\n                    uVar6 = *(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af412);\n                    puVar14 = var_24h;\n                    in_EDX = var_30h;\n                } while (((*(var_34h * 4 + 0x4c2210) & 1 << (uVar6 & 0x1f)) != 0) &&\n                        (var_8h = var_8h + iVar15,  var_34h = uVar6,  var_8h < var_24h));\n            }\n            in_ECX = var_8h;\n            puVar16 = var_8h;\n            if ((arg_10h[0x23] == 0) || ((var_8h < puVar14 || (var_8h < arg_10h[0x22] || var_8h == arg_10h[0x22]))))\n            break;\n            arg_10h[0x1a] = 1;\n            uVar10 = arg_10h[0x23];\n            goto joined_r0x00448e56;\n        }\n        goto code_r0x0044d99d;\n    case 0x17:\n        goto code_r0x0044812d;\n    case 0x18:\ncode_r0x0044811f:\n        if (var_8h < arg_10h[0x1f]) {\n            return 0;\n        }\n        goto code_r0x004480d5;\n    case 0x19:\n        if (arg_10h[0x13] != 0) {\n            return 0;\n        }\n        if (arg_10h[0x17] != 0) goto code_r0x0044811f;\ncode_r0x0044812d:\n        puVar16 = arg_10h[0x1f];\n        if (var_8h < puVar16) {\n            puVar4 = arg_10h + 7;\n            if (arg_10h[6] == 0) {\n                if (((var_8h <= puVar16 + -*puVar4) && (*var_8h == *(arg_10h + 0xd))) &&\n                   ((*puVar4 == 1 || (var_8h[1] == *(arg_10h + 0x36))))) goto code_r0x0044818e;\n            }\n            else {\n                iVar15 = fcn.00408665(puVar16, puVar4, var_28h);\n                if (iVar15 != 0) {\ncode_r0x0044818e:\n                    if (var_8h == arg_10h[0x1f] + *puVar4 * -2) goto code_r0x004480d5;\n                }\n            }\ncode_r0x00448056:\n            if (arg_10h[0x23] == 0) {\n                return 0;\n            }\n            if (var_8h + 1 < arg_10h[0x1f]) {\n                return 0;\n            }\n            if (arg_10h[6] != 0) {\n                return 0;\n            }\n            if (arg_10h[7] != 2) {\n                return 0;\n            }\n            if (*var_8h != *(arg_10h + 0xd)) {\n                return 0;\n            }\n            goto code_r0x0044b5c6;\n        }\ncode_r0x004480d5:\n        in_ECX = var_8h;\n        puVar16 = var_8h;\n        if (arg_10h[0x23] != 0) {\n            bVar20 = var_8h < arg_10h[0x22];\n            bVar21 = var_8h == arg_10h[0x22];\ncode_r0x004480f0:\n            in_ECX = var_8h;\n            puVar16 = var_8h;\n            if (!bVar20 && !bVar21) {\n                arg_10h[0x1a] = 1;\n                uVar10 = arg_10h[0x23];\njoined_r0x00448e56:\n                in_ECX = var_8h;\n                puVar16 = var_8h;\n                if (1 < uVar10) {\n                    return 0xfffffff4;\n                }\n            }\n        }\n        break;\n    case 0x1a:\n        puVar14 = arg_10h[0x1f];\n        if (puVar14 <= var_8h) {\n            if (arg_10h[0x13] != 0) {\n                return 0;\n            }\n            goto code_r0x004480d5;\n        }\n        if (arg_10h[6] != 0) {\n            iVar15 = fcn.00408665(puVar14, arg_10h + 7, var_28h);\n            in_ECX = var_8h;\n            puVar16 = var_8h;\n            if (iVar15 == 0) goto code_r0x00448056;\n            break;\n        }\n        if (((var_8h <= puVar14 + -arg_10h[7]) && (*var_8h == *(arg_10h + 0xd))) &&\n           ((in_ECX = var_8h,  arg_10h[7] == 1 || (var_8h[1] == *(arg_10h + 0x36))))) break;\n        goto code_r0x00448056;\n    case 0x1b:\n        if ((arg_10h[0x12] != 0) && (var_8h == arg_10h[0x1e])) {\n            return 0;\n        }\ncode_r0x00447f56:\n        in_ECX = var_8h;\n        if (var_8h != arg_10h[0x1e]) {\n            return 0;\n        }\n        break;\n    case 0x1c:\n        if ((arg_10h[0x12] != 0) && (var_8h == arg_10h[0x1e])) {\n            return 0;\n        }\n        puVar14 = arg_10h[0x1e];\n        in_ECX = var_8h;\n        if (var_8h != puVar14) {\n            if (var_8h == arg_10h[0x1f]) {\n                return 0;\n            }\n            if (arg_10h[6] != 0) {\n                if (var_8h <= puVar14) {\n                    return 0;\n                }\n                uVar10 = fcn.0049b974(puVar14, arg_10h + 7, var_28h);\n                goto joined_r0x00447faf;\n            }\n            uVar10 = arg_10h[7];\n            if (var_8h < puVar14 + uVar10) {\n                return 0;\n            }\n            if (var_8h[-uVar10] != *(arg_10h + 0xd)) {\n                return 0;\n            }\n            if ((uVar10 != 1) && ((var_8h + -uVar10)[1] != *(arg_10h + 0x36))) {\n                return 0;\n            }\n        }\n        break;\n    case 0x1d:\n        if (var_28h == 0) {\n            if ((arg_10h[0x1f] - var_8h & 0xfffffffe) < 2) goto code_r0x0044d985;\n            if (in_EDX[1] != *var_8h) {\n                return 0;\n            }\n            in_EDX = in_EDX + 2;\n            in_ECX = var_8h + 1;\n            var_30h = in_EDX;\n            puVar16 = var_8h + 1;\n        }\n        else {\n            puVar16 = in_EDX + 1;\n            in_EDX = in_EDX + 1;\n            iVar15 = 1;\n            var_34h = 0x1;\n            if ((*puVar16 & 0xfc00) == 0xd800) {\n                iVar15 = 2;\n                var_34h = 0x2;\n            }\n            if (arg_10h[0x1f] - var_8h >> 1 < var_34h) {\n                if (arg_10h[0x23] == 0) {\n                    return 0;\n                }\n                if (var_8h < arg_10h[0x1f]) {\n                    return 0;\n                }\n                bVar20 = var_8h < arg_10h[0x22];\n                bVar21 = var_8h == arg_10h[0x22];\n                goto code_r0x0044b5c0;\n            }\n            do {\n                uVar8 = *in_EDX;\n                iVar15 = iVar15 + -1;\n                uVar7 = *var_8h;\n                in_EDX = in_EDX + 1;\n                var_8h = var_8h + 1;\n                if (uVar8 != uVar7) {\n                    return 0;\n                }\n                in_ECX = var_8h;\n                var_30h = in_EDX;\n                puVar16 = var_8h;\n            } while (0 < iVar15);\n        }\n        goto code_r0x0040a1dd;\n    case 0x1e:\n        if (arg_10h[0x1f] <= var_8h) goto code_r0x0044d99d;\n        if (var_28h == 0) {\n            uVar10 = in_EDX[1];\n            if (in_EDX[1] < 0x100) {\n                uVar10 = *(arg_10h[0xf] + uVar10);\n            }\n            uVar11 = *var_8h;\n            if (*var_8h < 0x100) {\n                uVar11 = *(arg_10h[0xf] + uVar11);\n            }\n            if (uVar10 != uVar11) {\n                return 0;\n            }\n            in_EDX = in_EDX + 2;\n            in_ECX = var_8h + 1;\n            var_30h = in_EDX;\n            puVar16 = var_8h + 1;\n        }\n        else {\n            var_24h = in_EDX[1];\n            var_34h = 0x1;\n            if ((var_24h & 0xfc00) == 0xd800) {\n                var_34h = 0x2;\n                var_24h = ((var_24h & 0x3ff) << 10 | in_EDX[2] & 0x3ff) + 0x10000;\n            }\n            if (var_24h < 0x80) {\n                uVar10 = *var_8h;\n                if (uVar10 < 0x100) {\n                    uVar10 = *(arg_10h[0xf] + uVar10);\n                }\n                if (*(arg_10h[0xf] + var_24h) != uVar10) {\n                    return 0;\n                }\n                var_30h = in_EDX + 2;\n                in_ECX = var_8h + 1;\n                in_EDX = var_30h;\n                puVar16 = var_8h + 1;\n            }\n            else {\n                puVar14 = *var_8h;\n                puVar16 = var_8h + 1;\n                if ((puVar14 & 0xfc00) == 0xd800) {\n                    puVar14 = ((puVar14 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                    puVar16 = var_8h + 2;\n                }\n                var_8h = puVar16;\n                in_EDX = in_EDX + var_34h + 1;\n                in_ECX = var_8h;\n                var_30h = in_EDX;\n                puVar16 = var_8h;\n                if ((var_24h != puVar14) &&\n                   (puVar14 !=\n                    *(*((*((var_24h >> 7) + 0x4bff60) * 0x80 + (var_24h & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af414) +\n                    var_24h)) {\n                    return 0;\n                }\n            }\n        }\n        goto code_r0x0040a1dd;\n    case 0x1f:\n    case 0x20:\n        if (arg_10h[0x1f] <= var_8h) {\ncode_r0x0044dc60:\n            if (arg_10h[0x23] == 0) {\n                return 0;\n            }\n            if (var_8h < arg_10h[0x22] || var_8h == arg_10h[0x22]) {\n                return 0;\n            }\n            arg_10h[0x1a] = 1;\n            uVar10 = arg_10h[0x23];\n            goto joined_r0x0044ef21;\n        }\n        puVar16 = in_EDX[1];\n        if (var_28h == 0) {\n            uVar8 = *var_8h;\n            in_ECX = var_8h + 1;\n            if (puVar16 == uVar8) {\n                return 0;\n            }\n            var_8h = in_ECX;\n            if (puVar14 == 0x20) {\n                if (puVar16 < 0x100) {\n                    puVar16 = *(arg_10h[0x10] + puVar16);\n                }\n                if (puVar16 == uVar8) {\n                    return 0;\n                }\n            }\n            goto code_r0x0040a2b6;\n        }\n        puVar17 = in_EDX + 2;\n        var_1ch = puVar16;\n        if ((puVar16 & 0xfc00) == 0xd800) {\n            var_1ch = ((puVar16 & 0x3ff) << 10 | in_EDX[2] & 0x3ff) + 0x10000;\n            puVar17 = in_EDX + 3;\n        }\n        in_EDX = puVar17;\n        puVar17 = *var_8h;\n        puVar16 = var_8h + 1;\n        if ((puVar17 & 0xfc00) == 0xd800) {\n            puVar17 = ((puVar17 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n            puVar16 = var_8h + 2;\n        }\n        var_8h = puVar16;\n        puVar14 = var_1ch;\n        if (puVar14 != 0x1f) {\n            if (var_1ch < 0x80) {\n                puVar14 = *(arg_10h[0x10] + var_1ch);\n            }\n            else {\n                puVar14 = *(*((*((var_1ch >> 7) + 0x4bff60) * 0x80 + (var_1ch & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af414) +\n                          var_1ch;\n            }\n            if (var_1ch == puVar17) {\n                return 0;\n            }\n        }\n        in_ECX = var_8h;\n        var_30h = in_EDX;\n        var_24h = var_1ch;\n        puVar16 = var_8h;\n        if (puVar14 == puVar17) {\n            return 0;\n        }\n        goto code_r0x0040a1dd;\n    case 0x21:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x2e:\n    case 0x2f:\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n        puVar16 = in_EDX + 1;\n        uVar10 = puVar14 - ((-(puVar14 < 0x2e) & 0xfffffff3) + 0x2e);\n        var_10h = uVar10 & 1;\n        var_14h = *(uVar10 + 0x4b1c4c);\n        var_18h = *(uVar10 + 0x4b1c40);\n        if (var_18h == NULL) goto code_r0x0044984a;\n        goto code_r0x00449851;\n    case 0x27:\n    case 0x28:\n    case 0x34:\n    case 0x35:\n        goto code_r0x004497ac;\n    case 0x29:\n    case 0x36:\n        var_18h = in_EDX[1];\n        puVar16 = in_EDX + 2;\n        var_14h = var_18h;\n        goto code_r0x00449851;\n    case 0x2a:\n    case 0x37:\n        var_2ch = 0x1;\n        var_14h = NULL;\n        goto code_r0x0044984a;\n    case 0x2b:\n    case 0x38:\n        var_2ch = 0x1;\n        var_14h = 0x1;\ncode_r0x0044984a:\n        puVar16 = in_EDX + 1;\n        var_18h = 0x7fffffff;\n        goto code_r0x00449851;\n    case 0x2c:\n    case 0x39:\n        var_2ch = 0x1;\n        puVar16 = in_EDX + 1;\n        var_14h = NULL;\n        var_18h = 0x1;\n        goto code_r0x00449851;\n    case 0x2d:\n    case 0x3a:\n        var_2ch = 0x1;\ncode_r0x004497ac:\n        var_18h = in_EDX[1];\n        var_14h = NULL;\n        if ((puVar14 == 0x28) || (var_10h = NULL,  puVar14 == 0x35)) {\n            var_10h = 0x1;\n        }\n        puVar16 = in_EDX + 2;\ncode_r0x00449851:\n        puVar17 = var_14h;\n        var_24h = *puVar16;\n        if (var_28h != 0) {\n            var_ch = 0x1;\n            var_30h = 0x1;\n            var_1ch = 0x1;\n            if ((var_24h & 0xfc00) == 0xd800) {\n                var_ch = 0x2;\n                var_30h = 0x2;\n                var_24h = ((var_24h & 0x3ff) << 10 | puVar16[1] & 0x3ff) + 0x10000;\n                var_1ch = 0x2;\n            }\n            in_EDX = puVar16 + var_30h;\n            var_34h = puVar16;\n            var_20h = var_24h;\n            if (var_1ch < 0x2) goto code_r0x00449ae3;\n            var_30h = in_EDX;\n            if ((puVar14 < 0x2e) ||\n               (*(*((*((var_24h >> 7) + 0x4bff60) * 0x80 + (var_24h & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af414) == 0)) {\n                var_20h = NULL;\n            }\n            else {\n                var_20h = fcn.0049b8c1();\n            }\n            var_24h = 0x1;\n            if (0 < var_14h) {\n                var_1ch = var_ch * 2;\n                do {\n                    puVar16 = var_8h;\n                    if ((arg_10h[0x1f] - var_1ch < var_8h) ||\n                       (iVar15 = fcn.00421324(var_8h, var_34h, var_1ch),  puVar14 = var_1ch,  iVar15 != 0)) {\n                        if ((var_20h < 1) ||\n                           ((arg_10h[0x1f] + var_20h * -2 < puVar16 ||\n                            (iVar15 = fcn.00421324(puVar16, &var_6ch, var_20h * 2),  iVar15 != 0))))\n                        goto code_r0x0044d668;\n                        puVar14 = var_20h * 2;\n                    }\n                    var_8h = puVar16 + puVar14;\n                    var_24h = var_24h + 1;\n                } while (var_24h <= var_14h);\n            }\n            puVar16 = var_8h;\n            in_ECX = var_8h;\n            if (var_14h != var_18h) {\n                if (var_10h != NULL) {\n                    uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    while( true ) {\n                        if (uVar10 != 0) {\n                            return uVar10;\n                        }\n                        if (var_18h <= var_14h) {\n                            return 0;\n                        }\n                        if (((arg_10h[0x1f] + var_ch * -2 < puVar16) ||\n                            (iVar15 = fcn.00421324(puVar16, var_34h, var_ch * 2),  puVar14 = var_ch,  iVar15 != 0)) &&\n                           ((var_20h < 1 ||\n                            ((arg_10h[0x1f] + var_20h * -2 < puVar16 ||\n                             (iVar15 = fcn.00421324(puVar16, &var_6ch, var_20h * 2),  puVar14 = var_20h,  iVar15 != 0)))\n                            ))) break;\n                        var_14h = var_14h + 1;\n                        puVar16 = puVar16 + puVar14;\n                        uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    }\ncode_r0x0044d668:\n                    if (arg_10h[0x23] == 0) {\n                        return 0;\n                    }\n                    if (puVar16 < arg_10h[0x1f]) {\n                        return 0;\n                    }\n                    goto code_r0x0044b5ba;\n                }\n                var_10h = var_8h;\n                if (var_14h < var_18h) {\n                    var_1ch = var_ch * 2;\n                    puVar16 = var_20h;\n                    do {\n                        if ((arg_10h[0x1f] - var_1ch < var_8h) ||\n                           (iVar15 = fcn.00421324(var_8h, var_34h, var_1ch),  iVar15 != 0)) {\n                            if ((puVar16 < 1) ||\n                               ((arg_10h[0x1f] + puVar16 * -2 < var_8h ||\n                                (iVar15 = fcn.00421324(var_8h, &var_6ch, puVar16 * 2),  iVar15 != 0)))) {\n                                if ((arg_10h[0x23] != 0) &&\n                                   (((arg_10h[0x1f] <= var_8h && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22]))\n                                    && (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])))) {\n                                    return 0xfffffff4;\n                                }\n                                break;\n                            }\n                            var_8h = var_8h + puVar16;\n                            puVar16 = var_20h;\n                        }\n                        else {\n                            var_8h = var_8h + var_ch;\n                        }\n                        var_14h = var_14h + 1;\n                    } while (var_14h < var_18h);\n                }\n                in_ECX = var_8h;\n                puVar16 = var_8h;\n                if (var_2ch == NULL) {\n                    puVar14 = var_30h;\n                    if (var_10h < var_8h) {\n                        do {\n                            puVar16 = var_8h;\n                            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                            if (uVar10 != 0) {\n                                return uVar10;\n                            }\n                            in_ECX = puVar16 + -1;\n                            if ((puVar16[-1] & 0xfc00) == 0xdc00) {\n                                in_ECX = puVar16 + -2;\n                            }\n                            puVar14 = var_30h;\n                            var_8h = in_ECX;\n                        } while (var_10h < in_ECX);\n                    }\n                    goto code_r0x0040a305;\n                }\n            }\n            goto code_r0x0040a1dd;\n        }\n        in_EDX = puVar16 + 1;\n        var_20h = var_24h;\ncode_r0x00449ae3:\n        var_30h = in_EDX;\n        var_24h = var_20h;\n        if (puVar14 < 0x2e) {\n            iVar15 = 1;\n            if (0 < var_14h) {\n                do {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0044dc60;\n                    uVar8 = *var_8h;\n                    var_8h = var_8h + 1;\n                    if (var_20h != uVar8) {\n                        return 0;\n                    }\n                    iVar15 = iVar15 + 1;\n                } while (iVar15 <= var_14h);\n            }\n            puVar16 = var_8h;\n            in_ECX = var_8h;\n            if (var_14h != var_18h) {\n                if (var_10h != NULL) {\n                    uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    puVar14 = var_8h;\n                    var_8h = puVar16;\n                    while( true ) {\n                        if (uVar10 != 0) {\n                            return uVar10;\n                        }\n                        if (var_18h <= var_14h) {\n                            return 0;\n                        }\n                        if (arg_10h[0x1f] <= var_8h) break;\n                        puVar16 = var_8h + 1;\n                        if (var_20h != *var_8h) {\n                            return 0;\n                        }\n                        var_14h = var_14h + 1;\n                        var_8h = puVar14;\n                        uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                        puVar14 = var_8h;\n                        var_8h = puVar16;\n                    }\n                    goto code_r0x0044b5ad;\n                }\n                var_14h = var_8h;\n                for (; puVar17 < var_18h; puVar17 = puVar17 + 1) {\n                    if (arg_10h[0x1f] <= in_ECX) {\n                        if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= in_ECX && in_ECX != arg_10h[0x22])) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                        break;\n                    }\n                    if (var_20h != *in_ECX) break;\n                    in_ECX = in_ECX + 1;\n                }\n                puVar16 = in_ECX;\n                if (var_2ch == NULL) {\n                    bVar20 = in_ECX != var_8h;\n                    puVar14 = in_EDX;\n                    var_8h = in_ECX;\n                    if (bVar20) {\n                        do {\n                            puVar16 = var_8h;\n                            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                            in_ECX = puVar16 + -1;\n                            if (uVar10 != 0) {\n                                return uVar10;\n                            }\n                            puVar14 = var_30h;\n                            var_8h = in_ECX;\n                        } while (in_ECX != var_14h);\n                    }\n                    goto code_r0x0040a305;\n                }\n            }\n            goto code_r0x0040a1dd;\n        }\n        if ((var_28h == 0) || (var_20h < 0x80)) {\n            if (var_20h < 0x100) {\n                var_24h = *(arg_10h[0x10] + var_20h);\n            }\n        }\n        else {\n            var_24h = var_20h + *(*((*((var_20h >> 7) + 0x4bff60) * 0x80 + (var_20h & 0x7f)) * 2 + 0x4b1c60) * 8 +\n                                 0x4af414);\n        }\n        var_1ch = 0x1;\n        if (0 < var_14h) {\n            do {\n                if (arg_10h[0x1f] <= var_8h) goto code_r0x0044dc60;\n                if ((var_20h != *var_8h) && (var_24h != *var_8h)) {\n                    return 0;\n                }\n                var_8h = var_8h + 1;\n                var_1ch = var_1ch + 1;\n            } while (var_1ch <= var_14h);\n        }\n        puVar16 = var_8h;\n        in_ECX = var_8h;\n        if (var_14h == var_18h) goto code_r0x0040a1dd;\n        if (var_10h == NULL) {\n            for (; var_14h < var_18h; var_14h = var_14h + 1) {\n                if (arg_10h[0x1f] <= in_ECX) {\n                    if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= in_ECX && in_ECX != arg_10h[0x22])) &&\n                       (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                        return 0xfffffff4;\n                    }\n                    break;\n                }\n                if ((var_20h != *in_ECX) && (var_24h != *in_ECX)) break;\n                in_ECX = in_ECX + 1;\n            }\n            var_14h = var_8h;\n            puVar16 = in_ECX;\n            if (var_2ch == NULL) {\n                bVar20 = in_ECX != var_8h;\n                puVar14 = in_EDX;\n                var_8h = in_ECX;\n                if (bVar20) {\n                    do {\n                        puVar16 = var_8h;\n                        uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                        in_ECX = puVar16 + -1;\n                        if (uVar10 != 0) {\n                            return uVar10;\n                        }\n                        puVar14 = var_30h;\n                        var_8h = in_ECX;\n                    } while (in_ECX != var_14h);\n                }\n                goto code_r0x0040a305;\n            }\n            goto code_r0x0040a1dd;\n        }\n        uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        puVar14 = var_8h;\n        var_8h = puVar16;\n        while( true ) {\n            if (uVar10 != 0) {\n                return uVar10;\n            }\n            if (var_18h <= var_14h) {\n                return 0;\n            }\n            if (arg_10h[0x1f] <= var_8h) break;\n            if ((var_20h != *var_8h) && (var_24h != *var_8h)) {\n                return 0;\n            }\n            var_14h = var_14h + 1;\n            puVar16 = var_8h + 1;\n            var_8h = puVar14;\n            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar14 = var_8h;\n            var_8h = puVar16;\n        }\n        goto code_r0x0044b5ad;\n    case 0x3b:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n    case 0x40:\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n    case 0x4c:\n    case 0x4d:\n        puVar16 = in_EDX + 1;\n        uVar10 = puVar14 - ((-(puVar14 < 0x48) & 0xfffffff3) + 0x48);\n        var_10h = uVar10 & 1;\n        var_ch = *(uVar10 + 0x4b1c4c);\n        var_18h = *(uVar10 + 0x4b1c40);\n        if (var_18h == NULL) goto code_r0x00449f02;\n        goto code_r0x00449f09;\n    case 0x41:\n    case 0x42:\n    case 0x4e:\n    case 0x4f:\n        var_18h = in_EDX[1];\n        var_ch = NULL;\n        if ((puVar14 == 0x42) || (var_10h = NULL,  puVar14 == 0x4f)) {\n            var_10h = 0x1;\n        }\n        puVar16 = in_EDX + 2;\n        goto code_r0x00449f09;\n    case 0x43:\n    case 0x50:\n        var_18h = in_EDX[1];\n        puVar16 = in_EDX + 2;\n        var_ch = var_18h;\n        goto code_r0x00449f09;\n    case 0x44:\n    case 0x51:\n        var_2ch = 0x1;\n        var_ch = NULL;\n        goto code_r0x00449f02;\n    case 0x45:\n    case 0x52:\n        var_2ch = 0x1;\n        var_ch = 0x1;\ncode_r0x00449f02:\n        puVar16 = in_EDX + 1;\n        var_18h = 0x7fffffff;\n        goto code_r0x00449f09;\n    case 0x46:\n    case 0x53:\n        var_2ch = 0x1;\n        puVar16 = in_EDX + 1;\n        var_ch = NULL;\n        var_18h = 0x1;\n        goto code_r0x00449f09;\n    case 0x47:\n    case 0x54:\n        var_18h = in_EDX[1];\n        puVar16 = in_EDX + 2;\n        var_2ch = 0x1;\n        var_ch = NULL;\ncode_r0x00449f09:\n        var_14h = *puVar16;\n        var_30h = puVar16 + 1;\n        if ((var_28h != 0) && ((var_14h & 0xfc00) == 0xd800)) {\n            var_14h = (*var_30h & 0x3ff | (var_14h & 0x3ff) << 10) + 0x10000;\n            var_30h = puVar16 + 2;\n        }\n        in_EDX = var_30h;\n        puVar14 = var_30h;\n        if (puVar14 < 0x48) {\n            iVar15 = 1;\n            if (var_28h == 0) {\n                if (0 < var_ch) {\n                    do {\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x0044dc60;\n                        uVar8 = *var_8h;\n                        var_8h = var_8h + 1;\n                        if (var_14h == uVar8) {\n                            return 0;\n                        }\n                        iVar15 = iVar15 + 1;\n                    } while (iVar15 <= var_ch);\n                }\n            }\n            else if (0 < var_ch) {\n                do {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0044dc60;\n                    puVar17 = *var_8h;\n                    puVar16 = var_8h + 1;\n                    if ((puVar17 & 0xfc00) == 0xd800) {\n                        puVar17 = ((puVar17 & 0x3ff) << 10 | *puVar16 & 0x3ff) + 0x10000;\n                        puVar16 = var_8h + 2;\n                    }\n                    if (var_14h == puVar17) {\n                        return 0;\n                    }\n                    iVar15 = iVar15 + 1;\n                    var_8h = puVar16;\n                } while (iVar15 <= var_ch);\n            }\n            puVar16 = var_8h;\n            in_ECX = var_8h;\n            if (var_ch != var_18h) {\n                if (var_10h != NULL) {\n                    uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    puVar14 = var_8h;\n                    var_8h = puVar16;\n                    if (var_28h == 0) {\n                        while( true ) {\n                            var_8h = puVar16;\n                            if (uVar10 != 0) {\n                                return uVar10;\n                            }\n                            if (var_18h <= var_ch) {\n                                return 0;\n                            }\n                            if (arg_10h[0x1f] <= var_8h) break;\n                            puVar16 = var_8h + 1;\n                            if (var_14h == *var_8h) {\n                                return 0;\n                            }\n                            var_ch = var_ch + 1;\n                            var_8h = puVar14;\n                            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                            puVar14 = var_8h;\n                        }\n                    }\n                    else {\n                        while( true ) {\n                            if (uVar10 != 0) {\n                                return uVar10;\n                            }\n                            if (var_18h <= var_ch) {\n                                return 0;\n                            }\n                            if (arg_10h[0x1f] <= var_8h) break;\n                            puVar16 = *var_8h;\n                            puVar17 = var_8h + 1;\n                            if ((puVar16 & 0xfc00) == 0xd800) {\n                                puVar16 = ((puVar16 & 0x3ff) << 10 | *puVar17 & 0x3ff) + 0x10000;\n                                puVar17 = var_8h + 2;\n                            }\n                            if (var_14h == puVar16) {\n                                return 0;\n                            }\n                            var_ch = var_ch + 1;\n                            var_8h = puVar14;\n                            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                            puVar14 = var_8h;\n                            var_8h = puVar17;\n                        }\n                    }\n                    goto code_r0x0044b5ad;\n                }\n                puVar16 = var_ch;\n                var_20h = var_8h;\n                if (var_28h == 0) {\n                    for (; puVar16 < var_18h; puVar16 = puVar16 + 1) {\n                        if (arg_10h[0x1f] <= in_ECX) {\n                            if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= in_ECX && in_ECX != arg_10h[0x22])) &&\n                               (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                                return 0xfffffff4;\n                            }\n                            break;\n                        }\n                        if (var_14h == *in_ECX) break;\n                        in_ECX = in_ECX + 1;\n                    }\n                    puVar16 = in_ECX;\n                    if (var_2ch == NULL) {\n                        bVar20 = in_ECX != var_8h;\n                        var_8h = in_ECX;\n                        if (bVar20) {\n                            do {\n                                puVar16 = var_8h;\n                                uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                                if (uVar10 != 0) {\n                                    return uVar10;\n                                }\n                                in_ECX = puVar16 + -1;\n                                puVar14 = var_30h;\n                                var_8h = in_ECX;\n                            } while (in_ECX != var_20h);\n                        }\n                        goto code_r0x0040a305;\n                    }\n                }\n                else {\n                    for (; puVar16 < var_18h; puVar16 = puVar16 + 1) {\n                        if (arg_10h[0x1f] <= in_ECX) {\n                            if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= in_ECX && in_ECX != arg_10h[0x22])) &&\n                               (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                                return 0xfffffff4;\n                            }\n                            break;\n                        }\n                        puVar17 = *in_ECX;\n                        if ((puVar17 & 0xfc00) == 0xd800) {\n                            iVar15 = 2;\n                            puVar17 = ((puVar17 & 0x3ff) << 10 | in_ECX[1] & 0x3ff) + 0x10000;\n                        }\n                        else {\n                            iVar15 = 1;\n                        }\n                        if (var_14h == puVar17) break;\n                        in_ECX = in_ECX + iVar15;\n                    }\n                    puVar16 = in_ECX;\n                    if (var_2ch == NULL) {\n                        bVar20 = var_8h < in_ECX;\n                        var_8h = in_ECX;\n                        if (bVar20) {\n                            do {\n                                puVar16 = var_8h;\n                                uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                                if (uVar10 != 0) {\n                                    return uVar10;\n                                }\n                                in_ECX = puVar16 + -1;\n                                if ((puVar16[-1] & 0xfc00) == 0xdc00) {\n                                    in_ECX = puVar16 + -2;\n                                }\n                                puVar14 = var_30h;\n                                var_8h = in_ECX;\n                            } while (var_20h < in_ECX);\n                        }\n                        goto code_r0x0040a305;\n                    }\n                }\n            }\n            goto code_r0x0040a1dd;\n        }\n        if ((var_28h == 0) || (var_14h < 0x80)) {\n            var_20h = var_14h;\n            if (var_14h < 0x100) {\n                var_20h = *(arg_10h[0x10] + var_14h);\n            }\n        }\n        else {\n            var_20h = *(*((*((var_14h >> 7) + 0x4bff60) * 0x80 + (var_14h & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af414) +\n                      var_14h;\n        }\n        iVar15 = 1;\n        if (var_28h == 0) {\n            if (0 < var_ch) {\n                do {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0044dc60;\n                    if (var_14h == *var_8h) {\n                        return 0;\n                    }\n                    if (var_20h == *var_8h) {\n                        return 0;\n                    }\n                    var_8h = var_8h + 1;\n                    iVar15 = iVar15 + 1;\n                } while (iVar15 <= var_ch);\n            }\n        }\n        else if (0 < var_ch) {\n            do {\n                if (arg_10h[0x1f] <= var_8h) goto code_r0x0044dc60;\n                puVar17 = *var_8h;\n                puVar16 = var_8h + 1;\n                if ((puVar17 & 0xfc00) == 0xd800) {\n                    puVar17 = ((puVar17 & 0x3ff) << 10 | *puVar16 & 0x3ff) + 0x10000;\n                    puVar16 = var_8h + 2;\n                }\n                if (var_14h == puVar17) {\n                    return 0;\n                }\n                if (var_20h == puVar17) {\n                    return 0;\n                }\n                iVar15 = iVar15 + 1;\n                var_8h = puVar16;\n            } while (iVar15 <= var_ch);\n        }\n        puVar17 = var_8h;\n        in_ECX = var_8h;\n        puVar16 = var_8h;\n        if (var_ch == var_18h) goto code_r0x0040a1dd;\n        if (var_10h == NULL) {\n            var_10h = puVar17;\n            if (var_28h == 0) {\n                puVar16 = var_ch;\n                if (var_ch < var_18h) {\n                    while (var_8h < arg_10h[0x1f]) {\n                        if ((var_14h == *var_8h) || (var_20h == *var_8h)) goto code_r0x0044a1b2;\n                        var_8h = var_8h + 1;\n                        puVar16 = puVar16 + 1;\n                        if (var_18h <= puVar16) goto code_r0x0044a1b2;\n                    }\n                    if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n                       (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                        return 0xfffffff4;\n                    }\n                }\ncode_r0x0044a1b2:\n                in_ECX = var_8h;\n                puVar16 = var_8h;\n                if (var_2ch == NULL) {\n                    if (var_8h != puVar17) {\n                        do {\n                            puVar16 = var_8h;\n                            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                            if (uVar10 != 0) {\n                                return uVar10;\n                            }\n                            in_ECX = puVar16 + -1;\n                            puVar14 = var_30h;\n                            var_8h = in_ECX;\n                        } while (in_ECX != var_10h);\n                    }\n                    goto code_r0x0040a305;\n                }\n            }\n            else {\n                puVar16 = var_ch;\n                if (var_ch < var_18h) {\n                    while (var_8h < arg_10h[0x1f]) {\n                        puVar19 = *var_8h;\n                        if ((puVar19 & 0xfc00) == 0xd800) {\n                            iVar15 = 2;\n                            puVar19 = ((puVar19 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                        }\n                        else {\n                            iVar15 = 1;\n                        }\n                        if ((var_14h == puVar19) || (var_20h == puVar19)) goto code_r0x0044a0d6;\n                        var_8h = var_8h + iVar15;\n                        puVar16 = puVar16 + 1;\n                        if (var_18h <= puVar16) goto code_r0x0044a0d6;\n                    }\n                    if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n                       (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                        return 0xfffffff4;\n                    }\n                }\ncode_r0x0044a0d6:\n                in_ECX = var_8h;\n                puVar16 = var_8h;\n                if (var_2ch == NULL) {\n                    if (puVar17 < var_8h) {\n                        do {\n                            puVar16 = var_8h;\n                            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                            if (uVar10 != 0) {\n                                return uVar10;\n                            }\n                            in_ECX = puVar16 + -1;\n                            if ((puVar16[-1] & 0xfc00) == 0xdc00) {\n                                in_ECX = puVar16 + -2;\n                            }\n                            puVar14 = var_30h;\n                            var_8h = in_ECX;\n                        } while (var_10h < in_ECX);\n                    }\n                    goto code_r0x0040a305;\n                }\n            }\n            goto code_r0x0040a1dd;\n        }\n        uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        puVar16 = var_8h;\n        var_8h = puVar17;\n        if (var_28h == 0) {\n            while( true ) {\n                var_8h = puVar17;\n                if (uVar10 != 0) {\n                    return uVar10;\n                }\n                if (var_18h <= var_ch) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= var_8h) break;\n                if (var_14h == *var_8h) {\n                    return 0;\n                }\n                if (var_20h == *var_8h) {\n                    return 0;\n                }\n                var_ch = var_ch + 1;\n                puVar17 = var_8h + 1;\n                var_8h = puVar16;\n                uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar16 = var_8h;\n            }\n        }\n        else {\n            while( true ) {\n                if (uVar10 != 0) {\n                    return uVar10;\n                }\n                if (var_18h <= var_ch) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= var_8h) break;\n                puVar14 = *var_8h;\n                puVar17 = var_8h + 1;\n                if ((puVar14 & 0xfc00) == 0xd800) {\n                    puVar14 = ((puVar14 & 0x3ff) << 10 | *puVar17 & 0x3ff) + 0x10000;\n                    puVar17 = var_8h + 2;\n                }\n                if (var_14h == puVar14) {\n                    return 0;\n                }\n                if (var_20h == puVar14) {\n                    return 0;\n                }\n                var_ch = var_ch + 1;\n                var_8h = puVar16;\n                uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar16 = var_8h;\n                var_8h = puVar17;\n            }\n        }\n        goto code_r0x0044b5ad;\n    case 0x55:\n    case 0x56:\n    case 0x57:\n    case 0x58:\n    case 0x59:\n    case 0x5a:\n        puVar16 = in_EDX + 1;\n        var_10h = (puVar14 - 0x55U & 1) != 0;\n        var_ch = *(puVar14 + 0x4b1bf7);\n        var_14h = *(puVar14 + 0x4b1beb);\n        if (var_14h == NULL) {\n            var_14h = 0x7fffffff;\n        }\n        goto code_r0x0040a751;\n    case 0x5b:\n    case 0x5c:\n        var_14h = in_EDX[1];\n        var_ch = NULL;\n        var_10h = puVar14 == 0x5c;\n        puVar16 = in_EDX + 2;\n        goto code_r0x0040a751;\n    case 0x5d:\n        var_14h = in_EDX[1];\n        puVar16 = in_EDX + 2;\n        var_10h = 0x1;\n        var_ch = var_14h;\n        goto code_r0x0040a751;\n    case 0x5e:\n        var_ch = NULL;\n        goto code_r0x0044a483;\n    case 0x5f:\n        var_ch = 0x1;\ncode_r0x0044a483:\n        var_14h = 0x7fffffff;\ncode_r0x0044a495:\n        puVar16 = in_EDX + 1;\ncode_r0x0044a4a6:\n        var_2ch = 0x1;\ncode_r0x0040a751:\n        var_20h = *puVar16;\n        in_EDX = puVar16 + 1;\n        if ((var_20h == 0x10) || (var_20h == 0xf)) {\n            var_18h = *in_EDX;\n            var_3ch = var_20h == 0xf;\n            var_40h = puVar16[2];\n            in_EDX = puVar16 + 3;\n        }\n        else {\n            var_18h = 0xffffffff;\n        }\n        var_30h = in_EDX;\n        if (var_ch < 1) goto code_r0x0040a780;\n    // switch table (11 cases) at 0x44f337\n        switch(var_18h) {\n        case NULL:\n            if (var_3ch != 0) {\n                return 0;\n            }\n            iVar15 = 1;\n            if (0 < var_ch) {\n                do {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                    puVar16 = var_8h + 1;\n                    if ((var_28h != 0) && ((*var_8h & 0xfc00) == 0xd800)) {\n                        puVar16 = var_8h + 2;\n                    }\n                    var_8h = puVar16;\n                    iVar15 = iVar15 + 1;\n                } while (iVar15 <= var_ch);\n            }\n            break;\n        case 0x1:\n            var_1ch = 0x1;\n            if (0 < var_ch) {\n                do {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                    uVar10 = *var_8h;\n                    puVar16 = var_8h + 1;\n                    if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                        uVar10 = (*puVar16 & 0x3ff | (uVar10 & 0x3ff) << 10) + 0x10000;\n                        puVar16 = var_8h + 2;\n                    }\n                    var_8h = puVar16;\n                    cVar5 = *(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af411);\n                    if (((cVar5 == '\\t') || (cVar5 == '\\x05')) || (cVar5 == '\\b')) {\n                        uVar10 = 1;\n                    }\n                    else {\n                        uVar10 = 0;\n                    }\n                    if (uVar10 == var_3ch) {\n                        return 0;\n                    }\n                    var_1ch = var_1ch + 1;\n                } while (var_1ch <= var_ch);\n            }\n            break;\n        case 0x2:\n            var_1ch = 0x1;\n            if (0 < var_ch) {\n                do {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                    uVar10 = *var_8h;\n                    puVar16 = var_8h + 1;\n                    if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                        uVar10 = (*puVar16 & 0x3ff | (uVar10 & 0x3ff) << 10) + 0x10000;\n                        puVar16 = var_8h + 2;\n                    }\n                    var_8h = puVar16;\n                    if ((*(*(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af411) *\n                           4 + 0x4c5370) == var_40h) == var_3ch) {\n                        return 0;\n                    }\n                    var_1ch = var_1ch + 1;\n                } while (var_1ch <= var_ch);\n            }\n            break;\n        case 0x3:\n            var_1ch = 0x1;\n            if (0 < var_ch) {\n                do {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                    uVar10 = *var_8h;\n                    puVar16 = var_8h + 1;\n                    if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                        uVar10 = (*puVar16 & 0x3ff | (uVar10 & 0x3ff) << 10) + 0x10000;\n                        puVar16 = var_8h + 2;\n                    }\n                    var_8h = puVar16;\n                    if ((*(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af411) ==\n                        var_40h) == var_3ch) {\n                        return 0;\n                    }\n                    var_1ch = var_1ch + 1;\n                } while (var_1ch <= var_ch);\n            }\n            break;\n        case 0x4:\n            var_1ch = 0x1;\n            if (0 < var_ch) {\n                do {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                    uVar10 = *var_8h;\n                    puVar16 = var_8h + 1;\n                    if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                        uVar10 = (*puVar16 & 0x3ff | (uVar10 & 0x3ff) << 10) + 0x10000;\n                        puVar16 = var_8h + 2;\n                    }\n                    var_8h = puVar16;\n                    if ((*(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af410) ==\n                        var_40h) == var_3ch) {\n                        return 0;\n                    }\n                    var_1ch = var_1ch + 1;\n                } while (var_1ch <= var_ch);\n            }\n            break;\n        case 0x5:\n            var_1ch = 0x1;\n            if (0 < var_ch) {\n                do {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                    uVar10 = *var_8h;\n                    puVar16 = var_8h + 1;\n                    if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                        uVar10 = (*puVar16 & 0x3ff | (uVar10 & 0x3ff) << 10) + 0x10000;\n                        puVar16 = var_8h + 2;\n                    }\n                    var_8h = puVar16;\n                    iVar15 = *(*(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af411\n                                ) * 4 + 0x4c5370);\n                    if ((iVar15 == 1) || (iVar15 == 3)) {\n                        uVar10 = 1;\n                    }\n                    else {\n                        uVar10 = 0;\n                    }\n                    if (uVar10 == var_3ch) {\n                        return 0;\n                    }\n                    var_1ch = var_1ch + 1;\n                } while (var_1ch <= var_ch);\n            }\n            break;\n        case 0x6:\n        case 0x7:\n            var_24h = 0x1;\n            if (0 < var_ch) {\n                do {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                    uVar10 = *var_8h;\n                    puVar16 = var_8h + 1;\n                    if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                        uVar10 = ((uVar10 & 0x3ff) << 10 | *puVar16 & 0x3ff) + 0x10000;\n                        puVar16 = var_8h + 2;\n                    }\n                    var_8h = puVar16;\n                    if (uVar10 < 0x180f) {\n                        if (uVar10 == 0x180e) goto code_r0x0044a9dd;\n                        if (uVar10 < 0x86) {\n                            if ((uVar10 == 0x85) || ((8 < uVar10 && ((uVar10 < 0xe || (uVar10 == 0x20))))))\n                            goto code_r0x0044a9dd;\n                        }\n                        else if ((uVar10 == 0xa0) || (uVar10 == 0x1680)) goto code_r0x0044a9dd;\ncode_r0x0044a99b:\n                        if ((*(*(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af411\n                                ) * 4 + 0x4c5370) == 6) == var_3ch) {\n                            return 0;\n                        }\n                    }\n                    else {\n                        if (0x202f < uVar10) {\n                            if ((uVar10 == 0x205f) || (uVar10 == 0x3000)) goto code_r0x0044a9dd;\n                            goto code_r0x0044a99b;\n                        }\n    // switch table (42 cases) at 0x44f363\n                        switch(uVar10) {\n                        case 0x2000:\n                        case 0x2001:\n                        case 0x2002:\n                        case 0x2003:\n                        case 0x2004:\n                        case 0x2005:\n                        case 0x2006:\n                        case 0x2007:\n                        case 0x2008:\n                        case 0x2009:\n                        case 0x200a:\n                        case 0x2028:\n                        case 0x2029:\n                        default:\ncode_r0x0044a9dd:\n                            if (var_3ch != 0) {\n                                return 0;\n                            }\n                            break;\n                        case 0x200b:\n                        case 0x200c:\n                        case 0x200d:\n                        case 0x200e:\n                        case 0x200f:\n                        case 0x2010:\n                        case 0x2011:\n                        case 0x2012:\n                        case 0x2013:\n                        case 0x2014:\n                        case 0x2015:\n                        case 0x2016:\n                        case 0x2017:\n                        case 0x2018:\n                        case 0x2019:\n                        case 0x201a:\n                        case 0x201b:\n                        case 0x201c:\n                        case 0x201d:\n                        case 0x201e:\n                        case 0x201f:\n                        case 0x2020:\n                        case 0x2021:\n                        case 0x2022:\n                        case 0x2023:\n                        case 0x2024:\n                        case 0x2025:\n                        case 0x2026:\n                        case 0x2027:\n                            goto code_r0x0044a99b;\n                        }\n                    }\n                    var_24h = var_24h + 1;\n                } while (var_24h <= var_ch);\n            }\n            break;\n        case 0x8:\n            var_1ch = 0x1;\n            if (0 < var_ch) {\n                do {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                    uVar10 = *var_8h;\n                    puVar16 = var_8h + 1;\n                    if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                        uVar10 = (*puVar16 & 0x3ff | (uVar10 & 0x3ff) << 10) + 0x10000;\n                        puVar16 = var_8h + 2;\n                    }\n                    var_8h = puVar16;\n                    iVar15 = *(*(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af411\n                                ) * 4 + 0x4c5370);\n                    if (((iVar15 == 1) || (iVar15 == 3)) || (uVar10 == 0x5f)) {\n                        uVar10 = 1;\n                    }\n                    else {\n                        uVar10 = 0;\n                    }\n                    if (uVar10 == var_3ch) {\n                        return 0;\n                    }\n                    var_1ch = var_1ch + 1;\n                } while (var_1ch <= var_ch);\n            }\n            break;\n        case 0x9:\n            var_1ch = 0x1;\n            if (0 < var_ch) {\n                do {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                    var_24h = *var_8h;\n                    puVar16 = var_8h + 1;\n                    if ((var_28h != 0) && ((var_24h & 0xfc00) == 0xd800)) {\n                        var_24h = ((var_24h & 0x3ff) << 10 | *puVar16 & 0x3ff) + 0x10000;\n                        puVar16 = var_8h + 2;\n                    }\n                    var_8h = puVar16;\n                    ppuVar3 = var_40h * 4 + 0x4b0a90;\n                    puVar16 = *(var_40h * 4 + 0x4b0a90);\n                    while ((puVar16 <= var_24h && (ppuVar3 = ppuVar3 + 1,  var_24h != puVar16))) {\n                        puVar16 = *ppuVar3;\n                    }\n                    if (var_3ch != 0) {\n                        return 0;\n                    }\n                    var_1ch = var_1ch + 1;\n                } while (var_1ch <= var_ch);\n            }\n            break;\n        case 0xa:\n            var_1ch = 0x1;\n            if (0 < var_ch) {\n                do {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                    uVar10 = *var_8h;\n                    puVar16 = var_8h + 1;\n                    if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                        uVar10 = (*puVar16 & 0x3ff | (uVar10 & 0x3ff) << 10) + 0x10000;\n                        puVar16 = var_8h + 2;\n                    }\n                    var_8h = puVar16;\n                    if (((((uVar10 == 0x24) || (uVar10 == 0x40)) || (uVar10 == 0x60)) ||\n                        ((0x9f < uVar10 && (uVar10 < 0xd800)))) || (0xdfff < uVar10)) {\n                        uVar10 = 1;\n                    }\n                    else {\n                        uVar10 = 0;\n                    }\n                    if (uVar10 == var_3ch) {\n                        return 0;\n                    }\n                    var_1ch = var_1ch + 1;\n                } while (var_1ch <= var_ch);\n            }\n            break;\n        default:\n            if (var_20h == 0x16) {\n                var_34h = 0x1;\n                if (0 < var_ch) {\n                    do {\n                        var_1ch = arg_10h[0x1f];\n                        if (var_1ch <= var_8h) goto code_r0x0044b5ad;\n                        uVar10 = *var_8h;\n                        puVar16 = var_8h + 1;\n                        if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                            uVar10 = (*puVar16 & 0x3ff | (uVar10 & 0x3ff) << 10) + 0x10000;\n                            puVar16 = var_8h + 2;\n                        }\n                        var_8h = puVar16;\n                        var_38h = *(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 +\n                                   0x4af412);\n                        puVar16 = arg_10h[0x1f];\n                        puVar14 = var_38h;\n                        var_24h = var_8h;\n                        if (var_8h < arg_10h[0x1f]) {\n                            do {\n                                iVar15 = 1;\n                                uVar10 = *var_24h;\n                                if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                                    iVar15 = 2;\n                                    uVar10 = ((uVar10 & 0x3ff) << 10 | var_24h[1] & 0x3ff) + 0x10000;\n                                }\n                                uVar6 = *(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 +\n                                         0x4af412);\n                                puVar16 = var_1ch;\n                                var_8h = var_24h;\n                            } while (((*(puVar14 * 4 + 0x4c2210) & 1 << (uVar6 & 0x1f)) != 0) &&\n                                    (var_24h = var_24h + iVar15,  puVar14 = uVar6,  var_8h = var_24h,  var_24h < var_1ch\n                                    ));\n                        }\n                        if ((arg_10h[0x23] != 0) &&\n                           (((puVar16 <= var_8h && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n                            (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])))) {\n                            return 0xfffffff4;\n                        }\n                        var_34h = var_34h + 1;\n                        var_24h = var_8h;\n                    } while (var_34h <= var_ch);\n                }\n                break;\n            }\n            if (var_28h == 0) {\n    // switch table (16 cases) at 0x44f3d7\n                switch(var_20h + -3) {\n                case NULL:\n                    iVar15 = 1;\n                    if (0 < var_ch) {\n                        do {\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                            var_38h = 0xff;\n                            if ((*var_8h < 0x100) && ((*(*var_8h + arg_10h[0x11]) & 4) != 0)) {\n                                return 0;\n                            }\n                            var_8h = var_8h + 1;\n                            iVar15 = iVar15 + 1;\n                        } while (iVar15 <= var_ch);\n                    }\n                    break;\n                case 0x1:\n                    iVar15 = 1;\n                    if (0 < var_ch) {\n                        do {\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                            if (0xff < *var_8h) {\n                                return 0;\n                            }\n                            if ((*(*var_8h + arg_10h[0x11]) & 4) == 0) {\n                                return 0;\n                            }\n                            var_8h = var_8h + 1;\n                            iVar15 = iVar15 + 1;\n                        } while (iVar15 <= var_ch);\n                    }\n                    break;\n                case 0x2:\n                    iVar15 = 1;\n                    if (0 < var_ch) {\n                        do {\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                            var_38h = 0xff;\n                            if ((*var_8h < 0x100) && ((*(*var_8h + arg_10h[0x11]) & 1) != 0)) {\n                                return 0;\n                            }\n                            var_8h = var_8h + 1;\n                            iVar15 = iVar15 + 1;\n                        } while (iVar15 <= var_ch);\n                    }\n                    break;\n                case 0x3:\n                    iVar15 = 1;\n                    if (0 < var_ch) {\n                        do {\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                            if (0xff < *var_8h) {\n                                return 0;\n                            }\n                            if ((*(*var_8h + arg_10h[0x11]) & 1) == 0) {\n                                return 0;\n                            }\n                            var_8h = var_8h + 1;\n                            iVar15 = iVar15 + 1;\n                        } while (iVar15 <= var_ch);\n                    }\n                    break;\n                case 0x4:\n                    iVar15 = 1;\n                    if (0 < var_ch) {\n                        do {\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                            var_38h = 0xff;\n                            if ((*var_8h < 0x100) && ((*(*var_8h + arg_10h[0x11]) & 0x10) != 0)) {\n                                return 0;\n                            }\n                            var_8h = var_8h + 1;\n                            iVar15 = iVar15 + 1;\n                        } while (iVar15 <= var_ch);\n                    }\n                    break;\n                case 0x5:\n                    iVar15 = 1;\n                    if (0 < var_ch) {\n                        do {\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                            if (0xff < *var_8h) {\n                                return 0;\n                            }\n                            if ((*(*var_8h + arg_10h[0x11]) & 0x10) == 0) {\n                                return 0;\n                            }\n                            var_8h = var_8h + 1;\n                            iVar15 = iVar15 + 1;\n                        } while (iVar15 <= var_ch);\n                    }\n                    break;\n                case 0x6:\n                    var_1ch = 0x1;\n                    if (0 < var_ch) {\n                        do {\n                            puVar14 = var_8h;\n                            puVar16 = arg_10h[0x1f];\n                            if (puVar16 <= var_8h) goto code_r0x0044b5ad;\n                            if (arg_10h[6] == 0) {\n                                if ((var_8h <= puVar16 + -arg_10h[7]) && (*var_8h == *(arg_10h + 0xd))) {\n                                    if (arg_10h[7] == 1) {\n                                        return 0;\n                                    }\n                                    if (var_8h[1] == *(arg_10h + 0x36)) {\n                                        return 0;\n                                    }\n                                }\n                            }\n                            else {\n                                iVar15 = fcn.00408665(puVar16, arg_10h + 7, 0);\n                                if (iVar15 != 0) {\n                                    return 0;\n                                }\n                            }\n                            if (((((arg_10h[0x23] != 0) && (arg_10h[0x1f] <= puVar14 + 1)) && (arg_10h[6] == 0)) &&\n                                ((arg_10h[7] == 2 && (*puVar14 == *(arg_10h + 0xd))))) &&\n                               (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                                return 0xfffffff4;\n                            }\n                            var_8h = puVar14 + 1;\n                            var_1ch = var_1ch + 1;\n                        } while (var_1ch <= var_ch);\n                    }\n                    break;\n                case 0x7:\n                    puVar16 = arg_10h[0x1f] + var_ch * -2;\n                    goto joined_r0x0044b5eb;\n                case 0x8:\n                    puVar16 = arg_10h[0x1f] + var_ch * -2;\njoined_r0x0044b5eb:\n                    if (puVar16 < var_8h) goto code_r0x0044b5ad;\n                    var_8h = var_8h + var_ch;\n                    break;\n                default:\n                    goto code_r0x0044eef0;\n                case 0xb:\n                    iVar15 = 1;\n                    if (0 < var_ch) {\n                        do {\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                            uVar10 = *var_8h;\n                            puVar16 = var_8h + 1;\n                            if (uVar10 < 0xe) {\n                                if (uVar10 == 0xd) {\n                                    if ((puVar16 < arg_10h[0x1f]) && (*puVar16 == 10)) {\n                                        puVar16 = var_8h + 2;\n                                    }\n                                }\n                                else if (uVar10 != 10) {\n                                    if (1 < uVar10 - 0xb) {\n                                        return 0;\n                                    }\n                                    goto code_r0x0044b65b;\n                                }\n                            }\n                            else {\n                                if ((uVar10 != 0x85) && (1 < uVar10 - 0x2028)) {\n                                    return 0;\n                                }\ncode_r0x0044b65b:\n                                if (arg_10h[0x1b] != 0) {\n                                    return 0;\n                                }\n                            }\n                            var_8h = puVar16;\n                            iVar15 = iVar15 + 1;\n                        } while (iVar15 <= var_ch);\n                    }\n                    break;\n                case 0xc:\n                    iVar15 = 1;\n                    if (0 < var_ch) {\n                        do {\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                            uVar8 = *var_8h;\n                            var_8h = var_8h + 1;\n                            if (uVar8 < 0x180f) {\n                                if (uVar8 == 0x180e) {\n                                    return 0;\n                                }\n                                if (uVar8 < 0xa1) {\n                                    if (uVar8 == 0xa0) {\n                                        return 0;\n                                    }\n                                    if (uVar8 == 9) {\n                                        return 0;\n                                    }\n                                    if (uVar8 == 0x20) {\n                                        return 0;\n                                    }\n                                }\n                                else if (uVar8 == 0x1680) {\n                                    return 0;\n                                }\n                            }\n                            else if (uVar8 < 0x2060) {\n                                if (uVar8 == 0x205f) {\n                                    return 0;\n                                }\n                                if (0x1fff < uVar8) {\n                                    if (uVar8 < 0x200b) {\n                                        return 0;\n                                    }\n                                    if (uVar8 == 0x202f) {\n                                        return 0;\n                                    }\n                                }\n                            }\n                            else if (uVar8 == 0x3000) {\n                                return 0;\n                            }\n                            iVar15 = iVar15 + 1;\n                        } while (iVar15 <= var_ch);\n                    }\n                    break;\n                case 0xd:\n                    iVar15 = 1;\n                    if (0 < var_ch) {\n                        do {\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                            uVar8 = *var_8h;\n                            var_8h = var_8h + 1;\n                            if (uVar8 < 0x180f) {\n                                if (uVar8 != 0x180e) {\n                                    if (uVar8 < 0xa1) {\n                                        if (((uVar8 != 0xa0) && (uVar8 != 9)) && (uVar8 != 0x20)) {\n                                            return 0;\n                                        }\n                                    }\n                                    else if (uVar8 != 0x1680) {\n                                        return 0;\n                                    }\n                                }\n                            }\n                            else if (uVar8 < 0x2060) {\n                                if (uVar8 != 0x205f) {\n                                    if (uVar8 < 0x2000) {\n                                        return 0;\n                                    }\n                                    if ((0x200a < uVar8) && (uVar8 != 0x202f)) {\n                                        return 0;\n                                    }\n                                }\n                            }\n                            else if (uVar8 != 0x3000) {\n                                return 0;\n                            }\n                            iVar15 = iVar15 + 1;\n                        } while (iVar15 <= var_ch);\n                    }\n                    break;\n                case 0xe:\n                    iVar15 = 1;\n                    if (0 < var_ch) {\n                        do {\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                            uVar8 = *var_8h;\n                            var_8h = var_8h + 1;\n                            if (uVar8 < 0x86) {\n                                if (uVar8 == 0x85) {\n                                    return 0;\n                                }\n                                if ((9 < uVar8) && (uVar8 < 0xe)) {\n                                    return 0;\n                                }\n                            }\n                            else if ((0x2027 < uVar8) && (uVar8 < 0x202a)) {\n                                return 0;\n                            }\n                            iVar15 = iVar15 + 1;\n                        } while (iVar15 <= var_ch);\n                    }\n                    break;\n                case 0xf:\n                    iVar15 = 1;\n                    if (0 < var_ch) {\n                        do {\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                            uVar10 = *var_8h;\n                            var_8h = var_8h + 1;\n                            if (uVar10 < 0x86) {\n                                if ((uVar10 != 0x85) && (3 < uVar10 - 10)) {\n                                    return 0;\n                                }\n                            }\n                            else if (1 < uVar10 - 0x2028) {\n                                return 0;\n                            }\n                            iVar15 = iVar15 + 1;\n                        } while (iVar15 <= var_ch);\n                    }\n                }\n            }\n            else {\n    // switch table (16 cases) at 0x44f397\n                switch(var_20h + -3) {\n                case NULL:\n                    var_1ch = 0x1;\n                    if (0 < var_ch) {\n                        do {\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                            uVar10 = *var_8h;\n                            puVar16 = var_8h + 1;\n                            if ((uVar10 & 0xfc00) == 0xd800) {\n                                uVar10 = ((uVar10 & 0x3ff) << 10 | *puVar16 & 0x3ff) + 0x10000;\n                                puVar16 = var_8h + 2;\n                            }\n                            if ((uVar10 < 0x80) && ((*(uVar10 + arg_10h[0x11]) & 4) != 0)) {\n                                return 0;\n                            }\n                            var_1ch = var_1ch + 1;\n                            var_8h = puVar16;\n                        } while (var_1ch <= var_ch);\n                    }\n                    break;\n                case 0x1:\n                    iVar15 = 1;\n                    if (0 < var_ch) {\n                        do {\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                            if (0x7f < *var_8h) {\n                                return 0;\n                            }\n                            if ((*(*var_8h + arg_10h[0x11]) & 4) == 0) {\n                                return 0;\n                            }\n                            var_8h = var_8h + 1;\n                            iVar15 = iVar15 + 1;\n                        } while (iVar15 <= var_ch);\n                    }\n                    break;\n                case 0x2:\n                    var_1ch = 0x1;\n                    if (0 < var_ch) {\n                        do {\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                            if ((*var_8h < 0x80) && ((*(*var_8h + arg_10h[0x11]) & 1) != 0)) {\n                                return 0;\n                            }\n                            puVar16 = var_8h + 1;\n                            if ((puVar16 < arg_10h[0x1f]) && ((*puVar16 & 0xfc00) == 0xdc00)) {\n                                puVar16 = var_8h + 2;\n                            }\n                            var_8h = puVar16;\n                            var_1ch = var_1ch + 1;\n                        } while (var_1ch <= var_ch);\n                    }\n                    break;\n                case 0x3:\n                    iVar15 = 1;\n                    if (0 < var_ch) {\n                        do {\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                            if (0x7f < *var_8h) {\n                                return 0;\n                            }\n                            if ((*(*var_8h + arg_10h[0x11]) & 1) == 0) {\n                                return 0;\n                            }\n                            var_8h = var_8h + 1;\n                            iVar15 = iVar15 + 1;\n                        } while (iVar15 <= var_ch);\n                    }\n                    break;\n                case 0x4:\n                    var_1ch = 0x1;\n                    if (0 < var_ch) {\n                        do {\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                            if ((*var_8h < 0x80) && ((*(*var_8h + arg_10h[0x11]) & 0x10) != 0)) {\n                                return 0;\n                            }\n                            puVar16 = var_8h + 1;\n                            if ((puVar16 < arg_10h[0x1f]) && ((*puVar16 & 0xfc00) == 0xdc00)) {\n                                puVar16 = var_8h + 2;\n                            }\n                            var_8h = puVar16;\n                            var_1ch = var_1ch + 1;\n                        } while (var_1ch <= var_ch);\n                    }\n                    break;\n                case 0x5:\n                    iVar15 = 1;\n                    if (0 < var_ch) {\n                        do {\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                            if (0x7f < *var_8h) {\n                                return 0;\n                            }\n                            if ((*(*var_8h + arg_10h[0x11]) & 0x10) == 0) {\n                                return 0;\n                            }\n                            var_8h = var_8h + 1;\n                            iVar15 = iVar15 + 1;\n                        } while (iVar15 <= var_ch);\n                    }\n                    break;\n                case 0x6:\n                    var_1ch = 0x1;\n                    if (0 < var_ch) {\n                        puVar16 = arg_10h[0x1f];\n                        do {\n                            puVar14 = var_8h;\n                            if (puVar16 <= var_8h) goto code_r0x0044b5ad;\n                            if (arg_10h[6] == 0) {\n                                if ((var_8h <= puVar16 + -arg_10h[7]) && (*var_8h == *(arg_10h + 0xd))) {\n                                    if (arg_10h[7] == 1) {\n                                        return 0;\n                                    }\n                                    if (var_8h[1] == *(arg_10h + 0x36)) {\n                                        return 0;\n                                    }\n                                }\n                            }\n                            else {\n                                iVar15 = fcn.00408665(puVar16, arg_10h + 7, var_28h);\n                                if (iVar15 != 0) {\n                                    return 0;\n                                }\n                            }\n                            if ((((arg_10h[0x23] != 0) && (arg_10h[0x1f] <= puVar14 + 1)) && (arg_10h[6] == 0)) &&\n                               (((arg_10h[7] == 2 && (*puVar14 == *(arg_10h + 0xd))) &&\n                                (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])))) {\n                                return 0xfffffff4;\n                            }\n                            puVar16 = arg_10h[0x1f];\n                            var_8h = puVar14 + 1;\n                            if ((var_8h < puVar16) && ((*var_8h & 0xfc00) == 0xdc00)) {\n                                var_8h = puVar14 + 2;\n                            }\n                            var_1ch = var_1ch + 1;\n                        } while (var_1ch <= var_ch);\n                    }\n                    break;\n                case 0x7:\n                    iVar15 = 1;\n                    if (0 < var_ch) {\n                        do {\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                            puVar16 = var_8h + 1;\n                            if ((puVar16 < arg_10h[0x1f]) && (var_38h = 0xdc00,  (*puVar16 & 0xfc00) == 0xdc00)) {\n                                puVar16 = var_8h + 2;\n                            }\n                            var_8h = puVar16;\n                            iVar15 = iVar15 + 1;\n                        } while (iVar15 <= var_ch);\n                    }\n                    break;\n                case 0x8:\n                    if (arg_10h[0x1f] + var_ch * -2 < var_8h) {\n                        return 0;\n                    }\n                    var_8h = var_8h + var_ch;\n                    break;\n                default:\n                    goto code_r0x0044eef0;\n                case 0xb:\n                    var_1ch = 0x1;\n                    if (0 < var_ch) {\n                        puVar16 = arg_10h[0x1f];\n                        do {\n                            if (puVar16 <= var_8h) goto code_r0x0044b5ad;\n                            uVar10 = *var_8h;\n                            puVar14 = var_8h + 1;\n                            if ((uVar10 & 0xfc00) == 0xd800) {\n                                uVar10 = ((uVar10 & 0x3ff) << 10 | *puVar14 & 0x3ff) + 0x10000;\n                                puVar14 = var_8h + 2;\n                            }\n                            var_8h = puVar14;\n                            if (uVar10 < 0xe) {\n                                if (uVar10 != 0xd) {\n                                    if (uVar10 != 10) {\n                                        if (1 < uVar10 - 0xb) {\n                                            return 0;\n                                        }\n                                        goto code_r0x0044afb7;\n                                    }\n                                    goto code_r0x0044afc1;\n                                }\n                                puVar16 = arg_10h[0x1f];\n                                if ((puVar14 < puVar16) && (*puVar14 == 10)) {\n                                    var_8h = puVar14 + 1;\n                                }\n                            }\n                            else {\n                                if ((uVar10 != 0x85) && (1 < uVar10 - 0x2028)) {\n                                    return 0;\n                                }\ncode_r0x0044afb7:\n                                if (arg_10h[0x1b] != 0) {\n                                    return 0;\n                                }\ncode_r0x0044afc1:\n                                puVar16 = arg_10h[0x1f];\n                            }\n                            var_1ch = var_1ch + 1;\n                        } while (var_1ch <= var_ch);\n                    }\n                    break;\n                case 0xc:\n                    iVar15 = 1;\n                    if (0 < var_ch) {\n                        do {\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                            uVar10 = *var_8h;\n                            puVar16 = var_8h + 1;\n                            if ((uVar10 & 0xfc00) == 0xd800) {\n                                uVar10 = ((uVar10 & 0x3ff) << 10 | *puVar16 & 0x3ff) + 0x10000;\n                                puVar16 = var_8h + 2;\n                            }\n                            if (uVar10 < 0x180f) {\n                                if (uVar10 == 0x180e) {\n                                    return 0;\n                                }\n                                if (uVar10 < 0xa1) {\n                                    if (uVar10 == 0xa0) {\n                                        return 0;\n                                    }\n                                    if (uVar10 == 9) {\n                                        return 0;\n                                    }\n                                    if (uVar10 == 0x20) {\n                                        return 0;\n                                    }\n                                }\n                                else if (uVar10 == 0x1680) {\n                                    return 0;\n                                }\n                            }\n                            else if (uVar10 < 0x2060) {\n                                if (uVar10 == 0x205f) {\n                                    return 0;\n                                }\n                                if (0x1fff < uVar10) {\n                                    if (uVar10 < 0x200b) {\n                                        return 0;\n                                    }\n                                    if (uVar10 == 0x202f) {\n                                        return 0;\n                                    }\n                                }\n                            }\n                            else if (uVar10 == 0x3000) {\n                                return 0;\n                            }\n                            iVar15 = iVar15 + 1;\n                            var_8h = puVar16;\n                        } while (iVar15 <= var_ch);\n                    }\n                    break;\n                case 0xd:\n                    iVar15 = 1;\n                    if (0 < var_ch) {\n                        do {\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                            uVar10 = *var_8h;\n                            puVar16 = var_8h + 1;\n                            if ((uVar10 & 0xfc00) == 0xd800) {\n                                uVar10 = ((uVar10 & 0x3ff) << 10 | *puVar16 & 0x3ff) + 0x10000;\n                                puVar16 = var_8h + 2;\n                            }\n                            if (uVar10 < 0x180f) {\n                                if (uVar10 != 0x180e) {\n                                    if (uVar10 < 0xa1) {\n                                        if (((uVar10 != 0xa0) && (uVar10 != 9)) && (uVar10 != 0x20)) {\n                                            return 0;\n                                        }\n                                    }\n                                    else if (uVar10 != 0x1680) {\n                                        return 0;\n                                    }\n                                }\n                            }\n                            else if (uVar10 < 0x2060) {\n                                if (uVar10 != 0x205f) {\n                                    if (uVar10 < 0x2000) {\n                                        return 0;\n                                    }\n                                    if ((0x200a < uVar10) && (uVar10 != 0x202f)) {\n                                        return 0;\n                                    }\n                                }\n                            }\n                            else if (uVar10 != 0x3000) {\n                                return 0;\n                            }\n                            iVar15 = iVar15 + 1;\n                            var_8h = puVar16;\n                        } while (iVar15 <= var_ch);\n                    }\n                    break;\n                case 0xe:\n                    iVar15 = 1;\n                    if (0 < var_ch) {\n                        do {\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                            uVar10 = *var_8h;\n                            puVar16 = var_8h + 1;\n                            if ((uVar10 & 0xfc00) == 0xd800) {\n                                uVar10 = ((uVar10 & 0x3ff) << 10 | *puVar16 & 0x3ff) + 0x10000;\n                                puVar16 = var_8h + 2;\n                            }\n                            if (uVar10 < 0x86) {\n                                if (uVar10 == 0x85) {\n                                    return 0;\n                                }\n                                if ((9 < uVar10) && (uVar10 < 0xe)) {\n                                    return 0;\n                                }\n                            }\n                            else if ((0x2027 < uVar10) && (uVar10 < 0x202a)) {\n                                return 0;\n                            }\n                            iVar15 = iVar15 + 1;\n                            var_8h = puVar16;\n                        } while (iVar15 <= var_ch);\n                    }\n                    break;\n                case 0xf:\n                    iVar15 = 1;\n                    if (0 < var_ch) {\n                        do {\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n                            uVar10 = *var_8h;\n                            puVar16 = var_8h + 1;\n                            if ((uVar10 & 0xfc00) == 0xd800) {\n                                uVar10 = ((uVar10 & 0x3ff) << 10 | *puVar16 & 0x3ff) + 0x10000;\n                                puVar16 = var_8h + 2;\n                            }\n                            if (uVar10 < 0x86) {\n                                if ((uVar10 != 0x85) && (3 < uVar10 - 10)) {\n                                    return 0;\n                                }\n                            }\n                            else if (1 < uVar10 - 0x2028) {\n                                return 0;\n                            }\n                            iVar15 = iVar15 + 1;\n                            var_8h = puVar16;\n                        } while (iVar15 <= var_ch);\n                    }\n                }\n            }\n            break;\n        case 0xbad1abe1:\n            goto code_r0x0044eef0;\n        }\ncode_r0x0040a780:\n        puVar17 = var_8h;\n        in_ECX = var_8h;\n        puVar16 = var_8h;\n        if (var_ch == var_14h) goto code_r0x0040a1dd;\n        if (var_10h == NULL) {\n            puVar14 = var_30h;\n            var_10h = puVar17;\n            if (-1 < var_18h) {\n                if (0xa < var_18h) {\n                    return 0xfffffff2;\n                }\n    // switch table (11 cases) at 0x44f417\n                switch(*(var_18h * 4 + 0x44f417)) {\n                case 0x44ba42:\n                    for (; var_ch < var_14h; var_ch = var_ch + 1) {\n                        if (arg_10h[0x1f] <= var_8h) {\n                            if ((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) {\n                                arg_10h[0x1a] = 1;\n                                uVar10 = arg_10h[0x23];\n                                goto joined_r0x0044bff0;\n                            }\n                            break;\n                        }\n                        iVar15 = 1;\n                        if ((var_28h != 0) && (var_38h = 0xd800,  (*var_8h & 0xfc00) == 0xd800)) {\n                            iVar15 = 2;\n                        }\n                        if (var_3ch != 0) break;\n                        var_8h = var_8h + iVar15;\n                    }\n                    break;\n                case 0x44bad2:\n                    for (; var_ch < var_14h; var_ch = var_ch + 1) {\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x0044bb90;\n                        uVar10 = *var_8h;\n                        var_38h = 0x1;\n                        if (var_28h == 0) {\n                            iVar15 = 1;\n                        }\n                        else if ((uVar10 & 0xfc00) == 0xd800) {\n                            iVar15 = 2;\n                            uVar10 = (var_8h[1] & 0x3ff | (uVar10 & 0x3ff) << 10) + 0x10000;\n                        }\n                        else {\n                            iVar15 = 1;\n                        }\n                        cVar5 = *(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 +\n                                 0x4af411);\n                        if (((cVar5 == '\\t') || (cVar5 == '\\x05')) || (cVar5 == '\\b')) {\n                            uVar10 = 1;\n                        }\n                        else {\n                            uVar10 = 0;\n                        }\n                        if (uVar10 == var_3ch) break;\n                        var_8h = var_8h + iVar15;\n                    }\n                    break;\n                case 0x44bbc2:\n                    for (; var_ch < var_14h; var_ch = var_ch + 1) {\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x0044bb90;\n                        uVar10 = *var_8h;\n                        var_38h = 0x1;\n                        if (var_28h == 0) {\n                            iVar15 = 1;\n                        }\n                        else if ((uVar10 & 0xfc00) == 0xd800) {\n                            iVar15 = 2;\n                            uVar10 = (var_8h[1] & 0x3ff | (uVar10 & 0x3ff) << 10) + 0x10000;\n                        }\n                        else {\n                            iVar15 = 1;\n                        }\n                        if ((*(*(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af411\n                                ) * 4 + 0x4c5370) == var_40h) == var_3ch) break;\n                        var_8h = var_8h + iVar15;\n                    }\n                    break;\n                case 0x44bc76:\n                    for (; var_ch < var_14h; var_ch = var_ch + 1) {\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x0044bb90;\n                        uVar10 = *var_8h;\n                        var_38h = 0x1;\n                        if (var_28h == 0) {\n                            iVar15 = 1;\n                        }\n                        else if ((uVar10 & 0xfc00) == 0xd800) {\n                            iVar15 = 2;\n                            uVar10 = (var_8h[1] & 0x3ff | (uVar10 & 0x3ff) << 10) + 0x10000;\n                        }\n                        else {\n                            iVar15 = 1;\n                        }\n                        if ((*(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af411)\n                            == var_40h) == var_3ch) break;\n                        var_8h = var_8h + iVar15;\n                    }\n                    break;\n                case 0x44bd24:\n                    for (; var_ch < var_14h; var_ch = var_ch + 1) {\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x0044bb90;\n                        uVar10 = *var_8h;\n                        var_38h = 0x1;\n                        if (var_28h == 0) {\n                            iVar15 = 1;\n                        }\n                        else if ((uVar10 & 0xfc00) == 0xd800) {\n                            iVar15 = 2;\n                            uVar10 = (var_8h[1] & 0x3ff | (uVar10 & 0x3ff) << 10) + 0x10000;\n                        }\n                        else {\n                            iVar15 = 1;\n                        }\n                        if ((*(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af410)\n                            == var_40h) == var_3ch) break;\n                        var_8h = var_8h + iVar15;\n                    }\n                    break;\n                case 0x44bdd2:\n                    for (; var_ch < var_14h; var_ch = var_ch + 1) {\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x0044bb90;\n                        uVar10 = *var_8h;\n                        var_38h = 0x1;\n                        if (var_28h == 0) {\n                            iVar15 = 1;\n                        }\n                        else if ((uVar10 & 0xfc00) == 0xd800) {\n                            iVar15 = 2;\n                            uVar10 = (var_8h[1] & 0x3ff | (uVar10 & 0x3ff) << 10) + 0x10000;\n                        }\n                        else {\n                            iVar15 = 1;\n                        }\n                        iVar13 = *(*(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 +\n                                    0x4af411) * 4 + 0x4c5370);\n                        if ((iVar13 == 1) || (iVar13 == 3)) {\n                            uVar10 = 1;\n                        }\n                        else {\n                            uVar10 = 0;\n                        }\n                        if (uVar10 == var_3ch) break;\n                        var_8h = var_8h + iVar15;\n                    }\n                    break;\n                case 0x44be92:\n                    for (; var_ch < var_14h; var_ch = var_ch + 1) {\n                        puVar16 = 0x1;\n                        var_24h = 0x1;\n                        if (arg_10h[0x1f] <= var_8h) {\n                            if ((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) {\n                                arg_10h[0x1a] = 1;\n                                uVar10 = arg_10h[0x23];\n                                goto joined_r0x0044bff0;\n                            }\n                            break;\n                        }\n                        uVar10 = *var_8h;\n                        if (var_28h != 0) {\n                            if ((uVar10 & 0xfc00) == 0xd800) {\n                                puVar16 = 0x2;\n                                uVar10 = ((uVar10 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                                var_24h = 0x2;\n                            }\n                            else {\n                                puVar16 = 0x1;\n                            }\n                        }\n                        if (uVar10 < 0x180f) {\n                            if (uVar10 == 0x180e) goto code_r0x0044bfa9;\n                            if (uVar10 < 0x86) {\n                                if ((uVar10 == 0x85) || ((8 < uVar10 && ((uVar10 < 0xe || (uVar10 == 0x20))))))\n                                goto code_r0x0044bfa9;\n                            }\n                            else if ((uVar10 == 0xa0) || (uVar10 == 0x1680)) goto code_r0x0044bfa9;\ncode_r0x0044bf67:\n                            puVar16 = var_24h;\n                            if ((*(*(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 +\n                                    0x4af411) * 4 + 0x4c5370) == 6) == var_3ch) break;\n                        }\n                        else {\n                            if (0x202f < uVar10) {\n                                if ((uVar10 == 0x205f) || (uVar10 == 0x3000)) goto code_r0x0044bfa9;\n                                goto code_r0x0044bf67;\n                            }\n    // switch table (42 cases) at 0x44f443\n                            switch(uVar10) {\n                            case 0x2000:\n                            case 0x2001:\n                            case 0x2002:\n                            case 0x2003:\n                            case 0x2004:\n                            case 0x2005:\n                            case 0x2006:\n                            case 0x2007:\n                            case 0x2008:\n                            case 0x2009:\n                            case 0x200a:\n                            case 0x2028:\n                            case 0x2029:\n                                puVar16 = var_24h;\n                                break;\n                            case 0x200b:\n                            case 0x200c:\n                            case 0x200d:\n                            case 0x200e:\n                            case 0x200f:\n                            case 0x2010:\n                            case 0x2011:\n                            case 0x2012:\n                            case 0x2013:\n                            case 0x2014:\n                            case 0x2015:\n                            case 0x2016:\n                            case 0x2017:\n                            case 0x2018:\n                            case 0x2019:\n                            case 0x201a:\n                            case 0x201b:\n                            case 0x201c:\n                            case 0x201d:\n                            case 0x201e:\n                            case 0x201f:\n                            case 0x2020:\n                            case 0x2021:\n                            case 0x2022:\n                            case 0x2023:\n                            case 0x2024:\n                            case 0x2025:\n                            case 0x2026:\n                            case 0x2027:\n                                goto code_r0x0044bf67;\n                            }\ncode_r0x0044bfa9:\n                            if (var_3ch != 0) break;\n                        }\n                        var_8h = var_8h + puVar16;\n                    }\n                    break;\n                case 0x44bffb:\n                    for (; var_ch < var_14h; var_ch = var_ch + 1) {\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x0044bb90;\n                        uVar10 = *var_8h;\n                        var_1ch = 0x1;\n                        if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                            var_1ch = 0x2;\n                            uVar10 = (var_8h[1] & 0x3ff | (uVar10 & 0x3ff) << 10) + 0x10000;\n                        }\n                        iVar15 = *(*(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 +\n                                    0x4af411) * 4 + 0x4c5370);\n                        if (((iVar15 == 1) || (iVar15 == 3)) || (uVar10 == 0x5f)) {\n                            uVar10 = 1;\n                        }\n                        else {\n                            uVar10 = 0;\n                        }\n                        if (uVar10 == var_3ch) break;\n                        var_8h = var_8h + var_1ch;\n                    }\n                    break;\n                case 0x44c0bb:\n                    for (; var_ch < var_14h; var_ch = var_ch + 1) {\n                        var_1ch = 0x1;\n                        if (arg_10h[0x1f] <= var_8h) goto code_r0x0044bb90;\n                        var_24h = *var_8h;\n                        if ((var_28h != 0) && ((var_24h & 0xfc00) == 0xd800)) {\n                            var_1ch = 0x2;\n                            var_24h = ((var_24h & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                        }\n                        ppuVar3 = var_40h * 4 + 0x4b0a90;\n                        puVar16 = *(var_40h * 4 + 0x4b0a90);\n                        while ((puVar16 <= var_24h && (ppuVar3 = ppuVar3 + 1,  var_24h != puVar16))) {\n                            puVar16 = *ppuVar3;\n                        }\n                        if (var_3ch != 0) break;\n                        var_8h = var_8h + var_1ch;\n                    }\n                    break;\n                case 0x44c16b:\n                    for (; var_ch < var_14h; var_ch = var_ch + 1) {\n                        var_1ch = 0x1;\n                        if (arg_10h[0x1f] <= var_8h) {\n                            if ((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) {\n                                arg_10h[0x1a] = 1;\n                                uVar10 = arg_10h[0x23];\n                                goto joined_r0x0044bff0;\n                            }\n                            break;\n                        }\n                        uVar10 = *var_8h;\n                        if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                            var_1ch = 0x2;\n                            uVar10 = (var_8h[1] & 0x3ff | (uVar10 & 0x3ff) << 10) + 0x10000;\n                        }\n                        if (((((uVar10 == 0x24) || (uVar10 == 0x40)) || (uVar10 == 0x60)) ||\n                            ((0x9f < uVar10 && (uVar10 < 0xd800)))) || (0xdfff < uVar10)) {\n                            uVar10 = 1;\n                        }\n                        else {\n                            uVar10 = 0;\n                        }\n                        if (uVar10 == var_3ch) break;\n                        var_8h = var_8h + var_1ch;\n                    }\n                }\n                goto code_r0x0044c237;\n            }\n            if (var_20h == 0x16) {\n                for (; var_ch < var_14h; var_ch = var_ch + 1) {\n                    var_1ch = arg_10h[0x1f];\n                    if (var_1ch <= var_8h) {\n                        if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                        break;\n                    }\n                    uVar10 = *var_8h;\n                    puVar16 = var_8h + 1;\n                    if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                        uVar10 = (*puVar16 & 0x3ff | (uVar10 & 0x3ff) << 10) + 0x10000;\n                        puVar16 = var_8h + 2;\n                    }\n                    var_8h = puVar16;\n                    var_38h = *(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af412)\n                    ;\n                    puVar16 = arg_10h[0x1f];\n                    puVar19 = var_38h;\n                    var_24h = var_8h;\n                    if (var_8h < arg_10h[0x1f]) {\n                        do {\n                            iVar15 = 1;\n                            uVar10 = *var_24h;\n                            if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                                iVar15 = 2;\n                                uVar10 = ((uVar10 & 0x3ff) << 10 | var_24h[1] & 0x3ff) + 0x10000;\n                            }\n                            uVar6 = *(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 +\n                                     0x4af412);\n                            puVar16 = var_1ch;\n                            in_EDX = var_30h;\n                            var_8h = var_24h;\n                        } while (((*(puVar19 * 4 + 0x4c2210) & 1 << (uVar6 & 0x1f)) != 0) &&\n                                (var_24h = var_24h + iVar15,  puVar19 = uVar6,  var_8h = var_24h,  var_24h < var_1ch));\n                    }\n                    if ((arg_10h[0x23] != 0) &&\n                       (((puVar16 <= var_8h && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n                        (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])))) {\n                        return 0xfffffff4;\n                    }\n                    var_24h = var_8h;\n                }\n                in_ECX = var_8h;\n                puVar16 = var_8h;\n                if (var_2ch == NULL) {\n                    if (puVar17 < var_8h) {\n                        do {\n                            puVar16 = var_8h;\n                            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                            if (uVar10 != 0) {\n                                return uVar10;\n                            }\n                            var_8h = puVar16 + -1;\n                            if (var_28h == 0) {\n                                uVar10 = *var_8h;\n                            }\n                            else {\n                                if ((*var_8h & 0xfc00) == 0xdc00) {\n                                    var_8h = puVar16 + -2;\n                                }\n                                uVar10 = *var_8h;\n                                if ((uVar10 & 0xfc00) == 0xd800) {\n                                    uVar10 = ((uVar10 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                                }\n                            }\n                            puVar14 = *(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 +\n                                       0x4af412);\n                            puVar16 = var_8h;\n                            do {\n                                var_8h = puVar16;\n                                var_1ch = puVar14;\n                                in_ECX = var_8h;\n                                puVar14 = var_30h;\n                                if (var_8h <= var_10h) goto code_r0x0040a305;\n                                puVar16 = var_8h + -1;\n                                if (var_28h == 0) {\n                                    uVar10 = *puVar16;\n                                }\n                                else {\n                                    if ((*puVar16 & 0xfc00) == 0xdc00) {\n                                        puVar16 = var_8h + -2;\n                                    }\n                                    uVar10 = *puVar16;\n                                    if ((uVar10 & 0xfc00) == 0xd800) {\n                                        uVar10 = ((uVar10 & 0x3ff) << 10 | puVar16[1] & 0x3ff) + 0x10000;\n                                    }\n                                }\n                                var_38h = *(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8\n                                           + 0x4af412);\n                                puVar14 = var_38h;\n                            } while ((*(var_38h * 4 + 0x4c2210) & 1 << (var_1ch & 0x1f)) != 0);\n                        } while( true );\n                    }\n                    goto code_r0x0040a305;\n                }\n                goto code_r0x0040a1dd;\n            }\n            puVar16 = var_20h + -3;\n            if (var_28h == 0) {\n                if (0xf < puVar16) {\n                    return 0xfffffff2;\n                }\n    // switch table (16 cases) at 0x44f4b7\n                puVar19 = var_8h;\n                switch(*(puVar16 * 4 + 0x44f4b7)) {\n                case 0x44ccbd:\n                    if (var_ch < var_14h) {\n                        while (puVar19 = var_8h,  puVar16 = arg_10h[0x1f],  var_8h < puVar16) {\n                            if (arg_10h[6] == 0) {\n                                if (((var_8h <= puVar16 + -arg_10h[7]) && (*var_8h == *(arg_10h + 0xd))) &&\n                                   ((arg_10h[7] == 1 || (var_8h[1] == *(arg_10h + 0x36))))) goto code_r0x0044d220;\n                            }\n                            else {\n                                iVar15 = fcn.00408665(puVar16, arg_10h + 7, 0);\n                                if (iVar15 != 0) goto code_r0x0044d220;\n                            }\n                            if ((((arg_10h[0x23] != 0) && (arg_10h[0x1f] <= puVar19 + 1)) && (arg_10h[6] == 0)) &&\n                               (((arg_10h[7] == 2 && (*puVar19 == *(arg_10h + 0xd))) &&\n                                (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])))) {\n                                return 0xfffffff4;\n                            }\n                            puVar19 = puVar19 + 1;\n                            var_ch = var_ch + 1;\n                            var_8h = puVar19;\n                            if (var_14h <= var_ch) goto code_r0x0044d220;\n                        }\n                        if ((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) {\n                            arg_10h[0x1a] = 1;\n                            uVar10 = arg_10h[0x23];\n                            puVar17 = var_10h;\n                            goto joined_r0x0044cd8b;\n                        }\n                    }\n                    break;\n                case 0x44cd99:\n                    var_14h = var_14h - var_ch;\n                    puVar19 = arg_10h[0x1f];\n                    if (var_14h <= puVar19 - var_8h >> 1) {\n                        puVar19 = var_8h + var_14h;\n                        var_8h = var_8h + var_14h;\n                        break;\n                    }\n                    var_8h = puVar19;\n                    if ((arg_10h[0x23] == 0) || (puVar19 < arg_10h[0x22] || puVar19 == arg_10h[0x22])) break;\n                    arg_10h[0x1a] = 1;\n                    uVar10 = arg_10h[0x23];\n                    goto joined_r0x0044cd8b;\n                case 0x44cdef:\n                    if (var_ch < var_14h) {\n                        do {\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044ce78;\n                            uVar8 = *var_8h;\n                            if (uVar8 == 0xd) {\n                                puVar19 = var_8h + 1;\n                                var_8h = puVar19;\n                                if (arg_10h[0x1f] <= puVar19) break;\n                                if (*puVar19 == 10) goto code_r0x0044ce61;\n                            }\n                            else {\n                                if ((uVar8 != 10) &&\n                                   ((puVar19 = var_8h,  arg_10h[0x1b] != 0 ||\n                                    ((((uVar8 != 0xb && (uVar8 != 0xc)) && (var_38h = 0x85,  uVar8 != 0x85)) &&\n                                     ((var_38h = 0x2028,  uVar8 != 0x2028 && (var_38h = 0x2029,  uVar8 != 0x2029))))))))\n                                break;\ncode_r0x0044ce61:\n                                puVar19 = var_8h + 1;\n                            }\n                            var_ch = var_ch + 1;\n                            var_8h = puVar19;\n                        } while (var_ch < var_14h);\n                    }\n                    break;\n                case 0x44ceaa:\n                    for (puVar16 = var_ch; var_8h = puVar19,  puVar16 < var_14h; puVar16 = puVar16 + 1) {\n                        if (arg_10h[0x1f] <= puVar19) goto code_r0x0044ce78;\n                        uVar8 = *puVar19;\n                        if (uVar8 < 0x180f) {\n                            if (uVar8 == 0x180e) break;\n                            if (uVar8 < 0xa1) {\n                                if (((uVar8 == 0xa0) || (uVar8 == 9)) || (uVar8 == 0x20)) break;\n                            }\n                            else if (uVar8 == 0x1680) break;\n                        }\n                        else if (uVar8 < 0x2060) {\n                            if ((uVar8 == 0x205f) || ((0x1fff < uVar8 && ((uVar8 < 0x200b || (uVar8 == 0x202f))))))\n                            break;\n                        }\n                        else if (uVar8 == 0x3000) break;\n                        puVar19 = puVar19 + 1;\n                    }\n                    break;\n                case 0x44cf3f:\n                    for (puVar16 = var_ch; var_8h = puVar19,  puVar16 < var_14h; puVar16 = puVar16 + 1) {\n                        if (arg_10h[0x1f] <= puVar19) goto code_r0x0044ce78;\n                        uVar8 = *puVar19;\n                        if (uVar8 < 0x180f) {\n                            if (uVar8 != 0x180e) {\n                                if (uVar8 < 0xa1) {\n                                    if (((uVar8 != 0xa0) && (uVar8 != 9)) && (uVar8 != 0x20)) break;\n                                }\n                                else if (uVar8 != 0x1680) break;\n                            }\n                        }\n                        else if (uVar8 < 0x2060) {\n                            if ((uVar8 != 0x205f) && ((uVar8 < 0x2000 || ((0x200a < uVar8 && (uVar8 != 0x202f))))))\n                            break;\n                        }\n                        else if (uVar8 != 0x3000) break;\n                        puVar19 = puVar19 + 1;\n                    }\n                    break;\n                case 0x44cfc4:\n                    for (puVar16 = var_ch; var_8h = puVar19,  puVar16 < var_14h; puVar16 = puVar16 + 1) {\n                        if (arg_10h[0x1f] <= puVar19) goto code_r0x0044ce78;\n                        uVar8 = *puVar19;\n                        if (uVar8 < 0x86) {\n                            if ((uVar8 == 0x85) || ((9 < uVar8 && (uVar8 < 0xe)))) break;\n                        }\n                        else if ((0x2027 < uVar8) && (uVar8 < 0x202a)) break;\n                        puVar19 = puVar19 + 1;\n                    }\n                    break;\n                case 0x44d018:\n                    for (puVar16 = var_ch; var_8h = puVar19,  puVar16 < var_14h; puVar16 = puVar16 + 1) {\n                        if (arg_10h[0x1f] <= puVar19) goto code_r0x0044ce78;\n                        uVar10 = *puVar19;\n                        if (uVar10 < 0x86) {\n                            if ((uVar10 != 0x85) && (3 < uVar10 - 10)) break;\n                        }\n                        else if (1 < uVar10 - 0x2028) break;\n                        puVar19 = puVar19 + 1;\n                    }\n                    break;\n                case 0x44d062:\n                    for (; var_8h = puVar19,  var_ch < var_14h; var_ch = var_ch + 1) {\n                        if (arg_10h[0x1f] <= puVar19) goto code_r0x0044ce78;\n                        var_38h = 0xff;\n                        if ((*puVar19 < 0x100) && ((*(*puVar19 + arg_10h[0x11]) & 4) != 0)) break;\n                        puVar19 = puVar19 + 1;\n                    }\n                    break;\n                case 0x44d0aa:\n                    for (; var_8h = puVar19,  var_ch < var_14h; var_ch = var_ch + 1) {\n                        if (arg_10h[0x1f] <= puVar19) goto code_r0x0044ce78;\n                        if ((0xff < *puVar19) || ((*(*puVar19 + arg_10h[0x11]) & 4) == 0)) break;\n                        puVar19 = puVar19 + 1;\n                    }\n                    break;\n                case 0x44d0f3:\n                    for (; var_8h = puVar19,  var_ch < var_14h; var_ch = var_ch + 1) {\n                        if (arg_10h[0x1f] <= puVar19) goto code_r0x0044ce78;\n                        var_38h = 0xff;\n                        if ((*puVar19 < 0x100) && ((*(*puVar19 + arg_10h[0x11]) & 1) != 0)) break;\n                        puVar19 = puVar19 + 1;\n                    }\n                    break;\n                case 0x44d13b:\n                    for (; var_8h = puVar19,  var_ch < var_14h; var_ch = var_ch + 1) {\n                        if (arg_10h[0x1f] <= puVar19) goto code_r0x0044ce78;\n                        if ((0xff < *puVar19) || ((*(*puVar19 + arg_10h[0x11]) & 1) == 0)) break;\n                        puVar19 = puVar19 + 1;\n                    }\n                    break;\n                case 0x44d184:\n                    for (; var_8h = puVar19,  var_ch < var_14h; var_ch = var_ch + 1) {\n                        if (arg_10h[0x1f] <= puVar19) goto code_r0x0044ce78;\n                        var_38h = 0xff;\n                        if ((*puVar19 < 0x100) && ((*(*puVar19 + arg_10h[0x11]) & 0x10) != 0)) break;\n                        puVar19 = puVar19 + 1;\n                    }\n                    break;\n                case 0x44d1c5:\n                    if (var_ch < var_14h) {\n                        while (puVar19 = var_8h,  var_8h < arg_10h[0x1f]) {\n                            if ((0xff < *var_8h) || ((*(*var_8h + arg_10h[0x11]) & 0x10) == 0)) goto code_r0x0044d220;\n                            puVar19 = var_8h + 1;\n                            var_ch = var_ch + 1;\n                            var_8h = puVar19;\n                            if (var_14h <= var_ch) goto code_r0x0044d220;\n                        }\n                        if ((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) {\n                            arg_10h[0x1a] = 1;\n                            uVar10 = arg_10h[0x23];\n                            goto joined_r0x0044cd8b;\n                        }\n                    }\n                    break;\n                case 0x44eef0:\n                    goto code_r0x0044eef0;\n                }\n                goto code_r0x0044d220;\n            }\n            if (0xf < puVar16) {\n                return 0xfffffff2;\n            }\n    // switch table (16 cases) at 0x44f477\n            puVar14 = var_8h;\n            switch(*(puVar16 * 4 + 0x44f477)) {\n            case 0x44c4a6:\n                if (var_ch < var_14h) {\n                    var_24h = arg_10h[0x1f];\n                    do {\n                        puVar17 = var_8h;\n                        if (var_24h <= var_8h) goto code_r0x0044c588;\n                        if (arg_10h[6] == 0) {\n                            if (((var_8h <= var_24h + -arg_10h[7]) && (*var_8h == *(arg_10h + 0xd))) &&\n                               ((puVar14 = var_8h,  arg_10h[7] == 1 || (var_8h[1] == *(arg_10h + 0x36))))) break;\n                        }\n                        else {\n                            iVar15 = fcn.00408665(var_24h, arg_10h + 7, var_28h);\n                            puVar14 = var_8h;\n                            if (iVar15 != 0) break;\n                        }\n                        if (((((arg_10h[0x23] != 0) && (arg_10h[0x1f] <= puVar17 + 1)) && (arg_10h[6] == 0)) &&\n                            ((arg_10h[7] == 2 && (*puVar17 == *(arg_10h + 0xd))))) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                        var_24h = arg_10h[0x1f];\n                        var_8h = puVar17 + 1;\n                        if ((var_8h < var_24h) && ((*var_8h & 0xfc00) == 0xdc00)) {\n                            var_8h = puVar17 + 2;\n                        }\n                        var_ch = var_ch + 1;\n                        puVar17 = var_8h;\n                        puVar14 = var_8h;\n                    } while (var_ch < var_14h);\n                }\n                break;\n            case 0x44c634:\n                if (var_14h < 0x7fffffff) {\n                    if (var_ch < var_14h) {\n                        do {\n                            if (arg_10h[0x1f] <= var_8h) goto code_r0x0044c692;\n                            puVar16 = var_8h + 1;\n                            if ((puVar16 < arg_10h[0x1f]) && (var_38h = 0xdc00,  (*puVar16 & 0xfc00) == 0xdc00)) {\n                                puVar16 = var_8h + 2;\n                            }\n                            var_8h = puVar16;\n                            var_ch = var_ch + 1;\n                            puVar17 = var_8h;\n                            puVar14 = var_8h;\n                        } while (var_ch < var_14h);\n                    }\n                }\n                else {\n                    var_8h = arg_10h[0x1f];\ncode_r0x0044c692:\n                    puVar17 = var_8h;\n                    puVar14 = var_8h;\n                    if ((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) {\n                        arg_10h[0x1a] = 1;\n                        uVar10 = arg_10h[0x23];\njoined_r0x0044c6b9:\n                        puVar17 = var_8h;\n                        puVar14 = var_8h;\n                        if (1 < uVar10) {\n                            return 0xfffffff4;\n                        }\n                    }\n                }\n                break;\n            case 0x44c6c4:\n                var_14h = var_14h - var_ch;\n                puVar17 = arg_10h[0x1f];\n                if (puVar17 - var_8h >> 1 < var_14h) {\n                    puVar14 = puVar17;\n                    if ((arg_10h[0x23] != 0) && (arg_10h[0x22] <= puVar17 && puVar17 != arg_10h[0x22])) {\n                        arg_10h[0x1a] = 1;\n                        uVar10 = arg_10h[0x23];\n                        var_8h = puVar17;\n                        goto joined_r0x0044c6b9;\n                    }\n                }\n                else {\n                    puVar17 = var_8h + var_14h;\n                    puVar14 = var_8h + var_14h;\n                }\n                break;\n            case 0x44c71a:\n                if (var_ch < var_14h) {\n                    puVar16 = arg_10h[0x1f];\n                    do {\n                        if (puVar16 <= var_8h) goto code_r0x0044c588;\n                        uVar10 = *var_8h;\n                        iVar15 = 1;\n                        if ((uVar10 & 0xfc00) == 0xd800) {\n                            iVar15 = 2;\n                            uVar10 = ((uVar10 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                        }\n                        if (uVar10 == 0xd) {\n                            puVar16 = arg_10h[0x1f];\n                            puVar17 = var_8h + 1;\n                            puVar14 = puVar17;\n                            if (puVar16 <= puVar17) break;\n                            if (*puVar17 == 10) {\n                                puVar17 = var_8h + 2;\n                            }\n                        }\n                        else {\n                            if ((uVar10 != 10) &&\n                               ((puVar17 = var_8h,  puVar14 = var_8h,  arg_10h[0x1b] != 0 ||\n                                (((uVar10 != 0xb && (uVar10 != 0xc)) &&\n                                 ((uVar10 != 0x85 && ((uVar10 != 0x2028 && (uVar10 != 0x2029)))))))))) break;\n                            puVar16 = arg_10h[0x1f];\n                            puVar17 = var_8h + iVar15;\n                        }\n                        var_ch = var_ch + 1;\n                        puVar14 = puVar17;\n                        var_8h = puVar17;\n                    } while (var_ch < var_14h);\n                }\n                break;\n            case 0x44c7d7:\n                for (; puVar17 = var_8h,  puVar14 = var_8h,  var_ch < var_14h; var_ch = var_ch + 1) {\n                    iVar15 = 1;\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0044c8aa;\n                    uVar10 = *var_8h;\n                    if ((uVar10 & 0xfc00) == 0xd800) {\n                        iVar15 = 2;\n                        uVar10 = ((uVar10 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                    }\n                    if (uVar10 < 0x180f) {\n                        if (uVar10 == 0x180e) goto code_r0x0044c83c;\n                        if (uVar10 < 0xa1) {\n                            if (((uVar10 == 0xa0) || (uVar10 == 9)) || (uVar10 == 0x20)) goto code_r0x0044c83c;\n                        }\n                        else if (uVar10 == 0x1680) goto code_r0x0044c83c;\ncode_r0x0044c8a6:\n                        bVar20 = false;\n                    }\n                    else {\n                        if (0x205f < uVar10) {\n                            if (uVar10 == 0x3000) goto code_r0x0044c83c;\n                            goto code_r0x0044c8a6;\n                        }\n                        if ((uVar10 != 0x205f) && ((uVar10 < 0x2000 || ((0x200a < uVar10 && (uVar10 != 0x202f))))))\n                        goto code_r0x0044c8a6;\ncode_r0x0044c83c:\n                        bVar20 = true;\n                    }\n                    if (bVar20 == (var_20h == 0x12)) break;\n                    var_8h = var_8h + iVar15;\n                }\n                break;\n            case 0x44c8d1:\n                for (; puVar17 = var_8h,  puVar14 = var_8h,  var_ch < var_14h; var_ch = var_ch + 1) {\n                    iVar15 = 1;\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0044c8aa;\n                    uVar10 = *var_8h;\n                    if ((uVar10 & 0xfc00) == 0xd800) {\n                        iVar15 = 2;\n                        uVar10 = ((uVar10 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                    }\n                    if (uVar10 < 0x86) {\n                        if ((uVar10 != 0x85) && ((uVar10 < 10 || (0xd < uVar10)))) goto code_r0x0044c928;\ncode_r0x0044c960:\n                        bVar20 = true;\n                    }\n                    else {\n                        if (uVar10 - 0x2028 < 2) goto code_r0x0044c960;\ncode_r0x0044c928:\n                        bVar20 = false;\n                    }\n                    if (bVar20 == (var_20h == 0x14)) break;\n                    var_8h = var_8h + iVar15;\n                }\n                break;\n            case 0x44c967:\n                for (; puVar17 = var_8h,  puVar14 = var_8h,  var_ch < var_14h; var_ch = var_ch + 1) {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0044c588;\n                    uVar10 = *var_8h;\n                    var_1ch = 0x1;\n                    if ((uVar10 & 0xfc00) == 0xd800) {\n                        puVar16 = 0x2;\n                        uVar10 = ((uVar10 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                        var_1ch = 0x2;\n                    }\n                    else {\n                        puVar16 = 0x1;\n                    }\n                    if ((uVar10 < 0x100) && (puVar16 = var_1ch,  (*(uVar10 + arg_10h[0x11]) & 4) != 0)) break;\n                    var_8h = var_8h + puVar16;\n                }\n                break;\n            case 0x44c9ed:\n                for (; puVar17 = var_8h,  puVar14 = var_8h,  var_ch < var_14h; var_ch = var_ch + 1) {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0044c588;\n                    uVar10 = *var_8h;\n                    var_1ch = 0x1;\n                    if ((uVar10 & 0xfc00) == 0xd800) {\n                        var_1ch = 0x2;\n                        uVar10 = ((uVar10 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                    }\n                    if ((0xff < uVar10) || ((*(uVar10 + arg_10h[0x11]) & 4) == 0)) break;\n                    var_8h = var_8h + var_1ch;\n                }\n                break;\n            case 0x44ca6f:\n                for (; puVar17 = var_8h,  puVar14 = var_8h,  var_ch < var_14h; var_ch = var_ch + 1) {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0044c588;\n                    uVar10 = *var_8h;\n                    var_1ch = 0x1;\n                    if ((uVar10 & 0xfc00) == 0xd800) {\n                        puVar16 = 0x2;\n                        uVar10 = ((uVar10 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                        var_1ch = 0x2;\n                    }\n                    else {\n                        puVar16 = 0x1;\n                    }\n                    if ((uVar10 < 0x100) && (puVar16 = var_1ch,  (*(uVar10 + arg_10h[0x11]) & 1) != 0)) break;\n                    var_8h = var_8h + puVar16;\n                }\n                break;\n            case 0x44caf5:\n                for (; puVar17 = var_8h,  puVar14 = var_8h,  var_ch < var_14h; var_ch = var_ch + 1) {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0044c588;\n                    uVar10 = *var_8h;\n                    var_1ch = 0x1;\n                    if ((uVar10 & 0xfc00) == 0xd800) {\n                        var_1ch = 0x2;\n                        uVar10 = ((uVar10 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                    }\n                    if ((0xff < uVar10) || ((*(uVar10 + arg_10h[0x11]) & 1) == 0)) break;\n                    var_8h = var_8h + var_1ch;\n                }\n                break;\n            case 0x44cb77:\n                for (; puVar17 = var_8h,  puVar14 = var_8h,  var_ch < var_14h; var_ch = var_ch + 1) {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0044c588;\n                    uVar10 = *var_8h;\n                    var_1ch = 0x1;\n                    if ((uVar10 & 0xfc00) == 0xd800) {\n                        puVar16 = 0x2;\n                        uVar10 = ((uVar10 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                        var_1ch = 0x2;\n                    }\n                    else {\n                        puVar16 = 0x1;\n                    }\n                    if ((uVar10 < 0x100) && (puVar16 = var_1ch,  (*(uVar10 + arg_10h[0x11]) & 0x10) != 0)) break;\n                    var_8h = var_8h + puVar16;\n                }\n                break;\n            case 0x44cbfd:\n                if (var_ch < var_14h) {\n                    while (puVar17 = var_8h,  puVar14 = var_8h,  var_8h < arg_10h[0x1f]) {\n                        uVar10 = *var_8h;\n                        var_1ch = 0x1;\n                        if ((uVar10 & 0xfc00) == 0xd800) {\n                            var_1ch = 0x2;\n                            uVar10 = ((uVar10 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                        }\n                        if ((0xff < uVar10) || ((*(uVar10 + arg_10h[0x11]) & 0x10) == 0)) goto code_r0x0044c5b0;\n                        puVar17 = var_8h + var_1ch;\n                        var_ch = var_ch + 1;\n                        puVar14 = puVar17;\n                        var_8h = puVar17;\n                        if (var_14h <= var_ch) goto code_r0x0044c5b0;\n                    }\n                    if ((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) {\n                        arg_10h[0x1a] = 1;\n                        uVar10 = arg_10h[0x23];\n                        goto joined_r0x0044c6b9;\n                    }\n                }\n                break;\n            case 0x44eef0:\n                goto code_r0x0044eef0;\n            }\n            goto code_r0x0044c5b0;\n        }\n        if (var_18h < 0) {\n            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar16 = var_8h;\n            if (var_20h == 0x16) goto joined_r0x0044e659;\n            if (var_28h != 0) goto joined_r0x0040a7ca;\n            goto joined_r0x0044eb50;\n        }\n        if (0xa < var_18h) {\n            return 0xfffffff2;\n        }\n    // switch table (11 cases) at 0x44f4f7\n        switch(*(var_18h * 4 + 0x44f4f7)) {\n        case 0x44dd98:\n            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar16 = var_8h;\n            var_8h = puVar17;\n            while( true ) {\n                if (uVar10 != 0) {\n                    return uVar10;\n                }\n                if (var_14h <= var_ch) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= var_8h) break;\n                puVar14 = var_8h + 1;\n                if ((var_28h != 0) && ((*var_8h & 0xfc00) == 0xd800)) {\n                    puVar14 = var_8h + 2;\n                }\n                if (var_3ch != 0) {\n                    return 0;\n                }\n                var_ch = var_ch + 1;\n                var_8h = puVar16;\n                uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar16 = var_8h;\n                var_8h = puVar14;\n            }\n            break;\n        case 0x44de1d:\n            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar16 = var_8h;\n            var_8h = puVar17;\n            while( true ) {\n                if (uVar10 != 0) {\n                    return uVar10;\n                }\n                if (var_14h <= var_ch) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= var_8h) break;\n                uVar10 = *var_8h;\n                puVar14 = var_8h + 1;\n                if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                    uVar8 = *puVar14;\n                    puVar14 = var_8h + 2;\n                    uVar10 = ((uVar10 & 0x3ff) << 10 | uVar8 & 0x3ff) + 0x10000;\n                }\n                cVar5 = *(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af411);\n                if (((cVar5 == '\\t') || (cVar5 == '\\x05')) || (cVar5 == '\\b')) {\n                    uVar10 = 1;\n                }\n                else {\n                    uVar10 = 0;\n                }\n                if (uVar10 == var_3ch) {\n                    return 0;\n                }\n                var_ch = var_ch + 1;\n                var_8h = puVar16;\n                uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar16 = var_8h;\n                var_8h = puVar14;\n            }\n            break;\n        case 0x44defd:\n            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar16 = var_8h;\n            var_8h = puVar17;\n            while( true ) {\n                if (uVar10 != 0) {\n                    return uVar10;\n                }\n                if (var_14h <= var_ch) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= var_8h) break;\n                uVar10 = *var_8h;\n                puVar14 = var_8h + 1;\n                if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                    uVar8 = *puVar14;\n                    puVar14 = var_8h + 2;\n                    uVar10 = (uVar8 & 0x3ff | (uVar10 & 0x3ff) << 10) + 0x10000;\n                }\n                if ((*(*(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af411) * 4 +\n                      0x4c5370) == var_40h) == var_3ch) {\n                    return 0;\n                }\n                var_ch = var_ch + 1;\n                var_8h = puVar16;\n                uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar16 = var_8h;\n                var_8h = puVar14;\n            }\n            break;\n        case 0x44dfd5:\n            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar16 = var_8h;\n            var_8h = puVar17;\n            while( true ) {\n                if (uVar10 != 0) {\n                    return uVar10;\n                }\n                if (var_14h <= var_ch) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= var_8h) break;\n                uVar10 = *var_8h;\n                puVar14 = var_8h + 1;\n                if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                    uVar8 = *puVar14;\n                    puVar14 = var_8h + 2;\n                    uVar10 = ((uVar10 & 0x3ff) << 10 | uVar8 & 0x3ff) + 0x10000;\n                }\n                if ((*(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af411) ==\n                    var_40h) == var_3ch) {\n                    return 0;\n                }\n                var_ch = var_ch + 1;\n                var_8h = puVar16;\n                uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar16 = var_8h;\n                var_8h = puVar14;\n            }\n            break;\n        case 0x44e0a5:\n            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar16 = var_8h;\n            var_8h = puVar17;\n            while( true ) {\n                if (uVar10 != 0) {\n                    return uVar10;\n                }\n                if (var_14h <= var_ch) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= var_8h) break;\n                uVar10 = *var_8h;\n                puVar14 = var_8h + 1;\n                if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                    uVar8 = *puVar14;\n                    puVar14 = var_8h + 2;\n                    uVar10 = ((uVar10 & 0x3ff) << 10 | uVar8 & 0x3ff) + 0x10000;\n                }\n                if ((*(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af410) ==\n                    var_40h) == var_3ch) {\n                    return 0;\n                }\n                var_ch = var_ch + 1;\n                var_8h = puVar16;\n                uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar16 = var_8h;\n                var_8h = puVar14;\n            }\n            break;\n        case 0x44e175:\n            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar16 = var_8h;\n            var_8h = puVar17;\n            while( true ) {\n                if (uVar10 != 0) {\n                    return uVar10;\n                }\n                if (var_14h <= var_ch) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= var_8h) break;\n                uVar10 = *var_8h;\n                puVar14 = var_8h + 1;\n                if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                    uVar8 = *puVar14;\n                    puVar14 = var_8h + 2;\n                    uVar10 = (uVar8 & 0x3ff | (uVar10 & 0x3ff) << 10) + 0x10000;\n                }\n                iVar15 = *(*(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af411) *\n                           4 + 0x4c5370);\n                if ((iVar15 == 1) || (iVar15 == 3)) {\n                    uVar10 = 1;\n                }\n                else {\n                    uVar10 = 0;\n                }\n                if (uVar10 == var_3ch) {\n                    return 0;\n                }\n                var_ch = var_ch + 1;\n                var_8h = puVar16;\n                uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar16 = var_8h;\n                var_8h = puVar14;\n            }\n            break;\n        case 0x44e258:\n            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar16 = var_8h;\n            var_8h = puVar17;\n            goto joined_r0x0044e275;\n        case 0x44e3be:\n            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar16 = var_8h;\n            var_8h = puVar17;\n            while( true ) {\n                if (uVar10 != 0) {\n                    return uVar10;\n                }\n                if (var_14h <= var_ch) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= var_8h) break;\n                uVar10 = *var_8h;\n                puVar14 = var_8h + 1;\n                if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                    uVar8 = *puVar14;\n                    puVar14 = var_8h + 2;\n                    uVar10 = ((uVar10 & 0x3ff) << 10 | uVar8 & 0x3ff) + 0x10000;\n                }\n                iVar15 = *(*(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af411) *\n                           4 + 0x4c5370);\n                if (((iVar15 == 1) || (iVar15 == 3)) || (uVar10 == 0x5f)) {\n                    uVar10 = 1;\n                }\n                else {\n                    uVar10 = 0;\n                }\n                if (uVar10 == var_3ch) {\n                    return 0;\n                }\n                var_ch = var_ch + 1;\n                var_8h = puVar16;\n                uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar16 = var_8h;\n                var_8h = puVar14;\n            }\n            break;\n        case 0x44e4a7:\n            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar16 = var_8h;\n            var_8h = puVar17;\n            while( true ) {\n                if (uVar10 != 0) {\n                    return uVar10;\n                }\n                if (var_14h <= var_ch) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= var_8h) break;\n                var_34h = *var_8h;\n                puVar14 = var_8h + 1;\n                if ((var_28h != 0) && ((var_34h & 0xfc00) == 0xd800)) {\n                    var_34h = ((var_34h & 0x3ff) << 10 | *puVar14 & 0x3ff) + 0x10000;\n                    puVar14 = var_8h + 2;\n                }\n                puVar4 = var_40h * 4 + 0x4b0a90;\n                uVar10 = *(var_40h * 4 + 0x4b0a90);\n                while ((uVar10 <= var_34h && (puVar4 = puVar4 + 1,  var_34h != uVar10))) {\n                    uVar10 = *puVar4;\n                }\n                if (var_3ch != 0) {\n                    return 0;\n                }\n                var_ch = var_ch + 1;\n                var_8h = puVar16;\n                uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar16 = var_8h;\n                var_8h = puVar14;\n            }\n            break;\n        case 0x44e582:\n            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            puVar16 = var_8h;\n            var_8h = puVar17;\n            while( true ) {\n                if (uVar10 != 0) {\n                    return uVar10;\n                }\n                if (var_14h <= var_ch) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= var_8h) break;\n                uVar10 = *var_8h;\n                puVar14 = var_8h + 1;\n                if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                    uVar10 = (*puVar14 & 0x3ff | (uVar10 & 0x3ff) << 10) + 0x10000;\n                    puVar14 = var_8h + 2;\n                }\n                if (((((uVar10 == 0x24) || (uVar10 == 0x40)) || (uVar10 == 0x60)) ||\n                    ((0x9f < uVar10 && (uVar10 < 0xd800)))) || (0xdfff < uVar10)) {\n                    uVar10 = 1;\n                }\n                else {\n                    uVar10 = 0;\n                }\n                if (uVar10 == var_3ch) {\n                    return 0;\n                }\n                var_ch = var_ch + 1;\n                var_8h = puVar16;\n                uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar16 = var_8h;\n                var_8h = puVar14;\n            }\n        }\n        goto code_r0x0044b5ad;\n    case 0x60:\n        var_ch = NULL;\n        var_14h = 0x1;\n        goto code_r0x0044a495;\n    case 0x61:\n        var_14h = in_EDX[1];\n        var_ch = NULL;\n        puVar16 = in_EDX + 2;\n        goto code_r0x0044a4a6;\n    default:\n        return 0xfffffffb;\n    case 0x6e:\n    case 0x6f:\n        uVar10 = in_EDX[0x11];\n        var_ch = in_EDX + 1;\n        var_30h = in_EDX + 0x11;\n    // switch table (12 cases) at 0x44f30f\n        switch(uVar10) {\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n            uVar11 = uVar10 - 0x62;\n            var_30h = in_EDX + 0x12;\n            if (7 >= uVar11) {\n                var_10h = uVar11 & 1;\n            }\n            var_2ch = 7 < uVar11;\n            var_18h = *(uVar10 + 0x4b1bea);\n            var_20h = *(uVar10 + 0x4b1bde);\n            if (var_20h == NULL) {\n                var_20h = 0x7fffffff;\n            }\n            break;\n        case 0x68:\n        case 0x69:\n        case 0x6d:\n            var_10h = uVar10 == 0x69;\n            var_18h = in_EDX[0x12];\n            var_2ch = uVar10 == 0x6d;\n            var_20h = in_EDX[0x13];\n            if (var_20h == NULL) {\n                var_20h = 0x7fffffff;\n            }\n            var_30h = in_EDX + 0x14;\n            break;\n        default:\n            var_20h = 0x1;\n            var_18h = 0x1;\n        }\n        var_24h = 0x1;\n        if (var_28h == 0) {\n            if (0 < var_18h) {\n                do {\n                    if (arg_10h[0x1f] <= var_8h) goto code_r0x0044d99d;\n                    uVar8 = *var_8h;\n                    var_8h = var_8h + 1;\n                    if (uVar8 < 0x100) {\n                        if ((*((uVar8 >> 3) + var_ch) & 1 << (uVar8 & 7)) == 0) {\n                            return 0;\n                        }\n                    }\n                    else if (puVar14 == 0x6e) {\n                        return 0;\n                    }\n                    var_24h = var_24h + 1;\n                } while (var_24h <= var_18h);\n            }\n        }\n        else if (0 < var_18h) {\n            do {\n                if (arg_10h[0x1f] <= var_8h) goto code_r0x0044d99d;\n                uVar10 = *var_8h;\n                puVar16 = var_8h + 1;\n                if ((uVar10 & 0xfc00) == 0xd800) {\n                    uVar10 = ((uVar10 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                    puVar16 = var_8h + 2;\n                }\n                var_8h = puVar16;\n                if (uVar10 < 0x100) {\n                    if ((*((uVar10 >> 3) + var_ch) & 1 << (uVar10 & 7)) == 0) {\n                        return 0;\n                    }\n                }\n                else if (puVar14 == 0x6e) {\n                    return 0;\n                }\n                var_24h = var_24h + 1;\n            } while (var_24h <= var_18h);\n        }\n        in_ECX = var_8h;\n        in_EDX = var_30h;\n        puVar16 = var_8h;\n        if (var_18h == var_20h) goto code_r0x0040a1dd;\n        if (var_10h == NULL) {\n            var_14h = var_8h;\n            if (var_28h == 0) {\n                for (; var_18h < var_20h; var_18h = var_18h + 1) {\n                    if (arg_10h[0x1f] <= in_ECX) {\n                        if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= in_ECX && in_ECX != arg_10h[0x22])) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                        break;\n                    }\n                    uVar8 = *in_ECX;\n                    if (uVar8 < 0x100) {\n                        if ((*((uVar8 >> 3) + var_ch) & 1 << (uVar8 & 7)) == 0) break;\n                    }\n                    else if (puVar14 == 0x6e) break;\n                    in_ECX = in_ECX + 1;\n                }\n                puVar16 = in_ECX;\n                if (var_2ch == NULL) {\n                    bVar20 = in_ECX < var_8h;\n                    var_8h = in_ECX;\n                    if (bVar20) {\n                        return 0;\n                    }\n                    do {\n                        uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                        if (uVar10 != 0) {\n                            return uVar10;\n                        }\n                        in_ECX = in_ECX + -1;\n                    } while (var_14h <= in_ECX);\n                    return 0;\n                }\n            }\n            else {\n                for (; var_18h < var_20h; var_18h = var_18h + 1) {\n                    if (arg_10h[0x1f] <= in_ECX) {\n                        if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= in_ECX && in_ECX != arg_10h[0x22])) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                        break;\n                    }\n                    uVar10 = *in_ECX;\n                    puVar16 = 0x1;\n                    var_34h = 0x1;\n                    if ((uVar10 & 0xfc00) == 0xd800) {\n                        puVar16 = 0x2;\n                        var_34h = 0x2;\n                        uVar10 = ((uVar10 & 0x3ff) << 10 | in_ECX[1] & 0x3ff) + 0x10000;\n                    }\n                    if (uVar10 < 0x100) {\n                        puVar16 = var_34h;\n                        if ((*((uVar10 >> 3) + var_ch) & 1 << (uVar10 & 7)) == 0) break;\n                    }\n                    else if (puVar14 == 0x6e) break;\n                    in_ECX = in_ECX + puVar16;\n                }\n                puVar16 = in_ECX;\n                if (var_2ch == NULL) {\n                    var_8h = in_ECX;\n                    uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    while( true ) {\n                        if (uVar10 != 0) {\n                            return uVar10;\n                        }\n                        puVar16 = in_ECX + -1;\n                        if (in_ECX <= var_14h) break;\n                        if ((*puVar16 & 0xfc00) == 0xdc00) {\n                            puVar16 = in_ECX + -2;\n                        }\n                        uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                        in_ECX = puVar16;\n                    }\n                    return 0;\n                }\n            }\n            goto code_r0x0040a1dd;\n        }\n        uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (var_28h == 0) {\n            while( true ) {\n                if (uVar10 != 0) {\n                    return uVar10;\n                }\n                if (var_20h <= var_18h) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= var_8h) break;\n                uVar8 = *var_8h;\n                var_8h = var_8h + 1;\n                if (uVar8 < 0x100) {\n                    if ((*((uVar8 >> 3) + var_ch) & 1 << (uVar8 & 7)) == 0) {\n                        return 0;\n                    }\n                }\n                else if (puVar14 == 0x6e) {\n                    return 0;\n                }\n                var_18h = var_18h + 1;\n                uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            }\ncode_r0x0044d99d:\n            if (arg_10h[0x23] == 0) {\n                return 0;\n            }\n            bVar20 = var_8h < arg_10h[0x22];\n            bVar21 = var_8h == arg_10h[0x22];\n        }\n        else {\n            while( true ) {\n                if (uVar10 != 0) {\n                    return uVar10;\n                }\n                if (var_20h <= var_18h) {\n                    return 0;\n                }\n                if (arg_10h[0x1f] <= var_8h) break;\n                uVar10 = *var_8h;\n                puVar16 = var_8h + 1;\n                if ((uVar10 & 0xfc00) == 0xd800) {\n                    uVar10 = ((uVar10 & 0x3ff) << 10 | var_8h[1] & 0x3ff) + 0x10000;\n                    puVar16 = var_8h + 2;\n                }\n                var_8h = puVar16;\n                if (uVar10 < 0x100) {\n                    if ((*((uVar10 >> 3) + var_ch) & 1 << (uVar10 & 7)) == 0) {\n                        return 0;\n                    }\n                }\n                else if (puVar14 == 0x6e) {\n                    return 0;\n                }\n                var_18h = var_18h + 1;\n                uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            }\ncode_r0x0044d985:\n            if (arg_10h[0x23] == 0) {\n                return 0;\n            }\n            bVar20 = var_8h < arg_10h[0x22];\n            bVar21 = var_8h == arg_10h[0x22];\n        }\n        goto code_r0x0044b5c0;\n    case 0x70:\n        var_24h = in_EDX + 2;\n        uVar10 = in_EDX[in_EDX[1]];\n        var_30h = in_EDX + in_EDX[1];\n    // switch table (12 cases) at 0x44f323\n        switch(uVar10) {\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n            uVar11 = uVar10 - 0x62;\n            var_30h = var_30h + 1;\n            if (7 >= uVar11) {\n                var_10h = uVar11 & 1;\n            }\n            var_2ch = 7 < uVar11;\n            var_20h = *(uVar10 + 0x4b1bde);\n            var_18h = *(uVar10 + 0x4b1bea);\n            if (var_20h == NULL) {\n                var_20h = 0x7fffffff;\n            }\n            break;\n        case 0x68:\n        case 0x69:\n        case 0x6d:\n            var_18h = var_30h[1];\n            var_10h = uVar10 == 0x69;\n            var_2ch = uVar10 == 0x6d;\n            var_20h = var_30h[2];\n            if (var_20h == NULL) {\n                var_20h = 0x7fffffff;\n            }\n            var_30h = var_30h + 3;\n            break;\n        default:\n            var_20h = 0x1;\n            var_18h = 0x1;\n        }\n        puVar14 = var_18h;\n        in_EDX = var_30h;\n        var_34h = 0x1;\n        if (0 < var_18h) {\n            do {\n                if (arg_10h[0x1f] <= var_8h) goto code_r0x0044d99d;\n                puVar16 = var_8h + 1;\n                if ((var_28h != 0) && ((*var_8h & 0xfc00) == 0xd800)) {\n                    puVar16 = var_8h + 2;\n                }\n                var_8h = puVar16;\n                iVar15 = fcn.0049b436(var_28h);\n                if (iVar15 == 0) {\n                    return 0;\n                }\n                var_34h = var_34h + 1;\n                in_ECX = var_8h;\n            } while (var_34h <= puVar14);\n        }\n        puVar16 = var_8h;\n        if (puVar14 != var_20h) {\n            if (var_10h != NULL) {\n                uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar14 = var_8h;\n                while( true ) {\n                    if (uVar10 != 0) {\n                        return uVar10;\n                    }\n                    if (var_20h <= var_18h) {\n                        return 0;\n                    }\n                    var_8h = puVar16;\n                    if (arg_10h[0x1f] <= puVar16) break;\n                    puVar17 = puVar16 + 1;\n                    if ((var_28h != 0) && ((*puVar16 & 0xfc00) == 0xd800)) {\n                        puVar17 = puVar16 + 2;\n                    }\n                    var_8h = puVar14;\n                    iVar15 = fcn.0049b436(var_28h);\n                    if (iVar15 == 0) {\n                        return 0;\n                    }\n                    var_18h = var_18h + 1;\n                    uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    puVar14 = var_8h;\n                    puVar16 = puVar17;\n                }\n                goto code_r0x0044b5ad;\n            }\n            var_38h = var_8h;\n            puVar17 = var_8h;\n            if (puVar14 < var_20h) {\n                do {\n                    puVar17 = var_8h;\n                    if (arg_10h[0x1f] <= var_8h) {\n                        if (((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) &&\n                           (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                            return 0xfffffff4;\n                        }\n                        break;\n                    }\n                    var_34h = 0x1;\n                    if ((var_28h != 0) && ((*var_8h & 0xfc00) == 0xd800)) {\n                        var_34h = 0x2;\n                    }\n                    iVar15 = fcn.0049b436(var_28h);\n                    if (iVar15 == 0) break;\n                    var_18h = var_18h + 1;\n                    var_8h = var_8h + var_34h;\n                    puVar17 = var_8h;\n                } while (var_18h < var_20h);\n            }\n            in_ECX = var_8h;\n            puVar16 = var_8h;\n            if (var_2ch == NULL) {\n                uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                while( true ) {\n                    if (uVar10 != 0) {\n                        return uVar10;\n                    }\n                    puVar16 = puVar17 + -1;\n                    if (puVar17 <= var_38h) break;\n                    if ((var_28h != 0) && ((*puVar16 & 0xfc00) == 0xdc00)) {\n                        puVar16 = puVar17 + -2;\n                    }\n                    uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    puVar17 = puVar16;\n                }\n                return 0;\n            }\n        }\n        goto code_r0x0040a1dd;\n    case 0x71:\n    case 0x72:\n        var_24h = puVar14 == 0x72;\n        uVar10 = in_EDX[1];\n        var_30h = in_EDX + 2;\n        var_18h = uVar10 * 2;\n        if ((var_18h < arg_ch) && (uVar11 = arg_10h[3],  -1 < *(uVar11 + uVar10 * 8))) {\n            var_20h = *(uVar11 + 4 + uVar10 * 8) - *(uVar11 + uVar10 * 8);\n        }\n        else {\n            var_20h = (arg_10h[0x15] != 0) - 1;\n        }\n        goto code_r0x00448f1a;\n    case 0x73:\n    case 0x74:\n        var_24h = puVar14 == 0x74;\n        var_2ch = in_EDX[2];\n        var_30h = in_EDX + 3;\n        puVar14 = arg_10h[0xc] + in_EDX[1] * arg_10h[9] * 2;\n        var_18h = NULL;\n        var_20h = (arg_10h[0x15] != 0) - 1;\n        if (var_2ch != NULL) {\n            do {\n                uVar10 = *puVar14;\n                var_2ch = var_2ch - 1;\n                var_18h = uVar10 * 2;\n                if ((var_18h < arg_ch) && (uVar11 = arg_10h[3],  -1 < *(uVar11 + uVar10 * 8))) {\n                    var_20h = *(uVar11 + 4 + uVar10 * 8) - *(uVar11 + uVar10 * 8);\n                    var_34h = puVar14;\n                    break;\n                }\n                puVar14 = puVar14 + arg_10h[9];\n                in_ECX = var_8h;\n                var_34h = puVar14;\n            } while (0 < var_2ch);\n        }\ncode_r0x00448f1a:\n        in_EDX = var_30h;\n        var_1ch = *var_30h;\n        if (var_1ch + -0x31 < 0x8) {\n    // switch table (8 cases) at 0x44f2ff\n            switch(*(*(var_1ch + 0x44f2a5) * 4 + 0x44f2ff)) {\n            case 0x448f3a:\n                var_30h = var_30h + 1;\n                puVar14 = var_1ch + -0x31;\n                var_14h = *(var_1ch + 0x258df5);\n                var_2ch = *(var_1ch + 0x258def);\n                var_1ch = puVar14 & 1;\n                if (var_2ch == NULL) {\n                    var_2ch = 0x7fffffff;\n                }\n                break;\n            case 0x448f6d:\n                uVar8 = *var_30h;\n                var_14h = var_30h[1];\n                var_2ch = var_30h[2];\n                if (var_2ch == NULL) {\n                    var_2ch = 0x7fffffff;\n                }\n                var_30h = var_30h + 3;\n                var_1ch = uVar8 == 0x69;\n            }\n            puVar14 = var_14h;\n            in_EDX = var_30h;\n            if ((var_20h != NULL) && ((-1 < var_20h || (var_14h != NULL)))) {\n                var_34h = 0x1;\n                if (0 < var_14h) {\n                    do {\n                        iVar15 = fcn.0049b23b(var_20h, arg_10h, var_24h);\n                        if (iVar15 < 0) goto code_r0x0044d731;\n                        var_8h = var_8h + iVar15;\n                        var_34h = var_34h + 1;\n                    } while (var_34h <= puVar14);\n                }\n                puVar16 = var_8h;\n                in_ECX = var_8h;\n                if (puVar14 != var_2ch) {\n                    if (var_1ch != NULL) {\n                        uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                        while( true ) {\n                            if (uVar10 != 0) {\n                                return uVar10;\n                            }\n                            if (var_2ch <= var_14h) {\n                                return 0;\n                            }\n                            iVar15 = fcn.0049b23b(var_20h, arg_10h, var_24h);\n                            if (iVar15 < 0) break;\n                            var_14h = var_14h + 1;\n                            puVar16 = puVar16 + iVar15;\n                            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                        }\n                        if (iVar15 == -2) {\n                            puVar16 = arg_10h[0x1f];\n                        }\n                        goto code_r0x0044d668;\n                    }\n                    puVar16 = var_8h;\n                    var_1ch = var_8h;\n                    if (puVar14 < var_2ch) goto code_r0x0044d691;\n                    goto code_r0x0044d6f6;\n                }\n            }\n        }\n        else {\n            iVar15 = fcn.0049b23b(var_20h, arg_10h, var_24h);\n            if (iVar15 < 0) {\ncode_r0x0044d731:\n                if (iVar15 == -2) {\n                    var_8h = arg_10h[0x1f];\n                }\n                if (arg_10h[0x23] == 0) {\n                    return 0;\n                }\n                if (var_8h < arg_10h[0x1f]) {\n                    return 0;\n                }\n                bVar20 = var_8h < arg_10h[0x22];\n                bVar21 = var_8h == arg_10h[0x22];\n                goto code_r0x0044b5c0;\n            }\n            in_ECX = var_8h + iVar15;\n            puVar16 = var_8h + iVar15;\n        }\n        goto code_r0x0040a1dd;\n    case 0x75:\n        var_24h = arg_10h[0x1d] + in_EDX[1];\n        if (var_24h == arg_10h[0x1d]) {\n            var_54h = 0;\n        }\n        else {\n            var_54h = var_24h[2];\n        }\n        for (ppuVar9 = arg_10h[0x2a]; ppuVar9 != NULL; ppuVar9 = *ppuVar9) {\n            if ((var_54h == ppuVar9[1]) && (var_8h == ppuVar9[5])) {\n                return 0xffffffe6;\n            }\n        }\n        in_EDX = in_EDX + 2;\n        var_48h = arg_10h[0x25];\n        var_44h = var_8h;\n        var_58h = arg_10h[0x2a];\n        arg_10h[0x2a] = &var_58h;\n        var_4ch = arg_10h[4];\n        var_30h = in_EDX;\n        if (var_4ch < 0x1f) {\n            var_50h = &var_14ch;\n        }\n        else {\n            var_50h = fcn.0040ab22(var_4ch * 4);\n            if (var_50h == NULL) {\n                return 0xfffffffa;\n            }\n        }\n        fcn.00420db0(var_50h, arg_10h[3], var_4ch << 2);\n        uVar8 = *var_24h;\n        while( true ) {\n            if (0x87 < uVar8) {\n                arg_10h[0x27] = 2;\n            }\n            var_2ch = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            fcn.00420db0(arg_10h[3], var_50h, var_4ch << 2);\n            arg_10h[0x25] = var_48h;\n            arg_10h[0x2a] = var_58h;\n            if ((var_2ch == 0x1) || (var_2ch == 0xfffffc19)) break;\n            if ((-0x3e5 < var_2ch) && (var_2ch < -0x3df)) goto code_r0x00447b6e;\n            if (var_2ch != NULL) {\n                if (var_50h != &var_14ch) {\n                    fcn.0040ab2b(var_50h);\n                    return var_2ch;\n                }\n                return var_2ch;\n            }\n            arg_10h[0x2a] = &var_58h;\n            puVar16 = var_24h + var_24h[1];\n            var_24h = var_24h + var_24h[1];\n            if (*puVar16 != 0x77) {\n                arg_10h[0x2a] = var_58h;\ncode_r0x00447b6e:\n                if (var_50h != &var_14ch) {\n                    fcn.0040ab2b(var_50h);\n                    return 0;\n                }\n                return 0;\n            }\n        }\n        if (var_50h != &var_14ch) {\n            fcn.0040ab2b(var_50h);\n        }\n        arg_8h = arg_10h[0x20];\n        in_ECX = arg_10h[0x21];\n        puVar16 = arg_10h[0x21];\n        goto code_r0x0040a1dd;\n    case 0x76:\n        if (*0x4d261c != NULL) {\n            var_d4h = 2;\n            var_d0h = in_EDX[1];\n            var_cch = arg_10h[3];\n            var_c8h = arg_10h[0x1e];\n            var_c4h = arg_10h[0x1f] - arg_10h[0x1e] >> 1;\n            var_c0h = arg_8h - arg_10h[0x1e] >> 1;\n            var_bch = var_8h - arg_10h[0x1e] >> 1;\n            var_ach = in_EDX[2];\n            var_a8h = in_EDX[3];\n            var_b8h = arg_ch / 2;\n            var_b4h = arg_10h[0x25] & 0xffff;\n            if (var_b4h == 0) {\n                var_b4h = 0xffffffff;\n            }\n            var_b0h = arg_10h[0x2b];\n            var_a4h = arg_10h[0x2d];\n            uVar10 = (**0x4d261c)(&var_d4h);\n            if (0 < uVar10) {\n                return 0;\n            }\n            in_ECX = var_8h;\n            if (uVar10 < 0) {\n                return uVar10;\n            }\n        }\n        var_30h = in_EDX + 4;\n        in_EDX = var_30h;\n        puVar16 = var_8h;\n        goto code_r0x0040a1dd;\n    case 0x77:\n        do {\n            puVar14 = in_EDX + in_EDX[1];\n            in_EDX = in_EDX + in_EDX[1];\n            var_30h = in_EDX;\n        } while (*puVar14 == 0x77);\n        goto code_r0x0040a1dd;\n    case 0x78:\n    case 0x79:\n    case 0x7a:\n    case 0x7b:\n        puVar16 = in_EDX + -in_EDX[1];\n        uVar8 = *puVar16;\n        if ((uVar8 < 0x88) && (uVar8 != 0x81)) {\n            var_2ch = NULL;\n        }\n        else {\n            var_2ch = arg_14h[1];\n            arg_14h = *arg_14h;\n        }\n        if (((0x7c < uVar8) && (uVar8 < 0x81)) || (uVar8 == 0x82)) {\n            arg_10h[0x21] = var_8h;\n            arg_10h[0x24] = arg_ch;\n            arg_10h[0x20] = arg_8h;\n            return 1;\n        }\n        if (((uVar8 == 0x85) || (uVar8 == 0x8a)) || ((uVar8 == 0x86 || (uVar8 == 0x8b)))) {\n            var_24h = puVar16[2];\n            var_34h = var_24h * 2;\n            if ((arg_10h[0x2a] != 0) && (in_ECX = var_8h,  *(arg_10h[0x2a] + 4) == var_24h)) {\n                arg_10h[0x21] = var_8h;\n                arg_10h[0x20] = arg_8h;\n                return 1;\n            }\n            uVar10 = arg_10h[0x25] & 0xffff0000 | var_24h;\n            arg_10h[0x25] = uVar10;\n            if (var_34h < arg_10h[5]) {\n                if (arg_ch < var_34h) {\n                    puVar18 = arg_10h[3] + arg_ch * 4;\n                    puVar2 = arg_10h[3] + var_24h * 8;\n                    if (puVar18 < puVar2) {\n                        iVar15 = (puVar2 + (-1 - puVar18) >> 2) + 1;\n                        for (; iVar15 != 0; iVar15 = iVar15 + -1) {\n                            *puVar18 = 0xffffffff;\n                            puVar18 = puVar18 + 1;\n                        }\n                    }\n                }\n                *(arg_10h[3] + var_24h * 8) = *(arg_10h[3] + (arg_10h[4] - var_24h) * 4);\n                *(arg_10h[3] + 4 + var_24h * 8) = var_8h - arg_10h[0x1e] >> 1;\n                in_ECX = var_8h;\n                if (arg_ch <= var_34h) {\n                    arg_ch = var_34h + 1;\n                }\n            }\n            else {\n                arg_10h[0x25] = uVar10 | 0x10000;\n            }\n        }\n        var_20h = puVar16;\n        if (*in_EDX != 0x78) {\n            if (*in_EDX == 0x7b) {\n                arg_10h[0x20] = arg_8h;\n                arg_10h[0x21] = var_8h;\n                arg_10h[0x24] = arg_ch;\n                return 0xfffffc1a;\n            }\n            in_ECX = var_8h;\n            if (var_8h != var_2ch) {\n                if (*in_EDX == 0x7a) {\n                    uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    if (uVar10 != 0) {\n                        return uVar10;\n                    }\n                    if (*var_20h != 0x81) {\n                        in_ECX = var_8h;\n                        in_EDX = var_20h;\n                        puVar14 = var_20h;\n                        if (0x87 < *var_20h) {\n                            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                            return uVar10;\n                        }\n                        goto code_r0x0040a305;\n                    }\n                }\n                else {\n                    uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                    if (uVar10 == 0xfffffc1b) {\n                        if (arg_10h[0x2e] != var_20h) {\n                            return 0xfffffc1b;\n                        }\n                    }\n                    else if (uVar10 != 0) {\n                        return uVar10;\n                    }\n                    if (*var_20h != 0x81) {\n                        in_EDX = in_EDX + 2;\n                        in_ECX = var_8h;\n                        puVar14 = in_EDX;\n                        goto code_r0x0040a305;\n                    }\n                }\n                uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                puVar16 = var_20h;\n                goto joined_r0x0044d5e0;\n            }\n        }\n        if (*puVar16 == 0x81) {\n            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\njoined_r0x0044d5e0:\n            if (uVar10 == 0) {\n                arg_10h[0x2e] = puVar16;\n                return 0xfffffc1b;\n            }\n            return uVar10;\n        }\n        goto code_r0x0040a2b6;\n    case 0x7c:\n        if (var_28h == 0) {\n            var_8h = var_8h + -in_EDX[1];\n            if (var_8h < arg_10h[0x1e]) {\n                return 0;\n            }\n        }\n        else {\n            uVar10 = in_EDX[1];\n            if (uVar10 != 0) {\n                do {\n                    uVar10 = uVar10 - 1;\n                    puVar16 = var_8h + -1;\n                    if (puVar16 < arg_10h[0x1e]) {\n                        return 0;\n                    }\n                    if ((*puVar16 & 0xfc00) == 0xdc00) {\n                        puVar16 = var_8h + -2;\n                    }\n                    var_8h = puVar16;\n                } while (0 < uVar10);\n            }\n        }\n        in_ECX = var_8h;\n        if (var_8h < arg_10h[0x22]) {\n            arg_10h[0x22] = var_8h;\n        }\n        goto code_r0x0040a2b6;\n    case 0x7d:\n    case 0x7f:\n        var_1ch = arg_10h[0x2c];\n        if (arg_10h[0x27] == 1) {\n            arg_10h[0x27] = 0;\n            bVar20 = true;\n        }\n        else {\n            bVar20 = false;\n        }\n        do {\n            var_2ch = fcn.0040a180(arg_8h, arg_ch, arg_10h, NULL, arg_18h + 1);\n            if ((var_2ch == 0x1) || (var_2ch == 0xfffffc19)) {\n                arg_8h = arg_10h[0x20];\n                break;\n            }\n            arg_10h[0x2c] = var_1ch;\n            if (var_2ch == 0xfffffc20) {\n                if (in_EDX + in_EDX[1] <= arg_10h[0x20]) {\n                    return 0xfffffc20;\n                }\n                if ((*in_EDX != 0x77) && (in_EDX[in_EDX[1]] != 0x77)) {\n                    return 0xfffffc20;\n                }\n            }\n            else if (var_2ch != NULL) {\n                return var_2ch;\n            }\n            puVar16 = in_EDX + in_EDX[1];\n            in_EDX = in_EDX + in_EDX[1];\n        } while (*puVar16 == 0x77);\n        if (*in_EDX == 0x78) {\n            return 0;\n        }\n        if (bVar20) {\n            return 1;\n        }\n        do {\n            puVar16 = in_EDX + in_EDX[1];\n            in_EDX = in_EDX + in_EDX[1];\n        } while (*puVar16 == 0x77);\n        arg_ch = arg_10h[0x24];\n        var_30h = in_EDX + 2;\n        in_ECX = var_8h;\n        in_EDX = var_30h;\n        puVar16 = var_8h;\n        goto code_r0x0040a1dd;\n    case 0x7e:\n    case 0x80:\n        uVar10 = arg_10h[0x2c];\n        if (arg_10h[0x27] == 1) {\n            arg_10h[0x27] = 0;\n            var_34h = 0x1;\n        }\n        else {\n            var_34h = NULL;\n        }\ncode_r0x004477fe:\n        var_2ch = fcn.0040a180(arg_8h, arg_ch, arg_10h, NULL, arg_18h + 1);\n        arg_10h[0x2c] = uVar10;\n        if (var_2ch < -0x3df) {\n            if (var_2ch != 0xfffffc20) {\n                if (var_2ch == 0xfffffc19) {\n                    return 0;\n                }\n                if (3 < var_2ch + 0x3e4U) {\n                    return var_2ch;\n                }\ncode_r0x00447885:\n                do {\n                    puVar16 = in_EDX + in_EDX[1];\n                    in_EDX = in_EDX + in_EDX[1];\n                } while (*puVar16 == 0x77);\ncode_r0x00447893:\n                if (var_34h != NULL) {\n                    return 1;\n                }\n                var_30h = in_EDX + 2;\n                in_ECX = var_8h;\n                in_EDX = var_30h;\n                puVar16 = var_8h;\n                goto code_r0x0040a1dd;\n            }\n            if ((in_EDX + in_EDX[1] <= arg_10h[0x20]) || ((*in_EDX != 0x77 && (in_EDX[in_EDX[1]] != 0x77))))\n            goto code_r0x00447885;\n        }\n        else if (var_2ch != NULL) {\n            if (var_2ch == 0x1) {\n                return 0;\n            }\n            return var_2ch;\n        }\n        puVar16 = in_EDX + in_EDX[1];\n        in_EDX = in_EDX + in_EDX[1];\n        if (*puVar16 != 0x77) goto code_r0x00447893;\n        goto code_r0x004477fe;\n    case 0x81:\n    case 0x83:\n    case 0x88:\n        goto code_r0x0040a2c1;\n    case 0x82:\n        uVar10 = arg_10h[0x2c];\n        var_1ch = var_8h;\n        var_20h = in_EDX;\n        do {\n            uVar11 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            if (uVar11 == 1) {\n                arg_8h = arg_10h[0x20];\n                break;\n            }\n            if (uVar11 == 0xfffffc20) {\n                if (in_EDX + in_EDX[1] <= arg_10h[0x20]) {\n                    return 0xfffffc20;\n                }\n                if ((*in_EDX != 0x77) && (in_EDX[in_EDX[1]] != 0x77)) {\n                    return 0xfffffc20;\n                }\n            }\n            else if (uVar11 != 0) {\n                return uVar11;\n            }\n            in_EDX = in_EDX + in_EDX[1];\n            arg_10h[0x2c] = uVar10;\n        } while (*in_EDX == 0x77);\n        if ((*in_EDX != 0x82) && (*in_EDX != 0x77)) {\n            return 0;\n        }\n        do {\n            puVar16 = in_EDX + in_EDX[1];\n            in_EDX = in_EDX + in_EDX[1];\n        } while (*puVar16 == 0x77);\n        arg_ch = arg_10h[0x24];\n        var_8h = arg_10h[0x21];\n        if ((*in_EDX == 0x78) || (var_8h == var_1ch)) goto code_r0x00447dda;\n        if (*in_EDX == 0x7a) {\n            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            in_ECX = var_8h;\n            in_EDX = var_20h;\n            puVar14 = var_20h;\n            if (uVar10 != 0) {\n                return uVar10;\n            }\n        }\n        else {\n            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            if (uVar10 != 0) {\n                return uVar10;\n            }\n            in_EDX = in_EDX + 2;\n            in_ECX = var_8h;\n            puVar14 = in_EDX;\n        }\n        goto code_r0x0040a305;\n    case 0x84:\n    case 0x89:\n        var_24h = NULL;\n        goto code_r0x004472b1;\n    case 0x85:\n    case 0x8a:\n        var_30h = in_EDX[2];\n        var_20h = var_30h * 2;\n        if (arg_10h[5] <= var_20h) goto code_r0x0040a2c1;\n        uVar10 = arg_10h[3];\n        var_24h = *(uVar10 + var_30h * 8);\n        var_40h = *(uVar10 + 4 + var_30h * 8);\n        piVar1 = uVar10 + (arg_10h[4] - var_30h) * 4;\n        var_3ch = *piVar1;\n        var_1ch = arg_10h[0x25];\n        var_34h = arg_10h[0x2c];\n        *piVar1 = var_8h - arg_10h[0x1e] >> 1;\n        goto code_r0x0040a8d0;\n    case 0x86:\n    case 0x8b:\n        var_24h = NULL;\ncode_r0x00447c8e:\n        var_20h = in_EDX[2];\n        if (arg_10h[5] <= var_20h * 2) goto code_r0x004472b1;\n        var_18h = var_20h * 8;\n        var_1ch = in_EDX - arg_10h[0x1d] >> 1;\n        uVar10 = arg_10h[3];\n        var_30h = NULL;\n        var_14h = *(var_18h + uVar10);\n        var_10h = *(var_18h + uVar10 + 4);\n        var_ch = *(uVar10 + (arg_10h[4] - var_20h) * 4);\n        var_34h = arg_10h[0x25];\n        puVar16 = var_8h;\n        do {\n            while( true ) {\n                var_8h = puVar16;\n                *(arg_10h[3] + (arg_10h[4] - var_20h) * 4) = var_8h - arg_10h[0x1e] >> 1;\n                if (0x87 < puVar14) {\n                    arg_10h[0x27] = 2;\n                }\n                var_2ch = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                if (var_2ch != 0xfffffc1a) break;\n                arg_ch = arg_10h[0x24];\n                in_EDX = arg_10h[0x1d] + var_1ch * 2;\n                var_34h = arg_10h[0x25];\n                arg_8h = arg_10h[0x20];\n                var_30h = 0x1;\n                puVar16 = arg_10h[0x21];\n                if (var_8h == arg_10h[0x21]) goto code_r0x00447e7f;\n            }\n            if (var_2ch == 0xfffffc20) {\n                if (in_EDX + in_EDX[1] <= arg_10h[0x20]) {\n                    return 0xfffffc20;\n                }\n                if ((*in_EDX != 0x77) && (in_EDX[in_EDX[1]] != 0x77)) {\n                    return 0xfffffc20;\n                }\n            }\n            else if (var_2ch != NULL) {\n                return var_2ch;\n            }\n            arg_10h[0x25] = var_34h;\n            puVar17 = in_EDX + in_EDX[1];\n            in_EDX = in_EDX + in_EDX[1];\n            puVar16 = var_8h;\n        } while (*puVar17 == 0x77);\n        if (var_30h == NULL) {\n            *(var_18h + arg_10h[3]) = var_14h;\n            *(var_18h + arg_10h[3] + 4) = var_10h;\n            *(arg_10h[3] + (arg_10h[4] - var_20h) * 4) = var_ch;\n        }\n        goto code_r0x00447e8d;\n    case 0x87:\n    case 0x8c:\n        var_2ch = in_EDX + 2;\n        var_24h = in_EDX[1];\n        puVar16 = var_2ch;\n        if (in_EDX[2] == 0x76) {\n            if (*0x4d261c != NULL) {\n                var_a0h = 2;\n                var_9ch = in_EDX[3];\n                var_98h = arg_10h[3];\n                var_94h = arg_10h[0x1e];\n                var_90h = arg_10h[0x1f] - arg_10h[0x1e] >> 1;\n                var_8ch = arg_8h - arg_10h[0x1e] >> 1;\n                var_88h = var_8h - arg_10h[0x1e] >> 1;\n                var_78h = in_EDX[4];\n                var_74h = in_EDX[5];\n                var_84h = arg_ch / 2;\n                var_80h = arg_10h[0x25] & 0xffff;\n                if (var_80h == 0) {\n                    var_80h = 0xffffffff;\n                }\n                var_7ch = arg_10h[0x2b];\n                var_70h = arg_10h[0x2d];\n                uVar10 = (**0x4d261c)(&var_a0h);\n                if (0 < uVar10) {\n                    return 0;\n                }\n                in_ECX = var_8h;\n                if (uVar10 < 0) {\n                    return uVar10;\n                }\n            }\n            puVar16 = var_2ch + 4;\n            var_24h = var_24h + -2;\n        }\n        var_20h = NULL;\n        var_30h = *puVar16;\n        puVar19 = var_24h;\n        puVar17 = var_20h;\n        var_2ch = puVar16;\n    // switch table (17 cases) at 0x44f273\n        switch(var_30h) {\n        case 0x8d:\n            if ((puVar16[1] * 2 < arg_ch) && (-1 < *(arg_10h[3] + puVar16[1] * 8))) {\n                puVar17 = 0x1;\n            }\n            else {\n                puVar17 = NULL;\n            }\n            if (puVar17 == NULL) break;\n            goto code_r0x00447644;\n        case 0x8e:\n            uVar10 = puVar16[2];\n            puVar12 = arg_10h[0xc] + puVar16[1] * arg_10h[9] * 2;\n            if (uVar10 != 0) {\n                do {\n                    uVar10 = uVar10 - 1;\n                    if ((*puVar12 * 2 < arg_ch) && (var_34h = puVar12,  -1 < *(arg_10h[3] + *puVar12 * 8)))\n                    goto code_r0x00447535;\n                    puVar12 = puVar12 + arg_10h[9];\n                    var_34h = puVar12;\n                } while (0 < uVar10);\n            }\n            break;\n        case 0x8f:\n            if ((arg_10h[0x2a] != 0) && ((puVar16[1] == 0xffff || (puVar16[1] == *(arg_10h[0x2a] + 4))))) {\n                puVar17 = 0x1;\n                goto code_r0x00447644;\n            }\n            break;\n        case 0x90:\n            if (arg_10h[0x2a] != 0) {\n                uVar10 = puVar16[2];\n                puVar12 = arg_10h[0xc] + puVar16[1] * arg_10h[9] * 2;\n                if (uVar10 != 0) {\n                    var_1ch = *(arg_10h[0x2a] + 4);\n                    do {\n                        uVar10 = uVar10 - 1;\n                        var_34h = puVar12;\n                        if (*puVar12 == var_1ch) goto code_r0x00447535;\n                        puVar12 = puVar12 + arg_10h[9];\n                        var_34h = puVar12;\n                    } while (0 < uVar10);\n                }\n            }\n            break;\n        case 0x91:\n        case 0x9d:\n            break;\n        default:\n            arg_10h[0x27] = 1;\n            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, NULL, arg_18h + 1);\n            in_ECX = var_8h;\n            if (uVar10 == 1) {\n                if (arg_ch < arg_10h[0x24]) {\n                    arg_ch = arg_10h[0x24];\n                }\n                var_20h = 0x1;\n                puVar17 = var_2ch;\n                if (*var_2ch == 0x92) {\n                    puVar17 = puVar16 + 1;\n                    puVar16 = puVar17;\n                }\n                puVar19 = puVar16 + puVar17[1];\n                uVar8 = puVar16[puVar17[1]];\n                while (uVar8 == 0x77) {\n                    puVar16 = puVar19 + puVar19[1];\n                    puVar19 = puVar19 + puVar19[1];\n                    uVar8 = *puVar16;\n                }\n                puVar16 = puVar19 + (2 - *(var_30h + 0x4c2160));\n                puVar17 = 0x1;\n                goto code_r0x00447644;\n            }\n            puVar19 = var_24h;\n            puVar17 = var_20h;\n            puVar16 = var_2ch;\n            if ((uVar10 != 0) && (uVar10 != 0xfffffc20)) {\n                return uVar10;\n            }\n        }\n        goto code_r0x004474e9;\n    case 0x92:\n        puVar16 = in_EDX + 1;\n        uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (uVar10 != 0) {\n            return uVar10;\n        }\n        do {\n            puVar14 = puVar16 + puVar16[1];\n            puVar16 = puVar16 + puVar16[1];\n        } while (*puVar14 == 0x77);\n        var_30h = puVar16 + 2;\n        in_ECX = var_8h;\n        in_EDX = var_30h;\n        puVar16 = var_8h;\n        goto code_r0x0040a1dd;\n    case 0x93:\n        in_EDX = in_EDX + 1;\n        puVar16 = in_EDX;\n        do {\n            puVar14 = puVar16 + puVar16[1];\n            puVar16 = puVar16 + puVar16[1];\n        } while (*puVar14 == 0x77);\n        var_30h = in_EDX;\n        uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        in_ECX = var_8h;\n        puVar16 = var_8h;\n        if (uVar10 != 0) {\n            return uVar10;\n        }\n        goto code_r0x0040a1dd;\n    case 0x94:\n        puVar14 = in_EDX[1];\n        in_EDX = in_EDX + 1;\n        var_24h = 0x1;\n        if ((puVar14 == 0x86) || (puVar14 == 0x8b)) goto code_r0x00447c8e;\ncode_r0x004472b1:\n        var_34h = NULL;\n        var_1ch = in_EDX - arg_10h[0x1d] >> 1;\n        var_20h = arg_10h[0x25];\n        puVar16 = var_8h;\n        do {\n            while( true ) {\n                var_8h = puVar16;\n                if (0x87 < puVar14) {\n                    arg_10h[0x27] = 2;\n                }\n                var_2ch = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                if (var_2ch == 0xfffffc1a) break;\n                if (var_2ch == 0xfffffc20) {\n                    if (in_EDX + in_EDX[1] <= arg_10h[0x20]) {\n                        return 0xfffffc20;\n                    }\n                    if ((*in_EDX != 0x77) && (in_EDX[in_EDX[1]] != 0x77)) {\n                        return 0xfffffc20;\n                    }\n                }\n                else if (var_2ch != NULL) {\n                    return var_2ch;\n                }\n                puVar16 = in_EDX + in_EDX[1];\n                in_EDX = in_EDX + in_EDX[1];\n                if (*puVar16 != 0x77) {\n                    if (var_34h != NULL) goto code_r0x00447dda;\n                    if (var_24h == NULL) {\n                        return 0;\n                    }\n                    var_30h = in_EDX + 2;\n                    in_ECX = var_8h;\n                    in_EDX = var_30h;\n                    puVar16 = var_8h;\n                    goto code_r0x0040a1dd;\n                }\n                arg_10h[0x25] = var_20h;\n                puVar16 = var_8h;\n            }\n            arg_ch = arg_10h[0x24];\n            var_34h = 0x1;\n            in_EDX = arg_10h[0x1d] + var_1ch * 2;\n            arg_8h = arg_10h[0x20];\n            puVar16 = arg_10h[0x21];\n        } while (var_8h != arg_10h[0x21]);\n        do {\n            puVar16 = in_EDX + in_EDX[1];\n            in_EDX = in_EDX + in_EDX[1];\n        } while (*puVar16 == 0x77);\n        goto code_r0x00447dda;\n    case 0x95:\n        arg_10h[0x2d] = in_EDX + 2;\n        arg_10h[0x2c] = 0;\n        var_2ch = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (((var_2ch == 0x1) || (var_2ch == 0xfffffc19)) && (arg_10h[0x2c] == 0)) {\n            arg_10h[0x2c] = in_EDX + 2;\n            return var_2ch;\n        }\n        if (var_2ch != 0xfffffc1f) {\n            return var_2ch;\n        }\n        iVar15 = fcn.0049b866();\n        if (iVar15 == 0) {\n            arg_10h[0x20] = puVar16;\n            return 0xfffffc1e;\n        }\n        return var_2ch;\n    case 0x96:\n        uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        goto joined_r0x0044f10d;\n    case 0x97:\n        arg_10h[0x2d] = in_EDX + 2;\n        arg_10h[0x2c] = 0;\n        uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (((uVar10 == 1) || (uVar10 == 0xfffffc19)) && (arg_10h[0x2c] == 0)) {\n            arg_10h[0x2c] = in_EDX + 2;\n        }\njoined_r0x0044f10d:\n        if (uVar10 == 0) {\n            return 0xfffffc1d;\n        }\n        return uVar10;\n    case 0x98:\n        uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (uVar10 == 0) {\n            arg_10h[0x20] = puVar16;\n            return 0xfffffc1e;\n        }\n        return uVar10;\n    case 0x99:\n        arg_10h[10] = arg_10h[10] + 1;\n        if (arg_10h[0xb] <= arg_10h[10] && arg_10h[10] != arg_10h[0xb]) {\n            uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n            if (uVar10 == 0) {\n                arg_10h[0x20] = in_EDX + 2;\n                return 0xfffffc1f;\n            }\n            return uVar10;\n        }\n        var_30h = in_EDX + *(*in_EDX + 0x4c2160) + in_EDX[1];\n        in_EDX = var_30h;\n        goto code_r0x0040a1dd;\n    case 0x9a:\n        uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        goto joined_r0x0044f1eb;\n    case 0x9b:\n        arg_10h[0x2d] = in_EDX + 2;\n        arg_10h[0x2c] = 0;\n        uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (((uVar10 == 1) || (uVar10 == 0xfffffc19)) && (arg_10h[0x2c] == 0)) {\n            arg_10h[0x2c] = in_EDX + 2;\n        }\njoined_r0x0044f1eb:\n        if (uVar10 == 0) {\n            arg_10h[0x20] = in_EDX;\n            return 0xfffffc20;\n        }\n        return uVar10;\n    case 0x9c:\n        uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (uVar10 == 0) {\n            return 0xfffffc1c;\n        }\n        return uVar10;\n    case 0x9d:\n        goto code_r0x0040a929;\n    case 0xa0:\n        var_1ch = in_EDX[1];\n        uVar10 = arg_10h[0x25] & 0xffff0000 | var_1ch;\n        var_34h = var_1ch * 2;\n        arg_10h[0x25] = uVar10;\n        if (var_34h < arg_10h[5]) {\n            *(arg_10h[3] + var_1ch * 8) = *(arg_10h[3] + (arg_10h[4] - var_1ch) * 4);\n            *(arg_10h[3] + 4 + var_1ch * 8) = var_8h - arg_10h[0x1e] >> 1;\n            in_ECX = var_8h;\n            if (arg_ch <= var_34h) {\n                puVar18 = arg_10h[3] + arg_ch * 4;\n                puVar2 = arg_10h[3] + var_1ch * 8;\n                if (puVar18 < puVar2) {\n                    iVar15 = (puVar2 + (-1 - puVar18) >> 2) + 1;\n                    for (; iVar15 != 0; iVar15 = iVar15 + -1) {\n                        *puVar18 = 0xffffffff;\n                        puVar18 = puVar18 + 1;\n                    }\n                }\n                arg_ch = var_34h + 1;\n            }\n        }\n        else {\n            arg_10h[0x25] = uVar10 | 0x10000;\n        }\ncode_r0x0040a2b6:\n        var_30h = in_EDX + 2;\n        in_EDX = var_30h;\n        puVar16 = var_8h;\n        goto code_r0x0040a1dd;\n    case 0xa1:\n        var_30h = in_EDX + 1;\n        do {\n            puVar14 = var_30h + var_30h[1];\n            var_30h = var_30h + var_30h[1];\n        } while (*puVar14 == 0x77);\n        var_30h = var_30h + 2;\n        in_EDX = var_30h;\n        goto code_r0x0040a1dd;\n    }\n    var_8h = puVar16;\n    var_30h = in_EDX + 1;\n    in_EDX = var_30h;\n    puVar16 = var_8h;\n    goto code_r0x0040a1dd;\ncode_r0x00447535:\n    puVar17 = 0x1;\ncode_r0x00447644:\n    puVar19 = *(var_30h + 0x4c2160);\ncode_r0x004474e9:\n    var_30h = puVar16 + puVar19;\n    in_EDX = var_30h;\n    if ((puVar17 != NULL) || (puVar16 = var_8h,  var_30h[-2] == 0x77)) goto code_r0x004474fe;\n    goto code_r0x0040a1dd;\ncode_r0x004474fe:\n    puVar14 = var_30h;\n    if (puVar14 == 0x8c) {\n        arg_10h[0x27] = 2;\n        uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        return uVar10;\n    }\ncode_r0x0040a305:\n    var_30h = puVar14;\n    var_28h = arg_10h[0x14];\n    uVar10 = *arg_10h;\n    if (arg_10h[1] <= uVar10) goto code_r0x0044f265;\n    goto code_r0x0040a1c1;\ncode_r0x00447e7f:\n    do {\n        puVar16 = in_EDX + in_EDX[1];\n        in_EDX = in_EDX + in_EDX[1];\n        var_30h = 1;\n    } while (*puVar16 == 0x77);\ncode_r0x00447e8d:\n    if (var_24h == NULL) {\n        if (var_30h == NULL) {\n            return 0;\n        }\n        var_30h = in_EDX + 2;\n        in_ECX = var_8h;\n        in_EDX = var_30h;\n        puVar16 = var_8h;\n    }\n    else {\ncode_r0x00447dda:\n        var_30h = in_EDX + 2;\n        in_ECX = var_8h;\n        in_EDX = var_30h;\n        puVar16 = var_8h;\n    }\n    goto code_r0x0040a1dd;\ncode_r0x0040a2c1:\n    if ((puVar14 < 0x88) && (puVar14 != 0x81)) {\n        if ((arg_10h[0x1c] == 0) && (in_EDX[in_EDX[1]] != 0x77)) goto code_r0x0040a2f2;\n    }\n    else {\n        arg_10h[0x27] = 2;\n    }\n    var_38h = arg_10h[0x2c];\n    var_1ch = arg_10h[0x25];\n    var_2ch = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n    if (var_2ch == 0xfffffc20) {\n        if (in_EDX + in_EDX[1] <= arg_10h[0x20]) {\n            return 0xfffffc20;\n        }\n        if ((*in_EDX != 0x77) && (in_EDX[in_EDX[1]] != 0x77)) {\n            return 0xfffffc20;\n        }\n    }\n    else if (var_2ch != NULL) {\n        if (var_2ch != 0xfffffc1b) {\n            return var_2ch;\n        }\n        uVar8 = *in_EDX;\n        if (uVar8 != 0x81) {\n            while (uVar8 == 0x77) {\n                puVar16 = in_EDX + in_EDX[1];\n                in_EDX = in_EDX + in_EDX[1];\n                uVar8 = *puVar16;\n            }\n            in_EDX = in_EDX + -in_EDX[1];\n        }\n        if (arg_10h[0x2e] == in_EDX) {\n            return 0;\n        }\n        return 0xfffffc1b;\n    }\n    in_EDX = in_EDX + in_EDX[1];\n    arg_10h[0x2c] = var_38h;\n    if (*in_EDX != 0x77) {\n        return 0;\n    }\n    arg_10h[0x25] = var_1ch;\n    goto code_r0x0040a2c1;\ncode_r0x0040a2f2:\n    in_EDX = in_EDX + *(*in_EDX + 0x4c2160);\n    in_ECX = var_8h;\n    puVar14 = in_EDX;\n    goto code_r0x0040a305;\ncode_r0x0044bb90:\n    if ((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) {\n        arg_10h[0x1a] = 1;\n        uVar10 = arg_10h[0x23];\njoined_r0x0044bff0:\n        if (1 < uVar10) {\n            return 0xfffffff4;\n        }\n    }\ncode_r0x0044c237:\n    in_ECX = var_8h;\n    puVar16 = var_8h;\n    if (var_2ch == NULL) {\n        if (puVar17 < var_8h) {\n            do {\n                puVar16 = var_8h;\n                uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                if (uVar10 != 0) {\n                    return uVar10;\n                }\n                var_8h = puVar16 + -1;\n                if ((var_28h != 0) && ((*var_8h & 0xfc00) == 0xdc00)) {\n                    var_8h = puVar16 + -2;\n                }\n                in_ECX = var_8h;\n                puVar14 = var_30h;\n            } while (var_10h < var_8h);\n        }\n        goto code_r0x0040a305;\n    }\n    goto code_r0x0040a1dd;\ncode_r0x0044ce78:\n    puVar19 = var_8h;\n    if ((arg_10h[0x23] != 0) && (arg_10h[0x22] <= var_8h && var_8h != arg_10h[0x22])) {\n        arg_10h[0x1a] = 1;\n        uVar10 = arg_10h[0x23];\njoined_r0x0044cd8b:\n        puVar19 = var_8h;\n        var_10h = puVar17;\n        if (1 < uVar10) {\n            return 0xfffffff4;\n        }\n    }\ncode_r0x0044d220:\n    in_ECX = var_8h;\n    puVar16 = var_8h;\n    if (var_2ch == NULL) {\n        puVar14 = var_30h;\n        if (puVar19 != var_10h) {\n            do {\n                uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                if (uVar10 != 0) {\n                    return uVar10;\n                }\n                var_8h = puVar19 + -1;\n                if ((((var_20h == 0x11) && (var_10h < var_8h)) && (*var_8h == 10)) && (puVar19[-2] == 0xd)) {\n                    var_8h = puVar19 + -2;\n                }\n                in_ECX = var_8h;\n                puVar19 = var_8h;\n                puVar14 = var_30h;\n            } while (var_8h != var_10h);\n        }\n        goto code_r0x0040a305;\n    }\n    goto code_r0x0040a1dd;\ncode_r0x0044c8aa:\n    puVar17 = var_8h;\n    puVar14 = var_8h;\n    if ((arg_10h[0x23] == 0) || (var_8h < arg_10h[0x22] || var_8h == arg_10h[0x22])) goto code_r0x0044c5b0;\n    arg_10h[0x1a] = 1;\n    uVar10 = arg_10h[0x23];\n    iVar15 = arg_10h[0x23] - 1;\n    bVar20 = iVar15 == 0;\n    goto code_r0x0044c5a7;\ncode_r0x0044c588:\n    puVar17 = var_8h;\n    puVar14 = var_8h;\n    if ((arg_10h[0x23] == 0) || (var_8h < arg_10h[0x22] || var_8h == arg_10h[0x22])) goto code_r0x0044c5b0;\n    arg_10h[0x1a] = 1;\n    uVar10 = arg_10h[0x23];\n    uVar11 = arg_10h[0x23];\n    iVar15 = uVar11 - 1;\n    bVar20 = uVar11 == 1;\ncode_r0x0044c5a7:\n    puVar17 = var_8h;\n    puVar14 = var_8h;\n    if (!bVar20 && SBORROW4(uVar10, 1) == iVar15 < 0) {\n        return 0xfffffff4;\n    }\ncode_r0x0044c5b0:\n    var_8h = puVar14;\n    in_ECX = var_8h;\n    puVar16 = var_8h;\n    if (var_2ch == NULL) {\n        puVar14 = var_30h;\n        if (var_10h < puVar17) {\n            do {\n                uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                if (uVar10 != 0) {\n                    return uVar10;\n                }\n                var_8h = puVar17 + -1;\n                if ((puVar17[-1] & 0xfc00) == 0xdc00) {\n                    var_8h = puVar17 + -2;\n                }\n                if ((((var_20h == 0x11) && (var_10h < var_8h)) && (*var_8h == 10)) && (var_8h[-1] == 0xd)) {\n                    var_8h = var_8h + -1;\n                }\n                in_ECX = var_8h;\n                puVar17 = var_8h;\n                puVar14 = var_30h;\n            } while (var_10h < var_8h);\n        }\n        goto code_r0x0040a305;\n    }\n    goto code_r0x0040a1dd;\njoined_r0x0044e659:\n    var_8h = puVar17;\n    if (uVar10 != 0) {\n        return uVar10;\n    }\n    if (var_14h <= var_ch) {\n        return 0;\n    }\n    if (arg_10h[0x1f] <= var_8h) goto code_r0x0044b5ad;\n    var_38h = *var_8h;\n    puVar19 = var_8h + 2;\n    puVar14 = var_38h;\n    if ((var_28h != 0) && ((var_38h & 0xfc00) == 0xd800)) {\n        uVar8 = *puVar19;\n        puVar19 = var_8h + 4;\n        puVar14 = ((var_38h & 0x3ff) << 10 | uVar8 & 0x3ff) + 0x10000;\n    }\n    var_1ch = *(*((*((puVar14 >> 7) + 0x4bff60) * 0x80 + (puVar14 & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af412);\n    puVar14 = arg_10h[0x1f];\n    puVar17 = puVar19;\n    if (puVar19 < puVar14) {\n        do {\n            uVar10 = *puVar17;\n            var_34h = 0x1;\n            if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n                var_34h = 0x2;\n                uVar10 = ((uVar10 & 0x3ff) << 10 | puVar17[1] & 0x3ff) + 0x10000;\n            }\n            uVar6 = *(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af412);\n            var_38h = puVar19;\n            if ((*(var_1ch * 4 + 0x4c2210) & 1 << (uVar6 & 0x1f)) == 0) {\n                puVar14 = arg_10h[0x1f];\n                break;\n            }\n            puVar17 = puVar17 + var_34h;\n            puVar14 = arg_10h[0x1f];\n            var_1ch = uVar6;\n        } while (puVar17 < puVar14);\n    }\n    if ((((arg_10h[0x23] != 0) && (puVar14 <= puVar17)) && (arg_10h[0x22] <= puVar17 && puVar17 != arg_10h[0x22])) &&\n       (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n        return 0xfffffff4;\n    }\n    var_ch = var_ch + 1;\n    var_8h = puVar16;\n    uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n    puVar16 = var_8h;\n    goto joined_r0x0044e659;\njoined_r0x0044eb50:\n    if (uVar10 != 0) {\n        return uVar10;\n    }\n    if (var_14h <= var_ch) {\n        return 0;\n    }\n    puVar16 = arg_10h[0x1f];\n    if (puVar16 <= puVar17) {\n        if (arg_10h[0x23] == 0) {\n            return 0;\n        }\n        if (puVar17 < arg_10h[0x22] || puVar17 == arg_10h[0x22]) {\n            return 0;\n        }\n        arg_10h[0x1a] = 1;\n        uVar10 = arg_10h[0x23];\njoined_r0x0044ef21:\n        if (uVar10 < 2) {\n            return 0;\n        }\n        return 0xfffffff4;\n    }\n    if (var_20h == 0xc) {\n        if (arg_10h[6] == 0) {\n            if ((puVar17 <= puVar16 + -arg_10h[7]) && (*puVar17 == *(arg_10h + 0xd))) {\n                if (arg_10h[7] == 1) {\n                    return 0;\n                }\n                if (puVar17[1] == *(arg_10h + 0x36)) {\n                    return 0;\n                }\n            }\n        }\n        else {\n            iVar15 = fcn.00408665(puVar16, arg_10h + 7, 0);\n            if (iVar15 != 0) {\n                return 0;\n            }\n        }\n    }\n    uVar8 = *puVar17;\n    var_38h = uVar8;\n    puVar16 = puVar17 + 1;\n    if (0xf < var_20h + -3) {\n        return 0xfffffff2;\n    }\n    // switch table (16 cases) at 0x44f597\n    switch(*((var_20h + -3) * 4 + 0x44f597)) {\n    case 0x44ebe4:\n        if (((((arg_10h[0x23] != 0) && (arg_10h[0x1f] <= puVar16)) && (arg_10h[6] == 0)) &&\n            ((arg_10h[7] == 2 && (var_38h == *(arg_10h + 0xd))))) && (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n            return 0xfffffff4;\n        }\n        break;\n    case 0x44ec33:\n        if (var_38h < 0xe) {\n            if (var_38h == 0xd) {\n                if ((puVar16 < arg_10h[0x1f]) && (*puVar16 == 10)) {\n                    puVar16 = puVar17 + 2;\n                }\n            }\n            else if (var_38h != 0xa) {\n                if (1 < var_38h - 0xbU) {\n                    return 0;\n                }\n                goto code_r0x0044ec83;\n            }\n        }\n        else {\n            if ((var_38h != 0x85) && (0x1 < var_38h + -0x1014)) {\n                return 0;\n            }\ncode_r0x0044ec83:\n            if (arg_10h[0x1b] != 0) {\n                return 0;\n            }\n        }\n        break;\n    case 0x44ec92:\n        if (var_38h < 0x180f) {\n            if (var_38h == 0x180e) {\n                return 0;\n            }\n            if (var_38h < 0xa1) {\n                if (var_38h == 0xa0) {\n                    return 0;\n                }\n                if (var_38h == 0x9) {\n                    return 0;\n                }\n                if (var_38h == 0x20) {\n                    return 0;\n                }\n            }\n            else if (var_38h == 0x1680) {\n                return 0;\n            }\n        }\n        else if (var_38h < 0x2060) {\n            if (var_38h == 0x205f) {\n                return 0;\n            }\n            if (0x1fff < var_38h) {\n                if (var_38h < 0x200b) {\n                    return 0;\n                }\n                if (var_38h == 0x202f) {\n                    return 0;\n                }\n            }\n        }\n        else if (var_38h == 0x3000) {\n            return 0;\n        }\n        break;\n    case 0x44ed1e:\n        if (var_38h < 0x180f) {\n            if (var_38h != 0x180e) {\n                if (var_38h < 0xa1) {\n                    if (((var_38h != 0xa0) && (var_38h != 0x9)) && (var_38h != 0x20)) {\n                        return 0;\n                    }\n                }\n                else if (var_38h != 0x1680) {\n                    return 0;\n                }\n            }\n        }\n        else if (var_38h < 0x2060) {\n            if (var_38h != 0x205f) {\n                if (var_38h < 0x2000) {\n                    return 0;\n                }\n                if ((0x200a < var_38h) && (var_38h != 0x202f)) {\n                    return 0;\n                }\n            }\n        }\n        else if (var_38h != 0x3000) {\n            return 0;\n        }\n        break;\n    case 0x44edaa:\n        if (var_38h < 0x86) {\n            if (var_38h == 0x85) {\n                return 0;\n            }\n            if ((0x9 < var_38h) && (var_38h < 0xe)) {\n                return 0;\n            }\n        }\n        else if ((0x2027 < var_38h) && (var_38h < 0x202a)) {\n            return 0;\n        }\n        break;\n    case 0x44edec:\n        if (var_38h < 0x86) {\n            if ((var_38h != 0x85) && (0x3 < var_38h + -5)) {\n                return 0;\n            }\n        }\n        else if (0x1 < var_38h + -0x1014) {\n            return 0;\n        }\n        break;\n    case 0x44ee1f:\n        if (var_38h < 0x100) {\n            uVar6 = *(var_38h + arg_10h[0x11]) & 4;\njoined_r0x0044eea2:\n            if (uVar6 != 0) {\n                return 0;\n            }\n        }\n        break;\n    case 0x44ee3d:\n        if (0xff < uVar8) {\n            return 0;\n        }\n        uVar6 = *(var_38h + arg_10h[0x11]) & 4;\n        goto joined_r0x0044eebf;\n    case 0x44ee5b:\n        if (uVar8 < 0x100) {\n            uVar6 = *(var_38h + arg_10h[0x11]) & 1;\n            goto joined_r0x0044eea2;\n        }\n        break;\n    case 0x44ee74:\n        if (0xff < uVar8) {\n            return 0;\n        }\n        uVar6 = *(var_38h + arg_10h[0x11]) & 1;\n        goto joined_r0x0044eebf;\n    case 0x44ee91:\n        if (uVar8 < 0x100) {\n            uVar6 = *(var_38h + arg_10h[0x11]) & 0x10;\n            goto joined_r0x0044eea2;\n        }\n        break;\n    case 0x44eeaa:\n        if (0xff < uVar8) {\n            return 0;\n        }\n        uVar6 = *(var_38h + arg_10h[0x11]) & 0x10;\njoined_r0x0044eebf:\n        if (uVar6 == 0) {\n            return 0;\n        }\n        break;\n    case 0x44eef0:\n        goto code_r0x0044eef0;\n    }\n    var_ch = var_ch + 1;\n    uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n    puVar17 = puVar16;\n    goto joined_r0x0044eb50;\njoined_r0x0040a7ca:\n    if (uVar10 != 0) {\n        return uVar10;\n    }\n    if (var_14h <= var_ch) {\n        return 0;\n    }\n    puVar14 = arg_10h[0x1f];\n    var_8h = puVar17;\n    if (puVar14 <= puVar17) goto code_r0x0044b5ad;\n    var_8h = puVar16;\n    if (var_20h == 0xc) {\n        if (arg_10h[6] == 0) {\n            if ((puVar17 <= puVar14 + -arg_10h[7]) && (*puVar17 == *(arg_10h + 0xd))) {\n                if (arg_10h[7] == 1) {\n                    return 0;\n                }\n                if (puVar17[1] == *(arg_10h + 0x36)) {\n                    return 0;\n                }\n            }\n        }\n        else {\n            iVar15 = fcn.00408665(puVar14, arg_10h + 7, var_28h);\n            if (iVar15 != 0) {\n                return 0;\n            }\n        }\n    }\n    uVar10 = *puVar17;\n    var_24h = puVar17 + 1;\n    if ((uVar10 & 0xfc00) == 0xd800) {\n        uVar10 = ((uVar10 & 0x3ff) << 10 | *var_24h & 0x3ff) + 0x10000;\n        var_24h = puVar17 + 2;\n    }\n    puVar17 = var_24h;\n    if (var_20h == 0xc) {\ncode_r0x0040a839:\n        if ((((arg_10h[0x23] != 0) && (arg_10h[0x1f] <= var_24h)) && (arg_10h[6] == 0)) &&\n           (((arg_10h[7] == 2 && (uVar10 == *(arg_10h + 0xd))) && (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])))) {\n            return 0xfffffff4;\n        }\n        goto code_r0x0040a84c;\n    }\n    if (0xf < var_20h + -3) {\n        return 0xfffffff2;\n    }\n    // switch table (16 cases) at 0x44f557\n    switch(*((var_20h + -3) * 4 + 0x44f557)) {\n    case 0x40a839:\n        goto code_r0x0040a839;\n    case 0x44e854:\n        if (uVar10 < 0xe) {\n            if (uVar10 == 0xd) {\n                if ((var_24h < arg_10h[0x1f]) && (*var_24h == 10)) {\n                    puVar17 = var_24h + 1;\n                }\n            }\n            else if (uVar10 != 10) {\n                if (1 < uVar10 - 0xb) {\n                    return 0;\n                }\n                goto code_r0x0044e8aa;\n            }\n        }\n        else {\n            if ((uVar10 != 0x85) && (1 < uVar10 - 0x2028)) {\n                return 0;\n            }\ncode_r0x0044e8aa:\n            if (arg_10h[0x1b] != 0) {\n                return 0;\n            }\n        }\n        break;\n    case 0x44e8b9:\n        if (uVar10 < 0x180f) {\n            if (uVar10 == 0x180e) {\n                return 0;\n            }\n            if (uVar10 < 0xa1) {\n                if (uVar10 == 0xa0) {\n                    return 0;\n                }\n                if (uVar10 == 9) {\n                    return 0;\n                }\n                if (uVar10 == 0x20) {\n                    return 0;\n                }\n            }\n            else if (uVar10 == 0x1680) {\n                return 0;\n            }\n        }\n        else if (uVar10 < 0x2060) {\n            if (uVar10 == 0x205f) {\n                return 0;\n            }\n            if (0x1fff < uVar10) {\n                if (uVar10 < 0x200b) {\n                    return 0;\n                }\n                if (uVar10 == 0x202f) {\n                    return 0;\n                }\n            }\n        }\n        else if (uVar10 == 0x3000) {\n            return 0;\n        }\n        break;\n    case 0x44e945:\n        if (uVar10 < 0x180f) {\n            if (uVar10 != 0x180e) {\n                if (uVar10 < 0xa1) {\n                    if (((uVar10 != 0xa0) && (uVar10 != 9)) && (uVar10 != 0x20)) {\n                        return 0;\n                    }\n                }\n                else if (uVar10 != 0x1680) {\n                    return 0;\n                }\n            }\n        }\n        else if (uVar10 < 0x2060) {\n            if (uVar10 != 0x205f) {\n                if (uVar10 < 0x2000) {\n                    return 0;\n                }\n                if ((0x200a < uVar10) && (uVar10 != 0x202f)) {\n                    return 0;\n                }\n            }\n        }\n        else if (uVar10 != 0x3000) {\n            return 0;\n        }\n        break;\n    case 0x44e9d1:\n        if (uVar10 < 0x86) {\n            if (uVar10 == 0x85) {\n                return 0;\n            }\n            if ((9 < uVar10) && (uVar10 < 0xe)) {\n                return 0;\n            }\n        }\n        else if ((0x2027 < uVar10) && (uVar10 < 0x202a)) {\n            return 0;\n        }\n        break;\n    case 0x44ea13:\n        if (uVar10 < 0x86) {\n            if ((uVar10 != 0x85) && (3 < uVar10 - 10)) {\n                return 0;\n            }\n        }\n        else if (1 < uVar10 - 0x2028) {\n            return 0;\n        }\n        break;\n    case 0x44ea46:\n        if (uVar10 < 0x100) {\n            uVar6 = *(uVar10 + arg_10h[0x11]) & 4;\njoined_r0x0044eae0:\n            if (uVar6 != 0) {\n                return 0;\n            }\n        }\n        break;\n    case 0x44ea67:\n        if (0xff < uVar10) {\n            return 0;\n        }\n        uVar6 = *(uVar10 + arg_10h[0x11]) & 4;\n        goto joined_r0x0044eb01;\n    case 0x44ea88:\n        if (uVar10 < 0x100) {\n            uVar6 = *(uVar10 + arg_10h[0x11]) & 1;\n            goto joined_r0x0044eae0;\n        }\n        break;\n    case 0x44eaa9:\n        if (0xff < uVar10) {\n            return 0;\n        }\n        uVar6 = *(uVar10 + arg_10h[0x11]) & 1;\n        goto joined_r0x0044eb01;\n    case 0x44eaca:\n        if (uVar10 < 0x100) {\n            uVar6 = *(uVar10 + arg_10h[0x11]) & 0x10;\n            goto joined_r0x0044eae0;\n        }\n        break;\n    case 0x44eaeb:\n        if (0xff < uVar10) {\n            return 0;\n        }\n        uVar6 = *(uVar10 + arg_10h[0x11]) & 0x10;\njoined_r0x0044eb01:\n        if (uVar6 == 0) {\n            return 0;\n        }\n        break;\n    case 0x44eef0:\ncode_r0x0044eef0:\n        return 0xfffffff2;\n    }\ncode_r0x0040a84c:\n    var_ch = var_ch + 1;\n    uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n    puVar16 = var_8h;\n    goto joined_r0x0040a7ca;\njoined_r0x0044e275:\n    if (uVar10 != 0) {\n        return uVar10;\n    }\n    if (var_14h <= var_ch) {\n        return 0;\n    }\n    if (arg_10h[0x1f] <= var_8h) {\ncode_r0x0044b5ad:\n        puVar16 = var_8h;\n        if (arg_10h[0x23] == 0) {\n            return 0;\n        }\ncode_r0x0044b5ba:\n        bVar20 = puVar16 < arg_10h[0x22];\n        bVar21 = puVar16 == arg_10h[0x22];\ncode_r0x0044b5c0:\n        if (!bVar20 && !bVar21) {\ncode_r0x0044b5c6:\n            arg_10h[0x1a] = 1;\n            if (1 < arg_10h[0x23]) {\n                return 0xfffffff4;\n            }\n        }\ncode_r0x0040a929:\n        return 0;\n    }\n    uVar10 = *var_8h;\n    puVar14 = var_8h + 1;\n    if ((var_28h != 0) && ((uVar10 & 0xfc00) == 0xd800)) {\n        uVar10 = ((uVar10 & 0x3ff) << 10 | *puVar14 & 0x3ff) + 0x10000;\n        puVar14 = var_8h + 2;\n    }\n    if (uVar10 < 0x180f) {\n        if (uVar10 == 0x180e) goto code_r0x0044e388;\n        if (uVar10 < 0x86) {\n            if ((uVar10 == 0x85) || ((8 < uVar10 && ((uVar10 < 0xe || (uVar10 == 0x20)))))) goto code_r0x0044e388;\n        }\n        else if ((uVar10 == 0xa0) || (uVar10 == 0x1680)) goto code_r0x0044e388;\ncode_r0x0044e346:\n        if ((*(*(*((*((uVar10 >> 7) + 0x4bff60) * 0x80 + (uVar10 & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af411) * 4 + 0x4c5370\n              ) == 6) == var_3ch) {\n            return 0;\n        }\n    }\n    else {\n        if (0x202f < uVar10) {\n            if ((uVar10 == 0x205f) || (uVar10 == 0x3000)) goto code_r0x0044e388;\n            goto code_r0x0044e346;\n        }\n    // switch table (42 cases) at 0x44f523\n        switch(uVar10) {\n        case 0x2000:\n        case 0x2001:\n        case 0x2002:\n        case 0x2003:\n        case 0x2004:\n        case 0x2005:\n        case 0x2006:\n        case 0x2007:\n        case 0x2008:\n        case 0x2009:\n        case 0x200a:\n        case 0x2028:\n        case 0x2029:\n        default:\ncode_r0x0044e388:\n            if (var_3ch != 0) {\n                return 0;\n            }\n            break;\n        case 0x200b:\n        case 0x200c:\n        case 0x200d:\n        case 0x200e:\n        case 0x200f:\n        case 0x2010:\n        case 0x2011:\n        case 0x2012:\n        case 0x2013:\n        case 0x2014:\n        case 0x2015:\n        case 0x2016:\n        case 0x2017:\n        case 0x2018:\n        case 0x2019:\n        case 0x201a:\n        case 0x201b:\n        case 0x201c:\n        case 0x201d:\n        case 0x201e:\n        case 0x201f:\n        case 0x2020:\n        case 0x2021:\n        case 0x2022:\n        case 0x2023:\n        case 0x2024:\n        case 0x2025:\n        case 0x2026:\n        case 0x2027:\n            goto code_r0x0044e346;\n        }\n    }\n    var_ch = var_ch + 1;\n    var_8h = puVar16;\n    uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n    puVar16 = var_8h;\n    var_8h = puVar14;\n    goto joined_r0x0044e275;\ncode_r0x00448bfd:\n    if (puVar14 == 0xf) {\n        return 0;\n    }\ncode_r0x0040a69a:\n    var_30h = in_EDX + 3;\n    in_ECX = var_8h;\n    in_EDX = var_30h;\n    puVar16 = var_8h;\n    goto code_r0x0040a1dd;\n    while( true ) {\n        puVar14 = puVar14 + 1;\n        var_8h = var_8h + iVar15;\n        if (var_2ch <= puVar14) break;\ncode_r0x0044d691:\n        iVar15 = fcn.0049b23b(var_20h, arg_10h, var_24h);\n        if (iVar15 < 0) {\n            if ((((iVar15 == -2) && (arg_10h[0x23] != 0)) &&\n                (arg_10h[0x22] <= arg_10h[0x1f] && arg_10h[0x1f] != arg_10h[0x22])) &&\n               (arg_10h[0x1a] = 1,  1 < arg_10h[0x23])) {\n                return 0xfffffff4;\n            }\n            break;\n        }\n    }\n    puVar16 = var_1ch;\n    if (var_8h < var_1ch) {\n        return 0;\n    }\ncode_r0x0044d6f6:\n    do {\n        uVar10 = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (uVar10 != 0) {\n            return uVar10;\n        }\n        var_8h = var_8h + -var_20h;\n    } while (puVar16 <= var_8h);\n    return 0;\n    while( true ) {\n        if (var_2ch == 0xfffffc20) {\n            if (in_EDX + in_EDX[1] <= arg_10h[0x20]) {\n                return 0xfffffc20;\n            }\n            if ((*in_EDX != 0x77) && (in_EDX[in_EDX[1]] != 0x77)) {\n                return 0xfffffc20;\n            }\n            var_2ch = NULL;\n        }\n        else if (var_2ch != NULL) {\n            return var_2ch;\n        }\n        arg_10h[0x25] = var_1ch;\n        in_EDX = in_EDX + in_EDX[1];\n        arg_10h[0x2c] = var_34h;\n        if (*in_EDX != 0x77) break;\ncode_r0x0040a8d0:\n        if (0x87 < puVar14) {\n            arg_10h[0x27] = 2;\n        }\n        var_2ch = fcn.0040a180(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n        if (var_2ch == 0xfffffc1b) break;\n    }\n    *(arg_10h[3] + var_20h * 4) = var_24h;\n    *(arg_10h[3] + 4 + var_20h * 4) = var_40h;\n    *(arg_10h[3] + (arg_10h[4] - var_30h) * 4) = var_3ch;\n    return var_2ch;\n}\n",
        "token_count": 74016
    },
    "00432958": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432958(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4d1300, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0042f269();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.0042f1f0(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "0040ab30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040ab30(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    double dVar1;\n    double dVar2;\n    double dVar3;\n    double dVar4;\n    int32_t *arg_8h_00;\n    int32_t *arg_8h_01;\n    uint32_t uVar5;\n    int16_t *piVar6;\n    uint16_t *puVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    int32_t *arg_8h_02;\n    int32_t iVar10;\n    uint *puVar11;\n    uint32_t uVar12;\n    uint *puVar13;\n    uint *unaff_EDI;\n    ushort *var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t *var_34h;\n    ushort *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    uint var_20h;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_3ch = 0;\n    var_38h = 8;\n    var_40h = fcn.0041fd8b(0x10);\n    *var_40h = 0;\n    arg_8h_01 = fcn.0041fd5b(4, unaff_EDI);\n    puVar13 = NULL;\n    var_4h = NULL;\n    var_ch = 0;\n    *arg_8h_01 = 1;\n    iVar9 = *arg_ch[3];\n    var_34h = arg_8h_01;\n    if (1 < iVar9) {\n        *arg_ch[3] = iVar9 + -1;\n        puVar8 = fcn.0041fd5b(4, unaff_EDI);\n        *puVar8 = 1;\n        arg_ch[3] = puVar8;\n        arg_ch[2] = 8;\n        iVar9 = fcn.0041fd8b(0x10);\n        *arg_ch = iVar9;\n    }\n    arg_ch[1] = 0;\n    **arg_ch = 0;\n    puVar8 = arg_8h[1];\n    uVar12 = var_ch;\n    if (0 < puVar8) {\n        uVar12 = 0;\n        puVar11 = puVar13;\n        dVar1 = *0x4c3418;\n        dVar3 = *0x4c3408;\n        dVar4 = *0x4c3410;\n        do {\n            iVar9 = *arg_8h;\n            puVar13 = puVar8;\n            if (puVar11 < puVar8) {\n                puVar13 = puVar11;\n            }\n            if (*(iVar9 + puVar13 * 2) == 0x5c) {\n                puVar13 = puVar11 + 1;\n                var_4h = puVar13;\n                if (puVar13 != puVar8) {\n                    piVar6 = fcn.004058ca(puVar13);\n                    if ((*piVar6 == 0x5c) || (piVar6 = fcn.004058ca(puVar13),  *piVar6 == 0x24)) goto code_r0x0044f6ad;\n                    unaff_EDI = puVar13;\n                    puVar7 = fcn.004058ca(puVar13);\n                    iVar9 = fcn.00428f9b(*puVar7);\n                    dVar3 = *0x4c3408;\n                    dVar4 = *0x4c3410;\n                    dVar1 = *0x4c3418;\n                    if (iVar9 != 0) {\n                        var_4h = puVar11;\n                        iVar9 = fcn.0046933a(arg_8h, &fcn.0040ab30::var_4h, 0);\n                        goto code_r0x0044f673;\n                    }\n                }\n            }\n            else {\n                puVar13 = puVar8;\n                if (puVar11 < puVar8) {\n                    puVar13 = puVar11;\n                }\n                if (*(iVar9 + puVar13 * 2) == 0x24) {\n                    iVar9 = fcn.0046933a(arg_8h, &fcn.0040ab30::var_4h, 1);\n                    puVar13 = var_4h;\n                    if (iVar9 < 0) {\ncode_r0x0044f6ad:\n                        var_4h = puVar13 + 1U;\n                        fcn.004058ca(puVar13);\n                        unaff_EDI = 0x44f6c7;\n                        fcn.004051ec(0x44f6c7);\n                        puVar13 = puVar13 + 1U;\n                        dVar3 = *0x4c3408;\n                        dVar4 = *0x4c3410;\n                        dVar1 = *0x4c3418;\n                    }\n                    else {\ncode_r0x0044f673:\n                        fcn.00468fa4(iVar9, &fcn.0040ab30::var_40h);\n                        unaff_EDI = &fcn.0040ab30::var_40h;\n                        fcn.00407cf8(unaff_EDI);\n                        uVar12 = uVar12 + 1;\n                        puVar13 = var_4h;\n                        dVar3 = *0x4c3408;\n                        dVar4 = *0x4c3410;\n                        dVar1 = *0x4c3418;\n                    }\n                }\n                else {\n                    puVar13 = puVar11 + 1;\n                    if (puVar8 <= puVar11) {\n                        puVar11 = puVar8;\n                    }\n                    var_ch = *(iVar9 + puVar11 * 2);\n                    iVar9 = *arg_ch[3];\n                    var_4h = puVar13;\n                    if (iVar9 < 2) {\n                        uVar5 = arg_ch[1] + 2;\n                        if (arg_ch[2] < uVar5) {\n                            if (uVar5 < 0x41c2) {\n                                var_18h = uVar5 * 2;\n                            }\n                            else {\n                                dVar2 = uVar5;\n                                if (uVar5 < 0) {\n                                    dVar2 = dVar2 + *0x4c81d0;\n                                }\n                                if (uVar5 < 0x2000000) {\n                                    _var_18h = ROUND(dVar2 * dVar1);\n                                }\n                                else if (uVar5 < 0x8000000) {\n                                    _var_18h = ROUND(dVar4 * dVar2);\n                                }\n                                else {\n                                    _var_18h = ROUND(dVar3 * dVar2);\n                                }\n                            }\n                            if (var_18h == 0) {\n                                uVar5 = 8;\n                            }\n                            else {\n                                uVar5 = var_18h + 7U & 0xfffffff8;\n                            }\n                            arg_ch[2] = uVar5;\n                            iVar9 = fcn.0041fd8b(-(uVar5 * 2 >> 0x20 != 0) | uVar5 * 2);\n                            if (*arg_ch != 0) {\n                                fcn.00420db0(iVar9, *arg_ch, arg_ch[1] * 2 + 2);\n                                fcn.0041fd94(*arg_ch);\n                            }\n                            *arg_ch = iVar9;\n                            dVar1 = *0x4c3418;\n                            dVar3 = *0x4c3408;\n                            dVar4 = *0x4c3410;\n                        }\n                    }\n                    else {\n                        *arg_ch[3] = iVar9 + -1;\n                        puVar8 = fcn.0041fd5b(4, unaff_EDI);\n                        *puVar8 = 1;\n                        arg_ch[3] = puVar8;\n                        if (arg_ch[1] == -2) {\n                            uVar5 = 8;\n                        }\n                        else {\n                            uVar5 = arg_ch[1] + 9U & 0xfffffff8;\n                        }\n                        arg_ch[2] = uVar5;\n                        iVar9 = fcn.0041fd8b(-(uVar5 * 2 >> 0x20 != 0) | uVar5 * 2);\n                        fcn.00420db0(iVar9, *arg_ch, arg_ch[1] * 2 + 2);\n                        *arg_ch = iVar9;\n                        dVar1 = *0x4c3418;\n                        dVar3 = *0x4c3408;\n                        dVar4 = *0x4c3410;\n                    }\n                    *(*arg_ch + arg_ch[1] * 2) = var_ch;\n                    arg_ch[1] = arg_ch[1] + 1;\n                    *(*arg_ch + arg_ch[1] * 2) = 0;\n                }\n            }\n            puVar8 = arg_8h[1];\n            arg_8h_01 = var_34h;\n            puVar11 = puVar13;\n        } while (puVar13 < puVar8);\n    }\n    var_ch = uVar12;\n    var_28h = 8;\n    var_8h = 0;\n    var_2ch = 0;\n    var_30h = fcn.0041fd8b(0x10);\n    *var_30h = 0;\n    var_24h = fcn.0041fd5b(4, unaff_EDI);\n    *var_24h = 1;\n    puVar8 = arg_8h[1];\n    if (puVar8 < puVar13) {\n        puVar13 = puVar8;\n    }\n    uVar12 = puVar8 - puVar13;\n    _var_18h = _var_18h & 0xffffffff | uVar12 << 0x20;\n    if ((uVar12 == 0) || (var_4h = NULL,  puVar8 <= puVar13)) {\n        var_4h = NULL;\n        var_14h = var_4h;\n    }\n    else {\n        fcn.004088bb(uVar12);\n        iVar9 = var_14h;\n        var_8h = var_14h;\n        fcn.00420db0(var_30h, *arg_8h + puVar13 * 2, var_14h * 2);\n        var_30h[iVar9] = 0;\n    }\n    iVar9 = var_8h;\n    arg_8h_00 = var_24h;\n    if (arg_ch == &fcn.0040ab30::var_30h) {\n        arg_8h_02 = fcn.004609c0(&fcn.0040ab30::var_20h, arg_ch);\n        if (arg_ch != arg_8h_02) {\n            fcn.0040c1c3(arg_8h_02);\n        }\n        fcn.0040b1ff();\n    }\n    else if (var_14h != 0) {\n        iVar10 = *arg_ch[3];\n        if (iVar10 < 2) {\n            fcn.0040be83(arg_ch[1] + var_8h);\n            iVar10 = *arg_ch;\n        }\n        else {\n            *arg_ch[3] = iVar10 + -1;\n            puVar13 = fcn.0041fd5b(4, unaff_EDI);\n            iVar9 = var_8h;\n            *puVar13 = 1;\n            arg_ch[3] = puVar13;\n            iVar10 = arg_ch[1] + 1 + var_8h;\n            if (iVar10 == 0) {\n                uVar12 = 8;\n            }\n            else {\n                uVar12 = iVar10 + 7U & 0xfffffff8;\n            }\n            arg_ch[2] = uVar12;\n            iVar10 = fcn.0041fd8b(-(uVar12 * 2 >> 0x20 != 0) | uVar12 * 2);\n            fcn.00420db0(iVar10, *arg_ch, arg_ch[1] * 2 + 2);\n            *arg_ch = iVar10;\n        }\n        fcn.00420db0(iVar10 + arg_ch[1] * 2, var_30h, iVar9 * 2);\n        arg_ch[1] = arg_ch[1] + iVar9;\n        *(*arg_ch + arg_ch[1] * 2) = 0;\n    }\n    *arg_8h_00 = *arg_8h_00 + -1;\n    if (*arg_8h_00 == 0) {\n        fcn.0041fd94(var_30h);\n        fcn.0041fd4d(arg_8h_00);\n    }\n    uVar12 = var_ch;\n    if (var_ch == 0) {\n        uVar12 = 1;\n    }\n    *arg_8h_01 = *arg_8h_01 + -1;\n    if (*arg_8h_01 == 0) {\n        fcn.0041fd94(var_40h);\n        fcn.0041fd4d(arg_8h_01);\n    }\n    return uVar12;\n}\n",
        "token_count": 3071
    },
    "0040ad7c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040ad7c(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t arg_8h_00;\n    uint *puVar7;\n    uint8_t uVar8;\n    uint32_t unaff_ESI;\n    int32_t **ppiVar9;\n    int32_t **ppiVar10;\n    int32_t *piVar11;\n    uint nNumberOfBytesToWrite;\n    char16_t *arg_8h_01;\n    uchar *arg_10h_00;\n    int32_t **ppiVar12;\n    uint32_t auStack216 [2];\n    ushort uStack208;\n    ushort uStack206;\n    int32_t iStack204;\n    uint *puStack200;\n    int32_t *piStack196;\n    int32_t iStack192;\n    uchar auStack188 [4];\n    uint *puStack184;\n    uint uStack180;\n    int32_t iStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack152;\n    uint uStack148;\n    uint32_t uStack144;\n    uint32_t uStack140;\n    uint8_t auStack120 [4];\n    int32_t iStack116;\n    uint uStack112;\n    int32_t **ppiStack104;\n    uint uStack100;\n    uint uStack76;\n    uint uStack56;\n    int32_t iStack52;\n    uint32_t auStack48 [2];\n    uint uStack40;\n    \n    *0x4d25a8 = *0x4d25a8 + 1;\n    if (0x2f < *0x4d25a8) {\n        uVar5 = fcn.004697b9(arg_10h, arg_18h, L\"#include depth exceeded.  Make sure there are no recursive includes\", \n                             arg_14h);\n        uVar8 = 0;\n        goto code_r0x0040b0a6;\n    }\n    uVar8 = 0;\n    auStack216[0] = auStack216[0] & 0xffffff00;\n    uStack152 = 0;\n    uStack148 = fcn.0041fd8b(0x10000);\n    fcn.00407bee();\n    fcn.0040c25d();\n    fcn.00407bee();\n    fcn.00407bee();\n    uStack112 = 0x8000;\n    cVar1 = fcn.004070e5(arg_8h, 0x8000);\n    if (cVar1 == '\\0') {\n        fcn.004697b9(arg_10h, arg_18h, L\"Error opening the file\", arg_14h);\n    }\n    else {\n        fcn.00406f3a();\n        fcn.00406d7e();\n        fcn.00406d67();\n        if (((auStack120[0] & 3) != 0) && (((auStack120[0] & 1) == 0 || ((uStack144 | uStack140) == 0)))) {\n            if (iStack116 == 3) {\n                nNumberOfBytesToWrite = 3;\n                uVar2 = 0x4c364c;\n            }\n            else if (iStack116 == 5) {\n                nNumberOfBytesToWrite = 2;\n                uVar2 = 0x4c3654;\n            }\n            else {\n                if (iStack116 != 7) goto code_r0x0040ae3d;\n                nNumberOfBytesToWrite = 2;\n                uVar2 = 0x4c3650;\n            }\n            fcn.0046cc1d(uVar2, nNumberOfBytesToWrite);\n        }\ncode_r0x0040ae3d:\n        fcn.0040c25d();\n        fcn.0041f962();\n        fcn.0040c25d();\n        fcn.0040592d();\n        puVar7 = &uStack180;\n        uStack180 = 0x18;\n        fcn.0041f945(auStack48, puVar7);\n        fcn.00406e66(ppiStack104, uStack100, 0);\n        if ((iStack52 == 0x21335541) && (auStack48[0] == 0x36304145)) {\n            fcn.00407bee();\n            iVar3 = 2;\n            uStack56 = 0;\n            iStack52 = 0;\n            auStack48[0] = auStack48[0] & 0xffffff00;\n            iVar6 = fcn.0040686d(*arg_8h, 2);\n            if (iVar6 == 0) {\n                arg_10h_00 = auStack188;\n                arg_8h_01 = L\">>>AUTOIT SCRIPT<<<\";\n                iVar6 = fcn.00472c17(L\">>>AUTOIT SCRIPT<<<\", &stack0xffffff20, arg_10h_00);\n                fcn.004068db();\n                if (iVar6 == 0) {\n                    ppiVar9 = 0x4;\n                    piStack196 = *ppiStack104;\n                    uStack208 = 0xffff;\n                    uStack172 = 0;\n                    uStack168 = 0;\n                    uStack164 = 0;\n                    puStack200 = fcn.0041fd5b(0x10, arg_8h_01);\n                    *puStack200 = 0x49d114;\n                    puStack200[1] = 0;\n                    puStack200[2] = 0;\n                    puStack200[3] = 0;\n                    uStack206 = 0xffff;\n                    puStack184 = puStack200;\n                    fcn.0040bef7(5);\n                    puVar7 = puStack200;\n                    fcn.0040bd9d(&stack0xffffff24);\n                    piStack196 = NULL;\n                    puStack200 = 0x1;\n                    if (0 < iStack204) {\ncode_r0x0044fb29:\n                        do {\n                            do {\n                                ppiVar10 = ppiVar9 + 1;\n                                uVar5 = *(unaff_ESI + ppiVar9);\n                                ppiVar12 = ppiVar10;\n                                fcn.0040bef7(uVar5);\n                                if (puVar7 < 0x10) {\n                                    uVar5 = *(arg_10h_00 + ppiVar10);\n                                    ppiVar9 = ppiVar9 + 5;\n                                }\n                                else {\n                                    cVar1 = fcn.00470af0();\n                                    if (cVar1 == '\\0') {\n                                        cVar1 = fcn.00470adc();\n                                        if (cVar1 == '\\0') {\n                                            cVar1 = fcn.0041d6fa();\n                                            ppiVar9 = ppiVar10;\n                                            if (cVar1 != '\\0') {\n                                                arg_8h_00 = fcn.0046959c(arg_10h_00, &stack0xffffff0c);\n                                                if (ppiVar12 == 0x31) {\n                                                    fcn.0040b606(arg_8h_00);\n                                                    puVar7 = (**(**(iVar3 + 4) + 4))(uStack56);\n                                                    fcn.0040b1ff();\n                                                    uVar2 = 1;\n                                                    unaff_ESI = arg_8h_00;\n                                                    arg_8h_00 = uVar5;\ncode_r0x0044fc32:\n                                                    fcn.0040bef7(uVar2);\n                                                    ppiVar9 = ppiStack104;\n                                                    uVar5 = arg_8h_00;\n                                                }\n                                                else {\n                                                    if (ppiVar12 == 0x30) {\n                                                        fcn.0040b606(arg_8h_00);\n                                                        puVar7 = fcn.0040528d();\n                                                        fcn.0040b1ff();\n                                                        uVar2 = 0;\n                                                        unaff_ESI = arg_8h_00;\n                                                        arg_8h_00 = uVar5;\n                                                        goto code_r0x0044fc32;\n                                                    }\n                                                    unaff_ESI = arg_8h_00;\n                                                    if (ppiVar12 == 0x37) {\n                                                        iVar6 = fcn.004694cb(arg_8h_00);\n                                                        if (iVar6 == 0) {\n                                                            fcn.004697b9(arg_8h, auStack216[0], \n                                                                         L\"Bad directive syntax error\", 0x49d0d0);\n                                                            fcn.0041fd94(arg_8h_00);\n                                                            fcn.0042490e();\n                                                            goto code_r0x0044fd29;\n                                                        }\n                                                        ppiVar9 = arg_8h_01;\n                                                        fcn.0041fd94(arg_8h_00);\n                                                        arg_8h_01 = ppiVar9;\n                                                        goto code_r0x0044fb29;\n                                                    }\n                                                    fcn.00470a78(arg_8h_00);\n                                                    ppiVar9 = ppiStack104;\n                                                }\n                                                fcn.0041fd94(arg_8h_00);\n                                                ppiStack104 = ppiVar9;\n                                            }\n                                        }\n                                        else {\n                                            uVar5 = *(arg_10h_00 + ppiVar10);\n                                            ppiVar9 = ppiVar9 + 9;\n                                        }\n                                    }\n                                    else {\n                                        uVar5 = *(arg_10h_00 + ppiVar10);\n                                        ppiVar9 = ppiVar9 + 9;\n                                    }\n                                }\n                                fcn.0040bd9d(&stack0xffffff24);\n                            } while (uVar5 != 0x7f);\n                            if ((*(iStack192 + 8) < 3) ||\n                               (*(*(*(iStack192 + 4) + -8 + *(iStack192 + 8) * 4) + 8) == 0x7f)) {\n                                fcn.00469ad3();\n                            }\n                            else {\n                                piStack196 = piStack196 + 1;\n                                fcn.00408f2c(*(iVar3 + 0x10), &stack0xffffff18, 0xffffffff);\n                            }\n                            puStack200 = puStack200 + 1;\n                        } while (puStack200 <= iStack204);\n                    }\n                    fcn.0040bef7(5);\n                    fcn.004709ea(&stack0xffffff1c);\n                    fcn.004640c5(auStack216);\n                    fcn.0042490e(arg_8h_01);\n                    uVar8 = 1;\ncode_r0x0044fd29:\n                    piStack196 = 0x49d114;\n                    fcn.00405fc0();\n                    fcn.0041fd94(iStack192);\n                    fcn.0041d6ea();\n                    goto code_r0x0040b069;\n                }\n            }\n            fcn.004697b9(arg_10h, arg_18h, L\"Error opening the file\", arg_14h);\n        }\n        else {\n            fcn.0040c25d();\n            fcn.0040c25d();\n            fcn.00406bff(&piStack196, 0, 0);\n            fcn.00407cf8(&piStack196);\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)();\n            fcn.0040b1ff();\n            fcn.0040b1ff();\n            uVar2 = fcn.0041fd8b();\n            fcn.004070c2(uVar2);\n            do {\n                if ((puVar7 >> 0x10 != '\\x01') || (cVar1 = fcn.0040b0d9(iStack176),  cVar1 == '\\0')) break;\n                ppiStack104 = ppiStack104 + 1;\n                fcn.00408fd0(iStack176);\n                iVar6 = iStack176;\n                cVar1 = fcn.0040901d(iStack176);\n                if (cVar1 == '\\0') {\n                    fcn.004697b9(arg_10h, uStack160, L\"Unterminated string\", iStack176);\n                    break;\n                }\n                fcn.004090bd(iStack176);\n                iVar3 = fcn.004248f3(iStack176);\n                if ((((2 < iVar3) && (iVar4 = fcn.00426355(*(iStack176 + -4 + iVar3 * 2) & 0x7f),  iVar4 != 0)) ||\n                    (iVar3 == 1)) && (*(iStack176 + -2 + iVar3 * 2) == 0x5f)) {\n                    *(iStack176 + -2 + iVar3 * 2) = 0;\n                }\n                if (ppiStack104 == '\\x01') {\n                    fcn.00469464(iStack176);\n                }\n                else {\n                    fcn.0040b606(uStack76);\n                    iVar3 = fcn.004090f8(iStack176, auStack120, &stack0xffffff08, &iStack176);\n                    fcn.0040b1ff();\n                    if (((iVar3 != 0) && (1 < iVar3)) && (iVar3 < 4)) {\n                        fcn.00408f2c(iVar6, iStack176, arg_ch);\n                    }\n                }\n                auStack216[0] = auStack216[0] & 0xffffff00 | puVar7 >> 0x18;\n            } while (iVar3 >> 0x18 == '\\x01');\n            fcn.00407bee();\n            uVar8 = 0;\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(uStack40);\n            *piStack196 = *piStack196 + -1;\n            if (*piStack196 == 0) {\n                uVar2 = 4;\n                piVar11 = piStack196;\n                fcn.0041fd4d(piStack196);\n                fcn.0041fd94(iStack176, piVar11, uVar2);\n            }\n        }\ncode_r0x0040b069:\n        fcn.0040b1ff();\n        fcn.0040b1ff();\n    }\n    fcn.00407bee();\n    fcn.0040b1ff();\n    fcn.00407bee();\n    uVar5 = fcn.0041fd94(uStack172);\ncode_r0x0040b0a6:\n    *0x4d25a8 = *0x4d25a8 + -1;\n    return uVar5 & 0xffffff00 | uVar8;\n}\n",
        "token_count": 3298
    },
    "0040b230": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nchar __cdecl fcn.0040b230(int32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    double dVar4;\n    int32_t *piVar5;\n    uint *puVar6;\n    uint *in_ECX;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint unaff_EDI;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t lpNumberOfBytesRead;\n    uint var_1h;\n    \n    piVar5 = arg_8h;\n    fcn.0040b38e();\n    var_1h._0_1_ = '\\0';\n    do {\n        if (in_ECX[2] == 0) {\n            in_ECX[2] = 0;\n            in_ECX[3] = 0;\n            (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(*in_ECX, 0, 0, &var_18h, 1);\n            in_ECX[4] = var_18h;\n            in_ECX[5] = var_14h;\n        }\n        iVar7 = in_ECX[3];\n        uVar8 = 0;\n        do {\n            if (iVar7 == in_ECX[2]) {\n                iVar7 = (*_sym.imp.KERNEL32.dll_ReadFile)(*in_ECX, in_ECX[1], 0x10000, &lpNumberOfBytesRead, 0);\n                if ((iVar7 == 0) || (lpNumberOfBytesRead == 0)) break;\n                in_ECX[2] = lpNumberOfBytesRead;\n                iVar7 = 0;\n                in_ECX[3] = 0;\n            }\n            puVar2 = iVar7 + in_ECX[1];\n            iVar7 = iVar7 + 1;\n            *(&arg_8h + uVar8 + 3) = *puVar2;\n            uVar8 = uVar8 + 1;\n            in_ECX[3] = iVar7;\n        } while (uVar8 == 0);\n        puVar1 = in_ECX + 4;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 + uVar8;\n        in_ECX[5] = in_ECX[5] + CARRY4(uVar3, uVar8);\n        if (uVar8 == 0) {\n            if (var_1h != '\\0') {\n                return '\\x01';\n            }\n            return var_1h;\n        }\n        var_1h._0_1_ = '\\x01';\n        if (arg_8h._3_1_ == '\\r') {\n            iVar7 = fcn.0040b3b0(&arg_8h + 3, 1);\n            if (iVar7 == 0) {\n                return '\\x01';\n            }\n            if (arg_8h._3_1_ == '\\n') {\n                return '\\x01';\n            }\n            fcn.00406e66(0xffffffff, 0xffffffff, 1);\n            return '\\x01';\n        }\n        if (arg_8h._3_1_ == '\\n') {\n            return '\\x01';\n        }\n        iVar7 = *piVar5[3];\n        if (iVar7 < 2) {\n            uVar8 = piVar5[1] + 2;\n            if (piVar5[2] < uVar8) {\n                if (uVar8 < 0x41c2) {\n                    var_10h = uVar8 * 2;\n                }\n                else {\n                    dVar4 = uVar8;\n                    if (uVar8 < 0) {\n                        dVar4 = dVar4 + *0x4c81d0;\n                    }\n                    if (uVar8 < 0x2000000) {\n                        _var_10h = ROUND(dVar4 * *0x4c3418);\n                    }\n                    else if (uVar8 < 0x8000000) {\n                        _var_10h = ROUND(dVar4 * *0x4c3410);\n                    }\n                    else {\n                        _var_10h = ROUND(dVar4 * *0x4c3408);\n                    }\n                }\n                if (var_10h == 0) {\n                    uVar8 = 0x10;\n                }\n                else {\n                    uVar8 = var_10h + 0xfU & 0xfffffff0;\n                }\n                piVar5[2] = uVar8;\n                iVar7 = fcn.0041fd8b(uVar8);\n                if (*piVar5 != 0) {\n                    fcn.00420db0(iVar7, *piVar5, piVar5[1] + 1);\n                    fcn.0041fd94(*piVar5);\n                }\n                goto code_r0x0040b345;\n            }\n        }\n        else {\n            *piVar5[3] = iVar7 + -1;\n            puVar6 = fcn.0041fd5b(4, unaff_EDI);\n            *puVar6 = 1;\n            piVar5[3] = puVar6;\n            if (piVar5[1] == -2) {\n                uVar8 = 0x10;\n            }\n            else {\n                uVar8 = piVar5[1] + 0x11U & 0xfffffff0;\n            }\n            piVar5[2] = uVar8;\n            iVar7 = fcn.0041fd8b(uVar8);\n            fcn.00420db0(iVar7, *piVar5, piVar5[1] + 1);\ncode_r0x0040b345:\n            *piVar5 = iVar7;\n        }\n        *(piVar5[1] + *piVar5) = arg_8h._3_1_;\n        piVar5[1] = piVar5[1] + 1;\n        *(piVar5[1] + *piVar5) = 0;\n    } while( true );\n}\n",
        "token_count": 1392
    },
    "0040b38e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b38e(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint unaff_ESI;\n    \n    iVar1 = *param_1[3];\n    if (1 < iVar1) {\n        *param_1[3] = iVar1 + -1;\n        puVar2 = fcn.0041fd5b(4, unaff_ESI);\n        *puVar2 = 1;\n        param_1[3] = puVar2;\n        param_1[2] = 0x10;\n        uVar3 = fcn.0041fd8b(0x10);\n        *param_1 = uVar3;\n    }\n    param_1[1] = 0;\n    **param_1 = 0;\n    return;\n}\n",
        "token_count": 191
    },
    "0040b3b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040b3b0(int32_t arg_8h, uint32_t lpNumberOfBytesRead)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    uint32_t uVar4;\n    \n    if (in_ECX[2] == 0) {\n        in_ECX[2] = 0;\n        in_ECX[3] = 0;\n        fcn.0041e3db();\n    }\n    uVar2 = lpNumberOfBytesRead;\n    uVar4 = 0;\n    if (lpNumberOfBytesRead != 0) {\n        iVar3 = in_ECX[3];\n        do {\n            if (iVar3 == in_ECX[2]) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_ReadFile)(*in_ECX, in_ECX[1], 0x10000, &lpNumberOfBytesRead, 0);\n                if ((iVar3 == 0) || (lpNumberOfBytesRead == 0)) break;\n                in_ECX[2] = lpNumberOfBytesRead;\n                iVar3 = 0;\n                in_ECX[3] = 0;\n            }\n            *(uVar4 + arg_8h) = *(iVar3 + in_ECX[1]);\n            uVar4 = uVar4 + 1;\n            in_ECX[3] = in_ECX[3] + 1;\n            iVar3 = in_ECX[3];\n        } while (uVar4 < uVar2);\n    }\n    puVar1 = in_ECX + 4;\n    uVar2 = *puVar1;\n    *puVar1 = *puVar1 + uVar4;\n    in_ECX[5] = in_ECX[5] + CARRY4(uVar2, uVar4);\n    return uVar4;\n}\n",
        "token_count": 416
    },
    "0040b471": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b471(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint unaff_EDI;\n    uint var_4h;\n    \n    iVar3 = *in_ECX[3];\n    if (iVar3 < 2) {\n        uVar1 = in_ECX[1] + 2;\n        if (uVar1 <= in_ECX[2]) goto code_r0x0040b498;\n        if (uVar1 < 0x41c2) {\n            iVar3 = uVar1 * 2;\n        }\n        else {\n            iVar3 = fcn.00442050();\n        }\n        if (iVar3 == 0) {\n            uVar1 = 0x10;\n        }\n        else {\n            uVar1 = iVar3 + 0xfU & 0xfffffff0;\n        }\n        in_ECX[2] = uVar1;\n        iVar3 = fcn.0041fd8b(uVar1);\n        if (*in_ECX != 0) {\n            fcn.00420db0(iVar3, *in_ECX, in_ECX[1] + 1);\n            fcn.0041fd94(*in_ECX);\n        }\n    }\n    else {\n        *in_ECX[3] = iVar3 + -1;\n        puVar2 = fcn.0041fd5b(4, unaff_EDI);\n        *puVar2 = 1;\n        in_ECX[3] = puVar2;\n        if (in_ECX[1] == -2) {\n            uVar1 = 0x10;\n        }\n        else {\n            uVar1 = in_ECX[1] + 0x11U & 0xfffffff0;\n        }\n        in_ECX[2] = uVar1;\n        iVar3 = fcn.0041fd8b(uVar1);\n        fcn.00420db0(iVar3, *in_ECX, in_ECX[1] + 1);\n    }\n    *in_ECX = iVar3;\ncode_r0x0040b498:\n    *(in_ECX[1] + *in_ECX) = arg_8h;\n    in_ECX[1] = in_ECX[1] + 1;\n    *(in_ECX[1] + *in_ECX) = 0;\n    return;\n}\n",
        "token_count": 546
    },
    "0040b4b7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b4b7(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t arg_ch_00;\n    uint32_t uVar4;\n    uint unaff_EDI;\n    float10 fVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    uint uVar8;\n    char cVar9;\n    double dVar10;\n    uint uStack100;\n    int32_t iStack96;\n    uint uStack92;\n    uint uStack88;\n    uchar auStack84 [80];\n    \n    cVar9 = unaff_EDI >> 0x18;\n    iVar3 = **(arg_8h + 4);\n    if (*(iVar3 + 0xc) == 0xb) {\n        uStack88 = 0;\n        fcn.004119e0(iVar3);\n        fcn.00408e90();\n        uVar7 = fcn.00471e24();\n        iVar3 = uVar7 >> 0x20;\n        if (uVar7 != 0) {\n            iVar3 = iVar3 + 4;\n        }\n        fcn.0040b5c1(iVar3);\n        fcn.0040e8a0();\n        return 0;\n    }\n    uVar8 = 8;\n    if (1 < *(arg_8h + 8)) {\n        if (*((*(arg_8h + 4))[1] + 0xc) == 10) {\n            uVar8 = 0x29;\n            cVar2 = fcn.00401fb9(0x29);\n            if (cVar2 != '\\0') goto code_r0x0040b512;\n        }\n        fcn.0040ce67(uVar8);\n    }\ncode_r0x0040b512:\n    if (*(**(arg_8h + 4) + 0xc) == 7) {\n        iVar3 = fcn.00471dda();\n        arg_ch_00 = iVar3 >> 0x1f;\n        goto code_r0x0040b592;\n    }\n    if (1 < *(arg_8h + 8)) {\n        puVar1 = (*(arg_8h + 4))[1];\n        fcn.0040e8a0();\n        puVar1[3] = 1;\n        *puVar1 = 0;\n    }\n    uStack100 = 0;\n    uStack92 = 0;\n    uStack88 = 1;\n    fcn.0040b703(arg_8h, &uStack100);\n    if (iStack96 == 3) {\n        fVar5 = fcn.0040cfb5();\n        dVar10 = fVar5;\n        uVar4 = dVar10 >> 0x20;\ncode_r0x004500f1:\n        uVar6 = dVar10 & 0xffffffff | uVar4 << 0x20;\n    }\n    else {\n        uVar6 = fcn.0040cc8f();\n        uVar4 = uVar6 >> 0x20;\n        dVar10 = uVar6 & 0xffffffff;\n        if ((cVar9 != '\\0') && (*(**(arg_8h + 4) + 0xc) == 2)) goto code_r0x004500f1;\n    }\n    arg_ch_00 = uVar6 >> 0x20;\n    iVar3 = uVar6;\n    fcn.0040e8a0();\ncode_r0x0040b592:\n    fcn.0040b66c(iVar3, arg_ch_00);\n    fcn.0040b5c1(auStack84);\n    return 0;\n}\n",
        "token_count": 836
    },
    "0040b5c1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b5c1(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint unaff_ESI;\n    \n    if (*(in_ECX + 0xc) == 4) {\n        if (arg_8h == 0) {\n            fcn.0040bfbf();\n        }\n        else {\n            fcn.004084e7(arg_8h);\n        }\n    }\n    else {\n        fcn.0040e8a0();\n        *(in_ECX + 0xc) = 4;\n        fcn.0041fd5b(0x10, unaff_ESI);\n        if (arg_8h == 0) {\n            uVar1 = fcn.0040c25d();\n        }\n        else {\n            uVar1 = fcn.0040b606(arg_8h);\n        }\n        *(in_ECX + 8) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "0040b703": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b703(int32_t arg_8h, double *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    float10 fVar4;\n    uint32_t uVar5;\n    \n    if (1 < *(arg_8h + 8)) {\n        iVar1 = fcn.0040ce67();\n        if ((iVar1 == 1) || (iVar1 == 2)) {\n            fcn.0040b6ca(arg_8h, arg_ch);\n            return 0;\n        }\n        if (iVar1 == 3) {\n            fVar4 = fcn.0040cfb5();\n            fcn.0040e8a0();\n            *arg_ch = fVar4;\n            *(arg_ch + 0xc) = 3;\n            return 0;\n        }\n    }\n    fcn.0040c5e7(**(arg_8h + 4));\n    fcn.0040b771();\n    piVar2 = fcn.0042f269();\n    if (*piVar2 == 0x22) {\n        fVar4 = fcn.0040cfb5();\n        uVar5 = SUB84(fVar4, 0);\n        fcn.0040e8a0();\n        *arg_ch = fVar4 & 0xffffffff00000000 | uVar5;\n        *(arg_ch + 0xc) = 3;\n        puVar3 = fcn.0042f269();\n        *puVar3 = 0;\n    }\n    return 0;\n}\n",
        "token_count": 356
    },
    "0040b771": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040cd5e)\n\nvoid __fastcall fcn.0040b771(double *param_1)\n\n{\n    int16_t iVar1;\n    int16_t **ppiVar2;\n    bool bVar3;\n    char cVar4;\n    uint unaff_ESI;\n    float10 fVar5;\n    uint64_t uVar6;\n    uint uVar8;\n    double dVar7;\n    \n    if (((*(param_1 + 0xc) == 1) || (*(param_1 + 0xc) == 2)) || (*(param_1 + 0xc) == 3)) {\n        return;\n    }\n    cVar4 = fcn.0040c82d();\n    if (cVar4 != '\\0') {\n        if (*(param_1 + 0xc) != 3) {\n            fVar5 = fcn.0040cfb5(unaff_ESI, param_1, param_1);\n            dVar7 = fVar5;\n            fcn.0040e8a0();\n            *param_1 = dVar7;\n            *(param_1 + 0xc) = 3;\n        }\n        return;\n    }\n    if (*(param_1 + 0xc) == 1) {\n        return;\n    }\n    if (*(param_1 + 0xc) == 2) {\n        return;\n    }\n    uVar6 = fcn.0040cc8f();\n    uVar8 = uVar6 >> 0x20;\n    bVar3 = false;\n    if (*(param_1 + 0xc) == 4) {\n        ppiVar2 = *(param_1 + 1);\n        if (((**ppiVar2 == 0x30) && ((iVar1 = (*ppiVar2)[1],  iVar1 == 0x78 || (iVar1 == 0x58)))) && (ppiVar2[1] < 0x13)\n           ) {\n            bVar3 = 0xa < ppiVar2[1];\n            goto code_r0x0040cd66;\n        }\n    }\n    if (((0x7fffffffffffffff < uVar6) && ((uVar6 < -0x100000000 || (uVar6 < 0x80000000)))) || (0x7fffffff < uVar6)) {\n        bVar3 = true;\n    }\ncode_r0x0040cd66:\n    fcn.0040e8a0();\n    *param_1 = uVar6;\n    if (bVar3) {\n        *(param_1 + 4) = uVar8;\n        *(param_1 + 0xc) = 2;\n    }\n    else {\n        *(param_1 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 614
    },
    "0040cd15": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040cd5e)\n\nvoid __fastcall fcn.0040cd15(uint32_t *param_1)\n\n{\n    int16_t iVar1;\n    int16_t **ppiVar2;\n    bool bVar3;\n    uint64_t uVar4;\n    uint var_4h;\n    \n    if (param_1[3] == 1) {\n        return;\n    }\n    if (param_1[3] == 2) {\n        return;\n    }\n    uVar4 = fcn.0040cc8f();\n    bVar3 = false;\n    if (param_1[3] == 4) {\n        ppiVar2 = param_1[2];\n        if ((**ppiVar2 == 0x30) && (((iVar1 = (*ppiVar2)[1],  iVar1 == 0x78 || (iVar1 == 0x58)) && (ppiVar2[1] < 0x13)))\n           ) {\n            bVar3 = 0xa < ppiVar2[1];\n            goto code_r0x0040cd66;\n        }\n    }\n    if (((0x7fffffffffffffff < uVar4) && ((uVar4 < -0x100000000 || (uVar4 < 0x80000000)))) || (0x7fffffff < uVar4)) {\n        bVar3 = true;\n    }\ncode_r0x0040cd66:\n    fcn.0040e8a0();\n    *param_1 = uVar4;\n    if (bVar3) {\n        param_1[1] = uVar4 >> 0x20;\n        param_1[3] = 2;\n    }\n    else {\n        param_1[3] = 1;\n    }\n    return;\n}\n",
        "token_count": 398
    },
    "0040b7e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040b7e0(int32_t arg_8h, int16_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint32_t arg_10h_00;\n    uint uVar8;\n    uint *arg_8h_00;\n    uint *puVar9;\n    int32_t lpsz;\n    uint *cchLength;\n    uint32_t var_20h;\n    int32_t *var_1ch;\n    int32_t var_18h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    \n    var_10h._0_2_ = 0xffff;\n    puVar7 = NULL;\n    var_8h = NULL;\n    arg_8h_00 = 0x64;\n    var_10h._2_2_ = 0;\n    fcn.00407c18(100);\n    fcn.00405fc0();\n    iVar1 = *arg_ch;\n    while (iVar1 != 0) {\n        for (; (arg_ch[puVar7] == 0x20 || (arg_ch[puVar7] == 9)); puVar7 = puVar7 + 1) {\n        }\n        uVar4 = arg_ch[puVar7];\n        var_8h = puVar7;\n        if (arg_ch[puVar7] == 0) break;\n        var_10h._2_2_ = SUB42(puVar7, 0);\n        var_ch = uVar4;\n        if (((0x2f < uVar4) && (uVar4 < 0x3a)) || (uVar4 == 0x2e)) {\n            arg_10h_00 = 0x40;\n            iVar5 = *(arg_10h + 8);\n            if (iVar5 != 0) {\n                arg_10h_00 = *(*(*(arg_10h + 4) + -4 + iVar5 * 4) + 8);\n            }\n            cVar3 = fcn.00404df1(&var_18h, &lpsz, arg_10h_00);\n            if (cVar3 == '\\x01') {\n                puVar7 = var_8h;\n                if (arg_10h_00 == 0x4a) {\n                    *(*(*(arg_10h + 4) + -4 + iVar5 * 4) + 8) = 0x49;\n                }\n                goto code_r0x0040ba11;\n            }\n            if (uVar4 != 0x2e) goto code_r0x0040b859;\n            puVar7 = var_8h + 1;\n            var_8h = puVar7;\n            fcn.0040bfbf();\n            while( true ) {\n                uVar2 = arg_ch[puVar7];\n                if ((((0x5a < uVar2) || (uVar2 < 0x41)) && ((uVar2 < 0x61 || (0x7a < uVar2)))) &&\n                   (((uVar2 < 0x30 || (0x39 < uVar2)) && ((uVar2 != 0x5f && (uVar2 < 0x80)))))) break;\n                fcn.004051ec(uVar2);\n                puVar7 = puVar7 + 1;\n            }\n            if (cchLength == NULL) {\ncode_r0x0040bd03:\n                puVar9 = puVar7 + -1;\n                var_8h = puVar7;\n                goto code_r0x004503c6;\n            }\n            arg_8h_00 = 0x35;\n            var_8h = puVar7;\n            fcn.0040bef7(0x35);\ncode_r0x0040ba05:\n            fcn.0040bf6f(&lpsz);\n            goto code_r0x0040ba11;\n        }\ncode_r0x0040b859:\n        puVar9 = var_8h;\n        if ((((0x40 < uVar4) && (uVar4 < 0x5b)) || ((0x60 < uVar4 && (uVar4 < 0x7b)))) || (uVar4 == 0x5f)) {\n            fcn.004050f7(arg_ch, &var_8h, &var_18h, arg_ch);\n            puVar7 = var_8h;\n            if (var_18h != -1) goto code_r0x0040ba11;\n            uVar8 = 0x138c;\ncode_r0x004503cb:\n            fcn.00469600(arg_8h, uVar8, arg_8h_00);\ncode_r0x004503d3:\n            uVar8 = 0xffffffff;\n            goto code_r0x0040ba44;\n        }\n        if (uVar4 == 0x24) {\ncode_r0x0040b93d:\n            iVar5 = fcn.0040b79d(arg_10h);\n            if (-1 < iVar5) {\n                iVar5 = (var_ch == 0x24) + 0x32;\n                fcn.0040bef7(iVar5);\n                puVar7 = puVar9 + 1;\n                var_8h = puVar7;\n                fcn.0040bfbf();\n                for (; ((uVar2 = arg_ch[puVar7],  uVar2 < 0x5b && (0x40 < uVar2)) ||\n                       (((0x60 < uVar2 && (uVar2 < 0x7b)) || (((0x2f < uVar2 && (uVar2 < 0x3a)) || (uVar2 == 0x5f))))));\n                    puVar7 = puVar7 + 1) {\n                    if (*var_1ch < 2) {\n                        fcn.0040be83(cchLength + 1);\n                    }\n                    else {\n                        *var_1ch = *var_1ch + -1;\n                        var_1ch = fcn.0041fd5b(4, iVar5);\n                        *var_1ch = 1;\n                        if (cchLength == 0xfffffffe) {\n                            var_20h = 8;\n                        }\n                        else {\n                            var_20h = cchLength + 9U & 0xfffffff8;\n                        }\n                        iVar6 = fcn.0041fd8b(-(var_20h * 2 >> 0x20 != 0) | var_20h * 2);\n                        fcn.00420db0(iVar6, lpsz, cchLength * 2 + 2);\n                        lpsz = iVar6;\n                    }\n                    *(lpsz + cchLength * 2) = uVar2;\n                    cchLength = cchLength + 1;\n                    *(lpsz + cchLength * 2) = 0;\n                }\n                if (cchLength == NULL) goto code_r0x0040bd03;\n                var_8h = puVar7;\n                fcn.0040c7c9();\n                arg_8h_00 = cchLength;\n                (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz);\n                goto code_r0x0040ba05;\n            }\ncode_r0x004503c6:\n            uVar8 = 0x138b;\n            arg_8h_00 = puVar9;\n            goto code_r0x004503cb;\n        }\n    // switch table (69 cases) at 0x40bd0c\n        switch(uVar4) {\n        case 0x1a:\n            if (((var_8h != NULL) || (arg_ch[1] != 0)) || (arg_8h < *0x4d23a0)) goto code_r0x0045039f;\n            puVar7 = 0x1;\n            var_8h = 0x1;\n            break;\n        case 0x1b:\n        case 0x1c:\n        case 0x1d:\n        case 0x1e:\n        case 0x1f:\n        case 0x20:\n        case 0x21:\n        case 0x23:\n        case 0x24:\n        case 0x25:\n        case 0x2e:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3b:\n        case 0x3d:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5c:\ncode_r0x0045039f:\n            fcn.00469600(arg_8h, 5000, var_8h);\ncode_r0x004503b0:\n            fcn.0040bef7(0x7f);\n            fcn.0040bd9d(&var_18h);\n            goto code_r0x004503d3;\n        case 0x22:\n        case 0x27:\n            iVar5 = fcn.0040507f(arg_8h, arg_ch, &var_8h, &lpsz);\n            if (iVar5 < 0) goto code_r0x004503b0;\n            fcn.0040bef7(0x36);\n            fcn.0040bf6f(&lpsz);\n            arg_8h_00 = &var_18h;\n            fcn.0040bd9d(arg_8h_00);\n            puVar7 = var_8h;\n            break;\n        case 0x26:\n            uVar8 = 0x4d;\n            fcn.0040bef7(0x4d);\n            iVar1 = arg_ch[puVar9 + 1];\n            goto joined_r0x0040bba9;\n        case 0x28:\n            fcn.0040bef7(0x47);\n            arg_8h_00 = &var_18h;\n            fcn.0040bd9d(arg_8h_00);\n            var_8h = puVar9 + 1;\n            puVar7 = var_8h;\n            break;\n        case 0x29:\n            fcn.0040bef7(0x48);\n            arg_8h_00 = &var_18h;\n            fcn.0040bd9d(arg_8h_00);\n            var_8h = puVar9 + 1;\n            puVar7 = var_8h;\n            break;\n        case 0x2a:\n            fcn.0040bef7(0x4c);\n            var_8h = puVar9 + 1;\n            puVar7 = var_8h;\n            if (arg_ch[var_8h] == 0x3d) {\n                var_8h = puVar9 + 2;\n                fcn.0040bef7(0x55);\n                puVar7 = puVar9 + 2;\n            }\n            goto code_r0x0040ba11;\n        case 0x2b:\n            uVar8 = 0x49;\n            fcn.0040bef7(0x49);\n            iVar1 = arg_ch[puVar9 + 1];\njoined_r0x0040bba9:\n            var_8h = puVar9 + 1;\n            puVar7 = var_8h;\n            if (iVar1 == 0x3d) {\ncode_r0x0040bbb1:\n                var_8h = puVar9 + 2;\n                fcn.0040bef7(uVar8);\n                puVar7 = puVar9 + 2;\n            }\n            goto code_r0x0040ba11;\n        case 0x2c:\n            fcn.0040bef7(0x40);\n            arg_8h_00 = &var_18h;\n            fcn.0040bd9d(arg_8h_00);\n            var_8h = puVar9 + 1;\n            puVar7 = var_8h;\n            break;\n        case 0x2d:\n            uVar8 = 0x4a;\n            fcn.0040bef7(0x4a);\n            iVar1 = arg_ch[puVar9 + 1];\n            goto joined_r0x0040bc01;\n        case 0x2f:\n            uVar8 = 0x4b;\n            fcn.0040bef7(0x4b);\n            iVar1 = arg_ch[puVar9 + 1];\njoined_r0x0040bc01:\n            var_8h = puVar9 + 1;\n            puVar7 = var_8h;\n            if (iVar1 != 0x3d) goto code_r0x0040ba11;\n            goto code_r0x0040bbb1;\n        case 0x3a:\n            fcn.0040bef7(0x58);\n            arg_8h_00 = &var_18h;\n            fcn.0040bd9d(arg_8h_00);\n            var_8h = puVar9 + 1;\n            puVar7 = var_8h;\n            break;\n        case 0x3c:\n            puVar7 = var_8h + 1;\n            if (arg_ch[var_8h + 1] == 0x3d) {\n                uVar8 = 0x46;\ncode_r0x0040bc82:\n                puVar7 = var_8h + 2;\n            }\n            else {\n                if (arg_ch[var_8h + 1] == 0x3e) {\n                    uVar8 = 0x44;\n                    goto code_r0x0040bc82;\n                }\n                uVar8 = 0x43;\n            }\n            var_8h = puVar7;\n            fcn.0040bef7(uVar8);\n            goto code_r0x0040ba11;\n        case 0x3e:\n            puVar7 = var_8h + 1;\n            if (arg_ch[puVar7] == 0x3d) {\n                puVar7 = var_8h + 2;\n                uVar8 = 0x45;\n            }\n            else {\n                uVar8 = 0x42;\n            }\n            var_8h = puVar7;\n            fcn.0040bef7(uVar8);\n            goto code_r0x0040ba11;\n        case 0x3f:\n            fcn.0040bef7(0x57);\n            arg_8h_00 = &var_18h;\n            fcn.0040bd9d(arg_8h_00);\n            var_8h = puVar9 + 1;\n            puVar7 = var_8h;\n            break;\n        case 0x40:\n            goto code_r0x0040b93d;\n        case 0x5b:\n            fcn.0040bef7(0x4e);\n            arg_8h_00 = &var_18h;\n            fcn.0040bd9d(arg_8h_00);\n            var_8h = puVar9 + 1;\n            puVar7 = var_8h;\n            break;\n        case 0x5d:\n            fcn.0040bef7(0x4f);\n            arg_8h_00 = &var_18h;\n            fcn.0040bd9d(arg_8h_00);\n            var_8h = puVar9 + 1;\n            puVar7 = var_8h;\n            break;\n        case 0x5e:\n            fcn.0040bef7(0x51);\n            arg_8h_00 = &var_18h;\n            fcn.0040bd9d(arg_8h_00);\n            var_8h = puVar9 + 1;\n            puVar7 = var_8h;\n            break;\n        default:\n            puVar7 = var_8h + 1;\n            if (arg_ch[puVar7] == 0x3d) {\n                puVar7 = var_8h + 2;\n                uVar8 = 0x50;\n            }\n            else {\n                uVar8 = 0x41;\n            }\n            var_8h = puVar7;\n            fcn.0040bef7(uVar8);\ncode_r0x0040ba11:\n            fcn.0040bd9d(&var_18h);\n        }\n        iVar1 = arg_ch[puVar7];\n    }\n    fcn.0040bef7(0x7f);\n    var_10h._2_2_ = SUB42(puVar7, 0);\n    fcn.0040bd9d(&var_18h);\n    uVar8 = 0;\ncode_r0x0040ba44:\n    fcn.0040b1ff();\n    fcn.0041d6ea();\n    return uVar8;\n}\n",
        "token_count": 4045
    },
    "0040bd9d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bd9d(ulong *arg_8h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    ulong *puVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    int32_t in_ECX;\n    uint unaff_EDI;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar4 = *(in_ECX + 0xc) * 2;\n        uVar7 = 8;\n        if (7 < uVar4) {\n            uVar7 = uVar4;\n        }\n        *(in_ECX + 0xc) = uVar7;\n        uVar8 = fcn.0041fd8b(-(uVar7 * 4 >> 0x20 != 0) | uVar7 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.00420db0(uVar8, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.0041fd94(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar8;\n    }\n    puVar5 = fcn.0041fd5b(0xc, unaff_EDI);\n    iVar1 = *(arg_8h + 1);\n    *(puVar5 + 1) = iVar1;\n    *(puVar5 + 10) = *(arg_8h + 10);\n    if ((iVar1 < 0x40) && (0x2f < iVar1)) {\n        puVar6 = fcn.0041fd5b(0x10, unaff_EDI);\n        puVar2 = *arg_8h;\n        *puVar6 = *puVar2;\n        puVar6[1] = puVar2[1];\n        puVar6[2] = puVar2[2];\n        piVar3 = puVar2[3];\n        puVar6[3] = piVar3;\n        *piVar3 = *piVar3 + 1;\n    }\n    else {\n        if (iVar1 == 0x10) {\n            *puVar5 = *arg_8h;\n            *(puVar5 + 4) = *(arg_8h + 4);\n            goto code_r0x0040bdea;\n        }\n        if (iVar1 == 0x20) {\n            *puVar5 = *arg_8h;\n            goto code_r0x0040bdea;\n        }\n        puVar6 = *arg_8h;\n    }\n    *puVar5 = puVar6;\ncode_r0x0040bdea:\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar5;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 694
    },
    "0040be83": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040be83(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    uVar1 = arg_8h + 1;\n    if (in_ECX[2] < uVar1) {\n        if (uVar1 < 0x41c2) {\n            iVar2 = uVar1 * 2;\n        }\n        else {\n            iVar2 = fcn.00442050();\n        }\n        if (iVar2 == 0) {\n            uVar1 = 8;\n        }\n        else {\n            uVar1 = iVar2 + 7U & 0xfffffff8;\n        }\n        in_ECX[2] = uVar1;\n        iVar2 = fcn.0041fd8b(-(uVar1 * 2 >> 0x20 != 0) | uVar1 * 2);\n        if (*in_ECX != 0) {\n            fcn.00420db0(iVar2, *in_ECX, in_ECX[1] * 2 + 2);\n            fcn.0041fd94(*in_ECX);\n        }\n        *in_ECX = iVar2;\n    }\n    return;\n}\n",
        "token_count": 279
    },
    "0040bfbf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040bfbf(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint unaff_ESI;\n    \n    iVar1 = *param_1[3];\n    if (1 < iVar1) {\n        *param_1[3] = iVar1 + -1;\n        puVar2 = fcn.0041fd5b(4, unaff_ESI);\n        *puVar2 = 1;\n        param_1[3] = puVar2;\n        param_1[2] = 8;\n        uVar3 = fcn.0041fd8b(0x10);\n        *param_1 = uVar3;\n    }\n    param_1[1] = 0;\n    **param_1 = 0;\n    return;\n}\n",
        "token_count": 189
    },
    "0040c000": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c000(int32_t *param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uchar uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(param_1 + 9) != '\\0') {\n        iVar1 = param_1[1];\n        iVar2 = *(iVar1 + 8);\n        if (iVar1 != 0) {\n            fcn.00464ca0(iVar1);\n        }\n        param_1[1] = iVar2;\n        *(param_1 + 9) = 0;\n    }\n    if (*(param_1 + 2) == '\\0') {\n        arg_8h = param_1[1];\n        iVar1 = arg_8h[2];\n        if (arg_8h != NULL) {\n            iVar2 = *arg_8h;\n            if (iVar2 != 0) {\n                if (*(iVar2 + 0x18) != 0) {\n                    fcn.0040c88a(*(iVar2 + 0x18));\n                }\n                if (*(iVar2 + 0x1c) != 0) {\n                    fcn.0040c88a(*(iVar2 + 0x1c));\n                }\n                if ((*(iVar2 + 0x10) == '\\0') && (arg_8h_00 = *(iVar2 + 0x14),  arg_8h_00 != 0)) {\n                    fcn.0040c990();\n                    fcn.0041fd4d(arg_8h_00);\n                }\n                fcn.0040b1ff();\n                fcn.0041fd4d(iVar2);\n            }\n            fcn.0041fd4d(arg_8h);\n        }\n        uVar3 = 0;\n        param_1[1] = iVar1;\n    }\n    else {\n        uVar3 = 1;\n    }\n    *(param_1 + 9) = uVar3;\n    *param_1 = *param_1 + -1;\n    return;\n}\n",
        "token_count": 485
    },
    "0040c117": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c117(uint arg_8h, uint arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    \n    if (((arg_14h != 0) && (arg_14h != 1)) && (arg_14h != 2)) {\n        if (arg_14h != 0x10) {\n            return 0;\n        }\n        arg_10h = arg_10h | 0x400;\n    }\n    uVar1 = fcn.0040c28f(arg_8h, arg_ch, arg_10h);\n    return uVar1;\n}\n",
        "token_count": 149
    },
    "0040c165": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040c165(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (arg_ch == 0) {\n        *(arg_8h + 0x1c) = 0;\n        *(arg_8h + 0x18) = 0;\n        iVar2 = arg_8h;\n    }\n    else {\n        fcn.0040d4e0(arg_8h, &arg_ch);\n        iVar2 = arg_ch;\n        iVar1 = fcn.0040c0a8(arg_ch);\n        if (iVar1 < 0) {\n            *(arg_8h + 0x18) = *(iVar2 + 0x18);\n            *(arg_8h + 0x1c) = iVar2;\n            *(iVar2 + 0x18) = 0;\n            iVar2 = arg_8h;\n        }\n        else if (0 < iVar1) {\n            *(arg_8h + 0x1c) = *(iVar2 + 0x1c);\n            *(arg_8h + 0x18) = iVar2;\n            *(iVar2 + 0x1c) = 0;\n            iVar2 = arg_8h;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 300
    },
    "0040c1c3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c1c3(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    \n    iVar4 = *in_ECX[3];\n    if (iVar4 < 2) {\n        iVar4 = arg_8h[1];\n        in_ECX[1] = iVar4;\n        if (in_ECX[2] < iVar4 + 1U) {\n            if (iVar4 == -1) {\n                uVar2 = 8;\n            }\n            else {\n                uVar2 = iVar4 + 8U & 0xfffffff8;\n            }\n            in_ECX[2] = uVar2;\n            fcn.0041fd94(*in_ECX);\n            iVar3 = fcn.0041fd8b(-(in_ECX[2] * 2 >> 0x20 != 0) | in_ECX[2] * 2);\n            *in_ECX = iVar3;\n            *(iVar3 + iVar4 * 2) = 0;\n            iVar4 = in_ECX[1];\n        }\n        fcn.00420db0(*in_ECX, *arg_8h, iVar4 * 2 + 2);\n    }\n    else {\n        *in_ECX[3] = iVar4 + -1;\n        in_ECX[1] = arg_8h[1];\n        in_ECX[2] = arg_8h[2];\n        *in_ECX = *arg_8h;\n        piVar1 = arg_8h[3];\n        in_ECX[3] = piVar1;\n        *piVar1 = *piVar1 + 1;\n    }\n    return;\n}\n",
        "token_count": 405
    },
    "0040c315": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c315(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *(arg_8h + 4);\n    if (in_ECX[0x3c] == 1) {\n        iVar1 = *(*(iVar2 + *arg_ch * 4) + 10);\n        arg_8h_00 = 0x81;\n    }\n    else {\n        *arg_ch = *arg_ch + 1;\n        iVar3 = *arg_ch;\n        if (*(*(iVar2 + iVar3 * 4) + 8) != 0x7f) {\n            var_10h = 0;\n            var_8h = 0;\n            var_4h = 1;\n            iVar2 = fcn.00410540(arg_8h, arg_ch, &var_10h, 0xffffffff);\n            if (iVar2 < 0) {\n                fcn.0040e8a0();\n                return;\n            }\n            iVar2 = *(*in_ECX + 4);\n            fcn.0040c5e7(&var_10h);\n            iVar3 = *(iVar2 + 8 + in_ECX);\n            if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x10) = 1;\n            fcn.0040e8a0();\n            iVar2 = *(arg_8h + 4);\n            iVar3 = *arg_ch;\n        }\n        iVar2 = *(iVar2 + iVar3 * 4);\n        if (*(iVar2 + 8) == 0x7f) {\n            return;\n        }\n        iVar1 = *(iVar2 + 10);\n        arg_8h_00 = 0x72;\n    }\n    fcn.004734ba(arg_8h_00, iVar1);\n    return;\n}\n",
        "token_count": 490
    },
    "0040c4db": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040c4db(int32_t *arg_8h, int32_t *arg_ch, int32_t **arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    \n    iVar3 = *0x4d1934;\n    iVar2 = *0x4d1924;\n    ppiVar4 = arg_10h;\n    if (arg_8h < 0) {\n        if ((*0x4d1948 == -1) || (arg_8h = *0x4d1944,  iVar5 = *0x4d1948,  *0x4d1944 == 0xffffffff))\n        goto code_r0x0040c544;\n    }\n    else {\n        if ((arg_8h < 3) || (*0x4d1934 < arg_8h)) goto code_r0x0040c544;\n        ppiVar4 = *(*0x4d1924 + arg_8h * 4);\n        piVar1 = *ppiVar4;\n        if (piVar1 == NULL) goto code_r0x0040c544;\n        iVar5 = piVar1[1];\n    }\n    *arg_10h = arg_8h;\n    *arg_ch = iVar5;\n    ppiVar4 = *(*0x4d1910 + iVar5 * 4);\n    if ((((*ppiVar4 != NULL) && (ppiVar4 = *arg_10h,  2 < ppiVar4)) && (ppiVar4 <= iVar3)) &&\n       (ppiVar4 = *(iVar2 + ppiVar4 * 4),  *ppiVar4 != NULL)) {\n        return CONCAT31(ppiVar4 >> 8, 1);\n    }\ncode_r0x0040c544:\n    return ppiVar4 & 0xffffff00;\n}\n",
        "token_count": 440
    },
    "0040c5e7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c5e7(int32_t *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t in_stack_ffffffe4;\n    \n    if (in_ECX == arg_8h) {\n        return;\n    }\n    iVar1 = in_ECX[3];\n    if ((iVar1 == 4) && (arg_8h[3] == 4)) {\n        if (in_ECX[2] == arg_8h[2]) {\n            return;\n        }\n        fcn.0040c1c3(arg_8h[2]);\n        return;\n    }\n    arg_8h_00 = in_ECX[2];\n    if (arg_8h_00 != 0) {\n        fcn.0040b1ff();\n        in_stack_ffffffe4 = 0x40c672;\n        fcn.0041fd4d(arg_8h_00);\n        in_ECX[2] = 0;\n        iVar1 = in_ECX[3];\n    }\n    if (iVar1 < 0xc) {\n        if (iVar1 == 0xb) {\n            fcn.0041fd94(*(*in_ECX + 4));\n            fcn.0041fd4d(*in_ECX);\n            goto code_r0x0040c630;\n        }\n        if (iVar1 == 5) {\n            if (*in_ECX == 0) goto code_r0x0040c630;\n            fcn.0041d593();\n        }\n        else if (iVar1 == 8) {\n            if (*in_ECX == 0) goto code_r0x0040c630;\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(*in_ECX);\n            in_stack_ffffffe4 = *in_ECX;\n        }\n        else {\n            if ((iVar1 != 10) || (*in_ECX == 0)) goto code_r0x0040c630;\n            fcn.0040b1ff();\n        }\n    }\n    else {\n        if (iVar1 == 0xc) {\n            if (*in_ECX != 0) {\n                fcn.0045fc42(*in_ECX);\n            }\n            goto code_r0x0040c630;\n        }\n        if (iVar1 < 0xd) goto code_r0x0040c630;\n        if (0xe < iVar1) {\n            if ((iVar1 == 0xf) && (*in_ECX != NULL)) {\n                (****in_ECX)(1);\n            }\n            goto code_r0x0040c630;\n        }\n        if (*in_ECX == 0) goto code_r0x0040c630;\n        fcn.0040b1ff();\n    }\n    fcn.0041fd4d(in_stack_ffffffe4);\ncode_r0x0040c630:\n    *in_ECX = 0;\n    in_ECX[3] = 1;\n    fcn.004119e0(arg_8h);\n    return;\n}\n",
        "token_count": 686
    },
    "0040c67d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c67d(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *in_ECX;\n    uint unaff_EDI;\n    \n    if (*(in_ECX + 9) == '\\0') {\n        puVar2 = fcn.0041fd5b(0xc, unaff_EDI);\n        *puVar2 = 0;\n        iVar1 = arg_8h[1];\n        puVar2[1] = iVar1;\n        if (iVar1 < 0) {\n            puVar2[1] = 0;\n        }\n        fcn.0040c6c9(puVar2, *arg_8h);\n        puVar2[2] = in_ECX[1];\n        in_ECX[1] = puVar2;\n    }\n    else {\n        puVar2 = in_ECX[1];\n        *puVar2 = *arg_8h;\n        puVar2[1] = arg_8h[1];\n        *(in_ECX + 9) = 0;\n    }\n    *in_ECX = *in_ECX + 1;\n    return;\n}\n",
        "token_count": 265
    },
    "0040c6f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0040c6f0(int16_t *lpsz, int32_t cchLength, uint noname_2, int32_t *arg_14h)\n\n{\n    int32_t *piVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t **in_ECX;\n    int32_t iVar5;\n    int32_t *arg_8h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (in_ECX[3] != NULL) {\n        fcn.0040c7c9();\n        (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n        piVar1 = in_ECX[2];\n        if (piVar1 == NULL) {\n            for (arg_8h = *in_ECX; arg_8h != NULL; arg_8h = arg_8h[9]) {\n                iVar5 = arg_8h[1];\n                if (iVar5 == cchLength) {\n                    if (iVar5 == 0) goto code_r0x0040c748;\n                    piVar2 = lpsz;\n                    while (*((*arg_8h - lpsz) + piVar2) == *piVar2) {\n                        piVar2 = piVar2 + 1;\n                        iVar5 = iVar5 + -1;\n                        if (iVar5 == 0) goto code_r0x0040c748;\n                    }\n                }\n            }\n        }\n        else {\n            iVar5 = in_ECX[3] + -1;\n            var_4h = 0;\n            if (-1 < iVar5) {\n                do {\n                    iVar3 = (var_4h + iVar5) / 2;\n                    arg_8h = piVar1[iVar3];\n                    iVar4 = fcn.0040c0a8(arg_8h);\n                    if (iVar4 < 0) {\n                        iVar5 = iVar3 + -1;\n                    }\n                    else {\n                        if (iVar4 < 1) {\n                            if (var_4h <= iVar5) goto code_r0x0040c748;\n                            break;\n                        }\n                        var_4h = iVar3 + 1;\n                    }\n                } while (var_4h <= iVar5);\n            }\n        }\n    }\n    arg_8h = NULL;\ncode_r0x0040c748:\n    *arg_14h = *arg_14h + -1;\n    if (*arg_14h == 0) {\n        fcn.0041fd94(lpsz);\n        fcn.0041fd4d(arg_14h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 599
    },
    "0040c88a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c88a(uint *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    \n    if (arg_8h != NULL) {\n        if (arg_8h[6] != 0) {\n            fcn.0040c88a(arg_8h[6]);\n        }\n        if (arg_8h[7] != 0) {\n            fcn.0040c88a(arg_8h[7]);\n        }\n        if ((*(arg_8h + 4) == '\\0') && (arg_8h_00 = arg_8h[5],  arg_8h_00 != 0)) {\n            fcn.0040c990();\n            fcn.0041fd4d(arg_8h_00);\n        }\n        *arg_8h[3] = *arg_8h[3] + -1;\n        if (*arg_8h[3] == 0) {\n            fcn.0041fd94(*arg_8h);\n            fcn.0041fd4d(arg_8h[3]);\n        }\n        fcn.0041fd4d(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 269
    },
    "0040c990": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c990(int32_t *param_1)\n\n{\n    uint *arg_8h;\n    int32_t iVar1;\n    \n    arg_8h = param_1[2];\n    if (arg_8h != NULL) {\n        *arg_8h[3] = *arg_8h[3] + -1;\n        if (*arg_8h[3] == 0) {\n            fcn.0041fd94(*arg_8h);\n            fcn.0041fd4d(arg_8h[3]);\n        }\n        fcn.0041fd4d(arg_8h);\n        param_1[2] = 0;\n    }\n    if (param_1[3] < 5) goto code_r0x0040c9d6;\n    // switch table (11 cases) at 0x40ca48\n    switch(param_1[3]) {\n    case 5:\n        iVar1 = *param_1;\n        if (iVar1 == 0) break;\n        fcn.0041d593();\n        goto code_r0x0040ca05;\n    case 8:\n        if (*param_1 == 0) break;\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*param_1);\n        iVar1 = *param_1;\n        goto code_r0x0040ca05;\n    case 10:\n        iVar1 = *param_1;\n        if (iVar1 != 0) {\n            fcn.0040b1ff();\n            fcn.0041fd4d(iVar1);\n        }\n        break;\n    case 0xb:\n        fcn.0041fd94(*(*param_1 + 4));\n        fcn.0041fd4d(*param_1);\n        break;\n    case 0xc:\n        if (*param_1 != 0) {\n            fcn.0045fc42(*param_1);\n        }\n        break;\n    case 0xd:\n    case 0xe:\n        iVar1 = *param_1;\n        if (iVar1 == 0) break;\n        fcn.0040b1ff();\ncode_r0x0040ca05:\n        fcn.0041fd4d(iVar1);\n        break;\n    case 0xf:\n        if (*param_1 != NULL) {\n            (****param_1)(1);\n            param_1[3] = 1;\n            *param_1 = 0;\n            return;\n        }\n    }\ncode_r0x0040c9d6:\n    param_1[3] = 1;\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 586
    },
    "0040cb70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cb70(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    double *in_ECX;\n    int32_t iVar8;\n    float10 fVar9;\n    ulong uVar10;\n    \n    if (*(in_ECX + 0xc) == 4) {\n        cVar4 = fcn.0040c82d();\n        if (cVar4 == '\\0') {\n            fcn.0040cd15();\n        }\n        else if (*(in_ECX + 0xc) != 3) {\n            fVar9 = fcn.0040cfb5();\n            fcn.0040e8a0();\n            *in_ECX = fVar9;\n            *(in_ECX + 0xc) = 3;\n        }\n        fcn.0040cb70(arg_8h);\n        goto code_r0x0040cbdf;\n    }\n    // switch table (11 cases) at 0x40cc6c\n    switch(*(in_ECX + 0xc)) {\n    case 1:\n        if (arg_8h[3] == 1) {\n            uVar3 = *arg_8h;\n            uVar1 = *in_ECX;\n            iVar8 = (uVar1 >> 0x1f) + (uVar3 >> 0x1f) + CARRY4(uVar1, uVar3);\n            if (uVar1 + uVar3 >> 0x1f == iVar8) {\n                *in_ECX = uVar1 + uVar3;\n            }\n            else {\n                *(in_ECX + 0xc) = 2;\n                *in_ECX = uVar1 + uVar3;\n                *(in_ECX + 4) = iVar8;\n            }\n            goto code_r0x0040cbdf;\n        }\n        if (arg_8h[3] == 2) {\n            uVar3 = *in_ECX;\n            uVar1 = *arg_8h;\n            uVar2 = arg_8h[1];\n            *in_ECX = uVar3 + *arg_8h;\n            *(in_ECX + 4) = (uVar3 >> 0x1f) + uVar2 + CARRY4(uVar3, uVar1);\n            *(in_ECX + 0xc) = 2;\n            goto code_r0x0040cbdf;\n        }\n        break;\n    case 2:\n        if ((arg_8h[3] == 1) || (arg_8h[3] == 2)) {\n            uVar10 = fcn.0040cc8f();\n            uVar3 = *in_ECX;\n            *in_ECX = *in_ECX + uVar10;\n            *(in_ECX + 4) = *(in_ECX + 4) + (uVar10 >> 0x20) + CARRY4(uVar3, uVar10);\n        }\n        break;\n    case 3:\n    case 4:\n    case 5:\n    case 6:\n    case 8:\n        goto code_r0x0040cbdf;\n    case 7:\n        iVar8 = *in_ECX;\n        if (arg_8h[3] == 1) {\n            iVar5 = fcn.0040ce67();\n        }\n        else {\n            iVar5 = fcn.0040cc8f();\n        }\n        *in_ECX = iVar8 + iVar5;\n        goto code_r0x0040cbdf;\n    case 9:\n    case 10:\n        fcn.0041b518();\n    default:\n        fVar9 = fcn.0040cfb5();\n        *in_ECX = fVar9 + *in_ECX;\n        goto code_r0x0040cbdf;\n    case 0xb:\n        if (arg_8h[3] == 0xb) {\n            iVar5 = fcn.00471e24();\n            iVar8 = **in_ECX;\n            iVar6 = fcn.0041fd8b(iVar5 + iVar8);\n            fcn.00420db0(iVar6, (*in_ECX)[1], **in_ECX);\n            uVar7 = fcn.00471e24();\n            uVar7 = fcn.00471db4(uVar7);\n            fcn.00420db0(**in_ECX + iVar6, uVar7);\n            fcn.0041fd94(*(*in_ECX + 4));\n            *(*in_ECX + 4) = iVar6;\n            **in_ECX = iVar5 + iVar8;\n            goto code_r0x0040cbdf;\n        }\n    }\n    fcn.0041b518();\n    fVar9 = fcn.0040cfb5();\n    *in_ECX = fVar9 + *in_ECX;\ncode_r0x0040cbdf:\n    if (*(in_ECX + 1) != 0) {\n        fcn.0041d962(*(in_ECX + 1));\n        *(in_ECX + 1) = 0;\n    }\n    return;\n}\n",
        "token_count": 1170
    },
    "0040cc8f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t ** __fastcall fcn.0040cc8f(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int16_t *arg_8h;\n    int32_t **ppiVar2;\n    float10 extraout_ST0;\n    int64_t iVar3;\n    int32_t **var_8h;\n    int32_t **var_4h;\n    \n    piVar1 = param_1[3];\n    if (piVar1 != 0x1) {\n        if (piVar1 == 0x2) {\n            return *param_1;\n        }\n        var_8h = param_1;\n        var_4h = param_1;\n        if (piVar1 == 0x3) {\n            iVar3 = fcn.00442050();\n            ppiVar2 = iVar3;\n            if (extraout_ST0 <= 0) {\n                return ppiVar2;\n            }\n            if (0xffffffff < iVar3) {\n                return ppiVar2;\n            }\n            if (-1 < iVar3) {\n                return ppiVar2;\n            }\n            return 0xffffffff;\n        }\n        if (piVar1 == 0x4) {\n            arg_8h = *param_1[2];\n            if ((*arg_8h == 0x30) && (((arg_8h[1] == 0x78 || (arg_8h[1] == 0x58)) && (param_1[2][1] < 0x13)))) {\n                fcn.004035b3(0x10);\n                return var_8h;\n            }\n            ppiVar2 = fcn.0042628b(arg_8h);\n            return ppiVar2;\n        }\n        if (piVar1 != 0x7) {\n            if (piVar1 == 0x9) {\n                if (*param_1 != '\\0') {\n                    return 0x1;\n                }\n            }\n            else if (piVar1 == 0xb) {\n                if (**param_1 < 5) {\n                    fcn.0046ebcd(&var_8h);\n                    return var_8h;\n                }\n                if (**param_1 < 9) {\n                    fcn.0046ebcd(&var_8h);\n                    return var_8h;\n                }\n            }\n            return NULL;\n        }\n    }\n    return *param_1;\n}\n",
        "token_count": 534
    },
    "0040ce67": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t ** __fastcall fcn.0040ce67(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t **ppiVar3;\n    uint arg_8h;\n    int32_t **var_8h;\n    int32_t **ppiStack8;\n    \n    piVar1 = param_1[3];\n    var_8h = param_1;\n    ppiStack8 = param_1;\n    if (piVar1 < 8) {\n        if (((piVar1 == 0x7) || (piVar1 == 0x1)) || (piVar1 == 0x2)) {\n            return *param_1;\n        }\n        if (piVar1 == 0x3) {\n            ppiVar3 = fcn.00442010();\n            return ppiVar3;\n        }\n        if (piVar1 == 0x4) {\n            cVar2 = fcn.0040c548();\n            if (cVar2 != '\\0') {\n                fcn.004035b3(0x10);\n                return var_8h;\n            }\n            ppiVar3 = fcn.00426261(arg_8h);\n            return ppiVar3;\n        }\n    }\n    else if (piVar1 == 0x9) {\n        if (*param_1 != '\\0') {\n            return 0x1;\n        }\n    }\n    else {\n        if (piVar1 == 0xa) {\n            return (*param_1)[1];\n        }\n        if ((piVar1 == 0xb) && (**param_1 < 9)) {\n            fcn.0046ebcd(&var_8h);\n            return var_8h;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 396
    },
    "0040cfb5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __fastcall fcn.0040cfb5(double *param_1)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint arg_8h;\n    float10 fVar3;\n    uint var_10h;\n    \n    iVar1 = *(param_1 + 0xc);\n    if (iVar1 == 1) {\n        return *param_1;\n    }\n    if (iVar1 == 2) {\n        return *param_1;\n    }\n    if (iVar1 == 3) {\n        return *param_1;\n    }\n    if (iVar1 == 4) {\n        cVar2 = fcn.0040c548();\n        if (cVar2 == '\\0') {\n            fVar3 = fcn.0042cef5(arg_8h);\n            return fVar3;\n        }\n        fcn.004035b3(8);\n        return _var_10h;\n    }\n    if (iVar1 == 7) {\n        return *param_1;\n    }\n    if (iVar1 == 9) {\n        if (*param_1 != '\\0') {\n            return 1;\n        }\n    }\n    else if (iVar1 == 10) {\n        return *(*param_1 + 4);\n    }\n    return 0;\n}\n",
        "token_count": 293
    },
    "0040d010": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_13ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040d010(int32_t arg_8h, uint32_t *arg_ch, uint32_t arg_10h)\n\n{\n    int16_t iVar1;\n    int16_t **arg_8h_00;\n    char cVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    uint32_t uVar5;\n    uint32_t arg_10h_00;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int16_t *piVar8;\n    uint *puVar9;\n    int32_t in_FS_OFFSET;\n    uint arg_8h_01;\n    uint *in_stack_fffffeac;\n    int32_t var_13ch;\n    uint32_t var_3ch;\n    uint var_34h;\n    int32_t var_30h;\n    uint *var_2ch;\n    int32_t var_28h;\n    int16_t **var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int16_t *var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    char var_6h;\n    uint var_5h;\n    \n    var_5h._0_1_ = (arg_10h & 4) != 0;\n    arg_10h_00 = arg_10h & 3;\n    *arg_ch = *arg_ch + 1;\n    piVar6 = *(*(arg_8h + 4) + *arg_ch * 4);\n    if (*(piVar6 + 2) == 0) {\n        iVar7 = *piVar6;\n        if (iVar7 == 0x1e) {\n            fcn.004857c9(arg_8h, arg_ch, arg_10h_00);\n            return;\n        }\n        if (iVar7 == 0x1f) {\n            if (((arg_10h_00 != 0) && (iVar7 = **(*(arg_8h + 4) + 4 + *arg_ch * 4),  iVar7 != 0x1c)) && (iVar7 != 0x1d))\n            {\n                fcn.004860f7(arg_8h, arg_ch, arg_10h_00);\n                return;\n            }\n            in_stack_fffffeac = *(piVar6 + 10);\n            arg_8h_01 = 0x6e;\n            goto code_r0x00450faf;\n        }\n        if (iVar7 == 0x2c) {\n            fcn.00485c5a(arg_8h, arg_ch, arg_10h_00);\n            return;\n        }\n    }\n    var_20h = 0;\n    var_10h = 0;\n    var_6h = '\\0';\n    if (*(**(in_FS_OFFSET + 0x2c) + 4) < *0x4d256c) {\n        in_stack_fffffeac = 0x4d256c;\n        fcn.004201c2(0x4d256c);\n        if (*0x4d256c == -1) {\n            in_stack_fffffeac = 0x49d0d0;\n            fcn.004013dc(0x49d0d0);\n            fcn.00420023(0x4423fd);\n            fcn.00420178(0x4d256c);\n        }\n    }\n    uVar5 = *arg_ch;\n    iVar7 = *(arg_8h + 4);\n    iVar1 = *(*(iVar7 + uVar5 * 4) + 8);\n    while (iVar1 == 0x33) {\n        var_14h = 0;\n        arg_8h_00 = **(iVar7 + uVar5 * 4);\n        var_24h = arg_8h_00;\n        if (arg_10h_00 != 1) {\n            if (arg_10h_00 != 0) {\n                if (arg_10h_00 == 2) goto code_r0x0040d36f;\n                if (arg_10h_00 == 0x10) {\n                    var_14h = fcn.0041dab2(arg_8h_00, &fcn.0040d010::var_10h);\n                }\n                goto code_r0x0040d0f5;\n            }\n            if ((*0x4d2380 == 0) || (var_14h = fcn.0041dab2(arg_8h_00, &fcn.0040d010::var_10h),  var_14h == 0)) {\n                var_14h = fcn.0041dab2(arg_8h_00, &fcn.0040d010::var_10h);\n                goto code_r0x0040d0f5;\n            }\ncode_r0x0040d0fd:\n            if ((var_10h & 0x100) == 0) {\n                if ((var_10h & 0x400) == 0) {\n                    var_6h = '\\x01';\ncode_r0x0040d11a:\n                    iVar7 = var_14h;\n                    if ((arg_10h & 1) == 0) goto code_r0x0040d17e;\n                    if (arg_10h_00 == 1) {\n                        if (*0x4d2380 == 0) {\ncode_r0x00450e3b:\n                            iVar3 = fcn.0041dab2(arg_8h_00, &fcn.0040d010::var_10h);\n                            goto code_r0x0040d16a;\n                        }\n                        piVar6 = *0x4d2384;\n                        if (*0x4d2389 != '\\0') {\n                            piVar6 = (*0x4d2384)[2];\n                        }\n                        cVar2 = fcn.0040d4e0(arg_8h_00, piVar6);\n                        if ((cVar2 != '\\0') && (iVar3 = *piVar6,  iVar3 != 0)) {\n                            var_10h = *(iVar3 + 0x10) & 0xff00;\n                            iVar3 = *(iVar3 + 0x14);\n                            goto code_r0x0040d16a;\n                        }\n                        goto code_r0x0040d17e;\n                    }\n                    if (arg_10h_00 == 0) {\n                        if ((*0x4d2380 == 0) || (iVar3 = fcn.0041dab2(arg_8h_00, &fcn.0040d010::var_10h),  iVar3 == 0))\n                        {\n                            iVar3 = fcn.0041dab2(arg_8h_00, &fcn.0040d010::var_10h);\n                            goto code_r0x0040d16a;\n                        }\n                    }\n                    else {\n                        if (arg_10h_00 == 2) goto code_r0x00450e3b;\n                        if (arg_10h_00 != 0x10) goto code_r0x0040d17e;\n                        iVar3 = fcn.0041dab2(arg_8h_00, &fcn.0040d010::var_10h);\ncode_r0x0040d16a:\n                        if (iVar3 == 0) goto code_r0x0040d17e;\n                    }\n                    if ((var_10h & 0x200) == 0) goto code_r0x0040d17e;\ncode_r0x00450f3e:\n                    arg_8h_01 = 0xaf;\n                }\n                else {\n                    if (var_5h != '\\0') goto code_r0x0040d344;\n                    arg_8h_01 = 0x9c;\n                }\n            }\n            else {\n                arg_8h_01 = 0xae;\n            }\n            goto code_r0x00450faf;\n        }\n        if (*0x4d2380 == 0) {\ncode_r0x0040d36f:\n            var_14h = fcn.0041dab2(arg_8h_00, &fcn.0040d010::var_10h);\n        }\n        else {\n            piVar6 = *0x4d2384;\n            if (*0x4d2389 != '\\0') {\n                piVar6 = (*0x4d2384)[2];\n            }\n            cVar2 = fcn.0040d4e0(arg_8h_00, piVar6);\n            if ((cVar2 == '\\0') || (iVar7 = *piVar6,  iVar7 == 0)) {\n                var_14h = 0;\n            }\n            else {\n                var_14h = *(iVar7 + 0x14);\n                var_10h = *(iVar7 + 0x10) & 0xff00;\n            }\n        }\ncode_r0x0040d0f5:\n        if (var_14h != 0) goto code_r0x0040d0fd;\n        if (var_5h != '\\0') {\n            arg_8h_01 = 0x79;\n            goto code_r0x00450faf;\n        }\n        var_14h = fcn.0040c117(arg_8h_00, 0x4d2570, arg_8h_00, arg_10h_00);\ncode_r0x0040d344:\n        iVar7 = var_14h;\n        if (var_6h != '\\0') goto code_r0x0040d11a;\ncode_r0x0040d17e:\n        if ((((arg_10h & 2) != 0) && (iVar3 = fcn.0041da6c(arg_8h_00, &fcn.0040d010::var_10h, 1),  iVar3 != 0)) &&\n           ((var_10h & 0x200) != 0)) goto code_r0x00450f3e;\n        if ((var_5h != '\\0') && (*(iVar7 + 0xc) != 5)) {\n            arg_8h_01 = 0x71;\n            goto code_r0x00450faf;\n        }\n        *arg_ch = *arg_ch + 1;\n        uVar5 = *arg_ch;\n        iVar7 = *(arg_8h + 4);\n        if (*(*(iVar7 + uVar5 * 4) + 8) == 0x4e) {\n            var_3ch = 0;\n            var_34h = 0;\n            var_30h = 1;\n            if (var_5h == '\\0') {\n                var_6h = '\\0';\n            }\n            else {\n                fcn.0040c5e7(var_14h);\n            }\n            iVar7 = var_30h;\n            uVar5 = var_3ch;\n            iVar3 = fcn.0040149f(arg_8h, arg_ch, var_14h, &fcn.0040d010::var_13ch, &fcn.0040d010::var_20h);\n            if (iVar3 < 0) {\n                fcn.0040e8a0();\n                return;\n            }\n            if ((var_5h != '\\0') && (0 < *(*((iVar7 != 5) - 1 & uVar5) + 0x10c))) {\n                fcn.0045f5a8((iVar7 != 5) - 1 & uVar5);\n            }\n            fcn.0040e8a0();\n            iVar7 = *(arg_8h + 4);\n            uVar5 = *arg_ch;\n        }\n        iVar3 = var_14h;\n        if (*(*(iVar7 + uVar5 * 4) + 8) == 0x41) {\n            *arg_ch = uVar5 + 1;\n            var_2ch = *(*(iVar7 + (uVar5 + 1) * 4) + 10);\n            if (var_5h != '\\0') {\n                arg_8h_01 = 0xac;\n                goto code_r0x00450faf;\n            }\n            if ((var_6h != '\\0') && (var_14h != 0x4d2570)) {\n                if ((*(var_14h + 0xc) == 4) && (*0x4d257c == 4)) {\n                    if (*(var_14h + 8) != *0x4d2578) {\n                        var_13ch = *0x4d2578;\n                        fcn.0040c1c3(*0x4d2578);\n                    }\n                }\n                else {\n                    fcn.0040e8a0();\n                    var_13ch = 0x4d2570;\n                    fcn.004119e0(0x4d2570);\n                }\n            }\n            uVar5 = *arg_ch;\n            ppiVar4 = *(arg_8h + 4) + uVar5 * 4;\n            if (*(*ppiVar4 + 2) == 0x4e) {\n                if (*(iVar3 + 0xc) != 5) {\n                    *arg_ch = uVar5 - 1;\n                    iVar7 = fcn.00485b33(arg_8h, arg_ch, iVar3, &fcn.0040d010::var_13ch, &fcn.0040d010::var_20h);\n                    if (iVar7 < 0) {\n                        return;\n                    }\n                }\n                iVar7 = fcn.0041ec9e(arg_8h, *arg_ch, arg_8h_00);\n                if (iVar7 < 0) {\n                    return;\n                }\n                if (0 < var_20h) {\n                    puVar9 = &fcn.0040d010::var_13ch;\n                    for (iVar7 = var_20h; iVar7 != 0; iVar7 = iVar7 + -1) {\n                        *puVar9 = 0;\n                        puVar9 = puVar9 + 1;\n                    }\n                }\n                in_stack_fffffeac = &fcn.0040d010::var_13ch;\n                cVar2 = fcn.0041e596(arg_8h, arg_ch, iVar3, in_stack_fffffeac, 1);\n                if (cVar2 == '\\0') {\n                    return;\n                }\n            }\n            else {\n                iVar7 = 0;\n                var_1ch = 0;\n                if (uVar5 < *(arg_8h + 8)) {\ncode_r0x0040d230:\n                    iVar1 = *(*ppiVar4 + 2);\n                    if (iVar1 == 0x33) {\n                        piVar6 = **ppiVar4;\n                        piVar8 = piVar6[1];\n                        iVar7 = var_1ch;\n                        if (piVar8 == var_24h[1]) {\n                            var_18h = *var_24h;\n                            if (piVar8 == NULL) {\ncode_r0x00450f65:\n                                arg_8h_01 = 0xb1;\n                                goto code_r0x00450faf;\n                            }\n                            var_28h = *piVar6 - var_18h;\n                            while (*(var_28h + var_18h) == *var_18h) {\n                                var_18h = var_18h + 1;\n                                piVar8 = piVar8 + -1;\n                                if (piVar8 == NULL) goto code_r0x00450f65;\n                            }\n                        }\n                    }\n                    else if (iVar1 == 0x4e) {\ncode_r0x0040d270:\n                        var_1ch = iVar7 + 1;\n                        iVar7 = var_1ch;\n                    }\n                    else {\n                        if (iVar1 != 0x4f) {\n                            if (iVar1 == 0x47) goto code_r0x0040d270;\n                            if (iVar1 != 0x48) {\n                                if (iVar1 != 0x40) {\n                                    if (iVar1 != 0x7f) goto code_r0x0040d266;\n                                    goto code_r0x0040d2cd;\n                                }\n                                if (iVar7 == 0) goto code_r0x0040d2cd;\n                                goto code_r0x0040d266;\n                            }\n                        }\n                        var_1ch = iVar7 + -1;\n                        iVar7 = var_1ch;\n                    }\ncode_r0x0040d266:\n                    uVar5 = uVar5 + 1;\n                    ppiVar4 = ppiVar4 + 1;\n                    if (*(arg_8h + 8) <= uVar5) goto code_r0x0040d2cd;\n                    goto code_r0x0040d230;\n                }\ncode_r0x0040d2cd:\n                in_stack_fffffeac = 0x40d2e3;\n                iVar7 = fcn.00410540(arg_8h, arg_ch, var_14h, 0xffffffff);\n                if (iVar7 < 0) {\n                    arg_8h_01 = 0x6e;\n                    in_stack_fffffeac = var_2ch;\n                    goto code_r0x00450faf;\n                }\n            }\n        }\n        uVar5 = *arg_ch;\n        iVar7 = *(arg_8h + 4);\n        iVar1 = *(*(iVar7 + uVar5 * 4) + 8);\n        if (iVar1 == 0x7f) {\n            return;\n        }\n        if (iVar1 != 0x40) break;\n        iVar3 = *(iVar7 + 4 + uVar5 * 4);\n        uVar5 = uVar5 + 1;\n        *arg_ch = uVar5;\n        iVar1 = *(iVar3 + 8);\n    }\n    arg_8h_01 = 0x7f;\ncode_r0x00450faf:\n    fcn.004734ba(arg_8h_01, in_stack_fffffeac);\n    return;\n}\n",
        "token_count": 4088
    },
    "0040d4e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040d4e0(uint16_t **arg_8h, int32_t **arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint16_t **ppuVar4;\n    uint32_t in_EAX;\n    uint16_t *puVar5;\n    uint16_t *puVar6;\n    uint16_t **ppuVar7;\n    uint16_t *puVar8;\n    int32_t iVar9;\n    int32_t in_FS_OFFSET;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint16_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint16_t *var_8h;\n    uint var_1h;\n    \n    if (*arg_ch == NULL) {\n        return in_EAX & 0xffffff00;\n    }\n    var_1h._0_1_ = 0;\n    if ((*(**(in_FS_OFFSET + 0x2c) + 4) < *0x4d2540) && (fcn.004201c2(0x4d2540),  *0x4d2540 == -1)) {\n        fcn.0040c25d();\n        fcn.00420023(0x4423e9);\n        fcn.00420178(0x4d2540);\n    }\n    *0x4d2560 = 0;\n    *0x4d255c = 0;\n    ppuVar7 = *arg_ch;\n    var_10h = 0x4d2544;\n    var_ch = 0x4d2544;\n    do {\n        while( true ) {\n            puVar8 = ppuVar7[1];\n            puVar6 = arg_8h[1];\n            if (puVar6 == NULL) break;\n            if (puVar8 != NULL) goto code_r0x0040d551;\ncode_r0x0040d58f:\n            piVar2 = ppuVar7[7];\n            if (piVar2 == NULL) goto code_r0x0040d5a0;\n            puVar8 = piVar2[1];\n            if (puVar6 < piVar2[1]) {\n                puVar8 = puVar6;\n            }\n            puVar5 = *arg_8h;\n            if (puVar8 != NULL) {\n                iVar9 = *piVar2 - puVar5;\n                var_8h = puVar8;\n                do {\n                    uVar1 = *(iVar9 + puVar5);\n                    if (uVar1 != *puVar5) {\n                        if (uVar1 < *puVar5) goto code_r0x0040d740;\n                        goto code_r0x0040d6ba;\n                    }\n                    puVar5 = puVar5 + 1;\n                    var_8h = var_8h + -1;\n                } while (var_8h != NULL);\n            }\n            if (puVar8 < puVar6) {\ncode_r0x0040d740:\n                ppuVar7[7] = piVar2[6];\n                piVar2[6] = *arg_ch;\n                *arg_ch = piVar2;\n                if (piVar2[7] == 0) goto code_r0x0040d5a0;\n            }\ncode_r0x0040d6ba:\n            var_ch[7] = *arg_ch;\n            var_ch = *arg_ch;\n            ppuVar7 = var_ch[7];\n            *arg_ch = ppuVar7;\n        }\n        if (puVar8 == NULL) {\ncode_r0x0040d551:\n            puVar5 = *ppuVar7;\n            if (puVar6 < puVar8) {\n                if (puVar8 != NULL) {\n                    iVar9 = *arg_8h - puVar5;\n                    do {\n                        uVar1 = *(iVar9 + puVar5);\n                        if (uVar1 != *puVar5) {\n                            iVar9 = (-(uVar1 < *puVar5) & 0xfffffffe) + 1;\n                            goto code_r0x0040d589;\n                        }\n                        puVar5 = puVar5 + 1;\n                        puVar8 = puVar8 + -1;\n                    } while (puVar8 != NULL);\n                }\n                iVar9 = 0;\n            }\n            else {\n                if (puVar6 != NULL) {\n                    iVar9 = *arg_8h - puVar5;\n                    puVar8 = puVar6;\n                    do {\n                        uVar1 = *(iVar9 + puVar5);\n                        if (uVar1 != *puVar5) {\n                            iVar9 = (-(uVar1 < *puVar5) & 0xfffffffe) + 1;\n                            goto code_r0x0040d589;\n                        }\n                        puVar5 = puVar5 + 1;\n                        puVar8 = puVar8 + -1;\n                    } while (puVar8 != NULL);\n                }\n                iVar9 = 0;\n            }\ncode_r0x0040d589:\n            if (-1 < iVar9) {\n                if (0 < iVar9) goto code_r0x0040d58f;\n                var_1h._0_1_ = 1;\ncode_r0x0040d5a0:\n                uVar3 = (*arg_ch)[6];\n                var_ch[7] = uVar3;\n                var_10h[6] = (*arg_ch)[7];\n                (*arg_ch)[6] = *0x4d2560;\n                (*arg_ch)[7] = *0x4d255c;\n                return uVar3 & 0xffffff00 | var_1h;\n            }\n        }\n        ppuVar4 = ppuVar7[6];\n        if (ppuVar4 == NULL) goto code_r0x0040d5a0;\n        puVar8 = ppuVar4[1];\n        if (puVar8 < puVar6) {\n            puVar6 = puVar8;\n        }\n        puVar5 = *ppuVar4;\n        if (puVar6 != NULL) {\n            iVar9 = *arg_8h - puVar5;\n            var_14h = puVar6;\n            do {\n                uVar1 = *(iVar9 + puVar5);\n                if (uVar1 != *puVar5) {\n                    if (*puVar5 <= uVar1) goto code_r0x0040d643;\n                    goto code_r0x0040d62c;\n                }\n                puVar5 = puVar5 + 1;\n                var_14h = var_14h + -1;\n            } while (var_14h != NULL);\n            puVar8 = ppuVar4[1];\n        }\n        if (puVar6 < puVar8) {\ncode_r0x0040d62c:\n            ppuVar7[6] = ppuVar4[7];\n            ppuVar4[7] = *arg_ch;\n            *arg_ch = ppuVar4;\n            if (ppuVar4[6] == NULL) goto code_r0x0040d5a0;\n        }\ncode_r0x0040d643:\n        var_10h[6] = *arg_ch;\n        var_10h = *arg_ch;\n        ppuVar7 = var_10h[6];\n        *arg_ch = ppuVar7;\n    } while( true );\n}\n",
        "token_count": 1705
    },
    "0040d840": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d840(uint arg_8h, int32_t arg_ch, int32_t *arg_10h, uint *arg_14h, uchar *arg_18h)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    uchar uVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint16_t *puVar8;\n    int32_t *piVar9;\n    uint16_t **ppuVar10;\n    uint16_t **in_ECX;\n    uint16_t **ppuVar11;\n    uint16_t *puVar12;\n    uint16_t **unaff_EBX;\n    uint16_t **ppuVar13;\n    uint uVar14;\n    uint32_t uVar15;\n    uint16_t **ppuVar16;\n    uint16_t **unaff_ESI;\n    uint16_t **ppuVar17;\n    uint16_t *puVar18;\n    int32_t **ppiVar19;\n    uint16_t **ppuVar20;\n    uint16_t **ppuVar21;\n    uint *puVar22;\n    bool bVar23;\n    uint16_t **arg_8h_00;\n    uint uVar24;\n    uint16_t **ppuStack188;\n    uint16_t **ppuStack184;\n    uint16_t **ppuStack180;\n    uint16_t **ppuStack176;\n    uint16_t **ppuStack172;\n    uint16_t **ppuStack168;\n    uint16_t **ppuStack164;\n    uint16_t **ppuStack160;\n    uint16_t **ppuStack156;\n    uint16_t **ppuStack152;\n    uint16_t **ppuStack148;\n    uint16_t **ppuStack144;\n    uint16_t **ppuStack140;\n    uint16_t **ppuStack136;\n    uint16_t **ppuStack132;\n    uint16_t **ppuStack128;\n    uint16_t **ppuStack124;\n    uint16_t **ppuStack120;\n    uint16_t **ppuStack116;\n    uint uStack112;\n    uint16_t **ppuStack108;\n    uint uStack104;\n    uint uStack96;\n    uint16_t *puStack92;\n    uint16_t *puStack84;\n    int32_t iStack80;\n    uint uStack72;\n    uint16_t **ppuStack64;\n    uint uStack60;\n    uchar uStack56;\n    uint uStack52;\n    uchar uStack48;\n    uchar auStack44 [4];\n    uint uStack40;\n    uint uStack32;\n    uint uStack28;\n    uchar uStack24;\n    \n    ppuStack156 = 0x3;\n    puVar22 = *(*(arg_ch + 4) + *arg_10h * 4);\n    ppuStack176 = *(puVar22 + 10);\n    puVar22 = *puVar22;\n    ppuVar21 = *puVar22;\n    ppuVar17 = puVar22[1];\n    ppuVar20 = puVar22[2];\n    ppuVar10 = puVar22[3];\n    *ppuVar10 = *ppuVar10 + 1;\n    ppuStack188 = in_ECX;\n    ppuStack124 = fcn.0040c6f0(ppuVar21, ppuVar17, ppuVar20, ppuVar10);\n    if (ppuStack124 == NULL) {\n        fcn.004734ba(0x85, unaff_EBX);\n        return 0xffffffff;\n    }\n    puStack84 = in_ECX[0x54];\n    ppuVar11 = *arg_10h + 1;\n    puStack92 = 0x1;\n    uStack104 = 0;\n    uStack96 = 0;\n    ppuStack184 = NULL;\n    ppuStack116 = NULL;\n    ppuStack168 = NULL;\n    uStack112 = 0;\n    ppuStack176 = NULL;\n    ppuStack108 = NULL;\n    ppuStack180 = NULL;\n    ppuStack140 = NULL;\n    ppuStack160 = NULL;\n    ppuStack136 = NULL;\n    ppuStack148 = NULL;\n    ppuStack132 = NULL;\n    iVar5 = *(arg_ch + 4);\n    ppuStack120 = 0x49d100;\n    ppuStack144 = 0x49d104;\n    *arg_10h = ppuVar11;\n    if (*(*(iVar5 + ppuVar11 * 4) + 8) == 0x47) {\n        ppuStack188 = ppuVar11;\n        iVar5 = fcn.0040c58d(arg_ch, arg_10h, &stack0xffffff44, &stack0xffffff38);\n        if (-1 < iVar5) {\n            puVar8 = ppuStack140[4];\n            if ((*0x4d23a0 < puVar8) || (puVar8 < 1)) {\n                ppuStack180 = NULL;\n            }\n            else {\n                ppuStack180 = puVar8 * 0x10 + *0x4d23dc;\n            }\n            ppiVar19 = ppuStack180[1];\n            if ((*(*ppiVar19 + 2) == 0) && (**ppiVar19 == 0x2b)) {\n                iVar5 = 4;\n                ppuStack188 = 0x4;\n            }\n            else {\n                iVar5 = 3;\n            }\n            ppuStack168 = NULL;\n            ppuStack172 = NULL;\n            ppuVar16 = NULL;\n            arg_8h_00 = ppuVar21;\n            ppuVar13 = ppuVar10;\n            if (0 < ppuStack140[5]) {\n                do {\n                    if (ppuVar21 <= ppuVar10) break;\n                    ppuStack152 = ppuVar16 + 1;\n                    ppuStack128 = NULL;\n                    cVar4 = '\\0';\n                    iVar1 = *(ppiVar19[iVar5] + 2);\n                    iVar6 = iVar5;\n                    while (iVar1 == 0) {\n                        if ((*(ppiVar19[iVar6 + 1] + 2) != 0x33) &&\n                           (ppuVar10 = ppuStack188,  *ppiVar19[iVar6] == *ppiVar19[iVar6 + 1])) {\ncode_r0x00451149:\n                            fcn.004734ba(0x91, *(*(ppuStack164[1] + iVar6 * 2 + 2) + 10));\n                            goto code_r0x00451608;\n                        }\n                        if (*ppiVar19[iVar6] == 0x24) {\n                            cVar4 = '\\x01';\n                        }\n                        else {\n                            if (*ppiVar19[iVar6] != 0x1e) goto code_r0x00451149;\n                            ppuStack128 = 0x100;\n                        }\n                        iVar6 = iVar6 + 1;\n                        iVar1 = *(ppiVar19[iVar6] + 2);\n                    }\n                    if (*(*(*(arg_ch + 4) + ppuVar10 * 4) + 8) != 0x33) {\n                        cVar4 = '\\0';\n                    }\n                    ppuVar10 = ppuStack180;\n                    ppuVar21 = ppuStack140;\n                    if (ppuStack160 == ppuStack148) {\n                        ppuStack148 = ppuStack148 * 2;\n                        if (ppuStack148 < 0x8) {\n                            ppuStack148 = 0x8;\n                        }\n                        ppuStack132 = ppuStack148;\n                        ppuVar10 = fcn.0041fd8b(-(ZEXT48(ppuStack148) * 4 >> 0x20 != 0) | ZEXT48(ppuStack148) * 4);\n                        ppuVar21 = ppuVar10;\n                        if ((ppuStack180 != NULL) && (ppuStack160 != NULL)) {\n                            fcn.00420db0(ppuVar10, ppuStack180, ppuStack160 * 4);\n                            fcn.0041fd94(ppuStack180);\n                        }\n                    }\n                    ppuStack140 = ppuVar21;\n                    ppuStack180 = ppuVar10;\n                    puVar8 = fcn.0041fd5b(1, arg_8h_00);\n                    *puVar8 = cVar4;\n                    ppuStack180[ppuStack160] = puVar8;\n                    ppuStack160 = ppuStack160 + 1;\n                    ppuStack136 = ppuStack160;\n                    fcn.0040e8a0();\n                    puStack92 = 0x1;\n                    uStack104 = 0;\n                    ppuVar10 = ppuStack184;\n                    ppuVar21 = ppuStack116;\n                    if (ppuStack168 == ppuStack176) {\n                        ppuStack176 = ppuStack176 * 2;\n                        if (ppuStack176 < 0x8) {\n                            ppuStack176 = 0x8;\n                        }\n                        ppuStack108 = ppuStack176;\n                        ppuVar10 = fcn.0041fd8b(-(ZEXT48(ppuStack176) * 4 >> 0x20 != 0) | ZEXT48(ppuStack176) * 4);\n                        ppuVar21 = ppuVar10;\n                        if ((ppuStack184 != NULL) && (ppuStack168 != NULL)) {\n                            fcn.00420db0(ppuVar10, ppuStack184, ppuStack168 * 4);\n                            fcn.0041fd94(ppuStack184);\n                        }\n                    }\n                    ppuStack116 = ppuVar21;\n                    ppuStack184 = ppuVar10;\n                    puVar8 = fcn.0041fd5b(0x10, arg_8h_00);\n                    *(puVar8 + 4) = 0;\n                    fcn.004119e0(&stack0xffffff98);\n                    ppuStack188[ppuStack172] = puVar8;\n                    ppuStack116 = ppuStack172 + 1;\n                    if (cVar4 == '\\0') {\n                        ppuVar10 = ppuStack188 + ppuStack172;\n                        ppuStack172 = ppuStack116;\n                        iVar5 = fcn.00410540(arg_ch, &stack0xffffff40, *ppuVar10, arg_ch);\n                        if (iVar5 < 0) goto code_r0x00451608;\n                        iVar5 = iVar6 + 1;\n                        ppuVar21 = ppuVar11;\n                        if (*(*(ppuStack184[1] + iVar5 * 2) + 8) == 0x41) {\n                            iVar5 = iVar6 + 2;\n                            iVar6 = 0;\n                            do {\n                                iVar1 = *(*(ppuStack184[1] + iVar5 * 2) + 8);\n                                if (iVar1 == 0x47) {\n                                    iVar6 = iVar6 + 1;\n                                }\n                                else if (iVar1 == 0x48) {\n                                    iVar6 = iVar6 + -1;\n                                    if (iVar6 < 0) break;\n                                }\n                                else if ((iVar1 == 0x40) && (iVar6 == 0)) break;\n                                iVar5 = iVar5 + 1;\n                            } while( true );\n                        }\n                    }\n                    else {\n                        ppuVar10 = ppuStack188 + ppuStack172;\n                        ppuStack172 = ppuStack116;\n                        iVar5 = fcn.0041d993(arg_ch, &stack0xffffff40, *ppuVar10, ppuStack132, 1, 0, arg_ch);\n                        if (iVar5 < 0) goto code_r0x00451608;\n                        iVar5 = iVar6 + 1;\n                        ppuVar21 = ppuVar11;\n                    }\n                    ppuVar10 = ppuStack188;\n                    ppuVar11 = ppuVar21;\n                    if (ppuStack188 == ppuVar21) break;\n                    if ((*(*(*(arg_ch + 4) + ppuStack188 * 4) + 8) != 0x40) ||\n                       (ppuVar10 = ppuStack188 + 1,  ppuVar10 == ppuVar21)) {\n                        fcn.004734ba(0x6f, *(*(*(arg_ch + 4) + ppuStack188 * 4) + 10));\n                        goto code_r0x00451608;\n                    }\n                    ppiVar19 = ppuStack164[1];\n                    if (*(ppiVar19[iVar5] + 2) == 0x40) {\n                        iVar5 = iVar5 + 1;\n                    }\n                    ppuStack156 = ppuStack156 + 1;\n                    ppuVar16 = ppuStack152;\n                    ppuStack188 = ppuVar10;\n                } while (ppuStack156 < ppuStack124[5]);\n            }\n            ppuVar16 = ppuStack152;\n            if (arg_8h != '\\0') {\n                if (ppuStack152 == NULL) {\n                    if (ppuVar10 != ppuVar21) {\n                        unaff_ESI = unaff_ESI & 0xffffff;\n                        fcn.00467076(&stack0xffffff3f);\n                        fcn.0040e8a0();\n                        uStack96 = 1;\n                        ppuStack108 = ppuVar16;\n                        fcn.00466fef(&stack0xffffff94);\n                        ppuStack176 = ppuStack120;\n                        unaff_EBX = ppuStack124;\n                        iVar5 = fcn.00410540(arg_ch, &stack0xffffff3c, ppuStack124[ppuStack120 + -1], ppuVar20);\n                        ppuStack184 = ppuStack160;\n                        ppuVar13 = ppuStack164;\n                        if (iVar5 < 0) goto code_r0x00451608;\ncode_r0x00451221:\n                        ppuVar10 = unaff_ESI;\n                        ppuVar21 = ppuVar20;\n                        iVar5 = fcn.0048566c(&stack0xffffff88, &stack0xffffff68);\n                        if (iVar5 == 0) {\n                            fcn.00466f52();\n                            if (ppuStack160 < 1) {\n                                ppuStack176 = ppuStack120;\n                                ppuStack168 = ppuStack144;\n                                ppuStack188 = ppuStack148;\n                                unaff_ESI = ppuVar10;\n                                unaff_EBX = ppuStack124;\n                            }\n                            else {\n                                ppuVar13 = ppuVar13 & 0xffffff;\n                                ppuVar20 = ppuStack160;\n                                ppuVar21 = ppuVar17;\n                                ppuVar10 = ppuVar11;\n                                do {\n                                    fcn.00467076(&stack0xffffff37);\n                                    ppuVar20 = ppuVar20 + -1;\n                                } while (ppuVar20 != NULL);\n                                ppuStack180 = ppuStack124;\n                                ppuStack172 = ppuStack148;\n                                ppuVar11 = ppuVar10;\n                                unaff_ESI = ppuStack128;\n                                unaff_EBX = ppuStack152;\n                            }\n                        }\n                        else {\n                            ppuStack176 = ppuStack120;\n                            unaff_ESI = ppuVar10;\n                            unaff_EBX = ppuStack124;\n                        }\n                    }\n                }\n                else if (ppuStack152 == 0x1) goto code_r0x00451221;\n            }\n            ppuVar17 = ppuStack132;\n            if (((ppuStack132[6] <= ppuStack160) && (ppuStack160 <= ppuStack132[5])) && (ppuVar10 == ppuVar21)) {\n                ppuStack148 = ppuStack132[4];\n                ppuStack152 = NULL;\n                if (ppuStack148 < 0) {\n                    ppuStack148 = NULL;\n                }\n                ppuVar10 = &stack0xffffff68;\n                fcn.0040c67d(ppuVar10);\n                ppuVar21 = ppuStack156;\n                if (ppuStack156 != NULL) {\n                    ppuVar20 = ppuStack156[6];\n                    if (ppuVar20 != NULL) {\n                        fcn.0040c88a(ppuVar20);\n                        ppuVar10 = ppuVar20;\n                    }\n                    ppuVar20 = ppuVar21[7];\n                    if (ppuVar20 != NULL) {\n                        fcn.0040c88a(ppuVar20);\n                        ppuVar10 = ppuVar20;\n                    }\n                    if ((*(ppuVar21 + 4) == '\\0') && (ppuVar20 = ppuVar21[5],  ppuVar20 != NULL)) {\n                        fcn.004024b5();\n                        ppuVar10 = ppuVar20;\n                    }\n                    fcn.0040b1ff();\n                    fcn.0041fd4d(ppuVar21);\n                }\n                if (0 < ppuVar17[5]) {\n                    iStack80 = ppuStack172 - ppuStack176;\n                    ppuStack140 = 0x1;\n                    ppuStack184 = ppuStack176;\ncode_r0x0040dce0:\n                    uVar15 = 0;\n                    puVar8 = ppuStack156[1];\n                    iVar1 = *(*(puVar8 + ppuStack164 * 2) + 8);\n                    ppuVar21 = ppuStack164;\n                    while (iVar1 == 0) {\n                        if (**(puVar8 + ppuVar21 * 2) == 0x24) {\ncode_r0x00451347:\n                            ppuVar21 = ppuVar21 + 1;\n                        }\n                        else if (**(puVar8 + ppuVar21 * 2) == 0x1e) {\n                            uVar15 = 0x100;\n                            goto code_r0x00451347;\n                        }\n                        iVar1 = *(*(puVar8 + ppuVar21 * 2) + 8);\n                    }\n                    iVar5 = 0;\n                    ppuVar17 = 0x1;\n                    piVar9 = puVar8 + (ppuVar21 + 1) * 2;\n                    do {\n                        iVar1 = *(*piVar9 + 8);\n                        if (iVar1 == 0x47) {\n                            iVar5 = iVar5 + 1;\n                        }\n                        else if (iVar1 == 0x48) {\n                            iVar5 = iVar5 + -1;\n                            if (iVar5 < 0) goto code_r0x0040dd4c;\n                        }\n                        else if ((iVar1 == 0x40) && (iVar5 == 0)) goto code_r0x0040dd4c;\n                        ppuVar17 = ppuVar17 + 1;\n                        piVar9 = piVar9 + 1;\n                    } while( true );\n                }\ncode_r0x0040da0d:\n                uStack72 = 0;\n                ppuStack64 = NULL;\n                unaff_ESI[0x54] = ppuStack144;\n                ppuStack184 = NULL;\n                uStack52 = 0;\n                uStack48 = 0;\n                uStack40 = 0;\n                uStack32 = 0;\n                uStack24 = 0;\n                uStack60 = 1;\n                uStack56 = 0;\n                uStack28 = 1;\n                iVar5 = *(*unaff_ESI + 2);\n                ppuVar21 = unaff_ESI;\n                if (*(unaff_ESI + iVar5 + 0xd) == '\\0') {\n                    iVar6 = fcn.0041fd5b(0x40, ppuVar10);\n                    *(iVar6 + 8) = 0;\n                    fcn.004119e0(&stack0xffffffb8);\n                    *(iVar6 + 0x10) = 0;\n                    *(iVar6 + 0x14) = 0;\n                    *(iVar6 + 0x18) = 0;\n                    *(iVar6 + 0x28) = 0;\n                    fcn.004119e0(&stack0xffffffd4);\n                    *(iVar6 + 0x30) = 0;\n                    *(iVar6 + 0x38) = *(unaff_ESI + iVar5 + 8);\n                    *(unaff_ESI + iVar5 + 8) = iVar6;\n                }\n                else {\n                    fcn.00473127(&stack0xffffffb8);\n                    *(unaff_ESI + iVar5 + 0xd) = 0;\n                }\n                ppuVar17 = unaff_ESI + 0x59;\n                piVar9 = unaff_ESI + iVar5 + 4;\n                *piVar9 = *piVar9 + 1;\n                puVar12 = unaff_ESI[0x3e];\n                puVar18 = *ppuVar17;\n                fcn.0040f060(0x40db01);\n                puVar8 = *ppuVar17;\n                while (puVar18 < puVar8) {\n                    fcn.00404271();\n                    puVar8 = *ppuVar17;\n                }\n                ppuVar13[0x3e] = puVar12;\n                cVar4 = *(*(*ppuVar13 + 2) + 0xd + ppuVar13);\n                puVar22 = *(*(*ppuVar13 + 2) + 8 + ppuVar13);\n                puVar7 = puVar22;\n                if (cVar4 != '\\0') {\n                    puVar7 = puVar22[0xe];\n                }\n                if (*(puVar7 + 4) == '\\0') {\n                    *arg_18h = 0;\n                    fcn.0040e8a0();\n                    arg_14h[3] = 1;\n                    *arg_14h = 0;\n                }\n                else {\n                    *arg_18h = 1;\n                    if (cVar4 != '\\0') {\n                        puVar22 = puVar22[0xe];\n                    }\n                    if (arg_14h != puVar22) {\n                        if ((arg_14h[3] == 4) && (puVar22[3] == 4)) {\n                            if (arg_14h[2] != puVar22[2]) {\n                                fcn.0040c1c3(puVar22[2]);\n                            }\n                        }\n                        else {\n                            fcn.0040e8a0();\n                            fcn.004119e0(puVar22);\n                        }\n                    }\n                }\n                puVar8 = *ppuVar13;\n                cVar4 = *(*(puVar8 + 2) + 0xd + ppuVar13);\n                iVar5 = *(*(puVar8 + 2) + 8 + ppuVar13);\n                iVar6 = iVar5;\n                if (cVar4 != '\\0') {\n                    iVar6 = *(iVar5 + 0x38);\n                }\n                if (*(iVar6 + 0x18) != '\\0') {\n                    iVar6 = iVar5;\n                    if (cVar4 != '\\0') {\n                        iVar6 = *(iVar5 + 0x38);\n                    }\n                    ppuVar21 = *(iVar6 + 0x14);\n                    ppuVar13 = ppuVar10;\n                    ppuStack64 = ppuVar21;\n                }\n                iVar6 = iVar5;\n                if (cVar4 != '\\0') {\n                    iVar6 = *(iVar5 + 0x38);\n                }\n                if (*(iVar6 + 0x30) != '\\0') {\n                    if (cVar4 != '\\0') {\n                        iVar5 = *(iVar5 + 0x38);\n                    }\n                    fcn.0040c5e7(iVar5 + 0x20);\n                    puVar8 = *ppuVar13;\n                }\n                iVar5 = *(puVar8 + 2);\n                if (*(iVar5 + 0xd + ppuVar13) != '\\0') {\n                    iVar6 = *(ppuVar13 + iVar5 + 8);\n                    uVar24 = *(iVar6 + 0x38);\n                    if (iVar6 != 0) {\n                        fcn.004032ee();\n                    }\n                    *(ppuVar13 + iVar5 + 8) = uVar24;\n                    *(ppuVar13 + iVar5 + 0xd) = 0;\n                }\n                if (*(ppuVar13 + iVar5 + 0xc) == '\\0') {\n                    iVar6 = *(ppuVar13 + iVar5 + 8);\n                    uVar24 = *(iVar6 + 0x38);\n                    if (iVar6 != 0) {\n                        fcn.0040e8a0();\n                        fcn.0040e8a0();\n                        fcn.0041fd4d(iVar6);\n                    }\n                    *(ppuVar13 + iVar5 + 8) = uVar24;\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = 1;\n                    ppuVar10 = ppuVar13;\n                }\n                *(ppuVar13 + iVar5 + 0xd) = uVar3;\n                piVar9 = ppuVar13 + iVar5 + 4;\n                *piVar9 = *piVar9 + -1;\n                iVar5 = *(*ppuVar10 + 2);\n                iVar6 = *(ppuVar10 + iVar5 + 8);\n                if (*(ppuVar10 + iVar5 + 0xd) != '\\0') {\n                    iVar6 = *(iVar6 + 0x38);\n                }\n                *(iVar6 + 0x14) = ppuVar21;\n                iVar6 = *(ppuVar10 + iVar5 + 8);\n                if (*(ppuVar10 + iVar5 + 0xd) != '\\0') {\n                    iVar6 = *(iVar6 + 0x38);\n                }\n                *(iVar6 + 0x18) = 0;\n                iVar5 = *(*ppuVar10 + 2);\n                fcn.0040c5e7(&stack0xffffffcc);\n                iVar6 = *(ppuVar10 + iVar5 + 8);\n                if (*(ppuVar10 + iVar5 + 0xd) != '\\0') {\n                    iVar6 = *(iVar6 + 0x38);\n                }\n                *(iVar6 + 0x30) = 0;\n                fcn.0040c000();\n                ppuVar10[0x54] = puStack92;\n                uVar14 = 0;\n                uVar24 = 0;\n                fcn.0040e8a0();\n                fcn.0040e8a0();\n                goto code_r0x0040dc7b;\n            }\n            if (arg_8h == '\\0') {\n                fcn.004734ba(0x70, ppuVar11);\n            }\n            else {\n                *arg_10h = *arg_10h + -2;\n            }\n        }\n    }\n    else {\n        fcn.004734ba(0x6f, unaff_EBX);\n    }\ncode_r0x00451608:\n    uVar14 = 0xffffffff;\n    uVar24 = 0xffffffff;\ncode_r0x0040dc7b:\n    fcn.0040e8a0();\n    ppuVar21 = ppuStack168;\n    ppuVar10 = ppuStack188;\n    ppuVar17 = NULL;\n    if (ppuStack168 != NULL) {\n        do {\n            uVar14 = uVar24;\n            fcn.0041fd4d(ppuVar10[ppuVar17]);\n            ppuVar10[ppuVar17] = NULL;\n            ppuVar17 = ppuVar17 + 1;\n            uVar24 = uVar14;\n        } while (ppuVar17 < ppuVar21);\n    }\n    fcn.0041fd94(ppuStack188);\n    ppuVar17 = NULL;\n    ppuVar10 = ppuStack176;\n    ppuVar21 = unaff_EBX;\n    if (ppuStack176 != NULL) {\n        do {\n            uVar14 = uVar24;\n            piVar9 = unaff_EBX[ppuVar17];\n            if (piVar9 != NULL) {\n                puVar22 = piVar9[2];\n                unaff_EBX = ppuVar21;\n                if (puVar22 != NULL) {\n                    *puVar22[3] = *puVar22[3] + -1;\n                    if (*puVar22[3] == 0) {\n                        fcn.0041fd94(*puVar22);\n                        fcn.0041fd4d(puVar22[3]);\n                        unaff_EBX = ppuVar21;\n                    }\n                    fcn.0041fd4d(puVar22);\n                    piVar9[2] = 0;\n                }\n                if (4 < piVar9[3]) {\n    // switch table (11 cases) at 0x40e3c0\n                    switch(piVar9[3]) {\n                    case 5:\n                        iVar5 = *piVar9;\n                        if (iVar5 != 0) {\n                            fcn.0041d593();\n                            goto code_r0x0040e30e;\n                        }\n                        break;\n                    case 8:\n                        if (*piVar9 != 0) {\n                            (*_sym.imp.OLEAUT32.dll_VariantCopy)(*piVar9);\n                            iVar5 = *piVar9;\n                            goto code_r0x0040e30e;\n                        }\n                        break;\n                    case 10:\n                        iVar5 = *piVar9;\n                        if (iVar5 != 0) {\n                            fcn.0040b1ff();\n                            fcn.0041fd4d(iVar5);\n                        }\n                        break;\n                    case 0xb:\n                        fcn.0041fd94(*(*piVar9 + 4));\n                        iVar5 = *piVar9;\ncode_r0x0040e30e:\n                        fcn.0041fd4d(iVar5);\n                        break;\n                    case 0xc:\n                        if (*piVar9 != 0) {\n                            fcn.0045fc42(*piVar9);\n                        }\n                        break;\n                    case 0xd:\n                    case 0xe:\n                        iVar5 = *piVar9;\n                        if (iVar5 != 0) {\n                            fcn.0040b1ff();\n                            goto code_r0x0040e30e;\n                        }\n                        break;\n                    case 0xf:\n                        if (*piVar9 != NULL) {\n                            (****piVar9)(1);\n                        }\n                    }\n                }\n                piVar9[3] = 1;\n                *piVar9 = 0;\n                fcn.0041fd4d(piVar9);\n                ppuVar10 = ppuStack176;\n                ppuVar21 = unaff_EBX;\n            }\n            unaff_EBX[ppuVar17] = NULL;\n            ppuVar17 = ppuVar17 + 1;\n            uVar24 = uVar14;\n        } while (ppuVar17 < ppuVar10);\n    }\n    fcn.0041fd94(ppuVar21);\n    return uVar14;\ncode_r0x0040dd4c:\n    unaff_EBX = ppuVar17;\n    ppuStack164 = ppuVar21;\n    if (ppuStack144 < ppuStack140) {\n        ppuStack136 = ppuVar21 + 2;\n        iVar5 = fcn.00410540(ppuStack156, &stack0xffffff78, &stack0xffffffa0, ppuVar17 + ppuVar21);\n        if (iVar5 < 0) goto code_r0x00451608;\n        ppuVar10 = **(ppuStack172[1] + ppuVar21 * 2);\n        fcn.0040c117(ppuVar10, &stack0xffffff90, uVar15 | 0x200, 1);\n        goto code_r0x0040df43;\n    }\n    if (**(iStack80 + ppuStack184) != '\\0') {\n        if (*(*ppuStack184 + 0xc) == 6) {\n            uVar24 = **ppuStack184;\n        }\n        else {\n            uVar24 = 0;\n        }\n        ppuVar17 = **(puVar8 + ppuVar21 * 2);\n        cVar4 = fcn.0046ef7a(**(puVar8 + ppuVar21 * 2), uVar24, uVar15 | 0x200, 1);\n        ppuVar10 = ppuVar17;\n        if (cVar4 == '\\0') {\n            fcn.004734ba(0x79, *(*(ppuStack172[1] + ppuVar21 * 2) + 10));\n            goto code_r0x00451608;\n        }\n        goto code_r0x0040df43;\n    }\n    ppuStack148 = *ppuStack184;\n    ppuVar21 = **(puVar8 + ppuVar21 * 2);\n    if (*0x4d2380 == 0) {\n        fcn.0040c28f(ppuVar21, ppuStack148, uVar15 | 0x200);\n        ppuVar17 = ppuVar13;\n        ppuVar10 = ppuVar21;\n        ppuVar13 = ppuVar17;\n        goto code_r0x0040df43;\n    }\n    ppuVar17 = *0x4d2384;\n    if (*0x4d2389 != (*0x4d2380 == 0)) {\n        ppuVar17 = (*0x4d2384)[2];\n    }\n    ppuVar20 = ppuVar21;\n    ppuStack120 = ppuVar17;\n    cVar4 = fcn.0040d4e0(ppuVar21, ppuVar17);\n    if ((cVar4 != '\\0') && (*ppuVar17 != NULL)) {\n        ppuVar10 = ppuStack156;\n        ppuVar17 = ppuVar13;\n        fcn.0040c5e7(ppuStack156);\n        ppuVar13 = ppuVar17;\n        goto code_r0x0040df43;\n    }\n    ppuStack176 = uVar15 | 0x200;\n    ppuVar11 = fcn.0041fd5b(0x20, ppuVar20);\n    ppuVar11[1] = NULL;\n    ppuVar11[2] = 0x8;\n    puVar8 = fcn.0041fd8b(0x10);\n    *ppuVar11 = puVar8;\n    *puVar8 = 0;\n    piVar9 = fcn.0041fd5b(4, ppuVar20);\n    *piVar9 = 1;\n    ppuVar11[3] = piVar9;\n    if (ppuVar11 != ppuVar21) {\n        if (*piVar9 < 2) {\n            puVar8 = ppuVar21[1];\n            ppuVar11[1] = puVar8;\n            if (ppuVar11[2] < puVar8 + 1U) {\n                if (puVar8 == 0xffffffff) {\n                    puVar12 = 0x8;\n                }\n                else {\n                    puVar12 = puVar8 + 4 & 0xfffffff8;\n                }\n                ppuVar11[2] = puVar12;\n                fcn.0041fd94(*ppuVar11);\n                puVar12 = fcn.0041fd8b(-(ZEXT48(ppuVar11[2]) * 2 >> 0x20 != 0) | ZEXT48(ppuVar11[2]) * 2);\n                *ppuVar11 = puVar12;\n                puVar12[puVar8] = 0;\n                puVar8 = ppuVar11[1];\n            }\n            fcn.00420db0(*ppuVar11, *ppuVar21, puVar8 * 2 + 2);\n        }\n        else {\n            *piVar9 = *piVar9 + -1;\n            ppuVar11[1] = ppuVar21[1];\n            ppuVar11[2] = ppuVar21[2];\n            *ppuVar11 = *ppuVar21;\n            piVar9 = ppuVar21[3];\n            ppuVar11[3] = piVar9;\n            *piVar9 = *piVar9 + 1;\n        }\n    }\n    ppuVar11[4] = ppuStack176;\n    puVar8 = fcn.0041fd5b(0x10, ppuVar20);\n    *(puVar8 + 4) = 0;\n    fcn.004119e0(ppuStack156);\n    ppuVar11[5] = puVar8;\n    ppuVar11[7] = NULL;\n    ppuVar11[6] = NULL;\n    ppuStack180 = *ppuStack132;\n    ppuVar21 = ppuVar11;\n    ppuVar17 = unaff_EBX;\n    if (ppuStack180 != NULL) {\n        fcn.0040d4e0(ppuVar11, &stack0xffffff4c);\n        puVar8 = ppuVar11[1];\n        puVar12 = ppuStack188[1];\n        ppuVar17 = unaff_EBX;\n        if (puVar8 == NULL) {\n            if (puVar12 != NULL) goto code_r0x0040e2d2;\ncode_r0x0045146a:\n            if (puVar8 == NULL) goto code_r0x0040dec6;\ncode_r0x0040df29:\n            ppuVar11[7] = ppuStack188[7];\n            ppuVar11[6] = ppuStack188;\n            ppuStack188[7] = NULL;\n            ppuVar21 = ppuVar11;\n        }\n        else {\n            if (puVar12 == NULL) goto code_r0x0045146a;\ncode_r0x0040dec6:\n            if (puVar8 < puVar12) {\n                puVar8 = *ppuStack188;\n                puVar18 = *ppuVar11;\n                for (; puVar12 != NULL; puVar12 = puVar12 + -1) {\n                    ppuStack168 = *puVar18;\n                    uVar2 = *puVar8;\n                    ppuStack156 = uVar2;\n                    if (*puVar18 != uVar2) {\n                        bVar23 = *puVar18 < uVar2;\n                        goto code_r0x0040df11;\n                    }\n                    puVar18 = puVar18 + 1;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            else {\n                puVar12 = *ppuStack188;\n                puVar18 = *ppuVar11;\n                if (puVar8 != NULL) {\ncode_r0x0040dee0:\n                    ppuStack156 = *puVar18;\n                    uVar2 = *puVar12;\n                    ppuStack168 = uVar2;\n                    if (*puVar18 == uVar2) goto code_r0x0040def8;\n                    bVar23 = *puVar18 < uVar2;\ncode_r0x0040df11:\n                    iVar5 = (-bVar23 & 0xfffffffe) + 1;\n                    goto code_r0x0040df17;\n                }\n            }\ncode_r0x0040e287:\n            iVar5 = 0;\ncode_r0x0040df17:\n            if (iVar5 < 0) {\ncode_r0x0040e2d2:\n                ppuVar11[6] = ppuStack188[6];\n                ppuVar11[7] = ppuStack188;\n                ppuStack188[6] = NULL;\n            }\n            else {\n                ppuVar21 = ppuStack188;\n                if (0 < iVar5) goto code_r0x0040df29;\n            }\n        }\n    }\n    *ppuStack120 = ppuVar21;\n    unaff_EBX = ppuVar17;\ncode_r0x0040df43:\n    ppuStack184 = ppuStack184 + 1;\n    ppuStack164 = ppuStack164 + 1 + ppuVar17;\n    ppuStack140 = ppuStack140 + 1;\n    if (ppuStack116[5] < ppuStack140) goto code_r0x0040da0d;\n    goto code_r0x0040dce0;\ncode_r0x0040def8:\n    puVar18 = puVar18 + 1;\n    puVar12 = puVar12 + 1;\n    puVar8 = puVar8 + -1;\n    if (puVar8 == NULL) goto code_r0x0040e287;\n    goto code_r0x0040dee0;\n}\n",
        "token_count": 9142
    },
    "0040e3f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e3f0(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    char cVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t *extraout_ECX;\n    int32_t iVar8;\n    int32_t iVar9;\n    bool bVar10;\n    uint *puVar11;\n    int32_t in_stack_ffffff64;\n    uint *in_stack_ffffff68;\n    uint var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    uint *var_54h;\n    uint var_50h;\n    uint var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    int32_t *var_20h;\n    uint *var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    piVar4 = arg_ch;\n    _var_20h = _var_20h & 0xffffffff00000000;\n    var_18h = NULL;\n    var_14h = 1;\n    var_5ch = *arg_ch + -1;\n    var_30h = 0;\n    var_28h = 0;\n    var_24h = 1;\n    var_50h = 0;\n    var_48h = 0;\n    var_44h = 1;\n    puVar11 = *(*(arg_8h + 4) + 4);\n    var_40h = 0;\n    var_38h = 0;\n    var_34h = 1;\n    var_ch = NULL;\n    var_60h = 3;\n    if (*(puVar11 + 2) == 0x33) {\n        iVar8 = 2;\n        var_10h = *puVar11;\n        var_4h = 2;\n        if (*0x4d2380 == 0) {\n            puVar11 = fcn.0041dab2(var_10h, &fcn.0040e3f0::var_ch);\n        }\n        else {\n            piVar6 = *0x4d2384;\n            if (*0x4d2389 != '\\0') {\n                piVar6 = (*0x4d2384)[2];\n            }\n            cVar5 = fcn.0040d4e0(var_10h, piVar6);\n            if ((cVar5 == '\\0') || (iVar9 = *piVar6,  iVar9 == 0)) {\n                puVar11 = NULL;\n                var_ch = NULL;\n            }\n            else {\n                puVar11 = *(iVar9 + 0x14);\n                var_ch = *(iVar9 + 0x10) & 0xff00;\n            }\n        }\n        if (puVar11 == NULL) {\n            var_ch = puVar11;\n            fcn.0040e8a0();\n            var_14h = 1;\n            _var_20h = _var_20h & 0xffffffff00000000;\n            puVar11 = fcn.0040c117(var_10h, &fcn.0040e3f0::var_20h, 0, 1);\n        }\n        else {\n            uVar3 = var_ch & 0x100;\n            var_ch = puVar11;\n            if (uVar3 != 0) goto code_r0x00451abd;\n        }\n        iVar9 = *(arg_8h + 4);\n        iVar1 = *(*(iVar9 + 8) + 8);\n        arg_ch = puVar11;\n        var_ch = puVar11;\n        while (iVar1 == 0x4e) {\n            if (puVar11[3] == 5) {\n                in_stack_ffffff68 = &fcn.0040e3f0::var_4h;\n                in_stack_ffffff64 = arg_8h;\n                iVar8 = fcn.004878dd(arg_8h, in_stack_ffffff68, &fcn.0040e3f0::var_ch, 2);\n                if (iVar8 < 0) goto code_r0x0040e7e7;\ncode_r0x004516df:\n                arg_ch = var_ch;\n                puVar11 = var_ch;\n                iVar8 = var_4h;\n            }\n            else if (puVar11[3] == 0xf) {\n                in_stack_ffffff68 = &fcn.0040e3f0::var_4h;\n                in_stack_ffffff64 = arg_8h;\n                iVar8 = fcn.00401d5f(arg_8h, in_stack_ffffff68, &fcn.0040e3f0::var_ch, 8);\n                if (-1 < iVar8) goto code_r0x004516df;\n                goto code_r0x0040e7e7;\n            }\n            iVar9 = *(arg_8h + 4);\n            iVar1 = *(*(iVar9 + iVar8 * 4) + 8);\n        }\n        piVar6 = *(iVar9 + iVar8 * 4);\n        var_54h = puVar11;\n        if (*(piVar6 + 2) == 0) {\n            if (*piVar6 != 0x11) goto code_r0x00451abd;\n            var_4h = iVar8 + 1;\n            in_stack_ffffff68 = &fcn.0040e3f0::var_4h;\n            in_stack_ffffff64 = arg_8h;\n            iVar8 = fcn.00410540(arg_8h, in_stack_ffffff68, &fcn.0040e3f0::var_20h, 0xffffffff);\n            if (iVar8 < 0) goto code_r0x0040e7e7;\n            if (var_14h == 8) {\ncode_r0x004517cd:\n                puVar11 = &fcn.0040e3f0::var_20h;\n                fcn.0040c5e7(puVar11);\n            }\n            else {\n                if (var_14h == 5) {\n                    in_stack_ffffff64 = 0;\n                    *(*var_20h + 0x210) = 0;\n                    fcn.004084b9(0);\n                    if (0 < *(*extraout_ECX + 0x10c)) {\n                        in_stack_ffffff64 = 1;\n                        iVar8 = fcn.0041e703(1);\n                        if ((0 < iVar8) && (iVar8 = fcn.00411df0(var_20h, 1, 0),  iVar8 != 0)) {\n                            in_stack_ffffff64 = fcn.00411df0(var_20h, 2, 0);\n                            goto code_r0x004517c1;\n                        }\n                    }\n                }\n                else {\n                    if (var_14h != 0xf) {\n                        puVar11 = 0xa9;\n                        iVar8 = fcn.004846fb(0xa9, 0, L\"Variable is not of type \\'Object\\'.\", 0xa9);\n                        if (iVar8 < 0) {\n                            in_stack_ffffff64 = 0xa9;\n                            goto code_r0x00451abd;\n                        }\n                        fcn.0040e8a0();\n                        var_24h = 1;\n                        var_30h = 1;\n                        goto code_r0x0040e674;\n                    }\n                    if (0 < *(var_20h[4] + 8)) {\n                        in_stack_ffffff64 = fcn.0046b4b9(0, 4);\ncode_r0x004517c1:\n                        fcn.0040c5e7(in_stack_ffffff64);\n                        goto code_r0x004517cd;\n                    }\n                }\n                puVar11 = 0x49d0d0;\n                fcn.0040b5c1(0x49d0d0);\n                fcn.0040e8a0();\n                var_44h = 1;\n                var_50h = 1;\n                fcn.0040e8a0();\n                var_34h = 1;\n                var_40h = 0xffffffff;\n            }\n        }\n        else {\n            in_stack_ffffff68 = &fcn.0040e3f0::var_4h;\n            var_4h = iVar8 + 1;\n            puVar11 = 0x40e51e;\n            in_stack_ffffff64 = arg_8h;\n            iVar8 = fcn.00410540(arg_8h, in_stack_ffffff68, &fcn.0040e3f0::var_20h, 0xffffffff);\n            if (iVar8 < 0) goto code_r0x0040e7e7;\n            if (arg_ch != &fcn.0040e3f0::var_20h) {\n                if ((arg_ch[3] == 4) && (var_14h == 4)) {\n                    if (arg_ch[2] != var_18h) {\n                        puVar11 = var_18h;\n                        fcn.0040c1c3(var_18h);\n                    }\n                }\n                else {\n                    fcn.0040e8a0();\n                    puVar11 = &fcn.0040e3f0::var_20h;\n                    fcn.004119e0(puVar11);\n                }\n            }\n            piVar6 = *(*(arg_8h + 4) + var_4h * 4);\n            if ((*(piVar6 + 2) != 0) || (*piVar6 != 0xf)) goto code_r0x00451abd;\n            var_4h = var_4h + 1;\n            in_stack_ffffff64 = arg_8h;\n            iVar8 = fcn.00410540(arg_8h, &fcn.0040e3f0::var_4h, &fcn.0040e3f0::var_20h, 0xffffffff);\n            if (iVar8 < 0) goto code_r0x0040e7e7;\n            fcn.0040e8a0();\n            fcn.004119e0(&fcn.0040e3f0::var_20h);\n            piVar6 = *(*(arg_8h + 4) + var_4h * 4);\n            if ((*(piVar6 + 2) == 0) && (*piVar6 == 0x10)) {\n                var_4h = var_4h + 1;\n                in_stack_ffffff64 = arg_8h;\n                iVar8 = fcn.00410540(arg_8h, &fcn.0040e3f0::var_4h, &fcn.0040e3f0::var_20h, 0xffffffff);\n                if (iVar8 < 0) goto code_r0x0040e7e7;\n                fcn.0040c5e7(&fcn.0040e3f0::var_20h);\n            }\n            else {\n                fcn.0040e8a0();\n                var_34h = 1;\n                var_40h = 1;\n            }\n            iVar9 = var_34h;\n            iVar8 = arg_ch[3];\n            if ((iVar8 == 1) || (iVar8 == 2)) {\n                bVar10 = true;\n            }\n            else {\n                bVar10 = false;\n            }\n            if ((bVar10) || (iVar8 == 3)) {\n                bVar10 = true;\n            }\n            else {\n                bVar10 = false;\n            }\n            if (!bVar10) {\n                cVar5 = fcn.0040c82d();\n                if (cVar5 == '\\0') {\n                    fcn.0040cd15();\n                }\n                else {\n                    fcn.0041b518();\n                }\n            }\n            if ((var_44h == 1) || (bVar10 = var_44h == 2 || var_44h == 1,  bVar10)) {\n                bVar10 = true;\n            }\n            if (bVar10) {\ncode_r0x0040e810:\n                bVar10 = true;\n            }\n            else {\n                if (var_44h == 3) {\n                    bVar10 = true;\n                }\n                if (bVar10) goto code_r0x0040e810;\n            }\n            if (!bVar10) {\n                cVar5 = fcn.0040c82d();\n                if (cVar5 == '\\0') {\n                    fcn.0040cd15();\n                    iVar9 = var_34h;\n                }\n                else {\n                    fcn.0041b518();\n                    iVar9 = var_34h;\n                }\n            }\n            if ((iVar9 == 1) || (bVar10 = iVar9 == 2,  bVar10)) {\n                bVar10 = true;\n            }\n            if ((bVar10) || (bVar10 = iVar9 == 3,  bVar10)) {\n                bVar10 = true;\n            }\n            if (!bVar10) {\n                cVar5 = fcn.0040c82d();\n                if (cVar5 == '\\0') {\n                    fcn.0040cd15();\n                }\n                else {\n                    fcn.0041b518();\n                }\n            }\n        }\ncode_r0x0040e674:\n        if (*(*(*(arg_8h + 4) + var_4h * 4) + 8) == 0x7f) {\n            bVar10 = false;\n            iVar9 = 0;\n            iVar8 = var_58h;\n            while( true ) {\n                iVar2 = *piVar4;\n                *piVar4 = iVar2 + 1;\n                if ((((*0x4d23a0 < iVar2) || (iVar2 < 1)) || (iVar7 = iVar2 * 0x10 + *0x4d23dc,  iVar7 == 0)) ||\n                   (bVar10)) break;\n                piVar6 = **(iVar7 + 4);\n                if (*(piVar6 + 2) == 0) {\n                    iVar7 = *piVar6;\n                    if (iVar7 == 0xd) {\n                        iVar9 = iVar9 + 1;\n                    }\n                    else if (iVar7 == 0xe) {\n                        if (iVar9 == 0) {\n                            bVar10 = true;\n                            iVar8 = iVar2;\n                        }\n                        else {\n                            iVar9 = iVar9 + -1;\n                        }\n                    }\n                }\n            }\n            var_58h = iVar8;\n            iVar9 = fcn.0040ce67();\n            if (iVar9 == 1) {\ncode_r0x00451a06:\n                *piVar4 = iVar8 + 1;\n                goto code_r0x0040e7e7;\n            }\n            if (arg_ch[3] == 8) {\n                if (var_44h == 5) goto code_r0x00451a27;\n                if (var_44h == 0xf) goto code_r0x0040e6fe;\n                fcn.0040e8a0();\n                var_24h = 1;\n                var_30h = 0;\n                fcn.0040e8a0();\n                var_14h = 1;\n                _var_20h = _var_20h & 0xffffffff00000000;\n                fcn.0048444a(arg_ch, &fcn.0040e3f0::var_30h, &fcn.0040e3f0::var_20h);\n                cVar5 = fcn.0041da5f();\n                if (cVar5 == '\\0') {\n                    fcn.0040b5c1(0x49d0d0);\n                    fcn.0040e8a0();\n                    var_24h = 1;\n                    var_30h = 0;\n                    fcn.0040e8a0();\n                    var_14h = 1;\n                    _var_20h = _var_20h & 0xffffffff00000000;\n                    goto code_r0x00451a06;\n                }\n                fcn.0040c5e7(&fcn.0040e3f0::var_20h);\n                fcn.0040c5e7(&fcn.0040e3f0::var_30h);\n            }\n            else {\ncode_r0x0040e6fe:\n                if (var_44h == 5) {\ncode_r0x00451a27:\n                    bVar10 = true;\n                }\n                else {\n                    bVar10 = false;\n                }\n                if (!bVar10) {\n                    if (var_44h == 0xf) {\n                        bVar10 = true;\n                    }\n                    if (!bVar10) {\n                        fcn.0040e8a0();\n                        var_14h = 3;\n                        _var_20h = 0;\n                        cVar5 = fcn.0040cf49();\n                        if (cVar5 == '\\0') {\n                            cVar5 = fcn.0040cf49();\n                            iVar9 = var_5ch;\n                            iVar8 = var_58h;\n                            if (cVar5 == '\\0') {\n                                if (*(var_8h + 0x16d) == '\\0') {\n                                    puVar11 = fcn.0041fd5b(0x38, puVar11);\n                                    *puVar11 = var_60h;\n                                    puVar11[2] = var_58h;\n                                    puVar11[3] = var_54h;\n                                    puVar11[1] = iVar9;\n                                    puVar11[6] = 0;\n                                    fcn.004119e0(&fcn.0040e3f0::var_50h);\n                                    puVar11[10] = 0;\n                                    fcn.004119e0(&fcn.0040e3f0::var_40h);\n                                    puVar11[0xc] = *(var_8h + 0x168);\n                                    *(var_8h + 0x168) = puVar11;\n                                }\n                                else {\n                                    fcn.0048562c(&fcn.0040e3f0::var_60h);\n                                    *(var_8h + 0x16d) = 0;\n                                }\n                                *(var_8h + 0x164) = *(var_8h + 0x164) + 1;\n                                iVar8 = iVar9;\n                            }\n                        }\n                        else {\n                            cVar5 = fcn.0040cf49();\n                            iVar8 = var_58h;\n                            if (cVar5 == '\\0') goto code_r0x00451a93;\n                        }\n                        *piVar4 = iVar8 + 1;\n                        goto code_r0x0040e7e7;\n                    }\n                }\n                fcn.0040e8a0();\n                var_34h = 1;\n                var_40h = 0;\n            }\ncode_r0x00451a93:\n            fcn.004042c5(&fcn.0040e3f0::var_60h);\n            *piVar4 = var_5ch + 1;\n            goto code_r0x0040e7e7;\n        }\n    }\ncode_r0x00451abd:\n    fcn.004734ba(in_stack_ffffff64, in_stack_ffffff68);\ncode_r0x0040e7e7:\n    fcn.0040e8a0();\n    fcn.0040e8a0();\n    fcn.0040e8a0();\n    fcn.0040e8a0();\n    return;\n}\n",
        "token_count": 4471
    },
    "0040e8a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e8a0(int32_t *param_1)\n\n{\n    uint *arg_8h;\n    int32_t iVar1;\n    \n    arg_8h = param_1[2];\n    if (arg_8h == NULL) {\n        iVar1 = param_1[3];\n    }\n    else {\n        *arg_8h[3] = *arg_8h[3] + -1;\n        if (*arg_8h[3] == 0) {\n            fcn.0041fd94(*arg_8h);\n            fcn.0041fd4d(arg_8h[3]);\n        }\n        fcn.0041fd4d(arg_8h);\n        param_1[2] = 0;\n        iVar1 = param_1[3];\n    }\n    if (iVar1 < 5) goto code_r0x0040e8b3;\n    // switch table (11 cases) at 0x40e910\n    switch(iVar1) {\n    case 5:\n        iVar1 = *param_1;\n        if (iVar1 == 0) goto code_r0x0040e8b3;\n        fcn.0041d593();\n        break;\n    default:\n        goto code_r0x0040e8b3;\n    case 8:\n        if (*param_1 == 0) goto code_r0x0040e8b3;\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*param_1);\n        iVar1 = *param_1;\n        break;\n    case 10:\n        iVar1 = *param_1;\n        if (iVar1 == 0) goto code_r0x0040e8b3;\n        fcn.0040b1ff();\n        break;\n    case 0xb:\n        fcn.0041fd94(*(*param_1 + 4));\n        fcn.0041fd4d(*param_1);\n        goto code_r0x0040e8b3;\n    case 0xc:\n        if (*param_1 != 0) {\n            fcn.0045fc42(*param_1);\n        }\n        goto code_r0x0040e8b3;\n    case 0xd:\n    case 0xe:\n        iVar1 = *param_1;\n        if (iVar1 == 0) goto code_r0x0040e8b3;\n        fcn.0040b1ff();\n        break;\n    case 0xf:\n        if (*param_1 != NULL) {\n            (****param_1)(1);\n        }\n        goto code_r0x0040e8b3;\n    }\n    fcn.0041fd4d(iVar1);\ncode_r0x0040e8b3:\n    param_1[3] = 1;\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 634
    },
    "0040e940": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040e940(uint noname_0, int32_t *arg_ch)\n\n{\n    double *pdVar1;\n    int32_t *piVar2;\n    uchar uVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t in_ECX;\n    int32_t iVar11;\n    uint extraout_ECX;\n    uint *extraout_ECX_00;\n    uint arg_8h;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    int32_t iVar12;\n    double *pdVar13;\n    float10 fVar14;\n    float10 fVar15;\n    ulong uVar16;\n    int64_t iVar17;\n    uint arg_ch_00;\n    uint *var_30h;\n    uint *var_28h;\n    int32_t var_24h;\n    int32_t *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    double *var_8h;\n    uint32_t var_4h;\n    \n    _var_30h = _var_30h & 0xffffffff00000000;\n    var_28h = NULL;\n    iVar12 = *(in_ECX + 0x168);\n    var_24h = 1;\n    _var_20h = CONCAT44(in_ECX + 0x164, var_20h);\n    if (*(in_ECX + 0x16d) != '\\0') {\n        iVar12 = *(iVar12 + 0x30);\n    }\n    pdVar13 = *(iVar12 + 0xc);\n    var_8h = pdVar13;\n    var_4h = in_ECX;\n    if (*(iVar12 + 0x2c) == 8) {\n        iVar11 = fcn.0048444a(pdVar13, iVar12 + 0x20, &var_30h);\n        if ((iVar11 < 0) || (*(iVar12 + 0x2c) != 8)) goto code_r0x00451c96;\n        puVar7 = &var_30h;\ncode_r0x00451c75:\n        fcn.0040c5e7(puVar7);\n        goto code_r0x0040ea81;\n    }\n    if (*(iVar12 + 0x1c) == 5) {\n        var_8h = *(iVar12 + 0x10);\n        iVar11 = fcn.0041e703(1);\n        iVar5 = fcn.0040ce67();\n        if (iVar5 < iVar11 + -1) {\n            iVar11 = fcn.0040ce67();\n            fcn.0040e8a0();\n            pdVar13 = var_8h;\n            *(iVar12 + 0x20) = iVar11 + 1;\n            *(iVar12 + 0x2c) = 1;\n            (*var_8h)[0x84] = 0;\n            uVar6 = fcn.0040ce67();\n            fcn.004084b9(uVar6);\n            iVar11 = fcn.00411df0(pdVar13, 1, 0);\n            if (iVar11 != 0) {\n                puVar7 = fcn.00411df0(pdVar13, 2, 0);\n                goto code_r0x00451c75;\n            }\n            goto code_r0x0040ea81;\n        }\n        goto code_r0x00451c96;\n    }\n    if (*(iVar12 + 0x1c) == 0xf) {\n        iVar11 = *(*(*(iVar12 + 0x10) + 0x10) + 8);\n        iVar5 = fcn.0040ce67();\n        if (iVar5 < iVar11 + -1) {\n            iVar11 = fcn.0040ce67();\n            fcn.0040e8a0();\n            *(iVar12 + 0x2c) = 1;\n            *(iVar12 + 0x20) = iVar11 + 1;\n            arg_ch_00 = 1;\n            uVar6 = fcn.0040ce67();\n            puVar7 = fcn.0046b4b9(uVar6, arg_ch_00);\n            goto code_r0x00451c75;\n        }\n        fcn.0040e8a0();\n        *(pdVar13 + 0xc) = 1;\n        *pdVar13 = 0;\n        goto code_r0x00451c96;\n    }\n    if (*(pdVar13 + 0xc) == 1) {\n        if (*(iVar12 + 0x2c) == 1) {\n            uVar9 = *pdVar13;\n            uVar10 = *(iVar12 + 0x20);\n            var_ch = uVar10 + uVar9;\n            _var_18h = _var_18h & 0xffffffff | (uVar10 >> 0x1f) << 0x20;\n            var_8h = uVar10 + uVar9;\n            iVar11 = (uVar10 >> 0x1f) + (uVar9 >> 0x1f) + CARRY4(uVar10, uVar9);\n            if (var_ch >> 0x1f == iVar11) {\n                *pdVar13 = var_ch;\n            }\n            else {\n                *(pdVar13 + 0xc) = 2;\n                *pdVar13 = var_8h;\n                *(pdVar13 + 4) = iVar11;\n            }\n        }\n        else {\n            if (*(iVar12 + 0x2c) != 2) goto code_r0x00451dc9;\n            uVar9 = *pdVar13;\n            uVar10 = *(iVar12 + 0x20);\n            iVar11 = *(iVar12 + 0x24);\n            *pdVar13 = uVar9 + *(iVar12 + 0x20);\n            *(pdVar13 + 4) = (uVar9 >> 0x1f) + iVar11 + CARRY4(uVar9, uVar10);\n            *(pdVar13 + 0xc) = 2;\n        }\n    }\n    else {\n    // switch table (10 cases) at 0x45227a\n        switch(*(pdVar13 + 0xc)) {\n        case 2:\n            if ((*(iVar12 + 0x2c) != 1) && (*(iVar12 + 0x2c) != 2)) goto code_r0x00451dc9;\n            uVar16 = fcn.0040cc8f();\n            uVar9 = *pdVar13;\n            *pdVar13 = *pdVar13 + uVar16;\n            *(pdVar13 + 4) = *(pdVar13 + 4) + CARRY4(uVar9, uVar16) + (uVar16 >> 0x20);\n            break;\n        case 4:\n            fcn.0040b771();\n            fcn.0040cb70(iVar12 + 0x20);\n            break;\n        case 7:\n            var_8h = *pdVar13;\n            if (*(iVar12 + 0x2c) == 1) {\n                iVar11 = fcn.0040ce67();\n            }\n            else {\n                iVar11 = fcn.0040cc8f();\n            }\n            *pdVar13 = var_8h + iVar11;\n            break;\n        case 9:\n        case 10:\ncode_r0x00451dc9:\n            fcn.0041b518();\n        case 3:\n            fVar15 = fcn.0040cfb5();\n            *pdVar13 = fVar15 + *pdVar13;\n            break;\n        case 0xb:\n            if (*(iVar12 + 0x2c) != 0xb) goto code_r0x00451dc9;\n            iVar5 = fcn.00471e24();\n            iVar11 = **var_8h;\n            iVar8 = fcn.0041fd8b(iVar5 + iVar11);\n            fcn.00420db0(iVar8, (*var_8h)[1], **var_8h);\n            uVar6 = fcn.00471e24();\n            uVar6 = fcn.00471db4(extraout_ECX, uVar6);\n            fcn.00420db0(**var_8h + iVar8, uVar6);\n            fcn.0041fd94((*var_8h)[1]);\n            (*var_8h)[1] = iVar8;\n            **var_8h = iVar5 + iVar11;\n            in_ECX = var_4h;\n            pdVar13 = var_8h;\n        }\n    }\n    if (*(pdVar13 + 1) != NULL) {\n        fcn.0041d962(*(pdVar13 + 1));\n        *(pdVar13 + 1) = NULL;\n    }\n    fcn.0040e8a0();\n    fVar15 = 0;\n    pdVar1 = iVar12 + 0x20;\n    _var_30h = fVar15;\n    var_24h = 3;\n    iVar11 = *(iVar12 + 0x2c);\n    iVar5 = *(iVar11 * 0x40 + 0x4b1454);\n    if (iVar5 == 3) {\n        if (iVar11 == 1) {\ncode_r0x0040ea35:\n            fVar14 = *pdVar1;\n        }\n        else {\n            fVar14 = fVar15;\n    // switch table (9 cases) at 0x4522c6\n            switch(iVar11) {\n            case 2:\n                fVar14 = *pdVar1;\n                break;\n            case 3:\n                fVar14 = *pdVar1;\n                break;\n            case 4:\n                cVar4 = fcn.0040c548();\n                if (cVar4 == '\\0') {\n                    fVar15 = fcn.0042cef5(arg_8h);\n                }\n                else {\n                    fcn.004035b3(8);\n                    fVar15 = _var_18h;\n                }\n                _var_18h = fVar15;\n                if (var_24h == 3) {\n                    fVar15 = _var_30h;\n                    fVar14 = _var_18h;\n                }\n                else if (var_24h - 1U < 10) {\n    // switch table (10 cases) at 0x4522ea\n                    switch(*((var_24h - 1U) * 4 + 0x4522ea)) {\n                    case 0x451f09:\n                        cVar4 = fcn.0040c548();\n                        if (cVar4 == '\\0') {\n                            fVar15 = fcn.0042cef5(arg_8h_00);\n                            fVar14 = _var_18h;\n                        }\n                        else {\n                            fcn.004035b3(8);\n                            fVar15 = CONCAT44(var_ch, var_10h);\n                            fVar14 = _var_18h;\n                        }\n                        break;\n                    case 0x451f35:\n                        fVar15 = var_30h;\n                        fVar14 = _var_18h;\n                        break;\n                    case 0x451f51:\n                        fVar15 = _var_30h;\n                        fVar14 = _var_18h;\n                        break;\n                    case 0x451f5c:\n                        fVar15 = *(var_30h + 4);\n                        fVar14 = _var_18h;\n                        break;\n                    case 0x451f6a:\n                        if (var_30h == '\\0') goto code_r0x00451f7a;\n                        fVar15 = 1;\n                        fVar14 = _var_18h;\n                        break;\n                    case 0x451f7a:\n                        goto code_r0x00451f7a;\n                    }\n                }\n                else {\ncode_r0x00451f7a:\n                    fVar15 = 0;\n                    fVar14 = _var_18h;\n                }\n                break;\n            case 7:\n                goto code_r0x0040ea35;\n            case 9:\n                if (*pdVar1 != '\\0') {\n                    fVar14 = 1;\n                }\n                break;\n            case 10:\n                fVar14 = *(*pdVar1 + 4);\n            }\n        }\n        if (fVar15 <= fVar14) goto code_r0x0040ea44;\ncode_r0x00452183:\n        cVar4 = fcn.0040cf49();\n        if (cVar4 == '\\0') {\n            *arg_ch = *(iVar12 + 4) + 1;\n        }\n        else {\ncode_r0x00451c96:\n            fcn.00404271();\n        }\n    }\n    else {\n    // switch table (9 cases) at 0x4522a2\n        switch(iVar5) {\n        case 1:\n        case 9:\n            iVar11 = fcn.0040ce67();\n            iVar5 = fcn.0040ce67();\n            in_ECX = var_4h;\n            if (iVar11 < iVar5) goto code_r0x00452183;\n            break;\n        case 2:\n            iVar17 = fcn.0040cc8f();\n            iVar11 = iVar17 >> 0x20;\n            _var_18h = _var_18h & 0xffffffff | iVar17 << 0x20;\n            uVar16 = fcn.0040cc8f();\n            iVar5 = uVar16 >> 0x20;\n            if ((iVar11 < iVar5) || ((in_ECX = var_4h,  iVar11 <= iVar5 && (var_14h < uVar16)))) goto code_r0x00452183;\n            break;\n        case 4:\n            fcn.00408e90();\n            puVar7 = var_28h;\n            fcn.00408e90();\n            iVar11 = fcn.0041d5dc(**(iVar12 + 0x28), (*(iVar12 + 0x28))[1], *puVar7, puVar7[1], 0);\n            in_ECX = var_4h;\n            if (iVar11 < 0) goto code_r0x00452183;\n            break;\n        case 7:\n            uVar9 = fcn.00471dda();\n            uVar10 = fcn.00471dda();\n            in_ECX = var_4h;\n            if (uVar9 < uVar10) goto code_r0x00452183;\n        }\ncode_r0x0040ea44:\n        iVar11 = *(iVar12 + 0x1c);\n        iVar5 = *((*(pdVar13 + 0xc) + iVar11 * 4) * 4 + 0x4b1448);\n        if (iVar5 == 1) {\ncode_r0x0040ea5f:\n            if (iVar11 == 1) {\ncode_r0x0040ea68:\n                var_4h = *(iVar12 + 0x10);\n            }\n            else {\n    // switch table (10 cases) at 0x452312\n                switch(iVar11) {\n                case 2:\n                case 7:\n                    goto code_r0x0040ea68;\n                case 3:\n                    var_4h = fcn.00442010();\n                    break;\n                case 4:\n                    var_ch = **(iVar12 + 0x18);\n                    cVar4 = fcn.0040c548();\n                    if (cVar4 == '\\0') {\n                        var_4h = fcn.00426261(var_ch);\n                    }\n                    else {\n                        fcn.004035b3(0x10);\n                        var_4h = var_20h;\n                    }\n                    break;\n                default:\ncode_r0x004520c4:\n                    var_4h = 0;\n                    break;\n                case 9:\n                    var_4h = *(iVar12 + 0x10) != '\\0';\n                    break;\n                case 10:\n                    var_4h = *(*(iVar12 + 0x10) + 4);\n                    break;\n                case 0xb:\n                    if (8 < **(iVar12 + 0x10)) goto code_r0x004520c4;\n                    fcn.0046ebcd(&var_20h);\n                    var_4h = var_20h;\n                }\n            }\n            if (*(pdVar13 + 0xc) == 0x1) {\ncode_r0x0040ea7a:\n                var_20h = *pdVar13;\n            }\n            else {\n    // switch table (10 cases) at 0x45233a\n                switch(*(pdVar13 + 0xc)) {\n                case 0x2:\n                case 0x7:\n                    goto code_r0x0040ea7a;\n                case 0x3:\n                    var_20h = fcn.00442010();\n                    break;\n                case 0x4:\n                    cVar4 = fcn.0040c548();\n                    if (cVar4 == '\\0') {\n                        var_20h = fcn.00426261(arg_8h_01);\n                    }\n                    else {\n                        fcn.004035b3(0x10);\n                    }\n                    break;\n                default:\ncode_r0x00452157:\n                    var_20h = NULL;\n                    break;\n                case 0x9:\n                    var_20h = *pdVar13 != '\\0';\n                    break;\n                case 0xa:\n                    var_20h = (*pdVar13)[1];\n                    break;\n                case 0xb:\n                    if (8 < **pdVar13) goto code_r0x00452157;\n                    fcn.0046ebcd(&var_20h);\n                }\n            }\n            if (var_4h < var_20h) {\ncode_r0x0040eaaa:\n                if (*(in_ECX + 0x16d) != '\\0') {\n                    uVar6 = *(*(in_ECX + 0x168) + 0x30);\n                    if (*(in_ECX + 0x168) != 0) {\n                        fcn.00473163();\n                    }\n                    *(in_ECX + 0x168) = uVar6;\n                    *(in_ECX + 0x16d) = 0;\n                }\n                if (*(in_ECX + 0x16c) == '\\0') {\n                    iVar12 = *(in_ECX + 0x168);\n                    uVar6 = *(iVar12 + 0x30);\n                    if (iVar12 != 0) {\n                        fcn.0040e8a0();\n                        fcn.0040e8a0();\n                        fcn.0041fd4d(iVar12);\n                    }\n                    *(in_ECX + 0x168) = uVar6;\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = 1;\n                }\n                *(in_ECX + 0x16d) = uVar3;\n                *(in_ECX + 0x164) = *(in_ECX + 0x164) + -1;\n                goto code_r0x0040ea8a;\n            }\n        }\n        else {\n    // switch table (8 cases) at 0x40eb3c\n            switch(iVar5) {\n            case 2:\n                iVar17 = fcn.0040cc8f();\n                iVar11 = iVar17 >> 0x20;\n                _var_18h = _var_18h & 0xffffffff | iVar17 << 0x20;\n                uVar16 = fcn.0040cc8f();\n                iVar5 = uVar16 >> 0x20;\n                in_ECX = var_4h;\n                if ((iVar5 <= iVar11) && ((iVar5 < iVar11 || (uVar16 <= var_14h)))) break;\n                goto code_r0x0040eaaa;\n            case 3:\n                fVar15 = fcn.0040cfb5();\n                _var_20h = fVar15;\n                fVar15 = fcn.0040cfb5();\n                if (((fVar15 < _var_20h) << 8 | (fVar15 == _var_20h) << 0xe) == 0) goto code_r0x0040eaaa;\n                break;\n            case 4:\n                fcn.00408e90();\n                piVar2 = *(pdVar13 + 1);\n                fcn.00408e90();\n                iVar11 = fcn.0041d5dc(**(iVar12 + 0x18), (*(iVar12 + 0x18))[1], *piVar2, piVar2[1], 0);\n                in_ECX = var_4h;\n                if (iVar11 < 0) goto code_r0x0040eaaa;\n                break;\n            case 7:\n                uVar9 = fcn.00471dda();\n                uVar10 = fcn.00471dda();\n                in_ECX = var_4h;\n                if (uVar9 < uVar10) goto code_r0x0040eaaa;\n                break;\n            case 9:\n                goto code_r0x0040ea5f;\n            }\n        }\ncode_r0x0040ea81:\n        *arg_ch = *(iVar12 + 4) + 1;\n    }\ncode_r0x0040ea8a:\n    puVar7 = var_28h;\n    if (var_28h != NULL) {\n        fcn.0041d962(var_28h);\n        var_28h = NULL;\n        puVar7 = extraout_ECX_00;\n    }\n    if (var_24h < 5) {\n        return;\n    }\n    if (10 < var_24h - 5U) {\n        return;\n    }\n    // switch table (11 cases) at 0x452362\n    switch(*((var_24h - 5U) * 4 + 0x452362)) {\n    case 0x40eaa1:\n        goto code_r0x0040eaa1;\n    case 0x4521c8:\n        if (var_30h == NULL) {\n            return;\n        }\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_30h);\n        break;\n    case 0x4521e4:\n        if (var_30h == NULL) {\n            return;\n        }\n        fcn.0040b1ff();\n        break;\n    case 0x4521fb:\n        if (var_30h == NULL) {\n            return;\n        }\n        fcn.0041d593();\n        break;\n    case 0x452211:\n        fcn.0041fd94(var_30h[1]);\n        break;\n    case 0x452226:\n        if (var_30h == NULL) {\n            return;\n        }\n        fcn.0045fc42(puVar7);\n        return;\n    case 0x45223e:\n        if (var_30h != NULL) {\n            (***var_30h)(1);\n        }\n        goto code_r0x0040eaa1;\n    case 0x452256:\n        if (var_30h == NULL) {\n            return;\n        }\n        fcn.0040b1ff();\n    }\n    fcn.0041fd4d(var_30h);\ncode_r0x0040eaa1:\n    return;\n}\n",
        "token_count": 5278
    },
    "0040eb60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040eb60(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    ulong *puVar3;\n    int32_t *piVar4;\n    int32_t **ppiVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    bool bVar8;\n    int32_t iVar9;\n    ulong *puVar10;\n    uint *puVar11;\n    char cVar12;\n    char cVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    int32_t arg_8h_00;\n    int32_t iVar16;\n    int32_t arg_8h_01;\n    uint var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    uint32_t var_1ch;\n    uint *var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint *var_8h;\n    ushort var_3h;\n    uint var_1h;\n    \n    piVar4 = arg_ch;\n    var_10h = 1;\n    var_20h = NULL;\n    var_18h = NULL;\n    var_14h = 1;\n    arg_8h_01 = 0x40eb9d;\n    iVar9 = fcn.00410540(arg_8h, &fcn.0040eb60::var_10h, &fcn.0040eb60::var_20h, 0xffffffff);\n    puVar11 = var_18h;\n    if (iVar9 < 0) {\n        if (var_18h != NULL) {\n            *var_18h[3] = *var_18h[3] + -1;\n            if (*var_18h[3] == 0) {\n                fcn.0041fd94(*var_18h);\n                fcn.0041fd4d(puVar11[3]);\n            }\n            fcn.0041fd4d(puVar11);\n            var_18h = NULL;\n        }\n        puVar11 = var_20h;\n        if (var_14h < 5) {\n            return;\n        }\n        if (10 < var_14h - 5) {\n            return;\n        }\n    // switch table (11 cases) at 0x4527c2\n        switch(*((var_14h - 5) * 4 + 0x4527c2)) {\n        case 0x40ec0b:\n            return;\n        case 0x4523ea:\n            if (var_20h == NULL) {\n                return;\n            }\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_20h);\n            fcn.0041fd4d(var_20h);\n            return;\n        case 0x45240e:\n            if (var_20h == NULL) {\n                return;\n            }\n            fcn.0040b1ff();\n            fcn.0041fd4d(puVar11);\n            return;\n        case 0x452453:\n            fcn.0041fd94(var_20h[1]);\n            fcn.0041fd4d(var_20h);\n            return;\n        case 0x452473:\n            if (var_20h == NULL) {\n                return;\n            }\n            fcn.0045fc42(var_20h);\n            return;\n        case 0x452489:\n            if (var_20h == NULL) {\n                return;\n            }\n            (***var_20h)(1);\n            return;\n        case 0x45249f:\n            if (var_20h == NULL) {\n                return;\n            }\n            fcn.0040b1ff();\n            fcn.0041fd4d(puVar11);\n            return;\n        }\n        if (var_20h == NULL) {\n            return;\n        }\n        fcn.0041d593();\n        fcn.0041fd4d(puVar11);\n        return;\n    }\n    if (var_14h == 9) {\n        if (var_20h == '\\0') goto code_r0x0040ebb7;\n        goto code_r0x0040ec27;\n    }\n    if (10 < var_14h - 1) goto code_r0x0040ebb7;\n    // switch table (11 cases) at 0x40f030\n    switch(*((var_14h - 1) * 4 + 0x40f030)) {\n    case 0x40ebb7:\n        goto code_r0x0040ebb7;\n    case 0x40ec23:\n        puVar11 = var_20h;\n        break;\n    case 0x4524c1:\n        puVar11 = var_20h | var_1ch;\n        break;\n    case 0x4524d1:\n        if (CONCAT44(var_1ch, var_20h) != 0.0) goto code_r0x0040ec27;\n        goto code_r0x0040ebb7;\n    case 0x4524ee:\n        puVar11 = var_18h[1];\n        break;\n    case 0x452506:\n        puVar11 = *var_20h;\n    }\n    if (puVar11 == NULL) {\ncode_r0x0040ebb7:\n        var_1h._0_1_ = 0;\n    }\n    else {\ncode_r0x0040ec27:\n        var_1h._0_1_ = 1;\n    }\n    var_8h = var_20h;\n    var_3h = CONCAT11(var_3h._1_1_, var_1h);\n    if (var_18h != NULL) {\n        arg_8h_01 = var_14h;\n        fcn.0041d962();\n        var_18h = NULL;\n    }\n    var_8h = var_20h;\n    if ((var_14h != 9) && (uVar15 = var_14h - 5,  uVar15 < 0xb)) {\n        switch(*(uVar15 * 4 + 0x4527ee)) {\n        case 0x452538:\n            if (var_20h != NULL) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_20h);\n                puVar11 = var_20h;\n                goto code_r0x004525c5;\n            }\n            break;\n        case 0x45254e:\n            if (var_20h != NULL) {\n                fcn.0040b1ff();\n                puVar11 = var_8h;\n                goto code_r0x004525c5;\n            }\n            break;\n        case 0x452562:\n            if (var_20h != NULL) {\n                fcn.0041d593();\n                puVar11 = var_8h;\n                goto code_r0x004525c5;\n            }\n            break;\n        case 0x452575:\n            fcn.0041fd94(var_20h[1]);\n            puVar11 = var_20h;\ncode_r0x004525c5:\n            fcn.0041fd4d(puVar11);\n            break;\n        case 0x452587:\n            if (var_20h != NULL) {\n                fcn.0045fc42(uVar15);\n            }\n            break;\n        case 0x45259c:\n            if (var_20h != NULL) {\n                (***var_20h)(1);\n            }\n            break;\n        case 0x4525b1:\n            if (var_20h != NULL) {\n                fcn.0040b1ff();\n                puVar11 = var_8h;\n                goto code_r0x004525c5;\n            }\n        }\n    }\n    iVar9 = *(arg_8h + 4);\n    piVar2 = *(iVar9 + var_10h * 4);\n    if ((*(piVar2 + 2) != 0) || (*piVar2 != 5)) {\n        fcn.004734ba(0xa1, *(piVar2 + 10));\n        return;\n    }\n    iVar16 = var_10h + 1;\n    iVar1 = *(*(iVar9 + 4 + var_10h * 4) + 8);\n    if (iVar1 == 0x7f) {\n        uVar15 = var_1h;\n        var_8h = NULL;\n        var_50h = 0;\n        var_3h = var_3h & 0xff;\n        bVar8 = false;\n        var_40h = 0;\n        var_38h = 0;\n        var_4ch = *arg_ch + -1;\n        var_34h = 1;\n        var_30h = 0;\n        var_28h = 0;\n        var_24h = 1;\n        if (var_1h != 0) {\n            var_8h = *arg_ch;\n        }\n        arg_ch = NULL;\ncode_r0x0040ee9e:\n        do {\n            do {\n                iVar16 = var_ch;\n                iVar9 = *piVar4;\n                *piVar4 = iVar9 + 1;\n                if ((((*0x4d23a0 < iVar9) || (iVar9 < 1)) || (arg_8h_00 = iVar9 * 0x10 + *0x4d23dc,  arg_8h_00 == 0)) ||\n                   (bVar8)) {\n                    *piVar4 = var_8h;\n                    if (*(var_ch + 0x16d) == '\\0') {\n                        puVar11 = fcn.0041fd5b(0x38, arg_8h_01);\n                        puVar11[1] = var_4ch;\n                        puVar11[2] = var_48h;\n                        puVar11[3] = var_44h;\n                        *puVar11 = 0;\n                        puVar11[6] = 0;\n                        fcn.004119e0(&fcn.0040eb60::var_40h);\n                        puVar11[10] = 0;\n                        fcn.004119e0(&fcn.0040eb60::var_30h);\n                        puVar11[0xc] = *(var_ch + 0x168);\n                        *(var_ch + 0x168) = puVar11;\n                    }\n                    else {\n                        fcn.0048562c(&fcn.0040eb60::var_50h);\n                        *(var_ch + 0x16d) = 0;\n                    }\n                    *(var_ch + 0x164) = *(var_ch + 0x164) + 1;\ncode_r0x0040ef73:\n                    fcn.0040e8a0();\n                    fcn.0040e8a0();\n                    return;\n                }\n                ppiVar5 = *(arg_8h_00 + 4);\n            } while (*(*ppiVar5 + 2) != 0);\n            iVar6 = **ppiVar5;\n            cVar12 = uVar15;\n            cVar13 = uVar15 >> 8;\n            if (iVar6 == 8) {\n                if (arg_ch == NULL) {\n                    bVar8 = true;\n                    var_48h = iVar9;\n                    if ((cVar12 == '\\0') && (cVar13 == '\\0')) {\n                        var_8h = iVar9;\n                    }\n                }\n                else {\n                    arg_ch = arg_ch + -1;\n                }\n                goto code_r0x0040ee9e;\n            }\n            if (iVar6 != 4) {\n                if (iVar6 == 6) {\n                    if (arg_ch != NULL) goto code_r0x0040ee9e;\n                    if (cVar13 != '\\x01') {\n                        uVar15 = CONCAT11(1, cVar12);\n                        var_3h = var_3h & 0xff | (uVar15 >> 8) << 8;\n                        if (cVar12 == '\\0') {\n                            var_8h = iVar9 + 1;\n                        }\n                        goto code_r0x0040ee9e;\n                    }\n                }\n                else {\n                    if ((iVar6 != 7) || (arg_ch != NULL)) goto code_r0x0040ee9e;\n                    if (cVar13 != '\\x01') {\n                        if (cVar12 == '\\0') {\n                            var_10h = 1;\n                            *(var_ch + 0xf8) = iVar9;\n                            arg_8h_01 = arg_8h_00;\n                            iVar9 = fcn.0040399a(arg_8h_00, &fcn.0040eb60::var_10h, &stack0xfffffff9);\n                            if (iVar9 < 0) goto code_r0x0040ef73;\n                            piVar2 = *(*(arg_8h_00 + 4) + var_10h * 4);\n                            if ((*(piVar2 + 2) != 0) || (*piVar2 != 5)) {\n                                *(iVar16 + 0xf8) = *piVar4 + -1;\n                                fcn.004734ba(0xa1, *(*(*(arg_8h_00 + 4) + var_10h * 4) + 10));\n                                goto code_r0x0040ef73;\n                            }\n                            if (*(*(*(arg_8h_00 + 4) + 4 + var_10h * 4) + 8) != 0x7f) {\n                                *(iVar16 + 0xf8) = *piVar4 + -1;\n                                fcn.004734ba(0x72, *(*(*(arg_8h_00 + 4) + var_10h * 4) + 10));\n                                goto code_r0x0040ef73;\n                            }\n                            uVar15 = var_3h;\n                            if (var_3h != '\\0') {\n                                var_8h = *piVar4;\n                            }\n                        }\n                        goto code_r0x0040ee9e;\n                    }\n                }\n                fcn.004734ba(0x76, 0xffffffff);\n                goto code_r0x0040ef73;\n            }\n            uVar14 = 1;\n            if (1 < *(arg_8h_00 + 8)) {\n                do {\n                    if (((*(ppiVar5[uVar14] + 2) == 0) && (*ppiVar5[uVar14] == 5)) &&\n                       (*(ppiVar5[uVar14 + 1] + 2) == 0x7f)) {\n                        arg_ch = arg_ch + 1;\n                        break;\n                    }\n                    uVar14 = uVar14 + 1;\n                } while (uVar14 < *(arg_8h_00 + 8));\n            }\n        } while( true );\n    }\n    if (var_1h == 0) {\n        return;\n    }\n    var_20h = 0x49d114;\n    var_1ch = 0;\n    var_18h = NULL;\n    var_14h = 0;\n    while (iVar1 != 0x7f) {\n        puVar3 = *(iVar9 + iVar16 * 4);\n        iVar16 = iVar16 + 1;\n        iVar9 = var_1ch;\n        if (var_18h == var_14h) {\n            var_14h = var_14h * 2;\n            if (var_14h < 8) {\n                var_14h = 8;\n            }\n            iVar9 = fcn.0041fd8b(-(var_14h * 4 >> 0x20 != 0) | var_14h * 4);\n            if ((var_1ch != 0) && (var_18h != NULL)) {\n                fcn.00420db0(iVar9, var_1ch, var_18h << 2);\n                fcn.0041fd94(var_1ch);\n            }\n        }\n        var_1ch = iVar9;\n        puVar10 = fcn.0041fd5b(0xc, arg_8h_01);\n        iVar1 = *(puVar3 + 1);\n        *(puVar10 + 1) = iVar1;\n        *(puVar10 + 10) = *(puVar3 + 10);\n        if ((iVar1 < 0x40) && (0x2f < iVar1)) {\n            puVar11 = fcn.0041fd5b(0x10, arg_8h_01);\n            puVar7 = *puVar3;\n            *puVar11 = *puVar7;\n            puVar11[1] = puVar7[1];\n            puVar11[2] = puVar7[2];\n            piVar4 = puVar7[3];\n            puVar11[3] = piVar4;\n            *piVar4 = *piVar4 + 1;\ncode_r0x0040ec9e:\n            *puVar10 = puVar11;\n        }\n        else if (iVar1 == 0x10) {\n            *puVar10 = *puVar3;\n            *(puVar10 + 4) = *(puVar3 + 4);\n        }\n        else {\n            if (iVar1 != 0x20) {\n                puVar11 = *puVar3;\n                goto code_r0x0040ec9e;\n            }\n            *puVar10 = *puVar3;\n        }\n        *(var_1ch + var_18h * 4) = puVar10;\n        var_18h = var_18h + 1;\n        iVar9 = *(arg_8h + 4);\n        iVar1 = *(*(iVar9 + iVar16 * 4) + 8);\n    }\n    puVar3 = *(iVar9 + iVar16 * 4);\n    iVar9 = var_1ch;\n    if (var_18h == var_14h) {\n        var_14h = var_14h * 2;\n        if (var_14h < 8) {\n            var_14h = 8;\n        }\n        iVar9 = fcn.0041fd8b(-(var_14h * 4 >> 0x20 != 0) | var_14h * 4);\n        if ((var_1ch != 0) && (var_18h != NULL)) {\n            fcn.00420db0(iVar9, var_1ch, var_18h << 2);\n            fcn.0041fd94(var_1ch);\n        }\n    }\n    var_1ch = iVar9;\n    puVar10 = fcn.0041fd5b(0xc, arg_8h_01);\n    iVar1 = *(puVar3 + 1);\n    *(puVar10 + 1) = iVar1;\n    *(puVar10 + 10) = *(puVar3 + 10);\n    if ((iVar1 < 0x40) && (0x2f < iVar1)) {\n        puVar11 = fcn.0041fd5b(0x10, arg_8h_01);\n        puVar7 = *puVar3;\n        *puVar11 = *puVar7;\n        puVar11[1] = puVar7[1];\n        puVar11[2] = puVar7[2];\n        piVar4 = puVar7[3];\n        puVar11[3] = piVar4;\n        *piVar4 = *piVar4 + 1;\n    }\n    else {\n        if (iVar1 == 0x10) {\n            *puVar10 = *puVar3;\n            *(puVar10 + 4) = *(puVar3 + 4);\n            goto code_r0x0040ed0e;\n        }\n        if (iVar1 == 0x20) {\n            *puVar10 = *puVar3;\n            goto code_r0x0040ed0e;\n        }\n        puVar11 = *puVar3;\n    }\n    *puVar10 = puVar11;\ncode_r0x0040ed0e:\n    *(var_1ch + var_18h * 4) = puVar10;\n    var_18h = var_18h + 1;\n    fcn.0040d7c0(&fcn.0040eb60::var_20h, arg_ch);\n    uVar15 = 0;\n    var_20h = 0x49d114;\n    if (var_18h != NULL) {\n        do {\n            piVar4 = *(var_1ch + uVar15 * 4);\n            if (piVar4 != NULL) {\n                if (((*(piVar4 + 2) < 0x40) && (0x2f < *(piVar4 + 2))) && (puVar11 = *piVar4,  puVar11 != NULL)) {\n                    *puVar11[3] = *puVar11[3] + -1;\n                    if (*puVar11[3] == 0) {\n                        fcn.0041fd94(*puVar11);\n                        fcn.0041fd4d(puVar11[3]);\n                    }\n                    fcn.0041fd4d(puVar11);\n                }\n                fcn.0041fd4d(piVar4);\n            }\n            *(var_1ch + uVar15 * 4) = 0;\n            uVar15 = uVar15 + 1;\n        } while (uVar15 < var_18h);\n    }\n    var_18h = NULL;\n    fcn.0041fd94(var_1ch);\n    return;\n}\n",
        "token_count": 4929
    },
    "0040f060": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00452d8c)\n// WARNING: Removing unreachable block (ram,0x00452d98)\n// WARNING: Removing unreachable block (ram,0x00452d0d)\n// WARNING: Removing unreachable block (ram,0x00452d19)\n// WARNING: Removing unreachable block (ram,0x00452e2b)\n// WARNING: Recovered jumptable eliminated as dead code\n// WARNING: Removing unreachable block (ram,0x00453846)\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040f060(int32_t arg_8h)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    code *pcVar6;\n    uint *puVar7;\n    char cVar8;\n    int32_t iVar9;\n    uint uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint *puVar13;\n    int32_t **ppiVar14;\n    uint *puVar15;\n    int32_t *in_ECX;\n    uint *extraout_ECX;\n    uint *extraout_ECX_00;\n    uint *extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint *extraout_ECX_03;\n    int32_t extraout_ECX_04;\n    uint *puVar16;\n    uint *extraout_ECX_05;\n    uint *extraout_ECX_06;\n    uint extraout_ECX_07;\n    uint *extraout_ECX_08;\n    uint *extraout_ECX_09;\n    uint *extraout_ECX_10;\n    uint *extraout_ECX_11;\n    int32_t *piVar17;\n    int32_t extraout_EDX;\n    int32_t iVar18;\n    int32_t iVar19;\n    int64_t iVar20;\n    ulong uVar21;\n    char16_t *pcVar22;\n    uint *in_stack_fffffe90;\n    int32_t iVar23;\n    uint *in_stack_fffffeb0;\n    uint *in_stack_fffffeb4;\n    uint *in_stack_fffffeb8;\n    uint *puVar24;\n    uchar auStack312 [4];\n    uint *puStack308;\n    uint *puStack304;\n    int32_t iStack300;\n    uint *puStack296;\n    int32_t iStack292;\n    uint *puStack288;\n    int32_t iStack284;\n    int32_t *piStack280;\n    int32_t iStack276;\n    uint *puStack272;\n    int32_t *piStack268;\n    ulong uStack264;\n    int32_t iStack256;\n    uint32_t uStack252;\n    uint uStack248;\n    uint uStack244;\n    uchar uStack237;\n    int32_t iStack236;\n    uint uStack232;\n    uint uStack228;\n    uint *puStack224;\n    uint *puStack220;\n    uint uStack216;\n    uint uStack212;\n    int32_t iStack208;\n    uint uStack204;\n    int32_t iStack200;\n    uint uStack188;\n    uint32_t uStack184;\n    uint uStack180;\n    uint auStack176 [2];\n    uint uStack168;\n    uint uStack164;\n    uchar auStack160 [4];\n    uint uStack156;\n    uint uStack148;\n    uint uStack144;\n    uchar auStack140 [4];\n    uchar auStack136 [4];\n    int32_t iStack132;\n    uchar auStack116 [32];\n    uchar auStack84 [16];\n    uchar auStack68 [4];\n    uchar auStack64 [4];\n    uchar auStack60 [8];\n    uchar auStack52 [8];\n    uchar auStack44 [40];\n    \n    if (in_ECX[0x3c] < 0xed8) {\n        iVar9 = in_ECX[0x3c] + 1;\n        in_ECX[0x3c] = iVar9;\n        piStack268 = in_ECX;\n        if (iVar9 == 1) {\n            for (puVar15 = in_ECX[0x49]; puVar15 != NULL; puVar15 = puVar15[1]) {\n                iVar9 = fcn.004025c1(*puVar15);\n                if (iVar9 != 0) {\n                    fcn.004738e9(*(iVar9 + 0x10) + 1, 1);\n                }\n            }\n        }\n        *(in_ECX + 0x53) = 0;\n        uStack264._4_4_ = in_ECX;\n        if (*(in_ECX + 0x40) == '\\0') {\ncode_r0x0040f0b0:\n            in_ECX = uStack264._4_4_;\n            if (*(uStack264._4_4_ + 0x53) == '\\0') {\n                if (((*0x4d1361 != '\\0') && (*(uStack264._4_4_ + 0x14d) == '\\0')) ||\n                   ((*0x4d18e8 != '\\0' && (uStack264._4_4_[0x3f] == 0)))) {\ncode_r0x0040f12f:\n                    if (*0x4d259c == 0) {\ncode_r0x0040f13c:\n                        if ((*0x4d1367 != '\\x01') || (*0x4d1361 != '\\0')) {\n                            if ((uStack264._4_4_[0x10e] != 0) && (*0x4d251c == '\\0')) {\n                                piVar17 = uStack264._4_4_[0x10c];\n                                ppiVar14 = uStack264._4_4_ + 0x10c;\n                                *0x4d251c = 1;\n                                puStack308 = NULL;\n                                do {\n                                    if (piVar17 == NULL) {\n                                        do {\n                                            piVar17 = *ppiVar14;\n                                            while( true ) {\n                                                if (piVar17 == NULL) {\n                                                    *0x4d251c = '\\0';\n                                                    if (puStack308 < 1) goto code_r0x0040f1b4;\n                                                    goto code_r0x0040f2c8;\n                                                }\n                                                if (*(*piVar17 + 0x11) != '\\0') break;\n                                                piVar17 = piVar17[1];\n                                            }\n                                            in_stack_fffffeb0 = &stack0xfffffebc;\n                                            fcn.00473bd4(in_stack_fffffeb0);\n                                        } while( true );\n                                    }\n                                    if (*(*piVar17 + 0x11) == '\\0') {\n                                        uVar3 = *(*piVar17 + 0x14);\n                                        uVar11 = (*_sym.imp.WINMM.dll_timeGetTime)();\n                                        iVar9 = 0;\n                                        uVar12 = uVar11 - uVar3;\n                                        if (uVar3 < 0x80000000) {\n                                            if (uVar11 < 0x80000000) {\ncode_r0x0040f327:\n                                                iVar9 = uVar12 >> 0x1f;\n                                            }\n                                        }\n                                        else if (0x7fffffff < uVar11) goto code_r0x0040f327;\n                                        iVar18 = *piVar17;\n                                        if ((-1 < iVar9) && ((0 < iVar9 || (*(iVar18 + 0x18) <= uVar12)))) {\n                                            puStack308 = puStack308 + 1;\n                                            uVar10 = (*_sym.imp.WINMM.dll_timeGetTime)();\n                                            *(iVar18 + 0x14) = uVar10;\n                                            ppiVar14 = *piVar17;\n                                            iVar9 = fcn.004025c1(ppiVar14);\n                                            in_stack_fffffeb8 = NULL;\n                                            in_stack_fffffeb4 = 0x1;\n                                            *(*piVar17 + 0x10) = 1;\n                                            in_stack_fffffeb0 = *(iVar9 + 0x10) + 1;\n                                            fcn.00473948(in_stack_fffffeb0, 1, 0);\n                                            *(*piVar17 + 0x10) = 0;\n                                        }\n                                    }\n                                    piVar17 = piVar17[1];\n                                } while( true );\n                            }\ncode_r0x0040f1b4:\n                            if ((((*0x4d18dc != 0) && (*0x4d18bc != '\\0')) && (*(uStack264._4_4_ + 0x10f) != '\\x01')) &&\n                               (*0x4d18e8 != '\\x01')) {\n                                puVar15 = **0x4d18e0;\n                                puStack308 = puVar15;\n                                fcn.004060ff();\n                                *0x4d2524 = 0;\n                                puVar13 = extraout_ECX_00;\n                                while (puVar16 = puVar13,  puVar15 != NULL) {\n                                    if ((puVar15[2] != 0) &&\n                                       (in_stack_fffffeb8 = fcn.004025c1(puVar15 + 1),  puVar16 = extraout_ECX_01, \n                                       in_stack_fffffeb8 != NULL)) {\n                                        uStack212 = *puVar15;\n                                        iVar9 = 0x4af398;\n                                        uStack204 = 0;\n                                        iStack200 = 1;\n                                        fcn.0040b606(0x4af398);\n                                        fcn.0040c28f(&stack0xffffff8c, &stack0xffffff28, 1);\n                                        fcn.0040b1ff();\n                                        uVar10 = puVar15[5];\n                                        fcn.0040e8a0();\n                                        uStack216 = 7;\n                                        uStack228 = uVar10;\n                                        fcn.0040b606(L\"@GUI_WINHANDLE\");\n                                        in_stack_fffffe90 = &stack0xffffff18;\n                                        fcn.0040c28f(&stack0xffffff8c, in_stack_fffffe90, 1);\n                                        fcn.0040b1ff();\n                                        uVar10 = *(iVar9 + 0x18);\n                                        fcn.0040e8a0();\n                                        pcVar22 = L\"@GUI_CTRLHANDLE\";\n                                        uStack232 = 7;\n                                        uStack244 = uVar10;\n                                        fcn.0040b606(L\"@GUI_CTRLHANDLE\");\n                                        fcn.0040c28f(&stack0xffffff8c, &stack0xffffff08, 1);\n                                        fcn.0040b1ff();\n                                        *(uStack264._4_4_ + 0x10f) = 1;\n                                        fcn.00473948(*(pcVar22 + 8) + 1, 1, 0);\n                                        *(uStack264._4_4_ + 0x10f) = 0;\n                                        fcn.0047328b(extraout_ECX_02);\n                                        fcn.0040e8a0();\n                                        goto code_r0x0040f2c8;\n                                    }\n                                    fcn.0047328b();\n                                    puVar15 = fcn.0049787a();\n                                    puVar13 = extraout_ECX_03;\n                                    in_stack_fffffeb0 = puVar16;\n                                    auStack312 = puVar15;\n                                }\n                            }\n                            if ((uStack264._4_4_[99] != 0) && (*(uStack264._4_4_ + 0x119) != '\\x01')) {\n                                *(uStack264._4_4_ + 0x119) = 1;\n                                ppiVar14 = uStack264._4_4_[100];\n                                iStack236 = 0;\n                                iStack256 = 0x49d100;\n                                uStack252 = 0;\n                                uStack248 = 0;\n                                uStack244 = 0;\n                                fcn.00473038(ppiVar14);\n                                fcn.00466f80();\n                                puVar15 = puStack224;\n                                iStack300 = 0;\n                                fcn.004119e0(*puStack224);\n                                iVar9 = puVar15[1];\n                                fcn.00408e90();\n                                iVar9 = *(iVar9 + 8);\n                                puVar13 = fcn.004025c1(iVar9);\n                                uVar21 = fcn.004041dc(puVar13[4]);\n                                puVar15 = uVar21;\n                                uStack264._4_4_[0x3e] = extraout_ECX_04;\n                                iVar18 = 3;\n                                if (0 < *((uVar21 >> 0x20) + 0x14)) {\n                                    puVar16 = iStack236 + 8;\n                                    puVar7 = in_stack_fffffeb0;\n                                    in_stack_fffffeb4 = puVar16;\n                                    puVar24 = puVar15;\n                                    do {\n                                        in_stack_fffffeb0 = puVar7;\n                                        iVar23 = puVar15[1];\n                                        if (*(*(iVar23 + iVar18 * 4) + 8) == 0) {\n                                            ppiVar14 = iVar23 + (iVar18 + 1) * 4;\n                                            do {\n                                                piVar17 = *ppiVar14;\n                                                if ((*(piVar17 + 2) != 0x33) && (**(iVar23 + iVar18 * 4) == *piVar17)) {\n                                                    fcn.004734ba(0x91, *(piVar17 + 10));\n                                                    if (puVar13 != NULL) {\n                                                        *puVar13[3] = *puVar13[3] + -1;\n                                                        if (*puVar13[3] == 0) {\n                                                            fcn.0041fd94(*puVar13);\n                                                            fcn.0041fd4d(puVar13[3]);\n                                                        }\n                                                        fcn.0041fd4d(puVar13);\n                                                        in_stack_fffffe90 = puVar13;\n                                                    }\n                                                    goto code_r0x00452ea2;\n                                                }\n                                                iVar19 = **(iVar23 + iVar18 * 4);\n                                                if ((iVar19 != 0x24) && (iVar19 != 0x1e)) {\n                                                    fcn.004734ba(0x91, *(piVar17 + 10));\n                                                    if (puVar13 != NULL) {\n                                                        *puVar13[3] = *puVar13[3] + -1;\n                                                        if (*puVar13[3] == 0) {\n                                                            fcn.0041fd94(*puVar13);\n                                                            fcn.0041fd4d(puVar13[3]);\n                                                        }\n                                                        fcn.0041fd4d(puVar13);\n                                                        in_stack_fffffe90 = puVar13;\n                                                    }\n                                                    goto code_r0x00452ea2;\n                                                }\n                                                iVar18 = iVar18 + 1;\n                                                ppiVar14 = ppiVar14 + 1;\n                                                puVar16 = in_stack_fffffeb4;\n                                            } while (*(piVar17 + 2) == 0);\n                                        }\n                                        iVar19 = iVar18 + 1;\n                                        if (*(*(iVar23 + 4 + iVar18 * 4) + 8) == 0x41) {\n                                            iVar19 = iVar18 + 2;\n                                            iVar18 = 0;\n                                            do {\n                                                iVar2 = *(*(iVar23 + iVar19 * 4) + 8);\n                                                if (iVar2 == 0x47) {\n                                                    iVar18 = iVar18 + 1;\n                                                }\n                                                else if (iVar2 == 0x48) {\n                                                    iVar18 = iVar18 + -1;\n                                                    puVar16 = in_stack_fffffeb4;\n                                                    if (iVar18 < 0) break;\n                                                }\n                                                else if ((iVar2 == 0x40) && (puVar16 = in_stack_fffffeb4,  iVar18 == 0))\n                                                break;\n                                                iVar19 = iVar19 + 1;\n                                            } while( true );\n                                        }\n                                        puVar15 = in_stack_fffffeb4;\n                                        fcn.00466fef(*puVar16);\n                                        uVar21 = CONCAT44(puVar24, puVar24);\n                                        iVar18 = iVar19 + 1;\n                                        iStack256 = iStack256 + 1;\n                                        puVar16 = in_stack_fffffeb0 + 1;\n                                        in_stack_fffffeb0 = puStack272;\n                                        puVar7 = puVar16;\n                                        in_stack_fffffeb4 = puVar15;\n                                    } while (iStack256 < puVar24[5]);\n                                }\n                                in_stack_fffffeb8 = uVar21;\n                                fcn.0046efd1(*((uVar21 >> 0x20) + 0x10));\n                                iVar18 = 3;\n                                iVar23 = 1;\n                                if (0 < in_stack_fffffeb8[5]) {\ncode_r0x00452f3a:\n                                    uStack264._4_4_ = piStack280;\n                                    uStack252 = 0;\n                                    iVar19 = in_stack_fffffeb4[1];\n                                    iVar2 = *(*(iVar19 + iVar18 * 4) + 8);\n                                    while (iVar2 == 0) {\n                                        iVar5 = **(iVar19 + iVar18 * 4);\n                                        if (iVar5 == 0x24) {\ncode_r0x00452f64:\n                                            iVar18 = iVar18 + 1;\n                                        }\n                                        else if (iVar5 == 0x1e) {\n                                            uStack252 = 0x100;\n                                            goto code_r0x00452f64;\n                                        }\n                                        iVar2 = *(*(iVar19 + iVar18 * 4) + 8);\n                                    }\n                                    iVar19 = 0;\n                                    iStack292 = 1;\n                                    piVar17 = in_stack_fffffeb4[1] + 4 + iVar18 * 4;\n                                    do {\n                                        iVar2 = *(*piVar17 + 8);\n                                        if (iVar2 == 0x47) {\n                                            iVar19 = iVar19 + 1;\n                                        }\n                                        else if (iVar2 == 0x48) {\n                                            iVar19 = iVar19 + -1;\n                                            if (iVar19 < 0) goto code_r0x00452fac;\n                                        }\n                                        else if ((iVar2 == 0x40) && (iVar19 == 0)) goto code_r0x00452fac;\n                                        iStack292 = iStack292 + 1;\n                                        piVar17 = piVar17 + 1;\n                                    } while( true );\n                                }\ncode_r0x004530a2:\n                                fcn.0040b606(0x4c5ffc);\n                                in_stack_fffffe90 = NULL;\n                                fcn.0040c117(&stack0xffffffac, 0, 0, 1);\n                                fcn.0040b1ff();\n                                fcn.00473948(*(iVar9 + 0x10) + 1, 0, 0);\n                                fcn.0040c000();\n                                fcn.0040e8a0();\n                                iStack276 = 0x49d100;\n                                fcn.00466f23();\n                                fcn.0041fd94(puStack272);\n                                puStack308 = 0x49d100;\n                                fcn.00466f23();\n                                fcn.0041fd94(puStack304);\n                                *(uStack264._4_4_ + 0x119) = 0;\n                                goto code_r0x0040f2c8;\n                            }\n                            goto code_r0x0040f1ce;\n                        }\n                        iVar9 = 10;\n                        goto code_r0x00453884;\n                    }\n                    iVar9 = **0x4d25a0;\n                    piVar17 = (*0x4d25a0)[1];\n                    fcn.0041fd4d(*0x4d25a0);\n                    *0x4d259c = *0x4d259c + -1;\n                    *0x4d25a4 = *0x4d25a4 & -(piVar17 != NULL);\n                    uVar11 = 0;\n                    uVar3 = uStack264._4_4_[0x74];\n                    if (uVar3 != 0) {\n                        do {\n                            piVar4 = **(uStack264._4_4_[0x73] + uVar11 * 4);\n                            if ((piVar4 != NULL) && (*piVar4 == iVar9)) break;\n                            uVar11 = uVar11 + 1;\n                        } while (uVar11 < uVar3);\n                    }\n                    *0x4d25a0 = piVar17;\n                    if (uVar11 == uVar3) goto code_r0x0040f13c;\n                    puVar15 = fcn.004025c1(**(uStack264._4_4_[0x73] + uVar11 * 4) + 8);\n                    piVar17 = **(uStack264._4_4_[0x73] + uVar11 * 4) + 0x18;\n                    in_stack_fffffeb8 = puVar15;\n                    if (uStack264._4_4_ + 0x55 != piVar17) {\n                        fcn.0040c1c3(piVar17);\n                        puVar15 = in_stack_fffffeb4;\n                        in_stack_fffffeb4 = puVar15;\n                    }\n                    fcn.00473948(puVar15[4] + 1, 1, 0);\n                    goto code_r0x0040f2c8;\n                }\n                *0x4d2520 = *0x4d2520 + 1;\n                if ((((uStack264._4_4_[0x3f] != 0) || (*(uStack264._4_4_ + 0x101) != '\\0')) ||\n                    ((*0x4d2520 & 0x7ff) == 0)) || (iVar9 = (*_sym.imp.USER32.dll_GetInputState)(),  iVar9 != 0)) {\n                    *(uStack264._4_4_ + 0x101) = 0;\n                    iVar9 = (*_sym.imp.USER32.dll_PeekMessageW)(&stack0xffffff78, 0, 0, 0, 1);\n                    while (iVar9 != 0) {\n                        if (iStack132 == 0x12) {\n                            *(uStack264._4_4_ + 0x40) = 1;\n                            uStack264._4_4_[0x3f] = 1;\n                            break;\n                        }\n                        if (*0x4d18d8 == -1) {\ncode_r0x0040f45d:\n                            iVar9 = fcn.0041ed18(&stack0xffffff78);\n                            if (iVar9 == 0) {\n                                (*_sym.imp.USER32.dll_TranslateMessage)(&stack0xffffff74);\n                                (*_sym.imp.USER32.dll_DispatchMessageW)(&stack0xffffff70);\n                            }\n                        }\n                        else {\n                            if (((*0x4d1914 <= *0x4d18d8) || (puVar15 = **(*0x4d1910 + *0x4d18d8 * 4),  puVar15 == NULL)\n                                ) || (puVar15[6] == 0)) {\n                                *0x4d18d8 = -1;\n                                goto code_r0x0040f45d;\n                            }\n                            iVar9 = (*_sym.imp.USER32.dll_TranslateAcceleratorW)(*puVar15, puVar15[6], &stack0xffffff78)\n                            ;\n                            if (iVar9 == 0) goto code_r0x0040f45d;\n                        }\n                        iVar9 = (*_sym.imp.USER32.dll_PeekMessageW)(&stack0xffffff74, 0, 0, 0, 1);\n                    }\n                }\n                if (*0x4d1362 == '\\x01') {\n                    *0x4d1367 = '\\0';\n                    *0x4d1362 = '\\0';\n                    uStack264._4_4_[0x3f] = 1;\n                }\n                else if (uStack264._4_4_[0x3f] != 1) goto code_r0x0040f12f;\n                puStack272 = NULL;\n                fcn.00403310(&stack0xfffffef0);\n            }\n        }\ncode_r0x0040f2d5:\n        *(in_ECX + 0x53) = 0;\n        if (in_ECX[0x3c] == 1) {\n            fcn.004031ed();\n            if (*(in_ECX + 0x40) != '\\x01') {\n                fcn.0041e48c();\n                (*_sym.imp.USER32.dll_LockWindowUpdate)(0);\n                (*_sym.imp.USER32.dll_DestroyWindow)(*0x4d138c);\n                pcVar6 = _sym.imp.USER32.dll_GetMessageW;\n                iVar9 = (*_sym.imp.USER32.dll_GetMessageW)(&stack0xffffffd4, 0, 0, 0);\n                while (0 < iVar9) {\n                    (*_sym.imp.USER32.dll_TranslateMessage)(&stack0xffffffc4);\n                    (*_sym.imp.USER32.dll_DispatchMessageW)(&stack0xffffffc0);\n                    iVar9 = (*pcVar6)(&stack0xffffffbc, 0, 0, 0);\n                }\n            }\n        }\n        else {\n            in_ECX[0x3c] = in_ECX[0x3c] + -1;\n        }\n        uVar10 = 0;\n    }\n    else {\n        *0x4d1360 = 0;\n        fcn.004734ba(0x9a, 0xffffffff);\n        uVar10 = 0xffffffff;\n    }\n    return uVar10;\ncode_r0x00452fac:\n    iStack292 = iStack292 + iVar18;\n    if (iVar23 <= iStack256) {\n        fcn.0040c117(**(in_stack_fffffeb4[1] + iVar18 * 4), *in_stack_fffffeb0, uStack252 | 0x200, 1);\ncode_r0x00453082:\n        iVar23 = iVar23 + 1;\n        in_stack_fffffeb0 = in_stack_fffffeb0 + 1;\n        iVar18 = iStack292 + 1;\n        if (in_stack_fffffeb8[5] < iVar23) goto code_r0x004530a2;\n        goto code_r0x00452f3a;\n    }\n    iStack208 = iVar18 + 2;\n    uStack188 = 0;\n    uStack180 = 0;\n    in_stack_fffffe90 = &stack0xffffff30;\n    auStack176[0] = 1;\n    iVar19 = fcn.00410540(in_stack_fffffeb4, in_stack_fffffe90, &stack0xffffff44, iStack292);\n    if (-1 < iVar19) {\n        fcn.0040c117(**(*(iVar9 + 4) + iVar18 * 4), &stack0xffffff34, piStack268 | 0x200, 1);\n        fcn.0040e8a0();\n        goto code_r0x00453082;\n    }\n    fcn.0040e8a0();\n    if (in_stack_fffffeb4 != NULL) {\n        *in_stack_fffffeb4[3] = *in_stack_fffffeb4[3] + -1;\n        if (*in_stack_fffffeb4[3] == 0) {\n            fcn.0041fd94(*in_stack_fffffeb4);\n            fcn.0041fd4d(in_stack_fffffeb4[3]);\n        }\n        fcn.0041fd4d(in_stack_fffffeb4);\n        in_stack_fffffeb4 = NULL;\n    }\n    if (in_stack_fffffeb8 < 5) goto code_r0x00452ea2;\n    // switch table (11 cases) at 0x453956\n    switch(in_stack_fffffeb8) {\n    case 0x5:\n        if (ppiVar14 == NULL) goto code_r0x00452ea2;\n        fcn.0041d593();\n        break;\n    default:\n        goto code_r0x00452ea2;\n    case 0x8:\n        if (ppiVar14 == NULL) goto code_r0x00452ea2;\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(ppiVar14);\n        break;\n    case 0xa:\n        if (ppiVar14 == NULL) goto code_r0x00452ea2;\n        fcn.0040b1ff();\n        break;\n    case 0xb:\n        fcn.0041fd94(ppiVar14[1]);\n        break;\n    case 0xc:\n        if (ppiVar14 != NULL) {\n            fcn.0045fc42(ppiVar14);\n        }\n        goto code_r0x00452ea2;\n    case 0xd:\n    case 0xe:\n        if (ppiVar14 == NULL) goto code_r0x00452ea2;\n        fcn.0040b1ff();\n        break;\n    case 0xf:\n        if (ppiVar14 != NULL) {\n            (***ppiVar14)(1);\n        }\n        goto code_r0x00452ea2;\n    }\n    fcn.0041fd4d(ppiVar14);\ncode_r0x00452ea2:\n    in_stack_fffffeb8 = 0x1;\n    uStack264 = CONCAT44(0x49d100, uStack264);\n    fcn.00466f23();\n    fcn.0041fd94(iStack256);\n    iStack292 = 0x49d100;\n    fcn.00466f23();\n    fcn.0041fd94(puStack288);\n    *(uStack264._4_4_ + 0x119) = 0;\ncode_r0x0040f1ce:\n    if ((*0x4d1a30 != '\\0') && (*(uStack264._4_4_ + 0x43d) != '\\x01')) {\n        puVar15 = fcn.0046bd70();\n        puVar13 = extraout_ECX_05;\n        while (puVar16 = puVar13,  puVar15 != NULL) {\n            if ((puVar15[2] != 0) &&\n               (iStack276 = fcn.004025c1(puVar15 + 1),  puVar16 = extraout_ECX_06,  iStack276 != 0)) {\n                uStack156 = *puVar15;\n                uStack148 = 0;\n                uStack144 = 1;\n                fcn.0040b606(L\"@TRAY_ID\");\n                fcn.0040c28f(&stack0xffffffcc, &stack0xffffff60, 1);\n                fcn.0040b1ff();\n                *(uStack264._4_4_ + 0x43d) = 1;\n                in_stack_fffffe90 = *(iStack292 + 0x10) + 1;\n                fcn.00473948(in_stack_fffffe90, 1, 0);\n                *(uStack264._4_4_ + 0x43d) = 0;\n                fcn.004060e4(extraout_ECX_07);\n                fcn.0040e8a0();\n                goto code_r0x0040f2c8;\n            }\n            fcn.004060e4();\n            puVar15 = fcn.0046bd70();\n            puVar13 = extraout_ECX_08;\n            in_stack_fffffeb0 = puVar16;\n        }\n    }\n    iVar9 = uStack264._4_4_[0x3f];\n    if (iVar9 == 7) {\n        iStack200 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uStack264._4_4_[0x10a], 10);\n        if (iStack200 == 0x102) goto code_r0x0040f2c8;\n        (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(uStack264._4_4_[0x10a], &stack0xffffff38);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uStack264._4_4_[0x10a]);\n        uStack264 = uStack264 & 0xffffffff00000000 | uStack184;\n        in_stack_fffffeb4 = extraout_ECX_09;\ncode_r0x00453325:\n        in_stack_fffffeb0 = &stack0xfffffef8;\n        fcn.00403310(in_stack_fffffeb0);\ncode_r0x0040f563:\n        *(uStack264._4_4_ + 0x53) = 1;\n        uStack264._4_4_[0x3f] = 0;\n        goto code_r0x0040f2c8;\n    }\n    if (iVar9 != 2) {\n        if ((iVar9 == 8) || (iVar9 == 9)) {\n            (*_sym.imp.KERNEL32.dll_Sleep)(10);\n            if (uStack264._4_4_[0x108] != 0) {\n                in_stack_fffffeb4 = 0x45376b;\n                iVar20 = fcn.0041e465();\n                if ((-1 < iVar20) && ((0xffffffff < iVar20 || (uStack264._4_4_[0x108] <= iVar20)))) {\n                    in_stack_fffffeb4 = extraout_ECX_11;\n                    if (uStack264._4_4_[0x10b] != 0) {\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(uStack264._4_4_[0x10b]);\n                        uStack264._4_4_[0x10b] = 0;\n                        in_stack_fffffeb4 = extraout_ECX_10;\n                    }\n                    uStack264 = uStack264 & 0xffffffff00000000;\n                    goto code_r0x00453325;\n                }\n            }\n            auStack312 = auStack312 & 0xffffff;\n            if (uStack264._4_4_[0x3f] == 8) {\n                in_stack_fffffeb4 = &stack0xfffffecb;\n                in_stack_fffffeb0 = 0x4537b6;\n                fcn.0046d3fa(in_stack_fffffeb4);\n                if (auStack312[3] != '\\x01') goto code_r0x0040f2c8;\n            }\n            else if (uStack264._4_4_[0x3f] != 9) goto code_r0x0040f2c8;\n            in_stack_fffffeb0 = uStack264._4_4_[0x10b];\n            puStack220 = 0xcccccccc;\n            if (in_stack_fffffeb0 != NULL) {\n                in_stack_fffffeb4 = &stack0xffffff24;\n                (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)();\n                if ((iStack236 == 0x103) &&\n                   (iVar9 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uStack264._4_4_[0x10b], 0),  iVar9 != 0))\n                goto code_r0x0040f2c8;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(uStack264._4_4_[0x10b]);\n                uStack264._4_4_[0x10b] = 0;\n            }\n            in_stack_fffffeb4 = *uStack264._4_4_ + 4;\n            if (uStack264._4_4_[0x3f] == 8) {\n                uStack264 = 0;\n                in_stack_fffffeb0 = &stack0xfffffef8;\n                fcn.00487d67(in_stack_fffffeb0);\n            }\n            else {\n                in_stack_fffffeb4 = NULL;\n                in_stack_fffffeb0 = puStack220;\n                fcn.00407cb4(puStack220, 0);\n            }\n            iVar9 = uStack264._4_4_[0xb9];\n            *(uStack264._4_4_ + 0x53) = 1;\n            uStack264._4_4_[0x3f] = 0;\ncode_r0x00453884:\n            (*_sym.imp.KERNEL32.dll_Sleep)(iVar9);\n            goto code_r0x0040f2c8;\n        }\n        if ((((iVar9 == 3) || (iVar9 == 4)) || (iVar9 == 5)) || (iVar9 == 6)) goto code_r0x0040f4af;\n        uStack264._4_4_[0x3e] = arg_8h;\n        iVar9 = arg_8h + 1;\n        if (((*0x4d23a0 < arg_8h) || (arg_8h < 1)) || (iVar18 = arg_8h * 0x10 + *0x4d23dc,  iVar18 == 0)) {\n            uStack264._4_4_[0x3f] = 1;\n            arg_8h = iVar9;\n            goto code_r0x0040f2c8;\n        }\n        puStack288 = NULL;\n        piStack280 = NULL;\n        iStack276 = 1;\n        puStack272 = **(iVar18 + 4);\n        auStack312 = NULL;\n        if (*(puStack272 + 2) == 0) {\n            arg_8h = iVar9;\n            fcn.0040f650(iVar18, &fcn.0040f060::arg_8h);\ncode_r0x0040f297:\n            puVar13 = puStack296;\n            iVar23 = iStack292;\n            puVar15 = puStack304;\n            in_stack_fffffeb4 = puStack304;\n            if (puStack296 != NULL) {\n                *puStack296[3] = *puStack296[3] + -1;\n                if (*puStack296[3] == 0) {\n                    fcn.0041fd94(*puStack296);\n                    fcn.0041fd4d(puVar13[3]);\n                }\n                fcn.0041fd4d(puVar13);\n                puStack296 = NULL;\n                iVar23 = iStack292;\n                puVar15 = puStack304;\n                in_stack_fffffeb4 = puStack304;\n            }\ncode_r0x0040f2af:\n            if (4 < iVar23) {\n    // switch table (11 cases) at 0x40f620\n                switch(iVar23) {\n                case 5:\n                    if (puVar15 != NULL) {\n                        fcn.0041d593();\ncode_r0x004535ec:\n                        in_stack_fffffe90 = NULL;\n                        goto code_r0x004535f0;\n                    }\n                    break;\n                case 8:\n                    if (puVar15 != NULL) {\ncode_r0x00453408:\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(puVar15);\n                        in_stack_fffffe90 = auStack312;\n                        goto code_r0x004535f0;\n                    }\n                    break;\n                case 10:\n                    if (puVar15 != NULL) {\n                        fcn.0040b1ff();\n                        goto code_r0x004535ec;\n                    }\n                    break;\n                case 0xb:\n                    fcn.0041fd94(puVar15[1]);\n                    in_stack_fffffe90 = auStack312;\ncode_r0x004535f0:\n                    fcn.0041fd4d(in_stack_fffffe90);\n                    break;\n                case 0xc:\n                    if (puVar15 != NULL) {\n                        fcn.0045fc42();\n                    }\n                    break;\n                case 0xd:\n                case 0xe:\n                    if (puVar15 != NULL) {\n                        fcn.0040b1ff();\n                        goto code_r0x004535ec;\n                    }\n                    break;\n                case 0xf:\n                    if (puVar15 != NULL) {\n                        (***puVar15)(1);\n                    }\n                }\n            }\n        }\n        else {\n            iVar23 = 1;\n            puVar15 = NULL;\n            arg_8h = iVar9;\n    // switch table (127 cases) at 0x40f58c\n            switch(*(puStack272 + 2)) {\n            case 1:\n                iVar9 = fcn.00412c10(0, iVar18, &stack0xfffffec8, &stack0xfffffee0);\n                break;\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xb:\n            case 0xc:\n            case 0xd:\n            case 0xe:\n            case 0xf:\n            case 0x10:\n            case 0x11:\n            case 0x12:\n            case 0x13:\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x17:\n            case 0x18:\n            case 0x19:\n            case 0x1a:\n            case 0x1b:\n            case 0x1c:\n            case 0x1d:\n            case 0x1e:\n            case 0x1f:\n            case 0x20:\n            case 0x21:\n            case 0x22:\n            case 0x23:\n            case 0x24:\n            case 0x25:\n            case 0x26:\n            case 0x27:\n            case 0x28:\n            case 0x29:\n            case 0x2a:\n            case 0x2b:\n            case 0x2c:\n            case 0x2d:\n            case 0x2e:\n            case 0x2f:\n            case 0x30:\n            case 0x31:\n            case 0x32:\n            case 0x33:\n            case 0x36:\n            case 0x37:\n            case 0x38:\n            case 0x39:\n            case 0x3a:\n            case 0x3b:\n            case 0x3c:\n            case 0x3d:\n            case 0x3e:\n            case 0x3f:\n            case 0x40:\n            case 0x41:\n            case 0x42:\n            case 0x43:\n            case 0x44:\n            case 0x45:\n            case 0x46:\n            case 0x47:\n            case 0x48:\n            case 0x49:\n            case 0x4a:\n            case 0x4b:\n            case 0x4c:\n            case 0x4d:\n            case 0x4e:\n            case 0x4f:\n            case 0x50:\n            case 0x51:\n            case 0x52:\n            case 0x53:\n            case 0x54:\n            case 0x55:\n            case 0x56:\n            case 0x57:\n            case 0x58:\n            case 0x59:\n            case 0x5a:\n            case 0x5b:\n            case 0x5c:\n            case 0x5d:\n            case 0x5e:\n            case 0x5f:\n            case 0x60:\n            case 0x61:\n            case 0x62:\n            case 99:\n            case 100:\n            case 0x65:\n            case 0x66:\n            case 0x67:\n            case 0x68:\n            case 0x69:\n            case 0x6a:\n            case 0x6b:\n            case 0x6c:\n            case 0x6d:\n            case 0x6e:\n            case 0x6f:\n            case 0x70:\n            case 0x71:\n            case 0x72:\n            case 0x73:\n            case 0x74:\n            case 0x75:\n            case 0x76:\n            case 0x77:\n            case 0x78:\n            case 0x79:\n            case 0x7a:\n            case 0x7b:\n            case 0x7c:\n            case 0x7d:\n            case 0x7e:\n                iVar9 = fcn.00410540(iVar18, &stack0xfffffec8, &stack0xfffffee0, 0xffffffff);\n                break;\n            case 0x34:\n                iVar9 = fcn.0040d840(0, iVar18, &stack0xfffffec8, &stack0xfffffee0, &stack0xffffff13);\n                break;\n            case 0x35:\n                cVar1 = *(uStack264._4_4_ + 0x179);\n                cVar8 = fcn.00485520();\n                if (cVar8 != '\\0') {\n                    iVar9 = extraout_EDX;\n                    if (cVar1 != '\\0') {\n                        iVar9 = *(extraout_EDX + 0x10);\n                    }\n                    iVar9 = fcn.004867e8(iVar18, &stack0xfffffec8, iVar9);\n                    break;\n                }\n                fcn.004734ba(0xa7, *(puStack272 + 10));\n                puVar15 = puStack288;\n                if (puStack288 != NULL) {\n                    *puStack288[3] = *puStack288[3] + -1;\n                    if (*puStack288[3] == 0) {\n                        fcn.0041fd94(*puStack288);\n                        fcn.0041fd4d(puVar15[3]);\n                    }\n                    fcn.0041fd4d(puVar15);\n                    puStack288 = NULL;\n                }\n                if (4 < iStack284) {\n    // switch table (11 cases) at 0x453982\n                    switch(iStack284) {\n                    case 5:\n                        goto code_r0x00453428;\n                    default:\n                        goto code_r0x0040f2b8;\n                    case 8:\n                        goto code_r0x004533f8;\n                    case 10:\n                        goto code_r0x00453545;\n                    case 0xb:\n                        fcn.0041fd94(puStack296[1]);\n                        break;\n                    case 0xc:\n                        goto code_r0x00453443;\n                    case 0xd:\n                    case 0xe:\n                        goto code_r0x00453471;\n                    case 0xf:\n                        goto code_r0x0045345a;\n                    }\n                    goto code_r0x004535f0;\n                }\n                goto code_r0x0040f2b8;\n            case 0x7f:\n                goto code_r0x0040f2af;\n            default:\n                fcn.0040f8d0(iVar18);\n                goto code_r0x0040f297;\n            }\n            if ((iVar9 < 0) || (iVar9 = *(*(iVar18 + 4) + in_stack_fffffeb8 * 4),  *(iVar9 + 8) == 0x7f))\n            goto code_r0x0040f297;\n            fcn.004734ba(0x72, *(iVar9 + 10));\n            puVar15 = puStack304;\n            if (puStack304 != NULL) {\n                *puStack304[3] = *puStack304[3] + -1;\n                if (*puStack304[3] == 0) {\n                    fcn.0041fd94(*puStack304);\n                    fcn.0041fd4d(puVar15[3]);\n                }\n                fcn.0041fd4d(puVar15);\n                puStack304 = NULL;\n                in_stack_fffffe90 = puVar15;\n            }\n            if (iStack300 < 5) goto code_r0x0040f2b8;\n    // switch table (11 cases) at 0x4539ae\n            switch(iStack300) {\n            case 5:\ncode_r0x00453428:\n                puVar15 = auStack312;\n                if (auStack312 != NULL) {\n                    fcn.0041d593();\n                    in_stack_fffffe90 = puVar15;\n                    goto code_r0x004535f0;\n                }\n                break;\n            case 8:\ncode_r0x004533f8:\n                puVar15 = auStack312;\n                if (auStack312 == NULL) break;\n                goto code_r0x00453408;\n            case 10:\ncode_r0x00453545:\n                puVar15 = auStack312;\n                if (auStack312 != NULL) {\n                    fcn.0040b1ff();\n                    in_stack_fffffe90 = puVar15;\n                    goto code_r0x004535f0;\n                }\n                break;\n            case 0xb:\n                fcn.0041fd94(auStack312[1]);\n                in_stack_fffffe90 = auStack312;\n                goto code_r0x004535f0;\n            case 0xc:\ncode_r0x00453443:\n                if (auStack312 != NULL) {\n                    in_stack_fffffe90 = 0x453455;\n                    fcn.0045fc42();\n                }\n                break;\n            case 0xd:\n            case 0xe:\ncode_r0x00453471:\n                puVar15 = auStack312;\n                if (auStack312 != NULL) {\n                    fcn.0040b1ff();\n                    in_stack_fffffe90 = puVar15;\n                    goto code_r0x004535f0;\n                }\n                break;\n            case 0xf:\ncode_r0x0045345a:\n                if (auStack312 != NULL) {\n                    in_stack_fffffe90 = 0x45346c;\n                    (***auStack312)(1);\n                }\n            }\n        }\ncode_r0x0040f2b8:\n        iStack300 = 1;\n        auStack312 = NULL;\n        goto code_r0x0040f2c8;\n    }\ncode_r0x0040f4af:\n    (*_sym.imp.KERNEL32.dll_Sleep)(10);\n    if (uStack264._4_4_[0xb8] != 0) {\n        in_stack_fffffeb4 = 0x40f4cb;\n        iVar20 = fcn.0041e465();\n        if ((-1 < iVar20) && ((0xffffffff < iVar20 || (uStack264._4_4_[0xb8] <= iVar20)))) {\n            if (uStack264._4_4_[0x3f] != 2) {\n                uStack264 = uStack264 & 0xffffffff00000000;\n                in_stack_fffffeb4 = extraout_ECX;\n                goto code_r0x00453325;\n            }\n            goto code_r0x0040f563;\n        }\n    }\n    if (uStack264._4_4_[0x3f] < 3) goto code_r0x0040f2c8;\n    // switch table (4 cases) at 0x4539da\n    switch(uStack264._4_4_[0x3f]) {\n    case 3:\n        in_stack_fffffeb4 = 0x1;\n        in_stack_fffffeb0 = 0x45365d;\n        iVar9 = fcn.00492968(1);\n        break;\n    case 4:\n        in_stack_fffffeb4 = 0x1;\n        in_stack_fffffeb0 = 0x453647;\n        iVar9 = fcn.00492968(1);\n        goto code_r0x00453647;\n    case 5:\n        in_stack_fffffeb4 = 0x453633;\n        iVar9 = fcn.004928f2();\n        break;\n    case 6:\n        in_stack_fffffeb4 = 0x45363c;\n        iVar9 = fcn.004928f2();\ncode_r0x00453647:\n        if (iVar9 < 0) goto code_r0x00453663;\n        if (0 < iVar9) goto code_r0x0040f2c8;\n        goto code_r0x004536b5;\n    default:\n        goto code_r0x0040f2c8;\n    }\n    if (iVar9 < 0) {\ncode_r0x00453663:\n        in_stack_fffffeb4 = *(*uStack264._4_4_ + 4);\n        iVar18 = *(in_stack_fffffeb4 + 2 + uStack264._4_4_);\n        if (*(in_stack_fffffeb4 + 0xd + uStack264._4_4_) != '\\0') {\n            iVar18 = *(iVar18 + 0x38);\n        }\n        *(iVar18 + 0x14) = -iVar9;\n        iVar18 = *(in_stack_fffffeb4 + 2 + uStack264._4_4_);\n        if (*(in_stack_fffffeb4 + 0xd + uStack264._4_4_) != '\\0') {\n            iVar18 = *(iVar18 + 0x38);\n        }\n        *(iVar18 + 0x18) = 0;\n        in_stack_fffffeb8 = &stack0xfffffef8;\n        uStack264 = uStack264 & 0xffffffff00000000;\n        fcn.00403310(in_stack_fffffeb8);\n    }\n    if (iVar9 != 0) {\n        if (0 < iVar9) {\ncode_r0x004536b5:\n            if ((uStack264._4_4_[0x3f] == 5) || (uStack264._4_4_[0x3f] == 3)) {\n                auStack176[0] = 0;\n                uStack168 = 0;\n                uStack164 = 1;\n                uVar10 = *uStack264._4_4_[0x7e];\n                fcn.0040e8a0();\n                in_stack_fffffeb8 = &stack0xffffff50;\n                uStack164 = 7;\n                auStack176[0] = uVar10;\n                fcn.0048557f(in_stack_fffffeb8, 0);\n                fcn.0040e8a0();\n            }\n        }\n        *(uStack264._4_4_ + 0x53) = 1;\n        uStack264._4_4_[0x3f] = 0;\n        in_stack_fffffeb4 = 0x45374a;\n        fcn.0046e899();\n    }\ncode_r0x0040f2c8:\n    in_ECX = uStack264._4_4_;\n    if (*(uStack264._4_4_ + 0x40) != '\\0') goto code_r0x0040f2d5;\n    goto code_r0x0040f0b0;\n}\n",
        "token_count": 12237
    },
    "0040f650": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f650(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t **ppiVar1;\n    uint uVar2;\n    uchar uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    uint var_4h;\n    \n    ppiVar1 = *(arg_8h + 4);\n    var_4h = 0;\n    if (**ppiVar1 == 4) {\n        fcn.0040eb60(arg_8h, arg_ch);\n        return;\n    }\n    uVar4 = **ppiVar1 - 4;\n    if (uVar4 < 0x29) {\n        iVar5 = 0;\n    // switch table (41 cases) at 0x40f828\n        switch(*(uVar4 * 4 + 0x40f828)) {\n        case 0x40f698:\n            fcn.0040e940(0, arg_ch);\n            return;\n        case 0x40f6ac:\n            fcn.0040e3f0(arg_8h, arg_ch);\n            return;\n        case 0x40f6c0:\n            fcn.0040c315(arg_8h, &var_4h);\n        case 0x40f6cc:\n            *(in_ECX + 0x14c) = 1;\n            return;\n        case 0x40f6dc:\n            fcn.0040d010(arg_8h, &var_4h, 1);\n            return;\n        case 0x40f6f3:\n            if (*(in_ECX + 0x16d) != '\\0') {\n                iVar5 = *(in_ECX + 0x168);\n                uVar2 = *(iVar5 + 0x30);\n                if (iVar5 != 0) {\n                    fcn.00473163(iVar5);\n                }\n                *(in_ECX + 0x168) = uVar2;\n                *(in_ECX + 0x16d) = 0;\n            }\n            if (*(in_ECX + 0x16c) == '\\0') {\n                iVar5 = *(in_ECX + 0x168);\n                uVar2 = *(iVar5 + 0x30);\n                if (iVar5 != 0) {\n                    fcn.0040e8a0();\n                    fcn.0040e8a0();\n                    fcn.0041fd4d(iVar5);\n                }\n                *(in_ECX + 0x168) = uVar2;\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = 1;\n            }\n            *(in_ECX + 0x16d) = uVar3;\n            *(in_ECX + 0x164) = *(in_ECX + 0x164) + -1;\n            return;\n        case 0x40f751:\n            fcn.0041b2ca(arg_8h, arg_ch);\n            return;\n        case 0x40f765:\n            iVar5 = *(in_ECX + 0x168);\n            if (*(in_ECX + 0x16d) != '\\0') {\n                iVar5 = *(iVar5 + 0x30);\n            }\n            *arg_ch = *(iVar5 + 8) + 1;\n            fcn.00404271();\n            return;\n        case 0x40f795:\n            fcn.0040392b(arg_8h, arg_ch);\n            return;\n        case 0x40f7a9:\n            fcn.0040389f(arg_ch);\n            return;\n        case 0x40f7bc:\n            fcn.00403b6d(0, arg_ch);\n            return;\n        case 0x40f7d0:\n            fcn.0041f32c(arg_8h, &var_4h);\n            return;\n        case 0x40f7e5:\n            fcn.0040d010(arg_8h, &var_4h, 2);\n            return;\n        case 0x40f7fc:\n            fcn.0040379a(arg_8h, arg_ch);\n            return;\n        case 0x40f810:\n            fcn.0040d010(arg_8h, &var_4h, 0);\n            return;\n        case 0x453a1e:\n            fcn.00485e50(arg_8h, arg_ch);\n            break;\n        case 0x453a2e:\n            fcn.00485f61(0, arg_ch);\n            break;\n        case 0x453a3e:\n            iVar5 = *(in_ECX + 0x168);\n            if (*(in_ECX + 0x16d) != '\\0') {\n                iVar5 = *(iVar5 + 0x30);\n            }\n            *arg_ch = *(iVar5 + 8);\n            break;\n        case 0x453a5d:\n            fcn.0048649d(arg_8h, arg_ch);\n            break;\n        case 0x453a6d:\n            fcn.00404271();\n            break;\n        case 0x453a7d:\n            fcn.00485a1e(arg_8h, &var_4h, arg_ch);\n            break;\n        case 0x453a91:\n            fcn.00485c5a(arg_8h, &var_4h, 0);\n            break;\n        case 0x453aa4:\n            fcn.004857c9(arg_8h, &var_4h, 0);\n            break;\n        case 0x453ab7:\n            fcn.0040d010(arg_8h, &var_4h, 4);\n            break;\n        case 0x453aca:\n            fcn.004860f7(arg_8h, &var_4h, 0);\n            break;\n        case 0x453add:\n            if (((*(arg_8h + 8) < 2) || (*(ppiVar1[1] + 2) != 0)) || (*ppiVar1[1] != 0x20)) {\n                fcn.004734ba(0x69, 0xffffffff);\n                return;\n            }\n            iVar5 = 1;\n        case 0x453af6:\n            iVar5 = fcn.004025c1(*ppiVar1[iVar5 + 1]);\n            *arg_ch = *(iVar5 + 0x1c) + 1;\n            break;\n        case 0x453b21:\n            fcn.00486732(arg_8h, &var_4h);\n            break;\n        case 0x453b32:\n            fcn.00485538();\n            break;\n        case 0x453b42:\n            goto code_r0x00453b42;\n        }\n    }\n    else {\ncode_r0x00453b42:\n        fcn.004734ba(0x81, 0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 1564
    },
    "0040f8d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f8d0(uint16_t **arg_8h)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint *puVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t **ppiVar8;\n    uint16_t *puVar9;\n    uint16_t **ppuVar10;\n    uint16_t **ppuVar11;\n    int32_t in_ECX;\n    int32_t *piVar12;\n    int32_t iVar13;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint16_t *extraout_EDX;\n    uint arg_8h_02;\n    uint arg_8h_03;\n    int32_t *piVar14;\n    int32_t iVar15;\n    int32_t *piVar16;\n    int32_t in_FS_OFFSET;\n    uint16_t **ppuVar17;\n    int32_t **arg_ch;\n    int32_t **ppiVar18;\n    uint var_184h;\n    uint16_t **var_84h;\n    int32_t *var_80h;\n    int32_t **var_78h;\n    uint16_t **var_74h;\n    uint32_t var_70h;\n    uint16_t **var_6ch;\n    uint32_t var_68h;\n    int32_t *var_64h;\n    uint16_t **var_5ch;\n    int32_t var_58h;\n    uint16_t **var_54h;\n    int32_t **var_50h;\n    uint16_t **var_4ch;\n    int32_t *var_48h;\n    uint16_t **var_44h;\n    int32_t *var_40h;\n    int32_t var_38h;\n    int32_t *var_34h;\n    int32_t **var_30h;\n    uint16_t **var_2ch;\n    char var_25h;\n    int32_t var_24h;\n    uint16_t **var_20h;\n    int32_t var_1ch;\n    char var_15h;\n    uint16_t **var_14h;\n    uint *var_ch;\n    int32_t var_8h;\n    \n    iVar13 = 0;\n    var_24h = 0;\n    var_64h = NULL;\n    var_5ch = NULL;\n    var_58h = 1;\n    ppiVar8 = arg_8h[1];\ncode_r0x0040f910:\n    for (; iVar1 = *(*ppiVar8 + 2),  iVar1 != 0x41; ppiVar8 = ppiVar8 + 1) {\n        if (iVar1 == 0x4e) {\ncode_r0x0040fb03:\n            iVar13 = iVar13 + 1;\n            goto code_r0x0040f96c;\n        }\n        if (iVar1 != 0x4f) {\n            if (iVar1 == 0x52) break;\n            if (iVar1 == 0x47) goto code_r0x0040fb03;\n            if (iVar1 == 0x48) goto code_r0x0040fafa;\n            if ((((iVar1 == 0x53) || (iVar1 == 0x54)) || (iVar1 == 0x55)) || (iVar1 == 0x56)) break;\n            goto code_r0x0040f962;\n        }\ncode_r0x0040fafa:\n        iVar13 = iVar13 + -1;\n    }\n    if (iVar13 == 0) {\n        var_24h = 1;\n        var_25h = '\\0';\n        var_78h = NULL;\n        ppuVar17 = **arg_8h[1];\n        var_2ch = ppuVar17;\n        var_38h = 0;\n        var_80h = NULL;\n        var_1ch = in_ECX;\n        if (*0x4d2380 == 0) goto code_r0x0040fced;\n        ppiVar8 = *0x4d2384;\n        if (*0x4d2389 != '\\0') {\n            ppiVar8 = (*0x4d2384)[2];\n        }\n        if (*ppiVar8 == NULL) goto code_r0x0040fced;\n        var_15h = '\\0';\n        if ((*(**(in_FS_OFFSET + 0x2c) + 4) < *0x4d2540) && (fcn.004201c2(0x4d2540),  *0x4d2540 == -1)) {\n            fcn.0040c25d();\n            fcn.00420023(0x4423e9);\n            fcn.00420178(0x4d2540);\n        }\n        *0x4d2560 = NULL;\n        *0x4d255c = NULL;\n        var_20h = *ppiVar8;\n        var_50h = 0x4d2544;\n        var_4ch = 0x4d2544;\n        goto code_r0x0040fa00;\n    }\ncode_r0x0040f962:\n    if (iVar1 != 0x7f) {\ncode_r0x0040f96c:\n        ppiVar8 = ppiVar8 + 1;\n        goto code_r0x0040f910;\n    }\n    arg_ch = 0xffffffff;\n    ppuVar17 = &var_64h;\n    fcn.00410540(arg_8h, &var_24h, ppuVar17, 0xffffffff);\n    if (*(*(arg_8h[1] + var_24h * 2) + 8) != 0x7f) {\n        fcn.004734ba(0x72, *(*(arg_8h[1] + var_24h * 2) + 10));\n    }\n    goto code_r0x0040fcca;\ncode_r0x0040fa00:\n    var_48h = ppuVar17[1];\n    piVar14 = var_20h[1];\n    cVar5 = var_15h;\n    if (var_48h != NULL) {\n        if (piVar14 != NULL) goto code_r0x0040fa18;\ncode_r0x0040fa62:\n        var_30h = var_20h[7];\n        if (var_30h == NULL) goto code_r0x0040fb71;\n        piVar14 = var_30h[1];\n        if (var_48h < var_30h[1]) {\n            piVar14 = var_48h;\n        }\n        var_40h = piVar14;\n        puVar9 = *var_2ch;\n        if (piVar14 != NULL) {\n            var_68h = *var_30h - puVar9;\n            uVar6 = *var_30h - puVar9;\n            do {\n                uVar2 = *(puVar9 + uVar6);\n                var_34h = uVar2;\n                uVar3 = *puVar9;\n                var_70h = uVar3;\n                if (uVar2 != uVar3) {\n                    if (uVar3 <= uVar2) goto code_r0x0040fae0;\n                    goto code_r0x0040fac6;\n                }\n                puVar9 = puVar9 + 1;\n                var_40h = var_40h + -1;\n                uVar6 = var_68h;\n            } while (var_40h != NULL);\n        }\n        if (piVar14 < var_48h) {\ncode_r0x0040fac6:\n            var_20h[7] = var_30h[6];\n            var_30h[6] = *ppiVar8;\n            *ppiVar8 = var_30h;\n            if (var_30h[7] == NULL) goto code_r0x0040fb71;\n        }\ncode_r0x0040fae0:\n        var_4ch[7] = *ppiVar8;\n        var_4ch = *ppiVar8;\n        var_20h = (*ppiVar8)[7];\n        *ppiVar8 = var_20h;\n        ppuVar17 = var_2ch;\n        goto code_r0x0040fa00;\n    }\n    if (piVar14 != NULL) {\ncode_r0x0040fb09:\n        ppuVar17 = var_20h[6];\n        if (ppuVar17 == NULL) goto code_r0x0040fb71;\n        piVar14 = ppuVar17[1];\n        if (piVar14 < var_48h) {\n            var_48h = piVar14;\n        }\n        puVar9 = *ppuVar17;\n        var_40h = var_48h;\n        if (var_48h != NULL) {\n            var_70h = *var_2ch - puVar9;\n            uVar6 = *var_2ch - puVar9;\n            do {\n                uVar2 = *(puVar9 + uVar6);\n                var_30h = uVar2;\n                uVar3 = *puVar9;\n                var_68h = uVar3;\n                if (uVar2 != uVar3) {\n                    if (uVar3 <= uVar2) goto code_r0x0040fe1a;\n                    goto code_r0x0040fe03;\n                }\n                puVar9 = puVar9 + 1;\n                var_40h = var_40h + -1;\n                uVar6 = var_70h;\n            } while (var_40h != NULL);\n        }\n        if (var_48h < ppuVar17[1]) {\ncode_r0x0040fe03:\n            var_20h[6] = ppuVar17[7];\n            ppuVar17[7] = *ppiVar8;\n            *ppiVar8 = ppuVar17;\n            if (ppuVar17[6] == NULL) goto code_r0x0040fb71;\n        }\ncode_r0x0040fe1a:\n        var_50h[6] = *ppiVar8;\n        var_50h = *ppiVar8;\n        var_20h = var_50h[6];\n        *ppiVar8 = var_20h;\n        ppuVar17 = var_2ch;\n        goto code_r0x0040fa00;\n    }\ncode_r0x0040fa18:\n    puVar9 = *var_20h;\n    if (var_48h < piVar14) {\n        if (piVar14 != NULL) {\n            iVar13 = *ppuVar17 - puVar9;\n            do {\n                uVar2 = *(puVar9 + iVar13);\n                uVar3 = *puVar9;\n                var_70h = uVar2;\n                var_40h = uVar3;\n                if (uVar2 != uVar3) {\n                    iVar13 = (-(uVar2 < uVar3) & 0xfffffffe) + 1;\n                    goto code_r0x0040fa54;\n                }\n                puVar9 = puVar9 + 1;\n                piVar14 = piVar14 + -1;\n            } while (piVar14 != NULL);\n        }\n        iVar13 = 0;\n    }\n    else {\n        if (var_48h != NULL) {\n            iVar13 = *ppuVar17 - puVar9;\n            piVar14 = var_48h;\n            do {\n                uVar2 = *(puVar9 + iVar13);\n                if (uVar2 != *puVar9) {\n                    iVar13 = (-(uVar2 < *puVar9) & 0xfffffffe) + 1;\n                    goto code_r0x0040fa54;\n                }\n                puVar9 = puVar9 + 1;\n                piVar14 = piVar14 + -1;\n            } while (piVar14 != NULL);\n        }\n        iVar13 = 0;\n    }\ncode_r0x0040fa54:\n    if (iVar13 < 0) goto code_r0x0040fb09;\n    if (0 < iVar13) goto code_r0x0040fa62;\n    cVar5 = '\\x01';\ncode_r0x0040fb71:\n    var_4ch[7] = (*ppiVar8)[6];\n    var_50h[6] = (*ppiVar8)[7];\n    (*ppiVar8)[6] = *0x4d2560;\n    (*ppiVar8)[7] = *0x4d255c;\n    if ((cVar5 == '\\0') || (piVar14 = *ppiVar8,  piVar14 == NULL)) {\ncode_r0x0040fced:\n        ppuVar17 = var_2ch;\n        if (*0x4d2370 != NULL) {\n            var_15h = '\\0';\n            if ((*(**(in_FS_OFFSET + 0x2c) + 4) < *0x4d2540) && (fcn.004201c2(0x4d2540),  *0x4d2540 == -1)) {\n                fcn.0040c25d();\n                fcn.00420023(0x4423e9);\n                fcn.00420178(0x4d2540);\n            }\n            *0x4d2560 = NULL;\n            *0x4d255c = NULL;\n            var_20h = 0x4d2544;\n            var_4ch = 0x4d2544;\ncode_r0x0040fd40:\n            while( true ) {\n                piVar14 = ppuVar17[1];\n                piVar12 = (*0x4d2370)[1];\n                if (piVar14 != NULL) break;\n                if (piVar12 == NULL) goto code_r0x0040fd59;\ncode_r0x0041011e:\n                ppuVar10 = (*0x4d2370)[6];\n                if (ppuVar10 == NULL) goto code_r0x0040fd9f;\n                var_34h = ppuVar10[1];\n                if (var_34h < piVar14) {\n                    piVar14 = var_34h;\n                }\n                puVar9 = *ppuVar10;\n                var_40h = piVar14;\n                if (piVar14 != NULL) {\n                    iVar13 = *ppuVar17 - puVar9;\n                    do {\n                        uVar2 = *(puVar9 + iVar13);\n                        var_68h = uVar2;\n                        uVar3 = *puVar9;\n                        var_30h = uVar3;\n                        if (*(puVar9 + iVar13) != uVar3) {\n                            if (uVar3 <= uVar2) goto code_r0x00410199;\n                            goto code_r0x00410177;\n                        }\n                        puVar9 = puVar9 + 1;\n                        var_40h = var_40h + -1;\n                    } while (var_40h != NULL);\n                }\n                if (piVar14 < var_34h) {\ncode_r0x00410177:\n                    ppuVar17 = (*0x4d2370)[6];\n                    (*0x4d2370)[6] = ppuVar17[7];\n                    ppuVar17[7] = *0x4d2370;\n                    *0x4d2370 = ppuVar17;\n                    if (ppuVar17[6] == NULL) goto code_r0x0040fd9f;\n                }\ncode_r0x00410199:\n                var_20h[6] = *0x4d2370;\n                var_20h = *0x4d2370;\n                *0x4d2370 = (*0x4d2370)[6];\n                ppuVar17 = var_2ch;\n            }\n            if (piVar12 == NULL) {\ncode_r0x004101c7:\n                piVar12 = (*0x4d2370)[7];\n                if (piVar12 == NULL) goto code_r0x0040fd9f;\n                var_40h = piVar12[1];\n                if (piVar14 < var_40h) {\n                    var_40h = piVar14;\n                }\n                puVar9 = *var_2ch;\n                if (var_40h != NULL) {\n                    var_34h = *piVar12 - puVar9;\n                    piVar12 = *piVar12 - puVar9;\n                    piVar16 = var_40h;\n                    do {\n                        uVar2 = *(puVar9 + piVar12);\n                        var_68h = uVar2;\n                        uVar3 = *puVar9;\n                        var_30h = uVar3;\n                        if (uVar2 != uVar3) {\n                            if (uVar2 < uVar3) goto code_r0x0041021d;\n                            goto code_r0x00410249;\n                        }\n                        puVar9 = puVar9 + 1;\n                        piVar16 = piVar16 + -1;\n                        piVar12 = var_34h;\n                    } while (piVar16 != NULL);\n                }\n                if (var_40h < piVar14) {\ncode_r0x0041021d:\n                    ppuVar17 = (*0x4d2370)[7];\n                    (*0x4d2370)[7] = ppuVar17[6];\n                    ppuVar17[6] = *0x4d2370;\n                    *0x4d2370 = ppuVar17;\n                    if (ppuVar17[7] == NULL) goto code_r0x0040fd9f;\n                }\ncode_r0x00410249:\n                var_4ch[7] = *0x4d2370;\n                var_4ch = *0x4d2370;\n                *0x4d2370 = (*0x4d2370)[7];\n                ppuVar17 = var_2ch;\n                goto code_r0x0040fd40;\n            }\ncode_r0x0040fd59:\n            puVar9 = **0x4d2370;\n            if (piVar14 < piVar12) {\n                if (piVar12 != NULL) {\n                    iVar13 = *ppuVar17 - puVar9;\n                    do {\n                        uVar2 = *puVar9;\n                        uVar3 = *(puVar9 + iVar13);\n                        var_34h = uVar2;\n                        if (uVar3 != uVar2) {\n                            iVar13 = (-(uVar3 < uVar2) & 0xfffffffe) + 1;\n                            goto code_r0x0040fd8d;\n                        }\n                        puVar9 = puVar9 + 1;\n                        piVar12 = piVar12 + -1;\n                    } while (piVar12 != NULL);\n                }\n                iVar13 = 0;\n            }\n            else {\n                if (piVar14 != NULL) {\n                    iVar13 = *ppuVar17 - puVar9;\n                    piVar12 = piVar14;\n                    do {\n                        uVar2 = *(puVar9 + iVar13);\n                        if (uVar2 != *puVar9) {\n                            iVar13 = (-(uVar2 < *puVar9) & 0xfffffffe) + 1;\n                            goto code_r0x0040fd8d;\n                        }\n                        puVar9 = puVar9 + 1;\n                        piVar12 = piVar12 + -1;\n                    } while (piVar12 != NULL);\n                }\n                iVar13 = 0;\n            }\ncode_r0x0040fd8d:\n            ppuVar17 = var_2ch;\n            if (iVar13 < 0) goto code_r0x0041011e;\n            if (0 < iVar13) goto code_r0x004101c7;\n            var_15h = '\\x01';\ncode_r0x0040fd9f:\n            var_4ch[7] = (*0x4d2370)[6];\n            var_20h[6] = (*0x4d2370)[7];\n            (*0x4d2370)[6] = *0x4d2560;\n            (*0x4d2370)[7] = *0x4d255c;\n            if ((var_15h != '\\0') && (*0x4d2370 != NULL)) {\n                ppiVar8 = (*0x4d2370)[5];\n                piVar14 = (*0x4d2370)[4] & 0xff00;\n                goto code_r0x0040fbc3;\n            }\n        }\n        ppiVar8 = NULL;\n        piVar14 = var_80h;\n    }\n    else {\n        ppiVar8 = piVar14[5];\n        var_80h = piVar14[4] & 0xff00U;\n        piVar14 = piVar14[4] & 0xff00U;\n        if (ppiVar8 == NULL) goto code_r0x0040fced;\n    }\ncode_r0x0040fbc3:\n    var_50h = ppiVar8;\n    iVar13 = var_24h;\n    if (ppiVar8 == NULL) {\ncode_r0x0040fc22:\n        iVar7 = var_1ch;\n        iVar1 = *(*(arg_8h[1] + iVar13 * 2) + 8);\n        iVar15 = iVar1;\n        if (((iVar1 == 0x41) || ((iVar1 == 0x52 || (iVar1 == 0x53)))) ||\n           ((iVar1 == 0x54 || ((iVar1 == 0x55 || (iVar1 == 0x56)))))) {\n            arg_ch = 0xffffffff;\n            var_24h = iVar13 + 1;\n            ppuVar17 = arg_8h;\n            iVar13 = fcn.00410540(arg_8h, &var_24h, arg_8h, 0xffffffff);\n            if (-1 < iVar13) {\n                if (var_25h != '\\0') {\n                    var_14h = NULL;\n                    var_ch = NULL;\n                    puVar9 = arg_8h[1];\n                    var_8h = 1;\n                    var_20h = NULL;\n                    var_30h = *(*(puVar9 + var_38h * 2 + -2) + 10);\n                    iVar1 = *(*(puVar9 + var_38h * 2) + 8);\n                    iVar13 = var_38h;\n                    while (iVar1 == 0x4e) {\n                        var_80h = iVar13 + 1;\n                        var_34h = *(*(puVar9 + iVar13 * 2 + 2) + 10);\n                        arg_ch = &var_80h;\n                        ppuVar17 = arg_8h;\n                        iVar7 = fcn.00410540(arg_8h, arg_ch, &var_14h, 0xffffffff);\n                        iVar13 = var_8h;\n                        puVar4 = var_ch;\n                        ppuVar10 = var_14h;\n                        if (iVar7 < 0) {\n                            if (var_ch != NULL) {\n                                *var_ch[3] = *var_ch[3] + -1;\n                                if (*var_ch[3] == 0) {\n                                    fcn.0041fd94(*var_ch);\n                                    fcn.0041fd4d(puVar4[3]);\n                                }\n                                fcn.0041fd4d(puVar4);\n                                var_ch = NULL;\n                            }\n                            if ((var_8h < 5) || (10 < var_8h - 5U)) goto code_r0x0040fcca;\n    // switch table (11 cases) at 0x454905\n                            switch(*((var_8h - 5U) * 4 + 0x454905)) {\n                            case 0x40fcca:\n                                goto code_r0x0040fcca;\n                            case 0x453f69:\n                                goto code_r0x00453f69;\n                            case 0x453fd2:\n                                goto code_r0x00453fd2;\n                            case 0x453ff2:\n                                goto code_r0x00453ff2;\n                            case 0x4543df:\n                                goto code_r0x004543df;\n                            case 0x454451:\n                                goto code_r0x00454451;\n                            case 0x4544d7:\n                                goto code_r0x004544d7;\n                            }\n                            goto code_r0x00454008;\n                        }\n                        ppuVar11 = var_14h;\n                        if (var_8h == 1) goto code_r0x00410040;\n                        if (9 < var_8h - 2U) goto code_r0x00410048;\n    // switch table (10 cases) at 0x45485d\n                        switch(*((var_8h - 2U) * 4 + 0x45485d)) {\n                        case 0x410048:\n                            goto code_r0x00410048;\n                        case 0x4541d7:\n                            cVar5 = fcn.0040c548();\n                            if (cVar5 == '\\0') {\n                                ppuVar11 = fcn.00426261(arg_8h_02);\n                                ppuVar10 = var_14h;\n                                iVar13 = var_8h;\n                            }\n                            else {\n                                fcn.004035b3(0x10);\n                                ppuVar11 = var_6ch;\n                                ppuVar10 = var_14h;\n                                iVar13 = var_8h;\n                            }\n                            break;\n                        case 0x45421a:\n                            ppuVar11 = fcn.00442010();\n                            ppuVar10 = var_14h;\n                            break;\n                        case 0x45422a:\n                            ppuVar11 = var_14h[1];\n                            break;\n                        case 0x454235:\n                            if (*var_14h < 9) {\n                                fcn.0046ebcd(&var_74h);\n                                ppuVar11 = var_74h;\n                                break;\n                            }\n                            goto code_r0x00410048;\n                        }\ncode_r0x00410040:\n                        if (ppuVar11 < 0) {\n                            ppuVar17 = 0x7b;\n                            fcn.004734ba(0x7b, var_34h);\n                            puVar4 = var_ch;\n                            if (var_ch != NULL) {\n                                *var_ch[3] = *var_ch[3] + -1;\n                                if (*var_ch[3] == 0) {\n                                    fcn.0041fd94(*var_ch);\n                                    fcn.0041fd4d(puVar4[3]);\n                                }\n                                fcn.0041fd4d(puVar4);\n                                var_ch = NULL;\n                            }\n                            if ((var_8h < 5) || (10 < var_8h - 5U)) goto code_r0x0040fcca;\n    // switch table (11 cases) at 0x4548d9\n                            switch(*((var_8h - 5U) * 4 + 0x4548d9)) {\n                            case 0x40fcca:\n                                goto code_r0x0040fcca;\n                            case 0x453f69:\n                                goto code_r0x00453f69;\n                            case 0x453fd2:\n                                goto code_r0x00453fd2;\n                            case 0x453ff2:\n                                goto code_r0x00453ff2;\n                            case 0x4543df:\n                                goto code_r0x004543df;\n                            case 0x454451:\n                                goto code_r0x00454451;\n                            case 0x4544d7:\n                                goto code_r0x004544d7;\n                            }\n                            goto code_r0x00454008;\n                        }\ncode_r0x00410048:\n                        if (*(*(arg_8h[1] + var_80h * 2) + 8) != 0x4f) {\n                            ppuVar17 = 0x7b;\n                            fcn.004734ba(0x7b, *(*(arg_8h[1] + var_80h * 2 + -2) + 10));\n                            puVar4 = var_ch;\n                            if (var_ch != NULL) {\n                                *var_ch[3] = *var_ch[3] + -1;\n                                if (*var_ch[3] == 0) {\n                                    fcn.0041fd94(*var_ch);\n                                    fcn.0041fd4d(puVar4[3]);\n                                }\n                                fcn.0041fd4d(puVar4);\n                                var_ch = NULL;\n                            }\n                            if ((var_8h < 5) || (10 < var_8h - 5U)) goto code_r0x0040fcca;\n    // switch table (11 cases) at 0x4548ad\n                            switch(*((var_8h - 5U) * 4 + 0x4548ad)) {\n                            case 0x40fcca:\n                                goto code_r0x0040fcca;\n                            case 0x453f69:\n                                goto code_r0x00453f69;\n                            case 0x453fd2:\n                                goto code_r0x00453fd2;\n                            case 0x453ff2:\n                                goto code_r0x00453ff2;\n                            case 0x4543df:\n                                goto code_r0x004543df;\n                            case 0x454451:\n                                goto code_r0x00454451;\n                            case 0x4544d7:\n                                goto code_r0x004544d7;\n                            }\n                            goto code_r0x00454008;\n                        }\n                        var_38h = var_80h + 1;\n                        if (iVar13 != 1) {\n    // switch table (10 cases) at 0x454885\n                            switch(iVar13) {\n                            case 2:\n                            case 7:\n                                break;\n                            case 3:\n                                ppuVar10 = fcn.00442010();\n                                break;\n                            case 4:\n                                cVar5 = fcn.0040c548();\n                                if (cVar5 == '\\0') {\n                                    ppuVar10 = fcn.00426261(arg_8h_03);\n                                }\n                                else {\n                                    fcn.004035b3(0x10);\n                                    ppuVar10 = var_44h;\n                                }\n                                break;\n                            default:\ncode_r0x00454300:\n                                ppuVar10 = NULL;\n                                break;\n                            case 9:\n                                ppuVar10 = ppuVar10 != '\\0';\n                                break;\n                            case 10:\n                                ppuVar10 = ppuVar10[1];\n                                break;\n                            case 0xb:\n                                if (8 < *ppuVar10) goto code_r0x00454300;\n                                fcn.0046ebcd(&var_54h);\n                                ppuVar10 = var_54h;\n                            }\n                        }\n                        iVar13 = var_38h;\n                        (&var_184h)[var_20h] = ppuVar10;\n                        var_20h = var_20h + 1;\n                        puVar9 = arg_8h[1];\n                        iVar1 = *(*(puVar9 + iVar13 * 2) + 8);\n                    }\n                    if (var_78h[3] == 0x5) {\n                        piVar14 = *var_78h;\n                    }\n                    else {\n                        piVar14 = NULL;\n                    }\n                    iVar13 = 0;\n                    *(*piVar14 + 0x210) = 0;\n                    if (0 < var_20h) {\n                        do {\n                            iVar7 = *(*piVar14 + 0x210);\n                            if (iVar7 < 0x40) {\n                                *(*piVar14 + 0x110 + iVar7 * 4) = (&var_184h)[iVar13];\n                                *(*piVar14 + 0x210) = *(*piVar14 + 0x210) + 1;\n                            }\n                            iVar13 = iVar13 + 1;\n                        } while (iVar13 < var_20h);\n                    }\n                    ppiVar8 = fcn.00411df0(piVar14, 2, 0);\n                    if (ppiVar8 == NULL) {\n                        ppuVar17 = 0x7a;\n                        fcn.004734ba(0x7a, var_30h);\n                        puVar4 = var_ch;\n                        if (var_ch != NULL) {\n                            *var_ch[3] = *var_ch[3] + -1;\n                            if (*var_ch[3] == 0) {\n                                fcn.0041fd94(*var_ch);\n                                fcn.0041fd4d(puVar4[3]);\n                            }\n                            fcn.0041fd4d(puVar4);\n                            var_ch = NULL;\n                        }\n                        if ((4 < var_8h) && (var_8h - 5U < 0xb)) {\n    // switch table (11 cases) at 0x454931\n                            switch(*((var_8h - 5U) * 4 + 0x454931)) {\n                            case 0x453f69:\ncode_r0x00453f69:\n                                if (var_14h != NULL) {\n                                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_14h);\n                                    fcn.0041fd4d(var_14h);\n                                }\n                                break;\n                            case 0x453fd2:\ncode_r0x00453fd2:\n                                fcn.0041fd94(var_14h[1]);\n                                fcn.0041fd4d(var_14h);\n                                break;\n                            case 0x453ff2:\ncode_r0x00453ff2:\n                                if (var_14h != NULL) {\n                                    ppuVar17 = var_14h;\n                                    fcn.0045fc42();\n                                }\n                                break;\n                            case 0x454008:\ncode_r0x00454008:\n                                if (var_14h != NULL) {\n                                    (***var_14h)(1);\n                                }\n                                break;\n                            case 0x4543df:\ncode_r0x004543df:\n                                if (var_14h != NULL) {\n                                    ppuVar17 = var_14h;\n                                    fcn.0041d57b();\n                                }\n                                break;\n                            case 0x454451:\ncode_r0x00454451:\n                                if (var_14h != NULL) {\n                                    ppuVar17 = var_14h;\n                                    fcn.0041e44a();\n                                }\n                                break;\n                            case 0x4544d7:\ncode_r0x004544d7:\n                                if (var_14h != NULL) {\n                                    ppuVar17 = var_14h;\n                                    fcn.00470d8b();\n                                }\n                            }\n                        }\n                        goto code_r0x0040fcca;\n                    }\n                    if (var_ch != NULL) {\n                        fcn.0041d962(var_ch);\n                        var_ch = NULL;\n                    }\n                    iVar7 = var_1ch;\n                    if ((4 < var_8h) && (var_8h - 5U < 0xb)) {\n    // switch table (11 cases) at 0x45495d\n                        switch(*((var_8h - 5U) * 4 + 0x45495d)) {\n                        case 0x454512:\n                            if (var_14h != NULL) {\n                                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_14h);\n                                fcn.0041fd4d(var_14h);\n                                iVar7 = var_1ch;\n                            }\n                            break;\n                        case 0x454536:\n                            if (var_14h != NULL) {\n                                fcn.0041e44a(var_14h);\n                                iVar7 = var_1ch;\n                            }\n                            break;\n                        case 0x45454c:\n                            if (var_14h != NULL) {\n                                fcn.0041d57b(var_14h);\n                                iVar7 = var_1ch;\n                            }\n                            break;\n                        case 0x454562:\n                            fcn.0041fd94(var_14h[1]);\n                            fcn.0041fd4d(var_14h);\n                            iVar7 = var_1ch;\n                            break;\n                        case 0x454582:\n                            if (var_14h != NULL) {\n                                fcn.0045fc42(var_14h);\n                                iVar7 = var_1ch;\n                            }\n                            break;\n                        case 0x454598:\n                            if (var_14h != NULL) {\n                                (***var_14h)(1);\n                                iVar7 = var_1ch;\n                            }\n                            break;\n                        case 0x4545ae:\n                            if (var_14h != NULL) {\n                                fcn.00470d8b(var_14h);\n                                iVar7 = var_1ch;\n                            }\n                        }\n                    }\n                }\n                iVar13 = *(arg_8h[1] + var_24h * 4);\n                if (*(iVar13 + 8) == 0x7f) {\n                    if (ppiVar8 == NULL) {\n                        if ((*(iVar7 + 0x104) == '\\0') && (iVar15 == 0x41)) {\n                            ppuVar17 = var_2ch;\n                            fcn.0040c117(var_2ch, &var_64h, 0, 0);\n                        }\n                        else {\n                            ppuVar17 = 0x79;\n                            fcn.004734ba(0x79, *(*arg_8h[1] + 10));\n                        }\n                    }\n                    else if (iVar15 == 0x41) {\n                        if (ppiVar8 != &var_64h) {\n                            piVar14 = ppiVar8[3];\n                            if ((piVar14 == 0x4) && (var_58h == 4)) {\n                                if (ppiVar8[2] != var_5ch) {\n                                    ppuVar17 = var_5ch;\n                                    fcn.0040c1c3(var_5ch);\n                                }\n                            }\n                            else {\n                                piVar12 = ppiVar8[2];\n                                if (piVar12 != NULL) {\n                                    *piVar12[3] = *piVar12[3] + -1;\n                                    if (*piVar12[3] == 0) {\n                                        fcn.0041fd94(*piVar12);\n                                        fcn.0041fd4d(piVar12[3]);\n                                    }\n                                    fcn.0041fd4d(piVar12);\n                                    piVar14 = ppiVar8[3];\n                                    ppiVar8[2] = NULL;\n                                }\n                                if (4 < piVar14) {\n    // switch table (11 cases) at 0x410514\n                                    switch(piVar14) {\n                                    case 0x5:\n                                        ppiVar18 = *ppiVar8;\n                                        if (ppiVar18 != NULL) {\n                                            fcn.0041d57b();\n                                            arg_ch = ppiVar18;\n                                        }\n                                        break;\n                                    case 0x8:\n                                        if (*ppiVar8 != NULL) {\n                                            (*_sym.imp.OLEAUT32.dll_VariantCopy)(*ppiVar8);\n                                            fcn.0041fd4d(*ppiVar8);\n                                        }\n                                        break;\n                                    case 0xa:\n                                        ppiVar18 = *ppiVar8;\n                                        if (ppiVar18 != NULL) {\n                                            fcn.0041e44a();\n                                            arg_ch = ppiVar18;\n                                        }\n                                        break;\n                                    case 0xb:\n                                        fcn.0041fd94((*ppiVar8)[1]);\n                                        fcn.0041fd4d(*ppiVar8);\n                                        break;\n                                    case 0xc:\n                                        ppiVar18 = *ppiVar8;\n                                        if (ppiVar18 != NULL) {\n                                            fcn.0045fc42();\n                                            arg_ch = ppiVar18;\n                                        }\n                                        break;\n                                    case 0xd:\n                                    case 0xe:\n                                        ppiVar18 = *ppiVar8;\n                                        if (ppiVar18 != NULL) {\n                                            fcn.00470d8b();\n                                            arg_ch = ppiVar18;\n                                        }\n                                        break;\n                                    case 0xf:\n                                        if (*ppiVar8 != NULL) {\n                                            (****ppiVar8)(1);\n                                        }\n                                    }\n                                }\n                                ppuVar17 = &var_64h;\n                                ppiVar8[3] = 0x1;\n                                *ppiVar8 = NULL;\n                                fcn.004119e0(ppuVar17);\n                            }\n                        }\n                    }\n                    else {\n    // switch table (5 cases) at 0x4104d4\n                        switch(iVar15) {\n                        case 0x52:\n                            ppuVar17 = &var_64h;\n                            fcn.0040cb70(ppuVar17);\n                            break;\n                        case 0x53:\n                            ppuVar17 = &var_64h;\n                            fcn.0041b4a2(ppuVar17);\n                            break;\n                        case 0x54:\n                            ppuVar17 = &var_64h;\n                            fcn.00470d3c(ppuVar17);\n                            break;\n                        case 0x55:\n                            ppuVar17 = &var_64h;\n                            fcn.0041b451(ppuVar17);\n                            break;\n                        case 0x56:\n                            ppuVar17 = &var_64h;\n                            fcn.00470fde(ppuVar17);\n                        }\n                    }\n                }\n                else {\n                    ppuVar17 = 0x72;\n                    fcn.004734ba(0x72, *(iVar13 + 10));\n                }\n            }\n        }\n        else {\n            arg_ch = *(*(arg_8h[1] + iVar13 * 2) + 10);\n            ppuVar17 = 0x80;\n            fcn.004734ba(0x80, arg_ch);\n        }\n    }\n    else if ((piVar14 & 0x100) == 0) {\n        do {\n            puVar9 = arg_8h[1];\n            iVar1 = *(*(puVar9 + var_24h * 2) + 8);\n            iVar13 = var_24h;\n            while (iVar1 == 0x4e) {\n                if (ppiVar8[3] == 0x5) {\n                    var_14h = NULL;\n                    var_ch = NULL;\n                    var_8h = 1;\n                    var_38h = iVar13;\n                    var_78h = ppiVar8;\n                    var_20h = NULL;\n                    var_30h = *(*(puVar9 + iVar13 * 2 + -2) + 10);\n                    iVar1 = *(*(puVar9 + iVar13 * 2) + 8);\n                    while (iVar1 == 0x4e) {\n                        var_24h = iVar13 + 1;\n                        arg_ch = 0xffffffff;\n                        var_34h = *(*(puVar9 + iVar13 * 2 + 2) + 10);\n                        ppuVar17 = arg_8h;\n                        iVar7 = fcn.00410540(arg_8h, &var_24h, arg_8h, 0xffffffff);\n                        iVar13 = var_8h;\n                        puVar4 = var_ch;\n                        ppuVar10 = var_14h;\n                        if (iVar7 < 0) {\n                            if (var_ch != NULL) {\n                                *var_ch[3] = *var_ch[3] + -1;\n                                if (*var_ch[3] == 0) {\n                                    fcn.0041fd94(*var_ch);\n                                    fcn.0041fd4d(puVar4[3]);\n                                }\n                                fcn.0041fd4d(puVar4);\n                                var_ch = NULL;\n                            }\n                            if ((var_8h < 5) || (10 < var_8h - 5U)) goto code_r0x0040fcca;\n    // switch table (11 cases) at 0x454805\n                            switch(*((var_8h - 5U) * 4 + 0x454805)) {\n                            case 0x40fcca:\n                                goto code_r0x0040fcca;\n                            case 0x453f69:\n                                goto code_r0x00453f69;\n                            case 0x453f8d:\n                                goto code_r0x00453f8d;\n                            case 0x453fb0:\n                                goto code_r0x00453fb0;\n                            case 0x453fd2:\n                                goto code_r0x00453fd2;\n                            case 0x453ff2:\n                                goto code_r0x00453ff2;\n                            case 0x45414c:\n                                goto code_r0x0045414c;\n                            }\n                            goto code_r0x00454008;\n                        }\n                        ppuVar17 = var_14h;\n                        if (var_8h == 1) goto code_r0x0040fec5;\n                        if (9 < var_8h - 2U) goto code_r0x0040fecd;\n    // switch table (10 cases) at 0x454731\n                        switch(*((var_8h - 2U) * 4 + 0x454731)) {\n                        case 0x40fecd:\n                            goto code_r0x0040fecd;\n                        case 0x453c7d:\n                            cVar5 = fcn.0040c548();\n                            if (cVar5 == '\\0') {\n                                ppuVar17 = fcn.00426261(arg_8h_00);\n                                ppuVar10 = var_14h;\n                                iVar13 = var_8h;\n                            }\n                            else {\n                                fcn.004035b3(0x10);\n                                ppuVar17 = var_6ch;\n                                ppuVar10 = var_14h;\n                                iVar13 = var_8h;\n                            }\n                            break;\n                        case 0x453cc0:\n                            ppuVar17 = fcn.00442010();\n                            ppuVar10 = var_14h;\n                            break;\n                        case 0x453cd0:\n                            ppuVar17 = var_14h[1];\n                            break;\n                        case 0x453cdb:\n                            if (*var_14h < 9) {\n                                fcn.0046ebcd(&var_74h);\n                                ppuVar17 = var_74h;\n                                break;\n                            }\n                            goto code_r0x0040fecd;\n                        }\ncode_r0x0040fec5:\n                        if (ppuVar17 < 0) {\n                            ppuVar17 = 0x7b;\n                            fcn.004734ba(0x7b, var_34h);\n                            puVar4 = var_ch;\n                            if (var_ch != NULL) {\n                                *var_ch[3] = *var_ch[3] + -1;\n                                if (*var_ch[3] == 0) {\n                                    fcn.0041fd94(*var_ch);\n                                    fcn.0041fd4d(puVar4[3]);\n                                }\n                                fcn.0041fd4d(puVar4);\n                                var_ch = NULL;\n                            }\n                            if ((var_8h < 5) || (10 < var_8h - 5U)) goto code_r0x0040fcca;\n    // switch table (11 cases) at 0x4547d9\n                            switch(*((var_8h - 5U) * 4 + 0x4547d9)) {\n                            case 0x40fcca:\n                                goto code_r0x0040fcca;\n                            case 0x453f69:\n                                goto code_r0x00453f69;\n                            case 0x453f8d:\n                                goto code_r0x00453f8d;\n                            case 0x453fb0:\n                                goto code_r0x00453fb0;\n                            case 0x453fd2:\n                                goto code_r0x00453fd2;\n                            case 0x453ff2:\n                                goto code_r0x00453ff2;\n                            case 0x45414c:\n                                goto code_r0x0045414c;\n                            }\n                            goto code_r0x00454008;\n                        }\ncode_r0x0040fecd:\n                        if (*(*(arg_8h[1] + var_24h * 2) + 8) != 0x4f) {\n                            ppuVar17 = 0x7b;\n                            fcn.004734ba(0x7b, *(*(arg_8h[1] + var_24h * 2 + -2) + 10));\n                            puVar4 = var_ch;\n                            if (var_ch != NULL) {\n                                *var_ch[3] = *var_ch[3] + -1;\n                                if (*var_ch[3] == 0) {\n                                    fcn.0041fd94(*var_ch);\n                                    fcn.0041fd4d(puVar4[3]);\n                                }\n                                fcn.0041fd4d(puVar4);\n                                var_ch = NULL;\n                            }\n                            if ((var_8h < 5) || (10 < var_8h - 5U)) goto code_r0x0040fcca;\n    // switch table (11 cases) at 0x4547ad\n                            switch(*((var_8h - 5U) * 4 + 0x4547ad)) {\n                            case 0x40fcca:\n                                goto code_r0x0040fcca;\n                            case 0x453f69:\n                                goto code_r0x00453f69;\n                            case 0x453f8d:\n                                goto code_r0x00453f8d;\n                            case 0x453fb0:\n                                goto code_r0x00453fb0;\n                            case 0x453fd2:\n                                goto code_r0x00453fd2;\n                            case 0x453ff2:\n                                goto code_r0x00453ff2;\n                            case 0x45414c:\n                                goto code_r0x0045414c;\n                            }\n                            goto code_r0x00454008;\n                        }\n                        var_24h = var_24h + 1;\n                        if (iVar13 != 1) {\n    // switch table (10 cases) at 0x454759\n                            switch(iVar13) {\n                            case 2:\n                            case 7:\n                                break;\n                            case 3:\n                                ppuVar10 = fcn.00442010();\n                                break;\n                            case 4:\n                                cVar5 = fcn.0040c548();\n                                if (cVar5 == '\\0') {\n                                    ppuVar10 = fcn.00426261(arg_8h_01);\n                                }\n                                else {\n                                    fcn.004035b3(0x10);\n                                    ppuVar10 = var_84h;\n                                }\n                                break;\n                            default:\ncode_r0x00453d9d:\n                                ppuVar10 = NULL;\n                                break;\n                            case 9:\n                                ppuVar10 = ppuVar10 != '\\0';\n                                break;\n                            case 10:\n                                ppuVar10 = ppuVar10[1];\n                                break;\n                            case 0xb:\n                                if (8 < *ppuVar10) goto code_r0x00453d9d;\n                                fcn.0046ebcd(&var_44h);\n                                ppuVar10 = var_44h;\n                            }\n                        }\n                        (&var_184h)[var_20h] = ppuVar10;\n                        puVar9 = arg_8h[1];\n                        var_20h = var_20h + 1;\n                        iVar13 = var_24h;\n                        iVar1 = *(*(puVar9 + var_24h * 2) + 8);\n                    }\n                    if (ppiVar8[3] == 0x5) {\n                        piVar14 = *ppiVar8;\n                    }\n                    else {\n                        piVar14 = NULL;\n                    }\n                    iVar7 = 0;\n                    *(*piVar14 + 0x210) = 0;\n                    if (0 < var_20h) {\n                        do {\n                            iVar15 = *(*piVar14 + 0x210);\n                            if (iVar15 < 0x40) {\n                                *(*piVar14 + 0x110 + iVar15 * 4) = (&var_184h)[iVar7];\n                                *(*piVar14 + 0x210) = *(*piVar14 + 0x210) + 1;\n                            }\n                            iVar7 = iVar7 + 1;\n                        } while (iVar7 < var_20h);\n                    }\n                    ppiVar8 = fcn.00411df0(piVar14, 1, 0);\n                    var_50h = ppiVar8;\n                    if (ppiVar8 == NULL) {\n                        ppuVar17 = 0x7a;\n                        arg_ch = var_30h;\n                        fcn.004734ba(0x7a, var_30h);\n                        puVar4 = var_ch;\n                        if (var_ch != NULL) {\n                            *var_ch[3] = *var_ch[3] + -1;\n                            if (*var_ch[3] == 0) {\n                                fcn.0041fd94(*var_ch);\n                                fcn.0041fd4d(puVar4[3]);\n                            }\n                            fcn.0041fd4d(puVar4);\n                            var_ch = NULL;\n                        }\n                        if ((var_8h < 5) || (10 < var_8h - 5U)) goto code_r0x0040fcca;\n    // switch table (11 cases) at 0x454831\n                        switch(*((var_8h - 5U) * 4 + 0x454831)) {\n                        case 0x40fcca:\n                            break;\n                        case 0x453f69:\n                            goto code_r0x00453f69;\n                        case 0x453f8d:\ncode_r0x00453f8d:\n                            ppuVar10 = var_14h;\n                            if (var_14h != NULL) {\n                                fcn.0040b1ff();\n                                fcn.0041fd4d(ppuVar10);\n                            }\n                            break;\n                        case 0x453fb0:\ncode_r0x00453fb0:\n                            ppuVar10 = var_14h;\n                            if (var_14h != NULL) {\n                                fcn.0041d593();\n                                fcn.0041fd4d(ppuVar10);\n                            }\n                            break;\n                        case 0x453fd2:\n                            goto code_r0x00453fd2;\n                        case 0x453ff2:\n                            goto code_r0x00453ff2;\n                        case 0x454008:\n                            goto code_r0x00454008;\n                        case 0x45414c:\ncode_r0x0045414c:\n                            ppuVar10 = var_14h;\n                            if (var_14h != NULL) {\n                                fcn.0040b1ff();\n                                fcn.0041fd4d(ppuVar10);\n                            }\n                        }\n                        goto code_r0x0040fcca;\n                    }\n                    if (var_ch != NULL) {\n                        fcn.0041d962(var_ch);\n                        var_ch = NULL;\n                    }\n                    ppuVar17 = var_14h;\n                    if ((4 < var_8h) && (var_8h - 5U < 0xb)) {\n    // switch table (11 cases) at 0x454781\n                        switch(*((var_8h - 5U) * 4 + 0x454781)) {\n                        case 0x453dd0:\n                            if (var_14h != NULL) {\n                                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_14h);\n                                ppuVar17 = var_14h;\n                                goto code_r0x00453e6f;\n                            }\n                            break;\n                        case 0x453dec:\n                            if (var_14h != NULL) {\n                                fcn.0040b1ff();\n                                goto code_r0x00453e6f;\n                            }\n                            break;\n                        case 0x453e03:\n                            if (var_14h != NULL) {\n                                fcn.0041d593();\n                                goto code_r0x00453e6f;\n                            }\n                            break;\n                        case 0x453e19:\n                            fcn.0041fd94(var_14h[1]);\n                            ppuVar17 = var_14h;\ncode_r0x00453e6f:\n                            fcn.0041fd4d(ppuVar17);\n                            break;\n                        case 0x453e2e:\n                            if (var_14h != NULL) {\n                                fcn.0045fc42(var_14h);\n                            }\n                            break;\n                        case 0x453e44:\n                            if (var_14h != NULL) {\n                                (***var_14h)(1);\n                            }\n                            break;\n                        case 0x453e5a:\n                            if (var_14h != NULL) {\n                                fcn.0040b1ff();\n                                goto code_r0x00453e6f;\n                            }\n                        }\n                    }\n                    var_8h = 1;\n                    var_14h = NULL;\n                    var_25h = '\\x01';\n                }\n                else {\n                    if (ppiVar8[3] != 0xf) {\n                        arg_ch = *(*(puVar9 + iVar13 * 2) + 10);\n                        ppuVar17 = 0x7c;\n                        fcn.004734ba(0x7c, arg_ch);\n                        goto code_r0x0040fcca;\n                    }\n                    arg_ch = 0x8;\n                    ppuVar17 = arg_8h;\n                    var_78h = ppiVar8;\n                    iVar13 = fcn.00401d5f(arg_8h, &var_24h, arg_8h, 8);\n                    if (iVar13 < 0) goto code_r0x0040fcca;\n                    var_25h = '\\0';\n                    iVar13 = var_24h;\n                    ppiVar8 = var_50h;\n                }\n                puVar9 = arg_8h[1];\n                iVar1 = *(*(puVar9 + iVar13 * 2) + 8);\n            }\n            if ((*(*(puVar9 + iVar13 * 2) + 8) == 0x35) &&\n               (cVar5 = fcn.00485520(),  puVar9 = extraout_EDX,  cVar5 == '\\0')) {\n                arg_ch = 0x1;\n                ppuVar17 = 0xa9;\n                iVar7 = fcn.004846fb(0xa9, 0, 0xa9, 1);\n                if (iVar7 < 0) {\n                    ppuVar17 = 0xa9;\n                    fcn.004734ba(0xa9, *(*(arg_8h[1] + iVar13 * 2) + 10));\n                }\n                break;\n            }\n            piVar14 = ppiVar8[3];\n            if ((((piVar14 != 0x8) && (piVar14 != 0xc)) && (piVar14 != 0xf)) ||\n               ((*(*(puVar9 + iVar13 * 2) + 8) != 0x35 && (*(*(puVar9 + iVar13 * 2) + 8) != 0x47))))\n            goto code_r0x0040fc22;\n            ppuVar17 = arg_8h;\n            arg_ch = ppiVar8;\n            iVar13 = fcn.004867e8(arg_8h, arg_8h, ppiVar8);\n        } while (iVar13 == 1);\n    }\n    else {\n        arg_ch = *(*arg_8h[1] + 10);\n        ppuVar17 = 0xa3;\n        fcn.004734ba(0xa3, arg_ch);\n    }\ncode_r0x0040fcca:\n    ppuVar10 = var_5ch;\n    if (var_5ch != NULL) {\n        *var_5ch[3] = *var_5ch[3] + -1;\n        if (*var_5ch[3] == 0) {\n            fcn.0041fd94(*var_5ch, ppuVar17, arg_ch);\n            fcn.0041fd4d(ppuVar10[3]);\n        }\n        fcn.0041fd4d(ppuVar10);\n        var_5ch = NULL;\n    }\n    if ((4 < var_58h) && (var_58h - 5U < 0xb)) {\n    // switch table (11 cases) at 0x4104e8\n        switch(*((var_58h - 5U) * 4 + 0x4104e8)) {\n        case 0x4103f0:\n            if (var_64h != NULL) {\n                fcn.0041d57b(var_64h);\n                return;\n            }\n            break;\n        case 0x4104ba:\n            if (var_64h != NULL) {\n                (***var_64h)(1);\n                return;\n            }\n            break;\n        case 0x4546ab:\n            if (var_64h != NULL) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_64h);\n                fcn.0041fd4d(var_64h);\n            }\n            break;\n        case 0x4546cf:\n            if (var_64h != NULL) {\n                fcn.0041e44a(var_64h);\n            }\n            break;\n        case 0x4546e5:\n            fcn.0041fd94(var_64h[1], ppuVar17);\n            fcn.0041fd4d(var_64h);\n            break;\n        case 0x454705:\n            if (var_64h != NULL) {\n                fcn.0045fc42(var_64h);\n            }\n            break;\n        case 0x45471b:\n            if (var_64h != NULL) {\n                fcn.00470d8b(var_64h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 13890
    },
    "00410540": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00410540(int32_t **arg_8h, int32_t **arg_ch, int32_t **arg_10h, int32_t *arg_14h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    int16_t iVar3;\n    int32_t *piVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t **ppiVar7;\n    int32_t **ppiVar8;\n    int32_t iVar9;\n    uchar *puVar10;\n    uint64_t *puVar11;\n    uint *puVar12;\n    int32_t **ppiVar13;\n    int32_t **in_ECX;\n    uint16_t **ppuVar14;\n    int32_t **unaff_EBX;\n    int32_t *piVar15;\n    uint16_t *puVar16;\n    uint16_t **ppuVar17;\n    uint16_t *puVar18;\n    int32_t **unaff_EDI;\n    int32_t *piVar19;\n    int32_t in_FS_OFFSET;\n    bool bVar20;\n    ulong uVar21;\n    uint uVar22;\n    char16_t *arg_10h_00;\n    int32_t **in_stack_fffffee0;\n    int32_t **in_stack_fffffee4;\n    int32_t **ppiVar23;\n    uint uVar24;\n    int32_t **ppiVar25;\n    int32_t **in_stack_fffffefc;\n    int32_t **ppiVar26;\n    int32_t *piStack252;\n    uint uStack248;\n    int32_t **ppiStack244;\n    int32_t **ppiStack240;\n    int32_t **ppiStack236;\n    int32_t **ppiStack232;\n    int32_t **ppiStack228;\n    uint uStack224;\n    uint uStack220;\n    int32_t **ppiStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    int32_t **ppiStack200;\n    uint uStack196;\n    int32_t **ppiStack192;\n    uint uStack188;\n    uint uStack184;\n    int32_t **ppiStack180;\n    char cStack176;\n    uchar uStack175;\n    int32_t **ppiStack172;\n    int32_t **ppiStack168;\n    int32_t **ppiStack164;\n    int32_t **ppiStack160;\n    uint64_t uStack156;\n    int32_t **ppiStack148;\n    uint uStack144;\n    int32_t iStack132;\n    int32_t **ppiStack128;\n    int32_t iStack124;\n    int32_t *piStack120;\n    int32_t *piStack116;\n    int32_t *piStack112;\n    int32_t *piStack108;\n    int32_t *piStack104;\n    int32_t *apiStack96 [2];\n    uint uStack88;\n    uint uStack84;\n    int32_t *apiStack80 [2];\n    uint uStack72;\n    uint uStack68;\n    int32_t *apiStack64 [4];\n    uint uStack48;\n    uint uStack40;\n    uint uStack36;\n    uint uStack28;\n    \n    iStack132 = **(in_FS_OFFSET + 0x2c);\n    if ((*(iStack132 + 4) < *0x4d2580) && (fcn.004201c2(0x4d2580),  *0x4d2580 == -1)) {\n        fcn.00420023(0x44241b);\n        fcn.00420178(0x4d2580);\n    }\n    uStack188 = CONCAT22(uStack188._2_2_, 1);\n    ppiVar25 = 0x8;\n    uStack248 = uStack248 & 0xffffff;\n    ppiStack244 = arg_10h;\n    ppiStack232 = arg_10h;\n    ppiStack216 = NULL;\n    ppiStack228 = NULL;\n    ppiVar26 = NULL;\n    uStack224 = NULL;\n    uStack220 = CONCAT22(uStack220._2_2_, 1);\n    ppiVar23 = 0x4105ae;\n    ppiStack240 = fcn.0041fd5b(8, unaff_EDI);\n    piVar19 = *arg_ch;\n    uStack196 = 0x1;\n    *ppiStack240 = 0x14;\n    ppiStack240[1] = NULL;\n    piStack252 = 0x17;\n    ppiStack160 = _sym.imp.OLEAUT32.dll_VariantCopy;\n    uStack184 = *(arg_8h[1][piVar19] + 10);\n    ppiStack236 = in_ECX;\n    ppiStack192 = ppiStack240;\ncode_r0x004105f4:\n    ppiVar13 = ppiStack216;\n    piVar19 = *arg_ch;\n    if (piVar19 == arg_14h) {\ncode_r0x0041064d:\n        piVar15 = 0x14;\n        piStack252 = piVar15;\n        goto code_r0x00410656;\n    }\n    piVar15 = arg_8h[1];\n    piVar4 = piVar15[piVar19];\n    if (*(piVar4 + 2) == 0x7f) goto code_r0x0041064d;\n    uVar6 = *(piVar4 + 2);\n    ppiVar7 = uStack248;\n    if (uVar6 == 0x33) {\n        piStack252 = 0x16;\n        ppiVar8 = ppiVar26;\n        if (ppiStack216 == NULL) {\n            if (arg_10h != 0x4d02a0) {\n                piVar19 = arg_10h[3];\n                if ((piVar19 == 0x4) && (*0x4d02ac == 4)) {\n                    if (arg_10h[2] != *0x4d02a8) {\n                        ppiVar25 = *0x4d02a8;\n                        fcn.0040c1c3(*0x4d02a8);\n                        ppiVar8 = ppiVar26;\n                    }\n                }\n                else {\n                    piVar15 = arg_10h[2];\n                    if (piVar15 != NULL) {\n                        *piVar15[3] = *piVar15[3] + -1;\n                        if (*piVar15[3] == 0) {\n                            fcn.0041fd94(*piVar15);\n                            fcn.0041fd4d(piVar15[3]);\n                        }\n                        ppiVar25 = 0x10;\n                        fcn.0041fd4d(piVar15);\n                        piVar19 = arg_10h[3];\n                        arg_10h[2] = NULL;\n                    }\n                    if (4 < piVar19) {\n    // switch table (11 cases) at 0x45592d\n                        switch(piVar19) {\n                        case 0x5:\n                            piVar19 = *arg_10h;\n                            if (piVar19 != NULL) {\n                                fcn.0041d593();\n                                ppiVar25 = 0x4;\n                                goto code_r0x004553ca;\n                            }\n                            break;\n                        case 0x8:\n                            if (*arg_10h != NULL) {\n                                (*ppiStack160)(*arg_10h);\n                                ppiVar25 = 0x10;\n                                piVar19 = *arg_10h;\n                                goto code_r0x004553ca;\n                            }\n                            break;\n                        case 0xa:\n                            piVar19 = *arg_10h;\n                            if (piVar19 != NULL) {\n                                fcn.0040b1ff();\n                                ppiVar25 = 0x18;\n                                goto code_r0x004553ca;\n                            }\n                            break;\n                        case 0xb:\n                            fcn.0041fd94((*arg_10h)[1]);\n                            ppiVar25 = 0x8;\n                            piVar19 = *arg_10h;\ncode_r0x004553ca:\n                            fcn.0041fd4d(piVar19);\n                            break;\n                        case 0xc:\n                            ppiVar23 = *arg_10h;\n                            if (ppiVar23 != NULL) {\n                                fcn.0045fc42();\n                                ppiVar25 = ppiVar23;\n                            }\n                            break;\n                        case 0xd:\n                        case 0xe:\n                            piVar19 = *arg_10h;\n                            if (piVar19 != NULL) {\n                                fcn.0040b1ff();\n                                ppiVar25 = 0x14;\n                                goto code_r0x004553ca;\n                            }\n                            break;\n                        case 0xf:\n                            if (*arg_10h != NULL) {\n                                ppiVar25 = 0x1;\n                                (****arg_10h)();\n                            }\n                        }\n                    }\n                    arg_10h[3] = 0x1;\n                    *arg_10h = NULL;\n                    fcn.004119e0(0x4d02a0);\n                    ppiVar8 = ppiVar26;\n                }\n            }\n        }\n        else if (uStack220._1_1_ == '\\0') {\n            ppiVar26 = fcn.0041fd5b(0x18, unaff_EDI);\n            ppiVar25 = 0x4d02a0;\n            ppiVar26[2] = NULL;\n            fcn.004119e0(0x4d02a0);\n            ppiVar26[4] = in_stack_fffffefc;\n            in_stack_fffffefc = ppiVar26;\n            ppiStack228 = ppiVar26;\n        }\n        else if (ppiVar26 != 0x4d02a0) {\n            piVar19 = ppiVar26[3];\n            if ((piVar19 == 0x4) && (*0x4d02ac == 4)) {\n                if (ppiVar26[2] != *0x4d02a8) {\n                    ppiVar25 = *0x4d02a8;\n                    fcn.0040c1c3(*0x4d02a8);\n                    ppiVar8 = ppiVar26;\n                }\n            }\n            else {\n                if (ppiVar26[2] != NULL) {\n                    fcn.0041d962(ppiVar26[2]);\n                    in_stack_fffffefc[2] = NULL;\n                    piVar19 = in_stack_fffffefc[3];\n                }\n                if (4 < piVar19) {\n    // switch table (11 cases) at 0x455959\n                    switch(piVar19) {\n                    case 0x5:\n                        piVar19 = *ppiVar26;\n                        if (piVar19 != NULL) {\n                            fcn.0041d593();\n                            goto code_r0x004554bd;\n                        }\n                        break;\n                    case 0x8:\n                        if (*ppiVar26 != NULL) {\n                            (*ppiStack160)(*ppiVar26);\n                            piVar19 = *0x16;\n                            goto code_r0x004554bd;\n                        }\n                        break;\n                    case 0xa:\n                        piVar19 = *ppiVar26;\n                        if (piVar19 != NULL) {\n                            fcn.0040b1ff();\n                            goto code_r0x004554bd;\n                        }\n                        break;\n                    case 0xb:\n                        fcn.0041fd94((*ppiVar26)[1]);\n                        piVar19 = *ppiVar26;\ncode_r0x004554bd:\n                        fcn.0041fd4d(piVar19);\n                        break;\n                    case 0xc:\n                        if (*ppiVar26 != NULL) {\n                            fcn.0045fc42();\n                        }\n                        break;\n                    case 0xd:\n                    case 0xe:\n                        piVar19 = *ppiVar26;\n                        if (piVar19 != NULL) {\n                            fcn.0040b1ff();\n                            goto code_r0x004554bd;\n                        }\n                        break;\n                    case 0xf:\n                        if (*ppiVar26 != NULL) {\n                            (****ppiVar26)(1);\n                        }\n                    }\n                }\n                *0x22 = 1;\n                *0x16 = NULL;\n                ppiVar25 = 0x4111fa;\n                fcn.004119e0(0x4d02a0);\n                ppiVar8 = ppiVar26;\n            }\n        }\n        uStack220 = ppiVar13 + 1;\n        ppiStack128 = arg_10h;\n        if ((uStack220 != 0x1) && (ppiStack128 = ppiVar26,  uStack212._1_1_ != '\\0')) {\n            ppiStack128 = ppiVar26[4];\n        }\n        ppuVar17 = *arg_8h[1][*arg_ch];\n        uStack156 = uStack156 & 0xffffffff00000000 | ZEXT48(ppuVar17);\n        uStack208 = uStack220;\n        if (*0x4d2380 == 0) {\ncode_r0x00410b72:\n            if (*0x4d2370 != NULL) {\n                uStack204 = uStack204 & 0xffffff;\n                if ((*(iStack124 + 4) < *0x4d2540) && (fcn.004201c2(0x4d2540),  *0x4d2540 == -1)) {\n                    fcn.0040c25d();\n                    fcn.00420023(0x4423e9);\n                    fcn.00420178(0x4d2540);\n                }\n                *0x4d2560 = NULL;\n                *0x4d255c = NULL;\n                ppiStack168 = 0x4d2544;\n                ppiStack164 = 0x4d2544;\ncode_r0x00410bc1:\n                while( true ) {\n                    ppiVar23 = (*0x4d2370)[1];\n                    ppiStack192 = uStack156[1];\n                    if (ppiStack192 != NULL) break;\n                    if (ppiVar23 == NULL) {\ncode_r0x00455584:\n                        if (ppiStack192 == NULL) goto code_r0x00410bdf;\n                        goto code_r0x00410cc3;\n                    }\ncode_r0x00410db4:\n                    ppiVar23 = (*0x4d2370)[6];\n                    uStack196 = *0x4d2370 + 6;\n                    if (ppiVar23 == NULL) goto code_r0x00410c56;\n                    if (ppiVar23[1] < ppiStack192) {\n                        ppiStack192 = ppiVar23[1];\n                    }\n                    piVar19 = *ppiVar23;\n                    puVar16 = *uStack156;\n                    for (ppiStack200 = ppiStack192; ppiStack200 != NULL; ppiStack200 = ppiStack200 + -1) {\n                        ppiStack172 = *puVar16;\n                        uVar1 = *piVar19;\n                        uStack144 = uVar1;\n                        if (*puVar16 != uVar1) {\n                            if (*puVar16 < uVar1) goto code_r0x00410e24;\n                            goto code_r0x00410e43;\n                        }\n                        puVar16 = puVar16 + 1;\n                        piVar19 = piVar19 + 2;\n                    }\n                    if (ppiStack192 < ppiVar23[1]) {\ncode_r0x00410e24:\n                        *uStack196 = ppiVar23[7];\n                        ppiVar23[7] = *0x4d2370;\n                        *0x4d2370 = ppiVar23;\n                        if (ppiVar23[6] == NULL) goto code_r0x00410c56;\n                    }\ncode_r0x00410e43:\n                    ppiStack168[6] = *0x4d2370;\n                    ppiStack168 = *0x4d2370;\n                    *0x4d2370 = (*0x4d2370)[6];\n                }\n                if (ppiVar23 == NULL) goto code_r0x00455584;\ncode_r0x00410bdf:\n                piVar19 = **0x4d2370;\n                puVar16 = *uStack156;\n                if (ppiStack192 < ppiVar23) {\n                    for (; ppiVar23 != NULL; ppiVar23 = ppiVar23 + -1) {\n                        ppiStack172 = *puVar16;\n                        uVar1 = *piVar19;\n                        uStack144 = uVar1;\n                        if (*puVar16 != uVar1) {\n                            bVar20 = *puVar16 < uVar1;\n                            goto code_r0x00410c41;\n                        }\n                        puVar16 = puVar16 + 1;\n                        piVar19 = piVar19 + 2;\n                    }\n                }\n                else {\n                    ppiVar23 = ppiStack192;\n                    if (ppiStack192 != NULL) {\ncode_r0x00410bf0:\n                        ppiStack172 = *puVar16;\n                        uVar1 = *piVar19;\n                        uStack144 = uVar1;\n                        if (*puVar16 == uVar1) goto code_r0x00410c0c;\n                        bVar20 = *puVar16 < uVar1;\ncode_r0x00410c41:\n                        iVar9 = (-bVar20 & 0xfffffffe) + 1;\n                        goto code_r0x00410c47;\n                    }\n                }\ncode_r0x00410c17:\n                iVar9 = 0;\ncode_r0x00410c47:\n                if (iVar9 < 0) goto code_r0x00410db4;\n                if (0 < iVar9) {\ncode_r0x00410cc3:\n                    ppiStack148 = *0x4d2370 + 7;\n                    ppiStack200 = *ppiStack148;\n                    if (ppiStack200 == NULL) goto code_r0x00410c56;\n                    ppiStack160 = ppiStack200[1];\n                    if (ppiStack192 < ppiStack200[1]) {\n                        ppiStack160 = ppiStack192;\n                    }\n                    puVar16 = *uStack156;\n                    piVar19 = *ppiStack200;\n                    for (ppiVar23 = ppiStack160; ppiVar23 != NULL; ppiVar23 = ppiVar23 + -1) {\n                        ppiStack172 = *piVar19;\n                        uVar1 = *puVar16;\n                        uStack144 = uVar1;\n                        if (*piVar19 != uVar1) {\n                            if (*piVar19 < uVar1) goto code_r0x00410d34;\n                            goto code_r0x00410d57;\n                        }\n                        piVar19 = piVar19 + 2;\n                        puVar16 = puVar16 + 1;\n                    }\n                    if (ppiStack160 < ppiStack192) {\ncode_r0x00410d34:\n                        *ppiStack148 = ppiStack200[6];\n                        ppiStack200[6] = *0x4d2370;\n                        *0x4d2370 = ppiStack200;\n                        if (ppiStack200[7] == NULL) goto code_r0x00410c56;\n                    }\ncode_r0x00410d57:\n                    ppiStack164[7] = *0x4d2370;\n                    ppiStack164 = *0x4d2370;\n                    *0x4d2370 = (*0x4d2370)[7];\n                    goto code_r0x00410bc1;\n                }\n                uStack204 = CONCAT13(1, uStack204);\ncode_r0x00410c56:\n                ppiStack164[7] = (*0x4d2370)[6];\n                ppiStack168[6] = (*0x4d2370)[7];\n                (*0x4d2370)[6] = *0x4d2560;\n                (*0x4d2370)[7] = *0x4d255c;\n                if (((uStack204._3_1_ != '\\0') && (*0x4d2370 != NULL)) &&\n                   (unaff_EDI = (*0x4d2370)[5],  unaff_EDI != NULL)) goto code_r0x00410994;\n            }\n            uVar24 = 0x79;\n            goto code_r0x004556c9;\n        }\n        ppiVar23 = *0x4d2384;\n        if (*0x4d2389 != (*0x4d2380 == 0)) {\n            ppiVar23 = (*0x4d2384)[2];\n        }\n        if (*ppiVar23 == NULL) goto code_r0x00410b72;\n        uStack204 = uStack204 & 0xffffff;\n        if ((*(iStack124 + 4) < *0x4d2540) && (fcn.004201c2(0x4d2540),  *0x4d2540 == -1)) {\n            fcn.0040c25d();\n            fcn.00420023(0x4423e9);\n            fcn.00420178(0x4d2540);\n        }\n        *0x4d2560 = NULL;\n        *0x4d255c = NULL;\n        ppiStack160 = 0x4d2544;\n        ppiStack164 = 0x4d2544;\ncode_r0x004107c0:\n        ppiStack168 = *ppiVar23;\n        ppiStack192 = ppuVar17[1];\n        ppiVar26 = ppiStack168[1];\n        if (ppiStack192 == NULL) {\n            if (ppiVar26 == NULL) goto code_r0x0045552a;\ncode_r0x004108d8:\n            ppuVar14 = ppiStack168[6];\n            if (ppuVar14 == NULL) goto code_r0x00410948;\n            ppiVar26 = ppuVar14[1];\n            if (ppiVar26 < ppiStack192) {\n                ppiStack192 = ppiVar26;\n            }\n            puVar16 = *ppuVar14;\n            puVar18 = *ppuVar17;\n            uStack196 = ppiStack192;\n            if (ppiStack192 != NULL) {\n                do {\n                    ppiStack148 = *puVar18;\n                    uVar1 = *puVar16;\n                    ppiStack200 = uVar1;\n                    if (*puVar18 != uVar1) {\n                        if (uVar1 <= *puVar18) goto code_r0x004109e3;\n                        goto code_r0x00410927;\n                    }\n                    puVar18 = puVar18 + 1;\n                    puVar16 = puVar16 + 1;\n                    uStack196 = uStack196 + -1;\n                } while (uStack196 != NULL);\n                ppiVar26 = ppuVar14[1];\n            }\n            if (ppiStack192 < ppiVar26) {\ncode_r0x00410927:\n                ppiStack168[6] = ppuVar14[7];\n                ppuVar14[7] = *ppiVar23;\n                *ppiVar23 = ppuVar14;\n                if (ppuVar14[6] == NULL) goto code_r0x00410948;\n            }\n            else {\ncode_r0x004109e3:\n                ppuVar14 = *ppiVar23;\n            }\n            ppiStack160[6] = ppuVar14;\n            ppiStack160 = *ppiVar23;\n            piVar19 = ppiStack160[6];\n            goto code_r0x004109f5;\n        }\n        if (ppiVar26 == NULL) {\ncode_r0x0045552a:\n            if (ppiStack192 == NULL) goto code_r0x004107e0;\ncode_r0x00410842:\n            piVar19 = ppiStack168[7];\n            if (piVar19 == NULL) goto code_r0x00410948;\n            ppiVar26 = piVar19[1];\n            if (ppiStack192 < piVar19[1]) {\n                ppiVar26 = ppiStack192;\n            }\n            uStack196 = *piVar19;\n            puVar16 = *ppuVar17;\n            for (ppiStack200 = ppiVar26; ppiStack200 != NULL; ppiStack200 = ppiStack200 + -1) {\n                uVar1 = *uStack196;\n                ppiStack148 = uVar1;\n                uVar2 = *puVar16;\n                ppiStack172 = uVar2;\n                uStack144 = ppiStack148;\n                if (uVar1 != uVar2) {\n                    if (uVar2 <= uVar1) goto code_r0x004108b5;\n                    goto code_r0x00410ab5;\n                }\n                puVar16 = puVar16 + 1;\n                uStack196 = uStack196 + 2;\n            }\n            if (ppiVar26 < ppiStack192) {\ncode_r0x00410ab5:\n                ppiStack168[7] = piVar19[6];\n                piVar19[6] = *ppiVar23;\n                *ppiVar23 = piVar19;\n                if (piVar19[7] == 0) goto code_r0x00410948;\n            }\n            else {\ncode_r0x004108b5:\n                piVar19 = *ppiVar23;\n            }\n            ppiStack164[7] = piVar19;\n            ppiStack164 = *ppiVar23;\n            piVar19 = ppiStack164[7];\ncode_r0x004109f5:\n            *ppiVar23 = piVar19;\n            ppuVar17 = uStack156;\n            goto code_r0x004107c0;\n        }\ncode_r0x004107e0:\n        piVar19 = *ppiStack168;\n        puVar16 = *ppuVar17;\n        if (ppiStack192 < ppiVar26) {\n            for (; ppiVar26 != NULL; ppiVar26 = ppiVar26 + -1) {\n                uStack196 = *puVar16;\n                uVar1 = *piVar19;\n                ppiStack200 = uVar1;\n                if (*puVar16 != uVar1) {\n                    bVar20 = *puVar16 < uVar1;\n                    goto code_r0x00410822;\n                }\n                puVar16 = puVar16 + 1;\n                piVar19 = piVar19 + 2;\n            }\n        }\n        else {\n            ppiVar26 = ppiStack192;\n            if (ppiStack192 != NULL) {\ncode_r0x004107f2:\n                uStack196 = *puVar16;\n                uVar1 = *piVar19;\n                ppiStack200 = uVar1;\n                if (*puVar16 == uVar1) goto code_r0x0041080a;\n                bVar20 = *puVar16 < uVar1;\ncode_r0x00410822:\n                iVar9 = (-bVar20 & 0xfffffffe) + 1;\n                goto code_r0x00410828;\n            }\n        }\ncode_r0x00410815:\n        iVar9 = 0;\ncode_r0x00410828:\n        ppuVar17 = uStack156;\n        if (iVar9 < 0) goto code_r0x004108d8;\n        if (0 < iVar9) goto code_r0x00410842;\n        uStack204 = CONCAT13(1, uStack204);\ncode_r0x00410948:\n        ppiStack164[7] = (*ppiVar23)[6];\n        ppiStack160[6] = (*ppiVar23)[7];\n        (*ppiVar23)[6] = *0x4d2560;\n        (*ppiVar23)[7] = *0x4d255c;\n        if (((uStack204._3_1_ == '\\0') || (*ppiVar23 == NULL)) || (unaff_EDI = (*ppiVar23)[5],  unaff_EDI == NULL))\n        goto code_r0x00410b72;\ncode_r0x00410994:\n        *arg_ch = *arg_ch + 1;\n        in_stack_fffffee4 = 0x4109af;\n        ppiVar23 = arg_8h;\n        ppiVar25 = arg_ch;\n        iVar9 = fcn.00411ae0(arg_8h, arg_ch, unaff_EDI, ppiStack128);\n        ppiVar13 = unaff_EBX;\n        if (iVar9 < 0) goto code_r0x00455705;\n        arg_10h = 0x16;\n        ppiVar26 = ppiVar8;\n        goto code_r0x004105f4;\n    }\n    if (uVar6 == 0x4f) goto code_r0x0041064d;\n    if (uVar6 == 5) {\n        ppiVar7 = ppiVar26;\n        if (ppiStack216 == NULL) {\n            if (arg_10h != 0x4d02a0) {\n                piVar19 = arg_10h[3];\n                if ((piVar19 == 0x4) && (*0x4d02ac == 4)) {\n                    if (arg_10h[2] != *0x4d02a8) {\n                        ppiVar25 = *0x4d02a8;\n                        fcn.0040c1c3(*0x4d02a8);\n                        ppiVar7 = ppiVar26;\n                    }\n                }\n                else {\n                    piVar15 = arg_10h[2];\n                    if (piVar15 != NULL) {\n                        *piVar15[3] = *piVar15[3] + -1;\n                        if (*piVar15[3] == 0) {\n                            fcn.0041fd94(*piVar15);\n                            fcn.0041fd4d(piVar15[3]);\n                        }\n                        ppiVar25 = 0x10;\n                        in_stack_fffffee4 = 0x410f37;\n                        fcn.0041fd4d(piVar15);\n                        piVar19 = arg_10h[3];\n                        arg_10h[2] = NULL;\n                    }\n                    if (4 < piVar19) {\n    // switch table (11 cases) at 0x4558d5\n                        switch(piVar19) {\n                        case 0x5:\n                            piVar19 = *arg_10h;\n                            if (piVar19 != NULL) {\n                                fcn.0041d593();\n                                ppiVar25 = 0x4;\n                                goto code_r0x004551c1;\n                            }\n                            break;\n                        case 0x8:\n                            if (*arg_10h != NULL) {\n                                (*ppiStack160)(*arg_10h);\n                                ppiVar25 = 0x10;\n                                piVar19 = *arg_10h;\n                                goto code_r0x004551c1;\n                            }\n                            break;\n                        case 0xa:\n                            piVar19 = *arg_10h;\n                            if (piVar19 != NULL) {\n                                fcn.0040b1ff();\n                                ppiVar25 = 0x18;\n                                goto code_r0x004551c1;\n                            }\n                            break;\n                        case 0xb:\n                            fcn.0041fd94((*arg_10h)[1]);\n                            ppiVar25 = 0x8;\n                            piVar19 = *arg_10h;\ncode_r0x004551c1:\n                            in_stack_fffffee4 = 0x4551c6;\n                            fcn.0041fd4d(piVar19);\n                            break;\n                        case 0xc:\n                            ppiVar23 = *arg_10h;\n                            if (ppiVar23 != NULL) {\n                                fcn.0045fc42();\n                                ppiVar25 = ppiVar23;\n                            }\n                            break;\n                        case 0xd:\n                        case 0xe:\n                            piVar19 = *arg_10h;\n                            if (piVar19 != NULL) {\n                                fcn.0040b1ff();\n                                ppiVar25 = 0x14;\n                                goto code_r0x004551c1;\n                            }\n                            break;\n                        case 0xf:\n                            if (*arg_10h != NULL) {\n                                ppiVar25 = 0x1;\n                                (****arg_10h)();\n                            }\n                        }\n                    }\n                    unaff_EDI = 0x4d02a0;\n                    arg_10h[3] = 0x1;\n                    *arg_10h = NULL;\n                    fcn.004119e0(0x4d02a0);\n                    ppiVar7 = ppiVar26;\n                }\n            }\n        }\n        else if (uStack220._1_1_ == '\\0') {\n            ppiVar26 = fcn.0041fd5b(0x18, unaff_EDI);\n            ppiVar25 = 0x4d02a0;\n            ppiVar26[2] = NULL;\n            fcn.004119e0(0x4d02a0);\n            ppiVar26[4] = in_stack_fffffefc;\n            in_stack_fffffefc = ppiVar26;\n            ppiStack228 = ppiVar26;\n        }\n        else if (ppiVar26 != 0x4d02a0) {\n            piVar19 = ppiVar26[3];\n            if ((piVar19 == 0x4) && (*0x4d02ac == 4)) {\n                if (ppiVar26[2] != *0x4d02a8) {\n                    ppiVar25 = *0x4d02a8;\n                    fcn.0040c1c3(*0x4d02a8);\n                    ppiVar7 = ppiVar26;\n                }\n            }\n            else {\n                if (ppiVar26[2] != NULL) {\n                    fcn.0041d962(ppiVar26[2]);\n                    in_stack_fffffefc[2] = NULL;\n                    piVar19 = in_stack_fffffefc[3];\n                }\n                if (4 < piVar19) {\n    // switch table (11 cases) at 0x455901\n                    switch(piVar19) {\n                    case 0x5:\n                        piVar19 = *ppiVar26;\n                        if (piVar19 != NULL) {\n                            fcn.0041d593();\n                            goto code_r0x004552da;\n                        }\n                        break;\n                    case 0x8:\n                        if (*ppiVar26 != NULL) {\n                            (*ppiStack160)(*ppiVar26);\n                            piVar19 = *0x16;\n                            goto code_r0x004552da;\n                        }\n                        break;\n                    case 0xa:\n                        piVar19 = *ppiVar26;\n                        if (piVar19 != NULL) {\n                            fcn.0040b1ff();\n                            goto code_r0x004552da;\n                        }\n                        break;\n                    case 0xb:\n                        fcn.0041fd94((*ppiVar26)[1]);\n                        piVar19 = *ppiVar26;\ncode_r0x004552da:\n                        fcn.0041fd4d(piVar19);\n                        break;\n                    case 0xc:\n                        if (*ppiVar26 != NULL) {\n                            fcn.0045fc42();\n                        }\n                        break;\n                    case 0xd:\n                    case 0xe:\n                        piVar19 = *ppiVar26;\n                        if (piVar19 != NULL) {\n                            fcn.0040b1ff();\n                            goto code_r0x004552da;\n                        }\n                        break;\n                    case 0xf:\n                        if (*ppiVar26 != NULL) {\n                            (****ppiVar26)(1);\n                        }\n                    }\n                }\n                unaff_EDI = 0x4d02a0;\n                *0x22 = 1;\n                *0x16 = NULL;\n                ppiVar25 = 0x411363;\n                fcn.004119e0(0x4d02a0);\n                ppiVar7 = ppiVar26;\n            }\n        }\n        ppiStack232 = ppiVar13 + 1;\n        ppiVar13 = arg_10h;\n        if ((ppiStack232 != 0x1) && (ppiVar13 = ppiVar26,  uStack224._1_1_ != '\\0')) {\n            ppiVar13 = ppiVar26[4];\n        }\n        piVar19 = *arg_8h[1][*arg_ch];\n        ppiVar23 = 0x410b59;\n        uStack220 = ppiStack232;\n        fcn.0040e8a0();\n        ppiVar13[3] = 0x1;\n        *ppiVar13 = piVar19;\n        *arg_ch = *arg_ch + 1;\n        ppiVar26 = ppiVar7;\ncode_r0x00410b6a:\n        piStack252 = 0x16;\n        goto code_r0x004105f4;\n    }\n    if (0x58 < uVar6) goto code_r0x0041064d;\n    // switch table (89 cases) at 0x411878\n    switch(*(*(uVar6 + 0x4118e4) * 4 + 0x411878)) {\n    case 0x410639:\n        iVar9 = *piVar4;\n        if (((3 < iVar9) && (iVar9 < 0x27)) || (0x29 < iVar9 - 1U)) goto code_r0x0041064d;\n    // switch table (42 cases) at 0x41195c\n        switch(*(*(iVar9 + 0x41197b) * 4 + 0x41195c)) {\n        case 0x41064d:\n            goto code_r0x0041064d;\n        case 0x41141c:\n            piVar15 = 0x7;\n            *arg_ch = piVar19 + 1;\n            piStack252 = piVar15;\n            break;\n        case 0x411647:\n            ppiVar25 = 0x4d02a0;\n            fcn.0041d62d(0x4d02a0);\n            puVar10 = fcn.0041d691();\n            ppiVar23 = 0x41166f;\n            fcn.0040e8a0();\n            *(puVar10 + 0xc) = 9;\n            *puVar10 = 0;\n            goto code_r0x00411679;\n        case 0x4116b2:\n            ppiVar25 = 0x4d02a0;\n            piStack252 = 0x16;\n            fcn.0041d62d(0x4d02a0);\n            puVar10 = fcn.0041d691();\n            ppiVar23 = 0x4116da;\n            fcn.0040e8a0();\n            *(puVar10 + 0xc) = 9;\n            *puVar10 = 1;\n            *arg_ch = *arg_ch + 1;\n            goto code_r0x00410a51;\n        case 0x411700:\n            piVar15 = 0x8;\n            *arg_ch = piVar19 + 1;\n            piStack252 = piVar15;\n            break;\n        case 0x454efe:\n            piVar15 = 0xa;\n            *arg_ch = piVar19 + 1;\n            piStack252 = piVar15;\n            break;\n        case 0x454f10:\n            arg_10h_00 = L\"Default\";\n            fcn.0040b606(L\"Default\");\n            uVar22 = 0xffffffff;\n            uVar24 = 0x29;\n            goto code_r0x00454f48;\n        case 0x454f2d:\n            arg_10h_00 = 0x49d0d0;\n            fcn.0040b606(0x49d0d0);\n            uVar22 = 0;\n            uVar24 = 0x2a;\ncode_r0x00454f48:\n            piStack252 = 0x16;\n            fcn.00402032(uVar24, uVar22, arg_10h_00, in_stack_fffffee0, in_stack_fffffee4, ppiVar23);\n            fcn.0041d62d(0x4d02a0);\n            puVar10 = &stack0xffffffc0;\n            fcn.0041d691();\n            fcn.00401fd5(puVar10);\n            *arg_ch = *arg_ch + 1;\n            fcn.0040b1ff();\n            goto code_r0x00410a51;\n        }\n        break;\n    case 0x41064d:\n        goto code_r0x0041064d;\n    case 0x410f68:\n        piVar15 = 0xd;\n        *arg_ch = piVar19 + 1;\n        piStack252 = piVar15;\n        break;\n    case 0x411028:\n        if ((piVar19 == NULL) || ((*(piVar15[piVar19 + -1] + 8) != 0x48 && (*(piVar15[piVar19 + -1] + 8) != 0x4f)))) {\n            piVar15 = 0x12;\n            *arg_ch = piVar19 + 1;\n            piStack252 = piVar15;\n            break;\n        }\n        if (ppiStack216 == NULL) goto code_r0x004556ab;\n        ppiVar25 = &stack0xffffffb0;\n        apiStack80[0] = NULL;\n        uStack72 = 0;\n        uStack68 = 1;\n        ppiVar23 = fcn.0041d691();\n        in_stack_fffffee0 = arg_8h;\n        in_stack_fffffee4 = arg_ch;\n        iVar9 = fcn.00411ae0(arg_8h, arg_ch, ppiVar23, ppiVar25);\n        if (iVar9 < 0) {\n            fcn.0040e8a0();\n            ppiVar13 = unaff_EBX;\n            goto code_r0x00455705;\n        }\n        puVar10 = &stack0xffffffa0;\n        fcn.0041d691();\n        fcn.0040c5e7(puVar10);\n        fcn.0040e8a0();\n        goto code_r0x004105f4;\n    case 0x41105c:\n        piVar15 = 0x13;\n        *arg_ch = piVar19 + 1;\n        piStack252 = piVar15;\n        break;\n    case 0x4110ad:\n        piVar15 = 0x1;\n        *arg_ch = piVar19 + 1;\n        piStack252 = piVar15;\n        break;\n    case 0x4110bf:\n        piStack252 = 0x16;\n        if (ppiStack216 == NULL) {\n            ppiVar25 = 0x4d02a0;\n            fcn.0040c5e7(0x4d02a0);\n        }\n        else if (uStack220._1_1_ == '\\0') {\n            ppiVar23 = fcn.0041fd5b(0x18, unaff_EDI);\n            ppiVar25 = 0x4d02a0;\n            ppiVar23[2] = NULL;\n            fcn.004119e0(0x4d02a0);\n            ppiVar23[4] = in_stack_fffffefc;\n            ppiVar13 = uStack220;\n            in_stack_fffffefc = ppiVar23;\n            ppiStack228 = ppiVar23;\n        }\n        else {\n            ppiVar25 = 0x4d02a0;\n            fcn.0040c5e7(0x4d02a0);\n            uStack224 = uStack224 & 0xffff00ff;\n        }\n        ppiStack232 = ppiVar13 + 1;\n        uStack220 = ppiStack232;\n        if (*(arg_8h[1][*arg_ch + 1] + 8) == 0x47) goto code_r0x00411135;\n        ppiVar23 = *arg_8h[1][*arg_ch];\n        fcn.0041d691();\n        in_stack_fffffee4 = 0x454b41;\n        fcn.00471073(ppiVar23);\n        *arg_ch = *arg_ch + 1;\n        goto code_r0x004105f4;\n    case 0x41117c:\n        if ((piStack252 == 0x16) || (piStack252 == 0x13)) {\n            piStack252 = 0xb;\n            piVar15 = 0xb;\n            *arg_ch = piVar19 + 1;\n        }\n        else {\n            piStack252 = 0x11;\n            piVar15 = 0x11;\n            *arg_ch = piVar19 + 1;\n        }\n        break;\n    case 0x4111a2:\n        piVar15 = NULL;\n        *arg_ch = piVar19 + 1;\n        piStack252 = piVar15;\n        break;\n    case 0x41120b:\n        piStack252 = 0x16;\n        ppiVar7 = ppiVar26;\n        if (ppiStack216 == NULL) {\n            if (arg_10h != 0x4d02a0) {\n                if ((arg_10h[3] == 0x4) && (*0x4d02ac == 4)) {\n                    if (arg_10h[2] != *0x4d02a8) {\n                        ppiVar23 = 0x45499f;\n                        ppiVar25 = *0x4d02a8;\n                        fcn.0040c1c3(*0x4d02a8);\n                        ppiVar7 = ppiVar26;\n                    }\n                }\n                else {\n                    fcn.0040e8a0();\n                    ppiVar25 = 0x4d02a0;\n                    ppiVar23 = 0x411244;\n                    fcn.004119e0(0x4d02a0);\n                    ppiVar7 = ppiVar26;\n                }\n            }\n        }\n        else if (uStack220._1_1_ == '\\0') {\n            ppiVar26 = fcn.0041fd5b(0x18, unaff_EDI);\n            ppiVar25 = 0x4d02a0;\n            ppiVar26[2] = NULL;\n            ppiVar23 = 0x4115ff;\n            fcn.004119e0(0x4d02a0);\n            ppiStack228 = ppiVar26;\n            if (in_stack_fffffefc == NULL) {\n                ppiVar26[4] = NULL;\n                in_stack_fffffefc = ppiVar26;\n            }\n            else {\n                ppiVar26[4] = in_stack_fffffefc;\n                in_stack_fffffefc = ppiVar26;\n            }\n        }\n        else if (ppiVar26 != 0x4d02a0) {\n            if ((*0x4d02ac == 4) && (ppiVar26[3] == 0x4)) {\n                if (ppiVar26[2] != *0x4d02a8) {\n                    ppiVar23 = 0x4549ba;\n                    ppiVar25 = *0x4d02a8;\n                    fcn.0040c1c3(*0x4d02a8);\n                    ppiVar7 = ppiVar26;\n                }\n            }\n            else {\n                fcn.0040e8a0();\n                ppiVar25 = 0x4d02a0;\n                ppiVar23 = 0x41146c;\n                fcn.004119e0(0x4d02a0);\n                ppiVar7 = ppiVar26;\n            }\n        }\n        ppiStack232 = ppiVar13 + 1;\n        ppiVar13 = arg_10h;\n        if ((ppiStack232 != 0x1) && (ppiVar13 = ppiVar26,  uStack224._1_1_ != '\\0')) {\n            ppiVar13 = ppiVar26[4];\n        }\n        ppiVar26 = *arg_8h[1][*arg_ch];\n        piVar19 = ppiVar13[3];\n        ppiVar8 = ppiVar13[2];\n        uStack220 = ppiStack232;\n        if (piVar19 == 0x4) {\n            if (ppiVar8 != ppiVar26) {\n                in_stack_fffffee4 = 0x4549d5;\n                fcn.0040c1c3(ppiVar26);\n                ppiVar23 = ppiVar26;\n            }\n        }\n        else {\n            if (ppiVar8 != NULL) {\n                fcn.0041d962(ppiVar8);\n                piVar19 = ppiVar13[3];\n                ppiVar13[2] = NULL;\n            }\n            if (4 < piVar19) {\n    // switch table (11 cases) at 0x4558a9\n                switch(piVar19) {\n                case 0x5:\n                    piVar19 = *ppiVar13;\n                    arg_10h = uStack248;\n                    if (piVar19 != NULL) {\n                        fcn.0041d593();\ncode_r0x00454a9c:\n                        in_stack_fffffee0 = 0x454aa2;\n                        fcn.0041fd4d(piVar19);\n                        arg_10h = uStack248;\n                    }\n                    break;\n                case 0x8:\n                    if (*ppiVar13 != NULL) {\n                        (*ppiStack164)(*ppiVar13);\n                        in_stack_fffffee0 = 0x454a1a;\n                        fcn.0041fd4d(*ppiVar13);\n                    }\n                    break;\n                case 0xa:\n                    piVar19 = *ppiVar13;\n                    arg_10h = uStack248;\n                    if (piVar19 != NULL) {\n                        fcn.0040b1ff();\n                        goto code_r0x00454a9c;\n                    }\n                    break;\n                case 0xb:\n                    fcn.0041fd94((*ppiVar13)[1]);\n                    in_stack_fffffee0 = 0x454a5b;\n                    fcn.0041fd4d(*ppiVar13);\n                    break;\n                case 0xc:\n                    if (*ppiVar13 != NULL) {\n                        fcn.0045fc42(*ppiVar13);\n                    }\n                    break;\n                case 0xd:\n                case 0xe:\n                    piVar19 = *ppiVar13;\n                    arg_10h = uStack248;\n                    if (piVar19 != NULL) {\n                        fcn.0040b1ff();\n                        goto code_r0x00454a9c;\n                    }\n                    break;\n                case 0xf:\n                    if (*ppiVar13 != NULL) {\n                        (****ppiVar13)(1);\n                    }\n                }\n            }\n            ppiVar23 = 0x10;\n            *ppiVar13 = NULL;\n            ppiVar13[3] = 0x4;\n            in_stack_fffffee4 = 0x4112a0;\n            ppiVar8 = fcn.0041fd5b(0x10, ppiVar25);\n            *ppiVar8 = *ppiVar26;\n            ppiVar8[1] = ppiVar26[1];\n            ppiVar8[2] = ppiVar26[2];\n            piVar19 = ppiVar26[3];\n            ppiVar8[3] = piVar19;\n            *piVar19 = *piVar19 + 1;\n            ppiVar13[2] = ppiVar8;\n        }\n        *arg_ch = *arg_ch + 1;\n        if (*(ppiStack236 + 0x102) != '\\0') {\n            fcn.0041d691();\n            ppiVar25 = 0x454abe;\n            fcn.00487559();\n        }\n        ppiVar26 = ppiVar7;\n        if (*(ppiStack236 + 0x103) != '\\0') {\n            ppiVar25 = 0x454ad0;\n            unaff_EDI = fcn.0041d691();\n            ppiVar23 = 0x454ad8;\n            fcn.00487698(unaff_EDI);\n            ppiVar26 = ppiVar7;\n        }\n        goto code_r0x004105f4;\n    case 0x4112ec:\n        if ((piStack252 == 0x16) || (piStack252 == 0x13)) {\n            piStack252 = 0xc;\n        }\n        else {\n            piStack252 = 0x10;\n        }\n        *arg_ch = piVar19 + 1;\n        piVar15 = piStack252;\n        break;\n    case 0x41136d:\n        piVar15 = 0xe;\n        *arg_ch = piVar19 + 1;\n        piStack252 = piVar15;\n        break;\n    case 0x4113d0:\n        piVar15 = 0x9;\n        *arg_ch = piVar19 + 1;\n        piStack252 = piVar15;\n        break;\n    case 0x41157c:\n        piVar15 = 0x5;\n        *arg_ch = piVar19 + 1;\n        piStack252 = piVar15;\n        break;\n    case 0x4115ce:\n        piVar15 = 0x2;\n        *arg_ch = piVar19 + 1;\n        piStack252 = piVar15;\n        break;\n    case 0x41161d:\n        piVar15 = 0x4;\n        *arg_ch = piVar19 + 1;\n        piStack252 = piVar15;\n        break;\n    case 0x4116ee:\n        piVar15 = 0x3;\n        *arg_ch = piVar19 + 1;\n        piStack252 = piVar15;\n        break;\n    case 0x411773:\n        ppiVar25 = 0x4d02a0;\n        piStack252 = 0x16;\n        fcn.0041d62d(0x4d02a0);\n        *arg_ch = *arg_ch + 1;\n        uVar21 = fcn.0041d691();\n        ppiVar23 = uVar21;\n        unaff_EDI = *(uVar21 >> 0x20);\n        in_stack_fffffee0 = 0x4117b3;\n        iVar9 = fcn.0041d70e();\n        if (iVar9 < 0) {\n            fcn.004734ba(0x86, *(arg_8h[1][*arg_ch + -1] + 10));\n            ppiVar13 = ppiStack232;\n            goto code_r0x00455705;\n        }\n        ppiStack228 = ppiStack240;\n        arg_10h = ppiStack244;\n        ppiVar26 = ppiStack244;\n        goto code_r0x004105f4;\n    case 0x411815:\n        ppiVar25 = 0x4d02a0;\n        piStack252 = 0x16;\n        fcn.0041d62d(0x4d02a0);\n        uStack156 = *arg_8h[1][*arg_ch];\n        puVar11 = fcn.0041d691();\n        ppiVar23 = 0x411851;\n        fcn.0040e8a0();\n        *arg_ch = *arg_ch + 1;\n        *puVar11 = uStack156;\n        *(puVar11 + 0xc) = 3;\n        goto code_r0x00410a51;\n    case 0x454ae0:\n        ppiVar25 = 0x4d02a0;\n        fcn.0041d62d(0x4d02a0);\n        uVar24 = *arg_8h[1][*arg_ch];\n        uVar22 = arg_8h[1][*arg_ch][1];\n        puVar12 = fcn.0041d691();\n        ppiVar23 = 0x454b1b;\n        fcn.0040e8a0();\n        puVar12[3] = 2;\n        *puVar12 = uVar24;\n        puVar12[1] = uVar22;\ncode_r0x00411679:\n        piStack252 = 0x16;\n        *arg_ch = *arg_ch + 1;\n        goto code_r0x00410a51;\n    case 0x454b50:\n        ppiVar25 = 0x4d02a0;\n        piStack252 = 0x16;\n        fcn.0041d62d(0x4d02a0);\n        if (*(arg_8h[1][*arg_ch + 1] + 8) == 0x47) {\n            puVar10 = &stack0xffffff73;\n            in_stack_fffffee4 = fcn.0041d691();\n            in_stack_fffffee0 = arg_ch;\n            arg_10h = ppiVar26;\n            iVar9 = fcn.0040d840(0, arg_8h, arg_ch, in_stack_fffffee4, puVar10);\n            ppiVar13 = ppiStack232;\n            if ((iVar9 < 0) || (ppiStack240[0x3f] == 0x1)) goto code_r0x00455705;\n            ppiStack240 = 0x16;\n            ppiVar23 = uStack248;\n            ppiVar26 = arg_10h;\n        }\n        else {\n            ppiVar23 = *arg_8h[1][*arg_ch];\n            piStack116 = *ppiVar23;\n            piStack112 = ppiVar23[1];\n            piStack108 = ppiVar23[2];\n            piStack104 = ppiVar23[3];\n            *piStack104 = *piStack104 + 1;\n            ppiVar23 = &stack0xffffff8c;\n            iVar9 = fcn.004025c1(ppiVar23);\n            if (iVar9 == 0) {\n                fcn.004734ba(0x85, *(arg_8h[1][*arg_ch] + 10));\n                fcn.0040b1ff();\n                ppiVar13 = unaff_EBX;\n                goto code_r0x00455705;\n            }\n            in_stack_fffffee4 = &stack0xffffff88;\n            fcn.0041d691();\n            fcn.004719dd(in_stack_fffffee4);\n            *arg_ch = *arg_ch + 1;\n            in_stack_fffffee0 = 0x454bef;\n            fcn.0040b1ff();\n            ppiStack228 = ppiStack240;\n            arg_10h = ppiStack244;\n            ppiVar26 = ppiStack244;\n        }\n        goto code_r0x004105f4;\n    case 0x454c6c:\n        piStack252 = 0x16;\n        if (ppiStack216 == NULL) goto code_r0x004556ab;\n        ppiVar25 = &stack0xffffffa0;\n        apiStack96[0] = NULL;\n        uStack88 = 0;\n        uStack84 = 1;\n        ppiVar23 = fcn.0041d691();\n        in_stack_fffffee0 = arg_8h;\n        in_stack_fffffee4 = arg_ch;\n        iVar9 = fcn.00411ae0(arg_8h, arg_ch, ppiVar23, ppiVar25);\n        if (iVar9 < 0) {\n            fcn.0040e8a0();\n            ppiVar13 = unaff_EBX;\n            goto code_r0x00455705;\n        }\n        puVar10 = &stack0xffffff90;\n        fcn.0041d691();\n        fcn.0040c5e7(puVar10);\n        fcn.0040e8a0();\n        goto code_r0x004105f4;\n    case 0x454d7e:\n        piVar15 = 0x6;\n        *arg_ch = piVar19 + 1;\n        piStack252 = piVar15;\n        break;\n    case 0x454d90:\n        piVar15 = 0xf;\n        *arg_ch = piVar19 + 1;\n        piStack252 = piVar15;\n        break;\n    case 0x454da2:\n        ppiVar25 = ppiStack240;\n        while( true ) {\n            ppiVar13 = ppiVar25;\n            if (uStack248._3_1_ != 0) {\n                ppiVar13 = ppiVar25[1];\n            }\n            if (*ppiVar13 == 0x14) break;\n            if (uStack248._3_1_ != 0) {\n                ppiVar25 = ppiVar25[1];\n            }\n            if (*ppiVar25 == 0x12) break;\n            in_stack_fffffefc = &stack0xffffff3c;\n            in_stack_fffffee4 = 0x454dd9;\n            iVar9 = fcn.00411fa0(in_stack_fffffefc, &stack0xffffff18);\n            if (iVar9 < 0) goto code_r0x004556e6;\n            uStack248 = ppiStack200;\n            ppiVar26 = ppiVar26 & 0xffffff | uStack196._1_1_ << 0x18;\n            ppiVar25 = ppiStack200;\n            uStack248._3_1_ = uStack196._1_1_;\n        }\n        if (ppiStack228 != NULL) {\n            fcn.0041d691();\n            cVar5 = fcn.004039e5();\n            ppiVar25 = 0x454e1e;\n            fcn.0041b3a3();\n            piVar19 = *arg_ch + 1;\n            *arg_ch = piVar19;\n            if (cVar5 == '\\0') {\n                iVar9 = 1;\n                piVar15 = arg_8h[1];\n                do {\n                    iVar3 = *(piVar15[piVar19] + 8);\n                    if (iVar3 == 0x57) {\n                        iVar9 = iVar9 + 1;\n                    }\n                    else if (iVar3 == 0x58) {\n                        iVar9 = iVar9 + -1;\n                    }\n                    else if ((iVar3 == 0x7f) || ((iVar3 == 0x40 && (iVar9 == 0)))) break;\n                    piVar19 = piVar19 + 1;\n                    *arg_ch = piVar19;\n                } while (iVar9 != 0);\n            }\n            piStack252 = 0x12;\n            goto code_r0x00410a51;\n        }\n        ppiVar25 = *(arg_8h[1][*arg_ch] + 10);\ncode_r0x004557ea:\n        ppiVar23 = 0x6e;\ncode_r0x004557ec:\n        fcn.004734ba(ppiVar23, ppiVar25);\n        ppiVar7 = uStack248;\n        ppiVar13 = ppiStack232;\n        goto code_r0x00455705;\n    case 0x454e72:\n        if (ppiStack216 == NULL) {\ncode_r0x004556ab:\n            ppiVar25 = *(piVar4 + 10);\n            uVar24 = 0x6e;\ncode_r0x004556c9:\n            fcn.004734ba(uVar24, ppiVar25);\n            ppiVar13 = unaff_EBX;\n            goto code_r0x00455705;\n        }\n        piVar19 = piVar19 + 1;\n        piStack252 = 0x16;\n        iVar9 = 1;\n        *arg_ch = piVar19;\n        do {\n            iVar3 = *(piVar15[piVar19] + 8);\n            if (iVar3 == 0x47) {\n                iVar9 = iVar9 + 1;\n            }\n            else if (iVar3 == 0x48) {\n                iVar9 = iVar9 + -1;\n            }\n            else if ((iVar3 == 0x7f) || ((iVar3 == 0x40 && (iVar9 == 1)))) break;\n            piVar19 = piVar19 + 1;\n            *arg_ch = piVar19;\n        } while (iVar9 != 0);\n        arg_10h = ppiStack244;\n        if ((*(piVar15[piVar19 + -1] + 8) != 0x48) || (iVar9 != 0)) goto code_r0x00410b6a;\n        *arg_ch = piVar19 + -1;\n        goto code_r0x004105f4;\n    case 0x454f90:\n        ppiStack128 = NULL;\n        bVar20 = true;\n        piStack120 = NULL;\n        piStack116 = 0x1;\n        if ((piVar19 != NULL) && ((*(piVar15[piVar19 + -1] + 8) == 0x48 || (*(piVar15[piVar19 + -1] + 8) == 0x4f)))) {\n            uVar24 = fcn.0041d691();\n            fcn.0040c5e7(uVar24);\n            bVar20 = false;\n        }\n        cVar5 = fcn.00485520();\n        if (cVar5 == '\\0') {\n            if (bVar20) {\n                if (ppiStack236[0x5c] != NULL) {\n                    ppiVar26 = ppiStack236[0x5d];\n                    if (*(ppiStack236 + 0x179) != '\\0') {\n                        ppiVar26 = ppiVar26[4];\n                    }\n                    fcn.0040c5e7(ppiVar26);\n                }\n                cVar5 = fcn.00485520();\n                if (cVar5 != '\\0') goto code_r0x00455041;\n                uVar24 = 0xa7;\n            }\n            else {\n                uVar24 = 0xa9;\n            }\n            fcn.004734ba(uVar24, *(arg_8h[1][*arg_ch] + 10));\n        }\n        else {\ncode_r0x00455041:\n            unaff_EBX = &stack0xffffff90;\n            uStack48 = 0;\n            uStack40 = 0;\n            uStack36 = 1;\n            unaff_EDI = arg_8h;\n            iVar9 = fcn.00487aa5(arg_8h, arg_ch, unaff_EBX, &stack0xffffffd0);\n            if (-1 < iVar9) {\n                piStack252 = 0x16;\n                if (!bVar20) {\n                    fcn.0041b3a3();\n                }\n                ppiVar25 = &stack0xffffffc0;\n                fcn.0041d62d(ppiVar25);\n                fcn.0040e8a0();\n                ppiVar23 = 0x4550c9;\n                fcn.0040e8a0();\n                uStack248 = ppiStack236;\n                uStack220 = ppiStack232;\n                arg_10h = ppiStack236;\n                in_stack_fffffefc = ppiStack228;\n                goto code_r0x004105f4;\n            }\n            fcn.004734ba(0x6e, *(arg_8h[1][*arg_ch] + 10));\n            fcn.0040e8a0();\n        }\n        fcn.0040e8a0();\n        ppiVar13 = unaff_EBX;\ncode_r0x00455705:\n        piStack252 = 0xffffffff;\n        unaff_EBX = ppiVar13;\njoined_r0x00410697:\n        while (unaff_EBX != NULL) {\n            piVar19 = ppiVar13[2];\n            unaff_EBX = ppiVar13[4];\n            if (piVar19 != NULL) {\n                *piVar19[3] = *piVar19[3] + -1;\n                if (*piVar19[3] == 0) {\n                    fcn.0041fd94(*piVar19);\n                    fcn.0041fd4d(piVar19[3]);\n                }\n                fcn.0041fd4d(piVar19);\n                ppiVar13[2] = NULL;\n            }\n            if (4 < ppiVar13[3]) {\n    // switch table (11 cases) at 0x4119a8\n                switch(ppiVar13[3]) {\n                case 0x5:\n                    if (*ppiVar13 != NULL) {\n                        fcn.0041d57b(*ppiVar13);\n                    }\n                    break;\n                case 0x8:\n                    if (*ppiVar13 != NULL) {\n                        (*ppiStack168)(*ppiVar13);\n                        fcn.0041fd4d(*ppiVar13);\n                    }\n                    break;\n                case 0xa:\n                    if (*ppiVar13 != NULL) {\n                        fcn.0041e44a(*ppiVar13);\n                    }\n                    break;\n                case 0xb:\n                    fcn.0041fd94((*ppiVar13)[1]);\n                    fcn.0041fd4d(*ppiVar13);\n                    break;\n                case 0xc:\n                    if (*ppiVar13 != NULL) {\n                        fcn.0045fc42(*ppiVar13);\n                    }\n                    break;\n                case 0xd:\n                case 0xe:\n                    if (*ppiVar13 != NULL) {\n                        fcn.00470d8b(*ppiVar13);\n                    }\n                    break;\n                case 0xf:\n                    if (*ppiVar13 != NULL) {\n                        (****ppiVar13)(1);\n                    }\n                }\n            }\n            ppiVar13[3] = 0x1;\n            *ppiVar13 = NULL;\n            fcn.0041fd4d(ppiVar13);\n            ppiVar7 = uStack248;\n            ppiVar13 = unaff_EBX;\n        }\n        while (ppiVar7 != NULL) {\n            ppiVar25 = ppiVar7[1];\n            fcn.0041fd4d(ppiVar7);\n            ppiVar7 = ppiVar25;\n        }\n        return piStack252;\n    }\ncode_r0x00410656:\n    ppiVar13 = ppiStack240;\n    if (uStack248._3_1_ != '\\0') {\n        ppiVar13 = ppiStack240[1];\n    }\n    ppiVar7 = ppiStack240;\n    ppiVar8 = uStack196;\n    // switch table (7 cases) at 0x411940\n    switch(*(*ppiVar13 * 0x15 + 0x4b1860 + piVar15)) {\n    case 0:\n        goto code_r0x00410a10;\n    case 1:\n        ppiVar25 = &stack0xffffff18;\n        in_stack_fffffefc = &stack0xffffff3c;\n        in_stack_fffffee4 = 0x410d85;\n        iVar9 = fcn.00411fa0(in_stack_fffffefc, ppiVar25);\n        if (-1 < iVar9) goto code_r0x00410d8d;\n        goto code_r0x004556e6;\n    case 2:\n        goto code_r0x00410fe0;\n    case 3:\n        goto code_r0x00410a3c;\n    case 4:\n        uVar24 = 0x6b;\n        break;\n    case 5:\n        uVar24 = 0x6c;\n        break;\n    case 6:\n        uVar24 = 0x6d;\n        break;\n    default:\n        ppiVar25 = uStack184;\n        if (ppiStack228 != 0x1) goto code_r0x004557ea;\n        piStack252 = NULL;\n        ppiVar13 = unaff_EBX;\n        unaff_EBX = uStack224;\n        goto joined_r0x00410697;\n    }\n    fcn.004734ba(uVar24, uStack184);\n    ppiVar7 = uStack248;\n    ppiVar13 = ppiStack232;\n    goto code_r0x00455705;\ncode_r0x0041080a:\n    puVar16 = puVar16 + 1;\n    piVar19 = piVar19 + 2;\n    ppiVar26 = ppiVar26 + -1;\n    if (ppiVar26 == NULL) goto code_r0x00410815;\n    goto code_r0x004107f2;\ncode_r0x00410c0c:\n    puVar16 = puVar16 + 1;\n    piVar19 = piVar19 + 2;\n    ppiVar23 = ppiVar23 + -1;\n    if (ppiVar23 == NULL) goto code_r0x00410c17;\n    goto code_r0x00410bf0;\ncode_r0x00411135:\n    ppiVar23 = arg_10h;\n    if ((ppiStack232 != 0x1) && (ppiVar23 = in_stack_fffffefc,  uStack224._1_1_ != '\\0')) {\n        ppiVar23 = in_stack_fffffefc[4];\n    }\n    in_stack_fffffee0 = arg_8h;\n    in_stack_fffffee4 = arg_ch;\n    iVar9 = fcn.00412c10(0, arg_8h, arg_ch, ppiVar23);\n    ppiVar13 = unaff_EBX;\n    if ((iVar9 < 0) || (ppiVar26[0x3f] == 0x1)) goto code_r0x00455705;\n    goto code_r0x004105f4;\ncode_r0x00410fe0:\n    ppiVar13 = ppiVar7;\n    if (uStack248._3_1_ != '\\0') {\n        ppiVar13 = ppiVar7[1];\n    }\n    if (*ppiVar13 == 0x12) goto code_r0x0041106e;\n    if (uStack248._3_1_ != '\\0') {\n        ppiVar7 = ppiVar7[1];\n    }\n    if (*ppiVar7 == 0x14) goto code_r0x004557ec;\n    unaff_EBX = &stack0xffffff24;\n    in_stack_fffffefc = &stack0xffffff48;\n    unaff_EDI = 0x411012;\n    iVar9 = fcn.00411fa0(in_stack_fffffefc, unaff_EBX);\n    if (iVar9 < 0) goto code_r0x004556e6;\n    ppiStack236 = uStack188;\n    ppiVar7 = uStack188;\n    uStack248._3_1_ = uStack184._1_1_;\n    goto code_r0x00410fe0;\ncode_r0x0041106e:\n    ppiVar13 = ppiVar7;\n    if (uStack248._3_1_ != '\\0') {\n        ppiVar13 = ppiVar7[1];\n        unaff_EBX = 0x8;\n        unaff_EDI = 0x41107d;\n        fcn.0041fd4d(ppiVar7);\n        ppiStack228 = ppiVar13;\n        ppiStack180 = ppiVar13;\n    }\n    bVar20 = cStack176 == '\\0';\n    if (bVar20) {\n        ppiVar7 = ppiVar13[1];\n        unaff_EBX = 0x8;\n        unaff_EDI = 0x45559c;\n        fcn.0041fd4d(ppiVar13);\n        ppiStack228 = ppiVar7;\n        ppiStack180 = ppiVar7;\n    }\n    uStack175 = !bVar20;\n    uStack184 = uStack184 + -1;\n    ppiStack236 = ppiStack236 & 0xffffff | uStack175 << 0x18;\n    ppiVar8 = uStack184;\ncode_r0x00410a3c:\n    ppiVar7 = uStack212;\n    ppiVar13 = ppiStack216;\n    arg_10h = uStack220;\n    if ((piVar15 != 0x7) && (piVar15 != 0x8)) {\ncode_r0x00410a51:\n        ppiStack244 = uStack212;\n        ppiStack232 = uStack220;\n        uStack204 = ppiStack216;\n        arg_10h = uStack220;\n        goto code_r0x004105f4;\n    }\n    uStack204 = ppiStack216;\n    ppiStack244 = uStack212;\n    ppiStack232 = uStack220;\n    if (ppiStack216 == NULL) goto code_r0x004105f4;\n    unaff_EBX = uStack220;\n    if ((ppiStack216 != 0x1) && (unaff_EBX = uStack212,  uStack208._1_1_ != '\\0')) {\n        unaff_EBX = uStack212[4];\n    }\n    uStack28 = 0;\n    fcn.004119e0(unaff_EBX);\n    cVar5 = fcn.004039e5();\n    if (cVar5 == '\\0') {\ncode_r0x004114e3:\n        if (ppiVar7 != 0x7) goto code_r0x0041154c;\n    }\n    else if (ppiVar7 != 0x8) {\n        if (cVar5 != '\\0') goto code_r0x0041154c;\n        goto code_r0x004114e3;\n    }\n    unaff_EDI = arg_8h;\n    iVar9 = fcn.0041b07d(arg_8h, arg_ch);\n    if (iVar9 < 0) {\n        fcn.004734ba(0x6e, uStack184);\n        piStack252 = 0xffffffff;\n        fcn.0040e8a0();\n        ppiVar7 = uStack248;\n        ppiVar13 = unaff_EBX;\n        goto joined_r0x00410697;\n    }\n    if (piStack252 == 0x8) {\n        ppiVar25 = fcn.0041d691();\n        fcn.0040e8a0();\n        *ppiVar25 = 1;\n    }\n    else {\n        ppiVar25 = arg_10h;\n        if ((ppiVar13 != 0x1) && (ppiVar25 = ppiVar26,  uStack220._1_1_ != '\\0')) {\n            ppiVar25 = ppiVar26[4];\n        }\n        fcn.0040e8a0();\n        *ppiVar25 = 0;\n    }\n    ppiVar25[3] = 0x9;\n    if (uStack248._3_1_ != '\\0') {\n        ppiVar25 = ppiStack240[1];\n        in_stack_fffffee4 = 0x455619;\n        fcn.0041fd4d(ppiStack240);\n        ppiVar23 = ppiStack240;\n        ppiStack240 = ppiVar25;\n        ppiStack192 = ppiVar25;\n    }\n    if (uStack188 == '\\0') {\n        ppiVar25 = ppiStack240[1];\n        in_stack_fffffee4 = 0x455636;\n        fcn.0041fd4d(ppiStack240);\n        ppiVar23 = ppiStack240;\n        ppiStack240 = ppiVar25;\n        ppiStack192 = ppiVar25;\n    }\n    bVar20 = uStack188 != '\\0';\n    uStack196 = ppiVar8 + -1;\n    uStack188._0_2_ = CONCAT11(bVar20, uStack188);\n    uStack188 = uStack188 & 0xffff0000 | uStack188;\n    uStack248 = uStack248 & 0xffffff | bVar20 << 0x18;\ncode_r0x0041154c:\n    ppiVar25 = 0x411558;\n    fcn.0040e8a0();\n    goto code_r0x004105f4;\ncode_r0x00410d8d:\n    uStack248 = ppiStack200;\n    ppiVar26 = ppiVar26 & 0xffffff | (uStack196 >> 8) << 0x18;\n    goto code_r0x00410656;\ncode_r0x004556e6:\n    ppiVar13 = ppiStack172;\n    fcn.004734ba(0x6e, ppiStack172);\n    ppiVar7 = uStack188;\n    goto code_r0x00455705;\ncode_r0x00410a10:\n    if (uStack248._3_1_ == '\\0') {\n        ppiVar25 = 0x8;\n        ppiVar23 = 0x410a1f;\n        ppiStack192 = fcn.0041fd5b(8, unaff_EDI);\n        *ppiStack192 = piVar15;\n        ppiStack192[1] = ppiStack240;\n        ppiStack240 = ppiStack192;\n    }\n    else {\n        *ppiStack240 = piVar15;\n        uStack248 = uStack248 & 0xffffff;\n        uStack188 = uStack188 & 0xffff00ff;\n    }\n    uStack196 = uStack196 + 1;\n    ppiVar8 = uStack196;\n    goto code_r0x00410a3c;\n}\n",
        "token_count": 18381
    },
    "004119e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004119e0(ulong *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    ulong *in_ECX;\n    uint unaff_EBX;\n    uint unaff_EDI;\n    \n    iVar4 = *(arg_8h + 0xc);\n    *(in_ECX + 0xc) = iVar4;\n    if (iVar4 == 1) {\ncode_r0x004119f5:\n        uVar3 = *arg_8h;\ncode_r0x004119f7:\n        *in_ECX = uVar3;\n    }\n    else {\n        if (0xe < iVar4 - 1U) {\n            return;\n        }\n    // switch table (15 cases) at 0x411aa0\n        switch(*((iVar4 - 1U) * 4 + 0x411aa0)) {\n        case 0x4119f5:\n            goto code_r0x004119f5;\n        case 0x411a0c:\n            *in_ECX = *arg_8h;\n            return;\n        case 0x411a16:\n            puVar2 = fcn.0041fd5b(0x10, unaff_EDI);\n            puVar5 = *(arg_8h + 1);\n            *puVar2 = *puVar5;\n            puVar2[1] = puVar5[1];\n            puVar2[2] = puVar5[2];\n            piVar1 = puVar5[3];\n            puVar2[3] = piVar1;\n            *piVar1 = *piVar1 + 1;\n            *(in_ECX + 1) = puVar2;\n            return;\n        case 0x411a44:\n            *in_ECX = *arg_8h;\n            return;\n        case 0x411a4e:\n            fcn.0041fd5b(4, unaff_EDI);\n            uVar3 = fcn.0041db3a(*arg_8h);\n            *in_ECX = uVar3;\n            return;\n        case 0x411a69:\n            fcn.0041fd5b(0x18, unaff_EDI);\n            uVar3 = fcn.00402002(*arg_8h);\n            *in_ECX = uVar3;\n            return;\n        case 0x411a84:\n            fcn.0041fd5b(0x18, unaff_EDI);\n            uVar3 = fcn.004023a4(*arg_8h);\n            *in_ECX = uVar3;\n            return;\n        case 0x455985:\n            *in_ECX = *arg_8h;\n            *(in_ECX + 4) = *(arg_8h + 4);\n            break;\n        case 0x455994:\n            if (*arg_8h != 0) {\n                uVar3 = fcn.0041fd5b(0x10, unaff_EDI);\n                *in_ECX = uVar3;\n                (*_sym.imp.OLEAUT32.dll_VariantClear)(uVar3);\n                iVar4 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(*in_ECX, *arg_8h);\n                if (iVar4 < 0) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(*in_ECX);\n                    fcn.0041fd4d(*in_ECX);\n                    *in_ECX = 0;\n                }\n            }\n            break;\n        case 0x4559e1:\n            puVar5 = fcn.0041fd5b(8, unaff_EDI);\n            *in_ECX = puVar5;\n            *puVar5 = **arg_8h;\n            if (**in_ECX == 0) {\n                uVar3 = fcn.0041fd8b(1);\n                *(*in_ECX + 4) = uVar3;\n                **(*in_ECX + 4) = 0;\n            }\n            else {\n                uVar3 = fcn.0041fd8b(**in_ECX);\n                *(*in_ECX + 4) = uVar3;\n                fcn.00420db0((*in_ECX)[1], *(*arg_8h + 4), **in_ECX);\n            }\n            break;\n        case 0x455a3b:\n            fcn.0041fd5b(0x14, unaff_EDI);\n            uVar3 = fcn.0046f05f(*arg_8h);\n            goto code_r0x004119f7;\n        case 0x455a53:\n            iVar6 = fcn.0041fd5b(0x14, unaff_EBX);\n            fcn.0040c25d();\n            *in_ECX = iVar6;\n            iVar4 = *arg_8h;\n            if (iVar6 != iVar4) {\n                fcn.0040c1c3(iVar4);\n                iVar4 = *arg_8h;\n                iVar6 = *in_ECX;\n            }\n            *(iVar6 + 0x10) = *(iVar4 + 0x10);\n        }\n    }\n    return;\n}\n",
        "token_count": 1180
    },
    "00411ae0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00411ae0(int32_t *arg_8h, int32_t *arg_ch, int32_t **arg_10h, int32_t **arg_14h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    char cVar4;\n    int32_t **arg_10h_00;\n    int16_t **ppiVar5;\n    uint arg_8h_00;\n    int32_t iVar6;\n    int32_t in_ECX;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t **arg_8h_01;\n    int16_t **ppiVar9;\n    uint var_150h;\n    uint var_50h;\n    int16_t **var_48h;\n    int16_t **var_40h;\n    int16_t **var_38h;\n    int32_t var_2ch;\n    int16_t **var_28h;\n    uint var_20h;\n    int32_t var_14h;\n    int16_t **var_10h;\n    uint var_ch;\n    int16_t **var_8h;\n    int32_t var_4h;\n    \n    arg_8h_01 = arg_14h;\n    arg_10h_00 = arg_10h;\n    piVar8 = arg_ch;\n    iVar6 = arg_8h[1];\n    iVar7 = *arg_ch;\n    iVar2 = *(iVar6 + iVar7 * 4);\n    iVar1 = *(iVar2 + 8);\n    if (iVar1 != 0x4e) {\n        if (iVar1 == 0x35) {\n            iVar6 = fcn.00487aa5(arg_8h, arg_ch, arg_10h, arg_14h);\njoined_r0x00456008:\n            if (iVar6 < 0) {\n                return 0xffffffff;\n            }\n            goto code_r0x00411b59;\n        }\n        if (iVar1 == 0x47) {\n            if (((arg_10h[3] != 0xd) && (arg_10h[3] != 0xe)) && (cVar4 = fcn.0041da5f(),  cVar4 == '\\0')) {\n                fcn.004734ba(0xba, *(iVar2 + 10));\n                return 0xffffffff;\n            }\n            cVar4 = fcn.0041da5f();\n            arg_8h_01 = arg_14h;\n            if (cVar4 == '\\0') {\n                fcn.004855b0(arg_8h);\n                var_20h._0_2_ = 0xffff;\n                var_20h._2_2_ = 0;\n                *arg_ch = *arg_ch + -1;\n                if (arg_10h_00[3] == 0xd) {\n                    fcn.0040bef7(1);\n                    if (arg_10h_00[3] == 0xd) {\n                        var_28h = (*arg_10h_00)[4];\n                    }\n                    else {\n                        var_28h = NULL;\n                    }\n                    fcn.004709ea(&fcn.00411ae0::var_28h);\n                    arg_8h_01 = arg_14h;\n                    iVar6 = fcn.00412c10(0, &fcn.00411ae0::var_10h, arg_ch, arg_14h);\n                    if (iVar6 < 0) goto code_r0x004560e3;\n                    iVar6 = *(in_ECX + 0xfc);\n                }\n                else {\n                    fcn.0040bef7(0x34);\n                    arg_8h_00 = fcn.00471037(&fcn.00411ae0::var_50h);\n                    fcn.0040bf6f(arg_8h_00);\n                    fcn.0040b1ff();\n                    fcn.004709ea(&fcn.00411ae0::var_28h);\n                    arg_8h_01 = arg_14h;\n                    iVar6 = fcn.0040d840(0, &fcn.00411ae0::var_10h, arg_ch, arg_14h, &fcn.00411ae0::arg_8h + 3);\n                    if (iVar6 < 0) goto code_r0x004560e3;\n                    iVar6 = *(in_ECX + 0xfc);\n                }\n                if (iVar6 == 1) {\ncode_r0x004560e3:\n                    fcn.0041d6ea();\n                    var_10h = 0x49d114;\n                    fcn.00405fc0();\n                    fcn.0041fd94(var_ch);\n                    return 0xffffffff;\n                }\n                fcn.0041d6ea();\n                var_10h = 0x49d114;\n                fcn.00405fc0();\n                fcn.0041fd94(var_ch);\n                goto code_r0x00411b59;\n            }\n            iVar6 = fcn.00487aa5(arg_8h, arg_ch, arg_10h_00, arg_14h);\n            goto joined_r0x00456008;\n        }\n        if (arg_14h == arg_10h) goto code_r0x00411b59;\n        piVar8 = arg_14h[3];\n        if ((piVar8 == 0x4) && (arg_10h[3] == 0x4)) {\n            if (arg_14h[2] != arg_10h[2]) {\n                fcn.0040c1c3(arg_10h[2]);\n            }\n            goto code_r0x00411b59;\n        }\n        if (arg_14h[2] != NULL) {\n            fcn.0041d962(arg_14h[2]);\n            piVar8 = arg_8h_01[3];\n            arg_8h_01[2] = NULL;\n        }\n        if (4 < piVar8) {\n    // switch table (11 cases) at 0x4563bb\n            switch(piVar8) {\n            case 0x5:\n                goto code_r0x00455fa2;\n            default:\n                break;\n            case 0x8:\n                goto code_r0x00455f61;\n            case 0xa:\n                goto code_r0x00455f89;\n            case 0xb:\n                fcn.0041fd94((*arg_8h_01)[1]);\n                goto code_r0x00455f85;\n            case 0xc:\n                goto code_r0x004561ee;\n            case 0xd:\n            case 0xe:\n                arg_8h = *arg_8h_01;\n                goto joined_r0x00455fc1;\n            case 0xf:\n                goto code_r0x00456203;\n            }\n        }\n        goto code_r0x00411b44;\n    }\n    if (arg_10h[3] != 0x5) {\n        if (arg_10h[3] != 0xf) {\n            fcn.004734ba(0x7c, *(iVar2 + 10));\n            return 0xffffffff;\n        }\n        ppiVar9 = 0x2;\n        iVar6 = fcn.00401d5f(arg_8h, arg_ch, &fcn.00411ae0::arg_10h, 2);\n        arg_10h_00 = arg_10h;\n        if (iVar6 < 0) {\n            return 0xffffffff;\n        }\ncode_r0x00411cc9:\n        arg_8h_01 = arg_14h;\n        if (arg_14h == arg_10h_00) goto code_r0x00411b59;\n        piVar8 = arg_14h[3];\n        if ((piVar8 == 0x4) && (arg_10h_00[3] == 0x4)) {\n            if (arg_14h[2] != arg_10h_00[2]) {\n                fcn.0040c1c3(arg_10h_00[2]);\n            }\n            goto code_r0x00411b59;\n        }\n        ppiVar5 = arg_14h[2];\n        if (ppiVar5 != NULL) {\n            fcn.0041d962();\n            piVar8 = arg_8h_01[3];\n            arg_8h_01[2] = NULL;\n            ppiVar9 = ppiVar5;\n        }\n        if (4 < piVar8) {\n    // switch table (11 cases) at 0x45638f\n            switch(piVar8) {\n            case 0x5:\ncode_r0x00455fa2:\n                arg_8h = *arg_8h_01;\n                if (arg_8h != NULL) {\n                    fcn.0041d593();\n                    piVar8 = arg_8h;\n                    goto code_r0x00455fd3;\n                }\n                break;\n            case 0x8:\ncode_r0x00455f61:\n                if (*arg_8h_01 != NULL) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(*arg_8h_01);\ncode_r0x00455f85:\n                    piVar8 = *arg_8h_01;\n                    goto code_r0x00455fd3;\n                }\n                break;\n            case 0xa:\ncode_r0x00455f89:\n                arg_8h = *arg_8h_01;\n                if (arg_8h != NULL) {\n                    fcn.0040b1ff();\n                    piVar8 = arg_8h;\n                    goto code_r0x00455fd3;\n                }\n                break;\n            case 0xb:\n                fcn.0041fd94((*arg_8h_01)[1], ppiVar9);\n                piVar8 = *arg_8h_01;\ncode_r0x00455fd3:\n                fcn.0041fd4d(piVar8);\n                break;\n            case 0xc:\ncode_r0x004561ee:\n                if (*arg_8h_01 != NULL) {\n                    fcn.0045fc42(*arg_8h_01);\n                }\n                break;\n            case 0xd:\n            case 0xe:\n                arg_8h = *arg_8h_01;\njoined_r0x00455fc1:\n                if (arg_8h != NULL) {\n                    fcn.0040b1ff();\n                    piVar8 = arg_8h;\n                    goto code_r0x00455fd3;\n                }\n                break;\n            case 0xf:\ncode_r0x00456203:\n                if (*arg_8h_01 != NULL) {\n                    (****arg_8h_01)(1);\n                }\n            }\n        }\ncode_r0x00411b44:\n        arg_8h_01[3] = 0x1;\n        *arg_8h_01 = NULL;\n        fcn.004119e0(arg_10h_00);\ncode_r0x00411b59:\n        if (((*(in_ECX + 0x102) != '\\0') || (*(in_ECX + 0x103) != '\\0')) && (arg_8h_01[3] == 0x4)) {\n            var_8h = NULL;\n            fcn.004119e0(arg_8h_01);\n            if (*(in_ECX + 0x102) != '\\0') {\n                fcn.00487559();\n                fcn.00408e90();\n                iVar6 = fcn.004248f3(*var_8h);\n                if (iVar6 == 0) {\n                    fcn.0040c5e7(arg_10h_00);\n                }\n            }\n            if (*(in_ECX + 0x103) != '\\0') {\n                fcn.00487698(&fcn.00411ae0::var_10h);\n                fcn.00408e90();\n                iVar6 = fcn.004248f3(*var_8h);\n                if (iVar6 == 0) {\n                    fcn.0040c5e7(arg_10h_00);\n                }\n            }\n            fcn.0040c5e7(&fcn.00411ae0::var_10h);\n            fcn.0040e8a0();\n        }\n        return 0;\n    }\n    var_10h = NULL;\n    var_8h = NULL;\n    var_4h = 1;\n    var_14h = 0;\n    var_2ch = *(*(iVar6 + -4 + iVar7 * 4) + 10);\n    do {\n        *piVar8 = iVar7 + 1;\n        arg_ch = *(*(iVar6 + (iVar7 + 1) * 4) + 10);\n        iVar6 = fcn.00410540(0x411bd6, piVar8, &fcn.00411ae0::var_10h, 0xffffffff);\n        ppiVar5 = var_8h;\n        ppiVar9 = var_10h;\n        if (iVar6 < 0) {\n            if (var_8h != NULL) {\n                *var_8h[3] = *var_8h[3] + -1;\n                if (*var_8h[3] == 0) {\n                    fcn.0041fd94(*var_8h);\n                    fcn.0041fd4d(ppiVar5[3]);\n                }\n                fcn.0041fd4d(ppiVar5);\n                var_8h = NULL;\n            }\n            if (var_4h < 5) {\n                return 0xffffffff;\n            }\n            if (10 < var_4h - 5U) {\n                return 0xffffffff;\n            }\n    // switch table (11 cases) at 0x456363\n            switch(*((var_4h - 5U) * 4 + 0x456363)) {\n            case 0x455bd7:\n                goto code_r0x00455bd7;\n            case 0x455c07:\n                goto code_r0x00455c07;\n            case 0x455c2a:\n                goto code_r0x00455c2a;\n            case 0x455c4c:\n                goto code_r0x00455c4c;\n            case 0x455c6c:\n                goto code_r0x00455c6c;\n            case 0x455ec9:\n                goto code_r0x00455ec9;\n            case 0x456066:\n                goto code_r0x00456066;\n            }\n            goto code_r0x00455c82;\n        }\n        ppiVar5 = var_10h;\n        if (var_4h == 1) goto code_r0x00411bef;\n        if (9 < var_4h - 2U) goto code_r0x00411bf7;\n    // switch table (10 cases) at 0x411d94\n        switch(*((var_4h - 2U) * 4 + 0x411d94)) {\n        case 0x411bf7:\n            goto code_r0x00411bf7;\n        case 0x411d0c:\n            piVar3 = *var_8h;\n            if ((((var_4h == 4) && (*piVar3 == 0x30)) && ((piVar3[1] == 0x78 || (piVar3[1] == 0x58)))) &&\n               (var_8h[1] < 0x13)) {\n                fcn.004035b3(0x10);\n                ppiVar5 = var_38h;\n                ppiVar9 = var_10h;\n            }\n            else {\n                ppiVar5 = fcn.00426261(piVar3);\n                ppiVar9 = var_10h;\n            }\n            break;\n        case 0x455aaf:\n            ppiVar5 = fcn.00442010();\n            ppiVar9 = var_10h;\n            break;\n        case 0x455ac2:\n            ppiVar5 = var_10h[1];\n            break;\n        case 0x455acd:\n            if (*var_10h < 9) {\n                fcn.0046ebcd(&fcn.00411ae0::var_40h);\n                ppiVar5 = var_40h;\n                break;\n            }\n            goto code_r0x00411bf7;\n        }\ncode_r0x00411bef:\n        if (ppiVar5 < 0) {\n            fcn.004734ba(0x7b, arg_ch);\n            ppiVar9 = var_8h;\n            if (var_8h != NULL) {\n                *var_8h[3] = *var_8h[3] + -1;\n                if (*var_8h[3] == 0) {\n                    fcn.0041fd94(*var_8h);\n                    fcn.0041fd4d(ppiVar9[3]);\n                }\n                fcn.0041fd4d(ppiVar9);\n                var_8h = NULL;\n            }\n            if (var_4h < 5) {\n                return 0xffffffff;\n            }\n            if (10 < var_4h - 5U) {\n                return 0xffffffff;\n            }\n    // switch table (11 cases) at 0x456337\n            switch(*((var_4h - 5U) * 4 + 0x456337)) {\n            case 0x455bd7:\n                goto code_r0x00455bd7;\n            case 0x455c07:\n                goto code_r0x00455c07;\n            case 0x455c2a:\n                goto code_r0x00455c2a;\n            case 0x455c4c:\n                goto code_r0x00455c4c;\n            case 0x455c6c:\n                goto code_r0x00455c6c;\n            case 0x455ec9:\n                goto code_r0x00455ec9;\n            case 0x456066:\n                goto code_r0x00456066;\n            }\n            goto code_r0x00455c82;\n        }\ncode_r0x00411bf7:\n        iVar6 = *piVar8;\n        arg_ch = arg_8h[1];\n        if (*(arg_ch[iVar6] + 8) != 0x4f) {\n            fcn.004734ba(0x7b, *(arg_ch[iVar6 + -1] + 10));\n            ppiVar9 = var_8h;\n            if (var_8h != NULL) {\n                *var_8h[3] = *var_8h[3] + -1;\n                if (*var_8h[3] == 0) {\n                    fcn.0041fd94(*var_8h);\n                    fcn.0041fd4d(ppiVar9[3]);\n                }\n                fcn.0041fd4d(ppiVar9);\n                var_8h = NULL;\n            }\n            if (var_4h < 5) {\n                return 0xffffffff;\n            }\n            if (10 < var_4h - 5U) {\n                return 0xffffffff;\n            }\n    // switch table (11 cases) at 0x45630b\n            switch(*((var_4h - 5U) * 4 + 0x45630b)) {\n            case 0x455bd7:\n                goto code_r0x00455bd7;\n            case 0x455c07:\n                goto code_r0x00455c07;\n            case 0x455c2a:\n                goto code_r0x00455c2a;\n            case 0x455c4c:\n                goto code_r0x00455c4c;\n            case 0x455c6c:\n                goto code_r0x00455c6c;\n            case 0x455ec9:\n                goto code_r0x00455ec9;\n            case 0x456066:\n                goto code_r0x00456066;\n            }\n            goto code_r0x00455c82;\n        }\n        *piVar8 = iVar6 + 1;\n        if (var_4h == 1) goto code_r0x00411c1e;\n        if (var_4h - 2U < 10) {\n    // switch table (10 cases) at 0x411dbc\n            switch(*((var_4h - 2U) * 4 + 0x411dbc)) {\n            case 0x411d3f:\n                piVar3 = *var_8h;\n                if (((var_4h == 4) && (*piVar3 == 0x30)) &&\n                   (((piVar3[1] == 0x78 || (piVar3[1] == 0x58)) && (var_8h[1] < 0x13)))) {\n                    fcn.004035b3(0x10);\n                    ppiVar9 = var_48h;\n                }\n                else {\n                    ppiVar9 = fcn.00426261(piVar3);\n                }\n                break;\n            case 0x411d8d:\n                goto code_r0x00411d8d;\n            case 0x455b21:\n                ppiVar9 = fcn.00442010();\n                break;\n            case 0x455b30:\n                ppiVar9 = ppiVar9 != '\\0';\n                break;\n            case 0x455b3e:\n                ppiVar9 = ppiVar9[1];\n                break;\n            case 0x455b46:\n                if (8 < *ppiVar9) goto code_r0x00411d8d;\n                fcn.0046ebcd(&fcn.00411ae0::var_28h);\n                ppiVar9 = var_28h;\n            }\n        }\n        else {\ncode_r0x00411d8d:\n            ppiVar9 = NULL;\n        }\ncode_r0x00411c1e:\n        iVar7 = *piVar8;\n        (&fcn.00411ae0::var_150h)[var_14h] = ppiVar9;\n        var_14h = var_14h + 1;\n        iVar6 = arg_8h[1];\n    } while (*(*(iVar6 + iVar7 * 4) + 8) == 0x4e);\n    if (arg_10h[3] == 0x5) {\n        piVar8 = *arg_10h;\n    }\n    else {\n        piVar8 = NULL;\n    }\n    iVar6 = 0;\n    *(*piVar8 + 0x210) = 0;\n    if (0 < var_14h) {\n        do {\n            iVar7 = *(*piVar8 + 0x210);\n            if (iVar7 < 0x40) {\n                *(*piVar8 + 0x110 + iVar7 * 4) = (&fcn.00411ae0::var_150h)[iVar6];\n                *(*piVar8 + 0x210) = *(*piVar8 + 0x210) + 1;\n            }\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < var_14h);\n    }\n    ppiVar9 = NULL;\n    arg_10h_00 = fcn.00411df0(piVar8, 1, 0);\n    if (arg_10h_00 != NULL) {\n        if (var_8h != NULL) {\n            ppiVar9 = var_8h;\n            fcn.0041d962(var_8h);\n            var_8h = NULL;\n        }\n        ppiVar5 = var_10h;\n        if ((4 < var_4h) && (var_4h - 5U < 0xb)) {\n    // switch table (11 cases) at 0x4562df\n            switch(*((var_4h - 5U) * 4 + 0x4562df)) {\n            case 0x455cbd:\n                if (var_10h != NULL) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_10h);\n                    fcn.0041fd4d(var_10h);\n                }\n                break;\n            case 0x455ce1:\n                if (var_10h != NULL) {\n                    fcn.0040b1ff();\n                    fcn.0041fd4d(ppiVar5);\n                }\n                break;\n            case 0x455d04:\n                if (var_10h != NULL) {\n                    fcn.0041d593();\n                    fcn.0041fd4d(ppiVar5);\n                }\n                break;\n            case 0x455d26:\n                fcn.0041fd94(var_10h[1]);\n                fcn.0041fd4d(var_10h);\n                break;\n            case 0x455d46:\n                if (var_10h != NULL) {\n                    ppiVar9 = var_10h;\n                    fcn.0045fc42();\n                }\n                break;\n            case 0x455d5c:\n                if (var_10h != NULL) {\n                    (***var_10h)(1);\n                }\n                break;\n            case 0x455d72:\n                if (var_10h != NULL) {\n                    fcn.0040b1ff();\n                    fcn.0041fd4d(ppiVar5);\n                }\n            }\n        }\n        goto code_r0x00411cc9;\n    }\n    fcn.004734ba(0x7a, var_2ch);\n    ppiVar9 = var_8h;\n    if (var_8h != NULL) {\n        *var_8h[3] = *var_8h[3] + -1;\n        if (*var_8h[3] == 0) {\n            fcn.0041fd94(*var_8h);\n            fcn.0041fd4d(ppiVar9[3]);\n        }\n        fcn.0041fd4d(ppiVar9);\n        var_8h = NULL;\n    }\n    if (var_4h < 5) {\n        return 0xffffffff;\n    }\n    if (10 < var_4h - 5U) {\n        return 0xffffffff;\n    }\n    // switch table (11 cases) at 0x4562b3\n    switch(*((var_4h - 5U) * 4 + 0x4562b3)) {\n    case 0x455bd7:\ncode_r0x00455bd7:\n        if (var_10h == NULL) {\n            return 0xffffffff;\n        }\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_10h);\n        ppiVar9 = var_10h;\n        goto code_r0x00455bfa;\n    case 0x455c07:\ncode_r0x00455c07:\n        ppiVar9 = var_10h;\n        if (var_10h != NULL) {\n            fcn.0040b1ff();\n            fcn.0041fd4d(ppiVar9);\n        }\n        break;\n    case 0x455c2a:\ncode_r0x00455c2a:\n        ppiVar9 = var_10h;\n        if (var_10h != NULL) {\n            fcn.0041d593();\n            fcn.0041fd4d(ppiVar9);\n        }\n        break;\n    case 0x455c4c:\ncode_r0x00455c4c:\n        fcn.0041fd94(var_10h[1]);\n        fcn.0041fd4d(var_10h);\n        break;\n    case 0x455c6c:\ncode_r0x00455c6c:\n        if (var_10h != NULL) {\n            fcn.0045fc42(var_10h);\n        }\n        break;\n    case 0x455c82:\ncode_r0x00455c82:\n        if (var_10h != NULL) {\n            (***var_10h)(1);\n        }\n        break;\n    case 0x455ec9:\ncode_r0x00455ec9:\n        ppiVar9 = var_10h;\n        if (var_10h == NULL) {\n            return 0xffffffff;\n        }\n        fcn.0040b1ff();\ncode_r0x00455bfa:\n        fcn.0041fd4d(ppiVar9);\n    }\ncode_r0x00456066:\n    return 0xffffffff;\n}\n",
        "token_count": 6391
    },
    "00411df0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411df0(int32_t **arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint uVar8;\n    int32_t **in_stack_ffffffec;\n    \n    if (((arg_ch == 2) || (arg_ch == 4)) && (arg_ch != 1)) {\n        piVar3 = *arg_8h;\n        iVar4 = *piVar3;\n        if ((iVar4 < 2) || (iVar4 == 0x7fffffff)) {\n            bVar2 = false;\n        }\n        else {\n            bVar2 = true;\n        }\n        if (bVar2) {\n            *piVar3 = iVar4 + -1;\n            in_stack_ffffffec = arg_8h;\n            fcn.004021a5(arg_8h);\n            **arg_8h = 1;\n            piVar3 = *arg_8h;\n        }\n        if (arg_ch == 2) {\n            if (*piVar3 != 0x7fffffff) {\n                *piVar3 = 1;\n            }\n        }\n        else {\n            *piVar3 = 0x7fffffff;\n        }\n    }\n    if ((arg_10h != NULL) && ((*arg_8h)[0x84] = 0,  0 < arg_10h)) {\n        puVar7 = &arg_10h;\n        iVar4 = arg_10h;\n        do {\n            in_stack_ffffffec = puVar7[1];\n            puVar7 = puVar7 + 1;\n            fcn.004084b9(in_stack_ffffffec);\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    arg_10h = *arg_8h;\n    iVar4 = arg_10h[2];\n    if ((iVar4 == 0) || (iVar6 = arg_10h[0x43],  iVar6 != arg_10h[0x84])) {\ncode_r0x00456425:\n        uVar8 = 0;\n    }\n    else {\n        iVar5 = 0;\n        if (0 < iVar6) {\n            piVar3 = arg_10h + 3;\n            do {\n                if ((piVar3[0x41] < 0) || (*piVar3 <= piVar3[0x41])) goto code_r0x00456425;\n                iVar5 = iVar5 + 1;\n                piVar3 = piVar3 + 1;\n            } while (iVar5 < iVar6);\n        }\n        iVar5 = 0;\n        if (0 < iVar6) {\n            piVar3 = arg_10h + 0x44;\n            do {\n                if (piVar3[-0x41] == 5000) {\n                    iVar4 = iVar4 / 5000;\n                }\n                else {\n                    iVar4 = iVar4 / piVar3[-0x41];\n                }\n                iVar1 = *piVar3;\n                piVar3 = piVar3 + 1;\n                iVar5 = iVar5 + iVar1 * iVar4;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n            if (iVar5 < 0) goto code_r0x00456425;\n        }\n        if (*(arg_10h[1] + iVar5 * 4) == 0) {\n            uVar8 = 0x10;\n            iVar4 = fcn.0041fd5b(0x10, in_stack_ffffffec);\n            fcn.0041fd5b(0x10, uVar8);\n            uVar8 = fcn.0040b606(0x49d0d0);\n            *(iVar4 + 8) = uVar8;\n            *(iVar4 + 0xc) = 4;\n            *((*arg_8h)[1] + iVar5 * 4) = iVar4;\n            return *((*arg_8h)[1] + iVar5 * 4);\n        }\n        uVar8 = *((*arg_8h)[1] + iVar5 * 4);\n    }\n    return uVar8;\n}\n",
        "token_count": 969
    },
    "00411fa0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00411fa0(int32_t *arg_8h, double **arg_ch)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    double *pdVar7;\n    uint32_t uVar8;\n    uchar *puVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    int32_t *piVar12;\n    uint32_t uVar13;\n    uint uVar14;\n    uint8_t *puVar15;\n    uint32_t uVar16;\n    uint extraout_ECX;\n    char extraout_DL;\n    char extraout_DL_00;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint arg_8h_02;\n    uint arg_8h_03;\n    uint arg_8h_04;\n    uint arg_8h_05;\n    uchar uVar17;\n    double *pdVar18;\n    uint unaff_EDI;\n    int32_t iVar19;\n    bool bVar20;\n    float10 fVar21;\n    float10 fVar22;\n    ulong uVar23;\n    ulong uVar24;\n    uint var_30h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar12 = arg_8h[1];\n    piVar4 = piVar12;\n    if (*(arg_8h + 9) != '\\0') {\n        piVar4 = piVar12[1];\n    }\n    iVar19 = *piVar4;\n    piVar4 = piVar12;\n    if (*(arg_8h + 9) != '\\0') {\n        piVar4 = piVar12[1];\n        fcn.0041fd4d(piVar12);\n        arg_8h[1] = piVar4;\n        *(arg_8h + 9) = 0;\n    }\n    cVar2 = *(arg_8h + 2);\n    if (cVar2 == '\\0') {\n        iVar6 = piVar4[1];\n        fcn.0041fd4d(piVar4);\n        arg_8h[1] = iVar6;\n    }\n    *(arg_8h + 9) = cVar2 != '\\0';\n    *arg_8h = *arg_8h + -1;\n    if (((iVar19 == 0x11) || (iVar19 == 10)) || (iVar19 == 0x10)) {\n        if (arg_ch[1] < 1) {\n            return 0xffffffff;\n        }\n        if (iVar19 != 10) {\n            if (iVar19 != 0x10) {\n                return 0;\n            }\n            puVar5 = &var_20h;\n            var_20h = 0xffffffff;\n            var_18h = 0;\n            var_14h = 1;\n            fcn.0041d691();\n            fcn.0041b451(puVar5);\n            fcn.0040e8a0();\n            return 0;\n        }\n        fcn.0041d691();\n        uVar3 = fcn.004039e5();\n        puVar15 = fcn.0041d691();\n        fcn.0040e8a0();\n        *(puVar15 + 0xc) = 9;\n        *puVar15 = uVar3 ^ 1;\n        return 0;\n    }\n    pdVar7 = arg_ch[1];\n    if (pdVar7 < 2) {\n        return 0xffffffff;\n    }\n    // switch table (16 cases) at 0x412a90\n    switch(iVar19) {\n    case 0:\n        if (pdVar7 == 0x1) {\n            pdVar18 = *arg_ch;\n        }\n        else {\n            pdVar18 = arg_ch[2];\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar18 = *(pdVar18 + 2);\n            }\n        }\n        if (pdVar7 == 0x2) {\n            pdVar7 = *arg_ch;\n        }\n        else {\n            pdVar7 = *(arg_ch[2] + 2);\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar7 = *(pdVar7 + 2);\n            }\n        }\n        iVar19 = *(pdVar7 + 0xc);\n        iVar6 = *((iVar19 * 0x10 + *(pdVar18 + 0xc)) * 4 + 0x4b1448);\n        if (iVar6 != 3) {\n    // switch table (9 cases) at 0x412bd4\n            switch(iVar6) {\n            case 1:\n            case 9:\n                iVar19 = fcn.0040ce67();\n                iVar6 = fcn.0040ce67();\n                if (iVar19 < iVar6) goto code_r0x0041244f;\n                break;\n            case 2:\n                uVar23 = fcn.0040cc8f();\n                iVar19 = uVar23 >> 0x20;\n                uVar24 = fcn.0040cc8f();\n                iVar6 = uVar24 >> 0x20;\n                if (iVar19 < iVar6) goto code_r0x0041244f;\n                if (iVar19 <= iVar6) {\n                    bVar20 = uVar23 < uVar24;\n                    goto code_r0x00456bae;\n                }\n                break;\n            case 4:\n                fcn.00408e90();\n                puVar5 = *(pdVar18 + 1);\n                fcn.00408e90();\n                iVar19 = fcn.0041d5dc(**(pdVar7 + 1), (*(pdVar7 + 1))[1], *puVar5, puVar5[1], 0);\n                if (iVar19 < 0) goto code_r0x0041244f;\n                break;\n            case 7:\n                uVar11 = fcn.00471dda();\n                uVar13 = fcn.00471dda();\n                bVar20 = uVar11 < uVar13;\ncode_r0x00456bae:\n                if (bVar20) goto code_r0x0041244f;\n            }\ncode_r0x004121f9:\n            if (arg_ch[1] == 0x2) {\n                pdVar7 = *arg_ch;\n            }\n            else {\n                pdVar7 = *(arg_ch[2] + 2);\n                if (*(arg_ch + 0xd) != '\\0') {\n                    pdVar7 = *(pdVar7 + 2);\n                }\n            }\n            if (*(pdVar7 + 1) != 0) {\n                fcn.0041d962();\n                *(pdVar7 + 1) = 0;\n            }\n            if (4 < *(pdVar7 + 0xc)) {\n    // switch table (11 cases) at 0x456ee0\n                switch(*(pdVar7 + 0xc)) {\n                case 5:\n                    goto code_r0x00456af9;\n                case 8:\n                    goto code_r0x00456abb;\n                case 10:\n                    goto code_r0x00456ae3;\n                case 0xb:\n                    fcn.0041fd94(*(*pdVar7 + 4));\n                    goto code_r0x00456adf;\n                case 0xc:\n                    goto code_r0x00456b0e;\n                case 0xd:\n                case 0xe:\n                    iVar19 = *pdVar7;\n                    if (iVar19 != 0) goto code_r0x00456b42;\n                    break;\n                case 0xf:\n                    goto code_r0x00456b23;\n                }\n            }\n            goto code_r0x0041212a;\n        }\n        fVar21 = 1;\n        if (iVar19 == 3) {\n            _var_8h = *pdVar7;\n            fVar21 = _var_8h;\n        }\n        else {\n    // switch table (10 cases) at 0x456eb8\n            switch(iVar19) {\n            case 1:\n            case 7:\n                fVar21 = *pdVar7;\n                _var_8h = *pdVar7;\n                break;\n            case 2:\n                fVar21 = *pdVar7;\n                _var_8h = *pdVar7;\n                break;\n            default:\ncode_r0x00456c4b:\n                _var_8h = 0;\n                fVar21 = 0;\n                break;\n            case 4:\n                cVar2 = fcn.0040c548();\n                if (cVar2 == '\\0') {\n                    fVar21 = fcn.0042cef5(arg_8h_04);\n                    _var_8h = fVar21;\n                }\n                else {\n                    fcn.004035b3(8);\n                    fVar21 = CONCAT44(var_14h, var_18h);\n                    _var_8h = CONCAT44(var_14h, var_18h);\n                }\n                break;\n            case 9:\n                if (*pdVar7 == '\\0') goto code_r0x00456c4b;\n                _var_8h = fVar21;\n                break;\n            case 10:\n                fVar21 = *(*pdVar7 + 4);\n                _var_8h = *(*pdVar7 + 4);\n            }\n        }\n        fVar22 = 1;\n        if (*(pdVar18 + 0xc) == 3) {\n            fVar22 = *pdVar18;\n        }\n        else {\n    // switch table (10 cases) at 0x412b40\n            switch(*(pdVar18 + 0xc)) {\n            case 1:\n            case 7:\n                fVar22 = *pdVar18;\n                break;\n            case 2:\n                fVar22 = *pdVar18;\n                break;\n            default:\ncode_r0x00456cb5:\n                fVar22 = 0;\n                break;\n            case 4:\n                cVar2 = fcn.0040c548();\n                if (cVar2 == '\\0') {\n                    fVar22 = fcn.0042cef5(arg_8h_05);\n                }\n                else {\n                    fcn.004035b3(8);\n                    fVar22 = CONCAT44(var_14h, var_18h);\n                }\n                fVar21 = _var_8h;\n                break;\n            case 9:\n                if (*pdVar18 == '\\0') goto code_r0x00456cb5;\n                break;\n            case 10:\n                fVar22 = *(*pdVar18 + 4);\n            }\n        }\n        if (((fVar22 < fVar21) << 8 | (fVar22 == fVar21) << 0xe) != 0) goto code_r0x004121f9;\ncode_r0x0041244f:\n        if (arg_ch[1] == 0x2) {\n            pdVar7 = *arg_ch;\n        }\n        else {\n            pdVar7 = *(arg_ch[2] + 2);\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar7 = *(pdVar7 + 2);\n            }\n        }\n        fcn.0040e8a0();\n        *pdVar7 = 1;\n        goto code_r0x00412130;\n    case 1:\n        if (pdVar7 == 0x1) {\n            pdVar18 = *arg_ch;\n        }\n        else {\n            pdVar18 = arg_ch[2];\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar18 = *(pdVar18 + 2);\n            }\n        }\n        if (pdVar7 == 0x2) {\n            pdVar7 = *arg_ch;\n        }\n        else {\n            pdVar7 = *(arg_ch[2] + 2);\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar7 = *(pdVar7 + 2);\n            }\n        }\n        iVar19 = *(pdVar18 + 0xc);\n        iVar6 = *((iVar19 * 0x10 + *(pdVar7 + 0xc)) * 4 + 0x4b1448);\n        if (iVar6 == 3) {\n            fVar21 = 1;\n            if (iVar19 == 3) {\n                _var_8h = *pdVar18;\n                fVar21 = _var_8h;\n            }\n            else {\n    // switch table (10 cases) at 0x412af0\n                switch(iVar19) {\n                case 1:\n                case 7:\n                    fVar21 = *pdVar18;\n                    _var_8h = *pdVar18;\n                    break;\n                case 2:\n                    fVar21 = *pdVar18;\n                    _var_8h = *pdVar18;\n                    break;\n                default:\ncode_r0x004569d9:\n                    _var_8h = 0;\n                    fVar21 = 0;\n                    break;\n                case 4:\n                    cVar2 = fcn.0040c548();\n                    if (cVar2 == '\\0') {\n                        fVar21 = fcn.0042cef5(arg_8h_02);\n                        _var_8h = fVar21;\n                    }\n                    else {\n                        fcn.004035b3(8);\n                        fVar21 = _var_8h;\n                        _var_8h = _var_8h;\n                    }\n                    break;\n                case 9:\n                    if (*pdVar18 == '\\0') goto code_r0x004569d9;\n                    _var_8h = fVar21;\n                    break;\n                case 10:\n                    fVar21 = *(*pdVar18 + 4);\n                    _var_8h = *(*pdVar18 + 4);\n                }\n            }\n            fVar22 = 1;\n            if (*(pdVar7 + 0xc) == 3) {\n                fVar22 = *pdVar7;\n            }\n            else {\n    // switch table (10 cases) at 0x456e64\n                switch(*(pdVar7 + 0xc)) {\n                case 1:\n                case 7:\n                    fVar22 = *pdVar7;\n                    break;\n                case 2:\n                    fVar22 = *pdVar7;\n                    break;\n                default:\ncode_r0x00456a5b:\n                    fVar22 = 0;\n                    break;\n                case 4:\n                    cVar2 = fcn.0040c548();\n                    if (cVar2 == '\\0') {\n                        fVar22 = fcn.0042cef5(arg_8h_03);\n                    }\n                    else {\n                        fcn.004035b3(8);\n                        fVar22 = CONCAT44(var_14h, var_18h);\n                    }\n                    fVar21 = _var_8h;\n                    break;\n                case 9:\n                    if (*pdVar7 == '\\0') goto code_r0x00456a5b;\n                    break;\n                case 10:\n                    fVar22 = *(*pdVar7 + 4);\n                }\n            }\n            if (((fVar22 < fVar21) << 8 | (fVar22 == fVar21) << 0xe) == 0) {\ncode_r0x004125bc:\n                if (arg_ch[1] == 0x2) {\n                    pdVar7 = *arg_ch;\n                }\n                else {\n                    pdVar7 = *(arg_ch[2] + 2);\n                    if (*(arg_ch + 0xd) != '\\0') {\n                        pdVar7 = *(pdVar7 + 2);\n                    }\n                }\n                fcn.0040e8a0();\n                *pdVar7 = 1;\n                goto code_r0x00412130;\n            }\n        }\n        else {\n    // switch table (9 cases) at 0x412b68\n            switch(iVar6) {\n            case 1:\n            case 9:\n                iVar19 = fcn.0040ce67();\n                iVar6 = fcn.0040ce67();\n                if (iVar6 < iVar19) goto code_r0x004125bc;\n                break;\n            case 2:\n                uVar23 = fcn.0040cc8f();\n                iVar19 = uVar23 >> 0x20;\n                uVar24 = fcn.0040cc8f();\n                iVar6 = uVar24 >> 0x20;\n                if (iVar6 < iVar19) goto code_r0x004125bc;\n                if (iVar6 <= iVar19) {\n                    bVar20 = uVar24 < uVar23;\n                    goto code_r0x0045694f;\n                }\n                break;\n            case 4:\n                fcn.00408e90();\n                puVar5 = *(pdVar7 + 1);\n                fcn.00408e90();\n                iVar19 = fcn.0041d5dc(**(pdVar18 + 1), (*(pdVar18 + 1))[1], *puVar5, puVar5[1], 0);\n                if (iVar19 < 0) goto code_r0x004125bc;\n                break;\n            case 7:\n                uVar11 = fcn.00471dda();\n                uVar13 = fcn.00471dda();\n                bVar20 = uVar13 < uVar11;\ncode_r0x0045694f:\n                if (bVar20) goto code_r0x004125bc;\n            }\n        }\n        if (arg_ch[1] == 0x2) {\n            pdVar7 = *arg_ch;\n        }\n        else {\n            pdVar7 = *(arg_ch[2] + 2);\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar7 = *(pdVar7 + 2);\n            }\n        }\n        if (*(pdVar7 + 1) != 0) {\n            fcn.0041d962();\n            *(pdVar7 + 1) = 0;\n        }\n        if (*(pdVar7 + 0xc) < 5) goto code_r0x0041212a;\n    // switch table (11 cases) at 0x456e8c\n        switch(*(pdVar7 + 0xc)) {\n        case 5:\ncode_r0x00456af9:\n            iVar19 = *pdVar7;\n            if (iVar19 != 0) {\n                fcn.0041d593();\n                goto code_r0x00456b4c;\n            }\n            break;\n        case 8:\ncode_r0x00456abb:\n            if (*pdVar7 != 0) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(*pdVar7);\ncode_r0x00456adf:\n                iVar19 = *pdVar7;\n                goto code_r0x00456b4c;\n            }\n            break;\n        case 10:\ncode_r0x00456ae3:\n            iVar19 = *pdVar7;\n            if (iVar19 != 0) {\n                fcn.0040b1ff();\n                goto code_r0x00456b4c;\n            }\n            break;\n        case 0xb:\n            fcn.0041fd94(*(*pdVar7 + 4));\n            iVar19 = *pdVar7;\n            goto code_r0x00456b4c;\n        case 0xc:\ncode_r0x00456b0e:\n            if (*pdVar7 != 0) {\n                fcn.0045fc42();\n            }\n            break;\n        case 0xd:\n        case 0xe:\n            iVar19 = *pdVar7;\n            if (iVar19 == 0) break;\ncode_r0x00456b42:\n            fcn.0040b1ff();\ncode_r0x00456b4c:\n            fcn.0041fd4d(iVar19);\n            break;\n        case 0xf:\ncode_r0x00456b23:\n            if (*pdVar7 != NULL) {\n                (****pdVar7)(1);\n            }\n        }\ncode_r0x0041212a:\n        *pdVar7 = 0;\ncode_r0x00412130:\n        *(pdVar7 + 0xc) = 9;\n        if (arg_ch[1] != 0x1) {\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar7 = arg_ch[2];\n                pdVar18 = *(pdVar7 + 2);\n                if (pdVar7 == NULL) goto code_r0x00412550;\n                fcn.0041b3e0(pdVar7);\n                arg_ch[2] = pdVar18;\n                goto code_r0x004122c0;\n            }\n            goto code_r0x00412147;\n        }\n        goto code_r0x00412155;\n    case 2:\n        fcn.0041b544();\n        fcn.0040cf49();\n        break;\n    case 3:\n        fcn.0041d691();\n        fcn.0041b544();\n        fcn.0040cf49();\n        break;\n    case 4:\n        fcn.0041d691();\n        fcn.0041b544();\n        fcn.0040ca74();\n        puVar9 = fcn.0041b544();\n        if (extraout_DL_00 != '\\0') goto code_r0x00412809;\n        goto code_r0x004127df;\n    case 5:\n        cVar2 = fcn.0040ca74();\n        if (cVar2 == '\\0') {\n            if (arg_ch[1] == 0x2) {\n                pdVar7 = *arg_ch;\n            }\n            else {\n                pdVar7 = *(arg_ch[2] + 2);\n                if (*(arg_ch + 0xd) != '\\0') {\n                    pdVar7 = *(pdVar7 + 2);\n                }\n            }\n            fcn.0040e8a0();\n            *pdVar7 = 0;\n        }\n        else {\n            pdVar7 = fcn.0041b544();\n            fcn.0040e8a0();\n            *pdVar7 = 1;\n        }\n        *(pdVar7 + 0xc) = 9;\n        fcn.0041b3a3();\n        return 0;\n    case 6:\n        uVar14 = fcn.0041d691();\n        fcn.0041b544();\n        fcn.0047191b(uVar14);\n        break;\n    case 7:\n        puVar9 = fcn.0041b544();\n        fcn.0041d691();\n        fcn.0041b544();\n        cVar2 = fcn.00403885();\n        bVar20 = cVar2 == '\\0';\n        goto code_r0x004127db;\n    case 8:\n        puVar9 = fcn.0041b544();\n        fcn.0041d691();\n        fcn.0041b544();\n        cVar2 = fcn.00403913();\n        bVar20 = cVar2 == '\\0';\n        goto code_r0x004127db;\n    case 9:\n        if (pdVar7 == 0x1) {\n            pdVar18 = *arg_ch;\n        }\n        else {\n            pdVar18 = arg_ch[2];\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar18 = *(pdVar18 + 2);\n            }\n        }\n        if (pdVar7 == 0x2) {\n            pdVar7 = *arg_ch;\n        }\n        else {\n            pdVar7 = *(arg_ch[2] + 2);\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar7 = *(pdVar7 + 2);\n            }\n        }\n    // switch table (11 cases) at 0x412bf8\n        switch(*(pdVar7 + 0xc)) {\n        case 1:\n        case 2:\n        case 3:\n        case 7:\n        case 9:\n        case 10:\ncode_r0x00412a84:\n            fcn.0041f9a5();\n        default:\n            fcn.00408e90();\n            piVar12 = *(pdVar18 + 1);\n            piVar4 = *(pdVar7 + 1);\n            if (piVar4 == piVar12) {\n                piVar12 = fcn.004609c0(&var_20h, piVar4);\n                if (piVar4 != piVar12) {\n                    fcn.0040c1c3(piVar12);\n                }\n                fcn.0040b1ff();\n            }\n            else {\n                iVar19 = piVar12[1];\n                if (iVar19 != 0) {\n                    iVar6 = *piVar4[3];\n                    if (iVar6 < 2) {\n                        fcn.0040be83(piVar4[1] + iVar19);\n                        iVar6 = *piVar4;\n                    }\n                    else {\n                        *piVar4[3] = iVar6 + -1;\n                        puVar5 = fcn.0041fd5b(4, unaff_EDI);\n                        *puVar5 = 1;\n                        piVar4[3] = puVar5;\n                        iVar6 = piVar4[1] + 1 + iVar19;\n                        if (iVar6 == 0) {\n                            uVar11 = 8;\n                        }\n                        else {\n                            uVar11 = iVar6 + 7U & 0xfffffff8;\n                        }\n                        piVar4[2] = uVar11;\n                        iVar6 = fcn.0041fd8b(-(uVar11 * 2 >> 0x20 != 0) | uVar11 * 2);\n                        fcn.00420db0(iVar6, *piVar4, piVar4[1] * 2 + 2);\n                        *piVar4 = iVar6;\n                    }\n                    fcn.00420db0(iVar6 + piVar4[1] * 2, *piVar12, iVar19 * 2);\n                    piVar4[1] = piVar4[1] + iVar19;\n                    *(*piVar4 + piVar4[1] * 2) = 0;\n                }\n            }\n            break;\n        case 4:\n        case 5:\n        case 6:\n        case 8:\n            break;\n        case 0xb:\n            if (*(pdVar18 + 0xc) != 0xb) goto code_r0x00412a84;\n            fcn.0040cb70(pdVar18);\n        }\n        if (arg_ch[1] != 0x1) {\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar7 = arg_ch[2];\n                pdVar18 = *(pdVar7 + 2);\n                if (pdVar7 != NULL) {\n                    fcn.0041b3e0(pdVar7);\n                }\ncode_r0x00412550:\n                arg_ch[2] = pdVar18;\n                *(arg_ch + 0xd) = 0;\n            }\ncode_r0x00412147:\n            if (*(arg_ch + 3) == '\\0') {\n                pdVar7 = arg_ch[2];\n                pdVar18 = *(pdVar7 + 2);\n                if (pdVar7 != NULL) {\n                    fcn.0041b3e0(pdVar7);\n                }\n                arg_ch[2] = pdVar18;\n                *(arg_ch + 0xd) = 0;\n            }\n            else {\n                *(arg_ch + 0xd) = 1;\n            }\n        }\ncode_r0x00412155:\n        arg_ch[1] = arg_ch[1] + -1;\ncode_r0x00412158:\n        return 0;\n    default:\n        goto code_r0x00412158;\n    case 0xb:\n        if (pdVar7 == 0x1) {\n            pdVar18 = *arg_ch;\n        }\n        else {\n            pdVar18 = arg_ch[2];\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar18 = *(pdVar18 + 2);\n            }\n        }\n        if (pdVar7 == 0x2) {\n            pdVar7 = *arg_ch;\n        }\n        else {\n            pdVar7 = *(arg_ch[2] + 2);\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar7 = *(pdVar7 + 2);\n            }\n        }\n        iVar19 = *(pdVar7 + 0xc);\n        if (iVar19 == 3) {\n            if (*(pdVar18 + 0xc) == 3) {\n                fVar21 = *pdVar18;\n            }\n            else {\n    // switch table (10 cases) at 0x456dfc\n                switch(*(pdVar18 + 0xc)) {\n                case 1:\n                case 7:\n                    fVar21 = *pdVar18;\n                    break;\n                case 2:\n                    fVar21 = *pdVar18;\n                    break;\n                default:\ncode_r0x004565b9:\n                    fVar21 = 0;\n                    break;\n                case 4:\n                    cVar2 = fcn.0040c548();\n                    if (cVar2 == '\\0') {\n                        fVar21 = fcn.0042cef5(arg_8h_00);\n                    }\n                    else {\n                        fcn.004035b3(8);\n                        fVar21 = _var_8h;\n                    }\n                    break;\n                case 9:\n                    if (*pdVar18 == '\\0') goto code_r0x004565b9;\n                    fVar21 = 1;\n                    break;\n                case 10:\n                    fVar21 = *(*pdVar18 + 4);\n                }\n            }\ncode_r0x00412261:\n            *pdVar7 = fVar21 + *pdVar7;\n        }\n        else if (iVar19 == 1) {\n            if (*(pdVar18 + 0xc) == 1) {\n                uVar11 = *pdVar18;\n                uVar13 = *pdVar7;\n                iVar19 = (uVar11 >> 0x1f) + (uVar13 >> 0x1f) + CARRY4(uVar11, uVar13);\n                if (uVar11 + uVar13 >> 0x1f == iVar19) {\n                    *pdVar7 = uVar11 + uVar13;\n                }\n                else {\n                    *(pdVar7 + 0xc) = 2;\n                    *pdVar7 = uVar11 + uVar13;\n                    *(pdVar7 + 4) = iVar19;\n                }\n            }\n            else {\n                if (*(pdVar18 + 0xc) != 2) {\n                    fVar21 = fcn.0040cfb5();\n                    _var_8h = fVar21;\n                    fcn.0040e8a0();\n                    *pdVar7 = _var_8h;\n                    *(pdVar7 + 0xc) = 3;\n                    fVar21 = fcn.0040cfb5();\n                    goto code_r0x00412261;\n                }\n                uVar11 = *pdVar7;\n                uVar13 = *pdVar18;\n                iVar19 = *(pdVar18 + 4);\n                *pdVar7 = uVar11 + *pdVar18;\n                *(pdVar7 + 4) = (uVar11 >> 0x1f) + iVar19 + CARRY4(uVar11, uVar13);\n                *(pdVar7 + 0xc) = 2;\n            }\n        }\n        else {\n    // switch table (10 cases) at 0x412bac\n            switch(iVar19) {\n            case 2:\n                if ((*(pdVar18 + 0xc) != 1) && (*(pdVar18 + 0xc) != 2)) goto code_r0x0045645b;\n                uVar23 = fcn.0040cc8f();\n                uVar11 = *pdVar7;\n                *pdVar7 = *pdVar7 + uVar23;\n                *(pdVar7 + 4) = *(pdVar7 + 4) + (uVar23 >> 0x20) + CARRY4(uVar11, uVar23);\n                break;\n            case 4:\n                fcn.0040b771();\n                fcn.0040cb70(pdVar18);\n                break;\n            case 7:\n                iVar19 = *pdVar7;\n                if (*(pdVar18 + 0xc) == 1) {\n                    iVar6 = fcn.0040ce67();\n                }\n                else {\n                    iVar6 = fcn.0040cc8f();\n                }\n                *pdVar7 = iVar19 + iVar6;\n                break;\n            case 9:\n            case 10:\ncode_r0x0045645b:\n                fcn.0041b518();\n                fVar21 = fcn.0040cfb5();\n                goto code_r0x00412261;\n            case 0xb:\n                if (*(pdVar18 + 0xc) != 0xb) {\n                    fcn.0041b518();\n                    fVar21 = fcn.0040cfb5();\n                    goto code_r0x00412261;\n                }\n                iVar6 = fcn.00471e24();\n                iVar19 = **pdVar7;\n                iVar10 = fcn.0041fd8b(iVar6 + iVar19);\n                fcn.00420db0(iVar10, (*pdVar7)[1], **pdVar7);\n                uVar14 = fcn.00471e24();\n                uVar14 = fcn.00471db4(extraout_ECX, uVar14);\n                fcn.00420db0(**pdVar7 + iVar10, uVar14);\n                fcn.0041fd94(*(*pdVar7 + 4));\n                *(*pdVar7 + 4) = iVar10;\n                **pdVar7 = iVar6 + iVar19;\n            }\n        }\n        if (*(pdVar7 + 1) != 0) {\n            fcn.0041d962();\n            *(pdVar7 + 1) = 0;\n        }\n        if (arg_ch[1] != 0x1) {\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar7 = arg_ch[2];\n                pdVar18 = *(pdVar7 + 2);\n                if (pdVar7 == NULL) goto code_r0x004122bd;\n                if (*(pdVar7 + 1) != 0) {\n                    fcn.0041d962(*(pdVar7 + 1));\n                    *(pdVar7 + 1) = 0;\n                }\n                if ((4 < *(pdVar7 + 0xc)) && (uVar11 = *(pdVar7 + 0xc) - 5,  uVar11 < 0xb)) {\n    // switch table (11 cases) at 0x456e24\n                    switch(*(uVar11 * 4 + 0x456e24)) {\n                    case 0x4565f7:\n                        if (*pdVar7 != 0) {\n                            (*_sym.imp.OLEAUT32.dll_VariantCopy)(*pdVar7);\n                            iVar19 = *pdVar7;\n                            goto code_r0x00456698;\n                        }\n                        break;\n                    case 0x456611:\n                        iVar19 = *pdVar7;\n                        if (iVar19 != 0) {\n                            fcn.0040b1ff();\n                            goto code_r0x00456698;\n                        }\n                        break;\n                    case 0x45662a:\n                        iVar19 = *pdVar7;\n                        if (iVar19 != 0) {\n                            fcn.0041d593();\n                            goto code_r0x00456698;\n                        }\n                        break;\n                    case 0x456642:\n                        fcn.0041fd94(*(*pdVar7 + 4));\n                        iVar19 = *pdVar7;\ncode_r0x00456698:\n                        fcn.0041fd4d(iVar19);\n                        break;\n                    case 0x456655:\n                        if (*pdVar7 != 0) {\n                            fcn.0045fc42(*pdVar7);\n                        }\n                        break;\n                    case 0x45666a:\n                        if (*pdVar7 != NULL) {\n                            (****pdVar7)(1);\n                        }\n                        break;\n                    case 0x45667f:\n                        iVar19 = *pdVar7;\n                        if (iVar19 != 0) {\n                            fcn.0040b1ff();\n                            goto code_r0x00456698;\n                        }\n                    }\n                }\n                *(pdVar7 + 0xc) = 1;\n                *pdVar7 = 0;\n                goto code_r0x004122b2;\n            }\n            goto code_r0x00412147;\n        }\n        goto code_r0x00412155;\n    case 0xc:\n        if (pdVar7 == 0x1) {\n            pdVar18 = *arg_ch;\n        }\n        else {\n            pdVar18 = arg_ch[2];\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar18 = *(pdVar18 + 2);\n            }\n        }\n        if (pdVar7 == 0x2) {\n            pdVar7 = *arg_ch;\n        }\n        else {\n            pdVar7 = *(arg_ch[2] + 2);\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar7 = *(pdVar7 + 2);\n            }\n        }\n        if (*(pdVar7 + 0xc) == 3) {\ncode_r0x004122f5:\n            fVar21 = fcn.0040cfb5();\n            *pdVar7 = *pdVar7 - fVar21;\n        }\n        else {\n    // switch table (10 cases) at 0x412b8c\n            switch(*(pdVar7 + 0xc)) {\n            case 2:\n                if ((*(pdVar18 + 0xc) != 1) && (*(pdVar18 + 0xc) != 2)) goto code_r0x004566d5;\n                uVar23 = fcn.0040cc8f();\n                uVar11 = *pdVar7;\n                *pdVar7 = *pdVar7 - uVar23;\n                *(pdVar7 + 4) = (*(pdVar7 + 4) - (uVar23 >> 0x20)) - (uVar11 < uVar23);\n                break;\n            case 3:\n            case 5:\n            case 6:\n            case 8:\n                break;\n            case 4:\n            case 10:\n                fcn.0040b771();\n                fcn.0041b4a2(pdVar18);\n                break;\n            case 7:\n                iVar19 = *pdVar7;\n                if (*(pdVar18 + 0xc) == 1) {\n                    iVar6 = fcn.0040ce67();\n                }\n                else {\n                    iVar6 = fcn.0040cc8f();\n                }\n                *pdVar7 = iVar19 - iVar6;\n                break;\n            case 9:\n            case 0xb:\ncode_r0x004566d5:\n                fcn.0041b518();\n                goto code_r0x004122f5;\n            default:\n                if (*(pdVar18 + 0xc) == 1) {\n                    uVar11 = *pdVar18;\n                    uVar16 = *pdVar7 - uVar11;\n                    uVar13 = *pdVar7;\n                    uVar8 = uVar13 - uVar11;\n                    _var_8h = _var_8h & 0xffffffff | uVar8 << 0x20;\n                    iVar19 = ((uVar13 >> 0x1f) - (uVar11 >> 0x1f)) - (uVar13 < uVar11);\n                    if ((uVar16 == uVar8) && (uVar16 >> 0x1f == iVar19)) {\n                        *pdVar7 = uVar16;\n                    }\n                    else {\n                        *(pdVar7 + 4) = iVar19;\n                        *(pdVar7 + 0xc) = 2;\n                        *pdVar7 = uVar8;\n                    }\n                }\n                else {\n                    if (*(pdVar18 + 0xc) != 2) {\n                        fVar21 = fcn.0040cfb5();\n                        _var_8h = fVar21;\n                        fcn.0040e8a0();\n                        *pdVar7 = _var_8h;\n                        *(pdVar7 + 0xc) = 3;\n                        goto code_r0x004122f5;\n                    }\n                    uVar11 = *pdVar7;\n                    uVar13 = *pdVar18;\n                    iVar19 = *(pdVar18 + 4);\n                    *pdVar7 = uVar11 - *pdVar18;\n                    *(pdVar7 + 4) = ((uVar11 >> 0x1f) - iVar19) - (uVar11 < uVar13);\n                    *(pdVar7 + 0xc) = 2;\n                }\n            }\n        }\n        if (*(pdVar7 + 1) != 0) {\n            fcn.0041d962();\n            *(pdVar7 + 1) = 0;\n        }\n        if (arg_ch[1] == 0x1) goto code_r0x00412155;\n        if (*(arg_ch + 0xd) == '\\0') goto code_r0x00412147;\n        pdVar7 = arg_ch[2];\n        pdVar18 = *(pdVar7 + 2);\n        if (pdVar7 != NULL) {\n            fcn.0040e8a0();\n            goto code_r0x004122b2;\n        }\n        goto code_r0x004122bd;\n    case 0xd:\n        if (pdVar7 == 0x1) {\n            pdVar18 = *arg_ch;\n        }\n        else {\n            pdVar18 = arg_ch[2];\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar18 = *(pdVar18 + 2);\n            }\n        }\n        if (pdVar7 == 0x2) {\n            pdVar7 = *arg_ch;\n        }\n        else {\n            pdVar7 = *(arg_ch[2] + 2);\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar7 = *(pdVar7 + 2);\n            }\n        }\n    // switch table (11 cases) at 0x412ad0\n        switch(*(pdVar7 + 0xc)) {\n        case 1:\n            if (*(pdVar18 + 0xc) == 1) {\n                iVar10 = *pdVar18 * *pdVar7;\n                iVar1 = *pdVar7 * *pdVar18;\n                iVar6 = iVar1 >> 0x20;\n                iVar19 = iVar1;\n                if ((iVar10 - iVar19 == 0) && (iVar10 >> 0x1f == iVar6)) {\n                    *pdVar7 = iVar10;\n                }\n                else {\n                    *(pdVar7 + 0xc) = 2;\n                    *pdVar7 = iVar19;\n                    *(pdVar7 + 4) = iVar6;\n                }\n            }\n            else {\n                if (*(pdVar18 + 0xc) != 2) {\n                    if (*(pdVar7 + 0xc) != 3) {\n                        fVar21 = fcn.0040cfb5();\n                        _var_8h = fVar21;\n                        fcn.0040e8a0();\n                        *pdVar7 = _var_8h;\n                        *(pdVar7 + 0xc) = 3;\n                    }\n                    fVar21 = fcn.0040cfb5();\n                    fVar21 = fVar21 * *pdVar7;\n                    goto code_r0x00412060;\n                }\n                uVar23 = fcn.00441ce0(*pdVar7, *pdVar7 >> 0x1f, *pdVar18, *(pdVar18 + 4));\n                *pdVar7 = uVar23;\n                *(pdVar7 + 4) = uVar23 >> 0x20;\n                *(pdVar7 + 0xc) = 2;\n            }\n            break;\n        case 2:\n            if ((*(pdVar18 + 0xc) != 1) && (*(pdVar18 + 0xc) != 2)) goto code_r0x0045679e;\n            uVar23 = fcn.0040cc8f();\n            uVar23 = fcn.00441ce0(uVar23, *pdVar7, *(pdVar7 + 4));\n            *pdVar7 = uVar23;\n            *(pdVar7 + 4) = uVar23 >> 0x20;\n            break;\n        case 3:\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n        case 10:\n            break;\n        case 4:\n            fcn.0040b771();\n            fcn.0041b451(pdVar18);\n            break;\n        case 9:\n        case 0xb:\ncode_r0x0045679e:\n            fcn.0041b518();\n            fVar21 = fcn.0040cfb5();\n            fVar21 = fVar21 * *pdVar7;\n            goto code_r0x00412060;\n        default:\n            if (*(pdVar18 + 0xc) == 3) {\n                fVar21 = *pdVar18;\n            }\n            else {\n    // switch table (10 cases) at 0x412b18\n                switch(*(pdVar18 + 0xc)) {\n                case 1:\n                case 7:\n                    fVar21 = *pdVar18;\n                    break;\n                case 2:\n                    fVar21 = *pdVar18;\n                    break;\n                default:\ncode_r0x00456823:\n                    fVar21 = 0;\n                    break;\n                case 4:\n                    cVar2 = fcn.0040c548();\n                    if (cVar2 == '\\0') {\n                        fVar21 = fcn.0042cef5(arg_8h_01);\n                    }\n                    else {\n                        fcn.004035b3(8);\n                        fVar21 = _var_8h;\n                    }\n                    break;\n                case 9:\n                    if (*pdVar18 == '\\0') goto code_r0x00456823;\n                    fVar21 = 1;\n                    break;\n                case 10:\n                    fVar21 = *(*pdVar18 + 4);\n                }\n            }\n            fVar21 = fVar21 * *pdVar7;\ncode_r0x00412060:\n            *pdVar7 = fVar21;\n        }\n        iVar19 = *(pdVar7 + 1);\njoined_r0x004123e3:\n        if (iVar19 != 0) {\n            fcn.0041d962();\n            *(pdVar7 + 1) = 0;\n        }\n        if (arg_ch[1] != 0x1) {\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar7 = arg_ch[2];\n                pdVar18 = *(pdVar7 + 2);\n                if (pdVar7 != NULL) {\n                    fcn.0040e8a0();\ncode_r0x004122b2:\n                    fcn.0041fd4d(pdVar7);\n                }\ncode_r0x004122bd:\n                arg_ch[2] = pdVar18;\ncode_r0x004122c0:\n                *(arg_ch + 0xd) = 0;\n            }\n            goto code_r0x00412147;\n        }\n        goto code_r0x00412155;\n    case 0xe:\n        if (pdVar7 == 0x2) {\n            pdVar7 = *arg_ch;\n        }\n        else {\n            pdVar7 = *(arg_ch[2] + 2);\n            if (*(arg_ch + 0xd) != '\\0') {\n                pdVar7 = *(pdVar7 + 2);\n            }\n        }\n        iVar19 = *(pdVar7 + 0xc);\n        if (iVar19 != 3) {\n    // switch table (10 cases) at 0x456e50\n            switch(iVar19) {\n            default:\n                if (iVar19 != 3) {\n                    fVar21 = fcn.0040cfb5();\n                    _var_8h = fVar21;\n                    fcn.0040e8a0();\n                    *pdVar7 = _var_8h;\n                    *(pdVar7 + 0xc) = 3;\n                }\n                break;\n            case 3:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 10:\n                goto code_r0x004123de;\n            }\n        }\n        fVar21 = fcn.0040cfb5();\n        *pdVar7 = *pdVar7 / fVar21;\ncode_r0x004123de:\n        iVar19 = *(pdVar7 + 1);\n        goto joined_r0x004123e3;\n    case 0xf:\n        uVar14 = fcn.0041d691();\n        _var_8h = _var_8h & 0xffffffff00000000;\n        fcn.004119e0(uVar14);\n        fcn.0041b3a3();\n        uVar14 = fcn.0041d691();\n        var_18h = 0;\n        fcn.004119e0(uVar14);\n        puVar5 = &var_10h;\n        fcn.004119e0(puVar5);\n        uVar14 = fcn.00471a18(&var_30h, puVar5);\n        fcn.0041d691();\n        fcn.0040c5e7(uVar14);\n        fcn.0040e8a0();\n        fcn.0040e8a0();\n        fcn.0040e8a0();\n        goto code_r0x00412158;\n    }\n    puVar9 = fcn.0041b544();\n    bVar20 = extraout_DL == '\\0';\ncode_r0x004127db:\n    if (bVar20) {\ncode_r0x00412809:\n        uVar17 = 0;\n    }\n    else {\ncode_r0x004127df:\n        uVar17 = 1;\n    }\n    fcn.0040e8a0();\n    *(puVar9 + 0xc) = 9;\n    *puVar9 = uVar17;\n    fcn.0041b3a3();\n    return 0;\n}\n",
        "token_count": 11306
    },
    "00412c10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00412c10(uint arg_8h, int32_t arg_ch, int32_t **arg_10h, uint *arg_14h)\n\n{\n    int16_t iVar1;\n    int32_t **ppiVar2;\n    int32_t *piVar3;\n    int32_t *arg_8h_00;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    int32_t *in_ECX;\n    uint32_t unaff_ESI;\n    uint unaff_EDI;\n    int32_t *piVar8;\n    uint **ppuVar9;\n    int32_t in_FS_OFFSET;\n    uint *arg_8h_01;\n    int32_t *piVar10;\n    char cVar11;\n    int32_t *piStack104;\n    int32_t *piStack100;\n    int32_t *piStack96;\n    int32_t iStack92;\n    int32_t iStack88;\n    int32_t *piStack84;\n    uint *apuStack80 [2];\n    uint uStack72;\n    int32_t *piStack68;\n    int32_t iStack64;\n    uint32_t uStack60;\n    int32_t iStack56;\n    uint *puStack52;\n    uint *puStack48;\n    int32_t iStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint auStack28 [2];\n    uint uStack20;\n    uint uStack16;\n    \n    iStack56 = 0x49d100;\n    puStack52 = NULL;\n    puStack48 = NULL;\n    iStack44 = 0;\n    ppiVar2 = *(*(arg_ch + 4) + *arg_10h * 4);\n    piStack96 = *ppiVar2;\n    uStack60 = *(ppiVar2 + 10);\n    piStack100 = in_ECX;\n    if ((*(**(in_FS_OFFSET + 0x2c) + 4) < *0x4d2564) && (fcn.004201c2(0x4d2564),  *0x4d2564 == -1)) {\n        puVar7 = fcn.0040b606(L\"CALL\");\n        *0x4d2568 = (**(**0x4d2394 + 4))(*puVar7);\n        fcn.0040b1ff();\n        fcn.00420178(0x4d2564);\n    }\n    piStack68 = _sym.imp.OLEAUT32.dll_VariantCopy;\n    if (piStack96 == *0x4d2568) {\n        iStack92 = fcn.00486fc3(arg_ch, arg_10h, arg_14h);\n        goto code_r0x00412f7b;\n    }\n    piStack84 = in_ECX + 0x115;\n    piVar10 = piStack96;\n    fcn.00413220(piStack96);\n    iVar4 = fcn.00413220(piStack100);\n    iStack88 = 0;\n    puStack48 = NULL;\n    piStack84 = NULL;\n    pcStack40 = NULL;\n    apuStack80[0] = 0x1;\n    uStack36 = 1;\n    puVar7 = unaff_ESI & 0xffffff | *(iVar4 + 0x21) << 0x18;\n    if (*(iVar4 + 0x21) != 0) {\n        cVar11 = *(*(*in_ECX + 4) + 0xd + in_ECX);\n        iVar4 = *(*(*in_ECX + 4) + 8 + in_ECX);\n        iVar6 = iVar4;\n        if (cVar11 != '\\0') {\n            iVar6 = *(iVar4 + 0x38);\n        }\n        iStack88 = *(iVar6 + 0x14);\n        if (cVar11 != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        fcn.0040c5e7(iVar4 + 0x20);\n        iStack88 = iStack44;\n        puVar7 = puStack52;\n    }\n    cVar11 = unaff_EDI >> 0x18;\n    piVar3 = *arg_10h;\n    piVar8 = piVar3 + 1;\n    *arg_10h = piVar8;\n    iVar4 = *(arg_ch + 4);\n    piStack84 = pcStack40;\n    if (*(*(iVar4 + piVar8 * 4) + 8) == 0x47) {\n        piStack96 = piVar3 + 2;\n        iStack92 = 0;\n        *arg_10h = piStack96;\n        do {\n            while( true ) {\n                piVar3 = *arg_10h;\n                iVar1 = *(*(iVar4 + piVar3 * 4) + 8);\n                if (0x46 < iVar1) break;\ncode_r0x00412d3a:\n                *arg_10h = piVar3 + 1;\n            }\n            if (iVar1 == 0x47) {\n                iStack92 = iStack92 + 1;\n                goto code_r0x00412d3a;\n            }\n            piStack68 = piStack96;\n            if (iVar1 != 0x48) {\n                if (iVar1 != 0x7f) goto code_r0x00412d3a;\n                fcn.004734ba(0x6f, *(*(iVar4 + -4 + piVar3 * 4) + 10));\n                goto code_r0x004570f7;\n            }\n            if (iStack92 == 0) goto code_r0x00412d49;\n            iStack92 = iStack92 + -1;\n            *arg_10h = piVar3 + 1;\n        } while( true );\n    }\n    fcn.004734ba(0x6f, *(*(iVar4 + piVar8 * 4 + -4) + 10));\n    goto code_r0x004570f7;\ncode_r0x00412d49:\n    *arg_10h = piVar3 + 1;\n    piVar8 = piStack96;\n    do {\n        arg_8h_00 = piStack104;\n        if (piVar3 <= piVar8) {\ncode_r0x00412e32:\n            if (arg_8h != '\\0') {\n                fcn.0048566c(&uStack60, &iStack92);\n            }\n            iVar4 = fcn.00413220(piStack100);\n            piVar3 = piStack96;\n            if ((piStack96 < *(iVar4 + 0x18)) || (iVar4 = fcn.00413220(arg_8h_00),  *(iVar4 + 0x1c) < piVar3)) {\n                if (arg_8h == '\\0') {\n                    fcn.004734ba(0x70, uStack72);\n                }\n                else {\n                    *arg_10h = *arg_10h - 2;\n                }\n                goto code_r0x004570f7;\n            }\n            iVar4 = *(_pe_dos_header + 4);\n            iVar6 = *(iVar4 + 8);\n            if (*(iVar4 + 0xd) != '\\0') {\n                iVar6 = *(iVar6 + 0x38);\n            }\n            *(iVar6 + 0x14) = iStack92;\n            iVar6 = *(iVar4 + 8);\n            if (*(iVar4 + 0xd) != '\\0') {\n                iVar6 = *(iVar6 + 0x38);\n            }\n            *(iVar6 + 0x18) = 0;\n            iVar4 = *(_pe_dos_header + 4);\n            iVar6 = *(iVar4 + 8);\n            if (*(iVar4 + 0xd) != '\\0') {\n                iVar6 = *(iVar6 + 0x38);\n            }\n            ppuVar9 = iVar6 + 0x20;\n            if (ppuVar9 != &puStack52) {\n                iVar5 = *(iVar6 + 0x2c);\n                if ((iVar5 == 4) && (piStack84 == 0x4)) {\n                    if (*(iVar6 + 0x28) != iStack88) {\n                        fcn.0040c1c3(iStack88);\n                    }\n                }\n                else {\n                    if (*(iVar6 + 0x28) != 0) {\n                        fcn.0041d962(*(iVar6 + 0x28));\n                        iVar5 = *(iVar6 + 0x2c);\n                        *(iVar6 + 0x28) = 0;\n                    }\n                    if (4 < iVar5) {\n    // switch table (11 cases) at 0x45722c\n                        switch(iVar5) {\n                        case 5:\n                            apuStack80[0] = *ppuVar9;\n                            if (apuStack80[0] != NULL) {\n                                fcn.0041d593();\n                                arg_8h_01 = apuStack80[0];\n                                goto code_r0x004570c8;\n                            }\n                            break;\n                        case 8:\n                            if (*ppuVar9 != NULL) {\n                                (*piStack84)(*ppuVar9);\n                                arg_8h_01 = *ppuVar9;\n                                goto code_r0x004570c8;\n                            }\n                            break;\n                        case 10:\n                            apuStack80[0] = *ppuVar9;\n                            if (apuStack80[0] != NULL) {\n                                fcn.0040b1ff();\n                                arg_8h_01 = apuStack80[0];\n                                goto code_r0x004570c8;\n                            }\n                            break;\n                        case 0xb:\n                            fcn.0041fd94((*ppuVar9)[1]);\n                            arg_8h_01 = *ppuVar9;\ncode_r0x004570c8:\n                            fcn.0041fd4d(arg_8h_01);\n                            break;\n                        case 0xc:\n                            if (*ppuVar9 != NULL) {\n                                fcn.0045fc42(*ppuVar9);\n                            }\n                            break;\n                        case 0xd:\n                        case 0xe:\n                            apuStack80[0] = *ppuVar9;\n                            if (apuStack80[0] != NULL) {\n                                fcn.0040b1ff();\n                                arg_8h_01 = apuStack80[0];\n                                goto code_r0x004570c8;\n                            }\n                            break;\n                        case 0xf:\n                            if (*ppuVar9 != NULL) {\n                                (****ppuVar9)(1);\n                            }\n                        }\n                    }\n                    *(iVar6 + 0x2c) = 1;\n                    *ppuVar9 = NULL;\n                    fcn.004119e0(&iStack56);\n                }\n            }\n            iVar6 = *(iVar4 + 8);\n            if (*(iVar4 + 0xd) != '\\0') {\n                iVar6 = *(iVar6 + 0x38);\n            }\n            *(iVar6 + 0x30) = 0;\n            fcn.0040e8a0();\n            arg_14h[3] = 1;\n            *arg_14h = 1;\n            iVar4 = fcn.00413220(puVar7);\n            iVar4 = (**(iVar4 + 0xc))(apuStack80, arg_14h);\n            if (iVar4 < 0) goto code_r0x004570f7;\n            if (cVar11 != '\\0') {\n                iVar4 = *(*piVar10 + 4);\n                iVar6 = *(piVar10 + iVar4 + 8);\n                if (*(piVar10 + iVar4 + 0xd) != '\\0') {\n                    iVar6 = *(iVar6 + 0x38);\n                }\n                *(iVar6 + 0x14) = iStack92;\n                iVar6 = *(piVar10 + iVar4 + 8);\n                if (*(piVar10 + iVar4 + 0xd) != '\\0') {\n                    iVar6 = *(iVar6 + 0x38);\n                }\n                *(iVar6 + 0x18) = 0;\n                fcn.0041fa6d(&puStack52);\n            }\n            iStack92 = 0;\n            goto code_r0x00412f62;\n        }\n        auStack28[0] = 0;\n        uStack20 = 0;\n        uStack16 = 1;\n        iVar4 = iStack56;\n        if (puStack52 == puStack48) {\n            puStack48 = puStack48 * 2;\n            if (puStack48 < 0x8) {\n                puStack48 = 0x8;\n            }\n            iVar4 = fcn.0041fd8b(-(ZEXT48(puStack48) * 4 >> 0x20 != 0) | ZEXT48(puStack48) * 4);\n            if ((iStack56 != 0) && (puStack52 != NULL)) {\n                fcn.00420db0(iVar4, iStack56, puStack52 << 2);\n                fcn.0041fd94(iStack56);\n            }\n        }\n        iStack56 = iVar4;\n        iVar4 = fcn.0041fd5b(0x10, piVar10);\n        *(iVar4 + 8) = 0;\n        fcn.004119e0(auStack28);\n        *(uStack60 + iStack56 * 4) = iVar4;\n        iStack56 = iStack56 + 1;\n        if (puVar7 >> 0x10 == '\\0') {\n            iVar4 = fcn.00410540(arg_ch, &piStack100, *((uStack60 - 4) + iStack56 * 4), piVar3);\n        }\n        else {\n            iVar4 = fcn.0041d993(arg_ch, &piStack100, *((uStack60 - 4) + iStack56 * 4), 0x100, 0, 0, piVar3);\n        }\n        cVar11 = unaff_EDI >> 0x18;\n        if (iVar4 < 0) goto code_r0x004570f7;\n        piStack100 = piStack100 + 1;\n        if (arg_8h_00 == piVar3) goto code_r0x00412e32;\n    } while ((*(*(*(arg_ch + 4) + arg_8h_00 * 4) + 8) == 0x40) &&\n            (piVar8 = arg_8h_00 + 1,  piStack104 = piVar8,  piVar8 != piVar3));\n    fcn.004734ba(0x6f, *(*(*(arg_ch + 4) + arg_8h_00 * 4) + 10));\n    fcn.0040e8a0();\ncode_r0x004570f7:\n    iStack92 = -1;\ncode_r0x00412f62:\n    if (iStack88 != 0) {\n        fcn.0041d962();\n    }\n    if (piStack84 < 5) goto code_r0x00412f7b;\n    // switch table (11 cases) at 0x457258\n    switch(piStack84) {\n    case 0x5:\n        if (puVar7 == NULL) goto code_r0x00412f7b;\n        fcn.0041d593();\n        break;\n    default:\n        goto code_r0x00412f7b;\n    case 0x8:\n        if (puVar7 == NULL) goto code_r0x00412f7b;\n        (*apuStack80[0])(puVar7);\n        break;\n    case 0xa:\n        if (puVar7 == NULL) goto code_r0x00412f7b;\n        fcn.0040b1ff();\n        break;\n    case 0xb:\n        fcn.0041fd94(puVar7[1]);\n        break;\n    case 0xc:\n        if (puVar7 != NULL) {\n            fcn.0045fc42();\n        }\n        goto code_r0x00412f7b;\n    case 0xd:\n    case 0xe:\n        if (puVar7 == NULL) goto code_r0x00412f7b;\n        fcn.0040b1ff();\n        break;\n    case 0xf:\n        if (puVar7 != NULL) {\n            (***puVar7)(1);\n        }\n        goto code_r0x00412f7b;\n    }\n    fcn.0041fd4d(puVar7);\ncode_r0x00412f7b:\n    piStack68 = 0x49d100;\n    piStack84 = NULL;\n    if (uStack60 != 0) {\n        do {\n            piVar10 = *(iStack64 + piStack84 * 4);\n            if (piVar10 != NULL) {\n                puVar7 = piVar10[2];\n                if (puVar7 != NULL) {\n                    *puVar7[3] = *puVar7[3] + -1;\n                    if (*puVar7[3] == 0) {\n                        fcn.0041fd94(*puVar7);\n                        fcn.0041fd4d(puVar7[3]);\n                    }\n                    fcn.0041fd4d(puVar7);\n                    piVar10[2] = 0;\n                }\n                if (4 < piVar10[3]) {\n    // switch table (11 cases) at 0x4131f4\n                    switch(piVar10[3]) {\n                    case 5:\n                        iVar4 = *piVar10;\n                        if (iVar4 != 0) {\n                            fcn.0041d593();\n                            goto code_r0x004130a3;\n                        }\n                        break;\n                    case 8:\n                        if (*piVar10 != 0) {\n                            (*apuStack80[0])(*piVar10);\n                            iVar4 = *piVar10;\n                            goto code_r0x004130a3;\n                        }\n                        break;\n                    case 10:\n                        iVar4 = *piVar10;\n                        if (iVar4 != 0) {\n                            fcn.0040b1ff();\n                            fcn.0041fd4d(iVar4);\n                        }\n                        break;\n                    case 0xb:\n                        fcn.0041fd94(*(*piVar10 + 4));\n                        iVar4 = *piVar10;\ncode_r0x004130a3:\n                        fcn.0041fd4d(iVar4);\n                        break;\n                    case 0xc:\n                        if (*piVar10 != 0) {\n                            fcn.0045fc42();\n                        }\n                        break;\n                    case 0xd:\n                    case 0xe:\n                        iVar4 = *piVar10;\n                        if (iVar4 != 0) {\n                            fcn.0040b1ff();\n                            goto code_r0x004130a3;\n                        }\n                        break;\n                    case 0xf:\n                        if (*piVar10 != NULL) {\n                            (****piVar10)(1);\n                        }\n                    }\n                }\n                piVar10[3] = 1;\n                *piVar10 = 0;\n                fcn.0041fd4d(piVar10);\n            }\n            *(iStack64 + piStack84 * 4) = 0;\n            piStack84 = piStack84 + 1;\n        } while (piStack84 < uStack60);\n    }\n    uStack60 = 0;\n    fcn.0041fd94(iStack64);\n    return iStack92;\n}\n",
        "token_count": 4377
    },
    "0041a02f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a02f(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint arg_ch_00;\n    uint nIconIndex;\n    uint arg_14h;\n    uint arg_1ch;\n    uint arg_20h;\n    \n    uVar1 = 0;\n    if (1 < *(arg_8h + 8)) {\n        uVar1 = fcn.00471dda();\n    }\n    arg_20h = 0xffffffff;\n    arg_1ch = 0xffffffff;\n    arg_14h = 0xffffffff;\n    nIconIndex = 0;\n    arg_ch_00 = fcn.0040ce67();\n    uVar1 = fcn.0041a07b(0, arg_ch_00, nIconIndex, arg_14h, uVar1, arg_1ch, arg_20h);\n    fcn.0040e8a0();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 236
    },
    "0041a07b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint8_t __cdecl\nfcn.0041a07b(int32_t arg_8h, int32_t arg_ch, int32_t nIconIndex, uint arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t in_ECX;\n    uint8_t uVar4;\n    ulong uVar5;\n    uint hWnd;\n    int32_t phiconLarge;\n    \n    phiconLarge = in_ECX;\n    if (arg_18h != 0) {\n        *0x4d191c = fcn.0041b021(arg_18h);\n    }\n    if (*0x4d191c == -1) {\n        uVar4 = 0;\n    }\n    else {\n        if (arg_8h != 0) {\n            fcn.004084e7(arg_8h);\n        }\n        uVar4 = 1;\n        puVar1 = **(*0x4d1910 + *0x4d191c * 4);\n        uVar2 = *puVar1;\n        if (nIconIndex != 0) {\n            uVar5 = fcn.0046e034();\n            arg_18h = (*_sym.imp.USER32.dll_LoadImageW)(0, nIconIndex, uVar5 >> 0x20, 0x10, 0x10, 0x10);\n            if (arg_18h == 0) {\n                (*_sym.imp.SHELL32.dll_ExtractIconExW)(nIconIndex, uVar5, 0, &arg_18h, 1);\n            }\n            phiconLarge = (*_sym.imp.USER32.dll_LoadImageW)(0, nIconIndex, 1, 0, 0, 0x50);\n            if (phiconLarge == 0) {\n                (*_sym.imp.SHELL32.dll_ExtractIconExW)(nIconIndex, uVar5, &phiconLarge, 0, 1);\n            }\n            pcVar3 = _sym.imp.USER32.dll_DestroyIcon;\n            if (arg_18h != 0) {\n                (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x80, 0, arg_18h);\n                if (puVar1[8] != 0) {\n                    (*pcVar3)(puVar1[8]);\n                }\n                puVar1[8] = arg_18h;\n            }\n            if (phiconLarge != 0) {\n                (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x80, 1, phiconLarge);\n                if (puVar1[9] != 0) {\n                    (*pcVar3)(puVar1[9]);\n                }\n                puVar1[9] = phiconLarge;\n            }\n            uVar4 = 1;\n            if (arg_18h == 0) {\n                uVar4 = -(phiconLarge != 0) & 1;\n            }\n        }\n        if (arg_ch != -1) {\n            fcn.0041b058();\n            if (-1 < puVar1[0x13]) {\n                fcn.00496e88(puVar1[0x13]);\n            }\n            puVar1[0x13] = arg_ch;\n            fcn.0041ab80(arg_ch, 1);\n        }\n        if (arg_1ch != -1) {\n            puVar1[0x14] = arg_1ch;\n        }\n        if (arg_20h != -1) {\n            puVar1[0x15] = arg_20h;\n        }\n        if (*(puVar1 + 0xe) != '\\0') {\n            (*_sym.imp.USER32.dll_InvalidateRect)(uVar2, 0, 1);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 875
    },
    "0041a142": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a142(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t iVar3;\n    int32_t var_4h;\n    \n    iVar2 = **(*0x4d1910 + arg_8h * 4);\n    fcn.0041a4d7(iVar2, 0);\n    if (*(iVar2 + 0x18) != 0) {\n        (*_sym.imp.USER32.dll_DestroyAcceleratorTable)(*(iVar2 + 0x18));\n        *(iVar2 + 0x18) = 0;\n    }\n    var_4h = 3;\n    iVar3 = *0x4d1934;\n    if (2 < *0x4d1934) {\n        do {\n            arg_8h_00 = **(*0x4d1924 + var_4h * 4);\n            if ((arg_8h_00 != NULL) && (arg_8h_00[1] == *(iVar2 + 4))) {\n                cVar1 = *(arg_8h_00 + 0x24);\n                if ((cVar1 == '\\n') || (cVar1 == '\\x10')) {\n                    if (arg_8h_00[0x10] != 0) {\n                        (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_8h_00[0x10]);\n                        arg_8h_00[0x10] = 0;\n                    }\n                }\n                else if (cVar1 == '\\x13') {\n                    if (arg_8h_00[0xe] != 0) {\n                        (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_8h_00[0xe]);\n                        arg_8h_00[0xe] = 0;\n                    }\n                    if (arg_8h_00[0xf] != 0) {\n                        (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_8h_00[0xf]);\n                        arg_8h_00[0xf] = 0;\n                    }\n                }\n                else if (cVar1 == '\\x1b') {\n                    fcn.0041a4d7(iVar2, arg_8h_00);\n                }\n                else if (cVar1 == '\\x1d') {\n                    fcn.00496e2c(arg_8h_00, iVar2);\n                }\n                if (arg_8h_00[0x19] != 0) {\n                    (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h_00[0x19]);\n                    arg_8h_00[0x19] = 0;\n                }\n                if (arg_8h_00[0x1a] != 0) {\n                    (*_sym.imp.USER32.dll_DestroyIcon)(arg_8h_00[0x1a]);\n                    arg_8h_00[0x1a] = 0;\n                }\n                if (arg_8h_00[0x11] != 0) {\n                    (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h_00[0x11]);\n                    arg_8h_00[0x11] = 0;\n                }\n                if (arg_8h_00[0x14] != 0) {\n                    (*_sym.imp.USER32.dll_DestroyWindow)(arg_8h_00[0x14]);\n                    arg_8h_00[0x14] = 0;\n                }\n                if (*arg_8h_00 != 0) {\n                    (*_sym.imp.USER32.dll_DestroyWindow)(*arg_8h_00);\n                    *arg_8h_00 = 0;\n                }\n                fcn.0041a3e2(var_4h);\n                iVar3 = *0x4d1934;\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h <= iVar3);\n    }\n    if (*(iVar2 + 0x20) != 0) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(*(iVar2 + 0x20));\n    }\n    if (*(iVar2 + 0x24) != 0) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(*(iVar2 + 0x24));\n    }\n    iVar2 = **(*0x4d1910 + arg_8h * 4);\n    if (iVar2 != 0) {\n        fcn.0041a585(iVar2);\n    }\n    **(*0x4d1910 + arg_8h * 4) = 0;\n    *0x4d18d0 = *0x4d18d0 + -1;\n    if (arg_8h == *0x4d191c) {\n        *0x4d191c = -1;\n    }\n    if ((*0x4d18d0 == 1) && (*0x4d191c = 0,  0 < *0x4d1914)) {\n        do {\n            if (**(*0x4d1910 + *0x4d191c * 4) != 0) break;\n            *0x4d191c = *0x4d191c + 1;\n        } while (*0x4d191c < *0x4d1914);\n    }\n    if (*0x4d18d0 == 0) {\n        (*_sym.imp.USER32.dll_KillTimer)(0, *0x4d18d4);\n        *0x4d18d4 = 0;\n    }\n    while ((*0x4d1914 != 0 && (**(*0x4d1910 + -4 + *0x4d1914 * 4) == 0))) {\n        fcn.0041a561();\n    }\n    return;\n}\n",
        "token_count": 1314
    },
    "0041a2fa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a2fa(int32_t **arg_8h)\n\n{\n    uint8_t uVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    code *pcVar5;\n    code *pcVar6;\n    char cVar7;\n    int32_t iVar8;\n    int32_t **ppiVar9;\n    int32_t *arg_ch;\n    int32_t unaff_ESI;\n    int32_t **arg_8h_00;\n    int32_t **ppiVar10;\n    int32_t iVar11;\n    int32_t *arg_8h_01;\n    int32_t *arg_10h;\n    int32_t **arg_ch_00;\n    int32_t *piVar12;\n    int32_t iStack104;\n    int32_t *piStack100;\n    int32_t *piStack96;\n    int32_t aiStack92 [2];\n    int32_t **ppiStack84;\n    uint uStack68;\n    uint auStack64 [4];\n    int32_t *piStack48;\n    \n    arg_10h = aiStack92;\n    ppiVar10 = &piStack96;\n    arg_8h_00 = arg_8h;\n    cVar7 = fcn.0040c4db(arg_8h, ppiVar10, arg_10h);\n    pcVar6 = _sym.imp.USER32.dll_SendMessageW;\n    pcVar5 = _sym.imp.COMCTL32.dll_ImageList_Destroy;\n    if (cVar7 == '\\0') {\n        return 0;\n    }\n    piVar12 = 0xffffffff;\n    arg_ch_00 = **(*0x4d1910 + unaff_ESI * 4);\n    arg_8h_01 = **(*0x4d1924 + iStack104 * 4);\n    uVar1 = *(arg_8h_01 + 0x24);\n    piStack96 = arg_8h_01;\n    if (uVar1 < 0x12) {\n        if (uVar1 == 0x11) {\n            arg_8h_00 = ppiVar10;\n            (*_sym.imp.USER32.dll_SendMessageW)(arg_8h_01[0xd], 0x1101, 0, arg_8h_01[4]);\n            goto code_r0x0041a393;\n        }\n        if (uVar1 < 0xd) {\n            if (uVar1 == 0xc) {\n                iVar11 = 3;\n                arg_8h_00 = ppiVar10;\n                if (2 < *0x4d1934) {\n                    do {\n                        iVar8 = **(*0x4d1924 + iVar11 * 4);\n                        if ((iVar8 != 0) && (*(iVar8 + 0xc) == arg_8h_01[3])) {\n                            if ((*(iVar8 + 0x90) == '\\x0f') || (*(iVar8 + 0x90) == '\\x0e')) {\n                                fcn.0041a3e2(iVar11);\n                            }\n                            else {\n                                *(iVar8 + 0xc) = 0;\n                            }\n                        }\n                        iVar11 = iVar11 + 1;\n                        arg_8h_00 = ppiVar10;\n                    } while (iVar11 <= *0x4d1934);\n                }\n                if (arg_8h_01[3] == arg_ch_00[0x68]) {\n                    (*_sym.imp.USER32.dll_DestroyMenu)(arg_ch_00[0x68]);\n                    arg_8h_00[0x68] = NULL;\n                }\n                else {\n                    (*_sym.imp.USER32.dll_DestroyMenu)(arg_8h_01[3]);\n                }\n                goto code_r0x0041a393;\n            }\n            if (1 < uVar1) {\n                iVar11 = 3;\n                if (uVar1 < 4) {\n                    if ((0 < arg_ch_00[0x71]) && (arg_8h == arg_ch_00[0x71])) {\n                        arg_ch_00[0x71] = NULL;\n                    }\n                }\n                else {\n                    iVar8 = *0x4d1934;\n                    arg_8h_00 = ppiVar10;\n                    if (uVar1 == 10) {\n                        for (; piStack96 = arg_8h_01,  2 < iVar8; iVar8 = iVar8 + -1) {\n                            iVar11 = **(*0x4d1924 + iVar8 * 4);\n                            if ((iVar11 != 0) && (*(iVar11 + 0x90) == '\\v')) {\n                                fcn.0041a2fa(iVar8);\n                            }\n                            arg_8h_01 = piStack96;\n                        }\n                        arg_ch_00[0x62] = NULL;\n                        arg_ch_00[99] = piVar12;\n                        arg_ch_00[100] = piVar12;\n                        arg_ch_00[0x65] = NULL;\n                        *(arg_ch_00 + 0x66) = 0;\n                        (*_sym.imp.USER32.dll_DestroyWindow)(*arg_8h_01);\n                        if (arg_8h_01[0x10] != 0) {\n                            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_8h_01[0x10]);\n                        }\n                        goto code_r0x0041a393;\n                    }\n                    if (uVar1 == 0xb) {\n                        arg_ch = arg_ch_00[100];\n                        (*_sym.imp.USER32.dll_SendMessageW)(arg_ch_00[0x62], 0x1308, *(arg_8h_01 + 0x93), 0);\n                        iVar8 = fcn.0041adc4(piVar12[0x62]);\n                        iVar8 = *(**(*0x4d1924 + iVar8 * 4) + 0x40);\n                        arg_8h_00 = arg_ch_00;\n                        if ((iVar8 != 0) && (*(arg_8h_01 + 0x22) != piVar12)) {\n                            (*_sym.imp.COMCTL32.dll_ImageList_Remove)(iVar8, *(arg_8h_01 + 0x22));\n                            arg_8h_00 = arg_ch_00;\n                        }\n                        if (2 < *0x4d1934) {\n                            do {\n                                iVar8 = **(*0x4d1924 + iVar11 * 4);\n                                if ((iVar8 != 0) && (uVar1 = *(iVar8 + 0x93),  uVar1 != 0xff)) {\n                                    if ((uVar1 == *(arg_8h_01 + 0x93)) && (*(iVar8 + 0x90) != '\\v')) {\n                                        fcn.0041a2fa(iVar11);\n                                    }\n                                    else {\n                                        if (*(arg_8h_01 + 0x93) < uVar1) {\n                                            *(iVar8 + 0x93) = uVar1 - 1;\n                                        }\n                                        iVar8 = **(*0x4d1924 + iVar11 * 4);\n                                        if ((((*(iVar8 + 0x90) == '\\v') && (-1 < *(arg_8h_01 + 0x22))) &&\n                                            (iVar2 = *(iVar8 + 0x88),  -1 < iVar2)) && (*(arg_8h_01 + 0x22) < iVar2)) {\n                                            uStack68 = 2;\n                                            *(iVar8 + 0x88) = iVar2 + -1;\n                                            piStack48 = *(**(*0x4d1924 + iVar11 * 4) + 0x88);\n                                            (*_sym.imp.USER32.dll_SendMessageW)\n                                                      (arg_8h_00[0x62], 0x133d, *(**(*0x4d1924 + iVar11 * 4) + 0x93), \n                                                       &uStack68);\n                                        }\n                                    }\n                                }\n                                iVar11 = iVar11 + 1;\n                            } while (iVar11 <= *0x4d1934);\n                        }\n                        if (*(arg_8h_01 + 0x93) == arg_ch) {\n                            if (arg_ch == arg_8h_00[99]) {\ncode_r0x0045766e:\n                                arg_ch = arg_ch - 1;\n                            }\n                        }\n                        else {\n                            arg_8h_00[100] = piVar12;\n                            if (*(arg_8h_01 + 0x93) < arg_ch) goto code_r0x0045766e;\n                        }\n                        *(arg_8h_01 + 0x93) = 0xff;\n                        arg_ch_00 = arg_8h_00;\n                        fcn.004980cd(arg_8h_00, arg_ch);\n                        arg_8h_00[99] = arg_8h_00[99] + -1;\n                        arg_8h_00[0x65] = NULL;\n                        goto code_r0x0041a393;\n                    }\n                }\n            }\n        }\n        else if (0xd < uVar1) {\n            if (uVar1 < 0x10) {\n                if (uVar1 == 0xe) {\n                    uStack68 = 0x30;\n                    fcn.004222d0(auStack64, 0, 0x2c);\n                    auStack64[0] = 4;\n                    iVar11 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(arg_8h_01[3], arg_8h, 0, &uStack68);\n                    if (((iVar11 != 0) && (piStack96 = piStack48,  piStack48 != NULL)) &&\n                       (ppiVar10 = 0x3,  iVar11 = *0x4d1934,  piVar12 = piStack48,  2 < *0x4d1934)) {\n                        do {\n                            iVar8 = **(*0x4d1924 + ppiVar10 * 4);\n                            if (((iVar8 != 0) && (*(iVar8 + 0xc) == piVar12)) && (*(iVar8 + 0x90) == '\\x0f')) {\n                                arg_8h_00 = ppiVar10;\n                                fcn.0041a3e2(ppiVar10);\n                                iVar11 = *0x4d1934;\n                                piVar12 = piStack100;\n                            }\n                            ppiVar10 = ppiVar10 + 1;\n                        } while (ppiVar10 <= iVar11);\n                    }\n                }\n                iVar11 = (*_sym.imp.USER32.dll_DeleteMenu)(arg_8h_01[3], arg_8h, 0);\n                if (iVar11 == 0) {\n                    (*_sym.imp.USER32.dll_DeleteMenu)(arg_8h_00[0x67], arg_8h, 0);\n                }\n                if ((arg_8h_00[0x67] != NULL) &&\n                   (iVar11 = (*_sym.imp.USER32.dll_GetMenuItemCount)(arg_8h_00[0x67]),  iVar11 == 0)) {\n                    (*_sym.imp.USER32.dll_SetMenu)(*arg_8h_00, 0);\n                    (*_sym.imp.USER32.dll_DestroyMenu)(arg_8h_00[0x67]);\n                    arg_8h_00[0x67] = NULL;\n                }\n                (*_sym.imp.USER32.dll_DrawMenuBar)(*arg_8h_00);\n                goto code_r0x0041a393;\n            }\n            if (uVar1 == 0x10) {\n                if (arg_8h_01[0x10] != 0) {\n                    (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_8h_01[0x10]);\n                }\n                iVar8 = 3;\n                iVar11 = *0x4d1934;\n                if (2 < *0x4d1934) {\n                    do {\n                        iVar3 = **(*0x4d1924 + iVar8 * 4);\n                        if (((iVar3 != 0) && (*(iVar3 + 0x34) == *arg_8h_01)) && (*(iVar3 + 0x90) == '\\x11')) {\n                            fcn.0041a3e2(iVar8);\n                            iVar11 = *0x4d1934;\n                        }\n                        iVar8 = iVar8 + 1;\n                    } while (iVar8 <= iVar11);\n                }\n            }\n        }\n    }\n    else if (uVar1 == 0x13) {\n        if (arg_8h_01[0xe] != 0) {\n            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(arg_8h_01[0xe]);\n        }\n        if (arg_8h_01[0xf] != 0) {\n            (*pcVar5)(arg_8h_01[0xf]);\n        }\n        iVar11 = 3;\n        if (2 < *0x4d1934) {\n            do {\n                iVar8 = **(*0x4d1924 + iVar11 * 4);\n                if ((((iVar8 != 0) && (*(iVar8 + 4) == ppiVar10[1])) && (*(iVar8 + 0x90) == '\\x14')) &&\n                   (*(iVar8 + 0x34) == *arg_8h_01)) {\n                    fcn.0041a2fa(iVar11);\n                }\n                iVar11 = iVar11 + 1;\n            } while (iVar11 <= *0x4d1934);\n        }\n    }\n    else {\n        if (uVar1 == 0x14) {\n            ppiStack84 = arg_8h;\n            aiStack92[0] = 1;\n            ppiVar9 = (*_sym.imp.USER32.dll_SendMessageW)(arg_8h_01[0xd], 0x1053, 0xffffffff, aiStack92);\n            if (ppiVar9 == arg_8h_00) {\n                return 0;\n            }\n            arg_8h_00 = ppiVar10;\n            (*pcVar6)(arg_8h_01[0xd], 0x1008, ppiVar9, 0);\n            goto code_r0x0041a393;\n        }\n        if (uVar1 == 0x16) {\n            iVar11 = 3;\n            if (2 < *0x4d1934) {\n                do {\n                    piVar12 = **(*0x4d1924 + iVar11 * 4);\n                    if (((piVar12 != NULL) && (piVar12[1] == arg_ch_00[1])) &&\n                       ((*(piVar12 + 0x24) == '\\x03' && (*piVar12 == arg_8h_01[0xd])))) {\n                        puVar4 = **(*0x4d1924 + iVar11 * 4);\n                        (*_sym.imp.USER32.dll_MoveWindow)\n                                  (*puVar4, *(puVar4 + 0x22), *(puVar4 + 0x8a), *(puVar4 + 0x23), *(puVar4 + 0x8e), 0);\n                        break;\n                    }\n                    iVar11 = iVar11 + 1;\n                } while (iVar11 <= *0x4d1934);\n            }\n        }\n        else if (uVar1 == 0x1b) {\n            fcn.0041a4d7(arg_ch_00, arg_8h_01);\n        }\n        else if (uVar1 == 0x1d) {\n            arg_8h_00 = ppiVar10;\n            fcn.00496e2c(arg_8h_01, arg_ch_00);\n            goto code_r0x0041a393;\n        }\n    }\n    arg_8h_00 = ppiVar10;\n    (*_sym.imp.USER32.dll_DestroyWindow)(*arg_8h_01);\ncode_r0x0041a393:\n    if (arg_8h_01[0x11] != 0) {\n        (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h_01[0x11]);\n    }\n    if (arg_8h_01[0x19] != 0) {\n        (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h_01[0x19]);\n    }\n    if (arg_8h_01[0x1a] != 0) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(arg_8h_01[0x1a]);\n    }\n    if (arg_8h_01[0x14] != 0) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(arg_8h_01[0x14]);\n    }\n    if (arg_ch_00 == arg_8h_00[7]) {\n        arg_8h_00[7] = arg_10h;\n    }\n    fcn.0041a3e2(arg_ch_00);\n    return 1;\n}\n",
        "token_count": 3797
    },
    "0041a3e2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a3e2(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h == *0x4d1944) {\n        *0x4d1948 = 0xffffffff;\n        *0x4d1944 = -1;\n    }\n    iVar1 = **(*0x4d1924 + arg_8h * 4);\n    if (iVar1 != 0) {\n        fcn.0041a4a1(iVar1);\n    }\n    **(*0x4d1924 + arg_8h * 4) = 0;\n    *0x4d1930 = *0x4d1930 + -1;\n    if (arg_8h == *0x4d1934) {\n        while ((*0x4d1934 = arg_8h,  2 < arg_8h && (**(*0x4d1924 + arg_8h * 4) == 0))) {\n            arg_8h = arg_8h + -1;\n        }\n    }\n    while ((3 < *0x4d1928 && (**(*0x4d1924 + -4 + *0x4d1928 * 4) == 0))) {\n        *0x4d1928 = *0x4d1928 - 1;\n        fcn.0041fd4d(*(*0x4d1924 + *0x4d1928 * 4));\n        *(*0x4d1924 + *0x4d1928 * 4) = 0;\n    }\n    return;\n}\n",
        "token_count": 364
    },
    "0041a5c7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a5c7(uint hDlg, uint32_t arg_ch, uint lParam, int32_t wParam)\n\n{\n    *0x4d18d8 = fcn.0041b021(hDlg);\n    if ((arg_ch == 0) || (*(**(*0x4d1910 + *0x4d18d8 * 4) + 0x18) == 0)) {\n        *0x4d18d8 = -1;\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 6, wParam << 0x10 | arg_ch & 0xffff, lParam);\n    return;\n}\n",
        "token_count": 149
    },
    "0041a654": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a654(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint *arg_8h_00;\n    uint uVar2;\n    code *pcVar3;\n    \n    if ((arg_8h != -1) && (arg_ch != -1)) {\n        puVar1 = **(*0x4d1910 + arg_8h * 4);\n        arg_8h_00 = **(*0x4d1924 + arg_ch * 4);\n        if (puVar1[0x73] != 0) {\n            fcn.0046547c(arg_8h_00);\n        }\n        if (**(*0x4d1924 + arg_ch * 4) == 0) {\n            puVar1[7] = 0xffffffff;\n        }\n        else {\n            uVar2 = *arg_8h_00;\n            puVar1[7] = arg_ch;\n            pcVar3 = _sym.imp.USER32.dll_PostMessageW;\n            (*_sym.imp.USER32.dll_PostMessageW)(*puVar1, 0x28, uVar2, 1);\n            if (*(arg_8h_00 + 0x24) == '\\x02') {\n                (*pcVar3)(uVar2, 0xb1, puVar1[0x6f], puVar1[0x70]);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 324
    },
    "0041a910": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: crColor\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0041a910(uint arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t crColor;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    uint *dwRadius;\n    int32_t var_18h;\n    int32_t *nBottomRect;\n    int32_t *nRightRect;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    iVar6 = 1;\n    crColor = 0;\n    iVar5 = -2;\n    var_8h = -2;\n    var_ch = 1;\n    if (arg_ch != 0) {\n        do {\n            var_18h = 0;\n            fcn.0041aabf(arg_8h, crColor, iVar5, 0, iVar6);\n            if (0 < *(arg_ch + 0xc)) {\n                dwRadius = arg_ch + 0x18;\n                nBottomRect = arg_ch + 0x14;\n                var_24h = arg_ch + 0x1c;\n                nRightRect = arg_ch + 0x10;\n                var_20h = arg_ch + 0x20;\n                do {\n                    iVar5 = *nRightRect;\n                    iVar6 = *nBottomRect;\n                    uVar1 = *(arg_ch + 0x810 + var_18h);\n                    if (uVar1 < 0x11) {\n                        if (uVar1 == 0x10) {\n                            iVar4 = var_ch + 1 + iVar6;\n                            iVar6 = iVar6 - var_ch;\n                            iVar2 = var_ch + 1;\n                            iVar7 = iVar5 - var_ch;\ncode_r0x00457cd9:\n                            (*_sym.imp.GDI32.dll_Rectangle)(arg_8h, iVar7, iVar6, iVar2 + iVar5, iVar4);\n                            goto code_r0x0041a9d1;\n                        }\n                        if (uVar1 != 8) {\n                            if (uVar1 != 10) {\n                                if (uVar1 == 0xc) {\n                                    var_18h = var_18h + 1;\n                                    dwRadius = dwRadius + 2;\n                                    nRightRect = nRightRect + 2;\n                                    var_20h = var_20h + 2;\n                                    nBottomRect = nBottomRect + 2;\n                                    var_24h = var_24h + 2;\n                                    fcn.0041aa4b(arg_8h, var_8h);\n                                    fcn.0041aabf(arg_8h, crColor, var_8h, 0, var_ch);\n                                    (*_sym.imp.GDI32.dll_Ellipse)\n                                              (arg_8h, iVar5, iVar6, *nRightRect + iVar5, *nBottomRect + iVar6);\n                                }\n                                else if (uVar1 == 0xe) {\n                                    (*_sym.imp.GDI32.dll_MoveToEx)(arg_8h, iVar5, iVar6, 0);\n                                    (*_sym.imp.GDI32.dll_AngleArc)(arg_8h, iVar5, iVar6, *dwRadius, *var_24h, *var_20h);\n                                    (*_sym.imp.GDI32.dll_LineTo)(arg_8h, iVar5, iVar6);\n                                    (*_sym.imp.GDI32.dll_CloseFigure)(arg_8h);\n                                    var_18h = var_18h + 2;\n                                    dwRadius = dwRadius + 4;\n                                    nRightRect = nRightRect + 4;\n                                    var_20h = var_20h + 4;\n                                    var_24h = var_24h + 4;\n                                    nBottomRect = nBottomRect + 4;\n                                }\n                                goto code_r0x0041a9d1;\n                            }\n                            var_18h = var_18h + 1;\n                            dwRadius = dwRadius + 2;\n                            nRightRect = nRightRect + 2;\n                            var_20h = var_20h + 2;\n                            nBottomRect = nBottomRect + 2;\n                            var_24h = var_24h + 2;\n                            iVar4 = var_8h;\n                            fcn.0041aa4b(arg_8h, var_8h);\n                            fcn.0041aabf(arg_8h, crColor, var_8h, 0, var_ch);\n                            iVar2 = *nRightRect;\n                            iVar7 = iVar5;\n                            goto code_r0x00457cd9;\n                        }\n                        if (crColor != -1) {\n                            fcn.0041aa4b(arg_8h, var_8h);\n                            iVar5 = *nRightRect;\n                            iVar6 = *nBottomRect;\n                        }\n                        if (iVar5 != -1) {\n                            crColor = iVar5;\n                        }\n                        if (iVar6 != -1) {\n                            var_8h = iVar6;\n                        }\n                        fcn.0041aabf(arg_8h, crColor, var_8h, 0, var_ch);\n                        iVar5 = var_ch;\n                    }\n                    else {\n                        if (uVar1 == 0x12) {\n                            (*_sym.imp.GDI32.dll_SetPixel)(arg_8h, iVar5, iVar6, crColor);\n                        }\n                        else if (uVar1 == 0x14) {\n                            if (iVar5 != 0) {\n                                var_1h._0_1_ = 1;\n                            }\n                        }\n                        else if (uVar1 == 0x18) goto code_r0x0041a9d4;\ncode_r0x0041a9d1:\n                        iVar5 = var_ch;\n                    }\ncode_r0x0041a9d4:\n                    var_ch = iVar5;\n                    var_18h = var_18h + 1;\n                    dwRadius = dwRadius + 2;\n                    nRightRect = nRightRect + 2;\n                    var_20h = var_20h + 2;\n                    nBottomRect = nBottomRect + 2;\n                    var_24h = var_24h + 2;\n                    iVar5 = var_8h;\n                    iVar6 = var_ch;\n                } while (var_18h < *(arg_ch + 0xc));\n            }\n            arg_ch = *(arg_ch + 4);\n        } while (arg_ch != 0);\n    }\n    uVar3 = fcn.0041aa4b(arg_8h, iVar5);\n    return uVar3 & 0xffffff00 | var_1h;\n}\n",
        "token_count": 1564
    },
    "0041aa4b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041aa4b(uint hdc, int32_t arg_ch)\n\n{\n    if (*0x4d196c != '\\0') {\n        (*_sym.imp.GDI32.dll_EndPath)(hdc);\n        *0x4d196c = '\\0';\n        if ((arg_ch == -2) || (arg_ch == -1)) {\n            (*_sym.imp.GDI32.dll_StrokePath)(hdc);\n        }\n        else {\n            (*_sym.imp.GDI32.dll_StrokeAndFillPath)(hdc);\n        }\n    }\n    if (*0x4d1968 != 0) {\n        (*_sym.imp.GDI32.dll_SelectObject)(hdc, *0x4d1968);\n        *0x4d1968 = 0;\n        (*_sym.imp.GDI32.dll_DeleteObject)(*0x4d1964);\n        *0x4d1964 = 0;\n        *0x4d1974 = 0xffffffff;\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "0041aabf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041aabf(uint hdc, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    uint uVar1;\n    uint lplb;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if ((arg_ch != -1) && (((*0x4d1974 != arg_ch || (*0x4d1970 != arg_18h)) || (*0x4d1978 != arg_14h)))) {\n        if (*0x4d1964 != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(*0x4d1964);\n            *0x4d1964 = 0;\n        }\n        lplb = 0;\n        var_4h = 0;\n        *0x4d1970 = arg_18h;\n        *0x4d1974 = arg_ch;\n        *0x4d1978 = arg_14h;\n        var_8h = arg_ch;\n        if (arg_18h != 1) {\n            arg_14h = arg_14h | 0x10000;\n        }\n        *0x4d1964 = (*_sym.imp.GDI32.dll_ExtCreatePen)(arg_14h, arg_18h, &lplb, 0, 0);\n        *0x4d1968 = (*_sym.imp.GDI32.dll_SelectObject)(hdc, *0x4d1964);\n        if (*0x4d196c == '\\0') {\n            (*_sym.imp.GDI32.dll_BeginPath)(hdc);\n            *0x4d196c = '\\x01';\n        }\n    }\n    if ((arg_10h != -2) && (arg_10h != -1)) {\n        uVar1 = fcn.0041ab80(arg_10h, 0);\n        (*_sym.imp.GDI32.dll_SelectObject)(hdc, uVar1);\n    }\n    return;\n}\n",
        "token_count": 455
    },
    "0041ac40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ac40(uint hDlg, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    arg_8h = fcn.0041b021(hDlg);\n    iVar2 = fcn.0041adc4(arg_10h);\n    uVar3 = arg_10h;\n    if (iVar2 == -1) {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(arg_10h);\n        iVar2 = fcn.0041adc4(uVar3);\n    }\n    if (arg_14h == 1) {\n        if ((iVar2 == -1) ||\n           (((cVar1 = *(**(*0x4d1924 + iVar2 * 4) + 0x90),  cVar1 != '\\x02' && (cVar1 != '\\x03')) && (cVar1 != '\\0'))))\n        {\n            uVar3 = 0x133;\n            goto code_r0x00457de7;\n        }\n    }\n    else if (arg_14h == 2) {\n        if ((iVar2 == -1) || (*(**(*0x4d1924 + iVar2 * 4) + 0x90) != '\\x01')) {\n            uVar3 = 0x134;\n            goto code_r0x00457de7;\n        }\n    }\n    else if ((arg_14h == 6) &&\n            ((iVar2 == -1 ||\n             ((iVar2 = **(*0x4d1924 + iVar2 * 4),  *(iVar2 + 0x90) == '\\x12' && (*(iVar2 + 0x48) == -1)))))) {\n        uVar3 = 0x138;\ncode_r0x00457de7:\n        (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, uVar3, arg_ch, arg_10h);\n        return;\n    }\n    fcn.0041acb8(arg_8h, arg_ch, uVar3);\n    return;\n}\n",
        "token_count": 487
    },
    "0041acb8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041acb8(int32_t arg_8h, uint hdc, uint arg_10h)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    bool bVar6;\n    int32_t iVar7;\n    int32_t arg_8h_00;\n    uint uVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    uint lpRect;\n    uint nYPos;\n    int32_t var_4h;\n    \n    iVar3 = **(*0x4d1910 + arg_8h * 4);\n    var_4h = iVar3;\n    iVar7 = fcn.0041adc4(arg_10h);\n    bVar10 = false;\n    arg_8h_00 = (*_sym.imp.USER32.dll_GetSysColor)(0xf);\n    iVar5 = var_4h;\n    if (*(iVar3 + 0x4c) != -1) {\n        arg_8h_00 = *(iVar3 + 0x4c);\n    }\n    if (iVar7 == -1) goto code_r0x00457f70;\n    puVar4 = **(*0x4d1924 + iVar7 * 4);\n    iVar3 = puVar4[0x12];\n    puVar1 = puVar4 + 0x24;\n    if ((-1 < iVar3) && (iVar7 = iVar3,  *puVar1 != '\\x1b')) goto code_r0x0041ad34;\n    iVar7 = arg_8h_00;\n    // switch table (28 cases) at 0x41ad8c\n    switch(*puVar1) {\n    case '\\0':\n    case '\\x02':\n    case '\\x03':\n        uVar9 = (*_sym.imp.USER32.dll_GetWindowLongW)(*puVar4, 0xfffffff0);\n        if ((uVar9 & 0x8000800) == 0) goto code_r0x00457e92;\n        uVar8 = 0xf;\n        goto code_r0x00457e94;\n    case '\\x01':\n    case '\\x10':\n    case '\\x13':\ncode_r0x00457e92:\n        uVar8 = 5;\ncode_r0x00457e94:\n        iVar7 = (*_sym.imp.USER32.dll_GetSysColor)(uVar8);\n        break;\n    default:\n        bVar10 = iVar3 == -2;\n        break;\n    case '\\x06':\n    case '\\x1b':\n        bVar10 = true;\n        break;\n    case '\\a':\n        bVar6 = false;\n        if (*(puVar4 + 0x93) != -1) {\n            (*_sym.imp.USER32.dll_GetClientRect)(*(var_4h + 0x188), &lpRect);\n            (*_sym.imp.USER32.dll_SendMessageW)(*(iVar5 + 0x188), 0x1328, 0, &lpRect);\n            uVar8 = (*_sym.imp.USER32.dll_GetWindowDC)(*(iVar5 + 0x188));\n            iVar7 = (*_sym.imp.GDI32.dll_GetPixel)(uVar8, lpRect, nYPos);\n            (*_sym.imp.USER32.dll_ReleaseDC)(*(var_4h + 0x188), uVar8);\n            if (iVar7 == -1) {\n                if (*0x4d1390 == 0) {\n                    uVar8 = 0xf;\n                }\n                else {\n                    uVar8 = 5;\n                }\n                iVar7 = (*_sym.imp.USER32.dll_GetSysColor)(uVar8);\n            }\n            break;\n        }\n        goto code_r0x0041ad41;\n    case '\\b':\n    case '\\n':\n    case '\\v':\n    case '\\x12':\n    case '\\x18':\n        break;\n    }\ncode_r0x0041ad34:\n    arg_8h_00 = iVar7;\n    bVar6 = bVar10;\n    if ((*(puVar4 + 0x93) == -1) || (puVar4[0x12] != -1)) {\ncode_r0x0041ad41:\n        bVar10 = bVar6;\n    }\n    else {\n        cVar2 = *puVar1;\n        if (cVar2 != '\\x17') {\n            if ((((cVar2 != '\\a') && (cVar2 != '\\x01')) && (cVar2 != '\\x02')) && ((cVar2 != '\\x03' && (cVar2 != '\\0'))))\n            {\n                uVar8 = (*_sym.imp.USER32.dll_GetWindowDC)(*puVar4);\n                arg_8h_00 = (*_sym.imp.GDI32.dll_GetPixel)(uVar8, 0, 0);\n                if ((arg_8h_00 == -1) &&\n                   ((arg_8h_00 = (*_sym.imp.GDI32.dll_GetPixel)(uVar8, *(puVar4 + 0x23) + -1, 0),  arg_8h_00 == -1 &&\n                    (arg_8h_00 = (*_sym.imp.GDI32.dll_GetPixel)(uVar8, 0, *(puVar4 + 0x8e) + -1),  arg_8h_00 == -1)))) {\n                    arg_8h_00 = (*_sym.imp.GDI32.dll_GetPixel)(uVar8, *(puVar4 + 0x23) + -1, *(puVar4 + 0x8e) + -1);\n                }\n                (*_sym.imp.USER32.dll_ReleaseDC)(*puVar4, uVar8);\n                bVar10 = true;\n                if (arg_8h_00 == -1) goto code_r0x0041ad44;\n            }\n            goto code_r0x0041ad41;\n        }\n        bVar10 = true;\n    }\ncode_r0x0041ad44:\n    if (puVar4[0x13] == -1) {\n        uVar8 = (*_sym.imp.USER32.dll_GetSysColor)(8);\n    }\n    else {\n        uVar8 = puVar4[0x13];\n    }\n    (*_sym.imp.GDI32.dll_SetTextColor)(hdc, uVar8);\n    if (bVar10) {\n        (*_sym.imp.GDI32.dll_SetBkMode)(hdc, 1);\n        (*_sym.imp.GDI32.dll_GetStockObject)(5);\n    }\n    else {\ncode_r0x00457f70:\n        (*_sym.imp.GDI32.dll_SetBkColor)(hdc, arg_8h_00);\n        fcn.0041ab80(arg_8h_00, 0);\n    }\n    return;\n}\n",
        "token_count": 1510
    },
    "0041adfd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041adfd(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t **ppuVar4;\n    int32_t iVar5;\n    int16_t iVar6;\n    uint uVar7;\n    \n    iVar2 = fcn.0041b021(arg_8h);\n    uVar3 = arg_14h;\n    if ((iVar2 == -1) && (arg_ch != 1)) goto code_r0x0041aecd;\n    if ((*0x4d1984 != 0) && ((ppuVar4 = *0x4d197c,  *0x4d18e8 == '\\0' || (*0x4d1988 != arg_ch)))) {\n        for (; ppuVar4 != NULL; ppuVar4 = ppuVar4[1]) {\n            if (**ppuVar4 == arg_ch) {\n                arg_14h = 0;\n                *0x4d1988 = arg_ch;\n                *0x4d18e8 = 1;\n                iVar5 = fcn.0047b93c(*ppuVar4 + 1, &arg_14h, arg_8h, arg_ch, arg_10h, uVar3);\n                *0x4d1988 = 0xffffffff;\n                *0x4d18e8 = '\\0';\n                if (iVar5 == 1) {\n                    *0x4d18e8 = 0;\n                    *0x4d1988 = 0xffffffff;\n                    return arg_14h;\n                }\n                iVar5 = fcn.0041b021(arg_8h);\n                if (iVar5 == -1) {\n                    return 0;\n                }\n                break;\n            }\n        }\n    }\n    iVar5 = 0;\n    iVar6 = uVar3;\n    iVar1 = uVar3 >> 0x10;\n    if (0x115 < arg_ch) {\n        if (arg_ch < 0x203) {\n            if (arg_ch != 0x202) {\n                if (arg_ch < 0x138) {\n                    if (arg_ch == 0x137) {\ncode_r0x0041af8b:\n                        iVar2 = fcn.0041b021(arg_8h);\n                        iVar2 = **(*0x4d1910 + iVar2 * 4);\n                        uVar7 = (*_sym.imp.USER32.dll_GetSysColor)(0xf);\n                        if (*(iVar2 + 0x4c) != -1) {\n                            uVar7 = *(iVar2 + 0x4c);\n                        }\n                        (*_sym.imp.GDI32.dll_SetBkColor)(arg_10h, uVar7);\n                        uVar3 = fcn.0041ab80(uVar7, 0);\n                        return uVar3;\n                    }\n                    if (arg_ch == 0x133) {\n                        uVar7 = 1;\n                    }\n                    else {\n                        if (arg_ch != 0x134) {\n                            if ((arg_ch != 0x135) && (arg_ch != 0x136)) goto code_r0x0041aecd;\n                            goto code_r0x0041af8b;\n                        }\n                        uVar7 = 2;\n                    }\n                }\n                else {\n                    if (arg_ch != 0x138) {\n                        if (arg_ch == 0x200) {\n                            fcn.004992f2(arg_8h, iVar6, iVar1, arg_10h);\n                            return 0;\n                        }\n                        if (arg_ch != 0x201) goto code_r0x0041aecd;\n                        uVar7 = 0;\n                        goto code_r0x004581c2;\n                    }\n                    uVar7 = 6;\n                }\n                uVar3 = fcn.0041ac40(arg_8h, arg_10h, uVar3, uVar7);\n                return uVar3;\n            }\n            uVar7 = 0;\n        }\n        else {\n            iVar5 = arg_ch - 0x204;\n            if (iVar5 == 0) {\n                uVar7 = 1;\ncode_r0x004581c2:\n                fcn.0049899c(arg_8h, iVar5, iVar6, iVar1, arg_10h, uVar7);\n                return 0;\n            }\n            if (arg_ch != 0x205) {\n                if (arg_ch == 0x211) {\n                    uVar7 = 0x211;\n                    *(**(*0x4d1910 + iVar2 * 4) + 0x1a8) = 0;\n                }\n                else if (arg_ch == 0x212) {\n                    uVar7 = 0x212;\n                    *(**(*0x4d1910 + iVar2 * 4) + 0x1a8) = 1;\n                }\n                else {\n                    if (arg_ch == 0x232) {\n                        fcn.00499272(iVar2, iVar2, arg_8h, arg_10h, uVar3);\n                        return 0;\n                    }\n                    if (arg_ch == 0x233) {\n                        fcn.00499010(arg_8h, arg_10h);\n                        return 0;\n                    }\n                    if (arg_ch != 0x31a) goto code_r0x0041aecd;\n                    *0x4d1390 = (*_sym.imp.UxTheme.dll_IsThemeActive)();\n                    uVar7 = 0x31a;\n                }\n                (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, uVar7, arg_10h, uVar3);\n                return 0;\n            }\n            uVar7 = 1;\n        }\n        fcn.004989f4(arg_8h, iVar6, iVar1, arg_10h, uVar7);\n        return 0;\n    }\n    if (arg_ch != 0x115) {\n        if (arg_ch < 0x2c) {\n            if (arg_ch == 0x2b) {\n                fcn.00498f93(arg_8h, uVar3);\n                return 0;\n            }\n            if (arg_ch < 7) {\n                if (arg_ch == 6) {\n                    fcn.0041a5c7(arg_8h, arg_10h & 0xffff, uVar3, arg_10h >> 0x10);\n                    return 0;\n                }\n                if (arg_ch == 1) {\n                    return 0;\n                }\n                if (arg_ch == 2) {\n                    fcn.0041a119(arg_8h);\n                    return 0;\n                }\n                if (arg_ch == 3) {\n                    fcn.0049934a(arg_8h);\n                    return 0;\n                }\n                if (arg_ch == 5) {\n                    fcn.00499e78(arg_8h, arg_10h, iVar6, iVar1);\n                    return 0;\n                }\n            }\n            else {\n                if (arg_ch == 0xf) {\n                    fcn.0041a692(arg_8h);\n                    return 0;\n                }\n                if (arg_ch == 7) {\n                    fcn.0041a61c(arg_8h, arg_10h);\n                    return 0;\n                }\n                if (arg_ch == 0x20) {\n                    uVar3 = fcn.00499de5(arg_8h, arg_10h, uVar3 & 0xffff, uVar3 >> 0x10);\n                    return uVar3;\n                }\n            }\n        }\n        else {\n            if (arg_ch == 0x4e) {\n                uVar3 = fcn.00499468(arg_8h, arg_10h, uVar3);\n                return uVar3;\n            }\n            if (arg_ch == 0x53) {\n                fcn.004992bd(iVar2, iVar2, arg_8h, arg_10h, uVar3);\n                return 0;\n            }\n            if (arg_ch == 0x7b) {\n                fcn.00498ebb(arg_8h, arg_10h, uVar3 & 0xffff, uVar3 >> 0x10);\n                return 0;\n            }\n            if (arg_ch == 0x84) {\n                uVar3 = fcn.0049942c(arg_8h, iVar6, iVar1);\n                return uVar3;\n            }\n            if (arg_ch == 0x111) {\n                fcn.00498c00(arg_8h, arg_10h & 0xffff, uVar3, arg_10h >> 0x10);\n                return 0;\n            }\n            if (arg_ch == 0x112) {\n                fcn.0049a1f1(arg_8h, arg_10h, iVar6, iVar1);\n                return 0;\n            }\n            if (arg_ch == 0x114) {\n                uVar7 = 1;\n                goto code_r0x00458063;\n            }\n        }\ncode_r0x0041aecd:\n        uVar3 = (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h);\n        return uVar3;\n    }\n    uVar7 = 0;\ncode_r0x00458063:\n    fcn.00499d66(arg_8h, uVar3, arg_10h & 0xffff, arg_10h >> 0x10, uVar7);\n    return 0;\n}\n",
        "token_count": 2147
    },
    "0041b0ea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041b0ea(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    double dVar2;\n    double dVar3;\n    double dVar4;\n    double dVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t in_ECX;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar6 = 0;\n    uVar8 = 0;\n    iVar9 = 0;\n    iVar1 = 0;\n    if (arg_ch != 0) {\n        do {\n            if (*(uVar8 + arg_8h) == '\\0') {\n                iVar9 = iVar9 + 1;\n            }\n            uVar8 = uVar8 + 2;\n            iVar1 = iVar9;\n        } while (uVar8 < arg_ch);\n    }\n    uVar8 = 1;\n    iVar9 = 0;\n    if (1 < arg_ch) {\n        do {\n            if (*(uVar8 + arg_8h) == '\\0') {\n                iVar6 = iVar6 + 1;\n            }\n            uVar8 = uVar8 + 2;\n            iVar9 = iVar6;\n        } while (uVar8 < arg_ch);\n    }\n    dVar4 = arg_ch;\n    if (arg_ch < 0) {\n        dVar4 = dVar4 + *0x4c81d0;\n    }\n    dVar2 = (iVar1 + iVar1) / dVar4;\n    dVar4 = dVar4 / (iVar9 + iVar9);\n    dVar3 = *(in_ECX + 4) / *0x4b1100;\n    dVar5 = *(in_ECX + 8) / *0x4b1100;\n    if ((((dVar5 < dVar2) << 8 | (dVar5 == dVar2) << 0xe) == 0) &&\n       (((dVar4 < dVar3) << 8 | (dVar4 == dVar3) << 0xe) == 0)) {\n        uVar7 = 6;\n    }\n    else if ((((dVar5 < dVar4) << 8 | (dVar5 == dVar4) << 0xe) == 0) &&\n            (((dVar2 < dVar3) << 8 | (dVar2 == dVar3) << 0xe) == 0)) {\n        uVar7 = 8;\n    }\n    else {\n        uVar7 = 0;\n    }\n    return uVar7;\n}\n",
        "token_count": 595
    },
    "0041b1cb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041b1cb(int32_t arg_8h, double *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    float10 fVar3;\n    ulong uVar4;\n    uint var_20h;\n    double dStack20;\n    double dStack12;\n    \n    iVar1 = arg_8h;\n    if (*(arg_8h + 8) == 1) {\n        arg_8h = 0;\n    }\n    else {\n        arg_8h = fcn.0040ce67();\n        if (arg_8h == 2) {\n            fVar3 = *0x4b1100;\n            goto code_r0x0041b1fd;\n        }\n    }\n    dStack12 = arg_8h;\n    fVar3 = fcn.0042e170(*0x4c81b8, dStack12);\ncode_r0x0041b1fd:\n    dStack12 = fVar3;\n    fVar3 = fcn.0040cfb5();\n    dStack20 = fVar3;\n    fcn.0040cfb5();\n    if (0.0 < dStack20 == (dStack20 == 0.0)) {\n        fVar3 = fcn.0042fda0();\n    }\n    else {\n        fVar3 = fcn.0042fca0();\n    }\n    dStack12 = fVar3 / dStack12;\n    fcn.0040e8a0();\n    *(arg_ch + 0xc) = 3;\n    *arg_ch = dStack12;\n    if (*(iVar1 + 8) == 1) {\n        uVar2 = 0;\n        uVar4 = fcn.0040cc8f();\n        uVar2 = fcn.0047e22d(&var_20h, uVar4, uVar4 >> 0x20, uVar2);\n        fcn.0040c5e7(uVar2);\n        fcn.0040e8a0();\n    }\n    return 0;\n}\n",
        "token_count": 461
    },
    "0041b2ca": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b2ca(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint arg_8h_00;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    iVar3 = 1;\n    var_4h = 1;\n    if (*(*(*(arg_8h + 4) + 4) + 8) == 0x7f) {\ncode_r0x0041b2f3:\n        arg_8h = 0;\n        do {\n            if (*(in_ECX + 0x164) == 0) {\n                arg_8h_00 = 0x96;\n                goto code_r0x00458319;\n            }\n            cVar1 = *(in_ECX + 0x16d);\n            piVar2 = *(in_ECX + 0x168);\n            piVar4 = piVar2;\n            if (cVar1 != '\\0') {\n                piVar4 = piVar2[0xc];\n            }\n            if (*piVar4 == 1) {\ncode_r0x0041b33b:\n                piVar4 = piVar2;\n                if (cVar1 != '\\0') {\n                    piVar4 = piVar2[0xc];\n                }\n                if (piVar4[1] < *arg_ch) {\n                    piVar4 = piVar2;\n                    if (cVar1 != '\\0') {\n                        piVar4 = piVar2[0xc];\n                    }\n                    if (*arg_ch <= piVar4[2]) {\n                        arg_8h = arg_8h + 1;\n                        if (cVar1 != '\\0') {\n                            piVar2 = piVar2[0xc];\n                        }\n                        *arg_ch = piVar2[2];\n                        if (arg_8h == iVar3) {\n                            return;\n                        }\n                        goto code_r0x004582fb;\n                    }\n                }\n                arg_8h_00 = 0x8f;\ncode_r0x00458319:\n                fcn.004734ba(arg_8h_00, 0xffffffff);\n                return;\n            }\n            piVar4 = piVar2;\n            if (cVar1 != '\\0') {\n                piVar4 = piVar2[0xc];\n            }\n            if (*piVar4 == 2) goto code_r0x0041b33b;\n            piVar4 = piVar2;\n            if (cVar1 != '\\0') {\n                piVar4 = piVar2[0xc];\n            }\n            if (*piVar4 == 3) goto code_r0x0041b33b;\ncode_r0x004582fb:\n            fcn.00404271();\n        } while (arg_8h < iVar3);\n    }\n    else {\n        var_18h = 0;\n        var_10h = 0;\n        var_ch = 1;\n        iVar3 = fcn.00410540(arg_8h, &var_4h, &var_18h, 0xffffffff);\n        if (-1 < iVar3) {\n            iVar3 = *(*(arg_8h + 4) + var_4h * 4);\n            if (*(iVar3 + 8) == 0x7f) {\n                iVar3 = fcn.0040ce67();\n                if (iVar3 < 0) {\n                    iVar3 = 0;\n                }\n                fcn.0040e8a0();\n                if (iVar3 < 1) {\n                    return;\n                }\n                goto code_r0x0041b2f3;\n            }\n            fcn.004734ba(0x72, *(iVar3 + 10));\n        }\n        fcn.0040e8a0();\n    }\n    return;\n}\n",
        "token_count": 881
    },
    "0041b3a3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b3a3(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 4) != 1) {\n        if (*(param_1 + 0xd) != '\\0') {\n            iVar1 = *(param_1 + 8);\n            uVar2 = *(iVar1 + 0x10);\n            if (iVar1 != 0) {\n                fcn.0041b3e0(iVar1);\n            }\n            *(param_1 + 8) = uVar2;\n            *(param_1 + 0xd) = 0;\n        }\n        if (*(param_1 + 0xc) == '\\0') {\n            iVar1 = *(param_1 + 8);\n            uVar2 = *(iVar1 + 0x10);\n            if (iVar1 != 0) {\n                fcn.0041b3e0(iVar1);\n            }\n            *(param_1 + 8) = uVar2;\n            *(param_1 + 0xd) = 0;\n        }\n        else {\n            *(param_1 + 0xd) = 1;\n        }\n    }\n    *(param_1 + 4) = *(param_1 + 4) + -1;\n    return;\n}\n",
        "token_count": 293
    },
    "0041b451": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b451(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    double *in_ECX;\n    int32_t iVar2;\n    int32_t iVar3;\n    float10 fVar4;\n    ulong uVar5;\n    \n    iVar1 = *(in_ECX + 0xc);\n    if (iVar1 == 1) {\n        if (arg_8h[3] == 1) {\n            iVar3 = *in_ECX * *arg_8h >> 0x20;\n            iVar1 = *in_ECX * *arg_8h;\n            iVar2 = *in_ECX * *arg_8h;\n            if ((iVar2 - iVar1 == 0) && (iVar2 >> 0x1f == iVar3)) {\n                *in_ECX = iVar2;\n            }\n            else {\n                *(in_ECX + 0xc) = 2;\n                *in_ECX = iVar1;\n                *(in_ECX + 4) = iVar3;\n            }\n        }\n        else if (arg_8h[3] == 2) {\n            uVar5 = fcn.00441ce0(*in_ECX, *in_ECX >> 0x1f, *arg_8h, arg_8h[1]);\n            *in_ECX = uVar5;\n            *(in_ECX + 4) = uVar5 >> 0x20;\n            *(in_ECX + 0xc) = 2;\n        }\n        else {\n            fcn.0041b518();\n            fVar4 = fcn.0040cfb5();\n            *in_ECX = fVar4 * *in_ECX;\n        }\n        goto code_r0x0041b48f;\n    }\n    if (iVar1 == 2) {\n        if ((arg_8h[3] == 1) || (arg_8h[3] == 2)) {\n            uVar5 = fcn.0040cc8f();\n            uVar5 = fcn.00441ce0(uVar5, *in_ECX, *(in_ECX + 4));\n            *in_ECX = uVar5;\n            *(in_ECX + 4) = uVar5 >> 0x20;\n            goto code_r0x0041b48f;\n        }\n        fcn.0041b518();\n    }\n    else if (iVar1 != 3) {\n        if (iVar1 == 4) {\n            fcn.0040b771();\n            fcn.0041b451(arg_8h);\n            goto code_r0x0041b48f;\n        }\n        if ((iVar1 != 9) && (iVar1 != 0xb)) goto code_r0x0041b48f;\n        fcn.0041b518();\n    }\n    fVar4 = fcn.0040cfb5();\n    *in_ECX = fVar4 * *in_ECX;\ncode_r0x0041b48f:\n    if (*(in_ECX + 1) != 0) {\n        fcn.0041d962(*(in_ECX + 1));\n        *(in_ECX + 1) = 0;\n    }\n    return;\n}\n",
        "token_count": 712
    },
    "0041b4a2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b4a2(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    double *in_ECX;\n    int32_t iVar5;\n    float10 fVar6;\n    ulong uVar7;\n    uint var_4h;\n    \n    iVar4 = *(in_ECX + 0xc);\n    if (iVar4 < 8) {\n        if (iVar4 == 7) {\n            iVar4 = *in_ECX;\n            if (arg_8h[3] == 1) {\n                iVar5 = fcn.0040ce67();\n            }\n            else {\n                iVar5 = fcn.0040cc8f();\n            }\n            *in_ECX = iVar4 - iVar5;\n            goto code_r0x0041b4ed;\n        }\n        if (iVar4 == 1) {\n            if (arg_8h[3] == 1) {\n                iVar4 = *in_ECX - *arg_8h;\n                uVar1 = *arg_8h;\n                uVar2 = *in_ECX;\n                iVar5 = ((uVar2 >> 0x1f) - (uVar1 >> 0x1f)) - (uVar2 < uVar1);\n                if ((iVar4 == uVar2 - uVar1) && (iVar4 >> 0x1f == iVar5)) {\n                    *in_ECX = iVar4;\n                }\n                else {\n                    *(in_ECX + 0xc) = 2;\n                    *in_ECX = uVar2 - uVar1;\n                    *(in_ECX + 4) = iVar5;\n                }\n                goto code_r0x0041b4ed;\n            }\n            if (arg_8h[3] == 2) {\n                uVar1 = *in_ECX;\n                uVar2 = *arg_8h;\n                uVar3 = arg_8h[1];\n                *in_ECX = uVar1 - *arg_8h;\n                *(in_ECX + 4) = ((uVar1 >> 0x1f) - uVar3) - (uVar1 < uVar2);\n                *(in_ECX + 0xc) = 2;\n                goto code_r0x0041b4ed;\n            }\n        }\n        else {\n            if (iVar4 != 2) {\n                if (iVar4 != 3) {\n                    if (iVar4 != 4) goto code_r0x0041b4ed;\n                    goto code_r0x00458422;\n                }\n                goto code_r0x0041b4e4;\n            }\n            if ((arg_8h[3] == 1) || (arg_8h[3] == 2)) {\n                uVar7 = fcn.0040cc8f();\n                uVar1 = *in_ECX;\n                *in_ECX = *in_ECX - uVar7;\n                *(in_ECX + 4) = (*(in_ECX + 4) - (uVar7 >> 0x20)) - (uVar1 < uVar7);\n                goto code_r0x0041b4ed;\n            }\n        }\n        fcn.0041b518();\n    }\n    else {\n        if (iVar4 != 9) {\n            if (iVar4 == 10) {\ncode_r0x00458422:\n                fcn.0040b771();\n                fcn.0041b4a2(arg_8h);\n                goto code_r0x0041b4ed;\n            }\n            if (iVar4 != 0xb) goto code_r0x0041b4ed;\n        }\n        fcn.0041b518();\n    }\ncode_r0x0041b4e4:\n    fVar6 = fcn.0040cfb5();\n    *in_ECX = *in_ECX - fVar6;\ncode_r0x0041b4ed:\n    if (*(in_ECX + 1) != 0) {\n        fcn.0041d962(*(in_ECX + 1));\n        *(in_ECX + 1) = 0;\n    }\n    return;\n}\n",
        "token_count": 938
    },
    "0041b544": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041b544(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[1] == 2) {\n        iVar1 = *param_1;\n    }\n    else {\n        iVar1 = *(param_1[2] + 0x10);\n        if (*(param_1 + 0xd) != '\\0') {\n            return *(iVar1 + 0x10);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 112
    },
    "0041b55d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041b55d(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    int16_t *in_ECX;\n    uint32_t in_EDX;\n    uint16_t *puVar5;\n    bool bVar6;\n    int32_t arg_10h_00;\n    uint var_4h;\n    \n    do {\n        piVar2 = fcn.0041d0b1();\n        iVar1 = *piVar2;\n        if (iVar1 == 0x87) {\n            puVar5 = piVar2 + 2;\n            uVar4 = *puVar5;\n            if (uVar4 == 0x76) {\n                puVar5 = piVar2 + 6;\n                uVar4 = *puVar5;\n            }\n            if (0x8c < uVar4) {\n                if (uVar4 < 0x92) {\n                    return 0;\n                }\n                if (uVar4 == 0x9d) {\n                    return 0;\n                }\n            }\n            iVar3 = fcn.0041b55d(arg_8h, arg_ch, 1);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            do {\n                puVar5 = puVar5 + puVar5[1];\n            } while (*puVar5 == 0x77);\n            piVar2 = fcn.0041d0b1();\n            iVar1 = *piVar2;\n        }\n        iVar3 = arg_ch;\n        arg_10h_00 = arg_10h;\n        if ((((iVar1 == 0x83) || (iVar1 == 0x84)) || (iVar1 == 0x88)) ||\n           (((iVar1 == 0x89 || (iVar1 == 0x85)) || ((iVar1 == 0x86 || ((iVar1 == 0x8a || (iVar1 == 0x8b)))))))) {\ncode_r0x004585d0:\n            iVar3 = fcn.0041b55d(arg_8h, iVar3, arg_10h_00);\n            if (iVar3 == 0) {\n                return 0;\n            }\n        }\n        else {\n            if (iVar1 == 0x7d) {\n                arg_10h_00 = 1;\n                goto code_r0x004585d0;\n            }\n            if ((iVar1 == 0x81) || (iVar1 == 0x82)) {\n                iVar3 = arg_ch + 1;\n                goto code_r0x004585d0;\n            }\n            if (((iVar1 == 0x55) || (iVar1 == 0x56)) || (iVar1 == 0x5e)) {\n                if (piVar2[1] != 0xc) {\n                    return 0;\n                }\n                if ((*(arg_8h + 0x50) & in_EDX) != 0) {\n                    return 0;\n                }\n                if (0 < arg_ch) {\n                    return 0;\n                }\n                if (*(arg_8h + 0x70) != 0) {\n                    return 0;\n                }\n                bVar6 = arg_10h == 0;\ncode_r0x0041b627:\n                if (!bVar6) {\n                    return 0;\n                }\n            }\n            else if (iVar1 != 0x1b) {\n                bVar6 = iVar1 == 0x1c;\n                goto code_r0x0041b627;\n            }\n        }\n        in_ECX = in_ECX + in_ECX[1];\n        if (*in_ECX != 0x77) {\n            return 1;\n        }\n    } while( true );\n}\n",
        "token_count": 862
    },
    "0041b648": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041b648(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    uint32_t uVar3;\n    int16_t *in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *in_EDX = -1;\n    iVar4 = -1;\n    uVar6 = 0;\n    do {\n        puVar2 = fcn.0041d0b1();\n        uVar1 = *puVar2;\n        if (uVar1 < 0x32) {\n            if (0x2f < uVar1) goto code_r0x00458692;\n            if (uVar1 != 0x1d) {\n                if (uVar1 == 0x1e) goto code_r0x00458692;\n                if (uVar1 < 0x23) {\n                    return 0;\n                }\n                if (0x24 < uVar1) {\n                    if (uVar1 == 0x29) {\n                        puVar2 = puVar2 + 1;\n                    }\n                    else if (uVar1 != 0x2b) {\n                        return 0;\n                    }\n                }\n            }\n            if (arg_8h == 0) {\n                return 0;\n            }\n            uVar3 = puVar2[1];\n            if (-1 < iVar4) {\ncode_r0x004586ab:\n                bVar7 = uVar6 == uVar3;\n                goto code_r0x004586ad;\n            }\n            iVar5 = 0;\n        }\n        else if (uVar1 == 0x36) {\n            puVar2 = puVar2 + 1;\ncode_r0x00458692:\n            if (arg_8h == 0) {\n                return 0;\n            }\n            uVar3 = puVar2[1];\n            if (-1 < iVar4) goto code_r0x004586ab;\n            iVar5 = 1;\n        }\n        else {\n            if (uVar1 == 0x38) goto code_r0x00458692;\n            if (uVar1 != 0x7d) {\n                if (uVar1 < 0x81) {\n                    return 0;\n                }\n                if (0x86 < uVar1) {\n                    if (uVar1 < 0x8a) {\n                        return 0;\n                    }\n                    if (0x8b < uVar1) {\n                        return 0;\n                    }\n                }\n            }\n            uVar3 = fcn.0041b648(uVar1 == 0x7d);\n            if (var_14h < 0) {\n                return 0;\n            }\n            iVar5 = var_14h;\n            if (iVar4 < 0) goto code_r0x004586b3;\n            if (uVar6 != uVar3) {\n                return 0;\n            }\n            bVar7 = iVar4 == var_14h;\ncode_r0x004586ad:\n            iVar5 = iVar4;\n            uVar3 = uVar6;\n            if (!bVar7) {\n                return 0;\n            }\n        }\ncode_r0x004586b3:\n        in_ECX = in_ECX + in_ECX[1];\n        iVar4 = iVar5;\n        uVar6 = uVar3;\n        if (*in_ECX != 0x77) {\n            *in_EDX = iVar5;\n            return uVar3;\n        }\n    } while( true );\n}\n",
        "token_count": 848
    },
    "0041b728": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.0041b728(uint noname_0, uint *arg_ch, int32_t *arg_10h)\n\n{\n    int16_t iVar1;\n    ushort uVar2;\n    int16_t *piVar3;\n    uint16_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint uVar7;\n    int16_t *extraout_ECX;\n    int32_t iVar8;\n    uint32_t extraout_EDX;\n    uint *unaff_ESI;\n    uint *puVar9;\n    uint32_t unaff_EDI;\n    int16_t *piVar10;\n    uint *arg_2ch;\n    int32_t iVar11;\n    bool bVar12;\n    uint var_11c8h;\n    uint var_1c8h;\n    uint var_d8h;\n    int32_t var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint *var_c8h;\n    uint *var_c4h;\n    int16_t *var_c0h;\n    int16_t *var_bch;\n    uint *var_b8h;\n    uint var_b4h;\n    uint *var_b0h;\n    int32_t var_ach;\n    int32_t var_a8h;\n    int32_t var_a4h;\n    int32_t var_a0h;\n    int32_t var_9ch;\n    uint var_98h;\n    uint var_94h;\n    int32_t var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint32_t var_78h;\n    uint32_t var_74h;\n    uint var_70h;\n    int32_t var_6ch;\n    uint var_68h;\n    int32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint uStackY72;\n    uint *var_3ch;\n    uint32_t var_38h;\n    uint *var_34h;\n    int32_t var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0x41b735;\n    fcn.00441ef0();\n    var_24h = 0xffffffff;\n    var_28h = 0xffffffff;\n    var_20h = 0x1;\n    var_30h = 0;\n    var_4h = 0;\n    if (arg_ch == NULL) {\n        return NULL;\n    }\n    *arg_ch = 0;\n    var_18h = extraout_ECX;\n    var_ch = unaff_EDI;\n    var_8h = unaff_ESI;\n    if (arg_10h == NULL) goto code_r0x00458a17;\n    *arg_10h = 0;\n    var_d8h = 0x4b0bd0;\n    var_d4h = 0x4b0cd0;\n    var_d0h = 0x4b0dd0;\n    var_cch = 0x4b0f10;\n    if ((extraout_EDX & 0xd8008580) == 0) {\n        var_74h = 0;\n        var_2ch = extraout_EDX & 0x10000;\n        iVar1 = *extraout_ECX;\n        var_10h = extraout_ECX;\n        iVar8 = var_4h;\n        while ((piVar10 = var_10h,  iVar1 == 0x28 && (*(var_10h + (iVar8 + 1) * 2) == 0x2a))) {\n            var_10h = 0x6;\n            var_14h = 0x458708;\n            var_4h = iVar8;\n            iVar11 = fcn.0041cd85(6);\n            if (iVar11 == 0) {\n                iVar8 = iVar8 + 8;\ncode_r0x00458715:\n                unaff_EDI = unaff_EDI | 0x800;\n                var_ch = unaff_EDI;\n            }\n            else {\n                var_10h = 0x4;\n                var_14h = 0x45872e;\n                iVar11 = fcn.0041cd85(4);\n                if (iVar11 == 0) {\n                    iVar8 = iVar8 + 6;\n                    goto code_r0x00458715;\n                }\n                var_10h = 0x4;\n                var_14h = 0x458741;\n                iVar11 = fcn.0041cd85(4);\n                if (iVar11 == 0) {\n                    iVar8 = iVar8 + 6;\n                    unaff_EDI = unaff_EDI | 0x20000000;\n                    var_ch = unaff_EDI;\n                }\n                else {\n                    var_10h = 0x10;\n                    var_14h = 0x458762;\n                    iVar11 = fcn.0041cd85(0x10);\n                    if (iVar11 == 0) {\n                        iVar8 = iVar8 + 0x12;\n                        unaff_EDI = unaff_EDI | 0x20000;\n                        var_ch = unaff_EDI;\n                    }\n                    else {\n                        var_10h = 0xd;\n                        var_14h = 0x458783;\n                        iVar11 = fcn.0041cd85(0xd);\n                        if (iVar11 == 0) {\n                            iVar8 = iVar8 + 0xf;\n                            unaff_EDI = unaff_EDI | 0x4000000;\n                            var_ch = unaff_EDI;\n                        }\n                        else {\n                            var_10h = 0xc;\n                            var_14h = 0x4587a4;\n                            puVar6 = fcn.0041cd85(0xc);\n                            if (puVar6 == NULL) {\n                                iVar8 = iVar8 + 0xe;\n                                var_10h = *(var_10h + iVar8 * 2);\n                                var_14h = 0x4587c0;\n                                var_8h = puVar6;\n                                iVar11 = fcn.00428f9b(var_10h);\n                                piVar3 = var_10h;\n                                piVar10 = var_10h;\n                                for (puVar6 = var_8h; (iVar11 != 0 && (unaff_EDI = var_ch,  puVar6 < 0x19999999));\n                                    puVar6 = uVar4 + puVar6 * 10 + -0x30) {\n                                    uVar4 = piVar3[iVar8];\n                                    iVar8 = iVar8 + 1;\n                                    var_10h = piVar3[iVar8];\n                                    var_14h = 0x4587ea;\n                                    iVar11 = fcn.00428f9b(var_10h);\n                                    unaff_EDI = var_ch;\n                                    piVar10 = var_10h;\n                                }\n                                var_8h = puVar6;\n                                if (piVar10[iVar8] != 0x29) break;\n                                if (puVar6 < var_24h) {\n                                    var_74h = var_74h | 0x2000;\n                                    var_24h = puVar6;\n                                }\n                            }\n                            else {\n                                var_10h = 0x10;\n                                var_14h = 0x45883f;\n                                puVar6 = fcn.0041cd85(0x10);\n                                if (puVar6 != NULL) {\n                                    var_10h = 0x3;\n                                    var_14h = 0x4588c1;\n                                    iVar11 = fcn.0041cd85(3);\n                                    if (iVar11 == 0) {\n                                        iVar8 = iVar8 + 5;\n                                        uVar5 = 0x100000;\n                                    }\n                                    else {\n                                        var_10h = 0x3;\n                                        var_14h = 0x4588de;\n                                        iVar11 = fcn.0041cd85(3);\n                                        if (iVar11 == 0) {\n                                            iVar8 = iVar8 + 5;\n                                            uVar5 = 0x200000;\n                                        }\n                                        else {\n                                            var_10h = 0x5;\n                                            var_14h = 0x4588fb;\n                                            iVar11 = fcn.0041cd85(5);\n                                            if (iVar11 == 0) {\n                                                iVar8 = iVar8 + 7;\n                                                uVar5 = 0x300000;\n                                            }\n                                            else {\n                                                var_10h = 0x4;\n                                                var_14h = 0x458918;\n                                                iVar11 = fcn.0041cd85(4);\n                                                if (iVar11 == 0) {\n                                                    iVar8 = iVar8 + 6;\n                                                    uVar5 = 0x400000;\n                                                }\n                                                else {\n                                                    var_10h = 0x8;\n                                                    var_14h = 0x458935;\n                                                    iVar11 = fcn.0041cd85(8);\n                                                    if (iVar11 != 0) {\n                                                        var_10h = 0xc;\n                                                        var_14h = 0x45895a;\n                                                        iVar11 = fcn.0041cd85(0xc);\n                                                        if (iVar11 == 0) {\n                                                            uVar5 = 0x800000;\n                                                        }\n                                                        else {\n                                                            var_10h = 0xc;\n                                                            var_14h = 0x458974;\n                                                            iVar11 = fcn.0041cd85(0xc);\n                                                            piVar10 = var_10h;\n                                                            if (iVar11 != 0) break;\n                                                            uVar5 = 0x1000000;\n                                                        }\n                                                        unaff_EDI = unaff_EDI & 0xfe7fffff | uVar5;\n                                                        iVar8 = iVar8 + 0xe;\n                                                        var_ch = unaff_EDI;\n                                                        goto code_r0x0045898c;\n                                                    }\n                                                    iVar8 = iVar8 + 10;\n                                                    uVar5 = 0x500000;\n                                                }\n                                            }\n                                        }\n                                    }\n                                    unaff_EDI = unaff_EDI & 0xff8fffff | uVar5;\n                                    var_ch = unaff_EDI;\n                                    goto code_r0x0045898c;\n                                }\n                                iVar8 = iVar8 + 0x12;\n                                var_10h = *(var_10h + iVar8 * 2);\n                                var_14h = 0x458857;\n                                var_8h = puVar6;\n                                iVar11 = fcn.00428f9b(var_10h);\n                                piVar3 = var_10h;\n                                piVar10 = var_10h;\n                                for (puVar6 = var_8h; (iVar11 != 0 && (unaff_EDI = var_ch,  puVar6 < 0x19999999));\n                                    puVar6 = uVar4 + puVar6 * 10 + -0x30) {\n                                    uVar4 = piVar3[iVar8];\n                                    iVar8 = iVar8 + 1;\n                                    var_10h = piVar3[iVar8];\n                                    var_14h = 0x458881;\n                                    iVar11 = fcn.00428f9b(var_10h);\n                                    unaff_EDI = var_ch;\n                                    piVar10 = var_10h;\n                                }\n                                var_8h = puVar6;\n                                if (piVar10[iVar8] != 0x29) break;\n                                if (puVar6 < var_28h) {\n                                    var_74h = var_74h | 0x4000;\n                                    var_28h = puVar6;\n                                }\n                            }\n                            var_10h = 0x29;\n                            iVar8 = iVar8 + 1;\n                        }\n                    }\n                }\n            }\ncode_r0x0045898c:\n            iVar1 = *(var_10h + iVar8 * 2);\n        }\n        if ((unaff_EDI & 0x800) == 0) {\n            var_4h = 0;\n        }\n        else {\n            var_4h = 1;\n            if (var_2ch != NULL) goto code_r0x00458a17;\n            if ((unaff_EDI & 0x2000) == 0) {\n                var_14h = 0x4589c7;\n                var_10h = arg_10h;\n                var_30h = fcn.0049b8f7(arg_10h);\n                if (var_30h != 0) goto code_r0x00458a17;\n            }\n        }\n        if ((unaff_EDI & 0x1800000) == 0x1800000) {\ncode_r0x00458a07:\n            var_10h = 0x38;\n        }\n        else {\n            uVar5 = unaff_EDI & 0x700000;\n            if (uVar5 == 0) {\ncode_r0x0041b810:\n                var_54h = 2;\n            }\n            else {\n                if (uVar5 == 0x100000) {\n                    var_4ch._0_2_ = 0xd;\n                }\n                else {\n                    if (uVar5 != 0x200000) {\n                        if (uVar5 == 0x300000) {\n                            var_4ch._0_2_ = 0xd;\n                            var_54h = 0;\n                            var_4ch._2_2_ = 10;\n                            var_50h = 2;\n                        }\n                        else {\n                            if (uVar5 != 0x400000) {\n                                if (uVar5 != 0x500000) goto code_r0x00458a07;\n                                goto code_r0x0041b810;\n                            }\n                            var_54h = 1;\n                        }\n                        goto code_r0x0041b815;\n                    }\n                    var_4ch._0_2_ = 10;\n                }\n                var_50h = 1;\n                var_54h = 0;\n            }\ncode_r0x0041b815:\n            iVar8 = 0;\n            var_c8h = &fcn.0041b728::var_11c8h;\n            var_8ch = 0;\n            var_b0h = &fcn.0041b728::var_1c8h;\n            var_88h = 0;\n            var_94h = 0;\n            var_98h = 0;\n            var_a8h = 0;\n            var_a4h = 0;\n            var_ach = 0;\n            var_60h = 0;\n            var_5ch = 0;\n            var_84h = 0;\n            var_58h = 0;\n            var_9ch = 0x800;\n            var_a0h = 0x14;\n            iVar1 = *piVar10;\n            piVar3 = piVar10;\n            while (iVar1 != 0) {\n                piVar3 = piVar3 + 1;\n                iVar8 = iVar8 + 1;\n                iVar1 = *piVar3;\n            }\n            var_bch = piVar10 + iVar8;\n            var_70h = 0;\n            var_80h = 0;\n            var_11c8h._0_2_ = 0x83;\n            var_10h = &fcn.0041b728::var_20h;\n            var_14h = &fcn.0041b728::var_d8h;\n            var_7ch = 0;\n            var_18h = NULL;\n            var_1ch = &fcn.0041b728::var_34h;\n            var_90h = 0;\n            var_20h = &fcn.0041b728::var_14h;\n            var_b4h = 0;\n            var_24h = &fcn.0041b728::var_8h;\n            var_28h = &fcn.0041b728::var_3ch;\n            var_2ch = NULL;\n            var_30h = 0;\n            var_34h = NULL;\n            var_38h = 0;\n            var_3ch = &fcn.0041b728::var_30h;\n            uStackY72 = 0x41b90f;\n            var_c4h = var_c8h;\n            var_c0h = piVar10;\n            var_b8h = var_c8h;\n            var_78h = unaff_EDI;\n            fcn.0041bc46(&fcn.0041b728::var_18h, var_3ch, 0, 0, 0, 0, var_28h, var_24h, var_20h, var_1ch, 0, var_14h, \n                         var_10h);\n            if (var_30h == 0) {\n                if (var_20h < 0x10001) {\n                    iVar8 = (var_a4h * var_a8h + var_20h) * 2 + 0x38;\n                    var_14h = 0x41b947;\n                    var_10h = iVar8;\n                    puVar6 = fcn.0040ab22();\n                    iVar11 = var_a8h;\n                    if (puVar6 == NULL) {\n                        var_10h = 0x15;\n                    }\n                    else {\n                        puVar6[1] = iVar8;\n                        *puVar6 = 0x50435245;\n                        puVar6[2] = var_78h;\n                        puVar6[3] = var_74h;\n                        puVar6[4] = var_24h;\n                        puVar6[5] = var_28h;\n                        puVar6[6] = 0;\n                        *(puVar6 + 0x22) = 0x1c;\n                        *(puVar6 + 9) = var_a4h;\n                        *(puVar6 + 0x26) = var_a8h;\n                        puVar6[10] = 0;\n                        puVar6[0xb] = 0;\n                        puVar6[0xc] = 0;\n                        puVar6[0xd] = 0;\n                        var_94h = var_98h;\n                        var_80h = 0;\n                        var_7ch = 0;\n                        var_98h = 0;\n                        var_90h = 0;\n                        var_ach = puVar6 + *(puVar6 + 0x22) * 2;\n                        var_b8h = var_c8h;\n                        var_58h = 0;\n                        var_70h = 0;\n                        var_6ch = 0;\n                        var_68h = 0;\n                        var_64h = 0;\n                        arg_2ch = var_ach + *(puVar6 + 9) * *(puVar6 + 0x26) * 2;\n                        var_b4h = 0;\n                        var_c4h = arg_2ch;\n                        if (0 < var_a8h) {\n                            var_a8h = 0;\n                            puVar9 = var_b0h + 1;\n                            var_28h = arg_2ch;\n                            do {\n                                var_10h = puVar9[1];\n                                var_14h = *puVar9;\n                                var_18h = 0x458a97;\n                                fcn.0049a472(var_14h, var_10h);\n                                arg_2ch = var_28h;\n                                iVar11 = iVar11 + -1;\n                                puVar9 = puVar9 + 3;\n                            } while (0 < iVar11);\n                            if (0x14 < var_a0h) {\n                                var_10h = var_b0h;\n                                var_14h = 0x458abe;\n                                fcn.0040ab2b();\n                            }\n                        }\n                        var_10h = NULL;\n                        *arg_2ch = 0x83;\n                        var_14h = &fcn.0041b728::var_d8h;\n                        var_18h = NULL;\n                        var_20h = &fcn.0041b728::var_14h;\n                        var_24h = &fcn.0041b728::var_8h;\n                        var_28h = &fcn.0041b728::var_3ch;\n                        var_2ch = NULL;\n                        var_30h = 0;\n                        var_34h = NULL;\n                        var_38h = 0;\n                        var_3ch = &fcn.0041b728::var_30h;\n                        uStackY72 = 0x41ba57;\n                        var_1ch = arg_2ch;\n                        fcn.0041bc46(&fcn.0041b728::var_18h, var_3ch, 0, 0, 0, 0, var_28h, var_24h, var_20h, arg_2ch, 0\n                                     , var_14h, 0);\n                        *(puVar6 + 0x1e) = var_98h;\n                        *(puVar6 + 8) = var_8ch;\n                        *(puVar6 + 7) = var_90h;\n                        puVar6[3] = var_74h | 2;\n                        if (var_6ch == 0) {\n                            var_24h = var_34h;\n                            var_2ch = var_14h;\n                        }\n                        else {\n                            var_2ch = NULL;\n                            var_24h = 0xffffffff;\n                        }\n                        iVar8 = var_30h;\n                        if ((var_30h == 0) && (*var_18h != 0)) {\n                            iVar8 = 0x16;\n                        }\n                        *var_1ch = 0;\n                        var_1ch = var_1ch + 2;\n                        if (var_20h < var_1ch - arg_2ch >> 1) {\n                            var_10h = 0x17;\n                            iVar8 = var_10h;\n                        }\n                        if (var_c8h < var_b8h) {\n                            var_14h = 0xffffffff;\n                            var_34h = NULL;\n                            if (iVar8 == 0) {\n                                while (var_c8h < var_b8h) {\n                                    var_b8h = var_b8h + -2;\n                                    var_20h = *var_b8h;\n                                    if ((var_20h == NULL) || (*(arg_2ch + var_20h * 2 + -2) != 0x75)) {\n                                        iVar8 = 10;\n                                        break;\n                                    }\n                                    var_38h = *(arg_2ch + var_20h * 2);\n                                    if (var_38h != var_14h) {\n                                        var_14h = 0x458b2d;\n                                        var_10h = var_38h;\n                                        var_34h = fcn.0049a2b4(var_38h);\n                                        var_14h = var_38h;\n                                    }\n                                    if (var_34h == NULL) {\n                                        var_10h = 0x35;\n                                        iVar8 = var_10h;\n                                        break;\n                                    }\n                                    *(arg_2ch + var_20h * 2) = var_34h - arg_2ch >> 1;\n                                }\n                            }\n                        }\n                        if (0x800 < var_9ch) {\n                            var_14h = 0x458b7b;\n                            var_10h = var_c8h;\n                            fcn.0040ab2b();\n                        }\n                        iVar11 = var_4h;\n                        var_c8h = NULL;\n                        if ((iVar8 == 0) && (*(puVar6 + 8) < *(puVar6 + 0x1e) || *(puVar6 + 8) == *(puVar6 + 0x1e))) {\n                            if ((var_ch & 0x20000) == 0) {\n                                var_10h = &fcn.0041b728::var_d8h;\n                                var_14h = 0x41bb28;\n                                fcn.0041d0dc(var_10h);\n                            }\n                            if (var_64h != 0) {\n                                var_10h = 0xffffffff;\n                                var_14h = 0x458b9f;\n                                iVar8 = fcn.0049a2b4(0xffffffff);\n                                while (iVar8 != 0) {\n                                    if (*(iVar8 + 2) == 0) {\n                                        uVar5 = *(iVar8 + -2);\n                                        var_10h = NULL;\n                                        uVar2 = *(iVar8 + -4 + uVar5 * 2);\n                                        *(iVar8 + -4 + uVar5 * 2) = 0;\n                                        var_14h = &fcn.0041b728::var_d8h;\n                                        var_18h = 0x1;\n                                        var_1ch = 0x458bdd;\n                                        iVar8 = fcn.0049a9c2(1, var_14h, 0);\n                                        iVar11 = var_4h;\n                                        *(var_14h + uVar5 * 2 + -4) = uVar2;\n                                        if (iVar8 < 0) {\n                                            if (iVar8 != -2) {\n                                                var_38h = ((iVar8 != -4) - 1 & 0x2d) + 0x19;\n                                            }\n                                            goto code_r0x00458b88;\n                                        }\n                                        if (var_90h < iVar8) {\n                                            var_90h = iVar8;\n                                        }\n                                        *(var_14h + 2) = iVar8;\n                                    }\n                                    var_10h = 0xffffffff;\n                                    var_14h = 0x458c0f;\n                                    iVar8 = fcn.0049a2b4(0xffffffff);\n                                    arg_2ch = var_28h;\n                                }\n                            }\n                            uVar5 = puVar6[2];\n                            if ((uVar5 & 0x10) != 0) goto code_r0x0041bb9f;\n                            var_10h = NULL;\n                            var_14h = &fcn.0041b728::var_d8h;\n                            var_18h = 0x41bb50;\n                            iVar8 = fcn.0041cfad(var_14h, 0);\n                            if (iVar8 != 0) {\n                                uVar5 = puVar6[2] | 0x10;\n                                puVar6[2] = uVar5;\n                                goto code_r0x0041bb9f;\n                            }\n                            if (var_8h < 0) {\n                                var_10h = NULL;\n                                var_14h = 0x41bb6e;\n                                uVar4 = fcn.0041b648(0);\n                                if (var_8h < 0) {\n                                    uVar5 = puVar6[2];\n                                    var_10h = NULL;\n                                    var_14h = NULL;\n                                    var_18h = &fcn.0041b728::var_d8h;\n                                    var_1ch = 0x41bb92;\n                                    iVar8 = fcn.0041b55d(var_18h, 0, 0);\n                                    if (iVar8 != 0) {\n                                        puVar6[3] = puVar6[3] | 0x100;\n                                    }\n                                    goto code_r0x0041bb9f;\n                                }\n                            }\n                            else {\n                                uVar4 = var_3ch;\n                            }\n                            *(puVar6 + 6) = uVar4;\n                            if ((var_8h & 1) != 0) {\n                                if (iVar11 == 0) {\n                                    if (uVar4 < 0x100) goto code_r0x00458ca5;\n                                }\n                                else {\n                                    if (uVar4 < 0x80) {\ncode_r0x00458ca5:\n                                        bVar12 = *(uVar4 + var_d4h) == uVar4;\n                                    }\n                                    else {\n                                        bVar12 = *(*((*((uVar4 >> 7) + 0x4bff60) * 0x80 + (uVar4 & 0x7f)) * 2 + 0x4b1c60\n                                                    ) * 8 + 0x4af414) == 0;\n                                    }\n                                    if (!bVar12) {\n                                        puVar6[3] = puVar6[3] | 0x20;\n                                    }\n                                }\n                            }\n                            puVar6[3] = puVar6[3] | 0x10;\n                            uVar5 = puVar6[2];\ncode_r0x0041bb9f:\n                            if ((-1 < var_24h) && (((uVar5 & 0x10) == 0 || ((var_24h & 2) != 0)))) {\n                                uVar4 = var_2ch;\n                                *(puVar6 + 0x1a) = uVar4;\n                                if ((var_24h & 1) != 0) {\n                                    if (var_4h == 0) {\n                                        if ((uVar4 < 0x100) && (*((var_2ch & 0xffff) + var_d4h) != uVar4)) {\n                                            puVar6[3] = puVar6[3] | 0x80;\n                                        }\n                                    }\n                                    else {\n                                        if (uVar4 < 0x80) {\n                                            bVar12 = *((var_2ch & 0xffff) + var_d4h) == uVar4;\n                                        }\n                                        else {\n                                            bVar12 = *(*((*(((var_2ch & 0xffff) >> 7) + 0x4bff60) * 0x80 +\n                                                         (var_2ch & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af414) == 0;\n                                        }\n                                        if (!bVar12) {\n                                            puVar6[3] = puVar6[3] | 0x80;\n                                        }\n                                    }\n                                }\n                                puVar6[3] = puVar6[3] | 0x40;\n                            }\n                            do {\n                                var_10h = NULL;\n                                var_14h = &fcn.0041b728::var_d8h;\n                                var_18h = var_4h;\n                                var_1ch = 0x41bbbf;\n                                iVar8 = fcn.0041cdaf(var_4h, var_14h, 0);\n                                if (iVar8 != 0) {\n                                    puVar6[3] = puVar6[3] | 0x8000;\n                                    return puVar6;\n                                }\n                                arg_2ch = arg_2ch + *(arg_2ch + 2) * 2;\n                            } while (*arg_2ch == 0x77);\n                            return puVar6;\n                        }\ncode_r0x00458b88:\n                        var_14h = 0x458b8e;\n                        var_10h = puVar6;\n                        fcn.0040ab2b();\n                    }\n                }\n                else {\n                    var_10h = 0x14;\n                }\n            }\n        }\n    }\n    else {\n        var_10h = 0x11;\n    }\n    *arg_10h = var_18h - var_10h >> 1;\ncode_r0x00458a17:\n    var_10h = 0x458a1e;\n    uVar7 = fcn.0049a9a2();\n    *arg_ch = uVar7;\n    return NULL;\n}\n",
        "token_count": 7401
    },
    "0041bc46": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041bc46(int16_t **arg_8h, int32_t *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, \n            int32_t *arg_20h, uint32_t *arg_24h, int32_t *arg_28h, uint32_t *arg_2ch, uint arg_30h, int32_t arg_34h, \n            int32_t *arg_38h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint32_t in_ECX;\n    uint32_t uVar6;\n    int16_t **in_EDX;\n    uint32_t uVar7;\n    int16_t *piVar8;\n    int32_t iStack112;\n    uint32_t uStack108;\n    int16_t *piStack104;\n    uint32_t uStack100;\n    uint32_t uStack96;\n    int32_t iStack92;\n    int16_t *piStack88;\n    uint32_t uStack84;\n    int32_t iStack80;\n    int16_t *piStack76;\n    int32_t iStack72;\n    uint32_t uStack68;\n    int16_t *piStack64;\n    uint32_t uStack60;\n    int32_t iStack56;\n    int16_t *piStack52;\n    uint32_t uStack48;\n    int16_t **ppiStack44;\n    uint32_t uStack40;\n    int32_t iStack36;\n    uint32_t uStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint16_t uStack20;\n    ushort uStack18;\n    uint uStack16;\n    int16_t *piStack12;\n    \n    piStack104 = *in_EDX;\n    piStack88 = *arg_8h;\n    piStack52 = NULL;\n    uStack48 = 0;\n    uStack100 = in_ECX;\n    piStack64 = piStack104;\n    ppiStack44 = in_EDX;\n    if ((*0x4d2618 != NULL) && (iVar4 = (**0x4d2618)(),  iVar4 != 0)) {\n        *arg_ch = 0x55;\n        return 0;\n    }\n    uStack16 = arg_30h;\n    iStack92 = 0;\n    iStack72 = 0;\n    iStack112 = arg_18h + 4;\n    uStack108 = 0xfffffffe;\n    uStack68 = 0xfffffffe;\n    iStack28 = *(arg_34h + 0x20) - *(arg_34h + 0x10) >> 1;\n    if (*piStack104 == 0x85) {\n        uStack20 = piStack104[2];\n        uStack48 = uStack20;\n        uStack24 = *(arg_34h + 0x24);\n        uStack18 = 0;\n        *(arg_34h + 0x24) = &uStack24;\n    }\n    piStack104[1] = 0;\n    iStack36 = arg_18h * 2 + 4;\n    uStack96 = *(arg_34h + 0x40);\n    piStack76 = piStack104 + arg_18h + 2;\n    uStack32 = -(arg_38h != NULL) & &iStack112;\n    uStack40 = uStack96;\n    piStack12 = piStack104;\n    do {\n        uVar7 = uStack96;\n        if (arg_14h != 0) {\n            *(arg_34h + 0x40) = uStack40;\n        }\n        if (arg_10h != 0) {\n            *piStack76 = 0x7c;\n            piStack52 = piStack76 + 1;\n            *piStack52 = 0;\n            iStack112 = iStack112 + 2;\n            piStack76 = piStack76 + 2;\n        }\n        iVar4 = fcn.0041bead(&piStack88, arg_ch, &iStack56, &uStack60, &iStack80, &uStack84, &uStack16, arg_1ch, arg_34h\n                             , uStack32);\n        piVar3 = piStack76;\n        if (iVar4 == 0) goto code_r0x00458ebf;\n        if (uVar7 <= *(arg_34h + 0x40) && *(arg_34h + 0x40) != uVar7) {\n            uStack96 = *(arg_34h + 0x40);\n        }\n        if (arg_38h == NULL) {\n            if (*piStack104 == 0x77) {\n                if (uStack68 < 0) {\ncode_r0x00458dbe:\n                    if ((-1 < uStack60) && (uStack84 < 0)) {\n                        iStack80 = iStack56;\n                        uStack84 = uStack60;\n                    }\n                }\n                else {\n                    if ((uStack68 != uStack60) || (iStack72 != iStack56)) {\n                        if (uStack108 < 0) {\n                            iStack92 = iStack72;\n                            uStack108 = uStack68;\n                        }\n                        uStack68 = 0xffffffff;\n                    }\n                    if (uStack68 < 0) goto code_r0x00458dbe;\n                }\n                if ((((uStack84 ^ uStack108) & 0xfffffffd) == 0) && (iStack92 == iStack80)) {\n                    uStack108 = uStack108 | uStack84;\n                    iStack92 = iStack80;\n                }\n                else {\n                    uStack108 = 0xffffffff;\n                }\n            }\n            else {\n                iStack72 = iStack56;\n                uStack68 = uStack60;\n                iStack92 = iStack80;\n                uStack108 = uStack84;\n            }\n            if (arg_10h != 0) {\n                *piStack76 = 0;\n                iVar4 = fcn.0049a9c2(0, arg_34h, 0);\n                if (iVar4 == -3) {\n                    *(arg_34h + 0x74) = 1;\n                }\n                else {\n                    if (iVar4 < 0) {\n                        if (iVar4 == -2) {\n                            iVar4 = 0x24;\n                        }\n                        else {\n                            iVar4 = ((iVar4 != -4) - 1 & 0x2d) + 0x19;\n                        }\n                        *arg_ch = iVar4;\ncode_r0x00458ebf:\n                        *arg_8h = piStack88;\n                        return 0;\n                    }\n                    if (*(arg_34h + 0x48) < iVar4) {\n                        *(arg_34h + 0x48) = iVar4;\n                    }\n                    *piStack52 = iVar4;\n                }\n            }\n        }\n        piVar2 = piStack88;\n        if (*piStack88 != 0x7c) {\n            if (arg_38h == NULL) {\n                uVar7 = piVar3 - piStack104 >> 1;\n                piVar8 = piStack104;\n                do {\n                    uVar6 = piVar8[1];\n                    piVar8[1] = uVar7;\n                    piVar8 = piVar8 + -uVar6;\n                    uVar7 = uVar6;\n                } while (uVar6 != 0);\n            }\n            *piVar3 = 0x78;\n            piVar3[1] = piVar3 - piStack64 >> 1;\n            piVar8 = piVar3 + 2;\n            if (uStack48 != 0) {\n                puVar5 = *(arg_34h + 0x24);\n                if (*(puVar5 + 6) != 0) {\n                    *piVar8 = 0;\n                    fcn.0049a59c(uStack100 >> 0xb & 1, arg_34h, iStack28);\n                    fcn.004226b0(piStack64 + 2, piStack64, piVar8 - piStack64 & 0xfffffffe);\n                    *piStack64 = 0x81;\n                    iVar1 = piVar3 + (8 - piStack64) >> 1;\n                    piStack64[1] = iVar1;\n                    piVar3[4] = 0x78;\n                    piVar3[5] = iVar1;\n                    piVar8 = piVar3 + 6;\n                    puVar5 = *(arg_34h + 0x24);\n                    iStack112 = iStack112 + 4;\n                }\n                *(arg_34h + 0x24) = *puVar5;\n            }\n            *(arg_34h + 0x40) = uStack96;\n            *arg_8h = piVar2;\n            *ppiStack44 = piVar8;\n            *arg_20h = iStack72;\n            *arg_24h = uStack68;\n            *arg_28h = iStack92;\n            *arg_2ch = uStack108;\n            if (arg_38h != NULL) {\n                if (0x7fffffeb - *arg_38h < iStack112) {\n                    *arg_ch = 0x14;\n                    return 0;\n                }\n                *arg_38h = iStack112 + *arg_38h;\n            }\n            return 1;\n        }\n        if (arg_38h == NULL) {\n            *piVar3 = 0x77;\n            piVar3[1] = piVar3 - piStack104 >> 1;\n            piStack76 = piVar3 + 2;\n            piStack104 = piVar3;\n            piStack12 = piVar3;\n        }\n        else {\n            iStack112 = iStack112 + 2;\n            piStack76 = *ppiStack44 + iStack36;\n        }\n        piStack88 = piStack88 + 1;\n    } while( true );\n}\n",
        "token_count": 2251
    },
    "0041bead": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nchar16_t * __cdecl\nfcn.0041bead(char16_t **arg_8h, int32_t *arg_ch, char16_t **arg_10h, uint32_t *arg_14h, char16_t **arg_18h, \n            uint32_t *arg_1ch, uint arg_20h, int32_t arg_24h, int32_t arg_28h, int32_t *arg_2ch)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int16_t iVar3;\n    char16_t *pcVar4;\n    char16_t cVar5;\n    char16_t cVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    char16_t **in_ECX;\n    uint32_t uVar9;\n    char16_t *pcVar10;\n    int32_t iVar11;\n    char16_t *pcVar12;\n    uint32_t *puVar13;\n    char16_t *pcVar14;\n    char16_t *pcVar15;\n    uint *puVar16;\n    uint8_t *puVar17;\n    char16_t **in_EDX;\n    int16_t *piVar18;\n    char16_t *pcVar19;\n    char16_t **ppcVar20;\n    uint16_t uVar21;\n    char32_t *pcVar22;\n    uint var_16ch;\n    uint var_160h;\n    uint var_155h;\n    uint var_140h;\n    char16_t **var_13ch;\n    uint var_138h;\n    uint32_t var_134h;\n    uint32_t var_130h;\n    uint var_12ch;\n    uint var_128h;\n    char16_t **var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint32_t var_10ch;\n    char16_t *var_fch;\n    char16_t *var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    char16_t *var_e4h;\n    uint var_e0h;\n    char16_t *var_c0h;\n    char16_t *var_bch;\n    char16_t *var_b8h;\n    uint var_b4h;\n    char16_t *var_b0h;\n    char16_t *var_ach;\n    char16_t *var_a8h;\n    char16_t *var_a4h;\n    uint32_t var_a0h;\n    uint32_t var_9ch;\n    uint var_98h;\n    uint32_t var_94h;\n    uint var_90h;\n    int32_t var_8ch;\n    char16_t *var_88h;\n    char16_t *var_84h;\n    char16_t *var_80h;\n    char16_t *var_7ch;\n    uint32_t var_78h;\n    char16_t *var_74h;\n    char16_t *var_70h;\n    char16_t *var_6ch;\n    uint32_t var_68h;\n    char16_t *var_64h;\n    char16_t *var_60h;\n    uint32_t var_5ch;\n    int32_t *var_58h;\n    uint32_t var_54h;\n    char16_t *var_50h;\n    char16_t *var_4ch;\n    char16_t *var_48h;\n    char16_t *var_44h;\n    char16_t *var_40h;\n    char16_t *var_3ch;\n    char16_t *var_38h;\n    uint32_t var_34h;\n    char16_t *var_30h;\n    char16_t *var_2ch;\n    char16_t *var_28h;\n    char16_t *var_24h;\n    char16_t *var_20h;\n    char16_t *var_1ch;\n    char16_t *var_18h;\n    char16_t *var_14h;\n    int32_t *var_10h;\n    char16_t *var_ch;\n    char16_t *var_8h;\n    char16_t *var_4h;\n    \n    var_2ch = *in_ECX;\n    pcVar14 = *arg_8h;\n    var_ch = 0x1;\n    var_5ch = var_2ch & 0x800;\n    var_78h = (var_2ch & 0x800) != 0;\n    var_f8h = var_2ch >> 9 & 1;\n    var_8h = *in_EDX;\n    var_fch = var_f8h ^ 1;\n    var_70h = 0xfffffffe;\n    var_68h = 0xfffffffe;\n    var_54h = 0xfffffffe;\n    var_34h = 0xfffffffe;\n    var_58h = arg_2ch;\n    var_4ch = NULL;\n    var_44h = NULL;\n    var_ach = NULL;\n    var_8ch = 0;\n    var_c0h = var_8h;\n    var_b0h = var_8h;\n    var_64h = NULL;\n    var_a4h = NULL;\n    var_4h = pcVar14;\n    var_50h = NULL;\n    var_28h = NULL;\n    var_88h = NULL;\n    var_40h = NULL;\n    var_84h = NULL;\n    var_7ch = NULL;\n    var_60h = NULL;\n    var_6ch = NULL;\n    var_94h = var_2ch & 1;\n    var_98h = 0xff;\n    var_110h = 0xfc00;\n    var_114h = 0xdc00;\n    var_12ch = 0x7b;\n    var_120h = 0x3a;\n    var_140h = 0x87;\n    var_90h = 0x30;\n    var_b4h = 0x39;\n    var_128h = 0x27;\n    var_118h = 0x1e;\n    var_11ch = 0x82;\n    var_138h = 0x5d;\n    pcVar19 = var_8h;\n    var_13ch = in_EDX;\n    var_124h = in_ECX;\ncode_r0x0041c15a:\n    pcVar12 = var_50h;\n    var_10h = *pcVar14;\n    if ((*pcVar14 == NULL) && (var_50h != NULL)) {\n        var_4h = var_50h;\n        var_50h = NULL;\n        var_10h = *pcVar12;\n        pcVar14 = pcVar12;\n    }\n    pcVar10 = var_10h;\n    pcVar12 = *(arg_28h + 0x10) + *(arg_28h + 0x3c) * 2;\n    if (arg_2ch != NULL) {\n        if (pcVar19 <= pcVar12 + -100) {\n            if (pcVar19 < var_c0h) {\n                var_8h = var_c0h;\n                pcVar19 = var_c0h;\n            }\n            pcVar12 = var_8h;\n            iVar11 = pcVar19 - var_c0h >> 1;\n            if (iVar11 <= 0x7fffffeb - *arg_2ch) {\n                *arg_2ch = *arg_2ch + iVar11;\n                if (var_28h == NULL) {\n                    var_8h = var_b0h;\n                }\n                else if (var_b0h < var_28h) {\n                    fcn.004226b0(var_b0h, var_28h, var_8h - var_28h & 0xfffffffe);\n                    iVar11 = var_28h - var_b0h;\n                    var_28h = var_b0h;\n                    var_8h = pcVar12 + -(iVar11 >> 1);\n                    pcVar14 = var_4h;\n                }\n                var_c0h = var_8h;\n                pcVar19 = var_8h;\n                goto code_r0x0041c20a;\n            }\n            goto code_r0x0045bfa4;\n        }\n        iVar11 = (-(pcVar19 < pcVar12) & 0x23) + 0x34;\n        goto code_r0x0045bea0;\n    }\n    if (*(arg_28h + 0x20) < pcVar12 || *(arg_28h + 0x20) == pcVar12) {\ncode_r0x0041c20a:\n        if (pcVar10 == NULL) {\ncode_r0x0041c22b:\n            var_30h = var_2ch & 8;\n            if ((var_2ch & 8) != NULL) goto code_r0x00458fee;\n            goto code_r0x0041c23a;\n        }\n        if ((pcVar10 != 0x5c) || (pcVar14[1] != L'E')) {\n            if (var_64h == NULL) {\n                if ((pcVar10 != 0x5c) || (pcVar14[1] != L'Q')) goto code_r0x0041c22b;\n                var_64h = var_ch;\n                goto code_r0x00458f79;\n            }\n            if (var_88h != NULL) {\n                if (arg_2ch == NULL) {\n                    var_88h[3] = (pcVar14 - *(arg_28h + 0x18) >> 1) - var_88h[2];\n                    pcVar14 = var_4h;\n                }\n                var_88h = NULL;\n            }\n            if ((var_2ch & 0x4000) != 0) {\n                *pcVar19 = L'v';\n                var_88h = pcVar19;\n                pcVar19[1] = L'\u00ff';\n                var_8h = pcVar19 + 4;\n                pcVar19[2] = pcVar14 - *(arg_28h + 0x18) >> 1;\n                pcVar19[3] = L'\\0';\n                pcVar14 = var_4h;\n            }\n            goto code_r0x0041c023;\n        }\n        var_64h = NULL;\ncode_r0x00458f79:\n        var_4h = pcVar14 + 1;\n        goto code_r0x0041c14f;\n    }\n    *arg_ch = 0x34;\n    var_4h = pcVar14;\n    goto code_r0x0045c057;\ncode_r0x00458fee:\n    var_3ch = pcVar14;\n    if (pcVar10 < 0x100) {\n        do {\n            if ((*(*(arg_28h + 0xc) + pcVar10) & 1) == 0) break;\n            pcVar14 = pcVar14 + 1;\n            var_4h = pcVar14;\n            pcVar10 = *pcVar14;\n        } while (pcVar10 < 0x100);\n        var_10h = pcVar10;\n    }\n    if (pcVar10 == 0x23) {\n        var_4h = pcVar14 + 1;\n        cVar5 = *var_4h;\n        pcVar14 = var_4h;\n        while (var_4h = pcVar14,  cVar5 != L'\\0') {\n            pcVar19 = *(arg_28h + 0x1c);\n            if (*(arg_28h + 0x84) == 0) {\n                pcVar12 = *(arg_28h + 0x88);\n                if (((pcVar14 <= pcVar19 + -pcVar12) && (cVar5 == *(arg_28h + 0x8c))) &&\n                   ((pcVar12 == var_ch || (pcVar14[1] == *(arg_28h + 0x8e))))) {\ncode_r0x0045906f:\n                    var_4h = pcVar14 + pcVar12;\n                    pcVar10 = var_10h;\n                    pcVar14 = var_4h;\n                    break;\n                }\n            }\n            else if (pcVar14 < pcVar19) {\n                iVar11 = fcn.00408665(pcVar19, arg_28h + 0x88, var_78h);\n                pcVar14 = var_4h;\n                if (iVar11 != 0) {\n                    pcVar12 = *(arg_28h + 0x88);\n                    goto code_r0x0045906f;\n                }\n            }\n            var_4h = pcVar14 + 1;\n            if ((var_5ch != 0) && ((pcVar14[1] & 0xfc00U) == 0xdc00)) {\n                var_4h = pcVar14 + 2;\n            }\n            pcVar14 = var_4h;\n            pcVar10 = var_10h;\n            cVar5 = *var_4h;\n        }\n    }\n    pcVar19 = var_8h;\n    if (var_3ch < pcVar14) goto code_r0x0041c15a;\ncode_r0x0041c23a:\n    pcVar19 = var_30h;\n    if (pcVar10 == 0x28) {\n        if ((pcVar14[1] == L'?') && (pcVar14[2] == L'#')) {\n            var_4h = pcVar14 + 3;\n            cVar5 = *var_4h;\n            if (cVar5 == L'\\0') goto code_r0x00459128;\n            do {\n                if (cVar5 == L')') break;\n                var_4h = var_4h + 1;\n                cVar5 = *var_4h;\n            } while (cVar5 != L'\\0');\n            pcVar19 = var_8h;\n            if (*var_4h == L'\\0') goto code_r0x00459128;\n            goto code_r0x0041c14f;\n        }\ncode_r0x0041c271:\n        pcVar15 = var_ach;\n        pcVar12 = NULL;\n        if ((var_88h != NULL) && ((var_50h == NULL && (var_ach = var_ach + -1,  pcVar15 < 1)))) {\n            if (arg_2ch == NULL) {\n                var_88h[3] = (pcVar14 - *(arg_28h + 0x18) >> 1) - var_88h[2];\n                pcVar14 = var_4h;\n            }\n            var_88h = NULL;\n        }\n    }\n    else {\n        pcVar12 = var_ch;\n        if ((((pcVar10 != 0x2a) && (pcVar10 != 0x2b)) && (pcVar10 != 0x3f)) &&\n           ((pcVar10 != 0x7b || (iVar11 = fcn.0049af93(),  pcVar12 = var_ch,  pcVar14 = var_4h,  iVar11 == 0))))\n        goto code_r0x0041c271;\n    }\n    if ((((var_2ch & 0x4000) != 0) && (pcVar12 == NULL)) && (var_50h == NULL)) {\n        var_88h = var_8h;\n        *var_8h = L'v';\n        var_8h[1] = L'\u00ff';\n        iVar11 = *(arg_28h + 0x18);\n        var_8h[3] = L'\\0';\n        var_8h[2] = pcVar14 - iVar11 >> 1;\n        var_8h = var_8h + 4;\n        pcVar14 = var_4h;\n    }\n    if (pcVar10 < 0x40) {\n        if (pcVar10 == 0x3f) {\n            pcVar12 = NULL;\n            var_44h = var_ch;\ncode_r0x0041c82c:\n            var_4ch = pcVar12;\ncode_r0x0041c835:\n            if (var_28h == NULL) {\n                iVar11 = 9;\n                var_4h = pcVar14;\ncode_r0x0045bf6f:\n                *arg_ch = iVar11;\n                goto code_r0x0045c057;\n            }\n            if (var_4ch == NULL) {\n                var_6ch = var_7ch;\n                var_34h = var_68h;\n                var_60h = var_84h;\n                var_54h = var_70h;\n            }\n            var_48h = var_28h;\n            var_1ch = NULL;\n            var_80h = -(var_4ch != var_44h) & 2;\n            if (pcVar19 != NULL) {\n                pcVar14 = pcVar14 + 1;\ncode_r0x00459dbb:\n                cVar5 = *pcVar14;\n                if (cVar5 < 0x100) {\n                    do {\n                        if ((*(cVar5 + *(arg_28h + 0xc)) & var_ch) == 0) break;\n                        pcVar14 = pcVar14 + 1;\n                        cVar5 = *pcVar14;\n                    } while (cVar5 <= var_98h);\n                }\n                if (cVar5 == L'#') {\n                    cVar5 = pcVar14[1];\n                    pcVar14 = pcVar14 + 1;\n                    while (cVar5 != L'\\0') {\n                        pcVar19 = *(arg_28h + 0x1c);\n                        if (*(arg_28h + 0x84) == 0) {\n                            pcVar12 = *(arg_28h + 0x88);\n                            if (((pcVar14 <= pcVar19 + -pcVar12) && (cVar5 == *(arg_28h + 0x8c))) &&\n                               ((pcVar12 == var_ch || (pcVar14[1] == *(arg_28h + 0x8e))))) {\ncode_r0x00459e3d:\n                                pcVar14 = pcVar14 + pcVar12;\n                                break;\n                            }\n                        }\n                        else if (pcVar14 < pcVar19) {\n                            iVar11 = fcn.00408665(pcVar19, arg_28h + 0x88, var_78h);\n                            if (iVar11 != 0) {\n                                pcVar12 = *(arg_28h + 0x88);\n                                goto code_r0x00459e3d;\n                            }\n                        }\n                        pcVar19 = pcVar14 + 1;\n                        if ((var_5ch != 0) && ((*pcVar19 & 0xfc00U) == 0xdc00)) {\n                            pcVar19 = pcVar14 + 2;\n                        }\n                        pcVar14 = pcVar19;\n                        cVar5 = *pcVar19;\n                    }\n                    goto code_r0x00459dbb;\n                }\n                pcVar14 = pcVar14 + -1;\n                var_4h = pcVar14;\n            }\n            pcVar19 = NULL;\n            if (((pcVar14[1] == L'(') && (pcVar14[2] == L'?')) && (pcVar14[3] == L'#')) {\n                var_4h = pcVar14 + 4;\n                cVar5 = *var_4h;\n                if (cVar5 == L'\\0') {\ncode_r0x00459128:\n                    *arg_ch = 0x12;\n                    goto code_r0x0045c057;\n                }\n                do {\n                    if (cVar5 == L')') break;\n                    var_4h = var_4h + 1;\n                    cVar5 = *var_4h;\n                } while (cVar5 != L'\\0');\n                pcVar14 = var_4h;\n                if (*var_4h == L'\\0') goto code_r0x00459128;\n            }\n            pcVar12 = pcVar14 + 1;\n            pcVar10 = pcVar12;\n            if (*pcVar12 == L'+') {\n                var_1ch = var_ch;\n            }\n            else {\n                pcVar19 = var_fch;\n                if (*pcVar12 != L'?') {\n                    pcVar19 = var_f8h;\n                    pcVar12 = pcVar14;\n                    pcVar10 = var_4h;\n                }\n            }\n            var_4h = pcVar10;\n            var_24h = pcVar19;\n            if (*var_28h == L'u') {\n                fcn.004226b0(var_28h + 2, var_28h, 4);\n                var_8h = var_8h + 4;\n                *var_28h = L'\\x81';\n                var_28h[1] = L'\\x04';\n                var_28h[4] = L'x';\n                var_28h[5] = L'\\x04';\n                var_8ch = 6;\n                pcVar12 = var_4h;\n                if (((arg_2ch == NULL) && (uVar9 = *(arg_28h + 0x20),  *(arg_28h + 0x10) + 2U <= uVar9)) &&\n                   (*(uVar9 - 2) == var_28h + (2 - *(arg_28h + 0x14)) >> 1)) {\n                    *(uVar9 - 2) = *(uVar9 - 2) + 2;\n                }\n            }\n            pcVar14 = var_28h;\n            cVar5 = *var_28h;\n            pcVar10 = cVar5;\n            if (((cVar5 == L'\\x1d') || (cVar5 == L'\\x1e')) || ((cVar5 == L'\\x1f' || (cVar5 == L' ')))) {\n                if (pcVar10 == 0x1e) {\n                    iVar11 = 0xd;\n                }\n                else if (pcVar10 == 0x1f) {\n                    iVar11 = 0x1a;\n                }\n                else if (pcVar10 == 0x20) {\n                    iVar11 = 0x27;\n                }\n                else {\n                    iVar11 = 0;\n                }\n                if (var_5ch != 0) {\n                    if ((var_8h[-1] & var_110h) == var_114h) {\n                        uVar9 = var_8h - (var_8h + -2) >> 1;\n                        fcn.00420db0(&var_16ch, var_8h + -2, uVar9 * 2);\n                        var_18h = uVar9 | 0x10000000;\n                        cVar5 = *var_28h;\n                        pcVar12 = var_4h;\n                        goto code_r0x0041c911;\n                    }\n                }\n                var_18h = var_8h[-1];\n                if ((cVar5 <= var_118h) && (1 < var_4ch)) {\n                    var_60h = var_8h[-1];\n                    var_54h = *(arg_28h + 0x68) | var_94h;\n                }\ncode_r0x0041c911:\n                pcVar19 = var_8h;\n                pcVar14 = var_18h;\n                if ((cVar5 == L'\\x10') || (cVar5 == L'\\x0f')) {\n                    var_14h = var_28h[1];\n                    var_10h = var_28h[2];\n                }\n                else {\n                    var_10h = 0xffffffff;\n                    var_14h = 0xffffffff;\n                }\n                pcVar10 = var_28h + 1;\n                var_8h = var_28h;\n                if (var_44h != NULL) {\n                    var_30h = var_24h + iVar11;\n                    cVar5 = var_18h;\n                    iVar3 = var_24h + iVar11;\n                    pcVar15 = var_28h;\n                    if (var_4ch == NULL) {\n                        if (var_44h == 0xffffffff) {\n                            cVar6 = iVar3 + L'!';\ncode_r0x0041c968:\n                            *pcVar15 = cVar6;\n                        }\n                        else {\n                            pcVar19 = var_28h;\n                            if (var_44h == var_ch) {\ncode_r0x0045a850:\n                                *pcVar19 = iVar3 + L'%';\n                            }\n                            else {\ncode_r0x0045a71e:\n                                *pcVar19 = iVar3 + L'\\'';\n                                *pcVar10 = var_44h;\n                                pcVar10 = pcVar10 + 1;\n                            }\n                        }\n                    }\n                    else {\n                        if (var_4ch == 0x1) {\n                            if (var_44h == 0xffffffff) {\n                                cVar6 = iVar3 + L'#';\n                            }\n                            else {\n                                var_8h = pcVar19;\n                                if (var_44h == var_ch) goto code_r0x0041c9a6;\n                                *pcVar19 = iVar3 + L'\\'';\n                                pcVar15 = pcVar19 + 1;\n                                cVar6 = var_44h + L'\\xffff';\n                            }\n                            pcVar10 = pcVar15 + 1;\n                            goto code_r0x0041c968;\n                        }\n                        *var_28h = iVar11 + L')';\n                        var_28h[1] = var_4ch;\n                        iVar11 = 2;\n                        pcVar10 = var_28h + 2;\n                        if (var_44h < 0) {\n                            if ((var_5ch == 0) || ((var_18h & 0x10000000) == 0)) {\n                                *pcVar10 = cVar5;\n                                pcVar10 = var_28h + 3;\n                                if (-1 < var_14h) {\n                                    *pcVar10 = var_14h;\n                                    var_28h[4] = var_10h;\n                                    pcVar10 = var_28h + 5;\n                                }\n                            }\n                            else {\n                                uVar9 = var_18h & 7;\n                                fcn.00420db0(pcVar10, &var_16ch, uVar9 * 2);\n                                pcVar10 = pcVar10 + uVar9;\n                            }\n                            *pcVar10 = var_30h + L'!';\n                            pcVar10 = pcVar10 + 1;\n                        }\n                        else if (var_44h != var_4ch) {\n                            if ((var_5ch == 0) || ((var_18h & 0x10000000) == 0)) {\n                                *pcVar10 = cVar5;\n                            }\n                            else {\n                                iVar11 = (var_18h & 7) * 2;\n                                fcn.00420db0(pcVar10, &var_16ch, iVar11);\n                            }\n                            pcVar19 = iVar11 + pcVar10;\n                            if (-1 < var_14h) {\n                                *pcVar19 = var_14h;\n                                pcVar19[1] = var_10h;\n                                pcVar19 = pcVar19 + 2;\n                            }\n                            pcVar10 = pcVar19 + 1;\n                            var_44h = var_44h - var_4ch;\n                            iVar3 = var_30h;\n                            if (var_44h != 0x1) goto code_r0x0045a71e;\n                            goto code_r0x0045a850;\n                        }\n                    }\n                    pcVar19 = var_14h;\n                    iVar11 = 2;\n                    if ((var_5ch == 0) || ((pcVar14 & 0x10000000) == 0)) {\n                        *pcVar10 = cVar5;\n                    }\n                    else {\n                        iVar11 = (pcVar14 & 7) * 2;\n                        fcn.00420db0(pcVar10, &var_16ch, iVar11);\n                    }\n                    var_8h = iVar11 + pcVar10;\n                    pcVar12 = var_4h;\n                    if (-1 < pcVar19) {\n                        *var_8h = pcVar19;\n                        var_8h = var_8h + 1;\n                        pcVar19 = var_10h;\n                        goto code_r0x0045a62d;\n                    }\n                    goto code_r0x0041c99c;\n                }\n            }\n            else {\n                if (pcVar10 < 0x17) {\n                    iVar11 = 0x34;\n                    var_18h = pcVar10;\n                    goto code_r0x0041c911;\n                }\n                if ((((((cVar5 == L'n') || (cVar5 == L'o')) || (cVar5 == L'p')) ||\n                     ((cVar5 == L'q' || (pcVar10 == 0x72)))) || (cVar5 == L's')) || (pcVar10 == 0x74)) {\n                    if (var_44h == NULL) {\n                        var_8h = var_28h;\n                        goto code_r0x0041c9a6;\n                    }\n                    if (var_4ch == NULL) {\n                        if (var_44h == 0xffffffff) {\n                            pcVar19 = pcVar19 + 0x31;\n                        }\n                        else {\n                            if (var_44h != var_ch) goto code_r0x0045a5fd;\n                            pcVar19 = pcVar19 + 0x33;\n                        }\n                    }\n                    else if ((var_4ch == var_ch) && (var_44h == 0xffffffff)) {\n                        pcVar19 = pcVar19 + 0x32;\n                    }\n                    else {\ncode_r0x0045a5fd:\n                        *var_8h = pcVar19 + L'h';\n                        var_8h[1] = var_4ch;\n                        var_8h = var_8h + 2;\n                        pcVar19 = -(var_44h != 0xffffffff) & var_44h;\n                        var_44h = pcVar19;\n                    }\ncode_r0x0045a62d:\n                    *var_8h = pcVar19;\n                    var_8h = var_8h + 1;\n                    pcVar12 = var_4h;\n                }\n                else {\n                    if (10 < cVar5 + L'\uff83') {\n                        if (cVar5 != L'\\x9d') {\n                            *arg_ch = 0xb;\n                            var_4h = pcVar12;\n                            goto code_r0x0045c057;\n                        }\n                        goto code_r0x0041c9a6;\n                    }\n                    uVar9 = var_8h - var_28h;\n                    var_10h = var_40h;\n                    pcVar19 = uVar9 >> 1;\n                    var_14h = NULL;\n                    var_3ch = NULL;\n                    var_38h = pcVar19;\n                    if ((cVar5 == L'\\x87') && (var_28h[2] == L'\\x91')) goto code_r0x0041c9a6;\n                    if (cVar5 < 0x81) {\n                        if (0 < var_4ch) goto code_r0x0041c9a6;\n                        if ((var_44h < 0) || (1 < var_44h)) {\n                            var_44h = var_ch;\n                        }\n                    }\n                    if (var_4ch == NULL) {\n                        pcVar12 = var_28h + 1;\n                        *var_8h = L'\\0';\n                        if (var_ch < var_44h) {\n                            fcn.0049a59c(var_78h, arg_28h, var_40h);\n                            pcVar10 = var_28h;\n                            fcn.004226b0(var_28h + 3, var_28h, uVar9 & 0xfffffffe);\n                            var_8h = var_8h + 3;\n                            *pcVar10 = var_24h + L'\\x92';\n                            *pcVar12 = L'\\x83';\n                            var_28h = pcVar14 + 3;\n                            var_14h = pcVar14 + 2;\n                            pcVar14[2] = L'\\0';\n                        }\n                        else {\n                            fcn.0049a59c(var_78h, arg_28h, var_40h);\n                            fcn.004226b0(pcVar12, pcVar14, pcVar19 * 2);\n                            var_8h = var_8h + 1;\n                            if (var_44h == NULL) {\n                                *pcVar14 = L'\u00a1';\n                                pcVar12 = var_4h;\n                                goto code_r0x0041c9a6;\n                            }\n                            var_3ch = pcVar14;\n                            *pcVar14 = var_24h + L'\\x92';\n                            var_28h = pcVar12;\n                        }\n                        var_44h = var_44h + -1;\n                        pcVar12 = var_4h;\ncode_r0x0045a25d:\n                    }\n                    else {\n                        if (var_ch < var_4ch) {\n                            if (arg_2ch == NULL) {\n                                if ((var_a4h != NULL) && (var_54h < 0)) {\n                                    var_60h = var_6ch;\n                                    var_54h = var_34h;\n                                }\n                                var_30h = var_ch;\n                                if (var_ch < var_4ch) {\n                                    pcVar19 = pcVar19 * 2;\n                                    iVar11 = *(arg_28h + 0x10);\n                                    pcVar14 = var_ch;\n                                    var_18h = pcVar19;\n                                    do {\n                                        pcVar10 = *(arg_28h + 0x20) - iVar11 >> 1;\n                                        var_30h = pcVar14;\n                                        fcn.00420db0(var_8h, var_28h, pcVar19);\n                                        while (iVar11 = *(arg_28h + 0x10), \n                                              uVar9 = iVar11 + (var_10h + *(arg_28h + 0x3c) + (-100 - pcVar10)) * 2, \n                                              uVar9 <= *(arg_28h + 0x20) && *(arg_28h + 0x20) != uVar9) {\n                                            iVar11 = fcn.0049a928();\n                                            *arg_ch = iVar11;\n                                            if (iVar11 != 0) goto code_r0x0045c057;\n                                        }\n                                        piVar18 = iVar11 + var_10h * 2;\n                                        if (piVar18 < iVar11 + pcVar10 * 2) {\n                                            do {\n                                                **(arg_28h + 0x20) = *piVar18 + var_38h;\n                                                *(arg_28h + 0x20) = *(arg_28h + 0x20) + 2;\n                                                piVar18 = piVar18 + 1;\n                                                iVar11 = *(arg_28h + 0x10);\n                                                pcVar14 = var_30h;\n                                                pcVar19 = var_18h;\n                                            } while (piVar18 < iVar11 + pcVar10 * 2);\n                                        }\n                                        pcVar14 = pcVar14 + 1;\n                                        var_8h = var_8h + pcVar19;\n                                        var_30h = pcVar14;\n                                        pcVar12 = var_4h;\n                                        var_10h = pcVar10;\n                                    } while (pcVar14 < var_4ch);\n                                }\n                            }\n                            else {\n                                iVar2 = (var_4ch + -1) * var_8ch;\n                                iVar11 = (var_4ch + -1) * var_8ch;\n                                pcVar14 = pcVar12;\n                                if ((0 < iVar2 >> 0x20) ||\n                                   (((-1 < iVar2 && (0x7fffffff < iVar2)) || (0x7fffffeb - *arg_2ch < iVar11))))\n                                goto code_r0x0045bfa4;\n                                *arg_2ch = *arg_2ch + iVar11;\n                            }\n                        }\n                        pcVar19 = var_38h;\n                        if (0 < var_44h) {\n                            var_44h = var_44h - var_4ch;\n                            goto code_r0x0045a25d;\n                        }\n                    }\n                    if (var_44h < 0) {\n                        pcVar14 = var_8h + -2;\n                        pcVar19 = pcVar14 + -var_8h[-1];\n                        cVar5 = *pcVar19;\n                        if (((cVar5 == L'\\x81') || (cVar5 == var_11ch)) && (var_1ch != NULL)) {\n                            cVar5 = L'\\x83';\n                            *pcVar19 = L'\\x83';\n                        }\n                        if ((cVar5 == L'\\x81') || (cVar5 == L'\\x82')) {\n                            *pcVar14 = var_24h + L'y';\n                            pcVar12 = var_4h;\n                        }\n                        else {\n                            pcVar12 = pcVar19;\n                            if (arg_2ch == NULL) {\n                                do {\n                                    iVar11 = fcn.0041cdaf(var_78h, arg_28h, 0);\n                                    if (iVar11 != 0) {\n                                        *pcVar19 = *pcVar19 + L'\\x05';\n                                        break;\n                                    }\n                                    pcVar12 = pcVar12 + pcVar12[1];\n                                } while (*pcVar12 == L'w');\n                            }\n                            cVar5 = *pcVar19;\n                            if (cVar5 == L'\\x87') {\n                                pcVar14 = var_8h + -2;\n                                cVar5 = L'\\x87';\n                                if (pcVar19[pcVar19[1]] != L'w') {\n                                    *pcVar19 = L'\\x8c';\n                                    cVar5 = L'\\x8c';\n                                }\n                            }\n                            if (var_1ch == NULL) {\n                                *pcVar14 = var_24h + L'y';\n                                pcVar12 = var_4h;\n                                goto code_r0x0041c9a6;\n                            }\n                            if ((cVar5 == L'\\x87') || (cVar5 == L'\\x8c')) {\n                                *var_8h = L'\\0';\n                                iVar11 = var_8h - pcVar19 >> 1;\n                                fcn.0049a59c(var_78h, arg_28h, var_40h);\n                                fcn.004226b0(pcVar19 + 2, pcVar19, iVar11 * 2);\n                                *pcVar19 = ((*pcVar19 == var_140h) - 1 & 5) + L'\\x84';\n                                var_8h[2] = L'{';\n                                cVar5 = iVar11 + L'\\x02';\n                                var_8h[3] = cVar5;\n                                var_8h = var_8h + 4;\n                                pcVar19[1] = cVar5;\n                            }\n                            else {\n                                *pcVar19 = cVar5 + L'\\x01';\n                                *pcVar14 = L'{';\n                            }\n                            if (var_3ch != NULL) {\n                                *var_3ch = L'\\x94';\n                            }\n                            pcVar12 = var_4h;\n                            if (var_4ch < 2) {\n                                var_1ch = NULL;\n                            }\n                        }\n                    }\n                    else {\n                        if ((arg_2ch == NULL) || (var_44h < 1)) {\n                            var_3ch = var_44h + -1;\n                            if (-1 < var_3ch) {\n                                var_30h = var_24h + 0x49;\n                                uVar9 = *(arg_28h + 0x20);\n                                iVar11 = *(arg_28h + 0x10);\n                                do {\n                                    pcVar14 = uVar9 - iVar11 >> 1;\n                                    *var_8h = var_30h;\n                                    pcVar12 = var_8h + 1;\n                                    if (var_3ch != NULL) {\n                                        *pcVar12 = L'\\x83';\n                                        pcVar10 = var_8h + 2;\n                                        if (var_14h == NULL) {\n                                            cVar5 = L'\\0';\n                                        }\n                                        else {\n                                            cVar5 = pcVar10 - var_14h >> 1;\n                                        }\n                                        *pcVar10 = cVar5;\n                                        pcVar12 = var_8h + 3;\n                                        var_14h = pcVar10;\n                                    }\n                                    var_8h = pcVar12;\n                                    fcn.00420db0(pcVar12, var_28h, pcVar19 * 2);\n                                    pcVar19 = var_10h;\n                                    while( true ) {\n                                        iVar11 = *(arg_28h + 0x10);\n                                        uVar9 = *(arg_28h + 0x20);\n                                        if (uVar9 <= iVar11 + (pcVar19 + *(arg_28h + 0x3c) + (-100 - pcVar14)) * 2)\n                                        break;\n                                        iVar11 = fcn.0049a928();\n                                        *arg_ch = iVar11;\n                                        if (iVar11 != 0) goto code_r0x0045c057;\n                                    }\n                                    piVar18 = iVar11 + pcVar19 * 2;\n                                    if (piVar18 < iVar11 + pcVar14 * 2) {\n                                        do {\n                                            **(arg_28h + 0x20) = *piVar18 + (var_3ch != NULL) * 2 + 1 + var_38h;\n                                            uVar9 = *(arg_28h + 0x20) + 2;\n                                            *(arg_28h + 0x20) = uVar9;\n                                            iVar11 = *(arg_28h + 0x10);\n                                            piVar18 = piVar18 + 1;\n                                        } while (piVar18 < iVar11 + pcVar14 * 2);\n                                    }\n                                    var_8h = var_8h + var_38h;\n                                    var_3ch = var_3ch + -1;\n                                    pcVar12 = var_4h;\n                                    var_10h = pcVar14;\n                                    pcVar19 = var_38h;\n                                } while (-1 < var_3ch);\n                            }\n                        }\n                        else {\n                            iVar2 = (var_8ch + 5) * var_44h;\n                            iVar11 = (var_8ch + 5) * var_44h + -4;\n                            pcVar14 = pcVar12;\n                            if ((0 < iVar2 >> 0x20) ||\n                               (((-1 < iVar2 && (0x7fffffff < iVar2)) || (0x7fffffeb - *arg_2ch < iVar11))))\n                            goto code_r0x0045bfa4;\n                            *arg_2ch = *arg_2ch + iVar11;\n                        }\n                        pcVar14 = var_14h;\n                        if (var_14h != NULL) {\n                            do {\n                                iVar11 = (var_8h - pcVar14 >> 1) + 1;\n                                pcVar19 = var_8h[1 - iVar11];\n                                if (pcVar19 != NULL) {\n                                    pcVar19 = pcVar14 + -pcVar19;\n                                }\n                                *var_8h = L'x';\n                                var_8h[1] = iVar11;\n                                pcVar12 = var_8h + 2;\n                                var_8h[1 - iVar11] = iVar11;\n                                pcVar14 = pcVar19;\n                                var_8h = pcVar12;\n                            } while (pcVar19 != NULL);\n                            pcVar12 = var_4h;\n                        }\n                    }\n                }\ncode_r0x0041c99c:\n                if (var_1ch != NULL) {\n                    uVar9 = *var_48h;\n                    if (uVar9 < 0x51) {\n                        if ((uVar9 == 0x50) ||\n                           ((0x1c < uVar9 &&\n                            (((uVar9 < 0x21 || (uVar9 == 0x29)) || ((uVar9 == 0x36 || (uVar9 == 0x43)))))))) {\n                            var_48h = var_48h + *(uVar9 + 0x4c2160);\n                            if ((var_5ch != 0) && ((var_48h[-1] & 0xfc00U) == 0xd800)) {\n                                var_48h = var_48h + 1;\ncode_r0x0045a8ed:\n                            }\n                        }\n                    }\n                    else if (uVar9 == 0x5d) {\n                        if ((var_48h[2] == L'\\x10') || (var_48h[2] == L'\\x0f')) {\n                            iVar11 = 10;\n                        }\n                        else {\n                            iVar11 = 6;\n                        }\n                        var_48h = var_48h + iVar11;\n                    }\n                    else if (0x6d < uVar9) {\n                        if (uVar9 < 0x70) {\n                            var_48h = var_48h + 0x11;\n                        }\n                        else if (*var_48h == L'p') {\n                            var_48h = var_48h + var_48h[1];\n                            goto code_r0x0045a8ed;\n                        }\n                    }\n                    uVar9 = var_8h - var_48h;\n                    iVar11 = uVar9 >> 1;\n                    if (0 < iVar11) {\n                        if ((*var_48h < 0x76) && (uVar1 = *(*var_48h + 0x4c4c30),  uVar1 != 0)) {\n                            *var_48h = uVar1;\n                            pcVar12 = var_4h;\n                        }\n                        else {\n                            *var_8h = L'\\0';\n                            fcn.0049a59c(var_78h, arg_28h, var_40h);\n                            fcn.004226b0(var_48h + 2, var_48h, uVar9 & 0xfffffffe);\n                            *var_48h = L'\\x81';\n                            cVar5 = iVar11 + L'\\x02';\n                            var_8h[2] = L'x';\n                            var_8h[3] = cVar5;\n                            var_8h = var_8h + 4;\n                            var_48h[1] = cVar5;\n                            pcVar12 = var_4h;\n                        }\n                    }\n                }\n            }\ncode_r0x0041c9a6:\n            var_28h = NULL;\n            *(arg_28h + 0x68) = *(arg_28h + 0x68) | var_80h;\n            pcVar19 = var_8h;\n            var_4h = pcVar12;\n            goto code_r0x0041c14f;\n        }\n        if (pcVar10 == NULL) {\ncode_r0x0041c346:\n            *arg_10h = var_6ch;\n            *arg_14h = var_34h;\n            *arg_18h = var_60h;\n            *arg_1ch = var_54h;\n            *var_13ch = var_8h;\n            *arg_8h = pcVar14;\n            if (arg_2ch == NULL) {\n                return var_ch;\n            }\n            iVar11 = var_8h - var_c0h >> 1;\n            if (iVar11 <= 0x7fffffeb - *arg_2ch) {\n                *arg_2ch = *arg_2ch + iVar11;\n                return var_ch;\n            }\n            goto code_r0x0045bfa4;\n        }\n        if (pcVar10 == 0x24) {\n            var_28h = NULL;\n            cVar5 = ((var_2ch & 2) != 0) + L'\\x19';\ncode_r0x0041c328:\n            *var_8h = cVar5;\n            iVar11 = 2;\n            goto code_r0x0041c32d;\n        }\n        if (pcVar10 != 0x28) {\n            if (pcVar10 == 0x29) goto code_r0x0041c346;\n            pcVar12 = NULL;\n            if ((pcVar10 == 0x2a) || (pcVar12 = var_ch,  pcVar10 == 0x2b)) {\n                var_44h = 0xffffffff;\n                goto code_r0x0041c82c;\n            }\n            if (pcVar10 != 0x2e) goto code_r0x0041c023;\n            if (var_34h == 0xfffffffe) {\n                var_34h = 0xffffffff;\n            }\n            var_7ch = var_6ch;\n            var_70h = var_54h;\n            var_40h = *(arg_28h + 0x20) - *(arg_28h + 0x10) >> 1;\n            var_68h = var_34h;\n            cVar5 = var_2ch >> 2 & var_ch | 0xc;\n            var_84h = var_60h;\n            var_28h = var_8h;\n            goto code_r0x0041c328;\n        }\n        var_4h = pcVar14 + 1;\n        if (*var_4h == L'*') {\n            cVar5 = pcVar14[2];\n            if ((cVar5 == L':') || ((cVar5 < 0x100 && ((*(cVar5 + *(arg_28h + 0xc)) & 2) != 0)))) {\n                var_38h = pcVar14 + 2;\n                var_3ch = 0x4c4f30;\n                var_14h = NULL;\n                var_28h = NULL;\n                cVar5 = *var_38h;\n                var_4h = var_38h;\n                if (cVar5 < 0x100) {\n                    do {\n                        if ((*(cVar5 + *(arg_28h + 0xc)) & 2) == 0) break;\n                        var_4h = var_4h + 1;\n                        cVar5 = *var_4h;\n                    } while (cVar5 <= var_98h);\n                }\n                uVar9 = 0;\n                pcVar14 = var_4h - var_38h >> 1;\n                var_30h = pcVar14;\n                if (*var_4h == L':') {\n                    var_14h = var_4h + 1;\n                    cVar5 = *var_14h;\n                    var_4h = var_14h;\n                    while ((cVar5 != L'\\0' && (cVar5 != L')'))) {\n                        var_4h = var_4h + 1;\n                        cVar5 = *var_4h;\n                    }\n                    uVar9 = var_4h - var_14h >> 1;\n                    if (0xffff < uVar9) {\n                        *arg_ch = 0x4b;\n                        goto code_r0x0045c057;\n                    }\n                }\n                if (*var_4h == L')') {\n                    ppcVar20 = 0x4c4e10;\n                    var_10h = NULL;\ncode_r0x004592eb:\n                    if ((pcVar14 != *ppcVar20) || (iVar11 = fcn.0041cd85(pcVar14),  iVar11 != 0)) goto code_r0x00459301;\n                    iVar8 = var_10h * 0xc;\n                    iVar11 = *(iVar8 + 0x4c4e14);\n                    pcVar14 = var_8h;\n                    if (iVar11 == 0x9e) {\n                        if (uVar9 != 0) goto code_r0x0045bec6;\n                        puVar16 = *(arg_28h + 0x24);\n                        *(arg_28h + 0x6c) = var_ch;\n                        for (; puVar16 != NULL; puVar16 = *puVar16) {\n                            if (arg_2ch == NULL) {\n                                *pcVar14 = L'\\xa0';\n                                pcVar14[1] = *(puVar16 + 1);\n                                var_8h = pcVar14 + 2;\n                            }\n                            else {\n                                *arg_2ch = *arg_2ch + 3;\n                                var_8h = pcVar14;\n                            }\n                            pcVar14 = var_8h;\n                        }\n                        cVar5 = (0 < *(arg_28h + 0x5c)) + L'\\x9e';\n                        *pcVar14 = cVar5;\n                        if (var_34h == 0xfffffffe) {\n                            var_34h = 0xffffffff;\n                        }\n                    }\n                    else {\n                        if (uVar9 == 0) {\n                            if (-1 < iVar11) {\n                                cVar5 = iVar11;\n                                *var_8h = cVar5;\n                                goto code_r0x00459414;\n                            }\n                            *arg_ch = 0x42;\n                            goto code_r0x0045c057;\n                        }\n                        if (*(iVar8 + 0x4c4e18) < 0) {\ncode_r0x0045bec6:\n                            *arg_ch = 0x3b;\n                            goto code_r0x0045c057;\n                        }\n                        cVar5 = *(iVar8 + 0x4c4e18);\n                        *var_8h = cVar5;\n                        pcVar14 = var_8h + 2;\n                        if (arg_2ch == NULL) {\n                            var_8h[1] = uVar9;\n                            var_8h = pcVar14;\n                            fcn.00420db0(pcVar14, var_14h, uVar9 * 2);\n                            pcVar14 = pcVar14 + uVar9;\n                        }\n                        else {\n                            *arg_2ch = *arg_2ch + uVar9;\n                            var_8h[1] = L'\\0';\n                        }\n                        *pcVar14 = L'\\0';\n                    }\ncode_r0x00459414:\n                    var_8h = pcVar14 + 1;\n                    if (0x95 < cVar5) {\n                        if (cVar5 < 0x9a) {\n                            *(arg_28h + 0x70) = var_ch;\n                        }\n                        else if (cVar5 < 0x9c) {\n                            *(arg_28h + 100) = *(arg_28h + 100) | 0x1000;\n                        }\n                    }\ncode_r0x00459450:\n                    pcVar19 = var_8h;\n                    if (8 < var_10h) goto code_r0x0045945f;\n                    goto code_r0x0041c14f;\n                }\ncode_r0x0045945f:\n                iVar11 = 0x3c;\ncode_r0x0045c028:\n                *arg_ch = iVar11;\ncode_r0x0045c057:\n                *arg_8h = var_4h;\n                return NULL;\n            }\n        }\n        var_24h = 0x85;\n        var_3ch = var_2ch;\n        var_18h = NULL;\n        var_40h = *(arg_28h + 0x20) - *(arg_28h + 0x10) >> 1;\n        var_30h = NULL;\n        if (*var_4h == L'?') {\n            pcVar12 = pcVar14 + 2;\n            pcVar10 = *pcVar12;\n            pcVar19 = pcVar12;\n            if (pcVar10 < 0x3b) {\n                if (pcVar10 == 0x3a) {\ncode_r0x004599fd:\n                    var_24h = 0x83;\n                    goto code_r0x00459a0a;\n                }\n                if (pcVar10 < 0x29) {\n                    if (pcVar10 == 0x28) {\n                        var_24h = 0x87;\n                        var_74h = pcVar12;\n                        if ((pcVar14[3] == L'?') && (pcVar14[4] == L'C')) {\n                            iVar11 = 3;\n                            cVar5 = pcVar14[5];\n                            while ((0x2f < cVar5 && (cVar5 <= var_b4h))) {\n                                iVar11 = iVar11 + 1;\n                                cVar5 = pcVar12[iVar11];\n                            }\n                            if (pcVar12[iVar11] == L')') {\n                                var_74h = pcVar12 + iVar11 + 1;\n                            }\n                            if (*var_74h != L'(') goto code_r0x0045bed4;\n                        }\n                        if ((var_74h[1] == L'?') &&\n                           (((cVar5 = var_74h[2],  cVar5 == L'=' || (cVar5 == L'!')) ||\n                            ((cVar5 == L'<' && ((var_74h[3] == L'=' || (var_74h[3] == L'!')))))))) {\n                            *(arg_28h + 0x80) = var_ch;\n                            pcVar14 = var_18h;\n                            var_4h = pcVar12;\n                        }\n                        else {\n                            var_14h = 0xffffffff;\n                            var_8h[2] = L'\\x8d';\n                            pcVar19 = pcVar14 + 3;\n                            var_18h = 0x2;\n                            iVar11 = 0;\n                            var_10h = NULL;\n                            cVar5 = *pcVar19;\n                            var_38h = cVar5;\n                            var_28h = NULL;\n                            if ((cVar5 == L'R') && (pcVar14[4] == L'&')) {\n                                var_1ch = 0xffffffff;\n                                pcVar19 = pcVar14 + 5;\n                                var_8h[2] = L'\\x8f';\ncode_r0x0045961c:\n                                cVar5 = *pcVar19;\n                                if ((0x2f < cVar5) && (cVar5 < 0x3a)) {\ncode_r0x0045bffb:\n                                    *arg_ch = 0x54;\n                                    var_4h = pcVar19;\n                                    goto code_r0x0045c057;\n                                }\n                            }\n                            else {\n                                if (cVar5 == L'<') {\n                                    var_1ch = 0x3e;\ncode_r0x004596fd:\n                                    pcVar19 = pcVar14 + 4;\n                                    goto code_r0x0045961c;\n                                }\n                                var_1ch = 0x27;\n                                if (cVar5 == L'\\'') goto code_r0x004596fd;\n                                var_1ch = NULL;\n                                if ((cVar5 == L'-') || (cVar5 == L'+')) {\n                                    pcVar19 = pcVar14 + 4;\ncode_r0x00459751:\n                                    cVar5 = *pcVar19;\n                                    var_4h = pcVar19;\njoined_r0x0045975c:\n                                    if ((0x2f < cVar5) && (cVar5 < 0x3a)) {\n                                        if (iVar11 < 0xccccccc) goto code_r0x00459774;\n                                        cVar5 = *var_4h;\n                                        while ((0x2f < cVar5 && (cVar5 < 0x3a))) {\n                                            var_4h = var_4h + 1;\n                                            cVar5 = *var_4h;\n                                        }\n                                        goto code_r0x0045bfeb;\n                                    }\n                                    goto code_r0x00459799;\n                                }\n                                if (var_90h <= cVar5) {\n                                    if (cVar5 < 0x3a) {\n                                        var_38h = NULL;\n                                        goto code_r0x00459751;\n                                    }\n                                    goto code_r0x0045961c;\n                                }\n                            }\n                            var_38h = 0xffffffff;\n                            if ((0xff < cVar5) || ((*(cVar5 + *(arg_28h + 0xc)) & 0x10) == 0)) {\ncode_r0x0045bed4:\n                                *arg_ch = 0x1c;\n                                var_4h = pcVar19;\n                                goto code_r0x0045c057;\n                            }\n                            var_4h = pcVar19 + 1;\n                            cVar5 = *var_4h;\n                            if (cVar5 < 0x100) {\n                                do {\n                                    if ((*(cVar5 + *(arg_28h + 0xc)) & 0x10) == 0) break;\n                                    var_4h = var_4h + 1;\n                                    cVar5 = *var_4h;\n                                } while (cVar5 <= var_98h);\n                            }\n                            var_14h = var_4h - pcVar19 >> 1;\n                            var_18h = (arg_2ch != NULL) + 2;\n                            if ((0 < var_1ch) && (cVar5 = *var_4h,  var_4h = var_4h + 1,  cVar5 != var_1ch)) {\ncode_r0x004596e1:\n                                *arg_ch = 0x1a;\n                                var_4h = var_4h + -1;\n                                goto code_r0x0045c057;\n                            }\n                            iVar11 = 0;\n                            var_10h = pcVar19;\ncode_r0x00459799:\n                            pcVar19 = var_14h;\n                            cVar5 = *var_4h;\n                            var_4h = var_4h + 1;\n                            if (cVar5 != L')') goto code_r0x004596e1;\n                            pcVar14 = var_18h;\n                            if (arg_2ch == NULL) {\n                                if (var_38h < 0) {\n                                    pcVar14 = NULL;\n                                    var_58h = *(arg_28h + 0x2c);\n                                    if (0 < *(arg_28h + 0x30)) {\n                                        do {\n                                            iVar11 = fcn.0049b891(pcVar19);\n                                            if ((iVar11 == 0) && (*(var_58h + pcVar19 * 2 + 2) == 0)) break;\n                                            pcVar14 = pcVar14 + 1;\n                                            var_58h = var_58h + *(arg_28h + 0x34) * 2;\n                                        } while (pcVar14 < *(arg_28h + 0x30));\n                                    }\n                                    pcVar12 = var_14h;\n                                    iVar11 = 0;\n                                    if (pcVar14 < *(arg_28h + 0x30)) {\n                                        cVar5 = *var_58h;\n                                        var_38h = cVar5;\n                                        iVar11 = pcVar14 + 1;\n                                        if (*(arg_28h + 0x4c) < var_38h) {\n                                            *(arg_28h + 0x4c) = var_38h;\n                                        }\n                                        pcVar19 = var_ch;\n                                        var_1ch = pcVar14;\n                                        if (iVar11 < *(arg_28h + 0x30)) {\n                                            do {\n                                                var_58h = var_58h + *(arg_28h + 0x34) * 2;\n                                                iVar8 = fcn.0049b891(pcVar12);\n                                                if ((iVar8 != 0) || (*(var_58h + pcVar12 * 2 + 2) != 0)) break;\n                                                pcVar19 = pcVar19 + 1;\n                                                iVar11 = iVar11 + 1;\n                                            } while (iVar11 < *(arg_28h + 0x30));\n                                            cVar5 = var_38h;\n                                        }\n                                        pcVar14 = var_18h;\n                                        if (var_ch < pcVar19) {\n                                            var_8h[4] = pcVar19;\n                                            var_8h[2] = var_8h[2] + L'\\x01';\n                                            cVar5 = var_1ch;\n                                            pcVar14 = var_18h + 1;\n                                        }\n                                        var_8h[3] = cVar5;\n                                    }\n                                    else {\n                                        if (var_1ch != NULL) {\ncode_r0x0045c015:\n                                            iVar11 = 0xf;\n                                            goto code_r0x0045c028;\n                                        }\n                                        if (*var_10h != L'R') {\n                                            if ((pcVar19 != 0x6) || (iVar11 = fcn.0041cd85(6),  iVar11 != 0))\n                                            goto code_r0x0045c015;\n                                            var_8h[2] = L'\\x91';\n                                            pcVar14 = var_ch;\n                                            goto code_r0x0041c9da;\n                                        }\n                                        pcVar14 = var_ch;\n                                        if (pcVar19 < 2) {\ncode_r0x00459948:\n                                            iVar11 = 0xffff;\n                                        }\n                                        else {\n                                            do {\n                                                cVar5 = *(var_10h + pcVar14 * 2);\n                                                if ((cVar5 < 0x30) || (var_b4h < cVar5)) goto code_r0x0045c015;\n                                                if (0xccccccb < iVar11) goto code_r0x0045bfeb;\n                                                iVar11 = iVar11 * 10 + (cVar5 - 0x30);\n                                                pcVar14 = pcVar14 + 1;\n                                            } while (pcVar14 < pcVar19);\n                                            if (iVar11 == 0) goto code_r0x00459948;\n                                        }\n                                        var_8h[3] = iVar11;\n                                        var_8h[2] = L'\\x8f';\n                                        pcVar14 = var_18h;\n                                    }\n                                }\n                                else {\n                                    if (iVar11 < 1) {\n                                        iVar11 = 0x23;\n                                        goto code_r0x0045c028;\n                                    }\n                                    if (var_38h != NULL) {\n                                        if (var_38h == 0x2d) {\n                                            iVar11 = (*(arg_28h + 0x40) - iVar11) + 1;\n                                        }\n                                        else {\n                                            iVar11 = iVar11 + *(arg_28h + 0x40);\n                                        }\n                                    }\n                                    if ((iVar11 < 1) || (*(arg_28h + 0x44) < iVar11)) goto code_r0x0045c015;\n                                    var_8h[3] = iVar11;\n                                    pcVar14 = var_18h;\n                                    if (*(arg_28h + 0x4c) < iVar11) {\n                                        *(arg_28h + 0x4c) = iVar11;\n                                        pcVar14 = var_18h;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        var_1ch = pcVar12;\n                        if (pcVar10 != 0x21) {\n                            if (pcVar10 == 0x26) {\n                                var_14h = 0x29;\n                                goto code_r0x0045aaf3;\n                            }\n                            if (pcVar10 == 0x27) goto code_r0x00459b83;\n                            goto code_r0x0041c482;\n                        }\n                        var_4h = pcVar14 + 3;\n                        if ((((*var_4h == L')') && (cVar5 = pcVar14[4],  cVar5 != L'*')) && (cVar5 != L'+')) &&\n                           ((cVar5 != L'?' && ((cVar5 != L'{' || (iVar11 = fcn.0049af93(),  iVar11 == 0)))))) {\n                            *var_8h = L'\\x9d';\n                            var_8h = var_8h + 1;\n                            var_28h = NULL;\n                            goto code_r0x0041cc56;\n                        }\n                        var_24h = 0x7e;\n                        *(arg_28h + 0x5c) = *(arg_28h + 0x5c) + 1;\n                        pcVar14 = var_18h;\n                    }\n                }\n                else {\n                    if (((pcVar10 == 0x2b) || (pcVar10 == 0x2d)) ||\n                       ((var_1ch = pcVar12,  0x2f < pcVar10 && (pcVar10 < 0x3a)))) {\n                        var_14h = 0x29;\n                        goto code_r0x0045ab3e;\n                    }\ncode_r0x0041c482:\n                    var_30h = NULL;\n                    var_10h = NULL;\n                    puVar13 = &var_30h;\n                    cVar5 = pcVar10;\n                    pcVar19 = var_8h;\n                    while (var_8h = pcVar19,  cVar5 != L')') {\n                        uVar21 = pcVar10;\n                        if (uVar21 == var_120h) break;\n                        var_4h = var_1ch + 1;\n                        if (uVar21 < 0x6a) {\n                            pcVar14 = var_ch;\n                            if (uVar21 == 0x69) goto code_r0x0041c4c7;\n                            if (uVar21 == 0x2d) {\n                                puVar13 = &var_10h;\n                            }\n                            else if (pcVar10 == 0x4a) {\n                                *puVar13 = *puVar13 | 0x80000;\n                                *(arg_28h + 100) = *(arg_28h + 100) | 0x400;\n                            }\n                            else if (pcVar10 == 0x55) {\n                                *puVar13 = *puVar13 | 0x200;\n                            }\n                            else {\n                                if (pcVar10 != 0x58) goto code_r0x0045bf77;\n                                *puVar13 = *puVar13 | 0x40;\n                            }\n                        }\n                        else {\n                            if (uVar21 == 0x6d) {\n                                pcVar14 = 0x2;\n                            }\n                            else {\n                                if (uVar21 != 0x73) {\n                                    if (uVar21 == 0x78) {\n                                        *puVar13 = *puVar13 | 8;\n                                        goto code_r0x0041c4c9;\n                                    }\ncode_r0x0045bf77:\n                                    *arg_ch = 0xc;\n                                    var_4h = var_1ch;\n                                    goto code_r0x0045c057;\n                                }\n                                pcVar14 = 0x4;\n                            }\ncode_r0x0041c4c7:\n                            *puVar13 = *puVar13 | pcVar14;\n                        }\ncode_r0x0041c4c9:\n                        cVar5 = *var_4h;\n                        pcVar10 = cVar5;\n                        var_1ch = var_4h;\n                        pcVar19 = var_8h;\n                    }\n                    var_3ch = (var_30h | var_2ch) & ~var_10h;\n                    if (*var_1ch == L')') {\n                        var_f8h = var_3ch >> 9 & var_ch;\n                        var_2ch = var_3ch;\n                        var_fch = var_f8h ^ var_ch;\n                        *var_124h = var_3ch;\n                        var_28h = NULL;\n                        var_94h = var_3ch & var_ch;\n                        var_4h = var_1ch;\n                        goto code_r0x0041c14f;\n                    }\n                    var_4h = var_1ch + 1;\n                    var_30h = NULL;\n                    var_24h = 0x83;\n                    pcVar14 = NULL;\n                }\n            }\n            else {\n                var_1ch = pcVar12;\n                if (pcVar10 == 0x3c) {\n                    cVar5 = pcVar14[3];\n                    if (cVar5 == 0x21) {\n                        var_24h = 0x80;\n                    }\n                    else {\n                        if (cVar5 != L'=') {\n                            if ((0xff < cVar5) || ((*(cVar5 + *(arg_28h + 0xc)) & 0x10) == 0)) {\n                                *arg_ch = 0x18;\n                                var_4h = pcVar14 + 3;\n                                goto code_r0x0045c057;\n                            }\ncode_r0x00459b83:\n                            pcVar19 = pcVar19 + 1;\n                            cVar5 = *pcVar19;\n                            if ((0x2f < cVar5) && (cVar5 < 0x3a)) goto code_r0x0045bffb;\n                            var_4h = pcVar19;\n                            if (cVar5 < 0x100) {\n                                do {\n                                    if ((*(cVar5 + *(arg_28h + 0xc)) & 0x10) == 0) break;\n                                    var_4h = var_4h + 1;\n                                    cVar5 = *var_4h;\n                                } while (cVar5 <= var_98h);\n                            }\n                            var_10h = var_4h - pcVar19 >> 1;\n                            var_38h = pcVar19;\n                            var_1ch = pcVar12;\n                            var_14h = pcVar10;\n                            if (arg_2ch != NULL) {\n                                var_14h = *(arg_28h + 0x40) + 1;\n                                if (*var_4h != ((pcVar10 == 0x3c) - 1 & 0xffe9) + L'>') goto code_r0x0045c00a;\n                                if (9999 < *(arg_28h + 0x30)) {\n                                    *arg_ch = 0x31;\n                                    goto code_r0x0045c057;\n                                }\n                                if ((*(arg_28h + 0x34) < var_10h + 2) &&\n                                   (*(arg_28h + 0x34) = var_10h + 2,  0x20 < var_10h)) goto code_r0x0045c006;\n                                iVar11 = *(arg_28h + 0x28);\n                                iVar8 = 0;\n                                if (0 < *(arg_28h + 0x30)) {\n                                    do {\n                                        if ((var_10h == *(iVar11 + 4)) && (iVar7 = fcn.0049b891(var_10h),  iVar7 == 0))\n                                        {\n                                            if (*(iVar11 + 8) == var_14h) break;\n                                            if ((var_2ch & 0x80000) == 0) {\n                                                iVar11 = 0x2b;\n                                                goto code_r0x0045c01b;\n                                            }\n                                            *(arg_28h + 0x78) = var_ch;\n                                        }\n                                        else if (*(iVar11 + 8) == var_14h) {\n                                            *arg_ch = 0x41;\n                                            goto code_r0x0045c057;\n                                        }\n                                        iVar8 = iVar8 + 1;\n                                        iVar11 = iVar11 + 0xc;\n                                    } while (iVar8 < *(arg_28h + 0x30));\n                                }\n                                iVar11 = *(arg_28h + 0x30);\n                                if (iVar11 <= iVar8) {\n                                    iVar8 = *(arg_28h + 0x38);\n                                    if (iVar8 <= iVar11) {\n                                        iVar7 = fcn.0040ab22(iVar8 * 0x18);\n                                        if (iVar7 == 0) {\n                                            *arg_ch = 0x15;\n                                            goto code_r0x0045c057;\n                                        }\n                                        fcn.00420db0(iVar7, *(arg_28h + 0x28), *(arg_28h + 0x38) * 0xc);\n                                        if (0x14 < *(arg_28h + 0x38)) {\n                                            fcn.0040ab2b(*(arg_28h + 0x28));\n                                        }\n                                        iVar11 = *(arg_28h + 0x30);\n                                        *(arg_28h + 0x28) = iVar7;\n                                        *(arg_28h + 0x38) = iVar8 * 2;\n                                    }\n                                    *(iVar11 * 0xc + *(arg_28h + 0x28)) = var_38h;\n                                    *(*(arg_28h + 0x30) * 0xc + 4 + *(arg_28h + 0x28)) = var_10h;\n                                    *(*(arg_28h + 0x30) * 0xc + 8 + *(arg_28h + 0x28)) = var_14h;\n                                    *(arg_28h + 0x30) = *(arg_28h + 0x30) + 1;\n                                }\n                            }\n                            var_4h = var_4h + 1;\n                            goto code_r0x0041c9c6;\n                        }\n                        var_24h = 0x7f;\n                    }\n                    *(arg_28h + 0x5c) = *(arg_28h + 0x5c) + 1;\n                    var_4h = pcVar14 + 4;\n                    pcVar14 = var_18h;\n                }\n                else {\n                    if (pcVar10 == 0x3d) {\n                        *(arg_28h + 0x5c) = *(arg_28h + 0x5c) + 1;\n                        var_24h = 0x7d;\n                    }\n                    else {\n                        if (pcVar10 != 0x3e) {\n                            if (pcVar10 == 0x43) {\n                                iVar11 = 0;\n                                var_ach = var_ch;\n                                *var_8h = L'v';\n                                var_4h = pcVar14 + 3;\n                                var_88h = var_8h;\n                                cVar5 = *var_4h;\n                                if (0x2f < cVar5) {\n                                    do {\n                                        if (0x39 < cVar5) break;\n                                        var_4h = var_4h + 1;\n                                        iVar11 = iVar11 * 10 + (cVar5 - 0x30);\n                                        if (0xff < iVar11) {\n                                            *arg_ch = 0x26;\n                                            goto code_r0x0045c057;\n                                        }\n                                        cVar5 = *var_4h;\n                                    } while (var_90h <= cVar5);\n                                }\n                                if (*var_4h != L')') {\n                                    iVar11 = 0x27;\n                                    goto code_r0x0045c028;\n                                }\n                                var_8h[1] = iVar11;\n                                var_28h = NULL;\n                                var_8h[2] = (var_4h - *(arg_28h + 0x18) >> 1) + L'\\x01';\n                                var_8h[3] = L'\\0';\n                                var_8h = var_8h + 4;\n                                goto code_r0x0041cc56;\n                            }\n                            if (pcVar10 == 0x50) {\n                                pcVar19 = pcVar14 + 3;\n                                cVar5 = *pcVar19;\n                                pcVar10 = cVar5;\n                                if ((cVar5 == L'=') || (cVar5 == L'>')) {\n                                    var_14h = 0x29;\n                                    var_10h = cVar5 == L'>';\n                                    goto code_r0x0045ae6d;\n                                }\n                                if (cVar5 != L'<') {\n                                    iVar11 = 0x29;\n                                    var_4h = pcVar19;\n                                    goto code_r0x0045c028;\n                                }\n                                goto code_r0x00459b83;\n                            }\n                            if (pcVar10 != 0x52) {\n                                if (pcVar10 != 0x7c) goto code_r0x0041c482;\n                                var_30h = var_ch;\n                                *(arg_28h + 0x7c) = var_ch;\n                                goto code_r0x004599fd;\n                            }\n                            var_4h = pcVar14 + 3;\n                            pcVar14 = NULL;\n                            if (*var_4h != L')') goto code_r0x0045bff3;\n                            goto code_r0x0045b036;\n                        }\n                        var_24h = 0x81;\n                    }\ncode_r0x00459a0a:\n                    var_4h = pcVar14 + 3;\n                    pcVar14 = var_18h;\n                }\n            }\n        }\n        else {\n            if ((var_2ch & 0x1000) != 0) {\n                var_24h = 0x83;\n                pcVar14 = NULL;\n                goto code_r0x0041c9da;\n            }\ncode_r0x0041c9c6:\n            *(arg_28h + 0x40) = *(arg_28h + 0x40) + 1;\n            var_8h[2] = *(arg_28h + 0x40);\n            pcVar14 = var_ch;\n        }\ncode_r0x0041c9da:\n        iVar11 = *(arg_28h + 0x58);\n        *(arg_28h + 0x58) = iVar11 + 1;\n        if (0xf9 < iVar11) {\n            iVar11 = 0x52;\n            goto code_r0x0045c028;\n        }\n        if ((var_24h < 0x81) && (*(arg_28h + 0x80) != 0)) {\n            var_28h = NULL;\n            *(arg_28h + 0x80) = 0;\n        }\n        else {\n            var_40h = *(arg_28h + 0x20) - *(arg_28h + 0x10) >> 1;\n            var_28h = var_8h;\n        }\n        *var_8h = var_24h;\n        pcVar12 = *(arg_28h + 0x68);\n        uVar9 = *(arg_28h + 0x40);\n        var_8ch = 0;\n        pcVar19 = var_ch;\n        if ((var_24h != 0x7f) && (var_24h != 0x80)) {\n            pcVar19 = NULL;\n        }\n        var_80h = pcVar12;\n        var_48h = var_8h;\n        iVar11 = fcn.0041bc46(&var_4h, arg_ch, pcVar19, var_30h, pcVar14, arg_24h + (var_24h == 0x87), &var_e4h, \n                              &var_9ch, &var_b8h, &var_a0h, arg_20h, arg_28h, -(arg_2ch != NULL) & &var_8ch);\n        if (iVar11 == 0) goto code_r0x0045c057;\n        *(arg_28h + 0x58) = *(arg_28h + 0x58) + -1;\n        pcVar14 = var_24h;\n        if (var_24h == 0x81) {\n            if (*(arg_28h + 0x40) < uVar9 || *(arg_28h + 0x40) == uVar9) {\n                *var_8h = L'\\x82';\n                goto code_r0x0041cac2;\n            }\n        }\n        else {\ncode_r0x0041cac2:\n            if (var_24h < 0x81) {\n                *(arg_28h + 0x5c) = *(arg_28h + 0x5c) + -1;\n            }\n            if ((var_24h == 0x87) && (arg_2ch == NULL)) {\n                pcVar19 = var_8h;\n                pcVar12 = NULL;\n                do {\n                    pcVar10 = pcVar12;\n                    pcVar19 = pcVar19 + pcVar19[1];\n                    pcVar12 = pcVar10 + 1;\n                } while (*pcVar19 != L'x');\n                pcVar12 = var_80h;\n                if (var_8h[2] == L'\\x91') {\n                    if (var_ch <= pcVar10) {\n                        *arg_ch = 0x36;\n                        goto code_r0x0045c057;\n                    }\n                    pcVar14 = 0x91;\n                }\n                else {\n                    if (1 < pcVar10) {\n                        *arg_ch = 0x1b;\n                        goto code_r0x0045c057;\n                    }\n                    if (pcVar10 + 1 == var_ch) {\n                        var_a0h = 0xffffffff;\n                        var_9ch = 0xffffffff;\n                    }\n                }\n            }\n        }\n        if (*var_4h != L')') {\n            *arg_ch = 0xe;\n            goto code_r0x0045c057;\n        }\n        if (arg_2ch == NULL) {\n            var_8h = var_48h;\n            pcVar19 = var_48h;\n            if (pcVar14 == 0x91) goto code_r0x0041c14f;\n            var_84h = var_60h;\n            var_70h = var_54h;\n            var_7ch = var_6ch;\n            var_68h = var_34h;\n            var_a4h = NULL;\n            if (pcVar14 < 0x81) {\n                if ((pcVar14 != 0x7d) || (uVar9 = var_9ch,  var_a0h < 0)) goto code_r0x0041c14f;\ncode_r0x0041cb57:\n                if (uVar9 < 0) goto code_r0x0041c14f;\n            }\n            else {\n                uVar9 = var_a0h;\n                if (var_34h == 0xfffffffe) {\n                    if (var_9ch < 0) {\n                        var_34h = 0xffffffff;\n                    }\n                    else {\n                        var_34h = var_9ch;\n                        var_6ch = var_e4h;\n                        var_a4h = var_ch;\n                    }\n                    var_68h = 0xffffffff;\n                    goto code_r0x0041cb57;\n                }\n                if (var_9ch < 0) goto code_r0x0041cb57;\n                if (var_a0h < 0) {\n                    var_b8h = var_e4h;\n                    var_a0h = var_9ch | pcVar12;\n                    uVar9 = var_a0h;\n                    goto code_r0x0041cb57;\n                }\n            }\n            var_60h = var_b8h;\n            var_54h = var_a0h;\n            goto code_r0x0041c14f;\n        }\n        pcVar14 = var_4h;\n        if (0x7fffffeb - *arg_2ch < var_8ch + -4) {\ncode_r0x0045bfa4:\n            *arg_ch = 0x14;\n            var_4h = pcVar14;\n            goto code_r0x0045c057;\n        }\n        *arg_2ch = var_8ch + -4 + *arg_2ch;\n        var_8h[1] = L'\\x02';\n        var_8h[2] = L'x';\n        var_8h = var_8h + 3;\n        *var_8h = L'\\x02';\ncode_r0x0041cce9:\n        var_8h = var_8h + 1;\n    }\n    else {\n        if (pcVar10 != 0x5b) {\n            if (pcVar10 == 0x5c) {\n                var_74h = pcVar14;\n                pcVar14 = fcn.0041d305(arg_ch, *(arg_28h + 0x40), var_2ch, 0);\n                if (*arg_ch != 0) goto code_r0x0045c057;\n                if (pcVar14 != NULL) {\n                    if ((var_34h == 0xfffffffe) && (pcVar14 + -3 < 0x11)) {\n                        var_34h = 0xffffffff;\n                    }\n                    var_7ch = var_6ch;\n                    var_68h = var_34h;\n                    var_84h = var_60h;\n                    var_70h = var_54h;\n                    if (pcVar14 == 0x1b) {\n                        pcVar19 = var_4h + 1;\n                        pcVar12 = var_4h + 2;\n                        var_40h = *(arg_28h + 0x20) - *(arg_28h + 0x10) >> 1;\n                        var_80h = pcVar12;\n                        var_14h = ((*pcVar19 == L'<') - 1 & 0xffffffe9) + 0x3e;\n                        cVar5 = *pcVar12;\n                        if (((cVar5 != L'+') && (cVar5 != L'-')) && ((cVar5 < 0x30 || (0x39 < cVar5)))) {\ncode_r0x0045aaf3:\n                            var_10h = var_ch;\n                            goto code_r0x0045ae6d;\n                        }\n                        var_4h = var_4h + 3;\n                        cVar5 = *var_4h;\n                        while ((var_90h <= cVar5 && (cVar5 < 0x3a))) {\n                            var_4h = var_4h + 1;\n                            cVar5 = *var_4h;\n                        }\n                        if (*var_4h != var_14h) {\n                            iVar11 = 0x39;\n                            var_4h = pcVar19;\n                            goto code_r0x0045c028;\n                        }\ncode_r0x0045ab3e:\n                        cVar5 = *pcVar12;\n                        pcVar10 = cVar5;\n                        var_30h = pcVar10;\n                        var_3ch = pcVar10;\n                        if (cVar5 == L'+') {\n                            cVar6 = pcVar12[1];\n                            if ((cVar6 < 0x30) || (0x39 < cVar6)) {\n                                *arg_ch = 0x3f;\n                                var_4h = pcVar12 + 1;\n                                goto code_r0x0045c057;\n                            }\ncode_r0x0045ab82:\n                            var_4h = pcVar12 + 1;\n                        }\n                        else {\n                            var_4h = pcVar12;\n                            if (cVar5 == L'-') {\n                                var_1ch = pcVar12;\n                                if (var_90h <= pcVar12[1]) {\n                                    if (pcVar12[1] <= var_b4h) goto code_r0x0045ab82;\n                                }\n                                goto code_r0x0041c482;\n                            }\n                        }\n                        pcVar14 = NULL;\n                        cVar6 = *var_4h;\n                        if (var_90h <= cVar6) {\ncode_r0x0045ab99:\n                            if (cVar6 < 0x3a) {\n                                if (pcVar14 < 0xccccccc) goto code_r0x0045abad;\n                                cVar5 = *var_4h;\n                                while ((0x2f < cVar5 && (cVar5 < 0x3a))) {\n                                    var_4h = var_4h + 1;\n                                    cVar5 = *var_4h;\n                                }\ncode_r0x0045bfeb:\n                                iVar11 = 0x3d;\n                                goto code_r0x0045c028;\n                            }\n                        }\ncode_r0x0045abd3:\n                        if (*var_4h != var_14h) {\ncode_r0x0045bff3:\n                            iVar11 = 0x1d;\n                            goto code_r0x0045c028;\n                        }\n                        if (cVar5 == L'-') {\n                            if (pcVar14 == NULL) {\ncode_r0x0045bfef:\n                                iVar11 = 0x3a;\n                                goto code_r0x0045c028;\n                            }\n                            pcVar14 = (*(arg_28h + 0x40) - pcVar14) + 1;\n                            if (pcVar14 < 1) goto code_r0x0045c015;\n                        }\n                        else if (cVar5 == L'+') {\n                            if (pcVar14 == NULL) goto code_r0x0045bfef;\n                            pcVar14 = pcVar14 + *(arg_28h + 0x40);\n                        }\ncode_r0x0045b036:\n                        iVar11 = *(arg_28h + 0x14);\n                        var_40h = *(arg_28h + 0x20) - *(arg_28h + 0x10) >> 1;\n                        var_28h = var_8h;\n                        if (arg_2ch == NULL) {\n                            *var_8h = L'\\0';\n                            if (pcVar14 != NULL) {\n                                iVar11 = fcn.0049a2b4(pcVar14);\n                            }\n                            if (iVar11 == 0) {\n                                if (*(arg_28h + 0x44) < pcVar14) goto code_r0x0045c015;\n                                iVar11 = *(arg_28h + 0x14) + pcVar14 * 2;\n                                if ((*(arg_28h + 0x10) + *(arg_28h + 0x3c) * 2) - 200U <= *(arg_28h + 0x20)) {\n                                    iVar8 = fcn.0049a928();\n                                    *arg_ch = iVar8;\n                                    if (iVar8 != 0) goto code_r0x0045c057;\n                                }\n                                **(arg_28h + 0x20) = var_8h + (2 - *(arg_28h + 0x14)) >> 1;\n                                *(arg_28h + 0x20) = *(arg_28h + 0x20) + 2;\n                            }\n                            else if (((*(iVar11 + 2) == 0) && (arg_24h < 1)) &&\n                                    (iVar8 = fcn.0049a8ea(arg_20h, var_78h, arg_28h),  iVar8 != 0)) {\n                                iVar11 = 0x28;\ncode_r0x0045c01b:\n                                *arg_ch = iVar11;\n                                goto code_r0x0045c057;\n                            }\n                        }\n                        *var_8h = L'u';\n                        var_8h[1] = iVar11 - *(arg_28h + 0x14) >> 1;\n                        var_8h = var_8h + 2;\n                        var_a4h = NULL;\n                        if (var_34h == 0xfffffffe) {\n                            var_34h = 0xffffffff;\n                        }\n                        var_7ch = var_6ch;\n                        var_68h = var_34h;\n                        pcVar19 = var_8h;\n                    }\n                    else {\n                        if (pcVar14 == 0x1c) {\n                            pcVar19 = var_4h + 1;\n                            cVar5 = *pcVar19;\n                            if (((cVar5 != L'<') && (cVar5 != var_128h)) && (cVar5 != var_12ch)) {\n                                iVar11 = 0x45;\n                                goto code_r0x0045bf6f;\n                            }\n                            var_10h = NULL;\n                            if (*pcVar19 == L'<') {\n                                var_14h = 0x3e;\n                            }\n                            else {\n                                var_14h = 0x27;\n                                if (*pcVar19 != L'\\'') {\n                                    var_14h = 0x7d;\n                                }\n                            }\ncode_r0x0045ae6d:\n                            pcVar19 = pcVar19 + 1;\n                            cVar5 = *pcVar19;\n                            var_30h = pcVar19;\n                            if ((0x2f < cVar5) && (cVar5 < 0x3a)) goto code_r0x0045bffb;\n                            var_4h = pcVar19;\n                            if (cVar5 < 0x100) {\n                                do {\n                                    if ((*(cVar5 + *(arg_28h + 0xc)) & 0x10) == 0) break;\n                                    var_4h = var_4h + 1;\n                                    cVar5 = *var_4h;\n                                } while (cVar5 <= var_98h);\n                            }\n                            iVar11 = var_4h - pcVar19 >> 1;\n                            if (arg_2ch == NULL) {\n                                var_40h = NULL;\n                                var_58h = *(arg_28h + 0x2c);\n                                pcVar19 = NULL;\n                                if (0 < *(arg_28h + 0x30)) {\n                                    do {\n                                        iVar8 = fcn.0049b891(iVar11);\n                                        if ((iVar8 == 0) && (pcVar19 = var_40h,  *(var_58h + iVar11 * 2 + 2) == 0))\n                                        break;\n                                        var_40h = var_40h + 1;\n                                        var_58h = var_58h + *(arg_28h + 0x34) * 2;\n                                        pcVar19 = var_40h;\n                                    } while (var_40h < *(arg_28h + 0x30));\n                                }\n                                iVar8 = *(arg_28h + 0x30);\n                                if (iVar8 <= pcVar19) goto code_r0x0045c015;\n                                pcVar14 = *var_58h;\n                                var_3ch = pcVar14;\n                            }\n                            else {\n                                pcVar14 = NULL;\n                                var_3ch = NULL;\n                                if (iVar11 == 0) {\n                                    iVar11 = 0x3e;\n                                    goto code_r0x0045c028;\n                                }\n                                if (*var_4h != var_14h) {\ncode_r0x0045c00a:\n                                    iVar11 = 0x2a;\n                                    goto code_r0x0045c028;\n                                }\n                                if (0x20 < iVar11) {\ncode_r0x0045c006:\n                                    iVar11 = 0x30;\n                                    goto code_r0x0045c028;\n                                }\n                                if (var_10h == NULL) {\n                                    *(arg_28h + 0x54) = *(arg_28h + 0x54) + 1;\n                                }\n                                iVar8 = *arg_2ch;\n                                *arg_2ch = iVar8 + 9;\n                                if (*(arg_28h + 0x7c) != 0) {\n                                    *arg_2ch = iVar8 + 0x11;\n                                }\n                                iVar7 = *(arg_28h + 0x28);\n                                iVar8 = *(arg_28h + 0x30);\n                                pcVar19 = NULL;\n                                var_40h = NULL;\n                                if (0 < iVar8) {\n                                    do {\n                                        if ((iVar11 == *(iVar7 + 4)) && (iVar8 = fcn.0049b891(iVar11),  iVar8 == 0)) {\n                                            pcVar14 = *(iVar7 + 8);\n                                            var_3ch = pcVar14;\n                                            if (var_10h != NULL) goto code_r0x0045b036;\n                                            for (puVar16 = *(arg_28h + 0x24); puVar16 != NULL; puVar16 = *puVar16) {\n                                                if (*(puVar16 + 1) == pcVar14) {\n                                                    *(puVar16 + 6) = var_ch;\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                        pcVar19 = var_40h + 1;\n                                        iVar7 = iVar7 + 0xc;\n                                        iVar8 = *(arg_28h + 0x30);\n                                        var_40h = pcVar19;\n                                    } while (pcVar19 < iVar8);\n                                }\n                            }\n                            if (var_10h != NULL) goto code_r0x0045b036;\n                            if ((arg_2ch == NULL) && (*(arg_28h + 0x78) != 0)) {\n                                var_80h = pcVar19;\n                                iVar11 = pcVar19 + 1;\n                                var_10h = var_58h + *(arg_28h + 0x34) * 2;\n                                pcVar19 = var_ch;\n                                var_40h = iVar11;\n                                if (iVar11 < iVar8) {\n                                    do {\n                                        iVar8 = fcn.0049b866();\n                                        if (iVar8 != 0) break;\n                                        pcVar19 = pcVar19 + 1;\n                                        iVar11 = iVar11 + 1;\n                                        var_10h = var_10h + *(arg_28h + 0x34) * 2;\n                                    } while (iVar11 < *(arg_28h + 0x30));\n                                    pcVar14 = var_3ch;\n                                    if (var_ch < pcVar19) {\n                                        if (var_34h == 0xfffffffe) {\n                                            var_34h = 0xffffffff;\n                                        }\n                                        var_40h = *(arg_28h + 0x20) - *(arg_28h + 0x10) >> 1;\n                                        var_28h = var_8h;\n                                        *var_8h = (var_2ch & 1) + L's';\n                                        var_8h[1] = var_80h;\n                                        var_8h[2] = pcVar19;\n                                        var_8h = var_8h + 3;\n                                        pcVar19 = var_8h;\n                                        if (var_58h < var_10h) {\n                                            do {\n                                                uVar9 = *var_58h;\n                                                pcVar14 = var_ch;\n                                                if (uVar9 < 0x20) {\n                                                    pcVar14 = var_ch << (*var_58h & 0x1f);\n                                                }\n                                                *(arg_28h + 0x50) = *(arg_28h + 0x50) | pcVar14;\n                                                if (*(arg_28h + 0x4c) < uVar9) {\n                                                    *(arg_28h + 0x4c) = uVar9;\n                                                }\n                                                for (puVar16 = *(arg_28h + 0x24); puVar16 != NULL; puVar16 = *puVar16) {\n                                                    if (*(puVar16 + 1) == uVar9) {\n                                                        *(puVar16 + 6) = var_ch;\n                                                        break;\n                                                    }\n                                                }\n                                                var_58h = var_58h + *(arg_28h + 0x34) * 2;\n                                            } while (var_58h < var_10h);\n                                        }\n                                        goto code_r0x0041c14f;\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (-1 < pcVar14) {\n                                if ((pcVar14 == 0xf) || (pcVar14 == 0x10)) {\n                                    var_e8h = 0;\n                                    var_ech = 0;\n                                    iVar11 = fcn.0049ae7f(&var_e8h, &var_ech, arg_ch);\n                                    if (iVar11 == 0) goto code_r0x0045c057;\n                                    iVar11 = *(arg_28h + 0x20) - *(arg_28h + 0x10);\n                                    var_28h = var_8h;\n                                    *var_8h = ((pcVar14 == 0x10) != var_130h) + L'\\x0f';\n                                    var_8h[1] = var_e8h;\n                                    var_8h = var_8h + 2;\n                                    *var_8h = var_ech;\n                                }\n                                else {\n                                    if ((((pcVar14 == 0x5) || (pcVar14 == 0x4)) || (pcVar14 == var_ch)) &&\n                                       (*(arg_28h + 0x48) == 0)) {\n                                        *(arg_28h + 0x48) = var_ch;\n                                    }\n                                    if ((0x1c < pcVar14) && (pcVar14 < 0x23)) {\n                                        var_50h = var_4h + 1;\n                                        var_4h = *(pcVar14 * 4 + 0x4c39ec) + -2;\n                                        pcVar19 = var_8h;\n                                        goto code_r0x0041c14f;\n                                    }\n                                    iVar11 = *(arg_28h + 0x20) - *(arg_28h + 0x10);\n                                    var_28h = ~-(0x10 < pcVar14 + -3) & var_8h;\n                                    if ((var_5ch == 0) && (pcVar14 == 0xe)) {\n                                        pcVar14 = 0xd;\n                                    }\n                                    *var_8h = pcVar14;\n                                }\n                                var_40h = iVar11 >> 1;\n                                var_8h = var_8h + 1;\n                                goto code_r0x0041cc56;\n                            }\n                            pcVar14 = -pcVar14;\n                        }\n                        if (var_34h == 0xfffffffe) {\n                            var_34h = 0xffffffff;\n                            var_68h = 0xffffffff;\n                        }\n                        var_40h = *(arg_28h + 0x20) - *(arg_28h + 0x10) >> 1;\n                        var_28h = var_8h;\n                        *var_8h = (var_2ch & var_ch) + L'q';\n                        var_8h[1] = pcVar14;\n                        var_8h = var_8h + 2;\n                        pcVar19 = var_ch;\n                        if (pcVar14 < 0x20) {\n                            pcVar19 = var_ch << (pcVar14 & 0x1f);\n                        }\n                        *(arg_28h + 0x50) = *(arg_28h + 0x50) | pcVar19;\n                        if (*(arg_28h + 0x4c) < pcVar14) {\n                            *(arg_28h + 0x4c) = pcVar14;\n                        }\n                        for (puVar16 = *(arg_28h + 0x24); pcVar19 = var_8h,  puVar16 != NULL; puVar16 = *puVar16) {\n                            if (*(puVar16 + 1) == pcVar14) {\n                                *(puVar16 + 6) = var_ch;\n                                break;\n                            }\n                        }\n                    }\n                    goto code_r0x0041c14f;\n                }\n                if ((var_5ch == 0) || (var_bch < 0x10000)) {\n                    var_10ch._0_2_ = var_bch;\n                    pcVar12 = var_ch;\n                }\n                else {\ncode_r0x0045aa6a:\n                    pcVar12 = fcn.0049b8c1();\n                }\n            }\n            else {\n                if (pcVar10 == 0x5d) {\n                    if ((*(arg_28h + 0x60) & 0x2000000) != 0) {\n                        *arg_ch = 0x40;\n                        var_4h = pcVar14;\n                        goto code_r0x0045c057;\n                    }\n                }\n                else {\n                    if (pcVar10 == 0x5e) {\n                        var_28h = NULL;\n                        if ((var_2ch & 2) == 0) {\n                            cVar5 = L'\\x1b';\n                        }\n                        else {\n                            if (var_34h == 0xfffffffe) {\n                                var_34h = 0xffffffff;\n                                var_68h = 0xffffffff;\n                            }\n                            cVar5 = L'\\x1c';\n                        }\n                        *var_8h = cVar5;\n                        var_8h = var_8h + 1;\ncode_r0x0041cc56:\n                        pcVar19 = var_8h;\n                        goto code_r0x0041c14f;\n                    }\n                    if (pcVar10 == 0x7b) {\n                        if (pcVar12 != NULL) {\n                            pcVar14 = fcn.0049b037(&var_44h, arg_ch);\n                            var_4h = pcVar14;\n                            if (*arg_ch != 0) goto code_r0x0045c057;\n                            goto code_r0x0041c835;\n                        }\n                    }\n                    else if (pcVar10 == 0x7c) goto code_r0x0041c346;\n                }\ncode_r0x0041c023:\n                var_10ch._0_2_ = pcVar10;\n                pcVar12 = var_ch;\n                if ((var_5ch != 0) && ((pcVar10 & 0xfc00) == 0xd800)) {\n                    pcVar14 = pcVar14 + 1;\n                    if ((*pcVar14 & 0xfc00U) == 0xdc00) {\n                        var_4h = pcVar14;\n                        stack0xfffffef2 = stack0xfffffef2 & 0xffff0000 | *pcVar14;\n                        pcVar12 = 0x2;\n                    }\n                }\n            }\ncode_r0x0041c04c:\n            pcVar14 = var_60h;\n            var_28h = var_8h;\n            var_40h = *(arg_28h + 0x20) - *(arg_28h + 0x10) >> 1;\n            if ((var_5ch != 0) && ((var_ch & var_2ch) != 0)) {\n                uVar9 = var_10ch;\n                if ((uVar9 & 0xfc00) == 0xd800) {\n                    uVar9 = ((uVar9 & 0x3ff) << 10 | stack0xfffffef2 & 0x3ff) + 0x10000;\n                }\n                uVar1 = *(*((*(uVar9 / 0x80 + 0x4bff60) * 0x80 + uVar9 % 0x80) * 2 + 0x4b1c60) * 8 + 0x4af413);\n                if (uVar1 != 0) {\n                    *var_8h = L'\\x10';\n                    var_8h[1] = L'\\t';\n                    var_8h[2] = uVar1;\n                    var_8h = var_8h + 3;\n                    pcVar19 = var_8h;\n                    if (var_34h == 0xfffffffe) {\n                        var_68h = 0xffffffff;\n                        var_34h = 0xffffffff;\n                    }\n                    goto code_r0x0041c14f;\n                }\n            }\n            *var_8h = (var_2ch & var_ch) + L'\\x1d';\n            pcVar19 = var_8h + 1;\n            var_8h = pcVar19;\n            pcVar10 = NULL;\n            if (pcVar12 != NULL) {\n                do {\n                    *pcVar19 = *(&var_10ch + pcVar10 * 2);\n                    pcVar19 = pcVar19 + 1;\n                    pcVar10 = pcVar10 + 1;\n                } while (pcVar10 < pcVar12);\n                var_8h = pcVar19;\n            }\n            if ((var_10ch == L'\\r') || (var_10ch == L'\\n')) {\n                *(arg_28h + 100) = *(arg_28h + 100) | 0x800;\n            }\n            var_8h = pcVar19;\n            if (var_34h == 0xfffffffe) {\n                var_68h = 0xffffffff;\n                var_84h = var_60h;\n                var_70h = var_54h;\n                if ((pcVar12 != var_ch) && (var_94h != 0)) {\n                    var_54h = 0xffffffff;\n                    var_34h = 0xffffffff;\n                    goto code_r0x0041c14f;\n                }\n                var_6ch = var_10ch;\n                var_34h = var_94h;\n                if (pcVar12 == var_ch) goto code_r0x0041c14f;\n                uVar9 = *(arg_28h + 0x68);\n                var_60h = pcVar19[-1];\n            }\n            else {\n                var_7ch = var_6ch;\n                var_84h = var_60h;\n                var_68h = var_34h;\n                var_70h = var_54h;\n                if ((pcVar12 != var_ch) && (var_94h != 0)) goto code_r0x0041c14f;\n                var_60h = pcVar19[-1];\n                uVar9 = *(arg_28h + 0x68) | var_94h;\n            }\n            var_70h = var_54h;\n            var_84h = pcVar14;\n            var_54h = uVar9;\n            goto code_r0x0041c14f;\n        }\n        iVar11 = fcn.0041cd85(6);\n        if (iVar11 == 0) {\n            pcVar14 = L\"\\\\b(?=\\\\w)\";\ncode_r0x0045b34d:\n            var_50h = var_4h + 7;\n            var_4h = pcVar14;\n            pcVar19 = var_8h;\n            goto code_r0x0041c15a;\n        }\n        iVar11 = fcn.0041cd85(6);\n        pcVar14 = var_8h;\n        if (iVar11 == 0) {\n            pcVar14 = L\"\\\\b(?<=\\\\w)\";\n            goto code_r0x0045b34d;\n        }\n        var_40h = *(arg_28h + 0x20) - *(arg_28h + 0x10) >> 1;\n        cVar5 = var_4h[1];\n        var_28h = var_8h;\n        if ((((cVar5 == L':') || (cVar5 == L'.')) || (cVar5 == L'=')) && (iVar11 = fcn.0049a854(),  iVar11 != 0)) {\n            iVar11 = ((var_4h[1] == L':') - 1 & 0x12) + 0xd;\n            pcVar14 = var_4h;\ncode_r0x0045bea0:\n            *arg_ch = iVar11;\n            var_4h = pcVar14;\n            goto code_r0x0045c057;\n        }\n        pcVar19 = var_4h;\n        pcVar12 = NULL;\n        do {\n            while( true ) {\n                var_10h = pcVar12;\n                var_4h = pcVar19 + 1;\n                pcVar10 = *var_4h;\n                var_14h = pcVar10;\n                if (pcVar10 != 0x5c) break;\n                if (pcVar19[2] == L'E') {\n                    pcVar19 = pcVar19 + 2;\n                    pcVar12 = var_10h;\n                }\n                else {\n                    iVar11 = fcn.0041cd85(3);\n                    if (iVar11 != 0) goto code_r0x0041c604;\n                    pcVar19 = var_4h + 3;\n                    pcVar12 = var_10h;\n                }\n            }\n        } while ((var_10h == NULL) && (pcVar19 = var_4h,  pcVar12 = var_ch,  pcVar10 == 0x5e));\n        if ((pcVar10 == 0x5d) && ((*(arg_28h + 0x60) & 0x2000000) != 0)) {\n            *var_8h = (-(var_10h != NULL) & 0xff70) + L'\\x9d';\n            var_8h = var_8h + 1;\n            if (var_34h == 0xfffffffe) {\n                var_34h = 0xffffffff;\n            }\n            var_7ch = var_6ch;\n            var_68h = var_34h;\n            pcVar19 = var_8h;\n            goto code_r0x0041c14f;\n        }\ncode_r0x0041c604:\n        var_20h = pcVar14 + 3;\n        var_38h = NULL;\n        pcVar14 = NULL;\n        var_70h = NULL;\n        var_24h = NULL;\n        var_1ch = NULL;\n        var_3ch = NULL;\n        var_18h = var_20h;\n        fcn.004222d0(&var_e0h, 0, 0x20);\n        if (pcVar10 == NULL) {\ncode_r0x0045bbc1:\n            *arg_ch = 6;\n            goto code_r0x0045c057;\n        }\n        pcVar19 = NULL;\n        do {\n            var_80h = pcVar14;\n            var_30h = pcVar19;\n            if ((var_5ch != 0) && ((pcVar10 & 0xfc00) == 0xd800)) {\n                pcVar10 = *var_4h;\n                var_14h = pcVar10;\n                if ((pcVar10 & 0xfc00) == 0xd800) {\n                    var_4h = var_4h + 1;\n                    pcVar10 = ((pcVar10 & 0x3ff) << 10 | *var_4h & 0x3ff) + 0x10000;\n                    var_14h = pcVar10;\n                }\n            }\n            if (var_18h < var_20h) {\n                var_70h = var_ch;\n            }\n            if ((arg_2ch != NULL) && (var_18h < var_20h)) {\n                iVar11 = var_20h - var_18h;\n                var_20h = var_18h;\n                *arg_2ch = *arg_2ch + (iVar11 >> 1);\n                pcVar10 = var_14h;\n            }\n            if (var_64h == NULL) {\n                if (pcVar10 == 0x5b) {\n                    cVar5 = var_4h[1];\n                    if ((((cVar5 != L':') && (cVar5 != L'.')) && (cVar5 != L'=')) ||\n                       (iVar11 = fcn.0049a854(),  iVar11 == 0)) goto code_r0x0041c6a4;\n                    var_30h = NULL;\n                    iVar11 = *(arg_28h + 8);\n                    if (var_4h[1] == L':') {\n                        pcVar14 = var_4h + 2;\n                        if (var_4h[2] == L'^') {\n                            var_30h = var_ch;\n                            var_38h = var_ch;\n                            pcVar14 = var_4h + 3;\n                        }\n                        var_4h = pcVar14;\n                        iVar8 = fcn.0049a809();\n                        if (-1 < iVar8) {\n                            if (((var_ch & var_2ch) != 0) && (iVar8 < 3)) {\n                                iVar8 = 0;\n                            }\n                            if ((var_2ch & 0x20000000) != 0) {\n                                cVar5 = L'\\0';\n                                iVar7 = *(((-(var_30h != NULL) & 0xe) + iVar8) * 4 + 0x4c3a80);\n                                pcVar14 = var_1ch;\n                                pcVar12 = var_24h;\n                                if (iVar7 != 0) {\n                                    var_4h = iVar7 + -2;\n                                    var_50h = var_74h + 1;\n                                    goto code_r0x0041c72b;\n                                }\n                                if (iVar8 == 8) {\n                                    cVar5 = L'\\v';\n                                }\n                                else {\n                                    if (iVar8 == 9) {\n                                        cVar5 = L'\\f';\n                                    }\n                                    else if (iVar8 != 10) {\n                                        if ((var_30h != NULL) && ((var_70h != NULL || (var_74h[2] != L']')))) {\n                                            *var_20h = L'\\x02';\n                                            var_20h = var_20h + 1;\n                                            iVar7 = fcn.0049b8c1();\n                                            var_20h = var_20h + iVar7;\n                                            iVar7 = fcn.0049b8c1();\n                                            var_20h = var_20h + iVar7;\n                                        }\n                                        goto code_r0x0045b5e9;\n                                    }\n                                    if (cVar5 == L'\\0') {\n                                        cVar5 = L'\\r';\n                                    }\n                                }\n                                *var_20h = var_30h + L'\\x03';\n                                var_20h[1] = cVar5;\n                                var_20h[2] = L'\\0';\n                                var_20h = var_20h + 3;\n                                var_4h = var_74h + 1;\n                                var_3ch = var_ch;\n                                goto code_r0x0041c72b;\n                            }\ncode_r0x0045b5e9:\n                            iVar8 = iVar8 * 0xc;\n                            fcn.00420db0(&var_160h, *(iVar8 + 0x4c4cb0) + iVar11, 0x20);\n                            pcVar14 = *(iVar8 + 0x4c4cb8);\n                            if (-1 < *(iVar8 + 0x4c4cb4)) {\n                                iVar11 = *(iVar8 + 0x4c4cb4) + iVar11;\n                                uVar9 = 0;\n                                if (pcVar14 < 0) {\n                                    do {\n                                        *(&var_160h + uVar9) = *(&var_160h + uVar9) & ~*(iVar11 + uVar9);\n                                        uVar9 = uVar9 + 1;\n                                    } while (uVar9 < 0x20);\n                                }\n                                else {\n                                    do {\n                                        *(&var_160h + uVar9) = *(&var_160h + uVar9) | *(iVar11 + uVar9);\n                                        uVar9 = uVar9 + 1;\n                                    } while (uVar9 < 0x20);\n                                }\n                            }\n                            pcVar19 = var_ch;\n                            if (pcVar14 < 0) {\n                                pcVar14 = -pcVar14;\n                            }\n                            if (pcVar14 == var_ch) {\n                                var_160h._1_1_ = var_160h._1_1_ & 0xc3;\n                            }\n                            else if (pcVar14 == 0x2) {\n                                var_155h._0_1_ = var_155h & 0x7f;\n                            }\n                            uVar9 = 0;\n                            if (var_30h == NULL) {\n                                do {\n                                    *(&var_e0h + uVar9) = *(&var_e0h + uVar9) | *(&var_160h + uVar9);\n                                    uVar9 = uVar9 + 1;\n                                } while (uVar9 < 0x20);\n                            }\n                            else {\n                                do {\n                                    *(&var_e0h + uVar9) = *(&var_e0h + uVar9) | ~*(&var_160h + uVar9);\n                                    uVar9 = uVar9 + 1;\n                                } while (uVar9 < 0x20);\n                            }\n                            var_4h = var_74h + 1;\n                            var_1ch = 0x2;\n                            pcVar14 = 0x2;\n                            goto code_r0x0041c725;\n                        }\n                        iVar11 = 0x1e;\n                        goto code_r0x0045c01b;\n                    }\n                    iVar11 = 0x1f;\n                    goto code_r0x0045c028;\n                }\n                if (pcVar10 != 0x5c) goto code_r0x0041c6a4;\n                iVar11 = fcn.0041d305(arg_ch, *(arg_28h + 0x40), var_2ch, var_ch);\n                uVar9 = 0;\n                if (*arg_ch != 0) goto code_r0x0045c057;\n                pcVar10 = var_bch;\n                if (iVar11 == 0) {\ncode_r0x0045b738:\n                    var_14h = pcVar10;\n                    goto code_r0x0041c6a4;\n                }\n                if (iVar11 == 5) {\n                    pcVar10 = 0x8;\n                    goto code_r0x0045b738;\n                }\n                if (iVar11 == 0xc) {\n                    *arg_ch = 0x47;\n                    goto code_r0x0045c057;\n                }\n                pcVar14 = var_1ch;\n                pcVar12 = var_24h;\n                if (iVar11 == 0x1a) {\n                    if ((var_4h[1] == L'\\\\') && (var_4h[2] == L'E')) {\n                        var_4h = var_4h + 2;\n                    }\n                    else {\n                        var_64h = var_ch;\n                    }\n                }\n                else if (iVar11 != 0x19) {\n                    var_24h = var_24h + 1;\n                    var_1ch = var_1ch + 1;\n                    iVar8 = *(arg_28h + 8);\n                    if (iVar11 < 0x11) {\n                        if (0xe < iVar11) {\n                            var_f0h = 0;\n                            var_f4h = 0;\n                            iVar8 = fcn.0049ae7f(&var_f0h, &var_f4h, arg_ch);\n                            if (iVar8 != 0) {\n                                *var_20h = ((iVar11 == 0x10) == var_134h) + L'\\x03';\n                                var_20h[1] = var_f0h;\n                                var_20h[2] = var_f4h;\n                                var_20h = var_20h + 3;\n                                var_3ch = var_ch;\n                                pcVar14 = var_1ch;\n                                goto code_r0x0041c725;\n                            }\n                            goto code_r0x0045c057;\n                        }\n                        if (iVar11 == 6) {\n                            var_38h = var_ch;\n                            uVar9 = 0;\n                            do {\n                                *(&var_e0h + uVar9) = *(&var_e0h + uVar9) | ~*(iVar8 + 0x40 + uVar9);\n                                uVar9 = uVar9 + 1;\n                                pcVar12 = var_24h;\n                                pcVar14 = var_1ch;\n                            } while (uVar9 < 0x20);\n                        }\n                        else if (iVar11 == 7) {\n                            uVar9 = 0;\n                            do {\n                                *(&var_e0h + uVar9) = *(&var_e0h + uVar9) | *(iVar8 + 0x40 + uVar9);\n                                uVar9 = uVar9 + 1;\n                                pcVar12 = var_24h;\n                                pcVar14 = var_1ch;\n                            } while (uVar9 < 0x20);\n                        }\n                        else if (iVar11 == 8) {\n                            var_38h = var_ch;\n                            do {\n                                puVar17 = &var_e0h + uVar9;\n                                *puVar17 = *puVar17 | ~puVar17[iVar8 - &var_e0h];\n                                uVar9 = uVar9 + 1;\n                                pcVar12 = var_24h;\n                                pcVar14 = var_1ch;\n                            } while (uVar9 < 0x20);\n                        }\n                        else if (iVar11 == 9) {\n                            do {\n                                puVar17 = &var_e0h + uVar9;\n                                *puVar17 = *puVar17 | puVar17[iVar8 - &var_e0h];\n                                uVar9 = uVar9 + 1;\n                                pcVar12 = var_24h;\n                                pcVar14 = var_1ch;\n                            } while (uVar9 < 0x20);\n                        }\n                        else if (iVar11 == 10) {\n                            var_38h = var_ch;\n                            uVar9 = 0;\n                            do {\n                                *(&var_e0h + uVar9) = *(&var_e0h + uVar9) | ~*(iVar8 + 0xa0 + uVar9);\n                                uVar9 = uVar9 + 1;\n                                pcVar12 = var_24h;\n                                pcVar14 = var_1ch;\n                            } while (uVar9 < 0x20);\n                        }\n                        else {\n                            if (iVar11 != 0xb) goto code_r0x0045b97a;\n                            uVar9 = 0;\n                            do {\n                                *(&var_e0h + uVar9) = *(&var_e0h + uVar9) | *(iVar8 + 0xa0 + uVar9);\n                                uVar9 = uVar9 + 1;\n                                pcVar12 = var_24h;\n                                pcVar14 = var_1ch;\n                            } while (uVar9 < 0x20);\n                        }\n                    }\n                    else if (iVar11 == 0x12) {\n                        pcVar22 = 0x4c5410;\ncode_r0x0045b55c:\n                        fcn.0049a512(var_2ch, arg_28h, pcVar22);\n                        pcVar12 = var_24h;\n                        pcVar14 = var_1ch;\n                    }\n                    else {\n                        if (iVar11 == 0x13) {\n                            pcVar22 = 0x4c5410;\n                        }\n                        else {\n                            if (iVar11 == 0x14) {\n                                pcVar22 = str._n_v_f_r;\n                                goto code_r0x0045b55c;\n                            }\n                            if (iVar11 != 0x15) {\n                                if (iVar11 - 0x1dU < 6) {\n                                    var_50h = var_4h;\n                                    var_4h = *((iVar11 - 0x1dU) * 4 + 0x4c3a60) + -2;\n                                    pcVar14 = var_1ch;\n                                    goto code_r0x0041c725;\n                                }\ncode_r0x0045b97a:\n                                if ((var_2ch & 0x40) == 0) {\n                                    pcVar10 = *var_4h;\n                                    var_14h = pcVar10;\n                                    goto code_r0x0041c6a4;\n                                }\n                                *arg_ch = 7;\n                                goto code_r0x0045c057;\n                            }\n                            pcVar22 = str._n_v_f_r;\n                        }\n                        fcn.0049a3fd(var_2ch, arg_28h, pcVar22, 0xffffffff);\n                        pcVar12 = var_24h;\n                        pcVar14 = var_1ch;\n                    }\n                }\n            }\n            else {\n                if ((pcVar10 == 0x5c) && (var_4h[1] == L'E')) {\n                    var_4h = var_4h + 1;\n                    var_64h = NULL;\n                    pcVar12 = pcVar19;\n                    pcVar14 = var_1ch;\n                    goto code_r0x0041c72b;\n                }\ncode_r0x0041c6a4:\n                cVar5 = var_4h[1];\n                for (pcVar14 = var_4h; (cVar5 == L'\\\\' && (pcVar10 = var_14h,  pcVar14[2] == L'E'));\n                    pcVar14 = pcVar14 + 2) {\n                    var_64h = NULL;\n                    cVar5 = pcVar14[3];\n                }\n                if ((pcVar10 == 0xd) || (pcVar10 == 0xa)) {\n                    *(arg_28h + 100) = *(arg_28h + 100) | 0x800;\n                }\n                if ((var_64h == NULL) && (pcVar14[1] == L'-')) {\n                    var_4h = pcVar14 + 2;\n                    if (*var_4h == L'\\\\') {\n                        do {\n                            if (var_4h[1] != L'E') break;\n                            var_4h = var_4h + 2;\n                        } while (*var_4h == L'\\\\');\n                        cVar5 = *var_4h;\n                        pcVar19 = var_4h;\n                        while( true ) {\n                            var_4h = pcVar19;\n                            if ((cVar5 != L'\\\\') || (pcVar19[1] != L'Q')) goto code_r0x0045ba5e;\n                            var_4h = pcVar19 + 2;\n                            if ((*var_4h != L'\\\\') || (pcVar19[3] != L'E')) break;\n                            pcVar19 = pcVar19 + 4;\n                            cVar5 = *pcVar19;\n                        }\n                        var_64h = var_ch;\n                    }\ncode_r0x0045ba5e:\n                    cVar5 = *var_4h;\n                    pcVar19 = cVar5;\n                    pcVar10 = var_14h;\n                    if ((cVar5 == L'\\0') || ((var_64h == NULL && (cVar5 == var_138h)))) goto code_r0x0041c6dd;\n                    var_a8h = pcVar19;\n                    if ((var_5ch != 0) && ((pcVar19 & 0xfc00) == 0xd800)) {\n                        pcVar14 = var_4h + 1;\n                        var_4h = var_4h + 1;\n                        var_a8h = ((pcVar19 & 0x3ff) << 10 | *pcVar14 & 0x3ff) + 0x10000;\n                    }\n                    if (var_64h == NULL) {\n                        if (var_a8h == 0x5c) {\n                            iVar11 = fcn.0041d305(arg_ch, *(arg_28h + 0x40), var_2ch, var_ch);\n                            if (*arg_ch != 0) goto code_r0x0045c057;\n                            if (iVar11 != 0) {\n                                if (iVar11 != 5) goto code_r0x0045bb41;\n                                var_a8h = 0x8;\n                            }\n                        }\n                        else if (((var_a8h == 0x5b) &&\n                                 (((cVar5 = var_4h[1],  cVar5 == L':' || (cVar5 == L'.')) || (cVar5 == L'=')))) &&\n                                (iVar11 = fcn.0049a854(),  iVar11 != 0)) {\ncode_r0x0045bb41:\n                            *arg_ch = 0x53;\n                            goto code_r0x0045c057;\n                        }\n                    }\n                    if (var_a8h < var_14h) {\n                        *arg_ch = 8;\n                        goto code_r0x0045c057;\n                    }\n                    pcVar10 = var_14h;\n                    pcVar14 = var_4h;\n                    if (var_a8h == var_14h) goto code_r0x0041c6dd;\n                    var_1ch = 0x2;\n                    pcVar19 = var_a8h;\n                    if ((var_a8h == 0xd) || (var_a8h == 0xa)) {\n                        *(arg_28h + 100) = *(arg_28h + 100) | 0x800;\n                    }\n                }\n                else {\ncode_r0x0041c6dd:\n                    var_4h = pcVar14;\n                    var_1ch = var_80h;\n                    if (var_80h < 2) {\n                        var_1ch = var_80h + 1;\n                    }\n                    pcVar19 = pcVar10;\n                    if (((var_64h == NULL) && (var_3ch == NULL)) && ((var_1ch == var_ch && (var_4h[1] == L']')))) {\n                        var_84h = var_60h;\n                        var_4h = var_4h + 1;\n                        var_70h = var_54h;\n                        if (var_10h == NULL) {\n                            if ((var_5ch != 0) && (0xffff < pcVar10)) goto code_r0x0045aa6a;\n                            var_10ch._0_2_ = pcVar10;\n                            pcVar12 = var_ch;\n                            goto code_r0x0041c04c;\n                        }\n                        if (var_34h == 0xfffffffe) {\n                            var_34h = 0xffffffff;\n                        }\n                        var_68h = var_34h;\n                        var_7ch = var_6ch;\n                        if (((var_5ch != 0) && ((var_ch & var_2ch) != 0)) &&\n                           (uVar1 = *(*((*(pcVar10 / 0x80 + 0x4bff60) * 0x80 + pcVar10 % 0x80) * 2 + 0x4b1c60) * 8 +\n                                     0x4af413),  uVar1 != 0)) {\n                            *var_8h = L'\\x0f';\n                            var_8h[1] = L'\\t';\n                            var_8h[2] = uVar1;\n                            var_8h = var_8h + 3;\n                            goto code_r0x0041cc56;\n                        }\n                        *var_8h = (var_2ch & var_ch) + L'\\x1f';\n                        var_8h = var_8h + 1;\n                        if ((var_5ch == 0) || (pcVar10 < 0x10000)) {\n                            *var_8h = pcVar10;\n                            goto code_r0x0041cce9;\n                        }\n                        iVar11 = fcn.0049b8c1();\n                        var_8h = var_8h + iVar11;\n                        goto code_r0x0041cc56;\n                    }\n                }\n                pcVar14 = var_1ch;\n                iVar11 = fcn.0041ccf0(var_2ch, arg_28h, pcVar10, pcVar19);\n                pcVar19 = iVar11 + var_30h;\ncode_r0x0041c725:\n                var_24h = pcVar19;\n                pcVar12 = var_24h;\n            }\ncode_r0x0041c72b:\n            pcVar4 = var_10h;\n            pcVar15 = var_3ch;\n            pcVar19 = var_50h;\n            var_4h = var_4h + 1;\n            pcVar10 = *var_4h;\n            var_14h = pcVar10;\n            if (pcVar10 == NULL) {\n                if (var_50h == NULL) goto code_r0x0045bbc1;\n                var_50h = NULL;\n                var_4h = pcVar19 + 1;\n                pcVar10 = *var_4h;\n                var_14h = pcVar10;\n                if (pcVar10 == NULL) goto code_r0x0045bbc1;\n            }\n            pcVar19 = pcVar12;\n            var_14h = pcVar10;\n        } while ((pcVar10 != 0x5d) || (var_64h != NULL));\n        pcVar14 = var_ch;\n        if (var_20h <= var_18h) {\n            pcVar14 = var_70h;\n        }\n        if (var_34h == 0xfffffffe) {\n            var_34h = 0xffffffff;\n        }\n        var_7ch = var_6ch;\n        var_84h = var_60h;\n        var_70h = var_54h;\n        var_68h = var_34h;\n        if (pcVar14 != NULL) {\n            if (var_3ch == NULL) {\n                if (var_38h != NULL) {\n                    if ((var_2ch & 0x20000000) == 0) goto code_r0x0041c795;\n                    goto code_r0x0045bd4f;\n                }\n            }\n            else {\ncode_r0x0045bd4f:\n                if (((var_38h != NULL) && (var_10h == NULL)) && ((var_2ch & 0x20000000) == 0)) {\n                    *var_20h = L'\\x02';\n                    if (var_5ch == 0) {\n                        var_20h[1] = L'\u0100';\n                        var_20h[2] = L'\\xffff';\n                        var_20h = var_20h + 3;\n                    }\n                    else {\n                        var_20h = var_20h + 1;\n                        iVar11 = fcn.0049b8c1();\n                        var_20h = var_20h + iVar11;\n                        iVar11 = fcn.0049b8c1();\n                        var_20h = var_20h + iVar11;\n                    }\n                }\n            }\n            *var_20h = L'\\0';\n            pcVar14 = var_20h + 1;\n            var_20h = pcVar14;\n            *var_8h = L'p';\n            pcVar19 = var_8h + 2;\n            cVar5 = pcVar4 != NULL;\n            *pcVar19 = cVar5;\n            if (pcVar15 != NULL) {\n                cVar5 = cVar5 | 4;\n                *pcVar19 = cVar5;\n            }\n            if (0 < var_24h) {\n                *pcVar19 = cVar5 | 2;\n                pcVar19 = var_8h + 3;\n                fcn.004226b0(var_8h + 0x13, pcVar19, pcVar14 - pcVar19 & 0xfffffffe);\n                if ((pcVar4 != NULL) && (pcVar15 == NULL)) {\n                    uVar9 = 0;\n                    do {\n                        *(&var_e0h + uVar9) = ~*(&var_e0h + uVar9);\n                        uVar9 = uVar9 + 1;\n                    } while (uVar9 < 0x20);\n                }\n                fcn.00420db0(pcVar19, &var_e0h, 0x20);\n                pcVar14 = var_20h + 0x10;\n            }\n            var_8h = pcVar14;\n            var_28h[1] = pcVar14 - var_28h >> 1;\n            pcVar19 = var_8h;\n            goto code_r0x0041c14f;\n        }\ncode_r0x0041c795:\n        if (arg_2ch != NULL) {\n            *arg_2ch = *arg_2ch + (var_20h - var_18h >> 1);\n        }\n        *var_8h = (var_10h != var_38h) + L'n';\n        pcVar14 = var_8h + 1;\n        var_8h = pcVar14;\n        if (arg_2ch == NULL) {\n            if (var_10h != NULL) {\n                uVar9 = 0;\n                do {\n                    *(&var_e0h + uVar9) = ~*(&var_e0h + uVar9);\n                    uVar9 = uVar9 + 1;\n                } while (uVar9 < 0x20);\n            }\n            fcn.00420db0(pcVar14, &var_e0h, 0x20);\n        }\n        iVar11 = 0x20;\ncode_r0x0041c32d:\n        var_8h = var_8h + iVar11;\n    }\n    pcVar19 = var_8h;\ncode_r0x0041c14f:\n    pcVar14 = var_4h + 1;\n    var_4h = pcVar14;\n    goto code_r0x0041c15a;\ncode_r0x00459301:\n    pcVar19 = *ppcVar20;\n    ppcVar20 = ppcVar20 + 3;\n    var_10h = var_10h + 1;\n    var_3ch = var_3ch + 1 + pcVar19;\n    if (0x4c4e7b < ppcVar20) goto code_r0x00459450;\n    goto code_r0x004592eb;\ncode_r0x00459774:\n    var_4h = var_4h + 1;\n    uVar9 = cVar5;\n    cVar5 = *var_4h;\n    iVar11 = uVar9 + iVar11 * 10 + -0x30;\n    goto joined_r0x0045975c;\ncode_r0x0045abad:\n    var_4h = var_4h + 1;\n    uVar9 = cVar6;\n    cVar6 = *var_4h;\n    pcVar14 = uVar9 + pcVar14 * 10 + -0x30;\n    if (cVar6 < 0x30) goto code_r0x0045abd3;\n    goto code_r0x0045ab99;\n}\n",
        "token_count": 32871
    },
    "0041cdaf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041cdaf(uint arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint16_t uVar1;\n    bool bVar2;\n    uint16_t *puVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint16_t *puVar6;\n    uint16_t *in_EDX;\n    uint16_t *puVar7;\n    uint16_t *puVar8;\n    uint32_t uVar9;\n    int32_t *var_10h;\n    uint16_t *var_ch;\n    uint16_t *var_8h;\n    uint16_t *var_4h;\n    \n    var_4h = in_EDX;\n    puVar3 = fcn.0041d0b1();\n    if (puVar3 < in_EDX) {\n        do {\n            uVar1 = *puVar3;\n            uVar9 = uVar1;\n            if (uVar9 == 0x7d) {\n                do {\n                    puVar3 = puVar3 + puVar3[1];\n                } while (*puVar3 == 0x77);\n                goto code_r0x0045c40e;\n            }\n            if (uVar9 == 0x75) {\n                puVar8 = *(arg_ch + 0x14) + puVar3[1] * 2;\n                puVar6 = *(arg_ch + 0x10);\n                puVar7 = puVar8;\n                if (puVar6 != NULL) {\n                    if (puVar6 < *(arg_ch + 0x20)) {\n                        do {\n                            if (*puVar6 == puVar3 + (2 - *(arg_ch + 0x14)) >> 1) {\n                                return 1;\n                            }\n                            puVar6 = puVar6 + 1;\n                        } while (puVar6 < *(arg_ch + 0x20));\n                    }\n                    if (puVar8[1] == 0) {\n                        return 1;\n                    }\n                }\n                do {\n                    puVar7 = puVar7 + puVar7[1];\n                } while (*puVar7 == 0x77);\n                var_8h = puVar8;\n                if ((puVar3 < puVar8) || (puVar7 < puVar3)) {\n                    piVar4 = arg_10h;\n                    if (arg_10h != NULL) {\n                        do {\n                            if (piVar4[1] == puVar8) break;\n                            piVar4 = *piVar4;\n                        } while (piVar4 != NULL);\n                        if (piVar4 != NULL) goto code_r0x0045c40e;\n                    }\n                    var_10h = arg_10h;\n                    var_ch = puVar8;\n                    while (iVar5 = fcn.0041cdaf(arg_8h, arg_ch, &var_10h),  iVar5 == 0) {\n                        puVar8 = puVar8 + puVar8[1];\n                        if (*puVar8 != 0x77) {\n                            return 0;\n                        }\n                    }\n                }\n                goto code_r0x0045c40e;\n            }\n            if ((((uVar1 == 0x92) || (uVar1 == 0x93)) || (uVar1 == 0xa1)) || (uVar1 == 0x94)) {\n                puVar3 = puVar3 + *(uVar9 + 0x4c2160);\n                do {\n                    puVar3 = puVar3 + puVar3[1];\n                } while (*puVar3 == 0x77);\n                goto code_r0x0045c40e;\n            }\n            if (((uVar1 == 0x88) || (uVar1 == 0x89)) || ((uVar1 == 0x8a || (uVar1 == 0x8b)))) {\n                do {\n                    puVar3 = puVar3 + puVar3[1];\n                } while (*puVar3 == 0x77);\n                goto code_r0x0045c40e;\n            }\n            if (((uVar1 == 0x83) || (uVar1 == 0x84)) ||\n               (((uVar1 == 0x85 || (((uVar1 == 0x86 || (uVar1 == 0x81)) || (uVar1 == 0x82)))) || (uVar1 == 0x87)))) {\ncode_r0x0045c372:\n                if (puVar3[1] == 0) {\n                    return 1;\n                }\n                if ((uVar1 != 0x87) || (puVar3[puVar3[1]] == 0x77)) {\n                    bVar2 = false;\n                    do {\n                        if ((!bVar2) && (iVar5 = fcn.0041cdaf(arg_8h, arg_ch, arg_10h),  iVar5 != 0)) {\n                            bVar2 = true;\n                        }\n                        puVar3 = puVar3 + puVar3[1];\n                    } while (*puVar3 == 0x77);\n                    if (!bVar2) {\n                        return 0;\n                    }\n                }\n                goto code_r0x0045c40e;\n            }\n    // switch table (150 cases) at 0x41ceef\n            switch(uVar9) {\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xb:\n            case 0xc:\n            case 0xd:\n            case 0xe:\n            case 0xf:\n            case 0x10:\n            case 0x11:\n            case 0x12:\n            case 0x13:\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x1d:\n            case 0x1e:\n            case 0x1f:\n            case 0x20:\n            case 0x23:\n            case 0x24:\n            case 0x29:\n            case 0x2b:\n            case 0x30:\n            case 0x31:\n            case 0x36:\n            case 0x38:\n            case 0x3d:\n            case 0x3e:\n            case 0x43:\n            case 0x45:\n            case 0x4a:\n            case 0x4b:\n            case 0x50:\n            case 0x52:\n            case 0x57:\n            case 0x58:\n            case 0x5d:\n            case 0x5f:\n                goto code_r0x0041cecf;\n            case 0x17:\n            case 0x18:\n            case 0x19:\n            case 0x1a:\n            case 0x1b:\n            case 0x1c:\n            case 0x62:\n            case 99:\n            case 100:\n            case 0x65:\n            case 0x66:\n            case 0x67:\n            case 0x68:\n            case 0x69:\n            case 0x6a:\n            case 0x6b:\n            case 0x6c:\n            case 0x6d:\n            case 0x71:\n            case 0x72:\n            case 0x73:\n            case 0x74:\n            case 0x75:\n            case 0x76:\n            case 0x7c:\n            case 0x7d:\n            case 0x7e:\n            case 0x7f:\n            case 0x80:\n            case 0x81:\n            case 0x82:\n            case 0x83:\n            case 0x84:\n            case 0x85:\n            case 0x86:\n            case 0x87:\n            case 0x88:\n            case 0x89:\n            case 0x8a:\n            case 0x8b:\n            case 0x8c:\n            case 0x8d:\n            case 0x8e:\n            case 0x8f:\n            case 0x90:\n            case 0x91:\n            case 0x92:\n            case 0x93:\n            case 0x94:\n            case 0x96:\n            case 0x98:\n            case 0x9a:\n                break;\n            case 0x21:\n            case 0x22:\n            case 0x25:\n            case 0x26:\n            case 0x2a:\n            case 0x2c:\n            case 0x2e:\n            case 0x2f:\n            case 0x32:\n            case 0x33:\n            case 0x37:\n            case 0x39:\n            case 0x3b:\n            case 0x3c:\n            case 0x3f:\n            case 0x40:\n            case 0x44:\n            case 0x46:\n            case 0x48:\n            case 0x49:\n            case 0x4c:\n            case 0x4d:\n            case 0x51:\n            case 0x53:\n                break;\n            case 0x27:\n            case 0x28:\n            case 0x2d:\n            case 0x34:\n            case 0x35:\n            case 0x3a:\n            case 0x41:\n            case 0x42:\n            case 0x47:\n            case 0x4e:\n            case 0x4f:\n            case 0x54:\n                break;\n            case 0x55:\n            case 0x56:\n            case 0x59:\n            case 0x5a:\n            case 0x5e:\n            case 0x60:\n                break;\n            case 0x5b:\n            case 0x5c:\n            case 0x61:\n                break;\n            case 0x6e:\n            case 0x6f:\n                iVar5 = 0x22;\n                goto code_r0x0041ced7;\n            case 0x70:\n                iVar5 = puVar3[1] * 2;\ncode_r0x0041ced7:\n                switch(*(puVar3 + iVar5)) {\n                case 0x62:\n                case 99:\n                case 0x66:\n                case 0x67:\n                case 0x6a:\n                case 0x6c:\n                    break;\n                default:\ncode_r0x0041cecf:\n                    return 0;\n                case 0x68:\n                case 0x69:\n                case 0x6d:\n                    if (*(puVar3 + iVar5 + 2) != 0) {\n                        return 0;\n                    }\n                }\n                break;\n            case 0x77:\n            case 0x78:\n            case 0x79:\n            case 0x7a:\n            case 0x7b:\n                goto code_r0x0041cecf;\n            case 0x95:\n            case 0x97:\n            case 0x99:\n            case 0x9b:\n                break;\n            default:\n                goto code_r0x0045c372;\n            }\ncode_r0x0045c40e:\n            puVar3 = fcn.0041d0b1();\n        } while (puVar3 < var_4h);\n    }\ncode_r0x0041cecf:\n    return 1;\n}\n",
        "token_count": 2550
    },
    "0041cfad": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041cfad(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    int16_t *in_ECX;\n    uint32_t in_EDX;\n    uint var_4h;\n    \n    do {\n        piVar2 = fcn.0041d0b1();\n        iVar1 = *piVar2;\n        iVar3 = arg_ch;\n        if ((((iVar1 == 0x83) || (iVar1 == 0x84)) || (iVar1 == 0x88)) ||\n           ((((iVar1 == 0x89 || (iVar1 == 0x85)) || ((iVar1 == 0x86 || ((iVar1 == 0x8a || (iVar1 == 0x8b)))))) ||\n            (iVar1 == 0x7d)))) {\ncode_r0x0045c4aa:\n            iVar3 = fcn.0041cfad(arg_8h, iVar3);\njoined_r0x0045c4b6:\n            if (iVar3 == 0) {\n                return 0;\n            }\n        }\n        else {\n            if (iVar1 == 0x87) {\n                if (piVar2[piVar2[1]] != 0x77) {\n                    return 0;\n                }\n                goto code_r0x0045c4aa;\n            }\n            if ((iVar1 == 0x81) || (iVar1 == 0x82)) {\n                iVar3 = arg_ch + 1;\n                goto code_r0x0045c4aa;\n            }\n            if (((iVar1 == 0x55) || (iVar1 == 0x56)) || (iVar1 == 0x5e)) {\n                if (piVar2[1] != 0xd) {\n                    return 0;\n                }\n                if ((*(arg_8h + 0x50) & in_EDX) != 0) {\n                    return 0;\n                }\n                if (0 < arg_ch) {\n                    return 0;\n                }\n                iVar3 = *(arg_8h + 0x70);\n                goto joined_r0x0045c4b6;\n            }\n            if (((iVar1 != 1) && (iVar1 != 2)) && (iVar1 != 0x1b)) {\n                return 0;\n            }\n        }\n        in_ECX = in_ECX + in_ECX[1];\n        if (*in_ECX != 0x77) {\n            return 1;\n        }\n    } while( true );\n}\n",
        "token_count": 576
    },
    "0041d305": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041d305(uint *arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint16_t *puVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    uint16_t uVar4;\n    uint16_t **in_ECX;\n    uint32_t *in_EDX;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    int32_t iStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint16_t *var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint16_t *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar8 = *in_ECX;\n    uVar5 = arg_10h & 0x800;\n    iStack68 = 0;\n    var_ch = puVar8[1];\n    var_1ch = puVar8 + 2;\n    if ((uVar5 != 0) && ((var_ch & 0xfc00) == 0xd800)) {\n        var_ch = ((var_ch & 0x3ff) << 10 | *var_1ch & 0x3ff) + 0x10000;\n        var_1ch = puVar8 + 3;\n    }\n    puVar8 = var_1ch + -1;\n    uVar7 = var_ch;\n    if (var_ch == 0) {\n        *arg_8h = 1;\n        goto code_r0x0041d393;\n    }\n    if (0x4a < var_ch - 0x30) goto code_r0x0041d393;\n    var_14h = var_ch - 0x30;\n    uVar3 = *(var_14h * 2 + 0x4b1ba8);\n    puVar9 = puVar8;\n    if (uVar3 == 0) {\n        if (var_ch < 0x68) {\n            if (var_ch == 0x67) {\n                if (arg_14h != 0) goto code_r0x0041d393;\n                uVar4 = *var_1ch;\n                if ((uVar4 == 0x3c) || (uVar4 == 0x27)) {\n                    iStack68 = 0x1b;\n                    goto code_r0x0041d393;\n                }\n                if (uVar4 == 0x7b) {\n                    puVar9 = var_1ch + 1;\n                    uVar4 = *puVar9;\n                    while (((uVar4 != 0 && (uVar4 != 0x7d)) && ((uVar4 == 0x2d || ((0x2f < uVar4 && (uVar4 < 0x3a)))))))\n                    {\n                        puVar9 = puVar9 + 1;\n                        uVar4 = *puVar9;\n                    }\n                    if ((uVar4 != 0) && (uVar4 != 0x7d)) {\n                        iStack68 = 0x1c;\n                        goto code_r0x0041d393;\n                    }\n                    bVar2 = true;\n                    puVar8 = var_1ch;\n                }\n                else {\n                    bVar2 = false;\n                }\n                iStack68 = 0;\n                puVar1 = puVar8 + 1;\n                if (*puVar1 == 0x2d) {\n                    puVar8 = puVar8 + 1;\n                }\n                var_14h = 0;\n                while( true ) {\n                    uVar4 = puVar8[1];\n                    if ((uVar4 < 0x30) || (0x39 < uVar4)) break;\n                    puVar9 = puVar8;\n                    if (0xccccccb < var_14h) goto code_r0x0045c907;\n                    var_14h = var_14h * 10 + (uVar4 - 0x30);\n                    puVar8 = puVar8 + 1;\n                }\n                if ((bVar2) && (puVar8 = puVar8 + 1,  *puVar8 != 0x7d)) {\n                    *arg_8h = 0x39;\n                    goto code_r0x0041d393;\n                }\n                if (var_14h == 0) {\n                    *arg_8h = 0x3a;\n                    goto code_r0x0041d393;\n                }\n                puVar9 = puVar8;\n                if (*puVar1 == 0x2d) {\n                    if (arg_ch < var_14h) {\n                        *arg_8h = 0xf;\n                        goto code_r0x0041d393;\n                    }\n                    var_14h = (arg_ch - var_14h) + 1;\n                }\n                goto code_r0x0041d388;\n            }\n            if (var_ch == 0x30) {\ncode_r0x0045c772:\n                uVar7 = var_ch - 0x30;\n                do {\n                    uVar3 = uVar3 + 1;\n                    puVar9 = puVar8 + 1;\n                    if (7 < *puVar9 - 0x30) break;\n                    puVar8 = puVar8 + 1;\n                    uVar7 = (*puVar9 - 0x30) + uVar7 * 8;\n                } while (uVar3 < 2);\n                goto code_r0x0041d393;\n            }\n            if (var_ch < 0x31) {\ncode_r0x0045c9f9:\n                if ((arg_10h & 0x40) != 0) {\n                    *arg_8h = 3;\n                }\n                goto code_r0x0041d393;\n            }\n            if (var_ch < 0x3a) {\n                if (arg_14h == 0) {\n                    if (0x2f < *var_1ch) {\n                        uVar4 = *var_1ch;\n                        var_10h = var_1ch;\n                        do {\n                            if (0x39 < uVar4) break;\n                            if (0xccccccb < var_14h) goto code_r0x0045c7ae;\n                            var_14h = (uVar4 - 0x30) + var_14h * 10;\n                            uVar4 = var_10h[1];\n                            puVar9 = var_10h;\n                            var_10h = var_10h + 1;\n                        } while (0x2f < uVar4);\n                    }\n                    if ((var_14h < 8) || (var_14h <= arg_ch)) goto code_r0x0041d388;\n                }\n                var_ch = *puVar8;\n                uVar7 = var_ch;\n                if (0x37 < var_ch) goto code_r0x0041d393;\n                goto code_r0x0045c772;\n            }\n            if (var_ch == 0x4c) goto code_r0x0045cd59;\n            if (var_ch != 0x55) {\n                if (var_ch == 99) {\n                    uVar7 = *var_1ch;\n                    if (uVar7 == 0) {\n                        *arg_8h = 2;\n                        puVar8 = var_1ch;\n                    }\n                    else if (uVar7 < 0x80) {\n                        if (uVar7 - 0x61 < 0x1a) {\n                            uVar7 = uVar7 - 0x20;\n                        }\n                        uVar7 = uVar7 ^ 0x40;\n                        puVar8 = var_1ch;\n                    }\n                    else {\n                        *arg_8h = 0x44;\n                        puVar8 = var_1ch;\n                    }\n                    goto code_r0x0041d393;\n                }\n                goto code_r0x0045c9f9;\n            }\n            uVar5 = arg_10h & 0x2000000;\n            goto code_r0x0045cd7e;\n        }\n        if (var_ch == 0x6c) {\ncode_r0x0045cd59:\n            *arg_8h = 0x25;\n            goto code_r0x0041d38a;\n        }\n        if (var_ch == 0x6f) {\n            if (*var_1ch != 0x7b) {\n                *arg_8h = 0x51;\n                goto code_r0x0041d393;\n            }\n            uVar4 = var_1ch[1];\n            if (uVar4 == 0x7d) {\ncode_r0x0045cab2:\n                *arg_8h = 0x56;\n                goto code_r0x0041d393;\n            }\n            puVar8 = var_1ch + 1;\n            bVar2 = false;\n            uVar7 = 0;\n            while( true ) {\n                if ((uVar4 < 0x30) || (0x37 < uVar4)) goto code_r0x0045cd10;\n                puVar8 = puVar8 + 1;\n                if (((uVar7 != 0) || (uVar4 != 0x30)) &&\n                   (uVar7 = (uVar4 - 0x30) + uVar7 * 8,  (-(uVar5 != 0) & 0x100000) + 0xffff < uVar7)) break;\n                uVar4 = *puVar8;\n            }\n            bVar2 = true;\ncode_r0x0045cd10:\n            uVar4 = *puVar8;\n            if (bVar2) {\n                while ((0x2f < uVar4 && (uVar4 < 0x38))) {\n                    puVar8 = puVar8 + 1;\n                    uVar4 = *puVar8;\n                }\ncode_r0x0045cb03:\n                iStack68 = 0;\n                *arg_8h = 0x22;\n                goto code_r0x0041d393;\n            }\n            if (uVar4 != 0x7d) {\n                *arg_8h = 0x50;\n                goto code_r0x0041d393;\n            }\ncode_r0x0045cb2e:\n            iStack68 = 0;\n            if ((uVar5 != 0) && (uVar7 - 0xd800 < 0x800)) {\n                *arg_8h = 0x49;\n            }\n            goto code_r0x0041d393;\n        }\n        if (var_ch != 0x75) {\n            if (var_ch != 0x78) goto code_r0x0045c9f9;\n            uVar4 = *var_1ch;\n            if ((arg_10h & 0x2000000) != 0) {\n                if ((((uVar4 < 0x100) && ((*(uVar4 + 0x4c3df0) & 8) != 0)) && (var_1ch[1] < 0x100)) &&\n                   ((*(var_1ch[1] + 0x4c3df0) & 8) != 0)) {\n                    uVar7 = 0;\n                    iStack68 = 2;\n                    do {\n                        puVar8 = puVar8 + 1;\n                        uVar5 = *puVar8;\n                        if (0x60 < *puVar8) {\n                            uVar5 = uVar5 - 0x20;\n                        }\n                        uVar7 = (uVar7 * 0x10 - ((-(uVar5 < 0x41) & 0xfffffff9) + 0x37)) + uVar5;\n                        iStack68 = iStack68 + -1;\n                    } while (iStack68 != 0);\n                }\n                goto code_r0x0041d393;\n            }\n            if (uVar4 != 0x7b) {\n                uVar7 = 0;\n                do {\n                    uVar3 = uVar3 + 1;\n                    uVar4 = puVar8[1];\n                    uVar5 = uVar4;\n                    iStack68 = 0;\n                    if ((0xff < uVar4) || ((*(uVar5 + 0x4c3df0) & 8) == 0)) break;\n                    puVar8 = puVar8 + 1;\n                    if (0x60 < uVar4) {\n                        uVar5 = uVar5 - 0x20;\n                    }\n                    uVar7 = (uVar7 * 0x10 - ((-(uVar5 < 0x41) & 0xfffffff9) + 0x37)) + uVar5;\n                } while (uVar3 < 2);\n                goto code_r0x0041d393;\n            }\n            puVar8 = var_1ch + 1;\n            if (*puVar8 == 0x7d) goto code_r0x0045cab2;\n            uVar4 = *puVar8;\n            bVar2 = false;\n            uVar7 = 0;\njoined_r0x0045ca3c:\n            if ((0xff < uVar4) || (uVar3 = uVar4,  (*(uVar3 + 0x4c3df0) & 8) == 0)) goto code_r0x0045cada;\n            puVar8 = puVar8 + 1;\n            if ((uVar7 == 0) && (uVar4 == 0x30)) {\ncode_r0x0045cac0:\n                uVar4 = *puVar8;\n                goto joined_r0x0045ca3c;\n            }\n            if (0x60 < uVar4) {\n                uVar3 = uVar3 - 0x20;\n            }\n            uVar7 = (uVar7 * 0x10 - ((-(uVar3 < 0x41) & 0xfffffff9) + 0x37)) + uVar3;\n            if (uVar7 <= (-(uVar5 != 0) & 0x100000) + 0xffff) goto code_r0x0045cac0;\n            bVar2 = true;\ncode_r0x0045cada:\n            iStack68 = 0;\n            uVar4 = *puVar8;\n            if (bVar2) {\n                while ((uVar4 < 0x100 && ((*(uVar4 + 0x4c3df0) & 8) != 0))) {\n                    puVar8 = puVar8 + 1;\n                    uVar4 = *puVar8;\n                }\n                goto code_r0x0045cb03;\n            }\n            if (uVar4 != 0x7d) {\n                *arg_8h = 0x4f;\n                goto code_r0x0041d393;\n            }\n            goto code_r0x0045cb2e;\n        }\n        if ((arg_10h & 0x2000000) != 0) {\n            if ((((0xff < *var_1ch) || ((*(*var_1ch + 0x4c3df0) & 8) == 0)) || (0xff < var_1ch[1])) ||\n               ((((*(var_1ch[1] + 0x4c3df0) & 8) == 0 || (0xff < var_1ch[2])) ||\n                (((*(var_1ch[2] + 0x4c3df0) & 8) == 0 || ((0xff < var_1ch[3] || ((*(var_1ch[3] + 0x4c3df0) & 8) == 0))))\n                )))) goto code_r0x0041d393;\n            uVar7 = 0;\n            iVar6 = 4;\n            do {\n                puVar8 = puVar8 + 1;\n                uVar3 = *puVar8;\n                if (0x60 < *puVar8) {\n                    uVar3 = uVar3 - 0x20;\n                }\n                uVar7 = (uVar7 * 0x10 - ((-(uVar3 < 0x41) & 0xfffffff9) + 0x37)) + uVar3;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n            if ((-(uVar5 != 0) & 0x100000) + 0xffff < uVar7) {\n                *arg_8h = 0x4c;\n                goto code_r0x0041d393;\n            }\n            goto code_r0x0045cb2e;\n        }\n    }\n    else {\n        var_14h = uVar3;\n        uVar7 = uVar3;\n        if (0 < uVar3) goto code_r0x0041d393;\ncode_r0x0041d388:\n        iStack68 = -var_14h;\n        puVar8 = puVar9;\ncode_r0x0041d38a:\n        uVar7 = var_ch;\n        if ((iStack68 != 0xc) || (puVar8[1] != 0x7b)) goto code_r0x0041d393;\n        uVar5 = fcn.0049af93();\ncode_r0x0045cd7e:\n        uVar7 = var_ch;\n        if (uVar5 != 0) goto code_r0x0041d393;\n    }\n    *arg_8h = 0x25;\n    uVar7 = var_ch;\n    goto code_r0x0041d393;\n    while (puVar9 = puVar8 + 1,  uVar4 < 0x3a) {\ncode_r0x0045c907:\n        puVar8 = puVar9;\n        uVar4 = puVar8[1];\n        if (uVar4 < 0x30) break;\n    }\n    goto code_r0x0045c7b9;\n    while (puVar9 = puVar8 + 1,  uVar4 < 0x3a) {\ncode_r0x0045c7ae:\n        puVar8 = puVar9;\n        uVar4 = puVar8[1];\n        if (uVar4 < 0x30) break;\n    }\ncode_r0x0045c7b9:\n    iStack68 = 0;\n    *arg_8h = 0x3d;\ncode_r0x0041d393:\n    if (((arg_10h & 0x20000000) != 0) && (iStack68 - 6U < 6)) {\n        iStack68 = iStack68 + 0x17;\n    }\n    *in_ECX = puVar8;\n    *in_EDX = uVar7;\n    return iStack68;\n}\n",
        "token_count": 4288
    },
    "0041d3b5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0041d3b5(int32_t arg_8h, uint32_t *arg_ch, uint16_t *arg_10h, int32_t *arg_14h)\n\n{\n    uint32_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t uVar4;\n    uint8_t uVar5;\n    uint16_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t *puVar10;\n    uint32_t uVar11;\n    uint16_t *in_ECX;\n    uint in_EDX;\n    uint32_t *puVar12;\n    uint16_t *puVar13;\n    uint16_t *puVar14;\n    bool bVar15;\n    uint32_t var_48h;\n    int32_t var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t *var_ch;\n    uint16_t *var_8h;\n    uint32_t *var_4h;\n    \n    var_10h = 0;\n    if (*arg_14h == 0) {\ncode_r0x0041d43f:\n        return 0;\n    }\n    *arg_14h = *arg_14h + -1;\n    var_1ch = 0x83;\n    var_24h = 0x81;\n    var_28h = 0x82;\n    var_20h = 0x85;\n    uVar8 = 0;\n    var_14h = in_EDX;\ncode_r0x0041d3f6:\n    for (; uVar11 = var_10h,  uVar7 = *in_ECX,  puVar14 = in_ECX,  uVar7 == 0x76; in_ECX = in_ECX + 4) {\n    }\n    while (uVar7 == 0x77) {\n        puVar14 = puVar14 + puVar14[1];\n        uVar7 = *puVar14;\n    }\n    if (uVar7 < 0x84) {\n        if (0x80 < uVar7) goto code_r0x0045d557;\n        if (uVar7 == 0) {\ncode_r0x0045cdbe:\n            return arg_ch[1] != 0;\n        }\n        if (uVar7 == 0x78) {\n            if (arg_ch[1] == 0) {\n                return 0;\n            }\n            if ((0x7c < puVar14[-puVar14[1]]) && (puVar14[-puVar14[1]] < 0x83)) {\n                return uVar8 ^ 1;\n            }\n            in_ECX = puVar14 + 2;\n            goto code_r0x0041d3f6;\n        }\n        if (uVar7 == 0x7b) goto code_r0x0045cdbe;\n    }\n    else {\n        if (uVar7 == 0x85) {\ncode_r0x0045d557:\n            in_ECX = puVar14 + *(uVar7 + 0x4c2160);\n            for (puVar14 = puVar14 + puVar14[1]; *puVar14 == 0x77; puVar14 = puVar14 + puVar14[1]) {\n                iVar9 = fcn.0041d3b5(arg_8h, arg_ch, arg_10h, arg_14h);\n                if (iVar9 == 0) {\n                    return 0;\n                }\n                in_ECX = puVar14 + 2;\n            }\n            var_10h = 1;\n            uVar8 = 1;\n            goto code_r0x0041d3f6;\n        }\n        if (uVar7 - 0x92 < 2) {\n            puVar13 = puVar14 + 1;\n            uVar6 = *puVar13;\n            if ((((uVar6 != var_1ch) && (uVar6 != var_20h)) && (uVar6 != var_24h)) && (uVar6 != var_28h)) {\n                return 0;\n            }\n            do {\n                puVar13 = puVar13 + puVar13[1];\n            } while (*puVar13 == 0x77);\n            iVar9 = fcn.0041d3b5(arg_8h, arg_ch, arg_10h, arg_14h);\n            if (iVar9 == 0) {\n                return 0;\n            }\n            in_ECX = puVar14 + *(uVar7 + 0x4c2160);\n            uVar8 = uVar11;\n            goto code_r0x0041d3f6;\n        }\n    }\n    var_8h = fcn.0041d449(*(arg_8h + 4), &var_48h);\n    if (var_8h == NULL) {\n        return 0;\n    }\n    uVar11 = *arg_ch;\n    if (uVar11 == 0x1d) {\n        var_4h = arg_ch + 2;\n        var_ch = &var_48h;\n        puVar10 = &var_48h;\n        uVar11 = var_48h;\ncode_r0x0045ced4:\n        uVar7 = *var_4h;\n        puVar1 = puVar10 + 2;\n        var_ch = puVar10;\n        do {\n            if (0x6e < uVar11) {\n                if (uVar11 == 0x6f) {\n                    if (0xff < uVar7) {\n                        return 0;\n                    }\n                    goto code_r0x0045d197;\n                }\n                if (uVar11 != 0x70) {\n                    return 0;\n                }\n                iVar9 = fcn.0049b436(var_14h);\n                bVar15 = iVar9 == 0;\ncode_r0x0045d1c2:\n                puVar10 = var_ch;\n                if (!bVar15) {\n                    return 0;\n                }\n                goto code_r0x0045d1ce;\n            }\n    // switch table (26 cases) at 0x45d5ae\n            switch(uVar11) {\n            case 6:\n                if (0xff < uVar7) {\n                    return 0;\n                }\n                bVar15 = (*(uVar7 + *(arg_8h + 0xc)) & 4) == 0;\n                goto code_r0x0045cfa4;\n            case 7:\n                if (uVar7 < 0x100) {\n                    bVar15 = (*(uVar7 + *(arg_8h + 0xc)) & 4) == 0;\ncode_r0x0045cf7b:\n                    if (!bVar15) {\n                        return 0;\n                    }\n                }\n                break;\n            case 8:\n                if (0xff < uVar7) {\n                    return 0;\n                }\n                bVar15 = (*(uVar7 + *(arg_8h + 0xc)) & 1) == 0;\n                goto code_r0x0045cfa4;\n            case 9:\n                if (uVar7 < 0x100) {\n                    bVar15 = (*(uVar7 + *(arg_8h + 0xc)) & 1) == 0;\n                    goto code_r0x0045cf7b;\n                }\n                break;\n            case 10:\n                if (0xff < uVar7) {\n                    return 0;\n                }\n                bVar15 = (*(uVar7 + *(arg_8h + 0xc)) & 0x10) == 0;\n                goto code_r0x0045cfa4;\n            case 0xb:\n                if (uVar7 < 0xff) {\n                    bVar15 = (*(uVar7 + *(arg_8h + 0xc)) & 0x10) == 0;\n                    goto code_r0x0045cf7b;\n                }\n                break;\n            case 0xc:\n            case 0xd:\n            case 0xe:\n            case 0x16:\n            case 0x1a:\n            case 0x1b:\n            case 0x1c:\n            case 0x1e:\n                goto code_r0x0041d43f;\n            case 0xf:\n            case 0x10:\n                iVar9 = fcn.0049a629(puVar10[3], uVar11 == 0xf);\n                bVar15 = iVar9 == 0;\n                goto code_r0x0045cf52;\n            case 0x11:\n            case 0x15:\n            case 0x17:\n            case 0x19:\n                if (9 < uVar7) {\n                    if (uVar7 < 0xe) {\n                        return 0;\n                    }\n                    if (uVar7 == 0x85) {\n                        return 0;\n                    }\n                    if ((0x2027 < uVar7) && (uVar7 < 0x202a)) {\n                        return 0;\n                    }\n                }\n                break;\n            case 0x12:\n                if (uVar7 < 0x180f) {\n                    if ((((uVar7 != 0x180e) && (uVar7 != 9)) && (uVar7 != 0x20)) && (uVar7 != 0xa0)) {\n                        bVar15 = uVar7 == 0x1680;\n                        goto code_r0x0045cf7b;\n                    }\n                }\n                else {\n                    if (uVar7 < 0x2000) {\n                        return 0;\n                    }\n                    if (((0x200a < uVar7) && (uVar7 != 0x202f)) && (uVar7 != 0x205f)) {\n                        bVar15 = uVar7 == 0x3000;\n                        goto code_r0x0045cf7b;\n                    }\n                }\n                break;\n            case 0x13:\n                if (uVar7 < 0x180f) {\n                    if (uVar7 == 0x180e) {\n                        return 0;\n                    }\n                    if (uVar7 == 9) {\n                        return 0;\n                    }\n                    if (uVar7 == 0x20) {\n                        return 0;\n                    }\n                    if (uVar7 == 0xa0) {\n                        return 0;\n                    }\n                    bVar15 = uVar7 == 0x1680;\n                }\n                else {\n                    if (uVar7 < 0x2000) break;\n                    if (uVar7 < 0x200b) {\n                        return 0;\n                    }\n                    if (uVar7 == 0x202f) {\n                        return 0;\n                    }\n                    if (uVar7 == 0x205f) {\n                        return 0;\n                    }\n                    bVar15 = uVar7 == 0x3000;\n                }\ncode_r0x0045cfa4:\n                if (bVar15) {\n                    return 0;\n                }\n                break;\n            case 0x14:\n                if (uVar7 < 10) {\n                    return 0;\n                }\n                if (((0xd < uVar7) && (uVar7 != 0x85)) && (1 < uVar7 - 0x2028)) {\n                    return 0;\n                }\n                break;\n            case 0x18:\n                break;\n            case 0x1d:\n                uVar8 = *puVar1;\n                puVar12 = puVar1;\n                do {\n                    if (uVar7 == uVar8) {\n                        return 0;\n                    }\n                    puVar12 = puVar12 + 1;\n                    uVar8 = *puVar12;\n                    puVar10 = var_ch;\n                } while (uVar8 != 0xffffffff);\n                break;\n            case 0x1f:\n                uVar8 = *puVar1;\n                puVar10 = puVar1;\n                do {\n                    if (uVar7 == uVar8) break;\n                    puVar10 = puVar10 + 1;\n                    uVar8 = *puVar10;\n                } while (uVar8 != 0xffffffff);\n                bVar15 = uVar8 == 0xffffffff;\ncode_r0x0045cf52:\n                puVar10 = var_ch;\n                if (bVar15) {\n                    return 0;\n                }\n                break;\n            default:\ncode_r0x0045d197:\n                if (uVar7 < 0x100) {\n                    puVar14 = var_8h;\n                    if (puVar10 != &var_48h) {\n                        puVar14 = arg_10h;\n                    }\n                    bVar15 = (*((uVar7 >> 3) + *puVar1 * -2 + puVar14) & 1 << (uVar7 & 7)) == 0;\n                    goto code_r0x0045d1c2;\n                }\n            }\ncode_r0x0045d1ce:\n            var_4h = var_4h + 1;\n            uVar7 = *var_4h;\n            in_ECX = var_8h;\n            uVar8 = var_10h;\n        } while (uVar7 != 0xffffffff);\n        goto joined_r0x0045d54c;\n    }\n    if (var_48h == 0x1d) {\n        var_4h = &var_40h;\n        var_ch = arg_ch;\n        puVar10 = arg_ch;\n        goto code_r0x0045ced4;\n    }\n    in_ECX = var_8h;\n    uVar8 = var_10h;\n    if (uVar11 == 0x6e) {\n        puVar14 = arg_10h + -arg_ch[2];\n        puVar10 = &var_48h;\n        uVar11 = var_48h;\ncode_r0x0045d455:\n        bVar15 = false;\n        if (uVar11 < 0xb) {\n            if (uVar11 != 10) {\n                if (uVar11 == 6) {\n                    bVar15 = true;\n                }\n                else if (uVar11 != 7) {\n                    if (uVar11 == 8) {\n                        bVar15 = true;\n                    }\n                    else if (uVar11 != 9) {\n                        return 0;\n                    }\n                    puVar13 = *(arg_8h + 8);\n                    goto code_r0x0045d4a0;\n                }\n                puVar13 = *(arg_8h + 8) + 0x40;\n                goto code_r0x0045d4a0;\n            }\n            bVar15 = true;\ncode_r0x0045d494:\n            puVar13 = *(arg_8h + 8) + 0xa0;\ncode_r0x0045d4a0:\n            puVar2 = puVar14 + 0x10;\n            if (bVar15) {\n                iVar9 = puVar13 - puVar14;\n                do {\n                    puVar3 = iVar9 + puVar14;\n                    uVar4 = *puVar14;\n                    puVar14 = puVar14 + 1;\n                    if ((~*puVar3 & uVar4) != 0) {\n                        return 0;\n                    }\n                } while (puVar14 < puVar2);\n            }\n            else {\n                do {\n                    uVar4 = *puVar13;\n                    uVar5 = *puVar14;\n                    puVar13 = puVar13 + 1;\n                    puVar14 = puVar14 + 1;\n                    if ((uVar4 & uVar5) != 0) {\n                        return 0;\n                    }\n                } while (puVar14 < puVar2);\n            }\n            goto joined_r0x0045d54c;\n        }\n        if (uVar11 == 0xb) goto code_r0x0045d494;\n        if (uVar11 < 0x6e) {\n            return 0;\n        }\n        if (uVar11 < 0x70) {\n            puVar13 = var_8h;\n            if (puVar10 != &var_48h) {\n                puVar13 = arg_10h;\n            }\n            puVar13 = puVar13 + -puVar10[2];\n            goto code_r0x0045d4a0;\n        }\n        if (uVar11 != 0x70) {\n            return 0;\n        }\n        puVar13 = var_8h;\n        if (puVar10 != &var_48h) {\n            puVar13 = arg_10h;\n        }\n        uVar6 = puVar13[1 - puVar10[2]];\n        if ((uVar6 & 4) != 0) {\n            return 0;\n        }\n        if ((uVar6 & 2) != 0) {\n            puVar13 = puVar13 + (2 - puVar10[2]);\n            goto code_r0x0045d4a0;\n        }\n        if (var_44h == 0) {\n            return ~uVar6 & 1;\n        }\n    }\n    else {\n        if (var_48h == 0x6e) {\n            puVar14 = var_8h + -var_40h;\n            puVar10 = arg_ch;\n            goto code_r0x0045d455;\n        }\n        if ((uVar11 != 0x10) && (uVar11 != 0xf)) {\n            if (0x10 < uVar11 - 6) {\n                return 0;\n            }\n            if (0x14 < var_48h - 6) {\n                return 0;\n            }\n            if (*(uVar11 * 0x15 + 0x4c3bdc + var_48h) == '\\0') {\n                return 0;\n            }\n            goto joined_r0x0045d54c;\n        }\n        if (var_48h == 0x18) goto joined_r0x0045d54c;\n        if ((var_48h != 0x10) && (var_48h != 0xf)) {\n            return 0;\n        }\n        var_ch = uVar11 == var_48h;\n        var_4h = uVar11 == 0x10;\n        var_18h = var_48h == 0x10;\n        if ((uVar11 == 0x10) && (var_48h == 0x10)) {\n            bVar15 = true;\n        }\n        else {\n            bVar15 = false;\n        }\n        uVar7 = *(arg_ch[2] * 0xb + 0x4c4d60 + var_40h);\n        if (0x10 < uVar7 - 1) {\n            return 0;\n        }\n    // switch table (17 cases) at 0x45d606\n        switch(*(*(uVar7 + 0x45d629) * 4 + 0x45d606)) {\n        case 0x45d2a8:\n            bVar15 = (arg_ch[3] == var_3ch) != (uVar11 == var_48h);\n            break;\n        case 0x45d2bb:\n            bVar15 = uVar11 != var_48h;\n            break;\n        case 0x45d2c7:\n            if (var_48h != 0x10) {\n                return 0;\n            }\n            uVar11 = arg_ch[3];\n            uVar7 = var_3ch;\n            goto code_r0x0045d2e0;\n        case 0x45d2fd:\n            if (uVar11 != 0x10) {\n                return 0;\n            }\n            uVar7 = arg_ch[3];\n            uVar11 = var_3ch;\ncode_r0x0045d2e0:\n            bVar15 = *(uVar11 * 0x1e + 0x4c3af0 + uVar7) == var_ch;\ncode_r0x0045d2f2:\n            if (!bVar15) {\n                return 0;\n            }\n            goto joined_r0x0045d54c;\n        case 0x45d308:\n            if (var_48h != 0x10) {\n                return 0;\n            }\n            if ((var_3ch == *(L\"\\\\P{Xsp}\" + uVar7 * 2 + 6)) || (var_3ch == *(L\"\\\\P{Xsp}\" + uVar7 * 4 + 0xd)))\n            goto code_r0x0045d34e;\n            uVar4 = *(L\"\\\\P{Xsp}\" + uVar7 * 2 + 7);\ncode_r0x0045d342:\n            if ((var_3ch == uVar4) && (uVar11 == 0x10)) goto code_r0x0045d34e;\n            puVar10 = 0x1;\n            goto code_r0x0045d350;\n        case 0x45d355:\n            if (uVar11 != 0x10) {\n                return 0;\n            }\n            if (((arg_ch[3] == *(L\"\\\\P{Xsp}\" + uVar7 * 2)) || (arg_ch[3] == *(L\"\\\\P{Xsp}\" + uVar7 * 4 + 1))) ||\n               ((arg_ch[3] == *(L\"\\\\P{Xsp}\" + uVar7 * 2 + 1) && (var_48h == 0x10)))) {\n                uVar11 = 0;\n            }\n            else {\n                uVar11 = 1;\n            }\n            bVar15 = var_18h == uVar11;\n            goto code_r0x0045d2f2;\n        case 0x45d399:\n            if (var_48h != 0x10) {\n                return 0;\n            }\n            if ((*(*(uVar7 * 4 + 0x4c3c08) * 0x1e + 0x4c3af0 + var_3ch) != '\\0') &&\n               (*(*(uVar7 * 4 + 0x4c3c09) * 0x1e + 0x4c3af0 + var_3ch) != '\\0')) {\n                uVar4 = *(uVar7 * 4 + 0x4c3c0b);\n                goto code_r0x0045d342;\n            }\ncode_r0x0045d34e:\n            puVar10 = NULL;\ncode_r0x0045d350:\n            bVar15 = var_4h == puVar10;\n            goto code_r0x0045d2f2;\n        case 0x45d3d8:\n            if (uVar11 == 0x10) {\n                uVar11 = arg_ch[3];\n                if (((*(*(uVar7 * 4 + 0x4c3bfc) * 0x1e + 0x4c3af0 + uVar11) == '\\0') ||\n                    (*(*(uVar7 * 4 + 0x4c3bfd) * 0x1e + 0x4c3af0 + uVar11) == '\\0')) ||\n                   ((uVar11 == *(uVar7 * 4 + 0x4c3bff) && (var_48h == 0x10)))) {\n                    uVar11 = 0;\n                }\n                else {\n                    uVar11 = 1;\n                }\n                if (var_18h == uVar11) goto joined_r0x0045d54c;\n            }\n            bVar15 = false;\n        }\n        if (!bVar15) {\n            return 0;\n        }\njoined_r0x0045d54c:\n        var_10h = uVar8;\n        var_8h = in_ECX;\n        if (var_44h == 0) {\n            return 1;\n        }\n    }\n    goto code_r0x0041d3f6;\n}\n",
        "token_count": 5453
    },
    "0041d5dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041d5dc(int32_t arg_8h, uint32_t arg_ch, uint16_t *arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    if (arg_18h == 2) {\n        uVar2 = 0;\n        uVar3 = 0;\n        if (arg_ch <= arg_14h) {\n            arg_ch = arg_14h;\n        }\n        if (arg_ch != 0) {\n            arg_8h = arg_8h - arg_10h;\n            do {\n                uVar1 = *(arg_8h + arg_10h);\n                arg_ch = arg_ch - 1;\n                if (uVar1 != *arg_10h) {\n                    uVar2 = fcn.0042de4b(uVar1);\n                    uVar2 = uVar2 & 0xffff;\n                    uVar3 = fcn.0042de4b(*arg_10h);\n                    uVar3 = uVar3 & 0xffff;\n                    if (uVar2 != uVar3) break;\n                }\n                arg_10h = arg_10h + 1;\n            } while (arg_ch != 0);\n        }\n        if (uVar2 - uVar3 < 0) {\n            uVar2 = 0xffffffff;\n        }\n        else {\n            uVar2 = uVar2 != uVar3 && -1 < uVar2 - uVar3;\n        }\n    }\n    else {\n        if (arg_18h == 0) {\n            uVar4 = 0x400;\n        }\n        else {\n            uVar4 = 0x409;\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_CompareStringW)(uVar4, 1, arg_8h, arg_ch, arg_10h, arg_14h);\n        if (0 < uVar2) {\n            if ((uVar2 == 2) && (arg_ch != arg_14h)) {\n                uVar2 = (-(arg_ch < arg_14h) & 0xfffffffe) + 3;\n            }\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 531
    },
    "0041d691": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041d691(int32_t *param_1)\n\n{\n    if (param_1[1] == 1) {\n        return *param_1;\n    }\n    if (*(param_1 + 0xd) == '\\0') {\n        return param_1[2];\n    }\n    return *(param_1[2] + 0x10);\n}\n",
        "token_count": 87
    },
    "0041d70e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x0045ddc8)\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nuint __thiscall fcn.0041d70e(uint param_1, char16_t **param_2, double *param_3)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    char16_t *pcVar8;\n    uchar *arg_8h;\n    char16_t *arg_10h;\n    char16_t acStack656 [262];\n    char16_t acStack132 [26];\n    uchar auStack80 [8];\n    int32_t iStack72;\n    int32_t iStack68;\n    uint32_t uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint32_t uStack48;\n    uint uStack44;\n    int32_t aiStack40 [4];\n    ulong uStack24;\n    \n    uStack24 = CONCAT44(param_1, uStack24);\n    acStack656[0] = L'\\0';\n    fcn.00407c18(0x104);\n    uStack44 = 0;\n    iVar6 = 0;\n    pcVar8 = *param_2;\n    do {\n        uVar7 = 0x41d75e;\n        arg_10h = pcVar8;\n        iVar3 = fcn.004251c2(*(iVar6 * 4 + 0x4b1a20), pcVar8);\n        if (iVar3 == 0) break;\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < 0x61);\n    // switch table (97 cases) at 0x41d7de\n    switch(iVar6) {\n    case 0:\n        iVar6 = *(*(*uStack24._4_4_ + 4) + 8 + uStack24._4_4_);\n        if (*(*(*uStack24._4_4_ + 4) + 0xd + uStack24._4_4_) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        iStack68 = *(iVar6 + 0x14);\n        goto code_r0x0045d97c;\n    case 1:\n        iVar6 = *(*(*uStack24._4_4_ + 4) + 8 + uStack24._4_4_);\n        if (*(*(*uStack24._4_4_ + 4) + 0xd + uStack24._4_4_) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        fcn.0040c5e7(iVar6 + 0x20);\n        break;\n    case 2:\n        arg_10h = &stack0xffffffc4;\n        (*_sym.imp.KERNEL32.dll_GetLocalTime)();\n        uVar5 = uStack48 >> 0x10;\n        uVar7 = 0x4c73ac;\n        goto code_r0x0045d9e3;\n    case 3:\n        uVar7 = 0x4c73b8;\n        goto code_r0x0045da56;\n    case 4:\n        uVar7 = 0x4c73c0;\n        goto code_r0x0045da56;\n    case 5:\n        uVar7 = 0x4c73c8;\n        goto code_r0x0045da56;\n    case 6:\n        uVar7 = 0x4c674c;\n        goto code_r0x0045da56;\n    case 7:\n        uVar7 = 0x4c73d0;\n        goto code_r0x0045da56;\n    case 8:\n        uVar7 = 0x4c73d8;\n        goto code_r0x0045da56;\n    case 9:\n        fcn.004874ac();\n        arg_10h = fcn.0048744f();\n        uVar5 = 0x4c674c;\ncode_r0x0045d9e3:\n        fcn.0041faa3(&stack0xfffffd70, uVar7, uVar5);\n        goto code_r0x0041d7b2;\n    case 10:\n        uVar7 = 0x4c73e0;\ncode_r0x0045da56:\n        arg_8h = &stack0xffffffc4;\n        fcn.004874ac();\n        uVar7 = fcn.004873f4(arg_8h, uVar7);\n        fcn.00407c5d(uVar7);\n        fcn.0040b1ff();\n        break;\n    case 0xb:\n        goto code_r0x0045daa8;\n    case 0xc:\n        goto code_r0x0045daa8;\n    case 0xd:\n        goto code_r0x0045daa8;\n    case 0xe:\n        goto code_r0x0045daa8;\n    case 0xf:\n        goto code_r0x0045daa8;\n    case 0x10:\n        goto code_r0x0045daa8;\n    case 0x11:\n        goto code_r0x0045daa8;\n    case 0x12:\n        goto code_r0x0045daa8;\n    case 0x13:\n        goto code_r0x0045daa8;\n    case 0x14:\n        goto code_r0x0045daa8;\n    case 0x15:\n        goto code_r0x0045daa8;\n    case 0x16:\n        goto code_r0x0045daa8;\n    case 0x17:\n        goto code_r0x0045daa8;\n    case 0x18:\n        goto code_r0x0045daa8;\n    case 0x19:\n        goto code_r0x0045daa8;\n    case 0x1a:\n        goto code_r0x0045daa8;\n    case 0x1b:\ncode_r0x0045daa8:\n        fcn.0046de45();\ncode_r0x0045dabb:\n        uStack24._4_4_ = &stack0xffffffd8;\ncode_r0x0041d789:\n        fcn.00407c5d(uStack24._4_4_);\n        break;\n    case 0x1c:\n        arg_10h = &stack0xffffffc0;\n        uStack64 = 0x104;\n        (*_sym.imp.KERNEL32.dll_GetComputerNameW)(&stack0xfffffd70);\n        goto code_r0x0041d7b2;\n    case 0x1d:\n        arg_10h = 0x104;\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(&stack0xfffffd70);\n        if (iVar6 != 0) goto code_r0x0041d7b2;\n        break;\n    case 0x1e:\n        if (*0x4d13da == '\\0') {\n            arg_10h = 0x104;\n            (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(&stack0xfffffd70);\n        }\n        else {\n            arg_10h = 0x49d0a8;\n            iVar6 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n            if ((iVar6 == 0) ||\n               (pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar6, \"GetSystemWow64DirectoryW\"),  pcVar4 == NULL)) {\n                pcVar4 = 0x41face;\n            }\n            (*pcVar4)(&stack0xfffffd70, 0x104);\n            if (iVar6 != 0) {\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar6);\n            }\n        }\n        goto code_r0x0041d7b2;\n    case 0x1f:\n    case 0x5e:\n        fcn.0040e8a0();\n        *(param_3 + 0xc) = 1;\n        *param_3 = 0;\n        break;\n    case 0x20:\n        fcn.0040e8a0();\n        *(param_3 + 0xc) = 1;\n        *param_3 = 6;\n        break;\n    case 0x21:\n    case 0x27:\n        fcn.0040e8a0();\n        *(param_3 + 0xc) = 1;\n        *param_3 = 3;\n        break;\n    case 0x22:\n        fcn.0040e8a0();\n        *(param_3 + 0xc) = 1;\n        *param_3 = 9;\n        break;\n    case 0x23:\n        fcn.0040e8a0();\n        *(param_3 + 0xc) = 1;\n        *param_3 = 5;\n        break;\n    case 0x24:\n        fcn.0040e8a0();\n        *(param_3 + 0xc) = 1;\n        *param_3 = 10;\n        break;\n    case 0x25:\n        fcn.0040e8a0();\n        *(param_3 + 0xc) = 1;\n        *param_3 = 0x40;\n        break;\n    case 0x26:\n        fcn.0040e8a0();\n        *(param_3 + 0xc) = 1;\n        *param_3 = 0x41;\n        break;\n    case 0x28:\n        fcn.0040e8a0();\n        *(param_3 + 0xc) = 1;\n        *param_3 = 2;\n        break;\n    case 0x29:\n        fcn.0040e8a0();\n        *(param_3 + 0xc) = 1;\n        *param_3 = 7;\n        break;\n    case 0x2a:\n        fcn.0040e8a0();\n        *(param_3 + 0xc) = 1;\n        *param_3 = 8;\n        break;\n    case 0x2b:\n        fcn.0040e8a0();\n        *(param_3 + 0xc) = 1;\n        *param_3 = 4;\n        break;\n    case 0x2c:\n    case 0x5d:\n    case 0x5f:\n        fcn.0040e8a0();\n        uStack24._4_4_ = 0x1;\n        *(param_3 + 0xc) = 1;\n        goto code_r0x0045dcdf;\n    case 0x2d:\n        fcn.0040e8a0();\n        *(param_3 + 0xc) = 1;\n        *param_3 = 0x42;\n        break;\n    case 0x2e:\n        fcn.0040e8a0();\n        *(param_3 + 0xc) = 1;\n        *param_3 = 0x43;\n        break;\n    case 0x2f:\n        cVar2 = *0x4d1368;\n        goto code_r0x0045dcb3;\n    case 0x30:\n        cVar2 = *0x4d1999;\ncode_r0x0045dcb3:\n        uStack24 = CONCAT14(cVar2 == '\\x01', uStack24);\n        fcn.0040e8a0();\n        *(param_3 + 0xc) = 1;\ncode_r0x0045dcdf:\n        *param_3 = uStack24._4_4_;\n        break;\n    case 0x31:\n        uStack24._4_4_ = uStack24._4_4_ + 0x32;\n        goto code_r0x0041d789;\n    case 0x32:\n        uStack24._4_4_ = uStack24._4_4_ + 0x2e;\n        goto code_r0x0041d789;\n    case 0x33:\n        uStack24._4_4_ = uStack24._4_4_ + 0x36;\n        goto code_r0x0041d789;\n    case 0x34:\n        iStack68 = fcn.004698c0(uStack24._4_4_[0x3e]);\n        goto code_r0x0045d97c;\n    case 0x35:\n        arg_10h = &stack0xfffffd70;\n        (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104);\n        goto code_r0x0041d7b2;\n    case 0x36:\n        arg_10h = L\"WIN32_NT\";\n        goto code_r0x0041d7b2;\n    case 0x37:\n        goto code_r0x0041d7b2;\n    case 0x38:\n        iStack68 = *0x4d13a8;\n        goto code_r0x0045d97c;\n    case 0x39:\n        uStack24._4_4_ = 0x4d13ac;\n        goto code_r0x0041d789;\n    case 0x3a:\n        arg_10h = &stack0xfffffd70;\n        fcn.004059a7(L\"InstallLanguage\", 0x104, arg_10h);\n        goto code_r0x0041d7b2;\n    case 0x3b:\n    case 0x3c:\n        pcVar8 = arg_10h;\n        if (*0x4d13dc == 0) {\ncode_r0x0045ddea:\n            arg_10h = pcVar8;\n        }\n        goto code_r0x0041d7b2;\n    case 0x3d:\n        puVar1 = cpuid(0x80000001);\n        uStack60 = *puVar1;\n        uStack56 = puVar1[1];\n        uStack48 = puVar1[2];\n        uStack52 = puVar1[3];\n        arg_10h = &stack0xfffffffc;\n        pcVar8 = &stack0xfffffffc;\n        if ((uStack48 & 0x20000000) == 0) goto code_r0x0045ddea;\n        goto code_r0x0041d7b2;\n    case 0x3e:\n        arg_10h = &stack0xffffff7c;\n        (*_sym.imp.USER32.dll_GetKeyboardLayoutNameW)();\n        goto code_r0x0041d7b2;\n    case 0x3f:\n        arg_10h = 0x45dfad;\n        fcn.004873a5();\n        goto code_r0x0041d7b2;\n    case 0x40:\n        fcn.004058e5();\n        goto code_r0x0045dabb;\n    case 0x41:\n        goto code_r0x0045da39;\n    case 0x42:\n        goto code_r0x0045da39;\n    case 0x43:\n        goto code_r0x0045da39;\n    case 0x44:\ncode_r0x0045da39:\n        arg_10h = 0x45da41;\n        fcn.0046dd45();\n        goto code_r0x0041d7b2;\n    case 0x45:\n        arg_10h = 0x4c73a4;\n        goto code_r0x0041d7b2;\n    case 0x46:\n        arg_10h = 0x49d128;\n        goto code_r0x0041d7b2;\n    case 0x47:\n        arg_10h = 0x4af388;\n        goto code_r0x0041d7b2;\n    case 0x48:\n        uVar7 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&stack0xffffffb0);\n        (*_sym.imp.USER32.dll_GetWindowRect)(uVar7);\n        iStack68 = iStack72;\n        goto code_r0x0045d97c;\n    case 0x49:\n        uVar7 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&stack0xffffffb0);\n        (*_sym.imp.USER32.dll_GetWindowRect)(uVar7);\n        goto code_r0x0045d97c;\n    case 0x4a:\n        uStack44 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n        uVar5 = (*_sym.imp.USER32.dll_GetDC)(uStack44);\n        uVar7 = 0xc;\n        goto code_r0x0045e01a;\n    case 0x4b:\n        uStack44 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n        uVar5 = (*_sym.imp.USER32.dll_GetDC)(uStack44);\n        uVar7 = 0x74;\ncode_r0x0045e01a:\n        uStack24 = uStack24 & 0xffffffff | uVar5 << 0x20;\n        iVar6 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar5, uVar7);\n        fcn.0040e8a0();\n        *(param_3 + 0xc) = 1;\n        *param_3 = iVar6;\n        (*_sym.imp.USER32.dll_ReleaseDC)(uStack44, uStack24._4_4_);\n        break;\n    case 0x4c:\n        if ((*0x4d1400 == 3) || (*0x4d1400 == 4)) {\n            iStack68 = 1;\n        }\n        else {\n            iStack68 = 0;\n        }\n        goto code_r0x0045d97c;\n    case 0x4d:\n        pcVar8 = L\"COMSPEC\";\n        goto code_r0x0045e06e;\n    case 0x4e:\n        arg_10h = 0x4c73a8;\n        goto code_r0x0041d7b2;\n    case 0x4f:\n        arg_10h = &stack0xffffffc0;\n        uStack64 = 0x104;\n        (*_sym.imp.ADVAPI32.dll_GetUserNameW)(&stack0xfffffd70);\n        goto code_r0x0041d7b2;\n    case 0x50:\n        arg_10h = &stack0xfffffd70;\n        (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x104);\n        fcn.00404dd2();\n        goto code_r0x0041d7b2;\n    case 0x51:\n        pcVar8 = L\"USERPROFILE\";\n        goto code_r0x0045e06e;\n    case 0x52:\n        pcVar8 = L\"HOMEDRIVE\";\n        goto code_r0x0045e06e;\n    case 0x53:\n        pcVar8 = L\"HOMEPATH\";\n        goto code_r0x0045e06e;\n    case 0x54:\n        pcVar8 = L\"HOMESHARE\";\n        goto code_r0x0045e06e;\n    case 0x55:\n        pcVar8 = L\"LOGONSERVER\";\n        goto code_r0x0045e06e;\n    case 0x56:\n        pcVar8 = L\"USERDOMAIN\";\n        goto code_r0x0045e06e;\n    case 0x57:\n        pcVar8 = L\"USERDNSDOMAIN\";\ncode_r0x0045e06e:\n        arg_10h = 0x104;\n        (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(pcVar8, &stack0xfffffd70);\ncode_r0x0041d7b2:\n        fcn.0040b5c1(arg_10h);\n        break;\n    case 0x58:\n    case 0x59:\n        break;\n    case 0x5a:\n        iStack68 = uStack24._4_4_[0x54];\ncode_r0x0045d97c:\n        fcn.0040e8a0();\n        *(param_3 + 0xc) = 1;\n        *param_3 = iStack68;\n        break;\n    case 0x5b:\n        uStack24._4_4_ = uStack24._4_4_ + 0x55;\n        goto code_r0x0041d789;\n    case 0x5c:\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n        uStack24 = iVar6;\n        if (iVar6 < 0) {\n            uStack24 = uStack24 + *0x4c81d0;\n        }\n        fcn.0040e8a0();\n        *param_3 = uStack24;\n        *(param_3 + 0xc) = 3;\n        break;\n    case 0x60:\n        fcn.004059a7(L\"SchemeLangID\", 0x104, &stack0xfffffd70);\n        uStack64 = acStack656[0];\n        fcn.0040b66c(uStack64, 0);\n        fcn.0040b5c1(&stack0xfffffd70);\n        break;\n    default:\n        fcn.0040b606(0x4c734c);\n        fcn.00407cf8(param_2);\n        uStack24 = uStack24 & 0xffffffff;\n        iVar6 = fcn.0041da6c(&stack0xffffffc4, &stack0xffffffec, 0);\n        if (iVar6 == 0) {\n            uStack44 = 0xffffffff;\n        }\n        else {\n            fcn.0040c5e7(iVar6);\n        }\n        fcn.0040b1ff();\n        goto code_r0x0041d796;\n    }\n    uStack44 = 0;\ncode_r0x0041d796:\n    fcn.0040b1ff();\n    return uStack44;\n}\n",
        "token_count": 4967
    },
    "0041d993": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041d993(uint32_t arg_8h, int32_t *arg_ch, int32_t **arg_10h, uint32_t arg_14h, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    uint32_t arg_8h_00;\n    int32_t *arg_ch_00;\n    int32_t **ppiVar3;\n    char cVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t extraout_EDX;\n    uint in_stack_ffffffc4;\n    int32_t in_stack_ffffffc8;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = arg_ch;\n    arg_8h_00 = arg_8h;\n    iVar7 = *arg_ch;\n    puVar2 = *(*(arg_8h + 4) + iVar7 * 4);\n    if (*(puVar2 + 2) == 0x33) {\n        arg_8h = 0;\n        piVar5 = fcn.0041da6c(*puVar2, &arg_8h, 0);\n        arg_ch = piVar5;\n        if (piVar5 == NULL) {\n            fcn.004025c1(**(*(arg_8h_00 + 4) + *arg_ch_00 * 4));\n            goto code_r0x0045e1c0;\n        }\n        if (((arg_8h & 0x100) == 0) || ((arg_14h & 0x100) != 0)) {\n            iVar8 = *arg_ch_00 + 1;\n            iVar6 = piVar5[3];\n            *arg_ch_00 = iVar8;\n            if ((iVar6 == 5) && (*(*(*(arg_8h_00 + 4) + iVar8 * 4) + 8) == 0x4e)) {\n                iVar6 = fcn.004878dd(arg_8h_00, arg_ch_00, &arg_ch, 4);\n                piVar5 = arg_ch;\n                if (iVar6 < 0) {\n                    return 0xffffffff;\n                }\n            }\n            else {\n                if ((piVar5[3] == 0xf) && (*(*(*(arg_8h_00 + 4) + iVar8 * 4) + 8) == 0x4e)) {\n                    iVar6 = fcn.00401d5f(arg_8h_00, arg_ch_00, &arg_ch, 0x10);\n                }\n                else {\n                    if ((piVar5[3] != 0xf) || (*(*(*(arg_8h_00 + 4) + iVar8 * 4) + 8) != 0x35)) {\n                        cVar4 = fcn.0041da5f();\n                        if ((cVar4 != '\\0') && (*(*(*(arg_8h_00 + 4) + extraout_EDX * 4) + 8) == 0x35))\n                        goto code_r0x0045e296;\n                        goto code_r0x0041da2d;\n                    }\n                    iVar6 = fcn.00487a2a(arg_8h_00, arg_ch_00, &arg_ch);\n                }\n                if (iVar6 < 0) {\n                    return 0xffffffff;\n                }\n                piVar5 = arg_ch;\n                if (arg_ch == NULL) goto code_r0x0045e296;\n            }\ncode_r0x0041da2d:\n            ppiVar3 = arg_10h;\n            iVar1 = *(*(*(arg_8h_00 + 4) + *arg_ch_00 * 4) + 8);\n            if (((iVar1 == 0x48) || (iVar1 == 0x7f)) || (iVar1 == 0x40)) {\n                fcn.0040e8a0();\n                ppiVar3[3] = 0x6;\n                *ppiVar3 = piVar5;\n                return 0;\n            }\n        }\n        else if (arg_1ch == '\\0') goto code_r0x0045e1c0;\n    }\ncode_r0x0045e296:\n    *arg_ch_00 = iVar7;\n    if (arg_18h == '\\0') {\n        iVar7 = fcn.00410540(arg_8h_00, arg_ch_00, arg_10h, arg_20h);\n        if (iVar7 < 0) {\n            return 0xffffffff;\n        }\n        return 0;\n    }\n    in_stack_ffffffc8 = *(*(*(arg_8h_00 + 4) + iVar7 * 4) + 10);\n    in_stack_ffffffc4 = 0x91;\ncode_r0x0045e1c0:\n    fcn.004734ba(in_stack_ffffffc4, in_stack_ffffffc8);\n    return 0xffffffff;\n}\n",
        "token_count": 1139
    },
    "0041da5f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0041da5f(int16_t **param_1)\n\n{\n    int16_t *in_EAX;\n    \n    if ((((param_1[3] == 0x8) && (in_EAX = *param_1,  in_EAX != NULL)) && ((*in_EAX == 9 || (*in_EAX == 0xd)))) &&\n       (*(in_EAX + 4) != 0)) {\n        return CONCAT31(in_EAX >> 8, 1);\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 127
    },
    "0041daf6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0041daf6(double *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    bool bVar3;\n    \n    iVar1 = *(param_1 + 0xc);\n    piVar2 = iVar1 + -1;\n    if (piVar2 == NULL) {\n        bVar3 = *param_1 == 0;\n    }\n    else if (iVar1 == 2) {\n        piVar2 = *param_1 | *(param_1 + 4);\n        bVar3 = piVar2 == NULL;\n    }\n    else {\n        if (iVar1 == 3) {\n            piVar2 = (0.0 < *param_1) << 8 | (*param_1 == 0.0) << 0xe;\n            if (POPCOUNT(piVar2 >> 8 & 0x44) != '\\0') goto code_r0x0045e378;\n            goto code_r0x0045e382;\n        }\n        if (iVar1 == 4) {\n            piVar2 = *(param_1 + 1);\n            bVar3 = piVar2[1] == 0;\n        }\n        else {\n            if (iVar1 == 7) {\n                return *param_1 != 0;\n            }\n            if (iVar1 == 9) {\n                return *param_1;\n            }\n            piVar2 = iVar1 + -0xb;\n            if (piVar2 != NULL) goto code_r0x0045e378;\n            piVar2 = *param_1;\n            bVar3 = *piVar2 == 0;\n        }\n    }\n    if (bVar3) {\ncode_r0x0045e378:\n        return piVar2 & 0xffffff00;\n    }\ncode_r0x0045e382:\n    return CONCAT31(piVar2 >> 8, 1);\n}\n",
        "token_count": 422
    },
    "0041dd5b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041dd5b(int32_t arg_8h, uint32_t arg_ch, int32_t **arg_10h, int32_t *arg_14h)\n\n{\n    uint16_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    uint16_t uVar9;\n    int32_t in_ECX;\n    int32_t *piVar10;\n    uint16_t *in_EDX;\n    int32_t iVar11;\n    int32_t *piVar12;\n    int32_t **var_28h;\n    int32_t *var_24h;\n    uint32_t var_20h;\n    int32_t *var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint16_t *var_4h;\n    \n    var_10h = arg_ch & 0x800;\n    var_14h = -1;\n    piVar12 = in_EDX + 2;\n    iVar5 = *arg_14h;\n    var_18h = var_10h != 0;\n    var_8h = 0;\n    iVar11 = 0;\n    var_4h = NULL;\n    *arg_14h = iVar5 + 1;\n    if (1000 < iVar5) {\ncode_r0x0041de37:\n        return -1;\n    }\n    uVar3 = *in_EDX;\n    var_ch = in_ECX;\n    if (uVar3 == 0x85) goto code_r0x0041ddce;\n    if (uVar3 == 0x8a) goto code_r0x0041ddce;\n    if (uVar3 == 0x86) goto code_r0x0041ddce;\n    uVar9 = 0x8b;\ncode_r0x0041de12:\n    if (uVar3 != uVar9) goto code_r0x0041ddd1;\ncode_r0x0041ddce:\n    piVar12 = piVar12 + 2;\ncode_r0x0041ddd1:\n    uVar4 = *piVar12;\n    // switch table (162 cases) at 0x41decb\n    switch(uVar4) {\n    case 0:\n    case 0x77:\n    case 0x78:\n    case 0x79:\n    case 0x7a:\n    case 0x7b:\n        if ((var_14h < 0) || ((var_8h == 0 && (iVar11 < var_14h)))) {\n            var_14h = iVar11;\n        }\n        if (*piVar12 != 0x77) {\n            return var_14h;\n        }\n        piVar12 = piVar12 + 1;\n        var_8h = 0;\n        var_4h = NULL;\n        iVar11 = 0;\n        goto code_r0x0041ddd1;\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n    case 0x17:\n    case 0x18:\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x76:\n    case 0x7c:\n    case 0x8d:\n    case 0x8e:\n    case 0x8f:\n    case 0x90:\n    case 0x91:\n        goto code_r0x0045e41d;\n    case 3:\n    case 0x96:\n    case 0x98:\n    case 0x9a:\n    case 0x9c:\n    case 0x9d:\n    case 0xa0:\n        goto code_r0x0041de8d;\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n    case 0x11:\n    case 0x12:\n    case 0x13:\n    case 0x14:\n    case 0x15:\n    case 0x16:\n        goto code_r0x0041ddca;\n    case 0xe:\n        if (var_10h != 0) {\n            return -1;\n        }\n        goto code_r0x0041ddca;\n    case 0xf:\n    case 0x10:\n        piVar12 = piVar12 + 1;\n        goto code_r0x0041ddca;\n    case 0x1d:\n    case 0x1e:\n    case 0x1f:\n    case 0x20:\n    case 0x23:\n    case 0x24:\n    case 0x2b:\n    case 0x30:\n    case 0x31:\n    case 0x38:\n    case 0x3d:\n    case 0x3e:\n    case 0x45:\n    case 0x4a:\n    case 0x4b:\n    case 0x52:\n        iVar11 = iVar11 + 1;\n        piVar12 = piVar12 + 1;\n        var_4h = iVar11;\n        break;\n    case 0x21:\n    case 0x22:\n    case 0x25:\n    case 0x26:\n    case 0x27:\n    case 0x28:\n    case 0x2a:\n    case 0x2c:\n    case 0x2d:\n    case 0x2e:\n    case 0x2f:\n    case 0x32:\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x37:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n    case 0x3c:\n    case 0x3f:\n    case 0x40:\n    case 0x41:\n    case 0x42:\n    case 0x44:\n    case 0x46:\n    case 0x47:\n    case 0x48:\n    case 0x49:\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n    case 0x51:\n    case 0x53:\n    case 0x54:\n        piVar12 = piVar12 + *(uVar4 + 0x4c2160) * 2;\n        break;\n    case 0x29:\n    case 0x36:\n    case 0x43:\n    case 0x50:\n        iVar11 = iVar11 + *(piVar12 + 2);\n        piVar12 = piVar12 + 6;\n        var_4h = iVar11;\n        break;\n    case 0x55:\n    case 0x56:\n    case 0x59:\n    case 0x5a:\n    case 0x5e:\n    case 0x60:\n        uVar3 = *(piVar12 + 2);\n        goto joined_r0x0045e4bf;\n    case 0x57:\n    case 0x58:\n    case 0x5f:\n        var_4h = iVar11 + 1;\n        if ((*(piVar12 + 2) == 0x10) || (*(piVar12 + 2) == 0xf)) {\n            iVar5 = 8;\n        }\n        else {\n            iVar5 = 4;\n        }\n        goto code_r0x0045e46c;\n    case 0x5b:\n    case 0x5c:\n    case 0x61:\n        uVar3 = *(piVar12 + 1);\njoined_r0x0045e4bf:\n        if ((uVar3 == 0x10) || (uVar3 == 0xf)) {\n            piVar12 = piVar12 + 1;\n        }\ncode_r0x0041de8d:\n        uVar2 = *(uVar4 + 0x4c2160);\n        goto code_r0x0041de94;\n    case 0x5d:\n        var_4h = iVar11 + *(piVar12 + 2);\n        if ((*(piVar12 + 1) == 0x10) || (*(piVar12 + 1) == 0xf)) {\n            iVar5 = 10;\n        }\n        else {\n            iVar5 = 6;\n        }\ncode_r0x0045e46c:\n        piVar12 = piVar12 + iVar5;\n        iVar11 = var_4h;\n        goto code_r0x0041ddd1;\n    default:\n        return -3;\n    case 0x6e:\n    case 0x6f:\n    case 0x70:\n        if (uVar4 == 0x70) {\n            uVar4 = *(piVar12 + 2);\n        }\n        else {\n            uVar4 = 0x11;\n        }\n        piVar12 = piVar12 + uVar4 * 2;\n    // switch table (12 cases) at 0x45e72b\n        switch(*piVar12) {\n        case 0x62:\n        case 99:\n        case 0x66:\n        case 0x67:\n        case 0x6a:\n        case 0x6c:\n            goto code_r0x0041ddce;\n        case 100:\n        case 0x65:\n        case 0x6b:\n            goto code_r0x0041ddca;\n        case 0x68:\n        case 0x69:\n        case 0x6d:\n            iVar11 = iVar11 + *(piVar12 + 2);\n            piVar12 = piVar12 + 6;\n            var_4h = iVar11;\n            break;\n        default:\n            iVar11 = iVar11 + 1;\n            var_4h = iVar11;\n        }\n        goto code_r0x0041ddd1;\n    case 0x71:\n    case 0x72:\n        if ((arg_ch & 0x2000000) == 0) {\n            piVar8 = fcn.0049a2b4(*(piVar12 + 2));\n            piVar10 = piVar8;\n            if (piVar8 == NULL) {\n                return -2;\n            }\n            do {\n                piVar10 = piVar10 + *(piVar10 + 2) * 2;\n            } while (*piVar10 == 0x77);\n            if ((piVar8 < piVar12) && (piVar12 < piVar10)) {\ncode_r0x0045e60a:\n                var_8h = 1;\n                goto code_r0x0045e611;\n            }\n            ppiVar6 = arg_10h;\n            if (arg_10h != NULL) {\n                do {\n                    if (ppiVar6[1] == piVar8) break;\n                    ppiVar6 = *ppiVar6;\n                } while (ppiVar6 != NULL);\n                if (ppiVar6 != NULL) goto code_r0x0045e60a;\n            }\n            var_28h = arg_10h;\n            var_24h = piVar8;\n            iVar5 = fcn.0041dd5b(arg_8h, arg_ch, &var_28h, arg_14h);\n        }\n        else {\ncode_r0x0045e611:\n            iVar5 = 0;\n        }\n        iVar7 = 4;\n        goto code_r0x0045e615;\n    case 0x73:\n    case 0x74:\n        if ((arg_ch & 0x2000000) == 0) {\n            var_4h = var_ch + (*(piVar12 + 2) * *(var_ch + 0x24) + *(var_ch + 0x22)) * 2;\n            iVar5 = 0x7fffffff;\n            uVar4 = *(piVar12 + 1);\n            if (*(piVar12 + 1) != 0) {\n                do {\n                    var_20h = uVar4 - 1;\n                    var_1ch = fcn.0049a2b4(*var_4h);\n                    piVar10 = var_1ch;\n                    if (var_1ch == NULL) {\n                        return -2;\n                    }\n                    do {\n                        piVar10 = piVar10 + *(piVar10 + 2) * 2;\n                    } while (*piVar10 == 0x77);\n                    if ((var_1ch < piVar12) && (piVar12 < piVar10)) {\ncode_r0x0045e5bd:\n                        var_8h = 1;\n                        goto code_r0x0045e5c4;\n                    }\n                    ppiVar6 = arg_10h;\n                    if (arg_10h != NULL) {\n                        do {\n                            if (ppiVar6[1] == var_1ch) break;\n                            ppiVar6 = *ppiVar6;\n                        } while (ppiVar6 != NULL);\n                        if (ppiVar6 != NULL) goto code_r0x0045e5bd;\n                    }\n                    var_28h = arg_10h;\n                    var_24h = var_1ch;\n                    iVar7 = fcn.0041dd5b(arg_8h, arg_ch, &var_28h, arg_14h);\n                    if (iVar7 < iVar5) {\n                        iVar5 = iVar7;\n                    }\n                    var_4h = var_4h + *(var_ch + 0x24);\n                    uVar4 = var_20h;\n                } while (0 < var_20h);\n            }\n        }\n        else {\ncode_r0x0045e5c4:\n            iVar5 = 0;\n        }\n        iVar7 = 6;\ncode_r0x0045e615:\n        piVar12 = piVar12 + iVar7;\n    // switch table (12 cases) at 0x45e743\n        switch(*piVar12) {\n        case 0x62:\n        case 99:\n        case 0x66:\n        case 0x67:\n        case 0x6a:\n        case 0x6c:\n            uVar4 = 0;\n            goto code_r0x0045e670;\n        case 100:\n        case 0x65:\n        case 0x6b:\n            uVar4 = 1;\ncode_r0x0045e670:\n            piVar12 = piVar12 + 2;\n            break;\n        case 0x68:\n        case 0x69:\n        case 0x6d:\n            uVar4 = *(piVar12 + 2);\n            piVar12 = piVar12 + 6;\n            break;\n        default:\n            uVar4 = 1;\n        }\n        iVar11 = iVar11 + uVar4 * iVar5;\n        var_4h = iVar11;\n        goto code_r0x0041ddd1;\n    case 0x75:\n        piVar10 = arg_8h + *(piVar12 + 2) * 2;\n        piVar8 = piVar10;\n        do {\n            piVar8 = piVar8 + *(piVar8 + 2) * 2;\n        } while (*piVar8 == 0x77);\n        if ((piVar10 < piVar12) && (piVar12 < piVar8)) {\ncode_r0x0045e6c9:\n            var_8h = 1;\n        }\n        else {\n            ppiVar6 = arg_10h;\n            if (arg_10h != NULL) {\n                do {\n                    if (ppiVar6[1] == piVar10) break;\n                    ppiVar6 = *ppiVar6;\n                } while (ppiVar6 != NULL);\n                if (ppiVar6 != NULL) goto code_r0x0045e6c9;\n            }\n            var_28h = arg_10h;\n            var_24h = piVar10;\n            iVar5 = fcn.0041dd5b(arg_8h, arg_ch, &var_28h, arg_14h);\n            var_4h = iVar11 + iVar5;\n            iVar11 = var_4h;\n        }\n        goto code_r0x0041de71;\n    case 0x7d:\n    case 0x7e:\n    case 0x7f:\n    case 0x80:\n        do {\n            piVar12 = piVar12 + *(piVar12 + 2) * 2;\n            uVar4 = *piVar12;\n        } while (*piVar12 == 0x77);\ncode_r0x0045e41d:\n        uVar2 = *(uVar4 + 0x4c2160);\ncode_r0x0041de94:\n        piVar12 = piVar12 + uVar2 * 2;\n        goto code_r0x0041ddd1;\n    case 0x81:\n    case 0x82:\n    case 0x83:\n    case 0x84:\n    case 0x85:\n    case 0x86:\n    case 0x88:\n    case 0x89:\n    case 0x8a:\n    case 0x8b:\n        goto code_r0x0041de3c;\n    case 0x87:\n    case 0x8c:\n        puVar1 = piVar12 + *(piVar12 + 2) * 2;\n        if (*puVar1 == 0x77) {\ncode_r0x0041de3c:\n            iVar5 = fcn.0041dd5b(arg_8h, arg_ch, arg_10h, arg_14h);\n            if (iVar5 < 0) {\n                return iVar5;\n            }\n            var_4h = iVar11 + iVar5;\n            do {\n                piVar12 = piVar12 + *(piVar12 + 2) * 2;\n                iVar11 = var_4h;\n            } while (*piVar12 == 0x77);\n            goto code_r0x0041de71;\n        }\n        piVar12 = puVar1 + 2;\n        goto code_r0x0041ddd1;\n    case 0x92:\n    case 0x93:\n    case 0x94:\n    case 0xa1:\n        piVar12 = piVar12 + *(uVar4 + 0x4c2160) * 2;\n        do {\n            piVar12 = piVar12 + *(piVar12 + 2) * 2;\n            iVar11 = var_4h;\n        } while (*piVar12 == 0x77);\ncode_r0x0041de71:\n        piVar12 = piVar12 + 1;\n        goto code_r0x0041ddd1;\n    case 0x95:\n    case 0x97:\n    case 0x99:\n    case 0x9b:\n        goto code_r0x0045e70a;\n    case 0x9e:\n    case 0x9f:\n        goto code_r0x0041de37;\n    }\n    if (var_10h != 0) {\n        uVar3 = *(piVar12 + -2) & 0xfc00;\n        uVar9 = 0xd800;\n        goto code_r0x0041de12;\n    }\n    goto code_r0x0041ddd1;\ncode_r0x0045e70a:\n    piVar12 = piVar12 + (*(uVar4 + 0x4c2160) + *(piVar12 + 2)) * 2;\n    goto code_r0x0041ddd1;\ncode_r0x0041ddca:\n    iVar11 = iVar11 + 1;\n    var_4h = iVar11;\n    goto code_r0x0041ddce;\n}\n",
        "token_count": 4486
    },
    "0041dfcd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041dfcd(int32_t arg_8h, uint arg_ch)\n\n{\n    uint16_t *puVar1;\n    bool bVar2;\n    int16_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint16_t *puVar6;\n    int16_t *in_ECX;\n    uint16_t *puVar7;\n    uint16_t uVar8;\n    uint8_t *in_EDX;\n    uint8_t *puVar9;\n    uint32_t *puVar10;\n    uint uVar11;\n    int16_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *in_ECX;\n    var_8h = 1;\n    var_ch = in_ECX;\ncode_r0x0041dfe7:\n    puVar6 = var_ch + 2;\n    bVar2 = true;\n    if ((((iVar3 == 0x85) || (iVar3 == 0x8a)) || (iVar3 == 0x86)) || (iVar3 == 0x8b)) {\n        puVar6 = var_ch + 3;\n    }\ncode_r0x0041e025:\n    uVar8 = *puVar6;\n    uVar4 = uVar8;\n    // switch table (162 cases) at 0x41e0b1\n    switch(uVar4) {\n    case 0:\n    case 1:\n    case 2:\n    case 3:\n    case 0xc:\n    case 0xd:\n    case 0xe:\n    case 0xf:\n    case 0x12:\n    case 0x14:\n    case 0x16:\n    case 0x17:\n    case 0x18:\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x1f:\n    case 0x20:\n    case 0x3b:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n    case 0x40:\n    case 0x41:\n    case 0x42:\n    case 0x43:\n    case 0x44:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n    case 0x50:\n    case 0x51:\n    case 0x52:\n    case 0x53:\n    case 0x54:\n    case 0x71:\n    case 0x72:\n    case 0x73:\n    case 0x74:\n    case 0x75:\n    case 0x7c:\n    case 0x87:\n    case 0x8c:\n    case 0x8d:\n    case 0x8e:\n    case 0x8f:\n    case 0x90:\n    case 0x91:\n    case 0x95:\n    case 0x96:\n    case 0x97:\n    case 0x98:\n    case 0x99:\n    case 0x9a:\n    case 0x9b:\n    case 0x9c:\n    case 0x9d:\n    case 0x9e:\n    case 0x9f:\n    case 0xa0:\n        goto code_r0x0041e048;\n    case 4:\n    case 5:\n    case 0x57:\n    case 0x58:\n    case 0x5f:\n        goto code_r0x0045e94a;\n    case 6:\n        goto code_r0x0045ea0f;\n    case 7:\n        goto code_r0x0045ea30;\n    case 8:\n        goto code_r0x0045ea0f;\n    case 9:\n        goto code_r0x0045ea30;\n    case 10:\ncode_r0x0045ea0f:\n        fcn.0049b103(uVar4, arg_ch);\n        goto code_r0x0041e091;\n    case 0xb:\ncode_r0x0045ea30:\n        fcn.0049b21e(uVar4, arg_ch);\n        goto code_r0x0041e091;\n    case 0x10:\n        goto code_r0x0045e969;\n    case 0x11:\n    case 0x15:\n        in_EDX[1] = in_EDX[1] | 0x3c;\n        in_EDX[0x10] = in_EDX[0x10] | 0x20;\n        goto code_r0x0045e9f8;\n    case 0x13:\n        in_EDX[1] = in_EDX[1] | 2;\n        in_EDX[4] = in_EDX[4] | 1;\n        in_EDX[0x14] = in_EDX[0x14] | 1;\ncode_r0x0045e9f8:\n        in_EDX[0x1f] = in_EDX[0x1f] | 0x80;\n        goto code_r0x0041e091;\n    case 0x1d:\n    case 0x23:\n    case 0x24:\n    case 0x2b:\n        goto code_r0x0045e9be;\n    case 0x1e:\n    case 0x30:\n    case 0x31:\n    case 0x38:\n        goto code_r0x0045e9ca;\n    case 0x21:\n    case 0x22:\n    case 0x25:\n    case 0x26:\n    case 0x2a:\n    case 0x2c:\n        uVar11 = 0;\n        goto code_r0x0045e835;\n    case 0x27:\n    case 0x28:\n    case 0x2d:\n        uVar11 = 0;\n        goto code_r0x0045e835;\n    case 0x29:\ncode_r0x0045e9be:\n        uVar11 = 0;\ncode_r0x0045e9d0:\n        fcn.0049b122(uVar11, arg_ch, arg_8h);\n        goto code_r0x0041e091;\n    case 0x2e:\n    case 0x2f:\n    case 0x32:\n    case 0x33:\n    case 0x37:\n    case 0x39:\n        uVar11 = 1;\n        goto code_r0x0045e835;\n    case 0x34:\n    case 0x35:\n    case 0x3a:\n        uVar11 = 1;\ncode_r0x0045e835:\n        puVar6 = fcn.0049b122(uVar11, arg_ch, arg_8h);\n        goto code_r0x0041e08a;\n    case 0x36:\ncode_r0x0045e9ca:\n        uVar11 = 1;\n        goto code_r0x0045e9d0;\n    case 0x55:\n    case 0x56:\n    case 0x59:\n    case 0x5a:\n    case 0x5e:\n    case 0x60:\n        goto code_r0x0045e851;\n    case 0x5b:\n    case 0x5c:\n    case 0x61:\n        puVar6 = puVar6 + 1;\ncode_r0x0045e851:\n        uVar8 = puVar6[1];\n        if (uVar8 < 0xb) {\n            if ((uVar8 == 10) || (uVar8 == 6)) {\ncode_r0x0045e88d:\n                fcn.0049b103(uVar4, arg_ch);\n            }\n            else {\n                if (uVar8 != 7) {\n                    if (uVar8 == 8) goto code_r0x0045e88d;\n                    if (uVar8 != 9) {\ncode_r0x0041e048:\n                        return 0;\n                    }\n                }\ncode_r0x0045e7a4:\n                fcn.0049b21e(uVar4, arg_ch);\n            }\n        }\n        else {\n            if (uVar8 == 0xb) goto code_r0x0045e7a4;\n            if (uVar8 != 0x11) {\n                if (uVar8 == 0x13) {\n                    in_EDX[1] = in_EDX[1] | 2;\n                    in_EDX[4] = in_EDX[4] | 1;\n                    in_EDX[0x14] = in_EDX[0x14] | 1;\n                    if (arg_8h != 0) {\n                        in_EDX[0x1f] = in_EDX[0x1f] | 0x80;\n                    }\n                    break;\n                }\n                if (uVar8 != 0x15) {\n                    return 0;\n                }\n            }\n            in_EDX[1] = in_EDX[1] | 0x3c;\n            if (arg_8h != 0) {\n                in_EDX[0x1f] = in_EDX[0x1f] | 0x80;\n            }\n            in_EDX[0x10] = in_EDX[0x10] | 0x20;\n        }\n        break;\n    case 0x5d:\n        break;\n    default:\n        return 3;\n    case 0x6e:\n        goto code_r0x0041e04d;\n    case 0x6f:\n        goto code_r0x0045e911;\n    case 0x70:\n        if ((puVar6[2] & 4) != 0) {\n            return 0;\n        }\n        if ((puVar6[2] & 3) == 1) {\n            return 0;\n        }\ncode_r0x0045e911:\n        in_EDX[0x1f] = in_EDX[0x1f] | 0x80;\n        uVar8 = *puVar6;\ncode_r0x0041e04d:\n        if (uVar8 == 0x70) {\n            puVar1 = puVar6 + 2;\n            puVar7 = puVar6 + 3;\n            puVar6 = puVar6 + puVar6[1];\n            puVar7 = -((*puVar1 & 2) != 0) & puVar7;\n        }\n        else {\n            puVar7 = puVar6 + 1;\n            puVar6 = puVar6 + 0x11;\n        }\n        if (puVar7 != NULL) {\n            iVar5 = 0x20;\n            puVar9 = in_EDX;\n            do {\n                *puVar9 = *puVar9 | puVar9[puVar7 - in_EDX];\n                puVar9 = puVar9 + 1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n    // switch table (12 cases) at 0x45ea4b\n        switch(*puVar6) {\n        case 0x62:\n        case 99:\n        case 0x66:\n        case 0x67:\n        case 0x6a:\n        case 0x6c:\ncode_r0x0045e94a:\n            puVar6 = puVar6 + 1;\n            break;\n        default:\ncode_r0x0041e087:\n            bVar2 = false;\n            break;\n        case 0x68:\n        case 0x69:\n        case 0x6d:\n            if (puVar6[1] != 0) goto code_r0x0041e087;\n            puVar6 = puVar6 + 3;\n        }\n        goto code_r0x0041e08a;\n    case 0x76:\n        puVar6 = puVar6 + 4;\n        goto code_r0x0041e08a;\n    case 0x77:\n        var_8h = 2;\n        goto code_r0x0041e091;\n    case 0x78:\n    case 0x79:\n    case 0x7a:\n    case 0x7b:\n        return 2;\n    case 0x7d:\n    case 0x81:\n    case 0x82:\n    case 0x83:\n    case 0x84:\n    case 0x85:\n    case 0x86:\n    case 0x88:\n    case 0x89:\n    case 0x8a:\n    case 0x8b:\n        iVar5 = fcn.0041dfcd(arg_8h, arg_ch);\n        if (iVar5 == 0) {\n            return 0;\n        }\n        if (iVar5 == 3) {\n            return 3;\n        }\n        if (iVar5 == 1) goto code_r0x0041e091;\n        do {\n            puVar6 = puVar6 + puVar6[1];\n        } while (*puVar6 == 0x77);\n        break;\n    case 0x7e:\n    case 0x7f:\n    case 0x80:\n        do {\n            puVar6 = puVar6 + puVar6[1];\n        } while (*puVar6 == 0x77);\n        break;\n    case 0x92:\n    case 0x93:\n    case 0x94:\n        puVar6 = puVar6 + 1;\n        iVar5 = fcn.0041dfcd(arg_8h, arg_ch);\n        if (iVar5 == 0) {\n            return 0;\n        }\n        if (iVar5 == 3) {\n            return 3;\n        }\n        do {\n            puVar6 = puVar6 + puVar6[1];\n        } while (*puVar6 == 0x77);\n        break;\n    case 0xa1:\n        puVar6 = puVar6 + 1;\n        do {\n            puVar6 = puVar6 + puVar6[1];\n        } while (*puVar6 == 0x77);\n    }\n    puVar6 = puVar6 + 2;\ncode_r0x0041e08a:\n    if (!bVar2) goto code_r0x0041e091;\n    goto code_r0x0041e025;\ncode_r0x0045e969:\n    if (puVar6[1] != 9) {\n        return 0;\n    }\n    puVar10 = puVar6[2] * 4 + 0x4b0a90;\n    while (uVar4 = *puVar10,  uVar4 != 0xffffffff) {\n        puVar10 = puVar10 + 1;\n        if (uVar4 < 0x100) {\n            in_EDX[uVar4 >> 3] = in_EDX[uVar4 >> 3] | 1 << (uVar4 & 7);\n        }\n        else {\n            in_EDX[0x1f] = in_EDX[0x1f] | 0x80;\n        }\n    }\ncode_r0x0041e091:\n    var_ch = var_ch + var_ch[1];\n    iVar3 = 0x77;\n    if (*var_ch != 0x77) {\n        return var_8h;\n    }\n    goto code_r0x0041dfe7;\n}\n",
        "token_count": 3531
    },
    "0041e300": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e300(uint arg_8h, double *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    float10 fVar3;\n    uint var_10h;\n    double dStack12;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&var_10h);\n    if (iVar1 == 0) {\n        fcn.0040e8a0();\n        *arg_ch = 0.0;\n        *(arg_ch + 0xc) = 3;\n        iVar1 = *(*in_ECX + 4);\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x14) = 1;\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x18) = 0;\n    }\n    else {\n        dStack12 = _var_10h;\n        fVar3 = fcn.0040cfb5();\n        dStack12 = dStack12 - fVar3;\n        fVar3 = fcn.0041e364();\n        dStack12 = dStack12 / fVar3;\n        fcn.0040e8a0();\n        *arg_ch = dStack12;\n        *(arg_ch + 0xc) = 3;\n    }\n    return 0;\n}\n",
        "token_count": 381
    },
    "0041e544": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e544(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    int32_t **ppiVar5;\n    \n    ppiVar5 = **(arg_8h + 4);\n    if (ppiVar5[3] == 0x6) {\n        ppiVar5 = *ppiVar5;\n    }\n    if (ppiVar5[3] == 0x5) {\n        if (*(arg_8h + 8) != 1) {\n            uVar2 = fcn.0040ce67();\n            uVar2 = fcn.0041e703(uVar2);\n            fcn.0040e8a0();\n            *arg_ch = uVar2;\n            arg_ch[3] = 1;\n            iVar3 = fcn.0040ce67();\n            if (iVar3 != 0) {\n                return 0;\n            }\n            iVar3 = *(*in_ECX + 4);\n            iVar4 = *(iVar3 + 8 + in_ECX);\n            if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = 2;\n            iVar4 = *(iVar3 + 8 + in_ECX);\n            cVar1 = *(iVar3 + 0xd + in_ECX);\ncode_r0x0045ecec:\n            if (cVar1 != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x18) = 0;\n            return 0;\n        }\n        uVar2 = fcn.0041e703(1);\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n    }\n    else {\n        if (ppiVar5[3] != 0xf) {\n            fcn.0040e8a0();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n            iVar3 = *(*in_ECX + 4);\n            iVar4 = *(iVar3 + 8 + in_ECX);\n            if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = 1;\n            iVar4 = *(iVar3 + 8 + in_ECX);\n            cVar1 = *(iVar3 + 0xd + in_ECX);\n            goto code_r0x0045ecec;\n        }\n        uVar2 = *((*ppiVar5)[4] + 8);\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n    }\n    *arg_ch = uVar2;\n    return 0;\n}\n",
        "token_count": 658
    },
    "0041e596": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0041e596(int32_t arg_8h, uint32_t *arg_ch, int32_t **arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *extraout_ECX;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint unaff_ESI;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    uVar7 = 0;\n    var_34h = 0;\n    var_2ch = 0;\n    uVar5 = *arg_ch + 1;\n    var_28h = 1;\n    piVar6 = arg_10h[3];\n    *arg_ch = uVar5;\n    if (piVar6 == 0x5) {\n        var_ch = *arg_10h;\n    }\n    else {\n        var_ch = NULL;\n    }\n    if (uVar5 < *(arg_8h + 8)) {\n        var_18h = 0x4e;\n        var_20h = 0x4f;\n        do {\n            uVar7 = 0;\n            var_14h = *(*var_ch + 0x10c);\n            var_10h = *(*(arg_8h + 4) + uVar5 * 4);\n            if (var_14h < arg_18h) {\n                iVar3 = 0x7d;\ncode_r0x0045ed60:\n                uVar7 = 0;\n                fcn.004734ba(iVar3, unaff_ESI);\n                break;\n            }\n            uVar1 = *(var_10h + 8);\n            var_1ch = uVar1;\n            if (uVar1 == var_18h) {\n                *(arg_14h + arg_18h * 4) = 0;\n                cVar2 = fcn.0041e596(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h + 1);\n                if (cVar2 == '\\0') break;\n            }\n            else {\n                var_10h = *(var_10h + 10);\n                if (arg_18h < var_14h) {\n                    iVar3 = 0x7e;\n                    goto code_r0x0045ed60;\n                }\n                if ((uVar1 != 0x4f) || (*(*(*(arg_8h + 4) + -4 + uVar5 * 4) + 8) != 0x4e)) {\n                    iVar3 = fcn.00410540(arg_8h, arg_ch, &var_34h, 0xffffffff);\n                    if (iVar3 < 0) break;\n                    var_1ch = 0;\n                    *(*var_ch + 0x210) = 0;\n                    piVar6 = var_ch;\n                    if (0 < arg_18h) {\n                        do {\n                            unaff_ESI = *(arg_14h + uVar7 * 4);\n                            fcn.004084b9(unaff_ESI);\n                            uVar7 = uVar7 + 1;\n                            piVar6 = extraout_ECX;\n                        } while (uVar7 < arg_18h);\n                    }\n                    iVar4 = fcn.00411df0(piVar6, 2, 0);\n                    iVar3 = var_10h;\n                    if (iVar4 == 0) goto code_r0x0045ed60;\n                    fcn.0040c5e7(&var_34h);\n                }\n            }\n            uVar7 = 0;\n            uVar5 = *arg_ch;\n            iVar3 = *(*(arg_8h + 4) + uVar5 * 4);\n            if (*(iVar3 + 8) != 0x40) {\n                if (*(iVar3 + 8) != var_20h) {\n                    iVar3 = 0x6b;\n                    goto code_r0x0045ed60;\n                }\n                *arg_ch = uVar5 + 1;\n                uVar7 = 1;\n                break;\n            }\n            piVar6 = arg_14h + -4 + arg_18h * 4;\n            *piVar6 = *piVar6 + 1;\n            uVar5 = uVar5 + 1;\n            *arg_ch = uVar5;\n        } while (uVar5 < *(arg_8h + 8));\n    }\n    uVar5 = fcn.0040e8a0();\n    return uVar5 & 0xffffff00 | uVar7;\n}\n",
        "token_count": 1144
    },
    "0041e72f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e72f(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = arg_8h;\n    arg_8h = 0;\n    var_8h = 0xffffffff;\n    var_4h = 0xffffffff;\n    uVar1 = *(iVar2 + 8);\n    var_10h = 0xffffffff;\n    var_ch = 0xffffffff;\n    var_18h = 0xffffffff;\n    var_14h = 0xffffffff;\n    if (7 < uVar1) {\n        arg_8h = fcn.00471dda();\n    }\n    if (6 < uVar1) {\n        var_4h = fcn.0040ce67();\n    }\n    if (5 < uVar1) {\n        var_8h = fcn.0040ce67();\n    }\n    if (4 < uVar1) {\n        var_14h = fcn.0040ce67();\n    }\n    if (3 < uVar1) {\n        var_18h = fcn.0040ce67();\n    }\n    if (2 < uVar1) {\n        var_ch = fcn.0040ce67();\n    }\n    if (1 < uVar1) {\n        var_10h = fcn.0040ce67();\n    }\n    iVar2 = **(iVar2 + 4);\n    fcn.00408e90();\n    iVar2 = fcn.0041e825(**(iVar2 + 8), var_18h, var_14h, var_10h, var_ch, var_8h, var_4h, arg_8h);\n    if (iVar2 == 0) {\n        iVar2 = *(*in_ECX + 4);\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 1;\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        iVar2 = 0;\n        *(iVar3 + 0x18) = 0;\n    }\n    fcn.0040e8a0();\n    arg_ch[3] = 7;\n    *arg_ch = iVar2;\n    return 0;\n}\n",
        "token_count": 632
    },
    "0041e825": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0041e825(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t dwExStyle, \n            uint32_t arg_20h, int32_t hWnd)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint unaff_EDI;\n    uint32_t uVar5;\n    uint var_28h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t lpRect;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    fcn.0041fd5b(0x1d0, unaff_EDI);\n    var_4h = fcn.0041eb70();\n    iVar1 = *0x4d1914;\n    var_8h = *0x4d1914;\n    if (*0x4d18d0 == *0x4d1914) {\n        fcn.0040285a(&var_4h);\n        iVar4 = iVar1;\n    }\n    else {\n        iVar4 = 0;\n        if (0 < *0x4d1914) {\n            do {\n                if (**(*0x4d1910 + iVar4 * 4) == 0) break;\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < *0x4d1914);\n        }\n    }\n    arg_8h_00 = var_4h;\n    **(*0x4d1910 + iVar4 * 4) = var_4h;\n    *(**(*0x4d1910 + iVar4 * 4) + 4) = iVar4;\n    if (dwExStyle == 0xffffffff) {\n        dwExStyle = 0x80ca0000;\n    }\n    uVar5 = dwExStyle | 0x4000000;\n    if ((dwExStyle & 0x10000) != 0) {\n        uVar5 = dwExStyle | 0x4080000;\n    }\n    if ((uVar5 & 0x40000) != 0) {\n        uVar5 = uVar5 | 0x80000;\n    }\n    dwExStyle = -(arg_20h != 0xffffffff) & arg_20h;\n    if ((dwExStyle & 0x40) == 0) {\n        arg_20h = arg_10h;\n    }\n    else {\n        if (hWnd == 0) goto code_r0x0045eea1;\n        dwExStyle = dwExStyle ^ 0x40;\n        var_4h[3] = 0x40;\n        iVar1 = fcn.0041b021(hWnd);\n        if (-1 < iVar1) {\n            *(**(*0x4d1910 + iVar1 * 4) + 0xc) = 0x80000000;\n        }\n        (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n        (*_sym.imp.USER32.dll_GetClientRect)(hWnd, &var_28h);\n        iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(7);\n        arg_ch = arg_ch + ((var_10h - var_20h) - iVar1);\n        iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(8);\n        arg_20h = arg_10h + ((var_ch - var_1ch) - iVar1);\n        if ((uVar5 & 0xc00000) == 0xc00000) {\n            iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(4);\n            arg_20h = arg_20h + iVar1;\n        }\n    }\n    if (arg_14h == -1) {\n        arg_14h = 400;\n    }\n    if (arg_18h == -1) {\n        arg_18h = 400;\n    }\n    if (arg_ch == -1) {\n        (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x30, 0, &lpRect, 0);\n        iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(7);\n        arg_ch = (((lpRect - arg_14h) + var_10h) - iVar1) / 2;\n    }\n    if (arg_20h == -1) {\n        (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x30, 0, &lpRect, 0);\n        iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(8);\n        arg_20h = (((var_14h - arg_18h) + var_ch) - iVar1) / 2;\n        if ((uVar5 & 0x400000) != 0) {\n            iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(4);\n            arg_20h = arg_20h + iVar1 / -2;\n        }\n    }\n    (*_sym.imp.USER32.dll_SetRect)(&lpRect, 0, 0, arg_14h, arg_18h);\n    (*_sym.imp.USER32.dll_AdjustWindowRectEx)(&lpRect, uVar5, 0, dwExStyle);\n    iVar2 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                      (dwExStyle, L\"AutoIt v3 GUI\", arg_8h, uVar5, arg_ch, arg_20h, var_10h - lpRect, var_ch - var_14h, \n                       hWnd, 0, *0x4d1904, 0);\n    *arg_8h_00 = iVar2;\n    iVar1 = var_8h;\n    if (iVar2 != 0) {\n        (*_sym.imp.USER32.dll_SetWindowLongW)(iVar2, 0xffffffeb, iVar4);\n        arg_8h_00[2] = hWnd;\n        arg_8h_00[0xf] = arg_ch;\n        arg_8h_00[0x10] = arg_20h;\n        (*_sym.imp.USER32.dll_GetClientRect)(*arg_8h_00, &lpRect);\n        arg_8h_00[0x11] = var_10h - lpRect;\n        arg_8h_00[0x12] = var_ch - var_14h;\n        uVar3 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11, 0);\n        (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h_00, 0x30, uVar3);\n        fcn.0041ea9a(arg_8h_00, 0xffffffff);\n        if (*0x4d18d4 == 0) {\n            *0x4d18d4 = (*_sym.imp.USER32.dll_SetTimer)(0, 0, 0x28, 0x41a671);\n        }\n        *0x4d18d0 = *0x4d18d0 + 1;\n        *0x4d191c = iVar4;\n        fcn.0041ea74(0);\n        if ((uVar5 & 0x10000000) != 0) {\n            if ((arg_14h == 0) || (arg_18h == 0)) {\n                fcn.00497752(*arg_8h_00);\n                return 0;\n            }\n            fcn.0041eef7(4, 0);\n        }\n        return *arg_8h_00;\n    }\ncode_r0x0045eea1:\n    if (iVar4 == iVar1) {\n        fcn.0041a561();\n    }\n    else {\n        **(*0x4d1910 + iVar4 * 4) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 1789
    },
    "0041ea74": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ea74(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (arg_8h != 0) {\n        uVar1 = fcn.0041b021(arg_8h);\n        *(in_ECX + 0x6c) = uVar1;\n    }\n    *(**(*(in_ECX + 0x60) + *(in_ECX + 0x6c) * 4) + 0x68) = 0;\n    return;\n}\n",
        "token_count": 126
    },
    "0041ea9a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041ea9a(uint *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    uint uVar5;\n    int32_t lpPoint;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_2h;\n    \n    uVar5 = *arg_8h;\n    (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n    arg_8h[0x5b] = lpPoint;\n    arg_8h[0x5c] = var_10h;\n    (*_sym.imp.USER32.dll_ScreenToClient)(uVar5, &lpPoint);\n    if ((lpPoint != arg_8h[0x5d]) || (var_10h != arg_8h[0x5e])) {\n        arg_8h[0x5d] = lpPoint;\n        arg_8h[0x5e] = var_10h;\n        if (0 < arg_ch) {\n            fcn.00492bc6(0xfffffff5, arg_8h, lpPoint, var_10h);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetAsyncKeyState;\n    uVar3 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(*(in_ECX + 0x18));\n    var_ch = (uVar3 & 0x8000) != 0;\n    var_2h._0_2_ = (*pcVar1)(*(in_ECX + 0x1c));\n    uVar2 = var_ch;\n    var_2h._0_2_ = var_2h & 0x8000;\n    var_8h = var_2h != 0;\n    if (((var_ch == arg_8h[0x5f]) || (arg_ch < 1)) || (*(arg_8h + 0x6a) == '\\0')) goto code_r0x0041eb45;\n    if ((uVar3 & 0x8000) == 0) {\n        fcn.00492bc6(0xfffffff8, arg_8h, lpPoint, var_10h);\n        if (*(arg_8h + 0x61) != '\\0') {\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongW)(*arg_8h, 0xfffffff0);\n            if ((uVar4 & 0x1000000) == 0) {\n                uVar5 = 0xfffffff4;\n            }\n            else {\n                uVar5 = 0xfffffffa;\n            }\n            goto code_r0x0045ef71;\n        }\n    }\n    else {\n        uVar5 = 0xfffffff9;\ncode_r0x0045ef71:\n        fcn.00492bc6(uVar5, arg_8h, lpPoint, var_10h);\n    }\n    *(arg_8h + 0x61) = 0;\ncode_r0x0041eb45:\n    if (arg_ch != 0) {\n        arg_8h[0x5f] = uVar2;\n    }\n    if ((var_8h != arg_8h[0x60]) && (0 < arg_ch)) {\n        if (var_2h == 0) {\n            uVar5 = 0xfffffff6;\n        }\n        else {\n            uVar5 = 0xfffffff7;\n        }\n        fcn.00492bc6(uVar5, arg_8h, lpPoint, var_10h);\n    }\n    if (arg_ch != 0) {\n        arg_8h[0x60] = var_8h;\n    }\n    return;\n}\n",
        "token_count": 888
    },
    "0041ed75": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ed75(uint noname_0, double *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint var_8h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&var_8h);\n    if (iVar1 == 0) {\n        fcn.0040e8a0();\n        *arg_ch = 0.0;\n        *(arg_ch + 0xc) = 3;\n        iVar1 = *(*in_ECX + 4);\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x14) = 1;\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x18) = 0;\n    }\n    else {\n        fcn.0040e8a0();\n        *arg_ch = _var_8h;\n        *(arg_ch + 0xc) = 3;\n    }\n    return 0;\n}\n",
        "token_count": 306
    },
    "0041eea2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041eea2(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint uVar2;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    uVar2 = 0;\n    uVar1 = *(arg_8h + 8);\n    arg_8h_00 = 5;\n    if (1 < uVar1) {\n        uVar2 = fcn.00471dda();\n        uVar1 = *(arg_8h + 8);\n    }\n    if (uVar1 != 0) {\n        arg_8h_00 = fcn.0040ce67();\n    }\n    uVar2 = fcn.0041eef7(arg_8h_00, uVar2);\n    fcn.0040e8a0();\n    *arg_ch = uVar2;\n    arg_ch[3] = 1;\n    *(in_ECX + 0x101) = 1;\n    return 0;\n}\n",
        "token_count": 239
    },
    "0041eef7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041eef7(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *arg_8h_00;\n    uint uVar1;\n    uint uVar2;\n    \n    if (arg_ch != 0) {\n        *0x4d191c = fcn.0041b021(arg_ch);\n    }\n    if (*0x4d191c == -1) {\ncode_r0x0041efa9:\n        uVar1 = 0;\n    }\n    else {\n        arg_8h_00 = **(*0x4d1910 + *0x4d191c * 4);\n        uVar1 = *arg_8h_00;\n        if (((*(arg_8h_00 + 0x3a) != '\\0') && (*(arg_8h_00 + 0x3a) = 0,  -1 < arg_8h_00[99])) &&\n           (*(arg_8h_00 + 0x66) != '\\0')) {\n            fcn.004980cd(arg_8h_00, arg_8h_00[0x65]);\n            *(arg_8h_00 + 0x66) = 0;\n        }\n        if (arg_8h < 9) {\n            if (arg_8h == 8) {\ncode_r0x0041ef6a:\n                if (*(arg_8h_00 + 0xe) != '\\0') goto code_r0x0041efa9;\n                (*_sym.imp.USER32.dll_ShowWindow)(uVar1, arg_8h);\n                if ((arg_8h != 8) && (arg_8h != 4)) {\n                    fcn.0041efad();\n                }\n                *(arg_8h_00 + 0xe) = 1;\n            }\n            else if (arg_8h == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(uVar1, 0);\n                *(arg_8h_00 + 0xe) = 0;\n            }\n            else {\n                if (arg_8h == 1) goto code_r0x0041ef6a;\n                if (arg_8h == 2) {\n                    *(arg_8h_00 + 0xe) = 1;\ncode_r0x0045f0e1:\n                    if (*(arg_8h_00 + 0xe) == '\\0') goto code_r0x0041efa9;\n                    (*_sym.imp.USER32.dll_ShowWindow)(uVar1, 6);\n                }\n                else {\n                    if (arg_8h == 3) {\n                        *(arg_8h_00 + 0xe) = 1;\n                        goto code_r0x0045f165;\n                    }\n                    if (3 < arg_8h) {\n                        if (arg_8h < 6) goto code_r0x0041ef6a;\n                        if (arg_8h == 6) goto code_r0x0045f0e1;\n                    }\n                }\n            }\n        }\n        else if (arg_8h == 9) {\ncode_r0x0045f165:\n            if (*(arg_8h_00 + 0xe) == '\\0') goto code_r0x0041efa9;\n            (*_sym.imp.USER32.dll_ShowWindow)(uVar1, arg_8h);\n            fcn.0041efad();\n        }\n        else {\n            if (arg_8h == 0x40) {\n                uVar2 = 1;\n            }\n            else {\n                if (arg_8h != 0x41) {\n                    if (arg_8h == 0x42) {\n                        *(arg_8h_00 + 0x39) = 1;\n                        (*_sym.imp.USER32.dll_LockWindowUpdate)(uVar1);\n                    }\n                    else if (arg_8h == 0x43) {\n                        *(arg_8h_00 + 0x39) = 0;\n                        (*_sym.imp.USER32.dll_LockWindowUpdate)(0);\n                        (*_sym.imp.USER32.dll_InvalidateRect)(*arg_8h_00, 0, 1);\n                    }\n                    goto code_r0x0041ef8e;\n                }\n                uVar2 = 0;\n            }\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar1, uVar2);\n        }\ncode_r0x0041ef8e:\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 1005
    },
    "0041f0d9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f0d9(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t iVar4;\n    int32_t iVar5;\n    ulong uVar6;\n    uint nNumberOfBytesToWrite;\n    uint uVar7;\n    uint var_14h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar7 = 0x49d0d0;\n    fcn.0040b5c1(0x49d0d0);\n    if (*(**(arg_8h + 4) + 0xc) == 4) {\n        puVar2 = fcn.0041fd5b(0x38, uVar7);\n        *puVar2 = 0;\n        uVar7 = fcn.0041fd8b(0x10000);\n        puVar2[1] = uVar7;\n        fcn.00407bee();\n        fcn.0040c25d();\n        fcn.00407bee();\n        iVar5 = **(arg_8h + 4);\n        fcn.00408e90();\n        uVar7 = *(iVar5 + 8);\n        fcn.00407bee();\n        puVar2[10] = 0x8000;\n        cVar1 = fcn.004070e5(uVar7, 0x8000);\n        if (cVar1 == '\\0') {\n            fcn.00407bbe(extraout_ECX);\ncode_r0x0045f1e9:\n            iVar5 = *(*in_ECX + 4);\n            iVar4 = *(in_ECX + iVar5 + 8);\n            if (*(in_ECX + iVar5 + 0xd) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = 1;\n            iVar4 = *(in_ECX + iVar5 + 8);\n            if (*(in_ECX + iVar5 + 0xd) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x18) = 0;\n            return 0;\n        }\n        fcn.00406f3a();\n        fcn.00406d7e();\n        fcn.00406d67();\n        if (((*(puVar2 + 10) & 3) != 0) && (((*(puVar2 + 10) & 1) == 0 || ((puVar2[4] | puVar2[5]) == 0)))) {\n            if (puVar2[0xb] == 3) {\n                nNumberOfBytesToWrite = 3;\n                uVar7 = 0x4c364c;\n            }\n            else if (puVar2[0xb] == 5) {\n                nNumberOfBytesToWrite = 2;\n                uVar7 = 0x4c3654;\n            }\n            else {\n                if (puVar2[0xb] != 7) goto code_r0x0041f183;\n                nNumberOfBytesToWrite = 2;\n                uVar7 = 0x4c3650;\n            }\n            fcn.0046cc1d(uVar7, nNumberOfBytesToWrite);\n        }\n    }\n    else {\n        cVar1 = fcn.00479bc8(&var_8h, **(arg_8h + 4), 0);\n        if (cVar1 == '\\0') goto code_r0x0045f1e9;\n        puVar2 = *(**(in_ECX[0x67] + var_8h * 4) + 4);\n    }\ncode_r0x0041f183:\n    if ((*(arg_8h + 8) < 2) || (iVar5 = fcn.0040ce67(),  iVar5 < 0)) {\n        uVar6 = fcn.0041f9ef();\n        var_8h = uVar6 >> 0x20;\n        iVar5 = uVar6 - puVar2[4];\n    }\n    else {\n        iVar5 = fcn.0040ce67();\n    }\n    var_4h = iVar5;\n    uVar3 = fcn.0041f2ec();\n    if ((uVar3 & 0x10) == 0) {\n        fcn.00407c18(iVar5);\n        cVar1 = fcn.0041f220(&var_14h, &var_4h);\n        if (cVar1 == '\\0') {\n            iVar5 = *(*in_ECX + 4);\n            iVar4 = *(in_ECX + iVar5 + 8);\n            if (*(in_ECX + iVar5 + 0xd) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = 0xffffffff;\n            iVar4 = *(in_ECX + iVar5 + 8);\n            if (*(in_ECX + iVar5 + 0xd) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x18) = 0;\n        }\n        else {\n            fcn.00407c5d(&var_14h);\n            fcn.00407cb4(var_4h, 0);\n        }\n        fcn.0040b1ff();\n    }\n    else {\n        var_8h = fcn.0041fd8b();\n        if ((iVar5 == 0) || (cVar1 = fcn.0041f945(var_8h, &var_4h),  iVar5 = var_4h,  cVar1 != '\\0')) {\n            uVar7 = fcn.00470da3(iVar5);\n            fcn.00420db0(uVar7, var_8h, iVar5);\n            fcn.00407cb4(iVar5, 0);\n        }\n        else {\n            iVar5 = *(*in_ECX + 4);\n            iVar4 = *(in_ECX + iVar5 + 8);\n            if (*(in_ECX + iVar5 + 0xd) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = 0xffffffff;\n            iVar4 = *(in_ECX + iVar5 + 8);\n            if (*(in_ECX + iVar5 + 0xd) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x18) = 0;\n        }\n        fcn.0041fd94(var_8h);\n    }\n    if ((*(**(arg_8h + 4) + 0xc) == 4) && (fcn.00407bee(),  puVar2 != NULL)) {\n        fcn.00407bbe(extraout_ECX_00);\n    }\n    return 0;\n}\n",
        "token_count": 1586
    },
    "0041f32c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f32c(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_ch = *arg_ch + 1;\n    if (*(*(*(arg_8h + 4) + *arg_ch * 4) + 8) == 0x7f) {\n        *0x4d1350 = 1;\n        *(in_ECX + 0x14c) = 1;\n        *(in_ECX + 0xfc) = 1;\n        return;\n    }\n    var_10h = 0;\n    var_8h = 0;\n    var_4h = 1;\n    iVar1 = fcn.00410540(arg_8h, arg_ch, &var_10h, 0xffffffff);\n    *0x4d1350 = 1;\n    *(in_ECX + 0x14c) = 1;\n    *(in_ECX + 0xfc) = 1;\n    if (-1 < iVar1) {\n        iVar1 = *(*(arg_8h + 4) + *arg_ch * 4);\n        if (*(iVar1 + 8) == 0x7f) {\n            *0x4d135c = fcn.0040ce67();\n            if ((*(in_ECX + 0x120) == '\\0') || (*0x4d135c < 0x7ffff000)) goto code_r0x0045f3a8;\n            iVar1 = -1;\n            arg_8h_00 = 0xb9;\n        }\n        else {\n            iVar1 = *(iVar1 + 10);\n            arg_8h_00 = 0x72;\n        }\n        fcn.004734ba(arg_8h_00, iVar1);\n    }\ncode_r0x0045f3a8:\n    fcn.0040e8a0();\n    return;\n}\n",
        "token_count": 469
    },
    "0041f5b3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __fastcall fcn.0041f5b3(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint uVar3;\n    uint var_18h;\n    uint var_8h;\n    uint var_1h;\n    \n    cVar1 = *0x4d1363;\n    uVar3 = 0x8000;\n    uVar2 = fcn.0042d8e5(param_1);\n    arg_ch = fcn.0042d706(uVar2, uVar3);\n    if (*(param_2 + 0xc) == 0xb) {\n        uVar2 = param_1;\n        uVar3 = fcn.00471e24();\n        arg_ch_00 = 1;\n        arg_8h = fcn.00471db4();\n        uVar2 = fcn.0042db43(arg_8h, arg_ch_00, uVar3, uVar2);\n    }\n    else {\n        fcn.0040b443();\n        fcn.00408e90();\n        fcn.0041f7a8();\n        uVar2 = fcn.0041f653(param_1, 0x49d174, var_18h);\n        if (cVar1 != '\\0') {\n            fcn.00408e90();\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(**(param_2 + 8));\n        }\n        fcn.0040b1ff();\n    }\n    fcn.0042dd29(param_1);\n    uVar3 = fcn.0042d8e5(param_1);\n    if (arg_ch == -1) {\n        arg_ch = 0x4000;\n    }\n    fcn.0042d706(uVar3, arg_ch);\n    return uVar2;\n}\n",
        "token_count": 448
    },
    "0041f6a6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041f6a6(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = arg_8h;\n    uVar1 = fcn.00408273(arg_8h);\n    iVar2 = *(*0x4d2500 * 4 + 0x4d2400);\n    if (iVar2 == 0) {\n        iVar2 = fcn.0041fd5b(0x20, iVar3);\n        fcn.0040c25d();\n        *(*0x4d2500 * 4 + 0x4d2400) = iVar2;\n    }\n    else {\n        iVar3 = *(iVar2 + 0x14);\n        if (iVar3 != 0) {\n            if (*(iVar2 + 0x18) != 0) {\n                fcn.0040ab2b(*(iVar2 + 0x18));\n                iVar3 = *(iVar2 + 0x14);\n            }\n            if (iVar3 != 0) {\n                fcn.0040ab2b(iVar3);\n            }\n        }\n    }\n    *(iVar2 + 0x10) = uVar1;\n    if (iVar2 != arg_8h) {\n        fcn.0040c1c3(arg_8h);\n    }\n    *(iVar2 + 0x14) = arg_ch;\n    *(iVar2 + 0x18) = arg_10h;\n    *(iVar2 + 0x1c) = arg_14h;\n    iVar2 = *0x4d2500 + 1;\n    *0x4d2500 = iVar2 % 0x40;\n    return iVar2 / 0x40;\n}\n",
        "token_count": 413
    },
    "0041f812": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f812(int32_t arg_8h, uint noname_1, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint unaff_EDI;\n    \n    if (((arg_10h == 0) || (arg_10h == -1)) || (arg_8h == 0)) {\n        fcn.0046c979();\n    }\n    else {\n        iVar3 = *in_ECX[3];\n        if (iVar3 < 2) {\n            fcn.0041f867(arg_10h);\n        }\n        else {\n            *in_ECX[3] = iVar3 + -1;\n            puVar1 = fcn.0041fd5b(4, unaff_EDI);\n            *puVar1 = 1;\n            in_ECX[3] = puVar1;\n            if (arg_10h == -1) {\n                uVar2 = 0x10;\n            }\n            else {\n                uVar2 = arg_10h + 0x10U & 0xfffffff0;\n            }\n            in_ECX[2] = uVar2;\n            iVar3 = fcn.0041fd8b(uVar2);\n            *in_ECX = iVar3;\n        }\n        in_ECX[1] = arg_10h;\n        fcn.00420db0(*in_ECX, arg_8h, arg_10h);\n        *(arg_10h + *in_ECX) = 0;\n    }\n    return;\n}\n",
        "token_count": 363
    },
    "0041fa6d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fa6d(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.0040c5e7(arg_8h);\n    iVar1 = *(in_ECX + 8);\n    if (*(in_ECX + 0xd) != '\\0') {\n        iVar1 = *(iVar1 + 0x38);\n    }\n    *(iVar1 + 0x30) = 0;\n    return;\n}\n",
        "token_count": 111
    },
    "0041fbf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl fcn.0041fbf0(code **arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint in_EDX;\n    float10 fVar3;\n    ulong uVar4;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    for (pcVar2 = arg_8h[3]; pcVar2 != NULL; pcVar2 = pcVar2 + -1) {\n    }\n    pcVar2 = NULL;\n    if (arg_8h[1] != 0x1) {\n        pcVar2 = arg_8h[2];\n    }\n    if (arg_8h[9] != 0x1) {\n        if (arg_8h[8] == 0xa) {\n            fVar3 = (**arg_8h)();\n            *(arg_8h + 6) = fVar3;\n            goto code_r0x0041fca7;\n        }\n        if (arg_8h[8] == 0x9) {\n            fVar3 = (**arg_8h)();\n            arg_8h[6] = fVar3;\n            goto code_r0x0041fca7;\n        }\n        if (arg_8h[10] != 0x4) {\n            uVar4 = (**arg_8h)();\n            arg_8h[7] = uVar4 >> 0x20;\n            arg_8h[6] = uVar4;\n            goto code_r0x0041fca7;\n        }\n    }\n    pcVar1 = (**arg_8h)();\n    arg_8h[6] = pcVar1;\ncode_r0x0041fca7:\n    var_8h = pcVar2 + &stack0xffffffc8 == &stack0xffffffc8;\n    return CONCAT44(in_EDX, var_8h);\n}\n",
        "token_count": 451
    },
    "0041fcd6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nulong __cdecl fcn.0041fcd6(uint arg_8h)\n\n{\n    ulong uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0xbc615a != 0) {\n        puVar3 = 0xbc617e;\n        puVar4 = &arg_8h;\n        iVar2 = *0xbc615a;\n        while( true ) {\n            if (puVar3[4] == 4) {\n                *puVar3 = *puVar4;\n            }\n            else {\n                *puVar3 = *puVar4;\n                puVar4 = puVar4 + 1;\n                puVar3[1] = *puVar4;\n            }\n            iVar2 = iVar2 + -1;\n            if (iVar2 == 0) break;\n            puVar4 = puVar4 + 1;\n            puVar3 = puVar3 + 6;\n        }\n    }\n    uVar1 = (*0xbc614e)(0xbc614e);\n    return uVar1;\n}\n",
        "token_count": 270
    },
    "00424315": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424315(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_EDI;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    \n    *(*(unaff_EBP + 0xc) + -4) = *(unaff_EBP + -0x30);\n    fcn.0042309a(*(unaff_EBP + -0x34));\n    iVar1 = fcn.00423304();\n    *(iVar1 + 0x10) = *(unaff_EBP + -0x38);\n    iVar1 = fcn.00423304();\n    *(iVar1 + 0x14) = *(unaff_EBP + -0x3c);\n    if ((((*unaff_EDI == -0x1f928c9d) && (unaff_EDI[4] == 3)) &&\n        ((unaff_EDI[5] == 0x19930520 || ((unaff_EDI[5] == 0x19930521 || (unaff_EDI[5] == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x40) == 0 && (unaff_EBX != 0)))) {\n        iVar1 = fcn.00424863(unaff_EDI[6]);\n        if (iVar1 != 0) {\n            fcn.004247b6(unaff_EDI);\n        }\n    }\n    return;\n}\n",
        "token_count": 372
    },
    "0042442d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0042442d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_10h_00;\n    code *pcVar2;\n    int32_t arg_10h_01;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004209b0(0x4c8788, 0x10);\n    arg_10h_01 = fcn.0042478b(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n    *(unaff_EBP + -0x1c) = arg_10h_01;\n    iVar3 = fcn.00423304();\n    *(iVar3 + 0x18) = *(iVar3 + 0x18) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (arg_10h_01 != *(unaff_EBP + 0x14)) {\n        if ((arg_10h_01 < 0) || (iVar3 = *(unaff_EBP + 0x10),  *(iVar3 + 4) <= arg_10h_01)) goto code_r0x0042450f;\n        iVar1 = *(iVar3 + 8);\n        arg_10h_00 = *(iVar1 + arg_10h_01 * 8);\n        *(unaff_EBP + -0x20) = arg_10h_00;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar1 + 4 + arg_10h_01 * 8) != 0) {\n            fcn.004247a8(*(unaff_EBP + 8), iVar3, arg_10h_00);\n            fcn.004245e0(*(*(iVar3 + 8) + 4 + arg_10h_01 * 8), *(unaff_EBP + 8), 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        arg_10h_01 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x1c) = arg_10h_01;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004244fb();\n    if (arg_10h_01 == *(unaff_EBP + 0x14)) {\n        fcn.004247a8(*(unaff_EBP + 8), *(unaff_EBP + 0x10), arg_10h_01);\n        *in_FS_OFFSET = *(unaff_EBP + -0x10);\n        return;\n    }\ncode_r0x0042450f:\n    fcn.00432517();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 725
    },
    "004244fb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004244fb(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00423304();\n    if (0 < *(iVar1 + 0x18)) {\n        iVar1 = fcn.00423304();\n        *(iVar1 + 0x18) = *(iVar1 + 0x18) + -1;\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "004264aa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.004264aa(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4cc014 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.0042f269();\n        *puVar1 = 0x16;\n        fcn.0043277c();\n        goto code_r0x00426601;\n    }\n    fcn.00424935(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.00426a45(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    iVar2 = fcn.00427041();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x004265d6;\ncode_r0x00426626:\n                    *(puVar1 + arg_14h * 2 + -2) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x00426626;\n                    goto code_r0x004265d6;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x004265d6:\n            *(puVar1 + var_468h * 2) = 0;\n        }\n    }\n    fcn.00426a7a();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x00426601:\n    fcn.00420a0c(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 802
    },
    "00426ab8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00426ab8(uint *param_1)\n\n{\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_10h;\n    int32_t var_478h;\n    uint var_474h;\n    uint var_46ch;\n    uint32_t var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4cc014 ^ &stack0xfffffffc;\n    arg_8h = **param_1;\n    uVar1 = fcn.00434931(arg_8h);\n    var_464h = var_464h & 0xffffff00 | uVar1;\n    fcn.00424935(*param_1[1]);\n    var_460h = **param_1;\n    arg_10h = param_1[2][1];\n    fcn.00426a45(&var_460h, *param_1[2], arg_10h, *param_1[3], &var_474h, *param_1[4]);\n    fcn.00426f21();\n    fcn.00426a7a();\n    if (var_46ch != '\\0') {\n        *(var_478h + 0x350) = *(var_478h + 0x350) & 0xfffffffd;\n    }\n    fcn.004349e6(var_464h, arg_8h);\n    fcn.00420a0c(arg_10h);\n    return;\n}\n",
        "token_count": 363
    },
    "00426b75": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00426b75(uint *param_1)\n\n{\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_10h;\n    int32_t var_478h;\n    uint var_474h;\n    uint var_46ch;\n    uint32_t var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4cc014 ^ &stack0xfffffffc;\n    arg_8h = **param_1;\n    uVar1 = fcn.00434931(arg_8h);\n    var_464h = var_464h & 0xffffff00 | uVar1;\n    fcn.00424935(*param_1[1]);\n    var_460h = **param_1;\n    arg_10h = param_1[2][1];\n    fcn.00426a10(&var_460h, *param_1[2], arg_10h, *param_1[3], &var_474h, *param_1[4]);\n    fcn.00426e05();\n    fcn.00426a7a();\n    if (var_46ch != '\\0') {\n        *(var_478h + 0x350) = *(var_478h + 0x350) & 0xfffffffd;\n    }\n    fcn.004349e6(var_464h, arg_8h);\n    fcn.00420a0c(arg_10h);\n    return;\n}\n",
        "token_count": 363
    },
    "0042734a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0042734a(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    char *pcVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    char cVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint arg_8h;\n    uint arg_ch;\n    uint uStack8;\n    \n    cVar4 = *(param_1 + 0x31);\n    if (cVar4 != 'F') {\n        if (cVar4 == 'N') {\n            if ((*param_1 & 8) == 0) {\n                param_1[7] = 8;\ncode_r0x00427382:\n                puVar5 = fcn.0042f269();\n                *puVar5 = 0x16;\n                fcn.0043277c();\n                return 0;\n            }\n        }\n        else {\n            if (param_1[0xb] != 0) goto code_r0x00427382;\n            if (cVar4 < 'k') {\n                if (cVar4 == 'j') {\n                    param_1[0xb] = 5;\n                }\n                else if (cVar4 == 'I') {\n                    pcVar1 = param_1[4];\n                    cVar4 = *pcVar1;\n                    if ((cVar4 == '3') && (pcVar1[1] == '2')) {\n                        param_1[0xb] = 10;\n                        param_1[4] = pcVar1 + 2;\n                    }\n                    else if ((cVar4 == '6') && (pcVar1[1] == '4')) {\n                        param_1[0xb] = 0xb;\n                        param_1[4] = pcVar1 + 2;\n                    }\n                    else if (((((cVar4 == 'd') || (cVar4 == 'i')) || (cVar4 == 'o')) ||\n                             ((cVar4 == 'u' || (cVar4 == 'x')))) || (cVar4 == 'X')) {\n                        param_1[0xb] = 9;\n                    }\n                }\n                else if (cVar4 == 'L') {\n                    param_1[0xb] = 8;\n                }\n                else if (cVar4 == 'T') {\n                    param_1[0xb] = 0xd;\n                }\n                else if (cVar4 == 'h') {\n                    if (*param_1[4] == 'h') {\n                        param_1[0xb] = 1;\n                        param_1[4] = param_1[4] + 1;\n                    }\n                    else {\n                        param_1[0xb] = 2;\n                    }\n                }\n            }\n            else if (cVar4 == 'l') {\n                if (*param_1[4] == 'l') {\n                    param_1[0xb] = 4;\n                    param_1[4] = param_1[4] + 1;\n                }\n                else {\n                    param_1[0xb] = 3;\n                }\n            }\n            else if (cVar4 == 't') {\n                param_1[0xb] = 7;\n            }\n            else if (cVar4 == 'w') {\n                param_1[0xb] = 0xc;\n            }\n            else if (cVar4 == 'z') {\n                param_1[0xb] = 6;\n            }\n        }\n        return 1;\n    }\n    if ((*param_1 & 8) != 0) {\n        return 1;\n    }\n    param_1[7] = 7;\n    iVar6 = 1;\n    cVar4 = *(param_1 + 0x31);\n    uStack8 = param_1;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x0042785c:\n            param_1[8] = param_1[8] | 0x10;\n            goto code_r0x00427860;\n        }\n        if ('X' < cVar4) {\n            if (cVar4 == 'Z') {\n                cVar4 = fcn.00427f47();\n                goto code_r0x004277f8;\n            }\n            if (cVar4 != 'a') {\n                if (cVar4 != 'c') {\n                    return 0;\n                }\ncode_r0x0042781c:\n                cVar4 = fcn.004282d9(0);\n                goto code_r0x004277f8;\n            }\ncode_r0x0042786c:\n            cVar4 = fcn.0042800d();\n            goto code_r0x004277f8;\n        }\n        if (cVar4 != 'X') {\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x0042781c;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x004277f1;\n                }\n            }\n            goto code_r0x0042786c;\n        }\n        arg_ch = 1;\ncode_r0x00427808:\n        arg_8h = 0x10;\n    }\n    else {\n        if (cVar4 < 'q') {\n            if (cVar4 == 'p') {\n                cVar4 = fcn.004285de();\n                goto code_r0x004277f8;\n            }\n            if (cVar4 < 'h') goto code_r0x0042786c;\n            if (cVar4 != 'i') {\n                if (cVar4 == 'n') {\n                    cVar4 = fcn.0042854b();\n                }\n                else {\n                    if (cVar4 != 'o') {\n                        return 0;\n                    }\n                    cVar4 = fcn.004285bf();\n                }\n                goto code_r0x004277f8;\n            }\n            goto code_r0x0042785c;\n        }\n        if (cVar4 == 's') {\ncode_r0x004277f1:\n            cVar4 = fcn.004285f6();\n            goto code_r0x004277f8;\n        }\n        if (cVar4 != 'u') {\n            if (cVar4 != 'x') {\n                return 0;\n            }\n            arg_ch = 0;\n            goto code_r0x00427808;\n        }\ncode_r0x00427860:\n        arg_ch = 0;\n        arg_8h = 10;\n    }\n    cVar4 = fcn.00428401(arg_8h, arg_ch);\ncode_r0x004277f8:\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(param_1 + 0xc) != '\\0') {\n        return 1;\n    }\n    uVar2 = param_1[8];\n    uStack8 = (uStack8 >> 0x10 & 0xff00) << 0x10;\n    iVar7 = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        uStack8._1_3_ = uStack8 >> 8;\n        iVar7 = iVar6;\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                iVar7 = 0;\n                if ((uVar2 >> 1 & 1) != 0) {\n                    uStack8 = CONCAT31(uStack8._1_3_, 0x20);\n                    iVar7 = iVar6;\n                }\n            }\n            else {\n                uStack8 = CONCAT31(uStack8._1_3_, 0x2b);\n            }\n        }\n        else {\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2d);\n        }\n    }\n    cVar4 = *(param_1 + 0x31);\n    if (((cVar4 != 'x') && (cVar4 != 'X')) || ((uVar2 >> 5 & 1) == 0)) {\n        iVar6 = 0;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar6 != '\\0') || (bVar3)) {\n        *(&uStack8 + iVar7) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&uStack8 + iVar7 + 1) = (!bVar3 - 1U & 0xe0) + 0x78;\n        iVar7 = iVar7 + 2;\n    }\n    iVar6 = (param_1[9] - param_1[0xe]) - iVar7;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.00426877(param_1 + 0x112, 0x20, iVar6, param_1 + 6);\n    }\n    fcn.00428a3f(&uStack8, iVar7, param_1 + 6, param_1[3]);\n    arg_14h = param_1 + 6;\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.00426877(param_1 + 0x112, 0x30, iVar6, arg_14h);\n    }\n    fcn.00428882(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.00426877(param_1 + 0x112, 0x20, iVar6, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 2288
    },
    "004277ab": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004277ab(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_14h;\n    uint32_t uVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_8h;\n    uint arg_ch;\n    int32_t var_4h;\n    \n    iVar4 = 1;\n    cVar3 = *(in_ECX + 0x31);\n    var_4h = in_ECX;\n    if (cVar3 < 'e') {\n        if (cVar3 == 'd') {\ncode_r0x0042785c:\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x10;\n            goto code_r0x00427860;\n        }\n        if ('X' < cVar3) {\n            if (cVar3 == 'Z') {\n                cVar3 = fcn.00427f47();\n                goto code_r0x004277f8;\n            }\n            if (cVar3 != 'a') {\n                if (cVar3 != 'c') {\n                    return 0;\n                }\ncode_r0x0042781c:\n                cVar3 = fcn.004282d9(0);\n                goto code_r0x004277f8;\n            }\ncode_r0x0042786c:\n            cVar3 = fcn.0042800d();\n            goto code_r0x004277f8;\n        }\n        if (cVar3 != 'X') {\n            if (cVar3 != 'A') {\n                if (cVar3 == 'C') goto code_r0x0042781c;\n                if (cVar3 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar3) {\n                    if (cVar3 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x004277f1;\n                }\n            }\n            goto code_r0x0042786c;\n        }\n        arg_ch = 1;\ncode_r0x00427808:\n        arg_8h = 0x10;\n    }\n    else {\n        if (cVar3 < 'q') {\n            if (cVar3 == 'p') {\n                cVar3 = fcn.004285de();\n                goto code_r0x004277f8;\n            }\n            if (cVar3 < 'h') goto code_r0x0042786c;\n            if (cVar3 != 'i') {\n                if (cVar3 == 'n') {\n                    cVar3 = fcn.0042854b();\n                }\n                else {\n                    if (cVar3 != 'o') {\n                        return 0;\n                    }\n                    cVar3 = fcn.004285bf();\n                }\n                goto code_r0x004277f8;\n            }\n            goto code_r0x0042785c;\n        }\n        if (cVar3 == 's') {\ncode_r0x004277f1:\n            cVar3 = fcn.004285f6();\n            goto code_r0x004277f8;\n        }\n        if (cVar3 != 'u') {\n            if (cVar3 != 'x') {\n                return 0;\n            }\n            arg_ch = 0;\n            goto code_r0x00427808;\n        }\ncode_r0x00427860:\n        arg_ch = 0;\n        arg_8h = 10;\n    }\n    cVar3 = fcn.00428401(arg_8h, arg_ch);\ncode_r0x004277f8:\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    if (*(in_ECX + 0x30) != '\\0') {\n        return 1;\n    }\n    uVar1 = *(in_ECX + 0x20);\n    var_4h = var_4h._3_1_ << 0x18;\n    iVar5 = 0;\n    if ((uVar1 >> 4 & 1) != 0) {\n        iVar5 = iVar4;\n        if ((uVar1 >> 6 & 1) == 0) {\n            if ((uVar1 & 1) == 0) {\n                iVar5 = 0;\n                if ((uVar1 >> 1 & 1) != 0) {\n                    var_4h = CONCAT31(var_4h._1_3_, 0x20);\n                    iVar5 = iVar4;\n                }\n            }\n            else {\n                var_4h = CONCAT31(var_4h._1_3_, 0x2b);\n            }\n        }\n        else {\n            var_4h = CONCAT31(var_4h._1_3_, 0x2d);\n        }\n    }\n    cVar3 = *(in_ECX + 0x31);\n    if (((cVar3 != 'x') && (cVar3 != 'X')) || ((uVar1 >> 5 & 1) == 0)) {\n        iVar4 = 0;\n    }\n    if ((cVar3 == 'a') || (cVar3 == 'A')) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((iVar4 != '\\0') || (bVar2)) {\n        *(&var_4h + iVar5) = 0x30;\n        if ((cVar3 == 'X') || (cVar3 == 'A')) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        *(&var_4h + iVar5 + 1) = (!bVar2 - 1U & 0xe0) + 0x78;\n        iVar5 = iVar5 + 2;\n    }\n    iVar4 = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - iVar5;\n    if ((uVar1 & 0xc) == 0) {\n        fcn.00426877(in_ECX + 0x448, 0x20, iVar4, in_ECX + 0x18);\n    }\n    fcn.00428a3f(&var_4h, iVar5, in_ECX + 0x18, *(in_ECX + 0xc));\n    arg_14h = in_ECX + 0x18;\n    if (((*(in_ECX + 0x20) >> 3 & 1) != 0) && ((*(in_ECX + 0x20) >> 2 & 1) == 0)) {\n        fcn.00426877(in_ECX + 0x448, 0x30, iVar4, arg_14h);\n    }\n    fcn.00428882(0);\n    if ((-1 < *arg_14h) && ((*(in_ECX + 0x20) >> 2 & 1) != 0)) {\n        fcn.00426877(in_ECX + 0x448, 0x20, iVar4, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 1642
    },
    "004274b3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004274b3(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint16_t *puVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar9;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint uStack16;\n    ushort uStack12;\n    uint32_t uStack8;\n    \n    puVar6 = *(param_1 + 0x32);\n    if (puVar6 != 0x46) {\n        if (puVar6 == 0x4e) {\n            puVar6 = *param_1 & 8;\n            if (puVar6 == NULL) {\n                param_1[7] = 8;\ncode_r0x004274ee:\n                puVar7 = fcn.0042f269();\n                *puVar7 = 0x16;\n                uVar8 = fcn.0043277c();\n                return uVar8 & 0xffffff00;\n            }\n        }\n        else {\n            if (param_1[0xb] != 0) goto code_r0x004274ee;\n            if (puVar6 < 0x6b) {\n                if (puVar6 == 0x6a) {\n                    param_1[0xb] = 5;\n                }\n                else if (puVar6 == 0x49) {\n                    puVar2 = param_1[4];\n                    puVar6 = *puVar2;\n                    if ((puVar6 == 0x33) && (puVar2[1] == 0x32)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 10;\n                        param_1[4] = puVar6;\n                    }\n                    else if ((puVar6 == 0x36) && (puVar2[1] == 0x34)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 0xb;\n                        param_1[4] = puVar6;\n                    }\n                    else if (((((puVar6 == 0x64) || (puVar6 == 0x69)) || (puVar6 == 0x6f)) ||\n                             ((puVar6 == 0x75 || (puVar6 == 0x78)))) || (puVar6 == 0x58)) {\n                        param_1[0xb] = 9;\n                    }\n                }\n                else if (puVar6 == 0x4c) {\n                    param_1[0xb] = 8;\n                }\n                else if (puVar6 == 0x54) {\n                    param_1[0xb] = 0xd;\n                }\n                else if (puVar6 == 0x68) {\n                    puVar6 = param_1[4];\n                    if (*puVar6 == 0x68) {\n                        puVar6 = puVar6 + 1;\n                        param_1[0xb] = 1;\n                        param_1[4] = puVar6;\n                    }\n                    else {\n                        param_1[0xb] = 2;\n                    }\n                }\n            }\n            else if (puVar6 == 0x6c) {\n                puVar6 = param_1[4];\n                if (*puVar6 == 0x6c) {\n                    puVar6 = puVar6 + 1;\n                    param_1[0xb] = 4;\n                    param_1[4] = puVar6;\n                }\n                else {\n                    param_1[0xb] = 3;\n                }\n            }\n            else if (puVar6 == 0x74) {\n                param_1[0xb] = 7;\n            }\n            else if (puVar6 == 0x77) {\n                param_1[0xb] = 0xc;\n            }\n            else if (puVar6 == 0x7a) {\n                param_1[0xb] = 6;\n            }\n        }\ncode_r0x0042762c:\n        return CONCAT31(puVar6 >> 8, 1);\n    }\n    puVar6 = *param_1 & 8;\n    if (puVar6 != NULL) goto code_r0x0042762c;\n    param_1[7] = 7;\n    uStack8 = *0x4cc014 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x00427a99:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x00427a9d:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x00427aa0:\n            cVar5 = fcn.00428401(arg_8h, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x00427a45:\n                arg_8h = 0x10;\n                goto code_r0x00427aa0;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x00427a59;\n                if (uVar9 < 0x45) goto code_r0x00427c27;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x00427c27;\n                    goto code_r0x00427a2d;\n                }\n            }\ncode_r0x00427aa9:\n            cVar5 = fcn.00428167();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.00427faa();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x00427aa9;\n            if (uVar9 != 99) goto code_r0x00427c27;\ncode_r0x00427a59:\n            cVar5 = fcn.00428369(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.004285de();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x00427aa9;\n            if (uVar9 == 0x69) goto code_r0x00427a99;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.0042854b();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x00427c27;\n                cVar5 = fcn.004285bf();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x00427c27;\n                arg_ch_00 = 0;\n                goto code_r0x00427a45;\n            }\n            goto code_r0x00427a9d;\n        }\ncode_r0x00427a2d:\n        cVar5 = fcn.00428669();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0xc) != '\\0')) goto code_r0x00427c27;\n    uVar8 = param_1[8];\n    uStack16 = 0;\n    uStack12 = 0;\n    arg_ch = 0;\n    if ((uVar8 >> 4 & 1) != 0) {\n        if ((uVar8 >> 6 & 1) == 0) {\n            if ((uVar8 & 1) == 0) {\n                if ((uVar8 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x00427b27;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        arg_ch = 1;\n    }\ncode_r0x00427b27:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar8 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&uStack16 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&uStack16 + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((uVar8 & 0xc) == 0) {\n        fcn.004268a3(param_1 + 0x112, 0x20, arg_10h, param_1 + 6);\n    }\n    fcn.00428ac9(&uStack16, arg_ch, param_1 + 6, param_1[3]);\n    arg_14h = param_1 + 6;\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.004268a3(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.00428929(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.004268a3(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x00427c27:\n    uVar8 = fcn.00420a0c(unaff_ESI);\n    return uVar8;\n}\n",
        "token_count": 2511
    },
    "004279da": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004279da(int32_t param_1)\n\n{\n    int32_t *arg_14h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar6;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4cc014 ^ &stack0xfffffffc;\n    uVar6 = *(param_1 + 0x32);\n    if (uVar6 < 0x65) {\n        if (uVar6 == 100) {\ncode_r0x00427a99:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x00427a9d:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x00427aa0:\n            cVar5 = fcn.00428401(arg_8h, arg_ch_00);\n        }\n        else if (uVar6 < 0x59) {\n            if (uVar6 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x00427a45:\n                arg_8h = 0x10;\n                goto code_r0x00427aa0;\n            }\n            if (uVar6 != 0x41) {\n                if (uVar6 == 0x43) goto code_r0x00427a59;\n                if (uVar6 < 0x45) goto code_r0x00427c27;\n                if (0x47 < uVar6) {\n                    if (uVar6 != 0x53) goto code_r0x00427c27;\n                    goto code_r0x00427a2d;\n                }\n            }\ncode_r0x00427aa9:\n            cVar5 = fcn.00428167();\n        }\n        else if (uVar6 == 0x5a) {\n            cVar5 = fcn.00427faa();\n        }\n        else {\n            if (uVar6 == 0x61) goto code_r0x00427aa9;\n            if (uVar6 != 99) goto code_r0x00427c27;\ncode_r0x00427a59:\n            cVar5 = fcn.00428369(0);\n        }\n    }\n    else if (uVar6 < 0x71) {\n        if (uVar6 == 0x70) {\n            cVar5 = fcn.004285de();\n        }\n        else {\n            if (uVar6 < 0x68) goto code_r0x00427aa9;\n            if (uVar6 == 0x69) goto code_r0x00427a99;\n            if (uVar6 == 0x6e) {\n                cVar5 = fcn.0042854b();\n            }\n            else {\n                if (uVar6 != 0x6f) goto code_r0x00427c27;\n                cVar5 = fcn.004285bf();\n            }\n        }\n    }\n    else {\n        if (uVar6 != 0x73) {\n            if (uVar6 != 0x75) {\n                if (uVar6 != 0x78) goto code_r0x00427c27;\n                arg_ch_00 = 0;\n                goto code_r0x00427a45;\n            }\n            goto code_r0x00427a9d;\n        }\ncode_r0x00427a2d:\n        cVar5 = fcn.00428669();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0x30) != '\\0')) goto code_r0x00427c27;\n    uVar2 = *(param_1 + 0x20);\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    arg_ch = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x00427b27;\n            }\n            uVar6 = 0x2b;\n        }\n        else {\n            uVar6 = 0x2d;\n        }\n        var_ch = uVar6;\n        arg_ch = 1;\n    }\ncode_r0x00427b27:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.004268a3(param_1 + 0x448, 0x20, arg_10h, param_1 + 0x18);\n    }\n    fcn.00428ac9(&var_ch, arg_ch, param_1 + 0x18, *(param_1 + 0xc));\n    arg_14h = param_1 + 0x18;\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.004268a3(param_1 + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.00428929(0);\n    if ((-1 < *arg_14h) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.004268a3(param_1 + 0x448, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x00427c27:\n    fcn.00420a0c(unaff_ESI);\n    return;\n}\n",
        "token_count": 1662
    },
    "0042762f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0042762f(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint16_t *puVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar9;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint uStack16;\n    ushort uStack12;\n    uint32_t uStack8;\n    \n    puVar6 = *(param_1 + 0x32);\n    if (puVar6 != 0x46) {\n        if (puVar6 == 0x4e) {\n            puVar6 = *param_1 & 8;\n            if (puVar6 == NULL) {\n                param_1[7] = 8;\ncode_r0x0042766a:\n                puVar7 = fcn.0042f269();\n                *puVar7 = 0x16;\n                uVar8 = fcn.0043277c();\n                return uVar8 & 0xffffff00;\n            }\n        }\n        else {\n            if (param_1[0xb] != 0) goto code_r0x0042766a;\n            if (puVar6 < 0x6b) {\n                if (puVar6 == 0x6a) {\n                    param_1[0xb] = 5;\n                }\n                else if (puVar6 == 0x49) {\n                    puVar2 = param_1[4];\n                    puVar6 = *puVar2;\n                    if ((puVar6 == 0x33) && (puVar2[1] == 0x32)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 10;\n                        param_1[4] = puVar6;\n                    }\n                    else if ((puVar6 == 0x36) && (puVar2[1] == 0x34)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 0xb;\n                        param_1[4] = puVar6;\n                    }\n                    else if (((((puVar6 == 0x64) || (puVar6 == 0x69)) || (puVar6 == 0x6f)) ||\n                             ((puVar6 == 0x75 || (puVar6 == 0x78)))) || (puVar6 == 0x58)) {\n                        param_1[0xb] = 9;\n                    }\n                }\n                else if (puVar6 == 0x4c) {\n                    param_1[0xb] = 8;\n                }\n                else if (puVar6 == 0x54) {\n                    param_1[0xb] = 0xd;\n                }\n                else if (puVar6 == 0x68) {\n                    puVar6 = param_1[4];\n                    if (*puVar6 == 0x68) {\n                        puVar6 = puVar6 + 1;\n                        param_1[0xb] = 1;\n                        param_1[4] = puVar6;\n                    }\n                    else {\n                        param_1[0xb] = 2;\n                    }\n                }\n            }\n            else if (puVar6 == 0x6c) {\n                puVar6 = param_1[4];\n                if (*puVar6 == 0x6c) {\n                    puVar6 = puVar6 + 1;\n                    param_1[0xb] = 4;\n                    param_1[4] = puVar6;\n                }\n                else {\n                    param_1[0xb] = 3;\n                }\n            }\n            else if (puVar6 == 0x74) {\n                param_1[0xb] = 7;\n            }\n            else if (puVar6 == 0x77) {\n                param_1[0xb] = 0xc;\n            }\n            else if (puVar6 == 0x7a) {\n                param_1[0xb] = 6;\n            }\n        }\ncode_r0x004277a8:\n        return CONCAT31(puVar6 >> 8, 1);\n    }\n    puVar6 = *param_1 & 8;\n    if (puVar6 != NULL) goto code_r0x004277a8;\n    param_1[7] = 7;\n    uStack8 = *0x4cc014 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x00427cf6:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x00427cfa:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x00427cfd:\n            cVar5 = fcn.00428401(arg_8h, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x00427ca2:\n                arg_8h = 0x10;\n                goto code_r0x00427cfd;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x00427cb6;\n                if (uVar9 < 0x45) goto code_r0x00427e84;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x00427e84;\n                    goto code_r0x00427c8a;\n                }\n            }\ncode_r0x00427d06:\n            cVar5 = fcn.00428167();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.00427faa();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x00427d06;\n            if (uVar9 != 99) goto code_r0x00427e84;\ncode_r0x00427cb6:\n            cVar5 = fcn.00428369(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.004285de();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x00427d06;\n            if (uVar9 == 0x69) goto code_r0x00427cf6;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.0042854b();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x00427e84;\n                cVar5 = fcn.004285bf();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x00427e84;\n                arg_ch_00 = 0;\n                goto code_r0x00427ca2;\n            }\n            goto code_r0x00427cfa;\n        }\ncode_r0x00427c8a:\n        cVar5 = fcn.00428669();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0xc) != '\\0')) goto code_r0x00427e84;\n    uVar8 = param_1[8];\n    uStack16 = 0;\n    uStack12 = 0;\n    arg_ch = 0;\n    if ((uVar8 >> 4 & 1) != 0) {\n        if ((uVar8 >> 6 & 1) == 0) {\n            if ((uVar8 & 1) == 0) {\n                if ((uVar8 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x00427d84;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        arg_ch = 1;\n    }\ncode_r0x00427d84:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar8 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&uStack16 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&uStack16 + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((uVar8 & 0xc) == 0) {\n        fcn.004268d4(param_1 + 0x112, 0x20, arg_10h, param_1 + 6);\n    }\n    fcn.00428b56(&uStack16, arg_ch, param_1 + 6, param_1[3]);\n    arg_14h = param_1 + 6;\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.004268d4(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.004289b4(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.004268d4(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x00427e84:\n    uVar8 = fcn.00420a0c(unaff_ESI);\n    return uVar8;\n}\n",
        "token_count": 2512
    },
    "00427c37": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00427c37(int32_t param_1)\n\n{\n    int32_t *arg_14h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar6;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4cc014 ^ &stack0xfffffffc;\n    uVar6 = *(param_1 + 0x32);\n    if (uVar6 < 0x65) {\n        if (uVar6 == 100) {\ncode_r0x00427cf6:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x00427cfa:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x00427cfd:\n            cVar5 = fcn.00428401(arg_8h, arg_ch_00);\n        }\n        else if (uVar6 < 0x59) {\n            if (uVar6 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x00427ca2:\n                arg_8h = 0x10;\n                goto code_r0x00427cfd;\n            }\n            if (uVar6 != 0x41) {\n                if (uVar6 == 0x43) goto code_r0x00427cb6;\n                if (uVar6 < 0x45) goto code_r0x00427e84;\n                if (0x47 < uVar6) {\n                    if (uVar6 != 0x53) goto code_r0x00427e84;\n                    goto code_r0x00427c8a;\n                }\n            }\ncode_r0x00427d06:\n            cVar5 = fcn.00428167();\n        }\n        else if (uVar6 == 0x5a) {\n            cVar5 = fcn.00427faa();\n        }\n        else {\n            if (uVar6 == 0x61) goto code_r0x00427d06;\n            if (uVar6 != 99) goto code_r0x00427e84;\ncode_r0x00427cb6:\n            cVar5 = fcn.00428369(0);\n        }\n    }\n    else if (uVar6 < 0x71) {\n        if (uVar6 == 0x70) {\n            cVar5 = fcn.004285de();\n        }\n        else {\n            if (uVar6 < 0x68) goto code_r0x00427d06;\n            if (uVar6 == 0x69) goto code_r0x00427cf6;\n            if (uVar6 == 0x6e) {\n                cVar5 = fcn.0042854b();\n            }\n            else {\n                if (uVar6 != 0x6f) goto code_r0x00427e84;\n                cVar5 = fcn.004285bf();\n            }\n        }\n    }\n    else {\n        if (uVar6 != 0x73) {\n            if (uVar6 != 0x75) {\n                if (uVar6 != 0x78) goto code_r0x00427e84;\n                arg_ch_00 = 0;\n                goto code_r0x00427ca2;\n            }\n            goto code_r0x00427cfa;\n        }\ncode_r0x00427c8a:\n        cVar5 = fcn.00428669();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0x30) != '\\0')) goto code_r0x00427e84;\n    uVar2 = *(param_1 + 0x20);\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    arg_ch = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x00427d84;\n            }\n            uVar6 = 0x2b;\n        }\n        else {\n            uVar6 = 0x2d;\n        }\n        var_ch = uVar6;\n        arg_ch = 1;\n    }\ncode_r0x00427d84:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.004268d4(param_1 + 0x448, 0x20, arg_10h, param_1 + 0x18);\n    }\n    fcn.00428b56(&var_ch, arg_ch, param_1 + 0x18, *(param_1 + 0xc));\n    arg_14h = param_1 + 0x18;\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.004268d4(param_1 + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.004289b4(0);\n    if ((-1 < *arg_14h) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.004268d4(param_1 + 0x448, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x00427e84:\n    fcn.00420a0c(unaff_ESI);\n    return;\n}\n",
        "token_count": 1662
    },
    "00428401": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00428401(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t in_ECX;\n    uint32_t arg_ch_00;\n    bool bVar5;\n    \n    iVar1 = fcn.00427eeb(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.0042f269();\n                *puVar2 = 0x16;\n                uVar3 = fcn.0043277c();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x004284b2;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x004284b2;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x004284b2:\n    if ((((*(in_ECX + 0x20) >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar5 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar5);\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x40;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xfffffff7;\n        if (0x200 < *(in_ECX + 0x28)) {\n            *(in_ECX + 0x28) = 0x200;\n        }\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    if (iVar1 == 8) {\n        fcn.004267ef(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.0042677a(uVar3, arg_8h, arg_ch);\n    }\n    pcVar4 = *(in_ECX + 0x20) >> 7;\n    if (((pcVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (pcVar4 = *(in_ECX + 0x34),  *pcVar4 != '0')))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(pcVar4 >> 8, 1);\n}\n",
        "token_count": 1100
    },
    "00429304": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.00429304(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint extraout_ECX;\n    float10 fVar2;\n    uint arg_ch_00;\n    uint arg_10h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    \n    if (arg_8h == 0) {\n        puVar1 = fcn.0042f269();\n        *puVar1 = 0x16;\n        fcn.0043277c();\n        fVar2 = 0;\n    }\n    else {\n        fcn.00424935(arg_ch);\n        puVar1 = &var_ch;\n        _var_ch = 0.0;\n        arg_ch_00 = extraout_ECX;\n        arg_10h = extraout_ECX;\n        fcn.00425278(&stack0xffffffd0, arg_8h, 0);\n        fcn.004293b5(&var_18h, arg_ch_00, arg_10h, puVar1);\n        fVar2 = _var_ch;\n        if (var_10h != '\\0') {\n            *(var_1ch + 0x350) = *(var_1ch + 0x350) & 0xfffffffd;\n        }\n    }\n    return fVar2;\n}\n",
        "token_count": 319
    },
    "0042d2be": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042d2be(int16_t *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    ushort *arg_8h_00;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int16_t *piVar6;\n    int16_t *arg_10h_00;\n    int16_t *piVar7;\n    uint var_4h;\n    \n    if (((((arg_8h == NULL) || (arg_ch == NULL)) || (arg_8h_00 = *arg_ch,  (arg_8h_00 == NULL) != (arg_ch[1] == 0))) ||\n        (((arg_ch[2] == 0) != (arg_ch[3] == 0) || ((arg_ch[4] == 0) != (arg_ch[5] == 0))))) ||\n       ((arg_ch[6] == 0) != (arg_ch[7] == 0))) {\n        fcn.0042d4c2(arg_ch);\n        puVar3 = fcn.0042f269();\n        *puVar3 = 0x16;\n        fcn.0043277c();\n        return 0x16;\n    }\n    iVar2 = 1;\n    piVar6 = arg_8h;\n    do {\n        if (*piVar6 == 0) break;\n        piVar6 = piVar6 + 1;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    if (*piVar6 == 0x3a) {\n        if (arg_8h_00 == NULL) {\ncode_r0x0042d38e:\n            arg_8h = piVar6 + 1;\n            goto code_r0x0042d3a1;\n        }\n        if (2 < arg_ch[1]) {\n            fcn.00434e20(arg_8h_00, 0xffffffff, arg_8h, 2);\n            goto code_r0x0042d38e;\n        }\ncode_r0x0042d364:\n        fcn.0042d4c2(arg_ch);\n        puVar3 = fcn.0042f269();\n        uVar5 = 0x22;\n        *puVar3 = 0x22;\n    }\n    else {\n        if ((arg_8h_00 != NULL) && (arg_ch[1] != 0)) {\n            *arg_8h_00 = 0;\n        }\ncode_r0x0042d3a1:\n        piVar6 = NULL;\n        arg_10h_00 = NULL;\n        iVar1 = *arg_8h;\n        piVar7 = arg_8h;\n        if (iVar1 == 0) {\ncode_r0x0042d407:\n            piVar6 = arg_8h;\n            if ((arg_ch[2] != NULL) && (arg_ch[3] != 0)) {\n                *arg_ch[2] = 0;\n            }\n        }\n        else {\n            do {\n                if ((iVar1 == 0x2f) || (iVar1 == 0x5c)) {\n                    piVar6 = piVar7 + 1;\n                }\n                else if (iVar1 == 0x2e) {\n                    arg_10h_00 = piVar7;\n                }\n                piVar7 = piVar7 + 1;\n                iVar1 = *piVar7;\n            } while (iVar1 != 0);\n            if (piVar6 == NULL) goto code_r0x0042d407;\n            if (arg_ch[2] != 0) {\n                uVar4 = piVar6 - arg_8h >> 1;\n                if (arg_ch[3] < uVar4 || arg_ch[3] == uVar4) goto code_r0x0042d364;\n                fcn.00434e20(arg_ch[2], 0xffffffff, arg_8h, uVar4);\n            }\n        }\n        if ((arg_10h_00 == NULL) || (arg_10h_00 < piVar6)) {\n            if (arg_ch[4] != 0) {\n                uVar4 = piVar7 - piVar6 >> 1;\n                if (arg_ch[5] < uVar4 || arg_ch[5] == uVar4) goto code_r0x0042d364;\n                fcn.00434e20(arg_ch[4], 0xffffffff, piVar6, uVar4);\n            }\n            if ((arg_ch[6] != NULL) && (arg_ch[7] != 0)) {\n                *arg_ch[6] = 0;\n            }\n        }\n        else {\n            if (arg_ch[4] != 0) {\n                uVar4 = arg_10h_00 - piVar6 >> 1;\n                if (arg_ch[5] < uVar4 || arg_ch[5] == uVar4) goto code_r0x0042d364;\n                fcn.00434e20(arg_ch[4], 0xffffffff, piVar6, uVar4);\n            }\n            if (arg_ch[6] != 0) {\n                uVar4 = piVar7 - arg_10h_00 >> 1;\n                if (arg_ch[7] < uVar4 || arg_ch[7] == uVar4) goto code_r0x0042d364;\n                fcn.00434e20(arg_ch[6], 0xffffffff, arg_10h_00, uVar4);\n            }\n        }\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 1266
    },
    "0042fbfd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0042fbfd(uint param_1, uint32_t param_2, int32_t param_3, uint32_t param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (in_ZF) {\n        if (((param_4 & 0xfffff) != 0) || (param_3 != 0)) {\n            uVar1 = fcn.00437d0c();\n            goto code_r0x0042fc7b;\n        }\n        uVar1 = param_4 & 0x80000000;\n        if (uVar1 != 0) goto code_r0x0042fc6e;\n    }\n    else {\n        uVar1 = param_4;\n        if (in_FPUControlWord != 0x27f) {\n            uVar1 = fcn.00437cf5();\n        }\n        if (((uVar1 & 0x80000000) != 0) && ((((uVar1 & 0x7ff00000) != 0 || ((uVar1 & 0xfffff) != 0)) || (param_3 != 0)))\n           ) {\ncode_r0x0042fc6e:\n            uVar1 = 1;\ncode_r0x0042fc7b:\n            if (*0x4d11f0 == 0) {\n                uVar3 = fcn.00437c97(arg_8h, unaff_retaddr, param_3, param_4);\n                return CONCAT44(arg_8h, uVar3);\n            }\n            goto code_r0x00437d7e;\n        }\n    }\n    if (*0x4d11f0 == 0) {\n        uVar2 = uVar1 & 0xffff0000 | arg_8h & 0xffff;\n        if ((arg_8h & 0xffff) != 0x27f) {\n            if (((arg_8h & 0x20) != 0) &&\n               (uVar2 = uVar1 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                uVar3 = fcn.00437c97(arg_8h, unaff_retaddr, param_3, param_4);\n                return CONCAT44(arg_8h, uVar3);\n            }\n            uVar2 = uVar2 & 0xffff0020;\n        }\n        return CONCAT44(arg_8h, uVar2);\n    }\ncode_r0x00437d7e:\n    return CONCAT44(arg_8h, uVar1);\n}\n",
        "token_count": 653
    },
    "00430147": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00430147(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    int64_t iVar9;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.0042f269();\n        *puVar2 = 0x16;\n        fcn.0043277c();\n        return 0x16;\n    }\n    puVar6 = arg_8h;\n    for (iVar5 = 9; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = 0xffffffff;\n        puVar6 = puVar6 + 1;\n    }\n    if (arg_ch == NULL) {\n        puVar2 = fcn.0042f269();\n        *puVar2 = 0x16;\n        fcn.0043277c();\n        return 0x16;\n    }\n    if (((arg_ch[1] < 1) && (arg_ch[1] < 0)) || ((6 < arg_ch[1] && ((7 < arg_ch[1] || (0x93406fff < *arg_ch)))))) {\n        puVar2 = fcn.0042f269();\n        *puVar2 = 0x16;\n        return 0x16;\n    }\n    fcn.0043bd02();\n    var_8h = 0;\n    var_ch = 0;\n    var_4h = 0;\n    iVar5 = fcn.0043b301(&var_8h);\n    if (((iVar5 != 0) || (iVar5 = fcn.0043b32d(&var_ch),  iVar5 != 0)) || (iVar5 = fcn.0043b359(&var_4h),  iVar5 != 0))\n    {\n        fcn.0043278c(0, 0, 0, 0, 0);\n        pcVar1 = swi(3);\n        iVar5 = (*pcVar1)();\n        return iVar5;\n    }\n    uVar4 = arg_ch[1];\n    uVar3 = *arg_ch;\n    if ((((-1 < uVar4) && ((0 < uVar4 || (0x3f480 < uVar3)))) && (uVar4 < 8)) && ((uVar4 < 7 || (uVar3 < 0x933c7b7f))))\n    {\n        var_14h = uVar3 - var_4h;\n        var_10h = (uVar4 - (var_4h >> 0x1f)) - (uVar3 < var_4h);\n        iVar5 = fcn.0043b5b0(arg_8h, &var_14h);\n        if (iVar5 != 0) {\n            return iVar5;\n        }\n        if (var_8h == 0) {\n            return 0;\n        }\n        iVar5 = fcn.0043bd53(arg_8h);\n        if (iVar5 == 0) {\n            return 0;\n        }\n        bVar8 = var_14h < var_ch;\n        var_14h = var_14h - var_ch;\n        var_10h = (var_10h - (var_ch >> 0x1f)) - bVar8;\n        iVar5 = fcn.0043b5b0(arg_8h, &var_14h);\n        if (iVar5 == 0) {\n            arg_8h[8] = 1;\n            return 0;\n        }\n        return iVar5;\n    }\n    iVar5 = fcn.0043b5b0(arg_8h, arg_ch);\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    uVar4 = *arg_8h;\n    uVar3 = var_4h;\n    if ((var_8h != 0) && (iVar5 = fcn.0043bd53(arg_8h),  uVar3 = var_4h,  iVar5 != 0)) {\n        arg_8h[8] = 1;\n        uVar3 = var_4h + var_ch;\n    }\n    uVar7 = uVar4 - uVar3;\n    iVar5 = ((uVar4 >> 0x1f) - (uVar3 >> 0x1f)) - (uVar4 < uVar3);\n    uVar4 = fcn.00441f20(uVar7, iVar5, 0x3c, 0);\n    *arg_8h = uVar4;\n    if (uVar4 < 0) {\n        bVar8 = 0x3b < uVar7;\n        uVar7 = uVar7 - 0x3c;\n        *arg_8h = uVar4 + 0x3c;\n        iVar5 = iVar5 + -1 + bVar8;\n    }\n    iVar9 = fcn.00441e40(uVar7, iVar5, 0x3c, 0);\n    iVar9 = iVar9 + arg_8h[1];\n    uVar4 = fcn.00441f20(iVar9, 0x3c, 0);\n    arg_8h[1] = uVar4;\n    if (uVar4 < 0) {\n        arg_8h[1] = uVar4 + 0x3c;\n        iVar9 = iVar9 + -0x3c;\n    }\n    iVar9 = fcn.00441e40(iVar9, 0x3c, 0);\n    iVar9 = iVar9 + arg_8h[2];\n    uVar4 = fcn.00441f20(iVar9, 0x18, 0);\n    arg_8h[2] = uVar4;\n    if (uVar4 < 0) {\n        arg_8h[2] = uVar4 + 0x18;\n        iVar9 = iVar9 + -0x18;\n    }\n    iVar9 = fcn.00441e40(iVar9, 0x18, 0);\n    iVar5 = iVar9;\n    if (-1 < iVar9) {\n        if ((0xffffffff < iVar9) || (iVar5 != 0)) {\n            arg_8h[3] = arg_8h[3] + iVar5;\n            arg_8h[6] = (arg_8h[6] + iVar5) % 7;\n            goto code_r0x004300f2;\n        }\n        if (0xffffffff < iVar9) {\n            return 0;\n        }\n        if (-1 < iVar9) {\n            return 0;\n        }\n    }\n    arg_8h[3] = arg_8h[3] + iVar5;\n    arg_8h[6] = (arg_8h[6] + 7 + iVar5) % 7;\n    if (arg_8h[3] < 1) {\n        arg_8h[4] = 0xb;\n        arg_8h[3] = arg_8h[3] + 0x1f;\n        arg_8h[7] = arg_8h[7] + iVar5 + 0x16d;\n        arg_8h[5] = arg_8h[5] - 1;\n        return 0;\n    }\ncode_r0x004300f2:\n    arg_8h[7] = arg_8h[7] + iVar5;\n    return 0;\n}\n",
        "token_count": 1764
    },
    "00436d79": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 fcn.00436d79(double param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint uVar10;\n    bool bVar11;\n    double dVar12;\n    double dVar13;\n    ulong in_XMM1_Qa;\n    double dVar14;\n    uchar auVar15 [16];\n    uint64_t in_XMM2_Qa;\n    int64_t iVar16;\n    uchar auVar17 [16];\n    int64_t iVar18;\n    uint64_t in_XMM3_Qa;\n    uint64_t uVar19;\n    double dVar20;\n    double dVar21;\n    double dVar22;\n    double dVar23;\n    double dVar24;\n    double dVar25;\n    double dVar26;\n    uchar auStack12 [4];\n    \n    dVar12 = param_1 >> 0x2c;\n    uVar1 = param_1 >> 0x30;\n    uVar3 = (SUB82(dVar12, 0) & 0xff) + 1 & 0x1fe;\n    dVar25 = (*0x4a2e00 & param_1 | *0x4a2e10) * *(uVar3 * 4 + 0x4a5808);\n    dVar22 = *(uVar3 * 4 + 0x4a5808);\n    dVar13 = *(uVar3 * 8 + 0x4a5c20);\n    dVar24 = *(uVar3 * 8 + 0x4a5c28);\n    uVar7 = 0x7fef - uVar1;\n    uVar3 = SUB84(param_1, 0);\n    uVar9 = param_1 >> 0x20;\n    dVar23 = param_1;\n    if ((uVar1 - 0x10 | uVar7) < 0x80000000) {\n        uVar7 = 0;\n        uVar8 = 0x3fe7f;\ncode_r0x00436df6:\n        uVar4 = (dVar25 >> 0x26 & 0xff) + 1 & 0x1fe;\n        dVar25 = dVar25 * *(uVar4 * 4 + 0x4a6430);\n        dVar20 = dVar23 & *0x4a2e00 | *0x4a2e10;\n        dVar14 = *0x4a2e58 & dVar20;\n        in_XMM3_Qa = in_XMM3_Qa >> 0x1f;\n        dVar20 = dVar20 - dVar14;\n        uVar5 = (dVar25 >> 0x1f & 0x1ff) + 1 & 0x3fe;\n        dVar21 = dVar22 * *(uVar4 * 4 + 0x4a6430) * *(uVar5 * 4 + 0x4a7050);\n        dVar25 = dVar25 * *(uVar5 * 4 + 0x4a7050);\n        dVar23 = dVar13 + *(uVar4 * 8 + 0x4a6840) + (dVar12 - uVar8 >> 8) + *(uVar5 * 8 + 0x4a7860);\n        dVar12 = dVar24 + *(uVar4 * 8 + 0x4a6848) + *(uVar5 * 8 + 0x4a7868);\n        dVar13 = *0x4a2e58 & dVar21;\n        dVar21 = dVar21 - dVar13;\n        dVar26 = *0x4a2e60 + dVar25;\n        dVar24 = dVar23 + dVar26;\n        dVar22 = CONCAT44(param_3, param_2);\n        uVar2 = param_3 >> 0x10;\n        dVar23 = dVar23 - dVar24;\n        uVar4 = dVar24 >> 0x30;\n        dVar13 = (((dVar25 - dVar13 * dVar14) - dVar14 * dVar21) - dVar13 * dVar20) - dVar20 * dVar21;\n        dVar14 = dVar26 - dVar13;\n        dVar25 = dVar24 - dVar13;\n        uVar8 = uVar2 & 0x7ff0;\n        if (uVar8 < 0x7ff0) {\n            iVar6 = (uVar8 - 0x3ff0) + (uVar4 & 0x7ff0);\n            if ((0x40a0U - iVar6 | iVar6 - 0x3c70U) < 0x80000000) {\ncode_r0x00436f48:\n                dVar20 = *0x4a2e58 & dVar22;\n                dVar21 = *0x4a2e58 & dVar25;\n                dVar13 = (dVar23 + dVar26) - (dVar13 - (dVar24 - dVar25));\n                auVar17 = pinsrw(ZEXT816(0), 0x4060, 3);\n                dVar24 = dVar20 * dVar21 * SUB168(auVar17, 0);\n                uVar3 = ROUND(dVar24);\n                dVar22 = dVar20 * (dVar25 - dVar21) + dVar21 * (dVar22 - dVar20) + (dVar25 - dVar21) * (dVar22 - dVar20)\n                ;\n                if (0 < (0x1ff7f - uVar3 | uVar3 + 0x1e1ff)) {\n                    iVar6 = (uVar3 & 0x7f) * 0x10;\n                    auVar17 = pinsrw(ZEXT816(0), 0x3f80, 3);\n                    uVar3 = ((uVar7 + uVar3 & 0xffffff80) + 0x1ff80 << 0x2d) >> 0x20;\n                    dVar25 = *(\"\\aAiFC.\u05bf\" + iVar6 + 8) * (uVar3 << 0x20);\n                    dVar22 = (dVar24 - ((dVar24 + *0x4a2df0) - *0x4a2df0)) * SUB168(auVar17, 0) +\n                             dVar22 + ((*0x4a8870 * dVar14 + *0x4a8880 * dVar14 * dVar14) * dVar14 * dVar14 +\n                                       *0x4a8878 * dVar14 + str._aAiFC.._0_8_ * dVar14 * dVar14 + dVar12 + dVar13) *\n                                      CONCAT44(param_3, param_2);\n                    return dVar22 * dVar22 * dVar25 * (*0x4a2e40 + *0x4a2e30 * dVar22) * dVar22 * dVar22 +\n                           *(iVar6 + 0x4a8898) * SUB128((ZEXT412(uVar3) << 0x40) >> 0x20, 0) +\n                           (*0x4a2e48 + *0x4a2e38 * dVar22) * dVar22 * dVar22 * dVar25 + *0x4a2e50 * dVar22 * dVar25 +\n                           dVar25;\n                }\n                if (uVar3 < 1) {\n                    if (uVar3 < -0x3fdff) {\ncode_r0x004377a7:\n                        uVar10 = 0x19;\n                        _auStack12 = *0x4a2e98 * *0x4a2e98 | uVar7 << 0x2d;\n                        goto code_r0x0043754e;\n                    }\n                    uVar7 = uVar7 + 0x80;\n                    uVar9 = (uVar3 & 0xffffff80) + 0x3fe80;\n                    uVar10 = 0;\n                }\n                else {\n                    if (0x3ffff < uVar3) goto code_r0x004377ca;\n                    uVar7 = uVar7 + 0x3ff00;\n                    uVar9 = uVar3 - 0x80 & 0xffffff80;\n                    uVar10 = 0x3ff0;\n                }\n                iVar6 = (uVar3 & 0x7f) * 0x10;\n                uVar3 = (-(uVar9 - 0x1ff80) >> 7) + 2;\n                auVar17 = pinsrw(ZEXT816(0), 0x3f80, 3);\n                uVar8 = (uVar9 << 0x2d) >> 0x20;\n                dVar25 = *(\"\\aAiFC.\u05bf\" + iVar6 + 8) * (uVar8 << 0x20);\n                dVar22 = (dVar24 - ((dVar24 + *0x4a2df0) - *0x4a2df0)) * SUB168(auVar17, 0) +\n                         dVar22 + ((*0x4a8870 * dVar14 + *0x4a8880 * dVar14 * dVar14) * dVar14 * dVar14 +\n                                   *0x4a8878 * dVar14 + str._aAiFC.._0_8_ * dVar14 * dVar14 + dVar12 + dVar13) *\n                                  CONCAT44(param_3, param_2);\n                _auStack12 = uVar7 << 0x2d;\n                uVar19 = uVar3 + (uVar3 & 0x20);\n                dVar13 = -1 << uVar19 & dVar25;\n                dVar22 = dVar22 * dVar22 * dVar25 * (*0x4a2e40 + *0x4a2e30 * dVar22) * dVar22 * dVar22 +\n                         *(iVar6 + 0x4a8898) * SUB128((ZEXT412(uVar8) << 0x40) >> 0x20, 0) +\n                         (*0x4a2e48 + *0x4a2e38 * dVar22) * dVar22 * dVar22 * dVar25 + *0x4a2e50 * dVar22 * dVar25;\n                dVar24 = dVar13 + dVar22 & -1 << uVar19;\n                auVar17 = pinsrw(ZEXT816(0), uVar10, 3);\n                dVar22 = dVar22 + (dVar13 - dVar24) + (dVar25 - dVar13);\n                if (uVar9 - 0x1ff80 < 1) {\n                    _auStack12 = dVar22 * _auStack12 + dVar24 * _auStack12;\n                    _auStack12 = _auStack12 + SUB168(auVar17, 0) * _auStack12;\n                    uVar10 = 0x18;\n                    if (((_auStack12 >> 0x30 & 0x7ff0) != 0x7ff0) &&\n                       (uVar10 = 0x19,  (_auStack12 & 0x7ff0000000000000) != 0)) {\n                        return _auStack12;\n                    }\n                }\n                else {\n                    _auStack12 = (dVar22 + dVar24) * _auStack12;\n                    _auStack12 = _auStack12 + SUB168(auVar17, 0) * _auStack12;\n                    uVar10 = 0x18;\n                    if (((_auStack12 >> 0x30 & 0x7ff0) != 0x7ff0) &&\n                       (uVar10 = 0x19,  (_auStack12 & 0x7ff0000000000000) != 0)) {\n                        return _auStack12;\n                    }\n                }\n            }\n            else {\n                dVar24 = dVar22 * dVar25;\n                uVar3 = dVar24 >> 0x30 & 0x7ff0;\n                uVar9 = uVar3 - 0x3c70;\n                if ((0x40a0 - uVar3 | uVar9) < 0x80000000) goto code_r0x00436f48;\n                if (0x7fffffff < uVar9) {\n                    return (uVar7 | 0x1ff80) << 0x2d;\n                }\n                if (((uVar2 ^ (uVar1 & 0x7ff0) + 0xc010) & 0x8000) != 0) goto code_r0x004377a7;\ncode_r0x004377ca:\n                uVar10 = 0x18;\n                if (uVar7 == 0) {\n                    _auStack12 = *0x4a2e90 * *0x4a2e90;\n                }\n                else {\n                    _auStack12 = *0x4a2e88 * *0x4a2e90;\n                }\n            }\n            goto code_r0x0043754e;\n        }\n        auVar17 = CONCAT88(in_XMM2_Qa, CONCAT44(param_3, param_2));\n        bVar11 = uVar3 == 0;\n        uVar3 = uVar4;\n        if (bVar11) {\n            if (uVar9 == 0x3ff00000) goto code_r0x0043754b;\n            uVar3 = uVar9;\n            if (uVar9 == 0xbff00000) {\n                return 1;\n            }\n        }\n    }\n    else {\n        auVar17 = CONCAT88(in_XMM2_Qa, CONCAT44(param_3, param_2));\n        uVar8 = param_3 & *0x4a2e24;\n        uVar19 = in_XMM3_Qa >> 0x20;\n        if (uVar8 < 0x7ff00000) {\n            if ((param_2 | uVar8) == 0) {\n                uVar10 = 0x1a;\n                _auStack12 = *0x4a2e10;\n                if ((uVar3 | uVar9 & 0x7fffffff) != 0) {\n                    uVar10 = 0x1d;\n                    if (((uVar9 & 0x7fffffff) < 0x7ff00001) && (((uVar9 & 0x7fffffff) < 0x7ff00000 || (uVar3 == 0)))) {\n                        return *0x4a2e10;\n                    }\n                }\n                goto code_r0x0043754e;\n            }\n            if (uVar7 < 0) {\n                auVar17 = auVar17 | CONCAT88(in_XMM3_Qa << 0x34, CONCAT44(*0x4a2e24, *0x4a2e20) << 0x34);\n                in_XMM3_Qa = 0;\n                auVar15 = pmaxsw(ZEXT1216(CONCAT48((in_XMM1_Qa >> 0x20 & uVar19) >> 0x14, (uVar8 >> 0x14) - 0x3f3)), 0x0\n                                );\n                iVar16 = SUB168(auVar17, 0) << SUB168(auVar15, 0);\n                iVar18 = SUB168(auVar17 >> 0x40, 0) << SUB168(auVar15 >> 0x40, 0);\n                auVar17 = CONCAT412(-(iVar18 >> 0x20 == 0), \n                                    CONCAT48(-(iVar18 == 0), CONCAT44(-(iVar16 >> 0x20 == 0), -(iVar16 == 0))));\n                uVar2 = SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7;\n                uVar8 = 0x7fef - uVar7 & 0x7fff;\n                uVar19 = SUB168(auVar17 >> 0x40, 0);\n                if (0x7fef < uVar8) {\n                    auVar17 = CONCAT412(0xffffffff, \n                                        CONCAT48(0xffffffff, \n                                                 CONCAT44(-((*0x4a2e00 & param_1) >> 0x20 == 0), \n                                                          -((*0x4a2e00 & param_1) == 0))));\n                    if ((SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7) == 0xff) {\n                        if ((param_1 & 0x8000000000000000) != 0) {\n                            if ((uVar2 != 0xff) ||\n                               (iVar16 = CONCAT44(param_3, param_2) << ((param_3 & *0x4a2e24) >> 0x14) - 0x3f4, \n                               iVar18 = uVar19 << (*0x4a2e2c >> 0x14), \n                               auVar17 = CONCAT412(-(iVar18 >> 0x20 == 0), \n                                                   CONCAT48(-(iVar18 == 0), \n                                                            CONCAT44(-(iVar16 >> 0x20 == 0), -(iVar16 == 0)))), \n                               (SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                                (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                                (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                                (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7) == 0xff))\n                            {\n                                if ((param_3 & 0x80000000) != 0) {\n                                    return 0;\n                                }\n                                goto code_r0x004374df;\n                            }\n                            if ((param_3 & 0x80000000) == 0) {\n                                return *0x4a2e78;\n                            }\n                            goto code_r0x00437399;\n                        }\n                        if ((param_3 & 0x80000000) != 0) {\n                            return 0;\n                        }\n                        goto code_r0x004374df;\n                    }\n                    goto code_r0x004373df;\n                }\n                if (uVar2 == 0xff) {\n                    in_XMM3_Qa = 0;\n                    iVar16 = CONCAT44(param_3, param_2) << ((param_3 & *0x4a2e24) >> 0x14) - 0x3f4;\n                    iVar18 = uVar19 << ((SUB164(auVar15 >> 0x60, 0) & *0x4a2e2c) >> 0x14);\n                    auVar17 = CONCAT412(-(iVar18 >> 0x20 == 0), \n                                        CONCAT48(-(iVar18 == 0), \n                                                 CONCAT44(-(iVar16 >> 0x20 == SUB164(ZEXT816(*0x4a2e80) >> 0x20, 0)), \n                                                          -(iVar16 == SUB84(*0x4a2e80, 0)))));\n                    in_XMM2_Qa = SUB168(auVar17 >> 0x40, 0);\n                    uVar7 = (SUB161(auVar17 >> 7, 0) & 1 | (SUB161(auVar17 >> 0xf, 0) & 1) << 1 |\n                             (SUB161(auVar17 >> 0x17, 0) & 1) << 2 | (SUB161(auVar17 >> 0x1f, 0) & 1) << 3 |\n                             (SUB161(auVar17 >> 0x27, 0) & 1) << 4 | (SUB161(auVar17 >> 0x2f, 0) & 1) << 5 |\n                             (SUB161(auVar17 >> 0x37, 0) & 1) << 6 | (SUB161(auVar17 >> 0x3f, 0) & 1) << 7) + 0x3ff01 &\n                            0x40000;\n                    if (0xf < uVar8) {\n                        uVar8 = 0xbfe7f;\n                        in_XMM3_Qa = 0;\n                        goto code_r0x00436df6;\n                    }\n                    goto code_r0x00437214;\n                }\n                dVar22 = param_1 >> 0x20;\n                in_XMM2_Qa = uVar19 >> 0x20;\n                uVar8 = uVar3 | uVar9 & 0x7fffffff;\n                uVar7 = 0;\n                dVar23 = dVar12;\n                if (uVar8 != 0) {\n                    uVar10 = 0x1c;\n                    _auStack12 = *0x4a2ea0;\n                    goto code_r0x0043754e;\n                }\ncode_r0x0043729a:\n                if ((uVar8 & 0x7fffffff) == 0) {\n                    if ((param_3 & 0x80000000) == 0) {\n                        if ((uVar8 & uVar7 << 0xd) == 0) {\n                            return 0;\n                        }\ncode_r0x00437399:\n                        return *0x4a2e80;\n                    }\n                    uVar10 = 0x1b;\n                    _auStack12 = (uVar8 & uVar7 << 0xd | 0x7ff00000) << 0x20;\n                    goto code_r0x0043754e;\n                }\n            }\n            else {\n                uVar7 = 0;\ncode_r0x00437214:\n                auVar17 = pinsrw(ZEXT816(0), 0x43f0, 3);\n                dVar23 = SUB168(auVar17, 0) * param_1;\n                uVar8 = uVar9;\n                dVar25 = *0x4a2e00;\n                dVar22 = *0x4a2e10;\n                if (uVar3 == 0) goto code_r0x0043729a;\n            }\n            dVar12 = (dVar23 & CONCAT44(*0x4a2e24, *0x4a2e20)) >> 0x2c;\n            uVar8 = (SUB82(dVar12, 0) & 0xff) + 1 & 0x1fe;\n            dVar25 = (dVar25 & dVar23 | dVar22) * *(uVar8 * 4 + 0x4a5808);\n            dVar22 = *(uVar8 * 4 + 0x4a5808);\n            dVar13 = *(uVar8 * 8 + 0x4a5c20);\n            dVar24 = *(uVar8 * 8 + 0x4a5c28);\n            uVar8 = 0x43e7f;\n            goto code_r0x00436df6;\n        }\n        uVar7 = uVar9;\n        if ((0x7fefffff < (uVar9 & 0x7fffffff)) && ((0x7ff00000 < (uVar9 & 0x7fffffff) || (uVar3 != 0)))) {\ncode_r0x004373df:\n            _auStack12 = param_1 + param_1;\n            uVar10 = 0x3ee;\n            goto code_r0x0043754e;\n        }\n    }\n    dVar22 = SUB168(auVar17, 0);\n    uVar19 = in_XMM3_Qa & SUB168(auVar17 >> 0x40, 0);\n    auVar15 = CONCAT412(-(uVar19 >> 0x20 == 0), \n                        CONCAT48(-(uVar19 == 0), \n                                 CONCAT44(-((*0x4a2e00 & dVar22) >> 0x20 == 0), -((*0x4a2e00 & dVar22) == 0))));\n    if ((SUB161(auVar15 >> 7, 0) & 1 | (SUB161(auVar15 >> 0xf, 0) & 1) << 1 | (SUB161(auVar15 >> 0x17, 0) & 1) << 2 |\n         (SUB161(auVar15 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar15 >> 0x27, 0) & 1) << 4 |\n         (SUB161(auVar15 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar15 >> 0x37, 0) & 1) << 6 |\n        (SUB161(auVar15 >> 0x3f, 0) & 1) << 7) == 0xff) {\n        if ((uVar3 | uVar7 ^ 0xbff00000) != 0) {\n            if ((auVar17 & 0x8000000000000000) == 0x0) {\n                if ((uVar1 & 0x7ff0) < 0x3ff0) {\n                    return 0;\n                }\n            }\n            else if (0x3fef < (uVar1 & 0x7ff0)) {\n                return 0;\n            }\ncode_r0x004374df:\n            return *0x4a2e70;\n        }\ncode_r0x0043754b:\n        return 1;\n    }\n    uVar10 = 0x3ee;\n    _auStack12 = dVar22 + dVar22;\ncode_r0x0043754e:\n    fcn.0043af28(&param_1, &param_2, auStack12, uVar10);\n    return _auStack12;\n}\n",
        "token_count": 6347
    },
    "0043851a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.0043851a(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint var_1ch;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = fcn.0043815e(&var_1ch, arg_ch);\n    var_10h = *puVar1;\n    var_ch = puVar1[1];\n    var_8h = puVar1[2];\n    if ((var_8h != '\\0') && (iVar2 = fcn.00440925(&var_4h, arg_8h, var_10h, arg_10h, 0x180),  iVar2 == 0)) {\n        *0x4d0b74 = *0x4d0b74 + 1;\n        LOCK();\n        arg_14h[3] = arg_14h[3] | var_ch;\n        arg_14h[2] = 0;\n        arg_14h[7] = 0;\n        arg_14h[1] = 0;\n        *arg_14h = 0;\n        arg_14h[4] = var_4h;\n        return arg_14h;\n    }\n    return NULL;\n}\n",
        "token_count": 325
    },
    "004396e4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004396e4(uint param_1, uint param_2)\n\n{\n    uint unaff_EBX;\n    uint in_stack_fffffd2c;\n    uint in_stack_fffffd30;\n    uint var_2c8h;\n    \n    fcn.004322e0(param_2, param_1);\n    fcn.00437a80();\n    fcn.0043976f(unaff_EBX, in_stack_fffffd2c, in_stack_fffffd30);\n    return;\n}\n",
        "token_count": 115
    },
    "0043994e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 fcn.0043994e(double param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    double dVar7;\n    uchar in_XMM0 [16];\n    double dVar8;\n    double dVar9;\n    double dVar10;\n    double dVar11;\n    double dStack12;\n    \n    iVar4 = 0;\n    while( true ) {\n        uVar2 = SUB162(in_XMM0 >> 0x30, 0) >> 4;\n        dVar6 = SUB168(in_XMM0, 0) & *0x4a3100 | *0x4a3160;\n        dVar7 = SUB168(in_XMM0, 0) & *0x4a3108 | *0x4a3168;\n        uVar1 = SUB82(*0x4a3110 + dVar6, 0) & 0x7f0;\n        dVar11 = *0x4a3128 & dVar7;\n        dVar9 = (*0x4a3120 & dVar6) * *(uVar1 + 0x4a9490) - *0x4a3160;\n        dVar6 = (dVar6 - (*0x4a3120 & dVar6)) * *(uVar1 + 0x4a9490);\n        dVar8 = (dVar7 - dVar11) * *(uVar1 + 0x4a9498);\n        dVar7 = dVar6 + dVar9;\n        dVar11 = dVar8 + (dVar11 * *(uVar1 + 0x4a9498) - *0x4a3168);\n        uVar3 = uVar2 - 1;\n        if (uVar3 < 0x7fe) {\n            iVar4 = (uVar2 - 0x3ff) + iVar4;\n            dVar10 = iVar4;\n            iVar5 = 0;\n            if (uVar1 + iVar4 * 0x400 == 0) {\n                iVar5 = 0x10;\n            }\n            return ((*0x4a31b0 * dVar7 + *0x4a31c0) * dVar7 + *0x4a31d0) * dVar7 * dVar7 * dVar7 * dVar7 * dVar7 +\n                   ((*0x4a31b8 * dVar11 + *0x4a31c8) * dVar11 + *0x4a31d8) * dVar11 * dVar11 +\n                   *(uVar1 + 0x4a98a8) + dVar10 * *0x4a3138 + (dVar8 & *(iVar5 + 0x4a3148)) +\n                   *(uVar1 + 0x4a98a0) + dVar9 + dVar10 * *0x4a3130 + (dVar6 & *(iVar5 + 0x4a3140));\n        }\n        dStack12 = -(*0x4a3170 == param_1);\n        if (SUB82(dStack12, 0) != 0) break;\n        if (uVar3 != 0xffffffff) {\n            if (uVar3 < 0x7ff) {\n                if (*0x4a3160 == (param_1 & *0x4a3100 | *0x4a3160)) {\n                    return *0x4a3198;\n                }\n                arg_14h = 1000;\n                dStack12 = *0x4a3100;\n            }\n            else if (((uVar2 & 0x7ff) < 0x7ff) || ((SUB84(param_1, 0) | param_1 >> 0x20 & 0xfffff) == 0)) {\n                dStack12 = -NAN;\n                arg_14h = 3;\n            }\n            else {\n                arg_14h = 1000;\n            }\n            goto code_r0x00439b42;\n        }\n        in_XMM0 = CONCAT88(dVar11, param_1 * *0x4a3180);\n        iVar4 = -0x34;\n    }\n    arg_14h = 2;\n    dStack12 = *0x4a3190;\ncode_r0x00439b42:\n    fcn.0043af28(&param_1, &param_1, &dStack12, arg_14h);\n    return dStack12;\n}\n",
        "token_count": 1038
    },
    "00439e8e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 fcn.00439e8e(ulong param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_14h;\n    uint32_t in_XMM0_Da;\n    uint uVar4;\n    uint32_t in_XMM0_Db;\n    uint uVar5;\n    uint32_t in_XMM0_Dd;\n    double dVar6;\n    double dVar7;\n    double dVar8;\n    uint64_t in_XMM2_Qa;\n    uint32_t uVar9;\n    double dVar10;\n    double dVar11;\n    uchar auVar12 [16];\n    double dVar13;\n    uint64_t in_XMM7_Qa;\n    double dVar14;\n    uint64_t uVar15;\n    double dVar17;\n    uint64_t uVar18;\n    double dStack12;\n    uint32_t uVar16;\n    \n    dVar8 = CONCAT44(in_XMM0_Db, in_XMM0_Da);\n    auVar12 = pinsrw(ZEXT816(0), 0x2000, 2);\n    uVar1 = in_XMM0_Db >> 0xc & 0x7ffff;\n    if (uVar1 - 0x3fb00 < 0x3bb) {\n        iVar2 = (in_XMM0_Db >> 0xc & 0xfffc) - 0xfb00;\n        auVar12 = CONCAT88(in_XMM2_Qa & in_XMM7_Qa, *0x4a3408 & dVar8) | auVar12;\n        iVar3 = iVar2 * 4;\n        dVar11 = SUB168(auVar12, 0);\n        dVar13 = dVar8 * *(iVar2 * 2 + 0x4ac3c0);\n        dVar10 = SQRT(*0x4a3410 - dVar8 * dVar8) * dVar11;\n        dVar6 = dVar13 - dVar10;\n        uVar1 = SUB164(auVar12 >> 0x20, 0);\n        uVar9 = uVar1 & 0x80000000;\n        dVar7 = dVar6 * dVar6;\n        return (((*0x4a33b8 * dVar7 + *0x4a33b0) * dVar6 * dVar7 * dVar7 +\n                (str.UUUUUU333333._0_8_ * dVar6 * dVar7 - ((*(iVar3 + 0x4ab4c0) ^ uVar9 << 0x20) - *0x4a3340))) -\n               ((dVar8 + dVar11) * (CONCAT44(in_XMM0_Db, in_XMM0_Da) - dVar11)) / (dVar13 + dVar10)) -\n               ((*(iVar3 + 0x4ab4c8) ^ SUB168(CONCAT412(uVar1, ZEXT412(uVar9) << 0x20) >> 0x40, 0)) - *0x4a3348 &\n               0xffffffff00000000);\n    }\n    if (uVar1 - 0x3febb < 0x41) {\n        dVar13 = (in_XMM0_Db >> 6) << 0x26;\n        dVar11 = *0x4a3410 - dVar13 * dVar13;\n        dVar6 = (CONCAT44(in_XMM0_Db, in_XMM0_Da) + dVar13) * (dVar8 - dVar13);\n        dVar10 = SQRT(dVar11 - dVar6);\n        uVar1 = -(SUB121(CONCAT48(in_XMM0_Dd >> 0xc, CONCAT44(in_XMM0_Db, in_XMM0_Da)) >> 0x3f, 0) & 1);\n        dVar7 = *0x4a3408 & dVar10 | SUB168(auVar12, 0) | ~*0x4a3400 & CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        iVar3 = ((dVar10 << 2) >> 0x30) - 0xfec0;\n        dVar10 = dVar10 * *(iVar3 * 8 + 0x4ac3c0);\n        dVar13 = (dVar13 * dVar7 - dVar10) + (dVar8 - dVar13) * dVar7;\n        dVar8 = ((dVar11 - dVar7 * dVar7) - dVar6) / (dVar10 + dVar10 + dVar13);\n        iVar3 = iVar3 * 0x10;\n        dVar7 = (SUB168(CONCAT412(uVar1, CONCAT48(uVar1, CONCAT44(uVar1, uVar1))) >> 0x40, 0) & *0x4a3358) +\n                *(iVar3 + 0x4ab4c8);\n        dVar11 = dVar13 * dVar13;\n        auVar12 = pinsrw(0x0, uVar1 & 0x8000, 3);\n        dVar6 = dVar8 + dVar7;\n        return (*0x4a33b8 * dVar11 + *0x4a33b0) * dVar13 * dVar11 * dVar11 +\n               str.UUUUUU333333._0_8_ * dVar13 * dVar11 + (CONCAT44(uVar1, uVar1) & *0x4a3350) + *(iVar3 + 0x4ab4c0) +\n               dVar8 + (dVar7 - dVar6) + dVar6 ^ SUB168(auVar12, 0);\n    }\n    if (uVar1 - 0x3c300 < 0x3800) {\n        dVar6 = CONCAT44(in_XMM0_Db, in_XMM0_Da) * CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        dVar7 = CONCAT44(in_XMM0_Db, in_XMM0_Da) * CONCAT44(in_XMM0_Db, in_XMM0_Da);\n        dVar11 = dVar8 * dVar6;\n        return (*0x4a3348 - dVar8) +\n               (((*0x4a3340 - dVar11 * dVar11 * dVar11 * (*0x4a33c0 * dVar6 + *0x4a33d0 + *0x4a33e0 * dVar6 * dVar6)) -\n                CONCAT44(in_XMM0_Db, in_XMM0_Da) * dVar7 * (*0x4a33c8 * dVar7 + *0x4a33d8 + *0x4a33e8 * dVar7 * dVar7))\n               - (dVar8 - (*0x4a3348 - (*0x4a3348 - dVar8))));\n    }\n    if (uVar1 - 0x3fefc < 4) {\n        dVar8 = *0x4a3418 - (dVar8 & *0x4a3400) * *0x4a3418;\n        uVar16 = dVar8 >> 0x20;\n        uVar15 = dVar8 & 0xffffffff;\n        dVar14 = uVar15 | uVar16 << 0x20;\n        dVar6 = SQRT(dVar8);\n        dVar17 = SUB168(CONCAT412(uVar16, CONCAT48(SUB84(dVar8, 0), dVar14)) >> 0x40, 0);\n        dVar13 = uVar15 | uVar16 << 0x20;\n        uVar18 = -(CONCAT44(in_XMM0_Db, in_XMM0_Da) < 0.0);\n        uVar1 = SUB164(ZEXT1216(CONCAT48(in_XMM0_Dd >> 0xc, uVar18)) >> 0x20, 0);\n        dVar8 = *0x4a3380 & dVar6;\n        uVar9 = dVar6 >> 0x20;\n        dVar7 = dVar6 & 0xffffffff | uVar9 << 0x20;\n        dVar11 = SUB168(CONCAT412(uVar9, CONCAT48(SUB84(dVar6, 0), dVar7)) >> 0x40, 0);\n        dVar10 = SUB168(CONCAT412(uVar9, CONCAT48(SUB84(dVar6, 0), dVar11)) >> 0x40, 0);\n        auVar12 = pinsrw(ZEXT816(0), in_XMM0_Db >> 0x10 & 0x8000, 3);\n        return (uVar1 << 0x20 & *0x4a3358) +\n               (*0x4a33d0 + *0x4a33c0 * dVar14 + *0x4a33e0 * dVar14 * dVar14) * dVar14 * dVar14 * dVar13 * dVar13 *\n               (dVar11 + dVar11) + ((uVar18 & 0xffffffff | uVar1 << 0x20) & *0x4a3350) +\n               (*0x4a33d8 + *0x4a33c8 * dVar17 + *0x4a33e8 * dVar17 * dVar17) *\n               SUB168(CONCAT412(uVar16, CONCAT48(uVar15, dVar13)) >> 0x40, 0) * (dVar10 + dVar10) +\n               ((dVar13 - dVar8 * dVar8) - (dVar6 - dVar8) * ((dVar7 + dVar7) - (dVar6 - dVar8))) / dVar11 +\n               dVar11 + dVar11 ^ SUB168(auVar12, 0);\n    }\n    if (uVar1 < 0x3ff00) {\n        return *0x4a3348 + *0x4a3340;\n    }\n    if ((0x3ff00000 - (in_XMM0_Db & 0x7fffffff) | in_XMM0_Da) != 0) {\n        if (((param_1 >> 0x20 & 0x7fffffff) + 0x80100000) - (param_1 == 0) < 0) {\n            auVar12 = pinsrw(ZEXT816(0), 0x7ff0, 3);\n            dVar8 = SUB168(auVar12, 0) * 0.0;\n            uVar4 = SUB84(dVar8, 0);\n            uVar5 = dVar8 >> 0x20;\n            arg_14h = 0x3a;\n        }\n        else {\n            dVar8 = CONCAT44(in_XMM0_Db, in_XMM0_Da) + 0.0;\n            uVar4 = SUB84(dVar8, 0);\n            uVar5 = dVar8 >> 0x20;\n            arg_14h = 0x3f0;\n        }\n        dStack12 = CONCAT44(uVar5, uVar4);\n        fcn.0043af28(&param_1, &param_1, &dStack12, arg_14h);\n        return dStack12;\n    }\n    iVar3 = -((in_XMM0_Db >> 0x10) >> 0xf);\n    uVar15 = CONCAT44(iVar3, iVar3);\n    return (*0x4a3368 & uVar15) + (*0x4a3360 & uVar15);\n}\n",
        "token_count": 2611
    },
    "0043a3ee": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 fcn.0043a3ee(double param_1)\n\n{\n    double dVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    uchar in_XMM0 [16];\n    double dVar7;\n    double dVar8;\n    uint64_t in_XMM2_Qa;\n    double dVar9;\n    uint32_t uVar11;\n    uchar auVar10 [16];\n    double dVar12;\n    ulong in_XMM6_Qa;\n    double dVar13;\n    double dVar14;\n    double dVar15;\n    double dVar16;\n    double dVar17;\n    uint in_XMM7_Dc;\n    uint in_XMM7_Dd;\n    double dStack12;\n    \n    dVar6 = SUB168(in_XMM0, 0);\n    uVar11 = SUB164(in_XMM0 >> 0x20, 0);\n    uVar3 = uVar11 >> 0xc;\n    auVar10 = pinsrw(ZEXT816(0), 0x2000, 2);\n    uVar2 = uVar3 & 0x7ffff;\n    if (uVar2 - 0x3fb00 < 0x3bb) {\n        iVar4 = (uVar3 & 0xfffc) - 0xfb00;\n        auVar10 = CONCAT88(in_XMM2_Qa & CONCAT44(in_XMM7_Dd, in_XMM7_Dc), *0x4a34f8 & dVar6) | auVar10;\n        iVar5 = iVar4 * 4;\n        dVar9 = SUB168(auVar10, 0);\n        dVar13 = dVar6 * *(iVar4 * 2 + 0x4ac3c0);\n        dVar1 = SQRT(*0x4a3500 - dVar6 * dVar6) * dVar9;\n        dVar7 = dVar13 - dVar1;\n        uVar11 = SUB164(auVar10 >> 0x20, 0);\n        uVar2 = uVar11 & 0x80000000;\n        dVar8 = dVar7 * dVar7;\n        return ((dVar6 - dVar9) * (dVar6 + dVar9)) / (dVar13 + dVar1) +\n               (*0x4a34a0 + *0x4a34a8 * dVar8) * dVar7 * dVar8 * dVar8 +\n               *0x4a3498 * dVar7 * dVar8 + (*(iVar5 + 0x4ab4c0) ^ uVar2 << 0x20) +\n               ((*(iVar5 + 0x4ab4c8) ^ SUB168(CONCAT412(uVar11, ZEXT412(uVar2) << 0x20) >> 0x40, 0)) &\n               0xffffffff00000000);\n    }\n    if (uVar2 - 0x3febb < 0x43) {\n        dVar1 = SQRT(*0x4a3500 - dVar6 * dVar6);\n        dVar7 = dVar6 & *0x4a3490;\n        dVar8 = (dVar6 & 0x7fffffffffffffff) - dVar7;\n        dVar9 = *0x4a34f8 & dVar1 | SUB168(auVar10, 0);\n        iVar5 = ((dVar1 << 2) >> 0x30) - 0xfec0;\n        dVar1 = dVar1 * *(iVar5 * 8 + 0x4ac3c0);\n        dVar13 = (dVar7 * dVar9 - dVar1) + dVar8 * dVar9;\n        iVar5 = iVar5 * 0x10;\n        dVar14 = dVar13 * dVar13;\n        auVar10 = pinsrw(0x0, (SUB161(CONCAT412(in_XMM7_Dd, CONCAT48(in_XMM7_Dc, dVar6)) >> 0x3f, 0) & 1) << 0xf, 3);\n        return (((*0x4a34a8 * dVar14 + *0x4a34a0) * dVar13 * dVar14 * dVar14 +\n                *0x4a3498 * dVar13 * dVar14 + (*0x4a3460 - *(iVar5 + 0x4ab4c0))) -\n               (((*0x4a3500 - dVar7 * dVar7) - dVar9 * dVar9) - ((dVar6 & 0x7fffffffffffffff) + dVar7) * dVar8) /\n               (dVar1 + dVar1 + dVar13)) + (*0x4a3468 - *(iVar5 + 0x4ab4c8) & 0xffffffff00000000) | SUB168(auVar10, 0);\n    }\n    if (uVar2 - 0x3c300 < 0x3800) {\n        dVar1 = dVar6 * dVar6;\n        dVar7 = dVar6 * dVar6;\n        dVar8 = dVar6 * dVar1;\n        return dVar6 + dVar8 * dVar8 * dVar8 * (*0x4a34b0 * dVar1 + *0x4a34c0 + *0x4a34d0 * dVar1 * dVar1) +\n                       dVar6 * dVar7 * (*0x4a34b8 * dVar7 + *0x4a34c8 + *0x4a34d8 * dVar7 * dVar7);\n    }\n    if (uVar2 - 0x3fefe < 2) {\n        dVar1 = SQRT(*0x4a3500 - dVar6 * dVar6);\n        dVar8 = dVar6 & *0x4a3480;\n        uVar11 = dVar1 >> 0x20;\n        dVar14 = dVar1 & 0xffffffff | uVar11 << 0x20;\n        dVar7 = dVar1 & *0x4a3480;\n        dVar6 = dVar6 - dVar8;\n        dVar12 = SUB168(CONCAT412(uVar11, CONCAT48(SUB84(dVar1, 0), dVar14)) >> 0x40, 0);\n        dVar15 = SUB128(CONCAT84(in_XMM6_Qa, uVar11), 0) << 0x20;\n        dVar1 = (uVar11 << 0x20) * (uVar11 << 0x20);\n        dVar9 = (uVar11 << 0x20) * (uVar11 << 0x20);\n        dVar16 = dVar15 * dVar1;\n        dVar17 = SUB168(CONCAT412(uVar11, ZEXT812(dVar15)) >> 0x40, 0) * dVar9;\n        dVar13 = dVar16 * dVar16 * dVar16;\n        auVar10 = pinsrw(ZEXT816(0), SUB162(in_XMM0 >> 0x30, 0) & 0x8000, 3);\n        return (((*0x4a3460 + (*0x4a34e0 * dVar1 + *0x4a34e8) * dVar16 * dVar16 * dVar13) -\n                ((dVar1 * dVar1 * *0x4a34d0 + *0x4a34c0 + *0x4a34b0 * dVar1) * dVar13 +\n                 (SUB128(CONCAT84(dVar17, (dVar9 * dVar9 * *0x4a34d8 + *0x4a34c8 + *0x4a34b8 * dVar9) * dVar17 >> 0x20)\n                         , 0) << 0x20) +\n                (((((*0x4a3500 - dVar8 * dVar8) - (dVar8 + dVar8) * dVar6) - dVar7 * dVar7) - dVar6 * dVar6) +\n                (dVar14 + dVar14 + (dVar7 - dVar14)) * (dVar7 - dVar14)) / (dVar12 + dVar12))) -\n               (dVar15 - (*0x4a3468 + (dVar15 - *0x4a3468)))) - (dVar15 - *0x4a3468) | SUB168(auVar10, 0);\n    }\n    if (uVar2 < 0x3ff00) {\n        if (0x7fdf < (param_1 >> 0x30 & 0x7ff0) - 0x10) {\n            param_1 = param_1 | param_1 + 0.0;\n        }\n        return param_1;\n    }\n    if ((0x3ff00000 - (uVar11 & 0x7fffffff) | SUB164(in_XMM0, 0)) != 0) {\n        if (((param_1 >> 0x20 & 0x7fffffff) + 0x80100000) - (SUB84(param_1, 0) == 0) < 0) {\n            auVar10 = pinsrw(ZEXT816(0), 0x7ff0, 3);\n            dStack12 = SUB168(auVar10, 0) * 0.0;\n            arg_14h = 0x3d;\n        }\n        else {\n            dStack12 = param_1 + 0.0;\n            arg_14h = 0x3f1;\n        }\n        fcn.0043af28(&param_1, &param_1, &dStack12, arg_14h);\n        return dStack12;\n    }\n    return *0x4a3468 + *0x4a3460 | ~*0x4a34f0 & dVar6;\n}\n",
        "token_count": 2273
    },
    "0042f9e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0042f9e8(uint param_1, uint32_t param_2, int32_t param_3, uint param_4)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    bool in_ZF;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    unkbyte10 in_ST0;\n    float10 fVar4;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    arg_8h = param_2 & 0xffff0000 | in_FPUControlWord;\n    if (!in_ZF) {\n        fVar4 = fcos(in_ST0);\n        uVar1 = in_EAX & 0xffff0000 | in_FPUStatusWord;\n        if ((in_FPUStatusWord & 0x400) != 0) {\n            do {\n                fVar4 = fVar4 - (fVar4 / *0x4a2f5a) * *0x4a2f5a;\n                uVar1 = uVar1 & 0xffff0000 | in_FPUStatusWord;\n            } while ((in_FPUStatusWord & 0x400) != 0);\n            fcos(fVar4);\n        }\n        if (*0x4d11f0 == 0) {\n            uVar2 = uVar1 & 0xffff0000 | in_FPUControlWord;\n            if (in_FPUControlWord != 0x27f) {\n                if (((in_FPUControlWord & 0x20) != 0) &&\n                   (uVar2 = uVar1 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                    uVar3 = fcn.00437c97(arg_8h, unaff_retaddr, param_3, param_4);\n                    return CONCAT44(arg_8h, uVar3);\n                }\n                uVar2 = uVar2 & 0xffff0020;\n            }\n            return CONCAT44(arg_8h, uVar2);\n        }\ncode_r0x00437d7e:\n        return CONCAT44(arg_8h, uVar1);\n    }\n    if (((in_EAX & 0xfffff) == 0) && (param_3 == 0)) {\n        uVar1 = 1;\n        if (*0x4d11f0 != 0) goto code_r0x00437d7e;\n        in_EAX = fcn.00437c97(arg_8h, unaff_retaddr, 0, param_4);\n    }\n    return CONCAT44(arg_8h, in_EAX);\n}\n",
        "token_count": 611
    },
    "0043b5b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0043b5b0(int32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t *piVar8;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0042f269();\n        *puVar1 = 0x16;\n        fcn.0043277c();\n    }\n    else {\n        piVar8 = arg_8h;\n        for (iVar5 = 9; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *piVar8 = -1;\n            piVar8 = piVar8 + 1;\n        }\n        if (arg_ch == NULL) {\n            puVar1 = fcn.0042f269();\n            *puVar1 = 0x16;\n            fcn.0043277c();\n        }\n        else {\n            var_8h = arg_ch[1];\n            var_ch = *arg_ch;\n            if (((var_8h < 0x80000000) || ((-2 < var_8h && (0xffff573f < var_ch)))) &&\n               ((var_8h < 7 || ((var_8h < 8 && (var_ch < 0x934126d0)))))) {\n                var_1h._0_1_ = '\\0';\n                iVar5 = fcn.0043b50c(&var_ch, &var_1h);\n                uVar4 = var_ch;\n                arg_8h[5] = iVar5;\n                iVar5 = fcn.00441e40(var_ch, var_8h, 0x15180, 0);\n                arg_8h[7] = iVar5;\n                uVar2 = iVar5 * 0x15180;\n                iVar6 = 0x4ae9f4;\n                uVar7 = uVar4 - uVar2;\n                var_8h = (var_8h - (iVar5 * 0x15180 >> 0x20)) - (uVar4 < uVar2);\n                if (var_1h == '\\0') {\n                    iVar6 = 0x4ae9c0;\n                }\n                iVar3 = 1;\n                iVar5 = *(iVar6 + 4);\n                while (iVar5 < arg_8h[7]) {\n                    iVar3 = iVar3 + 1;\n                    iVar5 = *(iVar6 + iVar3 * 4);\n                }\n                arg_8h[4] = iVar3 + -1;\n                arg_8h[3] = arg_8h[7] - *(iVar6 + (iVar3 + -1) * 4);\n                iVar6 = fcn.00441e40(*arg_ch, arg_ch[1], 0x15180, 0);\n                iVar5 = var_8h;\n                arg_8h[6] = (iVar6 + 4) % 7;\n                iVar6 = fcn.00441e40(uVar7, var_8h, 0xe10, 0);\n                arg_8h[2] = iVar6;\n                uVar4 = iVar6 * 0xe10;\n                iVar3 = uVar7 - uVar4;\n                iVar5 = fcn.00441e40(iVar3, (iVar5 - (iVar6 * 0xe10 >> 0x20)) - (uVar7 < uVar4), 0x3c, 0);\n                arg_8h[8] = 0;\n                arg_8h[1] = iVar5;\n                *arg_8h = iVar3 + iVar5 * -0x3c;\n                return 0;\n            }\n            puVar1 = fcn.0042f269();\n            *puVar1 = 0x16;\n        }\n    }\n    return 0x16;\n}\n",
        "token_count": 948
    },
    "0043d170": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0043d170(char *lpValue, int32_t arg_ch)\n\n{\n    uint32_t arg_ch_00;\n    char cVar1;\n    code *pcVar2;\n    uint *puVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    uint uVar9;\n    char *pcVar10;\n    bool bVar11;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (lpValue == NULL) {\n        puVar3 = fcn.0042f269();\n        *puVar3 = 0x16;\n        return 0xffffffff;\n    }\n    pcVar4 = fcn.00442210(lpValue, 0x3d);\n    pcVar10 = lpValue;\n    if ((pcVar4 == NULL) || (pcVar4 == lpValue)) {\ncode_r0x0043ceb3:\n        puVar3 = fcn.0042f269();\n        *puVar3 = 0x16;\n    }\n    else {\n        bVar11 = pcVar4[1] == '\\0';\n        if (*0x4d0d84 == *0x4d0d90) {\n            *0x4d0d84 = fcn.0043d06b(*0x4d0d84);\n        }\n        uVar9 = 0;\n        if (*0x4d0d84 == NULL) {\n            if ((arg_ch != 0) && (*0x4d0d88 != 0)) {\n                iVar5 = fcn.00431d8e();\n                if (iVar5 != 0) goto code_r0x0043cf27;\n                goto code_r0x0043ceb3;\n            }\n            if (bVar11) {\n                uVar9 = 0;\n                goto code_r0x0043cec1;\n            }\n            *0x4d0d84 = fcn.00434c0d(1, 4);\n            fcn.00432958(0);\n            if (*0x4d0d84 != NULL) {\n                if (*0x4d0d88 == 0) {\n                    *0x4d0d88 = fcn.00434c0d(1, 4);\n                    fcn.00432958(0);\n                    if (*0x4d0d88 == 0) goto code_r0x0043cebe;\n                }\ncode_r0x0043cf27:\n                if (*0x4d0d84 != NULL) goto code_r0x0043cf2b;\n            }\n        }\n        else {\ncode_r0x0043cf2b:\n            piVar6 = *0x4d0d84;\n            iVar5 = fcn.0043d11c(lpValue, pcVar4 - lpValue);\n            if ((-1 < iVar5) && (*piVar6 != 0)) {\n                fcn.00432958(piVar6[iVar5]);\n                if (bVar11) {\n                    for (; piVar6[iVar5] != 0; iVar5 = iVar5 + 1) {\n                        piVar6[iVar5] = piVar6[iVar5 + 1];\n                    }\n                    piVar6 = fcn.004327bf(piVar6, iVar5, 4);\n                    fcn.00432958(0);\n                    if (piVar6 != NULL) {\ncode_r0x0043cfda:\n                        *0x4d0d84 = piVar6;\n                    }\n                }\n                else {\n                    piVar6[iVar5] = lpValue;\n                    pcVar10 = NULL;\n                }\n                if (arg_ch != 0) {\n                    pcVar8 = lpValue;\n                    do {\n                        cVar1 = *pcVar8;\n                        pcVar8 = pcVar8 + 1;\n                    } while (cVar1 != '\\0');\n                    iVar5 = fcn.00434c0d(pcVar8 + (2 - (lpValue + 1)), 1);\n                    if (iVar5 != 0) {\n                        iVar7 = fcn.0043287a(iVar5, pcVar8 + (2 - (lpValue + 1)), lpValue);\n                        if (iVar7 != 0) {\n                            fcn.0043278c(0, 0, 0, 0, 0);\n                            pcVar2 = swi(3);\n                            uVar9 = (*pcVar2)();\n                            return uVar9;\n                        }\n                        (pcVar4 + (iVar5 - lpValue) + 1)[-1] = '\\0';\n                        iVar7 = (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableA)\n                                          (iVar5, ~-bVar11 & pcVar4 + (iVar5 - lpValue) + 1);\n                        if (iVar7 == 0) {\n                            puVar3 = fcn.0042f269();\n                            uVar9 = 0xffffffff;\n                            *puVar3 = 0x2a;\n                        }\n                    }\n                    fcn.00432958(iVar5);\n                }\n                goto code_r0x0043cec1;\n            }\n            if (bVar11) goto code_r0x0043cec1;\n            arg_ch_00 = -iVar5 + 2;\n            if ((-iVar5 <= arg_ch_00) && (arg_ch_00 < 0x3fffffff)) {\n                piVar6 = fcn.004327bf(piVar6, arg_ch_00, 4);\n                fcn.00432958(0);\n                if (piVar6 != NULL) {\n                    piVar6[-iVar5] = lpValue;\n                    piVar6[1 - iVar5] = 0;\n                    pcVar10 = NULL;\n                    goto code_r0x0043cfda;\n                }\n            }\n        }\n    }\ncode_r0x0043cebe:\n    uVar9 = 0xffffffff;\ncode_r0x0043cec1:\n    fcn.00432958(pcVar10);\n    return uVar9;\n}\n",
        "token_count": 1358
    },
    "0043d56d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0043d56d(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1dh;\n    \n    if (*(unaff_EBP + -0x1d) != '\\0') {\n        fcn.00432f36(3);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "00440022": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00440022(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004209b0(0x4c8e18, 0x10);\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.0042f269();\n        *puVar1 = 0x16;\n        fcn.0043277c();\n    }\n    else {\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.004405fc(unaff_EBP + -0x20, puVar1, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x1c) = iVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.004400c2();\n        if (iVar2 != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    fcn.004209f6();\n    return;\n}\n",
        "token_count": 484
    },
    "004400c2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004400c2(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_20h;\n    \n    if (*(unaff_EBP + -0x20) != 0) {\n        if (unaff_EDI != 0) {\n            puVar1 = *((*unaff_ESI >> 6) * 4 + 0x4d0fe8) + 0x28 + (*unaff_ESI & 0x3f) * 0x30;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.0043518e(*unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "004417de": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nfloat10 fcn.004417de(double param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    double dVar7;\n    uchar in_XMM0 [16];\n    double dVar8;\n    double dVar9;\n    double dVar10;\n    double dVar11;\n    double dStack12;\n    \n    iVar4 = 0;\n    while( true ) {\n        uVar2 = SUB162(in_XMM0 >> 0x30, 0) >> 4;\n        dVar6 = SUB168(in_XMM0, 0) & *0x4aea50 | *0x4aeac0;\n        dVar7 = SUB168(in_XMM0, 0) & *0x4aea58 | *0x4aeac8;\n        uVar1 = SUB82(*0x4aea70 + dVar6, 0) & 0x7f0;\n        dVar11 = *0x4aea88 & dVar7;\n        dVar9 = (*0x4aea80 & dVar6) * *(uVar1 + 0x4aef60) - *0x4aea60;\n        dVar6 = (dVar6 - (*0x4aea80 & dVar6)) * *(uVar1 + 0x4aef60);\n        dVar8 = (dVar7 - dVar11) * *(uVar1 + 0x4aef68);\n        dVar7 = dVar6 + dVar9;\n        dVar11 = dVar8 + (dVar11 * *(uVar1 + 0x4aef68) - *0x4aea68);\n        uVar3 = uVar2 - 1;\n        if (uVar3 < 0x7fe) {\n            iVar4 = (uVar2 - 0x3ff) + iVar4;\n            dVar10 = iVar4;\n            iVar5 = 0;\n            if (uVar1 + iVar4 * 0x400 == 0) {\n                iVar5 = 0x10;\n            }\n            return ((*0x4aeb18 * dVar11 + *0x4aeb28) * dVar11 + *0x4aeb38) * dVar11 * dVar11 +\n                   ((*0x4aeb10 * dVar7 + *0x4aeb20) * dVar7 + *0x4aeb30) * dVar7 * dVar7 * dVar7 * dVar7 * dVar7 +\n                   *0x4aeb40 * dVar7 + *(uVar1 + 0x4aeb58) + dVar10 * *0x4aea98 + (dVar8 & *(iVar5 + 0x4aeaa8)) +\n                   *(uVar1 + 0x4aeb50) + dVar9 + dVar10 * *0x4aea90 + (dVar6 & *(iVar5 + 0x4aeaa0));\n        }\n        dStack12 = -(*0x4aead0 == param_1);\n        if (SUB82(dStack12, 0) != 0) break;\n        if (uVar3 != 0xffffffff) {\n            if (uVar3 < 0x7ff) {\n                if (*0x4aeac0 == (param_1 & *0x4aea50 | *0x4aeac0)) {\n                    return *0x4aeaf8;\n                }\n                arg_14h = 0x3e9;\n                dStack12 = *0x4aea50;\n            }\n            else if (((uVar2 & 0x7ff) < 0x7ff) || ((SUB84(param_1, 0) | param_1 >> 0x20 & 0xfffff) == 0)) {\n                dStack12 = -NAN;\n                arg_14h = 9;\n            }\n            else {\n                arg_14h = 0x3e9;\n            }\n            goto code_r0x004419ea;\n        }\n        in_XMM0 = CONCAT88(dVar11, param_1 * *0x4aeae0);\n        iVar4 = -0x34;\n    }\n    arg_14h = 8;\n    dStack12 = *0x4aeaf0;\ncode_r0x004419ea:\n    fcn.0043af28(&param_1, &param_1, &dStack12, arg_14h);\n    return dStack12;\n}\n",
        "token_count": 1033
    },
    "0045f4b7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f4b7(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    \n    if (arg_8h != 1) {\n        fcn.0045f580();\n        piVar1 = *in_ECX;\n        if (arg_8h == 2) {\n            if (*piVar1 != 0x7fffffff) {\n                *piVar1 = 1;\n            }\n        }\n        else {\n            *piVar1 = 0x7fffffff;\n        }\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "0045f580": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f580(int32_t **param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = **param_1;\n    if ((1 < iVar1) && (iVar1 != 0x7fffffff)) {\n        **param_1 = iVar1 + -1;\n        fcn.004021a5(param_1);\n        **param_1 = 1;\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "0045f971": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t ** __cdecl fcn.0045f971(int32_t **rgsabound)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    ulong uVar7;\n    uint pvargDest;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    ppiVar1 = rgsabound;\n    if (rgsabound[3] == 0x5) {\n        iVar3 = *(**rgsabound + 0x10c);\n        iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayCreateEx)(0xc, iVar3, &rgsabound);\n        if (-1 < iVar2) {\n            iVar6 = 0;\n            iVar2 = 0;\n            if (0 < iVar3) {\n                do {\n                    iVar4 = iVar2 + 1;\n                    rgsabound[iVar2 * 2 + 5] = NULL;\n                    var_8h = iVar4;\n                    fcn.00471da8();\n                    uVar7 = fcn.0041e703(iVar4);\n                    rgsabound[(uVar7 >> 0x20) * 2 + 4] = uVar7;\n                    iVar2 = var_8h;\n                } while (var_8h < iVar3);\n            }\n            *(rgsabound + 2) = 0x880;\n            rgsabound[1] = 0x10;\n            iVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayDestroyDescriptor)(rgsabound);\n            if (iVar3 < 0) {\n                (*_sym.imp.OLEAUT32.dll_SafeArrayDestroyData)(rgsabound);\n            }\n            else {\n                (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n                var_24h = 0;\n                var_20h = 0;\n                var_1ch = 0;\n                var_14h = 0;\n                var_10h = 1;\n                iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(rgsabound, &var_8h);\n                iVar3 = var_8h;\n                if (-1 < iVar2) {\n                    fcn.0040c5e7(ppiVar1);\n                    piVar5 = ~-(var_10h != 5) & var_1ch;\n                    fcn.0045f4b7(2);\n                    iVar2 = *piVar5;\n                    iVar4 = *(iVar2 + 8);\n                    iVar2 = *(iVar2 + 4);\n                    var_ch = iVar2;\n                    if (0 < iVar4) {\n                        do {\n                            if (*(iVar2 + iVar6 * 4) != 0) {\n                                fcn.0045f934(*(iVar2 + iVar6 * 4));\n                                (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(iVar3, &pvargDest);\n                                iVar2 = var_ch;\n                            }\n                            iVar6 = iVar6 + 1;\n                            iVar3 = iVar3 + 0x10;\n                        } while (iVar6 < iVar4);\n                    }\n                    (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(rgsabound);\n                    ppiVar1 = rgsabound;\n                    fcn.0040e8a0();\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n                    return ppiVar1;\n                }\n                (*_sym.imp.OLEAUT32.dll_SafeArrayRedim)(rgsabound);\n                (*_sym.imp.OLEAUT32.dll_SafeArrayDestroyData)(rgsabound);\n                fcn.0040e8a0();\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 916
    },
    "0045fca9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045fca9(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, ushort *arg_14h)\n\n{\n    uint uVar1;\n    \n    if ((((arg_14h == NULL) || (arg_ch != 0)) || (arg_10h != 0)) || (*(arg_8h + 8) != 0xc)) {\n        uVar1 = 0x80004001;\n    }\n    else {\n        *arg_14h = 0x16;\n        *(arg_14h + 4) = (*(*(arg_8h + 0xc) + 0xc) - 1U >> 2) + 1;\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 178
    },
    "0045fce9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045fce9(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint16_t *arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((((arg_14h == NULL) || (arg_ch != 0)) || (arg_10h != 0)) || (arg_18h != 0)) {\n        uVar2 = 0x80070057;\n    }\n    else {\n        *arg_14h = 0x8000;\n        *arg_14h = *(arg_8h + 8) | 0x8000;\n        iVar1 = *(arg_8h + 8);\n        if (iVar1 == 0xc) {\n            uVar2 = *(arg_8h + 0xc);\n        }\n        else if (iVar1 == 0xd) {\n            uVar2 = *(arg_8h + 0x14);\n        }\n        else if (iVar1 == 0xe) {\n            uVar2 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(*(arg_8h + 0x18));\n        }\n        else {\n            uVar2 = *(arg_8h + 0x10);\n        }\n        *(arg_14h + 4) = uVar2;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 326
    },
    "0046031f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0046031f(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint arg_ch;\n    uint uVar5;\n    int32_t *piVar6;\n    uint lpclsid;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint lpszProgID;\n    int32_t var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *lplpszProgID;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    lpclsid = *0x49fbd4;\n    uStack84 = *0x49fbd8;\n    uStack80 = *0x49fbdc;\n    uStack76 = *0x49fbe0;\n    var_34h = in_EDX;\n    iVar1 = (***in_ECX)();\n    if (iVar1 < 0) {\n        piVar6 = 0x800;\n        var_28h = NULL;\n        iVar1 = (**(*in_ECX + 0x10))();\n    }\n    else {\n        piVar6 = var_28h;\n        iVar1 = (**(*var_28h + 0xc))(var_28h, &var_4h);\n        (**(*var_28h + 8))(var_28h);\n    }\n    if ((iVar1 < 0) || (var_4h == NULL)) goto code_r0x0046052d;\n    var_8h = NULL;\n    iVar1 = (**(*var_4h + 0x48))(var_4h, &var_8h, &var_1ch, var_28h, piVar6);\n    if ((-1 < iVar1) && (var_8h != NULL)) {\n        (**(*var_8h + 0x14))(var_8h, var_1ch, &var_10h);\n        if (var_10h != 5) {\n            uVar2 = (**(*var_8h + 0xc))(var_8h);\n            puVar4 = NULL;\n            uVar3 = 0;\n            var_24h = NULL;\n            if (uVar2 != 0) {\n                do {\n                    if (puVar4 != NULL) break;\n                    var_10h = 0;\n                    (**(*var_8h + 0x14))(var_8h, uVar3, &var_10h);\n                    if (var_10h == 5) {\n                        (**(*var_8h + 0x10))(var_8h, uVar3, &var_ch);\n                        (**(*var_ch + 0xc))(var_ch, &var_2ch);\n                        var_20h = *(var_2ch + 0x30);\n                        (**(*var_ch + 0x4c))(var_ch, var_2ch);\n                        var_18h = -1;\n                        if (var_20h != NULL) {\n                            do {\n                                iVar1 = (**(*var_ch + 0x20))(var_ch, puVar4, &var_30h);\n                                if (iVar1 == 0) {\n                                    (**(*var_4h + 0x38))(var_4h, var_30h, &lplpszProgID);\n                                    (**(*lplpszProgID + 0x48))(lplpszProgID, 0, &var_18h);\n                                    if (var_18h == var_1ch) {\n                                        puVar4 = 0x1;\n                                        var_24h = 0x1;\n                                        (**(*lplpszProgID + 8))(lplpszProgID);\n                                        (**(*var_4h + 8))(var_4h);\n                                        var_4h = var_ch;\n                                        goto code_r0x00460491;\n                                    }\n                                    (**(*lplpszProgID + 8))();\n                                }\n                                puVar4 = puVar4 + 1;\n                            } while (puVar4 < var_20h);\n                        }\n                        (**(*var_ch + 8))(var_ch);\n                        puVar4 = var_24h;\n                    }\ncode_r0x00460491:\n                    uVar3 = uVar3 + 1;\n                } while (uVar3 < uVar2);\n            }\n            if (var_10h != 5) goto code_r0x00460524;\n        }\n        (**(*var_4h + 0xc))(var_4h, &var_24h);\n        lpclsid = *var_24h;\n        uStack84 = var_24h[1];\n        uStack80 = var_24h[2];\n        uStack76 = var_24h[3];\n        (**(*var_4h + 0x4c))(var_4h, var_24h);\n        if (var_34h == 0) {\n            lplpszProgID = NULL;\n            iVar1 = (*_sym.imp.ole32.dll_ProgIDFromCLSID)(&lpclsid, &lplpszProgID);\n            if (-1 < iVar1) {\n                fcn.0040b606(lplpszProgID);\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(lplpszProgID);\n                uVar5 = 0xffffffff;\n                arg_ch = 0x49d108;\n                arg_8h_00 = fcn.0040642a(0x49d108);\n                fcn.0040ad22(arg_8h_00, arg_ch);\n                (*_sym.imp.ole32.dll_CLSIDFromProgID)(lpszProgID, &lpclsid, arg_8h_00, arg_ch, uVar5);\n                fcn.0040b1ff();\n            }\n        }\n    }\ncode_r0x00460524:\n    (**(*var_4h + 8))(var_4h);\ncode_r0x0046052d:\n    iVar1 = fcn.00421324(&arg_8h, &lpclsid, 0x10);\n    return iVar1 == 0;\n}\n",
        "token_count": 1466
    },
    "00460746": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00460746(int32_t **arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint16_t uVar5;\n    int32_t iVar6;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    int32_t *piVar9;\n    uint var_4ch;\n    uint var_3ch;\n    uint *var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t *var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    *arg_8h = NULL;\n    piVar7 = NULL;\n    if (in_ECX == NULL) {\n        return -0x7fffbffd;\n    }\n    iVar6 = (**(*in_ECX + 0x10))();\n    if (iVar6 < 0) {\n        return iVar6;\n    }\n    iVar6 = (**(*var_ch + 0x48))(var_ch, &var_4h, &var_30h);\n    if (iVar6 < 0) {\n        (**(*var_ch + 8))(var_ch);\n        return iVar6;\n    }\n    if (in_EDX == 0) {\n        var_24h = (**(*var_4h + 0xc))(var_4h);\n        iVar6 = 0;\n        piVar9 = NULL;\n        var_10h = 0;\n        if (var_24h != NULL) {\n            do {\n                if (iVar6 != 0) break;\n                var_1ch = 0;\n                (**(*var_4h + 0x14))(var_4h, piVar9, &var_1ch);\n                if (var_1ch == 5) {\n                    (**(*var_4h + 0x10))(var_4h, piVar9, &var_8h);\n                    (**(*var_8h + 0xc))(var_8h, &var_28h);\n                    uVar5 = *(var_28h + 0x30);\n                    var_20h = uVar5;\n                    (**(*var_8h + 0x4c))(var_8h, var_28h);\n                    if (1 < uVar5) {\n                        var_14h = -1;\n                        uVar8 = 0;\n                        if (var_20h != 0) {\n                            do {\n                                iVar6 = (**(*var_8h + 0x20))(var_8h, uVar8, &var_2ch);\n                                if (iVar6 == 0) {\n                                    (**(*var_ch + 0x38))(var_ch, var_2ch, &var_18h);\n                                    if (var_14h == -1) {\n                                        (**(*var_18h + 0x48))(var_18h, 0, &var_14h);\n                                    }\n                                    (**(*var_8h + 0x24))(var_8h, uVar8, &var_34h);\n                                    if ((var_14h == var_30h) && ((var_34h & 3) == 3)) {\n                                        var_10h = 1;\n                                        piVar7 = var_18h;\n                                        break;\n                                    }\n                                    (**(*var_18h + 8))(var_18h);\n                                }\n                                uVar8 = uVar8 + 1;\n                            } while (uVar8 < var_20h);\n                        }\n                    }\n                    iVar6 = var_10h;\n                    (**(*var_8h + 8))(var_8h);\n                }\n                piVar9 = piVar9 + 1;\n            } while (piVar9 < var_24h);\n        }\n        (**(*var_4h + 8))(var_4h);\n        (**(*var_ch + 8))(var_ch);\n    }\n    else {\n        var_10h = 1;\n        iVar6 = (**(*var_4h + 0x2c))(var_4h);\n        (**(*var_4h + 8))(var_4h);\n        (**(*var_ch + 8))(var_ch);\n        if (iVar6 < 0) {\n            return -0x7ffd7fe9;\n        }\n        piVar7 = var_24h;\n        if (var_10h == 0) {\n            return -0x7ffd7fe9;\n        }\n    }\n    if (piVar7 == NULL) {\n        return -0x7ffd7fe9;\n    }\n    (**(*piVar7 + 0xc))(piVar7, &var_38h);\n    var_20h = var_38h[10];\n    uVar1 = *var_38h;\n    uVar2 = var_38h[1];\n    uVar3 = var_38h[2];\n    uVar4 = var_38h[3];\n    if ((*(var_38h + 0x36) & 0x1040) != 0) {\n        var_20h = 4;\n    }\n    (**(*piVar7 + 0x4c))(piVar7, var_38h);\n    if (var_20h == 4) {\n        *arg_8h = piVar7;\n        *arg_ch = uVar1;\n        arg_ch[1] = uVar2;\n        arg_ch[2] = uVar3;\n        arg_ch[3] = uVar4;\n        return 0;\n    }\n    (**(*piVar7 + 8))(piVar7);\n    return -0x7ffd7360;\n}\n",
        "token_count": 1360
    },
    "00460a1b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460a1b(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint unaff_EBP;\n    \n    puVar2 = fcn.0041fd5b(8, unaff_EBP);\n    puVar2[1] = 0;\n    *puVar2 = *arg_8h;\n    puVar1 = puVar2;\n    if (*0x4d25a0 != NULL) {\n        *(*0x4d25a4 + 4) = puVar2;\n        puVar1 = *0x4d25a0;\n    }\n    *0x4d25a0 = puVar1;\n    *0x4d259c = *0x4d259c + 1;\n    *0x4d25a4 = puVar2;\n    return;\n}\n",
        "token_count": 195
    },
    "00460aa6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00460aa6(uint hObj, int32_t pDestinationSid, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uchar *puVar5;\n    uint in_ECX;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    uint32_t pAclInformation;\n    uint var_30h;\n    uint lpbDaclDefaulted;\n    int32_t lpbDaclPresent;\n    uint var_20h;\n    uchar *var_1ch;\n    uint pSIRequested;\n    int32_t pAceList;\n    int32_t pSecurityDescriptor;\n    int32_t pDacl;\n    int32_t var_8h;\n    uint var_1h;\n    \n    pSIRequested = 4;\n    var_1h._0_1_ = 0;\n    iVar6 = 0;\n    pSecurityDescriptor = 0;\n    var_1ch = NULL;\n    var_8h = 0;\n    pAceList = 0;\n    cVar2 = fcn.0046103d(&pSecurityDescriptor, in_ECX, &var_20h);\n    iVar9 = 0;\n    if ((cVar2 != '\\0') && (cVar2 = fcn.004610d7(var_20h),  iVar9 = var_8h,  cVar2 != '\\0')) {\n        pDacl = 0;\n        iVar3 = (*_sym.imp.ADVAPI32.dll_GetSecurityDescriptorDacl)\n                          (pSecurityDescriptor, &lpbDaclPresent, &pDacl, &lpbDaclDefaulted);\n        iVar9 = var_8h;\n        if (iVar3 != 0) {\n            fcn.004222d0(&pAclInformation, 0, 0xc);\n            var_30h = 8;\n            if ((pDacl == 0) ||\n               (iVar3 = (*_sym.imp.ADVAPI32.dll_GetAclInformation)(pDacl, &pAclInformation, 0xc, 2),  iVar9 = var_8h, \n               iVar3 != 0)) {\n                pcVar1 = _sym.imp.ADVAPI32.dll_GetLengthSid;\n                (*_sym.imp.ADVAPI32.dll_GetLengthSid)(pDestinationSid);\n                cVar2 = fcn.004610a3(var_30h);\n                iVar6 = pAceList;\n                iVar9 = var_8h;\n                if (cVar2 != '\\0') {\n                    if (((lpbDaclPresent != 0) && (pAclInformation != 0)) && (uVar7 = 0,  pAclInformation != 0)) {\n                        do {\n                            iVar3 = (*_sym.imp.ADVAPI32.dll_GetAce)(pDacl, uVar7, &pAceList);\n                            iVar9 = var_8h;\n                            if ((iVar3 == 0) ||\n                               (iVar3 = (*_sym.imp.ADVAPI32.dll_AddAce)(iVar6, 2, 0xffffffff, pAceList, *(pAceList + 2))\n                               ,  iVar9 = var_8h,  iVar3 == 0)) goto code_r0x00460c78;\n                            uVar7 = uVar7 + 1;\n                        } while (uVar7 < pAclInformation);\n                    }\n                    iVar3 = (*pcVar1)(pDestinationSid);\n                    uVar4 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, iVar3 + 8);\n                    puVar5 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar4);\n                    iVar9 = var_8h;\n                    var_1ch = puVar5;\n                    if (puVar5 != NULL) {\n                        *(puVar5 + 2) = iVar3 + 8;\n                        uVar4 = (*_sym.imp.ADVAPI32.dll_GetLengthSid)(pDestinationSid, puVar5 + 8, pDestinationSid);\n                        iVar3 = (*_sym.imp.ADVAPI32.dll_CopySid)(uVar4);\n                        iVar9 = var_8h;\n                        if (iVar3 != 0) {\n                            pDestinationSid = 0;\n                            puVar8 = arg_10h + 4;\n                            do {\n                                *puVar5 = *(puVar8 + -1);\n                                puVar5[1] = *(puVar8 + -3);\n                                *(puVar5 + 4) = *puVar8;\n                                iVar3 = (*_sym.imp.ADVAPI32.dll_AddAce)(iVar6, 2, 0xffffffff, puVar5, *(puVar5 + 2));\n                                iVar9 = var_8h;\n                                if (iVar3 == 0) goto code_r0x00460c78;\n                                puVar8 = puVar8 + 3;\n                                pDestinationSid = pDestinationSid + 1;\n                            } while (pDestinationSid == 0);\n                            iVar3 = (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorDacl)(var_8h, 1, iVar6, 0);\n                            if ((iVar3 != 0) &&\n                               (iVar3 = (*_sym.imp.USER32.dll_SetUserObjectSecurity)(hObj, &pSIRequested, iVar9), \n                               iVar3 != 0)) {\n                                var_1h._0_1_ = 1;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00460c78:\n    pcVar1 = _sym.imp.KERNEL32.dll_HeapFree;\n    if (pSecurityDescriptor != 0) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, pSecurityDescriptor);\n        (*pcVar1)(uVar4);\n    }\n    if (iVar9 != 0) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, iVar9);\n        (*pcVar1)(uVar4);\n    }\n    if (iVar6 != 0) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, iVar6);\n        (*pcVar1)(uVar4);\n    }\n    if (var_1ch != NULL) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_1ch);\n        var_1ch = (*pcVar1)(uVar4);\n    }\n    return var_1ch & 0xffffff00 | var_1h;\n}\n",
        "token_count": 1482
    },
    "00460ccf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00460ccf(uint hObj, uint32_t pDestinationSid, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uchar *puVar5;\n    uint in_ECX;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    uint32_t pAclInformation;\n    uint var_30h;\n    uint lpbDaclDefaulted;\n    int32_t lpbDaclPresent;\n    uint var_20h;\n    uchar *var_1ch;\n    uint pSIRequested;\n    int32_t pAceList;\n    int32_t pSecurityDescriptor;\n    int32_t pDacl;\n    int32_t var_8h;\n    uint var_1h;\n    \n    pSIRequested = 4;\n    var_1h._0_1_ = 0;\n    iVar6 = 0;\n    pSecurityDescriptor = 0;\n    var_1ch = NULL;\n    var_8h = 0;\n    pAceList = 0;\n    cVar2 = fcn.0046103d(&pSecurityDescriptor, in_ECX, &var_20h);\n    iVar9 = 0;\n    if ((cVar2 != '\\0') && (cVar2 = fcn.004610d7(var_20h),  iVar9 = var_8h,  cVar2 != '\\0')) {\n        pDacl = 0;\n        iVar3 = (*_sym.imp.ADVAPI32.dll_GetSecurityDescriptorDacl)\n                          (pSecurityDescriptor, &lpbDaclPresent, &pDacl, &lpbDaclDefaulted);\n        iVar9 = var_8h;\n        if (iVar3 != 0) {\n            fcn.004222d0(&pAclInformation, 0, 0xc);\n            var_30h = 8;\n            if ((pDacl == 0) ||\n               (iVar3 = (*_sym.imp.ADVAPI32.dll_GetAclInformation)(pDacl, &pAclInformation, 0xc, 2),  iVar9 = var_8h, \n               iVar3 != 0)) {\n                pcVar1 = _sym.imp.ADVAPI32.dll_GetLengthSid;\n                (*_sym.imp.ADVAPI32.dll_GetLengthSid)(pDestinationSid);\n                cVar2 = fcn.004610a3(var_30h);\n                iVar6 = pAceList;\n                iVar9 = var_8h;\n                if (cVar2 != '\\0') {\n                    if (((lpbDaclPresent != 0) && (pAclInformation != 0)) && (uVar7 = 0,  pAclInformation != 0)) {\n                        do {\n                            iVar3 = (*_sym.imp.ADVAPI32.dll_GetAce)(pDacl, uVar7, &pAceList);\n                            iVar9 = var_8h;\n                            if ((iVar3 == 0) ||\n                               (iVar3 = (*_sym.imp.ADVAPI32.dll_AddAce)(iVar6, 2, 0xffffffff, pAceList, *(pAceList + 2))\n                               ,  iVar9 = var_8h,  iVar3 == 0)) goto code_r0x00460ea1;\n                            uVar7 = uVar7 + 1;\n                        } while (uVar7 < pAclInformation);\n                    }\n                    iVar3 = (*pcVar1)(pDestinationSid);\n                    uVar4 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, iVar3 + 8);\n                    puVar5 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar4);\n                    iVar9 = var_8h;\n                    var_1ch = puVar5;\n                    if (puVar5 != NULL) {\n                        *(puVar5 + 2) = iVar3 + 8;\n                        uVar4 = (*_sym.imp.ADVAPI32.dll_GetLengthSid)(pDestinationSid, puVar5 + 8, pDestinationSid);\n                        iVar3 = (*_sym.imp.ADVAPI32.dll_CopySid)(uVar4);\n                        iVar9 = var_8h;\n                        if (iVar3 != 0) {\n                            pDestinationSid = 0;\n                            puVar8 = arg_10h + 4;\n                            do {\n                                *puVar5 = *(puVar8 + -1);\n                                puVar5[1] = *(puVar8 + -3);\n                                *(puVar5 + 4) = *puVar8;\n                                iVar3 = (*_sym.imp.ADVAPI32.dll_AddAce)(iVar6, 2, 0xffffffff, puVar5, *(puVar5 + 2));\n                                iVar9 = var_8h;\n                                if (iVar3 == 0) goto code_r0x00460ea1;\n                                puVar8 = puVar8 + 3;\n                                pDestinationSid = pDestinationSid + 1;\n                            } while (pDestinationSid < 2);\n                            iVar3 = (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorDacl)(var_8h, 1, iVar6, 0);\n                            if ((iVar3 != 0) &&\n                               (iVar3 = (*_sym.imp.USER32.dll_SetUserObjectSecurity)(hObj, &pSIRequested, iVar9), \n                               iVar3 != 0)) {\n                                var_1h._0_1_ = 1;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00460ea1:\n    pcVar1 = _sym.imp.KERNEL32.dll_HeapFree;\n    if (pSecurityDescriptor != 0) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, pSecurityDescriptor);\n        (*pcVar1)(uVar4);\n    }\n    if (iVar9 != 0) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, iVar9);\n        (*pcVar1)(uVar4);\n    }\n    if (iVar6 != 0) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, iVar6);\n        (*pcVar1)(uVar4);\n    }\n    if (var_1ch != NULL) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, var_1ch);\n        var_1ch = (*pcVar1)(uVar4);\n    }\n    return var_1ch & 0xffffff00 | var_1h;\n}\n",
        "token_count": 1482
    },
    "00461003": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00461003(uint *param_1)\n\n{\n    if (param_1[2] != 0) {\n        (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(param_1[3], 0, param_1[2], 0, 0, 0);\n        fcn.0041fd4d(param_1[2]);\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(param_1[3]);\n    fcn.0041fd94(*param_1);\n    return;\n}\n",
        "token_count": 122
    },
    "00461145": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.00461145(uint lpszUsername, uint lpszDomain, uint32_t lpszPassword, uint32_t arg_14h, uint noname_4, int32_t arg_1ch\n            , uint32_t lpApplicationName, uint arg_24h, int32_t arg_28h, uint arg_2ch)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint extraout_ECX;\n    uint8_t uVar7;\n    int32_t hObj;\n    int32_t hObj_00;\n    int32_t pDestinationSid;\n    uint lpProfileInfo;\n    uint var_5ch;\n    int32_t hProfile;\n    uint var_44h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint lpCommandLine;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t hExistingToken;\n    uint var_1h;\n    \n    fcn.00460fb8();\n    cVar3 = fcn.00461607(extraout_ECX);\n    if (cVar3 == '\\0') {\n        uVar7 = 0;\n        goto code_r0x00461401;\n    }\n    pDestinationSid = 0;\n    var_1h._0_1_ = 0;\n    hExistingToken = 0;\n    hObj_00 = 0;\n    hObj = 0;\n    var_10h = 0;\n    var_18h = 0;\n    lpCommandLine = 0;\n    var_ch = 0;\n    fcn.004222d0(&lpProfileInfo, 0, 0x20);\n    uVar6 = arg_14h & 1;\n    uVar2 = arg_14h & 1;\n    lpProfileInfo = 0x20;\n    var_1ch = arg_14h & 2;\n    var_5ch = lpszUsername;\n    iVar4 = (*_sym.imp.ADVAPI32.dll_LogonUserW)\n                      (lpszUsername, lpszDomain, lpszPassword, (var_1ch != 0) + '\\x02', 0, &hExistingToken);\n    if (iVar4 == 0) {\ncode_r0x00461393:\n        if (hProfile != 0) {\n            (*_sym.imp.USERENV.dll_UnloadUserProfile)(hExistingToken, hProfile);\n        }\n    }\n    else {\n        if (var_1ch != 0) {\n            iVar4 = (*_sym.imp.ADVAPI32.dll_DuplicateTokenEx)(hExistingToken, 0, 0, 2, 1, &lpszPassword);\n            if (iVar4 == 0) goto code_r0x00461393;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hExistingToken);\n            hExistingToken = lpszPassword;\n        }\n        hObj_00 = (*_sym.imp.USER32.dll_OpenWindowStationW)(L\"winsta0\", 0, 0x60000);\n        if ((hObj_00 == 0) || (hObj_00 == -1)) goto code_r0x00461393;\n        var_18h = (*_sym.imp.USER32.dll_GetProcessWindowStation)();\n        iVar4 = (*_sym.imp.USER32.dll_SetProcessWindowStation)(hObj_00);\n        if ((iVar4 == 0) ||\n           (((hObj = (*_sym.imp.USER32.dll_OpenDesktopW)(L\"default\", 0, 0, 0x60081),  hObj == 0 || (hObj == -1)) ||\n            (cVar3 = fcn.004616a1(hExistingToken, &var_10h),  pDestinationSid = var_10h,  cVar3 == '\\0'))))\n        goto code_r0x00461393;\n        var_34h._0_2_ = 0xb00;\n        var_30h = 0xf0000000;\n        var_28h._0_2_ = 0x400;\n        var_24h = 0xf037f;\n        cVar3 = fcn.00460ccf(hObj_00, var_10h, &var_34h);\n        if (cVar3 == '\\0') goto code_r0x00461393;\n        var_28h._0_2_ = 0;\n        var_24h = 0xf01ff;\n        cVar3 = fcn.00460aa6(hObj, pDestinationSid, &var_28h);\n        if (cVar3 == '\\0') goto code_r0x00461393;\n        *(arg_28h + 8) = L\"winsta0\\\\default\";\n        lpszPassword = *(arg_28h + 0x2c) & 0x100;\n        if (arg_1ch != 0) {\n            iVar4 = fcn.004248f3(arg_1ch);\n            iVar1 = (iVar4 + 1) * 2;\n            lpCommandLine = fcn.0041fd8b(-(iVar1 >> 0x20 != 0) | iVar1);\n            fcn.00424913(lpCommandLine, arg_1ch);\n        }\n        if ((((uVar6 != 0) &&\n             (iVar4 = (*_sym.imp.USERENV.dll_LoadUserProfileW)(hExistingToken, &lpProfileInfo),  iVar4 == 0)) ||\n            (((arg_14h & 4) == 0 &&\n             (iVar4 = (*_sym.imp.USERENV.dll_CreateEnvironmentBlock)(&var_ch, hExistingToken, 0),  iVar4 == 0)))) ||\n           (iVar4 = (*_sym.imp.ADVAPI32.dll_CreateProcessAsUserW)\n                              (hExistingToken, 0, lpCommandLine, 0, 0, lpszPassword, lpApplicationName | 0x400, var_ch, \n                               arg_24h, arg_28h, arg_2ch),  iVar4 == 0)) goto code_r0x00461393;\n        if (uVar2 != 0) {\n            fcn.00461747(arg_2ch, &hProfile, &hExistingToken);\n        }\n        var_1h._0_1_ = 1;\n    }\n    if (pDestinationSid != 0) {\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, pDestinationSid);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar5);\n    }\n    if (hObj_00 != 0) {\n        (*_sym.imp.USER32.dll_CloseWindowStation)(hObj_00);\n    }\n    if (hObj != 0) {\n        (*_sym.imp.USER32.dll_CloseDesktop)(hObj);\n    }\n    if (var_18h != 0) {\n        (*_sym.imp.USER32.dll_SetProcessWindowStation)(var_18h);\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(hExistingToken);\n    fcn.0041fd94(lpCommandLine);\n    uVar7 = var_1h;\n    if (var_ch != 0) {\n        (*_sym.imp.USERENV.dll_DestroyEnvironmentBlock)(var_ch);\n        uVar7 = var_1h;\n    }\ncode_r0x00461401:\n    uVar6 = fcn.00461003();\n    return uVar6 & 0xffffff00 | uVar7;\n}\n",
        "token_count": 1713
    },
    "00461412": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00461412(uint lpUsername, uint lpDomain, uint lpPassword, uint32_t hObject, uint noname_4, uint arg_1ch, \n            uint32_t arg_20h, uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t var_4h;\n    \n    uVar4 = 0;\n    var_4h = 0;\n    uVar5 = 0;\n    if ((hObject & 1) == 0) {\n        if ((hObject & 2) != 0) {\n            uVar5 = 2;\n        }\n    }\n    else {\n        uVar5 = 1;\n    }\n    if ((hObject & 4) != 0) {\n        hObject = 0;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(10, &hObject);\n        (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar1);\n        iVar2 = (*_sym.imp.USERENV.dll_CreateEnvironmentBlock)(&var_4h, hObject, 1);\n        uVar3 = (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        if (iVar2 == 0) goto code_r0x0046149e;\n    }\n    uVar3 = (*_sym.imp.ADVAPI32.dll_CreateProcessWithLogonW)\n                      (lpUsername, lpDomain, lpPassword, uVar5, 0, arg_1ch, arg_20h | 0x400, var_4h, arg_24h, arg_28h, \n                       arg_2ch);\n    uVar4 = uVar3 != 0;\ncode_r0x0046149e:\n    if (var_4h != 0) {\n        uVar3 = (*_sym.imp.USERENV.dll_DestroyEnvironmentBlock)(var_4h);\n    }\n    return uVar3 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 468
    },
    "004614b5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.004614b5(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint32_t *var_ch;\n    uint32_t var_8h;\n    uint32_t *var_4h;\n    \n    var_10h = 0;\n    var_4h = NULL;\n    uVar5 = 0;\n    puVar2 = fcn.00460f58(&var_4h, &var_10h, &var_10h);\n    puVar1 = var_4h;\n    if (puVar2 != '\\0') {\n        var_8h = 0;\n        puVar2 = var_ch;\n        if (var_ch[1] != 0) {\n            do {\n                uVar5 = 0;\n                puVar2 = (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueW)(0, *(*var_ch + var_8h * 4), &var_1ch);\n                if ((puVar2 == NULL) || (var_14h = 0,  *puVar1 == 0)) break;\n                uVar6 = 0;\n                var_4h = puVar1 + 1;\n                do {\n                    iVar3 = fcn.00421324(var_4h, &var_1ch, 8);\n                    if (iVar3 == 0) {\n                        uVar5 = 1;\n                    }\n                    uVar6 = uVar6 + 1;\n                    var_4h = var_4h + 3;\n                } while (uVar6 < *puVar1);\n                puVar2 = var_4h;\n                if (uVar5 == 0) break;\n                var_8h = var_8h + 1;\n                puVar2 = var_ch;\n            } while (var_8h < var_ch[1]);\n        }\n    }\n    if (puVar1 != NULL) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, puVar1);\n        puVar2 = (*_sym.imp.KERNEL32.dll_HeapFree)(uVar4);\n    }\n    return puVar2 & 0xffffff00 | uVar5;\n}\n",
        "token_count": 540
    },
    "0046156f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0046156f(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    piVar1 = param_1 + 0xc;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThread)(0x28, 0, piVar1);\n    uVar3 = (*_sym.imp.ADVAPI32.dll_OpenThreadToken)(uVar2);\n    if (uVar3 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, piVar1);\n        uVar3 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar2);\n        if (uVar3 == 0) {\n            *piVar1 = 0;\n        }\n    }\n    return uVar3 & 0xffffff00 | *piVar1 != 0;\n}\n",
        "token_count": 210
    },
    "004615a7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.004615a7(void)\n\n{\n    int32_t iVar1;\n    uint pIdentifierAuthority;\n    uint var_ch;\n    uint SidToCheck;\n    uint32_t IsMember;\n    \n    var_ch._0_2_ = 0x500;\n    pIdentifierAuthority = 0;\n    IsMember = (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)\n                         (&pIdentifierAuthority, 2, 0x20, 0x220, 0, 0, 0, 0, 0, 0, &SidToCheck);\n    if (IsMember != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_CheckTokenMembership)(0, SidToCheck, &IsMember);\n        IsMember = IsMember & -(iVar1 != 0);\n        (*_sym.imp.ADVAPI32.dll_FreeSid)(SidToCheck);\n    }\n    return IsMember & 0xffffff00 | IsMember == 1;\n}\n",
        "token_count": 226
    },
    "004617fd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.004617fd(uint arg_8h)\n\n{\n    char cVar1;\n    bool bVar2;\n    \n    cVar1 = fcn.0046182c();\n    if (arg_8h == '\\0') {\n        bVar2 = cVar1 == '\\x01';\n    }\n    else {\n        bVar2 = cVar1 == '\\0';\n    }\n    if (bVar2) {\n        fcn.00461845(0, 1, 0xffffffff, 0xffffffff);\n    }\n    return 1;\n}\n",
        "token_count": 124
    },
    "00461845": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00461845(int32_t hWnd, int32_t arg_ch, uint32_t arg_10h, int32_t Msg)\n\n{\n    uint *in_ECX;\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t lpRect;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    var_8h = in_ECX;\n    (*_sym.imp.USER32.dll_GetWindowRect)(*in_ECX, &lpRect);\n    if (arg_10h == 0xffffffff) {\n        arg_10h = (var_10h - lpRect) / 2;\n    }\n    if (Msg == -1) {\n        Msg = (var_ch - var_14h) / 2;\n    }\n    uVar2 = 1;\n    uVar3 = Msg << 0x10 | arg_10h & 0xffff;\n    var_4h = 0x201;\n    arg_10h = 0x203;\n    Msg = 0x202;\n    if (hWnd == 2) {\n        var_4h = 0x204;\n        Msg = 0x205;\n        uVar2 = 2;\n    }\n    else {\n        if (hWnd != 1) goto code_r0x004618de;\n        var_4h = 0x207;\n        Msg = 0x208;\n        uVar2 = 0x10;\n    }\n    arg_10h = 0x206;\ncode_r0x004618de:\n    uVar1 = 1;\n    if (0 < arg_ch) {\n        do {\n            uVar4 = var_4h;\n            if ((uVar1 - (uVar1 >> 0x1f) & 0xfffffffe) == uVar1) {\n                uVar4 = arg_10h;\n            }\n            (*_sym.imp.USER32.dll_PostMessageW)(*var_8h, uVar4, uVar2, uVar3);\n            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n            (*_sym.imp.USER32.dll_PostMessageW)(*var_8h, Msg, 0, uVar3);\n            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 <= arg_ch);\n    }\n    return 1;\n}\n",
        "token_count": 564
    },
    "0046193e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0046193e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    \n    iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x14f, arg_8h != '\\0', 0);\n    return iVar1 != 0;\n}\n",
        "token_count": 78
    },
    "0046196b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046196b(int32_t *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    int32_t iVar4;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0xb0, &var_4h, &var_10h);\n    iVar4 = var_4h;\n    var_ch = var_4h;\n    var_8h = (*pcVar1)(*in_ECX, 0xc9, var_4h, 0);\n    if (var_8h < 1) {\n        iVar4 = var_4h + 1;\n    }\n    else {\n        iVar3 = (*pcVar1)(*in_ECX, 0xc9, var_4h, 0);\n        iVar2 = var_8h;\n        while (iVar2 == iVar3) {\n            var_4h = var_4h + -1;\n            iVar3 = (*pcVar1)(*in_ECX, 0xc9, var_4h, 0);\n            iVar4 = var_ch;\n        }\n        iVar4 = iVar4 - var_4h;\n    }\n    *arg_8h = iVar4;\n    return 1;\n}\n",
        "token_count": 336
    },
    "00462183": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00462183(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_28h;\n    uint *hWnd;\n    \n    iVar3 = 0;\n    hWnd = in_ECX;\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x1004, 0, 0);\n    fcn.004084e7(0x49d0d0);\n    if (arg_8h == '\\0') {\n        if (0 < iVar1) {\n            do {\n                iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x102c, iVar3, 2);\n                if (iVar2 != 0) {\n                    fcn.00425156(iVar3, &var_28h, 10);\n                    fcn.004084e7(&var_28h);\n                    return 1;\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < iVar1);\n        }\n    }\n    else {\n        iVar3 = 0;\n        if (0 < iVar1) {\n            do {\n                iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x102c, iVar3, 2);\n                if (iVar2 != 0) {\n                    fcn.00425156(iVar3, &var_28h, 10);\n                    if (*(arg_ch + 4) != 0) {\n                        fcn.004052b7(0x4af370);\n                    }\n                    fcn.004052b7(&var_28h);\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < iVar1);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 415
    },
    "004624e6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004624e6(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_ECX;\n    uint uVar5;\n    \n    fcn.00463985();\n    pcVar1 = _sym.imp.USER32.dll_MapVirtualKeyW;\n    iVar3 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(0x25, 0);\n    pcVar2 = _sym.imp.USER32.dll_PostMessageW;\n    uVar4 = iVar3 << 0x10 | 1;\n    if (arg_8h < 0) {\n        (*_sym.imp.USER32.dll_PostMessageW)(*in_ECX, 0x100, 0x25, uVar4);\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n        iVar3 = (*pcVar1)(0x25, 0);\n        uVar5 = 0x25;\n    }\n    else {\n        (*_sym.imp.USER32.dll_PostMessageW)(*in_ECX, 0x100, 0x27, uVar4);\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n        iVar3 = (*pcVar1)(0x25, 0);\n        uVar5 = 0x27;\n    }\n    (*pcVar2)(*in_ECX, 0x101, uVar5, iVar3 << 0x10 | 0xc0000001);\n    (*_sym.imp.KERNEL32.dll_Sleep)(0);\n    fcn.00463985();\n    return 1;\n}\n",
        "token_count": 362
    },
    "004625ae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004625ae(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    arg_8h_00 = fcn.004627af(arg_8h);\n    if (arg_8h_00 != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x1127, arg_8h_00, 0xf000);\n        uVar2 = uVar2 >> 0xc;\n        if ((((uVar2 != 0) && ((arg_ch != '\\0' || (uVar2 != 1)))) && ((arg_ch != '\\x01' || (uVar2 != 2)))) &&\n           (cVar1 = fcn.0046265a(arg_8h_00, &var_8h),  cVar1 != '\\0')) {\n            fcn.00461845(0, 1, var_8h, var_4h);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 293
    },
    "004628dd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004628dd(int32_t arg_8h, int32_t arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    uint *arg_10h_00;\n    char cVar1;\n    int32_t arg_8h_00;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint var_b4h;\n    int32_t iStack180;\n    uint *puStack176;\n    uint uStack172;\n    uint uStack168;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    \n    arg_10h_00 = arg_10h;\n    var_8h = 0;\n    var_18h = *arg_10h;\n    var_14h = arg_10h[1];\n    var_10h = arg_10h[2];\n    var_ch = arg_10h[3];\n    *var_ch = *var_ch + 1;\n    fcn.0040c25d();\n    if (arg_8h != 0) {\n        arg_10h = 0x1;\n        do {\n            arg_8h_00 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x110a, 4, arg_8h);\n            if (arg_8h_00 != 0) {\n                if (arg_10h_00[1] != 0) {\n                    fcn.004052b7(0x4af370);\n                }\n                if (arg_14h == '\\0') {\n                    fcn.00462bb9(arg_8h, &fcn.004628dd::var_28h);\n                    uStack168 = 0x46299c;\n                    fcn.00407cf8(&fcn.004628dd::var_28h);\n                }\n                else {\n                    uStack168 = 0x462969;\n                    fcn.00425156(var_8h, &fcn.004628dd::var_b4h, 10);\n                    fcn.004051ec(0x23);\n                    fcn.004052b7(0x462983);\n                }\n                uStack168 = 0;\n                uStack172 = arg_14h;\n                puStack176 = arg_10h_00;\n                iStack180 = arg_ch;\n                cVar1 = fcn.004628dd(arg_8h_00, arg_ch, arg_10h_00, arg_14h);\n                if (cVar1 != '\\0') goto code_r0x004629e8;\n                if (arg_10h_00 != &fcn.004628dd::var_18h) {\n                    fcn.0040c1c3(&fcn.004628dd::var_18h);\n                }\n            }\n            if (arg_8h == arg_ch) {\n                if (arg_10h_00[1] != 0) {\n                    fcn.004052b7(0x4af370);\n                }\n                if (arg_14h == '\\0') {\n                    fcn.00462bb9(arg_8h, &fcn.004628dd::var_28h);\n                    fcn.00407cf8(&fcn.004628dd::var_28h);\n                }\n                else {\n                    fcn.00425156(var_8h, &fcn.004628dd::var_b4h, 10);\n                    fcn.004051ec(0x23);\n                    fcn.004052b7(0x462a45);\n                }\n                goto code_r0x004629e8;\n            }\n            arg_8h = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x110a, 1, arg_8h);\n            var_8h = var_8h + 1;\n        } while (arg_8h != 0);\n    }\n    arg_10h = NULL;\ncode_r0x004629e8:\n    fcn.0040b1ff();\n    uVar2 = fcn.0040b1ff();\n    return uVar2 & 0xffffff00 | arg_10h;\n}\n",
        "token_count": 944
    },
    "00462a60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00462a60(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_18h;\n    uint var_14h;\n    uint *hWnd;\n    uint var_1h;\n    \n    iVar4 = 0;\n    var_1h._0_1_ = '\\0';\n    fcn.0040c25d();\n    piVar1 = fcn.0040660f(0);\n    if (*piVar1 == 0x23) {\n        piVar1 = fcn.0040660f(1);\n        if (*piVar1 != 0x23) {\n            fcn.0040ad22(0, 1);\n            var_1h._0_1_ = '\\x01';\n            goto code_r0x00462ac1;\n        }\n    }\n    piVar1 = fcn.0040660f(0);\n    if (*piVar1 == 0x23) {\n        fcn.0040ad22(0, 1);\n    }\ncode_r0x00462ac1:\n    iVar2 = fcn.00426261(*arg_ch);\n    for (; (var_1h == '\\0' || (iVar2 != iVar4)); iVar4 = iVar4 + 1) {\n        fcn.00462bb9(arg_8h, &var_18h);\n        iVar3 = fcn.0041d5dc(*arg_ch, arg_ch[1], var_18h, var_14h, 0);\n        if (iVar3 == 0) break;\n        arg_8h = (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x110a, 1, arg_8h);\n        if (arg_8h == 0) break;\n    }\n    fcn.0040b1ff();\n    return arg_8h;\n}\n",
        "token_count": 470
    },
    "00462ceb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00462ceb(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpdwResult;\n    \n    lpdwResult = param_1;\n    if (param_2 == '\\x01') {\n        iVar1 = (*_sym.imp.USER32.dll_SendMessageTimeoutW)(param_1, 0, 0, 0, 2, 5000, &lpdwResult);\n        if (iVar1 == 0) {\n            return;\n        }\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(param_1, 0, uVar2);\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)(uVar2);\n    (*_sym.imp.USER32.dll_AttachThreadInput)(uVar2);\n    return;\n}\n",
        "token_count": 214
    },
    "00463985": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463985(uint param_1, char param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (param_2 == '\\x01') {\n        cVar1 = fcn.00463c4b();\n        if (cVar1 != '\\0') {\n            return;\n        }\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(param_1, 0, uVar2);\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)(uVar2);\n    (*_sym.imp.USER32.dll_AttachThreadInput)(uVar2);\n    return;\n}\n",
        "token_count": 170
    },
    "004639b5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004639b5(uint arg_8h)\n\n{\n    uint *in_ECX;\n    \n    (*_sym.imp.USER32.dll_EnableWindow)(*in_ECX, arg_8h != '\\0');\n    return 1;\n}\n",
        "token_count": 55
    },
    "004639d3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004639d3(uint16_t *arg_8h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_ECX[1] != 0) {\n        iVar2 = fcn.004248f3(arg_8h);\n        uVar4 = 0;\n        if (in_ECX[1] != 0) {\n            iVar5 = *in_ECX - arg_8h;\n            puVar1 = arg_8h;\n            iVar3 = iVar2;\njoined_r0x00463a09:\n            do {\n                if (iVar3 == 0) {\n                    iVar3 = 0;\n                }\n                else {\n                    if (*(iVar5 + puVar1) == *puVar1) {\n                        puVar1 = puVar1 + 1;\n                        iVar3 = iVar3 + -1;\n                        goto joined_r0x00463a09;\n                    }\n                    iVar3 = (-(*(iVar5 + puVar1) < *puVar1) & 0xfffffffe) + 1;\n                }\n                if (iVar3 == 0) {\n                    return uVar4;\n                }\n                uVar4 = uVar4 + 1;\n                iVar5 = iVar5 + 2;\n                puVar1 = arg_8h;\n                iVar3 = iVar2;\n            } while (uVar4 < in_ECX[1]);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 367
    },
    "00463a9e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00463a9e(int32_t *lpRect, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t lpPoint;\n    int32_t var_4h;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetWindowRect)(*in_ECX, lpRect);\n    if (iVar1 == 0) {\ncode_r0x00463b04:\n        uVar2 = 0;\n    }\n    else {\n        if (arg_ch != '\\0') {\n            iVar1 = fcn.00463a47();\n            if (iVar1 == 0) goto code_r0x00463b04;\n            lpPoint = *lpRect;\n            var_4h = lpRect[1];\n            iVar3 = lpRect[3] - var_4h;\n            iVar4 = lpRect[2] - lpPoint;\n            (*_sym.imp.USER32.dll_ScreenToClient)(iVar1, &lpPoint);\n            *lpRect = lpPoint;\n            lpRect[2] = lpPoint + iVar4;\n            lpRect[1] = var_4h;\n            lpRect[3] = iVar3 + var_4h;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 304
    },
    "00463c90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00463c90(uint *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_ECX;\n    \n    cVar1 = fcn.00463c4b();\n    if ((cVar1 == '\\0') && (iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0xc, 0, *arg_8h),  iVar2 != 0)) {\n        if (arg_ch != '\\0') {\n            uVar3 = (*_sym.imp.USER32.dll_GetParent)(*in_ECX, 0, 1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(uVar3);\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 181
    },
    "00463cda": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463cda(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint32_t uVar4;\n    \n    if (in_ECX != arg_8h) {\n        fcn.004030e0();\n        uVar2 = *(arg_8h + 8);\n        if (*(in_ECX + 0xc) < uVar2) {\n            uVar4 = 8;\n            if (7 < uVar2) {\n                uVar4 = uVar2;\n            }\n            *(in_ECX + 0xc) = uVar4;\n            uVar1 = fcn.0041fd8b(-(uVar4 * 4 >> 0x20 != 0) | uVar4 * 4);\n            if (*(in_ECX + 4) != 0) {\n                fcn.0041fd94(*(in_ECX + 4));\n            }\n            *(in_ECX + 4) = uVar1;\n            uVar2 = *(arg_8h + 8);\n        }\n        uVar4 = 0;\n        *(in_ECX + 8) = uVar2;\n        if (uVar2 != 0) {\n            do {\n                puVar3 = fcn.0041fd5b(4, unaff_EBX);\n                *puVar3 = **(*(arg_8h + 4) + uVar4 * 4);\n                *(*(in_ECX + 4) + uVar4 * 4) = puVar3;\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < *(in_ECX + 8));\n        }\n    }\n    return;\n}\n",
        "token_count": 402
    },
    "00463d99": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463d99(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *arg_8h_00;\n    uint arg_ch;\n    char16_t *pcVar2;\n    uint var_34h;\n    uint var_24h;\n    uint var_14h;\n    \n    fcn.0040c25d();\n    fcn.0040c25d();\n    if (arg_8h[1] == 0) {\ncode_r0x00463ea8:\n        pcVar2 = L\"[LAST\";\ncode_r0x00463ead:\n        fcn.004084e7(pcVar2);\n    }\n    else {\n        iVar1 = fcn.004249b8(*arg_8h, L\"LAST\");\n        if (iVar1 == 0) goto code_r0x00463ea8;\n        iVar1 = fcn.004249b8(*arg_8h, L\"ACTIVE\");\n        if (iVar1 == 0) {\n            pcVar2 = L\"[ACTIVE\";\n            goto code_r0x00463ead;\n        }\n        iVar1 = fcn.00428d9b(*arg_8h, L\"HANDLE=\", 7);\n        if (iVar1 == 0) {\n            pcVar2 = L\"[HANDLE:\";\ncode_r0x00463e09:\n            fcn.004084e7(pcVar2);\n            arg_ch = 7;\n        }\n        else {\n            iVar1 = fcn.00428d9b(*arg_8h, L\"REGEXP=\", 7);\n            if (iVar1 == 0) {\n                pcVar2 = L\"[REGEXPTITLE:\";\n                goto code_r0x00463e09;\n            }\n            iVar1 = fcn.00428d9b(*arg_8h, L\"CLASSNAME=\", 10);\n            if (iVar1 != 0) {\n                iVar1 = fcn.004249b8(*arg_8h, 0x4c5d08);\n                if (iVar1 != 0) goto code_r0x00463ed1;\n                pcVar2 = L\"[ALL\";\n                goto code_r0x00463ead;\n            }\n            fcn.004084e7(L\"[CLASS:\");\n            arg_ch = 10;\n        }\n        arg_8h_00 = fcn.00462ffb(&var_34h, arg_ch, 0xffffffff);\n        if (&var_14h != arg_8h_00) {\n            fcn.0040c1c3(arg_8h_00);\n        }\n        fcn.0040b1ff();\n        fcn.00463ee6();\n        fcn.00407cf8(&var_14h);\n    }\n    fcn.004052b7(0x4c5d1c);\n    if (arg_8h != &var_24h) {\n        fcn.0040c1c3(&var_24h);\n    }\ncode_r0x00463ed1:\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return;\n}\n",
        "token_count": 684
    },
    "004640c5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004640c5(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    uint unaff_ESI;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        uVar2 = 8;\n        if (7 < uVar1) {\n            uVar2 = uVar1;\n        }\n        *(in_ECX + 0xc) = uVar2;\n        uVar3 = fcn.0041fd8b(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.00420db0(uVar3, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.0041fd94(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar3;\n    }\n    puVar4 = fcn.0041fd5b(4, unaff_ESI);\n    *puVar4 = *arg_8h;\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar4;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 366
    },
    "00464144": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00464144(uint *arg_8h, uint *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    char16_t cVar1;\n    uint16_t uVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int16_t *piVar7;\n    int32_t iVar8;\n    char16_t *pcVar9;\n    int32_t iVar10;\n    uint16_t *puVar11;\n    char32_t *pcVar12;\n    int32_t arg_8h_00;\n    uint32_t uVar13;\n    uint *in_ECX;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint auStack76 [4];\n    int32_t iStack60;\n    int32_t iStack56;\n    uint uStack44;\n    int32_t iStack40;\n    \n    fcn.004030e0();\n    fcn.004030e0();\n    *(in_ECX + 1) = arg_20h;\n    *(in_ECX + 5) = arg_1ch;\n    if (in_ECX + 5 != arg_8h) {\n        fcn.0040c1c3(arg_8h);\n    }\n    if (in_ECX + 9 != arg_ch) {\n        fcn.0040c1c3(arg_ch);\n    }\n    fcn.004084e7(0x49d0d0);\n    in_ECX[4] = arg_14h;\n    iVar15 = 1;\n    in_ECX[0x27] = 1;\n    *(in_ECX + 3) = 1;\n    in_ECX[2] = 0;\n    in_ECX[0x28] = 0;\n    in_ECX[0x2d] = 0;\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    iVar5 = in_ECX[4];\n    if (iVar5 < 0) {\n        iVar5 = fcn.00428f54(iVar5);\n        in_ECX[4] = iVar5;\n        *(in_ECX + 3) = 0;\n    }\n    if (iVar5 == 4) {\n        fcn.00463d99(in_ECX + 5);\n        in_ECX[4] = 1;\n    }\n    if ((in_ECX[6] == 0) && (in_ECX[10] == 0)) {\n        uVar6 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n        fcn.00463908(uVar6);\n        fcn.004640c5(&stack0xffffffb0);\n    }\n    else {\n        piVar7 = fcn.0040660f(0);\n        if ((*piVar7 == 0x5b) && (piVar7 = fcn.0040660f(in_ECX[6] + -1),  *piVar7 == 0x5d)) {\n            iVar5 = in_ECX[6] + -2;\ncode_r0x00464270:\n            cVar4 = fcn.00463f58(auStack76, &stack0xffffffb0, iVar5);\n            if (cVar4 == '\\0') goto code_r0x004647b8;\n            iVar8 = fcn.004248f3(L\"LAST\");\n            iVar14 = iStack56;\n            iVar15 = iStack60;\n            if (iStack56 == iVar8) {\n                pcVar9 = L\"LAST\";\n                if (iStack56 != 0) {\n                    iVar8 = iStack56;\n                    do {\n                        cVar1 = *(iStack60 + -0x4c5c58 + pcVar9);\n                        if (cVar1 != *pcVar9) {\n                            iVar8 = (-(cVar1 < *pcVar9) & 0xfffffffe) + 1;\n                            goto code_r0x004642db;\n                        }\n                        pcVar9 = pcVar9 + 1;\n                        iVar8 = iVar8 + -1;\n                    } while (iVar8 != 0);\n                }\n                iVar8 = 0;\ncode_r0x004642db:\n                if (iVar8 != 0) goto code_r0x004642eb;\n                cVar4 = fcn.00403536();\n                if (cVar4 != '\\0') {\n                    iVar5 = (*_sym.imp.USER32.dll_IsWindow)(**in_ECX);\n                    if (iVar5 != 0) goto code_r0x00464787;\ncode_r0x0046473f:\n                    iVar15 = 0;\n                    goto code_r0x00464876;\n                }\n            }\n            else {\ncode_r0x004642eb:\n                iVar8 = iStack60;\n                arg_8h_00 = iStack56;\n                iVar10 = fcn.004248f3(L\"ACTIVE\");\n                if (iVar14 == iVar10) {\n                    pcVar9 = L\"ACTIVE\";\n                    if (iVar14 != 0) {\n                        do {\n                            cVar1 = *(iVar15 + -0x4c5c70 + pcVar9);\n                            if (cVar1 != *pcVar9) {\n                                iVar15 = (-(cVar1 < *pcVar9) & 0xfffffffe) + 1;\n                                goto code_r0x00464325;\n                            }\n                            pcVar9 = pcVar9 + 1;\n                            iVar14 = iVar14 + -1;\n                        } while (iVar14 != 0);\n                    }\n                    iVar15 = 0;\ncode_r0x00464325:\n                    iVar14 = arg_8h_00;\n                    if (iVar15 != 0) goto code_r0x00464331;\n                    cVar4 = fcn.00403536();\n                    if (cVar4 == '\\0') goto code_r0x004647b0;\n                    arg_8h_00 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\ncode_r0x00464780:\n                    fcn.00463908(arg_8h_00);\ncode_r0x00464787:\n                    fcn.004640c5(&stack0xffffffb0);\n                    iVar15 = 1;\n                    goto code_r0x00464876;\n                }\ncode_r0x00464331:\n                iVar15 = fcn.004248f3(0x4c5d20);\n                if (iVar14 == iVar15) {\n                    puVar11 = 0x4c5d20;\n                    if (iVar14 != 0) {\n                        do {\n                            uVar2 = *(iVar8 + -0x4c5d20 + puVar11);\n                            if (uVar2 != *puVar11) {\n                                iVar15 = (-(uVar2 < *puVar11) & 0xfffffffe) + 1;\n                                goto code_r0x00464369;\n                            }\n                            puVar11 = puVar11 + 1;\n                            iVar14 = iVar14 + -1;\n                        } while (iVar14 != 0);\n                    }\n                    iVar15 = 0;\ncode_r0x00464369:\n                    iVar14 = arg_8h_00;\n                    if (iVar15 == 0) {\n                        fcn.0046ee2e();\n                        iVar5 = (*_sym.imp.USER32.dll_IsWindow)(arg_8h_00);\n                        if (iVar5 == 0) goto code_r0x0046473f;\n                        goto code_r0x00464780;\n                    }\n                }\n                iVar15 = fcn.004248f3(L\"REGEXPTITLE\");\n                if (iVar14 == iVar15) {\n                    pcVar9 = L\"REGEXPTITLE\";\n                    if (iVar14 != 0) {\n                        do {\n                            cVar1 = *(iVar8 + -0x4c5d30 + pcVar9);\n                            if (cVar1 != *pcVar9) {\n                                iVar15 = (-(cVar1 < *pcVar9) & 0xfffffffe) + 1;\n                                goto code_r0x004643ac;\n                            }\n                            pcVar9 = pcVar9 + 1;\n                            iVar14 = iVar14 + -1;\n                        } while (iVar14 != 0);\n                    }\n                    iVar15 = 0;\ncode_r0x004643ac:\n                    iVar14 = arg_8h_00;\n                    if (iVar15 != 0) goto code_r0x00464401;\n                    if ((in_ECX[2] & 1) != 0) {\n                        iVar15 = -3;\n                        goto code_r0x00464876;\n                    }\n                    in_ECX[2] = in_ECX[2] | 2;\n                    fcn.004082a1();\ncode_r0x004644c1:\n                    iVar15 = -2;\n                    iVar14 = fcn.0040817f(auStack76);\n                    if (iVar14 != 0) goto code_r0x00464876;\n                    goto code_r0x00464270;\n                }\ncode_r0x00464401:\n                iVar15 = fcn.004248f3(L\"CLASS\");\n                if (iVar14 == iVar15) {\n                    pcVar9 = L\"CLASS\";\n                    if (iVar14 != 0) {\n                        do {\n                            cVar1 = *(iVar8 + -0x4c5bc0 + pcVar9);\n                            if (cVar1 != *pcVar9) {\n                                iVar15 = (-(cVar1 < *pcVar9) & 0xfffffffe) + 1;\n                                goto code_r0x00464435;\n                            }\n                            pcVar9 = pcVar9 + 1;\n                            iVar14 = iVar14 + -1;\n                        } while (iVar14 != 0);\n                    }\n                    iVar15 = 0;\ncode_r0x00464435:\n                    iVar14 = arg_8h_00;\n                    if (iVar15 == 0) {\n                        in_ECX[2] = in_ECX[2] | 8;\n                        if (in_ECX + 0x23 != auStack76) {\n                            fcn.0040c1c3(auStack76);\n                        }\n                        goto code_r0x00464270;\n                    }\n                }\n                iVar15 = fcn.004248f3(L\"REGEXPCLASS\");\n                if (iVar14 == iVar15) {\n                    pcVar9 = L\"REGEXPCLASS\";\n                    if (iVar14 != 0) {\n                        do {\n                            cVar1 = *(iVar8 + -0x4c5be0 + pcVar9);\n                            if (cVar1 != *pcVar9) {\n                                iVar15 = (-(cVar1 < *pcVar9) & 0xfffffffe) + 1;\n                                goto code_r0x004644ad;\n                            }\n                            pcVar9 = pcVar9 + 1;\n                            iVar14 = iVar14 + -1;\n                        } while (iVar14 != 0);\n                    }\n                    iVar15 = 0;\ncode_r0x004644ad:\n                    iVar14 = arg_8h_00;\n                    if (iVar15 == 0) {\n                        in_ECX[2] = in_ECX[2] | 0x10;\n                        fcn.004082a1();\n                        goto code_r0x004644c1;\n                    }\n                }\n                iVar15 = fcn.004248f3(L\"XYWH\");\n                if (iVar14 == iVar15) {\n                    pcVar12 = L\"XYWH\";\n                    if (iVar14 != 0) {\n                        do {\n                            uVar2 = *(iVar8 + -0x4c5c0c + pcVar12);\n                            if (uVar2 != *pcVar12) {\n                                iVar15 = (-(uVar2 < *pcVar12) & 0xfffffffe) + 1;\n                                goto code_r0x0046451a;\n                            }\n                            pcVar12 = pcVar12 + 2;\n                            iVar14 = iVar14 + -1;\n                        } while (iVar14 != 0);\n                    }\n                    iVar15 = 0;\ncode_r0x0046451a:\n                    iVar14 = arg_8h_00;\n                    if (iVar15 == 0) {\n                        in_ECX[2] = in_ECX[2] | 0x80;\n                        uVar6 = fcn.00426261(auStack76[0]);\n                        in_ECX[0x29] = uVar6;\n                        goto code_r0x00464270;\n                    }\n                }\n                iVar15 = fcn.004248f3(L\"YWH\");\n                if (iVar14 == iVar15) {\n                    pcVar12 = L\"YWH\";\n                    if (iVar14 != 0) {\n                        do {\n                            uVar2 = *(iVar8 + -0x4c5c10 + pcVar12);\n                            if (uVar2 != *pcVar12) {\n                                iVar15 = (-(uVar2 < *pcVar12) & 0xfffffffe) + 1;\n                                goto code_r0x0046457a;\n                            }\n                            pcVar12 = pcVar12 + 2;\n                            iVar14 = iVar14 + -1;\n                        } while (iVar14 != 0);\n                    }\n                    iVar15 = 0;\ncode_r0x0046457a:\n                    iVar14 = arg_8h_00;\n                    if (iVar15 == 0) {\n                        in_ECX[2] = in_ECX[2] | 0x100;\n                        uVar6 = fcn.00426261(auStack76[0]);\n                        in_ECX[0x2a] = uVar6;\n                        goto code_r0x00464270;\n                    }\n                }\n                iVar15 = fcn.004248f3(L\"WH\");\n                if (iVar14 == iVar15) {\n                    pcVar12 = L\"WH\";\n                    if (iVar14 != 0) {\n                        do {\n                            uVar2 = *(iVar8 + -0x4c5c14 + pcVar12);\n                            if (uVar2 != *pcVar12) {\n                                iVar15 = (-(uVar2 < *pcVar12) & 0xfffffffe) + 1;\n                                goto code_r0x004645da;\n                            }\n                            pcVar12 = pcVar12 + 2;\n                            iVar14 = iVar14 + -1;\n                        } while (iVar14 != 0);\n                    }\n                    iVar15 = 0;\ncode_r0x004645da:\n                    iVar14 = arg_8h_00;\n                    if (iVar15 == 0) {\n                        in_ECX[2] = in_ECX[2] | 0x200;\n                        uVar6 = fcn.00426261(auStack76[0]);\n                        in_ECX[0x2b] = uVar6;\n                        goto code_r0x00464270;\n                    }\n                }\n                cVar4 = fcn.00403536();\n                if (cVar4 != '\\0') {\n                    in_ECX[2] = in_ECX[2] | 0x400;\n                    uVar6 = fcn.00426261(auStack76[0]);\n                    in_ECX[0x2c] = uVar6;\n                    goto code_r0x00464270;\n                }\n                cVar4 = fcn.00403536();\n                if (cVar4 != '\\0') {\n                    in_ECX[2] = in_ECX[2] | 0x20;\n                    uVar6 = fcn.00426261(auStack76[0]);\n                    in_ECX[0x27] = uVar6;\n                    goto code_r0x00464270;\n                }\n                cVar4 = fcn.00403536();\n                if (cVar4 != '\\0') {\n                    cVar4 = fcn.00403536();\n                    if (cVar4 == '\\0') goto code_r0x004647b0;\n                    in_ECX[2] = in_ECX[2] | 0x40;\n                    goto code_r0x00464270;\n                }\n                cVar4 = fcn.00403536();\n                if (cVar4 != '\\0') {\n                    if ((in_ECX[2] & 2) != 0) {\n                        iVar15 = -4;\n                        goto code_r0x00464876;\n                    }\n                    in_ECX[2] = in_ECX[2] | 1;\n                    fcn.0040c1c3(auStack76);\n                    goto code_r0x00464270;\n                }\n                iVar15 = fcn.004248f3(0x49d0d0);\n                if (iVar14 == iVar15) {\n                    puVar11 = 0x49d0d0;\n                    if (iVar14 != 0) {\n                        do {\n                            uVar2 = *(iVar8 + -0x49d0d0 + puVar11);\n                            if (uVar2 != *puVar11) {\n                                iVar15 = (-(uVar2 < *puVar11) & 0xfffffffe) + 1;\n                                goto code_r0x00464700;\n                            }\n                            puVar11 = puVar11 + 1;\n                            iVar14 = iVar14 + -1;\n                        } while (iVar14 != 0);\n                    }\n                    iVar15 = 0;\ncode_r0x00464700:\n                    if (iVar15 == 0) goto code_r0x00464270;\n                }\n            }\ncode_r0x004647b0:\n            iVar15 = -1;\n            goto code_r0x00464876;\n        }\ncode_r0x004647b8:\n        if ((iStack40 != 0) && (in_ECX + 5 != &uStack44)) {\n            fcn.0040c1c3(&uStack44);\n        }\n        pcVar3 = _sym.imp.USER32.dll_CharUpperBuffW;\n        uVar13 = in_ECX[2];\n        if (in_ECX[2] == 0) {\n            uVar13 = 1;\n        }\n        uVar13 = uVar13 | 4;\n        in_ECX[2] = uVar13;\n        if (*(in_ECX + 3) == '\\0') {\n            fcn.0040c7c9();\n            (*pcVar3)(in_ECX[9], in_ECX[10]);\n            uVar13 = in_ECX[2];\n        }\n        if (((uVar13 & 1) != 0) && (*(in_ECX + 3) == '\\0')) {\n            fcn.0040c7c9();\n            (*pcVar3)(in_ECX[5], in_ECX[6]);\n        }\n        if (arg_18h == '\\0') {\n            (*_sym.imp.USER32.dll_EnumWindows)(fcn.0046489c);\n        }\n        else {\n            uVar6 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n            (*_sym.imp.USER32.dll_EnumChildWindows)(uVar6);\n        }\n        fcn.00463cda(in_ECX + 0x2f);\n        fcn.004030e0();\n        iVar15 = in_ECX[0x2d];\n        if (0 < iVar15) {\n            fcn.00463908(***(arg_10h + 4));\n            iVar15 = in_ECX[0x2d];\n        }\n    }\ncode_r0x00464876:\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return iVar15;\n}\n",
        "token_count": 4331
    },
    "0046489c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046489c(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uStack2084;\n    int32_t iStack2080;\n    int32_t iStack2076;\n    int32_t iStack2072;\n    int32_t iStack2068;\n    uchar auStack2064 [4];\n    uchar auStack2060 [2056];\n    \n    iVar1 = arg_ch;\n    uVar5 = *(arg_ch + 8);\n    uVar6 = uVar5 >> 6 & 1;\n    uStack2084 = uVar6;\n    uVar7 = uVar6;\n    if ((uVar5 & 8) != 0) {\n        (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, auStack2064, 0x400);\n        uStack2084 = uVar6 + 1;\n        iVar3 = fcn.004251c2(*(iVar1 + 0x8c), auStack2064);\n        uVar7 = uStack2084;\n        if (iVar3 != 0) {\n            uVar7 = uVar6;\n        }\n        uVar5 = *(iVar1 + 8);\n    }\n    uVar6 = uVar7;\n    if ((uVar5 & 1) != 0) {\n        (*_sym.imp.USER32.dll_GetWindowTextW)(arg_8h, auStack2064, 0x400);\n        if (*(iVar1 + 0xc) == '\\0') {\n            uVar4 = fcn.004248f3(auStack2064);\n            (*_sym.imp.USER32.dll_CharUpperBuffW)(auStack2064, uVar4);\n        }\n        iVar3 = *(iVar1 + 0x10);\n        if (iVar3 == 1) {\n            iVar3 = fcn.0042637e(*(iVar1 + 0x14), auStack2064, *(iVar1 + 0x18));\ncode_r0x00464994:\n            if (iVar3 == 0) {\ncode_r0x00464998:\n                uVar6 = uVar7 + 1;\n            }\n        }\n        else if (iVar3 == 2) {\n            iVar3 = fcn.0042242a(auStack2064, *(iVar1 + 0x14));\n            if (iVar3 != 0) goto code_r0x00464998;\n        }\n        else if (iVar3 == 3) {\n            iVar3 = fcn.004251c2(auStack2064, *(iVar1 + 0x14));\n            goto code_r0x00464994;\n        }\n        if ((*(iVar1 + 8) & 0x18) == 0) {\n            (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, auStack2064, 0x400);\n            iVar3 = fcn.004251c2(L\"ThumbnailClass\", auStack2064);\n            if (iVar3 == 0) {\n                uVar6 = uVar7;\n            }\n        }\n        uVar5 = *(iVar1 + 8);\n        uStack2084 = uStack2084 + 1;\n    }\n    if ((uVar5 & 2) == 0) goto code_r0x00464a5f;\n    (*_sym.imp.USER32.dll_GetWindowTextW)(arg_8h, auStack2064, 0x400);\n    fcn.0040b606(auStack2060);\n    *(iVar1 + 0x38) = 1;\n    *(iVar1 + 0x34) = &iStack2080;\n    *(iVar1 + 0x44) = iStack2076;\n    fcn.0040b1ff();\n    cVar2 = fcn.00469165();\n    if (cVar2 != '\\0') {\n        if ((*(iVar1 + 8) & 0x18) == 0) {\n            (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, auStack2064, 0x400);\n            iVar3 = fcn.004251c2(L\"ThumbnailClass\", auStack2064);\n            if (iVar3 == 0) goto code_r0x00464a53;\n        }\n        uVar6 = uVar6 + 1;\n    }\ncode_r0x00464a53:\n    uVar5 = *(iVar1 + 8);\n    uStack2084 = uStack2084 + 1;\ncode_r0x00464a5f:\n    if ((uVar5 & 0x10) != 0) {\n        (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, auStack2064, 0x400);\n        fcn.0040b606(auStack2060);\n        *(iVar1 + 100) = 1;\n        *(iVar1 + 0x60) = &iStack2080;\n        *(iVar1 + 0x70) = iStack2076;\n        fcn.0040b1ff();\n        cVar2 = fcn.00469165();\n        if (cVar2 != '\\0') {\n            uVar6 = uVar6 + 1;\n        }\n        uVar5 = *(iVar1 + 8);\n        uStack2084 = uStack2084 + 1;\n    }\n    if ((uVar5 & 4) != 0) {\n        if ((uVar6 == uStack2084) && (cVar2 = fcn.00464b92(arg_8h),  cVar2 != '\\0')) {\n            uVar6 = uVar6 + 1;\n        }\n        uVar5 = *(iVar1 + 8);\n        uStack2084 = uStack2084 + 1;\n    }\n    if ((uVar5 & 0x780) != 0) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(arg_8h, &iStack2080);\n        uVar5 = *(iVar1 + 8);\n        if (uVar5 < '\\0') {\n            if (*(iVar1 + 0xa4) == iStack2080) {\n                uVar6 = uVar6 + 1;\n            }\n            uStack2084 = uStack2084 + 1;\n        }\n        if ((uVar5 & 0x100) != 0) {\n            if (*(iVar1 + 0xa8) == iStack2076) {\n                uVar6 = uVar6 + 1;\n            }\n            uStack2084 = uStack2084 + 1;\n        }\n        if ((uVar5 & 0x200) != 0) {\n            if (*(iVar1 + 0xac) == iStack2072 - iStack2080) {\n                uVar6 = uVar6 + 1;\n            }\n            uStack2084 = uStack2084 + 1;\n        }\n        if ((uVar5 & 0x400) != 0) {\n            if (*(iVar1 + 0xb0) == iStack2068 - iStack2076) {\n                uVar6 = uVar6 + 1;\n            }\n            uStack2084 = uStack2084 + 1;\n        }\n    }\n    if ((uVar5 & 0x20) != 0) {\n        if ((uVar6 == uStack2084) && (*(iVar1 + 0xa0) = *(iVar1 + 0xa0) + 1,  *(iVar1 + 0xa0) == *(iVar1 + 0x9c))) {\n            uVar6 = uVar6 + 1;\n        }\n        uStack2084 = uStack2084 + 1;\n    }\n    if (uVar6 == uStack2084) {\n        fcn.004640c5(&arg_8h);\n        *(iVar1 + 0xb4) = *(iVar1 + 0xb4) + 1;\n        if (*(iVar1 + 4) != '\\0') {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1822
    },
    "00464b92": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00464b92(uint hWndParent)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x28) == 0) {\ncode_r0x00464bcc:\n        uVar2 = 1;\n    }\n    else {\n        cVar1 = fcn.0046409e(hWndParent);\n        if (cVar1 == '\\0') {\n            *(in_ECX + 0xb8) = 0;\n            (*_sym.imp.USER32.dll_EnumChildWindows)(hWndParent, fcn.00464bd3);\n            if (*(in_ECX + 0xb8) != '\\0') goto code_r0x00464bcc;\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 185
    },
    "00464bd3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00464bd3(uint arg_8h, int32_t arg_ch)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(arg_8h);\n    if ((iVar2 == 0) && (*(arg_ch + 5) != '\\x01')) {\ncode_r0x00464c96:\n        uVar4 = 1;\n    }\n    else {\n        var_4h = (*_sym.imp.USER32.dll_SendMessageW)(arg_8h, 0xe, 0, 0);\n        if (var_4h == 0) {\n            var_4h = 0x7fff;\n        }\n        iVar1 = (var_4h + 1U) * 2;\n        iVar2 = fcn.0041fd8b(-(iVar1 >> 0x20 != 0) | iVar1);\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageW)(arg_8h, 0xd, var_4h + 1U, iVar2);\n        *(iVar2 + var_4h * 2) = 0;\n        if (iVar3 < 1) {\n            uVar4 = 1;\n        }\n        else {\n            if (*(arg_ch + 0xc) == '\\0') {\n                uVar4 = fcn.004248f3(iVar2);\n                (*_sym.imp.USER32.dll_CharUpperBuffW)(iVar2, uVar4);\n            }\n            iVar3 = fcn.0042242a(iVar2, *(arg_ch + 0x24));\n            if (iVar3 == 0) {\n                fcn.0041fd94(iVar2);\n                goto code_r0x00464c96;\n            }\n            *(arg_ch + 0xb8) = 1;\n            uVar4 = 0;\n        }\n        fcn.0041fd94(iVar2);\n    }\n    return uVar4;\n}\n",
        "token_count": 463
    },
    "00465115": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00465115(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint unaff_ESI;\n    \n    if (*(in_ECX + 0x14) != 0) {\n        fcn.0041fd5b(0x40, unaff_ESI);\n        iVar1 = fcn.00464cf5(in_ECX, arg_8h, arg_ch, arg_10h);\n        if (iVar1 != 0) {\n            if (arg_10h != 0) {\n                return iVar1;\n            }\n            fcn.00465023(extraout_ECX);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 176
    },
    "00465310": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00465310(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    iVar2 = 0;\n    if (2 < arg_10h) {\n        ppiVar3 = *(arg_ch + 4) + 0xc;\n        arg_10h = arg_10h + -2;\n        do {\n            iVar1 = **ppiVar3;\n            if ((((iVar1 != 0) && (*(iVar1 + 4) == *(arg_8h + 4))) && (*(iVar1 + 0x90) == '\\x1d')) &&\n               (*(iVar1 + 0x80) != 0)) {\n                iVar2 = iVar2 + 1;\n            }\n            ppiVar3 = ppiVar3 + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 240
    },
    "0046547c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046547c(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t in_ECX;\n    \n    if ((arg_8h == NULL) || (*(arg_8h + 0x90) != '\\x1d')) {\n        piVar2 = *(in_ECX + 0x10);\n        if (piVar2 != NULL) {\n            if (*(in_ECX + 0x18) == '\\0') {\n                arg_8h = NULL;\n                (***piVar2)(piVar2, 0x49fcc4, &arg_8h);\n                if (arg_8h != NULL) {\n                    (**(*arg_8h + 0x18))(arg_8h);\n                    (**(*arg_8h + 8))(arg_8h);\n                }\n            }\n            else {\n                (**(*piVar2 + 0x1c))(piVar2, 0);\n            }\n        }\n    }\n    else {\n        iVar1 = *(arg_8h + 0x80);\n        if ((iVar1 != 0) &&\n           (((piVar2 = *(in_ECX + 0x10),  piVar2 == NULL || (*(iVar1 + 0x3c) == '\\0')) && (*(in_ECX + 0x18) == '\\0'))))\n        {\n            if (piVar2 != NULL) {\n                (**(*piVar2 + 0x1c))(piVar2, 0);\n            }\n            (**(**(iVar1 + 0xc) + 0x2c))\n                      (*(iVar1 + 0xc), 0xffffffff, 0, *(iVar1 + 0x28), 0xffffffff, *(iVar1 + 8), iVar1 + 0x10);\n        }\n    }\n    return;\n}\n",
        "token_count": 412
    },
    "00465876": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00465876(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_10h;\n    \n    if (arg_ch != 0) {\n        (*_sym.imp.USER32.dll_GetClientRect)(*(arg_8h + 8), &var_10h);\n    }\n    return 0;\n}\n",
        "token_count": 77
    },
    "00465971": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00465971(int32_t *param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint16_t *puVar6;\n    int32_t lpRect;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar3 = (*_sym.imp.USER32.dll_LoadIconW)(*0x4d1358, 99);\n    (*_sym.imp.USER32.dll_SendMessageW)(param_1[0x15], 0x80, 0, uVar3);\n    pcVar2 = _sym.imp.USER32.dll_SetWindowTextW;\n    if (param_1[10] != 0) {\n        (*_sym.imp.USER32.dll_SetWindowTextW)(param_1[0x15], param_1[9]);\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    if (param_1[0x12] != 0) {\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(param_1[0x15], 0x3ea);\n        (*pcVar2)(uVar3, param_1[0x11]);\n    }\n    if (param_1[0xe] != 0) {\n        uVar3 = (*pcVar1)(param_1[0x15], 0x3e9);\n        (*pcVar2)(uVar3, param_1[0xd]);\n    }\n    pcVar1 = _sym.imp.USER32.dll_SendDlgItemMessageW;\n    if (*(param_1 + 8) != 0) {\n        (*_sym.imp.USER32.dll_SendDlgItemMessageW)(param_1[0x15], 0x3e9, 0xcc, *(param_1 + 8), 0);\n    }\n    if (0 < param_1[5]) {\n        (*pcVar1)(param_1[0x15], 0x3e9, 0xc5, param_1[5], 0);\n    }\n    (*_sym.imp.USER32.dll_GetWindowRect)(param_1[0x15], &lpRect);\n    fcn.00465952();\n    var_4h = var_1ch - lpRect;\n    var_ch = lpRect;\n    var_8h = var_18h - var_20h;\n    var_10h = var_20h;\n    if (param_1[2] != -0x80000000) {\n        var_ch = param_1[2];\n    }\n    if (param_1[3] != -0x80000000) {\n        var_10h = param_1[3];\n    }\n    if (0 < *param_1) {\n        var_4h = *param_1;\n    }\n    if (0 < param_1[1]) {\n        var_8h = param_1[1];\n    }\n    var_14h = param_1[10];\n    puVar6 = 0x49d0d0;\n    iVar4 = fcn.004248f3(0x49d0d0);\n    if (var_14h == iVar4) {\n        iVar4 = var_14h;\n        if (var_14h != 0) {\n            iVar4 = param_1[9] + -0x49d0d0;\n            do {\n                if (*(iVar4 + puVar6) != *puVar6) {\n                    iVar5 = (-(*(iVar4 + puVar6) < *puVar6) & 0xfffffffe) + 1;\n                    var_14h = iVar4;\n                    goto code_r0x00465abb;\n                }\n                puVar6 = puVar6 + 1;\n                var_14h = var_14h + -1;\n            } while (var_14h != 0);\n        }\n        var_14h = iVar4;\n        iVar5 = 0;\ncode_r0x00465abb:\n        if (iVar5 == 0) goto code_r0x00465ac7;\n    }\n    (*pcVar2)(param_1[0x15], param_1[9]);\ncode_r0x00465ac7:\n    uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&lpRect);\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar3);\n    fcn.00465952();\n    iVar4 = var_ch;\n    if ((*(param_1 + 4) & 0x40) != 0) {\n        iVar4 = ((var_1ch - var_4h) - lpRect) / 2;\n    }\n    iVar5 = var_10h;\n    if ((*(param_1 + 4) & 0x80) != 0) {\n        iVar5 = ((var_18h - var_8h) - var_20h) / 2;\n    }\n    (*_sym.imp.USER32.dll_MoveWindow)(param_1[0x15], iVar4, iVar5, var_4h, var_8h, 0);\n    (*_sym.imp.USER32.dll_GetClientRect)(param_1[0x15], &lpRect);\n    fcn.00465952();\n    (*_sym.imp.USER32.dll_PostMessageW)(param_1[0x15], 5, 0, ((var_18h - var_20h) * 0x10000 - lpRect) + var_1ch);\n    if (0.0 < *(param_1 + 6)) {\n        uVar3 = fcn.00442050(0);\n        iVar4 = (*_sym.imp.USER32.dll_SetTimer)(param_1[0x15], 0x40a, uVar3);\n        param_1[0x16] = iVar4;\n    }\n    return 1;\n}\n",
        "token_count": 1354
    },
    "00465b9a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00465b9a(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint lpString;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 0x54), 0x3e9);\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_GetWindowTextW)(iVar1, &lpString, 0x100);\n        if (((*(param_1 + 0x10) & 1) == 0) || (lpString != 0)) {\n            if (0.0 < *(param_1 + 0x18)) {\n                (*_sym.imp.USER32.dll_KillTimer)(*(param_1 + 0x54), 0x40a);\n            }\n            fcn.004084e7(&lpString);\n            (*_sym.imp.USER32.dll_EndDialog)(*(param_1 + 0x54), 1);\n        }\n        else {\n            (*_sym.imp.USER32.dll_MessageBeep)(0);\n        }\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "00465c1c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00465c1c(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t lpRect;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t hWnd;\n    \n    iVar4 = 0;\n    if (arg_8h != 1) {\n        hWnd = (*_sym.imp.USER32.dll_GetDlgItem)(*(in_ECX + 0x54), 1);\n        if (hWnd != 0) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n            iVar3 = var_10h;\n            iVar4 = lpRect;\n            if (var_ch < lpRect) {\n                lpRect = var_ch;\n                var_ch = iVar4;\n            }\n            if (var_8h < var_10h) {\n                var_10h = var_8h;\n                var_8h = iVar3;\n            }\n            iVar4 = (arg_10h - (var_8h - var_10h)) + -10;\n            (*_sym.imp.USER32.dll_MoveWindow)\n                      (hWnd, (10 - (var_ch - lpRect)) / 2 + arg_ch / 4, iVar4, var_ch - lpRect, var_8h - var_10h, 0);\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(*(in_ECX + 0x54), 2);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar3, &lpRect);\n            iVar2 = var_10h;\n            iVar1 = lpRect;\n            if (var_ch < lpRect) {\n                lpRect = var_ch;\n                var_ch = iVar1;\n            }\n            if (var_8h < var_10h) {\n                var_10h = var_8h;\n                var_8h = iVar2;\n            }\n            (*_sym.imp.USER32.dll_MoveWindow)\n                      (iVar3, (arg_ch * 3) / 4 - ((var_ch - lpRect) + 10) / 2, iVar4, var_ch - lpRect, var_8h - var_10h\n                       , 0);\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(*(in_ECX + 0x54), 0x3e9);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar3, &lpRect);\n            iVar2 = var_10h;\n            iVar1 = lpRect;\n            if (var_ch < lpRect) {\n                lpRect = var_ch;\n                var_ch = iVar1;\n            }\n            if (var_8h < var_10h) {\n                var_10h = var_8h;\n                var_8h = iVar2;\n            }\n            iVar4 = iVar4 + (-5 - (var_8h - var_10h));\n            (*_sym.imp.USER32.dll_MoveWindow)(iVar3, 10, iVar4, arg_ch + -0x14, var_8h - var_10h, 0);\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(*(in_ECX + 0x54), 0x3ea);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_MoveWindow)(iVar3, 10, 10, arg_ch + -0x14, iVar4 + -5, 0);\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x54), 0, 1);\n    }\n    return;\n}\n",
        "token_count": 864
    },
    "00465df6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00465df6(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = *0x4d1398;\n    if (*0x4d1398 == 0) {\n        return 0;\n    }\n    if (arg_ch == 5) {\n        fcn.00465c1c(arg_10h, arg_14h & 0xffff, arg_14h >> 0x10);\n    }\n    else if (arg_ch == 0x24) {\n        *(arg_14h + 0x18) = 0xbe;\n        *(arg_14h + 0x1c) = 0x72;\n    }\n    else {\n        if (arg_ch == 0x110) {\n            if (*(*0x4d1398 + 0x54) == 0) {\n                *(*0x4d1398 + 0x54) = arg_8h;\n            }\n            uVar2 = fcn.00465971();\n            return uVar2;\n        }\n        if (arg_ch == 0x111) {\n            if ((arg_10h & 0xffff) == 1) {\n                fcn.00465b9a();\n            }\n            else {\n                if ((arg_10h & 0xffff) != 2) {\n                    return 0;\n                }\n                fcn.004084e7(0x49d0d0);\n                (*_sym.imp.USER32.dll_EndDialog)(*(iVar1 + 0x54), 2);\n            }\n        }\n        else {\n            if (arg_ch != 0x113) {\n                return 0;\n            }\n            fcn.00465dca(arg_10h);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 418
    },
    "0046616c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046616c(uint pvargSrc, uint pvarDest)\n\n{\n    int32_t iVar1;\n    uint8_t in_CL;\n    int32_t in_EDX;\n    \n    if (*(in_EDX + 8) != 0) {\n        return 0x8002000e;\n    }\n    if ((in_CL & 2) != 0) {\n        iVar1 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(pvarDest, pvargSrc);\n        if (iVar1 < 0) {\n            return 0x80020009;\n        }\n        return 0;\n    }\n    return 0x80020003;\n}\n",
        "token_count": 150
    },
    "00466218": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00466218(uint pvargSrc)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint unaff_EDI;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        uVar2 = 8;\n        if (7 < uVar1) {\n            uVar2 = uVar1;\n        }\n        *(in_ECX + 0xc) = uVar2;\n        uVar3 = fcn.0041fd8b(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.00420db0(uVar3, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.0041fd94(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar3;\n    }\n    uVar3 = fcn.0041fd5b(0x10, unaff_EDI);\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(uVar3);\n    (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(uVar3, pvargSrc);\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = uVar3;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 387
    },
    "0046638b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046638b(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint unaff_ESI;\n    \n    iVar1 = arg_8h;\n    if (in_ECX != arg_8h) {\n        fcn.00466f23();\n        uVar3 = *(arg_8h + 8);\n        if (*(in_ECX + 0xc) < uVar3) {\n            uVar5 = 8;\n            if (7 < uVar3) {\n                uVar5 = uVar3;\n            }\n            *(in_ECX + 0xc) = uVar5;\n            uVar2 = fcn.0041fd8b(-(uVar5 * 4 >> 0x20 != 0) | uVar5 * 4);\n            if (*(in_ECX + 4) != 0) {\n                fcn.0041fd94(*(in_ECX + 4));\n            }\n            *(in_ECX + 4) = uVar2;\n            uVar3 = *(arg_8h + 8);\n        }\n        arg_8h = 0;\n        *(in_ECX + 8) = uVar3;\n        if (uVar3 != 0) {\n            do {\n                iVar4 = fcn.0041fd5b(0x10, unaff_ESI);\n                unaff_ESI = *(*(iVar1 + 4) + arg_8h * 4);\n                *(iVar4 + 8) = 0;\n                fcn.004119e0(unaff_ESI);\n                *(*(in_ECX + 4) + arg_8h * 4) = iVar4;\n                arg_8h = arg_8h + 1;\n            } while (arg_8h < *(in_ECX + 8));\n        }\n    }\n    return;\n}\n",
        "token_count": 447
    },
    "00466502": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00466502(int32_t *arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint *puVar11;\n    int32_t in_stack_ffffff60;\n    uint arg_ch_00;\n    uint arg_14h;\n    int32_t iStack148;\n    int32_t iStack144;\n    int32_t iStack140;\n    int32_t iStack136;\n    uint uStack132;\n    int32_t *piStack128;\n    int32_t iStack124;\n    uint uStack120;\n    int32_t iStack116;\n    int32_t *piStack112;\n    int32_t **ppiStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    int32_t iStack92;\n    int32_t iStack88;\n    int32_t iStack84;\n    uint uStack80;\n    uint32_t uStack76;\n    int32_t iStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    uint uStack60;\n    int32_t aiStack52 [2];\n    int32_t iStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    int32_t *piStack28;\n    uchar auStack20 [16];\n    \n    uStack40 = *(in_ECX + 0x28);\n    uStack36 = *(in_ECX + 0x2c);\n    uStack32 = *(in_ECX + 0x30);\n    piStack28 = *(in_ECX + 0x34);\n    *piStack28 = *piStack28 + 1;\n    puVar11 = &arg_ch;\n    iStack124 = in_ECX;\n    fcn.00407cf8(puVar11);\n    iVar3 = arg_8h[2];\n    aiStack52[0] = iVar3;\n    fcn.0040b606(iStack44);\n    iVar2 = fcn.004025c1(&iStack148);\n    fcn.0040b1ff();\n    uVar8 = 0;\n    if (iVar2 == 0) goto code_r0x00466bbd;\n    if (*(iVar2 + 0x20) != '\\0') {\n        piStack112 = NULL;\n        *(*(in_ECX + 0x3c) + 0xf8) = *(iVar2 + 0x10);\n        iVar3 = fcn.004041dc(*(iVar2 + 0x10));\n        iVar4 = iStack64 << 4;\n        arg_ch_00 = 0x49d100;\n        iStack148 = 0;\n        iStack144 = 0;\n        iVar9 = 4;\n        uStack96 = 0;\n        iStack88 = 0;\n        iStack84 = 1;\n        iStack136 = 0x49d104;\n        uStack132 = 0;\n        piStack128 = NULL;\n        uStack80 = 0x49d0fc;\n        in_stack_ffffff60 = 0;\n        uStack76 = 0;\n        iStack72 = 0;\n        iStack68 = 0;\n        uStack60 = 0x47;\n        uStack104 = 0x48;\n        uStack100 = 0x40;\n        iVar2 = extraout_ECX;\n        iVar10 = iStack64;\n        for (iStack124 = 0; (iStack124 < *(iVar2 + 0x14) || (iStack124 < iVar10)); iStack124 = iStack124 + 1) {\n            puVar11 = puVar11 & 0xffffff;\n            if (iStack124 < *(iVar2 + 0x14)) {\n                iVar2 = *(iVar3 + 4);\n                if (*(*(iVar2 + iVar9 * 4) + 8) == 0) {\n                    ppiStack108 = iVar2 + 4 + iVar9 * 4;\n                    do {\n                        piStack112 = *ppiStack108;\n                        if ((*(piStack112 + 2) != 0x33) && (piVar7 = *(iVar2 + iVar9 * 4),  *piVar7 == *piStack112)) {\n                            iVar1 = *(piVar7 + 10);\ncode_r0x004669f0:\n                            fcn.004734ba(0x91, iVar1);\n                            goto code_r0x00466a03;\n                        }\n                        piVar7 = *(iVar2 + iVar9 * 4);\n                        if (*piVar7 == 0x24) {\n                            puVar11 = CONCAT13(1, puVar11);\n                        }\n                        else if (*piVar7 != 0x1e) {\n                            iVar1 = *(piVar7 + 10);\n                            goto code_r0x004669f0;\n                        }\n                        iVar9 = iVar9 + 1;\n                        ppiStack108 = ppiStack108 + 1;\n                    } while (*(piStack112 + 2) == 0);\n                }\n                iVar9 = iVar9 + 1;\n                if (*(*(iVar2 + iVar9 * 4) + 8) == 0x41) {\n                    iVar5 = 0;\n                    do {\n                        while( true ) {\n                            while( true ) {\n                                iVar9 = iVar9 + 1;\n                                iVar1 = *(*(iVar2 + iVar9 * 4) + 8);\n                                if (iVar1 != uStack60) break;\n                                iVar5 = iVar5 + 1;\n                            }\n                            if (iVar1 != uStack104) break;\n                            iVar5 = iVar5 + -1;\n                            if (iVar5 < 0) goto code_r0x00466714;\n                        }\n                    } while ((iVar1 != uStack100) || (iVar5 != 0));\n                }\ncode_r0x00466714:\n                if (iVar10 <= iStack116) goto code_r0x00466734;\n                fcn.00470bfd(*arg_8h + iVar4 + -0x10);\n                iVar2 = iStack44;\n            }\n            else {\ncode_r0x00466734:\n                fcn.0040e8a0();\n                uStack96 = 0;\n                iStack84 = 1;\n                iVar2 = iStack44;\n            }\n            fcn.00467076(&stack0xffffff4f);\n            fcn.00466fef(&uStack100);\n            iVar9 = iVar9 + 1;\n            iVar10 = iStack72;\n            iStack44 = iVar2;\n        }\n        fcn.0046efd1(*(iVar2 + 0x10));\n        iVar10 = 4;\n        iVar2 = 0;\n        arg_14h = arg_ch_00;\n        if (0 < puVar11[5]) {\ncode_r0x004667ad:\n            iStack140 = 0;\n            iVar3 = *(iStack144 + 4);\ncode_r0x004667d1:\n            if (*(*(iVar3 + iVar10 * 4) + 8) == 0) {\n                piVar7 = *(iVar3 + iVar10 * 4);\n                if (*piVar7 != 0x24) goto code_r0x004667c2;\n                goto code_r0x004667d0;\n            }\n            piVar7 = iVar3 + iVar10 * 4;\n            iStack88 = 1;\n            iVar3 = 0;\n            do {\n                piVar7 = piVar7 + 1;\n                iVar1 = *(*piVar7 + 8);\n                if (iVar1 == uStack36) {\n                    iVar3 = iVar3 + 1;\n                }\n                else if (iVar1 == uStack80) {\n                    iVar3 = iVar3 + -1;\n                    if (iVar3 < 0) goto code_r0x00466804;\n                }\n                else if ((iVar1 == uStack76) && (iVar3 == 0)) goto code_r0x00466804;\n                iStack88 = iStack88 + 1;\n            } while( true );\n        }\n        goto code_r0x004668d8;\n    }\n    if (**(in_ECX + 0x38) == 0x40) {\n        fcn.00466f80();\n    }\n    piStack128 = in_ECX + 0x40;\n    iStack148 = 0;\n    iStack144 = 0;\n    iStack140 = 0;\n    uStack132 = 0;\n    iStack124 = 0;\n    uStack120 = 1;\n    if (*(in_ECX + 0x4c) == 8) {\n        iVar2 = *piStack128;\n    }\n    else {\n        iVar2 = 0;\n    }\n    (**(**(iVar2 + 8) + 4))(*(iVar2 + 8));\n    fcn.0040e8a0();\n    iStack116 = 6;\n    fcn.00466fef(&piStack128);\n    fcn.0040890f(aiStack52);\n    fcn.00466fef(&uStack40);\n    fcn.0040e8a0();\n    iVar3 = iVar3 + -1;\n    if (-1 < iVar3) {\n        iVar2 = iVar3 * 0x10;\n        do {\n            fcn.00470bfd(*arg_8h + iVar2);\n            fcn.00466fef(&iStack136);\n            iVar2 = iVar2 + -0x10;\n            iVar3 = iVar3 + -1;\n        } while (-1 < iVar3);\n    }\n    iVar2 = iStack68;\n    iVar3 = puVar11[5];\n    if ((iStack68 < iVar3) && (iVar10 = 0,  iVar3 != iStack68 && -1 < iVar3 - iStack68)) {\n        do {\n            uStack80 = 0;\n            iStack72 = 0;\n            iStack68 = 1;\n            fcn.00466fef(&uStack80);\n            fcn.0040e8a0();\n            iVar10 = iVar10 + 1;\n        } while (iVar10 < puVar11[5] - iVar2);\n    }\n    fcn.00466fa3(&stack0xffffff60);\n    goto code_r0x00466b9d;\ncode_r0x004667c2:\n    if (*piVar7 == 0x1e) {\n        iStack140 = 0x100;\ncode_r0x004667d0:\n        iVar10 = iVar10 + 1;\n    }\n    goto code_r0x004667d1;\ncode_r0x00466804:\n    iStack88 = iVar10 + iStack88;\n    if (iStack92 < iStack148) {\n        iStack84 = iVar10 + 2;\n        iVar3 = fcn.00410540(iStack144, &iStack84, &iStack72, iStack88);\n        if (iVar3 < 0) goto code_r0x00466a03;\n        fcn.00406aff(**(*(in_stack_ffffff60 + 4) + iVar10 * 4));\n    }\n    else {\n        fcn.00406aff(**(*(iStack144 + 4) + iVar10 * 4));\n    }\n    iVar3 = **(piStack128[1] + iVar10 * 4);\n    fcn.0040c117(iVar3, arg_ch_00, in_stack_ffffff60, arg_14h);\n    iVar10 = iStack88 + 1;\n    iStack148 = iStack148 + 1;\n    iStack136 = iStack136 + 4;\n    if (*0x14 < iStack148) goto code_r0x004668d0;\n    goto code_r0x004667ad;\ncode_r0x00466a03:\n    iStack88 = 0x49d0fc;\n    fcn.00408320();\n    fcn.0041fd94(iStack84);\n    iStack144 = 0x49d104;\n    fcn.00466f52();\n    fcn.0041fd94(iStack140);\n    fcn.0040e8a0();\n    fcn.00466f23();\n    fcn.0041fd94(in_stack_ffffff60);\n    uVar8 = 0x80004005;\n    goto code_r0x00466bbd;\ncode_r0x004668d0:\n    iStack136 = aiStack52[0];\n    iVar2 = aiStack52[0];\ncode_r0x004668d8:\n    fcn.0040e8a0();\n    iVar10 = 0x4c5ffc;\n    uStack60 = 6;\n    iStack72 = iStack116 + 0x40;\n    fcn.0040b606(0x4c5ffc);\n    fcn.0040c117(auStack20, ~-(iStack64 != 6) & uStack76, 0, 1);\n    fcn.0040b1ff();\n    fcn.00473948(*(iVar10 + 0x10) + 1, 0, 0);\n    uVar6 = arg_8h[2];\n    if (uVar6 != 0) {\n        piStack112 = iStack140 - iVar2;\n        do {\n            if (**(piStack112 + iVar2) != '\\0') {\n                puVar11 = ((uVar6 - uVar8) + -1) * 0x10 + *arg_8h;\n                fcn.00466dc7(*puVar11, puVar11[1], puVar11[2]);\n                uVar6 = arg_8h[2];\n                iVar2 = iVar3;\n            }\n            uVar8 = uVar8 + 1;\n            iVar2 = iVar2 + 4;\n            iVar3 = iVar2;\n        } while (uVar8 < uVar6);\n    }\n    fcn.0040c000();\n    iStack88 = 0x49d0fc;\n    fcn.00408320();\n    fcn.0041fd94(iStack84);\n    iStack144 = 0x49d104;\n    fcn.00466f52();\n    fcn.0041fd94(iStack140);\ncode_r0x00466b9d:\n    uVar8 = 0;\n    fcn.0040e8a0();\n    fcn.00466f23();\n    fcn.0041fd94(in_stack_ffffff60);\ncode_r0x00466bbd:\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return uVar8;\n}\n",
        "token_count": 3314
    },
    "00466cae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466cae(int32_t arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    if (arg_ch == -999) {\n        fcn.00466da5();\n    }\n    else {\n        piVar1 = *(arg_8h + 0xc);\n        if (piVar1 != NULL) {\n            arg_8h = 0;\n            iVar2 = (**(*piVar1 + 0x1c))(piVar1, arg_ch, &arg_8h, 1, &var_4h);\n            if ((-1 < iVar2) && (arg_8h != 0)) {\n                iVar2 = arg_8h;\n                fcn.0040b606(arg_8h);\n                uVar3 = fcn.00466502(arg_1ch, iVar2);\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)(arg_8h);\n                return uVar3;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 274
    },
    "00466fef": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00466fef(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint unaff_EDI;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        uVar2 = 8;\n        if (7 < uVar1) {\n            uVar2 = uVar1;\n        }\n        *(in_ECX + 0xc) = uVar2;\n        uVar3 = fcn.0041fd8b(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.00420db0(uVar3, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.0041fd94(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar3;\n    }\n    iVar4 = fcn.0041fd5b(0x10, unaff_EDI);\n    *(iVar4 + 8) = 0;\n    fcn.004119e0(arg_8h);\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = iVar4;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 377
    },
    "00467076": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00467076(uchar *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uchar *puVar4;\n    int32_t in_ECX;\n    uint unaff_ESI;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        uVar2 = 8;\n        if (7 < uVar1) {\n            uVar2 = uVar1;\n        }\n        *(in_ECX + 0xc) = uVar2;\n        uVar3 = fcn.0041fd8b(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.00420db0(uVar3, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.0041fd94(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar3;\n    }\n    puVar4 = fcn.0041fd5b(1, unaff_ESI);\n    *puVar4 = *arg_8h;\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar4;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 366
    },
    "004670f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004670f4(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t *in_ECX;\n    int32_t *var_8h;\n    int32_t ppv;\n    \n    *in_ECX = 0x4c6048;\n    in_ECX[1] = 0;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 0;\n    in_ECX[6] = *0x49fbd4;\n    in_ECX[7] = *0x49fbd8;\n    in_ECX[8] = *0x49fbdc;\n    in_ECX[9] = *0x49fbe0;\n    in_ECX[10] = *0x49fbd4;\n    in_ECX[0xb] = *0x49fbd8;\n    in_ECX[0xc] = *0x49fbdc;\n    in_ECX[0xd] = *0x49fbe0;\n    in_ECX[0xe] = 1;\n    var_8h = in_ECX;\n    iVar1 = fcn.004672b8(arg_8h, arg_ch);\n    if (-1 < iVar1) {\n        ppv = 0;\n        iVar1 = (*_sym.imp.ole32.dll_CoCreateInstance)(in_ECX + 6, 0, 5, in_ECX + 10, &ppv);\n        if (iVar1 < 0) {\n            if (arg_10h == 0) {\n                in_ECX[1] = -0x7ffbfeac;\n            }\n            else {\n                uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n                in_ECX[4] = arg_10h;\n                pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(arg_10h, \"DllGetClassObject\");\n                if (pcVar3 == NULL) {\n                    in_ECX[1] = -0x7ffd7fd1;\n                }\n                else {\n                    iVar1 = fcn.004673ba();\n                    if (-1 < iVar1) {\n                        var_8h = NULL;\n                        iVar1 = (*pcVar3)(in_ECX + 6, 0x49fba4, &var_8h);\n                        if ((iVar1 < 0) || (var_8h == NULL)) {\n                            in_ECX[1] = -0x7ffbfeef;\n                        }\n                        else {\n                            iVar1 = (**(*var_8h + 0xc))(var_8h, 0, in_ECX + 10, &ppv);\n                            if ((-1 < iVar1) && (ppv != 0)) {\n                                fcn.00467359(ppv);\n                            }\n                            if (in_ECX[2] == 0) {\n                                in_ECX[1] = -0x7fffbffe;\n                            }\n                            (**(*var_8h + 8))(var_8h);\n                        }\n                    }\n                }\n                (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar2);\n            }\n        }\n        else {\n            fcn.00467359(ppv);\n            if (in_ECX[2] == 0) {\n                in_ECX[1] = -0x7fffbffe;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 792
    },
    "004672b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004672b8(uint arg_8h, int32_t lpsz)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.0045fef7(0);\n    if (iVar1 < 0) {\n        uVar2 = 0x800401f3;\n        *(in_ECX + 4) = 0x800401f3;\n    }\n    else {\n        if (lpsz == 0) {\n            *(in_ECX + 0x28) = *0x49fbb4;\n            *(in_ECX + 0x2c) = *0x49fbb8;\n            *(in_ECX + 0x30) = *0x49fbbc;\n            *(in_ECX + 0x34) = *0x49fbc0;\n        }\n        else {\n            iVar1 = (*_sym.imp.ole32.dll_IIDFromString)(lpsz, in_ECX + 0x28);\n            if (iVar1 < 0) {\n                *(in_ECX + 4) = 0x800401f4;\n            }\n        }\n        uVar2 = *(in_ECX + 4);\n    }\n    return uVar2;\n}\n",
        "token_count": 283
    },
    "004674a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004674a0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t pdecIn;\n    \n    if (*(param_1 + 0x14) != 0) {\n        pdecIn = param_1;\n        iVar1 = (**(**(param_1 + 0xc) + 0x1c))(*(param_1 + 0xc), &pdecIn);\n        if (-1 < iVar1) {\n            if (*(param_1 + 0x14) == 1) {\n                (*_sym.imp.OLEAUT32.dll_OaEnablePerUserTLibRegistration)\n                          (pdecIn, *(pdecIn + 0x18), *(pdecIn + 0x1a), *(pdecIn + 0x10), *(pdecIn + 0x14));\n            }\n            else if (*(param_1 + 0x14) == 2) {\n                (*_sym.imp.OLEAUT32.dll_VarDecFix)\n                          (pdecIn, *(pdecIn + 0x18), *(pdecIn + 0x1a), *(pdecIn + 0x10), *(pdecIn + 0x14));\n            }\n            (**(**(param_1 + 0xc) + 0x30))(*(param_1 + 0xc), pdecIn);\n        }\n    }\n    return;\n}\n",
        "token_count": 311
    },
    "004675b6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004675b6(uint *param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint arg_8h;\n    uint uVar3;\n    \n    *param_1 = 0x4c63b0;\n    if (param_1[1] != 0) {\n        uVar2 = 0;\n        if (*(param_1[4] + 4) != 0) {\n            do {\n                fcn.0041fd94(*(param_1[2] + uVar2 * 4));\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < *(param_1[4] + 4));\n        }\n        fcn.0041fd94(param_1[2]);\n        fcn.0041fd94(param_1[3]);\n        uVar3 = 8;\n        arg_8h = param_1[4];\n        fcn.0041fd4d(arg_8h);\n        fcn.0041fd94(param_1[1], arg_8h, uVar3);\n    }\n    piVar1 = param_1[7];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    if (param_1[9] != 0) {\n        (**(*param_1[5] + 8))(param_1[5]);\n    }\n    return;\n}\n",
        "token_count": 326
    },
    "004679cb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nuint * __cdecl\nfcn.004679cb(int32_t arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint32_t arg_18h, int32_t *arg_1ch, \n            ushort *arg_20h)\n\n{\n    uint *******pppppppuVar1;\n    uint16_t uVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint uVar7;\n    uint *******pppppppuVar8;\n    ushort uVar9;\n    ushort uVar10;\n    int32_t unaff_EBX;\n    uint *puVar11;\n    uint *******pppppppuVar12;\n    uint32_t uVar13;\n    uint *puVar14;\n    uint *******unaff_ESI;\n    int16_t *piVar15;\n    uint *******pppppppuVar16;\n    uint *puVar17;\n    ushort *pvargDest;\n    uint *******unaff_EDI;\n    uint32_t uVar18;\n    uint *******pvarSrc;\n    uint *******pppppppuVar19;\n    uint *******pppppppuVar20;\n    uint *******pppppppuVar21;\n    uint32_t uVar22;\n    uint *puVar23;\n    uchar *puVar24;\n    int32_t iVar25;\n    uint *puStack84;\n    uint *******pppppppuStack76;\n    uint32_t uStack72;\n    uint *******pppppppuStack68;\n    int32_t iStack64;\n    uint *******pppppppuStack60;\n    uint *puStack56;\n    uint *puStack52;\n    uint uStack48;\n    uint *puStack44;\n    uchar auStack40 [4];\n    int32_t iStack36;\n    uint uStack32;\n    uchar auStack28 [4];\n    uchar auStack24 [4];\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    if (arg_ch == 0) {\n        if ((arg_18h & 2) == 0) {\n            return 0x80020003;\n        }\n        if (arg_1ch[2] == 0) {\n            if (arg_20h == NULL) {\n                return 0x80020010;\n            }\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(arg_20h);\n            *arg_20h = 0x13;\n            *(arg_20h + 4) = *(arg_8h + 0x14);\n            return NULL;\n        }\n    }\n    else {\n        if (*(arg_8h + 0x18) == 0) {\n            return 0x80004001;\n        }\n        puVar11 = arg_ch * 0x1c;\n        pppppppuVar8 = arg_1ch[2];\n        if (pppppppuVar8 == *(puVar11 + *(arg_8h + 0xc) + 0x30)) {\n            pppppppuVar12 = NULL;\n            pppppppuVar16 = pppppppuVar8;\n            pppppppuVar19 = pppppppuVar8;\n            pppppppuStack76 = pppppppuVar8;\n            if (pppppppuVar8 != NULL) {\n                do {\n                    pppppppuVar16 = pppppppuVar19;\n                    pppppppuVar19 = pppppppuVar16;\n                    if (*(*(puVar11 + *(arg_8h + 0xc) + 0x20) + 4 + pppppppuVar12 * 8) == 0x24) {\n                        piVar15 = ((arg_1ch[2] - pppppppuVar12) + -1) * 0x10 + *arg_1ch;\n                        if (*piVar15 != 0x24) {\n                            return 0x80020008;\n                        }\n                        (*_sym.imp.OLEAUT32.dll_VariantClear)(auStack24);\n                        piVar3 = *(piVar15 + 6);\n                        uStack20 = 0;\n                        uStack16 = 0;\n                        pppppppuVar19 = pppppppuVar16;\n                        (**(*piVar3 + 0x28))(piVar3, 0, 0, auStack28);\n                        if (iStack36 < 1) {\n                            (*_sym.imp.OLEAUT32.dll_VariantCopy)(&puStack44);\n                            return 0x80020008;\n                        }\n                        pppppppuVar16 = unaff_ESI + iStack36 + -1;\n                        unaff_ESI = pppppppuVar16;\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&puStack44);\n                        uStack16 = 0;\n                        uStack12 = 0;\n                        pppppppuVar8 = pppppppuStack76;\n                    }\n                    pppppppuVar12 = pppppppuVar12 + 1;\n                } while (pppppppuVar12 < pppppppuVar8);\n            }\n            uStack72 = fcn.0041fd8b(-(ZEXT48(pppppppuVar16) * 2 >> 0x20 != 0) | ZEXT48(pppppppuVar16) * 2);\n            pppppppuStack68 = fcn.0041fd8b(-(ZEXT48(pppppppuVar16) * 4 >> 0x20 != 0) | ZEXT48(pppppppuVar16) * 4);\n            uVar13 = -(ZEXT48(pppppppuVar16) * 0x10 >> 0x20 != 0) | ZEXT48(pppppppuVar16) * 0x10;\n            puVar4 = fcn.0041fd8b(-(0xfffffffb < uVar13) | uVar13 + 4);\n            if (puVar4 == NULL) {\n                puVar4 = NULL;\n            }\n            else {\n                *puVar4 = pppppppuVar16;\n                puVar4 = puVar4 + 1;\n                puStack52 = puVar4;\n                pppppppuVar8 = pppppppuVar19;\n                while (pppppppuVar8 != NULL) {\n                    fcn.0045f90a();\n                    pppppppuVar16 = pppppppuVar16 - 1;\n                    pppppppuVar8 = pppppppuVar16;\n                }\n            }\n            pppppppuVar8 = pppppppuVar19;\n            iVar5 = fcn.0041fd8b(-(ZEXT48(pppppppuVar19) * 4 >> 0x20 != 0) | ZEXT48(pppppppuVar19) * 4);\n            iStack64 = fcn.0041fd8b(-(ZEXT48(pppppppuVar19) * 4 >> 0x20 != 0) | ZEXT48(pppppppuVar19) * 4);\n            pppppppuStack60 = NULL;\n            iVar25 = iVar5;\n            if (pppppppuStack76 != NULL) {\n                puVar14 = 0xffffffff;\n                puVar17 = puVar4;\n                pppppppuVar19 = pppppppuVar8;\n                do {\n                    puVar14 = puVar14 + 1;\n                    *(iStack64 + pppppppuStack60 * 4) = puVar14;\n                    *(uStack72 + puVar14 * 2) = 0xffff;\n                    pppppppuStack68[puVar14] = NULL;\n                    *(iVar5 + puVar14 * 4) = 0;\n                    unaff_EDI = ((arg_1ch[2] - pppppppuStack60) + -1) * 0x10 + *arg_1ch;\n                    uVar2 = *(*(puVar11 + *(arg_8h + 0xc) + 0x20) + 4 + pppppppuStack60 * 8);\n                    puVar6 = uVar2;\n                    puStack84 = puVar6 & 0xfff;\n                    puVar4 = puVar17;\n                    puStack52 = puVar6;\n                    puStack44 = puVar6;\n                    if ((uVar2 == 0x24) || (uStack48 = 0x4024,  uVar2 == 0x4024)) {\n                        puStack56 = puVar14;\n                        fcn.00468b06(unaff_EDI, &puStack52, puVar17, iVar5, uStack72, pppppppuStack68, &puStack56);\n                        uVar9 = SUB42(puVar6, 0);\n                        puVar6 = puVar11;\n                        puVar14 = puStack84;\n                        iVar5 = iVar25;\n                    }\n                    else {\n                        puStack56 = puVar17 + puVar14 * 4;\n                        puVar23 = puStack84;\n                        iVar5 = fcn.004689cc(unaff_EDI, puStack56, puStack84);\n                        if (iVar5 == 0) {\n                            unaff_EDI = pppppppuStack68;\n                            if (puVar6 != 0x48) {\n                                (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n                                puVar17[puVar14 * 4 + 2] = 0;\n                                puVar17[puVar14 * 4 + 3] = 0;\n                                uVar9 = SUB42(puVar6, 0);\n                                *(puVar17 + puVar14 * 4) = uVar9;\n                                iVar5 = iVar25;\n                                goto code_r0x00467cc4;\n                            }\n                            unaff_ESI = (puStack56 & 0x4000) + 0x13;\n                            uVar7 = fcn.00468ca9(pppppppuStack68);\n                            puVar23[puVar14] = uVar7;\n                        }\n                        uVar9 = SUB42(puVar6, 0);\n                        iVar5 = iVar25;\n                    }\ncode_r0x00467cc4:\n                    if (puVar6 == 0x1f) {\n                        puVar23 = puVar17 + puVar14 * 4;\n                        puVar6 = 0x8;\n                        uVar7 = fcn.00468979(puVar23);\n                        puVar17 = puVar4;\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(puVar23);\n                        puVar23[2] = uVar7;\n                        *puVar23 = 0x1f;\n                        *(iVar5 + puVar14 * 4) = uVar7;\n                        iVar25 = iVar5;\n                        puVar4 = puVar17;\ncode_r0x00467d03:\n                        uVar9 = SUB42(puVar6, 0);\n                    }\n                    else {\n                        iVar25 = iVar5;\n                        if (puVar6 == 0x1e) {\n                            puVar6 = 0x8;\n                            uVar7 = fcn.00467823(puVar17 + puVar14 * 4);\n                            iVar5 = unaff_EBX;\n                            *(iVar5 + puVar14 * 4) = uVar7;\n                            unaff_EBX = iVar5;\n                            goto code_r0x00467d03;\n                        }\n                    }\n                    uVar10 = SUB42(puVar6, 0);\n                    if ((puVar6 & 0x4000) != 0) {\n                        uVar10 = uVar9;\n                        if (puStack84 == 0x8) {\n                            puVar6 = fcn.0041fd8b(4);\n                            *puVar6 = puVar17[puVar14 * 4 + 2];\ncode_r0x00467e1d:\n                            *(iVar25 + puVar14 * 4) = puVar6;\n                            iVar5 = iVar25;\n                        }\n                        else {\n                            if (puStack84 == 0x9) {\n                                puVar6 = fcn.00468894(puVar17 + puVar14 * 4);\n                                goto code_r0x00467e1d;\n                            }\n                            if (puStack84 == 0xc) {\n                                puVar6 = fcn.00468944(puVar17 + puVar14 * 4);\n                                goto code_r0x00467e1d;\n                            }\n                            if (puStack84 == 0x1e) {\n                                puVar6 = fcn.004688c9(puVar17 + puVar14 * 4);\n                                goto code_r0x00467e1d;\n                            }\n                            if (puStack84 == 0x1f) {\n                                puVar6 = fcn.00468979(puVar17 + puVar14 * 4);\n                                goto code_r0x00467e1d;\n                            }\n                            if (puStack84 == 0x48) {\n                                puVar6 = fcn.004687f8(puVar17 + puVar14 * 4);\n                                goto code_r0x00467e1d;\n                            }\n                            piVar3 = iVar5 + puVar14 * 4;\n                            iVar5 = iVar25;\n                            if (*piVar3 == 0) {\n                                puVar6 = fcn.00468910(puVar17 + puVar14 * 4);\n                                goto code_r0x00467e1d;\n                            }\n                        }\n                        puVar17 = puVar17 + puVar14 * 4;\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(puVar17);\n                        *puVar17 = uVar10;\n                        puVar17[2] = *(iVar5 + puVar14 * 4);\n                        iVar25 = iVar5;\n                    }\n                    if (*(uStack72 + puVar14 * 2) == -1) {\n                        *(uStack72 + puVar14 * 2) = uVar10;\n                    }\n                    if (pppppppuStack68[puVar14] == NULL) {\n                        pppppppuStack68[puVar14] = puVar4 + puVar14 * 4;\n                    }\n                    pppppppuStack60 = pppppppuStack60 + 1;\n                    puVar17 = puVar4;\n                    pppppppuVar8 = pppppppuVar19;\n                } while (pppppppuStack60 < pppppppuStack76);\n            }\n            uVar18 = 0;\n            puVar24 = auStack40;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)();\n            iStack36 = 0;\n            uStack32 = 0;\n            uVar2 = *(puStack84 + *(arg_8h + 0xc) + 0x36);\n            uVar13 = uVar2;\n            if (((((uVar2 & 0x4000) != 0) || (uVar2 == 0x1e)) || (uVar2 == 0x1f)) || (uVar2 == 0x48)) {\n                uVar13 = 0x15;\n            }\n            pppppppuVar16 = arg_ch * 4 - 4;\n            pppppppuVar12 = pppppppuStack76;\n            uVar22 = uStack72;\n            (*_sym.imp.OLEAUT32.dll_VariantChangeTypeEx)\n                      (*(arg_8h + 0x14), pppppppuVar16, *(puStack84 + *(arg_8h + 0xc) + 0x2c), uVar13, pppppppuVar19, \n                       pppppppuStack76, uStack72, &puStack44);\n            if (arg_20h != NULL) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(arg_20h);\n                uVar2 = *(puStack84 + *(arg_8h + 0xc) + 0x36);\n                pppppppuVar16 = uVar2;\n                if (((uVar2 & 0x4000) == 0) || (pppppppuStack60 == NULL)) {\n                    if ((uVar2 < 0x1e) || ((0x1f < uVar2 && (uVar2 != 0x48)))) {\n                        pppppppuVar16 = &pppppppuStack68;\n                        iVar5 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(arg_20h);\n                        if (iVar5 < 0) {\n                            *(arg_20h + 4) = 0;\n                            *(arg_20h + 6) = 0;\n                        }\n                    }\n                    else {\n                        *arg_20h = 8;\n                        uVar7 = fcn.0046767c(&pppppppuStack68, pppppppuVar16);\n                        *(arg_20h + 4) = uVar7;\n                    }\n                }\n                else {\n                    pppppppuStack68 = pppppppuStack68 & 0xffff0000 | uVar2;\n                    pppppppuVar16 = pppppppuVar16 & 0xfff;\n                    fcn.00468a4d(&pppppppuStack68, &pppppppuStack68, pppppppuVar16);\n                }\n            }\n            pppppppuVar19 = NULL;\n            pppppppuVar21 = pppppppuVar12;\n            if (unaff_EDI != NULL) {\n                do {\n                    uVar2 = *(*(puVar24 + *(arg_8h + 0xc) + 0x20) + 4 + pppppppuVar19 * 8);\n                    pvargDest = ((arg_1ch[2] - pppppppuVar19) + -1) * 0x10 + *arg_1ch;\n                    if (((uVar2 & 0x4000) == 0) ||\n                       (pvarSrc = pppppppuVar12 + *(iVar25 + pppppppuVar19 * 4) * 4,  pvarSrc[2] == NULL)) {\n                        if ((uVar2 == 0x1f) || (uVar2 == 0x1e)) {\n                            pppppppuVar16 = pppppppuVar8;\n                            (*_sym.imp.OLEAUT32.dll_VariantCopy)(pvargDest);\n                            *pvargDest = 8;\n                            pppppppuVar8 = pppppppuVar16;\n                            uVar7 = fcn.0046767c(pppppppuVar12 + puVar4[uVar22] * 4, pppppppuVar16);\n                            *(pvargDest + 4) = uVar7;\n                        }\n                    }\n                    else {\n                        pppppppuVar20 = pppppppuVar19;\n                        fcn.00468a4d(pvarSrc, pvargDest, uVar2 & 0xfff);\n                        pppppppuVar19 = pppppppuVar16;\n                        pppppppuVar16 = pppppppuVar19;\n                        if ((unaff_ESI == 0xc) &&\n                           (pppppppuVar1 = unaff_EDI + pppppppuVar19,  pvarSrc[*pppppppuVar1] != NULL)) {\n                            pppppppuVar19 = pppppppuVar20;\n                            (*_sym.imp.OLEAUT32.dll_VariantCopy)(pvarSrc[*pppppppuVar1]);\n                        }\n                    }\n                    pppppppuVar19 = pppppppuVar19 + 1;\n                } while (pppppppuVar19 < unaff_EDI);\n            }\n            if (uVar22 != 0) {\n                do {\n                    pppppppuVar12 = pppppppuVar21;\n                    fcn.0041fd94(*(uVar13 + uVar18 * 4));\n                    uVar18 = uVar18 + 1;\n                    pppppppuVar21 = pppppppuVar12;\n                } while (uVar18 < uVar22);\n            }\n            fcn.0041fd94(unaff_ESI);\n            fcn.0041fd94(unaff_EBX);\n            if (pppppppuVar12 != NULL) {\n                fcn.00467629(unaff_EBX);\n            }\n            fcn.0041fd94(uVar13);\n            fcn.0041fd94(iVar25);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pppppppuStack76);\n            return puStack84;\n        }\n    }\n    return 0x8002000e;\n}\n",
        "token_count": 4658
    },
    "004680d5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004680d5(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    piVar2 = *(param_1 + 0x1c);\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 0xc))(piVar2, &var_8h);\n        uVar1 = *(var_8h + 0x30);\n        iVar3 = *(var_8h + 0x28);\n        (**(**(param_1 + 0x1c) + 0x4c))(*(param_1 + 0x1c), var_8h);\n        if (((iVar3 != 3) && (*(param_1 + 4) != 0)) && (uVar1 != 0)) {\n            uVar4 = 0;\n            do {\n                iVar3 = (**(**(param_1 + 0x1c) + 0x20))(*(param_1 + 0x1c), uVar4, &var_ch);\n                if (iVar3 == 0) {\n                    var_4h = NULL;\n                    (**(**(param_1 + 0x1c) + 0x38))(*(param_1 + 0x1c), var_ch, &var_4h);\n                    (**(*var_4h + 0xc))(var_4h, &var_10h);\n                    iVar3 = *(var_10h + 0x28);\n                    (**(*var_4h + 0x4c))(var_4h, var_10h);\n                    if (iVar3 == 3) {\n                        (**(**(param_1 + 0x1c) + 8))(*(param_1 + 0x1c));\n                        *(param_1 + 0x1c) = var_4h;\n                        return;\n                    }\n                    (**(*var_4h + 8))(var_4h);\n                }\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 524
    },
    "004681ee": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004681ee(int16_t *lpString)\n\n{\n    int16_t iVar1;\n    int64_t iVar2;\n    bool bVar3;\n    ushort uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    char16_t **ppcVar7;\n    int32_t iVar8;\n    int32_t in_ECX;\n    int32_t iVar9;\n    int16_t *piVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int16_t *piVar14;\n    int16_t *piVar15;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int16_t *var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int16_t *var_18h;\n    int16_t *var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    piVar10 = lpString;\n    iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n    uVar11 = 2;\n    iVar2 = (iVar5 + 6) * 2;\n    piVar14 = lpString;\n    uVar6 = fcn.0041fd8b(-(iVar2 >> 0x20 != 0) | iVar2);\n    iVar9 = 0;\n    *(in_ECX + 4) = uVar6;\n    iVar12 = 0;\n    var_4h = 2;\n    lpString = NULL;\n    if (0 < iVar5) {\n        do {\n            for (; piVar10[iVar9] == 0x20; iVar9 = iVar9 + 1) {\n            }\n            iVar1 = piVar10[iVar9];\n            while (iVar1 != 0x20) {\n                iVar9 = iVar9 + 1;\n                *(*(in_ECX + 4) + iVar12 * 2) = iVar1;\n                iVar12 = iVar12 + 1;\n                uVar11 = var_4h;\n                iVar1 = piVar10[iVar9];\n            }\n            uVar11 = uVar11 + 1;\n            *(*(in_ECX + 4) + iVar12 * 2) = 0x7c;\n            for (; piVar10[iVar9] == 0x20; iVar9 = iVar9 + 1) {\n            }\n            while( true ) {\n                iVar13 = iVar12 + 1;\n                iVar1 = piVar10[iVar9];\n                if ((iVar1 == 0x20) || (iVar1 == 0x28)) break;\n                iVar9 = iVar9 + 1;\n                *(*(in_ECX + 4) + iVar13 * 2) = iVar1;\n                iVar12 = iVar13;\n            }\n            *(*(in_ECX + 4) + iVar13 * 2) = 0x3b;\n            iVar12 = iVar12 + 2;\n            for (; piVar10[iVar9] == 0x20; iVar9 = iVar9 + 1) {\n            }\n            if (piVar10[iVar9] != 0x28) goto code_r0x004682d1;\n            do {\n                iVar9 = iVar9 + 1;\ncode_r0x004682d1:\n            } while (piVar10[iVar9] == 0x20);\n            bVar3 = true;\n            do {\n                for (; piVar10[iVar9] == 0x20; iVar9 = iVar9 + 1) {\n                }\n                while (iVar1 = piVar10[iVar9],  iVar1 != 0x3b) {\n                    while (iVar1 == 0x20) {\n                        iVar9 = iVar9 + 1;\n                        iVar1 = piVar10[iVar9];\n                    }\n                    piVar15 = piVar10 + iVar9;\n                    iVar9 = iVar9 + 1;\n                    if (*piVar15 == 0x29) {\n                        bVar3 = false;\n                        break;\n                    }\n                    *(*(in_ECX + 4) + iVar12 * 2) = *piVar15;\n                    iVar12 = iVar12 + 1;\n                }\n                for (; piVar10[iVar9] == 0x20; iVar9 = iVar9 + 1) {\n                }\n                if (bVar3) {\n                    uVar4 = 0x3b;\n                }\n                else {\n                    uVar4 = 10;\n                }\n                *(*(in_ECX + 4) + iVar12 * 2) = uVar4;\n                iVar12 = iVar12 + 1;\n                if (piVar10[iVar9] == 0x3b) {\n                    iVar9 = iVar9 + 1;\n                }\n            } while (bVar3);\n            lpString = iVar12;\n            var_4h = uVar11;\n        } while (iVar9 < iVar5);\n    }\n    if (*(in_ECX + 0x24) != 0) {\n        var_4h = var_4h + 3;\n    }\n    uVar6 = fcn.0041fd8b(-(var_4h * 4 >> 0x20 != 0) | var_4h * 4);\n    *(in_ECX + 8) = uVar6;\n    ppcVar7 = fcn.0041fd8b(-(var_4h * 0x1c >> 0x20 != 0) | var_4h * 0x1c);\n    *(in_ECX + 0xc) = ppcVar7;\n    *ppcVar7 = L\"InterfaceDispatch\";\n    *(*(in_ECX + 0xc) + 4) = 0;\n    *(*(in_ECX + 0xc) + 8) = 0xffffffff;\n    *(*(in_ECX + 0xc) + 0xc) = 0xffffffff;\n    *(*(in_ECX + 0xc) + 0x10) = 4;\n    *(*(in_ECX + 0xc) + 0x14) = 0;\n    *(*(in_ECX + 0xc) + 0x18) = 1;\n    *(*(in_ECX + 0xc) + 0x1a) = 0;\n    iVar9 = 2;\n    var_ch = 2;\n    *(*(in_ECX + 0xc) + 0x1c) = 0;\n    *(*(in_ECX + 0xc) + 0x20) = 0;\n    *(*(in_ECX + 0xc) + 0x24) = 0;\n    *(*(in_ECX + 0xc) + 0x28) = 0xffffffff;\n    *(*(in_ECX + 0xc) + 0x2c) = 4;\n    *(*(in_ECX + 0xc) + 0x30) = 0;\n    *(*(in_ECX + 0xc) + 0x34) = 2;\n    *(*(in_ECX + 0xc) + 0x36) = 0x13;\n    **(in_ECX + 8) = 0;\n    *(*(in_ECX + 8) + 4) = 0;\n    if (*(in_ECX + 0x24) != 0) {\n        iVar9 = 5;\n        *(*(in_ECX + 0xc) + 0x38) = L\"QueryInterface\";\n        var_ch = 5;\n        *(*(in_ECX + 0xc) + 0x40) = 1;\n        *(*(in_ECX + 0xc) + 0x44) = 0;\n        *(*(in_ECX + 0xc) + 0x48) = 4;\n        *(*(in_ECX + 0xc) + 0x4c) = 2;\n        *(*(in_ECX + 0xc) + 0x50) = 1;\n        *(*(in_ECX + 0xc) + 0x52) = 3;\n        uVar6 = fcn.0041fd8b(0x10);\n        *(*(in_ECX + 8) + 8) = uVar6;\n        *(*(*(in_ECX + 8) + 8) + 4) = 0x48;\n        *(*(*(in_ECX + 8) + 8) + 0xc) = 0x4013;\n        **(*(in_ECX + 8) + 8) = 0;\n        *(*(*(in_ECX + 8) + 8) + 8) = 0;\n        *(*(in_ECX + 0xc) + 0x3c) = *(*(in_ECX + 8) + 8);\n        *(*(in_ECX + 0xc) + 0x54) = L\"AddRef\";\n        *(*(in_ECX + 0xc) + 0x58) = 0;\n        *(*(in_ECX + 0xc) + 0x5c) = 2;\n        *(*(in_ECX + 0xc) + 0x60) = 1;\n        *(*(in_ECX + 0xc) + 100) = 4;\n        *(*(in_ECX + 0xc) + 0x68) = 0;\n        *(*(in_ECX + 0xc) + 0x6c) = 1;\n        *(*(in_ECX + 0xc) + 0x6e) = 0x13;\n        *(*(in_ECX + 8) + 0xc) = 0;\n        *(*(in_ECX + 0xc) + 0x70) = L\"Release\";\n        *(*(in_ECX + 0xc) + 0x74) = 0;\n        *(*(in_ECX + 0xc) + 0x78) = 3;\n        *(*(in_ECX + 0xc) + 0x7c) = 2;\n        *(*(in_ECX + 0xc) + 0x80) = 4;\n        *(*(in_ECX + 0xc) + 0x84) = 0;\n        *(*(in_ECX + 0xc) + 0x88) = 1;\n        *(*(in_ECX + 0xc) + 0x8a) = 0x13;\n        *(*(in_ECX + 8) + 0x10) = 0;\n    }\n    piVar10 = NULL;\n    iVar12 = *(in_ECX + 4);\n    var_28h = NULL;\n    var_2ch = 0;\n    if (0 < lpString) {\n        var_10h = var_ch << 2;\n        iVar9 = iVar9 * 0x1c;\n        var_20h = var_ch + -2;\n        var_1ch = iVar9;\n        var_14h = iVar12;\n        do {\n            iVar1 = *(iVar12 + var_2ch * 2);\n            if (iVar1 == 0x7c) {\n                *(iVar12 + var_2ch * 2) = 0;\n                var_28h = iVar12 + (var_2ch + 1) * 2;\n                piVar10 = var_28h;\n            }\n            else if ((iVar1 == 10) || (iVar1 == 0)) {\n                *(iVar12 + var_2ch * 2) = 0;\n                *(iVar9 + *(in_ECX + 0xc)) = var_14h;\n                iVar5 = var_20h + 1;\n                *(*(in_ECX + 0xc) + 8 + iVar9) = iVar5;\n                *(*(in_ECX + 0xc) + 0xc + iVar9) = var_20h;\n                *(*(in_ECX + 0xc) + 0x18 + iVar9) = 1;\n                var_ch = 0;\n                iVar13 = 0;\n                iVar1 = *piVar10;\n                if (iVar1 != 0) {\n                    var_ch = 0;\n                    piVar14 = piVar10;\n                    do {\n                        if (iVar1 == 0x3b) {\n                            if (piVar14[1] == 0) {\n                                *piVar14 = 0;\n                            }\n                            else {\n                                var_ch = var_ch + 1;\n                            }\n                        }\n                        iVar13 = iVar13 + 1;\n                        piVar14 = piVar10 + iVar13;\n                        iVar1 = *piVar14;\n                        iVar9 = var_1ch;\n                    } while (iVar1 != 0);\n                }\n                iVar8 = 0;\n                var_14h = NULL;\n                if (0 < iVar13) {\n                    do {\n                        if (piVar10[iVar8] == 0x3b) {\n                            piVar10[iVar8] = 0;\n                            if (piVar10[iVar8 + 1] != 0) {\n                                var_14h = piVar10 + iVar8 + 1;\n                            }\n                            break;\n                        }\n                        iVar8 = iVar8 + 1;\n                    } while (iVar8 < iVar13);\n                }\n                fcn.0046784b(piVar10, *(in_ECX + 0xc) + 0x10 + iVar9, iVar9 + 0x1a + *(in_ECX + 0xc));\n                *(*(in_ECX + 0xc) + 0x14 + iVar9) = var_ch;\n                if (var_ch == 0) {\n                    *(var_10h + *(in_ECX + 8)) = 0;\n                    *(*(in_ECX + 0xc) + 4 + iVar9) = 0;\n                    piVar14 = piVar10;\n                }\n                else {\n                    uVar6 = fcn.0041fd8b(-(var_ch * 8 >> 0x20 != 0) | var_ch * 8);\n                    *(var_10h + *(in_ECX + 8)) = uVar6;\n                    if (var_14h != NULL) {\n                        var_ch = 0;\n                        iVar1 = *var_14h;\n                        var_20h = 0;\n                        piVar15 = var_14h;\n                        piVar14 = var_14h;\n                        while (iVar1 != 0) {\n                            var_18h = piVar15;\n                            if (iVar1 == 0x3b) {\n                                *piVar14 = 0;\n                                uVar4 = fcn.00468cd3(piVar15);\n                                *(*(var_10h + *(in_ECX + 8)) + 4 + var_ch * 8) = uVar4;\n                                *(*(var_10h + *(in_ECX + 8)) + var_ch * 8) = 0;\n                                var_ch = var_ch + 1;\n                                var_18h = piVar14 + 1;\n                                piVar10 = piVar15;\n                            }\n                            var_20h = var_20h + 1;\n                            piVar14 = var_14h + var_20h;\n                            piVar15 = var_18h;\n                            iVar1 = *piVar14;\n                        }\n                        uVar4 = fcn.00468cd3(piVar15);\n                        *(*(var_10h + *(in_ECX + 8)) + 4 + var_ch * 8) = uVar4;\n                        *(*(var_10h + *(in_ECX + 8)) + var_ch * 8) = 0;\n                        iVar9 = var_1ch;\n                    }\n                    *(*(in_ECX + 0xc) + 4 + iVar9) = *(var_10h + *(in_ECX + 8));\n                    piVar14 = piVar10;\n                }\n                var_10h = var_10h + 4;\n                iVar9 = iVar9 + 0x1c;\n                var_14h = iVar12 + (var_2ch + 1) * 2;\n                piVar10 = var_28h;\n                var_20h = iVar5;\n                var_1ch = iVar9;\n            }\n            var_2ch = var_2ch + 1;\n        } while (var_2ch < lpString);\n    }\n    iVar9 = fcn.0041fd5b(8, piVar14);\n    *(in_ECX + 0x10) = iVar9;\n    *(iVar9 + 4) = var_4h;\n    **(in_ECX + 0x10) = *(in_ECX + 0xc);\n    return;\n}\n",
        "token_count": 3726
    },
    "00468daa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00468daa(uint16_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    int32_t *in_ECX;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = arg_1ch;\n    arg_1ch = 0;\n    if (arg_14h < 0) {\n        arg_14h = fcn.004248f3(arg_8h);\n    }\n    iVar7 = 0;\n    if (((arg_14h == 0) || (iVar6 = in_ECX[1],  iVar6 == 0)) || (arg_10h == 0)) {\n        iVar8 = in_ECX[1];\n    }\n    else {\n        if (arg_10h < 1) {\n            arg_10h = -arg_10h;\n            if ((arg_18h < 0) || (iVar6 <= arg_18h)) {\n                iVar8 = iVar6 - arg_14h;\n            }\n            else {\n                iVar8 = arg_18h + (1 - arg_14h);\n            }\n            if (iVar8 < 0) {\n                return iVar6;\n            }\n            iVar6 = iVar8 + 1;\n            iVar4 = iVar2;\n            if (iVar2 < 0) {\n                iVar4 = iVar6;\n            }\n            if (iVar6 < iVar4) {\n                iVar4 = iVar6;\n            }\n            iVar4 = iVar8 - iVar4;\n            for (; iVar4 < iVar8; iVar8 = iVar8 + iVar6) {\n                if (arg_10h <= iVar7) {\n                    return iVar8;\n                }\n                iVar6 = *in_ECX + iVar8 * 2;\n                if (arg_ch == 1) {\n                    if (arg_14h != 0) {\n                        puVar5 = arg_8h;\n                        arg_18h = arg_14h;\n                        do {\n                            uVar1 = *((iVar6 - arg_8h) + puVar5);\n                            if (uVar1 != *puVar5) {\n                                iVar6 = (-(uVar1 < *puVar5) & 0xfffffffe) + 1;\n                                iVar7 = arg_1ch;\n                                goto code_r0x00468f67;\n                            }\n                            puVar5 = puVar5 + 1;\n                            arg_18h = arg_18h + -1;\n                            iVar7 = arg_1ch;\n                        } while (arg_18h != 0);\n                    }\n                    iVar6 = 0;\n                }\n                else {\n                    iVar6 = fcn.0041d5dc(iVar6, arg_14h, arg_8h, arg_14h, arg_ch);\n                    iVar7 = arg_1ch;\n                }\ncode_r0x00468f67:\n                if (iVar6 == 0) {\n                    iVar7 = iVar7 + 1;\n                    if (iVar7 == arg_10h) {\n                        return iVar8;\n                    }\n                    iVar6 = -arg_14h;\n                    arg_1ch = iVar7;\n                }\n                else {\n                    iVar6 = -1;\n                }\n            }\n        }\n        else {\n            if (arg_18h < 0) {\n                arg_18h = 0;\n            }\n            if (iVar6 <= arg_18h) {\n                return iVar6;\n            }\n            iVar6 = iVar6 - arg_18h;\n            iVar4 = iVar2;\n            if (iVar2 < 0) {\n                iVar4 = iVar6;\n            }\n            if (iVar6 < iVar4) {\n                iVar4 = iVar6;\n            }\n            iVar6 = arg_18h - arg_14h;\n            for (iVar8 = arg_18h; iVar8 < iVar6 + 1 + iVar4; iVar8 = iVar8 + iVar3) {\n                if (arg_10h <= iVar7) {\n                    return iVar8;\n                }\n                iVar3 = *in_ECX + iVar8 * 2;\n                if (arg_ch == 1) {\n                    if (arg_14h != 0) {\n                        puVar5 = arg_8h;\n                        arg_18h = arg_14h;\n                        do {\n                            uVar1 = *((iVar3 - arg_8h) + puVar5);\n                            if (uVar1 != *puVar5) {\n                                iVar3 = (-(uVar1 < *puVar5) & 0xfffffffe) + 1;\n                                iVar7 = arg_1ch;\n                                goto code_r0x00468e97;\n                            }\n                            puVar5 = puVar5 + 1;\n                            arg_18h = arg_18h + -1;\n                            iVar7 = arg_1ch;\n                        } while (arg_18h != 0);\n                    }\n                    iVar3 = 0;\n                }\n                else {\n                    iVar3 = fcn.0041d5dc(iVar3, arg_14h, arg_8h, arg_14h, arg_ch);\n                    iVar7 = arg_1ch;\n                }\ncode_r0x00468e97:\n                if (iVar3 == 0) {\n                    iVar7 = iVar7 + 1;\n                    iVar3 = arg_14h;\n                    arg_1ch = iVar7;\n                    if (iVar7 == arg_10h) {\n                        return iVar8;\n                    }\n                }\n                else {\n                    iVar3 = 1;\n                }\n            }\n        }\n        if ((iVar7 < arg_10h) && (iVar8 = iVar7,  iVar2 != 0x7fffffff)) {\n            iVar8 = in_ECX[1];\n        }\n    }\n    return iVar8;\n}\n",
        "token_count": 1349
    },
    "00468ff1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00468ff1(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    uint var_14h;\n    \n    arg_8h_00 = 0;\n    if ((*(in_ECX + 8) != 0) && (*(in_ECX + 4) != '\\0')) {\n        fcn.00408320();\n        iVar1 = fcn.0046905e(arg_8h, arg_10h);\n        if (0 < iVar1) {\n            fcn.0040c25d();\n            do {\n                fcn.00468fa4(arg_8h_00, &var_14h);\n                fcn.00406aff(&var_14h);\n                arg_8h_00 = arg_8h_00 + 1;\n            } while (arg_8h_00 < iVar1);\n            fcn.0040b1ff();\n            return iVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 246
    },
    "0046905e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046905e(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    \n    while( true ) {\n        if ((((in_ECX[2] == 0) || (*(in_ECX + 1) == '\\0')) || (*arg_8h == -1)) ||\n           (iVar2 = in_ECX[4],  *arg_8h != iVar2 && iVar2 <= *arg_8h)) {\n            return 0;\n        }\n        iVar2 = fcn.004099d0(**in_ECX, iVar2, *arg_8h, in_ECX[10] | in_ECX[8], in_ECX[5], in_ECX[6]);\n        in_ECX[7] = iVar2;\n        if (0 < iVar2) {\n            piVar1 = in_ECX[5];\n            iVar2 = piVar1[1];\n            in_ECX[8] = 0;\n            if ((arg_ch != '\\0') && (*piVar1 == piVar1[1])) {\n                if (*piVar1 == in_ECX[4]) {\n                    iVar2 = in_ECX[4] + 1;\n                }\n                else {\n                    in_ECX[8] = 0x10000010;\n                }\n            }\n            *arg_8h = iVar2;\n            return in_ECX[7];\n        }\n        if (iVar2 != -1) break;\n        if (in_ECX[8] == 0) {\n            return 0;\n        }\n        in_ECX[8] = 0;\n        *arg_8h = *arg_8h + 1;\n    }\n    return 0;\n}\n",
        "token_count": 393
    },
    "004690f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004690f8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = 0;\n    if ((*(in_ECX + 8) != 0) && (*(in_ECX + 4) != '\\0')) {\n        fcn.00468d7c();\n        iVar1 = fcn.0046905e(&arg_8h, 1);\n        if (0 < iVar1) {\n            if (*(in_ECX + 0x1c) < 1) {\n                return *(in_ECX + 0x1c);\n            }\n            iVar1 = 0;\n            do {\n                var_8h = *(*(in_ECX + 0x14) + iVar1);\n                var_4h = *(*(in_ECX + 0x14) + 4 + iVar1) - var_8h;\n                fcn.004691a5(&var_8h);\n                iVar1 = iVar1 + 8;\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < *(in_ECX + 0x1c));\n            return *(in_ECX + 0x1c);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 309
    },
    "00469165": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00469165(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    if ((param_1[2] != 0) && (*(param_1 + 1) != '\\0')) {\n        iVar1 = fcn.004099d0(**param_1, param_1[4], 0, param_1[10], param_1[5], param_1[6]);\n        param_1[7] = iVar1;\n        if (0 < iVar1) {\n            param_1[7] = 0;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 141
    },
    "004691a5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004691a5(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint unaff_ESI;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar1 = *(in_ECX + 0xc) * 2;\n        if (uVar1 < 8) {\n            uVar1 = 8;\n        }\n        *(in_ECX + 0xc) = uVar1;\n        uVar2 = fcn.0041fd8b(-(uVar1 * 4 >> 0x20 != 0) | uVar1 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.00420db0(uVar2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.0041fd94(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar2;\n    }\n    puVar3 = fcn.0041fd5b(8, unaff_ESI);\n    *puVar3 = *arg_8h;\n    puVar3[1] = arg_8h[1];\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar3;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 365
    },
    "0046933a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046933a(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    bool bVar3;\n    int16_t *piVar4;\n    uint16_t *puVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint var_18h;\n    uint var_8h;\n    \n    fcn.0040c25d();\n    iVar1 = *arg_ch;\n    iVar6 = iVar1 + 1;\n    *arg_ch = iVar6;\n    if (iVar6 < *(arg_8h + 4)) {\n        bVar2 = false;\n        if ((arg_10h == '\\0') || (piVar4 = fcn.004058ca(iVar6),  *piVar4 != 0x7b)) {\n            bVar3 = false;\n        }\n        else {\n            bVar3 = true;\n            *arg_ch = iVar1 + 2;\n        }\n        fcn.0040bfbf();\n        while (*arg_ch < *(arg_8h + 4)) {\n            puVar5 = fcn.004058ca(*arg_ch);\n            iVar6 = fcn.00428f9b(*puVar5);\n            if (iVar6 == 0) break;\n            iVar6 = *arg_ch;\n            bVar2 = true;\n            *arg_ch = iVar6 + 1;\n            puVar5 = fcn.004058ca(iVar6);\n            fcn.004051ec(*puVar5);\n        }\n        uVar7 = fcn.00426261(var_18h);\n        if (bVar2) {\n            if (!bVar3) goto code_r0x0046940a;\n            if ((*arg_ch != *(arg_8h + 4)) && (piVar4 = fcn.004058ca(*arg_ch),  *piVar4 == 0x7d)) {\n                *arg_ch = *arg_ch + 1;\n                goto code_r0x0046940a;\n            }\n        }\n    }\n    uVar7 = 0xffffffff;\n    *arg_ch = iVar1;\ncode_r0x0046940a:\n    fcn.0040b1ff();\n    return uVar7;\n}\n",
        "token_count": 510
    },
    "00469464": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00469464(uint arg_8h)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x10) != 0) {\n        iVar2 = fcn.004248f3(**(in_ECX + 0xc));\n        iVar3 = fcn.004248f3(arg_8h);\n        iVar1 = (iVar2 + 1 + iVar3) * 2;\n        arg_8h_00 = fcn.0041fd8b(-(iVar1 >> 0x20 != 0) | iVar1);\n        fcn.00424913(arg_8h_00, **(in_ECX + 0xc));\n        fcn.00428fc8(arg_8h_00, arg_8h);\n        fcn.0041fd94(**(in_ECX + 0xc));\n        **(in_ECX + 0xc) = arg_8h_00;\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "00469600": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_54h\n\nvoid __cdecl fcn.00469600(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    char cVar3;\n    uint arg_8h_00;\n    uint arg_10h_00;\n    uint arg_8h_01;\n    uchar auStackY8280 [8124];\n    uint uStackY156;\n    uint var_54h;\n    int32_t var_44h;\n    uint var_34h;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uchar *var_24h;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *var_14h;\n    uint uStack20;\n    \n    fcn.00441ef0();\n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleW;\n    if (0 < arg_8h) {\n        var_14h = &stack0xffffdfa8;\n        uStack20 = 0xfff;\n        uStack28 = *0x4d23f0;\n        uStack32 = 0;\n        uStack36 = 0x469637;\n        uStack36 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n        pcVar2 = _sym.imp.USER32.dll_LoadStringW;\n        var_24h = 0x469640;\n        (*_sym.imp.USER32.dll_LoadStringW)();\n        var_24h = &stack0xffffdfa8;\n        uStack44 = 0x46964f;\n        fcn.0040b606(var_24h);\n        uStack44 = 0xfff;\n        puStack48 = &stack0xffffdfa8;\n        uStack52 = arg_ch;\n        var_34h = 0;\n        (*pcVar1)();\n        (*pcVar2)();\n        fcn.0040b606(&stack0xffffdfa8);\n        var_44h = 0x46967a;\n        arg_8h_00 = fcn.00405e5a(arg_8h);\n        var_44h = arg_8h;\n        arg_10h_00 = fcn.004698c0(arg_8h);\n        arg_8h_01 = fcn.004698f4(arg_8h);\n        fcn.0040c25d();\n        cVar3 = fcn.00469928(arg_8h_01, &fcn.00469600::var_34h);\n        if (cVar3 == '\\0') {\n            fcn.0041faa3(&stack0xffffdfa8, L\"Line %d:\\n\\n\", arg_10h_00);\n        }\n        else {\n            fcn.0041faa3(&stack0xffffdfa8, L\"Line %d  (File \\\"%s\\\"):\\n\\n\", arg_10h_00);\n        }\n        fcn.0040b606(&stack0xffffdfa8);\n        fcn.004052b7(arg_8h_00);\n        fcn.004052b7(0x49d128);\n        fcn.0040c25d();\n        if (-1 < arg_10h) {\n            fcn.004084e7(arg_8h_00);\n            fcn.0040ad22(arg_10h, 0xffffffff);\n            fcn.004052b7(L\"^ ERROR\");\n            fcn.00407cf8(&fcn.00469600::var_24h);\n            fcn.004052b7(0x49d128);\n        }\n        fcn.004052b7(L\"\\nError: \");\n        fcn.00407cf8(&fcn.00469600::var_44h);\n        if (*0x4d2392 == '\\0') {\n            (*_sym.imp.USER32.dll_MessageBoxW)();\n        }\n        else {\n            uStackY156 = 0x469772;\n            fcn.00469af8(L\"%s (%d) : ==> %s: \\n%s \\n%s\\n\", var_34h);\n        }\n        fcn.0040b1ff();\n        fcn.0040b1ff();\n        fcn.0040b1ff();\n        fcn.0040b1ff();\n        fcn.0040b1ff();\n    }\n    return;\n}\n",
        "token_count": 1006
    },
    "004697b9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl fcn.004697b9(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t extraout_ECX;\n    uchar auStackY8228 [8156];\n    uint uStackY72;\n    uint uStackY68;\n    uint uStackY64;\n    uchar *puStackY60;\n    uint var_20h;\n    uint var_10h;\n    \n    fcn.00441ef0();\n    uVar1 = *(extraout_ECX + 0x60);\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n    (*_sym.imp.USER32.dll_LoadStringW)();\n    fcn.0040b606(&stack0xffffdfdc);\n    if (*(extraout_ECX + 2) == '\\0') {\n        if (arg_8h[1] == 0) {\n            fcn.0041faa3(&stack0xffffdfdc, L\"Line %d:\\n\\n\", arg_ch);\n        }\n        else {\n            fcn.0041faa3(&stack0xffffdfdc, L\"Line %d  (File \\\"%s\\\"):\\n\\n\", arg_ch);\n        }\n        puStackY60 = &stack0xffffdfdc;\n        fcn.0040b606(puStackY60);\n        fcn.004052b7(arg_14h);\n        fcn.004052b7(L\"\\n\\nError: \");\n        fcn.004052b7(arg_10h);\n        fcn.004052b7(0x4c6474);\n        uStackY68 = 0;\n        uStackY72 = 0x4698ab;\n        uStackY64 = uVar1;\n        (*_sym.imp.USER32.dll_MessageBoxW)();\n        fcn.0040b1ff();\n    }\n    else {\n        puStackY60 = 0x469819;\n        fcn.00469af8(0x4c63e0, *arg_8h);\n    }\n    fcn.0040b1ff();\n    return;\n}\n",
        "token_count": 481
    },
    "00469963": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00469963(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int16_t iVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int16_t *piVar6;\n    int16_t iVar7;\n    uint var_18h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    for (iVar4 = 0; (iVar1 = *(arg_8h + iVar4 * 2),  iVar1 == 0x20 || (iVar1 == 9)); iVar4 = iVar4 + 1) {\n    }\n    iVar7 = 0x22;\n    if ((iVar1 == 0x22) || (iVar7 = 0x27,  iVar1 == 0x27)) {\n        bVar2 = true;\n    }\n    else {\n        if (iVar1 != 0x3c) {\n            return 0;\n        }\n        iVar7 = 0x3e;\n        bVar2 = false;\n    }\n    iVar4 = iVar4 + 1;\n    iVar1 = *(arg_8h + iVar4 * 2);\n    while ((iVar1 != iVar7 && (iVar1 != 0))) {\n        *(arg_ch + var_4h * 2) = iVar1;\n        var_4h = var_4h + 1;\n        iVar4 = iVar4 + 1;\n        iVar1 = *(arg_8h + iVar4 * 2);\n    }\n    iVar5 = 0;\n    if (*(arg_8h + iVar4 * 2) == iVar7) {\n        for (piVar6 = arg_8h + 2 + iVar4 * 2; (iVar1 = *piVar6,  iVar1 == 0x20 || (iVar1 == 9)); piVar6 = piVar6 + 1) {\n        }\n        if ((iVar1 == 0) || (iVar1 == 0x3b)) {\n            *(arg_ch + var_4h * 2) = 0;\n            fcn.00408fd0(arg_ch);\n            fcn.004090bd(arg_ch);\n            fcn.0040c25d();\n            iVar4 = *(var_8h + 0x40);\n            if (bVar2) {\n                iVar5 = fcn.0046dadc();\n                if (iVar5 == -1) {\n                    do {\n                        iVar4 = iVar4 + -1;\n                        if (iVar4 < 0) goto code_r0x00469abe;\n                        if (&var_18h != *(*(var_8h + 0x3c) + iVar4 * 4)) {\n                            fcn.0040c1c3(*(*(var_8h + 0x3c) + iVar4 * 4));\n                        }\n                        fcn.004052b7(arg_ch);\n                        cVar3 = fcn.0046d3ec();\n                    } while (cVar3 == '\\0');\ncode_r0x00469ab3:\n                    fcn.00424913(arg_ch, var_18h);\n                }\n            }\n            else if (0 < iVar4) {\n                do {\n                    if (&var_18h != *(*(var_8h + 0x3c) + iVar5 * 4)) {\n                        fcn.0040c1c3(*(*(var_8h + 0x3c) + iVar5 * 4));\n                    }\n                    fcn.004052b7(arg_ch);\n                    cVar3 = fcn.0046d3ec();\n                    if (cVar3 != '\\0') goto code_r0x00469ab3;\n                    iVar5 = iVar5 + 1;\n                } while (iVar5 < iVar4);\n            }\ncode_r0x00469abe:\n            fcn.0040b1ff();\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 885
    },
    "00469b97": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.00469b97(uint *arg_8h)\n\n{\n    code *pcVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint lpKeyState;\n    char var_f0h;\n    uint var_efh;\n    uint var_a5h;\n    uint var_60h;\n    \n    *arg_8h = 0;\n    *(arg_8h + 1) = 0;\n    if (*(in_ECX + 0x20) == 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(0xa0);\n        pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n        if ((((uVar2 & 0x8000) != 0) || (uVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0xa0),  (uVar2 & 0x8000) != 0)) &&\n           (*(in_ECX + 0x1a) == '\\0')) {\n            *arg_8h = 1;\n        }\n        uVar2 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(0xa1);\n        if ((((uVar2 & 0x8000) != 0) || (uVar2 = (*pcVar1)(0xa1),  (uVar2 & 0x8000) != 0)) && (*(in_ECX + 0x1b) == '\\0')\n           ) {\n            *(arg_8h + 1) = 1;\n        }\n        uVar2 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x11);\n        if ((((uVar2 & 0x8000) != 0) || (uVar2 = (*pcVar1)(0x11),  (uVar2 & 0x8000) != 0)) && (*(in_ECX + 0x1c) == '\\0')\n           ) {\n            *(arg_8h + 2) = 1;\n        }\n        uVar2 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x12);\n        if ((((uVar2 & 0x8000) != 0) || (uVar2 = (*pcVar1)(0x12),  (uVar2 & 0x8000) != 0)) && (*(in_ECX + 0x1d) == '\\0')\n           ) {\n            *(arg_8h + 3) = 1;\n        }\n        uVar2 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x5b);\n        if ((((uVar2 & 0x8000) != 0) || (uVar2 = (*pcVar1)(0x5b),  (uVar2 & 0x8000) != 0)) && (*(in_ECX + 0x1e) == '\\0')\n           ) {\n            *(arg_8h + 1) = 1;\n        }\n    }\n    else {\n        iVar3 = (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n        if (iVar3 != 0) {\n            if (((var_60h == -0x80) || (var_f0h == -0x80)) && (*(in_ECX + 0x1a) == '\\0')) {\n                *arg_8h = 1;\n            }\n            if ((var_60h._1_1_ == -0x80) && (*(in_ECX + 0x1b) == '\\0')) {\n                *(arg_8h + 1) = 1;\n            }\n            if ((var_efh == -0x80) && (*(in_ECX + 0x1c) == '\\0')) {\n                *(arg_8h + 2) = 1;\n            }\n            if ((var_efh._1_1_ == -0x80) && (*(in_ECX + 0x1d) == '\\0')) {\n                *(arg_8h + 3) = 1;\n            }\n            if ((var_a5h == -0x80) && (*(in_ECX + 0x1e) == '\\0')) {\n                *(arg_8h + 1) = 1;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 966
    },
    "00469dab": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00469dab(char *param_1)\n\n{\n    char cVar1;\n    \n    if ((param_1[10] == '\\0') &&\n       ((cVar1 = *param_1,  cVar1 == -1 ||\n        (((((((((cVar1 != '-' && (cVar1 != '.')) && (cVar1 != '#')) && ((cVar1 != '(' && (cVar1 != '\\\"')))) &&\n             ((cVar1 != '%' && ((cVar1 != '\\'' && (cVar1 != '$')))))) && (cVar1 != '&')) &&\n           (((((cVar1 != '!' && (cVar1 != 'o')) && (cVar1 != ']')) &&\n             (((cVar1 != '[' && (cVar1 != '\\\\')) && ((cVar1 != -0x5b && ((cVar1 != -0x5d && (cVar1 != '_')))))))) &&\n            ((cVar1 != -0x5a && (((cVar1 != -0x59 && (cVar1 != -0x58)) && (cVar1 != -0x57)))))))) &&\n          ((((cVar1 != -0x56 && (cVar1 != -0x55)) &&\n            (((cVar1 != -0x54 && ((cVar1 != -0x53 && (cVar1 != -0x52)))) && (cVar1 != -0x51)))) &&\n           ((((cVar1 != -0x50 && (cVar1 != -0x4f)) && (cVar1 != -0x4e)) && ((cVar1 != -0x4d && (cVar1 != -0x4c))))))))\n         && ((cVar1 != -0x4b && ((cVar1 != -0x4a && (cVar1 != -0x49)))))))))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 425
    },
    "00469e5d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00469e5d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(param_1 + 0x10) != 0) && (iVar2 = 0,  *(param_1 + 0x20) == 0)) {\n        iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(param_1 + 0x10));\n        if (iVar1 == 0) {\n            *(param_1 + 0x10) = 0;\n        }\n        else {\n            do {\n                iVar1 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n                if (iVar1 == *(param_1 + 0x10)) {\n                    return;\n                }\n                fcn.0046afc6();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < 3);\n        }\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "00469eaf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpKeyState\n// WARNING: Variable defined which should be unmapped: var_fbh\n// WARNING: Variable defined which should be unmapped: var_b1h\n\nvoid __cdecl fcn.00469eaf(char *arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    char cVar5;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint noname_1;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint noname_2;\n    uint lpKeyState;\n    uint in_stack_fffffef4;\n    uint in_stack_fffffef8;\n    uint in_stack_fffffefc;\n    uchar var_fch;\n    uint var_fbh;\n    uint in_stack_ffffff08;\n    uint in_stack_ffffff0c;\n    uint in_stack_ffffff10;\n    uint in_stack_ffffff14;\n    uint in_stack_ffffff18;\n    uint in_stack_ffffff1c;\n    uint in_stack_ffffff20;\n    uint in_stack_ffffff24;\n    uint in_stack_ffffff28;\n    uint in_stack_ffffff2c;\n    uint in_stack_ffffff30;\n    uint in_stack_ffffff34;\n    uint in_stack_ffffff38;\n    uint in_stack_ffffff3c;\n    uint in_stack_ffffff40;\n    uint in_stack_ffffff44;\n    uchar auStack184 [3];\n    uint var_b1h;\n    uint in_stack_ffffff50;\n    uint var_6ch;\n    uint var_ch;\n    \n    if (*arg_8h == '\\0') {\n        cVar5 = *(in_ECX + 0x14);\n    }\n    else {\n        *(in_ECX + 0x14) = 1;\n        cVar5 = '\\x01';\n    }\n    if (arg_8h[2] != '\\0') {\n        *(in_ECX + 0x16) = 1;\n    }\n    if (arg_8h[3] != '\\0') {\n        *(in_ECX + 0x17) = 1;\n    }\n    if ((cVar5 != '\\0') && (*(in_ECX + 0x1a) != '\\0')) {\n        *(in_ECX + 0x14) = 0;\n    }\n    if ((*(in_ECX + 0x15) != '\\0') && (*(in_ECX + 0x1b) != '\\0')) {\n        *(in_ECX + 0x15) = 0;\n    }\n    if ((*(in_ECX + 0x16) != '\\0') && (*(in_ECX + 0x1c) != '\\0')) {\n        *(in_ECX + 0x16) = 0;\n    }\n    if ((*(in_ECX + 0x17) != '\\0') && (*(in_ECX + 0x1d) != '\\0')) {\n        *(in_ECX + 0x17) = 0;\n    }\n    if ((*(in_ECX + 0x18) != '\\0') && (*(in_ECX + 0x1e) != '\\0')) {\n        *(in_ECX + 0x18) = 0;\n    }\n    if (*(in_ECX + 0x20) == 0) {\n        fcn.00469b24();\n        pcVar1 = _sym.imp.USER32.dll_GetAsyncKeyState;\n        noname_2 = 0xa0;\n        uVar3 = (*_sym.imp.USER32.dll_GetAsyncKeyState)();\n        pcVar2 = _sym.imp.USER32.dll_GetKeyState;\n        if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*_sym.imp.USER32.dll_GetKeyState)(0xa0),  (uVar3 & 0x8000) != 0)) &&\n           (*(in_ECX + 0x1a) == '\\0')) {\n            uVar9 = 0xa0;\n            fcn.0046b1fd(0xa0);\n            fcn.0046aaba(&var_ch, uVar9, noname_2, unaff_EDI, unaff_EBX, unaff_ESI, lpKeyState, in_stack_fffffef4, \n                         in_stack_fffffef8, in_stack_fffffefc, _var_fch, stack0xffffff04, in_stack_ffffff08, \n                         in_stack_ffffff0c, in_stack_ffffff10, in_stack_ffffff14, in_stack_ffffff18, in_stack_ffffff1c, \n                         in_stack_ffffff20, in_stack_ffffff24, in_stack_ffffff28, in_stack_ffffff2c, in_stack_ffffff30, \n                         in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40, in_stack_ffffff44, \n                         _auStack184, stack0xffffff4c, in_stack_ffffff50);\n        }\n        uVar9 = 0xa1;\n        uVar3 = (*pcVar1)();\n        if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*pcVar2)(0xa1),  (uVar3 & 0x8000) != 0)) && (*(in_ECX + 0x1b) == '\\0')\n           ) {\n            uVar8 = 0xa1;\n            fcn.0046b1fd(0xa1);\n            fcn.0046aaba(&var_ch, uVar8, uVar9, noname_2, unaff_EDI, unaff_EBX, unaff_ESI, lpKeyState, in_stack_fffffef4\n                         , in_stack_fffffef8, in_stack_fffffefc, _var_fch, stack0xffffff04, in_stack_ffffff08, \n                         in_stack_ffffff0c, in_stack_ffffff10, in_stack_ffffff14, in_stack_ffffff18, in_stack_ffffff1c, \n                         in_stack_ffffff20, in_stack_ffffff24, in_stack_ffffff28, in_stack_ffffff2c, in_stack_ffffff30, \n                         in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40, in_stack_ffffff44, \n                         _auStack184, stack0xffffff4c);\n        }\n        uVar8 = 0x11;\n        uVar3 = (*pcVar1)();\n        if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*pcVar2)(0x11),  (uVar3 & 0x8000) != 0)) && (*(in_ECX + 0x1c) == '\\0')\n           ) {\n            uVar7 = 0x11;\n            fcn.0046b1fd(0x11);\n            fcn.0046aaba(&var_ch, uVar7, uVar8, uVar9, noname_2, unaff_EDI, unaff_EBX, unaff_ESI, lpKeyState, \n                         in_stack_fffffef4, in_stack_fffffef8, in_stack_fffffefc, _var_fch, stack0xffffff04, \n                         in_stack_ffffff08, in_stack_ffffff0c, in_stack_ffffff10, in_stack_ffffff14, in_stack_ffffff18, \n                         in_stack_ffffff1c, in_stack_ffffff20, in_stack_ffffff24, in_stack_ffffff28, in_stack_ffffff2c, \n                         in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40, \n                         in_stack_ffffff44, _auStack184);\n        }\n        uVar7 = 0x12;\n        uVar3 = (*pcVar1)();\n        if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*pcVar2)(0x12),  (uVar3 & 0x8000) != 0)) && (*(in_ECX + 0x1d) == '\\0')\n           ) {\n            uVar6 = 0x12;\n            fcn.0046b1fd(0x12);\n            fcn.0046aaba(&var_ch, uVar6, uVar7, uVar8, uVar9, noname_2, unaff_EDI, unaff_EBX, unaff_ESI, lpKeyState, \n                         in_stack_fffffef4, in_stack_fffffef8, in_stack_fffffefc, _var_fch, stack0xffffff04, \n                         in_stack_ffffff08, in_stack_ffffff0c, in_stack_ffffff10, in_stack_ffffff14, in_stack_ffffff18, \n                         in_stack_ffffff1c, in_stack_ffffff20, in_stack_ffffff24, in_stack_ffffff28, in_stack_ffffff2c, \n                         in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40, \n                         in_stack_ffffff44);\n        }\n        uVar6 = 0x5b;\n        uVar3 = (*pcVar1)();\n        if ((((uVar3 & 0x8000) != 0) || (uVar3 = (*pcVar2)(0x5b),  (uVar3 & 0x8000) != 0)) && (*(in_ECX + 0x1e) == '\\0')\n           ) {\n            noname_1 = 0x5b;\n            fcn.0046b1fd(0x5b);\n            fcn.0046aaba(&var_ch, noname_1, uVar6, uVar7, uVar8, uVar9, noname_2, unaff_EDI, unaff_EBX, unaff_ESI, \n                         lpKeyState, in_stack_fffffef4, in_stack_fffffef8, in_stack_fffffefc, _var_fch, stack0xffffff04\n                         , in_stack_ffffff08, in_stack_ffffff0c, in_stack_ffffff10, in_stack_ffffff14, in_stack_ffffff18\n                         , in_stack_ffffff1c, in_stack_ffffff20, in_stack_ffffff24, in_stack_ffffff28, in_stack_ffffff2c\n                         , in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40\n                        );\n        }\n    }\n    else {\n        iVar4 = (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n        if (iVar4 != 0) {\n            (*_sym.imp.USER32.dll_SetKeyboardState)(&lpKeyState);\n        }\n    }\n    return;\n}\n",
        "token_count": 2423
    },
    "0046a0e3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046a0e3(uint arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint arg_8h_00;\n    int16_t *piVar4;\n    int32_t in_ECX;\n    uint32_t unaff_ESI;\n    int32_t arg_8h_01;\n    int32_t arg_8h_02;\n    int32_t in_stack_ffffffb8;\n    \n    *(in_ECX + 0x20) = arg_ch;\n    fcn.0046b04d(arg_ch, 1);\n    if (*(in_ECX + 8) == '\\x01') {\n        in_stack_ffffffb8 = 0x14;\n        uVar2 = fcn.0046a90b(0x14, 0);\n        unaff_ESI = unaff_ESI & 0xffffff00 | uVar2;\n        arg_8h_00 = fcn.00469b97(&stack0xffffffc4);\n        fcn.00469b35(arg_8h_00);\n    }\n    arg_8h_01 = 0;\n    fcn.00407c18(0x40);\n    while( true ) {\n        arg_8h_02 = arg_8h_01;\n        piVar4 = fcn.004058ca(arg_8h_01);\n        iVar1 = *piVar4;\n        if (iVar1 == 0) break;\n        arg_8h_01 = arg_8h_01 + 1;\n        fcn.00469e5d();\n        if (iVar1 == 0x21) {\n            *(in_ECX + 0x17) = 1;\n        }\n        else if (iVar1 == 0x23) {\n            *(in_ECX + 0x18) = 1;\n        }\n        else if (iVar1 == 0x2b) {\n            *(in_ECX + 0x14) = 1;\n        }\n        else if (iVar1 == 0x5e) {\n            *(in_ECX + 0x16) = 1;\n        }\n        else if ((iVar1 == 0x7b) && (cVar3 = fcn.00403555(&stack0xffffffc8, &stack0xffffffb4),  cVar3 != '\\0')) {\n            arg_8h_01 = in_stack_ffffffb8;\n            if (unaff_ESI != 0) {\n                fcn.0046a360(&stack0xffffffc8);\n                arg_8h_01 = in_stack_ffffffb8;\n            }\n            *(in_ECX + 0x14) = 0;\n            *(in_ECX + 0x18) = 0;\n            in_stack_ffffffb8 = arg_8h_01;\n        }\n        else {\n            fcn.0046a242(arg_8h_02, 1);\n            *(in_ECX + 0x14) = 0;\n            *(in_ECX + 0x18) = 0;\n        }\n    }\n    if (*(in_ECX + 8) == '\\x01') {\n        fcn.0046abf8(&stack0xffffffc0);\n        fcn.0046a90b(0x14, in_stack_ffffffb8);\n    }\n    fcn.0046b04d(*(in_ECX + 0x20), 0);\n    fcn.0040b1ff();\n    return;\n}\n",
        "token_count": 785
    },
    "0046a2b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046a2b4(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint arg_8h_00;\n    uint16_t *puVar4;\n    int32_t in_ECX;\n    int32_t arg_8h_01;\n    uint var_eh;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = arg_ch;\n    *(in_ECX + 0x20) = arg_ch;\n    fcn.0046b04d(arg_ch, 1);\n    arg_ch = arg_ch & 0xffffff00;\n    var_8h = 0;\n    var_4h._0_2_ = 0;\n    if (*(in_ECX + 8) == '\\x01') {\n        uVar3 = fcn.0046a90b(0x14, 0);\n        arg_ch = uVar2 & 0xffffff00 | uVar3;\n        arg_8h_00 = fcn.00469b97(&var_eh);\n        fcn.00469b35(arg_8h_00);\n    }\n    arg_8h_01 = 0;\n    while( true ) {\n        puVar4 = fcn.004058ca(arg_8h_01);\n        uVar1 = *puVar4;\n        if (uVar1 == 0) break;\n        arg_8h_01 = arg_8h_01 + 1;\n        fcn.00469e5d();\n        fcn.0046a242(uVar1, 1);\n        *(in_ECX + 0x14) = 0;\n        *(in_ECX + 0x18) = 0;\n    }\n    if (*(in_ECX + 8) == '\\x01') {\n        fcn.0046abf8(&var_8h);\n        fcn.0046a90b(0x14, arg_ch);\n    }\n    fcn.0046b04d(*(in_ECX + 0x20), 0);\n    return;\n}\n",
        "token_count": 490
    },
    "0046a360": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_5h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046a360(uint arg_8h)\n\n{\n    bool bVar1;\n    bool bVar2;\n    char cVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    uint16_t *puVar6;\n    char *pcVar7;\n    uint32_t uVar8;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    int32_t arg_ch;\n    uint *arg_8h_00;\n    uint unaff_retaddr;\n    uint *arg_8h_01;\n    uint uVar9;\n    uint *noname_2;\n    uint in_stack_ffffff94;\n    uint var_64h;\n    uint in_stack_ffffff9c;\n    uint in_stack_ffffffa0;\n    uint in_stack_ffffffa4;\n    uint in_stack_ffffffa8;\n    uint in_stack_ffffffac;\n    uint in_stack_ffffffb0;\n    uint in_stack_ffffffb4;\n    uint32_t var_44h;\n    uint in_stack_ffffffbc;\n    uint in_stack_ffffffc0;\n    uint in_stack_ffffffc4;\n    uint var_34h;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint var_24h;\n    uint in_stack_ffffffdc;\n    uint32_t in_stack_ffffffe0;\n    uint var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uchar auStack12 [3];\n    uint var_5h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    bVar2 = false;\n    bVar1 = false;\n    auStack12 = auStack12 & 0xffff;\n    _auStack12 = auStack12;\n    fcn.00469b24();\n    var_14h = 1;\n    fcn.0040c25d();\n    fcn.0040c25d();\n    cVar3 = fcn.00403555(&var_44h, &var_ch);\n    iVar5 = var_ch;\n    arg_ch = 1;\n    if (cVar3 != '\\0') {\n        while ((piVar4 = fcn.004058ca(iVar5),  *piVar4 == 0x20 || (piVar4 = fcn.004058ca(iVar5),  *piVar4 == 9))) {\n            iVar5 = iVar5 + 1;\n        }\n        var_ch = iVar5;\n        fcn.00403555(&var_34h, &var_ch);\n        iVar5 = fcn.004249b8(var_34h, 0x4c2384);\n        arg_ch = 1;\n        if (iVar5 == 0) {\n            bVar2 = true;\n            bVar1 = false;\n        }\n        else {\n            iVar5 = fcn.004249b8(var_34h, L\"DOWN\");\n            if (iVar5 == 0) {\n                bVar2 = false;\n                bVar1 = true;\n            }\n            else {\n                iVar5 = fcn.004249b8(var_34h, 0x4c6734);\n                if (iVar5 == 0) {\n                    _auStack12 = CONCAT13(1, auStack12);\n                }\n                else {\n                    iVar5 = fcn.004249b8(var_34h, 0x4c673c);\n                    if (iVar5 == 0) {\n                        auStack12 = CONCAT12(1, auStack12._0_2_);\n                        _auStack12 = _auStack12 & 0xff000000 | auStack12;\n                    }\n                    else {\n                        unaff_EDI = NULL;\n                        piVar4 = fcn.0040660f(0);\n                        if (*piVar4 == 0x30) {\n                            piVar4 = fcn.0040660f(1);\n                            if (*piVar4 != 0x78) {\n                                unaff_EDI = 0x1;\n                                piVar4 = fcn.0040660f(1);\n                                if (*piVar4 != 0x58) goto code_r0x0046a4ea;\n                            }\n                            fcn.0040ad22(0, 2);\n                            fcn.00469d27();\n                            piVar4 = fcn.0040660f(0);\n                            if (*piVar4 == 0x30) {\n                                uVar9 = 0x4c6744;\n                            }\n                            else {\n                                uVar9 = 0x4c674c;\n                            }\n                            fcn.0046b22b(&var_64h, uVar9, 1);\n                            unaff_EDI = &var_64h;\n                            fcn.004084e7(unaff_EDI);\n                            arg_ch = var_14h;\n                        }\n                        else {\ncode_r0x0046a4ea:\n                            arg_ch = fcn.00426261(var_34h);\n                            if (arg_ch < 0) {\n                                arg_ch = 0;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    do {\n        uVar8 = var_44h;\n        iVar5 = fcn.004249b8(*(var_10h * 4 + 0x4b1200), var_44h);\n        if (iVar5 == 0) break;\n        var_10h = var_10h + 1;\n    } while (var_10h < 99);\n    if (var_10h == 99) {\n        puVar6 = fcn.0040660f(0);\n        fcn.0046b198(*puVar6);\n        if (!bVar1) {\n            if (!bVar2) {\n                fcn.0040660f(0);\ncode_r0x0046a7cc:\n                fcn.0046a242(unaff_EDI, unaff_ESI);\n                goto code_r0x0046a84b;\n            }\n            goto code_r0x0046a846;\n        }\n        goto code_r0x0046a64a;\n    }\n    if (*(var_10h + 0x4b1198) == '\\0') {\n        fcn.0046b1fd(uVar8 & 0xffffff00 | str._f_b_b..__reepqrstuvwxyz________t__[var_10h]);\n        if (!bVar1) {\n            if (!bVar2) {\n                uVar8 = var_10h & 0xffffff00 | str._f_b_b..__reepqrstuvwxyz________t__[var_10h];\n                if (var_5h == '\\0') {\n                    if (auStack12[2] == '\\0') {\n                        fcn.0046a8a0(uVar8, arg_ch);\n                        goto code_r0x0046a84b;\n                    }\n                    uVar9 = 0;\n                }\n                else {\n                    uVar9 = 1;\n                }\n                fcn.0046a90b(uVar8, uVar9);\n                goto code_r0x0046a84b;\n            }\n            goto code_r0x0046a846;\n        }\n        goto code_r0x0046a64a;\n    }\n    // switch table (15 cases) at 0x46a864\n    switch(str._f_b_b..__reepqrstuvwxyz________t__[var_10h]) {\n    case 0:\n        if (*(in_ECX + 0x1c) != '\\0') goto code_r0x0046a84b;\n        fcn.0046b1fd(0x11);\n        *(in_ECX + 0x1c) = 1;\n        break;\n    case 1:\n        if (*(in_ECX + 0x1c) == '\\0') goto code_r0x0046a84b;\n        fcn.0046b1fd(0x11);\n        *(in_ECX + 0x1c) = 0;\n        goto code_r0x0046a846;\n    case 2:\n        if (*(in_ECX + 0x1d) != '\\0') goto code_r0x0046a84b;\n        fcn.0046b1fd(0x12);\n        goto code_r0x0046a646;\n    case 3:\n        if (*(in_ECX + 0x1d) == '\\0') goto code_r0x0046a84b;\n        fcn.0046b1fd(0x12);\ncode_r0x0046a5f7:\n        *(in_ECX + 0x1d) = 0;\n        goto code_r0x0046a846;\n    case 4:\n        if (*(in_ECX + 0x1a) != '\\0') goto code_r0x0046a84b;\n        fcn.0046b1fd(0x10);\n        goto code_r0x0046a6f8;\n    case 5:\n        if (*(in_ECX + 0x1a) == '\\0') goto code_r0x0046a84b;\n        fcn.0046b1fd(0x10);\ncode_r0x0046a69f:\n        *(in_ECX + 0x1a) = 0;\n        goto code_r0x0046a846;\n    case 6:\n        if (*(in_ECX + 0x1e) != '\\0') goto code_r0x0046a84b;\n        fcn.0046b1fd(0x5b);\n        *(in_ECX + 0x1e) = 1;\n        break;\n    case 7:\n        if (*(in_ECX + 0x1e) == '\\0') goto code_r0x0046a84b;\n        fcn.0046b1fd(0x5b);\n        *(in_ECX + 0x1e) = 0;\n        goto code_r0x0046a846;\n    case 8:\n        if (*(in_ECX + 0x1f) != '\\0') goto code_r0x0046a84b;\n        fcn.0046b1fd(0x5c);\n        *(in_ECX + 0x1f) = 1;\n        break;\n    case 9:\n        if (*(in_ECX + 0x1f) == '\\0') goto code_r0x0046a84b;\n        fcn.0046b1fd(0x5c);\n        *(in_ECX + 0x1f) = 0;\n        goto code_r0x0046a846;\n    case 10:\n        if (*(in_ECX + 0x20) != 0) goto code_r0x0046a7cc;\n        if (*(in_ECX + 0x1d) == '\\0') {\n            uVar9 = 0x12;\n            fcn.0046b1fd(0x12);\n            fcn.0046a975(&var_24h, uVar9, unaff_EDI, unaff_ESI, unaff_EBX, in_stack_ffffff94, var_64h, in_stack_ffffff9c\n                         , in_stack_ffffffa0, in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, in_stack_ffffffb0\n                         , in_stack_ffffffb4, var_44h, in_stack_ffffffbc, in_stack_ffffffc0, in_stack_ffffffc4, var_34h\n                         , in_stack_ffffffcc, in_stack_ffffffd0, in_stack_ffffffd4, var_24h, in_stack_ffffffdc, \n                         in_stack_ffffffe0, in_ECX, 1, var_10h, var_ch, _auStack12, stack0xfffffff8);\n        }\n        arg_8h_00 = NULL;\n        while (unaff_EDI = arg_8h_00,  piVar4 = fcn.0040660f(arg_8h_00),  *piVar4 != 0) {\n            noname_2 = arg_8h_00;\n            pcVar7 = fcn.0040660f(arg_8h_00);\n            uVar8 = *pcVar7 + 0x30;\n            fcn.0046b1fd(uVar8);\n            arg_8h_01 = &var_24h;\n            fcn.0046a975(arg_8h_01, uVar8, noname_2, unaff_EDI, unaff_ESI, unaff_EBX, in_stack_ffffff94, var_64h, \n                         in_stack_ffffff9c, in_stack_ffffffa0, in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, \n                         in_stack_ffffffb0, in_stack_ffffffb4, var_44h, in_stack_ffffffbc, in_stack_ffffffc0, \n                         in_stack_ffffffc4, var_34h, in_stack_ffffffcc, in_stack_ffffffd0, in_stack_ffffffd4, var_24h, \n                         in_stack_ffffffdc, in_stack_ffffffe0, in_ECX, 1, var_10h, var_ch, _auStack12);\n            unaff_ESI = &var_24h;\n            fcn.0046aaba(unaff_ESI, arg_8h_01, uVar8, noname_2, unaff_EDI, unaff_ESI, unaff_EBX, in_stack_ffffff94, \n                         var_64h, in_stack_ffffff9c, in_stack_ffffffa0, in_stack_ffffffa4, in_stack_ffffffa8, \n                         in_stack_ffffffac, in_stack_ffffffb0, in_stack_ffffffb4, var_44h, in_stack_ffffffbc, \n                         in_stack_ffffffc0, in_stack_ffffffc4, var_34h, in_stack_ffffffcc, in_stack_ffffffd0, \n                         in_stack_ffffffd4, var_24h, in_stack_ffffffdc, in_stack_ffffffe0, in_ECX, 1, var_10h, var_ch);\n            arg_8h_00 = arg_8h_00 + 1;\n        }\n        if (*(in_ECX + 0x1d) != '\\0') goto code_r0x0046a84b;\n        fcn.0046b1fd(0x12);\ncode_r0x0046a846:\n        fcn.0046aaba(unaff_EDI, unaff_ESI, unaff_EBX, in_stack_ffffff94, var_64h, in_stack_ffffff9c, in_stack_ffffffa0, \n                     in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, in_stack_ffffffb0, in_stack_ffffffb4, \n                     var_44h, in_stack_ffffffbc, in_stack_ffffffc0, in_stack_ffffffc4, var_34h, in_stack_ffffffcc, \n                     in_stack_ffffffd0, in_stack_ffffffd4, var_24h, in_stack_ffffffdc, in_stack_ffffffe0, in_ECX, 1, \n                     var_10h, var_ch, _auStack12, stack0xfffffff8, unaff_EBP, unaff_retaddr);\n        goto code_r0x0046a84b;\n    case 0xb:\n        uVar9 = 0xd;\n        fcn.0046b1fd(0xd);\n        in_stack_ffffffe0 = in_stack_ffffffe0 & 0xff000000 | CONCAT12(1, in_stack_ffffffe0);\n        if (!bVar1) {\n            if (!bVar2) {\ncode_r0x0046a606:\n                fcn.0046a975(&var_24h, uVar9, unaff_EDI, unaff_ESI, unaff_EBX, in_stack_ffffff94, var_64h, \n                             in_stack_ffffff9c, in_stack_ffffffa0, in_stack_ffffffa4, in_stack_ffffffa8, \n                             in_stack_ffffffac, in_stack_ffffffb0, in_stack_ffffffb4, var_44h, in_stack_ffffffbc, \n                             in_stack_ffffffc0, in_stack_ffffffc4, var_34h, in_stack_ffffffcc, in_stack_ffffffd0, \n                             in_stack_ffffffd4, var_24h, in_stack_ffffffdc, in_stack_ffffffe0, in_ECX, 1, var_10h, \n                             var_ch, _auStack12, stack0xfffffff8);\n            }\n            goto code_r0x0046a846;\n        }\n        break;\n    case 0xc:\n        uVar9 = 0x12;\n        fcn.0046b1fd(0x12);\n        if (!bVar1) {\n            if (!bVar2) goto code_r0x0046a606;\n            if (*(in_ECX + 0x1d) == '\\0') goto code_r0x0046a84b;\n            goto code_r0x0046a5f7;\n        }\n        if (*(in_ECX + 0x1d) != '\\0') goto code_r0x0046a84b;\ncode_r0x0046a646:\n        *(in_ECX + 0x1d) = 1;\n        break;\n    case 0xd:\n        uVar9 = 0xa0;\n        fcn.0046b1fd(0xa0);\n        if (!bVar1) {\n            if (!bVar2) goto code_r0x0046a606;\n            if (*(in_ECX + 0x1a) == '\\0') goto code_r0x0046a84b;\n            goto code_r0x0046a69f;\n        }\n        if (*(in_ECX + 0x1a) != '\\0') goto code_r0x0046a84b;\ncode_r0x0046a6f8:\n        *(in_ECX + 0x1a) = 1;\n        break;\n    case 0xe:\n        uVar9 = 0xa1;\n        fcn.0046b1fd(0xa1);\n        if (!bVar1) {\n            if (!bVar2) goto code_r0x0046a606;\n            if (*(in_ECX + 0x1b) == '\\0') goto code_r0x0046a84b;\n            *(in_ECX + 0x1b) = 0;\n            goto code_r0x0046a846;\n        }\n        if (*(in_ECX + 0x1b) != '\\0') goto code_r0x0046a84b;\n        *(in_ECX + 0x1b) = 1;\n        break;\n    default:\n        goto code_r0x0046a84b;\n    }\ncode_r0x0046a64a:\n    fcn.0046a975(&var_24h, unaff_ESI, unaff_EBX, in_stack_ffffff94, var_64h, in_stack_ffffff9c, in_stack_ffffffa0, \n                 in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, in_stack_ffffffb0, in_stack_ffffffb4, var_44h\n                 , in_stack_ffffffbc, in_stack_ffffffc0, in_stack_ffffffc4, var_34h, in_stack_ffffffcc, \n                 in_stack_ffffffd0, in_stack_ffffffd4, var_24h, in_stack_ffffffdc, in_stack_ffffffe0, in_ECX, 1, var_10h\n                 , var_ch, _auStack12, stack0xfffffff8, unaff_EBP, unaff_retaddr);\ncode_r0x0046a84b:\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return;\n}\n",
        "token_count": 4626
    },
    "0046a975": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0046a975(uint8_t *arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint arg_80h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint32_t extraout_EDX;\n    uint32_t uVar6;\n    uint uVar7;\n    uint lpKeyState;\n    uint pInputs;\n    ushort var_1ch;\n    uint var_1ah;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    uVar1 = *arg_8h;\n    uVar2 = arg_8h[7];\n    uVar4 = *(arg_8h + 8);\n    var_4h = var_4h & 0xffffff00 | uVar1;\n    arg_8h = arg_8h & 0xffffff00 | uVar2;\n    if ((((*(in_ECX + 0x20) == 0) || (uVar1 == 0x14)) || (uVar1 == 0x90)) || (uVar1 == 0x91)) {\n        if (uVar1 == 0xff) {\n            stack0xffffffe4 = 4;\n            var_14h = 0;\n            var_10h = 0;\n            pInputs = 1;\n            var_1ch = 0;\n            var_1ah._0_2_ = uVar4;\n            (*_sym.imp.USER32.dll_SendInput)(1, &pInputs, 0x1c);\n        }\n        else {\n            cVar3 = fcn.00469dab();\n            fcn.0046b144(var_4h, arg_8h, cVar3 == '\\x01');\n        }\n    }\n    else {\n        if (uVar1 == 0xff) {\n            uVar6 = 1;\n            uVar7 = 0x102;\n        }\n        else {\n            iVar5 = (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n            if (iVar5 != 0) {\n                *(&lpKeyState + uVar1) = *(&lpKeyState + uVar1) | 0x80;\n                (*_sym.imp.USER32.dll_SetKeyboardState)(&lpKeyState);\n            }\n            cVar3 = fcn.00469dab();\n            uVar6 = extraout_EDX;\n            if (cVar3 == '\\x01') {\n                uVar6 = uVar2 << 0x10 | 0x1000001;\n            }\n            if ((((*(in_ECX + 0x17) == '\\0') && (*(in_ECX + 0x1d) == '\\0')) && (uVar1 != 0x12)) ||\n               ((*(in_ECX + 0x16) != '\\0' || (*(in_ECX + 0x1c) != '\\0')))) {\n                uVar4 = uVar1;\n                uVar7 = 0x100;\n            }\n            else {\n                uVar6 = uVar6 | 0x20000000;\n                uVar4 = uVar1;\n                uVar7 = 0x104;\n            }\n        }\n        (*_sym.imp.USER32.dll_PostMessageW)(*(in_ECX + 0x20), uVar7, uVar4, uVar6);\n    }\n    fcn.00469b7e();\n    return;\n}\n",
        "token_count": 971
    },
    "0046aaba": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0046aaba(uint8_t *arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint arg_80h)\n\n{\n    ushort *puVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint32_t extraout_EDX;\n    uint32_t uVar6;\n    uint uVar7;\n    uint lpKeyState;\n    uint pInputs;\n    ushort var_1ch;\n    uint var_1ah;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    uVar2 = *arg_8h;\n    uVar3 = arg_8h[7];\n    puVar1 = arg_8h + 8;\n    var_4h = var_4h & 0xffffff00 | uVar2;\n    arg_8h = arg_8h & 0xffffff00 | uVar3;\n    if ((((*(in_ECX + 0x20) == 0) || (uVar2 == 0x14)) || (uVar2 == 0x90)) || (uVar2 == 0x91)) {\n        if (uVar2 == 0xff) {\n            stack0xffffffe4 = 6;\n            var_14h = 0;\n            var_10h = 0;\n            pInputs = 1;\n            var_1ch = 0;\n            var_1ah._0_2_ = *puVar1;\n            (*_sym.imp.USER32.dll_SendInput)(1, &pInputs, 0x1c);\n        }\n        else {\n            cVar4 = fcn.00469dab();\n            if (cVar4 == '\\x01') {\n                uVar7 = 3;\n            }\n            else {\n                uVar7 = 2;\n            }\n            fcn.0046b144(var_4h, arg_8h, uVar7);\n        }\n    }\n    else if (uVar2 != 0xff) {\n        iVar5 = (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n        if (iVar5 != 0) {\n            *(&lpKeyState + uVar2) = *(&lpKeyState + uVar2) ^ 0x80;\n            (*_sym.imp.USER32.dll_SetKeyboardState)(&lpKeyState);\n        }\n        cVar4 = fcn.00469dab();\n        uVar6 = extraout_EDX;\n        if (cVar4 == '\\x01') {\n            uVar6 = uVar3 << 0x10 | 0xc1000001;\n        }\n        if ((((*(in_ECX + 0x17) == '\\0') && (*(in_ECX + 0x1d) == '\\0')) && (uVar2 != 0x12)) ||\n           ((*(in_ECX + 0x16) != '\\0' || (*(in_ECX + 0x1c) != '\\0')))) {\n            uVar7 = 0x101;\n        }\n        else {\n            uVar6 = uVar6 | 0x20000000;\n            uVar7 = 0x105;\n        }\n        (*_sym.imp.USER32.dll_PostMessageW)(*(in_ECX + 0x20), uVar7, uVar2, uVar6);\n    }\n    fcn.00469b67();\n    return;\n}\n",
        "token_count": 955
    },
    "0046abf8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046abf8(char *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint uVar4;\n    uint lpKeyState;\n    uint var_f0h;\n    uint var_a5h;\n    uint8_t var_60h;\n    uint var_5fh;\n    \n    if ((((*arg_8h == '\\0') && (arg_8h[1] == '\\0')) && (arg_8h[2] == '\\0')) &&\n       ((arg_8h[3] == '\\0' && (arg_8h[4] == '\\0')))) {\n        return;\n    }\n    if ((*(in_ECX + 0x20) == 0) || (iVar2 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20)),  iVar2 == 0)) {\n        if (*arg_8h != '\\0') {\n            fcn.0046b144(0xa0, *(in_ECX + 0x27), 0);\n        }\n        if (arg_8h[1] != '\\0') {\n            fcn.0046b144(0xa1, *(in_ECX + 0x28), 0);\n        }\n        if (arg_8h[2] != '\\0') {\n            fcn.0046b144(0x11, *(in_ECX + 0x24), 0);\n        }\n        if (arg_8h[3] != '\\0') {\n            fcn.0046b144(0x12, *(in_ECX + 0x25), 0);\n        }\n        if (arg_8h[4] != '\\0') {\n            fcn.0046b144(0x5b, *(in_ECX + 0x29), 0);\n        }\n    }\n    else {\n        iVar2 = (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n        if (iVar2 != 0) {\n            if (*arg_8h != '\\0') {\n                var_f0h._0_1_ = var_f0h | 0x80;\n                var_60h = var_60h | 0x80;\n            }\n            if (arg_8h[1] != '\\0') {\n                var_f0h._0_1_ = var_f0h | 0x80;\n                var_5fh._0_1_ = var_5fh | 0x80;\n            }\n            if (arg_8h[2] != '\\0') {\n                var_f0h._1_1_ = var_f0h._1_1_ | 0x80;\n            }\n            if (arg_8h[3] != '\\0') {\n                var_f0h._2_1_ = var_f0h._2_1_ | 0x80;\n            }\n            if (arg_8h[4] != '\\0') {\n                var_a5h._0_1_ = var_a5h | 0x80;\n            }\n            (*_sym.imp.USER32.dll_SetKeyboardState)(&lpKeyState);\n        }\n        pcVar1 = _sym.imp.USER32.dll_PostMessageW;\n        if ((*arg_8h != '\\0') || (arg_8h[1] != '\\0')) {\n            (*_sym.imp.USER32.dll_PostMessageW)(*(in_ECX + 0x20), 0x100, 0x10, *(in_ECX + 0x26) << 0x10 | 1);\n        }\n        if (arg_8h[2] != '\\0') {\n            (*pcVar1)(*(in_ECX + 0x20), 0x100, 0x11, *(in_ECX + 0x24) << 0x10 | 1);\n        }\n        if (arg_8h[3] != '\\0') {\n            if ((arg_8h[2] == '\\0') && (*(in_ECX + 0x1c) == '\\0')) {\n                uVar3 = *(in_ECX + 0x25) << 0x10 | 0x20000001;\n                uVar4 = 0x104;\n            }\n            else {\n                uVar3 = *(in_ECX + 0x25) << 0x10 | 1;\n                uVar4 = 0x100;\n            }\n            (*pcVar1)(*(in_ECX + 0x20), uVar4, 0x12, uVar3);\n        }\n        if (arg_8h[4] != '\\0') {\n            (*pcVar1)(*(in_ECX + 0x20), 0x100, 0x5b, *(in_ECX + 0x29) << 0x10 | 1);\n        }\n    }\n    fcn.00469b7e();\n    return;\n}\n",
        "token_count": 1116
    },
    "0046add8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046add8(char *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint uVar4;\n    uint lpKeyState;\n    uint var_f0h;\n    uint var_a5h;\n    uint8_t var_60h;\n    uint var_5fh;\n    \n    if ((((*arg_8h == '\\0') && (arg_8h[1] == '\\0')) && (arg_8h[2] == '\\0')) &&\n       ((arg_8h[3] == '\\0' && (arg_8h[4] == '\\0')))) {\n        return;\n    }\n    if ((*(in_ECX + 0x20) == 0) || (iVar2 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20)),  iVar2 == 0)) {\n        if (*arg_8h != '\\0') {\n            fcn.0046b144(0xa0, *(in_ECX + 0x27), 2);\n        }\n        if (arg_8h[1] != '\\0') {\n            fcn.0046b144(0xa1, *(in_ECX + 0x28), 2);\n        }\n        if (arg_8h[2] != '\\0') {\n            fcn.0046b144(0x11, *(in_ECX + 0x24), 2);\n        }\n        if (arg_8h[3] != '\\0') {\n            fcn.0046b144(0x12, *(in_ECX + 0x25), 2);\n        }\n        if (arg_8h[4] != '\\0') {\n            fcn.0046b144(0x5b, *(in_ECX + 0x29), 2);\n        }\n    }\n    else {\n        iVar2 = (*_sym.imp.USER32.dll_GetKeyboardState)(&lpKeyState);\n        if (iVar2 != 0) {\n            if (*arg_8h != '\\0') {\n                var_f0h._0_1_ = var_f0h ^ 0x80;\n                var_60h = var_60h ^ 0x80;\n            }\n            if (arg_8h[1] != '\\0') {\n                var_f0h._0_1_ = var_f0h ^ 0x80;\n                var_5fh._0_1_ = var_5fh ^ 0x80;\n            }\n            if (arg_8h[2] != '\\0') {\n                var_f0h._1_1_ = var_f0h._1_1_ ^ 0x80;\n            }\n            if (arg_8h[3] != '\\0') {\n                var_f0h._2_1_ = var_f0h._2_1_ ^ 0x80;\n            }\n            if (arg_8h[4] != '\\0') {\n                var_a5h._0_1_ = var_a5h ^ 0x80;\n            }\n            (*_sym.imp.USER32.dll_SetKeyboardState)(&lpKeyState);\n        }\n        pcVar1 = _sym.imp.USER32.dll_PostMessageW;\n        if ((*arg_8h != '\\0') || (arg_8h[1] != '\\0')) {\n            (*_sym.imp.USER32.dll_PostMessageW)(*(in_ECX + 0x20), 0x101, 0x10, *(in_ECX + 0x26) << 0x10 | 0xc0000001);\n        }\n        if (arg_8h[2] != '\\0') {\n            (*pcVar1)(*(in_ECX + 0x20), 0x101, 0x11, *(in_ECX + 0x24) << 0x10 | 0xc0000001);\n        }\n        if (arg_8h[3] != '\\0') {\n            if ((arg_8h[2] == '\\0') && (*(in_ECX + 0x1c) == '\\0')) {\n                uVar3 = *(in_ECX + 0x25) << 0x10 | 0xe0000001;\n                uVar4 = 0x105;\n            }\n            else {\n                uVar3 = *(in_ECX + 0x25) << 0x10 | 0xc0000001;\n                uVar4 = 0x101;\n            }\n            (*pcVar1)(*(in_ECX + 0x20), uVar4, 0x12, uVar3);\n        }\n        if (arg_8h[4] != '\\0') {\n            (*pcVar1)(*(in_ECX + 0x20), 0x101, 0x5b, *(in_ECX + 0x29) << 0x10 | 0xc0000001);\n        }\n    }\n    fcn.00469b67();\n    return;\n}\n",
        "token_count": 1130
    },
    "0046b04d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b04d(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    int32_t lpdwProcessId;\n    \n    iVar2 = arg_8h;\n    if ((arg_8h != 0) || (*(in_ECX + 9) != '\\0')) {\n        arg_8h = 0;\n        lpdwProcessId = 0;\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        pcVar1 = _sym.imp.USER32.dll_AttachThreadInput;\n        if (arg_ch == '\\0') {\n            if ((iVar2 != 0) && ((*_sym.imp.USER32.dll_AttachThreadInput)(iVar3, *0x4d2ff4, 0),  *0x4d2ff0 != *0x4d2ff4)\n               ) {\n                (*pcVar1)(*0x4d2ff0, *0x4d2ff4, 0);\n            }\n            (*pcVar1)(iVar3, *0x4d2ff0, 0);\n        }\n        else {\n            uVar4 = (*_sym.imp.USER32.dll_GetForegroundWindow)(0);\n            *0x4d2ff0 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(uVar4);\n            iVar5 = (*_sym.imp.USER32.dll_AttachThreadInput)(iVar3, *0x4d2ff0, 1);\n            if (iVar2 != 0) {\n                *0x4d2ff4 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(iVar2, &lpdwProcessId);\n                if (*0x4d2ff0 != *0x4d2ff4) {\n                    arg_8h = (*_sym.imp.USER32.dll_AttachThreadInput)(*0x4d2ff0, *0x4d2ff4, 1);\n                }\n                lpdwProcessId = (*_sym.imp.USER32.dll_AttachThreadInput)(iVar3, *0x4d2ff4, 1);\n            }\n            if ((((iVar5 == 0) && (arg_8h == 0)) && (lpdwProcessId == 0)) &&\n               ((iVar3 == *0x4d2ff0 && (*0x4d2ff0 == *0x4d2ff4)))) {\n                *(in_ECX + 0x20) = 0;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 589
    },
    "0046b248": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046b248(uint arg_8h, uint hWnd)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t lpdwProcessId;\n    \n    iVar3 = 0;\n    piVar1 = in_ECX + 4;\n    do {\n        if (*piVar1 == 0) break;\n        iVar3 = iVar3 + 1;\n        piVar1 = piVar1 + 2;\n    } while (iVar3 < 0x10);\n    if (iVar3 == 0x10) {\n        uVar2 = 0;\n    }\n    else {\n        lpdwProcessId = in_ECX;\n        (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(hWnd, &lpdwProcessId);\n        uVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x438, 0, lpdwProcessId);\n        *(in_ECX + iVar3 * 8) = uVar2;\n        uVar2 = (*_sym.imp.KERNEL32.dll_VirtualAllocEx)(uVar2, 0, arg_8h, 0x1000, 4);\n        *(in_ECX + 4 + iVar3 * 8) = uVar2;\n    }\n    return uVar2;\n}\n",
        "token_count": 303
    },
    "0046b657": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046b657(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t **arg_14h)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    uint32_t *puVar6;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint uVar7;\n    uint uStack68;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    \n    fcn.00408e90();\n    puVar1 = *(arg_ch + 8);\n    uStack36 = puVar1[1];\n    uVar5 = *puVar1;\n    uStack32 = puVar1[2];\n    piStack28 = puVar1[3];\n    *piStack28 = *piStack28 + 1;\n    uStack40 = uVar5;\n    if (arg_8h == 1) {\n        fcn.0040b606(L\"REMOVE\");\n        uVar7 = 0;\n        piVar4 = piStack28;\n        iVar3 = fcn.0041d5dc(uVar5, uStack68, piStack28, uStack24, 0);\n        fcn.0040b1ff();\n        if (iVar3 == 0) {\n            if (*(arg_10h + 8) == 1) {\n                piVar4 = **(arg_10h + 4);\n                if (piVar4[3] == 6) {\n                    piVar4 = *piVar4;\n                }\n                cVar2 = fcn.0046b993(piVar4);\n                puVar6 = *arg_14h;\n                fcn.0040e8a0();\n                puVar6[3] = 1;\n                *puVar6 = cVar2 != '\\0';\n                goto code_r0x0046b8fb;\n            }\n        }\n        else {\n            fcn.0040b606(L\"KEYS\");\n            iVar3 = fcn.0041d5dc(uVar5, uStack24, uStack52, uStack48, 0);\n            fcn.0040b1ff();\n            if (iVar3 == 0) {\n                fcn.0046b90f(&stack0xffffff90);\n                fcn.00470b9e(&stack0xffffff8c);\n                fcn.00466f23();\n                fcn.0041fd94();\n                goto code_r0x0046b8fb;\n            }\n            fcn.0040b606(L\"EXISTS\");\n            iVar3 = fcn.0041d5dc(uVar5, uStack48, unaff_ESI, unaff_EBX, 0);\n            fcn.0040b1ff();\n            if (iVar3 == 0) {\n                if (*(arg_10h + 8) == 1) {\n                    piVar4 = **(arg_10h + 4);\n                    if (piVar4[3] == 6) {\n                        piVar4 = *piVar4;\n                    }\n                    iVar3 = fcn.0046b412(piVar4);\n                    puVar6 = *arg_14h;\n                    if (iVar3 == 0) {\n                        fcn.0040e8a0();\n                        *puVar6 = 0;\n                    }\n                    else {\n                        fcn.0040e8a0();\n                        *puVar6 = 1;\n                    }\n                    puVar6[3] = 1;\n                    goto code_r0x0046b8fb;\n                }\n            }\n            else {\n                fcn.0040b606(L\"APPEND\");\n                iVar3 = fcn.0041d5dc(uVar5, unaff_EBX, uStack68, piVar4, 0);\n                fcn.0040b1ff();\n                if (iVar3 != 0) goto code_r0x0046b8f8;\n                if (*(arg_10h + 8) == 1) {\n                    piVar4 = **(arg_10h + 4);\n                    if (piVar4[3] == 6) {\n                        piVar4 = *piVar4;\n                    }\n                    fcn.0046b356(piVar4, &stack0xffffff60);\n                    goto code_r0x0046b8fb;\n                }\n            }\n        }\n        uVar7 = 3;\n    }\n    else {\n        if ((arg_8h & 2) != 0) {\n            uVar7 = 0;\n            uStack44 = 0;\n            iVar3 = fcn.0046b3d3(&uStack40, &uStack44);\n            if (iVar3 == 0) {\n                puVar6 = NULL;\n            }\n            else {\n                puVar6 = *(iVar3 + 0x28);\n            }\n            if (puVar6 == NULL) {\n                uVar5 = fcn.00401f2d();\n                fcn.0040c5e7(uVar5);\n            }\n            else {\n                *arg_14h = puVar6;\n            }\n            goto code_r0x0046b8fb;\n        }\n        if ((arg_8h & 0xc) != 0) {\n            piVar4 = **(arg_10h + 4);\n            if (piVar4[3] == 6) {\n                piVar4 = *piVar4;\n            }\n            uVar7 = 0;\n            fcn.0046ba91(&uStack40, piVar4, 0);\n            goto code_r0x0046b8fb;\n        }\ncode_r0x0046b8f8:\n        uVar7 = 1;\n    }\ncode_r0x0046b8fb:\n    fcn.0040b1ff();\n    return uVar7;\n}\n",
        "token_count": 1338
    },
    "0046b90f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b90f(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_24h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.00466f23();\n    iVar3 = 0;\n    iVar1 = *(*(in_ECX + 0x10) + 8);\n    if (0 < iVar1) {\n        do {\n            iVar2 = **(*(*(in_ECX + 0x10) + 4) + iVar3 * 4);\n            if (*(iVar2 + 8) == 0) {\n                var_14h = *(iVar2 + 0x20);\n                var_ch = 0;\n                var_10h = *(iVar2 + 0x24);\n                var_8h = 2;\n                fcn.00466fef(&var_14h);\n            }\n            else {\n                fcn.0040890f(iVar2 + 0xc);\n                fcn.00466fef(&var_24h);\n            }\n            fcn.0040e8a0();\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar1);\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "0046ba91": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046ba91(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    int32_t *piVar3;\n    \n    fcn.00401ea8(8);\n    if (arg_10h == '\\0') {\n        arg_10h = 0;\n        iVar1 = fcn.0046b3d3(arg_8h, &fcn.0046ba91::arg_10h);\n        if (iVar1 != 0) {\n            piVar3 = iVar1 + 0x28;\n            fcn.0040c5e7(arg_ch);\n            goto code_r0x0046bb20;\n        }\n    }\n    iVar2 = fcn.0041fd5b(0x30, unaff_ESI);\n    iVar1 = 0x46bae2;\n    arg_10h = iVar2;\n    fcn.0040c25d();\n    *(iVar2 + 8) = 1;\n    if (iVar2 + 0xc != arg_8h) {\n        fcn.0040c1c3(arg_8h);\n        iVar1 = arg_8h;\n    }\n    iVar1 = fcn.0041fd5b(0x10, iVar1);\n    *(iVar1 + 8) = 0;\n    fcn.004119e0(arg_ch);\n    piVar3 = iVar2 + 0x28;\n    *piVar3 = iVar1;\n    fcn.00401c87(arg_10h);\ncode_r0x0046bb20:\n    return *piVar3;\n}\n",
        "token_count": 381
    },
    "0046bb7c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046bb7c(uint arg_8h, int16_t *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t *piVar4;\n    uint lpmi;\n    uint32_t var_34h;\n    uint var_30h;\n    int32_t var_28h;\n    int32_t hMenu;\n    int32_t var_18h;\n    int16_t *var_14h;\n    int32_t *var_8h;\n    \n    iVar2 = arg_10h;\n    if (arg_10h != -1) {\n        if (arg_10h < 7) {\n            return 0;\n        }\n        if (0x206 < arg_10h) {\n            return 0;\n        }\n    }\n    arg_8h_00 = fcn.0046bdc7();\n    if (arg_8h_00 == -1) {\n        return 0;\n    }\n    var_8h = in_ECX[arg_8h_00 + 0x6d];\n    lpmi = 0x30;\n    fcn.004222d0(&var_34h, 0, 0x2c);\n    if (iVar2 == -1) {\n        *var_8h = *in_ECX;\n        piVar4 = var_8h;\n    }\n    else {\n        arg_10h = -1;\n        cVar1 = fcn.0046c4b6(iVar2, &arg_10h);\n        piVar4 = var_8h;\n        if (cVar1 == '\\0') {\ncode_r0x0046bd08:\n            fcn.0046bd19(arg_8h_00);\n            return 0;\n        }\n        var_34h = 4;\n        iVar2 = *in_ECX[arg_10h + 0x6d];\n        *var_8h = iVar2;\n        iVar2 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(iVar2, arg_10h, 0, &lpmi);\n        if (((iVar2 == 0) || (*piVar4 = hMenu,  hMenu == 0)) ||\n           (iVar2 = (*_sym.imp.USER32.dll_IsMenu)(hMenu),  iVar2 == 0)) goto code_r0x0046bd08;\n    }\n    *(piVar4 + 5) = 0;\n    var_34h = 0x32;\n    var_30h = 0;\n    var_14h = arg_ch;\n    var_28h = arg_8h_00;\n    var_18h = arg_8h_00;\n    if (arg_8h == 0) {\n        if (*arg_ch == 0) {\n            var_30h = 0x800;\n        }\n        else if (arg_18h == 1) {\n            var_30h = 0x200;\n            *(piVar4 + 5) = 1;\n        }\n        *(piVar4 + 1) = 0;\n    }\n    else if (arg_8h == 1) {\n        iVar2 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n        if (iVar2 == 0) goto code_r0x0046bcf4;\n        var_34h = var_34h | 4;\n        *(piVar4 + 1) = 1;\n        hMenu = iVar2;\n    }\n    iVar2 = arg_14h;\n    if (((*(in_ECX + 1) != '\\0') && (*(in_ECX + 2) != '\\0')) && ((6 < arg_8h_00 && (*piVar4 == *in_ECX)))) {\n        iVar3 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*in_ECX);\n        if ((arg_14h == -1) || (iVar2 = arg_14h,  iVar3 + -4 < arg_14h + 1)) {\n            iVar2 = iVar3 + -4;\n        }\n    }\n    iVar2 = (*_sym.imp.USER32.dll_InsertMenuItemW)(*piVar4, iVar2, 1, &lpmi);\n    if (iVar2 != 0) {\n        in_ECX[0x275] = arg_8h_00;\n        return arg_8h_00;\n    }\ncode_r0x0046bcf4:\n    fcn.0046c19b(arg_8h_00);\n    return 0;\n}\n",
        "token_count": 1048
    },
    "0046bd19": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046bd19(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t *piVar1;\n    \n    if (0x206 < arg_8h) {\n        return;\n    }\n    piVar1 = in_ECX + (arg_8h + 0x6d) * 4;\n    if (*piVar1 != 0) {\n        fcn.0041e44a(*piVar1);\n    }\n    *piVar1 = 0;\n    if (arg_8h != *(in_ECX + 0x9d0)) {\n        return;\n    }\n    if (6 < arg_8h) {\n        do {\n            if (*piVar1 != 0) break;\n            arg_8h = arg_8h + -1;\n            piVar1 = piVar1 + -1;\n        } while (6 < arg_8h);\n        if (6 < arg_8h) goto code_r0x0046bd63;\n    }\n    arg_8h = 0;\ncode_r0x0046bd63:\n    *(in_ECX + 0x9d0) = arg_8h;\n    return;\n}\n",
        "token_count": 269
    },
    "0046bd70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0046bd70(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x8c) != 0) {\n        uVar1 = **(param_1 + 0x90);\n        fcn.004060ff();\n        *0x4d25f4 = 0;\n        return uVar1;\n    }\n    if (*(param_1 + 0xa0) == '\\0') {\n        if ((*0x4d18dc == 0) && (*0x4d25f4 < 100)) {\n            *0x4d25f4 = *0x4d25f4 + 1;\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 10;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(uVar1);\n    }\n    return 0;\n}\n",
        "token_count": 202
    },
    "0046bdc7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0046bdc7(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint unaff_EDI;\n    \n    iVar1 = *(param_1 + 0x9d0);\n    if (iVar1 < 0x206) {\n        puVar2 = fcn.0041fd5b(0x18, unaff_EDI);\n        fcn.0040c25d();\n        if (*(param_1 + 0x9d0) == 0) {\n            iVar4 = 7;\n        }\n        else {\n            iVar4 = *(param_1 + 0x9d0) + 1;\n        }\n        *(param_1 + 0x9d0) = iVar4;\ncode_r0x0046be33:\n        *(param_1 + 0x1b4 + iVar4 * 4) = puVar2;\n        *puVar2 = 0;\n        *(puVar2 + 1) = 0xff;\n    }\n    else {\n        iVar4 = 7;\n        if (6 < iVar1) {\n            piVar3 = param_1 + 0x1d0;\n            do {\n                if (*piVar3 == 0) break;\n                iVar4 = iVar4 + 1;\n                piVar3 = piVar3 + 1;\n            } while (iVar4 <= iVar1);\n            if (iVar4 <= iVar1) {\n                puVar2 = fcn.0041fd5b(0x18, unaff_EDI);\n                fcn.0040c25d();\n                goto code_r0x0046be33;\n            }\n        }\n        iVar4 = -1;\n    }\n    return iVar4;\n}\n",
        "token_count": 404
    },
    "0046be4e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046be4e(uint noname_0, uint noname_1, uint32_t hmenu, int32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *in_ECX;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint lpmii;\n    uint var_40h;\n    uint32_t var_38h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar8 = 0;\n    lpmii = 0x30;\n    fcn.004222d0(&var_40h, 0, 0x2c);\n    var_4h = -1;\n    var_40h = 1;\n    cVar3 = fcn.0046c4b6(hmenu & 0xffff, &var_4h);\n    iVar4 = var_4h;\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    if (var_4h == 3) {\n        *0x4d1350 = 2;\n        *0x4d1362 = 1;\n    }\n    else if (var_4h == 4) {\n        iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(*in_ECX, 4, 0, &lpmii);\n        if (iVar4 == 0) {\n            return 0;\n        }\n        uVar7 = var_38h & 8;\n        if (uVar7 == 0) {\n            var_38h = var_38h | 8;\n        }\n        else {\n            var_38h = var_38h ^ 8;\n        }\n        *0x4d1367 = uVar7 == 0;\n        (*_sym.imp.USER32.dll_SetMenuItemInfoW)(*in_ECX, 4, 0, &lpmii);\n        fcn.004057ae();\n        (*_sym.imp.KERNEL32.dll_Sleep)(500);\n    }\n    else {\n        if (hmenu >> 0x10 != 0) {\n            return 0;\n        }\n        if (arg_14h != 0) {\n            return 0;\n        }\n        if (*0x4d1367 != hmenu >> 0x10) {\n            return 0;\n        }\n        uVar1 = *in_ECX[var_4h + 0x6d];\n        if ((*(in_ECX + 7) == '\\0') || (*(in_ECX[var_4h + 0x6d] + 5) == '\\0')) {\n            if (*(in_ECX + 5) != '\\0') {\n                (*_sym.imp.USER32.dll_GetMenuItemInfoW)(uVar1, var_4h, 0, &lpmii);\n                if ((var_38h & 8) == 0) {\n                    var_38h = var_38h | 8;\n                }\n                else {\n                    var_38h = var_38h ^ 8;\n                }\n                (*_sym.imp.USER32.dll_SetMenuItemInfoW)(uVar1, iVar4, 0, &lpmii);\n            }\n        }\n        else {\n            iVar5 = (*_sym.imp.USER32.dll_GetMenuItemCount)(uVar1);\n            if (*(in_ECX + 1) != '\\0') {\n                iVar5 = iVar5 + -4;\n            }\n            if (iVar5 < 1) {\n                iVar6 = -1;\n            }\n            else {\n                do {\n                    iVar6 = (*_sym.imp.USER32.dll_GetMenuItemID)(uVar1, iVar8);\n                    iVar2 = iVar8;\n                    if (iVar6 == iVar4) goto joined_r0x0046bf99;\n                    iVar8 = iVar8 + 1;\n                } while (iVar8 < iVar5);\n            }\n            iVar2 = iVar8;\n            if (iVar6 == iVar4) {\njoined_r0x0046bf99:\n                do {\n                    var_14h = iVar2;\n                    var_8h = iVar8;\n                    iVar2 = var_14h + -1;\n                    iVar8 = var_8h;\n                    if (iVar2 < 0) break;\n                    var_ch = (*_sym.imp.USER32.dll_GetMenuItemID)(uVar1, iVar2);\n                    cVar3 = fcn.0046c4b6(var_ch, &var_10h);\n                    iVar8 = var_8h;\n                    iVar4 = var_4h;\n                } while ((cVar3 == '\\0') || (*(in_ECX[var_ch + 0x6d] + 5) != '\\0'));\n                do {\n                    iVar6 = iVar8;\n                    iVar8 = iVar6 + 1;\n                    if (iVar5 <= iVar8) break;\n                    var_ch = (*_sym.imp.USER32.dll_GetMenuItemID)(uVar1, iVar8);\n                    cVar3 = fcn.0046c4b6(var_ch, &var_10h);\n                    iVar4 = var_4h;\n                } while ((cVar3 == '\\0') || (*(in_ECX[var_ch + 0x6d] + 5) != '\\0'));\n                (*_sym.imp.USER32.dll_CheckMenuRadioItem)(uVar1, var_14h, iVar6, var_8h, 0x400);\n            }\n        }\n        fcn.0046bb28(iVar4);\n    }\n    return 1;\n}\n",
        "token_count": 1257
    },
    "0046c07f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046c07f(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    bool bVar1;\n    uint lpData;\n    uint var_3b8h;\n    uint var_3b4h;\n    uint var_3b0h;\n    uint var_3a8h;\n    \n    if (arg_ch != 1) {\n        return;\n    }\n    lpData = 0x3a8;\n    fcn.004222d0(&var_3b8h, 0, 0x3b4);\n    fcn.004057ae();\n    if (*0x4d1368 != '\\0') {\n        var_3b8h = arg_8h;\n        var_3b4h = 1;\n        var_3b0h = 2;\n        if (*0x4d1367 == '\\0') {\n            if (*(in_ECX + 9) == '\\0') {\n                if (*(in_ECX + 0x194) != '\\x01') goto code_r0x0046c17d;\n                var_3a8h = *(in_ECX + 0x19c);\n                *(in_ECX + 0x194) = 0;\n            }\n            else {\n                bVar1 = *(in_ECX + 0x195) == '\\0';\n                if (bVar1) {\n                    var_3a8h = *(in_ECX + 0x1b0);\n                }\n                else {\n                    var_3a8h = *(in_ECX + 0x19c);\n                }\n                *(in_ECX + 0x195) = bVar1;\n            }\n        }\n        else {\n            bVar1 = *(in_ECX + 0x194) != '\\x01';\n            if (bVar1) {\n                var_3a8h = *(in_ECX + 0x1a8);\n            }\n            else {\n                var_3a8h = *(in_ECX + 0x19c);\n            }\n            *(in_ECX + 0x194) = bVar1;\n        }\n        (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(1, &lpData);\n    }\ncode_r0x0046c17d:\n    (*_sym.imp.USER32.dll_KillTimer)(arg_8h, 1);\n    (*_sym.imp.USER32.dll_SetTimer)(arg_8h, 1, 0x2ee, 0);\n    return;\n}\n",
        "token_count": 560
    },
    "0046c19b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046c19b(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    int32_t unaff_ESI;\n    int32_t **ppiVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint *puStack68;\n    uint uStack64;\n    uint auStack60 [4];\n    int32_t iStack44;\n    \n    puStack68 = 0xffffffff;\n    cVar3 = fcn.0046c4b6(arg_8h, &puStack68);\n    if (((cVar3 != '\\0') && (iVar5 = 7,  6 < unaff_ESI)) && (unaff_ESI <= *(in_ECX + 0x9d0))) {\n        puStack68 = *(in_ECX + 0x1b4 + unaff_ESI * 4);\n        uVar8 = *puStack68;\n        if (*(puStack68 + 1) == '\\x01') {\n            uStack64 = 0x30;\n            iVar7 = unaff_ESI;\n            fcn.004222d0(auStack60, 0, 0x2c);\n            auStack60[0] = 4;\n            iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(uVar8, unaff_ESI, 0, &uStack64);\n            if (iVar4 == 0) {\n                return 0;\n            }\n            if ((iStack44 != 0) && (6 < *(in_ECX + 0x9d0))) {\n                ppiVar6 = in_ECX + 0x1d0;\n                unaff_ESI = iVar7;\n                iVar7 = iStack44;\n                do {\n                    piVar1 = *ppiVar6;\n                    if ((piVar1 != NULL) && (*piVar1 == iStack44)) {\n                        if (*(piVar1 + 1) == '\\x01') {\n                            iStack44 = iVar7;\n                            fcn.0046c19b(iVar5);\n                            iVar7 = iStack44;\n                        }\n                        else {\n                            (*_sym.imp.USER32.dll_DeleteMenu)(iStack44, iVar5, 0);\n                            *(*ppiVar6 + 1) = 0xff;\n                            **ppiVar6 = 0;\n                            *(*ppiVar6 + 5) = 0;\n                            fcn.0040ad22(0, 0xffffffff);\n                            iStack44 = iVar7;\n                            fcn.0046bd19(iVar5);\n                            iVar7 = iStack44;\n                        }\n                    }\n                    iVar5 = iVar5 + 1;\n                    ppiVar6 = ppiVar6 + 1;\n                } while (iVar5 <= *(in_ECX + 0x9d0));\n            }\n        }\n        puVar2 = puStack68;\n        iVar5 = (*_sym.imp.USER32.dll_DeleteMenu)(*puStack68, unaff_ESI, 0);\n        if (iVar5 != 0) {\n            *(puVar2 + 1) = 0xff;\n            *puVar2 = 0;\n            fcn.0040ad22(0, 0xffffffff);\n            fcn.0046bd19(unaff_ESI);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 763
    },
    "0046c405": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046c405(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_34h;\n    uint var_30h;\n    uint var_20h;\n    int32_t var_4h;\n    \n    var_4h = -1;\n    if (arg_8h == 0) {\n        *arg_ch = *0x4d1990;\n        uVar3 = 1;\n    }\n    else {\n        if ((((arg_8h != 5) && (arg_8h != 6)) &&\n            ((iVar4 = arg_8h,  arg_8h == 3 ||\n             ((arg_8h == 4 || (cVar2 = fcn.0046c4b6(arg_8h, &var_4h),  iVar4 = var_4h,  cVar2 != '\\0')))))) &&\n           ((iVar1 = *(iVar4 * 4 + 0x4d1b44),  iVar1 != 0 && (*(iVar1 + 4) != '\\0')))) {\n            var_34h = 0x30;\n            fcn.004222d0(&var_30h, 0, 0x2c);\n            var_30h = 4;\n            iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(**(iVar4 * 4 + 0x4d1b44), arg_8h, 0, &var_34h);\n            if (iVar4 != 0) {\n                *arg_ch = var_20h;\n                return 1;\n            }\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 400
    },
    "0046c4b6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046c4b6(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    *arg_ch = -1;\n    if ((((arg_8h < 0) && (arg_8h = *(in_ECX + 0x9d4),  arg_8h == -1)) || (*arg_ch = arg_8h,  0x206 < arg_8h)) ||\n       (*(in_ECX + 0x1b4 + arg_8h * 4) == 0)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 169
    },
    "0046c4ee": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046c4ee(uint *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t *arg_8h_00;\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *unaff_ESI;\n    int32_t *piVar5;\n    uint uVar6;\n    uint *puVar7;\n    uint32_t uStack84;\n    uint uStack80;\n    int32_t *piStack76;\n    int32_t *piStack68;\n    uint uStack64;\n    uint uStack60;\n    uint32_t uStack56;\n    uint32_t uStack52;\n    uint32_t uStack32;\n    int32_t *piStack28;\n    uint uStack24;\n    \n    uVar2 = fcn.00408fa0();\n    fcn.004070c2(uVar2);\n    arg_8h_00 = piStack68;\n    uStack84 = 0xffffffff;\n    if ((arg_8h == 0x5) || (arg_8h == 0x6)) {\ncode_r0x0046c71c:\n        uVar2 = 0;\n        goto code_r0x0046c71e;\n    }\n    if ((arg_8h == 0x3) || (arg_8h == 0x4)) {\n        arg_10h = 0xffffffff;\n        if (arg_8h == 0x3) {\n            if (*piStack68 == 0) {\n                uVar2 = 0x4d19ac;\n                goto code_r0x0046c575;\n            }\ncode_r0x0046c58d:\n            fcn.004084e7(piStack68);\n        }\n        else if (arg_8h == 0x4) {\n            if (*piStack68 != 0) goto code_r0x0046c58d;\n            uVar2 = 0x4d19bc;\ncode_r0x0046c575:\n            fcn.0040c1c3(uVar2);\n        }\n        if ((*(arg_8h * 4 + 0x4d1b44) == 0) || (*arg_8h_00 == 0)) goto code_r0x0046c71c;\n    }\n    else {\n        puVar7 = unaff_ESI;\n        cVar1 = fcn.0046c4b6(arg_8h, &uStack84);\n        arg_8h = puVar7;\n        unaff_ESI = arg_8h;\n        if (cVar1 == '\\0') goto code_r0x0046c71c;\n    }\n    puVar7 = *(arg_8h * 4 + 0x4d1b44);\n    uVar2 = fcn.0041fd8b(0x208);\n    fcn.004070c2(uVar2);\n    piStack68 = 0x30;\n    fcn.004222d0(&uStack64, 0, 0x2c);\n    uStack32 = uStack84;\n    uStack64 = 0x11;\n    piStack28 = 0x104;\n    iVar3 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(*unaff_ESI, arg_8h, 0, &piStack68);\n    if ((iVar3 == 0) || ((uStack56 & 0x800) != 0)) {\ncode_r0x0046c6f9:\n        uVar2 = 0;\n    }\n    else {\n        uStack84 = uStack52 & 0x1000;\n        if (arg_10h < 0) {\n            if (*arg_8h_00 == 0) goto code_r0x0046c6f9;\n            arg_10h = 0;\n            uStack60 = 0x10;\n            piStack28 = arg_8h_00;\n            uStack24 = fcn.004248f3(arg_8h_00);\n        }\n        else {\n            uVar4 = uStack52;\n            if ((arg_10h & 0x40) != 0) {\n                uVar4 = uStack52 & 0xfffffffc;\n            }\n            if (arg_10h < '\\0') {\n                uVar4 = uVar4 | 3;\n            }\n            if ((arg_10h & 1) != 0) {\n                uVar4 = uVar4 | 8;\n            }\n            if ((arg_10h & 4) != 0) {\n                uVar4 = uVar4 & 0xfffffff7;\n            }\n            if ((arg_10h & 0x100) != 0) {\n                uVar4 = uVar4 | 0x80;\n            }\n            if (((uStack52 & 8) != 0) && ((arg_10h & 4) == 0)) {\n                uVar4 = uVar4 | 8;\n            }\n            uStack60 = 1;\n            uStack52 = uVar4;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_SetMenuItemInfoW)(*puVar7, arg_8h, 0, &uStack64);\n        if (iVar3 == 0) goto code_r0x0046c6f9;\n        if (0 < arg_10h) {\n            if ((arg_10h & 0x200) == 0) {\n                if (uStack84 == 0) goto code_r0x0046c6f2;\n                arg_8h = 0xffffffff;\n            }\n            iVar3 = (*_sym.imp.USER32.dll_SetMenuDefaultItem)(*puVar7, arg_8h, 0);\n            if (iVar3 == 0) goto code_r0x0046c6f9;\n        }\ncode_r0x0046c6f2:\n        uVar2 = 1;\n    }\n    *piStack76 = *piStack76 + -1;\n    if (*piStack76 == 0) {\n        uVar6 = 4;\n        fcn.0041fd4d(piStack76);\n        fcn.0041fd94(uStack80, piStack76, uVar6);\n    }\ncode_r0x0046c71e:\n    *piStack68 = *piStack68 + -1;\n    if (*piStack68 == 0) {\n        uVar6 = 4;\n        piVar5 = piStack68;\n        fcn.0041fd4d(piStack68);\n        fcn.0041fd94(arg_8h_00, piVar5, uVar6);\n    }\n    return uVar2;\n}\n",
        "token_count": 1491
    },
    "0046c88e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046c88e(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    \n    if (*(param_1 + 0x1a4) == 0) {\n        *(param_1 + 0x1a4) = *0x4d13e8;\n    }\n    arg_8h = param_1 + 0x1a8;\n    fcn.00406092(arg_8h, param_1 + 0x1ac);\n    iVar1 = *(param_1 + 0x50);\n    if (iVar1 != 0) {\n        iVar1 = fcn.0046c792(*(param_1 + 0x14), *(param_1 + 0x4c), param_1 + 0x1ac);\n        *arg_8h = iVar1;\n        iVar1 = *(param_1 + 0x50);\n    }\n    if ((iVar1 == 0) || (*arg_8h == 0)) {\n        *arg_8h = *(param_1 + 0x1a4);\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "0046c8e9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046c8e9(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if ((arg_8h & 1) == 0) {\n        if ((arg_8h & 2) != 0) {\n            fcn.00404b1d();\n            uVar1 = 0xfffffffc;\n            goto code_r0x0046c917;\n        }\n    }\n    else {\n        fcn.004056c2();\n        uVar1 = 0xfffffffd;\ncode_r0x0046c917:\n        fcn.00404cf7(uVar1);\n    }\n    if ((arg_8h & 4) == 0) {\n        if ((arg_8h & 8) == 0) goto code_r0x0046c953;\n        *0x4d1999 = 0;\n        if (*0x4d1368 == '\\x01') {\n            fcn.004056c2();\n        }\n        uVar1 = 0xfffffffa;\n    }\n    else {\n        *0x4d1999 = 1;\n        uVar1 = 0xfffffffb;\n    }\n    fcn.00404cf7(uVar1);\ncode_r0x0046c953:\n    if ((arg_8h & 0x10) != 0) {\n        *0x4d1999 = 0;\n        fcn.004084e7(0x49d0d0);\n    }\n    return 1;\n}\n",
        "token_count": 335
    },
    "0046ce1e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_eh\n// WARNING: Variable defined which should be unmapped: var_12h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0046ce1e(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    bool bVar3;\n    uchar auStackY131128 [2];\n    ushort auStackY131126 [32767];\n    uchar auStackY65592 [2];\n    ushort auStackY65590 [32767];\n    uint var_34h;\n    uint lpFileOp;\n    uchar *var_20h;\n    uchar *var_1ch;\n    uchar *var_18h;\n    uchar var_14h;\n    uchar uStack23;\n    uint var_12h;\n    uint var_eh;\n    uint var_ah;\n    ushort uStack10;\n    \n    fcn.00441ef0();\n    var_ah._2_2_ = unaff_ESI;\n    uStack10 = unaff_ESI >> 0x10;\n    var_eh._2_2_ = SUB42(&stack0xfffdffc8, 0);\n    var_ah._0_2_ = &stack0xfffdffc8 >> 0x10;\n    var_12h._2_2_ = 0xce40;\n    var_eh._0_2_ = 0x46;\n    fcn.0046dcfe(&stack0xfffdffc8);\n    var_12h._2_2_ = SUB42(&stack0xfffeffc8, 0);\n    var_eh._0_2_ = &stack0xfffeffc8 >> 0x10;\n    var_14h = 0x53;\n    uStack23 = 0xce;\n    var_12h._0_2_ = 0x46;\n    fcn.0046dcfe(&stack0xfffeffc8);\n    var_eh._2_2_ = SUB42(&stack0xfffeffc8, 0);\n    var_ah._0_2_ = &stack0xfffeffc8 >> 0x10;\n    var_12h._2_2_ = SUB42(&stack0xfffdffc8, 0);\n    var_eh._0_2_ = &stack0xfffdffc8 >> 0x10;\n    var_14h = 0x69;\n    uStack23 = 0xce;\n    var_12h._0_2_ = 0x46;\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)();\n    if (iVar2 == 0) {\n        if (arg_8h != '\\0') {\n            var_14h = SUB41(&stack0xfffeffc8, 0);\n            uStack23 = &stack0xfffeffc8 >> 8;\n            var_12h._0_2_ = &stack0xfffeffc8 >> 0x10;\n            var_18h = &stack0xfffdffc8;\n            var_1ch = 0x46ce85;\n            iVar2 = fcn.004251c2(var_18h, &stack0xfffeffc8);\n            if (iVar2 != 0) {\n                var_14h = SUB41(&stack0xfffeffc8, 0);\n                uStack23 = &stack0xfffeffc8 >> 8;\n                var_12h._0_2_ = &stack0xfffeffc8 >> 0x10;\n                var_18h = &stack0xfffdffc8;\n                var_1ch = 0x46cea3;\n                (*_sym.imp.KERNEL32.dll_MoveFileW)();\n            }\n            return 1;\n        }\n    }\n    else {\n        var_14h = 0xb3;\n        uStack23 = 0xce;\n        var_12h._0_2_ = 0x46;\n        cVar1 = fcn.0046e0b7();\n        if (cVar1 != '\\0') {\n            var_14h = 0xc2;\n            uStack23 = 0xce;\n            var_12h._0_2_ = 0x46;\n            cVar1 = fcn.0046e0b7();\n            if (cVar1 == '\\0') {\n                var_14h = SUB41(&stack0xfffeffc8, 0);\n                uStack23 = &stack0xfffeffc8 >> 8;\n                var_12h._0_2_ = &stack0xfffeffc8 >> 0x10;\n                var_18h = 0x46cee1;\n                fcn.0040b606(&stack0xfffeffc8);\n                var_18h = 0x46cee9;\n                cVar1 = fcn.0046d1df();\n                var_18h = 0x46cef7;\n                fcn.0040b1ff();\n                if (cVar1 == '\\0') {\n                    return 0;\n                }\n                var_18h = 0x46cf07;\n                cVar1 = fcn.0046e0b7();\n                bVar3 = cVar1 != '\\0';\n            }\n            else {\n                bVar3 = arg_8h != '\\0';\n            }\n            if (bVar3) {\n                var_18h = &stack0xfffdffc8;\n                var_14h = 0xdc;\n                uStack23 = 0x68;\n                var_12h._0_2_ = 0x4c;\n                var_1ch = 0x46cf1c;\n                fcn.00428fc8(var_18h, L\"\\\\*.*\");\n                var_1ch = &stack0xfffdffc8;\n                var_20h = 0x46cf28;\n                iVar2 = fcn.004248f3(var_1ch);\n                *(&stack0xfffdffca + iVar2 * 2) = 0;\n                var_20h = &stack0xfffeffc8;\n                lpFileOp = 0x46cf3e;\n                iVar2 = fcn.004248f3(var_20h);\n                var_20h = 0x2;\n                *(&stack0xfffeffca + iVar2 * 2) = 0;\n                var_1ch = &stack0xfffdffc8;\n                var_eh._0_2_ = 0;\n                var_eh._2_2_ = 0;\n                var_ah._0_2_ = 0;\n                var_ah._2_2_ = 0;\n                var_12h._2_2_ = 0;\n                lpFileOp = 0;\n                var_14h = SUB41(&fcn.0046ce1e::lpFileOp, 0);\n                uStack23 = &fcn.0046ce1e::lpFileOp >> 8;\n                var_12h._0_2_ = &fcn.0046ce1e::lpFileOp >> 0x10;\n                var_18h = 0x46cf85;\n                iVar2 = (*_sym.imp.SHELL32.dll_SHFileOperationW)();\n                if (iVar2 == 0) {\n                    return 1;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1674
    },
    "0046cf94": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0046cf94(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint *arg_8h_00;\n    uint lpFindFileData;\n    uint var_29ch;\n    uint var_74h;\n    uint var_64h;\n    uint var_54h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t *var_38h;\n    uint lpFileName;\n    uint *var_24h;\n    uint var_20h;\n    uint lpExistingFileName;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    char var_3h;\n    uint var_2h;\n    \n    uVar6 = 0;\n    var_2h._0_1_ = 0;\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040592d();\n    fcn.0040592d();\n    var_3h = fcn.0046e04a();\n    cVar2 = fcn.0046e0b7();\n    if (cVar2 != '\\0') {\n        fcn.004052b7(L\"\\\\*.*\");\n    }\n    cVar2 = fcn.0046e0b7();\n    if (cVar2 != '\\0') {\n        fcn.004052b7(L\"\\\\*.*\");\n    }\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.00406bff(&var_64h, 0, 0);\n    iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(lpFileName, &lpFindFileData);\n    pcVar1 = _sym.imp.KERNEL32.dll_DeleteFileW;\n    var_2h._1_1_ = '\\x01';\n    if (iVar3 != -1) {\n        while (var_2h._1_1_ == '\\x01') {\n            if ((lpFindFileData & 0x10) == 0) {\n                arg_8h_00 = &var_29ch;\n                fcn.0040b606(arg_8h_00);\n                fcn.0046d6da(&var_24h);\n                fcn.0040b1ff();\n                lpExistingFileName = var_44h;\n                var_10h = var_40h;\n                var_ch = var_3ch;\n                var_8h = var_38h;\n                *var_38h = *var_38h + 1;\n                fcn.00407cf8(&var_64h);\n                fcn.004052b7(&var_29ch);\n                cVar2 = fcn.0046d3ec();\n                if (cVar2 == '\\0') {\ncode_r0x0046d0fd:\n                    if (arg_ch == '\\x01') {\n                        arg_8h_00 = var_24h;\n                        if (var_3h == '\\0') goto code_r0x0046d10b;\n                        cVar2 = fcn.0046d1ba();\n                        if (cVar2 == '\\0') goto code_r0x0046d170;\n                        uVar5 = (*pcVar1)(lpExistingFileName);\n                    }\n                    else {\n                        uVar5 = fcn.0046d1ba();\n                        uVar5 = uVar5 & 0xff;\n                    }\ncode_r0x0046d13d:\n                    if (uVar5 != 0) {\n                        fcn.0040b1ff();\n                        var_2h._0_1_ = 1;\n                        goto code_r0x0046d14d;\n                    }\n                }\n                else if (arg_8h != '\\0') {\n                    iVar4 = fcn.0041d5dc(lpExistingFileName, var_10h, var_24h, var_20h, 0);\n                    if (iVar4 != 0) {\n                        (*pcVar1)(var_24h);\n                        goto code_r0x0046d0fd;\n                    }\ncode_r0x0046d10b:\n                    uVar5 = (*_sym.imp.KERNEL32.dll_MoveFileW)(lpExistingFileName, arg_8h_00);\n                    goto code_r0x0046d13d;\n                }\ncode_r0x0046d170:\n                (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n                fcn.0040b1ff();\n                goto code_r0x0046d18b;\n            }\ncode_r0x0046d14d:\n            iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar3, &lpFindFileData);\n            if (iVar4 == 0) {\n                var_2h._1_1_ = '\\0';\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n    uVar6 = var_2h;\ncode_r0x0046d18b:\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    uVar5 = fcn.0040b1ff();\n    return uVar5 & 0xffffff00 | uVar6;\n}\n",
        "token_count": 1259
    },
    "0046d2c7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0046d2c7(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uchar *puVar6;\n    uint32_t uVar7;\n    uint32_t uStack652;\n    uchar auStack648 [12];\n    uchar auStack636 [8];\n    uchar auStack628 [16];\n    uint8_t auStack612 [8];\n    uchar auStack604 [28];\n    uchar auStack576 [572];\n    \n    uVar5 = 0;\n    uStack652 = uStack652;\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040592d();\n    uVar4 = 0;\n    cVar1 = fcn.0046e0b7();\n    if (cVar1 != '\\0') {\n        uVar4 = 0;\n        fcn.004052b7(L\"\\\\*.*\");\n    }\n    fcn.00406bff(auStack636, 0, 0);\n    puVar6 = auStack604;\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(uStack652, puVar6);\n    cVar1 = '\\x01';\n    uVar7 = 0x10000;\n    if (iVar2 != -1) {\n        while (cVar1 == '\\x01') {\n            if ((auStack612[0] & 0x10) == 0) {\n                uVar7 = uVar7 & 0xffffff;\n                fcn.0040c1c3(auStack628);\n                fcn.00407cf8(auStack648);\n                fcn.004052b7(auStack576);\n                iVar3 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(puVar6);\n                if (iVar3 != 1) {\n                    (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n                    goto code_r0x0046d3c9;\n                }\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar2, auStack612);\n            cVar1 = uVar7 >> 0x10;\n            if (iVar3 == 0) {\n                cVar1 = '\\0';\n                uVar7 = 0;\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n    uVar5 = uVar4 >> 0x18;\ncode_r0x0046d3c9:\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    uVar4 = fcn.0040b1ff();\n    return uVar4 & 0xffffff00 | uVar5;\n}\n",
        "token_count": 640
    },
    "0046d3fa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046d3fa(char *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *arg_8h_00;\n    uint *puVar4;\n    int32_t aiStack620 [4];\n    int32_t iStack604;\n    uchar auStack584 [8];\n    uchar auStack576 [8];\n    uint uStack568;\n    uchar auStack548 [544];\n    \n    puVar4 = 0x2;\n    uStack568 = 0x22c;\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    (*_sym.imp.KERNEL32.dll_Process32FirstW)(uVar1, auStack576);\n    *arg_8h = '\\0';\n    iVar2 = fcn.0046de15();\n    while (*arg_8h == '\\0') {\n        iVar3 = (*_sym.imp.KERNEL32.dll_Process32NextW)(uVar1, auStack584);\n        if (iVar3 != 1) break;\n        fcn.0040c25d();\n        fcn.0040c25d();\n        fcn.0040b606(auStack548);\n        fcn.00406bff(0, &stack0xfffffd84, aiStack620);\n        fcn.0040b1ff();\n        arg_8h_00 = aiStack620;\n        fcn.00407cf8(arg_8h_00);\n        iVar3 = fcn.0041d5dc(unaff_EDI, unaff_ESI, *puVar4, puVar4[1], 0);\n        if ((iVar3 == 0) || ((iVar2 != 0 && (iVar2 == iStack604)))) {\n            *arg_8h = '\\x01';\n            *arg_8h_00 = iStack604;\n        }\n        fcn.0040b1ff();\n        fcn.0040b1ff();\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar1);\n    return 1;\n}\n",
        "token_count": 482
    },
    "0046d604": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.0046d604(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint lpInBuffer;\n    uint var_228h;\n    uint var_224h;\n    uint var_21ch;\n    uint var_20ah;\n    uint var_56h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(param_1, 0xc0000000, 3, 0, 3, 0x80, 0);\n    if (iVar1 != -1) {\n        fcn.004222d0(&lpInBuffer, 0, 0x228);\n        var_224h = 3;\n        var_20ah._0_1_ = 0xec;\n        var_228h = 0x200;\n        var_4h = 0;\n        lpInBuffer._2_2_ = 2;\n        lpInBuffer._0_2_ = 0x28;\n        var_21ch = 0x28;\n        iVar2 = (*_sym.imp.KERNEL32.dll_DeviceIoControl)\n                          (iVar1, 0x4d02c, &lpInBuffer, 0x200, &lpInBuffer, 0x200, &var_4h, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        if (iVar2 != 0) {\n            return var_56h != 1;\n        }\n    }\n    return 0x80004005;\n}\n",
        "token_count": 357
    },
    "0046da03": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0046da03(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar1);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    return iVar1 != -1;\n}\n",
        "token_count": 96
    },
    "0046da8b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046da8b(uint arg_8h)\n\n{\n    int16_t *arg_8h_00;\n    \n    arg_8h_00 = fcn.0041fd8b(0x10000);\n    (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, arg_8h_00, 0x7fff);\n    if (*arg_8h_00 != 0) {\n        fcn.004052b7(arg_8h_00);\n        fcn.004052b7(0x49d128);\n    }\n    fcn.0041fd94(arg_8h_00);\n    return 1;\n}\n",
        "token_count": 151
    },
    "0046dd45": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046dd45(int32_t param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint lpWSAData;\n    uint name;\n    uint in;\n    \n    iVar2 = (*_sym.imp.WSOCK32.dll_WSAStartup)(0x101, &lpWSAData);\n    if (iVar2 == 0) {\n        (*_sym.imp.WSOCK32.dll_gethostname)(&name, 0x100);\n        iVar2 = (*_sym.imp.WSOCK32.dll_gethostbyname)(&name);\n        if (iVar2 != 0) {\n            piVar1 = *(iVar2 + 0xc);\n            iVar4 = 0;\n            iVar2 = *piVar1;\n            while (iVar2 != 0) {\n                iVar4 = iVar4 + 1;\n                iVar2 = piVar1[iVar4];\n            }\n            if (iVar4 < param_1) {\n                fcn.00424913(param_2, L\"0.0.0.0\");\n            }\n            else {\n                fcn.00420db0(&in, piVar1[param_1 + -1], 4);\n                uVar3 = (*_sym.imp.WSOCK32.dll_inet_ntoa)(in);\n                fcn.0042d580(&name, uVar3);\n                uVar3 = fcn.0046eaef();\n                fcn.00424913(param_2, uVar3);\n                fcn.0041fd94(uVar3);\n            }\n            (*_sym.imp.WSOCK32.dll_WSACleanup)();\n            return;\n        }\n    }\n    fcn.00424913(param_2, 0x49d0d0);\n    return;\n}\n",
        "token_count": 402
    },
    "0046dfc8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046dfc8(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_10h;\n    \n    cVar1 = fcn.00463c4b();\n    if (cVar1 == '\\0') {\n        iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(arg_8h);\n        if ((iVar2 != 0) || (*0x4d139c == '\\x01')) {\n            fcn.0040c25d();\n            fcn.00463b0c(&var_10h);\n            fcn.00407cf8(&var_10h);\n            fcn.004052b7(0x49d128);\n            fcn.0040b1ff();\n        }\n    }\n    return 1;\n}\n",
        "token_count": 182
    },
    "0046e034": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0046e034(uint32_t param_1)\n\n{\n    if (param_1 < 0) {\n        param_1 = ~param_1;\n    }\n    else if (param_1 == 1) {\n        param_1 = 0;\n    }\n    else {\n        param_1 = -param_1;\n    }\n    return param_1;\n}\n",
        "token_count": 88
    },
    "0046e0f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046e0f4(uint lpCaption, uint uType, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t iVar3;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = arg_10h;\n    iVar3 = 0;\n    *0x4d139d = '\\0';\n    if (arg_10h != 0) {\n        *0x4d139e = 1;\n        var_4h = in_ECX;\n        var_ch = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        var_8h = iVar1;\n        iVar3 = fcn.0042d1e8(0, 0, fcn.0046e5ce, &var_ch, 0, &arg_10h);\n        in_ECX = var_4h;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_MessageBoxW)(in_ECX);\n    if (iVar3 != 0) {\n        *0x4d139e = 0;\n        (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(iVar3, 0xffffffff);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n    }\n    if (*0x4d139d == '\\x01') {\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 332
    },
    "0046e1cb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0046e1cb(int16_t *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    if (*param_1 == 0) {\n        return 1;\n    }\n    iVar2 = fcn.004249b8(param_1, L\"LEFT\");\n    if (iVar2 != 0) {\n        iVar2 = fcn.004249b8(param_1, L\"RIGHT\");\n        if (iVar2 != 0) {\n            iVar2 = fcn.004249b8(param_1, L\"MIDDLE\");\n            if (iVar2 == 0) {\n                return 3;\n            }\n            iVar2 = fcn.004249b8(param_1, L\"MAIN\");\n            if ((iVar2 == 0) || (iVar2 = fcn.004249b8(param_1, L\"PRIMARY\"),  iVar2 == 0)) {\n                cVar1 = fcn.0040597b();\n                if (cVar1 == '\\0') {\n                    return 1;\n                }\n            }\n            else {\n                iVar2 = fcn.004249b8(param_1, L\"MENU\");\n                if ((iVar2 != 0) && (iVar2 = fcn.004249b8(param_1, L\"SECONDARY\"),  iVar2 != 0)) {\n                    return 0;\n                }\n                cVar1 = fcn.0040597b();\n                if (cVar1 != '\\0') {\n                    return 1;\n                }\n            }\n        }\n        return 2;\n    }\n    return 1;\n}\n",
        "token_count": 351
    },
    "0046e319": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0046e319(char param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uStack00000012;\n    uint uStack00000016;\n    uint uStack0000001a;\n    int16_t in_stack_00000038;\n    \n    fcn.00441ef0();\n    fcn.0046dcfe(&stack0x00010448);\n    fcn.0046dcfe(&stack0x00000448);\n    cVar1 = fcn.0046e0b7();\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    cVar1 = fcn.0046e0b7();\n    if (cVar1 != '\\0') {\n        if (param_1 == '\\0') {\n            return 0;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)();\n        if (iVar2 == 0) {\n            iVar2 = fcn.004251c2(&stack0x00010448, &stack0x00000448);\n            if (iVar2 == 0) {\n                return 1;\n            }\n            iVar2 = (*_sym.imp.KERNEL32.dll_MoveFileW)();\n            goto joined_r0x0046e576;\n        }\n        fcn.0042d513(&stack0x00010448, 0, 0, &stack0x00000240, &stack0x00000038);\n        fcn.00428fc8(&stack0x00000448, 0x49d034);\n        fcn.00428fc8(&stack0x00000448, &stack0x00000240);\n        if (in_stack_00000038 != 0) {\n            fcn.00428fc8(&stack0x00000448, &stack0x00000038);\n        }\n    }\n    fcn.0040b606(&stack0x00000448);\n    fcn.0040b606(&stack0x00010444);\n    cVar1 = fcn.0046e04a();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0046ce1e(1);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        fcn.0040b606(&stack0x00010440);\n        cVar1 = fcn.0046e77b();\n        fcn.0040b1ff();\n        if (cVar1 != '\\0') {\n            return 1;\n        }\n        return 0;\n    }\n    iVar2 = fcn.004251c2(&stack0x00010440, &stack0x00000440);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar2 = fcn.004248f3(&stack0x00010440);\n    *(&stack0x00010442 + iVar2 * 2) = 0;\n    iVar2 = fcn.004248f3(&stack0x00000440);\n    uStack00000016 = 0;\n    uStack0000001a = 0;\n    *(&stack0x00000442 + iVar2 * 2) = 0;\n    uStack00000012 = 0;\n    iVar2 = (*_sym.imp.SHELL32.dll_SHFileOperationW)();\njoined_r0x0046e576:\n    if (iVar2 != 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 788
    },
    "0046e5ce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046e5ce(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    \n    (*_sym.imp.WINMM.dll_timeGetTime)();\n    while( true ) {\n        if (*0x4d139e == '\\0') {\n            return 0;\n        }\n        iVar2 = fcn.0041e465();\n        if ((0xffffffff < iVar2) || ((-1 < iVar2 && (arg_8h[1] <= iVar2)))) break;\n        (*_sym.imp.KERNEL32.dll_Sleep)(10);\n    }\n    *0x4d2610 = 0;\n    (*_sym.imp.USER32.dll_EnumThreadWindows)(*arg_8h, fcn.0046e583, 0);\n    if (*0x4d2610 == 0) {\n        return 0;\n    }\n    *0x4d139d = 1;\n    iVar1 = (*_sym.imp.USER32.dll_FindWindowExW)(*0x4d2610, 0, L\"BUTTON\", 0);\n    if (iVar1 != 0) {\n        fcn.00463985();\n        (*_sym.imp.USER32.dll_SetActiveWindow)(*0x4d2610);\n        (*_sym.imp.USER32.dll_SendMessageW)(iVar1, 0xf5, 0, 0);\n        fcn.00463985();\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_SendMessageW)(*0x4d2610, 0x10, 0, 0);\n    (*_sym.imp.KERNEL32.dll_Sleep)(0xfa);\n    iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*0x4d2610);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_EndDialog)(*0x4d2610, 0);\n    return 0;\n}\n",
        "token_count": 429
    },
    "0046e91a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0046e91a(int16_t *param_1, char param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char16_t *pcVar3;\n    uint var_218h;\n    uint var_10h;\n    \n    fcn.0040b606(L\"open \");\n    fcn.004051ec(0x22);\n    fcn.004052b7(param_1);\n    fcn.004051ec(0x22);\n    fcn.004052b7(L\" alias PlayMe\");\n    pcVar1 = _sym.imp.WINMM.dll_mciSendStringW;\n    (*_sym.imp.WINMM.dll_mciSendStringW)(L\"status PlayMe mode\", &var_218h, 0x100, 0);\n    if (var_218h != 0) {\n        (*pcVar1)(L\"close PlayMe\", 0, 0, 0);\n    }\n    if (*param_1 != 0) {\n        iVar2 = (*pcVar1)(var_10h, 0, 0, 0);\n        if (iVar2 == 0) {\n            if (param_2 == '\\0') {\n                pcVar3 = L\"play PlayMe\";\n            }\n            else {\n                (*pcVar1)(L\"play PlayMe wait\", 0, 0, 0);\n                pcVar3 = L\"close PlayMe\";\n            }\n            (*pcVar1)(pcVar3, 0, 0, 0);\n        }\n    }\n    fcn.0040b1ff();\n    return;\n}\n",
        "token_count": 368
    },
    "0046ec37": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0046ec37(uint arg_8h, int32_t arg_ch)\n\n{\n    ushort uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int16_t *in_ECX;\n    ushort *in_EDX;\n    int16_t *arg_8h_00;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_GetLocalTime)();\n    if ((*in_ECX != 0) && (uVar2 = fcn.004248f3(in_ECX),  3 < uVar2)) {\n        if (arg_8h != '\\0') {\n            fcn.0042d27b(&var_ch, in_ECX, 4);\n            var_4h._0_2_ = 0;\n            uVar1 = fcn.00426261(&var_ch);\n            *in_EDX = uVar1;\n            in_ECX = in_ECX + arg_ch + 4;\n            uVar2 = fcn.004248f3(in_ECX);\n            if (1 < uVar2) {\n                fcn.0042d27b(&var_ch, in_ECX, 2);\n                var_8h._0_2_ = 0;\n                uVar1 = fcn.00426261(&var_ch);\n                in_EDX[1] = uVar1;\n                in_ECX = in_ECX + arg_ch + 2;\n                uVar2 = fcn.004248f3(in_ECX);\n                if (1 < uVar2) {\n                    fcn.0042d27b(&var_ch, in_ECX, 2);\n                    var_8h._0_2_ = 0;\n                    uVar1 = fcn.00426261(&var_ch);\n                    in_ECX = in_ECX + 2;\n                    in_EDX[3] = uVar1;\n                    iVar3 = fcn.004248f3(in_ECX);\n                    if (iVar3 != 0) {\n                        in_ECX = in_ECX + arg_ch;\n                    }\n                }\n            }\n        }\n        uVar2 = fcn.004248f3(in_ECX);\n        if (1 < uVar2) {\n            fcn.0042d27b(&var_ch, in_ECX, 2);\n            var_8h._0_2_ = 0;\n            uVar1 = fcn.00426261(&var_ch);\n            in_EDX[4] = uVar1;\n            arg_8h_00 = in_ECX + arg_ch + 2;\n            uVar2 = fcn.004248f3(arg_8h_00);\n            if (1 < uVar2) {\n                fcn.0042d27b(&var_ch, arg_8h_00, 2);\n                var_8h._0_2_ = 0;\n                uVar1 = fcn.00426261(&var_ch);\n                in_EDX[5] = uVar1;\n                uVar2 = fcn.004248f3(arg_8h_00 + arg_ch + 2);\n                if (1 < uVar2) {\n                    fcn.0042d27b(&var_ch, arg_8h_00 + arg_ch + 2, 2);\n                    var_8h._0_2_ = 0;\n                    uVar1 = fcn.00426261(&var_ch);\n                    in_EDX[6] = uVar1;\n                    in_EDX[7] = 0;\n                }\n            }\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 817
    },
    "0046ef7a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046ef7a(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_14h == 1) {\n        if (*0x4d2380 == 0) {\n            return 0;\n        }\n        if (arg_ch == 0) {\n            return 0;\n        }\n    }\n    else if (arg_14h != 2) {\n        return 0;\n    }\n    fcn.00470b04(arg_8h, arg_ch, arg_10h);\n    return 1;\n}\n",
        "token_count": 138
    },
    "0046f005": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0046f005(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    var_4h = 0;\n    if ((*0x4d2380 == 0) || (iVar1 = fcn.0041dab2(arg_8h, &var_4h),  iVar1 == 0)) {\n        iVar1 = fcn.0041dab2(arg_8h, &var_4h);\n        uVar2 = iVar1 != 0;\n    }\n    else {\n        uVar2 = 0xffffffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 154
    },
    "0046f219": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nint32_t __cdecl fcn.0046f219(uint32_t arg_8h, uint lpsz, uint32_t cchLength)\n\n{\n    int32_t iVar1;\n    int16_t *piVar2;\n    uint32_t *puVar3;\n    uint *puVar4;\n    uint32_t *in_ECX;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint arg_8h_00;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t *var_8h;\n    uint32_t var_4h;\n    \n    fcn.0040c7c9();\n    (*_sym.imp.USER32.dll_CharLowerBuffW)(lpsz, cchLength);\n    fcn.0046f88f();\n    var_4h = 0;\n    if (cchLength == 0) {\n        iVar6 = 1;\n    }\n    else {\n        *in_ECX = 0;\n        iVar6 = 0;\n        while (var_ch = iVar6,  piVar2 = fcn.0040660f(iVar6),  *piVar2 != 0) {\n            iVar1 = iVar6 + 1;\n            piVar2 = fcn.0040660f(iVar6);\n            iVar6 = iVar1;\n            if (*piVar2 == 0x3b) {\n                *in_ECX = *in_ECX + 1;\n            }\n        }\n        if (1 < cchLength) {\n            var_ch = iVar6 + -1;\n            piVar2 = fcn.0040660f(var_ch);\n            if (*piVar2 != 0x3b) {\n                *in_ECX = *in_ECX + 1;\n            }\n        }\n        uVar7 = *in_ECX;\n        uVar5 = -(uVar7 * 0x20 >> 0x20 != 0) | uVar7 * 0x20;\n        var_10h = -(0xfffffffb < uVar5) | uVar5 + 4;\n        var_14h = 0x46f2bd;\n        puVar3 = fcn.0041fd8b();\n        if (puVar3 == NULL) {\n            puVar3 = NULL;\n        }\n        else {\n            *puVar3 = uVar7;\n            puVar3 = puVar3 + 1;\n            for (; uVar7 != 0; uVar7 = uVar7 - 1) {\n                var_10h = 0x46f2d7;\n                var_8h = puVar3;\n                fcn.0046f151();\n                puVar3 = var_8h;\n            }\n        }\n        var_8h = 0xffffffff;\n        in_ECX[1] = puVar3;\n        var_10h = 0;\n        var_ch = 0;\n        var_14h = 8;\n        arg_8h_00 = 0;\n        iVar6 = fcn.0046f370(0, &fcn.0046f219::lpsz, &fcn.0046f219::var_14h, &fcn.0046f219::var_10h, \n                             &fcn.0046f219::var_ch, 8, 0);\n        uVar7 = var_4h;\n        if (iVar6 == 0) {\n            in_ECX[3] = var_4h;\n            if (arg_8h == 0) {\n                puVar4 = fcn.0041fd5b(4, arg_8h_00);\n                *puVar4 = 1;\n                in_ECX[4] = puVar4;\n                uVar7 = fcn.0041fd8b(uVar7);\n                in_ECX[2] = uVar7;\n                fcn.004222d0(uVar7, 0, in_ECX[3]);\n            }\n            else {\n                in_ECX[4] = 0;\n                in_ECX[2] = arg_8h;\n            }\n            iVar6 = 0;\n        }\n    }\n    fcn.0040b1ff();\n    return iVar6;\n}\n",
        "token_count": 984
    },
    "0046f370": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0046f370(uint arg_8h, int32_t arg_ch, int32_t **arg_10h, int32_t **arg_14h, int32_t **arg_18h, int32_t *arg_1ch, \n            int32_t *arg_20h)\n\n{\n    int16_t *piVar1;\n    uint16_t *puVar2;\n    int32_t *arg_8h_00;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t *unaff_ESI;\n    int32_t *piVar7;\n    uint32_t *puVar8;\n    int32_t *unaff_EDI;\n    int32_t *piVar9;\n    int32_t *piVar10;\n    uint32_t arg_8h_01;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iStack68;\n    uint uStack48;\n    uint uStack40;\n    \n    iVar11 = 0;\n    iVar12 = 0;\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\ncode_r0x0046f743:\n    piVar5 = *arg_14h;\n    piVar4 = unaff_EDI;\n    if (piVar5 < *(arg_ch + 4)) {\n        while( true ) {\n            piVar4 = piVar5;\n            piVar1 = fcn.004058ca(piVar5);\n            if ((*piVar1 != 0x20) && (*piVar1 != 9)) break;\n            piVar5 = piVar5 + 1;\n            *arg_14h = piVar5;\n        }\n        if (piVar5 < *(arg_ch + 4)) {\n            arg_8h_01 = 0x49d0d0;\n            fcn.004084e7(0x49d0d0);\n            do {\n                piVar5 = *arg_14h;\n                puVar2 = fcn.004058ca(piVar5);\n                iVar11 = fcn.00426318(*puVar2);\n                if (iVar11 == 0) {\n                    piVar10 = *arg_14h;\n                    piVar1 = fcn.004058ca(piVar10);\n                    if (*piVar1 != 0x5f) goto code_r0x0046f43d;\n                }\n                piVar5 = *arg_14h;\n                *arg_14h = piVar5 + 1;\n                puVar2 = fcn.004058ca(piVar5);\n                arg_8h_01 = *puVar2;\n                fcn.004051ec(arg_8h_01);\n            } while( true );\n        }\n    }\ncode_r0x0046f74e:\n    if (arg_8h != '\\0') {\n        iVar12 = fcn.0046f1e2(*arg_1ch, *arg_20h, *arg_10h);\n        iVar11 = *arg_1ch;\n        piVar5 = *arg_18h;\n        if (piVar5 < piVar4) {\n            iVar3 = piVar5 << 5;\n            do {\n                *(unaff_ESI[1] + iVar3) = *(unaff_ESI[1] + iVar3) + iVar12 + iVar11;\n                piVar10 = unaff_ESI[1] + 0x1c + iVar3;\n                *piVar10 = *piVar10 + iVar12 + iVar11;\n                piVar5 = piVar5 + 1;\n                iVar3 = iVar3 + 0x20;\n            } while (piVar5 < piVar4);\n        }\n        iVar11 = *(piVar4 * 0x20 + -4 + unaff_ESI[1]);\n    }\n    iVar12 = fcn.0046f1e2(iVar11, *arg_20h, *arg_10h);\n    *arg_1ch = iVar12 + iVar11;\n    iVar6 = 0;\n    *arg_18h = piVar4;\ncode_r0x0046f7e8:\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return iVar6;\ncode_r0x0046f43d:\n    fcn.004084e7(0x49d0d0);\n    piVar7 = *arg_14h;\n    while( true ) {\n        unaff_ESI = piVar7;\n        piVar1 = fcn.004058ca(piVar7);\n        if ((*piVar1 != 0x20) && (*piVar1 != 9)) break;\n        piVar7 = piVar7 + 1;\n        *arg_14h = piVar7;\n    }\n    piVar1 = fcn.004058ca(piVar7);\n    iVar3 = 0x5b;\n    if (*piVar1 != 0x5b) {\n        do {\n            puVar2 = fcn.004058ca(0x46f487);\n            iVar11 = fcn.00426318(*puVar2);\n            if (iVar11 == 0) {\n                piVar7 = *arg_14h;\n                piVar1 = fcn.004058ca(piVar7);\n                iVar3 = 0x5f;\n                if (*piVar1 != 0x5f) break;\n            }\n            piVar4 = *arg_14h;\n            *arg_14h = piVar4 + 1;\n            puVar2 = fcn.004058ca(piVar4);\n            fcn.004051ec(*puVar2);\n        } while( true );\n    }\n    while( true ) {\n        arg_8h_00 = piVar7;\n        piVar1 = fcn.004058ca(piVar7);\n        if ((*piVar1 != 0x20) && (*piVar1 != 9)) break;\n        piVar7 = piVar7 + 1;\n        *arg_14h = piVar7;\n    }\n    piVar9 = piVar7;\n    piVar1 = fcn.004058ca(piVar7);\n    if (*piVar1 == 0x5b) {\n        *arg_14h = piVar7 + 1;\n        fcn.004084e7(0x49d0d0);\n        while( true ) {\n            puVar2 = fcn.004058ca(0x46f511);\n            iVar11 = fcn.00426342(*puVar2);\n            if (iVar11 == 0) break;\n            piVar4 = *arg_14h;\n            *arg_14h = piVar4 + 1;\n            puVar2 = fcn.004058ca(piVar4);\n            arg_8h_00 = *puVar2;\n            fcn.004051ec(arg_8h_00);\n        }\n        iVar11 = fcn.00426261(uStack48);\n        if (iVar11 < 1) goto code_r0x0046f7b0;\n        piVar7 = *arg_14h;\n        piVar9 = piVar7;\n        piVar1 = fcn.004058ca(piVar7);\n        if (*piVar1 != 0x5d) goto code_r0x0046f7b0;\n        piVar7 = piVar7 + 1;\n        *arg_14h = piVar7;\n    }\n    piVar4 = piVar7;\n    piVar1 = fcn.004058ca(piVar7);\n    if (*piVar1 == 0x3b) {\n        *arg_14h = piVar7 + 1;\n    }\n    else if (piVar7 < *(arg_ch + 4)) {\n        iVar6 = 1;\n        goto code_r0x0046f7e8;\n    }\n    puVar8 = 0x4d0378;\n    iVar11 = 0;\n    do {\n        if (iVar11 != 0) goto code_r0x0046f5e9;\n        iVar6 = fcn.004251c2(puVar8 + -6, uStack40);\n        if (iVar6 == 0) {\n            arg_8h_01 = *puVar8;\n            if (((arg_8h_01 & 0x31) != 0) && (0 < piVar5)) {\n                arg_8h_01 = arg_8h_01 | 4;\n            }\n            piVar10 = puVar8[-1];\n            iVar11 = 1;\n        }\n        puVar8 = puVar8 + 7;\n    } while (puVar8 < 0x4d06f8);\n    if (iVar11 != 0) {\ncode_r0x0046f5e9:\n        if (arg_8h_01 == 0x100) {\n            *piVar4 = *piVar4 + -1;\n            if (piVar10 == NULL) goto code_r0x0046f74e;\n            iVar11 = 0;\n            unaff_EDI = 0x1;\n            iVar6 = fcn.0046f370(1, arg_ch, arg_10h, arg_14h, &stack0xffffff9c, &stack0xffffffa4, &stack0xffffffb4);\n            if (iVar6 != 0) goto code_r0x0046f7e8;\n            if (*arg_20h < iVar3) {\n                *arg_20h = iVar3;\n            }\n        }\n        else if (arg_8h_01 == 0x80) {\n            piVar5 = fcn.00426261(iVar12);\n            *arg_10h = piVar5;\n            if (piVar5 == NULL) {\n                *arg_10h = 0x8;\n            }\n            else if ((((piVar5 != 0x1) && (piVar5 != 0x2)) && (piVar5 != 0x4)) && ((piVar5 != 0x8 && (piVar5 != 0x10))))\n            {\n                iVar6 = 2;\n                goto code_r0x0046f7e8;\n            }\n            *piVar4 = *piVar4 + -1;\n            unaff_EDI = piVar4;\n        }\n        else {\n            piVar5 = *arg_10h;\n            piVar7 = unaff_ESI;\n            iVar3 = fcn.0046f1e2(unaff_ESI, piVar10, piVar5);\n            *(piVar4 * 0x20 + piVar9[1]) = unaff_ESI + iVar3;\n            *(piVar4 * 0x20 + 4 + piVar9[1]) = arg_8h_00;\n            *(piVar4 * 0x20 + 8 + piVar9[1]) = piVar7;\n            iVar3 = piVar9[1];\n            unaff_EDI = piVar4;\n            unaff_ESI = piVar7;\n            if (iVar3 + 0xc + piVar4 * 0x20 != &stack0xffffffac) {\n                fcn.0040c1c3(&stack0xffffffac);\n                piVar4 = piVar5;\n                iVar3 = unaff_EDI[1];\n                unaff_ESI = piVar7;\n            }\n            iVar11 = iVar11 + iStack68 * iVar12;\n            *(piVar4 * 0x20 + 0x1c + iVar3) = iVar11;\n            if (*arg_20h < iVar12) {\n                *arg_20h = iVar12;\n            }\n        }\n        goto code_r0x0046f743;\n    }\ncode_r0x0046f7b0:\n    fcn.0046f88f();\n    iVar6 = 2;\n    goto code_r0x0046f7e8;\n}\n",
        "token_count": 2670
    },
    "0046fb4d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0046fb4d(int32_t arg_8h, uint32_t arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h, uint arg_24h)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint32_t uVar6;\n    uint *arg_8h_00;\n    uint var_10h;\n    \n    if (((arg_ch & 4) == 0) || (arg_1ch != -1)) {\n        fcn.0040c25d();\n        if (arg_20h == '\\0') {\n            if ((arg_ch & 1) == 0) {\n                fcn.00420db0(&arg_20h, arg_10h, 2);\n                uVar6 = arg_20h;\n            }\n            else {\n                fcn.00420db0(&arg_20h + 3, arg_10h, 1);\n                uVar6 = arg_20h._3_1_;\n            }\n            fcn.0046f168(uVar6);\n            fcn.00407c5d(&var_10h);\n            goto code_r0x0046fd88;\n        }\n        cVar2 = fcn.0046ff5f();\n        if (cVar2 == '\\0') {\n            fcn.00408e90();\n            uVar6 = ***(arg_8h + 8);\n        }\n        else {\n            uVar6 = fcn.0040ce67();\n            uVar6 = uVar6 & 0xffff;\n        }\n        fcn.0046f168(uVar6);\n        fcn.00407c5d(&var_10h);\n        puVar5 = fcn.0040660f(0);\n        if ((arg_ch & 1) == 0) {\n            arg_20h = *puVar5;\n            arg_8h_00 = 0x2;\n        }\n        else {\n            arg_20h = arg_20h & 0xffffff | *puVar5 << 0x18;\n            arg_8h_00 = 0x1;\n        }\n    }\n    else {\n        uVar6 = arg_14h - arg_18h;\n        if (arg_20h == '\\0') {\n            if ((arg_ch & 1) != 0) {\n                iVar4 = fcn.0041fd8b(uVar6 + 1);\n                fcn.00420db0(iVar4, arg_10h, uVar6);\n                *(iVar4 + uVar6) = 0;\n                uVar3 = fcn.0046eaef();\n                fcn.0040b5c1(uVar3);\n                fcn.0041fd94(uVar3);\n                fcn.0041fd94(iVar4);\n                return 0;\n            }\n            iVar1 = ((uVar6 >> 1) + 1) * 2;\n            iVar4 = fcn.0041fd8b(-(iVar1 >> 0x20 != 0) | iVar1);\n            fcn.00420db0(iVar4, arg_10h, uVar6 & 0xfffffffe);\n            *((uVar6 & 0xfffffffe) + iVar4) = 0;\n            fcn.0040b5c1(iVar4);\n            fcn.0041fd94(iVar4);\n            return 0;\n        }\n        fcn.0040c25d();\n        fcn.00408e90();\n        iVar4 = *(*(arg_8h + 8) + 4);\n        if ((arg_ch & 1) != 0) {\n            if (iVar4 < uVar6) {\n                fcn.00408e90();\n                uVar6 = *(*(arg_8h + 8) + 4) + 1;\n            }\n            fcn.00408e90();\n            fcn.004086ac(*(arg_8h + 8), 0, uVar6);\n            fcn.00407c5d(&var_10h);\n            uVar3 = fcn.0046eecc();\n            fcn.00420db0(arg_10h, uVar3, uVar6);\n            fcn.0041fd94(uVar3);\n            goto code_r0x0046fd88;\n        }\n        uVar6 = uVar6 >> 1;\n        if (iVar4 < uVar6) {\n            fcn.00408e90();\n            uVar6 = *(*(arg_8h + 8) + 4) + 1;\n        }\n        fcn.00408e90();\n        fcn.004086ac(*(arg_8h + 8), 0, uVar6);\n        arg_8h_00 = &var_10h;\n        fcn.00407c5d(arg_8h_00);\n    }\n    fcn.00420db0(arg_10h, arg_8h_00);\ncode_r0x0046fd88:\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 1170
    },
    "0046fd99": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0046fd99(uint32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t iVar6;\n    int32_t *piVar7;\n    uint32_t uStackY76;\n    uint *puVar8;\n    uint arg_14h_00;\n    int32_t var_1ch;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    \n    cVar2 = fcn.004039e5();\n    piVar7 = arg_10h;\n    iVar6 = arg_ch;\n    uVar4 = uStackY76;\n    if (cVar2 == '\\0') {\n        if (*(arg_ch + 8) == 0) {\n            iVar6 = *(in_ECX + 8);\n            fcn.0040e8a0();\n            *piVar7 = iVar6;\n            piVar7[3] = 7;\n            uVar4 = 0;\n        }\n        else {\n            iVar6 = 1;\n            if (*(arg_ch + 8) == 1) {\n                puVar8 = arg_ch + 4;\n                arg_ch = 0;\n                arg_8h = 0;\n                var_14h = 0;\n                fcn.004119e0(**puVar8);\n                if (var_10h != 4) {\n                    var_1ch = fcn.0040ce67();\n                    var_1ch = var_1ch + -1;\n                    fcn.0040e8a0();\n                    var_10h = 1;\n                }\n                iVar5 = 0;\n                iVar3 = fcn.0046f80e(&var_1ch, &arg_ch, &arg_8h);\n                uVar4 = arg_8h;\n                if (iVar3 != 0) {\n                    iVar6 = 7;\n                    iVar5 = iVar3;\n                    uVar4 = 0;\n                }\n                fcn.0040e8a0();\n                arg_10h[3] = iVar6;\n                *arg_10h = iVar5;\n                fcn.0040e8a0();\n            }\n        }\n        goto code_r0x0046ff4e;\n    }\n    if ((arg_8h & 3) == 0) {\n        uVar4 = 2;\n        if ((arg_8h & 0xc) == 0) goto code_r0x0046ff4e;\n        iVar5 = -1;\n        uVar1 = *(arg_ch + 8);\n        if (2 < uVar1) {\n            fcn.0040e8a0();\n            *piVar7 = 0;\n            piVar7[3] = 1;\n            goto code_r0x0046ff4e;\n        }\n        if ((uVar1 == 2) && (cVar2 = fcn.00401fb9(0x29),  iVar5 = extraout_EDX,  cVar2 == '\\0')) {\n            iVar5 = fcn.0040ce67();\n            piVar7 = arg_10h;\n            iVar5 = iVar5 + -1;\n            if (iVar5 < 0) {\n                fcn.0040e8a0();\n                piVar7[3] = 1;\n                goto code_r0x0046fece;\n            }\n        }\n        arg_14h_00 = 1;\n        puVar8 = *(*(iVar6 + 4) + -4 + uVar1 * 4);\n    }\n    else {\n        iVar5 = -1;\n        if (1 < *(arg_ch + 8)) {\n            fcn.0040e8a0();\n            *piVar7 = 0;\n            piVar7[3] = 1;\n            goto code_r0x0046ff4e;\n        }\n        if ((*(arg_ch + 8) == 1) && (cVar2 = fcn.00401fb9(0x29),  iVar5 = extraout_EDX_00,  cVar2 == '\\0')) {\n            iVar5 = fcn.0040ce67();\n            piVar7 = arg_10h;\n            iVar5 = iVar5 + -1;\n            if (iVar5 < 0) {\n                fcn.0040e8a0();\n                piVar7[3] = 1;\ncode_r0x0046fece:\n                *piVar7 = 0;\n                uVar4 = uStackY76;\n                goto code_r0x0046ff4e;\n            }\n        }\n        arg_14h_00 = 0;\n        puVar8 = &arg_14h;\n    }\n    uVar4 = fcn.0046f8d6(&arg_14h, puVar8, arg_10h, arg_14h_00, iVar5);\ncode_r0x0046ff4e:\n    fcn.0040e8a0();\n    return uVar4;\n}\n",
        "token_count": 1181
    },
    "004700c3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004700c3(uint *param_1)\n\n{\n    *param_1 = 0x4af390;\n    fcn.00470889();\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(param_1[0xc]);\n    fcn.0041fd94(param_1[3]);\n    if (param_1[2] != 0) {\n        fcn.0041fd94(param_1[2]);\n        param_1[2] = 0;\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(param_1 + 6);\n    *param_1 = 0x4af394;\n    return;\n}\n",
        "token_count": 149
    },
    "0047014d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047014d(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 0x18);\n    uVar1 = *(in_ECX + 0x10);\n    if (arg_ch != '\\0') {\n        fcn.00470da3(*(in_ECX + 0x10));\n        uVar2 = fcn.00471db4(*(in_ECX + 0xc), *(in_ECX + 0x10));\n        fcn.00420db0(uVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 0x18);\n    return uVar1;\n}\n",
        "token_count": 181
    },
    "004702bd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004702bd(uint8_t *param_1)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    char cVar3;\n    uint32_t uVar4;\n    \n    cVar3 = '\\0';\n    uVar4 = 0;\n    if (*(param_1 + 0x20) != 0) {\n        cVar3 = fcn.0047019a();\n        if (cVar3 == '\\0') {\n            if (*(param_1 + 8) != 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 8));\n                *(param_1 + 8) = 0;\n            }\n            puVar2 = *(param_1 + 0x20);\n            piVar1 = puVar2 + 1;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                (***puVar2)(1);\n            }\n            *(param_1 + 0x20) = 0;\n        }\n        else {\n            uVar4 = 2;\n        }\n    }\n    if ((*param_1 & 8) == 0) {\n        if (*(param_1 + 0x24) != 0) {\n            cVar3 = fcn.0047019a();\n            if (cVar3 == '\\0') {\n                if (*(param_1 + 0x10) != 0) {\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 0x10));\n                    *(param_1 + 0x10) = 0;\n                }\n                puVar2 = *(param_1 + 0x24);\n                piVar1 = puVar2 + 1;\n                *piVar1 = *piVar1 + -1;\n                if (*piVar1 == 0) {\n                    (***puVar2)(1);\n                }\n                *(param_1 + 0x24) = 0;\n            }\n            else {\n                uVar4 = uVar4 | 4;\n            }\n        }\n    }\n    else if (cVar3 == '\\0') {\n        if (*(param_1 + 0x10) != 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 0x10));\n            *(param_1 + 0x10) = 0;\n        }\n    }\n    else {\n        uVar4 = uVar4 | 8;\n    }\n    if (((*param_1 & 1) != 0) && (*(param_1 + 0x18) != 0)) {\n        uVar4 = uVar4 | 1;\n    }\n    if (uVar4 == 0) {\n        *(param_1 + 4) = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 632
    },
    "00470379": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00470379(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    uint8_t *in_ECX;\n    \n    if ((*in_ECX & 8) != 0) {\n        if ((*arg_8h != 0) && (*arg_ch != 0)) {\n            return *arg_8h;\n        }\n        if ((*arg_10h != 0) && (*arg_14h != 0)) {\n            if (*arg_8h != 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(*arg_8h);\n                *arg_8h = 0;\n            }\n            if (*arg_ch != 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(*arg_ch);\n                *arg_ch = 0;\n            }\n            fcn.0047028f(0);\n            fcn.0047028f(0);\n            return *arg_10h;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 240
    },
    "00470597": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00470597(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint8_t *in_ECX;\n    \n    if ((*in_ECX & 8) == 0) {\n        iVar3 = *(in_ECX + 0x24);\n        if (iVar3 == 0) {\n            if (arg_ch != '\\0') {\n                fcn.0040b5c1(0x49d0d0);\n            }\n            return 0;\n        }\n    }\n    else {\n        iVar3 = *(in_ECX + 0x20);\n        if (iVar3 == 0) {\n            if (arg_ch != '\\0') {\n                fcn.0040b5c1(0x49d0d0);\n            }\n            return 0;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar3 + 0x18);\n    uVar1 = *(iVar3 + 0x10);\n    if (arg_ch != '\\0') {\n        fcn.00470da3(*(iVar3 + 0x10));\n        uVar2 = fcn.00471db4(*(iVar3 + 0xc), *(iVar3 + 0x10));\n        fcn.00420db0(uVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(iVar3 + 0x18);\n    return uVar1;\n}\n",
        "token_count": 328
    },
    "00470633": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00470633(int32_t lpBuffer, int32_t nNumberOfBytesToWrite)\n\n{\n    int32_t iVar1;\n    uint8_t *in_ECX;\n    uint lpNumberOfBytesWritten;\n    \n    lpNumberOfBytesWritten = 0;\n    if (((((*in_ECX & 1) != 0) && (*(in_ECX + 0x18) != 0)) && (lpBuffer != 0)) && (nNumberOfBytesToWrite != 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                          (*(in_ECX + 0x18), lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n        if ((iVar1 == 0) && (*(in_ECX + 0x18) != 0)) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(*(in_ECX + 0x18));\n            *(in_ECX + 0x18) = 0;\n        }\n    }\n    return lpNumberOfBytesWritten;\n}\n",
        "token_count": 227
    },
    "0047070d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047070d(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_ch;\n    uint var_8h;\n    int32_t lpNumberOfBytesRead;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_InterlockedExchange;\n    (*_sym.imp.KERNEL32.dll_InterlockedExchange)(param_1 + 0x38, 0x1f5);\n    iVar2 = *(param_1 + 8);\n    if (iVar2 == 0) {\n        iVar2 = fcn.0041fd8b(0xffff);\n    }\n    *(param_1 + 8) = iVar2;\n    *(param_1 + 0x14) = 0xffff;\n    uVar3 = fcn.0041fd8b(0xffff);\n    *(param_1 + 0xc) = uVar3;\n    iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(*(param_1 + 0x30), *(param_1 + 8), 0xffff, &lpNumberOfBytesRead, 0);\n    while ((iVar2 != 0 && (lpNumberOfBytesRead != 0))) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 0x18);\n        if (*(param_1 + 0x14) < *(param_1 + 0x10) + lpNumberOfBytesRead) {\n            uVar3 = *(param_1 + 0xc);\n            uVar4 = fcn.00442050();\n            *(param_1 + 0x14) = uVar4;\n            uVar4 = fcn.0041fd8b(uVar4);\n            *(param_1 + 0xc) = uVar4;\n            fcn.00420db0(*(param_1 + 0xc), uVar3, *(param_1 + 0x10));\n            fcn.0041fd94(uVar3);\n        }\n        fcn.00420db0(*(param_1 + 0x10) + *(param_1 + 0xc), *(param_1 + 8), lpNumberOfBytesRead);\n        *(param_1 + 0x10) = *(param_1 + 0x10) + lpNumberOfBytesRead;\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 0x18);\n        iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(*(param_1 + 0x30), *(param_1 + 8), 0xffff, &lpNumberOfBytesRead, 0);\n    }\n    if (*(param_1 + 8) != 0) {\n        fcn.0041fd94(*(param_1 + 8));\n        *(param_1 + 8) = 0;\n    }\n    (*pcVar1)(param_1 + 0x38, 0x1f6);\n    return 0x1f6;\n}\n",
        "token_count": 665
    },
    "00470889": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00470889(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    if (*(param_1 + 0x34) != 0) {\n        puVar1 = param_1 + 0x38;\n        iVar2 = (*_sym.imp.KERNEL32.dll_InterlockedExchange)(puVar1, *puVar1);\n        if (iVar2 != 0x1f6) {\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 0x18);\n            (*_sym.imp.KERNEL32.dll_TerminateThread)(*(param_1 + 0x34), 0x1f6);\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(param_1 + 0x34), 1000);\n            if (*(param_1 + 0x34) != 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 0x34));\n                *(param_1 + 0x34) = 0;\n            }\n            (*_sym.imp.KERNEL32.dll_InterlockedExchange)(puVar1, 0x1f6);\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 0x18);\n        }\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "004708f7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004708f7(uint8_t *param_1)\n\n{\n    bool bVar1;\n    bool bVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint unaff_EDI;\n    uint in_stack_fffffff0;\n    \n    bVar2 = true;\n    if (*(param_1 + 0x20) == 0) {\n        if (((*param_1 & 2) == 0) || (*(param_1 + 8) == 0)) {\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n        }\n        if (bVar1) {\n            in_stack_fffffff0 = *(param_1 + 8);\n            fcn.0041fd5b(0x3c, unaff_EDI);\n            uVar3 = fcn.0047003b(in_stack_fffffff0);\n            *(param_1 + 0x20) = uVar3;\n            fcn.00470862();\n        }\n    }\n    if (*(param_1 + 0x24) == 0) {\n        if (((*param_1 & 4) == 0) || (*(param_1 + 0x10) == 0)) {\n            bVar2 = false;\n        }\n        if ((bVar2) && ((*param_1 & 8) == 0)) {\n            uVar3 = *(param_1 + 0x10);\n            fcn.0041fd5b(0x3c, in_stack_fffffff0);\n            iVar4 = fcn.0047003b(uVar3);\n            *(param_1 + 0x24) = iVar4;\n            if (*(iVar4 + 0x34) == 0) {\n                uVar3 = (*_sym.imp.KERNEL32.dll_CreateThread)\n                                  (0, 0, fcn.00470848, iVar4, 0, &stack0xfffffff0, in_stack_fffffff0);\n                *(iVar4 + 0x34) = uVar3;\n            }\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 461
    },
    "00470bfd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00470bfd(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    \n    fcn.0040e8a0();\n    if (arg_8h != 0) {\n        cVar1 = fcn.004713db(arg_8h);\n        if (cVar1 != '\\x01') {\n            iVar3 = arg_8h;\n            cVar1 = fcn.004710a5(arg_8h);\n            if (cVar1 != '\\x01') {\n                in_ECX[3] = 8;\n                uVar2 = fcn.0041fd5b(0x10, iVar3);\n                *in_ECX = uVar2;\n                (*_sym.imp.OLEAUT32.dll_VariantClear)(uVar2);\n                iVar3 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(*in_ECX, arg_8h);\n                if (iVar3 < 0) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(*in_ECX);\n                    fcn.0041fd4d(*in_ECX);\n                    *in_ECX = 0;\n                    fcn.0040e8a0();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 296
    },
    "004713db": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004713db(uint *arg_8h)\n\n{\n    float fVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    double *in_ECX;\n    int16_t iVar6;\n    uint unaff_EDI;\n    uint32_t uVar7;\n    int32_t *arg_8h_00;\n    char16_t *arg_10h;\n    uint in_stack_ffffff30;\n    ulong in_stack_ffffff34;\n    uint *arg_8h_01;\n    uint var_ach;\n    uint var_8ch;\n    uint var_84h;\n    uint var_74h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_54h;\n    uint cIn;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint pdateOut;\n    uint wVerMinor;\n    uint var_20h;\n    uint32_t pvargDest;\n    uint pbstr;\n    uint var_10h;\n    double dStack16;\n    \n    uVar3 = *arg_8h;\n    if (0x24 < uVar3) {\n        if (0x15 < uVar3 - 0x4002) {\ncode_r0x0047170d:\n            return 0;\n        }\n    // switch table (22 cases) at 0x4718c3\n        switch(*((uVar3 - 0x4002) * 4 + 0x4718c3)) {\n        case 0x47170b:\n            goto code_r0x0047170d;\n        case 0x471725:\n            if (arg_8h[2] == 0) {\n                return 1;\n            }\n            *(in_ECX + 0xc) = 8;\n            uVar4 = fcn.0041fd5b(0x10, unaff_EDI);\n            *in_ECX = uVar4;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(uVar4);\n            **in_ECX = 9;\n            *(*in_ECX + 8) = *arg_8h[2];\n            if (*(*in_ECX + 8) == NULL) {\n                return 1;\n            }\n            (**(**(*in_ECX + 8) + 4))();\n            return 1;\n        case 0x471771:\n            if (arg_8h[2] == NULL) {\n                return 1;\n            }\n            uVar3 = *arg_8h[2];\n            break;\n        case 0x471784:\n            if (arg_8h[2] == NULL) {\n                return 1;\n            }\n            uVar3 = *arg_8h[2];\n            break;\n        case 0x471797:\n            if (arg_8h[2] == NULL) {\n                return 1;\n            }\n            uVar3 = *arg_8h[2];\n            break;\n        case 0x4717aa:\n            if (arg_8h[2] == NULL) {\n                return 1;\n            }\n            uVar3 = *arg_8h[2];\n            break;\n        case 0x4717bd:\n            if (arg_8h[2] == NULL) {\n                return 1;\n            }\n            uVar3 = *arg_8h[2];\n            break;\n        case 0x4717cf:\n            puVar2 = arg_8h[2];\n            if (puVar2 == NULL) {\n                return 1;\n            }\n            uVar3 = *puVar2;\n            uVar7 = puVar2[1];\n            goto code_r0x00471481;\n        case 0x4717e4:\n            if (arg_8h[2] == NULL) {\n                return 1;\n            }\n            fVar1 = *arg_8h[2];\n            goto code_r0x00471495;\n        case 0x4717f6:\n            if (arg_8h[2] == NULL) {\n                return 1;\n            }\n            fVar1 = *arg_8h[2];\n            goto code_r0x00471495;\n        case 0x471808:\n            if ((arg_8h[2] == NULL) || (*arg_8h[2] == 0)) {\n                fcn.0041fd5b(0x10, unaff_EDI);\n                goto code_r0x004714dc;\n            }\n            fcn.0041fd5b(0x10, unaff_EDI);\n            uVar4 = *arg_8h[2];\n            goto code_r0x004714d5;\n        case 0x471837:\n            if (arg_8h[2] == NULL) {\n                return 1;\n            }\n            iVar6 = *arg_8h[2];\n            goto code_r0x004714f4;\n        case 0x47184a:\n            if (arg_8h[2] == 0) {\n                return 1;\n            }\n            fcn.00470bfd(arg_8h[2]);\n            return 1;\n        }\n        goto code_r0x0047144f;\n    }\n    if (uVar3 == 0x24) {\n        (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n        arg_8h_00 = arg_8h[3];\n        pbstr = 0;\n        var_10h = 0;\n        (**(*arg_8h_00 + 0x2c))(arg_8h_00, 0, 0, &pvargDest, 0);\n        if ((pvargDest & 0x8000) == 0) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n            return 0;\n        }\n        uVar3 = pvargDest & 0xfff;\n        if (uVar3 == 0xc) {\n            *(in_ECX + 0xc) = 0xc;\n            fcn.0041fd5b(0x14, arg_8h_00);\n            uVar4 = fcn.0046f05f(pbstr);\n        }\n        else {\n            if (uVar3 == 0xd) {\n                *(in_ECX + 0xc) = 0xd;\n                iVar5 = fcn.0041fd5b(0x14, arg_8h_00);\n                fcn.0040c25d();\n                *in_ECX = iVar5;\n                *(iVar5 + 0x10) = pbstr;\n                goto code_r0x004716eb;\n            }\n            if (uVar3 == 0xe) {\n                *(in_ECX + 0xc) = 0xe;\n                uVar4 = fcn.0041fd5b(0x14, arg_8h_00);\n                fcn.0040c25d();\n                *in_ECX = uVar4;\n                fcn.004084e7(pbstr);\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)(pbstr);\n                goto code_r0x004716eb;\n            }\n            *(in_ECX + 0xc) = 0xf;\n            fcn.0041fd5b(0x18, arg_8h_00);\n            uVar4 = fcn.004023a4(pbstr);\n        }\n        *in_ECX = uVar4;\ncode_r0x004716eb:\n        pvargDest = CONCAT22(pvargDest._2_2_, 0x1a);\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n        return 1;\n    }\n    if (0x17 < uVar3) {\n        return 0;\n    }\n    // switch table (24 cases) at 0x471863\n    switch(*(uVar3 * 4 + 0x471863)) {\n    case 0x47140e:\n        *(in_ECX + 0xc) = 8;\n        uVar4 = fcn.0041fd5b(0x10, unaff_EDI);\n        *in_ECX = uVar4;\n        (*_sym.imp.OLEAUT32.dll_VariantClear)(uVar4);\n        iVar5 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(*in_ECX, arg_8h);\n        if (-1 < iVar5) {\n            return 1;\n        }\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*in_ECX);\n        fcn.0041fd4d(*in_ECX);\n        *in_ECX = 0;\n        return 1;\n    case 0x47144b:\n        uVar3 = *(arg_8h + 2);\n        break;\n    case 0x471464:\n        uVar3 = *(arg_8h + 2);\n        break;\n    case 0x47146a:\n        uVar3 = *(arg_8h + 2);\n        break;\n    case 0x471470:\n        uVar3 = *(arg_8h + 2);\n        break;\n    case 0x471476:\n        uVar3 = arg_8h[2];\n        break;\n    case 0x47147b:\n        uVar3 = arg_8h[2];\n        uVar7 = arg_8h[3];\ncode_r0x00471481:\n        fcn.0040e8a0();\n        *(in_ECX + 0xc) = 2;\n        *(in_ECX + 4) = uVar7;\n        goto code_r0x0047145b;\n    case 0x471492:\n        fVar1 = arg_8h[2];\n        goto code_r0x00471495;\n    case 0x4714ab:\n        fVar1 = *(arg_8h + 2);\n        goto code_r0x00471495;\n    case 0x4714b0:\n        fVar1 = *(arg_8h + 2) / *0x4c81c8;\n        goto code_r0x00471495;\n    case 0x4714c1:\n        iVar5 = arg_8h[2];\n        fcn.0041fd5b(0x10, unaff_EDI);\n        if (iVar5 == 0) {\ncode_r0x004714dc:\n            uVar4 = fcn.0040c25d();\n            goto code_r0x004714e1;\n        }\n        uVar4 = arg_8h[2];\ncode_r0x004714d5:\n        uVar4 = fcn.0040b606(uVar4);\ncode_r0x004714e1:\n        *(in_ECX + 1) = uVar4;\n        *(in_ECX + 0xc) = 4;\n        return 1;\n    case 0x4714f0:\n        iVar6 = *(arg_8h + 2);\ncode_r0x004714f4:\n        fcn.0040e8a0();\n        *(in_ECX + 0xc) = 9;\n        *in_ECX = iVar6 != 0;\n        return 1;\n    case 0x47150d:\n        (*_sym.imp.OLEAUT32.dll_UnRegisterTypeLib)(*(arg_8h + 2), &wVerMinor);\n        fcn.0041faa3(&var_ach, L\"%4d%02d%02d%02d%02d%02d\", wVerMinor);\n        arg_8h_01 = &var_ach;\ncode_r0x0047155a:\n        fcn.0040b5c1(arg_8h_01);\n        return 1;\n    case 0x471564:\n        cIn = *arg_8h;\n        uStack68 = arg_8h[1];\n        uStack64 = arg_8h[2];\n        uStack60 = arg_8h[3];\n        (*_sym.imp.OLEAUT32.dll_VarDateFromI1)();\n        fVar1 = _pdateOut;\ncode_r0x00471495:\n        dStack16 = fVar1;\n        fcn.0040e8a0();\n        *in_ECX = dStack16;\n        *(in_ECX + 0xc) = 3;\n        return 1;\n    case 0x471585:\n        arg_8h_01 = 0x49d0d0;\n        goto code_r0x0047155a;\n    case 0x47158c:\n        uVar4 = 0x49d0d0;\n        fcn.0040b606(0x49d0d0);\n        fcn.00402032(0x2a, 0, uVar4, in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff34 >> 0x20);\n        fcn.00401fd5(&var_5ch);\n        goto code_r0x004715b5;\n    case 0x4715bf:\n        if (arg_8h[2] == -0x7ffdfffc) {\n            arg_10h = L\"Default\";\n            fcn.0040b606(L\"Default\");\n            fcn.00402032(0x29, 0, arg_10h, in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff34 >> 0x20);\n            fcn.00401fd5(&var_74h);\n        }\n        else {\n            uVar4 = 0x49d0d0;\n            fcn.0040b606(0x49d0d0);\n            fcn.00402032(0x2a, 0, uVar4, in_stack_ffffff30, in_stack_ffffff34, in_stack_ffffff34 >> 0x20);\n            fcn.00401fd5(&var_8ch);\n        }\ncode_r0x004715b5:\n        fcn.0040b1ff();\n        return 1;\n    case 0x47170b:\n        goto code_r0x0047170d;\n    }\ncode_r0x0047144f:\n    fcn.0040e8a0();\n    *(in_ECX + 0xc) = 1;\ncode_r0x0047145b:\n    *in_ECX = uVar3;\n    return 1;\n}\n",
        "token_count": 3212
    },
    "00471d00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00471d00(uint64_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    float10 extraout_ST0;\n    uint64_t uVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = 0;\n    if (*(param_1 + 0xc) == 3) {\n        uVar2 = fcn.0042e00f(*param_1, *param_1 >> 0x20);\n        if ((uVar2 & 0x1f8) == 0) {\n            return uVar2;\n        }\n        uVar4 = fcn.00442050();\n        if (uVar4 != extraout_ST0) {\n            return uVar2;\n        }\n    }\n    else if (*(param_1 + 0xc) == 1) {\n        uVar4 = *param_1;\n    }\n    else {\n        if (*(param_1 + 0xc) != 2) {\n            return 0;\n        }\n        uVar4 = *param_1;\n    }\n    if (uVar4 == 0) {\n        uVar2 = uVar2 | 0x40000;\n    }\n    else {\n        if ((uVar4 & 1) == 0) {\n            uVar3 = 0x220000;\n            uVar1 = 0x210000;\n        }\n        else {\n            uVar3 = 0x120000;\n            uVar1 = 0x110000;\n        }\n        if ((0xffffffff < uVar4) || (-1 < uVar4)) {\n            uVar1 = uVar3;\n        }\n        uVar2 = uVar2 | uVar1;\n    }\n    return uVar2;\n}\n",
        "token_count": 407
    },
    "00471f64": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00471f64(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    uint32_t *puVar5;\n    int32_t var_4h;\n    \n    puVar4 = 0x4d2620;\n    if (*0x4d2fe0 == 0) {\n        fcn.0042e478(0);\n        fcn.00471f24();\n    }\n    *0x4d06e0 = 0x270;\n    iVar3 = 0xe3;\n    *0x4d2fe4 = 0x4d2620;\n    do {\n        *puVar4 = ((*puVar4 ^ puVar4[1]) & 0x7ffffffe ^ *puVar4) >> 1 ^ -((puVar4[1] & 1) != 0) & 0x9908b0df ^\n                  puVar4[0x18d];\n        puVar4 = puVar4 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_4h = 0x18c;\n    uVar2 = *puVar4;\n    do {\n        puVar5 = puVar4;\n        uVar1 = puVar5[1];\n        var_4h = var_4h + -1;\n        *puVar5 = ((uVar2 ^ uVar1) & 0x7ffffffe ^ uVar2) >> 1 ^ -((uVar1 & 1) != 0) & 0x9908b0df ^ puVar5[-0xe3];\n        uVar2 = uVar1;\n        puVar4 = puVar5 + 1;\n    } while (var_4h != 0);\n    puVar5[1] = ((uVar1 ^ *0x4d2620) & 0x7ffffffe ^ uVar1) >> 1 ^ -((*0x4d2620 & 1) != 0) & 0x9908b0df ^ puVar5[-0xe2];\n    return;\n}\n",
        "token_count": 489
    },
    "0047208f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047208f(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.0042e99c(0x20000);\n    *(param_1 + 0x438) = uVar1;\n    uVar1 = fcn.0042e99c(0x10000);\n    *(param_1 + 0x45c) = uVar1;\n    iVar2 = fcn.0042e99c(0x10000);\n    *(param_1 + 0x458) = iVar2;\n    if (((*(param_1 + 0x438) == 0) || (*(param_1 + 0x45c) == 0)) || (iVar2 == 0)) {\n        fcn.004723f1();\n        uVar1 = 5;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 218
    },
    "004720ea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004720ea(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    \n    *(in_ECX + 0x44e) = 0;\n    iVar2 = *(in_ECX + 0x450);\n    uVar3 = *(in_ECX + 0x44c);\n    do {\n        arg_8h = arg_8h + -1;\n        if (iVar2 == 0) {\n            if (*(in_ECX + 0x14) == 1) {\n                iVar2 = *(in_ECX + 0xc);\n                uVar3 = *(*(in_ECX + 4) + iVar2) << 8 | uVar3;\n                *(in_ECX + 0xc) = iVar2 + 1;\n                *(in_ECX + 0x44c) = uVar3;\n                uVar1 = *(iVar2 + 1 + *(in_ECX + 4));\n                *(in_ECX + 0xc) = iVar2 + 2;\n                uVar3 = uVar1 | uVar3;\n            }\n            else {\n                uVar3 = fcn.004725b1();\n                *(in_ECX + 0x44c) = *(in_ECX + 0x44c) | (uVar3 & 0xff) << 8;\n                uVar3 = fcn.004725b1();\n                *(in_ECX + 0xc) = *(in_ECX + 0xc) + 2;\n                uVar3 = *(in_ECX + 0x44c) | uVar3 & 0xff;\n            }\n            iVar2 = 0x10;\n        }\n        uVar3 = uVar3 * 2;\n        iVar2 = iVar2 + -1;\n        *(in_ECX + 0x44c) = uVar3;\n        *(in_ECX + 0x450) = iVar2;\n    } while (arg_8h != 0);\n    return uVar3 >> 0x10;\n}\n",
        "token_count": 475
    },
    "00472311": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00472311(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(param_1 + 0x10);\n    do {\n        if (uVar1 <= *(param_1 + 0x43c)) {\n            fcn.00472642();\n            return 0;\n        }\n        iVar3 = fcn.004720ea(1);\n        if (iVar3 == 1) {\n            uVar2 = fcn.004720ea(8);\n            *((*(param_1 + 0x43c) & 0x1ffff) + *(param_1 + 0x438)) = uVar2;\n            *(param_1 + 0x43c) = *(param_1 + 0x43c) + 1;\n            *(param_1 + 0x440) = *(param_1 + 0x440) + 1;\n        }\n        else {\n            iVar4 = fcn.004720ea(0xf);\n            iVar3 = fcn.00472187();\n            uVar6 = *(param_1 + 0x43c) - iVar4;\n            for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n                uVar5 = uVar6 & 0x1ffff;\n                uVar6 = uVar6 + 1;\n                *((*(param_1 + 0x43c) & 0x1ffff) + *(param_1 + 0x438)) = *(uVar5 + *(param_1 + 0x438));\n                *(param_1 + 0x43c) = *(param_1 + 0x43c) + 1;\n                *(param_1 + 0x440) = *(param_1 + 0x440) + 1;\n            }\n        }\n        fcn.00472524();\n        fcn.00472429();\n    } while (*(param_1 + 0x448) == '\\0');\n    return 4;\n}\n",
        "token_count": 496
    },
    "00472475": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00472475(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t in_ECX;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = in_ECX;\n    if (*(in_ECX + 0x14) == 1) {\n        fcn.00420db0(&var_8h, *(in_ECX + 0xc) + *(in_ECX + 4), 8);\n    }\n    else {\n        fcn.0042e854(&var_8h, 1, 8, *(in_ECX + 0x1c));\n    }\n    *(in_ECX + 0xc) = *(in_ECX + 0xc) + 8;\n    var_4h = var_4h & 0xffffff00;\n    *arg_8h = CONCAT31(CONCAT21(CONCAT11(var_4h, var_4h._1_1_), var_4h._2_1_), var_4h._3_1_);\n    iVar1 = fcn.0042e910(&var_8h, \"EA06\");\n    return iVar1 != 0;\n}\n",
        "token_count": 277
    },
    "00472524": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00472524(int32_t *param_1)\n\n{\n    if (param_1[0x111] < param_1[0x10f]) {\n        if (param_1[6] == 1) {\n            do {\n                *(param_1[2] + *param_1) = *((param_1[0x111] & 0x1ffffU) + param_1[0x10e]);\n                param_1[2] = param_1[2] + 1;\n                param_1[0x111] = param_1[0x111] + 1;\n            } while (param_1[0x111] < param_1[0x10f]);\n        }\n        else {\n            do {\n                fcn.004725f5(*((param_1[0x111] & 0x1ffffU) + param_1[0x10e]));\n                param_1[0x111] = param_1[0x111] + 1;\n                param_1[2] = param_1[2] + 1;\n            } while (param_1[0x111] < param_1[0x10f]);\n        }\n    }\n    param_1[0x110] = 0;\n    return;\n}\n",
        "token_count": 289
    },
    "00472865": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_5h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00472865(uint arg_8h, uint *lpNewFileName)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t arg_10h;\n    uint *extraout_ECX;\n    uint *puVar3;\n    uint unaff_ESI;\n    int32_t iVar4;\n    uint *puVar5;\n    uint32_t unaff_EDI;\n    uint var_11b4h;\n    uint var_fach;\n    uint var_da4h;\n    uint var_b9ch;\n    uint var_994h;\n    uint var_980h;\n    uint var_97ch;\n    uint var_970h;\n    uint var_768h;\n    uint var_55eh;\n    uint var_52ch;\n    uint var_324h;\n    uint lpExistingFileName;\n    uint uStackY196;\n    uint in_stack_ffffff50;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    int32_t var_20h;\n    uint *var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    uchar auStack12 [3];\n    uint var_5h;\n    \n    stack0xfffffff8 = 0x472872;\n    fcn.00441ef0();\n    var_10h = 0x472885;\n    var_30h = extraout_ECX;\n    var_ch = unaff_EDI;\n    _auStack12 = unaff_ESI;\n    fcn.004724f4();\n    var_10h = 0x10000;\n    var_14h = 0x47288f;\n    var_10h = fcn.0041fd8b();\n    var_14h = 0x472899;\n    fcn.004070c2(var_10h);\n    var_14h = 0x4728a4;\n    fcn.0047266c();\n    var_14h = 0;\n    var_18h = extraout_ECX[1];\n    var_1ch = 0x1;\n    var_20h = 0x4728b9;\n    fcn.00406abf(1, var_18h, 0);\n    var_20h = 0x4c63d8;\n    var_24h = arg_8h;\n    var_28h = 0x4728c6;\n    iVar2 = fcn.004251c2(arg_8h, 0x4c63d8);\n    var_24h = &fcn.00472865::var_11b4h;\n    var_28h = arg_8h;\n    if (iVar2 == 0) {\n        var_2ch = 0x4728e2;\n        iVar2 = fcn.00472d84(arg_8h, var_24h);\n        if (iVar2 == 0) {\n            var_2ch = &fcn.00472865::var_fach;\n            var_30h = &fcn.00472865::var_da4h;\n            var_34h = &fcn.00472865::var_b9ch;\n            var_38h = &fcn.00472865::var_28h;\n            var_3ch = lpNewFileName;\n            var_40h = 0x47290b;\n            fcn.0042d513(lpNewFileName, var_38h, var_34h, var_30h, var_2ch);\n            var_2ch = &fcn.00472865::var_28h;\n            var_30h = &fcn.00472865::var_52ch;\n            var_34h = 0x47291e;\n            fcn.00424913(var_30h, var_2ch);\n            var_34h = &fcn.00472865::var_b9ch;\n            var_38h = &fcn.00472865::var_52ch;\n            var_3ch = 0x472931;\n            fcn.00428fc8(var_38h, var_34h);\n            var_3ch = &fcn.00472865::var_fach;\n            var_40h = &fcn.00472865::var_da4h;\n            var_44h = &fcn.00472865::var_b9ch;\n            fcn.0042d513(&fcn.00472865::var_11b4h, &fcn.00472865::var_28h, var_44h, var_40h, var_3ch);\n            var_2ch = &fcn.00472865::var_da4h;\n            var_30h = &fcn.00472865::var_52ch;\n            var_34h = 0x47296c;\n            fcn.00428fc8(var_30h, var_2ch);\n            var_34h = &fcn.00472865::var_fach;\n            var_38h = &fcn.00472865::var_52ch;\n            var_3ch = 0x47297f;\n            fcn.00428fc8(var_38h, var_34h);\n            lpNewFileName = &fcn.00472865::var_52ch;\ncode_r0x0047299d:\n            var_2ch = *extraout_ECX;\n            var_30h = 0x1;\n            var_34h = 0x1;\n            var_38h = &fcn.00472865::var_5h;\n            var_3ch = 0x4729af;\n            fcn.00406a95(var_38h, 1, 1, var_2ch);\n            var_3ch = *extraout_ECX;\n            var_40h = 0x1;\n            var_44h = 0x4;\n            fcn.00406a95(&fcn.00472865::var_ch, 4, 1, var_3ch);\n            var_18h = var_ch ^ 0x87bc;\n            fcn.00406a95(&fcn.00472865::var_ch, 4, 1, *extraout_ECX);\n            fcn.00406a95(&fcn.00472865::var_ch, 4, 1, *extraout_ECX);\n            var_24h = var_ch ^ 0xa685;\n            fcn.00406a95(&fcn.00472865::var_40h, 4, 1, *extraout_ECX);\n            fcn.00406a95(&fcn.00472865::var_44h, 4, 1, *extraout_ECX);\n            fcn.00406a95(&fcn.00472865::var_38h, 4, 1, *extraout_ECX);\n            fcn.00406a95(&fcn.00472865::var_3ch, 4, 1, *extraout_ECX);\n            fcn.00472f35();\n            var_20h = fcn.0042e57b(&fcn.00472865::lpExistingFileName, 0x4c6a98);\n            if (var_20h == 0) {\n                in_stack_ffffff50 = 9;\n            }\n            else {\n                fcn.004726b0(extraout_ECX[2] + 0x2477);\n                iVar2 = 0;\n                puVar3 = extraout_ECX;\n                puVar5 = 0x1;\n                if (0 < var_18h) {\n                    do {\n                        if (var_18h < iVar2 + 0x10000) {\n                            arg_10h = var_18h - iVar2;\n                        }\n                        else {\n                            arg_10h = 0x10000;\n                        }\n                        var_34h = iVar2 + arg_10h;\n                        uStackY196 = 0x472aad;\n                        fcn.00406a95(var_14h, 1, arg_10h, *puVar3);\n                        iVar2 = var_14h;\n                        var_2ch = NULL;\n                        if (0 < arg_10h) {\n                            iVar4 = 0;\n                            do {\n                                uVar1 = fcn.004727f0();\n                                *(iVar2 + iVar4) = *(iVar2 + iVar4) ^ uVar1;\n                                iVar4 = iVar4 + 1;\n                                puVar3 = var_30h;\n                            } while (iVar4 < arg_10h);\n                        }\n                        fcn.0047203b(var_14h, arg_10h);\n                        uStackY196 = 0x472afa;\n                        fcn.0042db43(var_14h, 1, arg_10h, var_20h);\n                        iVar2 = var_34h;\n                        puVar5 = var_1ch;\n                    } while (var_34h < var_18h);\n                }\n                in_stack_ffffff50 = 0;\n                fcn.0042e608(var_20h);\n                if (var_24h == puVar5) {\n                    if (var_5h == '\\x01') {\n                        fcn.004724f4();\n                        var_980h = 0;\n                        var_97ch = 0;\n                        fcn.0042d27b(&fcn.00472865::var_970h, &fcn.00472865::lpExistingFileName, 0x104);\n                        var_768h._0_2_ = 0;\n                        fcn.0042d27b(&fcn.00472865::var_768h + 2, lpNewFileName, 0x104);\n                        var_55eh._0_2_ = 0;\n                        iVar2 = fcn.004721ec();\n                        if (iVar2 != 0) {\n                            (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n                            in_stack_ffffff50 = 0xb;\n                            goto code_r0x00472bf3;\n                        }\n                    }\n                    else {\n                        iVar2 = (*_sym.imp.KERNEL32.dll_CopyFileW)();\n                        if (iVar2 == 0) {\n                            (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n                            in_stack_ffffff50 = 7;\n                            goto code_r0x00472bf3;\n                        }\n                    }\n                    (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n                    fcn.00472ef6(&fcn.00472865::var_3ch);\n                }\n                else {\n                    (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n                    in_stack_ffffff50 = 10;\n                }\n            }\n            goto code_r0x00472bf3;\n        }\n    }\n    else {\n        var_2ch = 0x47298f;\n        iVar2 = fcn.00472d84(arg_8h, var_24h);\n        if (iVar2 == 0) goto code_r0x0047299d;\n    }\n    var_2ch = 0x6;\ncode_r0x00472bf3:\n    *var_10h = *var_10h + -1;\n    if (*var_10h == 0) {\n        fcn.0041fd4d(var_10h);\n        fcn.0041fd94();\n    }\n    return in_stack_ffffff50;\n}\n",
        "token_count": 2822
    },
    "00472c17": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00472c17(uint arg_8h, uint *arg_ch, uint32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_ECX;\n    uint32_t arg_ch_00;\n    uint uVar4;\n    uint in_stack_fffff8e0;\n    uint var_68ch;\n    uint var_47ch;\n    uint var_478h;\n    uint var_468h;\n    uint var_464h;\n    uint32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    uint var_5h;\n    \n    var_10h = in_ECX;\n    fcn.004724f4();\n    var_14h = 1;\n    fcn.00406abf(*in_ECX, in_ECX[1], 0);\n    iVar1 = fcn.00472d84(arg_8h, &var_68ch);\n    if (iVar1 == 0) {\n        fcn.00406a95(&var_5h, 1, 1, *in_ECX);\n        fcn.00406a95(&var_ch, 4, 1, *in_ECX);\n        arg_ch_00 = var_ch ^ 0x87bc;\n        fcn.00406a95(&var_ch, 4, 1, *in_ECX);\n        uVar3 = *in_ECX;\n        *arg_10h = var_ch ^ 0x87bc;\n        fcn.00406a95(&var_ch, 4, 1, uVar3);\n        fcn.00406abf(*var_10h, 0x10, 1);\n        uVar2 = fcn.0042e99c(*arg_10h);\n        uVar3 = fcn.0042e99c(arg_ch_00);\n        fcn.00406a95(uVar3, arg_ch_00, 1, *var_10h);\n        fcn.0047281c(var_10h[2] + 0x2477);\n        fcn.0047203b(uVar3, arg_ch_00);\n        if ((var_ch ^ 0xa685) == var_14h) {\n            uVar4 = uVar2;\n            if (var_5h == '\\x01') {\n                fcn.004724f4();\n                var_468h = 1;\n                var_464h = 1;\n                var_47ch = uVar2;\n                var_478h = uVar3;\n                fcn.004721ec();\n                uVar4 = uVar3;\n                uVar3 = uVar2;\n            }\n            fcn.0042490e(uVar4);\n            *arg_ch = uVar3;\n            in_stack_fffff8e0 = 0;\n        }\n        else {\n            fcn.0042490e(uVar2);\n            fcn.0042490e(uVar3);\n            in_stack_fffff8e0 = 10;\n        }\n    }\n    return in_stack_fffff8e0;\n}\n",
        "token_count": 708
    },
    "00472d84": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00472d84(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_14h;\n    int32_t iVar1;\n    uint *in_ECX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_224h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_5h;\n    \n    var_5h._0_1_ = '\\x01';\n    iVar2 = 0;\n    do {\n        fcn.00406a95(&var_14h, 1, 4, *in_ECX);\n        fcn.0047281c(0x18ee);\n        var_10h._0_1_ = 0;\n        iVar1 = fcn.0042e910(&var_14h, \"FILE\");\n        if (iVar1 == 0) {\n            var_18h = iVar2 + 1;\n            fcn.00406a95(&var_ch, 4, 1, *in_ECX);\n            uVar3 = var_ch ^ 0xadbc;\n            iVar2 = uVar3 * 2;\n            fcn.00406a95(&var_224h, 1, iVar2, *in_ECX);\n            fcn.0047281c(uVar3 + 0xb33f);\n            arg_14h = *in_ECX;\n            *(&var_224h + iVar2) = 0;\n            fcn.00406a95(&var_ch, 4, 1, arg_14h);\n            uVar3 = var_ch ^ 0xf820;\n            iVar2 = uVar3 * 2;\n            fcn.00406a95(arg_ch, 1, iVar2, *in_ECX);\n            fcn.0047281c(uVar3 + 0xf479);\n            *(iVar2 + arg_ch) = 0;\n            iVar2 = fcn.004251c2(&var_224h, arg_8h);\n            if ((iVar2 == 0) ||\n               ((iVar1 = fcn.004251c2(arg_8h, 0x4c63d8),  iVar2 = var_18h,  iVar1 == 0 && (var_18h == 0)))) {\n                return 0;\n            }\n            fcn.00406abf(*in_ECX, 1, 1);\n            fcn.00406a95(&var_1ch, 4, 1, *in_ECX);\n            var_1ch = var_1ch ^ 0x87bc;\n            fcn.00406abf(*in_ECX, var_1ch + 0x18, 1);\n        }\n        else {\n            var_5h._0_1_ = '\\0';\n        }\n        if (var_5h != '\\x01') {\n            return 6;\n        }\n    } while( true );\n}\n",
        "token_count": 684
    },
    "00473038": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00473038(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_ECX;\n    uint32_t uVar5;\n    uint unaff_ESI;\n    \n    iVar2 = arg_8h;\n    *in_ECX = 0x49d100;\n    uVar1 = *(arg_8h + 8);\n    in_ECX[2] = uVar1;\n    if (uVar1 == 0) {\n        in_ECX[3] = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        uVar5 = 8;\n        if (7 < uVar1) {\n            uVar5 = uVar1;\n        }\n        in_ECX[3] = uVar5;\n        uVar3 = fcn.0041fd8b(-(uVar5 * 4 >> 0x20 != 0) | uVar5 * 4);\n        arg_8h = 0;\n        in_ECX[1] = uVar3;\n        if (in_ECX[2] != 0) {\n            do {\n                iVar4 = fcn.0041fd5b(0x10, unaff_ESI);\n                unaff_ESI = *(*(iVar2 + 4) + arg_8h * 4);\n                *(iVar4 + 8) = 0;\n                fcn.004119e0(unaff_ESI);\n                *(in_ECX[1] + arg_8h * 4) = iVar4;\n                arg_8h = arg_8h + 1;\n            } while (arg_8h < in_ECX[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 400
    },
    "004732a6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: lpCaption\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004732a6(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint arg_8h;\n    int32_t extraout_ECX;\n    ulong uVar3;\n    ulong uVar4;\n    uchar auStackY8284 [8144];\n    uint uStackY140;\n    uint lpCaption;\n    uint *var_44h;\n    uchar *var_34h;\n    int32_t var_30h;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_24h;\n    uint lpText;\n    uint var_4h;\n    \n    fcn.00441ef0();\n    pcVar1 = _sym.imp.USER32.dll_LoadStringW;\n    if ((*0x4d1360 == '\\0') && (*(extraout_ECX + 0xfc) != 1)) {\n        (*_sym.imp.USER32.dll_LoadStringW)();\n        var_24h = 0x4732fe;\n        fcn.0040b606(&stack0xffffdfa4);\n        var_24h = 0xfff;\n        puStack44 = &stack0xffffdfa4;\n        uStack48 = 0x72;\n        var_30h = *0x4d1358;\n        var_34h = 0x473310;\n        (*pcVar1)();\n        var_34h = &stack0xffffdfa4;\n        fcn.0040b606(var_34h);\n        uVar3 = fcn.00405e5a(*(extraout_ECX + 0xf8));\n        uVar4 = fcn.004698c0(uVar3 >> 0x20);\n        var_44h = 0x47333c;\n        arg_8h = fcn.004698f4(uVar4 >> 0x20);\n        var_44h = 0x473346;\n        fcn.0040c25d();\n        var_44h = &fcn.004732a6::var_34h;\n        cVar2 = fcn.00469928(arg_8h, var_44h);\n        if (cVar2 == '\\0') {\n            fcn.0041faa3(&stack0xffffdfa4, L\"Line %d  (File \\\"%s\\\"):\\n\\n\", *(extraout_ECX + 0xf8));\n        }\n        else {\n            fcn.0041faa3(&stack0xffffdfa4, L\"Line %d  (File \\\"%s\\\"):\\n\\n\", uVar4);\n        }\n        fcn.0040b606(&stack0xffffdfa4);\n        if (uVar3 != 0) {\n            fcn.004052b7(uVar3);\n            fcn.004052b7(0x49d128);\n        }\n        fcn.0040c25d();\n        fcn.004084e7(L\"^ ERROR \");\n        fcn.004052b7(0x4c7350);\n        fcn.00407cf8(&fcn.004732a6::var_24h);\n        fcn.004052b7(0x49d128);\n        fcn.004052b7(L\"\\nError: \");\n        fcn.00407cf8(&fcn.004732a6::var_44h);\n        if (*0x4d1364 == '\\0') {\n            (*_sym.imp.USER32.dll_MessageBoxW)();\n        }\n        else if (var_30h == 0) {\n            fcn.00469af8(L\"\\\"%s\\\" (%d) : ==> %s:\\n\", *(extraout_ECX + 200));\n        }\n        else {\n            uStackY140 = 0x47342c;\n            fcn.00469af8(L\"\\\"%s\\\" (%d) : ==> %s:\\n%s\\n%s\\n\", var_34h);\n        }\n        *(extraout_ECX + 0xfc) = 1;\n        *0x4d135c = ((*(extraout_ECX + 0x120) != '\\0') - 1 & 0x80000f8f) + 0x7ffff072;\n        fcn.0040b1ff();\n        fcn.0040b1ff();\n        fcn.0040b1ff();\n        fcn.0040b1ff();\n        fcn.0040b1ff();\n    }\n    return;\n}\n",
        "token_count": 1024
    },
    "004734ba": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: lpCaption\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004734ba(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t arg_8h_00;\n    int32_t extraout_ECX;\n    int32_t iVar3;\n    ulong uVar4;\n    uchar auStackY8284 [8160];\n    uint uStackY124;\n    uint lpCaption;\n    uint arg_10h;\n    uint var_48h;\n    uint var_38h;\n    uchar *var_34h;\n    uint uStack52;\n    int32_t iStack48;\n    uchar *var_28h;\n    uint uStack40;\n    uint var_18h;\n    uint lpText;\n    uint var_4h;\n    \n    fcn.00441ef0();\n    pcVar1 = _sym.imp.USER32.dll_LoadStringW;\n    if ((*0x4d1360 == '\\0') && (iVar3 = 1,  *(extraout_ECX + 0xfc) != 1)) {\n        (*_sym.imp.USER32.dll_LoadStringW)();\n        uStack40 = 0x473513;\n        fcn.0040b606(&stack0xffffdfa4);\n        uStack40 = 0xfff;\n        var_28h = &stack0xffffdfa4;\n        iStack48 = arg_8h;\n        uStack52 = *0x4d1358;\n        var_34h = 0x47352a;\n        (*pcVar1)();\n        var_34h = &stack0xffffdfa4;\n        var_38h = 0x473539;\n        fcn.0040b606(var_34h);\n        var_38h = *(extraout_ECX + 0xf8);\n        uVar4 = fcn.00405e5a(var_38h);\n        arg_8h_00 = uVar4;\n        uVar4 = fcn.004698c0(uVar4 >> 0x20);\n        arg_10h = uVar4;\n        var_48h = fcn.004698f4(uVar4 >> 0x20);\n        fcn.0040c25d();\n        cVar2 = fcn.00469928(var_48h, &fcn.004734ba::var_38h);\n        if (cVar2 == '\\0') {\n            arg_10h = *(extraout_ECX + 0xf8);\n        }\n        fcn.0041faa3(&stack0xffffdfa4, L\"Line %d  (File \\\"%s\\\"):\\n\\n\", arg_10h);\n        fcn.0040b606(&stack0xffffdfa4);\n        if (arg_8h_00 != 0) {\n            fcn.004052b7(arg_8h_00);\n            fcn.004052b7(0x49d128);\n        }\n        fcn.0040c25d();\n        if (-1 < arg_ch) {\n            fcn.004084e7(arg_8h_00);\n            fcn.0040ad22(arg_ch, 0xffffffff);\n            fcn.004052b7(L\"^ ERROR\");\n            fcn.00407cf8(&fcn.004734ba::var_28h);\n            fcn.004052b7(0x49d128);\n        }\n        fcn.004052b7(L\"\\nError: \");\n        fcn.00407cf8(&fcn.004734ba::var_48h);\n        if (*0x4d1364 == '\\0') {\n            (*_sym.imp.USER32.dll_MessageBoxW)();\n        }\n        else if (var_34h == NULL) {\n            fcn.00469af8(L\"\\\"%s\\\" (%d) : ==> %s:\\n\", *(extraout_ECX + 200));\n        }\n        else {\n            uStackY124 = 0x47364c;\n            fcn.00469af8(L\"\\\"%s\\\" (%d) : ==> %s:\\n%s\\n%s\\n\", var_38h);\n        }\n        *(extraout_ECX + 0xfc) = 1;\n        if (*(extraout_ECX + 0x120) != '\\0') {\n            iVar3 = arg_8h + 0x7ffff000;\n        }\n        *0x4d135c = iVar3;\n        fcn.0040b1ff();\n        fcn.0040b1ff();\n        fcn.0040b1ff();\n        fcn.0040b1ff();\n        fcn.0040b1ff();\n    }\n    return;\n}\n",
        "token_count": 1092
    },
    "00473792": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00473792(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint lpMsg;\n    int32_t var_18h;\n    \n    if (((*0x4d1361 == '\\0') || (*(param_1 + 0x14d) != '\\0')) && ((*0x4d18e8 == '\\0' || (*(param_1 + 0xfc) != 0)))) {\n        *0x4d2520 = *0x4d2520 + 1;\n        if ((((*(param_1 + 0xfc) != 0) || (*(param_1 + 0x101) != '\\0')) || ((*0x4d2520 & 0x7ff) == 0)) ||\n           (iVar2 = (*_sym.imp.USER32.dll_GetInputState)(),  iVar2 != 0)) {\n            *(param_1 + 0x101) = 0;\n            while (iVar2 = (*_sym.imp.USER32.dll_PeekMessageW)(&lpMsg, 0, 0, 0, 1),  iVar2 != 0) {\n                if (var_18h == 0x12) {\n                    *(param_1 + 0x100) = 1;\n                    *(param_1 + 0xfc) = 1;\n                    break;\n                }\n                if (*0x4d18d8 == -1) goto code_r0x00473853;\n                if (((*0x4d1914 <= *0x4d18d8) || (puVar1 = **(*0x4d1910 + *0x4d18d8 * 4),  puVar1 == NULL)) ||\n                   (puVar1[6] == 0)) {\n                    *0x4d18d8 = -1;\n                    goto code_r0x00473853;\n                }\n                iVar2 = (*_sym.imp.USER32.dll_TranslateAcceleratorW)(*puVar1, puVar1[6], &lpMsg);\n                if (iVar2 == 0) {\ncode_r0x00473853:\n                    iVar2 = fcn.0041ed18(&lpMsg);\n                    if (iVar2 == 0) {\n                        (*_sym.imp.USER32.dll_TranslateMessage)(&lpMsg);\n                        (*_sym.imp.USER32.dll_DispatchMessageW)(&lpMsg);\n                    }\n                }\n            }\n        }\n        if (*0x4d1362 == '\\x01') {\n            *0x4d1367 = '\\0';\n            *0x4d1362 = '\\0';\n            *(param_1 + 0xfc) = 1;\n        }\n        else if (*(param_1 + 0xfc) != 1) {\n            if (*0x4d1367 != '\\0') {\n                return 0xb;\n            }\n            goto code_r0x004738e4;\n        }\n        uVar3 = 1;\n    }\n    else {\ncode_r0x004738e4:\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 690
    },
    "004738e9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004738e9(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    uVar1 = *(in_ECX + 0xf8);\n    uVar2 = *(in_ECX + 0x164);\n    if (arg_ch != '\\0') {\n        fcn.0046efd1(arg_8h);\n    }\n    fcn.0040f060(arg_8h);\n    if (arg_ch != '\\0') {\n        fcn.0040c000();\n    }\n    while (uVar2 < *(in_ECX + 0x164)) {\n        fcn.00404271();\n    }\n    *(in_ECX + 0xf8) = uVar1;\n    return;\n}\n",
        "token_count": 189
    },
    "00473948": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00473948(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint arg_8h_00;\n    int32_t arg_8h_01;\n    uint32_t uVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = in_ECX[0x59];\n    if (arg_ch != '\\0') {\n        fcn.0046efd1(arg_8h);\n    }\n    arg_8h_00 = fcn.00473ac6();\n    in_ECX[0x10b] = 0;\n    in_ECX[0x3f] = 0;\n    fcn.0040f060(arg_8h);\n    cVar1 = *(*(*in_ECX + 4) + 0xd + in_ECX);\n    arg_8h_01 = *(*(*in_ECX + 4) + 8 + in_ECX);\n    iVar5 = arg_8h_01;\n    if (cVar1 != '\\0') {\n        iVar5 = *(arg_8h_01 + 0x38);\n    }\n    uVar2 = *(iVar5 + 0x10);\n    if (arg_10h != NULL) {\n        if (uVar2 == 0) {\n            fcn.0040e8a0();\n            *arg_10h = 0;\n            arg_10h[3] = 1;\n        }\n        else {\n            if (cVar1 != '\\0') {\n                arg_8h_01 = *(arg_8h_01 + 0x38);\n            }\n            fcn.0040c5e7(arg_8h_01);\n        }\n    }\n    uVar4 = fcn.00473a0c(arg_8h_00);\n    if (arg_ch != '\\0') {\n        uVar4 = fcn.0040c000();\n    }\n    while (uVar3 < in_ECX[0x59]) {\n        uVar4 = fcn.00404271();\n    }\n    return uVar4 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 515
    },
    "00473a0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00473a0c(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    uint *extraout_ECX;\n    uint *puVar1;\n    \n    fcn.004032b9();\n    fcn.0040c5e7(arg_8h + 2);\n    if (in_ECX + 0x1e8 != arg_8h + 6) {\n        fcn.0040c1c3(arg_8h + 6);\n    }\n    *(in_ECX + 0x98) = arg_8h[10];\n    *(in_ECX + 0x2e0) = arg_8h[0xb];\n    fcn.00463908(arg_8h[0xc]);\n    puVar1 = in_ECX + 0x410;\n    *(in_ECX + 0x2e8) = arg_8h[0xd];\n    if (puVar1 != arg_8h + 0xe) {\n        fcn.0040c1c3(arg_8h + 0xe);\n        puVar1 = extraout_ECX;\n    }\n    *(in_ECX + 0x420) = arg_8h[0x12];\n    *(in_ECX + 0x424) = arg_8h[0x13];\n    *(in_ECX + 0x42c) = arg_8h[0x14];\n    if (*(in_ECX + 0xfc) != 1) {\n        *(in_ECX + 0xfc) = arg_8h[0x15];\n    }\n    *(in_ECX + 0xf8) = *arg_8h;\n    fcn.00473260(puVar1);\n    return;\n}\n",
        "token_count": 390
    },
    "00473c14": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00473c14(uint arg_8h, int32_t arg_ch, uint noname_2, int32_t arg_14h)\n\n{\n    if ((arg_ch == 1) && (arg_14h != 0)) {\n        (*_sym.imp.USER32.dll_SendMessageW)(arg_8h, 0x467, 1, arg_14h);\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "004740d3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004740d3(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint arg_8h_00;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t unaff_ESI;\n    uint unaff_EDI;\n    uint *arg_14h;\n    uint32_t uStack84;\n    uint uStack80;\n    int32_t *piStack76;\n    uint32_t uStack72;\n    int32_t *piStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack32;\n    int32_t iStack28;\n    \n    uStack72 = *(arg_8h + 8);\n    iVar1 = **(arg_8h + 4);\n    fcn.00408e90();\n    uVar3 = fcn.0040b606(**(iVar1 + 8));\n    uVar7 = 0;\n    uStack80 = CONCAT31(uStack80._1_3_, 1);\n    uVar3 = uVar3 & 0xffffff00;\n    piStack68 = NULL;\n    uStack64 = 0;\n    uStack60 = 0;\n    uStack56 = 0;\n    uStack52 = 0;\n    uStack48 = 0;\n    uVar4 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    if (iStack28 != 0) {\n        cVar2 = fcn.0046e0b7();\n        if (cVar2 != '\\0') {\n            fcn.0046d6b9();\n            if (1 < uStack80) {\n                unaff_ESI = fcn.0040ce67();\n                unaff_ESI = unaff_ESI & 1;\n                uVar3 = uVar3 & 0xffffff00 | unaff_ESI;\n                uVar5 = fcn.0040ce67();\n                if ((uVar5 & 2) != 0) {\n                    uVar3 = uVar3 & 0xffffff00 | unaff_ESI & 0xff;\n                }\n            }\n            uStack84 = uStack84 & 0xffffff00;\n            arg_14h = &uStack56;\n            cVar2 = fcn.00479a49(uStack32, &uStack72, &uStack64, arg_14h, uVar3, uStack84);\n            if (cVar2 == '\\0') {\n                uVar7 = 0xffffffff;\n            }\n            else if (arg_14h == '\\0') {\n                fcn.0040e8a0();\n                *arg_ch = unaff_EDI;\n                arg_ch[3] = 2;\n                arg_ch[1] = unaff_ESI;\n            }\n            else {\n                arg_8h_00 = fcn.00407d93();\n                fcn.004083e0(arg_8h_00, 1);\n                uStack64 = 0;\n                uStack60 = 2;\n                piStack68 = unaff_ESI;\n                fcn.00408a30(arg_8h_00, &uStack72, 1);\n                fcn.0040e8a0();\n                piStack68 = uStack84;\n                uStack64 = 0;\n                uStack60 = 2;\n                uStack72 = uVar3;\n                fcn.00408a30(arg_8h_00, &uStack72, 1);\n                fcn.0040e8a0();\n                uStack72 = uStack80;\n                piStack68 = piStack76;\n                uStack60 = 2;\n                uStack64 = 0;\n                fcn.00408a30(arg_8h_00, &uStack72, 1);\n                fcn.0040e8a0();\n            }\n            goto code_r0x004742f6;\n        }\n    }\n    fcn.0040e8a0();\n    *arg_ch = 0xffffffff;\n    arg_ch[3] = 1;\n    iVar1 = *(*piStack76 + 4);\n    iVar6 = *(iVar1 + 8 + piStack76);\n    if (*(iVar1 + 0xd + piStack76) != '\\0') {\n        iVar6 = *(iVar6 + 0x38);\n    }\n    *(iVar6 + 0x14) = 1;\n    iVar6 = *(iVar1 + 8 + piStack76);\n    if (*(iVar1 + 0xd + piStack76) != '\\0') {\n        iVar6 = *(iVar6 + 0x38);\n    }\n    *(iVar6 + 0x18) = 0;\ncode_r0x004742f6:\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar4);\n    fcn.0040b1ff();\n    return uVar7;\n}\n",
        "token_count": 1129
    },
    "004743de": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004743de(int32_t arg_8h, uint arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    char16_t cVar3;\n    char16_t cVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    char cVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint uVar11;\n    uint uVar12;\n    int32_t *in_ECX;\n    uint32_t uVar13;\n    int32_t unaff_EBX;\n    uchar *puVar14;\n    int32_t *unaff_ESI;\n    int32_t iVar15;\n    uint16_t *puVar16;\n    char16_t *pcVar17;\n    uint32_t uStack284;\n    int32_t *apiStack268 [2];\n    uint uStack260;\n    uint uStack256;\n    uchar auStack236 [232];\n    \n    uStack260 = 0;\n    fcn.0040b5c1(0x49d0d0);\n    iVar15 = **(arg_8h + 4);\n    fcn.00408e90();\n    puVar5 = *(iVar15 + 8);\n    uVar11 = *puVar5;\n    uVar12 = puVar5[1];\n    piVar6 = puVar5[2];\n    apiStack268[0] = puVar5[3];\n    *apiStack268[0] = *apiStack268[0] + 1;\n    fcn.0040c7c9();\n    (*_sym.imp.USER32.dll_CharLowerBuffW)(uVar11, uVar12);\n    puVar16 = 0x4c6b90;\n    uVar13 = uStack284;\n    uVar8 = fcn.004248f3(0x4c6b90);\n    iVar15 = 2;\n    if (uVar13 == uVar8) {\n        uVar8 = uVar13;\n        if (uVar13 != 0) {\n            do {\n                uVar1 = *puVar16;\n                uVar8 = uVar1;\n                uVar2 = *(puVar16 + unaff_EBX + -0x4c6b90);\n                in_ECX = unaff_ESI;\n                if (uVar2 != uVar1) {\n                    iVar9 = (-(uVar2 < uVar1) & 0xfffffffe) + 1;\n                    goto code_r0x00474491;\n                }\n                puVar16 = puVar16 + 1;\n                uVar13 = uVar13 - 1;\n            } while (uVar13 != 0);\n        }\n        iVar9 = 0;\ncode_r0x00474491:\n        if (iVar9 != 0) goto code_r0x004744a9;\n        iVar15 = 99;\ncode_r0x0047463e:\n        iVar9 = 0x61;\n        puVar14 = auStack236;\n        in_ECX = unaff_ESI;\n        do {\n            fcn.0046f168(iVar9);\n            fcn.004052b7(0x4c6c00);\n            iVar10 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(uVar8);\n            if ((iVar10 == iVar15) || ((iVar15 == 99 && (iVar10 != 1)))) {\n                fcn.0040562b(0x49d034);\n                fcn.00424913(puVar14, in_ECX);\n                puVar14 = puVar14 + 8;\n            }\n            iVar9 = iVar9 + 1;\n        } while (iVar9 < 0x7b);\n        if (0 < piVar6) {\n            uVar11 = fcn.00407d93();\n            iVar15 = 1;\n            fcn.004083e0(uVar11, 1);\n            uStack260 = 0;\n            uStack256 = 1;\n            apiStack268[0] = piVar6;\n            fcn.00408a30(uVar11, apiStack268, 1);\n            fcn.0040e8a0();\n            if (0 < piVar6) {\n                puVar14 = auStack236;\n                do {\n                    uVar12 = fcn.0040b606(puVar14);\n                    fcn.0040890f(uVar12);\n                    fcn.00408a30(uVar11, apiStack268, 1);\n                    fcn.0040e8a0();\n                    fcn.0040b1ff();\n                    iVar15 = iVar15 + 1;\n                    puVar14 = puVar14 + 8;\n                } while (iVar15 <= piVar6);\n            }\n            goto code_r0x00474762;\n        }\n    }\n    else {\ncode_r0x004744a9:\n        pcVar17 = L\"cdrom\";\n        uVar13 = uStack284;\n        uVar8 = fcn.004248f3(L\"cdrom\");\n        if (uVar13 == uVar8) {\n            uVar8 = uVar13;\n            if (uVar13 != 0) {\n                do {\n                    cVar3 = *pcVar17;\n                    uVar8 = cVar3;\n                    cVar4 = *(pcVar17 + unaff_EBX + -0x4c6b98);\n                    in_ECX = unaff_ESI;\n                    if (cVar4 != cVar3) {\n                        iVar9 = (-(cVar4 < cVar3) & 0xfffffffe) + 1;\n                        goto code_r0x004744ec;\n                    }\n                    pcVar17 = pcVar17 + 1;\n                    uVar13 = uVar13 - 1;\n                } while (uVar13 != 0);\n            }\n            iVar9 = 0;\ncode_r0x004744ec:\n            if (iVar9 == 0) {\n                iVar15 = 5;\n                goto code_r0x0047463e;\n            }\n        }\n        pcVar17 = L\"removable\";\n        uVar13 = uStack284;\n        uVar8 = fcn.004248f3(L\"removable\");\n        if (uVar13 == uVar8) {\n            uVar8 = uVar13;\n            if (uVar13 != 0) {\n                do {\n                    cVar3 = *pcVar17;\n                    uVar8 = cVar3;\n                    cVar4 = *(pcVar17 + unaff_EBX + -0x4c6bb0);\n                    in_ECX = unaff_ESI;\n                    if (cVar4 != cVar3) {\n                        iVar9 = (-(cVar4 < cVar3) & 0xfffffffe) + 1;\n                        goto code_r0x00474547;\n                    }\n                    pcVar17 = pcVar17 + 1;\n                    uVar13 = uVar13 - 1;\n                } while (uVar13 != 0);\n            }\n            iVar9 = 0;\ncode_r0x00474547:\n            if (iVar9 == 0) goto code_r0x0047463e;\n        }\n        pcVar17 = L\"fixed\";\n        uVar13 = uStack284;\n        uVar8 = fcn.004248f3(L\"fixed\");\n        if (uVar13 == uVar8) {\n            uVar8 = uVar13;\n            if (uVar13 != 0) {\n                do {\n                    cVar3 = *pcVar17;\n                    uVar8 = cVar3;\n                    cVar4 = *(pcVar17 + unaff_EBX + -0x4c6bc4);\n                    in_ECX = unaff_ESI;\n                    if (cVar4 != cVar3) {\n                        iVar15 = (-(cVar4 < cVar3) & 0xfffffffe) + 1;\n                        goto code_r0x00474592;\n                    }\n                    pcVar17 = pcVar17 + 1;\n                    uVar13 = uVar13 - 1;\n                } while (uVar13 != 0);\n            }\n            iVar15 = 0;\ncode_r0x00474592:\n            if (iVar15 == 0) {\n                iVar15 = 3;\n                goto code_r0x0047463e;\n            }\n        }\n        pcVar17 = L\"network\";\n        uVar13 = fcn.004248f3(L\"network\");\n        uVar8 = uStack284;\n        if (uStack284 == uVar13) {\n            if (uStack284 != 0) {\n                do {\n                    cVar3 = *pcVar17;\n                    uVar8 = cVar3;\n                    cVar4 = *(pcVar17 + unaff_EBX + -0x4c6bd0);\n                    in_ECX = unaff_ESI;\n                    if (cVar4 != cVar3) {\n                        iVar15 = (-(cVar4 < cVar3) & 0xfffffffe) + 1;\n                        goto code_r0x004745fa;\n                    }\n                    pcVar17 = pcVar17 + 1;\n                    uStack284 = uStack284 - 1;\n                } while (uStack284 != 0);\n            }\n            iVar15 = 0;\ncode_r0x004745fa:\n            if (iVar15 == 0) {\n                iVar15 = 4;\n                goto code_r0x0047463e;\n            }\n        }\n        cVar7 = fcn.00403536();\n        if (cVar7 != '\\0') {\n            iVar15 = 6;\n            goto code_r0x0047463e;\n        }\n        cVar7 = fcn.00403536();\n        if (cVar7 != '\\0') {\n            iVar15 = 0;\n            goto code_r0x0047463e;\n        }\n    }\n    iVar15 = *(*in_ECX + 4);\n    iVar9 = *(iVar15 + 8 + in_ECX);\n    if (*(iVar15 + 0xd + in_ECX) != '\\0') {\n        iVar9 = *(iVar9 + 0x38);\n    }\n    *(iVar9 + 0x14) = 1;\n    iVar9 = *(iVar15 + 8 + in_ECX);\n    if (*(iVar15 + 0xd + in_ECX) != '\\0') {\n        iVar9 = *(iVar9 + 0x38);\n    }\n    *(iVar9 + 0x18) = 0;\ncode_r0x00474762:\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 2332
    },
    "00474776": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00474776(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *extraout_ECX;\n    uchar auStackY65556 [65492];\n    uint uStackY64;\n    uint uStackY60;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00441ef0();\n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    iVar3 = **(arg_8h + 4);\n    fcn.00408e90();\n    piVar1 = *(*(iVar3 + 8) + 0xc);\n    *piVar1 = *piVar1 + 1;\n    fcn.0046d6b9();\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationW)();\n    if (iVar3 == 0) {\n        uStackY60 = 0x474800;\n        fcn.0040b5c1(0x49d0d0);\n        iVar3 = *(*extraout_ECX + 4);\n        iVar4 = *(iVar3 + 8 + extraout_ECX);\n        if (*(iVar3 + 0xd + extraout_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 1;\n        iVar4 = *(iVar3 + 8 + extraout_ECX);\n        if (*(iVar3 + 0xd + extraout_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x18) = 0;\n    }\n    else {\n        uStackY60 = 0x4747f4;\n        fcn.0040b5c1(&stack0xfffeffec);\n    }\n    uStackY60 = 0x474834;\n    fcn.0040b1ff();\n    uStackY64 = 0x47483b;\n    uStackY60 = uVar2;\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    return 0;\n}\n",
        "token_count": 556
    },
    "00474844": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00474844(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *extraout_ECX;\n    uchar auStackY65556 [65492];\n    uint uStackY64;\n    uint uStackY60;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00441ef0();\n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    iVar3 = **(arg_8h + 4);\n    fcn.00408e90();\n    piVar1 = *(*(iVar3 + 8) + 0xc);\n    *piVar1 = *piVar1 + 1;\n    fcn.0046d6b9();\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationW)();\n    if (iVar3 == 0) {\n        uStackY60 = 0x4748ce;\n        fcn.0040b5c1(0x49d0d0);\n        iVar3 = *(*extraout_ECX + 4);\n        iVar4 = *(iVar3 + 8 + extraout_ECX);\n        if (*(iVar3 + 0xd + extraout_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 1;\n        iVar4 = *(iVar3 + 8 + extraout_ECX);\n        if (*(iVar3 + 0xd + extraout_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x18) = 0;\n    }\n    else {\n        uStackY60 = 0x4748c2;\n        fcn.0040b5c1(&stack0xfffeffec);\n    }\n    uStackY60 = 0x474902;\n    fcn.0040b1ff();\n    uStackY64 = 0x474909;\n    uStackY60 = uVar2;\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    return 0;\n}\n",
        "token_count": 556
    },
    "00474912": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00474912(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    uint unaff_EBX;\n    uchar auStackY65560 [65492];\n    uint uStackY68;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00441ef0();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    iVar2 = **(arg_8h + 4);\n    fcn.00408e90();\n    piVar1 = *(*(iVar2 + 8) + 0xc);\n    *piVar1 = *piVar1 + 1;\n    fcn.0046d6b9();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationW)();\n    if (iVar2 == 0) {\n        fcn.0040b5c1(0x49d0d0);\n        iVar2 = *(*extraout_ECX + 4);\n        iVar3 = *(iVar2 + 8 + extraout_ECX);\n        if (*(iVar2 + 0xd + extraout_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 1;\n        iVar3 = *(iVar2 + 8 + extraout_ECX);\n        if (*(iVar2 + 0xd + extraout_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n    }\n    else {\n        uStackY68 = 0x474998;\n        fcn.0041faa3(&stack0xfffeffe8, 0x4c6e38, unaff_EBX);\n        fcn.0040b5c1(&stack0xfffeffe8);\n    }\n    fcn.0040b1ff();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    return 0;\n}\n",
        "token_count": 535
    },
    "004749fd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004749fd(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    char16_t *arg_8h_00;\n    int32_t iVar5;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    int32_t *var_4h;\n    \n    uVar3 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    fcn.0040b5c1(0x49d0d0);\n    arg_ch = 1;\n    if ((1 < *(arg_8h + 8)) && ((arg_ch = fcn.0040ce67(),  arg_ch < 1 || (3 < arg_ch)))) {\n        arg_ch = 1;\n    }\n    iVar4 = **(arg_8h + 4);\n    fcn.00408e90();\n    puVar1 = *(iVar4 + 8);\n    var_24h = *puVar1;\n    var_20h = puVar1[1];\n    var_1ch = puVar1[2];\n    var_18h = puVar1[3];\n    *var_18h = *var_18h + 1;\n    fcn.0040b606(0x4c6828);\n    cVar2 = fcn.00401f20();\n    if (cVar2 == '\\0') {\n        fcn.0046d6b9();\n        fcn.00407cf8(&var_24h);\n        fcn.0040562b(0x49d034);\n    }\n    else {\n        fcn.004052b7(L\"PhysicalDrive\");\n        iVar4 = **(arg_8h + 4);\n        fcn.00408e90();\n        fcn.00407cf8(*(iVar4 + 8));\n    }\n    if (arg_ch == 1) {\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(var_24h);\n        if (iVar4 == 1) {\ncode_r0x00474c18:\n            iVar4 = *(*var_4h + 4);\n            iVar5 = *(iVar4 + 8 + var_4h);\n            if (*(iVar4 + 0xd + var_4h) != '\\0') {\n                iVar5 = *(iVar5 + 0x38);\n            }\n            *(iVar5 + 0x14) = 1;\n            iVar5 = *(iVar4 + 8 + var_4h);\n            if (*(iVar4 + 0xd + var_4h) != '\\0') {\n                iVar5 = *(iVar5 + 0x38);\n            }\n            *(iVar5 + 0x18) = 0;\n            goto code_r0x00474c43;\n        }\n        if (iVar4 == 2) {\n            arg_8h_00 = L\"Removable\";\n        }\n        else if (iVar4 == 3) {\n            arg_8h_00 = L\"Fixed\";\n        }\n        else if (iVar4 == 4) {\n            arg_8h_00 = L\"Network\";\n        }\n        else if (iVar4 == 5) {\n            arg_8h_00 = L\"CDROM\";\n        }\n        else if (iVar4 == 6) {\n            arg_8h_00 = L\"RAMDisk\";\n        }\n        else {\n            arg_8h_00 = L\"Unknown\";\n        }\n    }\n    else if (arg_ch == 2) {\n        iVar4 = fcn.0046d588();\n        if ((iVar4 == -0x7fffbffb) && (iVar4 = fcn.0046d604(),  iVar4 == -0x7fffbffb)) goto code_r0x00474c18;\n        if (iVar4 != 0) goto code_r0x00474c43;\n        arg_8h_00 = 0x4c6d24;\n    }\n    else {\n        if (arg_ch != 3) goto code_r0x00474c43;\n        cVar2 = fcn.0046d509();\n        if (cVar2 == '\\0') goto code_r0x00474c18;\n        if (0xf < arg_8h) goto code_r0x00474c43;\n    // switch table (16 cases) at 0x474c65\n        switch(*(arg_8h * 4 + 0x474c65)) {\n        case 0x474ba1:\n            arg_8h_00 = L\"Unknown\";\n            break;\n        case 0x474ba8:\n            arg_8h_00 = L\"SCSI\";\n            break;\n        case 0x474baf:\n            arg_8h_00 = L\"ATAPI\";\n            break;\n        case 0x474bb6:\n            arg_8h_00 = 0x4c6d44;\n            break;\n        case 0x474bbd:\n            arg_8h_00 = L\"1394\";\n            break;\n        case 0x474bc4:\n            arg_8h_00 = 0x4c6d58;\n            break;\n        case 0x474bcb:\n            arg_8h_00 = L\"Fibre\";\n            break;\n        case 0x474bd2:\n            arg_8h_00 = 0x4c6d6c;\n            break;\n        case 0x474bd9:\n            arg_8h_00 = L\"RAID\";\n            break;\n        case 0x474be0:\n            arg_8h_00 = L\"iSCSI\";\n            break;\n        case 0x474be7:\n            arg_8h_00 = 0x4c6d8c;\n            break;\n        case 0x474bee:\n            arg_8h_00 = L\"SATA\";\n            break;\n        case 0x474bf5:\n            arg_8h_00 = 0x4c6da0;\n            break;\n        case 0x474bfc:\n            arg_8h_00 = 0x4c6da8;\n            break;\n        case 0x474c03:\n            arg_8h_00 = L\"Virtual\";\n            break;\n        case 0x474c0a:\n            arg_8h_00 = L\"FileBackedVirtual\";\n        }\n    }\n    fcn.0040b5c1(arg_8h_00);\ncode_r0x00474c43:\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar3);\n    return 0;\n}\n",
        "token_count": 1519
    },
    "00474ca5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00474ca5(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    uint *arg_8h_00;\n    uint uVar8;\n    uint uVar9;\n    uint var_238h;\n    uint var_38h;\n    int32_t var_34h;\n    int16_t *var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int16_t *var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_8h = 0x100;\n    var_4h = *(arg_8h + 8);\n    uVar6 = 0;\n    var_ch = 0;\n    fcn.00408e90();\n    var_10h = fcn.00408fa0();\n    fcn.00408e90();\n    var_18h = fcn.00408fa0();\n    if (2 < var_4h) {\n        uVar6 = fcn.0040ce67();\n        var_ch = uVar6;\n    }\n    iVar3 = fcn.00428d9b(var_10h, 0x4c6b88, 3);\n    var_34h = 2 - (iVar3 != 0);\n    var_1ch = 0;\n    var_24h = var_18h;\n    if ((*var_10h == 0) || (var_28h = var_10h,  *var_10h == 0x2a)) {\n        var_28h = NULL;\n    }\n    if (*var_10h == 0x2a) {\n        uVar6 = uVar6 | 0x80;\n        var_ch = uVar6;\n    }\n    bVar7 = var_4h == 4;\n    if (var_4h < 4) {\n        uVar9 = 0;\n        uVar8 = 0;\n    }\n    else {\n        var_4h = *(*(arg_8h + 4) + 0xc);\n        if (bVar7) {\n            fcn.00408e90();\n            uVar9 = **(var_4h + 8);\n            uVar8 = 0;\n        }\n        else {\n            fcn.00408e90();\n            uVar9 = **(var_4h + 8);\n            iVar3 = *(*(arg_8h + 4) + 0x10);\n            fcn.00408e90();\n            uVar8 = **(iVar3 + 8);\n            uVar6 = var_ch;\n        }\n    }\n    iVar3 = (*_sym.imp.MPR.dll_WNetUseConnectionW)(0, &var_38h, uVar8, uVar9, uVar6, &var_238h, &var_8h, &var_14h);\n    if (iVar3 != 0) {\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        if (iVar3 == 5) {\n            iVar3 = *(*in_ECX + 4);\n            iVar4 = *(iVar3 + 8 + in_ECX);\n            if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = 2;\n        }\n        else if ((iVar3 == 0x55) || (iVar3 == 0x4b2)) {\n            iVar3 = *(*in_ECX + 4);\n            iVar4 = *(iVar3 + 8 + in_ECX);\n            if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = 3;\n        }\n        else {\n            iVar4 = *in_ECX;\n            if (iVar3 == 0x4b0) {\n                iVar3 = *(iVar4 + 4);\n                iVar4 = *(iVar3 + 8 + in_ECX);\n                if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                    iVar4 = *(iVar4 + 0x38);\n                }\n                *(iVar4 + 0x14) = 4;\n            }\n            else {\n                if (iVar3 != 0x43) {\n                    iVar4 = *(iVar4 + 4);\n                    cVar1 = *(in_ECX + iVar4 + 0xd);\n                    iVar5 = *(in_ECX + iVar4 + 8);\n                    if (iVar3 == 0x56) {\n                        if (cVar1 != '\\0') {\n                            iVar5 = *(iVar5 + 0x38);\n                        }\n                        *(iVar5 + 0x14) = 6;\n                        iVar3 = *(in_ECX + iVar4 + 8);\n                        if (*(in_ECX + iVar4 + 0xd) != '\\0') {\n                            iVar3 = *(iVar3 + 0x38);\n                        }\n                        *(iVar3 + 0x18) = 0;\n                    }\n                    else {\n                        if (cVar1 != '\\0') {\n                            iVar5 = *(iVar5 + 0x38);\n                        }\n                        *(iVar5 + 0x14) = 1;\n                        iVar5 = *(in_ECX + iVar4 + 8);\n                        if (*(in_ECX + iVar4 + 0xd) != '\\0') {\n                            iVar5 = *(iVar5 + 0x38);\n                        }\n                        *(iVar5 + 0x18) = 0;\n                        fcn.00407cb4(iVar3, 0);\n                    }\n                    goto code_r0x00474f1b;\n                }\n                iVar3 = *(iVar4 + 4);\n                iVar4 = *(iVar3 + 8 + in_ECX);\n                if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                    iVar4 = *(iVar4 + 0x38);\n                }\n                *(iVar4 + 0x14) = 5;\n            }\n        }\n        iVar4 = *(iVar3 + 8 + in_ECX);\n        if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x18) = 0;\n    }\ncode_r0x00474f1b:\n    piVar2 = var_10h;\n    if (*var_10h == 0x2a) {\n        if ((var_14h & 0x100) == 0) {\n            arg_8h_00 = 0x49d0d0;\n        }\n        else {\n            arg_8h_00 = &var_238h;\n        }\n        fcn.0040b5c1(arg_8h_00);\n    }\n    fcn.0041fd94(piVar2);\n    fcn.0041fd94(var_18h);\n    return 0;\n}\n",
        "token_count": 1646
    },
    "00474fbd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00474fbd(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_804h;\n    uint var_4h;\n    \n    var_4h = 0x400;\n    iVar2 = **(arg_8h + 4);\n    fcn.00408e90();\n    iVar2 = (*_sym.imp.MPR.dll_WNetGetConnectionW)(**(iVar2 + 8), &var_804h, &var_4h);\n    if (iVar2 == 0) {\n        fcn.0040b5c1(&var_804h);\n    }\n    else {\n        fcn.0040b5c1(0x49d0d0);\n        iVar1 = *(*in_ECX + 4);\n        iVar3 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 1;\n        iVar3 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n        fcn.00407cb4(iVar2, 0);\n    }\n    return 0;\n}\n",
        "token_count": 350
    },
    "004750eb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004750eb(int32_t arg_8h, double *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *in_ECX;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    double dStack20;\n    uint var_8h;\n    \n    uVar4 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    *(arg_ch + 0xc) = 1;\n    iVar5 = **(arg_8h + 4);\n    fcn.00408e90();\n    puVar1 = *(iVar5 + 8);\n    uVar2 = *puVar1;\n    piVar3 = puVar1[3];\n    *piVar3 = *piVar3 + 1;\n    fcn.0046d6b9();\n    iVar5 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceExW)(uVar2, &var_8h, &var_20h, &var_18h);\n    if (iVar5 == 0) {\n        iVar5 = *(*in_ECX + 4);\n        iVar6 = *(iVar5 + 8 + in_ECX);\n        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x14) = 1;\n        iVar6 = *(iVar5 + 8 + in_ECX);\n        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x18) = 0;\n    }\n    else {\n        dStack20 = _var_8h * *0x4c81a8;\n        fcn.0040e8a0();\n        *arg_ch = dStack20;\n        *(arg_ch + 0xc) = 3;\n    }\n    fcn.0040b1ff();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar4);\n    return 0;\n}\n",
        "token_count": 545
    },
    "004751ce": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004751ce(int32_t arg_8h, double *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *in_ECX;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    double dStack20;\n    uint var_8h;\n    \n    uVar4 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    *(arg_ch + 0xc) = 1;\n    iVar5 = **(arg_8h + 4);\n    fcn.00408e90();\n    puVar1 = *(iVar5 + 8);\n    uVar2 = *puVar1;\n    piVar3 = puVar1[3];\n    *piVar3 = *piVar3 + 1;\n    fcn.0046d6b9();\n    iVar5 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceExW)(uVar2, &var_20h, &var_8h, &var_18h);\n    if (iVar5 == 0) {\n        iVar5 = *(*in_ECX + 4);\n        iVar6 = *(iVar5 + 8 + in_ECX);\n        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x14) = 1;\n        iVar6 = *(iVar5 + 8 + in_ECX);\n        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x18) = 0;\n    }\n    else {\n        dStack20 = _var_8h * *0x4c81a8;\n        fcn.0040e8a0();\n        *arg_ch = dStack20;\n        *(arg_ch + 0xc) = 3;\n    }\n    fcn.0040b1ff();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar4);\n    return 0;\n}\n",
        "token_count": 545
    },
    "004752b1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004752b1(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    char16_t *arg_8h_00;\n    int32_t *in_ECX;\n    int32_t iVar6;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    iVar5 = **(arg_8h + 4);\n    fcn.00408e90();\n    puVar1 = *(iVar5 + 8);\n    uVar2 = *puVar1;\n    iVar5 = puVar1[1];\n    *puVar1[3] = *puVar1[3] + 1;\n    fcn.0046d6b9();\n    iVar6 = 0;\n    if (iVar5 == 3) {\n        piVar4 = fcn.0040660f(1);\n        if (*piVar4 == 0x3a) {\n            piVar4 = fcn.0040660f(2);\n            if (*piVar4 == 0x5c) {\n                iVar5 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceW)(uVar2, &var_ch, &var_8h, &var_4h, &arg_8h);\n                if (iVar5 == 0) {\n                    iVar6 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                }\n                goto code_r0x0047534b;\n            }\n        }\n    }\n    iVar6 = 3;\ncode_r0x0047534b:\n    if (iVar6 == 0) {\n        arg_8h_00 = L\"READY\";\n    }\n    else if (iVar6 == 3) {\n        arg_8h_00 = L\"INVALID\";\n    }\n    else if (iVar6 == 0x13) {\n        arg_8h_00 = L\"READONLY\";\n    }\n    else if (iVar6 == 0x15) {\n        arg_8h_00 = L\"NOTREADY\";\n    }\n    else {\n        arg_8h_00 = L\"UNKNOWN\";\n    }\n    fcn.0040b5c1(arg_8h_00);\n    if (iVar6 != 0) {\n        iVar5 = *(*in_ECX + 4);\n        iVar6 = *(iVar5 + 8 + in_ECX);\n        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x14) = 1;\n        iVar6 = *(iVar5 + 8 + in_ECX);\n        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x18) = 0;\n    }\n    fcn.0040b1ff();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar3);\n    return 0;\n}\n",
        "token_count": 741
    },
    "00475411": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00475411(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    char cVar5;\n    int32_t in_ECX;\n    int32_t iVar6;\n    \n    cVar5 = fcn.00479bc8(&arg_8h, **(arg_8h + 4), 0xffffffff);\n    puVar4 = arg_ch;\n    iVar3 = arg_8h;\n    if (cVar5 == '\\0') {\n        fcn.0040e8a0();\n        *puVar4 = 0;\n        puVar4[3] = 1;\n    }\n    else {\n        piVar1 = **(*(in_ECX + 0x19c) + arg_8h * 4);\n        if (*piVar1 == 0) {\n            if (piVar1[1] != 0) {\n                fcn.00407bbe(piVar1[1]);\n            }\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_FindClose)(piVar1[2]);\n        }\n        iVar6 = *(in_ECX + 0x19c);\n        iVar2 = **(iVar6 + iVar3 * 4);\n        if (iVar2 != 0) {\n            fcn.004731cf(iVar2);\n            iVar6 = *(in_ECX + 0x19c);\n        }\n        **(iVar6 + iVar3 * 4) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 355
    },
    "004755f7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004755f7(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t in_ECX;\n    uint32_t var_4h;\n    \n    var_4h = in_ECX & 0xffffff00;\n    if (2 < *(arg_8h + 8)) {\n        iVar2 = fcn.0040ce67();\n        if (iVar2 == 1) {\n            var_4h = CONCAT31(in_ECX >> 8, 1);\n        }\n    }\n    fcn.00408e90();\n    cVar1 = fcn.0046e0b7();\n    if (cVar1 == '\\0') {\n        iVar2 = **(arg_8h + 4);\n        fcn.00408e90();\n        uVar3 = **(iVar2 + 8);\n        iVar2 = *(*(arg_8h + 4) + 4);\n        fcn.00408e90();\n        uVar3 = (*_sym.imp.KERNEL32.dll_CreateHardLinkW)(**(iVar2 + 8), uVar3, 0);\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = uVar3;\n        iVar2 = fcn.0040ce67();\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if ((iVar2 == 0xb7) && (var_4h != '\\0')) {\n                iVar2 = *(*(arg_8h + 4) + 4);\n                fcn.00408e90();\n                (*_sym.imp.KERNEL32.dll_DeleteFileW)(**(iVar2 + 8));\n                iVar2 = **(arg_8h + 4);\n                fcn.00408e90();\n                uVar3 = **(iVar2 + 8);\n                iVar2 = *(*(arg_8h + 4) + 4);\n                fcn.00408e90();\n                uVar3 = (*_sym.imp.KERNEL32.dll_CreateHardLinkW)(**(iVar2 + 8), uVar3, 0);\n                fcn.0040e8a0();\n                arg_ch[3] = 1;\n                *arg_ch = uVar3;\n            }\n        }\n    }\n    else {\n        iVar2 = (*(arg_8h + 4))[1];\n        fcn.00408e90();\n        uVar3 = **(iVar2 + 8);\n        iVar2 = **(arg_8h + 4);\n        fcn.00408e90();\n        uVar3 = fcn.00473c3c(**(iVar2 + 8), uVar3, var_4h);\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 674
    },
    "0047573c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047573c(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t extraout_EDX;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    int32_t *unaff_ESI;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uchar *arg_18h;\n    int32_t *piVar10;\n    uchar auStack128 [4];\n    uint uStack124;\n    int32_t *piStack120;\n    uchar *puStack116;\n    int32_t *piStack112;\n    char16_t *arg_8h_00;\n    uchar auStack92 [4];\n    uint uStack88;\n    uchar auStack84 [4];\n    int32_t iStack80;\n    int32_t *piStack76;\n    char16_t *pcStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    char16_t *pcStack60;\n    int32_t iStack56;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t *piStack28;\n    \n    piVar7 = *(arg_8h + 8);\n    uVar9 = 0;\n    uStack44 = 0;\n    iVar3 = *(*(arg_8h + 4) + 4);\n    piStack76 = piVar7;\n    fcn.00408e90();\n    piVar10 = *(iVar3 + 8);\n    iStack40 = *piVar10;\n    iStack36 = piVar10[1];\n    iStack32 = piVar10[2];\n    piStack28 = piVar10[3];\n    *piStack28 = *piStack28 + 1;\n    fcn.0040592d();\n    iStack80 = 0;\n    arg_8h_00 = L\".lnk\";\n    piStack112 = 0x47579e;\n    iStack56 = fcn.004248f3(L\".lnk\");\n    iVar3 = iStack36;\n    if ((iStack56 == 0) || (iStack36 == 0)) {\ncode_r0x0047589f:\n        if (iVar3 != iStack36) goto code_r0x004758b1;\n    }\n    else if ((0 < iStack36) && (iVar8 = (iStack36 - iStack56) + 1,  0 < iVar8)) {\n        iStack64 = 0;\n        do {\n            iVar3 = iStack64;\n            if (0 < iStack80) goto code_r0x0047589f;\n            pcStack72 = L\".lnk\";\n            iStack68 = iStack56;\n            pcStack60 = iStack40 + iStack64 * 2;\n            uVar2 = 0;\n            uVar6 = 0;\n            do {\n                uStack48 = *pcStack60;\n                iStack68 = iStack68 + -1;\n                if (*pcStack60 != *pcStack72) {\n                    piStack112 = 0x475811;\n                    uStack48 = fcn.0042de4b(uStack48);\n                    uStack48 = uStack48 & 0xffff;\n                    arg_8h_00 = *pcStack72;\n                    piStack112 = 0x475826;\n                    uVar6 = fcn.0042de4b(arg_8h_00);\n                    uVar6 = uVar6 & 0xffff;\n                    uVar2 = uStack48;\n                    if (uStack48 != uVar6) break;\n                }\n                pcStack60 = pcStack60 + 1;\n                pcStack72 = pcStack72 + 1;\n            } while (iStack68 != 0);\n            piVar7 = piStack76;\n            uVar9 = uStack44;\n            if ((uVar2 - uVar6 < 0) || (uVar2 != uVar6 && -1 < uVar2 - uVar6)) {\n                iVar3 = 1;\n            }\n            else {\n                iStack80 = iStack80 + 1;\n                iVar3 = iStack56;\n                if (iStack80 == 1) break;\n            }\n            iStack64 = iStack64 + iVar3;\n        } while (iStack64 < iVar8);\n        iVar3 = iStack64;\n        if (0 < iStack80) goto code_r0x0047589f;\n    }\n    arg_8h_00 = L\".lnk\";\n    piStack112 = 0x4758b1;\n    fcn.004052b7(L\".lnk\");\ncode_r0x004758b1:\n    piStack112 = NULL;\n    puStack116 = 0x4758b9;\n    (*_sym.imp.ole32.dll_CoInitialize)();\n    puStack116 = &stack0xffffffa4;\n    piStack120 = 0x49fb84;\n    uStack124 = 1;\n    auStack128 = 0;\n    iVar3 = (*_sym.imp.ole32.dll_CoCreateInstance)();\n    if (iVar3 < 0) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    else {\n        iVar3 = **(arg_8h + 4);\n        fcn.00408e90();\n        (**(*piStack112 + 0x50))(piStack112, **(iVar3 + 8));\n        if (0x2 < piVar7) {\n            iVar3 = *(*(arg_8h + 4) + 8);\n            fcn.00408e90();\n            (**(*piStack120 + 0x24))(piStack120, **(iVar3 + 8));\n        }\n        if (0x3 < piVar7) {\n            iVar3 = *(*(arg_8h + 4) + 0xc);\n            fcn.00408e90();\n            (**(*piStack120 + 0x2c))(piStack120, **(iVar3 + 8));\n        }\n        if (0x4 < piVar7) {\n            iVar3 = *(*(arg_8h + 4) + 0x10);\n            fcn.00408e90();\n            (**(*piStack120 + 0x1c))(piStack120, **(iVar3 + 8));\n        }\n        if (0x5 < piVar7) {\n            iVar3 = *(*(arg_8h + 4) + 0x14);\n            fcn.00408e90();\n            (**(*piStack120 + 0x44))(piStack120, **(iVar3 + 8), 0);\n        }\n        iVar3 = arg_8h;\n        if (0x6 < piVar7) {\n            iVar8 = *(*(arg_8h + 4) + 0x18);\n            cVar1 = fcn.004039e5();\n            iVar3 = extraout_EDX;\n            if (cVar1 != '\\0') {\n                fcn.00408e90();\n                fcn.0040b606(**(iVar8 + 8));\n                piVar10 = &stack0xffffff83;\n                arg_18h = &stack0xffffff80;\n                cVar1 = fcn.004028c0(&stack0xffffffc0, &stack0xffffffac, &stack0xffffff82, &stack0xffffff81, arg_18h, \n                                     piVar10);\n                fcn.0040b1ff();\n                iVar3 = arg_8h;\n                piVar7 = piStack112;\n                if (cVar1 == '\\x01') {\n                    if (arg_18h != '\\0') {\n                        uVar9 = 4;\n                    }\n                    cVar1 = arg_18h >> 8;\n                    if (cVar1 != '\\0') {\n                        uVar9 = uVar9 | 2;\n                    }\n                    if (arg_18h >> 0x10 != '\\0') {\n                        uVar9 = uVar9 | 1;\n                    }\n                    if ((cVar1 == '\\0') && (arg_18h == '\\0')) {\n                        uVar9 = uVar9 | 6;\n                    }\n                    (**(*piVar10 + 0x34))(piVar10, uVar9 << 8 | arg_8h_00);\n                    piVar7 = piStack112;\n                }\n            }\n        }\n        if (0x7 < piVar7) {\n            iVar3 = *(*(iVar3 + 4) + 0x14);\n            fcn.00408e90();\n            uVar5 = **(iVar3 + 8);\n            iVar3 = *piStack120;\n            uVar4 = fcn.0040ce67();\n            (**(iVar3 + 0x44))(piStack120, uVar5, uVar4);\n            piVar7 = piStack112;\n        }\n        if (0x8 < piVar7) {\n            iVar3 = *piStack120;\n            uVar5 = fcn.0040ce67();\n            (**(iVar3 + 0x3c))(piStack120, uVar5);\n        }\n        iVar3 = (***piStack120)(piStack120, 0x49fbe4, &stack0xffffffa8);\n        if (iVar3 < 0) {\n            fcn.0040e8a0();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n        }\n        else {\n            iVar3 = (**(*unaff_ESI + 0x18))(unaff_ESI, uStack88, 1);\n            if (iVar3 < 0) {\n                fcn.0040e8a0();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n            }\n            (**(*piStack112 + 8))(piStack112);\n        }\n        (**(*0x49fd14 + 8))(0x49fd14);\n    }\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 2284
    },
    "00475bb5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00475bb5(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    int32_t **ppiVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uchar auStack608 [8];\n    uchar auStack600 [36];\n    uchar auStack564 [560];\n    \n    iVar1 = **(arg_8h + 4);\n    fcn.00408e90();\n    uVar3 = **(iVar1 + 8);\n    iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(uVar3, auStack600);\n    if (iVar1 == -1) {\n        fcn.0040e8a0();\n        *arg_ch = -1;\n        arg_ch[3] = 1;\n        return 0;\n    }\n    while ((iVar2 = fcn.004251c2(auStack564, 0x4c6b80),  iVar2 == 0 ||\n           (iVar2 = fcn.004251c2(auStack564, 0x49d108),  iVar2 == 0))) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar1, auStack608);\n        if (iVar2 == 0) {\n            iVar2 = *(*in_ECX + 4);\n            iVar4 = *(in_ECX + iVar2 + 8);\n            if (*(in_ECX + iVar2 + 0xd) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = 1;\n            iVar4 = *(in_ECX + iVar2 + 8);\n            if (*(in_ECX + iVar2 + 0xd) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x18) = 0;\n            fcn.0040e8a0();\n            *arg_ch = -1;\n            arg_ch[3] = 1;\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n            return 0;\n        }\n    }\n    uVar7 = in_ECX[0x68];\n    uVar6 = 0;\n    if (uVar7 != 0) {\n        ppiVar5 = in_ECX[0x67];\n        do {\n            if (**ppiVar5 == 0) break;\n            uVar6 = uVar6 + 1;\n            ppiVar5 = ppiVar5 + 1;\n        } while (uVar6 < in_ECX[0x68]);\n    }\n    uVar3 = fcn.0041fd5b(0x20, uVar3);\n    fcn.0040c25d();\n    if (uVar6 == uVar7) {\n        fcn.004640c5(&stack0xfffffd98);\n    }\n    else {\n        **(in_ECX[0x67] + uVar6 * 4) = uVar3;\n    }\n    ***(in_ECX[0x67] + uVar6 * 4) = 1;\n    *(**(in_ECX[0x67] + uVar6 * 4) + 8) = iVar1;\n    fcn.004084e7(auStack564);\n    *(**(in_ECX[0x67] + uVar6 * 4) + 0x1c) = iVar1;\n    fcn.0040e8a0();\n    arg_ch[3] = 1;\n    *arg_ch = uVar6 + 1;\n    return 0;\n}\n",
        "token_count": 838
    },
    "00475d58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00475d58(int32_t arg_8h, uint arg_ch)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t unaff_EDI;\n    uchar *puVar5;\n    uint uVar6;\n    uchar auStack636 [20];\n    uint32_t uStack616;\n    uchar auStack612 [44];\n    uchar auStack568 [564];\n    \n    cVar2 = fcn.00479bc8(auStack636, **(arg_8h + 4), 1);\n    if (cVar2 == '\\0') {\n        iVar3 = *(*in_ECX + 4);\n        iVar4 = *(iVar3 + 8 + in_ECX);\n        if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 1;\n    }\n    else {\n        bVar1 = false;\n        if ((1 < *(arg_8h + 8)) && (iVar3 = fcn.0040ce67(),  iVar3 == 1)) {\n            bVar1 = true;\n        }\n        iVar3 = **(in_ECX[0x67] + unaff_EDI * 4);\n        if (*(iVar3 + 0x10) != 0) {\n            fcn.00407c5d(iVar3 + 0xc);\n            if (bVar1) {\n                fcn.0040c25d();\n                fcn.00478f5d(*(**(in_ECX[0x67] + unaff_EDI * 4) + 0x1c), &stack0xfffffd78);\n                fcn.0040890f(&stack0xfffffd70);\n                puVar5 = &stack0xfffffd7c;\n                uVar6 = extraout_ECX;\n                fcn.0041fa6d(puVar5);\n                fcn.0040e8a0(puVar5, uVar6);\n                fcn.0040b1ff();\n            }\n            else if ((*(**(in_ECX[0x67] + unaff_EDI * 4) + 0x1c) & 0x10) != 0) {\n                fcn.00407cb4(1, 0);\n            }\n            fcn.0040bfbf();\n            return 0;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(*(iVar3 + 8), auStack612);\n        if (iVar3 != 0) {\n            fcn.0040b5c1(auStack568);\n            if (bVar1) {\n                fcn.0040c25d();\n                fcn.00478f5d(uStack616, &stack0xfffffd78);\n                fcn.0040890f(&stack0xfffffd70);\n                puVar5 = &stack0xfffffd7c;\n                uVar6 = extraout_ECX_00;\n                fcn.0041fa6d(puVar5);\n                fcn.0040e8a0(puVar5, uVar6);\n                fcn.0040b1ff();\n                return 0;\n            }\n            if ((uStack616 & 0x10) == 0) {\n                return 0;\n            }\n            fcn.00407cb4(1, 0);\n            return 0;\n        }\n        iVar3 = *(*in_ECX + 4);\n        iVar4 = *(iVar3 + 8 + in_ECX);\n        if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 1;\n    }\n    iVar4 = *(iVar3 + 8 + in_ECX);\n    if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n        iVar4 = *(iVar4 + 0x38);\n    }\n    *(iVar4 + 0x18) = 0;\n    fcn.0040b5c1(0x49d0d0);\n    return 0;\n}\n",
        "token_count": 967
    },
    "00475f92": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00475f92(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uchar auStack24 [20];\n    \n    fcn.0040c25d();\n    fcn.00408e90();\n    iVar1 = fcn.0046dadc();\n    if (iVar1 == -1) {\n        iVar1 = *(*in_ECX + 4);\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x14) = 1;\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x18) = 0;\n    }\n    else {\n        fcn.00478f5d(iVar1, auStack24);\n    }\n    fcn.00407c5d(&stack0xffffffe0);\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 289
    },
    "0047619d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047619d(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    iVar3 = **(arg_8h + 4);\n    fcn.00408e90();\n    puVar1 = *(iVar3 + 8);\n    var_10h = *puVar1;\n    var_ch = puVar1[1];\n    var_8h = puVar1[2];\n    var_4h = puVar1[3];\n    *var_4h = *var_4h + 1;\n    if (1 < *(arg_8h + 8)) {\n        iVar3 = fcn.0040ce67();\n        if (iVar3 == 1) {\n            fcn.0040592d();\n        }\n    }\n    cVar2 = fcn.004047d0();\n    if (cVar2 == '\\x01') {\n        fcn.00407c5d(&var_10h);\n    }\n    else {\n        iVar3 = **(arg_8h + 4);\n        fcn.00408e90();\n        fcn.00407c5d(*(iVar3 + 8));\n        iVar3 = *(*in_ECX + 4);\n        iVar4 = *(iVar3 + 8 + in_ECX);\n        if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 1;\n        iVar4 = *(iVar3 + 8 + in_ECX);\n        if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x18) = 0;\n    }\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 476
    },
    "00476263": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00476263(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    uint uVar6;\n    \n    cVar4 = fcn.00479bc8(&arg_8h, **(arg_8h + 4), 0);\n    puVar3 = arg_ch;\n    if (cVar4 == '\\0') {\n        iVar1 = *(*in_ECX + 4);\n        iVar5 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar5 = *(iVar5 + 0x38);\n        }\n        uVar6 = 1;\n        *(iVar5 + 0x14) = 1;\n        iVar5 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar5 = *(iVar5 + 0x38);\n        }\n        *(iVar5 + 0x18) = 0;\n        fcn.0040e8a0();\n        *puVar3 = 0;\n    }\n    else {\n        iVar1 = *(**(in_ECX[0x67] + arg_8h * 4) + 4);\n        uVar6 = *(iVar1 + 0x10);\n        uVar2 = *(iVar1 + 0x14);\n        fcn.0040e8a0();\n        puVar3[1] = uVar2;\n        *puVar3 = uVar6;\n        uVar6 = 2;\n    }\n    puVar3[3] = uVar6;\n    return 0;\n}\n",
        "token_count": 410
    },
    "004762f1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004762f1(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint *puVar4;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.00408e90();\n    puVar4 = *(iVar2 + 8);\n    var_10h = *puVar4;\n    var_ch = puVar4[1];\n    var_8h = puVar4[2];\n    var_4h = puVar4[3];\n    *var_4h = *var_4h + 1;\n    if (1 < *(arg_8h + 8)) {\n        iVar2 = fcn.0040ce67();\n        if (iVar2 == 1) {\n            fcn.0040592d();\n        }\n    }\n    cVar1 = fcn.0046de75();\n    if (cVar1 == '\\0') {\n        iVar2 = *(*in_ECX + 4);\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 1;\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n        iVar2 = **(arg_8h + 4);\n        fcn.00408e90();\n        puVar4 = *(iVar2 + 8);\n    }\n    else {\n        puVar4 = &var_10h;\n    }\n    fcn.00407c5d(puVar4);\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 481
    },
    "004763ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004763ac(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    int32_t *unaff_ESI;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    int32_t *piVar8;\n    uint uStack768;\n    uint uStack748;\n    uint uStack728;\n    uint uStack700;\n    int32_t *piStack696;\n    uint uStack692;\n    int32_t *piStack688;\n    int32_t *piStack684;\n    uint32_t uStack680;\n    uchar *puStack676;\n    int32_t *piStack672;\n    uint uStack668;\n    uint uStack664;\n    int32_t *piStack660;\n    uchar *puStack656;\n    int32_t iStack652;\n    int32_t *piStack624;\n    uint uStack620;\n    int32_t aiStack612 [2];\n    int32_t iStack604;\n    char16_t *pcStack600;\n    char16_t *pcStack596;\n    int32_t iStack592;\n    uint32_t uStack588;\n    int32_t aiStack584 [2];\n    int32_t iStack576;\n    int32_t iStack572;\n    int32_t iStack568;\n    int32_t *piStack564;\n    int32_t iStack544;\n    int32_t *piStack540;\n    \n    iVar5 = **(arg_8h + 4);\n    piStack540 = in_ECX;\n    fcn.00408e90();\n    piVar7 = *(iVar5 + 8);\n    iStack604 = 0;\n    iStack576 = *piVar7;\n    iStack572 = piVar7[1];\n    iStack568 = piVar7[2];\n    piStack564 = piVar7[3];\n    *piStack564 = *piStack564 + 1;\n    aiStack584[0] = fcn.004248f3(L\".lnk\");\n    iVar5 = iStack572;\n    if ((aiStack584[0] == 0) || (iStack572 == 0)) {\ncode_r0x004764fa:\n        if (iVar5 != iStack572) goto code_r0x0047650c;\n    }\n    else if ((0 < iStack572) && (iStack544 = (iStack572 - aiStack584[0]) + 1,  0 < iStack544)) {\n        iVar5 = 0;\n        do {\n            if (0 < iStack604) goto code_r0x004764fa;\n            pcStack596 = L\".lnk\";\n            pcStack600 = iStack576 + iVar5 * 2;\n            uVar2 = 0;\n            uVar6 = 0;\n            iStack592 = aiStack584[0];\n            do {\n                uStack588 = *pcStack600;\n                iStack592 = iStack592 + -1;\n                if (*pcStack600 != *pcStack596) {\n                    uStack588 = fcn.0042de4b(uStack588);\n                    uStack588 = uStack588 & 0xffff;\n                    uVar6 = fcn.0042de4b(*pcStack596);\n                    uVar6 = uVar6 & 0xffff;\n                    uVar2 = uStack588;\n                    if (uStack588 != uVar6) break;\n                }\n                pcStack600 = pcStack600 + 1;\n                pcStack596 = pcStack596 + 1;\n            } while (iStack592 != 0);\n            in_ECX = piStack540;\n            if ((uVar2 - uVar6 < 0) || (uVar2 != uVar6 && -1 < uVar2 - uVar6)) {\n                iVar4 = 1;\n            }\n            else {\n                iStack604 = iStack604 + 1;\n                iVar4 = aiStack584[0];\n                if (iStack604 == 1) goto code_r0x004764fa;\n            }\n            iVar5 = iVar5 + iVar4;\n        } while (iVar5 < iStack544);\n        if (0 < iStack604) goto code_r0x004764fa;\n    }\n    fcn.004052b7(L\".lnk\");\ncode_r0x0047650c:\n    iStack652 = 0x476519;\n    fcn.0040b5c1(0x49d0d0);\n    iVar5 = *(*in_ECX + 4);\n    iVar4 = *(iVar5 + 8 + in_ECX);\n    if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n        iVar4 = *(iVar4 + 0x38);\n    }\n    *(iVar4 + 0x14) = 1;\n    iVar4 = *(iVar5 + 8 + in_ECX);\n    if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n        iVar4 = *(iVar4 + 0x38);\n    }\n    *(iVar4 + 0x18) = 0;\n    iStack652 = 0x47654e;\n    cVar1 = fcn.0046d3ec();\n    if (cVar1 != '\\0') {\n        iStack652 = 0;\n        puStack656 = 0x47655d;\n        (*_sym.imp.ole32.dll_CoInitialize)();\n        puStack656 = &stack0xfffffd80;\n        piStack660 = 0x49fb84;\n        uStack664 = 1;\n        uStack668 = 0;\n        piStack672 = 0x49fd14;\n        puStack676 = 0x476574;\n        iVar5 = (*_sym.imp.ole32.dll_CoCreateInstance)();\n        if (-1 < iVar5) {\n            puStack676 = &stack0xfffffd9c;\n            uStack680 = 0x49fbe4;\n            piStack684 = piStack660;\n            piStack688 = 0x47658f;\n            iVar5 = (***piStack660)();\n            if (-1 < iVar5) {\n                piStack688 = NULL;\n                uStack692 = uStack620;\n                piStack696 = piStack624;\n                uStack700 = 0x4765a6;\n                iVar5 = (**(*piStack624 + 0x14))();\n                if (-1 < iVar5) {\n                    uStack700 = 0x4765b6;\n                    arg_8h_00 = fcn.00407d93();\n                    uStack700 = 7;\n                    fcn.004083e0(arg_8h_00, 1);\n                    piVar7 = &stack0xfffffdb8;\n                    uStack700 = 2;\n                    (**(*piStack684 + 0xc))();\n                    uVar3 = fcn.0040b606(&stack0xfffffda4);\n                    uStack728 = 0x4765f5;\n                    fcn.0040890f(uVar3);\n                    uStack728 = 0;\n                    fcn.00408a30(arg_8h_00, &stack0xfffffd3c, 1);\n                    uStack728 = 0x476610;\n                    fcn.0040e8a0();\n                    uStack728 = 0x476619;\n                    fcn.0040b1ff();\n                    piVar8 = &stack0xfffffd9c;\n                    uStack728 = 0x104;\n                    (**(*piVar7 + 0x20))();\n                    uVar3 = fcn.0040b606(&stack0xfffffd90);\n                    uStack748 = 0x476641;\n                    fcn.0040890f(uVar3);\n                    uStack748 = 1;\n                    fcn.00408a30(arg_8h_00, &stack0xfffffd28, 1);\n                    uStack748 = 0x47665c;\n                    fcn.0040e8a0();\n                    uStack748 = 0x476665;\n                    fcn.0040b1ff();\n                    piVar7 = &stack0xfffffd88;\n                    uStack748 = 0x104;\n                    (**(*piVar8 + 0x28))();\n                    uVar3 = fcn.0040b606(&stack0xfffffd7c);\n                    uStack768 = 0x47668d;\n                    fcn.0040890f(uVar3);\n                    uStack768 = 2;\n                    fcn.00408a30(arg_8h_00, &stack0xfffffd14, 1);\n                    uStack768 = 0x4766a8;\n                    fcn.0040e8a0();\n                    uStack768 = 0x4766b1;\n                    fcn.0040b1ff();\n                    piVar8 = &stack0xfffffd74;\n                    uStack768 = 0x104;\n                    (**(*piVar7 + 0x18))();\n                    uVar3 = fcn.0040b606(&stack0xfffffd68);\n                    fcn.0040890f(uVar3);\n                    fcn.00408a30(arg_8h_00, &stack0xfffffd00, 1);\n                    fcn.0040e8a0();\n                    fcn.0040b1ff();\n                    piVar7 = &stack0xfffffd60;\n                    (**(*piVar8 + 0x40))(piVar8);\n                    uVar3 = fcn.0040b606(&stack0xfffffd50);\n                    fcn.0040890f(uVar3);\n                    fcn.00408a30(arg_8h_00, &stack0xfffffce8, 1);\n                    fcn.0040e8a0();\n                    fcn.0040b1ff();\n                    fcn.00408a30(arg_8h_00, &stack0xfffffce8, 1);\n                    fcn.0040e8a0();\n                    (**(*piVar7 + 0x38))(piVar7, &stack0xfffffd44);\n                    uStack680 = uStack588;\n                    piStack672 = NULL;\n                    uStack700 = 6;\n                    uStack668 = 1;\n                    fcn.00408a30(arg_8h_00, &stack0xfffffd58, 1);\n                    uStack700 = 0x4767b9;\n                    fcn.0040e8a0();\n                    iVar5 = *(*in_ECX + 4);\n                    iVar4 = *(iVar5 + 8 + in_ECX);\n                    if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                        iVar4 = *(iVar4 + 0x38);\n                    }\n                    *(iVar4 + 0x14) = 0;\n                    iVar4 = *(iVar5 + 8 + in_ECX);\n                    if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                        iVar4 = *(iVar4 + 0x38);\n                    }\n                    *(iVar4 + 0x18) = 0;\n                }\n                (**(*unaff_ESI + 8))();\n            }\n            piStack688 = piStack672;\n            uStack692 = 0x4767f2;\n            (**(*piStack672 + 8))();\n        }\n        puStack676 = 0x4767f8;\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    iStack652 = 0x476801;\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 2567
    },
    "0047680c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047680c(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uchar auStack600 [16];\n    uint uStack584;\n    uint uStack580;\n    \n    iVar1 = **(arg_8h + 4);\n    fcn.00408e90();\n    iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(**(iVar1 + 8), auStack600);\n    if (iVar1 == -1) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        iVar1 = *(*in_ECX + 4);\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x14) = 1;\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x18) = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n        fcn.0040e8a0();\n        arg_ch[3] = 2;\n        *arg_ch = uStack580;\n        arg_ch[1] = uStack584;\n    }\n    return 0;\n}\n",
        "token_count": 366
    },
    "004768ad": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004768ad(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint arg_8h_00;\n    uint uVar5;\n    int32_t *in_ECX;\n    int32_t iVar6;\n    int32_t iVar7;\n    uchar *arg_8h_01;\n    uchar *arg_8h_02;\n    uchar *puStack764;\n    uchar *puStack760;\n    uchar *puStack756;\n    uint uStack752;\n    uchar *puStack740;\n    uchar auStack712 [8];\n    uchar auStack704 [8];\n    uint uStack696;\n    uint uStack692;\n    uint uStack688;\n    uint uStack684;\n    uint uStack680;\n    uint uStack676;\n    uint uStack672;\n    uint uStack668;\n    uchar auStack664 [60];\n    uint uStack604;\n    uint uStack600;\n    uint uStack596;\n    uint uStack592;\n    uint uStack588;\n    uint uStack584;\n    \n    iVar7 = 0;\n    puStack740 = 0x4768cf;\n    fcn.00408e90();\n    puStack740 = &stack0xfffffda8;\n    uVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)();\n    if (uVar2 == 0xffffffff) {\n        uStack752 = 0x476d19;\n        fcn.0040b5c1(0x49d0d0);\n        iVar7 = *(*in_ECX + 4);\n        iVar6 = *(iVar7 + 8 + in_ECX);\n        if (*(iVar7 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x14) = 1;\n        iVar6 = *(iVar7 + 8 + in_ECX);\n        if (*(iVar7 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x18) = 0;\n    }\n    else {\n        uStack676 = uStack604;\n        uStack672 = uStack600;\n        uStack684 = uStack596;\n        uStack680 = uStack592;\n        uStack692 = uStack588;\n        uStack688 = uStack584;\n        uStack752 = 0x476936;\n        (*_sym.imp.KERNEL32.dll_FindClose)();\n        if (1 < *(arg_8h + 8)) {\n            uStack752 = 0x47694a;\n            iVar7 = fcn.0040ce67();\n        }\n        if (iVar7 == 1) {\n            uStack672 = uStack680;\n            uStack668 = uStack676;\n            puStack756 = &stack0xfffffd58;\n            puStack760 = 0x4769c0;\n            uStack752 = puStack756;\n            (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)();\n            puStack764 = &stack0xfffffd50;\n        }\n        else if (iVar7 == 2) {\n            uStack672 = uStack688;\n            uStack668 = uStack684;\n            puStack756 = &stack0xfffffd50;\n            puStack760 = 0x476999;\n            uStack752 = puStack756;\n            (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)();\n            puStack764 = &stack0xfffffd48;\n        }\n        else {\n            uStack672 = uStack696;\n            uStack668 = uStack692;\n            puStack756 = &stack0xfffffd48;\n            puStack760 = 0x476972;\n            uStack752 = puStack756;\n            (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)();\n            puStack764 = &stack0xfffffd40;\n        }\n        pcVar1 = _sym.imp.KERNEL32.dll_FileTimeToSystemTime;\n        puStack760 = &stack0xfffffd1c;\n        (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)();\n        uStack752 = uStack752 & 0xffffff;\n        if (2 < *(arg_8h + 8)) {\n            uVar3 = fcn.0040ce67();\n            if ((uVar3 & 4) != 0) {\n                (*pcVar1)();\n                uVar3 = uVar3 & 0xfffffffb;\n            }\n            uVar4 = uVar3 & 2;\n            if (uVar4 != 0) {\n                uVar3 = uVar3 & 1;\n            }\n            uStack752 = uStack752 & 0xffffff | (uVar4 != 0) << 0x18;\n            if (uVar3 != 0) {\n                if (uVar4 == 0) {\n                    fcn.0041faa3(&stack0xfffffd68, L\"%4d%02d%02d%02d%02d%02d\", uVar2 & 0xffff);\n                }\n                else {\n                    fcn.0041faa3(&stack0xfffffd68, L\"%4d%02d%02d%02d%02d%02d%03d\", uVar2 & 0xffff);\n                }\n                fcn.0040b5c1(&stack0xfffffd68);\n                return 0;\n            }\n        }\n        arg_8h_00 = fcn.00407d93();\n        fcn.004083e0(arg_8h_00, 1);\n        fcn.0041faa3(&stack0xfffffd68, 0x4c6b58, uVar2 & 0xffff);\n        uVar2 = fcn.0040b606(&stack0xfffffd68);\n        fcn.0040890f(uVar2);\n        fcn.00408a30(arg_8h_00, &stack0xfffffd1c, 1);\n        fcn.0040e8a0();\n        fcn.0040b1ff();\n        fcn.0041faa3(&stack0xfffffd60, L\"%02d\", puStack756 >> 0x10);\n        arg_8h_02 = &stack0xfffffd60;\n        uVar5 = fcn.0040b606(arg_8h_02);\n        fcn.0040890f(uVar5);\n        fcn.00408a30(arg_8h_00, &stack0xfffffd14, 1);\n        fcn.0040e8a0();\n        fcn.0040b1ff();\n        fcn.0041faa3(&stack0xfffffd58, L\"%02d\", puStack760 >> 0x10);\n        arg_8h_01 = &stack0xfffffd58;\n        uVar5 = fcn.0040b606(arg_8h_01);\n        fcn.0040890f(uVar5);\n        fcn.00408a30(arg_8h_00, &stack0xfffffd0c, 1);\n        fcn.0040e8a0();\n        fcn.0040b1ff();\n        fcn.0041faa3(&stack0xfffffd50, L\"%02d\", puStack764 & 0xffff);\n        uVar5 = fcn.0040b606(&stack0xfffffd50);\n        fcn.0040890f(uVar5);\n        fcn.00408a30(arg_8h_00, &stack0xfffffd04, 1);\n        fcn.0040e8a0();\n        fcn.0040b1ff();\n        fcn.0041faa3(&stack0xfffffd48, L\"%02d\", uVar2 >> 0x10);\n        uVar5 = fcn.0040b606(&stack0xfffffd48);\n        fcn.0040890f(uVar5);\n        fcn.00408a30(arg_8h_00, &stack0xfffffcfc, 1);\n        fcn.0040e8a0();\n        fcn.0040b1ff();\n        fcn.0041faa3(&stack0xfffffd40, L\"%02d\", arg_8h_02 & 0xffff);\n        uVar5 = fcn.0040b606(&stack0xfffffd40);\n        fcn.0040890f(uVar5);\n        fcn.00408a30(arg_8h_00, &stack0xfffffcf4, 1);\n        fcn.0040e8a0();\n        fcn.0040b1ff();\n        if (uStack752._3_1_ != '\\0') {\n            fcn.0041faa3(&stack0xfffffd38, L\"%03d\", arg_8h_01 >> 0x10);\n            uVar5 = fcn.0040b606(&stack0xfffffd38);\n            fcn.0040890f(uVar5);\n            fcn.00408a30(arg_8h_00, &stack0xfffffcec, 1);\n            fcn.0040e8a0();\n            fcn.0040b1ff();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 2074
    },
    "00476d50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00476d50(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char16_t *arg_8h_00;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint arg_8h_01;\n    uint var_404h;\n    \n    if (*(arg_8h + 8) == 1) {\n        arg_8h_01 = 0x49d034;\n    }\n    else {\n        iVar2 = *(*(arg_8h + 4) + 4);\n        fcn.00408e90();\n        arg_8h_01 = **(iVar2 + 8);\n    }\n    fcn.00408e90();\n    cVar1 = fcn.0046db2c(arg_8h_01);\n    if (cVar1 == '\\x01') {\n        fcn.0040b5c1(&var_404h);\n    }\n    else {\n        iVar2 = fcn.004251c2(arg_8h_01, 0x49d034);\n        arg_8h_00 = L\"0.0.0.0\";\n        if (iVar2 != 0) {\n            arg_8h_00 = 0x49d0d0;\n        }\n        fcn.0040b5c1(arg_8h_00);\n        iVar2 = *(*in_ECX + 4);\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 1;\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 460
    },
    "00476e0f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00476e0f(int32_t arg_8h, uint *arg_ch)\n\n{\n    char16_t cVar1;\n    char16_t cVar2;\n    int32_t iVar3;\n    char cVar4;\n    char cVar5;\n    int32_t iVar6;\n    int16_t *piVar7;\n    int32_t in_ECX;\n    int32_t iVar8;\n    char16_t *pcVar9;\n    uchar *arg_8h_00;\n    uint uVar10;\n    uchar *puVar11;\n    uint arg_8h_01;\n    uchar auStack144 [4];\n    int32_t *piStack140;\n    uchar auStack136 [4];\n    int32_t iStack132;\n    uchar auStack128 [8];\n    int32_t iStack120;\n    uchar auStack116 [12];\n    uint uStack104;\n    int32_t iStack100;\n    uchar auStack88 [36];\n    uint uStack52;\n    uint uStack48;\n    uchar uStack44;\n    uchar auStack32 [28];\n    \n    uStack52 = 0;\n    uStack48 = 0;\n    uStack44 = 0;\n    iStack120 = in_ECX;\n    fcn.0040c25d();\n    fcn.0040c25d();\n    if ((*(arg_8h + 8) == 3) && (iVar6 = fcn.0040ce67(),  iVar6 != 0)) {\n        auStack144[0] = 1;\n    }\n    else {\n        auStack144[0] = 0;\n    }\n    iVar6 = **(arg_8h + 4);\n    fcn.00408e90();\n    piStack140 = *(iVar6 + 8);\n    pcVar9 = L\">>>AUTOIT SCRIPT<<<\";\n    iStack100 = piStack140[1];\n    arg_8h_01 = 0x476e8e;\n    iVar6 = fcn.004248f3(L\">>>AUTOIT SCRIPT<<<\");\n    if (iStack100 == iVar6) {\n        iVar6 = in_ECX;\n        if (iStack100 != 0) {\n            iVar3 = *piStack140;\n            iVar8 = iStack100;\n            do {\n                cVar1 = *pcVar9;\n                piStack140 = cVar1;\n                cVar2 = *(iVar3 + -0x4c6640 + pcVar9);\n                if (cVar2 != cVar1) {\n                    iVar6 = (-(cVar2 < cVar1) & 0xfffffffe) + 1;\n                    goto code_r0x00476ec5;\n                }\n                pcVar9 = pcVar9 + 1;\n                iVar8 = iVar8 + -1;\n                iVar6 = iStack120;\n            } while (iVar8 != 0);\n        }\n        iStack120 = iVar6;\n        iVar6 = 0;\ncode_r0x00476ec5:\n        in_ECX = iStack120;\n        if (iVar6 == 0) goto code_r0x004771c2;\n    }\n    if (*(in_ECX + 0xb4) == 2) {\n        iVar6 = **(arg_8h + 4);\n        fcn.00408e90();\n        if (&stack0xffffff78 != *(iVar6 + 8)) {\n            arg_8h_01 = 0x476ef9;\n            fcn.0040c1c3(*(iVar6 + 8));\n        }\n        puVar11 = 0x476f08;\n        iVar6 = fcn.0046ea9d(0x49d034);\n        if (iVar6 == -1) {\n            arg_8h_00 = in_ECX + 0xd8;\n            if (&stack0xffffff70 != arg_8h_00) {\n                fcn.0040c1c3(arg_8h_00);\n                puVar11 = arg_8h_00;\n            }\n            uVar10 = 0x49d034;\n            fcn.004052b7(0x49d034);\n            iVar6 = **(arg_8h + 4);\n            fcn.00408e90(uVar10, puVar11);\n            fcn.00407cf8(*(iVar6 + 8));\n        }\n        iVar6 = *(*(arg_8h + 4) + 4);\n        fcn.00408e90();\n        if (&stack0xffffff78 != *(iVar6 + 8)) {\n            fcn.0040c1c3(*(iVar6 + 8));\n        }\n        cVar4 = fcn.0046e0b7();\n        if ((cVar4 != '\\0') && (piVar7 = fcn.0040660f(iStack132 + -1),  *piVar7 != 0x5c)) {\n            fcn.0040e8a0();\n            arg_ch[3] = 1;\n            *arg_ch = 0;\n            goto code_r0x004771c2;\n        }\n        fcn.00408e90();\n        cVar4 = fcn.0046cf94(arg_8h_01, 0);\n        if (cVar4 != '\\0') goto code_r0x004771c2;\n    }\n    else {\n        iVar6 = fcn.0040686d(*(in_ECX + 200), 1);\n        if ((iVar6 == 0) || (iVar6 = fcn.0040686d(*(in_ECX + 200), 2),  iVar6 == 0)) {\n            fcn.0040c25d();\n            fcn.0040c25d();\n            fcn.0040c25d();\n            fcn.0040c25d();\n            fcn.00408e90();\n            fcn.00406bff(&stack0xffffffe0, &stack0xffffff80, &stack0xffffffa8);\n            cVar4 = '\\0';\n            piVar7 = fcn.0040660f(0);\n            if (*piVar7 == 0) {\n                cVar4 = '\\0';\n                piVar7 = fcn.0040660f(0);\n                if (*piVar7 == 0) {\n                    fcn.004084e7(0x4c63d8);\n                    cVar4 = '\\\\';\n                    fcn.004084e7(0x4c6e5c);\n                }\n            }\n            fcn.0040c1c3(&stack0xffffffe0);\n            fcn.00407cf8(&stack0xffffffcc);\n            fcn.00407cf8(&stack0xffffff68);\n            fcn.00407cf8(&stack0xffffff8c);\n            fcn.00408e90();\n            fcn.0046d6da(&stack0xffffff98);\n            cVar5 = fcn.0046d3ec();\n            if (((cVar5 == '\\x01') && (cVar4 == '\\x01')) || (cVar5 == '\\0')) {\n                iVar6 = **(arg_8h + 4);\n                fcn.00408e90();\n                iVar6 = fcn.00472865(**(iVar6 + 8), uStack104);\n                if (iVar6 != 0) {\n                    fcn.00407cb4(iVar6, 0);\n                    fcn.0040e8a0();\n                    *arg_ch = 0;\n                    goto code_r0x0047718b;\n                }\n            }\n            else {\n                fcn.0040e8a0();\n                *arg_ch = 0;\ncode_r0x0047718b:\n                arg_ch[3] = 1;\n            }\n            fcn.004068db();\n            fcn.0040b1ff();\n            fcn.0040b1ff();\n            fcn.0040b1ff();\n            fcn.0040b1ff();\n            goto code_r0x004771c2;\n        }\n        fcn.00407cb4(iVar6, 0);\n    }\n    fcn.0040e8a0();\n    arg_ch[3] = 1;\n    *arg_ch = 0;\ncode_r0x004771c2:\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 1844
    },
    "00477368": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00477368(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint in_ECX;\n    int32_t **ppiVar5;\n    uint extraout_ECX;\n    uint32_t unaff_EBX;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint in_stack_ffffff88;\n    uint in_stack_ffffff98;\n    uchar *in_stack_ffffff9c;\n    int32_t iStack56;\n    int32_t *piStack44;\n    uchar auStack40 [36];\n    \n    uVar6 = 0;\n    if (1 < *(arg_8h + 8)) {\n        in_stack_ffffff9c = 0x477392;\n        uVar6 = fcn.0040ce67();\n    }\n    if (((uVar6 & 8) != 0) && ((uVar6 & 3) != 0)) {\n        fcn.0040c25d();\n        fcn.0040c25d();\n        fcn.00408e90();\n        fcn.00406bff(&stack0xffffffd8, 0, 0);\n        *piStack44 = *piStack44 + 1;\n        in_stack_ffffff9c = &stack0xffffffd8;\n        in_stack_ffffff98 = 0x477410;\n        fcn.00407cf8(in_stack_ffffff9c);\n        if (iStack56 != 0) {\n            in_stack_ffffff98 = 0x477420;\n            cVar1 = fcn.0046d3ec();\n            if (cVar1 == '\\0') {\n                fcn.0040b606(in_ECX);\n                cVar1 = fcn.0046d1df();\n                uVar6 = unaff_EBX;\n                fcn.0040b1ff();\n                in_stack_ffffff98 = in_ECX;\n                if (cVar1 == '\\0') {\n                    fcn.0040e8a0();\n                    *arg_ch = -1;\n                    arg_ch[3] = 1;\n                    in_stack_ffffff98 = in_ECX;\n                }\n            }\n        }\n        iVar2 = fcn.0040ce67();\n        fcn.0040b1ff();\n        fcn.0040b1ff();\n        fcn.0040b1ff();\n        if (iVar2 == -1) {\n            return 0;\n        }\n        uVar6 = uVar6 ^ 8;\n    }\n    puVar3 = fcn.0041fd5b(0x38, in_stack_ffffff98);\n    *puVar3 = 0;\n    uVar4 = fcn.0041fd8b(0x10000);\n    puVar3[1] = uVar4;\n    fcn.00407bee();\n    fcn.0040c25d();\n    fcn.00407bee();\n    iVar2 = **(arg_8h + 4);\n    fcn.00408e90();\n    uVar4 = *(iVar2 + 8);\n    fcn.00407bee();\n    puVar3[10] = uVar6;\n    if ((uVar6 & 3) == 0) {\n        uVar6 = uVar6 | 0x8000;\n        puVar3[10] = uVar6;\n    }\n    cVar1 = fcn.004070e5(uVar4, uVar6);\n    if (cVar1 == '\\0') {\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00407cb4(uVar4, 0);\n        fcn.00407bbe(extraout_ECX);\n        fcn.0040e8a0();\n        *arg_ch = -1;\n        goto code_r0x0047762a;\n    }\n    fcn.00406f3a();\n    fcn.00406d7e();\n    fcn.00406d67();\n    if (((*(puVar3 + 10) & 3) != 0) && (((*(puVar3 + 10) & 1) == 0 || ((puVar3[4] | puVar3[5]) == 0)))) {\n        if (puVar3[0xb] == 3) {\n            uVar4 = 3;\n            in_stack_ffffff88 = 0x4c364c;\n        }\n        else if (puVar3[0xb] == 5) {\n            uVar4 = 2;\n            in_stack_ffffff88 = 0x4c3654;\n        }\n        else {\n            if (puVar3[0xb] != 7) goto code_r0x00477563;\n            uVar4 = 2;\n            in_stack_ffffff88 = 0x4c3650;\n        }\n        fcn.0046cc1d(in_stack_ffffff88, uVar4);\n    }\ncode_r0x00477563:\n    uVar7 = 0;\n    uVar6 = *(in_stack_ffffff9c + 0x1a0);\n    if (uVar6 != 0) {\n        ppiVar5 = *(in_stack_ffffff9c + 0x19c);\n        do {\n            if (**ppiVar5 == 0) break;\n            uVar7 = uVar7 + 1;\n            ppiVar5 = ppiVar5 + 1;\n        } while (uVar7 < *(in_stack_ffffff9c + 0x1a0));\n    }\n    uVar4 = fcn.0041fd5b(0x20, in_stack_ffffff88);\n    fcn.0040c25d();\n    if (uVar7 == uVar6) {\n        fcn.004640c5(&stack0xffffff9c);\n    }\n    else {\n        **(*(in_stack_ffffff9c + 0x19c) + uVar7 * 4) = uVar4;\n    }\n    ***(*(in_stack_ffffff9c + 0x19c) + uVar7 * 4) = 0;\n    *(**(*(in_stack_ffffff9c + 0x19c) + uVar7 * 4) + 4) = puVar3;\n    fcn.0040e8a0();\n    *arg_ch = uVar7 + 1;\ncode_r0x0047762a:\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 1446
    },
    "00477654": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00477654(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t unaff_EDI;\n    uchar *arg_8h_00;\n    int32_t iVar5;\n    uint uStack44;\n    uchar auStack40 [36];\n    \n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    if (*(**(arg_8h + 4) + 0xc) == 4) {\n        puVar2 = fcn.0041fd5b(0x38, unaff_EDI);\n        *puVar2 = 0;\n        uVar3 = fcn.0041fd8b();\n        puVar2[1] = uVar3;\n        fcn.00407bee();\n        fcn.0040c25d();\n        fcn.00407bee();\n        iVar5 = **(arg_8h + 4);\n        fcn.00408e90();\n        uVar3 = *(iVar5 + 8);\n        fcn.00407bee();\n        puVar2[10] = 0x8000;\n        cVar1 = fcn.004070e5(uVar3, 0x8000);\n        if (cVar1 == '\\0') {\n            fcn.00407bbe(extraout_ECX);\n            iVar4 = *(*in_ECX + 4) + in_ECX;\n            iVar5 = *(iVar4 + 8);\n            if (*(iVar4 + 0xd) != '\\0') {\n                iVar5 = *(iVar5 + 0x38);\n            }\n            *(iVar5 + 0x14) = 1;\ncode_r0x004777b3:\n            iVar5 = *(iVar4 + 8);\n            if (*(iVar4 + 0xd) != '\\0') {\n                iVar5 = *(iVar5 + 0x38);\n            }\n            *(iVar5 + 0x18) = 0;\n            return 0;\n        }\n        fcn.00406f3a();\n        fcn.00406d7e();\n        arg_8h_00 = 0x477700;\n        fcn.00406d67();\n        if (((*(puVar2 + 10) & 3) != 0) && (((*(puVar2 + 10) & 1) == 0 || ((puVar2[4] | puVar2[5]) == 0)))) {\n            if (puVar2[0xb] == 3) {\n                arg_8h_00 = 0x3;\n                uVar3 = 0x4c364c;\n            }\n            else if (puVar2[0xb] == 5) {\n                arg_8h_00 = 0x2;\n                uVar3 = 0x4c3654;\n            }\n            else {\n                if (puVar2[0xb] != 7) goto code_r0x0047772b;\n                arg_8h_00 = 0x2;\n                uVar3 = 0x4c3650;\n            }\n            fcn.0046cc1d(uVar3, arg_8h_00);\n        }\n    }\n    else {\n        arg_8h_00 = &stack0xffffffd4;\n        cVar1 = fcn.00479bc8(arg_8h_00, **(arg_8h + 4), 0);\n        if (cVar1 == '\\0') {\n            iVar4 = *(*in_ECX + 4) + in_ECX;\n            iVar5 = *(iVar4 + 8);\n            if (*(iVar4 + 0xd) != '\\0') {\n                iVar5 = *(iVar5 + 0x38);\n            }\n            *(iVar5 + 0x14) = 1;\n            goto code_r0x004777b3;\n        }\n        puVar2 = *(**(in_ECX[0x67] + unaff_EDI * 4) + 4);\n    }\ncode_r0x0047772b:\n    fcn.00407c18(0x100);\n    uVar3 = 0x49d0fc;\n    iVar5 = 0;\n    uStack44 = 0;\n    while (cVar1 = fcn.0040b177(&stack0xffffffd8),  cVar1 != '\\0') {\n        fcn.00406aff(&stack0xffffffd4);\n    }\n    if (iVar5 == 0) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        iVar5 = *(*in_ECX + 4);\n        iVar4 = *(in_ECX + iVar5 + 8);\n        if (*(in_ECX + iVar5 + 0xd) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 2;\n        iVar4 = *(in_ECX + iVar5 + 8);\n        if (*(in_ECX + iVar5 + 0xd) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x18) = 0;\n    }\n    else {\n        fcn.00408950(&stack0xffffffc4);\n        fcn.00407cb4(uVar3, 0);\n    }\n    if ((*(**(arg_8h + 4) + 0xc) == 4) && (fcn.00407bee(),  puVar2 != NULL)) {\n        fcn.00407bbe(extraout_ECX_00);\n    }\n    fcn.00408320();\n    fcn.0041fd94(arg_8h_00);\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 1340
    },
    "004779b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004779b4(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t *in_ECX;\n    uint32_t uVar7;\n    uint var_250h;\n    int32_t *var_48h;\n    int32_t var_44h;\n    uint *var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    code *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_18h;\n    int16_t *var_14h;\n    uint32_t var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    uVar7 = 0x200;\n    var_10h = arg_8h[2];\n    var_ch = NULL;\n    iVar4 = *arg_8h[1];\n    fcn.00408e90();\n    var_18h = **(iVar4 + 8);\n    iVar4 = *(arg_8h[1] + 4);\n    fcn.00408e90();\n    var_14h = **(iVar4 + 8);\n    fcn.0040b5c1(0x49d0d0);\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    piVar1 = arg_8h;\n    if (2 < var_10h) {\n        uVar2 = fcn.0040ce67();\n        uVar7 = (-((uVar2 & 1) != 0) & 0xfffffe40) + 0x200;\n        uVar3 = fcn.0040ce67();\n        if ((uVar3 & 2) != 0) {\n            uVar7 = uVar7 | 0x40;\n        }\n        uVar3 = fcn.0040ce67();\n        if ((uVar3 & 4) != 0) {\n            uVar7 = uVar7 | 0x10;\n        }\n    }\n    fcn.0040c25d();\n    if (3 < var_10h) {\n        iVar4 = *(piVar1[1] + 0xc);\n        fcn.00408e90();\n        fcn.004084e7(**(iVar4 + 8));\n    }\n    if (4 < var_10h) {\n        var_ch = fcn.00471dda();\n    }\n    var_8h = 0;\n    (*_sym.imp.SHELL32.dll_SHGetSpecialFolderLocation)(0, 0, &var_8h);\n    if (*var_14h != 0) {\n        iVar4 = (*_sym.imp.SHELL32.dll_SHGetDesktopFolder)(&arg_8h);\n        if (iVar4 == 0) {\n            uVar5 = fcn.00408fa0();\n            (**(*arg_8h + 0xc))(arg_8h, 0, 0, uVar5, 0, &var_8h, 0);\n            fcn.0041fd94(uVar5);\n            (**(*arg_8h + 8))(arg_8h);\n        }\n    }\n    iVar4 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x49fd24, 0, 1, 0x4c6e7c, &var_4h);\n    if (iVar4 < 0) {\n        fcn.004222d0(&var_250h, 0, 0x208);\n        var_44h = var_8h;\n        var_40h = &var_250h;\n        var_30h = var_28h;\n        var_48h = var_ch;\n        var_3ch = var_18h;\n        var_34h = fcn.00473c14;\n        var_2ch = 0;\n        var_38h = uVar7;\n        iVar4 = (*_sym.imp.SHELL32.dll_SHBrowseForFolderW)(&var_48h);\n        if (iVar4 == 0) {\n            iVar4 = *(*in_ECX + 4);\n            iVar6 = *(iVar4 + 8 + in_ECX);\n            if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                iVar6 = *(iVar6 + 0x38);\n            }\n            *(iVar6 + 0x14) = 1;\n            iVar6 = *(iVar4 + 8 + in_ECX);\n            if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                iVar6 = *(iVar6 + 0x38);\n            }\n            *(iVar6 + 0x18) = 0;\n        }\n        else {\n            fcn.0040b5c1(&var_250h);\n            (*_sym.imp.SHELL32.dll_SHGetPathFromIDListW)(iVar4, &var_250h);\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar4);\n            if (var_250h != 0) {\n                fcn.0040b5c1(&var_250h);\n            }\n        }\n    }\n    else {\n        iVar4 = *(*in_ECX + 4);\n        iVar6 = *(iVar4 + 8 + in_ECX);\n        if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x14) = 1;\n        iVar6 = *(iVar4 + 8 + in_ECX);\n        if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x18) = 0;\n        arg_8h = NULL;\n        iVar4 = (**(*var_4h + 0x28))(var_4h, &var_14h);\n        if (-1 < iVar4) {\n            (**(*var_4h + 0x24))(var_4h, var_14h | 0x20);\n            (**(*var_4h + 0x3c))(var_4h, var_28h);\n            (**(*var_4h + 0x44))(var_4h, var_18h);\n            (*_sym.imp.SHELL32.dll_SHCreateShellItem)(0, 0, var_8h, &var_10h);\n            (**(*var_4h + 0x30))(var_4h, var_10h);\n            iVar4 = (**(*var_4h + 0xc))(var_4h, var_ch);\n            if (-1 < iVar4) {\n                iVar4 = (**(*var_4h + 0x50))(var_4h, &var_ch);\n                if (-1 < iVar4) {\n                    iVar4 = (**(*var_ch + 0x14))(var_ch, 0x80028000, &arg_8h);\n                    if (-1 < iVar4) {\n                        fcn.0040b5c1(arg_8h);\n                        (*_sym.imp.ole32.dll_CoTaskMemFree)(arg_8h);\n                        iVar4 = *(*in_ECX + 4);\n                        iVar6 = *(iVar4 + 8 + in_ECX);\n                        if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                            iVar6 = *(iVar6 + 0x38);\n                        }\n                        *(iVar6 + 0x14) = 0;\n                        iVar6 = *(iVar4 + 8 + in_ECX);\n                        if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                            iVar6 = *(iVar6 + 0x38);\n                        }\n                        *(iVar6 + 0x18) = 0;\n                    }\n                    (**(*var_ch + 8))(var_ch);\n                }\n            }\n        }\n        (**(*var_4h + 8))(var_4h);\n    }\n    if (var_8h != 0) {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(var_8h);\n    }\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 1902
    },
    "00477d0e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00477d0e(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    bool bVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    int16_t iVar6;\n    uint *extraout_ECX;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    int16_t *piVar7;\n    uint unaff_EDI;\n    uint *puStack00000008;\n    uint uStack0000000c;\n    uint uStack00000010;\n    uint uStack00000014;\n    int32_t *piStack00000018;\n    \n    fcn.00441ef0();\n    iVar5 = *(*(arg_8h + 4) + 4);\n    puStack00000008 = extraout_ECX;\n    fcn.00408e90();\n    piVar7 = **(iVar5 + 8);\n    if ((*(arg_8h + 8) < 3) || (iVar5 = fcn.0040ce67(),  iVar5 != 1)) {\n        bVar2 = false;\n    }\n    else {\n        bVar2 = true;\n    }\n    iVar6 = *piVar7;\n    while (iVar6 != 0) {\n        if ((iVar6 == 0x2b) || (iVar6 == 0x2d)) {\n            piVar7 = piVar7 + 1;\n            iVar6 = *piVar7;\n        }\n        if ((((((iVar6 != 0x52) && (iVar6 != 0x72)) && (iVar6 != 0x41)) && ((iVar6 != 0x61 && (iVar6 != 0x53)))) &&\n            ((iVar6 != 0x73 && ((iVar6 != 0x48 && (iVar6 != 0x68)))))) &&\n           ((iVar6 != 0x4e &&\n            ((((iVar6 != 0x6e && (iVar6 != 0x4f)) && (iVar6 != 0x6f)) && ((iVar6 != 0x54 && (iVar6 != 0x74)))))))) {\n            fcn.0040e8a0();\n            *puStack00000008 = 0;\n            puStack00000008[3] = 1;\n            return 0;\n        }\n        piVar7 = piVar7 + 1;\n        iVar6 = *piVar7;\n    }\n    iVar5 = **0x5;\n    fcn.00408e90();\n    puVar1 = *(iVar5 + 8);\n    uStack0000000c = *puVar1;\n    uStack00000010 = puVar1[1];\n    uStack00000014 = puVar1[2];\n    piStack00000018 = puVar1[3];\n    *piStack00000018 = *piStack00000018 + 1;\n    fcn.0040592d();\n    fcn.0042d513(uStack0000000c, &stack0x0000061c, &stack0x0000021c, &stack0x0000001c, &stack0x0000041c);\n    fcn.00428fc8(&stack0x0000061c, &stack0x0000021c);\n    fcn.00428fc8(&stack0x0000001c, &stack0x0000041c);\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)();\n    pcVar3 = _sym.imp.KERNEL32.dll_SetCurrentDirectoryW;\n    iVar5 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)();\n    if ((iVar5 == 0) || (iVar5 = fcn.0046dadc(),  iVar5 == -1)) {\ncode_r0x00477f37:\n        fcn.0040e8a0();\n        puStack00000008[3] = 1;\n        *puStack00000008 = 0;\n    }\n    else {\n        cVar4 = fcn.0046e0b7();\n        if (cVar4 == '\\0') {\ncode_r0x00477f97:\n            cVar4 = fcn.00479560(&stack0x00000010, unaff_ESI, unaff_EDI, unaff_EBX);\n            if (cVar4 == '\\0') {\n                fcn.0040e8a0();\n                *puStack00000008 = 0;\n                puStack00000008[3] = 1;\n            }\n        }\n        else {\n            unaff_ESI = unaff_EDI;\n            (*_sym.imp.KERNEL32.dll_GetFileAttributesW)();\n            unaff_EDI = unaff_ESI;\n            iVar5 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)();\n            if (iVar5 == 0) {\n                (*pcVar3)();\n                goto code_r0x00477f37;\n            }\n            if (bVar2) {\n                (*pcVar3)();\n                fcn.00424913(&stack0x00000010, 0x4c6b78);\n                goto code_r0x00477f97;\n            }\n        }\n        (*pcVar3)();\n    }\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 1161
    },
    "004780b3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004780b3(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int16_t *piVar2;\n    uint *puVar3;\n    bool bVar4;\n    code *pcVar5;\n    int32_t *piVar6;\n    char cVar7;\n    int32_t iVar8;\n    uint *extraout_ECX;\n    int32_t *piStack00000008;\n    uint uStack8;\n    uint arg_8h_00;\n    \n    fcn.00441ef0();\n    uVar1 = *(arg_8h + 8);\n    iVar8 = *(*(arg_8h + 4) + 4);\n    piStack00000008 = extraout_ECX;\n    fcn.00408e90();\n    piVar2 = **(iVar8 + 8);\n    uStack8 = 0;\n    if (((2 < uVar1) && (iVar8 = fcn.0040ce67(),  -1 < iVar8)) && (iVar8 = fcn.0040ce67(),  iVar8 < 3)) {\n        uStack8 = fcn.0040ce67();\n    }\n    if ((uVar1 < 4) || (iVar8 = fcn.0040ce67(),  iVar8 != 1)) {\n        bVar4 = false;\n    }\n    else {\n        bVar4 = true;\n    }\n    if (*piVar2 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLocalTime)();\n    }\n    else {\n        cVar7 = fcn.0046ec37(1, 0);\n        if (cVar7 == '\\0') {\n            fcn.0040e8a0();\n            *piStack00000008 = 0;\n            piStack00000008[3] = 1;\n            return 0;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)();\n    (*_sym.imp.KERNEL32.dll_LocalFileTimeToFileTime)();\n    iVar8 = **(arg_8h + 4);\n    fcn.00408e90();\n    puVar3 = *(iVar8 + 8);\n    arg_8h_00 = *puVar3;\n    piStack00000008 = puVar3[3];\n    *piStack00000008 = *piStack00000008 + 1;\n    fcn.0040592d();\n    fcn.0042d513(arg_8h_00, &stack0x0001061c, &stack0x0000021c, &stack0x0000001c, &stack0x0000041c);\n    fcn.00428fc8(&stack0x0001061c, &stack0x0000021c);\n    fcn.00428fc8(&stack0x0000001c, &stack0x0000041c);\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)();\n    pcVar5 = _sym.imp.KERNEL32.dll_SetCurrentDirectoryW;\n    iVar8 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)();\n    if (iVar8 == 0) {\ncode_r0x00478276:\n        piVar6 = piStack00000008;\n        fcn.0040e8a0();\n        piVar6[3] = 1;\n        *piVar6 = 0;\n    }\n    else {\n        cVar7 = fcn.0046e0b7();\n        if (cVar7 == '\\0') {\ncode_r0x004782c6:\n            cVar7 = fcn.004796bb(&stack0x00000010, &stack0xffffffe4, &uStack8, &uStack8);\n            piVar6 = piStack00000008;\n            if (cVar7 == '\\0') {\n                fcn.0040e8a0();\n                *piVar6 = 0;\n                piVar6[3] = 1;\n            }\n        }\n        else {\n            cVar7 = fcn.0046da03(&uStack8);\n            if (cVar7 == '\\0') {\n                (*pcVar5)();\n                goto code_r0x00478276;\n            }\n            if (bVar4) {\n                (*pcVar5)();\n                fcn.00424913(&stack0x00000010, 0x4c6b78);\n                goto code_r0x004782c6;\n            }\n        }\n        (*pcVar5)();\n    }\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 1003
    },
    "004784bf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004784bf(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    bool bVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int32_t *in_ECX;\n    int32_t *unaff_EBX;\n    int32_t iVar7;\n    int32_t *arg_8h_00;\n    int32_t iVar8;\n    int32_t *piVar9;\n    int32_t *piStack116;\n    int32_t *piStack112;\n    int32_t aiStack108 [2];\n    int32_t *piStack100;\n    uint uStack96;\n    uchar auStack92 [8];\n    uchar auStack84 [80];\n    \n    piStack100 = in_ECX;\n    fcn.0040c25d();\n    fcn.00408e90();\n    fcn.0040592d();\n    uVar3 = fcn.0041fd8b();\n    fcn.004070c2(uVar3);\n    iVar4 = *(*(arg_8h + 4) + 4);\n    fcn.00408e90();\n    piVar9 = piStack100;\n    uVar3 = **(iVar4 + 8);\n    iVar4 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileSectionW)();\n    if (iVar4 == 0) {\n        iVar4 = *(*in_ECX + 4);\n        iVar8 = *(in_ECX + iVar4 + 8);\n        if (*(in_ECX + iVar4 + 0xd) != '\\0') {\n            iVar8 = *(iVar8 + 0x38);\n        }\n        *(iVar8 + 0x14) = 1;\n        iVar8 = *(in_ECX + iVar4 + 8);\n        if (*(in_ECX + iVar4 + 0xd) != '\\0') {\n            iVar8 = *(iVar8 + 0x38);\n        }\n        *(iVar8 + 0x18) = 0;\n    }\n    else {\n        piVar5 = fcn.0041fd5b(0x14, uVar3);\n        bVar2 = false;\n        iVar8 = 0;\n        piVar5[1] = 0;\n        piVar5[2] = 0;\n        piVar5[3] = 0;\n        piVar5[4] = 0;\n        *piVar5 = 0;\n        piVar9 = piStack116;\n        if (0 < iVar4) {\n            iVar7 = 0;\n            arg_8h_00 = piVar5;\n            do {\n                iVar1 = *(piStack116 + iVar8 * 2);\n                if ((iVar1 == 0x3b) && (*piVar5 == iVar8)) {\n                    bVar2 = true;\n                }\n                else if ((iVar1 != 0x3d) || ((piVar5[1] != 0 || (bVar2)))) {\n                    if (iVar1 == 0) {\n                        *(piStack116 + iVar8 * 2) = 0xd;\n                        if ((piVar5[2] == 0) || (bVar2)) {\n                            *piVar5 = iVar8 + 1;\n                            piVar5[3] = 0;\n                            piVar5[2] = 0;\n                            piVar5[1] = 0;\n                        }\n                        else {\n                            piVar5[3] = iVar8;\n                            iVar7 = iVar7 + 1;\n                            if (*(piStack116 + iVar8 * 2 + 2) != 0) {\n                                piVar6 = fcn.0041fd5b(0x14, uVar3);\n                                piVar6[1] = 0;\n                                piVar6[2] = 0;\n                                piVar6[3] = 0;\n                                piVar6[4] = 0;\n                                piVar5[4] = piVar6;\n                                *piVar6 = iVar8 + 1;\n                                piVar5 = piVar6;\n                            }\n                        }\n                        bVar2 = false;\n                        if (*(piStack116 + iVar8 * 2 + 2) == 0) break;\n                    }\n                }\n                else {\n                    piVar5[1] = iVar8;\n                    piVar5[2] = iVar8 + 1;\n                }\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < iVar4);\n            if (0 < iVar7) {\n                fcn.00407d93();\n                if (arg_ch[3] == 5) {\n                    uVar3 = *arg_ch;\n                }\n                else {\n                    uVar3 = 0;\n                }\n                fcn.004083e0(uVar3, 2);\n                piStack100 = NULL;\n                uStack96 = 1;\n                aiStack108[0] = iVar7;\n                fcn.00408a30(uVar3, aiStack108, 2);\n                fcn.0040e8a0();\n                fcn.0040c25d();\n                fcn.0040c25d();\n                if (0 < iVar7) {\n                    do {\n                        uVar3 = 0xffffffff;\n                        fcn.0040ad22(0, 0xffffffff);\n                        fcn.00408817(piStack116, *arg_8h_00, arg_8h_00[1] - *arg_8h_00);\n                        fcn.0040890f(&piStack112);\n                        fcn.00408a30(uVar3, auStack84, 2);\n                        fcn.0040e8a0();\n                        uVar3 = 0xffffffff;\n                        fcn.0040ad22(0, 0xffffffff);\n                        fcn.00408817(piStack116, arg_8h_00[2], arg_8h_00[3] - arg_8h_00[2]);\n                        fcn.0040890f(&stack0xffffff68);\n                        fcn.00408a30(uVar3, auStack92, 2);\n                        fcn.0040e8a0();\n                        piVar5 = arg_8h_00[4];\n                        fcn.0041fd4d(arg_8h_00);\n                        iVar7 = iVar7 + -1;\n                        arg_8h_00 = piVar5;\n                    } while (iVar7 != 0);\n                }\n                fcn.0040b1ff();\n                fcn.0040b1ff();\n                goto code_r0x004787ce;\n            }\n        }\n        iVar4 = *(*unaff_EBX + 4);\n        iVar8 = *(unaff_EBX + iVar4 + 8);\n        if (*(unaff_EBX + iVar4 + 0xd) != '\\0') {\n            iVar8 = *(iVar8 + 0x38);\n        }\n        *(iVar8 + 0x14) = 1;\n        iVar8 = *(unaff_EBX + iVar4 + 8);\n        if (*(unaff_EBX + iVar4 + 0xd) != '\\0') {\n            iVar8 = *(iVar8 + 0x38);\n        }\n        *(iVar8 + 0x18) = 0;\n    }\ncode_r0x004787ce:\n    *piStack112 = *piStack112 + -1;\n    if (*piStack112 == 0) {\n        fcn.0041fd4d(piStack112);\n        fcn.0041fd94(piVar9);\n    }\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 1684
    },
    "004787fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004787fc(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t **arg_8h_00;\n    int32_t iVar10;\n    uint arg_8h_01;\n    int32_t iVar11;\n    int32_t *piStack84;\n    int32_t iStack80;\n    int32_t *piStack76;\n    int32_t iStack72;\n    int32_t iStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar auStack56 [12];\n    uint uStack44;\n    \n    fcn.0040c25d();\n    fcn.00408e90();\n    fcn.0040592d();\n    uVar2 = fcn.0041fd8b(0xfffe);\n    fcn.004070c2(uVar2);\n    *(iStack68 + 2) = 10;\n    uVar2 = 0x7fff;\n    iVar9 = iStack68;\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileSectionNamesW)(iStack68, 0x7fff, uStack44);\n    if ((iVar3 == 0) || (*(iStack68 + 2) == 10)) {\n        iVar9 = *(*in_ECX + 4);\n        iVar3 = *(in_ECX + iVar9 + 8);\n        if (*(in_ECX + iVar9 + 0xd) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 1;\n        iVar3 = *(in_ECX + iVar9 + 8);\n        if (*(in_ECX + iVar9 + 0xd) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n        iStack80 = iStack68;\n    }\n    else {\n        piVar4 = fcn.0041fd5b(0xc, iVar9);\n        iVar1 = iStack80;\n        iVar7 = 0;\n        iVar5 = 0;\n        piVar4[1] = 0;\n        iVar8 = 0;\n        piVar4[2] = 0;\n        *piVar4 = 0;\n        iVar10 = 0;\n        piVar6 = piVar4;\n        iVar11 = iVar3;\n        piStack84 = piVar4;\n        if (0 < iVar3) {\n            do {\n                if (*(iVar1 + iVar8 * 2) == 0) {\n                    iVar5 = iVar5 + 1;\n                    piVar4[1] = iVar8;\n                    *(iVar1 + iVar8 * 2) = 0xd;\n                    iVar3 = iVar11;\n                    piVar4 = fcn.0041fd5b(0xc, iVar9);\n                    piVar4[1] = 0;\n                    piVar4[2] = 0;\n                    piVar6[2] = piVar4;\n                    *piVar4 = iVar8 + 1;\n                    iVar10 = iVar5;\n                    piVar6 = piVar4;\n                    iVar11 = iVar3;\n                }\n                iVar8 = iVar8 + 1;\n            } while (iVar8 < iVar3);\n        }\n        piVar6 = piStack84;\n        fcn.00407d93();\n        if (arg_ch[3] == 5) {\n            arg_8h_01 = *arg_ch;\n        }\n        else {\n            arg_8h_01 = 0;\n        }\n        fcn.004083e0(arg_8h_01, 1);\n        uStack64 = 0;\n        uStack60 = 1;\n        iStack72 = iVar10;\n        fcn.00408a30(arg_8h_01, &iStack72, 1);\n        fcn.0040e8a0();\n        fcn.0040c25d();\n        iVar9 = iStack80;\n        if (0 < iVar10) {\n            do {\n                fcn.0040bfbf();\n                fcn.00408817(iVar9, *piVar6, piVar6[1] - *piVar6);\n                arg_8h_00 = &piStack84;\n                fcn.0040890f(arg_8h_00);\n                iVar7 = iVar7 + 1;\n                fcn.00408a30(uVar2, auStack56, 1);\n                fcn.0040e8a0();\n                piVar4 = piVar6[2];\n                fcn.0041fd4d(piVar6);\n                piVar6 = piVar4;\n            } while (iVar7 < arg_8h_00);\n        }\n        fcn.0040b1ff();\n    }\n    *piStack76 = *piStack76 + -1;\n    if (*piStack76 == 0) {\n        uVar2 = 4;\n        fcn.0041fd4d(piStack76);\n        fcn.0041fd94(iStack80, piStack76, uVar2);\n    }\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 1215
    },
    "00478a19": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00478a19(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    bool bVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    int32_t iVar6;\n    uint uVar7;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    bVar3 = false;\n    if (3 < *(arg_8h + 8)) {\n        iVar5 = fcn.0040ce67();\n        bVar3 = 0 < iVar5;\n    }\n    iVar5 = **(arg_8h + 4);\n    fcn.00408e90();\n    puVar1 = *(iVar5 + 8);\n    uVar7 = *puVar1;\n    piVar2 = puVar1[3];\n    *piVar2 = *piVar2 + 1;\n    fcn.00408e90();\n    fcn.0040592d();\n    arg_8h_00 = fcn.0041fd8b(0xfffe);\n    fcn.004070c2(arg_8h_00);\n    iVar5 = *(*(arg_8h + 4) + 4);\n    fcn.00408e90();\n    iVar5 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileSectionW)(**(iVar5 + 8), var_10h, 0x7fff, uVar7);\n    if (iVar5 != 0) {\n        iVar5 = *(*(arg_8h + 4) + 8);\n        fcn.00408e90();\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileSectionW)(**(iVar5 + 8), &var_8h, 3, uVar7);\n        if ((iVar5 == 0) || (bVar3)) {\n            iVar5 = *(*(arg_8h + 4) + 8);\n            fcn.00408e90();\n            (*_sym.imp.KERNEL32.dll_WritePrivateProfileSectionW)(**(iVar5 + 8), var_10h, uVar7);\n            iVar5 = *(*(arg_8h + 4) + 4);\n            fcn.00408e90();\n            pcVar4 = _sym.imp.KERNEL32.dll_WritePrivateProfileStringW;\n            (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)(**(iVar5 + 8), 0, 0, uVar7);\n            (*pcVar4)(0, 0, 0, uVar7);\n            fcn.0040e8a0();\n            arg_ch[3] = 1;\n            *arg_ch = 1;\n        }\n        else {\n            iVar5 = *(*in_ECX + 4);\n            iVar6 = *(iVar5 + 8 + in_ECX);\n            if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                iVar6 = *(iVar6 + 0x38);\n            }\n            *(iVar6 + 0x14) = 1;\n            iVar6 = *(iVar5 + 8 + in_ECX);\n            if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                iVar6 = *(iVar6 + 0x38);\n            }\n            *(iVar6 + 0x18) = 0;\n        }\n    }\n    *var_ch = *var_ch + -1;\n    if (*var_ch == 0) {\n        uVar7 = 4;\n        fcn.0041fd4d(var_ch);\n        fcn.0041fd94(var_10h, var_ch, uVar7);\n    }\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 910
    },
    "00478c60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00478c60(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int16_t *piVar6;\n    int16_t iVar7;\n    int32_t *in_ECX;\n    uint *puVar8;\n    int16_t *piVar9;\n    ulong uVar10;\n    uint var_20h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    fcn.0040c25d();\n    fcn.00408e90();\n    fcn.0040592d();\n    ppiVar1 = *(*(arg_8h + 4) + 8);\n    if ((ppiVar1[3] == 0x5) && (*(**ppiVar1 + 0x10c) == 2)) {\n        uVar10 = fcn.0041e703(2);\n        iVar3 = uVar10 >> 0x20;\n        if (uVar10 == 2) {\n            var_ch = 1;\n            if (3 < *(arg_8h + 8)) {\n                var_ch = fcn.0040ce67();\n                iVar3 = *(arg_8h + 4);\n                if (var_ch < 0) {\n                    var_ch = 1;\n                }\n            }\n            var_10h = 0;\n            if ((*(iVar3 + 8))[3] == 5) {\n                var_4h = **(iVar3 + 8);\n            }\n            else {\n                var_4h = 0;\n            }\n            while (uVar10 = fcn.0041e703(1),  uVar10 >> 0x20 < uVar10) {\n                iVar3 = fcn.00411df0(var_4h, 1, 2);\n                fcn.00408e90();\n                iVar3 = *(*(iVar3 + 8) + 4);\n                iVar4 = fcn.00411df0(var_4h, 1, 2);\n                fcn.00408e90();\n                var_10h = var_10h + 2 + *(*(iVar4 + 8) + 4) + iVar3;\n            }\n            iVar2 = (var_10h + 1) * 2;\n            puVar5 = fcn.0041fd8b(-(iVar2 >> 0x20 != 0) | iVar2);\n            puVar8 = puVar5;\n            while( true ) {\n                uVar10 = fcn.0041e703(1);\n                if (uVar10 <= var_ch) break;\n                iVar3 = fcn.00411df0(uVar10 >> 0x20, 1, 2);\n                fcn.00408e90();\n                piVar6 = **(iVar3 + 8);\n                iVar7 = *piVar6;\n                while (iVar7 != 0) {\n                    piVar6 = piVar6 + 1;\n                    *puVar8 = iVar7;\n                    puVar8 = puVar8 + 2;\n                    iVar7 = *piVar6;\n                }\n                *puVar8 = 0x3d;\n                piVar9 = puVar8 + 2;\n                iVar3 = fcn.00411df0(var_4h, 1, 2);\n                fcn.00408e90();\n                piVar6 = **(iVar3 + 8);\n                iVar7 = *piVar6;\n                while (iVar7 != 0) {\n                    piVar6 = piVar6 + 1;\n                    *piVar9 = iVar7;\n                    piVar9 = piVar9 + 1;\n                    iVar7 = *piVar6;\n                }\n                *piVar9 = 0;\n                puVar8 = piVar9 + 1;\n                var_ch = var_ch + 1;\n            }\n            *puVar8 = 0;\n            goto code_r0x00478ed4;\n        }\n    }\n    if (ppiVar1[3] == 0x4) {\n        fcn.00408e90();\n        iVar2 = (ppiVar1[2][1] + 2) * 2;\n        puVar5 = fcn.0041fd8b(-(iVar2 >> 0x20 != 0) | iVar2);\n        iVar3 = *(*(arg_8h + 4) + 8);\n        fcn.00408e90();\n        piVar6 = **(iVar3 + 8);\n        iVar7 = *piVar6;\n        while (puVar8 = puVar5,  iVar7 == 10) {\n            piVar6 = piVar6 + 1;\n            iVar7 = *piVar6;\n        }\n        do {\n            iVar7 = *piVar6;\n            if (iVar7 == 10) {\n                iVar7 = 0;\n            }\n            else if (iVar7 == 0) goto code_r0x00478ed0;\n            *puVar8 = iVar7;\n            piVar6 = piVar6 + 1;\n            puVar8 = puVar8 + 2;\n        } while( true );\n    }\n    iVar3 = *(*in_ECX + 4);\n    iVar4 = *(iVar3 + 8 + in_ECX);\n    if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n        iVar4 = *(iVar4 + 0x38);\n    }\n    *(iVar4 + 0x14) = 1;\n    iVar4 = *(iVar3 + 8 + in_ECX);\n    if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n        iVar4 = *(iVar4 + 0x38);\n    }\n    *(iVar4 + 0x18) = 0;\ncode_r0x00478f4c:\n    fcn.0040b1ff();\n    return 0;\ncode_r0x00478ed0:\n    *puVar8 = 0;\ncode_r0x00478ed4:\n    iVar3 = *(*(arg_8h + 4) + 4);\n    fcn.00408e90();\n    iVar3 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileSectionW)(**(iVar3 + 8), puVar5, var_20h);\n    if (iVar3 != 0) {\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)(0, 0, 0, var_20h);\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    fcn.0041fd94(puVar5);\n    goto code_r0x00478f4c;\n}\n",
        "token_count": 1553
    },
    "0047902a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047902a(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    int32_t **ppiVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int16_t *piVar6;\n    ushort *puVar7;\n    int32_t *in_ECX;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint16_t uVar10;\n    uint32_t unaff_EBX;\n    uint32_t uVar11;\n    int16_t *unaff_ESI;\n    uint32_t uVar12;\n    int32_t *piVar13;\n    int32_t *piStack228;\n    uint uStack224;\n    uint32_t uStack216;\n    uint uStack196;\n    int32_t *piStack192;\n    int32_t iStack188;\n    uint32_t uStack184;\n    uchar auStack176 [28];\n    int32_t *piStack148;\n    int32_t *piStack144;\n    int32_t *piStack140;\n    int32_t *piStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    int32_t *piStack120;\n    uint auStack112 [3];\n    uint uStack100;\n    int16_t *piStack92;\n    uint uStack88;\n    int16_t *piStack84;\n    uint uStack80;\n    uint32_t uStack60;\n    uint uStack52;\n    \n    fcn.0040c25d();\n    fcn.0040b5c1(0x49d0d0);\n    iVar5 = **(arg_8h + 4);\n    fcn.00408e90();\n    puVar2 = *(iVar5 + 8);\n    uStack196 = *puVar2;\n    uStack128 = puVar2[1];\n    uStack124 = puVar2[2];\n    piStack120 = puVar2[3];\n    *piStack120 = *piStack120 + 1;\n    iVar5 = *(*(arg_8h + 4) + 4);\n    uStack132 = uStack196;\n    fcn.00408e90();\n    ppiVar3 = *(iVar5 + 8);\n    piStack192 = *ppiVar3;\n    piStack144 = ppiVar3[1];\n    piStack140 = ppiVar3[2];\n    piStack136 = ppiVar3[3];\n    *piStack136 = *piStack136 + 1;\n    piStack148 = piStack192;\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.00408e90();\n    uVar4 = fcn.00408fa0();\n    fcn.004070c2(uVar4);\n    iVar5 = fcn.0042d678(piStack192, 0x4af370, 0);\n    while (iVar5 != 0) {\n        fcn.004084e7(iVar5);\n        uVar11 = 0;\n        uVar8 = 0;\n        if (uStack184 != 0) {\n            do {\n                iVar5 = 0;\n                uVar1 = *(iStack188 + uVar11 * 2);\n                unaff_ESI = uVar1;\n                uVar10 = 0x28;\n                do {\n                    if (uVar1 == uVar10) goto code_r0x00479157;\n                    uVar10 = *(iVar5 * 2 + 0x4c63d2);\n                    iVar5 = iVar5 + 1;\n                } while (uVar10 != 0);\n                uVar11 = uVar11 + 1;\n                uVar8 = uVar8 + 1;\n            } while (uVar8 < uStack184);\n        }\n        uVar11 = 0xffffffff;\ncode_r0x00479157:\n        uVar12 = 0;\n        uVar8 = 0;\n        if (uStack184 != 0) {\n            do {\n                unaff_ESI = NULL;\n                uVar1 = *(iStack188 + uVar12 * 2);\n                unaff_EBX = uVar1;\n                uVar10 = 0x29;\n                do {\n                    if (uVar1 == uVar10) goto code_r0x0047919d;\n                    unaff_ESI = unaff_ESI + 1;\n                    uVar10 = *(unaff_ESI * 2 + 0x4c63d4);\n                } while (uVar10 != 0);\n                uVar12 = uVar12 + 1;\n                uVar8 = uVar8 + 1;\n            } while (uVar8 < uStack184);\n        }\n        uVar12 = 0xffffffff;\ncode_r0x0047919d:\n        if (((uVar11 == 0xffffffff) || (uVar12 == 0xffffffff)) || (uVar12 < uVar11)) {\n            iVar5 = *(*in_ECX + 4);\n            iVar9 = *(iVar5 + 8 + in_ECX);\n            if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                iVar9 = *(iVar9 + 0x38);\n            }\n            *(iVar9 + 0x14) = 2;\n            iVar9 = *(iVar5 + 8 + in_ECX);\n            if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                iVar9 = *(iVar9 + 0x38);\n            }\n            *(iVar9 + 0x18) = 0;\n            goto code_r0x00479508;\n        }\n        fcn.00407cf8(&iStack188);\n        fcn.004052b7(0x4af370);\n        fcn.004086ac(&uStack196, uVar11 + 1, (uVar12 - uVar11) + -1);\n        fcn.00407cf8(&piStack144);\n        fcn.004052b7(0x4af370);\n        iVar5 = fcn.0042d678(0, 0x4af370, 0);\n    }\n    uVar8 = 0x4af370;\n    fcn.004052b7(0x4af370);\n    uVar11 = 1;\n    if (1 < uStack216) {\n        do {\n            uVar8 = uVar11;\n            piVar6 = fcn.0040660f(uVar11);\n            if (*piVar6 == 0x7c) {\n                uVar8 = uVar11;\n                puVar7 = fcn.0040660f(uVar11);\n                *puVar7 = 0;\n            }\n            uVar11 = uVar11 + 1;\n        } while (uVar11 < uStack216);\n    }\n    if (5 < arg_10h) {\n        uStack224 = fcn.00471dda();\n    }\n    uVar4 = fcn.0041fd8b(0x1fffe);\n    fcn.004070c2(uVar4);\n    if (arg_10h < 5) {\n        *unaff_ESI = 0;\n    }\n    else {\n        iVar5 = *(*(arg_8h + 4) + 0x10);\n        fcn.00408e90();\n        fcn.00424913(unaff_ESI, **(iVar5 + 8));\n    }\n    fcn.004222d0(auStack112, 0, 0x58);\n    uStack100 = uStack224;\n    uVar11 = 0x80004;\n    auStack112[0] = 0x58;\n    uStack80 = 0xffff;\n    uStack52 = 0x49d0d0;\n    piStack84 = unaff_ESI;\n    if (((3 < arg_10h) && (iVar5 = fcn.0040ce67(),  iVar5 < 0x20)) && (iVar5 = fcn.0040ce67(),  -1 < iVar5)) {\n        uVar11 = fcn.0040ce67();\n        uVar11 = (uVar11 & 0x10 | 0x400020) >> 3;\n        uVar12 = fcn.0040ce67();\n        if ((uVar12 & 8) != 0) {\n            uVar11 = uVar11 | 0x2000;\n        }\n        uVar12 = fcn.0040ce67();\n        if ((uVar12 & 4) != 0) {\n            uVar11 = uVar11 | 0x200;\n        }\n        uVar12 = fcn.0040ce67();\n        if ((uVar12 & 2) != 0) {\n            uVar11 = uVar11 | 0x800;\n        }\n        uVar12 = fcn.0040ce67();\n        if ((uVar12 & 1) != 0) {\n            uVar11 = uVar11 | 0x1000;\n        }\n    }\n    uStack60 = uVar11;\n    if (arg_14h == '\\0') {\n        iVar5 = (*_sym.imp.COMDLG32.dll_GetSaveFileNameW)(auStack112);\n        if (iVar5 == 0) goto code_r0x004794be;\n    }\n    else {\n        iVar5 = (*_sym.imp.COMDLG32.dll_GetOpenFileNameW)();\n        if (iVar5 == 0) {\ncode_r0x004794be:\n            iVar5 = *(*in_ECX + 4);\n            iVar9 = *(iVar5 + 8 + in_ECX);\n            if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                iVar9 = *(iVar9 + 0x38);\n            }\n            *(iVar9 + 0x14) = 1;\n            iVar9 = *(iVar5 + 8 + in_ECX);\n            if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                iVar9 = *(iVar9 + 0x38);\n            }\n            *(iVar9 + 0x18) = 0;\n            goto code_r0x004794eb;\n        }\n        if ((uVar11 & 0x200) != 0) {\n            iVar5 = fcn.004248f3(uStack80);\n            fcn.0040b606(uStack80);\n            while (piStack84 = piStack84 + iVar5 + 1,  *piStack84 != 0) {\n                iVar5 = fcn.004248f3(piStack84);\n                fcn.004052b7(0x4af370);\n                fcn.004052b7(uStack88);\n                piStack84 = piStack92;\n            }\n            fcn.00407c5d(auStack176);\n            fcn.0040b1ff();\n            goto code_r0x004794eb;\n        }\n    }\n    fcn.0040b5c1(uVar8);\ncode_r0x004794eb:\n    *piStack228 = *piStack228 + -1;\n    if (*piStack228 == 0) {\n        uVar4 = 4;\n        fcn.0041fd4d(piStack228);\n        fcn.0041fd94(unaff_EBX, piStack228, uVar4);\n    }\ncode_r0x00479508:\n    *piStack192 = *piStack192 + -1;\n    if (*piStack192 == 0) {\n        uVar4 = 4;\n        piVar13 = piStack192;\n        fcn.0041fd4d(piStack192);\n        fcn.0041fd94(uStack196, piVar13, uVar4);\n    }\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 2672
    },
    "00479560": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00479560(uint arg_8h, uint32_t dwFileAttributes, uint32_t arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    uint lpFindFileData;\n    uint lpFileName;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_FindFirstFileW;\n    uVar7 = 0;\n    iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(arg_8h, &lpFindFileData);\n    uVar2 = 0;\n    if (iVar4 != -1) {\n        do {\n            uVar7 = uVar2;\n            iVar5 = fcn.004251c2(&lpFileName, 0x49d108);\n            if ((iVar5 != 0) && (iVar5 = fcn.004251c2(&lpFileName, 0x4c6b80),  iVar5 != 0)) {\n                uVar6 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(&lpFileName);\n                iVar5 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(&lpFileName, (uVar6 | dwFileAttributes) & ~arg_10h);\n                if (iVar5 == 0) {\n                    uVar6 = (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n                    return uVar6 & 0xffffff00;\n                }\n                uVar7 = 1;\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar4, &lpFindFileData);\n            uVar2 = uVar7;\n        } while (iVar5 != 0);\n    }\n    uVar6 = (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n    if (arg_14h != '\\0') {\n        iVar4 = (*pcVar1)(0x4c6b78, &lpFindFileData);\n        pcVar1 = _sym.imp.KERNEL32.dll_SetCurrentDirectoryW;\n        if (iVar4 != -1) {\n            do {\n                if ((((lpFindFileData & 0x10) != 0) && (iVar5 = fcn.004251c2(&lpFileName, 0x49d108),  iVar5 != 0)) &&\n                   (iVar5 = fcn.004251c2(&lpFileName, 0x4c6b80),  iVar5 != 0)) {\n                    (*pcVar1)(&lpFileName);\n                    cVar3 = fcn.00479560(arg_8h, dwFileAttributes, arg_10h, arg_14h);\n                    if (cVar3 == '\\0') {\n                        uVar7 = 0;\n                        goto code_r0x0047969c;\n                    }\n                    (*pcVar1)(0x4c6b80);\n                }\n                iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar4, &lpFindFileData);\n            } while (iVar5 != 0);\n        }\n        uVar7 = 1;\ncode_r0x0047969c:\n        uVar6 = (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n    }\n    return uVar6 & 0xffffff00 | uVar7;\n}\n",
        "token_count": 771
    },
    "004796bb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004796bb(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    uint lpFindFileData;\n    uint var_22ch;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_FindFirstFileW;\n    uVar7 = 0;\n    iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(arg_8h, &lpFindFileData);\n    uVar2 = 0;\n    if (iVar4 != -1) {\n        do {\n            uVar7 = uVar2;\n            iVar5 = fcn.004251c2(&var_22ch, 0x49d108);\n            if ((iVar5 != 0) && (iVar5 = fcn.004251c2(&var_22ch, 0x4c6b80),  iVar5 != 0)) {\n                cVar3 = fcn.0046da03(arg_10h);\n                if (cVar3 == '\\0') {\n                    uVar6 = (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n                    return uVar6 & 0xffffff00;\n                }\n                uVar7 = 1;\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar4, &lpFindFileData);\n            uVar2 = uVar7;\n        } while (iVar5 != 0);\n    }\n    uVar6 = (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n    if (arg_14h != '\\0') {\n        iVar4 = (*pcVar1)(0x4c6b78, &lpFindFileData);\n        pcVar1 = _sym.imp.KERNEL32.dll_SetCurrentDirectoryW;\n        if (iVar4 != -1) {\n            do {\n                if ((((lpFindFileData & 0x10) != 0) && (iVar5 = fcn.004251c2(&var_22ch, 0x49d108),  iVar5 != 0)) &&\n                   (iVar5 = fcn.004251c2(&var_22ch, 0x4c6b80),  iVar5 != 0)) {\n                    (*pcVar1)(&var_22ch);\n                    cVar3 = fcn.004796bb(arg_8h, arg_ch, arg_10h, arg_14h);\n                    if (cVar3 == '\\0') {\n                        uVar7 = 0;\n                        goto code_r0x004797e2;\n                    }\n                    (*pcVar1)(0x4c6b80);\n                }\n                iVar5 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar4, &lpFindFileData);\n            } while (iVar5 != 0);\n        }\n        uVar7 = 1;\ncode_r0x004797e2:\n        uVar6 = (*_sym.imp.KERNEL32.dll_FindClose)(iVar4);\n    }\n    return uVar6 & 0xffffff00 | uVar7;\n}\n",
        "token_count": 736
    },
    "00479801": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00479801(int32_t arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    uchar *arg_8h_00;\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int16_t *piVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t unaff_EDI;\n    ulong uVar7;\n    uint uVar8;\n    uint nNumberOfBytesToWrite;\n    uchar auStack28 [24];\n    \n    if (*(**(arg_8h + 4) + 0xc) == 4) {\n        puVar2 = fcn.0041fd5b(0x38, unaff_EDI);\n        *puVar2 = 0;\n        uVar3 = fcn.0041fd8b(0x10000);\n        puVar2[1] = uVar3;\n        fcn.00407bee();\n        fcn.0040c25d();\n        fcn.00407bee();\n        iVar6 = **(arg_8h + 4);\n        fcn.00408e90();\n        uVar8 = *(iVar6 + 8);\n        fcn.00407bee();\n        uVar3 = 1;\n        puVar2[10] = 1;\n        cVar1 = fcn.004070e5(uVar8, 1);\n        if (cVar1 == '\\0') {\n            fcn.00407bbe(extraout_ECX);\ncode_r0x004798e8:\n            fcn.0040e8a0();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n            return 0;\n        }\n        fcn.00406f3a();\n        fcn.00406d7e();\n        fcn.00406d67();\n        if (((*(puVar2 + 10) & 3) != 0) && (((*(puVar2 + 10) & 1) == 0 || ((puVar2[4] | puVar2[5]) == 0)))) {\n            if (puVar2[0xb] == 3) {\n                nNumberOfBytesToWrite = 3;\n                uVar8 = 0x4c364c;\n            }\n            else if (puVar2[0xb] == 5) {\n                nNumberOfBytesToWrite = 2;\n                uVar8 = 0x4c3654;\n            }\n            else {\n                if (puVar2[0xb] != 7) goto code_r0x0047992f;\n                nNumberOfBytesToWrite = 2;\n                uVar8 = 0x4c3650;\n            }\n            fcn.0046cc1d(uVar8, nNumberOfBytesToWrite);\n        }\n    }\n    else {\n        uVar3 = 0;\n        cVar1 = fcn.00479bc8(&stack0xffffffe4, **(arg_8h + 4), 0);\n        if ((cVar1 == '\\0') || ((*(*(**(*(in_ECX + 0x19c) + unaff_EDI * 4) + 4) + 0x28) & 3) == 0))\n        goto code_r0x004798e8;\n    }\ncode_r0x0047992f:\n    iVar6 = *(*(arg_8h + 4) + 4);\n    if ((*(iVar6 + 0xc) == 0xb) || (uVar4 = fcn.0041f2ec(),  (uVar4 & 0x10) != 0)) {\n        fcn.00471db4();\n        uVar7 = fcn.00471e24();\n        iVar6 = fcn.0046cc1d(uVar7 >> 0x20, uVar7);\n        if (iVar6 == uVar7) goto code_r0x00479a23;\n        cVar1 = '\\0';\n    }\n    else {\n        fcn.00408e90();\n        arg_8h_00 = *(iVar6 + 8);\n        if (arg_10h == '\\0') {\ncode_r0x004799d9:\n            cVar1 = fcn.0046cc75(0x4799e1);\n        }\n        else {\n            iVar6 = *(arg_8h_00 + 4);\n            if (iVar6 != 0) {\n                piVar5 = fcn.004058ca(iVar6 + -1);\n                if ((*piVar5 == 0xd) || (piVar5 = fcn.004058ca(uVar3),  *piVar5 == 10)) goto code_r0x004799d9;\n                iVar6 = *(arg_8h_00 + 4);\n            }\n            fcn.00407c18(iVar6 + 2);\n            if (&stack0xffffffd8 != arg_8h_00) {\n                fcn.0040c1c3(arg_8h_00);\n            }\n            fcn.004052b7(0x4af388);\n            cVar1 = fcn.0046cc75(&stack0xffffffd8);\n            fcn.0040b1ff();\n        }\n    }\n    if (cVar1 == '\\0') {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\ncode_r0x00479a23:\n    if (*(**(arg_8h + 4) + 0xc) == 4) {\n        fcn.00407bee();\n        fcn.00407bbe(extraout_ECX_00);\n    }\n    return 0;\n}\n",
        "token_count": 1288
    },
    "00479a49": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl\nfcn.00479a49(uint hFindFile, uint32_t *arg_ch, uint32_t *arg_10h, uint32_t *arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint lpFindFileData;\n    int32_t var_25ch;\n    uint32_t var_258h;\n    uint var_24ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t *var_18h;\n    uint lpFileName;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    fcn.0040b606(hFindFile);\n    var_24h = lpFileName;\n    var_20h = var_10h;\n    var_1ch = var_ch;\n    var_18h = var_8h;\n    *var_8h = *var_8h + 1;\n    fcn.004052b7(0x4c6b78);\n    uVar2 = 1;\n    iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(lpFileName, &lpFindFileData);\n    uVar1 = 1;\n    if (iVar3 != -1) {\n        do {\n            while( true ) {\n                uVar2 = uVar1;\n                iVar4 = fcn.00473792();\n                if (iVar4 == 1) {\n                    uVar2 = 0;\n                    goto code_r0x00479ba8;\n                }\n                if (iVar4 != 0xb) break;\n                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                uVar1 = uVar2;\n            }\n            iVar4 = fcn.004251c2(&var_24ch, 0x49d108);\n            if ((iVar4 != 0) && (iVar4 = fcn.004251c2(&var_24ch, 0x4c6b80),  iVar4 != 0)) {\n                fcn.0040c1c3(&var_24h);\n                fcn.004052b7(&var_24ch);\n                if ((lpFindFileData & 0x10) == 0) {\n                    uVar5 = *arg_ch;\n                    *arg_ch = *arg_ch + var_258h;\n                    arg_ch[1] = arg_ch[1] + var_25ch + CARRY4(uVar5, var_258h);\n                    if (arg_18h != '\\0') {\n                        uVar5 = *arg_10h;\n                        *arg_10h = *arg_10h + 1;\n                        arg_10h[1] = arg_10h[1] + (0xfffffffe < uVar5);\n                    }\n                }\n                else {\n                    if (arg_18h != '\\0') {\n                        uVar5 = *arg_14h;\n                        *arg_14h = *arg_14h + 1;\n                        arg_14h[1] = arg_14h[1] + (0xfffffffe < uVar5);\n                    }\n                    if (arg_1ch != '\\0') {\n                        fcn.004052b7(0x49d034);\n                        uVar2 = fcn.00479a49(lpFileName, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n                        if (uVar2 == 0) break;\n                    }\n                }\n            }\n            iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar3, &lpFindFileData);\n            uVar1 = uVar2;\n        } while (iVar4 != 0);\n    }\ncode_r0x00479ba8:\n    (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n    fcn.0040b1ff();\n    uVar5 = fcn.0040b1ff();\n    return uVar5 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 938
    },
    "00479ec8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00479ec8(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    uint item;\n    uchar auStack12 [8];\n    \n    item = 0xffffffff;\n    uVar1 = *(arg_8h + 8);\n    if (uVar1 != 0) {\n        item = fcn.0040ce67();\n    }\n    if ((uVar1 < 2) || (iVar2 = fcn.0040ce67(),  iVar2 != 1)) {\n        iVar2 = 0;\n    }\n    iVar2 = fcn.004947a8(item, auStack12, iVar2);\n    if ((unaff_EDI < 1) && (iVar2 != 0)) {\n        fcn.0040b5c1(iVar2);\n        fcn.0041fd94(iVar2);\n    }\n    else {\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = unaff_EDI;\n    }\n    return 0;\n}\n",
        "token_count": 259
    },
    "00479f4e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n\nuint __cdecl fcn.00479f4e(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint Msg;\n    uint arg_8h_00;\n    int32_t iVar4;\n    int32_t iVar5;\n    ushort uStackY8228;\n    uint uStackY84;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    int32_t *var_14h;\n    uint *var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00441ef0();\n    iVar4 = arg_8h;\n    iVar5 = 0;\n    arg_8h = 0;\n    uVar1 = *(iVar4 + 8);\n    if (3 < uVar1) {\n        var_10h = 0x479f7e;\n        iVar5 = fcn.0040ce67();\n    }\n    uVar3 = arg_8h;\n    if (2 < uVar1) {\n        var_10h = 0x479f93;\n        uVar3 = fcn.0040ce67();\n    }\n    var_10h = &stack0xffffdfdc;\n    var_14h = &fcn.00479f4e::var_20h;\n    uStackY8228 = 0xfff;\n    var_18h = &fcn.00479f4e::arg_8h;\n    var_1ch = &fcn.00479f4e::var_1ch;\n    var_20h = &fcn.00479f4e::var_18h;\n    iVar4 = iVar5;\n    Msg = fcn.0040ce67();\n    arg_8h_00 = fcn.0040ce67();\n    iVar4 = fcn.00494eb5(arg_8h_00, Msg, uVar3, iVar4, var_20h, var_1ch, var_18h, var_14h, var_10h);\n    puVar2 = arg_ch;\n    if (iVar4 == 0) {\n        fcn.0040e8a0();\n        *puVar2 = 0;\n        puVar2[3] = 1;\n        iVar4 = *(*var_14h + 4);\n        iVar5 = *(iVar4 + 8 + var_14h);\n        if (*(iVar4 + 0xd + var_14h) != '\\0') {\n            iVar5 = *(iVar5 + 0x38);\n        }\n        *(iVar5 + 0x14) = 1;\n        iVar5 = *(iVar4 + 8 + var_14h);\n        if (*(iVar4 + 0xd + var_14h) != '\\0') {\n            iVar5 = *(iVar5 + 0x38);\n        }\n        *(iVar5 + 0x18) = 0;\n    }\n    else if (iVar5 == 1) {\n        fcn.0040b5c1(&stack0xffffdfdc);\n    }\n    else {\n        uVar3 = fcn.00407d93();\n        fcn.004083e0(uVar3, 1);\n        var_10h = var_18h;\n        uStackY84 = 0x47a061;\n        fcn.00408a30(uVar3, &fcn.00479f4e::var_10h, 1);\n        fcn.0040e8a0();\n        var_10h = var_1ch;\n        fcn.00408a30(uVar3, &fcn.00479f4e::var_10h, 1);\n        fcn.0040e8a0();\n        if (iVar5 == 2) {\n            var_10h = arg_8h;\n            fcn.00408a30(uVar3, &fcn.00479f4e::var_10h, 1);\n            fcn.0040e8a0();\n            var_10h = var_20h;\n            fcn.00408a30(uVar3, &fcn.00479f4e::var_10h, 1);\n            fcn.0040e8a0();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1072
    },
    "0047a0e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047a0e8(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint uVar5;\n    bool bVar6;\n    uint var_34h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    iVar2 = *(*(arg_8h + 4) + 4);\n    bVar6 = *(iVar2 + 0xc) != 0xe;\n    if (bVar6) {\n        fcn.00408e90();\n        puVar1 = *(iVar2 + 8);\n        var_4h = 2;\n        var_14h = *puVar1;\n        var_20h = puVar1[1];\n        var_1ch = puVar1[2];\n        var_18h = puVar1[3];\n        puVar1 = &var_24h;\n        *var_18h = *var_18h + 1;\n        var_24h = var_14h;\n    }\n    else {\n        puVar1 = fcn.00471037(&var_34h);\n        var_4h = 0;\n        var_14h = *puVar1;\n    }\n    uVar5 = 0;\n    var_10h = puVar1[1];\n    var_ch = puVar1[2];\n    var_8h = puVar1[3];\n    *var_8h = *var_8h + 1;\n    if (var_4h != 0) {\n        fcn.0040b1ff();\n    }\n    if (!bVar6) {\n        fcn.0040b1ff();\n    }\n    iVar2 = fcn.004025c1(&var_14h);\n    if (iVar2 == 0) {\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        iVar2 = *(*in_ECX + 4);\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 2;\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n        uVar5 = 0xffffffff;\n    }\n    else {\n        iVar2 = *(iVar2 + 0x14);\n        if (iVar2 < 5) {\n            puVar1 = &var_14h;\n            uVar4 = fcn.0040ce67();\n            uVar4 = fcn.00494f4c(uVar4, puVar1, iVar2);\n            fcn.0040e8a0();\n            *arg_ch = uVar4;\n        }\n        else {\n            iVar2 = *(*in_ECX + 4);\n            iVar3 = *(iVar2 + 8 + in_ECX);\n            if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x14) = 1;\n            iVar3 = *(iVar2 + 8 + in_ECX);\n            if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x18) = 0;\n            fcn.0040e8a0();\n            *arg_ch = 0;\n        }\n        arg_ch[3] = 1;\n    }\n    fcn.0040b1ff();\n    return uVar5;\n}\n",
        "token_count": 949
    },
    "0047a587": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047a587(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_20h;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (1 < *(arg_8h + 8)) {\n        uVar1 = fcn.00471dda();\n    }\n    arg_20h = fcn.0040ce67();\n    uVar1 = fcn.0041a07b(0, 0xffffffff, 0, 0xffffffff, uVar1, 0xffffffff, arg_20h);\n    fcn.0040e8a0();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 166
    },
    "0047a5dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047a5dc(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_1ch;\n    uint uVar1;\n    uint arg_20h;\n    \n    uVar1 = 0;\n    if (1 < *(arg_8h + 8)) {\n        uVar1 = fcn.00471dda();\n    }\n    arg_20h = 0xffffffff;\n    arg_1ch = fcn.0040ce67();\n    uVar1 = fcn.0041a07b(0, 0xffffffff, 0, 0xffffffff, uVar1, arg_1ch, arg_20h);\n    fcn.0040e8a0();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 185
    },
    "0047a81e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047a81e(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint uVar5;\n    bool bVar6;\n    uint var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = *(*(arg_8h + 4) + 4);\n    bVar6 = *(iVar2 + 0xc) != 0xe;\n    if (bVar6) {\n        fcn.00408e90();\n        puVar1 = *(iVar2 + 8);\n        var_4h = 2;\n        var_18h = *puVar1;\n        var_24h = puVar1[1];\n        var_20h = puVar1[2];\n        var_1ch = puVar1[3];\n        puVar1 = &var_28h;\n        *var_1ch = *var_1ch + 1;\n        var_8h = 0;\n        var_28h = var_18h;\n    }\n    else {\n        puVar1 = fcn.00471037(&var_38h);\n        var_8h = 1;\n        var_4h = 0;\n        var_18h = *puVar1;\n    }\n    var_8h = !bVar6;\n    uVar5 = 0;\n    iVar2 = puVar1[1];\n    var_10h = puVar1[2];\n    var_ch = puVar1[3];\n    *var_ch = *var_ch + 1;\n    var_14h = iVar2;\n    if (var_4h != 0) {\n        fcn.0040b1ff();\n    }\n    if (var_8h != 0) {\n        fcn.0040b1ff();\n    }\n    if (iVar2 != 0) {\n        iVar2 = fcn.004025c1(&var_18h);\n        if (iVar2 == 0) {\n            fcn.0040e8a0();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n            iVar2 = *(*in_ECX + 4);\n            iVar3 = *(iVar2 + 8 + in_ECX);\n            if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x14) = 1;\n            iVar3 = *(iVar2 + 8 + in_ECX);\n            if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x18) = 0;\n            uVar5 = 0xffffffff;\n            goto code_r0x0047a934;\n        }\n    }\n    puVar1 = &var_18h;\n    uVar4 = fcn.0040ce67();\n    uVar4 = fcn.00496105(uVar4, puVar1);\n    fcn.0040e8a0();\n    *arg_ch = uVar4;\n    arg_ch[3] = 1;\ncode_r0x0047a934:\n    fcn.0040b1ff();\n    return uVar5;\n}\n",
        "token_count": 830
    },
    "0047a9d5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047a9d5(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    \n    uVar1 = 0xffffffff;\n    if (1 < *(arg_8h + 8)) {\n        uVar1 = fcn.0040ce67();\n    }\n    arg_8h_00 = fcn.0040ce67();\n    uVar1 = fcn.004962d3(arg_8h_00, uVar1);\n    fcn.0040e8a0();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 157
    },
    "0047abcc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047abcc(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    char cVar3;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint *var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = arg_ch;\n    var_4h = 0;\n    arg_8h_00 = fcn.00407d93();\n    fcn.004083e0(arg_8h_00, 1);\n    arg_8h_01 = var_4h;\n    if (*(arg_8h + 8) != 0) {\n        arg_8h_01 = fcn.00471dda();\n    }\n    cVar3 = fcn.0049779a(arg_8h_01, &arg_ch, &arg_8h, &var_4h, &var_8h, &var_ch);\n    if (cVar3 == '\\0') {\n        fcn.0040e8a0();\n        *puVar2 = 0;\n        puVar2[3] = 1;\n        iVar1 = *(*in_ECX + 4);\n        iVar4 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 1;\n        iVar4 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x18) = 0;\n    }\n    else {\n        var_14h = 0;\n        var_1ch = arg_ch;\n        var_10h = 1;\n        fcn.00408a30(arg_8h_00, &var_1ch, 1);\n        fcn.0040e8a0();\n        var_1ch = arg_8h;\n        var_14h = 0;\n        var_10h = 1;\n        fcn.00408a30(arg_8h_00, &var_1ch, 1);\n        fcn.0040e8a0();\n        var_1ch = var_4h;\n        var_14h = 0;\n        var_10h = 1;\n        fcn.00408a30(arg_8h_00, &var_1ch, 1);\n        fcn.0040e8a0();\n        var_1ch = var_8h;\n        var_14h = 0;\n        var_10h = 1;\n        fcn.00408a30(arg_8h_00, &var_1ch, 1);\n        fcn.0040e8a0();\n        var_1ch = var_ch;\n        var_14h = 0;\n        var_10h = 1;\n        fcn.00408a30(arg_8h_00, &var_1ch, 1);\n        fcn.0040e8a0();\n    }\n    return 0;\n}\n",
        "token_count": 772
    },
    "0047ad2a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047ad2a(int32_t arg_8h, uint *arg_ch)\n\n{\n    bool bVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t iVar5;\n    uint auStack24 [2];\n    uint uStack16;\n    uint uStack12;\n    \n    if (*0x4d18bc != '\\x01') {\n        puVar2 = fcn.0049787a();\n        if ((*(arg_8h + 8) == 0) || (iVar3 = fcn.0040ce67(),  iVar3 != 1)) {\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n        }\n        if (puVar2 == NULL) {\n            if (bVar1) {\n                uVar4 = fcn.00407d93();\n                fcn.004083e0(uVar4, 1);\n                uStack12 = 1;\n                auStack24[0] = 0;\n                uStack16 = 0;\n                fcn.00408a30(uVar4, auStack24, 1);\n                fcn.0040e8a0();\n                uStack12 = 1;\n                auStack24[0] = 0;\n                uStack16 = 0;\n                fcn.00408a30(uVar4, auStack24, 1);\n                fcn.0040e8a0();\n                auStack24[0] = 0;\n                uStack16 = 0;\n                uStack12 = 1;\n                fcn.00408a30(uVar4, auStack24, 1);\n                fcn.0040e8a0();\n                auStack24[0] = 0;\n                uStack16 = 0;\n                uStack12 = 1;\n                fcn.00408a30(uVar4, auStack24, 1);\n                fcn.0040e8a0();\n                auStack24[0] = 0;\n                uStack16 = 0;\n                uStack12 = 1;\n                fcn.00408a30(uVar4, auStack24, 1);\n                fcn.0040e8a0();\n            }\n            else {\n                fcn.0040e8a0();\n                arg_ch[3] = 1;\n                *arg_ch = 0;\n            }\n        }\n        else {\n            if (bVar1) {\n                uVar4 = fcn.00407d93();\n                fcn.004083e0(uVar4, 1);\n                auStack24[0] = *puVar2;\n                uStack16 = 0;\n                uStack12 = 1;\n                fcn.00408a30(uVar4, auStack24, 1);\n                fcn.0040e8a0();\n                uStack16 = 0;\n                auStack24[0] = puVar2[5];\n                uStack12 = 7;\n                fcn.00408a30(uVar4, auStack24, 1);\n                fcn.0040e8a0();\n                uStack16 = 0;\n                auStack24[0] = puVar2[6];\n                uStack12 = 7;\n                fcn.00408a30(uVar4, auStack24, 1);\n                fcn.0040e8a0();\n                uStack16 = 0;\n                auStack24[0] = puVar2[7];\n                uStack12 = 1;\n                fcn.00408a30(uVar4, auStack24, 1);\n                fcn.0040e8a0();\n                uStack16 = 0;\n                auStack24[0] = puVar2[8];\n                uStack12 = 1;\n                fcn.00408a30(uVar4, auStack24, 1);\n                fcn.0040e8a0();\n                uVar4 = extraout_ECX;\n            }\n            else {\n                uVar4 = *puVar2;\n                fcn.0040e8a0();\n                arg_ch[3] = 1;\n                *arg_ch = uVar4;\n                uVar4 = extraout_ECX_00;\n            }\n            fcn.0047328b(uVar4);\n        }\n        *(in_ECX + 0x101) = 1;\n        return 0;\n    }\n    iVar3 = *(*in_ECX + 4);\n    iVar5 = *(iVar3 + 8 + in_ECX);\n    if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n        iVar5 = *(iVar5 + 0x38);\n    }\n    *(iVar5 + 0x14) = 1;\n    iVar5 = *(iVar3 + 8 + in_ECX);\n    if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n        iVar5 = *(iVar5 + 0x38);\n    }\n    *(iVar5 + 0x18) = 0;\n    fcn.0040e8a0();\n    arg_ch[3] = 1;\n    *arg_ch = 0;\n    return 0;\n}\n",
        "token_count": 1176
    },
    "0047afe0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047afe0(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint arg_8h_00;\n    uint arg_10h;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint *var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = arg_ch;\n    var_4h = 0;\n    arg_8h_00 = fcn.00407d93();\n    fcn.004083e0(arg_8h_00, 1);\n    arg_10h = var_4h;\n    if (*(arg_8h + 8) != 0) {\n        arg_10h = fcn.00471dda();\n    }\n    iVar2 = fcn.004978c7(&arg_ch, &arg_8h, arg_10h);\n    if (iVar2 == 0) {\n        iVar2 = *(*in_ECX + 4);\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 1;\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n        fcn.0040e8a0();\n        *puVar1 = 0;\n        puVar1[3] = 1;\n    }\n    else {\n        var_ch = 0;\n        var_14h = arg_ch;\n        var_8h = 1;\n        fcn.00408a30(arg_8h_00, &var_14h, 1);\n        fcn.0040e8a0();\n        var_ch = 0;\n        var_14h = arg_8h;\n        var_8h = 1;\n        fcn.00408a30(arg_8h_00, &var_14h, 1);\n        fcn.0040e8a0();\n    }\n    return 0;\n}\n",
        "token_count": 532
    },
    "0047b0c1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047b0c1(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint uVar5;\n    bool bVar6;\n    uint var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = *(*(arg_8h + 4) + 4);\n    bVar6 = *(iVar2 + 0xc) != 0xe;\n    if (bVar6) {\n        fcn.00408e90();\n        puVar1 = *(iVar2 + 8);\n        var_4h = 2;\n        var_18h = *puVar1;\n        var_24h = puVar1[1];\n        var_20h = puVar1[2];\n        var_1ch = puVar1[3];\n        puVar1 = &var_28h;\n        *var_1ch = *var_1ch + 1;\n        var_8h = 0;\n        var_28h = var_18h;\n    }\n    else {\n        puVar1 = fcn.00471037(&var_38h);\n        var_8h = 1;\n        var_4h = 0;\n        var_18h = *puVar1;\n    }\n    var_8h = !bVar6;\n    uVar5 = 0;\n    iVar2 = puVar1[1];\n    var_10h = puVar1[2];\n    var_ch = puVar1[3];\n    *var_ch = *var_ch + 1;\n    var_14h = iVar2;\n    if (var_4h != 0) {\n        fcn.0040b1ff();\n    }\n    if (var_8h != 0) {\n        fcn.0040b1ff();\n    }\n    if (iVar2 != 0) {\n        iVar2 = fcn.004025c1(&var_18h);\n        if (iVar2 == 0) {\n            fcn.0040e8a0();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n            iVar2 = *(*in_ECX + 4);\n            iVar3 = *(iVar2 + 8 + in_ECX);\n            if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x14) = 1;\n            iVar3 = *(iVar2 + 8 + in_ECX);\n            if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x18) = 0;\n            uVar5 = 0xffffffff;\n            goto code_r0x0047b1d7;\n        }\n    }\n    puVar1 = &var_18h;\n    uVar4 = fcn.0040ce67();\n    uVar4 = fcn.00497927(uVar4, puVar1);\n    fcn.0040e8a0();\n    *arg_ch = uVar4;\n    arg_ch[3] = 1;\ncode_r0x0047b1d7:\n    fcn.0040b1ff();\n    return uVar5;\n}\n",
        "token_count": 835
    },
    "0047b1e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047b1e8(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uchar *arg_1ch;\n    uint8_t *paccel;\n    uint unaff_ESI;\n    int32_t *arg_8h_00;\n    uint unaff_EDI;\n    uint8_t *puVar5;\n    uchar *arg_14h;\n    uchar *arg_18h;\n    uint uStack48;\n    int32_t *piStack44;\n    uint uStack40;\n    int32_t *piStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    int32_t *piStack20;\n    \n    uStack40 = 0;\n    if (1 < *(arg_8h + 8)) {\n        uStack40 = fcn.00471dda();\n    }\n    if ((**(arg_8h + 4))[3] == 0x5) {\n        arg_8h_00 = ***(arg_8h + 4);\n        piStack36 = arg_8h_00;\n        if ((*(*arg_8h_00 + 0x10c) == 2) && (iVar4 = fcn.0041e703(2),  iVar4 == 2)) {\n            arg_1ch = fcn.0041e703(1);\n            paccel = fcn.0041fd8b(-(ZEXT48(arg_1ch) * 6 >> 0x20 != 0) | ZEXT48(arg_1ch) * 6);\n            puVar5 = paccel;\n            if (0 < arg_1ch) {\n                do {\n                    iVar4 = fcn.00411df0(arg_8h_00, 1, 2);\n                    fcn.00408e90();\n                    puVar1 = *(iVar4 + 8);\n                    uStack32 = *puVar1;\n                    uStack28 = puVar1[1];\n                    uStack24 = puVar1[2];\n                    piStack20 = puVar1[3];\n                    *piStack20 = *piStack20 + 1;\n                    fcn.00411df0(piStack44, 1, 2);\n                    piStack36 = fcn.0040ce67();\n                    arg_1ch = &stack0xffffffc7;\n                    arg_18h = &stack0xffffffc6;\n                    arg_14h = &stack0xffffffc5;\n                    cVar2 = fcn.004028c0(&uStack32, &uStack40, &stack0xffffffc4, arg_14h, arg_18h, arg_1ch);\n                    if (cVar2 == '\\0') {\n                        fcn.0041fd94(paccel);\n                        fcn.0040e8a0();\n                        *arg_ch = 0;\n                        arg_ch[3] = 1;\n                        fcn.0040b1ff();\n                        return 0;\n                    }\n                    uVar3 = 1;\n                    *puVar5 = 1;\n                    if (arg_14h != '\\0') {\n                        uVar3 = 5;\n                        *puVar5 = 5;\n                    }\n                    if (arg_14h >> 8 != '\\0') {\n                        uVar3 = uVar3 | 8;\n                        *puVar5 = uVar3;\n                    }\n                    if (arg_14h >> 0x10 != '\\0') {\n                        *puVar5 = uVar3 | 0x10;\n                    }\n                    *(puVar5 + 2) = unaff_EDI;\n                    *(puVar5 + 4) = unaff_ESI;\n                    fcn.0040b1ff();\n                    arg_8h_00 = piStack44;\n                    puVar5 = puVar5 + 6;\n                } while (arg_18h + 1 < arg_1ch);\n            }\n            fcn.004979bb(paccel, arg_1ch, uStack48);\n            fcn.0041fd94(paccel);\n        }\n        else {\n            fcn.0040e8a0();\n            arg_ch[3] = 1;\n            *arg_ch = 0;\n        }\n    }\n    else {\n        fcn.004979bb(0, 0, uStack40);\n    }\n    return 0;\n}\n",
        "token_count": 980
    },
    "0047b445": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047b445(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_10h;\n    uint arg_ch;\n    uint var_4h;\n    \n    iVar2 = arg_8h;\n    arg_ch = 0;\n    arg_8h = 2;\n    uVar1 = *(iVar2 + 8);\n    if (uVar1 != 0) {\n        arg_8h = fcn.0040ce67();\n    }\n    if (1 < uVar1) {\n        arg_ch = fcn.0040ce67();\n    }\n    if (uVar1 < 3) {\n        arg_10h = 0;\n    }\n    else {\n        arg_10h = fcn.00471dda();\n    }\n    fcn.00497aa3(arg_8h, arg_ch, arg_10h);\n    return 0;\n}\n",
        "token_count": 210
    },
    "0047b4a9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047b4a9(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = arg_8h;\n    uVar1 = *(arg_8h + 8);\n    fcn.0040c25d();\n    var_8h = 0xffffffff;\n    var_4h = 2;\n    arg_8h = 0;\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    if (5 < uVar1) {\n        var_4h = fcn.0040ce67();\n    }\n    if (4 < uVar1) {\n        if (*(*(*(iVar2 + 4) + 0x10) + 0xc) != 7) goto code_r0x0047b5a0;\n        arg_8h = fcn.00471dda();\n    }\n    if (3 < uVar1) {\n        iVar2 = *(*(iVar2 + 4) + 0xc);\n        if (*(iVar2 + 0xc) != 4) goto code_r0x0047b5a0;\n        fcn.00408e90();\n        if (&var_18h != *(iVar2 + 8)) {\n            fcn.0040c1c3(*(iVar2 + 8));\n        }\n    }\n    if (2 < uVar1) {\n        var_8h = fcn.0040ce67();\n    }\n    if (uVar1 < 2) {\n        uVar3 = 0xffffffff;\n    }\n    else {\n        uVar3 = fcn.0040ce67();\n    }\n    fcn.0040cfb5();\n    uVar3 = fcn.00497af6(uVar3, &var_18h, var_8h, var_4h, arg_8h);\n    fcn.0040e8a0();\n    arg_ch[3] = 1;\n    *arg_ch = uVar3;\ncode_r0x0047b5a0:\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 518
    },
    "0047b5b1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047b5b1(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    if (1 < *(arg_8h + 8)) {\n        uVar2 = fcn.00471dda();\n    }\n    iVar1 = **(arg_8h + 4);\n    fcn.00408e90();\n    uVar2 = fcn.0041a07b(**(iVar1 + 8), 0xffffffff, 0, 0xffffffff, uVar2, 0xffffffff, 0xffffffff);\n    fcn.0040e8a0();\n    *arg_ch = uVar2;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 181
    },
    "0047b60b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047b60b(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint arg_14h;\n    \n    uVar3 = 0;\n    arg_14h = 0xffffffff;\n    uVar2 = *(arg_8h + 8);\n    if (2 < uVar2) {\n        uVar3 = fcn.00471dda();\n        uVar2 = *(arg_8h + 8);\n    }\n    if (1 < uVar2) {\n        arg_14h = fcn.0040ce67();\n    }\n    iVar1 = **(arg_8h + 4);\n    fcn.00408e90();\n    uVar3 = fcn.0041a07b(0, 0xffffffff, **(iVar1 + 8), arg_14h, uVar3, 0xffffffff, 0xffffffff);\n    fcn.0040e8a0();\n    *arg_ch = uVar3;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 255
    },
    "0047b681": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047b681(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint uVar2;\n    uint dwNewLong;\n    \n    uVar2 = 0;\n    dwNewLong = 0xffffffff;\n    uVar1 = *(arg_8h + 8);\n    if (2 < uVar1) {\n        uVar2 = fcn.00471dda();\n        uVar1 = *(arg_8h + 8);\n    }\n    if (1 < uVar1) {\n        dwNewLong = fcn.0040ce67();\n    }\n    arg_8h_00 = fcn.0040ce67();\n    uVar2 = fcn.00497b91(arg_8h_00, dwNewLong, uVar2);\n    fcn.0040e8a0();\n    *arg_ch = uVar2;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 228
    },
    "0047b6e9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047b6e9(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = 0;\n    if (*(arg_8h + 8) != 0) {\n        arg_8h_00 = fcn.00471dda();\n    }\n    if (*0x4d18d0 == 0) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        fcn.0041ea74(arg_8h_00);\n    }\n    return 0;\n}\n",
        "token_count": 153
    },
    "0047b734": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047b734(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    \n    uVar1 = 0xffffffff;\n    if (1 < *(arg_8h + 8)) {\n        uVar1 = fcn.0040ce67();\n    }\n    arg_8h_00 = fcn.00471dda();\n    uVar1 = fcn.00497c6e(arg_8h_00, uVar1);\n    fcn.0040e8a0();\n    *arg_ch = uVar1;\n    arg_ch[3] = 7;\n    return 0;\n}\n",
        "token_count": 155
    },
    "0047b93c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047b93c(uint arg_8h, uint *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    int32_t noname_4;\n    int32_t unaff_EBX;\n    uint uVar4;\n    int32_t iVar5;\n    char cVar6;\n    int32_t aiStack60 [2];\n    uint uStack52;\n    uint *puStack48;\n    int32_t iStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint auStack28 [2];\n    uint uStack20;\n    uint uStack16;\n    \n    iVar3 = *0x4d152c;\n    aiStack60[0] = *0x4d152c;\n    if ((*0x4d152c != 1) && (*0x4d1367 == '\\0')) {\n        uVar4 = 0;\n        *0x4d152c = 0;\n        iVar2 = fcn.004025c1(arg_8h);\n        if (*(iVar2 + 0x14) < 5) {\n            auStack28[0] = 0;\n            uStack20 = 0;\n            uStack16 = 1;\n            aiStack60[0] = 0;\n            uStack52 = 0;\n            puStack48 = 0x1;\n            iStack44 = 0x49d100;\n            uStack40 = 0;\n            uStack36 = 0;\n            uStack32 = 0;\n            noname_4 = iVar2;\n            if (0 < *(iVar2 + 0x14)) {\n                iVar5 = 0;\n                do {\n                    if (iVar5 == 0) {\n                        fcn.0040e8a0();\n                        aiStack60[0] = arg_10h;\ncode_r0x0047ba11:\n                        puStack48 = 0x7;\n                    }\n                    else {\n                        if (iVar5 != 1) {\n                            if (iVar5 == 2) {\n                                fcn.0040e8a0();\n                                aiStack60[0] = arg_18h;\n                            }\n                            else {\n                                if (iVar5 != 3) goto code_r0x0047ba1d;\n                                fcn.0040e8a0();\n                                aiStack60[0] = arg_1ch;\n                            }\n                            goto code_r0x0047ba11;\n                        }\n                        fcn.0040e8a0();\n                        puStack48 = 0x1;\n                        aiStack60[0] = arg_14h;\n                    }\ncode_r0x0047ba1d:\n                    fcn.00466fef(aiStack60);\n                    iVar5 = iVar5 + 1;\n                    noname_4 = extraout_ECX;\n                    iVar3 = iVar2;\n                } while (iVar5 < *(unaff_EBX + 0x14));\n            }\n            cVar6 = '\\0';\n            cVar1 = fcn.0047e315(arg_8h, &iStack44, auStack28, 0, noname_4, &stack0xffffffbb);\n            if ((cVar1 != '\\0') && (*0x4d152c != 1)) {\n                *0x4d152c = iVar3;\n                if (iStack44 == 4) {\n                    fcn.00408e90();\n                    iVar3 = fcn.004249b8(*puStack48, L\"GUI_RUNDEFMSG\");\n                    if (iVar3 == 0) {\n                        uVar4 = 2;\n                        goto code_r0x0047ba99;\n                    }\n                }\n                if (cVar6 == '\\0') {\n                    fcn.00466f23();\n                    fcn.0041fd94(iVar2);\n                    fcn.0040e8a0();\n                    fcn.0040e8a0();\n                    return 0;\n                }\n                uVar4 = fcn.0040ce67();\n                *arg_ch = uVar4;\n                uVar4 = 1;\n            }\ncode_r0x0047ba99:\n            fcn.00466f23();\n            fcn.0041fd94(iVar2);\n            fcn.0040e8a0();\n            fcn.0040e8a0();\n            return uVar4;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1015
    },
    "0047c061": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0047c061(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *in_ECX;\n    \n    if (arg_ch == '\\0') {\n        arg_ch = in_ECX[0x15];\n        uVar1 = 0;\n        iVar2 = (*_sym.imp.WININET.dll_InternetConnectW)\n                          (in_ECX[1], *(arg_8h + 0x10), *(arg_8h + 0x78), *(arg_8h + 0x20), *(arg_8h + 0x30), \n                           *(arg_8h + 0x70), 0, 0);\n        *in_ECX = iVar2;\n        if (iVar2 == 0) {\n            in_ECX[6] = 0x15;\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            in_ECX[7] = iVar2;\n            uVar1 = in_ECX[0x35];\n            if (uVar1 != 0) {\n                uVar1 = (*_sym.imp.KERNEL32.dll_SetEvent)(uVar1);\n            }\n            uVar1 = uVar1 & 0xffffff00;\n        }\n        else {\n            iVar2 = (*_sym.imp.WININET.dll_FtpOpenFileW)(iVar2, *(arg_8h + 0x60), 0x80000000, arg_ch, 0);\n            if (iVar2 == 0) {\n                in_ECX[6] = 0x16;\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                in_ECX[7] = iVar3;\n                uVar4 = in_ECX[0x35];\n                if (uVar4 != 0) {\n                    uVar4 = (*_sym.imp.KERNEL32.dll_SetEvent)(uVar4);\n                }\n            }\n            else {\n                iVar3 = (*_sym.imp.WININET.dll_FtpGetFileSize)(iVar2, &arg_ch);\n                in_ECX[4] = iVar3;\n                in_ECX[5] = arg_ch;\n                if (arg_10h == '\\0') {\n                    in_ECX[6] = 0;\n                    uVar4 = in_ECX[0x35];\n                    if (uVar4 != 0) {\n                        uVar4 = (*_sym.imp.KERNEL32.dll_SetEvent)(uVar4);\n                    }\n                    uVar1 = 1;\n                }\n                else {\n                    if (*(in_ECX + 0xc) == '\\0') {\n                        uVar4 = fcn.0047cd62(iVar2);\n                    }\n                    else {\n                        uVar4 = fcn.0047ce38(iVar2);\n                    }\n                    uVar1 = uVar4 & 0xff;\n                }\n            }\n            if (iVar2 != 0) {\n                uVar4 = (*_sym.imp.WININET.dll_InternetCloseHandle)(iVar2);\n            }\n            uVar1 = uVar4 & 0xffffff00 | uVar1;\n        }\n    }\n    else {\n        uVar1 = fcn.0047c171(arg_8h, arg_10h);\n    }\n    return uVar1;\n}\n",
        "token_count": 749
    },
    "0047c282": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0047c282(uint arg_8h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    uint var_7ch;\n    int32_t var_ch;\n    \n    fcn.0047be2b();\n    cVar1 = fcn.0047d012(*(in_ECX + 0x20), &var_7ch);\n    if (cVar1 == '\\0') {\n        *(in_ECX + 0x18) = 1;\n    }\n    else if ((var_ch == 3) || (var_ch == 1)) {\n        cVar1 = fcn.0047cc3c(var_ch);\n        if (cVar1 == '\\0') {\n            *(in_ECX + 0x18) = 3;\n        }\n        else {\n            if (var_ch == 1) {\n                iVar5 = in_ECX + 0x8c;\n                uVar4 = fcn.0047ccf5(iVar5);\n                uVar2 = fcn.0047c061(&var_7ch, uVar4 & 0xff, iVar5);\n                goto code_r0x0047c344;\n            }\n            if (var_ch == 3) {\n                iVar5 = in_ECX + 0x58;\n                uVar4 = fcn.0047ccf5(iVar5);\n                uVar2 = fcn.0047c394(&var_7ch, uVar4 & 0xff, iVar5);\n                goto code_r0x0047c344;\n            }\n            *(in_ECX + 0x18) = 4;\n        }\n    }\n    else {\n        *(in_ECX + 0x18) = 2;\n    }\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    *(in_ECX + 0x1c) = uVar3;\n    if (*(in_ECX + 0xd4) != 0) {\n        (*_sym.imp.KERNEL32.dll_SetEvent)(*(in_ECX + 0xd4));\n    }\n    uVar2 = 0;\ncode_r0x0047c344:\n    uVar4 = fcn.0047beea();\n    return uVar4 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 534
    },
    "0047c53c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047c53c(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_ECX;\n    \n    fcn.00407c5d(in_ECX + 0x78);\n    iVar1 = **(arg_8h + 4);\n    cVar2 = fcn.00401fb9(0x29);\n    if ((cVar2 == '\\0') && (fcn.00408e90(),  *(*(iVar1 + 8) + 4) != 0)) {\n        iVar1 = **(arg_8h + 4);\n        fcn.00408e90();\n        if (in_ECX + 0x78 == *(iVar1 + 8)) {\n            return 0;\n        }\n        fcn.0040c1c3(*(iVar1 + 8));\n        return 0;\n    }\n    fcn.004084e7(0x49cdec);\n    return 0;\n}\n",
        "token_count": 228
    },
    "0047c619": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047c619(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    uint uVar7;\n    char cVar8;\n    uint arg_8h_00;\n    int32_t *in_stack_fffffe80;\n    uint in_stack_fffffe84;\n    uint in_stack_fffffe88;\n    uint in_stack_fffffe8c;\n    uint in_stack_fffffe90;\n    uint in_stack_fffffe94;\n    uint in_stack_fffffe98;\n    uint in_stack_fffffe9c;\n    uint in_stack_fffffea0;\n    uint in_stack_fffffea4;\n    uint in_stack_fffffea8;\n    uint in_stack_fffffeac;\n    uint in_stack_fffffeb0;\n    uint in_stack_fffffeb4;\n    uint in_stack_fffffeb8;\n    uint in_stack_fffffebc;\n    uint in_stack_fffffec0;\n    uint in_stack_fffffec4;\n    uint in_stack_fffffec8;\n    uint in_stack_fffffecc;\n    uint in_stack_fffffed0;\n    uint in_stack_fffffed4;\n    uint in_stack_fffffed8;\n    uint in_stack_fffffedc;\n    uint in_stack_fffffee0;\n    uint in_stack_fffffee4;\n    uint uStack252;\n    uint32_t uStack248;\n    \n    uVar7 = 0;\n    uVar3 = *(arg_8h + 8);\n    if (2 < uVar3) {\n        fcn.0040ce67();\n        uVar3 = *(arg_8h + 8);\n    }\n    iVar4 = *(arg_8h + 4);\n    if (uVar3 < 4) {\n        uStack248 = uStack248 & 0xffffff00;\n    }\n    else {\n        uVar2 = fcn.0041daf6();\n        uStack248 = uStack248 & 0xffffff00 | uVar2;\n    }\n    iVar4 = *(iVar4 + 4);\n    fcn.00408e90();\n    uVar5 = **(iVar4 + 8);\n    iVar4 = **(arg_8h + 4);\n    fcn.00408e90();\n    arg_8h_00 = **(iVar4 + 8);\n    iVar4 = in_ECX + 0x10;\n    fcn.0047bd61(iVar4);\n    uVar5 = fcn.0047bc5c(arg_8h_00, uVar5, uStack248, uStack252, iVar4, in_stack_fffffe80, in_stack_fffffe84, \n                         in_stack_fffffe88, in_stack_fffffe8c, in_stack_fffffe90, in_stack_fffffe94, in_stack_fffffe98, \n                         in_stack_fffffe9c, in_stack_fffffea0, in_stack_fffffea4, in_stack_fffffea8, in_stack_fffffeac, \n                         in_stack_fffffeb0, in_stack_fffffeb4, in_stack_fffffeb8, in_stack_fffffebc, in_stack_fffffec0, \n                         in_stack_fffffec4, in_stack_fffffec8, in_stack_fffffecc, in_stack_fffffed0, in_stack_fffffed4, \n                         in_stack_fffffed8, in_stack_fffffedc, in_stack_fffffee0, in_stack_fffffee4);\n    cVar8 = arg_8h_00;\n    fcn.0047d28f(uVar5);\n    fcn.0047be67();\n    piVar1 = in_stack_fffffe80[2];\n    fcn.0047d126(1);\n    iVar4 = *(*in_stack_fffffe80 + 4);\n    iVar6 = *(iVar4 + 8 + in_stack_fffffe80);\n    if (*(iVar4 + 0xd + in_stack_fffffe80) != '\\0') {\n        iVar6 = *(iVar6 + 0x38);\n    }\n    *(iVar6 + 0x14) = *(*piVar1 + 0x18);\n    iVar6 = *(iVar4 + 8 + in_stack_fffffe80);\n    if (*(iVar4 + 0xd + in_stack_fffffe80) != '\\0') {\n        iVar6 = *(iVar6 + 0x38);\n    }\n    *(iVar6 + 0x18) = 0;\n    fcn.00407cb4(*(*piVar1 + 0x1c), 0);\n    iVar4 = *piVar1;\n    if (cVar8 == '\\0') {\n        uVar5 = *(iVar4 + 8);\n        uVar7 = *(iVar4 + 0xc);\n    }\n    else {\n        uVar5 = *(iVar4 + 0xd8);\n    }\n    fcn.0040e8a0();\n    arg_ch[3] = 2;\n    *arg_ch = uVar5;\n    arg_ch[1] = uVar7;\n    if (cVar8 == '\\0') {\n        fcn.0047d264();\n    }\n    return 0;\n}\n",
        "token_count": 1189
    },
    "0047c76f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047c76f(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uchar *puVar7;\n    int32_t *in_ECX;\n    int32_t iVar8;\n    int32_t *piVar9;\n    \n    if (*(arg_8h + 8) == 0) {\n        iVar8 = 0;\n        for (iVar5 = in_ECX[1]; iVar5 != 0; iVar5 = *(iVar5 + 4)) {\n            cVar3 = fcn.0047d205(0);\n            if (cVar3 == '\\0') {\n                iVar8 = iVar8 + 1;\n            }\n        }\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = iVar8;\n        return 0;\n    }\n    iVar5 = fcn.0040ce67();\n    piVar9 = in_ECX[1];\ncode_r0x0047c7c7:\n    if (piVar9 == NULL) {\ncode_r0x0047ca08:\n        iVar5 = *(*in_ECX + 4);\n        iVar8 = *(iVar5 + 8 + in_ECX);\n        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n            iVar8 = *(iVar8 + 0x38);\n        }\n        *(iVar8 + 0x14) = 1;\n        iVar8 = *(iVar5 + 8 + in_ECX);\n        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n            iVar8 = *(iVar8 + 0x38);\n        }\n        *(iVar8 + 0x18) = 0;\ncode_r0x0047ca34:\n        fcn.0040b5c1(0x49d0d0);\n        return 0;\n    }\n    if (*(*piVar9 + 0xd8) != iVar5) {\n        piVar9 = piVar9[1];\n        goto code_r0x0047c7c7;\n    }\n    if (piVar9 == NULL) goto code_r0x0047ca08;\n    if (*(arg_8h + 8) < 2) {\n        iVar5 = -1;\n    }\n    else {\n        iVar5 = fcn.0040ce67();\n    }\n    if (iVar5 == -1) {\n        fcn.00407d93();\n        if (arg_ch[3] == 5) {\n            iVar8 = *arg_ch;\n        }\n        else {\n            iVar8 = 0;\n        }\n        fcn.004083e0(iVar8, 1);\n        uVar1 = *(*piVar9 + 8);\n        uVar2 = *(*piVar9 + 0xc);\n        puVar6 = fcn.00411df0(iVar8, 2, 1);\n        fcn.0040e8a0();\n        puVar6[3] = 2;\n        *puVar6 = uVar1;\n        puVar6[1] = uVar2;\n        uVar1 = *(*piVar9 + 0x10);\n        uVar2 = *(*piVar9 + 0x14);\n        puVar6 = fcn.00411df0(iVar8, 2, 1);\n        fcn.0040e8a0();\n        puVar6[3] = 2;\n        *puVar6 = uVar1;\n        puVar6[1] = uVar2;\n        uVar4 = fcn.0047d205(0);\n        puVar7 = fcn.00411df0(iVar8, 2, 1);\n        fcn.0040e8a0();\n        *(puVar7 + 0xc) = 9;\n        *puVar7 = uVar4;\n        uVar4 = fcn.0047ccd3();\n        puVar7 = fcn.00411df0(iVar8, 2, 1);\n        fcn.0040e8a0();\n        *(puVar7 + 0xc) = 9;\n        *puVar7 = uVar4;\n        uVar1 = *(*piVar9 + 0x18);\n        puVar6 = fcn.00411df0(iVar8, 2, 1);\n        fcn.0040e8a0();\n        *puVar6 = uVar1;\n        puVar6[3] = 1;\n        iVar5 = *(*piVar9 + 0x1c);\n        arg_ch = fcn.00411df0(iVar8, 2, 1);\ncode_r0x0047c997:\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = iVar5;\n        return 0;\n    }\n    if (iVar5 == 0) {\n        iVar5 = *(*piVar9 + 8);\n        iVar8 = *(*piVar9 + 0xc);\n    }\n    else {\n        if (iVar5 != 1) {\n            if (iVar5 == 2) {\n                uVar4 = fcn.0047d205(0);\n            }\n            else {\n                if (iVar5 != 3) {\n                    if (iVar5 == 4) {\n                        iVar5 = *(*piVar9 + 0x18);\n                        goto code_r0x0047c997;\n                    }\n                    if (iVar5 != 5) {\n                        iVar5 = *(*in_ECX + 4);\n                        iVar8 = *(iVar5 + 8 + in_ECX);\n                        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                            iVar8 = *(iVar8 + 0x38);\n                        }\n                        *(iVar8 + 0x14) = 2;\n                        iVar8 = *(iVar5 + 8 + in_ECX);\n                        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                            iVar8 = *(iVar8 + 0x38);\n                        }\n                        *(iVar8 + 0x18) = 0;\n                        goto code_r0x0047ca34;\n                    }\n                    iVar5 = *(*piVar9 + 0x1c);\n                    goto code_r0x0047c997;\n                }\n                uVar4 = fcn.0047ccd3();\n            }\n            fcn.0040e8a0();\n            arg_ch[3] = 9;\n            *arg_ch = uVar4;\n            return 0;\n        }\n        iVar5 = *(*piVar9 + 0x10);\n        iVar8 = *(*piVar9 + 0x14);\n    }\n    fcn.0040e8a0();\n    arg_ch[3] = 2;\n    *arg_ch = iVar5;\n    arg_ch[1] = iVar8;\n    return 0;\n}\n",
        "token_count": 1551
    },
    "0047ca4a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047ca4a(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t *arg_10h;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint in_stack_fffffe90;\n    uint in_stack_fffffe94;\n    uint in_stack_fffffe98;\n    uint in_stack_fffffe9c;\n    uint in_stack_fffffea0;\n    uint in_stack_fffffea4;\n    uint in_stack_fffffea8;\n    uint in_stack_fffffeac;\n    uint in_stack_fffffeb0;\n    uint in_stack_fffffeb4;\n    uint in_stack_fffffeb8;\n    uint in_stack_fffffebc;\n    uint in_stack_fffffec0;\n    uint in_stack_fffffec4;\n    uint in_stack_fffffec8;\n    uint in_stack_fffffecc;\n    uint in_stack_fffffed0;\n    uint in_stack_fffffed4;\n    uint in_stack_fffffed8;\n    uint in_stack_fffffedc;\n    uint in_stack_fffffee0;\n    uint in_stack_fffffee4;\n    uint in_stack_fffffee8;\n    uint in_stack_fffffeec;\n    uint in_stack_fffffef0;\n    uint in_stack_fffffef4;\n    \n    if (*(arg_8h + 8) < 2) {\n        arg_10h = NULL;\n    }\n    else {\n        arg_10h = fcn.0040ce67();\n    }\n    iVar2 = **(arg_8h + 4);\n    fcn.00408e90();\n    arg_8h_00 = **(iVar2 + 8);\n    iVar2 = in_ECX + 0x10;\n    fcn.0047bd61(iVar2);\n    fcn.0047bc5c(arg_8h_00, 0x49d0d0, arg_10h, 0, iVar2, in_stack_fffffe90, in_stack_fffffe94, in_stack_fffffe98, \n                 in_stack_fffffe9c, in_stack_fffffea0, in_stack_fffffea4, in_stack_fffffea8, in_stack_fffffeac, \n                 in_stack_fffffeb0, in_stack_fffffeb4, in_stack_fffffeb8, in_stack_fffffebc, in_stack_fffffec0, \n                 in_stack_fffffec4, in_stack_fffffec8, in_stack_fffffecc, in_stack_fffffed0, in_stack_fffffed4, \n                 in_stack_fffffed8, in_stack_fffffedc, in_stack_fffffee0, in_stack_fffffee4, in_stack_fffffee8, \n                 in_stack_fffffeec, in_stack_fffffef0, in_stack_fffffef4);\n    fcn.0047d126(0);\n    fcn.0040e8a0();\n    arg_ch[3] = 2;\n    *arg_ch = in_stack_fffffe98;\n    arg_ch[1] = in_stack_fffffe9c;\n    iVar2 = *(*arg_10h + 4);\n    iVar1 = *(iVar2 + 8 + arg_10h);\n    if (*(iVar2 + 0xd + arg_10h) != '\\0') {\n        iVar1 = *(iVar1 + 0x38);\n    }\n    *(iVar1 + 0x14) = in_stack_fffffea0;\n    iVar1 = *(iVar2 + 8 + arg_10h);\n    if (*(iVar2 + 0xd + arg_10h) != '\\0') {\n        iVar1 = *(iVar1 + 0x38);\n    }\n    *(iVar1 + 0x18) = 0;\n    fcn.00407cb4(in_stack_fffffea4, 0);\n    fcn.0047be67();\n    return 0;\n}\n",
        "token_count": 880
    },
    "0047cb2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047cb2c(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint extraout_ECX;\n    uchar *arg_8h_01;\n    int32_t *arg_8h_02;\n    uint in_stack_fffffe80;\n    uint in_stack_fffffe84;\n    uint in_stack_fffffe88;\n    uint in_stack_fffffe8c;\n    uint in_stack_fffffe90;\n    uint in_stack_fffffe94;\n    uint in_stack_fffffe98;\n    uint in_stack_fffffe9c;\n    int32_t in_stack_fffffea0;\n    uint in_stack_fffffea4;\n    uint in_stack_fffffea8;\n    uint in_stack_fffffeac;\n    uint in_stack_fffffeb0;\n    uint in_stack_fffffeb4;\n    uint in_stack_fffffeb8;\n    uint in_stack_fffffebc;\n    uint in_stack_fffffec0;\n    uint in_stack_fffffec4;\n    uint in_stack_fffffec8;\n    uint in_stack_fffffecc;\n    uint in_stack_fffffed0;\n    uint in_stack_fffffed4;\n    uint in_stack_fffffed8;\n    uint in_stack_fffffedc;\n    uint in_stack_fffffee0;\n    uint in_stack_fffffee4;\n    \n    if (*(arg_8h + 8) < 2) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.0040ce67();\n    }\n    iVar1 = **(arg_8h + 4);\n    fcn.00408e90();\n    arg_8h_00 = **(iVar1 + 8);\n    arg_8h_02 = in_ECX + 4;\n    fcn.0047bd61(arg_8h_02);\n    fcn.0047bc5c(arg_8h_00, 0x49d0d0, uVar2, 0, arg_8h_02, in_stack_fffffe80, in_stack_fffffe84, in_stack_fffffe88, \n                 in_stack_fffffe8c, in_stack_fffffe90, in_stack_fffffe94, in_stack_fffffe98, in_stack_fffffe9c, \n                 in_stack_fffffea0, in_stack_fffffea4, in_stack_fffffea8, in_stack_fffffeac, in_stack_fffffeb0, \n                 in_stack_fffffeb4, in_stack_fffffeb8, in_stack_fffffebc, in_stack_fffffec0, in_stack_fffffec4, \n                 in_stack_fffffec8, in_stack_fffffecc, in_stack_fffffed0, in_stack_fffffed4, in_stack_fffffed8, \n                 in_stack_fffffedc, in_stack_fffffee0, in_stack_fffffee4);\n    fcn.0047d126(1);\n    if (in_stack_fffffea0 == 0) {\n        fcn.0047bfce(arg_ch);\n        arg_8h_01 = &stack0xfffffe74;\n        uVar2 = extraout_ECX;\n        fcn.0041fa6d(arg_8h_01);\n        fcn.0040e8a0(arg_8h_01, uVar2);\n    }\n    else {\n        iVar1 = *(*in_ECX + 4);\n        iVar3 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = in_stack_fffffea0;\n        iVar3 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n        fcn.00407cb4(in_stack_fffffea4, 0);\n        fcn.0040b5c1(0x49d0d0);\n    }\n    fcn.0047be67();\n    return 0;\n}\n",
        "token_count": 976
    },
    "0047cc3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0047cc3c(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    int32_t in_ECX;\n    uint uVar3;\n    uint uVar4;\n    char16_t *pcVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 1) {\n        iVar2 = *(in_ECX + 0x8c);\n    }\n    else {\n        iVar2 = *(in_ECX + 0x58);\n    }\n    if (iVar2 == 1) {\n        pcVar5 = NULL;\n        uVar4 = 0;\n        uVar3 = 1;\n    }\n    else if (iVar2 == 2) {\n        pcVar5 = L\"<local>\";\n        uVar4 = *((-(arg_8h != 1) & 0xffffffcc) + 0xb0 + in_ECX);\n        uVar3 = 3;\n    }\n    else {\n        pcVar5 = NULL;\n        uVar4 = 0;\n        uVar3 = 0;\n    }\n    uVar1 = (*_sym.imp.WININET.dll_InternetOpenW)(*(in_ECX + 0xc0), uVar3, uVar4, pcVar5, 0);\n    *(in_ECX + 4) = uVar1;\n    if (uVar1 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (*(in_ECX + 0xdc) != '\\0') {\n            var_8h = 1;\n            var_4h = 0;\n            uVar1 = (*_sym.imp.WININET.dll_InternetSetOptionW)(0, 0x32, &var_8h, 8);\n        }\n        uVar1 = uVar1 & 0xffffff00 | 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 432
    },
    "0047cd62": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0047cd62(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    int32_t arg_14h;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint var_404h;\n    uint32_t var_4h;\n    \n    arg_14h = fcn.0042e57b(*(in_ECX + 0x34), 0x4c6a98);\n    if (arg_14h == 0) {\n        *(in_ECX + 0x18) = 0x1f;\n    }\n    else {\n        uVar5 = 1;\n        var_4h = 1;\n        do {\n            iVar2 = (*_sym.imp.WININET.dll_InternetReadFile)(arg_8h, &var_404h, 0x400, &var_4h);\n            if (iVar2 == 0) {\n                *(in_ECX + 0x18) = 0x20;\n                goto code_r0x0047ce08;\n            }\n            if (var_4h == 0) break;\n            fcn.0042db43(&var_404h, var_4h, 1, arg_14h);\n            puVar1 = in_ECX + 8;\n            uVar4 = *puVar1;\n            *puVar1 = *puVar1 + var_4h;\n            *(in_ECX + 0xc) = *(in_ECX + 0xc) + CARRY4(uVar4, var_4h);\n        } while (var_4h != 0);\n        if ((*(in_ECX + 8) | *(in_ECX + 0xc)) != 0) {\n            *(in_ECX + 0x18) = 0;\n            uVar4 = *(in_ECX + 0xd4);\n            if (uVar4 != 0) {\n                uVar4 = (*_sym.imp.KERNEL32.dll_SetEvent)(uVar4);\n            }\n            goto code_r0x0047ce24;\n        }\n        *(in_ECX + 0x18) = 0x21;\n    }\ncode_r0x0047ce08:\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    *(in_ECX + 0x1c) = uVar3;\n    uVar4 = *(in_ECX + 0xd4);\n    if (uVar4 != 0) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_SetEvent)(uVar4);\n    }\n    uVar5 = 0;\ncode_r0x0047ce24:\n    if (arg_14h != 0) {\n        uVar4 = fcn.0042e608(arg_14h);\n    }\n    return uVar4 & 0xffffff00 | uVar5;\n}\n",
        "token_count": 657
    },
    "0047d126": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0047d126(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uchar uVar1;\n    \n    if ((*(in_ECX + 0xd0) == '\\0') || (arg_8h == '\\0')) {\n        uVar1 = fcn.0047c282(arg_8h);\n    }\n    else {\n        fcn.0047c036();\n        fcn.0042d15c(fcn.0047d1f6, 0, in_ECX);\n        uVar1 = *(in_ECX + 0x18) == 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 146
    },
    "0047d205": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0047d205(uint dwMilliseconds)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    bool bVar2;\n    \n    if (*in_ECX == 0) {\n        bVar2 = false;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*in_ECX, dwMilliseconds);\n        bVar2 = iVar1 == 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 107
    },
    "0047d514": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047d514(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    int32_t *in_ECX;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack28 = 0x10;\n    if ((*(arg_8h + 8) < 3) ||\n       (((ppiVar2 = *(*(arg_8h + 4) + 8),  ppiVar2[3] == 0xa && (**ppiVar2 == 0x29)) ||\n        (fcn.00408e90(),  *ppiVar2[2] == 0)))) goto code_r0x0047d5e8;\n    iVar4 = *(*(arg_8h + 4) + 8);\n    fcn.00408e90();\n    iVar1 = ***(iVar4 + 8);\n    if (iVar1 == 0x42) {\ncode_r0x0047d5e2:\n        uStack28 = 8;\n    }\n    else {\n        if (iVar1 != 0x44) {\n            if (iVar1 == 0x57) goto code_r0x0047d5e8;\n            if (iVar1 == 0x62) goto code_r0x0047d5e2;\n            if (iVar1 != 100) {\n                if (iVar1 != 0x77) {\n                    fcn.0040e8a0();\n                    *arg_ch = 0;\n                    arg_ch[3] = 1;\n                    iVar4 = *(*in_ECX + 4);\n                    iVar3 = *(iVar4 + 8 + in_ECX);\n                    if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                        iVar3 = *(iVar3 + 0x38);\n                    }\n                    *(iVar3 + 0x14) = 1;\n                    iVar3 = *(iVar4 + 8 + in_ECX);\n                    if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                        iVar3 = *(iVar3 + 0x38);\n                    }\n                    *(iVar3 + 0x18) = 0;\n                    return 0xffffffff;\n                }\n                goto code_r0x0047d5e8;\n            }\n        }\n        uStack28 = 0x20;\n    }\ncode_r0x0047d5e8:\n    iVar4 = 1;\n    if (1 < *(arg_8h + 8)) {\n        iVar4 = fcn.0040ce67();\n    }\n    uVar5 = fcn.0040ce67();\n    uVar6 = uStack28;\n    for (; iVar4 < 0; iVar4 = iVar4 + uStack28) {\n    }\n    for (; uStack28 <= iVar4; iVar4 = iVar4 - uStack28) {\n    }\n    if (iVar4 == 0) {\n        fcn.0040e8a0();\n        *arg_ch = uVar5;\n    }\n    else {\n        uVar7 = uVar6 - iVar4;\n        uVar9 = (1 << (uVar7 & 0x1f)) - 1;\n        uVar8 = (uVar9 & uVar5) << (iVar4 & 0x1f);\n        iVar4 = 1 << (uVar6 & 0x1f);\n        if (uStack28 < 0x20) {\n            uVar8 = iVar4 - 1U & uVar8;\n        }\n        if (uStack28 < 0x20) {\n            uVar9 = (iVar4 - uVar9) - 1;\n        }\n        else {\n            uVar9 = ~uVar9;\n        }\n        fcn.0040e8a0();\n        *arg_ch = 0x7fffffff >> (uVar7 - 1 & 0x1f) & (uVar9 & uVar5) >> (uVar7 & 0x1f) |\n                  -(uStack28 < 0x20) & -1 << (uVar6 & 0x1f) & uVar5 | uVar8;\n    }\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 1009
    },
    "0047d7d3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047d7d3(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    uint var_10h;\n    \n    uVar2 = fcn.0040ce67();\n    if (uVar2 == 0) {\n        fcn.0040c25d();\n        fcn.0046f168(0);\n        fcn.00407c5d(&var_10h);\n        fcn.0040b1ff();\n    }\n    else if (uVar2 < 0x100) {\n        if (uVar2 < 0x80) {\n            arg_8h = uVar2 & 0xffff;\n            fcn.0040b5c1(&arg_8h);\n        }\n        else {\n            arg_8h = arg_8h & 0xffff0000 | uVar2 & 0xff;\n            arg_8h_00 = fcn.0046eaef();\n            fcn.0040b5c1(arg_8h_00);\n            fcn.0041fd94(arg_8h_00);\n        }\n    }\n    else {\n        fcn.0040b5c1(0x49d0d0);\n        iVar1 = *(*in_ECX + 4);\n        iVar3 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 1;\n        iVar3 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 453
    },
    "0047d8a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047d8a4(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_10h;\n    \n    uVar2 = fcn.0040ce67();\n    if (uVar2 == 0) {\n        fcn.0040c25d();\n        fcn.0046f168(0);\n        fcn.00407c5d(&var_10h);\n        fcn.0040b1ff();\n    }\n    else if (uVar2 < 0x10000) {\n        arg_8h = uVar2 & 0xffff;\n        fcn.0040b5c1(&arg_8h);\n    }\n    else {\n        fcn.0040b5c1(0x49d0d0);\n        iVar1 = *(*in_ECX + 4);\n        iVar3 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 1;\n        iVar3 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 352
    },
    "0047d942": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0047d942(int32_t arg_8h, ulong *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    uint uVar6;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar5 = **(arg_8h + 4);\n    fcn.00408e90();\n    iVar5 = *(iVar5 + 8);\n    cVar3 = fcn.004035b3(0x10);\n    uVar6 = 1;\n    if (cVar3 == '\\0') {\n        iVar1 = *(*in_ECX + 4);\n        iVar4 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 1;\n        iVar4 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x18) = 0;\n    }\n    if (*(arg_8h + 8) < 2) {\n        uVar2 = *(iVar5 + 4);\n        fcn.0040e8a0();\n        *arg_ch = var_8h;\n        if (8 < uVar2) {\n            *(arg_ch + 4) = var_4h;\n            uVar6 = 2;\n        }\n        *(arg_ch + 0xc) = uVar6;\n    }\n    else {\n        iVar5 = fcn.0040ce67();\n        if (iVar5 != 1) {\n            if (iVar5 == 2) {\n                uVar6 = 2;\n            }\n            else {\n                if (iVar5 == 3) {\n                    fcn.0047e22d(&var_18h, var_8h, var_4h, 2);\n                    _var_8h = fcn.0040cc8f();\n                    fcn.0040e8a0();\n                    fcn.0040e8a0();\n                    *arg_ch = _var_8h;\n                    *(arg_ch + 0xc) = 3;\n                    return 0;\n                }\n                uVar6 = 0;\n            }\n        }\n        uVar6 = fcn.0047e22d(&var_18h, var_8h, var_4h, uVar6);\n        fcn.0040c5e7(uVar6);\n        fcn.0040e8a0();\n    }\n    return 0;\n}\n",
        "token_count": 649
    },
    "0047dafe": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047dafe(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    \n    uVar1 = fcn.00471dda();\n    iVar2 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n    if (iVar2 == 0) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 7;\n        iVar2 = *(*in_ECX + 4);\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 1;\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n    }\n    else {\n        uVar1 = fcn.00471dda();\n        fcn.0040e8a0();\n        arg_ch[3] = 7;\n        *arg_ch = uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 315
    },
    "0047df87": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0047df87(int32_t arg_8h, double *arg_ch)\n\n{\n    double dVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    float10 fVar6;\n    float10 fVar7;\n    float10 fVar8;\n    uint var_1h;\n    \n    bVar2 = false;\n    if ((*(arg_8h + 8) == 3) && (iVar3 = fcn.0040ce67(),  iVar3 == 1)) {\n        bVar2 = true;\n    }\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    *(arg_ch + 0xc) = 1;\n    iVar3 = *(arg_8h + 8);\n    if (iVar3 == 0) {\n        fVar6 = fcn.00471ec0();\ncode_r0x0047e14c:\n        dVar1 = fVar6;\n        fcn.0040e8a0();\ncode_r0x0047e159:\n        *arg_ch = dVar1;\n        *(arg_ch + 0xc) = 3;\n        return 0;\n    }\n    if (iVar3 == 1) {\n        fVar7 = fcn.0040cfb5();\n        if (0 == fVar7) {\n            fcn.0040e8a0();\n            dVar1 = 0.0;\n            goto code_r0x0047e159;\n        }\n        if (0 < fVar7) {\n            fVar6 = fcn.00471ec0();\n            fVar6 = fVar6 * fVar7;\n            goto code_r0x0047e14c;\n        }\n    }\n    else {\n        if (1 < iVar3 - 2U) {\n            return 0;\n        }\n        if ((*(**(arg_8h + 4) + 0xc) == 5) || (*((*(arg_8h + 4))[1] + 0xc) == 5)) {\n            iVar3 = *(*in_ECX + 4);\n            iVar4 = *(iVar3 + 8 + in_ECX);\n            if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = 1;\n            goto code_r0x0047e0c7;\n        }\n        if (bVar2) {\n            iVar3 = fcn.0040ce67();\n            iVar4 = fcn.0040ce67();\n            if (iVar4 == iVar3) {\n                fcn.0040e8a0();\n                *(arg_ch + 0xc) = 1;\n                *arg_ch = iVar4;\n                return 0;\n            }\n            iVar5 = iVar3 - iVar4;\n            if ((iVar4 < iVar3) && (0 < iVar5)) {\n                if (iVar5 < 0x7ffffff) {\n                    iVar5 = iVar5 + 1;\n                }\n                iVar3 = fcn.00471e7a();\n                fcn.0040e8a0();\n                *(arg_ch + 0xc) = 1;\n                *arg_ch = iVar4 + iVar3 % iVar5;\n                return 0;\n            }\n        }\n        else {\n            fVar6 = fcn.0040cfb5();\n            fVar7 = fcn.0040cfb5();\n            dVar1 = fVar7;\n            fVar8 = fVar6;\n            if (fVar8 == fVar7) {\n                fcn.0040e8a0();\n                goto code_r0x0047e159;\n            }\n            if (fVar8 < fVar7 == (fVar8 == fVar7)) {\n                fVar7 = fcn.00471ec0();\n                fVar6 = dVar1 + (fVar6 - dVar1) * fVar7;\n                goto code_r0x0047e14c;\n            }\n        }\n    }\n    iVar3 = *(*in_ECX + 4);\n    iVar4 = *(iVar3 + 8 + in_ECX);\n    if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n        iVar4 = *(iVar4 + 0x38);\n    }\n    *(iVar4 + 0x14) = 1;\ncode_r0x0047e0c7:\n    iVar4 = *(iVar3 + 8 + in_ECX);\n    if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n        iVar4 = *(iVar4 + 0x38);\n    }\n    *(iVar4 + 0x18) = 0;\n    return 0;\n}\n",
        "token_count": 1087
    },
    "0047e315": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0047e315(uint arg_8h, uint arg_ch, uint *arg_10h, uint32_t arg_14h, uint noname_4, uint arg_1ch)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uStack44;\n    uchar auStack28 [24];\n    \n    fcn.0040e8a0();\n    uVar4 = 0;\n    arg_10h[3] = 1;\n    *arg_10h = 0;\n    fcn.0046efd1(0);\n    fcn.0040c25d();\n    cVar1 = fcn.0047e452(arg_8h, arg_ch, &stack0xffffffe4, arg_14h);\n    if (cVar1 == '\\0') goto code_r0x0047e3ee;\n    uVar5 = 0x47e387;\n    fcn.0040b7e0(0, uStack44, &stack0xffffffc4);\n    if (arg_14h < 2) {\ncode_r0x0047e3d1:\n        arg_1ch = uVar5;\n        uVar4 = 1;\n    }\n    else {\n        arg_8h_00 = fcn.00473ac6();\n        iVar2 = fcn.0040d840(0, &stack0xffffffb8, &stack0xffffffb4, arg_10h, arg_1ch);\n        if (-1 < iVar2) {\n            uVar5 = arg_1ch;\n            if (arg_8h_00 != 0) {\n                fcn.00473a0c(arg_8h_00);\n                uVar5 = arg_1ch;\n            }\n            goto code_r0x0047e3d1;\n        }\n        if (arg_8h_00 != 0) {\n            fcn.00473a0c(arg_8h_00);\n        }\n    }\n    fcn.00405fc0();\n    fcn.0041fd94(arg_1ch);\ncode_r0x0047e3ee:\n    fcn.0040b1ff();\n    uVar3 = fcn.0040c000();\n    return uVar3 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 544
    },
    "0047e57a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047e57a(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    char cVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    int32_t in_ECX;\n    uint uVar6;\n    int32_t unaff_EBX;\n    int32_t iVar7;\n    bool bVar8;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    int32_t *piStack28;\n    uchar auStack24 [20];\n    \n    iVar7 = 0;\n    if (*(in_ECX + 0x438) != 0) {\n        if (*(arg_8h + 8) == 0) {\n            *(**(in_ECX + 0x434) + 0x11) = 1;\n        }\n        else {\n            iVar1 = **(arg_8h + 4);\n            bVar8 = *(iVar1 + 0xc) != 0xe;\n            if (bVar8) {\n                fcn.00408e90();\n                puVar4 = *(iVar1 + 8);\n                uVar6 = *puVar4;\n                uStack36 = puVar4[1];\n                uStack32 = puVar4[2];\n                piStack28 = puVar4[3];\n                puVar4 = &uStack40;\n                *piStack28 = *piStack28 + 1;\n                uStack40 = uVar6;\n            }\n            else {\n                puVar4 = fcn.00471037(auStack24);\n                unaff_EBX = 0;\n                uVar6 = *puVar4;\n            }\n            uVar2 = puVar4[1];\n            *puVar4[3] = *puVar4[3] + 1;\n            if (unaff_EBX != 0) {\n                fcn.0040b1ff();\n            }\n            if (!bVar8) {\n                fcn.0040b1ff();\n            }\n            fcn.0040c7c9();\n            (*_sym.imp.USER32.dll_CharUpperBuffW)(uVar6, uVar2);\n            for (piVar5 = *(in_ECX + 0x430); piVar5 != NULL; piVar5 = piVar5[1]) {\n                cVar3 = fcn.004082dc();\n                if (cVar3 != '\\0') {\n                    *(*piVar5 + 0x11) = 1;\n                    break;\n                }\n            }\n            fcn.0040b1ff();\n        }\n        for (piVar5 = *(in_ECX + 0x430); piVar5 != NULL; piVar5 = piVar5[1]) {\n            if (*(*piVar5 + 0x11) == '\\0') {\n                iVar7 = iVar7 + 1;\n            }\n        }\n    }\n    fcn.0040e8a0();\n    *arg_ch = iVar7;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 682
    },
    "0047e6b7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047e6b7(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    char cVar6;\n    uint in_stack_ffffff74;\n    uchar *arg_8h_00;\n    uchar *arg_8h_01;\n    char16_t *arg_10h;\n    uint uStack120;\n    uint uStack116;\n    uint uStack80;\n    uint uStack76;\n    int32_t *piStack72;\n    uchar uStack68;\n    uint uStack56;\n    \n    cVar6 = in_stack_ffffff74 >> 0x10;\n    iVar3 = **(arg_8h + 4);\n    uStack116 = 0x47e6e3;\n    fcn.00408e90();\n    puVar1 = *(iVar3 + 8);\n    uStack120 = *puVar1;\n    uStack80 = puVar1[1];\n    uStack76 = puVar1[2];\n    piStack72 = puVar1[3];\n    *piStack72 = *piStack72 + 1;\n    uStack116 = 0x47e70c;\n    fcn.0040c7c9();\n    uStack116 = uStack80;\n    (*_sym.imp.USER32.dll_CharUpperBuffW)();\n    fcn.00408157();\n    arg_10h = L\"^[A-Z\\\\d_]+$\";\n    fcn.0040b606(L\"^[A-Z\\\\d_]+$\");\n    arg_8h_01 = &stack0xffffffb0;\n    iVar3 = fcn.0040817f(arg_8h_01);\n    if (iVar3 == 0) {\n        piStack72 = &stack0xffffff98;\n        uStack68 = 1;\n        uStack56 = 0;\n        arg_8h_00 = &stack0xffffff94;\n        iVar3 = fcn.0046905e(arg_8h_00, 0);\n        cVar6 = arg_8h_00 >> 0x10;\n        bVar2 = false;\n        if (iVar3 < 1) goto code_r0x0047e777;\n    }\n    else {\ncode_r0x0047e777:\n        bVar2 = true;\n    }\n    fcn.0040b1ff();\n    if (bVar2) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        iVar3 = *(*in_ECX + 4);\n        iVar5 = *(iVar3 + 8 + in_ECX);\n        if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n            iVar5 = *(iVar5 + 0x38);\n        }\n        *(iVar5 + 0x14) = 1;\n        iVar5 = *(iVar3 + 8 + in_ECX);\n        if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n            iVar5 = *(iVar5 + 0x38);\n        }\n        *(iVar5 + 0x18) = 0;\n    }\n    else {\n        if (*(arg_8h + 8) == 3) {\n            uVar4 = fcn.0040ce67();\n            arg_10h = uVar4 & 1;\n            uVar4 = fcn.0040ce67();\n            if ((uVar4 & 2) != 0) {\n                arg_10h = 0x2;\n            }\n            fcn.0040ce67();\n        }\n        iVar3 = fcn.0041da6c(&stack0xffffff90, &stack0xffffff88, arg_10h);\n        if (iVar3 == 0) {\n            if (cVar6 != '\\0') {\n                fcn.0040c117(&stack0xffffff84, *(*(arg_8h + 4) + 4), 0, arg_10h);\n                goto code_r0x0047e8da;\n            }\n            iVar3 = *(*in_ECX + 4);\n            iVar5 = *(iVar3 + 8 + in_ECX);\n            if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                iVar5 = *(iVar5 + 0x38);\n            }\n            *(iVar5 + 0x14) = 2;\n            iVar5 = *(iVar3 + 8 + in_ECX);\n            if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                iVar5 = *(iVar5 + 0x38);\n            }\n            *(iVar5 + 0x18) = 0;\n            fcn.0040e8a0();\n            arg_ch[3] = 1;\n        }\n        else {\n            if ((arg_8h_01 & 0x100) == 0) {\n                fcn.0040c5e7(*(*(arg_8h + 4) + 4));\n                goto code_r0x0047e8da;\n            }\n            iVar3 = *(*in_ECX + 4);\n            iVar5 = *(iVar3 + 8 + in_ECX);\n            if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                iVar5 = *(iVar5 + 0x38);\n            }\n            *(iVar5 + 0x14) = 1;\n            iVar5 = *(iVar3 + 8 + in_ECX);\n            if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                iVar5 = *(iVar5 + 0x38);\n            }\n            *(iVar5 + 0x18) = 0;\n            fcn.0040e8a0();\n            arg_ch[3] = 1;\n        }\n        *arg_ch = 0;\n    }\ncode_r0x0047e8da:\n    fcn.004082a1();\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 1354
    },
    "0047e97b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047e97b(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = arg_8h;\n    uVar3 = 1000;\n    arg_8h = 500;\n    uVar1 = *(iVar2 + 8);\n    if (uVar1 != 0) {\n        arg_8h = fcn.0040ce67();\n    }\n    if (1 < uVar1) {\n        uVar3 = fcn.0040ce67();\n    }\n    (*_sym.imp.KERNEL32.dll_Beep)(arg_8h, uVar3);\n    return 0;\n}\n",
        "token_count": 162
    },
    "0047ea26": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047ea26(uint noname_0, uint arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint uStack624;\n    int32_t iVar5;\n    uint uStack592;\n    uchar auStack564 [8];\n    uchar auStack556 [552];\n    \n    uStack592 = 0x47ea4a;\n    fcn.0040b5c1(0x49d0d0);\n    uStack592 = *0x4d138c;\n    (*_sym.imp.USER32.dll_OpenClipboard)();\n    pcVar2 = _sym.imp.USER32.dll_IsClipboardFormatAvailable;\n    iVar3 = (*_sym.imp.USER32.dll_IsClipboardFormatAvailable)();\n    if (iVar3 == 0) {\n        iVar3 = (*pcVar2)();\n        if (iVar3 == 0) {\n            iVar3 = (*pcVar2)();\n            if (iVar3 == 0) {\n                iVar5 = (*_sym.imp.USER32.dll_CountClipboardFormats)();\n                iVar3 = *(*in_ECX + 4);\n                cVar1 = *(in_ECX + iVar3 + 0xd);\n                iVar4 = *(in_ECX + iVar3 + 8);\n                if (iVar5 == 0) {\n                    if (cVar1 != '\\0') {\n                        iVar4 = *(iVar4 + 0x38);\n                    }\n                    *(iVar4 + 0x14) = 1;\n                }\n                else {\n                    if (cVar1 != '\\0') {\n                        iVar4 = *(iVar4 + 0x38);\n                    }\n                    *(iVar4 + 0x14) = 2;\n                }\n                iVar4 = *(in_ECX + iVar3 + 8);\n                if (*(in_ECX + iVar3 + 0xd) != '\\0') {\n                    iVar4 = *(iVar4 + 0x38);\n                }\n                *(iVar4 + 0x18) = 0;\n            }\n            else {\n                iVar3 = (*_sym.imp.USER32.dll_GetClipboardData)();\n                if (iVar3 == 0) goto code_r0x0047ea76;\n                iVar4 = (*_sym.imp.KERNEL32.dll_GlobalLock)();\n                if (iVar4 == 0) goto code_r0x0047eab8;\n                fcn.0040c25d();\n                iVar5 = 0;\n                uStack592 = 0;\n                uStack624 = 0x47eba4;\n                iVar4 = (*_sym.imp.SHELL32.dll_DragQueryFileW)();\n                if (0 < iVar4 + -1) {\n                    do {\n                        uStack624 = 0x104;\n                        (*_sym.imp.SHELL32.dll_DragQueryFileW)(iVar3, iVar5, &stack0xfffffdcc);\n                        fcn.004052b7(&stack0xfffffdd4);\n                        uStack624 = 0x47ebda;\n                        fcn.004051ec(10);\n                        iVar5 = iVar5 + 1;\n                    } while (iVar5 < iVar4 + -1);\n                }\n                uStack624 = 0x104;\n                (*_sym.imp.SHELL32.dll_DragQueryFileW)(iVar3, iVar5, &stack0xfffffdcc);\n                fcn.004052b7(&stack0xfffffdbc);\n                fcn.00407c5d(&stack0xfffffd90);\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar3);\n                fcn.00407cb4(1, 0);\n                fcn.0040b1ff();\n            }\n        }\n        else {\n            iVar3 = (*_sym.imp.USER32.dll_GetClipboardData)();\n            if (iVar3 == 0) goto code_r0x0047ea76;\n            iVar3 = (*_sym.imp.KERNEL32.dll_GlobalLock)();\n            if (iVar3 == 0) goto code_r0x0047eab8;\n            fcn.00463930(iVar3);\n            fcn.0040c25d();\n            fcn.0048314b();\n            fcn.00407c5d(&stack0xfffffdb0);\n            fcn.0040b1ff();\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)();\n            fcn.0040b1ff();\n        }\ncode_r0x0047ec80:\n        (*_sym.imp.USER32.dll_CloseClipboard)();\n    }\n    else {\n        iVar3 = (*_sym.imp.USER32.dll_GetClipboardData)();\n        if (iVar3 == 0) {\ncode_r0x0047ea76:\n            (*_sym.imp.USER32.dll_CloseClipboard)();\n            iVar3 = *(*in_ECX + 4);\n            iVar4 = *(iVar3 + 8 + in_ECX);\n            if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = 3;\n        }\n        else {\n            iVar3 = (*_sym.imp.KERNEL32.dll_GlobalLock)();\n            if (iVar3 != 0) {\n                fcn.0040b5c1(iVar3);\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)();\n                goto code_r0x0047ec80;\n            }\ncode_r0x0047eab8:\n            (*_sym.imp.USER32.dll_CloseClipboard)();\n            iVar3 = *(*in_ECX + 4);\n            iVar4 = *(iVar3 + 8 + in_ECX);\n            if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = 4;\n        }\n        iVar4 = *(iVar3 + 8 + in_ECX);\n        if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x18) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 1341
    },
    "0047ec91": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047ec91(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.00408e90();\n    puVar1 = *(iVar2 + 8);\n    iVar2 = puVar1[1];\n    if (iVar2 == 0) {\n        (*_sym.imp.USER32.dll_OpenClipboard)(*0x4d138c);\n        (*_sym.imp.USER32.dll_EmptyClipboard)();\ncode_r0x0047edca:\n        (*_sym.imp.USER32.dll_CloseClipboard)();\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(2, iVar2 * 2 + 2);\n        if (iVar2 == 0) {\n            fcn.0040e8a0();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n            iVar2 = *(*in_ECX + 4);\n            iVar3 = *(iVar2 + 8 + in_ECX);\n            if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x14) = 3;\n        }\n        else {\n            iVar3 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar2);\n            if (iVar3 != 0) {\n                fcn.00424913(iVar3, *puVar1);\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar2);\n                (*_sym.imp.USER32.dll_OpenClipboard)(*0x4d138c);\n                (*_sym.imp.USER32.dll_EmptyClipboard)();\n                iVar2 = (*_sym.imp.USER32.dll_SetClipboardData)(0xd, iVar2);\n                if (iVar2 == 0) {\n                    fcn.0040e8a0();\n                    *arg_ch = 0;\n                    arg_ch[3] = 1;\n                    iVar2 = *(*in_ECX + 4);\n                    iVar3 = *(iVar2 + 8 + in_ECX);\n                    if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                        iVar3 = *(iVar3 + 0x38);\n                    }\n                    *(iVar3 + 0x14) = 1;\n                    iVar3 = *(iVar2 + 8 + in_ECX);\n                    if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                        iVar3 = *(iVar3 + 0x38);\n                    }\n                    *(iVar3 + 0x18) = 0;\n                }\n                goto code_r0x0047edca;\n            }\n            fcn.0040e8a0();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n            iVar2 = *(*in_ECX + 4);\n            iVar3 = *(iVar2 + 8 + in_ECX);\n            if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x14) = 4;\n        }\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 790
    },
    "0047eee8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047eee8(uint noname_0, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.USER32.dll_SendMessageTimeoutW)(0xffff, 0x1a, 0, L\"Environment\", 3, 5000, &var_4h);\n    if (iVar1 == 0) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        iVar1 = *(*in_ECX + 4);\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x14) = 1;\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x18) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 284
    },
    "0047ef56": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047ef56(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar2 = **(arg_8h + 4);\n    fcn.00408e90();\n    puVar1 = *(iVar2 + 8);\n    var_14h = *puVar1;\n    var_10h = puVar1[1];\n    var_ch = puVar1[2];\n    var_8h = puVar1[3];\n    *var_8h = *var_8h + 1;\n    fcn.0040c7c9();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(var_14h, var_10h);\n    iVar2 = fcn.0046f005(&var_14h);\n    if (iVar2 == 0) {\n        iVar2 = *(*in_ECX + 4);\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 1;\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n        fcn.0040b5c1(0x49d0d0);\n    }\n    else {\n        arg_8h_00 = fcn.0041da6c(&var_14h, &var_4h, 0);\n        fcn.0040c5e7(arg_8h_00);\n    }\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 494
    },
    "0047f013": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047f013(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint arg_ch_00;\n    uint32_t uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack24 = 0x49d114;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    iVar1 = **(arg_8h + 4);\n    *0x4d1360 = 1;\n    fcn.00408e90();\n    arg_ch_00 = **(iVar1 + 8);\n    iVar1 = fcn.0040b7e0(0, arg_ch_00, &uStack24);\n    if ((-1 < iVar1) && (1 < uStack28)) {\n        iVar1 = fcn.00410540(&stack0xffffffdc, &stack0xffffffd8, arg_ch, 0xffffffff);\n        if (-1 < iVar1) {\n            *0x4d1360 = 0;\n            goto code_r0x0047f0ca;\n        }\n    }\n    *0x4d1360 = 0;\n    iVar1 = *(*in_ECX + 4);\n    iVar2 = *(iVar1 + 8 + in_ECX);\n    if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n        iVar2 = *(iVar2 + 0x38);\n    }\n    *(iVar2 + 0x14) = 1;\n    iVar2 = *(iVar1 + 8 + in_ECX);\n    if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n        iVar2 = *(iVar2 + 0x38);\n    }\n    *(iVar2 + 0x18) = 0;\n    fcn.0040b5c1(0x49d0d0);\ncode_r0x0047f0ca:\n    fcn.00405fc0();\n    fcn.0041fd94(arg_ch_00);\n    return 0;\n}\n",
        "token_count": 490
    },
    "0047f0f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047f0f0(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *arg_8h_00;\n    uint arg_8h_01;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_10h;\n    \n    piVar1 = **(arg_8h + 4);\n    if (piVar1[3] == 0xe) {\n        arg_8h_00 = fcn.00471037(&var_10h);\n    }\n    else {\n        if (piVar1[3] != 0xd) {\n            fcn.0040b5c1(0x49d0d0);\n            iVar2 = *(*in_ECX + 4);\n            iVar3 = *(iVar2 + 8 + in_ECX);\n            if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x14) = 1;\n            iVar3 = *(iVar2 + 8 + in_ECX);\n            if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x18) = 0;\n            return 0;\n        }\n        fcn.0040c25d();\n        if (piVar1[3] == 0xd) {\n            arg_8h_01 = *(*piVar1 + 0x10);\n        }\n        else {\n            arg_8h_01 = 0;\n        }\n        fcn.0047372c(arg_8h_01, &var_10h);\n        arg_8h_00 = &var_10h;\n    }\n    fcn.00407c5d(arg_8h_00);\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 449
    },
    "0047f195": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047f195(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t *in_ECX;\n    int32_t iVar7;\n    int32_t *unaff_EBX;\n    uint unaff_ESI;\n    int32_t *arg_8h_00;\n    uint32_t uStack124;\n    uint uStack120;\n    uint uStack116;\n    int32_t iStack108;\n    uint32_t uStack104;\n    uint32_t uStack100;\n    uint32_t uStack96;\n    int16_t iStack88;\n    ulong uStack84;\n    uchar auStack72 [4];\n    uchar auStack68 [28];\n    uchar auStack40 [36];\n    \n    iVar4 = *(arg_8h + 8);\n    iStack108 = iVar4;\n    fcn.004658cf();\n    uStack116 = 0;\n    uVar5 = iVar4 - 2;\n    if (8 < uVar5) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        iVar4 = *(*in_ECX + 4);\n        iVar6 = *(iVar4 + 8 + in_ECX);\n        if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x14) = 5;\n        iVar6 = *(iVar4 + 8 + in_ECX);\n        if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x18) = 0;\n        goto code_r0x0047f5ea;\n    }\n    // switch table (9 cases) at 0x47f611\n    switch(*(uVar5 * 4 + 0x47f611)) {\n    case 0x47f1d5:\n        uStack116 = fcn.00471dda();\n        break;\n    case 0x47f218:\n        goto code_r0x0047f218;\n    case 0x47f23b:\n        goto code_r0x0047f23b;\n    case 0x47f25b:\n        goto code_r0x0047f25b;\n    case 0x47f28a:\n        goto code_r0x0047f28a;\n    case 0x47f2b9:\n        goto code_r0x0047f2b9;\n    case 0x47f2d3:\n        goto code_r0x0047f2d3;\n    case 0x47f43e:\n        goto code_r0x0047f43e;\n    }\n    cVar3 = fcn.00401fb9(0x29);\n    if (cVar3 == '\\0') {\n        uStack124 = fcn.0040ce67();\n        uStack84 = uStack124;\n        if (uStack84 <= 0.0) goto code_r0x0047f20e;\n    }\n    else {\ncode_r0x0047f20e:\n        uStack84 = *0x4c81f0;\n    }\ncode_r0x0047f218:\n    cVar3 = fcn.00401fb9(0x29);\n    if (cVar3 == '\\0') {\n        uStack100 = fcn.0040ce67();\n    }\n    else {\n        uStack96 = uStack96 | 0x80;\n    }\ncode_r0x0047f23b:\n    cVar3 = fcn.00401fb9(0x29);\n    if (cVar3 == '\\0') {\n        iStack108 = fcn.0040ce67();\n    }\n    else {\n        uStack100 = uStack100 | 0x40;\n    }\ncode_r0x0047f25b:\n    iVar4 = fcn.0040ce67();\n    if ((iVar4 < 0) || (cVar3 = fcn.00401fb9(0x29),  cVar3 != '\\0')) {\n        uStack100 = uStack100 | 0x20;\n    }\n    else {\n        uStack116 = fcn.0040ce67();\n    }\ncode_r0x0047f28a:\n    iVar4 = fcn.0040ce67();\n    if ((iVar4 < 0) || (cVar3 = fcn.00401fb9(0x29),  cVar3 != '\\0')) {\n        uStack100 = uStack100 | 0x10;\n    }\n    else {\n        uStack120 = fcn.0040ce67();\n    }\ncode_r0x0047f2b9:\n    iVar4 = *(*(arg_8h + 4) + 0xc);\n    cVar3 = fcn.00401fb9(0x29);\n    if (cVar3 == '\\0') {\n        fcn.00408e90();\n        iVar1 = ***(iVar4 + 8);\n        if (iVar1 != 0) {\n            iVar4 = fcn.00408f0a();\n            if (iVar4 == 0) {\n                iStack88 = iVar1;\n            }\n            iVar4 = 1;\n            while( true ) {\n                iVar6 = *(*(arg_8h + 4) + 0xc);\n                fcn.00408e90();\n                uVar2 = *(**(iVar6 + 8) + iVar4 * 2);\n                if (uVar2 == 0) break;\n                if (uVar2 < 0x30) {\ncode_r0x0047f3e8:\n                    iVar6 = *(*in_ECX + 4);\n                    iVar4 = *(iVar6 + 8 + in_ECX);\n                    if (*(iVar6 + 0xd + in_ECX) != '\\0') {\n                        iVar4 = *(iVar4 + 0x38);\n                    }\n                    *(iVar4 + 0x14) = 3;\n                    goto code_r0x0047f402;\n                }\n                if (uVar2 < 0x3a) {\n                    iVar6 = *(*(arg_8h + 4) + 0xc);\n                    fcn.00408e90();\n                    uVar5 = *(**(iVar6 + 8) + iVar4 * 2) - 0x30;\n                    in_ECX = unaff_EBX;\n                    while( true ) {\n                        iVar6 = *(*(arg_8h + 4) + 0xc);\n                        fcn.00408e90();\n                        iVar6 = fcn.00428f9b(*(**(iVar6 + 8) + 2 + iVar4 * 2));\n                        unaff_EBX = in_ECX;\n                        if (iVar6 == 0) break;\n                        iVar4 = iVar4 + 1;\n                        iVar6 = *(*(arg_8h + 4) + 0xc);\n                        fcn.00408e90();\n                        uVar5 = uVar5 * 10 + -0x30 + *(**(iVar6 + 8) + iVar4 * 2);\n                    }\n                }\n                else {\n                    if ((uVar2 != 0x4d) && (uVar2 != 0x6d)) goto code_r0x0047f3e8;\n                    uStack104 = uStack104 | 1;\n                    uVar5 = uStack100;\n                }\n                uStack100 = uVar5;\n                iVar4 = iVar4 + 1;\n            }\n        }\n    }\n    else {\n        iStack88 = 0;\n    }\ncode_r0x0047f2d3:\n    iVar4 = *(*(arg_8h + 4) + 8);\n    cVar3 = fcn.00401fb9(0x29);\n    if (cVar3 == '\\0') {\n        fcn.00408e90();\n        if (&stack0xffffffb8 != *(iVar4 + 8)) {\n            fcn.0040c1c3(*(iVar4 + 8));\n        }\n    }\n    else {\n        fcn.0040bfbf();\n    }\ncode_r0x0047f43e:\n    iVar4 = *(*(arg_8h + 4) + 4);\n    cVar3 = fcn.00401fb9(0x47f44d);\n    if (cVar3 == '\\0') {\n        fcn.00408e90();\n        if (&stack0xffffffd8 != *(iVar4 + 8)) {\n            fcn.0040c1c3(*(iVar4 + 8));\n        }\n    }\n    else {\n        fcn.0040bfbf();\n    }\n    iVar4 = **(arg_8h + 4);\n    cVar3 = fcn.00401fb9(0x47f482);\n    if (cVar3 == '\\0') {\n        fcn.00408e90();\n        if (&stack0xffffffb0 != *(iVar4 + 8)) {\n            arg_8h_00 = *(iVar4 + 8);\n            goto code_r0x0047f4a8;\n        }\n    }\n    else {\n        arg_8h_00 = in_ECX + 0x2e;\n        if (&stack0xffffffb0 != arg_8h_00) {\ncode_r0x0047f4a8:\n            fcn.0040c1c3(arg_8h_00);\n        }\n    }\n    if (uStack124 < 7) {\n        uStack104 = uStack104 | 0xc0;\n    }\n    iVar4 = fcn.0046e186(uStack120, uStack116);\n    if (iVar4 == 0) {\n        iVar6 = *(*in_ECX + 4);\n        iVar4 = *(iVar6 + 8 + in_ECX);\n        if (*(iVar6 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 4;\ncode_r0x0047f402:\n        iVar4 = *(iVar6 + 8 + in_ECX);\n        cVar3 = *(iVar6 + 0xd + in_ECX);\ncode_r0x0047f40b:\n        if (cVar3 != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x18) = 0;\n    }\n    else {\n        *0x4d1398 = &stack0xffffff88;\n        iVar4 = (*_sym.imp.USER32.dll_DialogBoxParamW)(*0x4d1358, 1000, unaff_ESI, fcn.00465df6, 0);\n        *0x4d1398 = NULL;\n        if (iVar4 == 1) {\n            fcn.00407c5d(&stack0xffffffbc);\n            goto code_r0x0047f5ea;\n        }\n        if (iVar4 != 2) {\n            iVar6 = *(*in_ECX + 4);\n            cVar3 = *(in_ECX + iVar6 + 0xd);\n            iVar7 = *(in_ECX + iVar6 + 8);\n            if (iVar4 == 3) {\n                if (cVar3 != '\\0') {\n                    iVar7 = *(iVar7 + 0x38);\n                }\n                *(iVar7 + 0x14) = 2;\n            }\n            else {\n                if (cVar3 != '\\0') {\n                    iVar7 = *(iVar7 + 0x38);\n                }\n                *(iVar7 + 0x14) = 3;\n            }\n            iVar4 = *(in_ECX + iVar6 + 8);\n            cVar3 = *(in_ECX + iVar6 + 0xd);\n            goto code_r0x0047f40b;\n        }\n        iVar4 = *(*in_ECX + 4);\n        iVar6 = *(iVar4 + 8 + in_ECX);\n        if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x14) = 1;\n        iVar6 = *(iVar4 + 8 + in_ECX);\n        if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x18) = 0;\n    }\n    fcn.0040b5c1(0x49d0d0);\ncode_r0x0047f5ea:\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 2888
    },
    "0047f7ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047f7ac(int32_t arg_8h, int32_t **arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t *arg_8h_00;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint *puVar4;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    puVar4 = **(arg_8h + 4);\n    if (puVar4[3] == 6) {\n        puVar4 = *puVar4;\n    }\n    arg_8h_00 = (*(arg_8h + 4))[1];\n    if (arg_8h_00[3] == 6) {\n        arg_8h_00 = *arg_8h_00;\n    }\n    if ((puVar4[3] == 0xf) &&\n       (var_8h = in_ECX,  var_4h = in_ECX,  cVar2 = fcn.0046b356(arg_8h_00, &var_8h),  cVar2 != '\\0')) {\n        fcn.0040e8a0();\n        *arg_ch = var_8h;\n        arg_ch[3] = 0x2;\n        arg_ch[1] = var_4h;\n        return 0;\n    }\n    fcn.0040e8a0();\n    *arg_ch = NULL;\n    arg_ch[3] = 0x1;\n    iVar1 = *(*in_ECX + 4);\n    iVar3 = *(iVar1 + 8 + in_ECX);\n    if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n        iVar3 = *(iVar3 + 0x38);\n    }\n    *(iVar3 + 0x14) = 1;\n    iVar3 = *(iVar1 + 8 + in_ECX);\n    if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n        iVar3 = *(iVar3 + 0x38);\n    }\n    *(iVar3 + 0x18) = 0;\n    return 0;\n}\n",
        "token_count": 488
    },
    "0047f847": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047f847(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *arg_8h_00;\n    uint *puVar3;\n    uint var_4h;\n    \n    puVar3 = **(arg_8h + 4);\n    if (puVar3[3] == 6) {\n        puVar3 = *puVar3;\n    }\n    arg_8h_00 = (*(arg_8h + 4))[1];\n    if (arg_8h_00[3] == 6) {\n        arg_8h_00 = *arg_8h_00;\n    }\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    if (puVar3[3] == 0xf) {\n        iVar1 = fcn.0046b412(arg_8h_00);\n        if (iVar1 != 0) {\n            fcn.0040e8a0();\n            arg_ch[3] = 1;\n            *arg_ch = 1;\n        }\n    }\n    else {\n        iVar1 = *(*in_ECX + 4);\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x14) = 1;\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x18) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 424
    },
    "0047f97f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047f97f(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t *arg_8h_00;\n    uint *puVar4;\n    uint var_4h;\n    \n    puVar4 = **(arg_8h + 4);\n    if (puVar4[3] == 6) {\n        puVar4 = *puVar4;\n    }\n    arg_8h_00 = (*(arg_8h + 4))[1];\n    if (arg_8h_00[3] == 6) {\n        arg_8h_00 = *arg_8h_00;\n    }\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    if (puVar4[3] == 0xf) {\n        cVar2 = fcn.0046b993(arg_8h_00);\n        if (cVar2 != '\\0') {\n            fcn.0040e8a0();\n            arg_ch[3] = 1;\n            *arg_ch = 1;\n        }\n    }\n    else {\n        iVar1 = *(*in_ECX + 4);\n        iVar3 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 1;\n        iVar3 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 433
    },
    "0047fe92": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047fe92(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    int32_t var_20h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetCursorPos)(&var_8h);\n    uVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    fcn.0047e40c(in_ECX[0x42], &var_10h, uVar2);\n    var_8h = var_8h - var_10h;\n    var_4h = var_4h - var_ch;\n    if (*(arg_8h + 8) == 0) {\n        uVar2 = fcn.00407d93();\n        fcn.004083e0(uVar2, 1);\n        var_20h = var_8h;\n        var_18h = 0;\n        var_14h = 1;\n        fcn.00408a30(uVar2, &var_20h, 1);\n        fcn.0040e8a0();\n        var_20h = var_4h;\n        var_18h = 0;\n        var_14h = 1;\n        fcn.00408a30(uVar2, &var_20h, 1);\n        fcn.0040e8a0();\n    }\n    else {\n        cVar1 = fcn.0046ff5f();\n        if (cVar1 == '\\0') {\n            iVar4 = *(*in_ECX + 4);\n            iVar3 = *(iVar4 + 8 + in_ECX);\n            if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x14) = 1;\n            iVar3 = *(iVar4 + 8 + in_ECX);\n            if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x18) = 0;\n        }\n        else {\n            iVar3 = fcn.0040ce67();\n            iVar4 = var_8h;\n            if (iVar3 == 0) {\n                fcn.0040e8a0();\n                arg_ch[3] = 1;\n            }\n            else {\n                iVar3 = fcn.0040ce67();\n                iVar4 = var_4h;\n                if (iVar3 != 1) {\n                    return 0;\n                }\n                fcn.0040e8a0();\n                arg_ch[3] = 1;\n            }\n            *arg_ch = iVar4;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 686
    },
    "00480482": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00480482(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint32_t unaff_EBX;\n    uint uVar5;\n    uchar *puVar6;\n    uint32_t uVar7;\n    int32_t *piStack444;\n    uint uStack436;\n    uint uStack432;\n    uchar auStack408 [404];\n    \n    uVar7 = *(arg_8h + 8);\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    if ((1 < uVar7) && (iVar1 = fcn.0040ce67(),  0 < iVar1)) {\n        fcn.0040ce67();\n    }\n    puVar6 = auStack408;\n    uVar5 = 0x101;\n    iVar1 = (*_sym.imp.WSOCK32.dll_WSAStartup)(0x101, puVar6);\n    if (iVar1 != 0) {\n        iVar1 = *(*in_ECX + 4);\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x14) = 4;\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x18) = 0;\n        return 0;\n    }\n    fcn.0040b443();\n    fcn.00408e90();\n    fcn.0041f7a8();\n    iVar1 = (*_sym.imp.WSOCK32.dll_inet_addr)(uStack432);\n    iVar2 = (*_sym.imp.WSOCK32.dll_gethostbyname)(uStack436);\n    if ((iVar2 == 0) || (iVar3 = (*_sym.imp.IPHLPAPI.DLL_IcmpCreateFile)(),  iVar3 == -1)) {\n        iVar1 = *(*in_ECX + 4);\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x14) = 4;\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x18) = 0;\n        goto code_r0x0048070a;\n    }\n    uVar7 = unaff_EBX & 0xffffff00 | str.Ping[4];\n    uVar4 = fcn.0041fd8b(0x29);\n    fcn.004070c2(uVar4);\n    if (iVar1 == -1) {\n        uVar4 = 0;\n        iVar1 = (*_sym.imp.IPHLPAPI.DLL_IcmpSendEcho)(puVar6, ***(uVar7 + 0xc), &stack0xfffffe30, 5, 0, iVar2);\n    }\n    else {\n        uVar4 = 0;\n        iVar3 = 5;\n        iVar1 = (*_sym.imp.IPHLPAPI.DLL_IcmpSendEcho)(puVar6, iVar1, &stack0xfffffe30, 5, 0, iVar2, 0x29, uVar5);\n        iVar2 = iVar3;\n    }\n    if (iVar1 == 0) {\ncode_r0x00480678:\n        iVar1 = *(*in_ECX + 4);\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x14) = 2;\ncode_r0x004806ae:\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x18) = 0;\n    }\n    else {\n        uVar7 = *(iVar2 + 4);\n        if (uVar7 != 0) {\n            if (uVar7 < 0x2afa) {\ncode_r0x00480694:\n                iVar1 = *(*in_ECX + 4);\n                iVar2 = *(iVar1 + 8 + in_ECX);\n                if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                    iVar2 = *(iVar2 + 0x38);\n                }\n                *(iVar2 + 0x14) = 4;\n            }\n            else {\n                if (uVar7 < 0x2afe) goto code_r0x00480678;\n                if (uVar7 == 0x2b02) {\n                    iVar1 = *(*in_ECX + 4);\n                    iVar2 = *(iVar1 + 8 + in_ECX);\n                    if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                        iVar2 = *(iVar2 + 0x38);\n                    }\n                    *(iVar2 + 0x14) = 1;\n                }\n                else {\n                    if (uVar7 != 0x2b0a) goto code_r0x00480694;\n                    iVar1 = *(*in_ECX + 4);\n                    iVar2 = *(iVar1 + 8 + in_ECX);\n                    if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                        iVar2 = *(iVar2 + 0x38);\n                    }\n                    *(iVar2 + 0x14) = 3;\n                }\n            }\n            goto code_r0x004806ae;\n        }\n        iVar1 = *(iVar2 + 8);\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        if (iVar1 == 0) {\n            *arg_ch = 1;\n        }\n        else {\n            *arg_ch = iVar1;\n        }\n    }\n    (*_sym.imp.IPHLPAPI.DLL_IcmpCloseHandle)(uVar4);\n    (*_sym.imp.WSOCK32.dll_WSACleanup)();\n    *piStack444 = *piStack444 + -1;\n    if (*piStack444 == 0) {\n        uVar5 = 4;\n        fcn.0041fd4d(piStack444);\n        fcn.0041fd94(puVar6, piStack444, uVar5);\n    }\ncode_r0x0048070a:\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 1584
    },
    "0048071e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0048071e(int32_t arg_8h, double *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    float10 fVar5;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_10h;\n    double dStack24;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = arg_8h;\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    *(arg_ch + 0xc) = 1;\n    var_8h = 0;\n    uVar1 = *(arg_8h + 8);\n    if (6 < uVar1) {\n        var_8h = fcn.0040ce67();\n        uVar1 = *(arg_8h + 8);\n    }\n    arg_8h = 1;\n    if (4 < uVar1) {\n        iVar2 = fcn.0040ce67();\n        if (1 < iVar2) {\n            arg_8h = fcn.0040ce67();\n        }\n    }\n    if (5 < *(iVar4 + 8)) {\n        uVar3 = fcn.00471dda();\n        iVar4 = (*_sym.imp.USER32.dll_IsWindow)(uVar3);\n        if (iVar4 != 0) {\n            var_4h = fcn.00471dda();\n            goto code_r0x004807b1;\n        }\n    }\n    var_4h = (*_sym.imp.USER32.dll_GetForegroundWindow)();\ncode_r0x004807b1:\n    iVar4 = fcn.0040ce67();\n    var_24h = iVar4;\n    var_20h = fcn.0040ce67();\n    iVar2 = fcn.0040ce67();\n    var_1ch = iVar2;\n    var_18h = fcn.0040ce67();\n    iVar4 = fcn.00428f54(iVar2 - iVar4);\n    iVar2 = fcn.00482483(var_4h, &var_24h, &var_ch);\n    if (iVar2 != 0) {\n        if (var_8h == 1) {\n            fVar5 = fcn.004823e8(iVar2, var_ch, iVar4 + 1, arg_8h);\n        }\n        else {\n            fVar5 = fcn.00482316(iVar2, var_ch, iVar4 + 1, arg_8h);\n        }\n        dStack24 = fVar5;\n        fcn.0040e8a0();\n        *(arg_ch + 0xc) = 3;\n        *arg_ch = dStack24;\n        fcn.0041fd94(iVar2);\n    }\n    return 0;\n}\n",
        "token_count": 669
    },
    "0048091e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0048091e(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    int32_t *piVar5;\n    int32_t *in_ECX;\n    bool bVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    int32_t *var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    char var_2h;\n    uint var_1h;\n    \n    var_30h = in_ECX;\n    var_50h = fcn.0040ce67();\n    var_4ch = fcn.0040ce67();\n    iVar2 = fcn.0040ce67();\n    var_48h = iVar2;\n    var_44h = fcn.0040ce67();\n    var_1ch = var_44h;\n    if (7 < *(arg_8h + 8)) {\n        uVar3 = fcn.00471dda();\n        iVar4 = (*_sym.imp.USER32.dll_IsWindow)(uVar3);\n        if (iVar4 != 0) {\n            uVar3 = fcn.00471dda();\n            goto code_r0x0048099b;\n        }\n    }\n    uVar3 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\ncode_r0x0048099b:\n    fcn.0047e40c(in_ECX[0x43], &var_40h, uVar3);\n    if ((*(arg_8h + 8) < 7) || (iVar4 = fcn.0040ce67(),  iVar4 < 2)) {\n        var_8h = 1;\n    }\n    else {\n        var_8h = fcn.0040ce67();\n    }\n    if (*(arg_8h + 8) < 6) {\n        arg_ch_00 = 0;\n    }\n    else {\n        arg_ch_00 = fcn.0040ce67();\n    }\n    arg_8h_00 = fcn.0040ce67();\n    fcn.0047e2b3(arg_8h_00, arg_ch_00);\n    var_1h._0_1_ = iVar2 < var_50h;\n    var_2h = var_1ch < var_4ch;\n    var_20h = fcn.00428f54(var_1ch - var_4ch);\n    var_20h = var_20h + 1;\n    iVar2 = fcn.00428f54(iVar2 - var_50h);\n    iVar2 = iVar2 + 1;\n    var_2ch = iVar2;\n    var_1ch = fcn.00482483(uVar3, &var_50h, &var_28h);\n    if (var_1ch != 0) {\n        var_ch = 0;\n        bVar6 = false;\n        iVar4 = var_44h;\n        do {\n            var_10h = iVar4;\n            if (var_20h <= var_ch) break;\n            iVar7 = iVar2 * 4 * var_ch;\n            var_28h = iVar2 * 4 + iVar7;\n            iVar8 = iVar7;\n            var_24h = iVar7;\n            iVar2 = var_2ch;\n            for (; (var_2ch = iVar2,  var_18h = iVar7,  !bVar6 && (iVar7 < var_28h)); iVar7 = iVar7 + var_8h * 4) {\n                cVar1 = fcn.004821ae(var_1ch + iVar7);\n                if (cVar1 != '\\0') {\n                    bVar6 = true;\n                    iVar2 = (iVar7 - iVar8) / 4;\n                    var_14h = fcn.00407d93();\n                    fcn.004083e0(var_14h, 1);\n                    if (var_1h == '\\0') {\n                        iVar2 = var_50h + iVar2;\n                    }\n                    else {\n                        iVar2 = var_48h - iVar2;\n                    }\n                    iVar2 = iVar2 - var_40h;\n                    piVar5 = fcn.00411df0(var_14h, 2, 1);\n                    fcn.0040e8a0();\n                    *piVar5 = iVar2;\n                    piVar5[3] = 1;\n                    iVar2 = iVar4;\n                    if (var_2h == '\\0') {\n                        iVar2 = var_ch + var_4ch;\n                    }\n                    iVar2 = iVar2 - var_3ch;\n                    piVar5 = fcn.00411df0(var_14h, 2, 1);\n                    fcn.0040e8a0();\n                    *piVar5 = iVar2;\n                    piVar5[3] = 1;\n                    iVar7 = var_18h;\n                    iVar8 = var_24h;\n                }\n                iVar2 = var_2ch;\n            }\n            var_ch = var_ch + var_8h;\n            iVar4 = var_10h - var_8h;\n            var_10h = iVar4;\n        } while (!bVar6);\n        fcn.0041fd94(var_1ch);\n        in_ECX = var_30h;\n        if (bVar6) {\n            return 0;\n        }\n    }\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iVar2 = *(*in_ECX + 4);\n    iVar4 = *(iVar2 + 8 + in_ECX);\n    if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n        iVar4 = *(iVar4 + 0x38);\n    }\n    *(iVar4 + 0x14) = 1;\n    iVar4 = *(iVar2 + 8 + in_ECX);\n    if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n        iVar4 = *(iVar4 + 0x38);\n    }\n    *(iVar4 + 0x18) = 0;\n    return 0;\n}\n",
        "token_count": 1552
    },
    "00480bfc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00480bfc(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar1 = *(arg_8h + 8);\n    if (*0x4d1374 != 0) {\n        iVar2 = fcn.0040ce67();\n        if ((-1 < iVar2) && (iVar2 = fcn.0040ce67(),  iVar2 < 0x65)) {\n            uVar3 = fcn.0040ce67(0);\n            (*_sym.imp.USER32.dll_SendMessageW)(*0x4d1374, 0x402, uVar3);\n        }\n        if (1 < uVar1) {\n            iVar2 = *(*(arg_8h + 4) + 4);\n            fcn.00408e90();\n            if (***(iVar2 + 8) != 0) {\n                iVar2 = *(*(arg_8h + 4) + 4);\n                fcn.00408e90();\n                (*_sym.imp.USER32.dll_SendMessageW)(*0x4d136c, 0xc, 0, **(iVar2 + 8));\n            }\n            if (2 < uVar1) {\n                iVar2 = *(*(arg_8h + 4) + 8);\n                fcn.00408e90();\n                (*_sym.imp.USER32.dll_SendMessageW)(*0x4d1370, 0xc, 0, **(iVar2 + 8));\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 357
    },
    "00480d22": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00480d22(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *in_ECX;\n    uint arg_ch_00;\n    \n    uVar2 = fcn.0040ce67();\n    iVar1 = *(*in_ECX + 4);\n    iVar3 = *(iVar1 + 8 + in_ECX);\n    if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n        iVar3 = *(iVar3 + 0x38);\n    }\n    *(iVar3 + 0x14) = uVar2;\n    iVar3 = *(iVar1 + 8 + in_ECX);\n    if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n        iVar3 = *(iVar3 + 0x38);\n    }\n    *(iVar3 + 0x18) = 1;\n    uVar4 = *(arg_8h + 8);\n    if (1 < uVar4) {\n        arg_ch_00 = 1;\n        uVar2 = fcn.0040ce67();\n        fcn.00407cb4(uVar2, arg_ch_00);\n        uVar4 = *(arg_8h + 8);\n    }\n    if (2 < uVar4) {\n        fcn.0040c5e7(*(*(arg_8h + 4) + 8));\n    }\n    return 0;\n}\n",
        "token_count": 342
    },
    "00480d9e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00480d9e(int32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint arg_ch_00;\n    \n    arg_ch_00 = 1;\n    arg_8h_00 = fcn.0040ce67();\n    fcn.00407cb4(arg_8h_00, arg_ch_00);\n    if (1 < *(arg_8h + 8)) {\n        fcn.0040c5e7(*(*(arg_8h + 4) + 4));\n    }\n    return 0;\n}\n",
        "token_count": 134
    },
    "00480e32": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00480e32(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    \n    uVar2 = fcn.0040ce67();\n    if (uVar2 < 0x65) {\n        uVar2 = (uVar2 * 0xffff) / 100 & 0xffff;\n        (*_sym.imp.WINMM.dll_waveOutSetVolume)(0, uVar2 << 0x10 | uVar2);\n    }\n    else {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        iVar1 = *(*in_ECX + 4);\n        iVar3 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 1;\n        iVar3 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 312
    },
    "00480f72": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00480f72(uint arg_8h, uchar *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uchar uVar4;\n    \n    uVar1 = fcn.0040ce67();\n    iVar2 = (*_sym.imp.WSOCK32.dll_closesocket)(uVar1);\n    if (iVar2 == 0) {\n        uVar4 = 1;\n    }\n    else {\n        uVar1 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        iVar2 = *(*in_ECX + 4);\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = uVar1;\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        uVar4 = 0;\n        *(iVar3 + 0x18) = 0;\n    }\n    fcn.0040e8a0();\n    *arg_ch = uVar4;\n    *(arg_ch + 0xc) = 9;\n    return 0;\n}\n",
        "token_count": 323
    },
    "00480fdf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00480fdf(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint arg_10h;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    int32_t *piVar5;\n    uint var_118h;\n    uint var_14h;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.00408e90();\n    uVar3 = *(iVar2 + 8);\n    arg_10h = fcn.0040ce67();\n    cVar1 = fcn.00482f75(&var_14h, uVar3, arg_10h);\n    piVar5 = arg_ch;\n    if (cVar1 == '\\0') {\n        fcn.0040e8a0();\n        *piVar5 = -1;\n        piVar5[3] = 1;\n        return 0;\n    }\n    iVar2 = (*_sym.imp.WSOCK32.dll_socket)(2, 1, 6);\n    if (iVar2 == -1) {\n        uVar3 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        piVar5 = arg_ch;\n        iVar2 = *(*in_ECX + 4);\n        iVar4 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = uVar3;\n        iVar4 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x18) = 0;\n        fcn.0040e8a0();\n        piVar5[3] = 1;\n        *piVar5 = -1;\n        return 0;\n    }\n    arg_8h = 0;\n    if (in_ECX[0x114] != 0) {\n        arg_8h = 1;\n        (*_sym.imp.WSOCK32.dll_ioctlsocket)(iVar2, 0x8004667e, &arg_8h);\n    }\n    iVar4 = (*_sym.imp.WSOCK32.dll_connect)(iVar2, &var_14h, 0x10);\n    if (iVar4 != 0) {\n        iVar4 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        if (iVar4 == 0x2733) {\n            iVar4 = fcn.00483070(iVar2, &var_118h, in_ECX[0x114], 1);\n        }\n        else {\n            iVar4 = 0;\n        }\n        piVar5 = arg_ch;\n        if (iVar4 < 1) {\n            (*_sym.imp.WSOCK32.dll_closesocket)(iVar2);\n            iVar2 = -1;\n            goto code_r0x004810d7;\n        }\n    }\n    piVar5 = arg_ch;\n    arg_8h = 0;\n    (*_sym.imp.WSOCK32.dll_ioctlsocket)(iVar2, 0x8004667e, &arg_8h);\ncode_r0x004810d7:\n    fcn.0040e8a0();\n    piVar5[3] = 1;\n    *piVar5 = iVar2;\n    return 0;\n}\n",
        "token_count": 793
    },
    "0048112b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048112b(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint arg_10h;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    uint var_14h;\n    uint var_4h;\n    \n    var_4h = 5;\n    if (2 < *(arg_8h + 8)) {\n        var_4h = fcn.0040ce67();\n    }\n    iVar2 = **(arg_8h + 4);\n    fcn.00408e90();\n    uVar3 = *(iVar2 + 8);\n    arg_10h = fcn.0040ce67();\n    cVar1 = fcn.00482f75(&var_14h, uVar3, arg_10h);\n    if (cVar1 != '\\0') {\n        iVar2 = (*_sym.imp.WSOCK32.dll_socket)(2, 1, 6);\n        if (iVar2 == -1) {\n            uVar3 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n            iVar2 = *(*in_ECX + 4);\n            iVar4 = *(iVar2 + 8 + in_ECX);\n            if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = uVar3;\n            iVar4 = *(iVar2 + 8 + in_ECX);\n            if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x18) = 0;\n        }\n        else {\n            iVar4 = (*_sym.imp.WSOCK32.dll_bind)(iVar2, &var_14h, 0x10);\n            if (iVar4 != -1) {\n                iVar4 = (*_sym.imp.WSOCK32.dll_listen)(iVar2, var_4h);\n                if (iVar4 != 0) {\n                    uVar3 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n                    iVar4 = *(*in_ECX + 4);\n                    iVar5 = *(iVar4 + 8 + in_ECX);\n                    if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                        iVar5 = *(iVar5 + 0x38);\n                    }\n                    *(iVar5 + 0x14) = uVar3;\n                    iVar5 = *(iVar4 + 8 + in_ECX);\n                    if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                        iVar5 = *(iVar5 + 0x38);\n                    }\n                    *(iVar5 + 0x18) = 0;\n                    (*_sym.imp.WSOCK32.dll_closesocket)(iVar2);\n                    iVar2 = -1;\n                }\n                fcn.0040e8a0();\n                arg_ch[3] = 1;\n                *arg_ch = iVar2;\n                return 0;\n            }\n            uVar3 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n            iVar4 = *(*in_ECX + 4);\n            iVar5 = *(iVar4 + 8 + in_ECX);\n            if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                iVar5 = *(iVar5 + 0x38);\n            }\n            *(iVar5 + 0x14) = uVar3;\n            iVar5 = *(iVar4 + 8 + in_ECX);\n            if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                iVar5 = *(iVar5 + 0x38);\n            }\n            *(iVar5 + 0x18) = 0;\n            (*_sym.imp.WSOCK32.dll_closesocket)(iVar2);\n        }\n    }\n    fcn.0040e8a0();\n    *arg_ch = -1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 920
    },
    "00481288": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00481288(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_24h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.0040b443();\n    fcn.00408e90();\n    fcn.0041f7a8();\n    iVar1 = (*_sym.imp.WSOCK32.dll_gethostbyname)(var_14h);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        iVar1 = *(*in_ECX + 4);\n        iVar3 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = uVar2;\n        iVar3 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n        fcn.0040b5c1(0x49d0d0);\n    }\n    else {\n        fcn.00420db0(&var_4h, **(iVar1 + 0xc), 4);\n        uVar2 = (*_sym.imp.WSOCK32.dll_inet_ntoa)(var_4h);\n        fcn.004831c1(uVar2);\n        fcn.0040c25d();\n        fcn.0048314b();\n        fcn.00407c5d(&var_24h);\n        fcn.0040b1ff();\n    }\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 439
    },
    "0048135a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048135a(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    uint var_130h;\n    uint var_2ch;\n    uint var_1ch;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0040ce67();\n    var_4h = iVar1;\n    iVar2 = fcn.0040ce67();\n    fcn.0040b5c1(0x49d0d0);\n    if (iVar1 == -1) {\n        iVar1 = *(*in_ECX + 4);\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x14) = 0xffffffff;\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x18) = 0;\n        return 0;\n    }\n    iVar1 = fcn.00483070(iVar1, &var_130h, in_ECX[0x114], 0);\n    if (iVar1 < 1) {\n        return 0;\n    }\n    uVar3 = fcn.0041fd8b(iVar2 + 1);\n    fcn.004070c2(uVar3);\n    iVar1 = (*_sym.imp.WSOCK32.dll_recv)(var_4h, var_ch, iVar2, 0);\n    if (iVar1 == -1) {\n        uVar3 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        iVar1 = *(*in_ECX + 4);\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x14) = uVar3;\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x18) = 0;\n    }\n    else if (iVar1 == 0) {\n        fcn.00407cb4(1, 0);\n    }\n    else {\n        if ((*(arg_8h + 8) < 3) || (iVar2 = fcn.0040ce67(),  iVar2 == 0)) {\n            *(var_ch + iVar1) = 0;\n            iVar2 = fcn.00428d10(var_ch);\n            if (iVar2 == iVar1) {\n                fcn.00463930(var_ch);\n                fcn.0040c25d();\n                fcn.0048314b();\n                fcn.00407c5d(&var_1ch);\n                fcn.0040b1ff();\n                fcn.0040b1ff();\n                goto code_r0x004814cf;\n            }\n        }\n        iVar2 = var_ch;\n        iVar4 = iVar1;\n        uVar3 = fcn.00470da3(iVar1);\n        fcn.00420db0(uVar3, iVar1, iVar2, iVar4);\n    }\ncode_r0x004814cf:\n    *var_8h = *var_8h + -1;\n    if (*var_8h == 0) {\n        uVar3 = 4;\n        fcn.0041fd4d(var_8h);\n        fcn.0041fd94(var_ch, var_8h, uVar3);\n    }\n    return 0;\n}\n",
        "token_count": 915
    },
    "004814f1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004814f1(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    ulong uVar4;\n    \n    uVar1 = fcn.0040ce67();\n    fcn.00471db4();\n    uVar4 = fcn.00471e24();\n    iVar2 = (*_sym.imp.WSOCK32.dll_send)(uVar1, uVar4 >> 0x20, uVar4, 0);\n    fcn.0040e8a0();\n    arg_ch[3] = 1;\n    if (iVar2 == -1) {\n        *arg_ch = 0;\n        uVar1 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        iVar2 = *(*in_ECX + 4);\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = uVar1;\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n    }\n    else {\n        *arg_ch = iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 349
    },
    "00481581": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00481581(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    \n    iVar2 = (*_sym.imp.WSOCK32.dll_WSACleanup)();\n    iVar1 = *(*in_ECX + 4);\n    iVar3 = *(iVar1 + 8 + in_ECX);\n    if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n        iVar3 = *(iVar3 + 0x38);\n    }\n    *(iVar3 + 0x14) = iVar2;\n    iVar3 = *(iVar1 + 8 + in_ECX);\n    if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n        iVar3 = *(iVar3 + 0x38);\n    }\n    *(iVar3 + 0x18) = 0;\n    fcn.0040e8a0();\n    *arg_ch = iVar2 == 0;\n    *(arg_ch + 0xc) = 9;\n    return 0;\n}\n",
        "token_count": 250
    },
    "004815da": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004815da(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uchar auStack408 [404];\n    \n    iVar2 = (*_sym.imp.WSOCK32.dll_WSAStartup)(0x202, auStack408);\n    iVar1 = *(*in_ECX + 4);\n    iVar3 = *(iVar1 + 8 + in_ECX);\n    if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n        iVar3 = *(iVar3 + 0x38);\n    }\n    *(iVar3 + 0x14) = iVar2;\n    iVar3 = *(iVar1 + 8 + in_ECX);\n    if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n        iVar3 = *(iVar3 + 0x38);\n    }\n    *(iVar3 + 0x18) = 0;\n    fcn.0040e8a0();\n    *arg_ch = iVar2 == 0;\n    *(arg_ch + 0xc) = 9;\n    return 0;\n}\n",
        "token_count": 266
    },
    "0048172d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048172d(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    int32_t *piVar8;\n    int32_t *in_ECX;\n    uint var_14h;\n    int32_t var_4h;\n    \n    iVar3 = **(arg_8h + 4);\n    fcn.00408e90();\n    uVar4 = *(iVar3 + 8);\n    uVar2 = fcn.0040ce67();\n    cVar1 = fcn.00482f75(&var_14h, uVar4, uVar2);\n    if (cVar1 == '\\0') {\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n    }\n    else {\n        iVar3 = (*_sym.imp.WSOCK32.dll_socket)(2, 2, 0x11);\n        var_4h = iVar3;\n        uVar4 = fcn.00407d93();\n        fcn.004083e0(uVar4, 1);\n        if (iVar3 == -1) {\n            uVar2 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n            iVar3 = *(*in_ECX + 4);\n            iVar5 = *(iVar3 + 8 + in_ECX);\n            if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                iVar5 = *(iVar5 + 0x38);\n            }\n            *(iVar5 + 0x14) = uVar2;\n            iVar5 = *(iVar3 + 8 + in_ECX);\n            if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                iVar5 = *(iVar5 + 0x38);\n            }\n            *(iVar5 + 0x18) = 0;\n        }\n        else {\n            iVar5 = (*_sym.imp.WSOCK32.dll_bind)(iVar3, &var_14h, 0x10);\n            if (iVar5 != -1) {\n                puVar7 = fcn.00411df0(uVar4, 2, 1);\n                fcn.0040e8a0();\n                puVar7[3] = 1;\n                *puVar7 = 0x2b594d1;\n                piVar8 = fcn.00411df0(uVar4, 2, 1);\n                fcn.0040e8a0();\n                piVar8[3] = 1;\n                *piVar8 = var_4h;\n                iVar3 = **(arg_8h + 4);\n                fcn.00408e90();\n                uVar2 = *(iVar3 + 8);\n                fcn.00411df0(uVar4, 2, 1);\n                fcn.00407c5d(uVar2);\n                iVar3 = *(*(arg_8h + 4) + 4);\n                fcn.00408e90();\n                uVar2 = *(iVar3 + 8);\n                fcn.00411df0(uVar4, 2, 1);\n                fcn.00407c5d(uVar2);\n                return 0;\n            }\n            uVar2 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n            iVar5 = *(*in_ECX + 4);\n            iVar6 = *(iVar5 + 8 + in_ECX);\n            if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                iVar6 = *(iVar6 + 0x38);\n            }\n            *(iVar6 + 0x14) = uVar2;\n            iVar6 = *(iVar5 + 8 + in_ECX);\n            if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                iVar6 = *(iVar6 + 0x38);\n            }\n            *(iVar6 + 0x18) = 0;\n            (*_sym.imp.WSOCK32.dll_closesocket)(iVar3);\n        }\n        arg_ch = fcn.00411df0(uVar4, 2, 1);\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n    }\n    *arg_ch = 0xffffffff;\n    return 0;\n}\n",
        "token_count": 984
    },
    "004819fd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004819fd(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t *in_ECX;\n    \n    arg_8h_00 = fcn.00407d93();\n    fcn.004083e0(arg_8h_00, 1);\n    arg_ch = (*_sym.imp.WSOCK32.dll_socket)(2, 2, 0x11);\n    iVar1 = arg_8h;\n    if (arg_ch == -1) {\n        uVar2 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        iVar1 = *(*in_ECX + 4);\n        iVar5 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar5 = *(iVar5 + 0x38);\n        }\n        *(iVar5 + 0x14) = uVar2;\n        iVar5 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar5 = *(iVar5 + 0x38);\n        }\ncode_r0x00481a5c:\n        *(iVar5 + 0x18) = 0;\n        puVar3 = fcn.00411df0(arg_8h_00, 2, 1);\n        fcn.0040e8a0();\n        puVar3[3] = 1;\n        *puVar3 = 0xffffffff;\n    }\n    else {\n        if ((2 < *(arg_8h + 8)) && (uVar4 = fcn.0040ce67(),  (uVar4 & 1) != 0)) {\n            arg_8h = 1;\n            iVar5 = (*_sym.imp.WSOCK32.dll_setsockopt)(arg_ch, 0xffff, 0x20, &arg_8h, 4);\n            if (iVar5 != 0) {\n                uVar2 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n                iVar1 = *(*in_ECX + 4);\n                iVar5 = *(iVar1 + 8 + in_ECX);\n                if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                    iVar5 = *(iVar5 + 0x38);\n                }\n                *(iVar5 + 0x14) = uVar2;\n                iVar5 = *(iVar1 + 8 + in_ECX);\n                if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                    iVar5 = *(iVar5 + 0x38);\n                }\n                goto code_r0x00481a5c;\n            }\n        }\n        puVar3 = fcn.00411df0(arg_8h_00, 2, 1);\n        fcn.0040e8a0();\n        *puVar3 = 0x2b594d1;\n        puVar3[3] = 1;\n        piVar6 = fcn.00411df0(arg_8h_00, 2, 1);\n        fcn.0040e8a0();\n        piVar6[3] = 1;\n        *piVar6 = arg_ch;\n        iVar5 = **(iVar1 + 4);\n        fcn.00408e90();\n        uVar2 = *(iVar5 + 8);\n        fcn.00411df0(arg_8h_00, 2, 1);\n        fcn.00407c5d(uVar2);\n        iVar1 = *(*(iVar1 + 4) + 4);\n        fcn.00408e90();\n        uVar2 = *(iVar1 + 8);\n        fcn.00411df0(arg_8h_00, 2, 1);\n        fcn.00407c5d(uVar2);\n    }\n    return 0;\n}\n",
        "token_count": 918
    },
    "00481b87": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00481b87(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint arg_8h_00;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    int32_t *in_ECX;\n    int32_t unaff_EDI;\n    int32_t arg_8h_01;\n    int32_t *arg_8h_02;\n    int32_t iVar6;\n    uint32_t uStack348;\n    uint32_t uStack344;\n    uint uStack336;\n    uchar auStack320 [2];\n    uint uStack318;\n    uint uStack304;\n    uchar auStack296 [4];\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uchar auStack276 [272];\n    \n    uStack344 = fcn.0040ce67();\n    iVar6 = 0x49d0d0;\n    fcn.0040b5c1(0x49d0d0);\n    if ((**(arg_8h + 4))[3] != 5) {\n        iVar6 = *(*in_ECX + 4);\n        iVar1 = *(iVar6 + 8 + in_ECX);\n        if (*(iVar6 + 0xd + in_ECX) != '\\0') {\n            iVar1 = *(iVar1 + 0x38);\n        }\n        *(iVar1 + 0x14) = 0xfffffffd;\ncode_r0x00481bdc:\n        iVar1 = *(iVar6 + 8 + in_ECX);\n        if (*(iVar6 + 0xd + in_ECX) != '\\0') {\n            iVar1 = *(iVar1 + 0x38);\n        }\n        *(iVar1 + 0x18) = 0;\n        return 0;\n    }\n    uVar3 = ***(arg_8h + 4);\n    iVar1 = fcn.00411df0(uVar3, 1, 1);\n    if (iVar1 == 0) {\n        iVar6 = *(*in_ECX + 4);\n        iVar1 = *(iVar6 + 8 + in_ECX);\n        if (*(iVar6 + 0xd + in_ECX) != '\\0') {\n            iVar1 = *(iVar1 + 0x38);\n        }\n        *(iVar1 + 0x14) = 0xfffffffd;\ncode_r0x00481c22:\n        iVar1 = *(iVar6 + 8 + in_ECX);\n        if (*(iVar6 + 0xd + in_ECX) != '\\0') {\n            iVar1 = *(iVar1 + 0x38);\n        }\n        *(iVar1 + 0x18) = 0;\n        return 0;\n    }\n    iVar1 = fcn.0040ce67();\n    if (iVar1 != 0x2b594d1) {\n        iVar6 = *(*in_ECX + 4);\n        iVar1 = *(iVar6 + 8 + in_ECX);\n        if (*(iVar6 + 0xd + in_ECX) != '\\0') {\n            iVar1 = *(iVar1 + 0x38);\n        }\n        *(iVar1 + 0x14) = 0xfffffffc;\n        goto code_r0x00481c22;\n    }\n    fcn.00411df0(uVar3, 1, 1);\n    iVar1 = fcn.0040ce67();\n    uStack336 = 0x10;\n    uStack292 = 0;\n    uStack288 = 0;\n    uStack284 = 0;\n    uStack280 = 0;\n    if (iVar1 == -1) {\n        iVar6 = *(*in_ECX + 4);\n        iVar1 = *(iVar6 + 8 + in_ECX);\n        if (*(iVar6 + 0xd + in_ECX) != '\\0') {\n            iVar1 = *(iVar1 + 0x38);\n        }\n        *(iVar1 + 0x14) = 0xffffffff;\n        goto code_r0x00481bdc;\n    }\n    arg_8h_02 = NULL;\n    arg_8h_01 = 100;\n    iVar2 = fcn.00483070(iVar1, auStack276, 100, 0);\n    if (iVar2 == -1) {\n        return 0;\n    }\n    uVar3 = fcn.0041fd8b(iVar6 + 1);\n    fcn.004070c2(uVar3);\n    iVar2 = (*_sym.imp.WSOCK32.dll___WSAFDIsSet)(iVar1, auStack296);\n    if (iVar2 == 0) {\n        iVar6 = *(*in_ECX + 4);\n        iVar1 = *(iVar6 + 8 + in_ECX);\n        if (*(iVar6 + 0xd + in_ECX) != '\\0') {\n            iVar1 = *(iVar1 + 0x38);\n        }\n        *(iVar1 + 0x14) = 0xfffffffe;\n        iVar1 = *(iVar6 + 8 + in_ECX);\n        if (*(iVar6 + 0xd + in_ECX) != '\\0') {\n            iVar1 = *(iVar1 + 0x38);\n        }\n        *(iVar1 + 0x18) = 0;\n        goto code_r0x00481eff;\n    }\n    iVar6 = (*_sym.imp.WSOCK32.dll_recvfrom)(iVar1, arg_8h_01, iVar6, 0, auStack320, &stack0xfffffe94);\n    if (iVar6 == -1) {\n        uVar3 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        iVar6 = *(*in_ECX + 4);\n        iVar1 = *(iVar6 + 8 + in_ECX);\n        if (*(iVar6 + 0xd + in_ECX) != '\\0') {\n            iVar1 = *(iVar1 + 0x38);\n        }\n        *(iVar1 + 0x14) = uVar3;\n        iVar1 = *(iVar6 + 8 + in_ECX);\n        if (*(iVar6 + 0xd + in_ECX) != '\\0') {\n            iVar1 = *(iVar1 + 0x38);\n        }\n        *(iVar1 + 0x18) = 0;\n        goto code_r0x00481eff;\n    }\n    if (*(arg_8h + 8) < 3) {\ncode_r0x00481e57:\n        *(arg_8h_01 + iVar6) = 0;\n        iVar1 = fcn.00428d10(arg_8h_01);\n        if (iVar1 == iVar6) {\n            fcn.00407c18(iVar6);\n            fcn.00463930(arg_8h_01);\n            fcn.00408725();\n            fcn.0040b1ff();\n            fcn.00407c5d(&uStack348);\n            fcn.0040b1ff();\n            goto code_r0x00481eff;\n        }\n    }\n    else {\n        iVar1 = iVar6;\n        uStack344 = fcn.0040ce67();\n        uStack344 = uStack344 & 1;\n        uStack348 = fcn.0040ce67();\n        uStack348 = uStack348 & 2;\n        if (uStack348 != 0) {\n            uVar3 = fcn.00407d93();\n            fcn.004083e0(uVar3, 1);\n            fcn.00411df0(uVar3, 2, 1);\n            arg_8h_00 = (*_sym.imp.WSOCK32.dll_inet_ntoa)(uStack304);\n            fcn.00463930(arg_8h_00);\n            fcn.0040c25d();\n            fcn.0048314b();\n            fcn.00407c5d(&uStack348);\n            fcn.0040b1ff();\n            puVar4 = fcn.00411df0(uVar3, 2, 1);\n            uVar5 = (*_sym.imp.WSOCK32.dll_ntohs)(uStack318);\n            fcn.0040e8a0();\n            puVar4[3] = 1;\n            *puVar4 = uVar5 & 0xffff;\n            arg_8h_02 = fcn.00411df0(uVar3, 2, 1);\n            iVar6 = iVar1;\n            arg_8h_01 = unaff_EDI;\n            fcn.0040b1ff();\n        }\n        if (uStack344 == 0) goto code_r0x00481e57;\n    }\n    iVar1 = arg_8h_01;\n    iVar2 = iVar6;\n    uVar3 = fcn.00470da3(iVar6);\n    fcn.00420db0(uVar3, iVar6, iVar1, iVar2);\ncode_r0x00481eff:\n    *arg_8h_02 = *arg_8h_02 + -1;\n    if (*arg_8h_02 != 0) {\n        return 0;\n    }\n    uVar3 = 4;\n    fcn.0041fd4d(arg_8h_02);\n    fcn.0041fd94(arg_8h_01, arg_8h_02, uVar3);\n    return 0;\n}\n",
        "token_count": 2088
    },
    "00481f24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00481f24(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint arg_ch_00;\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_10h;\n    uint uVar4;\n    int32_t *in_ECX;\n    ulong uVar5;\n    uint var_10h;\n    \n    if ((**(arg_8h + 4))[3] == 5) {\n        uVar4 = ***(arg_8h + 4);\n        iVar2 = fcn.00411df0(uVar4, 1, 1);\n        if (iVar2 != 0) {\n            iVar2 = fcn.0040ce67();\n            if (iVar2 == 0x2b594d1) {\n                iVar2 = fcn.00411df0(uVar4, 1, 1);\n                fcn.00408e90();\n                arg_ch_00 = *(iVar2 + 8);\n                fcn.00411df0(uVar4, 1, 1);\n                arg_10h = fcn.0040ce67();\n                cVar1 = fcn.00482f75(&var_10h, arg_ch_00, arg_10h);\n                if (cVar1 == '\\0') {\n                    fcn.0040e8a0();\n                    *arg_ch = -1;\n                    arg_ch[3] = 1;\n                    return 0;\n                }\n                fcn.00411df0(uVar4, 1, 1);\n                uVar4 = fcn.0040ce67();\n                fcn.00471db4();\n                uVar5 = fcn.00471e24();\n                iVar2 = (*_sym.imp.WSOCK32.dll_sendto)(uVar4, uVar5 >> 0x20, uVar5, 0, &var_10h, 0x10);\n                fcn.0040e8a0();\n                arg_ch[3] = 1;\n                if (iVar2 != -1) {\n                    *arg_ch = iVar2;\n                    return 0;\n                }\n                *arg_ch = 0;\n                uVar4 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n                iVar2 = *(*in_ECX + 4);\n                iVar3 = *(iVar2 + 8 + in_ECX);\n                if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                    iVar3 = *(iVar3 + 0x38);\n                }\n                *(iVar3 + 0x14) = uVar4;\n            }\n            else {\n                fcn.0040e8a0();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n                iVar2 = *(*in_ECX + 4);\n                iVar3 = *(iVar2 + 8 + in_ECX);\n                if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                    iVar3 = *(iVar3 + 0x38);\n                }\n                *(iVar3 + 0x14) = 0xfffffffc;\n            }\n            goto code_r0x0048209d;\n        }\n    }\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iVar2 = *(*in_ECX + 4);\n    iVar3 = *(iVar2 + 8 + in_ECX);\n    if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n        iVar3 = *(iVar3 + 0x38);\n    }\n    *(iVar3 + 0x14) = 0xfffffffd;\ncode_r0x0048209d:\n    iVar3 = *(iVar2 + 8 + in_ECX);\n    if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n        iVar3 = *(iVar3 + 0x38);\n    }\n    *(iVar3 + 0x18) = 0;\n    return 0;\n}\n",
        "token_count": 894
    },
    "00482201": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00482201(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t unaff_EBX;\n    int32_t iStack52;\n    int32_t iStack48;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    \n    uVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    fcn.0047e40c(*(in_ECX + 0x108), &iStack40, uVar2);\n    arg_8h = arg_8h + iStack52;\n    arg_ch = arg_ch + iStack48;\n    uVar2 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&iStack36);\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar2);\n    if (arg_8h < 0) {\n        arg_8h = arg_8h + -1;\n    }\n    if (arg_ch < 0) {\n        arg_ch = arg_ch + -1;\n    }\n    if (arg_10h == 0) {\n        (*_sym.imp.USER32.dll_mouse_event)\n                  (0x8001, ((arg_8h + 1) * 0x10000) / iStack36 + -1, ((arg_ch + 1) * 0x10000) / iStack32 + -1, 0, 0);\n        if (arg_14h != '\\0') {\n            fcn.0046e899();\n        }\n    }\n    else {\n        if ((arg_10h < 1) || (100 < arg_10h)) {\n            arg_10h = 10;\n        }\n        (*_sym.imp.USER32.dll_GetCursorPos)(&iStack52);\n        iVar3 = (unaff_EBX * 0xffff) / (iStack40 + -1) + 1;\n        iVar4 = (iStack52 * 0xffff) / (iStack36 + -1) + 1;\n        while( true ) {\n            cVar1 = fcn.0046e6c7(arg_10h, 0x20, &stack0xffffffbc, &stack0xffffffb8);\n            if (cVar1 == '\\0') break;\n            (*_sym.imp.USER32.dll_mouse_event)(0x8001, iVar3, iVar4, 0, 0);\n            fcn.0046e899();\n        }\n    }\n    return;\n}\n",
        "token_count": 592
    },
    "00482638": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00482638(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    ulong uVar12;\n    uint nEscapement;\n    uint var_2ch;\n    int32_t lpRect;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t dwExStyle;\n    \n    var_ch = -1;\n    dwExStyle = 8;\n    var_8h = -1;\n    fcn.0040c25d();\n    if (*0x4d1378 != 0) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(*0x4d1378);\n        *0x4d1378 = 0;\n    }\n    if (arg_10h != 1) {\n        iVar9 = 0;\n        iVar11 = 0;\n        while( true ) {\n            iVar5 = *(*(arg_8h + 4) + 4);\n            uVar12 = fcn.00471e24();\n            if (uVar12 <= iVar11) break;\n            fcn.00408e90();\n            if ((*(**(iVar5 + 8) + iVar11 * 2) == 0xd) ||\n               (iVar5 = *(*(arg_8h + 4) + 4),  fcn.00408e90(),  *(**(iVar5 + 8) + iVar11 * 2) == 0xd)) {\n                iVar9 = 10;\n            }\n            iVar11 = iVar11 + 1;\n        }\n        uVar10 = 0x88c00000;\n        if (2 < arg_ch) {\n            iVar11 = *((uVar12 >> 0x20) + 8);\n            fcn.00408e90();\n            if (&var_2ch != *(iVar11 + 8)) {\n                fcn.0040c1c3(*(iVar11 + 8));\n            }\n        }\n        if (3 < arg_ch) {\n            var_ch = fcn.0040ce67();\n        }\n        if (4 < arg_ch) {\n            var_8h = fcn.0040ce67();\n        }\n        iVar11 = var_8h;\n        if (5 < arg_ch) {\n            uVar4 = fcn.0040ce67();\n            uVar10 = (-((uVar4 & 1) != 0) & 0xff400000) + 0x88c00000;\n            iVar5 = fcn.0040ce67();\n            dwExStyle = ~(iVar5 << 2) & 8;\n            uVar6 = fcn.0040ce67();\n            if ((uVar6 & 0x10) != 0) {\n                uVar10 = uVar10 ^ 0x8000000;\n            }\n        }\n        (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x30, 0, &lpRect, 0);\n        if (var_ch == -1) {\n            var_ch = (var_14h + -300) / 2;\n        }\n        if (iVar11 == -1) {\n            var_8h = (var_10h - (iVar9 + 100)) / 2;\n        }\n        (*_sym.imp.USER32.dll_SetRect)(&lpRect, 0, 0, 300, iVar9 + 100);\n        (*_sym.imp.USER32.dll_AdjustWindowRectEx)(&lpRect, uVar10, 0, dwExStyle);\n        iVar11 = **(arg_8h + 4);\n        fcn.00408e90();\n        pcVar1 = _sym.imp.USER32.dll_CreateWindowExW;\n        *0x4d1378 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                              (dwExStyle, L\"AutoIt v3\", **(iVar11 + 8), uVar10, var_ch, var_8h, var_14h - lpRect, \n                               var_10h - var_18h, *0x4d138c, 0, 0, 0);\n        (*_sym.imp.USER32.dll_GetClientRect)(*0x4d1378, &lpRect);\n        iVar11 = *(*(arg_8h + 4) + 4);\n        fcn.00408e90();\n        *0x4d1370 = (*pcVar1)(0, L\"static\", **(iVar11 + 8), 0x50000000, (var_14h - lpRect) + -0x119, 4, 0x500, \n                              iVar9 + 0x18, *0x4d1378, 0, 0, 0);\n        uVar7 = (*_sym.imp.GDI32.dll_CreateDCW)(L\"DISPLAY\", 0, 0, 0);\n        pcVar1 = _sym.imp.GDI32.dll_GetStockObject;\n        uVar8 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n        (*_sym.imp.GDI32.dll_SelectObject)(uVar7, uVar8);\n        (*_sym.imp.GDI32.dll_GetTextFaceW)(uVar7, 0x40, &nEscapement);\n        iVar11 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar7, 0x5a);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar7);\n        uVar7 = (*_sym.imp.GDI32.dll_CreateFontW)\n                          ((iVar11 * -10) / 0x48, 0, 0, 0, 600, 0, 0, 0, 1, 4, 0, 2, 0, &nEscapement);\n        pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n        (*_sym.imp.USER32.dll_SendMessageW)(*0x4d1370, 0x30, uVar7, 1);\n        pcVar3 = _sym.imp.USER32.dll_CreateWindowExW;\n        *0x4d1374 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                              (0x200, L\"msctls_progress32\", 0, 0x50000001, ((var_14h - lpRect) + -0x104) / 2, \n                               iVar9 + 0x1e, 0x104, 0x14, *0x4d1378, 0, 0, 0);\n        (*pcVar2)(*0x4d1374, 0x401, 0, 0x640000);\n        (*pcVar2)(*0x4d1374, 0x404, 1, 0);\n        *0x4d136c = (*pcVar3)(0, L\"static\", var_2ch, 0x50000000, (var_14h - lpRect) + -0x118, 0x41, 0x500, iVar9 + 0x28\n                              , *0x4d1378, 0, 0, 0);\n        uVar7 = (*pcVar1)(0x11, 1);\n        (*pcVar2)(*0x4d136c, 0x30, uVar7);\n        (*_sym.imp.USER32.dll_ShowWindow)(*0x4d1378, 4);\n    }\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 1747
    },
    "00482a05": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00482a05(int32_t *lpPictDesc, uint32_t lParam, int32_t *nWidth)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint nEscapement;\n    uint var_30h;\n    uint32_t nHeight;\n    int32_t lpRect;\n    int32_t cy;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t lpNumberOfBytesRead;\n    \n    pcVar1 = _sym.imp.GDI32.dll_DeleteObject;\n    var_18h = -1;\n    var_14h = -1;\n    nHeight = 0;\n    var_ch = 500;\n    var_10h = 400;\n    uVar10 = 0x88c00000;\n    lpNumberOfBytesRead = 0x50000081;\n    var_8h = 8;\n    if (*0x4d1380 != 0) {\n        if (*0x4d1384 != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(*0x4d1384);\n            *0x4d1384 = 0;\n        }\n        if (*0x4d137c != 0) {\n            (*pcVar1)(*0x4d137c);\n            *0x4d137c = 0;\n        }\n        (*_sym.imp.USER32.dll_DestroyWindow)(*0x4d1380);\n        *0x4d1380 = 0;\n    }\n    if (nWidth == 0x2) {\n        return 0;\n    }\n    uVar4 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&lpRect);\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar4);\n    piVar2 = lpPictDesc;\n    if ((2 < lParam) && (iVar5 = fcn.0040ce67(),  iVar5 != -1)) {\n        var_ch = fcn.0040ce67();\n    }\n    if ((3 < lParam) && (iVar5 = fcn.0040ce67(),  iVar5 != -1)) {\n        var_10h = fcn.0040ce67();\n    }\n    if (4 < lParam) {\n        var_18h = fcn.0040ce67();\n    }\n    if (5 < lParam) {\n        var_14h = fcn.0040ce67();\n    }\n    if ((6 < lParam) && (iVar5 = fcn.0040ce67(),  iVar5 != -1)) {\n        nHeight = fcn.0040ce67();\n        if ((nWidth == 0x1) && (lpNumberOfBytesRead = ((nHeight & 8) != 0) + 0x50000081,  (nHeight & 4) != 0)) {\n            lpNumberOfBytesRead = (lpNumberOfBytesRead & 0xff) >> 1 & 1 | 0x50000080;\n        }\n        var_8h = ~(nHeight << 2) & 8;\n        uVar10 = ((~nHeight & 1) - 0x1de) * 0x400000;\n        if ((nHeight & 0x10) != 0) {\n            uVar10 = uVar10 ^ 0x8000000;\n        }\n    }\n    uVar3 = var_8h;\n    if (var_18h == -1) {\n        var_18h = (var_20h - var_ch) / 2;\n    }\n    if (var_14h == -1) {\n        var_14h = (var_1ch - var_10h) / 2;\n    }\n    (*_sym.imp.USER32.dll_SetRect)(&lpRect, 0, 0, var_ch, var_10h);\n    (*_sym.imp.USER32.dll_AdjustWindowRectEx)(&lpRect, uVar10, 0, uVar3);\n    iVar5 = *piVar2[1];\n    fcn.00408e90();\n    pcVar1 = _sym.imp.USER32.dll_CreateWindowExW;\n    *0x4d1380 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                          (var_8h, L\"AutoIt v3\", **(iVar5 + 8), uVar10, var_18h, var_14h, var_20h - lpRect, var_1ch - cy\n                           , *0x4d138c, 0, 0, 0);\n    (*_sym.imp.USER32.dll_GetClientRect)(*0x4d1380, &lpRect);\n    if (nWidth == NULL) {\n        nWidth = NULL;\n        nHeight = (*pcVar1)(0, L\"static\", 0, 0x5000000e, 0, 0, var_20h - lpRect, var_1ch - cy, *0x4d1380, 0, 0, 0);\n        iVar5 = *(piVar2[1] + 4);\n        fcn.00408e90();\n        iVar5 = (*_sym.imp.KERNEL32.dll_CreateFileW)(**(iVar5 + 8), 0x80000000, 0, 0, 3, 0, 0);\n        if (iVar5 == -1) {\n            return 0;\n        }\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar5, 0);\n        uVar6 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(2, uVar4);\n        uVar7 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar6);\n        iVar8 = (*_sym.imp.KERNEL32.dll_ReadFile)(iVar5, uVar7, uVar4, &lpNumberOfBytesRead, 0);\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar6);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar5);\n        if (iVar8 == 0) {\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar6);\n            return 0;\n        }\n        (*_sym.imp.ole32.dll_CreateStreamOnHGlobal)(uVar6, 1, &lpPictDesc);\n        (*_sym.imp.OLEAUT32.dll_OleCreatePictureIndirect)(lpPictDesc, 0, 0, 0x49fc54, &nWidth);\n        (**(*lpPictDesc + 8))(lpPictDesc);\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar6);\n        if (nWidth == NULL) {\n            return 0;\n        }\n        (**(*nWidth + 0xc))(nWidth, &lParam);\n        lParam = (*_sym.imp.USER32.dll_CopyImage)(lParam, 0, 0, 0, 0x2000);\n        (**(*nWidth + 8))(nWidth);\n        uVar10 = nHeight;\n        (*_sym.imp.USER32.dll_SendMessageW)(nHeight, 0x172, 0, lParam);\n        *0x4d137c = lParam;\n        (*_sym.imp.USER32.dll_SetWindowPos)(uVar10, 0, 0, 0, var_20h - lpRect, var_1ch - cy, 0x20);\n    }\n    else {\n        nWidth = (var_20h - lpRect) + -0x16;\n        iVar8 = (var_1ch - cy) + -0x16;\n        iVar5 = *(piVar2[1] + 4);\n        var_ch = iVar8;\n        fcn.00408e90();\n        iVar5 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                          (0, L\"static\", **(iVar5 + 8), lpNumberOfBytesRead, 0xb, 0xb, nWidth, iVar8, *0x4d1380, 0, 0, 0\n                          );\n        var_10h = iVar5;\n        uVar4 = (*_sym.imp.GDI32.dll_CreateDCW)(L\"DISPLAY\", 0, 0, 0);\n        uVar6 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n        (*_sym.imp.GDI32.dll_SelectObject)(uVar4, uVar6);\n        (*_sym.imp.GDI32.dll_GetTextFaceW)(uVar4, 0x40, &nEscapement);\n        lpNumberOfBytesRead = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar4, 0x5a);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar4);\n        if (7 < lParam) {\n            iVar8 = *(piVar2[1] + 0x1c);\n            fcn.00408e90();\n            iVar8 = fcn.004248f3(**(iVar8 + 8));\n            if (iVar8 != 0) {\n                iVar8 = *(piVar2[1] + 0x1c);\n                fcn.00408e90();\n                fcn.00424913(&nEscapement, **(iVar8 + 8));\n            }\n        }\n        if ((lParam < 9) || (iVar8 = fcn.0040ce67(),  iVar8 < 6)) {\n            iVar8 = 0xc;\n        }\n        else {\n            iVar8 = fcn.0040ce67();\n        }\n        if (((lParam < 10) || (iVar9 = fcn.0040ce67(),  iVar9 < 0)) || (iVar9 = fcn.0040ce67(),  1000 < iVar9)) {\n            uVar4 = 400;\n        }\n        else {\n            uVar4 = fcn.0040ce67();\n        }\n        *0x4d1384 = (*_sym.imp.GDI32.dll_CreateFontW)\n                              ((lpNumberOfBytesRead * iVar8) / -0x48, 0, 0, 0, uVar4, 0, 0, 0, 1, 4, 0, 2, 0, \n                               &nEscapement);\n        (*_sym.imp.USER32.dll_SendMessageW)(iVar5, 0x30, *0x4d1384, 1);\n        if ((nHeight & 0x20) != 0) {\n            uVar4 = (*_sym.imp.USER32.dll_GetDC)(iVar5);\n            uVar6 = (*_sym.imp.GDI32.dll_SelectObject)(uVar4, *0x4d1384);\n            fcn.00408e90();\n            fcn.0046deb3(&var_30h);\n            (*_sym.imp.GDI32.dll_SelectObject)(uVar4, uVar6);\n            iVar5 = var_10h;\n            (*_sym.imp.USER32.dll_ReleaseDC)(var_10h, uVar4);\n            (*_sym.imp.USER32.dll_MoveWindow)(iVar5, 0xb, (var_ch - nHeight) / 2 + 0xb, nWidth, nHeight, 1);\n        }\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(*0x4d1380, 4);\n    return 0;\n}\n",
        "token_count": 2579
    },
    "00482f75": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00482f75(ushort *arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    char16_t cVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    char16_t *pcVar6;\n    uint cp;\n    uint var_4h;\n    \n    *arg_8h = 2;\n    fcn.0040b443();\n    fcn.00483282();\n    iVar3 = (*_sym.imp.WSOCK32.dll_inet_addr)(cp);\n    fcn.0040b1ff();\n    if (iVar3 == -1) {\n        iVar5 = arg_ch[1];\n        pcVar6 = L\"255.255.255.255\";\n        iVar4 = fcn.004248f3(L\"255.255.255.255\");\n        if (iVar5 == iVar4) {\n            if (iVar5 != 0) {\n                do {\n                    cVar1 = *(*arg_ch + -0x4c6f60 + pcVar6);\n                    if (cVar1 != *pcVar6) {\n                        iVar5 = (-(cVar1 < *pcVar6) & 0xfffffffe) + 1;\n                        goto code_r0x00482fed;\n                    }\n                    pcVar6 = pcVar6 + 1;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            iVar5 = 0;\ncode_r0x00482fed:\n            if (iVar5 == 0) goto code_r0x00483018;\n        }\n        iVar3 = *(*in_ECX + 4);\n        iVar5 = *(iVar3 + 8 + in_ECX);\n        if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n            iVar5 = *(iVar5 + 0x38);\n        }\n        *(iVar5 + 0x14) = 1;\n    }\n    else {\ncode_r0x00483018:\n        *(arg_8h + 2) = iVar3;\n        if ((0 < arg_10h) && (arg_10h < 0x10000)) {\n            uVar2 = (*_sym.imp.WSOCK32.dll_htons)(arg_10h);\n            arg_8h[1] = uVar2;\n            return 1;\n        }\n        iVar3 = *(*in_ECX + 4);\n        iVar5 = *(iVar3 + 8 + in_ECX);\n        if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n            iVar5 = *(iVar5 + 0x38);\n        }\n        *(iVar5 + 0x14) = 2;\n    }\n    iVar5 = *(iVar3 + 8 + in_ECX);\n    if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n        iVar5 = *(iVar5 + 0x38);\n    }\n    *(iVar5 + 0x18) = 0;\n    return 0;\n}\n",
        "token_count": 689
    },
    "00483070": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00483070(int32_t fd, int32_t *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *arg_ch = 0;\n    arg_ch[1] = fd;\n    *arg_ch = *arg_ch + 1;\n    var_8h = arg_10h / 1000;\n    var_4h = (arg_10h % 1000) * 1000;\n    if (arg_14h == '\\0') {\n        piVar6 = NULL;\n        piVar5 = arg_ch;\n    }\n    else {\n        piVar5 = NULL;\n        piVar6 = arg_ch;\n    }\n    iVar1 = (*_sym.imp.WSOCK32.dll_select)(0, piVar5, piVar6, 0, &var_8h);\n    if (iVar1 == 0) {\n        if (arg_14h == '\\0') {\n            return 0;\n        }\n        iVar2 = *(*in_ECX + 4);\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 0x274c;\n    }\n    else if (iVar1 < 1) {\n        uVar4 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n        iVar2 = *(*in_ECX + 4);\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = uVar4;\n    }\n    else {\n        iVar2 = (*_sym.imp.WSOCK32.dll___WSAFDIsSet)(fd, arg_ch);\n        if (iVar2 != 0) {\n            return iVar1;\n        }\n        iVar1 = -2;\n        iVar2 = *(*in_ECX + 4);\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 0xfffffffe;\n    }\n    iVar3 = *(iVar2 + 8 + in_ECX);\n    if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n        iVar3 = *(iVar3 + 0x38);\n    }\n    *(iVar3 + 0x18) = 0;\n    return iVar1;\n}\n",
        "token_count": 677
    },
    "004831c1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004831c1(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint *in_ECX;\n    uint unaff_ESI;\n    \n    if (arg_8h == 0) {\n        fcn.0046c979();\n    }\n    else {\n        uVar2 = fcn.00428d10(arg_8h);\n        in_ECX[1] = uVar2;\n        iVar1 = *in_ECX[3];\n        if (iVar1 < 2) {\n            fcn.0041f867(uVar2);\n        }\n        else {\n            *in_ECX[3] = iVar1 + -1;\n            puVar3 = fcn.0041fd5b(4, unaff_ESI);\n            *puVar3 = 1;\n            in_ECX[3] = puVar3;\n            if (in_ECX[1] == -1) {\n                uVar4 = 0x10;\n            }\n            else {\n                uVar4 = in_ECX[1] + 0x10 & 0xfffffff0;\n            }\n            in_ECX[2] = uVar4;\n            uVar2 = fcn.0041fd8b(uVar4);\n            *in_ECX = uVar2;\n        }\n        fcn.00420db0(*in_ECX, arg_8h, in_ECX[1] + 1);\n    }\n    return;\n}\n",
        "token_count": 342
    },
    "00483653": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00483653(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t unaff_EBX;\n    uint32_t pdwRegister;\n    uint uVar4;\n    char16_t *arg_10h;\n    int32_t *arg_ch_00;\n    uint *arg_8h_00;\n    uint uStack84;\n    int32_t *piStack80;\n    int32_t iStack76;\n    uint uStack68;\n    uint32_t uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar auStack44 [16];\n    uchar auStack28 [24];\n    \n    iVar3 = **(arg_8h + 4);\n    fcn.00408e90();\n    uStack68 = **(iVar3 + 8);\n    iVar3 = *(*(arg_8h + 4) + 4);\n    fcn.00408e90();\n    uStack60 = 0;\n    piStack80 = CONCAT13(1, piStack80._0_3_);\n    uStack64 = **(iVar3 + 8);\n    iVar3 = (*_sym.imp.ole32.dll_CoInitialize)(0);\n    if (iVar3 == 1) {\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    iStack76 = 0;\n    if (3 < *(arg_8h + 8)) {\n        cVar1 = fcn.00401fb9(0x29);\n        if (cVar1 == '\\0') {\n            uVar2 = fcn.0041daf6();\n            unaff_EBX = uVar2 << 0x18;\n        }\n        else {\n            unaff_EBX = 0x1000000;\n        }\n    }\n    iVar3 = fcn.0045fef7(0);\n    if (iVar3 < 0) {\n        arg_ch_00 = fcn.00471dda();\n        if (arg_ch_00 == NULL) {\n            arg_10h = L\"NULL Pointer assignment\";\n            uVar4 = 3;\n            goto code_r0x00483713;\n        }\n        cVar1 = fcn.0041da5f();\n        if (cVar1 != '\\0') {\n            (**(*arg_ch_00 + 4))(arg_ch_00);\n        }\ncode_r0x00483763:\n        if (uStack84._3_1_ == '\\0') {\ncode_r0x004837d9:\n            piStack80 = arg_ch_00;\n            pdwRegister = uStack64;\n            if (2 < *(arg_8h + 8)) {\n                iVar3 = *(*(arg_8h + 4) + 8);\n                cVar1 = fcn.00401fb9(0x29);\n                if (cVar1 == '\\0') {\n                    fcn.00408e90();\n                    pdwRegister = **(iVar3 + 8);\n                }\n                else {\n                    pdwRegister = 0;\n                }\n            }\n            arg_8h_00 = &uStack60;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)();\n            uStack56 = 0;\n            uStack52 = 0;\n            uStack64 = uStack64 & 0xffff0000 | 9;\n            if (pdwRegister != 0) {\n                fcn.0041fd5b(0x28, arg_8h_00);\n                uStack84 = fcn.0046750f(uStack84, pdwRegister, unaff_EBX >> 0x18);\n            }\n            uStack56 = uStack84;\n            fcn.00470bfd(&uStack64);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(&uStack68);\n            return 0;\n        }\n        iVar3 = (*_sym.imp.ole32.dll_IIDFromString)(uStack68, auStack28);\n        if (iVar3 < 0) {\n            if (iStack76 != 0) {\n                (**(*arg_ch_00 + 8))(arg_ch_00);\n            }\n            arg_ch_00 = NULL;\n            arg_10h = L\"Invalid parameter\";\n            uVar4 = 2;\n            goto code_r0x00483713;\n        }\n        piStack80 = NULL;\n        iVar3 = (***arg_ch_00)(arg_ch_00, auStack28, &piStack80);\n        if (-1 < iVar3) {\n            (**(*arg_ch_00 + 8))(arg_ch_00);\n            arg_ch_00 = piStack80;\n            goto code_r0x004837d9;\n        }\n        if (iStack76 != 0) {\n            (**(*arg_ch_00 + 8))(arg_ch_00);\n        }\n    }\n    else {\n        piStack80 = NULL;\n        iVar3 = (*_sym.imp.ole32.dll_CoCreateInstance)(auStack44, 0, 0x17, 0x49fb94, &piStack80);\n        arg_ch_00 = piStack80;\n        if (-1 < iVar3) {\n            fcn.00460566();\n            iStack76 = 1;\n            goto code_r0x00483763;\n        }\n    }\n    arg_ch_00 = NULL;\n    arg_10h = L\"Failed to create object\";\n    uVar4 = 1;\ncode_r0x00483713:\n    uVar4 = fcn.004846fb(uVar4, arg_ch_00, arg_10h, arg_ch_00);\n    return uVar4;\n}\n",
        "token_count": 1260
    },
    "0048386e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048386e(int32_t arg_8h, uint arg_ch)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t *in_ECX;\n    char16_t *unaff_EBX;\n    uint uVar6;\n    int32_t *unaff_ESI;\n    int32_t iVar7;\n    char16_t *pcVar8;\n    char16_t *pcVar9;\n    uint uVar10;\n    int32_t iStack92;\n    int32_t iStack88;\n    uint *puStack84;\n    int32_t iStack80;\n    int32_t *piStack76;\n    int32_t iStack72;\n    int32_t *piStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t *piStack52;\n    uchar auStack48 [44];\n    \n    pcVar9 = 0x49d0d0;\n    piStack76 = in_ECX;\n    fcn.0040b5c1(0x49d0d0);\n    puVar5 = &uStack60;\n    (*_sym.imp.OLEAUT32.dll_VariantClear)();\n    uVar6 = 0;\n    uStack64 = CONCAT22(uStack64._2_2_, 9);\n    uStack56 = 0;\n    piStack52 = NULL;\n    iStack88 = **(arg_8h + 4);\n    cVar2 = fcn.0041da5f();\n    if (cVar2 != '\\0') {\n        if (*(arg_8h + 8) < 2) {\n            pcVar9 = L\"Incorrect Parameter format\";\n            iVar7 = 1;\n        }\n        else {\n            puStack84 = fcn.0041fd5b(0x50, puVar5);\n            if (*(arg_8h + 8) < 3) {\n                uVar10 = 0;\n            }\n            else {\n                iVar7 = *(*(arg_8h + 4) + 8);\n                fcn.00408e90();\n                uVar10 = **(iVar7 + 8);\n            }\n            iVar7 = *(*(arg_8h + 4) + 4);\n            fcn.00408e90();\n            piVar3 = fcn.004662a2(**(arg_8h + 4), *(iVar7 + 8), uVar10, in_ECX, in_ECX + 99);\n            iVar7 = piVar3[1];\n            if (-1 < iVar7) {\ncode_r0x00483b34:\n                piStack76 = piVar3;\n                fcn.00470bfd(&iStack92);\n                goto code_r0x00483b41;\n            }\n            (**(*piVar3 + 8))(piVar3);\n            pcVar9 = NULL;\n        }\n        uVar6 = fcn.004846fb(iVar7, 0, pcVar9, 0);\n        goto code_r0x00483b41;\n    }\n    fcn.00408e90();\n    piVar3 = *(iStack88 + 8);\n    iStack80 = *piVar3;\n    piStack76 = piVar3[1];\n    iStack72 = piVar3[2];\n    piStack68 = piVar3[3];\n    *piStack68 = *piStack68 + 1;\n    fcn.0040c7c9();\n    iStack92 = iStack80;\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(iStack80, piStack76);\n    pcVar8 = L\"AUTOIT.ERROR\";\n    iVar4 = fcn.004248f3(L\"AUTOIT.ERROR\");\n    iVar7 = iStack92;\n    if (iStack92 == iVar4) {\n        for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n            in_ECX = unaff_ESI;\n            if (*unaff_EBX != *pcVar8) goto code_r0x004839f5;\n            pcVar8 = pcVar8 + 1;\n            pcVar9 = pcVar9 + 1;\n            unaff_EBX = pcVar9;\n        }\n        bVar1 = false;\n    }\n    else {\ncode_r0x004839f5:\n        bVar1 = true;\n    }\n    if (bVar1) {\ncode_r0x00483ac7:\n        uVar6 = fcn.004846fb(1, 0, L\"Incorrect Parameter format\", 0);\n    }\n    else {\n        if (*(arg_8h + 8) != 1) {\n            iVar7 = *(*(arg_8h + 4) + 4);\n            if (*(iVar7 + 0xc) == 0xe) {\n                puVar5 = fcn.00471037(auStack48);\n            }\n            else {\n                fcn.00408e90();\n                puVar5 = *(iVar7 + 8);\n                uStack64 = *puVar5;\n                uStack60 = puVar5[1];\n                uStack56 = puVar5[2];\n                piStack52 = puVar5[3];\n                *piStack52 = *piStack52 + 1;\n                puVar5 = &uStack64;\n            }\n            iVar7 = fcn.004025c1(puVar5);\n            cVar2 = '\\x01' - (iVar7 != 0);\n            if (iStack88 != 0) {\n                fcn.0040b1ff();\n            }\n            if (iStack92 != 0) {\n                fcn.0040b1ff();\n            }\n            if (cVar2 == '\\0') {\n                fcn.0041fd5b(0x30, puVar5);\n                uVar10 = *(*(arg_8h + 4) + 4);\n                fcn.004119e0(uVar10);\n                fcn.00465f0d(iStack88 + 0x17c, uVar10);\n                fcn.004640c5(&stack0xffffff94);\n                puStack84 = puVar5;\n                fcn.0040b1ff();\n                piVar3 = piStack76;\n                goto code_r0x00483b34;\n            }\n            goto code_r0x00483ac7;\n        }\n        if (in_ECX[0x61] != 0) {\n            fcn.0040c5e7(**(in_ECX[0x60] + -4 + in_ECX[0x61] * 4) + 8);\n        }\n    }\n    fcn.0040b1ff();\ncode_r0x00483b41:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&iStack80);\n    return uVar6;\n}\n",
        "token_count": 1520
    },
    "00483f10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00483f10(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint16_t **ppuVar1;\n    bool bVar2;\n    char cVar3;\n    uint16_t *puVar4;\n    int32_t iVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t iVar9;\n    int32_t *in_ECX;\n    uint32_t uVar10;\n    uint *puVar11;\n    uint *puVar12;\n    uint var_2a0h;\n    uint var_94h;\n    int32_t var_44h;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint32_t var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t *var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    fcn.0040b5c1(0x49d0d0);\n    iVar5 = arg_8h;\n    cVar3 = fcn.0041da5f();\n    if (cVar3 == '\\0') {\n        iVar5 = *(*in_ECX + 4);\n        iVar9 = *(iVar5 + 8 + in_ECX);\n        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n            iVar9 = *(iVar9 + 0x38);\n        }\n        *(iVar9 + 0x14) = 1;\n        iVar9 = *(iVar5 + 8 + in_ECX);\n        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n            iVar9 = *(iVar9 + 0x38);\n        }\n        *(iVar9 + 0x18) = 0;\n        return 0;\n    }\n    var_1ch = 1;\n    if ((*(iVar5 + 8) < 2) || ((var_1ch = fcn.0040ce67(),  0 < var_1ch && (var_1ch < 8)))) {\n        iVar9 = var_1ch;\n        ppuVar1 = **(iVar5 + 4);\n        if (ppuVar1[3] == 0x8) {\n            puVar4 = *ppuVar1;\n        }\n        else {\n            puVar4 = NULL;\n        }\n        piVar8 = *(puVar4 + 4);\n        if (ppuVar1[3] == 0x8) {\n            puVar4 = *ppuVar1;\n        }\n        else {\n            puVar4 = NULL;\n        }\n        arg_8h = *puVar4;\n        if (var_1ch == 5) {\n            iVar5 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x49d0a8);\n            if ((iVar5 == 0) || (pcVar6 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar5, 0x4c7264),  pcVar6 == NULL)) {\n                iVar9 = *(*in_ECX + 4);\n                iVar7 = *(iVar9 + 8 + in_ECX);\n                if (*(iVar9 + 0xd + in_ECX) != '\\0') {\n                    iVar7 = *(iVar7 + 0x38);\n                }\n                *(iVar7 + 0x14) = 1;\n                iVar7 = *(iVar9 + 8 + in_ECX);\n                if (*(iVar9 + 0xd + in_ECX) != '\\0') {\n                    iVar7 = *(iVar7 + 0x38);\n                }\n                *(iVar7 + 0x18) = 0;\n            }\n            else {\n                (*pcVar6)(6, **piVar8, &arg_8h);\n                (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(arg_8h, &var_2a0h, 0x104);\n                fcn.0040b5c1(&var_2a0h);\n            }\n            if (iVar5 == 0) {\n                return 0;\n            }\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar5);\n            return 0;\n        }\n        if (var_1ch == 7) {\n            if (((arg_8h != 0x9) || (iVar5 = (**(*piVar8 + 0x10))(piVar8, 0, 0x800, &arg_8h),  iVar5 != 0)) ||\n               (arg_8h == NULL)) goto code_r0x00484415;\n            (**(*arg_8h + 0xc))(arg_8h, &var_4h);\n            var_44h = *var_4h;\n            iStack68 = var_4h[1];\n            iStack64 = var_4h[2];\n            iStack60 = var_4h[3];\n            (**(*arg_8h + 0x4c))(arg_8h, var_4h);\n            (*_sym.imp.ole32.dll_StringFromGUID2)(&var_44h, &var_94h, 0x28);\n            fcn.0040b5c1(&var_94h);\n            piVar8 = arg_8h;\n        }\n        else {\n            var_8h = NULL;\n            iVar5 = (***piVar8)(piVar8, 0x49fc24, &var_28h);\n            if (iVar5 < 0) {\n                if (arg_8h != 9) goto code_r0x00484415;\n                iVar5 = (**(*piVar8 + 0x10))(piVar8, 0, 0x800, &var_8h);\n            }\n            else {\n                iVar5 = (**(*var_28h + 0xc))(var_28h, &var_8h);\n                (**(*var_28h + 8))(var_28h);\n                iVar9 = var_1ch;\n            }\n            if ((iVar5 < 0) || (var_8h == NULL)) {\ncode_r0x00484415:\n                iVar5 = *(*in_ECX + 4);\n                iVar9 = *(iVar5 + 8 + in_ECX);\n                if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                    iVar9 = *(iVar9 + 0x38);\n                }\n                *(iVar9 + 0x14) = 1;\n                goto code_r0x0048442f;\n            }\n            if (iVar9 == 1) {\n                puVar12 = NULL;\n                puVar11 = &arg_8h;\n            }\n            else {\n                if (iVar9 != 2) {\n                    iVar5 = (**(*var_8h + 0x48))(var_8h, &arg_8h, &var_24h);\n                    if (iVar5 != 0) {\n                        (**(*var_8h + 8))(var_8h);\n                        iVar5 = *(*in_ECX + 4);\n                        iVar9 = *(iVar5 + 8 + in_ECX);\n                        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                            iVar9 = *(iVar9 + 0x38);\n                        }\n                        *(iVar9 + 0x14) = 1;\n                        goto code_r0x0048442f;\n                    }\n                    if (iVar9 == 4) {\n                        (**(*arg_8h + 0x1c))(arg_8h, &var_4h);\n                        iVar5 = (*_sym.imp.OLEAUT32.dll_LHashValOfNameSys)\n                                          (var_4h, *(var_4h + 6), *(var_4h + 0x1a), var_4h[4], &var_10h);\n                        (**(*arg_8h + 0x30))(arg_8h, var_4h);\n                        if (iVar5 == 0) {\n                            fcn.0040b5c1(var_10h);\n                            (*_sym.imp.OLEAUT32.dll_SysStringLen)(var_10h);\n                        }\n                    }\n                    else {\n                        (**(*arg_8h + 0x14))(arg_8h, var_24h, &var_18h);\n                        if (var_18h != 5) {\n                            var_34h = (**(*arg_8h + 0xc))(arg_8h);\n                            var_ch = NULL;\n                            uVar10 = 0;\n                            if (var_34h != 0) {\n                                bVar2 = false;\n                                do {\n                                    iVar9 = var_1ch;\n                                    if (bVar2) break;\n                                    var_18h = 0;\n                                    (**(*arg_8h + 0x14))(arg_8h, uVar10, &var_18h);\n                                    if (var_18h == 5) {\n                                        (**(*arg_8h + 0x10))(arg_8h, uVar10, &var_14h);\n                                        (**(*var_14h + 0xc))(var_14h, &var_2ch);\n                                        var_ch = *(var_2ch + 0x30);\n                                        (**(*var_14h + 0x4c))(var_14h, var_2ch);\n                                        var_20h = -1;\n                                        var_10h = NULL;\n                                        if (var_ch != NULL) {\n                                            do {\n                                                iVar5 = (**(*var_14h + 0x20))(var_14h, var_10h, &var_30h);\n                                                if (iVar5 == 0) {\n                                                    (**(*var_8h + 0x38))(var_8h, var_30h, &var_4h);\n                                                    (**(*var_4h + 0x48))(var_4h, 0, &var_20h);\n                                                    if (var_20h == var_24h) {\n                                                        bVar2 = true;\n                                                        (**(*var_4h + 8))(var_4h);\n                                                        (**(*var_8h + 8))(var_8h);\n                                                        var_8h = var_14h;\n                                                        goto code_r0x00484314;\n                                                    }\n                                                    (**(*var_4h + 8))();\n                                                }\n                                                var_10h = var_10h + 1;\n                                            } while (var_10h < var_ch);\n                                        }\n                                        (**(*var_14h + 8))(var_14h);\n                                    }\ncode_r0x00484314:\n                                    uVar10 = uVar10 + 1;\n                                    iVar9 = var_1ch;\n                                } while (uVar10 < var_34h);\n                            }\n                        }\n                        if (((iVar9 == 3) || (iVar9 == 6)) && (var_18h == 5)) {\n                            (**(*var_8h + 0xc))(var_8h, &var_ch);\n                            var_44h = *var_ch;\n                            iStack68 = var_ch[1];\n                            iStack64 = var_ch[2];\n                            iStack60 = var_ch[3];\n                            (**(*var_8h + 0x4c))(var_8h, var_ch);\n                            iVar5 = (*_sym.imp.ole32.dll_StringFromGUID2)(&var_44h, &var_94h, 0x28);\n                            if (iVar5 == 0) {\ncode_r0x004843d8:\n                                iVar5 = *(*in_ECX + 4);\n                                iVar9 = *(iVar5 + 8 + in_ECX);\n                                if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                                    iVar9 = *(iVar9 + 0x38);\n                                }\n                                *(iVar9 + 0x14) = 1;\n                                iVar9 = *(iVar5 + 8 + in_ECX);\n                                if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                                    iVar9 = *(iVar9 + 0x38);\n                                }\n                                *(iVar9 + 0x18) = 0;\n                            }\n                            else if (var_1ch == 6) {\n                                fcn.0040b5c1(&var_94h);\n                            }\n                            else if (var_1ch == 3) {\n                                iVar5 = (*_sym.imp.ole32.dll_ProgIDFromCLSID)(&var_44h, &var_4h);\n                                if ((iVar5 != 0) || (var_4h == NULL)) goto code_r0x004843d8;\n                                fcn.0040b5c1(var_4h);\n                                (*_sym.imp.ole32.dll_CoTaskMemFree)(var_4h);\n                            }\n                        }\n                    }\n                    (**(*arg_8h + 8))(arg_8h);\n                    piVar8 = var_8h;\n                    goto code_r0x004840e7;\n                }\n                puVar12 = &arg_8h;\n                puVar11 = NULL;\n            }\n            (**(*var_8h + 0x30))(var_8h, 0xffffffff, puVar11, puVar12, 0, 0);\n            fcn.0040b5c1(arg_8h);\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(arg_8h);\n            piVar8 = var_8h;\n        }\ncode_r0x004840e7:\n        (**(*piVar8 + 8))(piVar8);\n    }\n    else {\n        iVar5 = *(*in_ECX + 4);\n        iVar9 = *(iVar5 + 8 + in_ECX);\n        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n            iVar9 = *(iVar9 + 0x38);\n        }\n        *(iVar9 + 0x14) = 1;\ncode_r0x0048442f:\n        iVar9 = *(iVar5 + 8 + in_ECX);\n        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n            iVar9 = *(iVar9 + 0x38);\n        }\n        *(iVar9 + 0x18) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 3225
    },
    "0048444a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0048444a(int32_t arg_8h, int16_t **arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t *extraout_EDX;\n    int16_t *piVar4;\n    int32_t iVar5;\n    char16_t *pcVar6;\n    uint var_94h;\n    uint pvarg;\n    int32_t *var_6ch;\n    uint var_64h;\n    int32_t *var_5ch;\n    uint var_50h;\n    uint pvargDest;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    char16_t *var_28h;\n    char16_t *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    \n    var_24h = L\"_NewEnum\";\n    var_10h = 0;\n    var_1ch = 0;\n    var_28h = L\"get__NewEnum\";\n    var_38h = 0;\n    var_34h = 0;\n    var_30h = 0;\n    var_2ch = 0;\n    var_20h = 0x20404;\n    var_18h = 0xc0;\n    var_14h = 0x46000000;\n    fcn.004222d0(&var_94h, 0, 0x20);\n    if (((arg_8h == 0) || (arg_10h == 0)) || (arg_ch == NULL)) {\ncode_r0x004846e4:\n        pcVar6 = L\"Null Object assignment in FOR..IN loop\";\ncode_r0x004846ea:\n        iVar5 = 1;\n    }\n    else {\n        cVar2 = fcn.0041da5f();\n        if (cVar2 != '\\0') {\ncode_r0x00484622:\n            if (arg_ch[3] == 0x8) {\n                piVar4 = *arg_ch;\n            }\n            else {\n                piVar4 = NULL;\n            }\n            if (piVar4 == NULL) goto code_r0x004846e4;\n            if (arg_ch[3] == 0x8) {\n                piVar4 = *arg_ch;\n            }\n            else {\n                piVar4 = NULL;\n            }\n            if (*piVar4 == 0xd) {\n                if (arg_ch[3] == 0x8) {\n                    piVar4 = *arg_ch;\n                }\n                else {\n                    piVar4 = NULL;\n                }\n                piVar1 = *(piVar4 + 4);\n                (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n                iVar5 = (**(*piVar1 + 0xc))(piVar1, 1, &pvargDest, &var_10h);\n                if (-1 < iVar5) {\n                    if ((var_10h == 0) || (iVar5 == 1)) {\n                        pvargDest._0_2_ = 1;\n                        fcn.0040e8a0();\n                        *arg_ch = NULL;\n                        arg_ch[3] = 0x1;\n                    }\n                    fcn.00470bfd(&pvargDest);\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n                    return 0;\n                }\n                fcn.0040e8a0();\n                arg_ch[3] = 0x1;\n                var_5ch = NULL;\n                *arg_ch = NULL;\n                pcVar6 = NULL;\n                goto code_r0x004846ef;\n            }\n            pcVar6 = L\"Incorrect Object type in FOR..IN loop\";\n            goto code_r0x004846ea;\n        }\n        if (extraout_EDX[3] == 8) {\n            iVar5 = *extraout_EDX;\n        }\n        else {\n            iVar5 = 0;\n        }\n        if (((iVar5 != 0) && (extraout_EDX[3] == 8)) && (piVar1 = *(*extraout_EDX + 8),  piVar1 != NULL)) {\n            iVar5 = (**(*piVar1 + 0x14))(piVar1, 0x49fbd4, &var_24h, 1, 0x400, &var_ch);\n            if (((iVar5 < 0) || (var_ch == -1)) &&\n               ((iVar5 = (**(*piVar1 + 0x14))(piVar1, 0x49fbd4, &var_28h, 1, 0x400, &var_ch),  iVar5 < 0 ||\n                (var_ch == -1)))) {\n                var_ch = -4;\n            }\n            uVar3 = fcn.0041fd8b(0x10);\n            var_30h = 0;\n            var_38h = uVar3;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvarg);\n            iVar5 = (**(*piVar1 + 0x18))(piVar1, var_ch, 0x49fbd4, 0x800, 3, &var_38h, &pvarg, &var_94h, &var_50h);\n            fcn.0041fd94(uVar3);\n            if (iVar5 < 0) {\n                pcVar6 = NULL;\n                if (iVar5 == -0x7ffdfff7) {\n                    var_5ch = &var_94h;\n                    iVar5 = -0x7ffdfff7;\n                }\n                else {\n                    var_5ch = NULL;\n                }\n                goto code_r0x004846ef;\n            }\n            if (var_6ch == NULL) {\n                var_5ch = NULL;\n                iVar5 = 1;\n                pcVar6 = L\"Null Object assignment in FOR..IN loop\";\n                goto code_r0x004846ef;\n            }\n            var_64h._0_2_ = 0xd;\n            iVar5 = (***var_6ch)(var_6ch, &var_20h, &var_5ch);\n            (**(*var_6ch + 8))(var_6ch);\n            pcVar6 = var_5ch;\n            if (var_5ch == NULL) goto code_r0x004846ef;\n            (**(*var_5ch + 0x14))(var_5ch);\n            fcn.00470bfd(&var_64h);\n            (**(*var_5ch + 8))(var_5ch);\n            goto code_r0x00484622;\n        }\n        pcVar6 = L\"Null Object assignment in FOR..IN loop\";\n        iVar5 = 2;\n    }\n    var_5ch = NULL;\ncode_r0x004846ef:\n    uVar3 = fcn.004846fb(iVar5, var_5ch, pcVar6, 1);\n    return uVar3;\n}\n",
        "token_count": 1625
    },
    "004846fb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004846fb(uint32_t arg_8h, uint16_t *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint arg_8h_00;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint noname_4;\n    uint noname_4_00;\n    uint *arg_8h_01;\n    uint var_58h;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t *var_2ch;\n    uint pvargDest;\n    int32_t *var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_ECX[0x61] == 0) {\n        iVar1 = *(*in_ECX + 4);\n        iVar4 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = arg_8h;\n        iVar4 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x18) = 0;\n        if (arg_14h != '\\0') {\n            return 0xffffffff;\n        }\n    }\n    else if (*0x4d2fec == '\\0') {\n        var_20h = **(in_ECX[0x60] + -4 + in_ECX[0x61] * 4);\n        fcn.00466037();\n        var_40h = 0;\n        var_48h = arg_8h;\n        var_3ch = 1;\n        fcn.0045f934(&var_48h);\n        fcn.0040e8a0();\n        if (arg_10h == 0) {\n            arg_8h_00 = fcn.004736d3();\n        }\n        else {\n            arg_8h_00 = fcn.0040b606(arg_10h);\n        }\n        fcn.0040890f(arg_8h_00);\n        fcn.0045f934(&var_58h);\n        fcn.0040e8a0();\n        if (arg_10h == 0) {\n            fcn.0040b1ff();\n        }\n        else {\n            fcn.0040b1ff();\n        }\n        if (arg_ch != NULL) {\n            if (*(arg_ch + 4) != 0) {\n                fcn.004013dc(*(arg_ch + 4));\n                fcn.0045f934(&var_58h);\n                fcn.0040e8a0();\n            }\n            if (*(arg_ch + 2) != 0) {\n                fcn.004013dc(*(arg_ch + 2));\n                fcn.0045f934(&var_58h);\n                fcn.0040e8a0();\n            }\n            if (*(arg_ch + 6) != 0) {\n                fcn.004013dc(*(arg_ch + 6));\n                fcn.0045f934(&var_58h);\n                fcn.0040e8a0();\n            }\n            var_48h = *(arg_ch + 8);\n            var_40h = 0;\n            var_3ch = 1;\n            fcn.0045f934(&var_48h);\n            fcn.0040e8a0();\n            var_48h = *arg_ch;\n            if (*arg_ch == 0) {\n                var_48h = *(arg_ch + 0xe);\n            }\n            var_40h = 0;\n            var_3ch = 1;\n            fcn.0045f934(&var_48h);\n            fcn.0040e8a0();\n        }\n        var_48h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        var_40h = 0;\n        var_3ch = 1;\n        fcn.0045f934(&var_48h);\n        fcn.0040e8a0();\n        var_48h = fcn.004698c0(in_ECX[0x3e]);\n        var_40h = 0;\n        var_3ch = 1;\n        fcn.0045f934(&var_48h);\n        fcn.0040e8a0();\n        if (var_20h[5] == 0xe) {\n            arg_8h_01 = &var_58h;\n            puVar3 = fcn.00471037(arg_8h_01);\n            var_38h = *puVar3;\n        }\n        else {\n            fcn.00408e90();\n            puVar3 = var_20h[4];\n            arg_8h_01 = 0x8;\n            var_38h = *puVar3;\n            var_10h = puVar3[1];\n            var_ch = puVar3[2];\n            var_8h = puVar3[3];\n            puVar3 = &var_14h;\n            *var_8h = *var_8h + 1;\n            var_14h = var_38h;\n        }\n        var_34h = puVar3[1];\n        var_30h = puVar3[2];\n        var_2ch = puVar3[3];\n        *var_2ch = *var_2ch + 1;\n        if ((arg_8h_01 & 8) != 0) {\n            fcn.0040b1ff();\n        }\n        if ((arg_8h_01 & 4) != 0) {\n            fcn.0040b1ff();\n        }\n        var_14h = 0x49d100;\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = NULL;\n        var_48h = 0;\n        var_40h = 0;\n        var_3ch = 1;\n        (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n        var_1ch = 0;\n        pvargDest._0_2_ = 9;\n        (**(*var_20h + 4))(var_20h);\n        var_58h = 0;\n        var_50h = 0;\n        var_4ch = 1;\n        fcn.00466fef(&var_58h);\n        fcn.0040e8a0();\n        fcn.00470bfd(&pvargDest);\n        *0x4d2fec = 1;\n        cVar2 = fcn.0047e315(&var_38h, &var_14h, &var_48h, 0, noname_4, &arg_14h + 3);\n        if (cVar2 == '\\0') {\n            fcn.0047e315(&var_38h, &var_14h, &var_48h, 1, noname_4_00, &arg_14h + 3);\n        }\n        iVar1 = *(*in_ECX + 4);\n        iVar4 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = arg_8h;\n        iVar4 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x18) = 0;\n        *0x4d2fec = '\\0';\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n        var_20h = NULL;\n        var_1ch = 0;\n        fcn.0040e8a0();\n        var_14h = 0x49d100;\n        fcn.00466f23();\n        fcn.0041fd94(var_10h);\n        fcn.0040b1ff();\n    }\n    return 0;\n}\n",
        "token_count": 1970
    },
    "00484dad": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00484dad(uint32_t arg_8h, int32_t *arg_ch, int32_t **arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint arg_ch_00;\n    uint uVar5;\n    char16_t *arg_10h_00;\n    uint var_14h;\n    \n    if ((arg_10h == NULL) || (*arg_ch == 0)) {\n        arg_10h_00 = L\"NULL Pointer assignment\";\n        uVar5 = 1;\n    }\n    else {\n        cVar2 = fcn.00485520();\n        if (cVar2 != '\\0') {\n            cVar2 = fcn.0041da5f();\n            if (cVar2 != '\\0') {\n                uVar5 = fcn.00484ed5(arg_8h, arg_ch_00, arg_10h, arg_14h, arg_18h);\n                return uVar5;\n            }\n            if (arg_10h[3] == 0xc) {\n                fcn.0040890f(arg_14h);\n                uVar5 = fcn.0046fd99(arg_8h, arg_18h, *arg_ch, arg_14h);\n                iVar1 = *(*in_ECX + 4);\n                iVar3 = *(iVar1 + 8 + in_ECX);\n                if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                    iVar3 = *(iVar3 + 0x38);\n                }\n                *(iVar3 + 0x14) = uVar5;\n                iVar3 = *(iVar1 + 8 + in_ECX);\n                cVar2 = *(iVar1 + 0xd + in_ECX);\n            }\n            else {\n                if (arg_10h[3] != 0xf) {\n                    arg_10h_00 = L\"Object Invoke failed\";\n                    uVar5 = 3;\n                    goto code_r0x00484ec9;\n                }\n                iVar1 = **arg_10h;\n                uVar5 = arg_ch_00;\n                uVar4 = fcn.0040890f(arg_14h);\n                uVar5 = (**(iVar1 + 4))(arg_8h & 0xffff, uVar4, arg_14h, arg_18h, uVar5);\n                fcn.0040e8a0();\n                iVar1 = *(*in_ECX + 4);\n                iVar3 = *(iVar1 + 8 + in_ECX);\n                if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                    iVar3 = *(iVar3 + 0x38);\n                }\n                *(iVar3 + 0x14) = uVar5;\n                iVar3 = *(iVar1 + 8 + in_ECX);\n                cVar2 = *(iVar1 + 0xd + in_ECX);\n            }\n            if (cVar2 != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x18) = 0;\n            return 0;\n        }\n        arg_10h_00 = L\"Not an Object type\";\n        uVar5 = 2;\n    }\ncode_r0x00484ec9:\n    uVar5 = fcn.004846fb(uVar5, 0, arg_10h_00, 1);\n    return uVar5;\n}\n",
        "token_count": 791
    },
    "00484ed5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00484ed5(uint32_t arg_8h, int32_t *arg_ch, uint32_t *arg_10h, uint *arg_14h, int32_t arg_18h)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX;\n    uint32_t uVar5;\n    uint extraout_ECX_00;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    char16_t *arg_10h_00;\n    int32_t var_fch;\n    uint32_t var_f8h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_6ch;\n    uint pvargDest;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint32_t *var_2ch;\n    uint *var_28h;\n    uint32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_5h;\n    \n    var_34h = 0xfffffffd;\n    var_ch = *(arg_18h + 8);\n    var_38h = 0;\n    var_2ch = NULL;\n    var_28h = NULL;\n    var_24h = 0;\n    var_20h = 0;\n    var_10h = 0;\n    var_5h._0_1_ = '\\0';\n    if ((arg_10h == NULL) || (*arg_ch == 0)) {\n        iVar8 = 1;\n        arg_10h_00 = L\"NULL Pointer assignment\";\ncode_r0x004852b1:\n        uVar4 = fcn.004846fb(iVar8, 0, arg_10h_00, 1);\n        return uVar4;\n    }\n    var_18h = in_ECX;\n    cVar2 = fcn.00485520();\n    if (cVar2 == '\\0') {\n        arg_10h_00 = L\"Not an Object type\";\n        iVar8 = 2;\n        goto code_r0x004852b1;\n    }\n    if (extraout_ECX[3] == 8) {\n        iVar8 = *extraout_ECX;\n    }\n    else {\n        iVar8 = 0;\n    }\n    var_14h = *(iVar8 + 8);\n    if (var_14h == NULL) {\n        arg_10h_00 = L\"NULL Pointer assignment\";\n        iVar8 = 4;\n        goto code_r0x004852b1;\n    }\n    puVar9 = &var_10h;\n    var_fch = 0;\n    iVar8 = fcn.004602c7(puVar9);\n    if (iVar8 < 0) {\n        arg_10h_00 = NULL;\n        goto code_r0x004852b1;\n    }\n    if (((arg_8h == 1) && (arg_8h = 3,  var_10h != 0)) &&\n       (iVar8 = fcn.0045ff68(*arg_14h, puVar9, &var_fch),  -1 < iVar8)) {\n        if (((var_f8h & 1) != 0) && (var_f0h == 0)) {\n            var_5h._0_1_ = '\\x01';\n        }\n        if (var_f8h == 1) {\n            arg_8h = 1;\n        }\n    }\n    uVar7 = var_ch + 1;\n    uVar5 = -(uVar7 * 0x10 >> 0x20 != 0) | uVar7 * 0x10;\n    arg_10h = fcn.0041fd8b(-(0xfffffffb < uVar5) | uVar5 + 4);\n    if (arg_10h == NULL) {\n        arg_10h = NULL;\n    }\n    else {\n        *arg_10h = uVar7;\n        arg_10h = arg_10h + 1;\n        for (; uVar7 != 0; uVar7 = uVar7 - 1) {\n            fcn.0045f90a();\n        }\n    }\n    uVar7 = var_ch;\n    uVar5 = 0;\n    if (var_ch != 0) {\n        do {\n            fcn.0045f934(*(*(arg_18h + 4) + uVar5 * 4));\n            uVar5 = uVar5 + 1;\n            in_ECX = var_18h;\n        } while (uVar5 < uVar7);\n    }\n    uVar7 = var_ch;\n    if ((var_fch != 0) && (arg_14h = NULL,  var_ch != 0)) {\n        puVar6 = arg_10h + var_ch * 4 + -4;\n        do {\n            if (*(&var_ech + arg_14h * 4 + 2) == 2) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(puVar6);\n                iVar1 = *(&var_ech + arg_14h);\n                *puVar6 = iVar1;\n                if (iVar1 == 0x4008) {\n                    var_30h = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(0x49d0d0);\n                    puVar6[2] = &var_30h;\n                }\n                uVar7 = var_ch;\n                if (*(*(*(arg_18h + 4) + arg_14h * 4) + 0xc) != 6) {\n                    puVar6[2] = puVar6;\n                }\n            }\n            arg_14h = arg_14h + 1;\n            puVar6 = puVar6 + -4;\n            in_ECX = var_18h;\n        } while (arg_14h < uVar7);\n    }\n    var_2ch = arg_10h;\n    if ((arg_8h & 0xc) != 0) {\n        var_28h = &var_34h;\n        var_20h = 1;\n    }\n    var_24h = uVar7;\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n    fcn.004222d0(&var_6ch, 0, 0x20);\n    if (var_5h == '\\0') {\n        puVar9 = &pvargDest;\n    }\n    else {\n        puVar9 = NULL;\n    }\n    iVar8 = (**(*var_14h + 0x18))(var_14h, var_10h, 0x49fbd4, 0x800, arg_8h, &var_2ch, puVar9, &var_6ch, &var_1ch);\n    if (iVar8 == -0x7ffdfffd) {\n        if (var_20h == 1) {\n            iVar8 = (**(*var_14h + 0x18))\n                              (var_14h, var_10h, 0x49fbd4, 0x800, (arg_8h == 4) * '\\x04' + '\\x04', &var_2ch, 0, &var_6ch\n                               , &var_1ch);\n            goto code_r0x004851a7;\n        }\n    }\n    else {\ncode_r0x004851a7:\n        if (-1 < iVar8) {\n            iVar8 = *(*in_ECX + 4);\n            iVar3 = *(iVar8 + 8 + in_ECX);\n            if (*(iVar8 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x14) = 0;\n            iVar3 = *(iVar8 + 8 + in_ECX);\n            if (*(iVar8 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x18) = 0;\n            fcn.00470bfd(&pvargDest);\n            uVar7 = 0;\n            uVar4 = 0;\n            if (var_ch != 0) {\n                puVar6 = arg_10h + var_ch * 4 + -4;\n                do {\n                    if ((*(*(*(arg_18h + 4) + uVar7 * 4) + 0xc) == 6) &&\n                       ((var_fch == 0 ||\n                        ((*(&var_ech + uVar7) != 0x4024 &&\n                         (((*(&var_ech + uVar7) >> 0xe & 1) != 0 || (*(&var_ech + uVar7 * 4 + 2) >> 1 & 1) != 0 ||\n                          (*puVar6 == 8)))))))) {\n                        fcn.00470bfd(puVar6);\n                    }\n                    uVar7 = uVar7 + 1;\n                    puVar6 = puVar6 + -4;\n                    uVar4 = var_38h;\n                } while (uVar7 < var_ch);\n            }\n            goto code_r0x0048528c;\n        }\n    }\n    uVar4 = fcn.004846fb(iVar8, ~-(iVar8 != -0x7ffdfff7) & &var_6ch, 0, 1);\ncode_r0x0048528c:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n    if (arg_10h == NULL) {\n        return uVar4;\n    }\n    fcn.00467629(extraout_ECX_00);\n    return uVar4;\n}\n",
        "token_count": 2250
    },
    "004852bf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004852bf(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    uint uVar1;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint var_1ch;\n    uint var_14h;\n    \n    if (*arg_18h == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = 0x49d0d0;\n        fcn.0040b606(0x49d0d0);\n        fcn.00402032(0x2a, 0, uVar1, in_stack_ffffffc8, in_stack_ffffffcc, in_stack_ffffffd0);\n        fcn.00401fd5(&var_1ch);\n        uVar1 = fcn.00484dad((arg_8h == 0) * 2 + 1, arg_18h, arg_ch, arg_10h, arg_14h);\n        fcn.0040b1ff();\n    }\n    return uVar1;\n}\n",
        "token_count": 266
    },
    "00485396": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00485396(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint arg_8h_00;\n    int32_t arg_ch_00;\n    int32_t iVar7;\n    uint var_3ch;\n    uint uStack60;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    int32_t *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    ushort var_10h;\n    uint32_t var_eh;\n    uint var_8h;\n    \n    piVar2 = arg_ch;\n    var_eh._0_2_ = 0;\n    var_24h = NULL;\n    iVar6 = *(arg_8h + 4);\n    var_20h = 0;\n    var_1ch = 0;\n    var_3ch = 0;\n    var_34h = 0;\n    iVar3 = *arg_ch;\n    var_28h = 0x49d114;\n    var_30h = 1;\n    iVar4 = iVar3 + 1;\n    arg_ch_00 = 0x47;\n    var_10h = 0xffff;\n    *NULL = *(*(iVar6 + iVar3 * 4) + 10);\n    iVar7 = *(iVar6 + iVar4 * 4);\n    *arg_ch = iVar4;\n    if (*(iVar7 + 8) == 0x47) {\n        iVar3 = iVar3 + 2;\n        arg_ch = arg_ch & 0xffffff;\n        *piVar2 = iVar3;\n        iVar6 = 0;\n        do {\n            iVar7 = *(*(arg_8h + 4) + iVar3 * 4);\n            iVar1 = *(iVar7 + 8);\n            if (iVar1 == 0x47) {\n                iVar6 = iVar6 + 1;\ncode_r0x00485447:\n                fcn.0040bd9d(iVar7);\n                *piVar2 = *piVar2 + 1;\n                iVar3 = *piVar2;\n                arg_ch_00 = iVar7;\n            }\n            else {\n                if (iVar1 != 0x48) {\n                    if (iVar1 != 0x7f) goto code_r0x00485447;\n                    iVar3 = *(*(arg_8h + 4) + -4 + iVar3 * 4);\n                    goto code_r0x00485426;\n                }\n                if (iVar6 != 0) {\n                    iVar6 = iVar6 + -1;\n                    goto code_r0x00485447;\n                }\n                iVar3 = iVar3 + 1;\n                arg_ch = CONCAT13(1, arg_ch._0_3_);\n                *piVar2 = iVar3;\n            }\n        } while (arg_ch._3_1_ == '\\0');\n        var_eh._0_2_ = stack0xfffffff0;\n        var_10h = 0x7f;\n        fcn.0040bd9d(&fcn.00485396::var_18h);\n        arg_8h = 0;\n        if (*(*var_24h + 8) != 0x7f) {\n            uVar5 = 0xffffffff;\n            do {\n                uStack60 = 0xffffffff;\n                var_3ch = 1;\n                iVar3 = fcn.0041d993(0x4854a3, &fcn.00485396::arg_8h, &fcn.00485396::var_3ch, 0, 0, 1, 0xffffffff);\n                if (iVar3 < 0) goto code_r0x004854dc;\n                fcn.00466fef(&fcn.00485396::var_3ch);\n                if (*(var_24h[arg_8h] + 8) == 0x40) {\n                    if (*(var_24h[arg_8h + 1] + 8) == 0x7f) {\n                        arg_8h_00 = 0x6e;\n                        goto code_r0x00485519;\n                    }\n                    arg_8h = arg_8h + 1;\n                }\n            } while (*(var_24h[arg_8h] + 8) != 0x7f);\n        }\n        uVar5 = 0;\n    }\n    else {\n        iVar3 = *(iVar6 + -4 + iVar4 * 4);\ncode_r0x00485426:\n        arg_ch_00 = *(iVar3 + 10);\n        arg_8h_00 = 0x6f;\ncode_r0x00485519:\n        uVar5 = 0xffffffff;\n        fcn.004734ba(arg_8h_00, arg_ch_00);\n    }\ncode_r0x004854dc:\n    fcn.0040e8a0();\n    fcn.0041d6ea();\n    var_28h = 0x49d114;\n    fcn.00405fc0();\n    fcn.0041fd94(var_24h);\n    return uVar5;\n}\n",
        "token_count": 1208
    },
    "0048557f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048557f(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    int32_t iVar1;\n    \n    fcn.0040c5e7(arg_8h);\n    iVar1 = *(in_ECX + 8);\n    if (*(in_ECX + 0xd) != '\\0') {\n        iVar1 = *(iVar1 + 0x38);\n    }\n    *(iVar1 + 0x10) = arg_ch;\n    return;\n}\n",
        "token_count": 114
    },
    "00485a1e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00485a1e(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    ulong uVar5;\n    uint arg_8h_00;\n    int32_t var_34h;\n    int32_t var_2ch;\n    uint var_24h;\n    uint var_14h;\n    \n    iVar4 = *(arg_8h + 4);\n    iVar2 = *arg_ch;\n    *arg_ch = iVar2 + 1;\n    iVar4 = *(iVar4 + (iVar2 + 1) * 4);\n    if (*(iVar4 + 8) == 0x7f) {\n        while (*(in_ECX + 0x164) != 0) {\n            iVar4 = *(in_ECX + 0x168);\n            if (*(in_ECX + 0x16d) != '\\0') {\n                iVar4 = *(iVar4 + 0x30);\n            }\n            fcn.004042fb(iVar4);\n            if ((var_34h == 4) || (var_34h == 5)) {\n                fcn.0040e8a0();\n                fcn.0040e8a0();\n                if (*(in_ECX + 0x164) != 0) {\n                    do {\n                        while( true ) {\n                            do {\n                                iVar4 = *arg_10h;\n                                *arg_10h = iVar4 + 1;\n                                uVar5 = fcn.004041dc(iVar4);\n                                if (uVar5 == 0) {\n                                    return;\n                                }\n                                piVar3 = **(uVar5 + 4);\n                            } while ((*(piVar3 + 2) != 0) || (iVar4 = *piVar3,  iVar4 == 0x14));\n                            if (iVar4 != 0x15) break;\n                            if (extraout_ECX == 0) {\n                                return;\n                            }\n                        }\n                    } while (((iVar4 != 0x16) && ((iVar4 == 0x17 || (iVar4 != 0x18)))) || (extraout_ECX != 0));\n                    *arg_10h = (uVar5 >> 0x20) + -1;\n                    return;\n                }\n                break;\n            }\n            *arg_10h = var_2ch + 1;\n            fcn.00404271();\n            fcn.0040e8a0();\n            fcn.0040e8a0();\n        }\n        iVar1 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 10);\n        arg_8h_00 = 0xb5;\n    }\n    else {\n        iVar1 = *(iVar4 + 10);\n        arg_8h_00 = 0x72;\n    }\n    fcn.004734ba(arg_8h_00, iVar1);\n    return;\n}\n",
        "token_count": 693
    },
    "00485e50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00485e50(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    iVar3 = 1;\n    var_4h = 1;\n    if (*(*(*(arg_8h + 4) + 4) + 8) == 0x7f) {\ncode_r0x00485eda:\n        iVar5 = 0;\n        do {\n            if (*(in_ECX + 0x164) == 0) {\n                fcn.004734ba(0x96, 0xffffffff);\n                return;\n            }\n            cVar1 = *(in_ECX + 0x16d);\n            piVar2 = *(in_ECX + 0x168);\n            piVar4 = piVar2;\n            if (cVar1 != '\\0') {\n                piVar4 = piVar2[0xc];\n            }\n            if (*piVar4 == 1) {\ncode_r0x00485f23:\n                iVar5 = iVar5 + 1;\n                if (cVar1 != '\\0') {\n                    piVar2 = piVar2[0xc];\n                }\n                *arg_ch = piVar2[2] + 1;\n            }\n            else {\n                piVar4 = piVar2;\n                if (cVar1 != '\\0') {\n                    piVar4 = piVar2[0xc];\n                }\n                if (*piVar4 == 2) goto code_r0x00485f23;\n                piVar4 = piVar2;\n                if (cVar1 != '\\0') {\n                    piVar4 = piVar2[0xc];\n                }\n                if (*piVar4 == 3) goto code_r0x00485f23;\n            }\n            fcn.00404271();\n        } while (iVar5 < iVar3);\n    }\n    else {\n        var_18h = 0;\n        var_10h = 0;\n        var_ch = 1;\n        iVar3 = fcn.00410540(arg_8h, &var_4h, &var_18h, 0xffffffff);\n        if (-1 < iVar3) {\n            iVar3 = *(*(arg_8h + 4) + var_4h * 4);\n            if (*(iVar3 + 8) == 0x7f) {\n                iVar3 = fcn.0040ce67();\n                fcn.0040e8a0();\n                if (iVar3 < 1) {\n                    return;\n                }\n                goto code_r0x00485eda;\n            }\n            fcn.004734ba(0x72, *(iVar3 + 10));\n        }\n        fcn.0040e8a0();\n    }\n    return;\n}\n",
        "token_count": 669
    },
    "00485f61": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00485f61(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_8h;\n    int32_t iVar5;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint var_38h;\n    uint var_28h;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    var_4h._0_1_ = '\\0';\n    var_4h._1_1_ = '\\0';\n    var_4h._2_1_ = '\\0';\n    var_4h._3_1_ = '\\0';\n    var_10h = 1;\n    fcn.00404343();\n    var_48h = 4;\n    var_44h = *arg_ch + -1;\n    var_14h = var_40h;\n    var_18h = var_44h;\ncode_r0x00485fa1:\n    do {\n        iVar5 = *arg_ch;\n        *arg_ch = iVar5 + 1;\n        var_ch = fcn.004041dc(iVar5);\n        if (var_ch == 0) break;\n        if (var_4h._2_1_ != '\\0') goto code_r0x004860a4;\n        *(in_ECX + 0xf8) = extraout_ECX;\n        piVar1 = **(var_ch + 4);\n        if (*(piVar1 + 2) == 0) {\n            iVar5 = *piVar1;\n            if (iVar5 == 0x14) {\ncode_r0x00486086:\n                iVar4 = iVar4 + 1;\n                goto code_r0x00485fa1;\n            }\n            if (iVar5 == 0x15) {\n                if ((iVar4 == 0) && (var_4h._1_1_ == '\\0')) {\n                    piVar1 = (*(var_ch + 4))[1];\n                    var_4h._0_1_ = '\\x01';\n                    var_8h = 1;\n                    if ((*(piVar1 + 2) == 0) && (*piVar1 == 6)) {\n                        iVar5 = 2;\n                        var_4h._3_1_ = '\\x01';\n                        iVar3 = 2;\n                    }\n                    else {\n                        iVar5 = &var_4h + 3;\n                        iVar2 = fcn.0040399a(var_ch, &var_8h, iVar5);\n                        iVar3 = var_8h;\n                        if (iVar2 < 0) goto code_r0x004860e0;\n                    }\n                    if (*(*(*(var_ch + 4) + iVar3 * 4) + 8) != 0x7f) {\n                        arg_8h = 0x72;\n                        goto code_r0x004860d9;\n                    }\n                    if (var_4h._3_1_ != '\\0') {\n                        var_10h = *arg_ch;\n                        var_4h._1_1_ = '\\x01';\n                    }\n                }\n                goto code_r0x00485fa1;\n            }\n            if (iVar5 == 0x16) {\n                if (iVar4 == 0) {\n                    var_40h = *arg_ch + -1;\n                    var_4h._2_1_ = '\\x01';\n                    var_14h = var_40h;\n                    goto code_r0x00485fa1;\n                }\n            }\n            else {\n                if (iVar5 == 0x17) goto code_r0x00486086;\n                if (iVar5 != 0x18) goto code_r0x00485fa1;\n            }\n            iVar4 = iVar4 + -1;\n        }\n    } while( true );\n    if (var_4h._2_1_ != '\\0') {\ncode_r0x004860a4:\n        if (var_4h != '\\0') {\n            fcn.004042c5(&var_48h);\n            iVar4 = var_10h;\n            if (var_4h._1_1_ == '\\0') {\n                iVar4 = var_14h;\n            }\n            *arg_ch = iVar4;\n            goto code_r0x004860e0;\n        }\n    }\n    iVar5 = -1;\n    *(in_ECX + 0xf8) = var_18h;\n    arg_8h = 0xa0;\ncode_r0x004860d9:\n    fcn.004734ba(arg_8h, iVar5);\ncode_r0x004860e0:\n    fcn.0040e8a0();\n    fcn.0040e8a0();\n    return;\n}\n",
        "token_count": 1146
    },
    "004860f7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004860f7(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *puVar9;\n    uint *var_1bch;\n    uint *puStack444;\n    int32_t iStack436;\n    uint uStack432;\n    int32_t iStack428;\n    uint var_bch;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    \n    var_30h = 1;\n    var_18h = 0;\n    var_14h = 0;\n    var_3ch = 0;\n    var_34h = 0;\n    if ((*(**(in_FS_OFFSET + 0x2c) + 4) < *0x4d2ffc) && (fcn.004201c2(0x4d2ffc),  *0x4d2ffc == -1)) {\n        fcn.004013dc(0x49d0d0);\n        fcn.00420023(0x442407);\n        fcn.00420178(0x4d2ffc);\n    }\n    iVar6 = *arg_ch;\n    iVar8 = *(arg_8h + 4);\n    iVar7 = iVar6 + 1;\n    *arg_ch = iVar7;\n    piVar2 = *(iVar8 + iVar7 * 4);\n    if (*(piVar2 + 2) == 0) {\n        iVar3 = *piVar2;\n        if (iVar3 == 0x1a) {\n            fcn.004734ba(0x6e, *(*(iVar8 + iVar7 * 4) + 10));\n            iVar7 = *arg_ch;\n            iVar8 = *(arg_8h + 4);\n        }\n        else {\n            if (iVar3 == 0x1c) {\n                arg_10h = 1;\n            }\n            else {\n                if (iVar3 != 0x1d) {\n                    iVar6 = *(iVar8 + iVar7 * 4);\n                    goto code_r0x00486439;\n                }\n                arg_10h = 2;\n            }\n            iVar7 = iVar6 + 2;\n            *arg_ch = iVar7;\n        }\n    }\n    if (*0x4d2380 == 0) {\n        var_8h = 2;\n    }\n    else {\n        var_8h = arg_10h;\n        if (arg_10h == 0) {\n            var_8h = 1;\n        }\n    }\n    while (*(*(iVar8 + iVar7 * 4) + 8) == 0x33) {\n        bVar4 = true;\n        var_ch = **(iVar8 + iVar7 * 4);\n        iVar6 = var_8h;\n        iVar7 = fcn.0041da6c(var_ch, &fcn.004860f7::var_14h, var_8h);\n        if (iVar7 != 0) {\n            arg_8h_00 = 0x9b;\n            goto code_r0x00486441;\n        }\n        fcn.0042518d(*(in_ECX + 0xf8), &fcn.004860f7::var_bch, 8, 10);\n        fcn.0040b606(&fcn.004860f7::var_bch);\n        fcn.004051ec(0x2e);\n        fcn.00407cf8(**(*(arg_8h + 4) + *arg_ch * 4));\n        var_10h = fcn.0041dab2(&fcn.004860f7::var_2ch, &fcn.004860f7::var_14h);\n        iVar7 = iVar6;\n        if (var_10h == 0) {\n            fcn.0040c28f(&fcn.004860f7::var_2ch, 0x4d25c0, var_14h | 0x400);\n            var_10h = fcn.0041dab2(&fcn.004860f7::var_2ch, &fcn.004860f7::var_14h);\n            if (var_10h == 0) {\n                fcn.004734ba(0x79, *(*(*(arg_8h + 4) + *arg_ch * 4) + 10));\n                fcn.0040b1ff();\n                goto code_r0x00486448;\n            }\n            bVar4 = false;\n            iVar7 = iVar6;\n        }\n        iStack428 = var_8h;\n        uStack432 = 0x400;\n        puStack444 = 0x4862c6;\n        puVar9 = var_ch;\n        iStack436 = var_10h;\n        fcn.0046ef7a(var_ch, var_10h, 0x400, var_8h);\n        puStack444 = 0x4862ce;\n        fcn.0040b1ff();\n        *arg_ch = *arg_ch + 1;\n        puStack444 = 0x4e;\n        if (*(*(*(arg_8h + 4) + *arg_ch * 4) + 8) == 0x4e) {\n            puStack444 = &fcn.004860f7::var_18h;\n            var_1bch = &fcn.004860f7::var_1bch;\n            puVar9 = 0x4862f9;\n            iVar6 = fcn.0040149f(arg_8h, arg_ch, &fcn.004860f7::var_3ch, var_1bch, puStack444);\n            if (iVar6 < 0) goto code_r0x00486448;\n            if (!bVar4) {\n                puVar9 = &fcn.004860f7::var_3ch;\n                fcn.0040c5e7(puVar9);\n            }\n        }\n        iVar8 = *arg_ch;\n        iVar6 = iVar7;\n        if (*(*(*(arg_8h + 4) + iVar8 * 4) + 8) == 0x41) {\n            iVar3 = *(arg_8h + 4);\n            iVar6 = iVar8 + 1;\n            *arg_ch = iVar6;\n            iVar3 = *(iVar3 + iVar6 * 4);\n            var_1ch = *(iVar3 + 10);\n            if (bVar4) {\n                fcn.00485bf0(puVar9);\n                iVar6 = iVar7;\n            }\n            else if (*(iVar3 + 8) == 0x4e) {\n                if (*(var_10h + 0xc) != 5) {\n                    *arg_ch = iVar8;\n                    iVar6 = fcn.00485b33(arg_8h, arg_ch, arg_8h, &fcn.004860f7::var_1bch, &fcn.004860f7::var_18h);\n                    if (iVar6 < 0) goto code_r0x00486448;\n                }\n                iVar6 = *arg_ch;\n                iVar7 = fcn.0041ec9e(arg_8h, iVar6, var_ch);\n                if (iVar7 < 0) goto code_r0x00486448;\n                if (0 < var_18h) {\n                    puVar9 = &fcn.004860f7::var_1bch;\n                    for (iVar7 = var_18h; iVar7 != 0; iVar7 = iVar7 + -1) {\n                        *puVar9 = 0;\n                        puVar9 = puVar9 + 1;\n                    }\n                }\n                cVar5 = fcn.0041e596(arg_8h, arg_ch, var_10h, &fcn.004860f7::var_1bch, 1);\n                if (cVar5 == '\\0') goto code_r0x00486448;\n            }\n            else {\n                iVar7 = fcn.0041ec9e(arg_8h, iVar6, var_ch);\n                if (iVar7 < 0) goto code_r0x00486448;\n                iVar7 = fcn.00410540(arg_8h, arg_ch, &fcn.004860f7::var_3ch, 0xffffffff);\n                if (iVar7 < 0) {\n                    arg_8h_00 = 0x6e;\n                    goto code_r0x00486441;\n                }\n                fcn.0040c5e7(&fcn.004860f7::var_3ch);\n            }\n        }\n        iVar8 = *(arg_8h + 4);\n        arg_8h_00 = 0x7f;\n        iVar1 = *(*(iVar8 + *arg_ch * 4) + 8);\n        if (iVar1 == 0x7f) goto code_r0x00486448;\n        if (iVar1 != 0x40) goto code_r0x00486441;\n        iVar7 = *arg_ch + 1;\n        *arg_ch = iVar7;\n    }\n    iVar6 = *(iVar8 + iVar7 * 4);\ncode_r0x00486439:\n    iVar6 = *(iVar6 + 10);\n    arg_8h_00 = 0x7f;\ncode_r0x00486441:\n    fcn.004734ba(arg_8h_00, iVar6);\ncode_r0x00486448:\n    fcn.0040e8a0();\n    return;\n}\n",
        "token_count": 2247
    },
    "0048649d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0048649d(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    ulong uVar7;\n    int32_t in_stack_ffffff5c;\n    uint *in_stack_ffffff60;\n    uint var_80h;\n    int32_t var_7ch;\n    int32_t var_78h;\n    uint var_70h;\n    uint var_60h;\n    uint var_50h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_3h;\n    \n    var_3h._0_1_ = '\\0';\n    var_3h._1_1_ = '\\0';\n    var_18h = 1;\n    var_14h = 1;\n    var_3h._2_1_ = '\\0';\n    fcn.00404343();\n    var_30h = 0;\n    var_24h = 1;\n    var_34h = 1;\n    var_44h = 1;\n    var_28h = 0;\n    var_40h = 0;\n    var_38h = 0;\n    var_50h = 0;\n    var_48h = 0;\n    var_80h = 5;\n    if (*(*(*(arg_8h + 4) + 4) + 8) == 0x7f) {\ncode_r0x004866fc:\n        fcn.004734ba(in_stack_ffffff5c, in_stack_ffffff60);\n    }\n    else {\n        var_7ch = *arg_ch + -1;\n        in_stack_ffffff60 = &var_18h;\n        var_1ch = var_7ch;\n        iVar5 = fcn.00410540(arg_8h, in_stack_ffffff60, &var_30h, 0xffffffff);\n        if (-1 < iVar5) {\n            var_ch = 0;\ncode_r0x00486537:\n            do {\n                do {\n                    in_stack_ffffff5c = *arg_ch;\n                    *arg_ch = in_stack_ffffff5c + 1;\n                    uVar7 = fcn.004041dc(in_stack_ffffff5c);\n                    iVar5 = uVar7 >> 0x20;\n                    var_10h = uVar7;\n                    if (var_10h == 0) {\ncode_r0x004866ec:\n                        *(in_ECX + 0xf8) = var_1ch;\n                        goto code_r0x004866fc;\n                    }\n                    *(in_ECX + 0xf8) = extraout_ECX;\n                    ppiVar1 = *(var_10h + 4);\n                } while (*(*ppiVar1 + 2) != 0);\n                iVar2 = **ppiVar1;\n                if (iVar2 != 0x14) {\n                    if (iVar2 == 0x15) {\n                        if ((iVar5 == 0) && (var_3h._1_1_ == '\\0')) {\n                            var_3h._0_1_ = '\\x01';\n                            var_8h = 1;\n                            if ((*(ppiVar1[1] + 2) == 0) && (*ppiVar1[1] == 6)) {\n                                var_3h._2_1_ = '\\x01';\n                                var_8h = 2;\n                                if (*(ppiVar1[2] + 2) != 0x7f) goto code_r0x004866fc;\n                            }\n                            if (var_3h._2_1_ == '\\0') {\n                                do {\n                                    iVar2 = var_10h;\n                                    in_stack_ffffff5c = var_10h;\n                                    iVar6 = fcn.00410540(var_10h, &var_8h, &var_40h, 0xffffffff);\n                                    iVar5 = var_8h;\n                                    if (iVar6 < 0) goto code_r0x00486703;\n                                    piVar3 = *(*(iVar2 + 4) + var_8h * 4);\n                                    if ((*(piVar3 + 2) == 0) && (*piVar3 == 0xf)) {\n                                        var_8h = var_8h + 1;\n                                        in_stack_ffffff60 = &var_8h;\n                                        in_stack_ffffff5c = var_10h;\n                                        iVar5 = fcn.00410540(var_10h, in_stack_ffffff60, &var_50h, 0xffffffff);\n                                        if (iVar5 < 0) goto code_r0x00486703;\n                                        cVar4 = fcn.0040cf49();\n                                        iVar5 = var_8h;\n                                        if (cVar4 == '\\0') {\n                                            cVar4 = fcn.00470d2a();\n                                            iVar5 = var_8h;\n                                            goto joined_r0x00486661;\n                                        }\n                                    }\n                                    else {\n                                        cVar4 = fcn.0040ca74();\njoined_r0x00486661:\n                                        if (cVar4 != '\\0') {\n                                            var_3h._2_1_ = '\\x01';\n                                            break;\n                                        }\n                                    }\n                                    iVar2 = *(*(var_10h + 4) + iVar5 * 4);\n                                    if (*(iVar2 + 8) != 0x40) goto code_r0x0048667f;\n                                    var_8h = iVar5 + 1;\n                                } while( true );\n                            }\n                            var_14h = *arg_ch;\n                            var_3h._1_1_ = '\\x01';\n                        }\n                        goto code_r0x00486537;\n                    }\n                    if (iVar2 != 0x16) {\n                        if (iVar2 == 0x17) goto code_r0x004866a5;\n                        if (iVar2 != 0x18) goto code_r0x00486537;\n                        if (iVar5 == 0) {\n                            iVar5 = *arg_ch + -1;\n                            var_78h = iVar5;\n                            if (var_3h == '\\0') goto code_r0x004866ec;\n                            fcn.004042c5(&var_80h);\n                            if (var_3h._1_1_ == '\\0') {\n                                *arg_ch = iVar5;\n                            }\n                            else {\n                                *arg_ch = var_14h;\n                            }\n                            break;\n                        }\n                    }\n                    var_ch = iVar5 + -1;\n                    goto code_r0x00486537;\n                }\ncode_r0x004866a5:\n                var_ch = iVar5 + 1;\n            } while( true );\n        }\n    }\ncode_r0x00486703:\n    fcn.0040e8a0();\n    fcn.0040e8a0();\n    fcn.0040e8a0();\n    fcn.0040e8a0();\n    fcn.0040e8a0();\n    return;\ncode_r0x0048667f:\n    if (*(iVar2 + 8) != 0x7f) goto code_r0x004866fc;\n    goto code_r0x00486537;\n}\n",
        "token_count": 1747
    },
    "00486732": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00486732(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t extraout_EDX;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    var_8h = 0;\n    var_4h = 1;\n    *arg_ch = *arg_ch + 1;\n    fcn.0048735e(&var_10h);\n    fcn.0040e8a0();\n    iVar3 = *(in_ECX + 0x174);\n    if (*(in_ECX + 0x179) != '\\0') {\n        iVar3 = *(iVar3 + 0x10);\n    }\n    iVar3 = fcn.00410540(arg_8h, arg_ch, iVar3, 0xffffffff);\n    if (-1 < iVar3) {\n        cVar1 = *(in_ECX + 0x179);\n        cVar2 = fcn.00485520();\n        if (cVar2 != '\\0') {\n            iVar3 = extraout_EDX;\n            if (cVar1 != '\\0') {\n                iVar3 = *(extraout_EDX + 0x10);\n            }\n            if (*(iVar3 + 0xc) != 0xf) {\n                return;\n            }\n        }\n    }\n    fcn.00485538();\n    fcn.004734ba(0xa5, *(*(*(arg_8h + 4) + -4 + *arg_ch * 4) + 10));\n    return;\n}\n",
        "token_count": 377
    },
    "00486bd4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_6ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00486bd4(int32_t arg_8h, int32_t *arg_ch, int32_t **arg_10h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    int32_t **arg_8h_00;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t extraout_ECX;\n    int32_t extraout_EDX;\n    int32_t iVar6;\n    uint unaff_EDI;\n    uint uVar7;\n    int32_t *piVar8;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_40h;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint *var_8h;\n    \n    if (arg_10h[3] == 0xf) {\n        var_ch = *arg_10h;\n    }\n    else {\n        var_ch = NULL;\n    }\n    var_8h = &fcn.00486bd4::var_5ch;\n    var_28h = 0x49d100;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    var_5ch = 0;\n    var_54h = 0;\n    var_50h = 1;\n    fcn.0040c25d();\n    var_14h = 0;\n    var_10h = *(arg_8h + 4);\n    cVar3 = fcn.00485520();\n    if (cVar3 == '\\0') {\n        iVar4 = *(*(var_10h + extraout_EDX * 4) + 10);\n    }\n    else {\n        iVar5 = *(arg_8h + 4);\n        iVar4 = 0x35;\n        var_18h = 0x35;\n        var_10h = *(iVar5 + extraout_EDX * 4);\n        iVar6 = extraout_EDX;\n        if (*(var_10h + 2) == 0x35) {\n            if (&fcn.00486bd4::var_38h != *var_10h) {\n                iVar4 = *var_10h;\n                fcn.0040c1c3(iVar4);\n                iVar6 = *arg_ch;\n                iVar5 = *(arg_8h + 4);\n            }\n            iVar6 = iVar6 + 1;\n            *arg_ch = iVar6;\n        }\n        iVar5 = *(iVar5 + iVar6 * 4);\n        uVar1 = *(iVar5 + 8);\n        var_10h = uVar1;\n        if (uVar1 != 0x47) {\n            if ((uVar1 == 0x4e) && (arg_10h[3] == 0xf)) {\n                piVar8 = 0x8;\n                iVar5 = fcn.00401d5f(arg_8h, arg_ch, &fcn.00486bd4::arg_10h, 8);\n                arg_ch = piVar8;\njoined_r0x00486da8:\n                if (-1 < iVar5) {\n                    uVar7 = fcn.004867e8(arg_8h, arg_ch, iVar4);\n                    goto code_r0x00486f92;\n                }\n            }\n            else {\n                if (var_34h == 0) {\n                    iVar2 = *(iVar5 + 10);\ncode_r0x00486dc6:\n                    uVar7 = 0x80;\n                }\n                else {\n                    cVar3 = (**(*var_ch + 0xc))(&fcn.00486bd4::var_38h);\n                    if (cVar3 != '\\0') goto code_r0x00486d3f;\n                    iVar2 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 10);\n                    uVar7 = 0x85;\n                }\n                fcn.004734ba(uVar7, iVar2);\n            }\n            uVar7 = 0xffffffff;\n            goto code_r0x00486f92;\n        }\n        if (var_34h != 0) {\n            cVar3 = (**(*var_ch + 8))(&fcn.00486bd4::var_38h);\n            if (cVar3 != '\\0') {\n                *arg_ch = *arg_ch + -1;\n                iVar4 = arg_8h;\n                iVar5 = fcn.00485396(arg_8h, arg_ch, &fcn.00486bd4::var_28h);\n                if (iVar5 < 0) goto code_r0x00486c53;\n                var_14h = 1;\ncode_r0x00486d3f:\n                uVar1 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 8);\n                var_10h = uVar1;\n                if (((uVar1 == var_18h) || (uVar1 == 0x4e)) || (uVar1 == 0x47)) {\n                    fcn.0040b606(var_38h);\n                    iVar5 = fcn.004852bf(var_14h, arg_10h, &fcn.00486bd4::var_6ch, &fcn.00486bd4::var_28h, var_14h);\n                    fcn.0040b1ff();\n                    goto joined_r0x00486da8;\n                }\n                cVar3 = fcn.00470aae();\n                if (cVar3 == '\\0') {\n                    iVar2 = *(extraout_ECX + 10);\n                    goto code_r0x00486dc6;\n                }\n                *arg_ch = *arg_ch + 1;\n                var_4ch = 0;\n                uVar7 = 0xffffffff;\n                var_44h = 0;\n                var_40h = 1;\n                iVar4 = fcn.00410540(arg_8h, arg_ch, arg_8h, 0xffffffff);\n                if (-1 < iVar4) {\n                    iVar4 = *(*(arg_8h + 4) + *arg_ch * 4);\n                    if (*(iVar4 + 8) == 0x7f) {\n                        iVar2 = var_10h;\n                        if (iVar2 != 0x41) {\n                            fcn.0040b606(var_38h);\n                            iVar4 = fcn.004852bf(0, arg_10h, &fcn.00486bd4::var_6ch, &fcn.00486bd4::var_28h, \n                                                 &fcn.00486bd4::var_8h);\n                            fcn.0040b1ff();\n                            if (-1 < iVar4) {\n                                if (iVar2 == 0x52) {\n                                    fcn.0040cb70(var_8h);\n                                }\n                                else {\n                                    if (iVar2 == 0x53) {\n                                        fcn.0041b4a2(&fcn.00486bd4::var_4ch);\n                                    }\n                                    else if (iVar2 == 0x54) {\n                                        fcn.00470d3c(&fcn.00486bd4::var_4ch);\n                                    }\n                                    else {\n                                        if (iVar2 == 0x55) {\n                                            fcn.0041b451(var_8h);\n                                            goto code_r0x00486efa;\n                                        }\n                                        fcn.00470fde(&fcn.00486bd4::var_4ch);\n                                    }\n                                    fcn.0040c5e7(var_8h);\n                                }\n                            }\n                        }\ncode_r0x00486efa:\n                        fcn.00466fef(0x486f06);\n                        arg_8h_00 = arg_10h;\n                        if (arg_10h[3] == 0xf) {\n                            fcn.00401ea8(8);\n                        }\n                        fcn.0040b606(var_38h);\n                        uVar7 = fcn.0048532f(arg_8h_00, &fcn.00486bd4::var_6ch, &fcn.00486bd4::var_28h);\n                        fcn.0040b1ff();\n                    }\n                    else {\n                        fcn.004734ba(0x72, *(iVar4 + 10));\n                    }\n                }\n                fcn.0040e8a0();\ncode_r0x00486f92:\n                fcn.0040b1ff();\n                fcn.0040e8a0();\n                var_28h = 0x49d100;\n                fcn.00466f23();\n                fcn.0041fd94(var_24h);\n                return uVar7;\n            }\n            iVar4 = 0x85;\n        }\n    }\n    fcn.004734ba(iVar4, unaff_EDI);\ncode_r0x00486c53:\n    fcn.0040b1ff();\n    fcn.0040e8a0();\n    var_28h = 0x49d100;\n    fcn.00466f23();\n    fcn.0041fd94(var_24h);\n    return 0xffffffff;\n}\n",
        "token_count": 2145
    },
    "0048735e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048735e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint unaff_ESI;\n    \n    if (*(in_ECX + 9) == '\\0') {\n        iVar1 = fcn.0041fd5b(0x18, unaff_ESI);\n        *(iVar1 + 8) = 0;\n        fcn.004119e0(arg_8h);\n        *(iVar1 + 0x10) = in_ECX[1];\n        in_ECX[1] = iVar1;\n    }\n    else {\n        fcn.0040c5e7(arg_8h);\n        *(in_ECX + 9) = 0;\n    }\n    *in_ECX = *in_ECX + 1;\n    return;\n}\n",
        "token_count": 185
    },
    "004873f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004873f4(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_stack_fffffed0;\n    uint var_124h;\n    uint var_24h;\n    \n    if (arg_ch != 0) {\n        fcn.0048746c(&var_24h);\n        iVar1 = fcn.004314e7(&var_124h, 0x80, arg_ch, &var_24h);\n        if (iVar1 == 0) {\n            var_124h._0_2_ = 0;\n        }\n        in_stack_fffffed0 = &var_124h;\n    }\n    fcn.0040b606(in_stack_fffffed0);\n    return arg_8h;\n}\n",
        "token_count": 186
    },
    "0048746c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0048746c(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_24h;\n    \n    if (arg_8h == NULL) {\n        fcn.0045fed6(0x80004005);\n        in_ECX = extraout_ECX;\n    }\n    iVar1 = fcn.00430147(&var_24h, in_ECX);\n    if (iVar1 == 0) {\n        puVar2 = &var_24h;\n        puVar3 = arg_8h;\n        for (iVar1 = 9; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    else {\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 236
    },
    "00487d67": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00487d67(ulong *arg_8h)\n\n{\n    ulong uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    ulong *puVar3;\n    \n    puVar3 = *(in_ECX + 8);\n    if (*(in_ECX + 0xd) != '\\0') {\n        puVar3 = *(puVar3 + 7);\n    }\n    uVar1 = *arg_8h;\n    fcn.0040e8a0();\n    *puVar3 = uVar1;\n    *(puVar3 + 0xc) = 3;\n    iVar2 = *(in_ECX + 8);\n    if (*(in_ECX + 0xd) != '\\0') {\n        iVar2 = *(iVar2 + 0x38);\n    }\n    *(iVar2 + 0x10) = 0;\n    return;\n}\n",
        "token_count": 200
    },
    "00487e80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00487e80(int32_t arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint *puVar7;\n    int32_t *in_ECX;\n    int32_t iVar8;\n    int32_t *piVar9;\n    int32_t unaff_EBX;\n    uint *puVar10;\n    int32_t *piVar11;\n    int32_t unaff_ESI;\n    uint32_t uVar12;\n    uint *puVar13;\n    uint32_t unaff_EDI;\n    uint32_t uVar14;\n    uint *puVar15;\n    ulong uVar16;\n    uchar *arg_8h_00;\n    uint in_stack_fffffc38;\n    int32_t *in_stack_fffffc3c;\n    int32_t iVar17;\n    uint32_t uStack932;\n    int32_t *piStack928;\n    uint32_t uStack924;\n    uint uStack920;\n    int32_t iStack916;\n    int32_t *piStack912;\n    int32_t iStack908;\n    uint32_t uStack904;\n    int32_t iStack900;\n    uint uStack896;\n    uchar auStack892 [4];\n    uint *puStack888;\n    uint32_t uStack884;\n    int32_t *piStack880;\n    uint32_t uStack876;\n    uint uStack872;\n    uint uStack868;\n    uint uStack864;\n    uint uStack860;\n    int32_t *piStack856;\n    int32_t *piStack852;\n    uchar auStack844 [4];\n    uint uStack840;\n    int32_t iStack836;\n    int32_t iStack832;\n    int32_t *piStack828;\n    uint uStack824;\n    int32_t iStack820;\n    uint32_t auStack812 [4];\n    uint auStack796 [2];\n    int32_t aiStack788 [196];\n    \n    piStack928 = arg_10h;\n    puStack888 = NULL;\n    iVar2 = *(*(arg_8h + 4) + piStack928 * -4 + 4);\n    fcn.00408e90();\n    puVar7 = *(iVar2 + 8);\n    uStack840 = *puVar7;\n    iStack836 = puVar7[1];\n    iStack832 = puVar7[2];\n    piStack828 = puVar7[3];\n    *piStack828 = *piStack828 + 1;\n    auStack812[0] = piStack928 + *(arg_8h + 8) + -3;\n    uStack924 = auStack812[0] / 2;\n    if (uStack924 * 2 != auStack812[0]) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        iVar2 = *(*in_ECX + 4);\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 4;\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n        goto code_r0x00488430;\n    }\n    uStack884 = 0x49cde8;\n    uStack876 = 0;\n    uStack872 = 0;\n    piStack880 = NULL;\n    auStack812[0] = uStack924;\n    cVar1 = fcn.00488bfa(&stack0xfffffcb8, &stack0xfffffcc8);\n    if (cVar1 == '\\0') {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        iVar2 = *(*in_ECX + 4);\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 2;\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n        iStack900 = 0;\n    }\n    else {\n        uStack824 = 0;\n        uStack920 = 0;\n        iStack908 = 3 - unaff_EBX;\n        iVar2 = 0;\n        if (0 < iStack820) {\n            uStack924 = iStack908 * 4;\n            uVar12 = 0xffffffff;\n            uVar14 = uStack932;\n            do {\n                piStack928 = uVar12 + 1;\n                uStack904 = uVar14;\n                fcn.004640c5(&stack0xfffffc60);\n                iVar2 = *(piStack928 + *(arg_8h + 4));\n                fcn.00408e90();\n                puVar7 = *(iVar2 + 8);\n                uStack876 = uStack932;\n                uStack868 = *puVar7;\n                uStack864 = puVar7[1];\n                uStack860 = puVar7[2];\n                piStack856 = puVar7[3];\n                *piStack856 = *piStack856 + 1;\n                iVar2 = uStack932 * 0x18;\n                cVar1 = fcn.00488444(&stack0xfffffc9c, &stack0xfffffcec + iVar2);\n                if (cVar1 == '\\0') {\n                    fcn.0040e8a0();\n                    *arg_ch = 0;\n                    arg_ch[3] = 1;\n                    iVar2 = *(*in_ECX + 4);\n                    iVar3 = *(iVar2 + 8 + in_ECX);\n                    if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                        iVar3 = *(iVar3 + 0x38);\n                    }\n                    *(iVar3 + 0x14) = 1;\n                    iVar3 = *(iVar2 + 8 + in_ECX);\n                    if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                        iVar3 = *(iVar3 + 0x38);\n                    }\n                    *(iVar3 + 0x18) = 0;\ncode_r0x00488364:\n                    fcn.0040b1ff();\n                    goto code_r0x0048840a;\n                }\n                piStack880 = &stack0xfffffcec + unaff_ESI;\n                if ((*piStack880 == 0x10) && (*(&stack0xfffffcf0 + unaff_ESI) == 0)) {\n                    piStack928 = *(arg_8h + 4);\n                    if (*(*(piStack928 + unaff_EBX + 4) + 0xc) != 0xc) {\n                        fcn.0040e8a0();\n                        *arg_ch = 0;\n                        arg_ch[3] = 1;\n                        iVar2 = *(*in_ECX + 4);\n                        iVar3 = *(iVar2 + 8 + in_ECX);\n                        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                            iVar3 = *(iVar3 + 0x38);\n                        }\n                        *(iVar3 + 0x14) = 5;\n                        iVar3 = *(iVar2 + 8 + in_ECX);\n                        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                            iVar3 = *(iVar3 + 0x38);\n                        }\n                        *(iVar3 + 0x18) = 0;\n                        goto code_r0x00488364;\n                    }\n                    uVar16 = fcn.00471e24();\n                    uStack924 = uVar16 - 1U >> 2;\n                    uVar14 = uVar14 + uStack924;\n                    iStack836 = iStack836 + (uStack924 + 1) * *(&stack0xfffffcf4 + unaff_ESI);\n                    piVar9 = uVar16 >> 0x20;\n                    if (uStack932 < iStack916) {\n                        puStack888 = &stack0xfffffce4 + iStack916 * 0x18;\n                        iVar3 = iStack916 - uStack932;\n                        puVar7 = &stack0xfffffce4 + uVar14 * 0x18;\n                        puVar10 = puStack888;\n                        do {\n                            puVar13 = puVar10;\n                            puVar15 = puVar7;\n                            for (iVar8 = 6; iVar8 != 0; iVar8 = iVar8 + -1) {\n                                *puVar15 = *puVar13;\n                                puVar13 = puVar13 + 1;\n                                puVar15 = puVar15 + 1;\n                            }\n                            iVar3 = iVar3 + -1;\n                            piVar9 = piStack880;\n                            puVar7 = puVar7 + -6;\n                            in_ECX = piStack912;\n                            puVar10 = puVar10 + -6;\n                            uStack932 = uStack884;\n                        } while (iVar3 != 0);\n                    }\n                    piVar11 = *(unaff_EBX + 4 + piStack928);\n                    if (piVar11[3] == 0xc) {\n                        iVar3 = *piVar11;\n                    }\n                    else {\n                        iVar3 = 0;\n                    }\n                    piStack928 = *(iVar3 + 8);\n                    iVar3 = uStack924 + 1 + uStack932;\n                    if (uStack932 < iVar3) {\n                        iVar3 = iVar3 - uStack932;\n                        piVar11 = piStack928;\n                        do {\n                            iVar8 = *piVar11;\n                            uStack932 = uStack932 + 1;\n                            piVar9[1] = 0;\n                            piVar11 = piVar11 + 1;\n                            piVar9[-2] = iVar8;\n                            *piVar9 = 0x10;\n                            piVar9[2] = *(&stack0xfffffcf4 + unaff_ESI);\n                            iVar3 = iVar3 + -1;\n                            piVar9 = piVar9 + 6;\n                            in_ECX = piStack912;\n                        } while (iVar3 != 0);\n                    }\n                    uStack932 = uStack932 - 1;\n                    unaff_EDI = uVar14;\n                }\n                else {\n                    iStack836 = iStack836 + *(&stack0xfffffcf4 + unaff_ESI);\n                }\n                unaff_EBX = unaff_EBX + 8;\n                in_stack_fffffc38 = 0x488192;\n                fcn.0040b1ff();\n                uVar4 = iVar2 + 1;\n                uVar12 = uStack932;\n                iVar2 = iStack900;\n                uStack932 = uVar4;\n            } while (uVar4 < iStack832);\n        }\n        iStack900 = iVar2;\n        if (arg_10h == 0) {\n            in_stack_fffffc3c = 0x488385;\n            uStack904 = fcn.00488e0b(&stack0xfffffcc0, arg_8h);\n            if (uStack904 != 0) goto code_r0x004881c8;\n            fcn.0040e8a0();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n        }\n        else {\n            iStack832 = fcn.00471dda();\ncode_r0x004881c8:\n            arg_8h_00 = &stack0xfffffc84;\n            fcn.00487dad(arg_8h_00);\n            fcn.00488fbd(&stack0xfffffcbc, arg_8h, 4 - unaff_ESI, arg_8h_00, in_stack_fffffc38, in_stack_fffffc3c);\n            piVar9 = piStack852;\n            piStack852 = in_stack_fffffc3c;\n            iVar3 = fcn.0041fbf0(&stack0xfffffca0);\n            if (iVar3 == 0) {\n                fcn.004734ba(0x67, 0xffffffff);\n                uVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0);\n                (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar5);\n            }\n            piStack856 = piVar9;\n            uVar6 = fcn.00407d93();\n            uVar5 = uVar6;\n            fcn.004083e0(uVar6, 1);\n            if (piStack852 == 0x1) {\n                uVar6 = fcn.00411df0(uVar6, 2, 1);\n                fcn.00488aa2(&stack0xfffffcb4, uVar6);\n            }\n            iVar3 = 0;\n            if (0 < piStack856) {\n                iVar8 = unaff_EDI << 2;\n                do {\n                    iVar17 = iVar3 + 1;\n                    puVar7 = fcn.00411df0(uVar5, 2, 1);\n                    iVar3 = **(iVar2 + iVar3 * 4) * 0x18;\n                    if (*(&stack0xfffffcd4 + iVar3) == 0x10) {\n                        iVar3 = *(iVar8 + 4 + *(arg_8h + 4));\n                        if (*(iVar3 + 0xc) == 0xc) {\n                            fcn.0040c5e7(iVar3);\n                            iVar3 = iVar17;\n                        }\n                        else {\n                            uVar6 = fcn.00471dda();\n                            fcn.0040e8a0();\n                            puVar7[3] = 7;\n                            *puVar7 = uVar6;\n                            iVar3 = iVar17;\n                        }\n                    }\n                    else {\n                        fcn.00488aa2(&stack0xfffffccc + iVar3, puVar7);\n                        iVar3 = iVar17;\n                    }\n                    iVar8 = iVar8 + 8;\n                } while (iVar3 < piStack856);\n            }\n            if ((arg_10h == 0) && (*(**(arg_8h + 4) + 0xc) == 4)) {\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(uStack896);\n            }\n        }\ncode_r0x0048840a:\n        uVar12 = uStack884;\n        uVar14 = 0;\n        if (uStack884 != 0) {\n            do {\n                fcn.0041fd4d(*(iStack900 + uVar14 * 4));\n                *(iStack900 + uVar14 * 4) = 0;\n                uVar14 = uVar14 + 1;\n            } while (uVar14 < uVar12);\n        }\n    }\n    fcn.0041fd94(iStack900);\ncode_r0x00488430:\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 3432
    },
    "00488aa2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00488aa2(double *arg_8h, double *arg_ch)\n\n{\n    float fVar1;\n    uint uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint var_18h;\n    uint var_10h;\n    double dStack12;\n    \n    if (0xf < *(arg_8h + 1)) goto code_r0x00488ba3;\n    // switch table (16 cases) at 0x488bba\n    switch(*(*(arg_8h + 1) * 4 + 0x488bba)) {\n    case 0x488ac1:\n        uVar3 = fcn.0046eaef();\n        fcn.0040b5c1(uVar3);\n        fcn.0041fd94(uVar3);\n        break;\n    case 0x488ae2:\n        fcn.0040b5c1(*arg_8h);\n        break;\n    default:\n        uVar4 = *arg_8h;\ncode_r0x00488af3:\n        fcn.0040e8a0();\n        *(arg_ch + 0xc) = 1;\ncode_r0x00488b04:\n        *arg_ch = uVar4;\n        break;\n    case 0x488b0b:\n        uVar3 = *arg_8h;\n        fcn.0040e8a0();\n        *(arg_ch + 4) = 0;\n        *(arg_ch + 0xc) = 2;\n        *arg_ch = uVar3;\n        break;\n    case 0x488b26:\n        uVar4 = *arg_8h;\n        goto code_r0x00488af3;\n    case 0x488b2b:\n        uVar4 = *arg_8h;\n        goto code_r0x00488af3;\n    case 0x488b30:\n        uVar4 = *arg_8h;\n        goto code_r0x00488af3;\n    case 0x488b35:\n        fVar1 = *arg_8h;\n        goto code_r0x00488b37;\n    case 0x488b52:\n        fVar1 = *arg_8h;\ncode_r0x00488b37:\n        dStack12 = fVar1;\n        fcn.0040e8a0();\n        *arg_ch = dStack12;\n        *(arg_ch + 0xc) = 3;\n        break;\n    case 0x488b56:\n        uVar4 = *arg_8h;\n        fcn.0040e8a0();\n        *(arg_ch + 0xc) = 7;\n        goto code_r0x00488b04;\n    case 0x488b6b:\n        uVar3 = *arg_8h;\n        uVar2 = *(arg_8h + 4);\n        fcn.0040e8a0();\n        *(arg_ch + 4) = uVar2;\n        *(arg_ch + 0xc) = 2;\n        *arg_ch = uVar3;\n        break;\n    case 0x488b8b:\n        var_18h._0_2_ = 9;\n        var_10h = *arg_8h;\n        fcn.00470bfd(&var_18h);\n    }\ncode_r0x00488ba3:\n    if (*(arg_8h + 0x14) != 0) {\n        fcn.0042490e(*(arg_8h + 0x14));\n    }\n    return;\n}\n",
        "token_count": 803
    },
    "00488fbd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00488fbd(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, uint32_t arg_1ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    char cVar4;\n    ushort uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t *extraout_EDX;\n    uint32_t uVar10;\n    float10 fVar11;\n    ulong uVar12;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar2 = arg_8h;\n    var_8h = 0;\n    *(arg_8h + 0x18) = 0;\n    *(arg_8h + 0x1c) = 0;\n    *(arg_8h + 0x2c) = 0;\n    if (0 < *(arg_8h + 0xc)) {\n        arg_10h = arg_10h << 2;\n        do {\n            iVar8 = **(arg_18h + var_8h * 4);\n            iVar9 = iVar8 * 0x18;\n            iVar7 = *(iVar9 + 0x38 + iVar2);\n            if (iVar7 != 0x10) {\n                *((iVar8 + 2) * 0x18 + iVar2) = 0;\n                iVar7 = *(iVar9 + 0x38 + iVar2);\n            }\n            *(iVar9 + 0x44 + iVar2) = 0;\n    // switch table (17 cases) at 0x489285\n            switch(iVar7) {\n            case 0:\n            case 1:\n                uVar3 = fcn.0040ce67();\n                *((iVar8 + 2) * 0x18 + iVar2) = uVar3;\n                break;\n            case 2:\n            case 3:\n                uVar5 = fcn.0040ce67();\n                *((iVar8 + 2) * 0x18 + iVar2) = uVar5;\n                break;\n            case 4:\n                uVar6 = fcn.0040ce67();\n                goto code_r0x004891b3;\n            case 5:\n            case 0xb:\n            case 0xc:\n                uVar6 = fcn.0040cc8f();\n                goto code_r0x004891b3;\n            case 6:\n                iVar7 = *(arg_10h + *(arg_ch + 4));\n                cVar4 = fcn.00401fb9(0x2a);\n                if (cVar4 == '\\0') {\n                    fcn.00408e90();\n                    uVar10 = fcn.004248f3(**(iVar7 + 8));\n                    if (uVar10 < 0x10000) {\n                        uVar10 = 0x10000;\n                    }\n                    arg_8h = fcn.0042e99c(uVar10 + 1);\n                    fcn.00408e90();\n                    uVar6 = fcn.0046eecc();\n                    fcn.0042d580(arg_8h, uVar6);\n                    fcn.0041fd94(uVar6);\n                    *(iVar9 + 0x44 + iVar2) = arg_8h;\n                }\n                else {\ncode_r0x0048903b:\n                    arg_8h = 0;\n                }\n                goto code_r0x004890ab;\n            case 7:\n                iVar7 = *(arg_10h + *(arg_ch + 4));\n                cVar4 = fcn.00401fb9(0x2a);\n                if (cVar4 != '\\0') goto code_r0x0048903b;\n                fcn.00408e90();\n                uVar10 = fcn.004248f3(**(iVar7 + 8));\n                if (uVar10 < 0x10000) {\n                    uVar10 = 0x10000;\n                }\n                arg_8h = fcn.0042e99c(uVar10 * 2 + 2);\n                iVar7 = *(arg_10h + *(arg_ch + 4));\n                fcn.00408e90();\n                fcn.00424913(arg_8h, **(iVar7 + 8));\n                *(iVar9 + 0x44 + iVar2) = arg_8h;\n                goto code_r0x004890ab;\n            case 8:\ncode_r0x004891ae:\n                uVar6 = fcn.00471dda();\ncode_r0x004891b3:\n                iVar8 = (iVar8 + 2) * 0x18;\ncode_r0x004891b9:\n                *(iVar8 + iVar2) = uVar6;\n                break;\n            case 9:\n                fVar11 = fcn.0040cfb5();\n                *((iVar8 + 2) * 0x18 + iVar2) = fVar11;\n                break;\n            case 10:\n                fVar11 = fcn.0040cfb5();\n                *((iVar8 + 2) * 0x18 + iVar2) = fVar11;\n                break;\n            case 0xd:\n            case 0xe:\n                uVar12 = fcn.0040cc8f();\n                uVar6 = uVar12;\n                iVar8 = (iVar8 + 2) * 0x18;\n                *(iVar8 + 4 + iVar2) = uVar12 >> 0x20;\n                goto code_r0x004891b9;\n            case 0xf:\n                cVar4 = fcn.0041da5f();\n                if (cVar4 == '\\0') {\n                    arg_8h = 0;\n                }\n                else {\n                    if (extraout_EDX[3] == 8) {\n                        iVar7 = *extraout_EDX;\n                    }\n                    else {\n                        iVar7 = 0;\n                    }\n                    arg_8h = *(iVar7 + 8);\n                }\ncode_r0x004890ab:\n                *((iVar8 + 2) * 0x18 + iVar2) = arg_8h;\n                break;\n            case 0x10:\n                if (*(iVar9 + 0x3c + iVar2) != 0) {\n                    *(iVar9 + 0x3c + iVar2) = 0;\n                    piVar1 = *(arg_10h + *(arg_ch + 4));\n                    if (piVar1[3] != 0xc) goto code_r0x004891ae;\n                    iVar8 = (iVar8 + 2) * 0x18;\n                    uVar6 = *(*piVar1 + 8);\n                    goto code_r0x004891b9;\n                }\n            }\n            arg_10h = arg_10h + 8;\n            var_8h = var_8h + 1;\n        } while (var_8h < *(iVar2 + 0xc));\n    }\n    uVar10 = 0;\n    if (arg_1ch != 0) {\n        do {\n            fcn.0041fd4d(*(arg_18h + uVar10 * 4));\n            *(arg_18h + uVar10 * 4) = 0;\n            uVar10 = uVar10 + 1;\n        } while (uVar10 < arg_1ch);\n    }\n    fcn.0041fd94(arg_18h);\n    return;\n}\n",
        "token_count": 1684
    },
    "004892c9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\ndouble __cdecl fcn.004892c9(int32_t arg_8h)\n\n{\n    uchar uVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    float10 fVar3;\n    double dVar4;\n    int32_t iVar5;\n    int32_t iStack36;\n    int32_t aiStack32 [2];\n    uint uStack24;\n    uint uStack20;\n    \n    uVar1 = *0x4d157d;\n    if (*0x4d152c == 1) {\n        dVar4 = 0.0;\n    }\n    else {\n        *0x4d1361 = 1;\n        aiStack32[0] = CONCAT13(*0x4d157d, aiStack32[0]);\n        aiStack32[0] = fcn.004025c1(**(arg_8h + 4));\n        *0x4d157d = *(aiStack32[0] + 0x20);\n        fcn.0046efd1(*(aiStack32[0] + 0x10));\n        uStack20 = 1;\n        iVar2 = 0;\n        aiStack32[0] = 0;\n        uStack24 = 0;\n        if (0 < *(arg_8h + 0x1c)) {\n            arg_8h_00 = arg_8h + 0x40;\n            do {\n                iVar5 = arg_8h_00;\n                fcn.00488aa2(arg_8h_00, aiStack32);\n                uVar1 = iVar5 >> 0x18;\n                fcn.0040c117(*(*(arg_8h + 4) + 4 + iVar2 * 4), &stack0xffffffd8, 0x200, 1);\n                iVar2 = iVar2 + 1;\n                arg_8h_00 = arg_8h_00 + 0x18;\n            } while (iVar2 < *(arg_8h + 0x1c));\n        }\n        fcn.00473948(*(iStack36 + 0x10) + 1, 0, aiStack32);\n        fcn.0040c000();\n        if ((*(arg_8h + 0x30) == 9) || (*(arg_8h + 0x30) == 10)) {\n            fVar3 = fcn.0040cfb5();\n            *0x4d1888 = fVar3;\n            dVar4 = *0x4d1888;\n        }\n        else {\n            dVar4 = fcn.0040cc8f();\n        }\n        *0x4d1361 = 0;\n        *0x4d157d = uVar1;\n        fcn.0040e8a0();\n    }\n    return dVar4;\n}\n",
        "token_count": 639
    },
    "004895bb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004895bb(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int16_t *piVar7;\n    int32_t *in_ECX;\n    uint32_t uVar8;\n    int32_t *piVar9;\n    int32_t iVar10;\n    int32_t **ppiVar11;\n    uint32_t unaff_EBX;\n    uint32_t unaff_ESI;\n    uint32_t unaff_EDI;\n    int32_t iVar12;\n    bool bVar13;\n    int32_t *piVar14;\n    int32_t iVar15;\n    uint uStack100;\n    uchar auStack96 [4];\n    uint *puStack92;\n    uint *puStack88;\n    uint *puStack84;\n    uint uStack80;\n    int32_t iStack76;\n    uint uStack72;\n    int32_t *piStack68;\n    uint uStack56;\n    int32_t *piStack52;\n    uint uStack48;\n    int32_t *piStack44;\n    uchar auStack40 [36];\n    \n    puStack92 = fcn.0041fd5b(0x340, unaff_EDI);\n    puStack92[1] = 0;\n    puStack92[2] = 0;\n    puStack92[3] = 0;\n    puStack88 = puStack92 + 4;\n    *puStack92 = 0x49d0fc;\n    iVar10 = *(*(arg_8h + 4) + 4);\n    puStack84 = puStack92;\n    fcn.00408e90();\n    puVar5 = *(iVar10 + 8);\n    uStack56 = *puVar5;\n    piStack52 = puVar5[1];\n    uStack48 = puVar5[2];\n    piStack44 = puVar5[3];\n    *piStack44 = *piStack44 + 1;\n    fcn.0040c7c9();\n    pcVar3 = _sym.imp.USER32.dll_CharLowerBuffW;\n    piVar14 = piStack52;\n    (*_sym.imp.USER32.dll_CharLowerBuffW)();\n    iVar10 = *(*(arg_8h + 4) + 8);\n    fcn.00408e90();\n    puVar5 = *(iVar10 + 8);\n    uStack80 = *puVar5;\n    iStack76 = puVar5[1];\n    uStack72 = puVar5[2];\n    piStack68 = puVar5[3];\n    *piStack68 = *piStack68 + 1;\n    fcn.0040c7c9();\n    iVar10 = iStack76;\n    (*pcVar3)(uStack80);\n    uVar1 = in_ECX[0x70];\n    puStack92 = NULL;\n    uVar8 = 0;\n    if (uVar1 != 0) {\n        ppiVar11 = in_ECX[0x6f];\n        do {\n            puStack92 = uVar8;\n            if (**ppiVar11 == 0) break;\n            uVar8 = uVar8 + 1;\n            ppiVar11 = ppiVar11 + 1;\n            puStack92 = uVar8;\n        } while (uVar8 < uVar1);\n    }\n    uVar8 = unaff_ESI;\n    if (puStack92 == uVar1) {\n        unaff_ESI = unaff_EBX;\n        fcn.004640c5(&uStack100);\n        unaff_EDI = unaff_ESI;\n        unaff_EBX = unaff_ESI;\n    }\n    else {\n        **(in_ECX[0x6f] + puStack92 * 4) = unaff_ESI;\n    }\n    iVar6 = **(arg_8h + 4);\n    bVar13 = *(iVar6 + 0xc) != 0xe;\n    if (bVar13) {\n        fcn.00408e90();\n        puVar5 = *(iVar6 + 8);\n        uStack100 = 2;\n        uStack56 = *puVar5;\n        piStack52 = puVar5[1];\n        uStack48 = puVar5[2];\n        piStack44 = puVar5[3];\n        *piStack44 = *piStack44 + 1;\n        puVar5 = &uStack56;\n    }\n    else {\n        puVar5 = fcn.00471037(auStack40);\n        unaff_EBX = 0;\n    }\n    cVar4 = fcn.004893ee(puVar5, unaff_ESI);\n    if (uVar8 != 0) {\n        fcn.0040b1ff();\n    }\n    if (!bVar13) {\n        fcn.0040b1ff();\n    }\n    if (cVar4 == '\\0') {\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        iVar6 = *(*in_ECX + 4) + in_ECX;\n        iVar10 = *(iVar6 + 8);\n        if (*(iVar6 + 0xd) != '\\0') {\n            iVar10 = *(iVar10 + 0x38);\n        }\n        *(iVar10 + 0x14) = 3;\n    }\n    else {\n        cVar4 = fcn.00488bfa(&uStack80, unaff_EDI);\n        if (cVar4 != '\\0') {\n            iVar6 = 0;\n            iVar12 = 0;\n            while (piVar7 = fcn.0040660f(iVar6),  *piVar7 != 0) {\n                piVar7 = fcn.0040660f(iVar6);\n                iVar6 = iVar6 + 1;\n                if (*piVar7 == 0x3b) {\n                    iVar12 = iVar12 + 1;\n                }\n            }\n            if ((1 < unaff_EBX) && (piVar7 = fcn.0040660f(iVar6 + -1),  *piVar7 != 0x3b)) {\n                iVar12 = iVar12 + 1;\n            }\n            *(iVar10 + 0xc) = iVar12;\n            *(iVar10 + 8) = 0;\n            iVar15 = 0;\n            if (0 < iVar12) {\n                piVar9 = iVar10 + 0x40;\n                do {\n                    cVar4 = fcn.00488444(auStack96, piVar9 + -4);\n                    if (cVar4 == '\\0') {\n                        fcn.0040e8a0();\n                        arg_ch[3] = 1;\n                        *arg_ch = 0;\n                        iVar6 = *(*piVar14 + 4) + piVar14;\n                        iVar10 = *(iVar6 + 8);\n                        if (*(iVar6 + 0xd) != '\\0') {\n                            iVar10 = *(iVar10 + 0x38);\n                        }\n                        *(iVar10 + 0x14) = 2;\n                        goto code_r0x00489939;\n                    }\n                    iVar2 = *piVar9;\n                    piVar9 = piVar9 + 6;\n                    *(iVar10 + 8) = *(iVar10 + 8) + iVar2;\n                    iVar15 = iVar15 + 1;\n                } while (iVar15 < iVar12);\n            }\n            iVar12 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x77, 0x3000, 0x40);\n            fcn.00420db0(iVar12, fcn.0041fcd6, 0x77);\n            *(**(piVar14[0x6f] + uVar8 * 4) + 0x10) = iVar12;\n            *(iVar12 + 0x51) = fcn.004892c9;\n            *(iVar12 + 10) = iVar10;\n            *(iVar12 + 0x12) = iVar6;\n            if ((*(iVar6 + 0xc) == 0) || (*(iVar6 + 4) == 1)) {\n                *(iVar12 + 0x74) = 0xc3;\n            }\n            else {\n                *(iVar12 + 0x74) = 0xc2;\n                *(iVar12 + 0x75) = *(iVar6 + 8);\n            }\n            fcn.0040e8a0();\n            arg_ch[3] = 1;\n            *arg_ch = uVar8 + 1;\n            goto code_r0x00489962;\n        }\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        iVar6 = *(*in_ECX + 4) + in_ECX;\n        iVar10 = *(iVar6 + 8);\n        if (*(iVar6 + 0xd) != '\\0') {\n            iVar10 = *(iVar10 + 0x38);\n        }\n        *(iVar10 + 0x14) = 1;\n    }\ncode_r0x00489939:\n    iVar10 = *(iVar6 + 8);\n    if (*(iVar6 + 0xd) != '\\0') {\n        iVar10 = *(iVar10 + 0x38);\n    }\n    *(iVar10 + 0x18) = 0;\ncode_r0x00489962:\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 2132
    },
    "0048997f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048997f(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar2 = fcn.0040ce67();\n    iVar2 = iVar2 + -1;\n    if (((iVar2 < 0) || (*(in_ECX + 0x1b0) <= iVar2)) || (piVar1 = *(*(in_ECX + 0x1ac) + iVar2 * 4),  *piVar1 == 0)) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(*piVar1);\n        **(*(in_ECX + 0x1ac) + iVar2 * 4) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 213
    },
    "004899e2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004899e2(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    int32_t **ppiVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    \n    iVar1 = **(arg_8h + 4);\n    fcn.00408e90();\n    arg_8h = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(**(iVar1 + 8));\n    piVar4 = arg_ch;\n    if (arg_8h == 0) {\n        fcn.0040e8a0();\n        *piVar4 = -1;\n    }\n    else {\n        uVar2 = *(in_ECX + 0x1b0);\n        uVar5 = 0;\n        if (uVar2 != 0) {\n            ppiVar3 = *(in_ECX + 0x1ac);\n            do {\n                if (**ppiVar3 == 0) break;\n                uVar5 = uVar5 + 1;\n                ppiVar3 = ppiVar3 + 1;\n            } while (uVar5 < uVar2);\n        }\n        if (uVar5 == uVar2) {\n            fcn.004640c5(&arg_8h);\n        }\n        else {\n            **(*(in_ECX + 0x1ac) + uVar5 * 4) = arg_8h;\n        }\n        piVar4 = arg_ch;\n        fcn.0040e8a0();\n        *piVar4 = uVar5 + 1;\n    }\n    piVar4[3] = 1;\n    return 0;\n}\n",
        "token_count": 389
    },
    "00489a7c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00489a7c(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint arg_10h;\n    uint arg_14h;\n    uint arg_18h;\n    int32_t *arg_1ch;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint arg_ch_00;\n    \n    iVar4 = arg_8h;\n    arg_ch_00 = 0;\n    if (1 < *(arg_8h + 8)) {\n        iVar3 = fcn.00471dda();\n        puVar1 = arg_ch;\n        if (iVar3 == 0) {\n            fcn.0040e8a0();\n            *puVar1 = 0;\n            puVar1[3] = 1;\n            iVar4 = *(*in_ECX + 4);\n            iVar3 = *(iVar4 + 8 + in_ECX);\n            if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x14) = 3;\n            iVar3 = *(iVar4 + 8 + in_ECX);\n            if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x18) = 0;\n            return 0;\n        }\n        arg_ch_00 = fcn.00471dda();\n    }\n    arg_8h = 0;\n    iVar4 = **(iVar4 + 4);\n    fcn.00408e90();\n    puVar2 = arg_ch;\n    puVar1 = *(iVar4 + 8);\n    arg_10h = *puVar1;\n    arg_14h = puVar1[1];\n    arg_18h = puVar1[2];\n    arg_1ch = puVar1[3];\n    *arg_1ch = *arg_1ch + 1;\n    iVar4 = fcn.00470e08(&arg_8h, arg_ch_00, arg_10h, arg_14h, arg_18h, arg_1ch);\n    if (iVar4 == 0) {\n        fcn.0040e8a0();\n        *puVar2 = 0;\n        puVar2[3] = 1;\n        iVar4 = *(*in_ECX + 4);\n        iVar3 = *(iVar4 + 8 + in_ECX);\n        if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = arg_8h;\n        iVar3 = *(iVar4 + 8 + in_ECX);\n        if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 699
    },
    "00489b74": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00489b74(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint unaff_ESI;\n    int32_t iStack32;\n    uint uStack28;\n    int32_t iStack20;\n    \n    if (*(**(arg_8h + 4) + 0xc) == 0xc) {\n        uStack28 = 0xffffffff;\n        if ((2 < *(arg_8h + 8)) && (cVar1 = fcn.00401fb9(0x29),  cVar1 == '\\0')) {\n            iStack32 = fcn.0040ce67();\n            iStack32 = iStack32 + -1;\n            if (iStack32 < 0) {\n                fcn.0040e8a0();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n                iVar2 = *(*in_ECX + 4);\n                iVar4 = *(iVar2 + 8 + in_ECX);\n                if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                    iVar4 = *(iVar4 + 0x38);\n                }\n                *(iVar4 + 0x14) = 5;\n                goto code_r0x00489bb8;\n            }\n        }\n        iStack20 = 0;\n        fcn.004119e0(*(*(arg_8h + 4) + 4));\n        if (iStack20 != 4) {\n            iVar2 = fcn.0040ce67();\n            fcn.0040e8a0();\n            iStack20 = 1;\n            iStack32 = iVar2 + -1;\n        }\n        uVar3 = fcn.0046f8d6(&iStack32, &iStack32, arg_ch, 0, unaff_ESI);\n        iVar2 = *(*in_ECX + 4);\n        iVar4 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = uVar3;\n        iVar4 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x18) = 0;\n        fcn.0040e8a0();\n    }\n    else {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        iVar2 = *(*in_ECX + 4);\n        iVar4 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 1;\ncode_r0x00489bb8:\n        iVar4 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x18) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 778
    },
    "00489e09": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00489e09(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    \n    if ((**(arg_8h + 4))[3] == 0xc) {\n        uVar2 = *(***(arg_8h + 4) + 0xc);\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = uVar2;\n    }\n    else {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        iVar1 = *(*in_ECX + 4);\n        iVar3 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 1;\n        iVar3 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 306
    },
    "00489e76": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00489e76(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint unaff_ESI;\n    \n    if (*(**(arg_8h + 4) + 0xc) == 0xc) {\n        if (((*(arg_8h + 8) < 4) || (cVar1 = fcn.00401fb9(0x29),  cVar1 != '\\0')) ||\n           (iVar2 = fcn.0040ce67(),  -1 < iVar2 + -1)) {\n            fcn.004119e0(*(*(arg_8h + 4) + 4));\n            fcn.0040ce67();\n            fcn.0040e8a0();\n            uVar3 = fcn.0046f8d6(&stack0xffffffe0, *(*(arg_8h + 4) + 8), arg_ch, 1, unaff_ESI);\n            iVar2 = *(*in_ECX + 4);\n            iVar4 = *(iVar2 + 8 + in_ECX);\n            if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = uVar3;\n            iVar4 = *(iVar2 + 8 + in_ECX);\n            if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x18) = 0;\n            fcn.0040e8a0();\n            return 0;\n        }\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        iVar2 = *(*in_ECX + 4);\n        iVar4 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 5;\n        iVar4 = *(iVar2 + 8 + in_ECX);\n        cVar1 = *(iVar2 + 0xd + in_ECX);\n    }\n    else {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        iVar2 = *(*in_ECX + 4);\n        iVar4 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 1;\n        iVar4 = *(iVar2 + 8 + in_ECX);\n        cVar1 = *(iVar2 + 0xd + in_ECX);\n    }\n    if (cVar1 != '\\0') {\n        iVar4 = *(iVar4 + 0x38);\n    }\n    *(iVar4 + 0x18) = 0;\n    return 0;\n}\n",
        "token_count": 729
    },
    "0048a009": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048a009(uint arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    uint extraout_ECX;\n    uint unaff_EBX;\n    uint arg_ch_00;\n    char cStack29;\n    uint uStack28;\n    \n    cStack29 = '\\0';\n    fcn.00408e90();\n    cVar1 = fcn.0046d3fa(&cStack29);\n    if (cVar1 == '\\0') {\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        iVar2 = *(*in_ECX + 4);\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 4;\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n    }\n    else if (cStack29 == '\\0') {\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(1, 0, uStack28);\n        if (iVar2 == 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar3 == 5) {\n                fcn.0046cd88(L\"SeDebugPrivilege\");\n                cVar1 = fcn.00461607(extraout_ECX);\n                if (cVar1 == '\\0') {\n                    fcn.00407cb4(5, 0);\n                    iVar3 = *(*in_ECX + 4);\n                    iVar4 = *(iVar3 + 8 + in_ECX);\n                    if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                        iVar4 = *(iVar4 + 0x38);\n                    }\n                    *(iVar4 + 0x14) = 2;\n                    iVar4 = *(iVar3 + 8 + in_ECX);\n                    if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                        iVar4 = *(iVar4 + 0x38);\n                    }\n                    *(iVar4 + 0x18) = 0;\n                    fcn.0040e8a0();\n                    *arg_ch = 0;\n                    arg_ch[3] = 1;\n                }\n                else {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(1, 0, unaff_EBX);\n                }\n                fcn.00461003();\n            }\n            else {\n                fcn.00407cb4(iVar3, 0);\n                iVar3 = *(*in_ECX + 4);\n                iVar4 = *(iVar3 + 8 + in_ECX);\n                if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                    iVar4 = *(iVar4 + 0x38);\n                }\n                *(iVar4 + 0x14) = 1;\n                iVar4 = *(iVar3 + 8 + in_ECX);\n                if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                    iVar4 = *(iVar4 + 0x38);\n                }\n                *(iVar4 + 0x18) = 0;\n                fcn.0040e8a0();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n            }\n            if (iVar2 == 0) {\n                return 0;\n            }\n        }\n        arg_ch_00 = 0;\n        iVar3 = (*_sym.imp.KERNEL32.dll_TerminateProcess)(iVar2);\n        if (iVar3 == 0) {\n            arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetLastError)(0);\n            fcn.00407cb4(arg_8h_00, arg_ch_00);\n            iVar3 = *(*in_ECX + 4);\n            iVar4 = *(iVar3 + 8 + in_ECX);\n            if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = 3;\n            iVar4 = *(iVar3 + 8 + in_ECX);\n            if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x18) = 0;\n            fcn.0040e8a0();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    }\n    return 0;\n}\n",
        "token_count": 1165
    },
    "0048a211": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x0048a285)\n// WARNING: Removing unreachable block (ram,0x0048a28f)\n// WARNING: Removing unreachable block (ram,0x0048a295)\n\nuint __cdecl fcn.0048a211(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_1h;\n    \n    fcn.00408e90();\n    cVar2 = fcn.0046d3fa(&var_1h);\n    fcn.0040e8a0();\n    if (cVar2 == '\\0') {\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        iVar1 = *(*in_ECX + 4);\n        iVar3 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 1;\n        iVar3 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n    }\n    else {\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 362
    },
    "0048a2ae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048a2ae(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    uint *puVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uStack68;\n    uint32_t uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    uStack64 = *(arg_8h + 8);\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iVar6 = 0;\n    if (1 < uStack64) {\n        iVar6 = fcn.0040ce67();\n    }\n    if (((uStack64 == 0) || (iVar1 = fcn.0040ce67(),  iVar1 == -1)) ||\n       (iVar1 = **(arg_8h + 4),  fcn.00408e90(),  *(*(iVar1 + 8) + 4) == 0)) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    }\n    else {\n        fcn.00408e90();\n        fcn.0046d3fa(&uStack68 + 3);\n        uVar2 = uStack64;\n        if (uStack68._3_1_ == '\\0') goto code_r0x0048a56c;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x410, 0, uVar2);\n    if ((iVar1 == 0) || (iVar1 == -1)) {\ncode_r0x0048a56c:\n        iVar6 = *(*in_ECX + 4);\n        iVar1 = *(iVar6 + 8 + in_ECX);\n        if (*(iVar6 + 0xd + in_ECX) != '\\0') {\n            iVar1 = *(iVar1 + 0x38);\n        }\n        *(iVar1 + 0x14) = 1;\n        iVar1 = *(iVar6 + 8 + in_ECX);\n        if (*(iVar6 + 0xd + in_ECX) != '\\0') {\n            iVar1 = *(iVar1 + 0x38);\n        }\n        *(iVar1 + 0x18) = 0;\n        return 0;\n    }\n    if (iVar6 == 0) {\n        iVar6 = (*_sym.imp.PSAPI.DLL_GetProcessMemoryInfo)(iVar1, &uStack68, 0x28);\n        if (iVar6 == 0) goto code_r0x0048a4cf;\n        uVar4 = fcn.00407d93();\n        fcn.004083e0(uVar4, 1);\n        puVar3 = fcn.00411df0(uVar4, 2, 1);\n        fcn.0040e8a0();\n        puVar3[1] = 0;\n        puVar3[3] = 2;\n        *puVar3 = uStack56;\n        puVar3 = fcn.00411df0(uVar4, 2, 1);\n        fcn.0040e8a0();\n        puVar3[1] = 0;\n        uStack28 = uStack60;\n    }\n    else {\n        if ((iVar6 != 1) || (iVar6 = (*_sym.imp.KERNEL32.dll_GetProcessIoCounters)(iVar1, &uStack68),  iVar6 == 0)) {\ncode_r0x0048a4cf:\n            iVar6 = *(*in_ECX + 4);\n            iVar5 = *(iVar6 + 8 + in_ECX);\n            if (*(iVar6 + 0xd + in_ECX) != '\\0') {\n                iVar5 = *(iVar5 + 0x38);\n            }\n            *(iVar5 + 0x14) = 2;\n            iVar5 = *(iVar6 + 8 + in_ECX);\n            if (*(iVar6 + 0xd + in_ECX) != '\\0') {\n                iVar5 = *(iVar5 + 0x38);\n            }\n            *(iVar5 + 0x18) = 0;\n            goto code_r0x0048a560;\n        }\n        arg_8h_00 = fcn.00407d93();\n        uVar4 = arg_8h_00;\n        fcn.004083e0(arg_8h_00, 1);\n        uVar2 = uStack64;\n        puVar3 = fcn.00411df0(arg_8h_00, 2, 1);\n        fcn.0040e8a0();\n        puVar3[3] = 2;\n        *puVar3 = uStack68;\n        puVar3[1] = uVar2;\n        puVar3 = fcn.00411df0(uVar4, 2, 1);\n        fcn.0040e8a0();\n        puVar3[3] = 2;\n        *puVar3 = uStack60;\n        puVar3[1] = uStack56;\n        puVar3 = fcn.00411df0(uVar4, 2, 1);\n        fcn.0040e8a0();\n        puVar3[3] = 2;\n        *puVar3 = uStack52;\n        puVar3[1] = uStack48;\n        puVar3 = fcn.00411df0(uVar4, 2, 1);\n        fcn.0040e8a0();\n        puVar3[3] = 2;\n        *puVar3 = uStack44;\n        puVar3[1] = uStack40;\n        puVar3 = fcn.00411df0(uVar4, 2, 1);\n        fcn.0040e8a0();\n        puVar3[3] = 2;\n        *puVar3 = uStack36;\n        puVar3[1] = uStack32;\n        puVar3 = fcn.00411df0(uVar4, 2, 1);\n        fcn.0040e8a0();\n        puVar3[1] = uStack24;\n    }\n    *puVar3 = uStack28;\n    puVar3[3] = 2;\ncode_r0x0048a560:\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    return 0;\n}\n",
        "token_count": 1496
    },
    "0048a7ca": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048a7ca(uint arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    puVar1 = arg_ch;\n    fcn.0040e8a0();\n    *puVar1 = 0;\n    puVar1[3] = 1;\n    iVar2 = *(*in_ECX + 4);\n    iVar3 = *(iVar2 + 8 + in_ECX);\n    if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n        iVar3 = *(iVar3 + 0x38);\n    }\n    *(iVar3 + 0x14) = 1;\n    iVar3 = *(iVar2 + 8 + in_ECX);\n    if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n        iVar3 = *(iVar3 + 0x38);\n    }\n    *(iVar3 + 0x18) = 0;\n    fcn.00408e90();\n    fcn.0046d3fa(&arg_8h + 3);\n    if (arg_8h._3_1_ == '\\0') {\n        return 0;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x200, 0, in_ECX);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = fcn.0040ce67();\n    if (iVar3 == 0) {\n        uVar4 = 0x40;\n    }\n    else if (iVar3 == 1) {\n        uVar4 = 0x4000;\n    }\n    else if (iVar3 == 2) {\n        uVar4 = 0x20;\n    }\n    else if (iVar3 == 3) {\n        uVar4 = 0x8000;\n    }\n    else if (iVar3 == 4) {\n        uVar4 = 0x80;\n    }\n    else {\n        if (iVar3 != 5) goto code_r0x0048a8e0;\n        uVar4 = 0x100;\n    }\n    (*_sym.imp.KERNEL32.dll_SetPriorityClass)(iVar2, uVar4);\n    puVar1 = arg_ch;\n    fcn.0040e8a0();\n    puVar1[3] = 1;\n    *puVar1 = 1;\n    iVar3 = *(*in_ECX + 4);\n    iVar5 = *(iVar3 + 8 + in_ECX);\n    if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n        iVar5 = *(iVar5 + 0x38);\n    }\n    *(iVar5 + 0x14) = 0;\n    iVar5 = *(iVar3 + 8 + in_ECX);\n    if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n        iVar5 = *(iVar5 + 0x38);\n    }\n    *(iVar5 + 0x18) = 0;\ncode_r0x0048a8e0:\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    return 0;\n}\n",
        "token_count": 739
    },
    "0048a8f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048a8f0(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    \n    cVar2 = fcn.0048aea5(arg_8h, *(arg_8h + 8));\n    puVar1 = arg_ch;\n    if (cVar2 == '\\0') {\n        fcn.0040e8a0();\n        *puVar1 = 0;\n        puVar1[3] = 1;\n        iVar4 = *(*in_ECX + 4);\n        iVar3 = *(iVar4 + 8 + in_ECX);\n        if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 1;\n        iVar3 = *(iVar4 + 8 + in_ECX);\n        if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n    }\n    else {\n        arg_8h = 1;\n        fcn.00403310(&arg_8h);\n        in_ECX[0x3f] = 8;\n        fcn.0040f060(0);\n        iVar4 = *(*(*in_ECX + 4) + 8 + in_ECX);\n        if (*(*(*in_ECX + 4) + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        fcn.0040c5e7(iVar4);\n    }\n    return 0;\n}\n",
        "token_count": 414
    },
    "0048aaba": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048aaba(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t iVar1;\n    \n    fcn.0048af20(1, 1, arg_8h, arg_ch);\n    iVar1 = *(*(*in_ECX + 4) + 8 + in_ECX);\n    if (*(*(*in_ECX + 4) + 0xd + in_ECX) != '\\0') {\n        iVar1 = *(iVar1 + 0x38);\n    }\n    if (*(iVar1 + 0x14) == 0) {\n        in_ECX[0x3f] = 7;\n        fcn.0040f060(0);\n        iVar1 = *(*(*in_ECX + 4) + 8 + in_ECX);\n        if (*(*(*in_ECX + 4) + 0xd + in_ECX) != '\\0') {\n            iVar1 = *(iVar1 + 0x38);\n        }\n        fcn.0040c5e7(iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 248
    },
    "0048ab1e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048ab1e(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t iVar1;\n    \n    fcn.0048af20(1, 0, arg_8h, arg_ch);\n    iVar1 = *(*(*in_ECX + 4) + 8 + in_ECX);\n    if (*(*(*in_ECX + 4) + 0xd + in_ECX) != '\\0') {\n        iVar1 = *(iVar1 + 0x38);\n    }\n    if (*(iVar1 + 0x14) == 0) {\n        in_ECX[0x3f] = 7;\n        fcn.0040f060(0);\n        iVar1 = *(*(*in_ECX + 4) + 8 + in_ECX);\n        if (*(*(*in_ECX + 4) + 0xd + in_ECX) != '\\0') {\n            iVar1 = *(iVar1 + 0x38);\n        }\n        fcn.0040c5e7(iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 249
    },
    "0048ab9a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048ab9a(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t iVar1;\n    \n    fcn.0048ac8b(1, arg_8h, *(arg_8h + 8), arg_ch);\n    iVar1 = *(*(*in_ECX + 4) + 8 + in_ECX);\n    if (*(*(*in_ECX + 4) + 0xd + in_ECX) != '\\0') {\n        iVar1 = *(iVar1 + 0x38);\n    }\n    if (*(iVar1 + 0x14) == 0) {\n        in_ECX[0x3f] = 7;\n        fcn.0040f060(0);\n        iVar1 = *(*(*in_ECX + 4) + 8 + in_ECX);\n        if (*(*(*in_ECX + 4) + 0xd + in_ECX) != '\\0') {\n            iVar1 = *(iVar1 + 0x38);\n        }\n        fcn.0040c5e7(iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 258
    },
    "0048ac00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048ac00(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    \n    if (1 < *(arg_8h + 8)) {\n        fcn.0040ce67();\n    }\n    fcn.0040ce67();\n    iVar1 = fcn.0046e814();\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        iVar1 = *(*in_ECX + 4);\n        iVar3 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = uVar2;\n        iVar3 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 304
    },
    "0048ac8b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0048ac8b(uint arg_8h, int32_t arg_ch, uint32_t arg_10h, double *arg_14h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    uint pExecInfo;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    int32_t hObject;\n    uint var_20h;\n    uint uStack20;\n    uint var_ch;\n    double dStack20;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0040c25d();\n    dStack20 = CONCAT44(1, uStack20);\n    var_4h = 0;\n    var_8h = 0;\n    fcn.004222d0(&pExecInfo, 0, 0x3c);\n    if ((1 < arg_10h) && (iVar4 = *(*(arg_ch + 4) + 4),  fcn.00408e90(),  ***(iVar4 + 8) != 0)) {\n        fcn.00408e90();\n        var_4h = fcn.00408fa0();\n    }\n    if (2 < arg_10h) {\n        fcn.00408e90();\n        var_8h = fcn.00408fa0();\n    }\n    if ((3 < arg_10h) && (iVar4 = *(*(arg_ch + 4) + 0xc),  fcn.00408e90(),  ***(iVar4 + 8) != 0)) {\n        iVar4 = *(*(arg_ch + 4) + 0xc);\n        cVar2 = fcn.00401fb9(0x29);\n        if ((cVar2 == '\\0') && (fcn.00408e90(),  &var_20h != *(iVar4 + 8))) {\n            fcn.0040c1c3(*(iVar4 + 8));\n        }\n    }\n    if (4 < arg_10h) {\n        uVar3 = fcn.0040ce67();\n        dStack20 = dStack20 & 0xffffffff | (uVar3 & 0xffff) << 0x20;\n    }\n    fcn.004222d0(&pExecInfo, 0, 0x3c);\n    var_50h = var_20h;\n    pExecInfo = 0x3c;\n    var_58h = 0x40;\n    var_54h = 0;\n    iVar4 = **(arg_ch + 4);\n    fcn.00408e90();\n    iVar1 = var_4h;\n    iVar5 = var_8h;\n    var_4ch = **(iVar4 + 8);\n    var_40h = var_ch;\n    var_48h = var_4h;\n    var_44h = var_8h;\n    iVar4 = (*_sym.imp.SHELL32.dll_ShellExecuteExW)(&pExecInfo);\n    if (iVar1 != 0) {\n        fcn.0041fd94(iVar1);\n    }\n    if (iVar5 != 0) {\n        fcn.0041fd94(iVar5);\n    }\n    if (iVar4 == 0) {\n        iVar4 = *(*in_ECX + 4);\n        iVar5 = *(iVar4 + 8 + in_ECX);\n        if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n            iVar5 = *(iVar5 + 0x38);\n        }\n        *(iVar5 + 0x14) = 1;\n        iVar5 = *(iVar4 + 8 + in_ECX);\n        if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n            iVar5 = *(iVar5 + 0x38);\n        }\n        *(iVar5 + 0x18) = 0;\n        fcn.0040e8a0();\n        *(arg_14h + 0xc) = 1;\n        *arg_14h = 0;\n    }\n    else if (arg_8h == '\\0') {\n        fcn.0040e8a0();\n        *arg_14h = 0xffffffff;\n        *(arg_14h + 0xc) = 1;\n        if (hObject != 0) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetProcessId)(hObject);\n            dStack20 = iVar4;\n            if (iVar4 < 0) {\n                dStack20 = dStack20 + *0x4c81d0;\n            }\n            fcn.0040e8a0();\n            *arg_14h = dStack20;\n            *(arg_14h + 0xc) = 3;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        }\n    }\n    else {\n        in_ECX[0x10a] = hObject;\n    }\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 1183
    },
    "0048af20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048af20(uint arg_8h, uint arg_ch, int32_t arg_10h, double *arg_14h)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t *arg_8h_00;\n    int32_t iVar4;\n    int32_t *arg_10h_00;\n    int32_t *piVar5;\n    uint arg_8h_01;\n    int32_t *noname_0;\n    uchar *noname_4;\n    int32_t *piVar6;\n    uchar *puVar7;\n    int32_t iVar8;\n    int32_t extraout_EDX;\n    uint8_t uVar9;\n    uchar *unaff_ESI;\n    uchar *arg_2ch;\n    uint unaff_EDI;\n    uint32_t uVar10;\n    bool bVar11;\n    bool bVar12;\n    uint arg_ch_00;\n    uchar *puVar13;\n    uint32_t uVar14;\n    double dVar15;\n    uint32_t lpDomain;\n    int32_t iStack176;\n    int32_t *piStack172;\n    int32_t iStack168;\n    int32_t *piStack164;\n    uint32_t uStack160;\n    uint uStack156;\n    int32_t iStack152;\n    uint32_t uStack144;\n    uchar auStack100 [4];\n    int32_t aiStack96 [4];\n    int32_t aiStack80 [6];\n    uint32_t uStack56;\n    int32_t iStack44;\n    uint uStack36;\n    ushort uStack32;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    arg_10h_00 = &stack0xffffffb0;\n    piVar5 = 0x48af44;\n    fcn.004222d0(arg_10h_00, 0, 0x44);\n    aiStack80[0] = 0x44;\n    iStack152 = 0;\n    iStack176 = 0;\n    uVar10 = 0;\n    piStack172 = NULL;\n    uStack156 = 0;\n    uStack160 = 0;\n    uStack36 = 1;\n    uStack32 = 1;\n    if (arg_ch == '\\0') {\n        if (3 < *(arg_10h + 8)) {\n            uVar10 = fcn.0040ce67();\n            uStack160 = fcn.0040ce67();\n            goto code_r0x0048afe6;\n        }\ncode_r0x0048b004:\n        if (2 < *(arg_10h + 8)) {\ncode_r0x0048b00f:\n            uStack32 = fcn.0040ce67();\n        }\n    }\n    else {\n        uStack156 = fcn.0040ce67();\n        if (7 < *(arg_10h + 8)) {\n            uVar10 = fcn.0040ce67();\n            uStack160 = fcn.0040ce67();\ncode_r0x0048afe6:\n            uStack160 = uStack160 & 0xffff;\n            uVar10 = uVar10 & 0xffff0000;\n            if (arg_ch == '\\0') goto code_r0x0048b004;\n        }\n        if (6 < *(arg_10h + 8)) goto code_r0x0048b00f;\n        if (arg_ch == '\\0') goto code_r0x0048b004;\n    }\n    uVar10 = uVar10 >> 0xc & 0x10;\n    uStack144 = uVar10;\n    fcn.00408e90();\n    iStack168 = fcn.00408fa0();\n    if (arg_ch == '\\0') {\n        if (1 < *(arg_10h + 8)) {\n            fcn.00408e90();\n            arg_8h_00 = fcn.00408fa0();\n            if ((arg_8h_00 != NULL) && (iVar4 = fcn.004248f3(arg_8h_00),  iVar4 != 0)) goto code_r0x0048b19c;\n        }\n        pcVar2 = _sym.imp.KERNEL32.dll_GetCurrentDirectoryW;\n        piVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0, 0);\n        iVar1 = ZEXT48(piVar5 + 1) * 2;\n        piStack172 = fcn.0041fd8b(-(iVar1 >> 0x20 != 0) | iVar1);\n        arg_10h_00 = piStack172;\n        (*pcVar2)();\n        arg_8h_00 = piStack164;\n        uVar10 = uStack144;\n    }\n    else {\n        iStack152 = iStack168;\n        fcn.00408e90();\n        iStack176 = fcn.00408fa0();\n        fcn.00408e90();\n        piStack172 = fcn.00408fa0();\n        fcn.00408e90();\n        iStack168 = fcn.00408fa0();\n        if (5 < *(arg_10h + 8)) {\n            fcn.00408e90();\n            arg_8h_00 = fcn.00408fa0();\n            if ((arg_8h_00 != NULL) && (iVar4 = fcn.004248f3(arg_8h_00),  iVar4 != 0)) goto code_r0x0048b167;\n        }\n        pcVar2 = _sym.imp.KERNEL32.dll_GetSystemDirectoryW;\n        arg_10h_00 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(0, 0);\n        iVar1 = ZEXT48(arg_10h_00 + 1) * 2;\n        piStack172 = fcn.0041fd8b(-(iVar1 >> 0x20 != 0) | iVar1);\n        piVar5 = piStack172;\n        (*pcVar2)();\n        arg_8h_00 = piStack172;\n        uVar10 = uStack144;\n    }\ncode_r0x0048b167:\n    if (arg_ch != '\\0') {\n        fcn.0040b5c1(0x49d0d0);\n        arg_10h_00 = 0x48b18c;\n        fcn.0040b5c1(0x49d0d0);\n        unaff_EDI = 0x49d0d0;\n        piVar5 = 0x48b19c;\n        fcn.0040b5c1(0x49d0d0);\n    }\ncode_r0x0048b19c:\n    lpDomain = uStack160;\n    fcn.0046fff7(uStack160);\n    if (extraout_EDX == 0) {\n        uVar9 = 0;\n    }\n    else {\n        iStack24 = fcn.004706de();\n        bVar11 = iStack24 != -1;\n        iStack20 = fcn.00470604();\n        bVar12 = iStack20 == -1;\n        arg_10h_00 = &stack0xffffffa0;\n        piVar5 = noname_0;\n        iStack44 = fcn.004704c5(noname_0, noname_0, arg_10h_00, &stack0xffffff9c);\n        uVar9 = (iStack44 == -1) - 1U & bVar12 - 1U & bVar11;\n        if (uVar9 != 0) {\n            uStack56 = uStack56 | 0x100;\n        }\n    }\n    if (arg_ch == '\\0') {\n        arg_2ch = &stack0xffffff64;\n        uVar14 = 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_CreateProcessW)\n                          (0, unaff_ESI, 0, 0, uVar9, uVar10, 0, arg_8h_00, &stack0xffffff9c);\n        cVar3 = iVar4 != 0;\n    }\n    else {\n        cVar3 = fcn.0046110c();\n        arg_2ch = &stack0xffffff64;\n        puVar13 = noname_4;\n        if (cVar3 == '\\0') {\n            cVar3 = fcn.00461412(piStack172, lpDomain, unaff_EDI, iStack176, noname_4, unaff_ESI, uVar10, arg_8h_00, \n                                 &stack0xffffff9c, arg_2ch);\n            uVar14 = uVar10;\n        }\n        else {\n            cVar3 = fcn.00461145(piStack172, lpDomain, unaff_EDI, iStack176, noname_4, unaff_ESI, uVar10, arg_8h_00, \n                                 &stack0xffffff9c, arg_2ch);\n            uVar14 = uVar10;\n        }\n        iVar4 = fcn.004248f3(piStack172);\n        piVar6 = piStack172;\n        for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *piVar6 = 0;\n            piVar6 = piVar6 + 1;\n        }\n        iVar4 = fcn.004248f3(puVar13);\n        puVar7 = puVar13;\n        for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar7 = 0;\n            puVar7 = puVar7 + 1;\n        }\n        iVar4 = fcn.004248f3(unaff_ESI);\n        puVar7 = unaff_ESI;\n        for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar7 = 0;\n            puVar7 = puVar7 + 1;\n        }\n        fcn.0041fd94(piStack172);\n        fcn.0041fd94(puVar13);\n        fcn.0041fd94(unaff_ESI);\n    }\n    fcn.0041fd94(uVar14);\n    fcn.0041fd94(arg_8h_00);\n    pcVar2 = _sym.imp.KERNEL32.dll_CloseHandle;\n    if (cVar3 == '\\0') {\n        iVar4 = *(*piVar5 + 4);\n        iVar8 = *(iVar4 + 8 + piVar5);\n        if (*(iVar4 + 0xd + piVar5) != '\\0') {\n            iVar8 = *(iVar8 + 0x38);\n        }\n        *(iVar8 + 0x14) = 1;\n        iVar8 = *(iVar4 + 8 + piVar5);\n        if (*(iVar4 + 0xd + piVar5) != '\\0') {\n            iVar8 = *(iVar8 + 0x38);\n        }\n        arg_ch_00 = 0;\n        *(iVar8 + 0x18) = 0;\n        arg_8h_01 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00407cb4(arg_8h_01, arg_ch_00);\n        fcn.0040e8a0();\n        *arg_14h = 0;\n        *(arg_14h + 0xc) = 1;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(unaff_EDI);\n        if (uVar9 != 0) {\n            if (uStack160 != 0) {\n                (*pcVar2)(uStack160);\n            }\n            if (iStack176 != 0) {\n                (*pcVar2)(iStack176);\n            }\n            if (iStack168 != 0) {\n                (*pcVar2)(iStack168);\n            }\n            fcn.004708f7();\n            fcn.0048b45d(&stack0xffffff44);\n        }\n        if (arg_8h == '\\0') {\n            dVar15 = lpDomain;\n            if (lpDomain < 0) {\n                dVar15 = dVar15 + *0x4c81d0;\n            }\n            fcn.0040e8a0();\n            *arg_14h = dVar15;\n            *(arg_14h + 0xc) = 3;\n            (*pcVar2)(arg_10h_00);\n        }\n        else {\n            *(arg_2ch + 0x428) = arg_10h_00;\n        }\n    }\n    fcn.00470093();\n    return 0;\n}\n",
        "token_count": 2787
    },
    "0048b49b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048b49b(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t in_ECX;\n    uint unaff_EDI;\n    \n    if (*(in_ECX + 8) == *(in_ECX + 0xc)) {\n        uVar2 = *(in_ECX + 0xc) * 2;\n        uVar3 = 8;\n        if (7 < uVar2) {\n            uVar3 = uVar2;\n        }\n        *(in_ECX + 0xc) = uVar3;\n        uVar4 = fcn.0041fd8b(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        if ((*(in_ECX + 4) != 0) && (*(in_ECX + 8) != 0)) {\n            fcn.00420db0(uVar4, *(in_ECX + 4), *(in_ECX + 8) << 2);\n            fcn.0041fd94(*(in_ECX + 4));\n        }\n        *(in_ECX + 4) = uVar4;\n    }\n    puVar5 = fcn.0041fd5b(0x14, unaff_EDI);\n    *puVar5 = *arg_8h;\n    puVar5[1] = arg_8h[1];\n    puVar5[2] = arg_8h[2];\n    puVar5[3] = arg_8h[3];\n    piVar1 = arg_8h[4];\n    puVar5[4] = piVar1;\n    *piVar1 = *piVar1 + 1;\n    *(*(in_ECX + 4) + *(in_ECX + 8) * 4) = puVar5;\n    *(in_ECX + 8) = *(in_ECX + 8) + 1;\n    return;\n}\n",
        "token_count": 461
    },
    "0048b535": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048b60e)\n// WARNING: Removing unreachable block (ram,0x0048b625)\n// WARNING: Removing unreachable block (ram,0x0048b644)\n// WARNING: Removing unreachable block (ram,0x0048b647)\n// WARNING: Removing unreachable block (ram,0x0048b659)\n// WARNING: Removing unreachable block (ram,0x0048b65c)\n// WARNING: Removing unreachable block (ram,0x0048b679)\n\nuint __cdecl fcn.0048b535(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint uStack144;\n    uint32_t uStack140;\n    uchar *arg_8h_00;\n    uchar *arg_ch_00;\n    uint arg_8h_01;\n    uint in_stack_ffffff88;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack76;\n    uchar auStack60 [16];\n    uchar auStack44 [40];\n    \n    uStack76 = *(arg_8h + 8);\n    uStack108 = 0x48b55a;\n    fcn.0040c25d();\n    uStack108 = 0x48b563;\n    fcn.0040c25d();\n    uStack108 = 0x48b56c;\n    fcn.0040c25d();\n    uStack108 = 0x48b575;\n    fcn.0040c25d();\n    iVar2 = **(arg_8h + 4);\n    uStack108 = 0x48b581;\n    fcn.00408e90();\n    arg_8h_01 = **(iVar2 + 8);\n    fcn.0040b606(arg_8h_01);\n    arg_ch_00 = &stack0xffffffb4;\n    arg_8h_00 = &stack0xffffffd4;\n    uStack140 = 0x48b5a4;\n    uStack144 = unaff_EBX;\n    fcn.0048cc79(arg_8h_00, arg_ch_00, &stack0xffffffc4, arg_8h_01, in_stack_ffffff88);\n    uStack140 = 0;\n    _pe_dos_header = _pe_dos_header + 1;\n    cVar1 = fcn.0048c8bf(&stack0xffffff90, &stack0xffffff8c, unaff_EDI, unaff_ESI);\n    if (cVar1 == '\\0') {\n        iVar2 = *(*in_ECX + 4);\n        iVar4 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 2;\n        iVar4 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x18) = 0;\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(arg_8h_00, uStack112, 0, uStack140 | 0x2001f, &stack0xffffff70);\n        if (iVar2 == 0) {\n            if (arg_ch_00 == 0x1) {\n                cVar1 = fcn.0048cb5b();\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uStack144);\n                if (cVar1 == '\\0') {\n                    iVar2 = *(*in_ECX + 4);\n                    iVar4 = *(iVar2 + 8 + in_ECX);\n                    if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                        iVar4 = *(iVar4 + 0x38);\n                    }\n                    *(iVar4 + 0x14) = 0xfffffffe;\n                    iVar4 = *(iVar2 + 8 + in_ECX);\n                    if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                        iVar4 = *(iVar4 + 0x38);\n                    }\n                    *(iVar4 + 0x18) = 0;\n                    fcn.0040e8a0();\n                    arg_ch[3] = 1;\n                    *arg_ch = 2;\n                }\n                else {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"advapi32.dll\");\n                    if ((iVar2 == 0) ||\n                       (pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"RegDeleteKeyExW\"),  pcVar3 == NULL)) {\n                        iVar4 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(arg_8h_00, uStack116);\n                    }\n                    else {\n                        iVar4 = (*pcVar3)(arg_8h_00, uStack116, uStack144, 0);\n                    }\n                    if (iVar4 != 0) {\n                        fcn.00407cb4(iVar4, 0);\n                        iVar4 = *(*in_ECX + 4);\n                        iVar5 = *(iVar4 + 8 + in_ECX);\n                        if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                            iVar5 = *(iVar5 + 0x38);\n                        }\n                        *(iVar5 + 0x14) = 0xfffffffe;\n                        iVar5 = *(iVar4 + 8 + in_ECX);\n                        if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                            iVar5 = *(iVar5 + 0x38);\n                        }\n                        *(iVar5 + 0x18) = 0;\n                        fcn.0040e8a0();\n                        arg_ch[3] = 1;\n                        *arg_ch = 2;\n                    }\n                    if (iVar2 != 0) {\n                        (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar2);\n                    }\n                }\n            }\n            else if (arg_ch_00 == 0x2) {\n                iVar2 = *(*(arg_8h + 4) + 4);\n                fcn.00408e90();\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(uStack144, **(iVar2 + 8));\n                if (iVar2 != 0) {\n                    if (iVar2 == 2) {\n                        fcn.0040e8a0();\n                        *arg_ch = 0;\n                    }\n                    else {\n                        fcn.00407cb4(iVar2, 0);\n                        iVar2 = *(*in_ECX + 4);\n                        iVar4 = *(iVar2 + 8 + in_ECX);\n                        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                            iVar4 = *(iVar4 + 0x38);\n                        }\n                        *(iVar4 + 0x14) = 0xfffffffe;\n                        iVar4 = *(iVar2 + 8 + in_ECX);\n                        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                            iVar4 = *(iVar4 + 0x38);\n                        }\n                        *(iVar4 + 0x18) = 0;\n                        fcn.0040e8a0();\n                        *arg_ch = 2;\n                    }\n                    arg_ch[3] = 1;\n                }\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(unaff_EDI);\n            }\n        }\n        else {\n            fcn.00407cb4(iVar2, 0);\n            iVar4 = *(*in_ECX + 4);\n            iVar5 = *(iVar4 + 8 + in_ECX);\n            if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                iVar5 = *(iVar5 + 0x38);\n            }\n            *(iVar5 + 0x14) = 1;\n            iVar5 = *(iVar4 + 8 + in_ECX);\n            if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                iVar5 = *(iVar5 + 0x38);\n            }\n            *(iVar5 + 0x18) = 0;\n            fcn.0040e8a0();\n            arg_ch[3] = 1;\n            *arg_ch = -(iVar2 != 2) & 2;\n        }\n        if (unaff_ESI != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(unaff_ESI);\n        }\n    }\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 2052
    },
    "0048b8f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048b8f0(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    int32_t *unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint uVar6;\n    int32_t *piStack656;\n    uchar *arg_8h_00;\n    uint in_stack_fffffd84;\n    uint uStack628;\n    int32_t iStack624;\n    uint lpsz;\n    uchar auStack596 [4];\n    uchar auStack592 [4];\n    uint uStack588;\n    uchar auStack576 [16];\n    uchar auStack560 [556];\n    \n    uStack588 = 0xff;\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    lpsz = 0x49d0d0;\n    iStack624 = 0x48b935;\n    fcn.0040b5c1(0x49d0d0);\n    iVar5 = **(arg_8h + 4);\n    iStack624 = 0x48b944;\n    fcn.00408e90();\n    uVar6 = **(iVar5 + 8);\n    fcn.0040b606(uVar6);\n    arg_8h_00 = &stack0xfffffdc0;\n    piStack656 = 0x48b967;\n    piVar2 = unaff_EBX;\n    fcn.0048cc79(arg_8h_00, &stack0xfffffdb0, &stack0xfffffdd0, uVar6, in_stack_fffffd84);\n    piStack656 = piVar2;\n    *piStack656 = *piStack656 + 1;\n    iVar5 = unaff_ESI;\n    cVar3 = fcn.0048c8bf(&stack0xfffffd84, &stack0xfffffd8c, lpsz, unaff_EDI);\n    if (cVar3 == '\\0') {\n        iVar5 = *(*in_ECX + 4);\n        iVar4 = *(iVar5 + 8 + in_ECX);\n        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 2;\n    }\n    else {\n        if ((iStack624 == 0) ||\n           (iVar4 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)(uStack628, unaff_ESI, &stack0xfffffd68), \n           unaff_ESI = unaff_EDI,  unaff_EDI = unaff_ESI,  iVar4 == 0)) {\n            iVar5 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(unaff_ESI, iVar5, 0, arg_8h_00 | 0x20019, &stack0xfffffd70);\n            pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n            if (iVar5 == 0) {\n                uVar6 = 0;\n                iVar5 = fcn.0040ce67(&stack0xfffffdb4, &stack0xfffffd78, 0, 0, 0, &stack0xfffffdac);\n                iVar5 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExW)(piStack656, iVar5 + -1);\n                if (iVar5 == 0) {\n                    fcn.0040b5c1(&stack0xfffffd94);\n                }\n                else {\n                    iVar5 = *(*in_ECX + 4);\n                    iVar4 = *(iVar5 + 8 + in_ECX);\n                    if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                        iVar4 = *(iVar4 + 0x38);\n                    }\n                    *(iVar4 + 0x14) = 0xffffffff;\n                    iVar4 = *(iVar5 + 8 + in_ECX);\n                    if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                        iVar4 = *(iVar4 + 0x38);\n                    }\n                    *(iVar4 + 0x18) = 0;\n                }\n                (*pcVar1)(uVar6);\n            }\n            else {\n                iVar5 = *(*in_ECX + 4);\n                iVar4 = *(iVar5 + 8 + in_ECX);\n                if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                    iVar4 = *(iVar4 + 0x38);\n                }\n                *(iVar4 + 0x14) = 1;\n                iVar4 = *(iVar5 + 8 + in_ECX);\n                if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                    iVar4 = *(iVar4 + 0x38);\n                }\n                *(iVar4 + 0x18) = 0;\n            }\n            if (unaff_EDI != 0) {\n                (*pcVar1)(unaff_EDI);\n            }\n            goto code_r0x0048badc;\n        }\n        iVar5 = *(*in_ECX + 4);\n        iVar4 = *(iVar5 + 8 + in_ECX);\n        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 3;\n    }\n    iVar4 = *(iVar5 + 8 + in_ECX);\n    if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n        iVar4 = *(iVar4 + 0x38);\n    }\n    *(iVar4 + 0x18) = 0;\ncode_r0x0048badc:\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 1354
    },
    "0048bb02": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048bb02(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uchar *arg_8h_00;\n    int32_t iVar5;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uchar *puVar6;\n    uchar *arg_8h_01;\n    uchar *puStack152;\n    int32_t *piStack148;\n    uint in_stack_ffffff80;\n    int32_t *piStack124;\n    uchar auStack120 [4];\n    uint uStack116;\n    uint uStack92;\n    int32_t *piStack84;\n    uchar auStack68 [16];\n    uchar auStack52 [16];\n    uchar auStack36 [32];\n    \n    uVar3 = fcn.0041fd8b();\n    fcn.004070c2(uVar3);\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    uStack116 = 0x48bb5a;\n    fcn.0040b5c1(0x49d0d0);\n    iVar4 = **(arg_8h + 4);\n    uStack116 = 0x48bb69;\n    fcn.00408e90();\n    uVar3 = **(iVar4 + 8);\n    fcn.0040b606(uVar3);\n    puVar6 = &stack0xffffffbc;\n    arg_8h_00 = &stack0xffffffcc;\n    piStack148 = 0x48bb8c;\n    fcn.0048cc79(arg_8h_00, puVar6, &stack0xffffffdc, uVar3, in_stack_ffffff80);\n    puStack152 = NULL;\n    piStack148 = piStack84;\n    *piStack84 = *piStack84 + 1;\n    arg_8h_01 = &stack0xffffff88;\n    cVar2 = fcn.0048c8bf(arg_8h_01, &stack0xffffff8c, unaff_EBX, uStack92);\n    if (cVar2 == '\\0') {\n        iVar4 = *(*in_ECX + 4);\n        iVar5 = *(iVar4 + 8 + in_ECX);\n        if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n            iVar5 = *(iVar5 + 0x38);\n        }\n        *(iVar5 + 0x14) = 2;\n    }\n    else {\n        if ((unaff_ESI == 0) ||\n           (iVar4 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)(unaff_EDI, arg_8h_00, &stack0xffffff68), \n           arg_8h_00 = puStack152,  iVar4 == 0)) {\n            iVar4 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(arg_8h_00, 0, 0, puVar6 | 0x20019, &stack0xffffff6c);\n            if (iVar4 == 0) {\n                puVar6 = &stack0xffffff7c;\n                iVar4 = fcn.0040ce67(in_stack_ffffff80, &stack0xffffff78, 0, puVar6, 0, 0);\n                iVar4 = (*_sym.imp.ADVAPI32.dll_RegEnumValueW)(piStack148, iVar4 + -1);\n                if (iVar4 == 0) {\n                    fcn.00470b6e(&stack0xffffff60);\n                    fcn.00407cb4(arg_8h_01, 0);\n                }\n                else {\n                    iVar4 = *(*in_ECX + 4);\n                    iVar5 = *(iVar4 + 8 + in_ECX);\n                    if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                        iVar5 = *(iVar5 + 0x38);\n                    }\n                    *(iVar5 + 0x14) = 0xffffffff;\n                    iVar5 = *(iVar4 + 8 + in_ECX);\n                    if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                        iVar5 = *(iVar5 + 0x38);\n                    }\n                    *(iVar5 + 0x18) = 0;\n                }\n                pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(puVar6);\n                if (puStack152 != NULL) {\n                    (*pcVar1)(puStack152);\n                }\n            }\n            else {\n                iVar4 = *(*in_ECX + 4);\n                iVar5 = *(iVar4 + 8 + in_ECX);\n                if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                    iVar5 = *(iVar5 + 0x38);\n                }\n                *(iVar5 + 0x14) = 1;\n                iVar5 = *(iVar4 + 8 + in_ECX);\n                if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                    iVar5 = *(iVar5 + 0x38);\n                }\n                *(iVar5 + 0x18) = 0;\n                if (puStack152 != NULL) {\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(puStack152);\n                }\n            }\n            goto code_r0x0048bd28;\n        }\n        iVar4 = *(*in_ECX + 4);\n        iVar5 = *(iVar4 + 8 + in_ECX);\n        if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n            iVar5 = *(iVar5 + 0x38);\n        }\n        *(iVar5 + 0x14) = 3;\n    }\n    iVar5 = *(iVar4 + 8 + in_ECX);\n    if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n        iVar5 = *(iVar5 + 0x38);\n    }\n    *(iVar5 + 0x18) = 0;\ncode_r0x0048bd28:\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    *piStack124 = *piStack124 + -1;\n    if (*piStack124 == 0) {\n        uVar3 = 4;\n        fcn.0041fd4d(piStack124);\n        fcn.0041fd94(in_stack_ffffff80, piStack124, uVar3);\n    }\n    return 0;\n}\n",
        "token_count": 1489
    },
    "0048bd6b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048bd6b(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint arg_18h;\n    int64_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uint uVar8;\n    int32_t iVar9;\n    int32_t *in_ECX;\n    uchar *arg_8h_00;\n    uchar *puVar10;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint32_t unaff_EDI;\n    uchar *puStack168;\n    uint32_t uStack164;\n    uchar *puStack160;\n    int32_t *piStack156;\n    uchar auStack136 [4];\n    int32_t *piStack132;\n    uchar *puVar11;\n    int32_t *piStack104;\n    uint uStack84;\n    uchar *puStack80;\n    int32_t *piStack76;\n    uchar auStack60 [16];\n    uchar auStack44 [16];\n    uchar auStack28 [24];\n    \n    piStack104 = 0x48bd88;\n    fcn.0040b5c1(0x49d0d0);\n    piStack104 = 0x48bd91;\n    fcn.0040c25d();\n    piStack104 = 0x48bd9a;\n    fcn.0040c25d();\n    piStack104 = 0x48bda3;\n    fcn.0040c25d();\n    iVar5 = **(arg_8h + 4);\n    piStack104 = 0x48bdb2;\n    fcn.00408e90();\n    puVar1 = *(iVar5 + 8);\n    uVar8 = *puVar1;\n    arg_18h = puVar1[1];\n    piStack104 = puVar1[3];\n    *piStack104 = *piStack104 + 1;\n    puVar7 = &stack0xffffffe4;\n    puVar10 = &stack0xffffffc4;\n    arg_8h_00 = &stack0xffffffd4;\n    piStack132 = 0x48bde6;\n    fcn.0048cc79(arg_8h_00, puVar10, puVar7, uVar8, arg_18h);\n    piStack132 = piStack76;\n    *piStack76 = *piStack76 + 1;\n    piStack156 = 0x48be17;\n    cVar4 = fcn.0048c8bf(&stack0xffffff98, &stack0xffffffa0, unaff_EBX, uStack84);\n    if (cVar4 == '\\0') {\n        iVar5 = *(*in_ECX + 4);\n        iVar6 = *(iVar5 + 8 + in_ECX);\n        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x14) = 2;\n        iVar6 = *(iVar5 + 8 + in_ECX);\n        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x18) = 0;\n        goto code_r0x0048c2b8;\n    }\n    piStack132 = NULL;\n    puVar11 = arg_8h_00;\n    if (unaff_ESI != 0) {\n        piStack156 = &stack0xffffff7c;\n        puStack168 = 0x48be6b;\n        uStack164 = unaff_EDI;\n        puStack160 = arg_8h_00;\n        arg_8h_00 = puVar10;\n        iVar5 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)();\n        if (iVar5 != 0) {\n            piStack156 = 0x48be7e;\n            fcn.00407cb4(iVar5, 0);\n            iVar5 = *(*in_ECX + 4);\n            iVar6 = *(iVar5 + 8 + in_ECX);\n            if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                iVar6 = *(iVar6 + 0x38);\n            }\n            *(iVar6 + 0x14) = 3;\n            iVar6 = *(iVar5 + 8 + in_ECX);\n            if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                iVar6 = *(iVar6 + 0x38);\n            }\n            *(iVar6 + 0x18) = 0;\n            goto code_r0x0048c2b8;\n        }\n    }\n    piStack156 = &stack0xffffff78;\n    puStack160 = puVar7 | 0x20019;\n    uStack164 = 0;\n    puStack168 = puStack80;\n    iVar5 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(arg_8h_00);\n    if (iVar5 != 0) {\n        piStack156 = 0x48bee9;\n        fcn.00407cb4(iVar5, 0);\n        if (piStack132 != NULL) {\n            piStack156 = piStack132;\n            puStack160 = 0x48befa;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n        }\n        iVar5 = *(*in_ECX + 4);\n        iVar6 = *(iVar5 + 8 + in_ECX);\n        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x14) = 1;\n        iVar6 = *(iVar5 + 8 + in_ECX);\n        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x18) = 0;\n        goto code_r0x0048c2b8;\n    }\n    iVar5 = *(*(arg_8h + 4) + 4);\n    puStack168 = puVar11;\n    fcn.00408e90();\n    puVar7 = &stack0xffffff7c;\n    piStack156 = &stack0xffffff8c;\n    puStack160 = NULL;\n    uStack164 = **(iVar5 + 8);\n    iVar5 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)();\n    if (iVar5 == 0) {\n        fcn.00407cb4(uStack84, 0);\n        if (puVar7 == NULL) {\ncode_r0x0048c272:\n            iVar5 = *(*in_ECX + 4);\n            iVar6 = *(iVar5 + 8 + in_ECX);\n            if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                iVar6 = *(iVar6 + 0x38);\n            }\n            *(iVar6 + 0x14) = 0xfffffffe;\n            iVar6 = *(iVar5 + 8 + in_ECX);\n            if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                iVar6 = *(iVar6 + 0x38);\n            }\n            *(iVar6 + 0x18) = 0;\n        }\n        else if (puVar7 < 0x3) {\n            iVar2 = ((uStack164 >> 1) + 1) * 2;\n            iVar6 = fcn.0041fd8b(-(iVar2 >> 0x20 != 0) | iVar2);\n            iVar5 = *(*(arg_8h + 4) + 4);\n            fcn.00408e90();\n            iVar5 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(puStack160, **(iVar5 + 8), 0, 0, iVar6, &stack0xffffff5c);\n            if (iVar5 == 0) {\n                *(iVar6 + (piStack156 & 0xfffffffe)) = 0;\n                puVar7 = piStack156 >> 1;\ncode_r0x0048c224:\n                piStack156 = puVar7;\n                fcn.0040b5c1(0x48c22c);\n            }\n            else {\ncode_r0x0048c22e:\n                fcn.00407cb4(iVar5, 0);\n                iVar5 = *(*in_ECX + 4);\n                iVar9 = *(iVar5 + 8 + in_ECX);\n                if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                    iVar9 = *(iVar9 + 0x38);\n                }\n                *(iVar9 + 0x14) = 0xfffffffe;\n                iVar9 = *(iVar5 + 8 + in_ECX);\n                if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                    iVar9 = *(iVar9 + 0x38);\n                }\n                *(iVar9 + 0x18) = 0;\n            }\n            fcn.0041fd94(iVar6);\n        }\n        else if (puVar7 == 0x3) {\n            uVar8 = fcn.00470da3(uStack164);\n            iVar5 = *(*(arg_8h + 4) + 4);\n            fcn.00408e90();\n            iVar5 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(uStack164, **(iVar5 + 8), 0, 0, uVar8, &stack0xffffff58);\n            if (iVar5 != 0) {\n                fcn.00407cb4(iVar5, 0);\n                iVar5 = *(*in_ECX + 4);\n                iVar6 = *(iVar5 + 8 + in_ECX);\n                if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                    iVar6 = *(iVar6 + 0x38);\n                }\n                *(iVar6 + 0x14) = 0xfffffffe;\n                iVar6 = *(iVar5 + 8 + in_ECX);\n                if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                    iVar6 = *(iVar6 + 0x38);\n                }\n                *(iVar6 + 0x18) = 0;\n                fcn.0040e8a0();\n                arg_ch[3] = 1;\n                *arg_ch = 0;\n            }\n        }\n        else if (puVar7 == 0x4) {\n            uStack164 = 4;\n            iVar5 = *(*(arg_8h + 4) + 4);\n            fcn.00408e90();\n            (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                      (puStack160, **(iVar5 + 8), 0, 0, &stack0xffffff70, &stack0xffffff5c);\n            fcn.0040e8a0();\n            arg_ch[3] = 2;\n            *arg_ch = unaff_EBX;\n            arg_ch[1] = 0;\n        }\n        else {\n            if (puVar7 == 0x7) {\n                iVar2 = ((uStack164 >> 1) + 2) * 2;\n                iVar6 = fcn.0041fd8b(-(iVar2 >> 0x20 != 0) | iVar2);\n                iVar5 = *(*(arg_8h + 4) + 4);\n                fcn.00408e90();\n                iVar5 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                                  (puStack160, **(iVar5 + 8), 0, 0, iVar6, &stack0xffffff5c);\n                puVar10 = NULL;\n                if (iVar5 != 0) goto code_r0x0048c22e;\n                puVar7 = piStack156 >> 1;\n                *(iVar6 + (piStack156 & 0xfffffffe)) = 0;\n                if (0x1 < puVar7) {\n                    if (*(iVar6 + -2 + (piStack156 & 0xfffffffe)) == 0) {\n                        puVar7 = puVar7 + -1;\n                    }\n                    if (puVar7 != NULL) {\n                        do {\n                            if (*(iVar6 + puVar10 * 2) == 0) {\n                                *(iVar6 + puVar10 * 2) = 10;\n                            }\n                            puVar10 = puVar10 + 1;\n                        } while (puVar10 < puVar7);\n                    }\n                    if (*(iVar6 + -2 + puVar10 * 2) == 10) {\n                        *(iVar6 + -2 + puVar10 * 2) = 0;\n                    }\n                }\n                goto code_r0x0048c224;\n            }\n            if (puVar7 != 0xb) goto code_r0x0048c272;\n            uStack164 = 8;\n            iVar5 = *(*(arg_8h + 4) + 4);\n            fcn.00408e90();\n            (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                      (puStack160, **(iVar5 + 8), 0, 0, &stack0xffffff70, &stack0xffffff5c);\n            fcn.0040e8a0();\n            arg_ch[3] = 2;\n            *arg_ch = unaff_EBX;\n            arg_ch[1] = uStack84;\n        }\n    }\n    else {\n        fcn.00407cb4(iVar5, 0);\n        iVar5 = *(*in_ECX + 4);\n        iVar6 = *(iVar5 + 8 + in_ECX);\n        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x14) = 0xffffffff;\n        iVar6 = *(iVar5 + 8 + in_ECX);\n        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x18) = 0;\n    }\n    pcVar3 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(puStack160);\n    if (piStack132 != NULL) {\n        piStack156 = piStack132;\n        puStack160 = 0x48c2b8;\n        (*pcVar3)();\n    }\ncode_r0x0048c2b8:\n    piStack156 = 0x48c2c1;\n    fcn.0040b1ff();\n    piStack156 = 0x48c2ca;\n    fcn.0040b1ff();\n    piStack156 = 0x48c2d3;\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 3355
    },
    "0048c2de": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048c3d7)\n// WARNING: Removing unreachable block (ram,0x0048c3ee)\n// WARNING: Removing unreachable block (ram,0x0048c40d)\n// WARNING: Removing unreachable block (ram,0x0048c410)\n// WARNING: Removing unreachable block (ram,0x0048c422)\n// WARNING: Removing unreachable block (ram,0x0048c425)\n// WARNING: Removing unreachable block (ram,0x0048c43e)\n\nuint __cdecl fcn.0048c2de(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t *in_ECX;\n    uint32_t uVar8;\n    uint extraout_EDX;\n    ulong uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uchar *arg_8h_00;\n    uchar *arg_ch_00;\n    uint32_t uVar13;\n    uint uStack112;\n    int32_t *piStack108;\n    uint uStack80;\n    int32_t iStack76;\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    uchar auStack24 [20];\n    \n    piStack108 = 0x48c301;\n    fcn.0040c25d();\n    piStack108 = 0x48c30a;\n    fcn.0040c25d();\n    piStack108 = 0x48c313;\n    fcn.0040c25d();\n    piVar1 = *(arg_8h + 8);\n    if ((piVar1 == 0x1) || (piVar1 == 0x4)) {\n        iVar5 = **(arg_8h + 4);\n        piStack108 = 0x48c339;\n        fcn.00408e90();\n        puVar2 = *(iVar5 + 8);\n        uVar11 = *puVar2;\n        uVar13 = puVar2[1];\n        uStack112 = puVar2[2];\n        piStack108 = puVar2[3];\n        *piStack108 = *piStack108 + 1;\n        arg_ch_00 = &stack0xffffffc8;\n        arg_8h_00 = &stack0xffffffd8;\n        fcn.0048cc79(arg_8h_00, arg_ch_00, &stack0xffffffe8, uVar11, uVar13);\n        *piVar1 = *piVar1 + 1;\n        cVar4 = fcn.0048c8bf(&stack0xffffff94, &stack0xffffff98, in_ECX, uStack80);\n        if (cVar4 != '\\0') {\n            iVar5 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)\n                              (arg_8h_00, iStack76, 0, 0x49d0d0, 0, arg_ch_00 | 0x20006, 0, &stack0xffffff70, \n                               &stack0xffffff90);\n            if (iVar5 != 0) {\n                fcn.00407cb4(iVar5, 0);\n                iVar5 = *(*in_ECX + 4);\n                iVar6 = *(iVar5 + 8 + in_ECX);\n                if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                    iVar6 = *(iVar6 + 0x38);\n                }\n                *(iVar6 + 0x14) = 1;\n                iVar6 = *(iVar5 + 8 + in_ECX);\n                if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                    iVar6 = *(iVar6 + 0x38);\n                }\n                *(iVar6 + 0x18) = 0;\n                fcn.0040e8a0();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n                if (iStack76 != 0) {\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iStack76);\n                }\n                goto code_r0x0048c7b7;\n            }\n            if (1 < uVar13) {\n                iVar5 = *(*(arg_8h + 4) + 8);\n                fcn.00408e90();\n                iVar5 = fcn.004249b8(**(iVar5 + 8), L\"REG_EXPAND_SZ\");\n                if (iVar5 == 0) {\n                    iVar5 = *(*(arg_8h + 4) + 0xc);\n                    fcn.00408e90();\n                    iVar5 = fcn.004248f3(**(iVar5 + 8));\n                    iVar5 = iVar5 * 2 + 2;\n                    iVar6 = *(*(arg_8h + 4) + 0xc);\n                    fcn.00408e90();\n                    uVar11 = **(iVar6 + 8);\n                    iVar6 = *(*(arg_8h + 4) + 4);\n                    fcn.00408e90();\n                    uVar10 = 2;\n                    uVar12 = **(iVar6 + 8);\ncode_r0x0048c883:\n                    iVar5 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(piVar1, uVar12, 0, uVar10, uVar11, iVar5);\n                    if (iVar5 != 0) {\n                        fcn.00407cb4(iVar5, 0);\n                        fcn.0040e8a0();\n                        arg_ch[3] = 1;\n                        *arg_ch = 0;\n                    }\n                }\n                else {\n                    iVar5 = *(*(arg_8h + 4) + 8);\n                    fcn.00408e90();\n                    iVar5 = fcn.004249b8(**(iVar5 + 8), L\"REG_SZ\");\n                    if (iVar5 == 0) {\n                        iVar5 = *(*(arg_8h + 4) + 0xc);\n                        fcn.00408e90();\n                        iVar6 = fcn.004248f3(**(iVar5 + 8));\n                        iVar5 = *(*(arg_8h + 4) + 0xc);\n                        fcn.00408e90();\n                        uVar11 = **(iVar5 + 8);\n                        iVar5 = *(*(arg_8h + 4) + 4);\n                        fcn.00408e90();\n                        iVar5 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)\n                                          (piVar1, **(iVar5 + 8), 0, 1, uVar11, iVar6 * 2 + 2);\n                        if (iVar5 != 0) {\n                            fcn.00407cb4(iVar5, 0);\n                            fcn.0040e8a0();\n                            *arg_ch = 0;\n                            arg_ch[3] = 1;\n                        }\n                    }\n                    else {\n                        iVar5 = *(*(arg_8h + 4) + 8);\n                        fcn.00408e90();\n                        iVar5 = fcn.004249b8(**(iVar5 + 8), L\"REG_MULTI_SZ\");\n                        if (iVar5 == 0) {\n                            iVar5 = *(*(arg_8h + 4) + 0xc);\n                            fcn.00408e90();\n                            uVar13 = *(*(iVar5 + 8) + 4);\n                            uVar7 = uVar13 + 2;\n                            iVar6 = fcn.0041fd8b(-(uVar7 * 2 >> 0x20 != 0) | uVar7 * 2);\n                            fcn.00408e90();\n                            iVar5 = iVar6;\n                            fcn.004058a3(uVar13 + 1);\n                            uVar8 = 0;\n                            *(iVar6 + uVar13 * 2) = 0;\n                            if (uVar13 != 0) {\n                                do {\n                                    if (*(iVar6 + uVar8 * 2) == 10) {\n                                        *(iVar6 + uVar8 * 2) = 0;\n                                    }\n                                    uVar8 = uVar8 + 1;\n                                } while (uVar8 < uVar13);\n                                if (uVar13 != 0) {\n                                    uVar13 = uVar7;\n                                }\n                            }\n                            iVar6 = *(*(arg_8h + 4) + 4);\n                            fcn.00408e90();\n                            iVar6 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)\n                                              (piVar1, **(iVar6 + 8), 0, 7, iVar5, uVar13 * 2);\n                            if (iVar6 != 0) {\n                                fcn.00407cb4(iVar6, 0);\n                                fcn.0040e8a0();\n                                *arg_ch = 0;\n                                arg_ch[3] = 1;\n                            }\n                            fcn.0041fd94(iVar5);\n                        }\n                        else {\n                            iVar5 = *(*(arg_8h + 4) + 8);\n                            fcn.00408e90();\n                            iVar5 = fcn.004249b8(**(iVar5 + 8), L\"REG_DWORD\");\n                            if (iVar5 == 0) {\n                                fcn.0040ce67();\n                                iVar5 = *(*(arg_8h + 4) + 4);\n                                fcn.00408e90();\n                                uVar12 = 4;\n                                uVar11 = 4;\ncode_r0x0048c769:\n                                iVar5 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)\n                                                  (piVar1, **(iVar5 + 8), 0, uVar11, &stack0xffffff8c, uVar12);\n                                if (iVar5 == 0) goto code_r0x0048c79e;\n                                fcn.00407cb4(iVar5, 0);\n                            }\n                            else {\n                                iVar5 = *(*(arg_8h + 4) + 8);\n                                fcn.00408e90();\n                                iVar5 = fcn.004249b8(**(iVar5 + 8), L\"REG_QWORD\");\n                                if (iVar5 == 0) {\n                                    fcn.0040cc8f();\n                                    iVar5 = *(*(arg_8h + 4) + 4);\n                                    uStack112 = extraout_EDX;\n                                    fcn.00408e90();\n                                    uVar12 = 8;\n                                    uVar11 = 0xb;\n                                    goto code_r0x0048c769;\n                                }\n                                iVar5 = *(*(arg_8h + 4) + 8);\n                                fcn.00408e90();\n                                iVar5 = fcn.004249b8(**(iVar5 + 8), L\"REG_BINARY\");\n                                if (iVar5 == 0) {\n                                    uVar11 = fcn.00471db4();\n                                    fcn.00408e90();\n                                    uVar9 = fcn.00471e24();\n                                    iVar5 = uVar9;\n                                    uVar10 = 3;\n                                    uVar12 = *(uVar9 >> 0x20);\n                                    goto code_r0x0048c883;\n                                }\n                            }\n                            fcn.0040e8a0();\n                            *arg_ch = 0;\n                            arg_ch[3] = 1;\n                        }\n                    }\n                }\n            }\ncode_r0x0048c79e:\n            pcVar3 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(piVar1);\n            if (iStack76 != 0) {\n                (*pcVar3)(iStack76);\n            }\n            goto code_r0x0048c7b7;\n        }\n        iVar5 = *(*in_ECX + 4);\n        iVar6 = *(iVar5 + 8 + in_ECX);\n        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x14) = 2;\n        iVar6 = *(iVar5 + 8 + in_ECX);\n        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x18) = 0;\n    }\n    fcn.0040e8a0();\n    arg_ch[3] = 1;\n    *arg_ch = 0;\ncode_r0x0048c7b7:\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 2871
    },
    "0048cd57": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048cd57(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    char cVar3;\n    char cVar4;\n    char cVar5;\n    uint arg_8h_00;\n    int32_t iVar6;\n    int32_t *in_ECX;\n    int32_t iVar7;\n    int32_t extraout_EDX;\n    uint var_10h;\n    \n    fcn.0040b5c1(0x49d0d0);\n    if (*(arg_8h + 8) == 0) {\n        cVar3 = '\\0';\n    }\n    else {\n        cVar3 = fcn.0041daf6();\n        arg_8h = extraout_EDX;\n    }\n    if (*(arg_8h + 8) < 2) {\n        cVar4 = '\\0';\n    }\n    else {\n        cVar4 = fcn.0041daf6();\n    }\n    if (in_ECX[0x113] == 0) {\n        iVar7 = *(*in_ECX + 4);\n        iVar6 = *(iVar7 + 8 + in_ECX);\n        if (*(iVar7 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x14) = 2;\n    }\n    else {\n        cVar5 = fcn.0047019a();\n        puVar2 = in_ECX[0x113];\n        if (cVar5 != '\\0') {\n            if (cVar3 == '\\0') {\n                arg_ch = fcn.004701d2(arg_ch);\n            }\n            else {\n                arg_ch = fcn.0047014d(arg_ch, 1);\n            }\n            if (cVar4 == '\\0') {\n                fcn.0040c25d();\n                fcn.00471db4();\n                arg_8h_00 = fcn.0046eaef();\n                fcn.00408817(arg_8h_00, 0, arg_ch);\n                fcn.0041fd94(arg_8h_00);\n                fcn.00407c5d(&var_10h);\n                fcn.0040b1ff();\n            }\n            fcn.00407cb4(arg_ch, 0);\n            return 0;\n        }\n        piVar1 = puVar2 + 1;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            (***puVar2)(1);\n        }\n        in_ECX[0x113] = 0;\n        iVar7 = *(*in_ECX + 4);\n        iVar6 = *(iVar7 + 8 + in_ECX);\n        if (*(iVar7 + 0xd + in_ECX) != '\\0') {\n            iVar6 = *(iVar6 + 0x38);\n        }\n        *(iVar6 + 0x14) = 1;\n    }\n    iVar6 = *(iVar7 + 8 + in_ECX);\n    if (*(iVar7 + 0xd + in_ECX) != '\\0') {\n        iVar6 = *(iVar6 + 0x38);\n    }\n    *(iVar6 + 0x18) = 0;\n    return 0;\n}\n",
        "token_count": 743
    },
    "0048cec0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0048cec0(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint8_t *puVar1;\n    uint32_t lpBuffer;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint *arg_8h_00;\n    int32_t *arg_ch_00;\n    double dVar5;\n    uint var_14h;\n    uint8_t **var_10h;\n    uint var_8h;\n    double dStack16;\n    uint var_4h;\n    \n    var_10h = fcn.0040ce67();\n    arg_ch_00 = in_ECX + 0x110;\n    dVar5 = var_10h;\n    if (var_10h < 0) {\n        dVar5 = dVar5 + *0x4c81d0;\n    }\n    arg_8h_00 = &var_10h;\n    dStack16 = dVar5;\n    fcn.0048d0ae(arg_8h_00, arg_ch_00);\n    if (var_10h == NULL) {\n        iVar4 = *(*in_ECX + 4);\n        iVar3 = *(iVar4 + 8 + in_ECX);\n        if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 2;\n        iVar3 = *(iVar4 + 8 + in_ECX);\n        if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n    }\n    else {\n        if (*(arg_8h + 8) < 2) {\n            puVar1 = *var_10h;\n            if (*(puVar1 + 0x18) != 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(*(puVar1 + 0x18), arg_8h_00, arg_ch_00, dVar5);\n                *(puVar1 + 0x18) = 0;\n            }\n        }\n        else {\n            var_4h = 0;\n            if (((**var_10h & 1) == 0) || (*(*var_10h + 0x18) == 0)) {\n                iVar4 = *(*in_ECX + 4);\n                iVar3 = *(iVar4 + 8 + in_ECX);\n                if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                    iVar3 = *(iVar3 + 0x38);\n                }\n                *(iVar3 + 0x14) = 1;\n                iVar3 = *(iVar4 + 8 + in_ECX);\n                if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                    iVar3 = *(iVar3 + 0x38);\n                }\n                *(iVar3 + 0x18) = 0;\n            }\n            else {\n                if (*(*(*(arg_8h + 4) + 4) + 0xc) == 0xb) {\n                    lpBuffer = fcn.00471db4();\n                    dStack16 = dStack16 & 0xffffffff | lpBuffer << 0x20;\n                    uVar2 = fcn.00471e24();\n                }\n                else {\n                    fcn.00408e90();\n                    lpBuffer = fcn.0046eecc();\n                    dStack16 = dStack16 & 0xffffffff | lpBuffer << 0x20;\n                    var_4h = CONCAT31(var_4h._1_3_, 1);\n                    uVar2 = fcn.00428d10(lpBuffer);\n                }\n                uVar2 = fcn.00470633(lpBuffer, uVar2);\n                fcn.0040e8a0();\n                arg_ch[3] = 1;\n                *arg_ch = uVar2;\n                if (var_4h != '\\0') {\n                    fcn.0041fd94(var_8h);\n                }\n            }\n        }\n        iVar4 = fcn.004702bd();\n        if (iVar4 == 0) {\n            fcn.0048d280(&var_10h);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 985
    },
    "0048d033": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048d033(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t in_ECX;\n    bool bVar2;\n    \n    fcn.0040cfb5();\n    fcn.0048d0ae(&arg_8h, in_ECX + 0x440);\n    puVar1 = arg_ch;\n    bVar2 = arg_8h != 0;\n    if (bVar2) {\n        fcn.0048d280(&arg_8h);\n    }\n    fcn.0040e8a0();\n    puVar1[3] = 1;\n    *puVar1 = bVar2;\n    return 0;\n}\n",
        "token_count": 168
    },
    "0048d0f9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0048d0f9(int32_t arg_8h, uint arg_ch, code *arg_10h, code *arg_14h, code *arg_18h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    char extraout_DL;\n    char extraout_DL_00;\n    float10 fVar5;\n    uint var_20h;\n    int32_t *var_10h;\n    int32_t var_8h;\n    double dStack16;\n    uint var_1h;\n    \n    fcn.0040b5c1(0x49d0d0);\n    fVar5 = fcn.0040cfb5();\n    var_1h._0_1_ = '\\0';\n    dStack16 = fVar5;\n    if (*(arg_8h + 8) < 2) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = fcn.0041daf6();\n        var_1h._0_1_ = extraout_DL;\n    }\n    if (2 < *(arg_8h + 8)) {\n        var_1h._0_1_ = fcn.0041daf6();\n    }\n    var_10h = in_ECX + 0x110;\n    fcn.0048d0ae(&var_8h, var_10h);\n    if (var_8h == 0) {\n        iVar4 = *(*in_ECX + 4);\n        iVar3 = *(iVar4 + 8 + in_ECX);\n        if (*(iVar4 + 0xd + in_ECX) != extraout_DL_00) {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 2;\n        iVar3 = *(iVar4 + 8 + in_ECX);\n        if (*(iVar4 + 0xd + in_ECX) != extraout_DL_00) {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = extraout_DL_00;\n    }\n    else {\n        cVar2 = (*arg_18h)();\n        if (cVar2 == '\\0') {\n            iVar4 = *(*in_ECX + 4);\n            iVar3 = *(iVar4 + 8 + in_ECX);\n            if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x14) = 1;\n            iVar3 = *(iVar4 + 8 + in_ECX);\n            if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x18) = 0;\n        }\n        else {\n            if (cVar1 == '\\0') {\n                arg_8h = (*arg_14h)(arg_ch);\n            }\n            else {\n                arg_8h = (*arg_10h)(arg_ch, 1);\n            }\n            if (var_1h == '\\0') {\n                fcn.0040c25d();\n                fcn.00471db4();\n                arg_8h_00 = fcn.0046eaef();\n                fcn.00408817(arg_8h_00, 0, arg_8h);\n                fcn.0041fd94(arg_8h_00);\n                fcn.00407c5d(&var_20h);\n                fcn.0040b1ff();\n            }\n            fcn.00407cb4(arg_8h, 0);\n        }\n        iVar4 = fcn.004702bd();\n        if (iVar4 == 0) {\n            fcn.0048d280(&var_8h);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 918
    },
    "0048d3a9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048d3a9(int32_t arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    uchar *puVar2;\n    uint32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint noname_1;\n    int32_t iVar4;\n    uint unaff_EBX;\n    int32_t iVar5;\n    uchar auStack40 [36];\n    \n    puVar2 = fcn.00471db4();\n    arg_8h_00 = fcn.00471e24();\n    if (arg_8h_00 == 0) {\n        fcn.0040b5c1(0x49d0d0);\n        iVar3 = *(*in_ECX + 4);\n        iVar4 = *(iVar3 + 8 + in_ECX);\n        if (*(iVar3 + 0xd + in_ECX) != arg_8h_00) {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 1;\n    }\n    else {\n        if (*(arg_8h + 8) < 2) {\n            iVar3 = 1;\n        }\n        else {\n            iVar3 = fcn.0040ce67();\n        }\n        if ((iVar3 < 1) || (4 < iVar3)) {\n            iVar3 = 1;\n        }\n        if (((iVar3 != 2) && (iVar3 != 3)) || ((arg_8h_00 & 1) == 0)) {\n            if ((iVar3 != 1) && (iVar3 != 4)) {\n                if (iVar3 == 2) {\n                    fcn.00407c18(arg_8h_00 / 2);\n                    fcn.00408817(unaff_EBX, 0, arg_8h_00 / 2);\n                    fcn.00407c5d(auStack40);\n                }\n                else {\n                    iVar3 = fcn.0041fd8b();\n                    iVar4 = 0;\n                    if (0 < arg_8h_00) {\n                        iVar5 = iVar3 - puVar2;\n                        do {\n                            puVar2[iVar5] = puVar2[1];\n                            uVar1 = *puVar2;\n                            puVar2 = puVar2 + 2;\n                            *(iVar3 + 1 + iVar4) = uVar1;\n                            iVar4 = iVar4 + 2;\n                        } while (iVar4 < arg_8h_00);\n                    }\n                    fcn.00407c18(arg_8h_00 / 2);\n                    fcn.00408817(iVar3, 0, arg_8h_00 / 2);\n                    fcn.00407c5d(auStack40);\n                    fcn.0041fd94(iVar3);\n                }\n                fcn.0040b1ff();\n                return 0;\n            }\n            fcn.0041f2b7(arg_8h_00);\n            fcn.0041f812(unaff_EBX, noname_1, arg_8h_00);\n            fcn.00407c18(arg_8h_00);\n            if (iVar3 == 1) {\n                fcn.00408725();\n            }\n            else {\n                fcn.0040879b();\n            }\n            fcn.00407c5d(&stack0xffffffc4);\n            fcn.0040b1ff();\n            fcn.0040b1ff();\n            return 0;\n        }\n        fcn.0040b5c1(0x49d0d0);\n        iVar3 = *(*in_ECX + 4);\n        iVar4 = *(iVar3 + 8 + in_ECX);\n        if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 2;\n    }\n    iVar4 = *(iVar3 + 8 + in_ECX);\n    if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n        iVar4 = *(iVar4 + 0x38);\n    }\n    *(iVar4 + 0x18) = 0;\n    return 0;\n}\n",
        "token_count": 952
    },
    "0048d5ee": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048d5ee(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *arg_8h_00;\n    int32_t arg_18h;\n    uint uVar3;\n    \n    iVar1 = **(arg_8h + 4);\n    fcn.00408e90();\n    puVar2 = *(iVar1 + 8);\n    iVar1 = *(*(arg_8h + 4) + 4);\n    fcn.00408e90();\n    arg_18h = 0;\n    arg_8h_00 = *(iVar1 + 8);\n    if (2 < *(arg_8h + 8)) {\n        arg_18h = fcn.0040ce67();\n        if ((arg_18h < 0) || (3 < arg_18h)) {\n            arg_18h = 0;\n        }\n    }\n    if (arg_18h == 1) {\n        uVar3 = fcn.0040c0a8(arg_8h_00);\n    }\n    else {\n        uVar3 = fcn.0041d5dc(*puVar2, puVar2[1], *arg_8h_00, arg_8h_00[1], arg_18h);\n    }\n    fcn.0040e8a0();\n    arg_ch[3] = 1;\n    *arg_ch = uVar3;\n    return 0;\n}\n",
        "token_count": 337
    },
    "0048d9a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048d9a0(int32_t arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint arg_8h_00;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t *in_ECX;\n    uint var_20h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0040b5c1(0x49d0d0);\n    if ((**(arg_8h + 4))[3] == 5) {\n        uVar4 = *(arg_8h + 8);\n        uVar6 = ***(arg_8h + 4);\n        if (uVar4 < 3) {\n            uVar2 = fcn.0041e703(1);\n        }\n        else {\n            uVar2 = fcn.0040ce67();\n            uVar4 = *(arg_8h + 8);\n        }\n        if (uVar2 == 0xffffffff) {\n            uVar2 = fcn.0041e703(1);\n        }\n        uVar3 = fcn.0041e703(1);\n        if (uVar3 < uVar2) {\n            uVar2 = fcn.0041e703(1);\n        }\n        if (uVar4 < 2) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.0040ce67();\n        }\n        if (uVar4 <= uVar2) {\n            if (*(arg_8h + 8) < 4) {\n                var_4h = 0;\n            }\n            else {\n                var_4h = fcn.0040ce67();\n            }\n            if ((var_4h == 1) || (var_4h == 2)) {\n                var_8h = uVar2 - uVar4;\n                var_10h = fcn.0041fd8b(var_8h + 1);\n                iVar5 = 0;\n                if (uVar4 < uVar2) {\n                    var_ch = var_10h - uVar4;\n                    do {\n                        fcn.00411df0(uVar6, 2, 1);\n                        uVar1 = fcn.0040ce67();\n                        *(var_ch + uVar4) = uVar1;\n                        uVar4 = uVar4 + 1;\n                        iVar5 = var_8h;\n                    } while (uVar4 < uVar2);\n                }\n                iVar7 = var_10h;\n                *(iVar5 + var_10h) = 0;\n                if (var_4h == 1) {\n                    uVar6 = fcn.0046eaef();\n                }\n                else {\n                    uVar6 = fcn.0046ef2d();\n                }\n                fcn.0040b5c1(uVar6);\n                fcn.0041fd94(iVar7);\n                fcn.0041fd94(uVar6);\n            }\n            else {\n                fcn.0040c25d();\n                for (; uVar4 < uVar2; uVar4 = uVar4 + 1) {\n                    fcn.00411df0(uVar6, 2, 1);\n                    arg_8h_00 = fcn.0040ce67();\n                    fcn.004051ec(arg_8h_00);\n                }\n                fcn.00407c5d(&var_20h);\n                fcn.0040b1ff();\n            }\n        }\n    }\n    else {\n        iVar5 = *(*in_ECX + 4);\n        iVar7 = *(iVar5 + 8 + in_ECX);\n        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n            iVar7 = *(iVar7 + 0x38);\n        }\n        *(iVar7 + 0x14) = 1;\n        iVar7 = *(iVar5 + 8 + in_ECX);\n        if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n            iVar7 = *(iVar7 + 0x38);\n        }\n        *(iVar7 + 0x18) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 981
    },
    "0048e131": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048e131(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint unaff_EBX;\n    int32_t iVar4;\n    int32_t unaff_EDI;\n    int32_t iStack56;\n    int32_t iStack52;\n    int32_t iStack48;\n    \n    fcn.0040c25d();\n    iVar4 = **(arg_8h + 4);\n    fcn.00408e90();\n    iStack52 = *(iVar4 + 8);\n    fcn.00407c18(*(iStack52 + 4));\n    iVar4 = *(*(arg_8h + 4) + 8);\n    fcn.00408e90();\n    iVar4 = *(iVar4 + 8);\n    iVar2 = *(*(arg_8h + 4) + 4);\n    cVar1 = fcn.0046ff5f();\n    if (cVar1 == '\\0') {\n        fcn.00408e90();\n        iStack48 = *(iVar2 + 8);\n        if (*(iStack48 + 4) == 0) goto code_r0x0048e206;\n        iStack52 = 0;\n        uVar3 = *(arg_8h + 8);\n        if (3 < uVar3) {\n            iStack52 = fcn.0040ce67();\n            uVar3 = *(arg_8h + 8);\n        }\n        iVar4 = 0;\n        if (4 < uVar3) {\n            iVar4 = fcn.0040ce67();\n            if ((iVar4 < 0) || (3 < iVar4)) {\n                iVar4 = 0;\n            }\n        }\n        fcn.0040c1c3(iStack56);\n        arg_8h_00 = fcn.00469227(iStack52, unaff_EBX, iStack56, iVar4);\n        fcn.00407cb4(arg_8h_00, 0);\n    }\n    else {\n        iVar2 = fcn.0040ce67();\n        iVar2 = iVar2 + -1;\n        if ((iVar2 < 0) || (uVar3 = *(iVar4 + 4) + iVar2,  *(iStack56 + 4) <= uVar3 && uVar3 != *(iStack56 + 4))) {\ncode_r0x0048e206:\n            fcn.0040b5c1(0x49d0d0);\n            iVar4 = *(*in_ECX + 4);\n            iVar2 = *(iVar4 + 8 + in_ECX);\n            if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                iVar2 = *(iVar2 + 0x38);\n            }\n            *(iVar2 + 0x14) = 1;\n            iVar2 = *(iVar4 + 8 + in_ECX);\n            if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n                iVar2 = *(iVar2 + 0x38);\n            }\n            *(iVar2 + 0x18) = 0;\n            goto code_r0x0048e2bf;\n        }\n        fcn.004086ac(iStack56, 0, iVar2);\n        fcn.00407cf8(unaff_EDI);\n        fcn.004086ac(iStack56, *(unaff_EDI + 4) + iVar2, (*(iStack56 + 4) - *(unaff_EDI + 4)) - iVar2);\n        fcn.00407cf8(&iStack56);\n    }\n    fcn.00407c5d(&stack0xffffffb8);\ncode_r0x0048e2bf:\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 881
    },
    "0048e2dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048e2dc(int32_t arg_8h, uint arg_ch)\n\n{\n    uchar *arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    uchar *arg_8h_01;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uStack108;\n    uint uStack104;\n    uchar auStack100 [8];\n    uchar auStack92 [4];\n    uchar auStack88 [12];\n    uchar auStack76 [8];\n    uchar *puStack68;\n    uchar uStack64;\n    uint uStack52;\n    \n    iVar1 = **(arg_8h + 4);\n    fcn.00408e90();\n    arg_8h_00 = *(iVar1 + 8);\n    fcn.00407c18(*(arg_8h_00 + 4));\n    if ((*(arg_8h + 8) < 2) || (iVar1 = fcn.0040ce67(),  iVar1 != 1)) {\n        fcn.00408157();\n        fcn.0040b606(L\"(*UCP)\\\\X\");\n        arg_8h_01 = auStack76;\n        uVar3 = extraout_ECX;\n        fcn.0040817f(arg_8h_01);\n        fcn.0040b1ff(arg_8h_01, uVar3);\n        uStack52 = *(arg_8h_00 + 4);\n        uStack64 = 1;\n        iVar1 = 0x49d0fc;\n        uStack108 = 0;\n        uStack104 = 0;\n        puStack68 = arg_8h_00;\n        fcn.0040c25d();\n        iVar4 = 0;\n        while (iVar2 = fcn.0046905e(&stack0xffffff88, 1),  iVar5 = iVar4,  iVar2 != 0) {\n            fcn.00468fa4(0, auStack92);\n            fcn.00406aff(auStack100);\n        }\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            fcn.00407cf8(*(iVar4 + iVar1 * 4));\n        }\n        fcn.0040b1ff();\n        fcn.00408320();\n        fcn.0041fd94(iVar5);\n        fcn.004082a1();\n    }\n    else {\n        if (auStack88 != arg_8h_00) {\n            fcn.0040c1c3(arg_8h_00);\n        }\n        fcn.0048ec8b();\n    }\n    fcn.00407c5d(&uStack108);\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 633
    },
    "0048e6d6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048e6d6(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t extraout_EDX;\n    uint32_t uVar6;\n    uint unaff_EDI;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uStack48;\n    uint uStack40;\n    uint uStack36;\n    \n    uVar8 = 0x49d0d0;\n    fcn.0040b5c1(0x49d0d0);\n    iVar4 = **(arg_8h + 4);\n    iVar7 = 0x48e6fe;\n    fcn.00408e90();\n    uVar3 = *(arg_8h + 8);\n    iVar4 = *(iVar4 + 8);\n    if (2 < uVar3) {\n        iVar7 = 0x29;\n        cVar1 = fcn.00401fb9(0x29);\n        uVar3 = extraout_EDX;\n        if (cVar1 == '\\0') {\n            uVar2 = fcn.0040ce67();\n            uVar3 = *(arg_8h + 8);\n            uVar6 = *(iVar4 + 4);\n            goto code_r0x0048e732;\n        }\n    }\n    uVar6 = *(iVar4 + 4);\n    uVar2 = uVar6;\ncode_r0x0048e732:\n    if (uVar6 < uVar2) {\n        uVar2 = uVar6;\n    }\n    if ((uVar3 < 2) || (cVar1 = fcn.00401fb9(0x29),  cVar1 != '\\0')) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = fcn.0040ce67();\n    }\n    if (uVar3 <= uVar2) {\n        if (uVar3 == uVar2) {\n            uVar2 = uVar2 + 1;\n        }\n        uVar2 = uVar2 - uVar3;\n        fcn.00407c18(uVar2);\n        fcn.004086ac(unaff_EDI, uVar3, uVar2);\n        if (*(arg_8h + 8) < 4) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = fcn.0040ce67();\n        }\n        if ((iVar4 == 1) || (iVar4 == 2)) {\n            fcn.0040b443();\n            if (iVar4 == 1) {\n                fcn.00483282();\n            }\n            else {\n                fcn.0046cbab();\n            }\n            uVar3 = uVar8;\n            uVar5 = fcn.00407d93();\n            fcn.004083e0(uVar5, 1);\n            uVar6 = 0;\n            if (uVar8 != 0) {\n                do {\n                    fcn.0046cac0();\n                    uVar2 = uVar3;\n                    if (uVar6 < uVar3) {\n                        uVar2 = uVar6;\n                    }\n                    uStack48 = *(iVar7 + uVar2);\n                    uStack40 = 0;\n                    uStack36 = 1;\n                    fcn.00408a30(uVar5, &stack0xffffffd0, 1);\n                    fcn.0040e8a0();\n                    uVar6 = uVar6 + 1;\n                } while (uVar6 < uVar8);\n            }\n            fcn.0040b1ff();\n        }\n        else {\n            uVar5 = fcn.00407d93();\n            fcn.004083e0(uVar5, 1);\n            uVar3 = 0;\n            if (uVar2 != 0) {\n                do {\n                    fcn.0040660f(uVar3);\n                    fcn.00408a30(uVar5, &stack0xffffffb0, 1);\n                    fcn.0040e8a0();\n                    uVar3 = uVar3 + 1;\n                } while (uVar3 < uVar2);\n            }\n        }\n        fcn.0040b1ff();\n    }\n    return 0;\n}\n",
        "token_count": 973
    },
    "0048e8ab": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048e8ab(int32_t arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    uint *puVar2;\n    uint32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uchar *puVar6;\n    uint32_t uVar7;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar4 = **(arg_8h + 4);\n    fcn.00408e90();\n    puVar2 = *(iVar4 + 8);\n    iVar4 = puVar2[1];\n    if (iVar4 == 0) {\n        fcn.00470da3(0);\n    }\n    else {\n        if (*(arg_8h + 8) < 2) {\n            iVar3 = 1;\n        }\n        else {\n            iVar3 = fcn.0040ce67();\n        }\n        if ((iVar3 < 1) || (4 < iVar3)) {\n            iVar3 = 1;\n        }\n        if ((iVar3 == 1) || (iVar3 == 4)) {\n            fcn.0040b443();\n            if (iVar3 == 1) {\n                fcn.00483282();\n            }\n            else {\n                fcn.0046cbab();\n            }\n            uVar5 = fcn.00470da3(var_ch);\n            fcn.00420db0(uVar5, var_10h, var_ch);\n            fcn.0040b1ff();\n        }\n        else {\n            arg_8h_00 = iVar4 * 2;\n            iVar4 = fcn.00470da3(arg_8h_00);\n            if (iVar3 == 2) {\n                fcn.00420db0(iVar4, *puVar2, arg_8h_00);\n            }\n            else {\n                puVar6 = *puVar2;\n                uVar7 = 0;\n                if (arg_8h_00 != 0) {\n                    iVar3 = iVar4 - puVar6;\n                    do {\n                        puVar6[iVar3] = puVar6[1];\n                        uVar1 = *puVar6;\n                        puVar6 = puVar6 + 2;\n                        *(iVar4 + 1 + uVar7) = uVar1;\n                        uVar7 = uVar7 + 2;\n                    } while (uVar7 < arg_8h_00);\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 558
    },
    "0048ecdd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048ecdd(uint noname_0, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *in_ECX;\n    uint extraout_ECX;\n    uint var_4h;\n    \n    if (*0x4d1a30 == '\\x01') {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        iVar1 = *(*in_ECX + 4);\n        iVar3 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 1;\n        iVar3 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n    }\n    else {\n        puVar4 = fcn.0046bd70();\n        if (puVar4 == NULL) {\n            fcn.0040e8a0();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n        }\n        else {\n            uVar2 = *puVar4;\n            fcn.0040e8a0();\n            *arg_ch = uVar2;\n            arg_ch[3] = 1;\n            fcn.004060e4(extraout_ECX);\n        }\n    }\n    *(in_ECX + 0x101) = 1;\n    return 0;\n}\n",
        "token_count": 397
    },
    "0048ee4d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048ee4d(uint arg_8h, uint arg_ch)\n\n{\n    uint hmenu;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint *arg_ch_00;\n    uint *arg_10h;\n    uint var_4h;\n    \n    arg_10h = &var_4h;\n    arg_ch_00 = &arg_8h;\n    hmenu = fcn.0040ce67();\n    iVar1 = fcn.0046c2ea(hmenu, arg_ch_00, arg_10h);\n    if (iVar1 == 0) {\n        iVar1 = *(*in_ECX + 4);\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x14) = 1;\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x18) = 0;\n        fcn.0040b5c1(0x49d0d0);\n    }\n    else {\n        fcn.0040b5c1(arg_8h);\n        fcn.0041fd94(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 344
    },
    "0048eec9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048eec9(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint uVar5;\n    bool bVar6;\n    uint var_34h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    iVar2 = *(*(arg_8h + 4) + 4);\n    bVar6 = *(iVar2 + 0xc) != 0xe;\n    if (bVar6) {\n        fcn.00408e90();\n        puVar1 = *(iVar2 + 8);\n        var_4h = 2;\n        var_14h = *puVar1;\n        var_20h = puVar1[1];\n        var_1ch = puVar1[2];\n        var_18h = puVar1[3];\n        puVar1 = &var_24h;\n        *var_18h = *var_18h + 1;\n        var_24h = var_14h;\n    }\n    else {\n        puVar1 = fcn.00471037(&var_34h);\n        var_4h = 0;\n        var_14h = *puVar1;\n    }\n    uVar5 = 0;\n    var_10h = puVar1[1];\n    var_ch = puVar1[2];\n    var_8h = puVar1[3];\n    *var_8h = *var_8h + 1;\n    if (var_4h != 0) {\n        fcn.0040b1ff();\n    }\n    if (!bVar6) {\n        fcn.0040b1ff();\n    }\n    iVar2 = *(*(arg_8h + 4) + 4);\n    fcn.00408e90();\n    if (***(iVar2 + 8) != 0) {\n        iVar2 = fcn.004025c1(&var_14h);\n        if (iVar2 == 0) {\n            fcn.0040e8a0();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n            iVar2 = *(*in_ECX + 4);\n            iVar3 = *(iVar2 + 8 + in_ECX);\n            if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x14) = 1;\n            iVar3 = *(iVar2 + 8 + in_ECX);\n            if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x18) = 0;\n            uVar5 = 0xffffffff;\n            goto code_r0x0048efee;\n        }\n    }\n    puVar1 = &var_14h;\n    uVar4 = fcn.0040ce67();\n    uVar4 = fcn.0046c743(uVar4, puVar1);\n    fcn.0040e8a0();\n    *arg_ch = uVar4;\n    arg_ch[3] = 1;\ncode_r0x0048efee:\n    fcn.0040b1ff();\n    return uVar5;\n}\n",
        "token_count": 815
    },
    "0048f08e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048f08e(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 9;\n    if (*(arg_8h + 8) != 0) {\n        iVar1 = fcn.0040ce67();\n        if ((iVar1 < 0) || (0x7f < iVar1)) {\n            iVar1 = 9;\n        }\n    }\n    *0x4d199c = iVar1;\n    return 0;\n}\n",
        "token_count": 113
    },
    "0048f0be": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048f0be(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = *(arg_8h + 8);\n    *0x4d19a0 = 0;\n    fcn.004084e7(0x49d0d0);\n    if (uVar1 != 0) {\n        iVar2 = **(arg_8h + 4);\n        fcn.00408e90();\n        if (*(iVar2 + 8) != 0x4d19cc) {\n            fcn.0040c1c3(*(iVar2 + 8));\n        }\n    }\n    if (1 < uVar1) {\n        fcn.0040ce67();\n        *0x4d19a0 = fcn.0046e034();\n    }\n    fcn.004056c2();\n    return 0;\n}\n",
        "token_count": 209
    },
    "0048f131": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048f131(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    bool bVar5;\n    uint var_34h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    iVar2 = *(*(arg_8h + 4) + 4);\n    bVar5 = *(iVar2 + 0xc) != 0xe;\n    if (bVar5) {\n        fcn.00408e90();\n        puVar1 = *(iVar2 + 8);\n        var_4h = 2;\n        var_14h = *puVar1;\n        var_20h = puVar1[1];\n        var_1ch = puVar1[2];\n        var_18h = puVar1[3];\n        puVar1 = &var_24h;\n        *var_18h = *var_18h + 1;\n        var_24h = var_14h;\n    }\n    else {\n        puVar1 = fcn.00471037(&var_34h);\n        var_4h = 0;\n        var_14h = *puVar1;\n    }\n    var_10h = puVar1[1];\n    var_ch = puVar1[2];\n    var_8h = puVar1[3];\n    *var_8h = *var_8h + 1;\n    if (var_4h != 0) {\n        fcn.0040b1ff();\n    }\n    if (!bVar5) {\n        fcn.0040b1ff();\n    }\n    iVar2 = *(*(arg_8h + 4) + 4);\n    fcn.00408e90();\n    if (***(iVar2 + 8) != 0) {\n        iVar2 = fcn.004025c1(&var_14h);\n        if (iVar2 == 0) {\n            fcn.0040e8a0();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n            iVar2 = *(*in_ECX + 4);\n            iVar3 = *(iVar2 + 8 + in_ECX);\n            if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x14) = 1;\n            iVar3 = *(iVar2 + 8 + in_ECX);\n            if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x18) = 0;\n            goto code_r0x0048f253;\n        }\n    }\n    puVar1 = &var_14h;\n    uVar4 = fcn.0040ce67();\n    uVar4 = fcn.0046c85f(uVar4, puVar1);\n    fcn.0040e8a0();\n    *arg_ch = uVar4;\n    arg_ch[3] = 1;\ncode_r0x0048f253:\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 792
    },
    "0048f264": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048f264(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = *(arg_8h + 8);\n    *0x4d19a4 = 0;\n    fcn.004084e7(0x49d0d0);\n    if (uVar1 != 0) {\n        iVar2 = **(arg_8h + 4);\n        fcn.00408e90();\n        if (*(iVar2 + 8) != 0x4d19dc) {\n            fcn.0040c1c3(*(iVar2 + 8));\n        }\n    }\n    if (1 < uVar1) {\n        fcn.0040ce67();\n        *0x4d19a4 = fcn.0046e034();\n    }\n    fcn.0046c88e();\n    return 0;\n}\n",
        "token_count": 209
    },
    "0048f2d7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048f2d7(int32_t arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = 1;\n    if (*(arg_8h + 8) != 0) {\n        arg_8h_00 = fcn.0040ce67();\n    }\n    fcn.0046c8e9(arg_8h_00);\n    return;\n}\n",
        "token_count": 98
    },
    "0048f2fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048f2fc(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    if ((*0x4d1368 == '\\0') || (*0x4d1365 != '\\0')) {\n        iVar1 = *(*in_ECX + 4);\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x14) = 1;\n        iVar2 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x18) = 0;\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        if (*(arg_8h + 8) == 0) {\n            fcn.004084e7(0x49d0d0);\n        }\n        else {\n            iVar1 = **(arg_8h + 4);\n            fcn.00408e90();\n            fcn.004086ac(*(iVar1 + 8), 0, 0x80);\n        }\n        fcn.004057ae();\n    }\n    return 0;\n}\n",
        "token_count": 349
    },
    "0048f39c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048f39c(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint arg_18h;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *unaff_EBX;\n    uint arg_8h_00;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack24 = 0;\n    uVar1 = *(arg_ch + 8);\n    uStack20 = 0xffffffff;\n    if (uVar1 != 0) {\n        fcn.00408e90();\n        uStack24 = fcn.00408fa0();\n    }\n    uVar2 = 0xffffffff;\n    if (1 < uVar1) {\n        uVar2 = fcn.0040ce67();\n    }\n    if (2 < uVar1) {\n        uStack20 = fcn.0040ce67();\n    }\n    if (uVar1 < 4) {\n        arg_18h = 0xffffffff;\n    }\n    else {\n        arg_18h = fcn.0040ce67();\n    }\n    if (arg_8h == 0) {\n        arg_8h_00 = 0;\n    }\n    else {\n        if (arg_8h != 1) goto code_r0x0048f463;\n        arg_18h = 0;\n        arg_8h_00 = 1;\n    }\n    uVar2 = fcn.0046bb7c(arg_8h_00, uStack24, uVar2, uStack20, arg_18h);\n    fcn.0040e8a0();\n    *arg_10h = uVar2;\n    arg_10h[3] = 1;\ncode_r0x0048f463:\n    iVar3 = fcn.0040ce67();\n    if (iVar3 == 0) {\n        iVar3 = *(*unaff_EBX + 4);\n        iVar4 = *(iVar3 + 8 + unaff_EBX);\n        if (*(iVar3 + 0xd + unaff_EBX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 1;\n        iVar4 = *(iVar3 + 8 + unaff_EBX);\n        if (*(iVar3 + 0xd + unaff_EBX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x18) = 0;\n    }\n    fcn.0041fd94(uStack24);\n    return 0;\n}\n",
        "token_count": 602
    },
    "0048f6cb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048f6cb(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    char16_t cVar1;\n    char16_t cVar2;\n    uint32_t *puVar3;\n    char cVar4;\n    uint32_t uVar5;\n    char16_t *pcVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t *in_ECX;\n    uint *puVar10;\n    uchar *arg_ch_00;\n    uint *puVar11;\n    uint32_t uStack68;\n    uint32_t uStack64;\n    uint32_t uStack60;\n    uint32_t uStack56;\n    int32_t *piStack52;\n    uchar auStack44 [12];\n    uchar auStack32 [8];\n    uint uStack24;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack24 = 0;\n    uStack16 = 0;\n    uStack12 = 1;\n    fcn.0040c25d();\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iVar8 = arg_8h;\n    cVar4 = fcn.0048f4b0(arg_8h);\n    if (cVar4 == '\\0') {\n        iVar8 = *(*in_ECX + 4);\n        iVar7 = *(iVar8 + 8 + in_ECX);\n        if (*(iVar8 + 0xd + in_ECX) != '\\0') {\n            iVar7 = *(iVar7 + 0x38);\n        }\n        *(iVar7 + 0x14) = 1;\n        iVar7 = *(iVar8 + 8 + in_ECX);\n        if (*(iVar8 + 0xd + in_ECX) != '\\0') {\n            iVar7 = *(iVar7 + 0x38);\n        }\n        *(iVar7 + 0x18) = 0;\n        goto code_r0x0048fd1c;\n    }\n    fcn.0040b5c1(0x49d0d0);\n    while (*(arg_8h + 8) < 5) {\n        fcn.00466fef(auStack32);\n    }\n    iVar7 = *(*(arg_8h + 4) + 0xc);\n    fcn.00408e90();\n    puVar3 = *(iVar7 + 8);\n    uStack64 = *puVar3;\n    uStack60 = puVar3[1];\n    uStack56 = puVar3[2];\n    piStack52 = puVar3[3];\n    *piStack52 = *piStack52 + 1;\n    fcn.0040c7c9();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(uStack64, uStack60);\n    puVar10 = in_ECX[0xbb];\n    puVar11 = puVar10;\n    uVar5 = fcn.004248f3(L\"ISVISIBLE\");\n    if (uStack56 == uVar5) {\n        if (uStack56 != 0) {\n            pcVar6 = L\"ISVISIBLE\";\n            uVar5 = uStack56;\n            do {\n                cVar1 = *((uStack60 - 0x4c7940) + pcVar6);\n                uStack64 = cVar1;\n                cVar2 = *pcVar6;\n                uStack68 = cVar2;\n                puVar10 = puVar11;\n                if (cVar1 != cVar2) {\n                    iVar7 = (-(cVar1 < cVar2) & 0xfffffffe) + 1;\n                    goto code_r0x0048f7fa;\n                }\n                pcVar6 = pcVar6 + 1;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        iVar7 = 0;\ncode_r0x0048f7fa:\n        if (iVar7 != 0) goto code_r0x0048f819;\n        iVar8 = (*_sym.imp.USER32.dll_IsWindowVisible)(*puVar10);\ncode_r0x0048f86c:\n        uVar5 = iVar8 != 0;\n        goto code_r0x0048fbf1;\n    }\ncode_r0x0048f819:\n    uVar5 = fcn.004248f3(L\"ISENABLED\");\n    if (uStack56 == uVar5) {\n        if (uStack56 != 0) {\n            pcVar6 = L\"ISENABLED\";\n            uVar5 = uStack56;\n            do {\n                cVar1 = *((uStack60 - 0x4c7960) + pcVar6);\n                uStack68 = cVar1;\n                cVar2 = *pcVar6;\n                uStack64 = cVar2;\n                puVar10 = puVar11;\n                if (cVar1 != cVar2) {\n                    iVar7 = (-(cVar1 < cVar2) & 0xfffffffe) + 1;\n                    goto code_r0x0048f860;\n                }\n                pcVar6 = pcVar6 + 1;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        iVar7 = 0;\ncode_r0x0048f860:\n        if (iVar7 == 0) {\n            iVar8 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*puVar10);\n            goto code_r0x0048f86c;\n        }\n    }\n    uVar5 = fcn.004248f3(L\"TABLEFT\");\n    if (uStack56 == uVar5) {\n        if (uStack56 != 0) {\n            pcVar6 = L\"TABLEFT\";\n            uVar5 = uStack56;\n            do {\n                cVar1 = *((uStack60 - 0x4c7980) + pcVar6);\n                uStack68 = cVar1;\n                cVar2 = *pcVar6;\n                uStack64 = cVar2;\n                puVar10 = puVar11;\n                if (cVar1 != cVar2) {\n                    iVar7 = (-(cVar1 < cVar2) & 0xfffffffe) + 1;\n                    goto code_r0x0048f8cf;\n                }\n                pcVar6 = pcVar6 + 1;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        iVar7 = 0;\ncode_r0x0048f8cf:\n        if (iVar7 != 0) goto code_r0x0048f8e8;\ncode_r0x0048f936:\n        fcn.004624e6(iVar8);\n    }\n    else {\ncode_r0x0048f8e8:\n        uVar5 = fcn.004248f3(L\"TABRIGHT\");\n        if (uStack56 == uVar5) {\n            if (uStack56 != 0) {\n                pcVar6 = L\"TABRIGHT\";\n                uStack64 = uStack60 - 0x4c7990;\n                uVar5 = uStack56;\n                do {\n                    cVar1 = *pcVar6;\n                    uStack68 = cVar1;\n                    puVar10 = puVar11;\n                    if (*(uStack64 + pcVar6) != cVar1) {\n                        iVar7 = (-(*(uStack64 + pcVar6) < cVar1) & 0xfffffffe) + 1;\n                        goto code_r0x0048f930;\n                    }\n                    pcVar6 = pcVar6 + 1;\n                    uVar5 = uVar5 - 1;\n                } while (uVar5 != 0);\n            }\n            iVar7 = 0;\ncode_r0x0048f930:\n            if (iVar7 == 0) goto code_r0x0048f936;\n        }\n        cVar4 = fcn.00403536();\n        if (cVar4 == '\\0') {\n            cVar4 = fcn.00403536();\n            if (cVar4 != '\\0') {\n                cVar4 = fcn.0046193e(1);\n                if (cVar4 != '\\0') goto code_r0x0048fd13;\n                iVar7 = *(*in_ECX + 4);\n                iVar8 = *(iVar7 + 8 + in_ECX);\n                if (*(iVar7 + 0xd + in_ECX) != '\\0') {\n                    iVar8 = *(iVar8 + 0x38);\n                }\n                *(iVar8 + 0x14) = 1;\n                goto code_r0x0048fd01;\n            }\n            cVar4 = fcn.00403536();\n            if (cVar4 == '\\0') {\n                cVar4 = fcn.00403536();\n                if (cVar4 == '\\0') {\n                    cVar4 = fcn.00403536();\n                    if (cVar4 == '\\0') {\n                        cVar4 = fcn.00403536();\n                        if (cVar4 != '\\0') {\n                            iVar8 = *(*(arg_8h + 4) + 0x10);\n                            fcn.00408e90();\n                            cVar4 = fcn.00461c22(*(iVar8 + 8), &uStack68);\n                            goto code_r0x0048fa65;\n                        }\n                        cVar4 = fcn.00403536();\n                        if (cVar4 != '\\0') {\n                            uVar5 = fcn.00461cac();\n                            goto code_r0x0048fbf1;\n                        }\n                        cVar4 = fcn.00403536();\n                        if (cVar4 == '\\0') {\n                            cVar4 = fcn.00403536();\n                            if (cVar4 == '\\0') {\n                                cVar4 = fcn.00403536();\n                                if (cVar4 != '\\0') {\n                                    iVar8 = *(*(arg_8h + 4) + 0x10);\n                                    fcn.00408e90();\n                                    cVar4 = fcn.00461e23(*(iVar8 + 8));\n                                    goto code_r0x0048fce3;\n                                }\n                                cVar4 = fcn.00403536();\n                                if (cVar4 == '\\0') {\n                                    cVar4 = fcn.00403536();\n                                    if ((cVar4 == '\\0') && (cVar4 = fcn.00403536(),  cVar4 == '\\0')) {\n                                        cVar4 = fcn.00403536();\n                                        if (cVar4 != '\\0') {\n                                            cVar4 = fcn.00461a70(auStack44);\n                                            goto code_r0x0048fca9;\n                                        }\n                                        cVar4 = fcn.00403536();\n                                        if (cVar4 == '\\0') {\n                                            cVar4 = fcn.00403536();\n                                            if (cVar4 == '\\0') {\n                                                cVar4 = fcn.00403536();\n                                                if (cVar4 == '\\0') {\n                                                    cVar4 = fcn.00403536();\n                                                    if (cVar4 != '\\0') {\n                                                        iVar8 = *(*(arg_8h + 4) + 0x10);\n                                                        fcn.00408e90();\n                                                        (*_sym.imp.USER32.dll_SendMessageW)\n                                                                  (*puVar11, 0xc2, 1, **(iVar8 + 8));\n                                                        goto code_r0x0048fd13;\n                                                    }\n                                                    cVar4 = fcn.00403536();\n                                                    if (cVar4 != '\\0') {\n                                                        arg_ch_00 = auStack44;\n                                                        uVar9 = fcn.0040ce67();\n                                                        cVar4 = fcn.004619ee(uVar9, arg_ch_00);\n                                                        goto code_r0x0048fca9;\n                                                    }\n                                                    cVar4 = fcn.00403536();\n                                                    if (cVar4 != '\\0') {\n                                                        uVar9 = fcn.0040ce67();\n                                                        cVar4 = fcn.00462402(uVar9);\n                                                        goto code_r0x0048fce3;\n                                                    }\n                                                    goto code_r0x0048fce7;\n                                                }\n                                                fcn.0046196b(&uStack68);\n                                                goto code_r0x0048fc24;\n                                            }\n                                            iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(*puVar10, 0xc9, 0xffffffff, 0);\n                                            uVar5 = iVar8 + 1;\n                                        }\n                                        else {\n                                            uVar5 = (*_sym.imp.USER32.dll_SendMessageW)(*puVar10, 0xba, 0, 0);\n                                        }\ncode_r0x0048fbf1:\n                                        fcn.0040e8a0();\n                                        arg_ch[3] = 1;\n                                        *arg_ch = uVar5;\n                                    }\n                                    else {\n                                        fcn.004617fd(iVar8);\n                                    }\n                                }\n                                else {\n                                    cVar4 = fcn.0046182c();\n                                    fcn.0040e8a0();\n                                    arg_ch[3] = 1;\n                                    *arg_ch = cVar4 != '\\0';\n                                }\n                            }\n                            else {\n                                cVar4 = fcn.00461d26(auStack44);\ncode_r0x0048fca9:\n                                if (cVar4 == '\\0') goto code_r0x0048fce7;\n                                fcn.00407c5d(auStack44);\n                            }\n                            goto code_r0x0048fd13;\n                        }\n                        uVar9 = fcn.0040ce67();\n                        cVar4 = fcn.00461f04(uVar9);\n                    }\n                    else {\n                        uVar9 = fcn.0040ce67();\n                        cVar4 = fcn.00461ba0(uVar9);\n                    }\n                }\n                else {\n                    iVar8 = *(*(arg_8h + 4) + 0x10);\n                    fcn.00408e90();\n                    cVar4 = fcn.00461b1c(*(iVar8 + 8));\n                }\n            }\n            else {\n                cVar4 = fcn.0046193e(0);\n            }\ncode_r0x0048fce3:\n            if (cVar4 == '\\0') goto code_r0x0048fce7;\n        }\n        else {\n            cVar4 = fcn.00462583(&uStack68);\ncode_r0x0048fa65:\n            if (cVar4 == '\\0') {\ncode_r0x0048fce7:\n                iVar7 = *(*in_ECX + 4);\n                iVar8 = *(iVar7 + 8 + in_ECX);\n                if (*(iVar7 + 0xd + in_ECX) != '\\0') {\n                    iVar8 = *(iVar8 + 0x38);\n                }\n                *(iVar8 + 0x14) = 1;\ncode_r0x0048fd01:\n                iVar8 = *(iVar7 + 8 + in_ECX);\n                if (*(iVar7 + 0xd + in_ECX) != '\\0') {\n                    iVar8 = *(iVar8 + 0x38);\n                }\n                *(iVar8 + 0x18) = 0;\n            }\n            else {\ncode_r0x0048fc24:\n                fcn.0040e8a0();\n                arg_ch[3] = 1;\n                *arg_ch = uStack68;\n            }\n        }\n    }\ncode_r0x0048fd13:\n    fcn.0040b1ff();\ncode_r0x0048fd1c:\n    fcn.0040b1ff();\n    fcn.0040e8a0();\n    return 0;\n}\n",
        "token_count": 3483
    },
    "0048fded": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048fded(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    \n    fcn.0040b5c1(0x49d0d0);\n    fcn.00492a0b(arg_8h);\n    iVar3 = fcn.00492968(1);\n    if (iVar3 < 1) {\n        iVar2 = *(*in_ECX + 4);\n        cVar1 = *(in_ECX + iVar2 + 0xd);\n        iVar4 = *(in_ECX + iVar2 + 8);\n        if (iVar3 < 0) {\n            if (cVar1 != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = -iVar3;\n        }\n        else {\n            if (cVar1 != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = 1;\n        }\n        iVar3 = *(in_ECX + iVar2 + 8);\n        if (*(in_ECX + iVar2 + 0xd) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n    }\n    else {\n        fcn.00403455();\n        fcn.0040c25d();\n        fcn.00462e95(*in_ECX[0x7e], &stack0xfffffeb4);\n        fcn.00407c5d(&stack0xfffffeac);\n        fcn.0040b1ff();\n        fcn.0040324f();\n    }\n    return 0;\n}\n",
        "token_count": 411
    },
    "0048feb3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048feb3(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    \n    cVar3 = fcn.0048f4b0(arg_8h);\n    if (cVar3 == '\\0') {\n        iVar1 = *(*in_ECX + 4);\n        iVar4 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 1;\n        iVar4 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x18) = 0;\n        fcn.0040e8a0();\n        *arg_ch = 0;\n    }\n    else {\n        uVar2 = *in_ECX[0xbb];\n        fcn.0040e8a0();\n        *arg_ch = uVar2;\n    }\n    arg_ch[3] = 7;\n    return 0;\n}\n",
        "token_count": 302
    },
    "0048ff24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048ff24(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t aiStack36 [2];\n    uint uStack28;\n    uint uStack24;\n    \n    cVar2 = fcn.0048f4b0(arg_8h);\n    if (cVar2 == '\\0') {\n        fcn.0040e8a0();\n    }\n    else {\n        cVar2 = fcn.00463a9e(&iStack44, 1);\n        if (cVar2 == '\\x01') {\n            arg_8h_00 = fcn.00407d93();\n            fcn.004083e0(arg_8h_00, 1);\n            uStack28 = 0;\n            uStack24 = 1;\n            fcn.00408a30(arg_8h_00, aiStack36, 1);\n            fcn.0040e8a0();\n            uStack28 = 0;\n            uStack24 = 1;\n            fcn.00408a30(arg_8h_00, aiStack36, 1);\n            fcn.0040e8a0();\n            aiStack36[0] = iStack44 - unaff_ESI;\n            uStack28 = 0;\n            uStack24 = 1;\n            fcn.00408a30(arg_8h_00, aiStack36, 1);\n            fcn.0040e8a0();\n            aiStack36[0] = iStack40 - unaff_EBX;\n            uStack28 = 0;\n            uStack24 = 1;\n            fcn.00408a30(arg_8h_00, aiStack36, 1);\n            fcn.0040e8a0();\n            return 0;\n        }\n        fcn.0040e8a0();\n    }\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iVar1 = *(*in_ECX + 4);\n    iVar3 = *(iVar1 + 8 + in_ECX);\n    if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n        iVar3 = *(iVar3 + 0x38);\n    }\n    *(iVar3 + 0x14) = 1;\n    iVar3 = *(iVar1 + 8 + in_ECX);\n    if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n        iVar3 = *(iVar3 + 0x38);\n    }\n    *(iVar3 + 0x18) = 0;\n    return 0;\n}\n",
        "token_count": 643
    },
    "00490076": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00490076(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    \n    fcn.0040b5c1(0x49d0d0);\n    cVar2 = fcn.0048f4b0(arg_8h);\n    if (cVar2 == '\\0') {\n        iVar1 = *(*in_ECX + 4);\n        iVar3 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 1;\n        iVar3 = *(iVar1 + 8 + in_ECX);\n        if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n    }\n    else {\n        fcn.0040c25d();\n        cVar2 = fcn.00463b0c(&stack0xffffffe0);\n        if (cVar2 == '\\0') {\n            iVar1 = *(*in_ECX + 4);\n            iVar3 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x14) = 1;\n            iVar3 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x18) = 0;\n        }\n        else {\n            fcn.00407c5d(&stack0xffffffdc);\n        }\n        fcn.0040b1ff();\n    }\n    return 0;\n}\n",
        "token_count": 462
    },
    "00490d02": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00490d02(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    uint arg_8h_00;\n    \n    in_ECX[0x26] = 0;\n    cVar2 = fcn.004039e5();\n    if (cVar2 != '\\0') {\n        fcn.00492a0b(arg_8h_00);\n        iVar3 = fcn.00492968(1);\n        if (iVar3 < 1) {\n            if (iVar3 < 0) {\n                iVar1 = *(*in_ECX + 4);\n                iVar4 = *(iVar1 + 8 + in_ECX);\n                if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                    iVar4 = *(iVar4 + 0x38);\n                }\n                *(iVar4 + 0x14) = -iVar3;\n                iVar3 = *(iVar1 + 8 + in_ECX);\n                if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                    iVar3 = *(iVar3 + 0x38);\n                }\n                *(iVar3 + 0x18) = 0;\n            }\n            fcn.0040e8a0();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n        }\n        else {\n            in_ECX[0x26] = *in_ECX[0x7e];\n        }\n    }\n    return 0;\n}\n",
        "token_count": 360
    },
    "00490d8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00490d8c(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint *arg_8h_00;\n    char16_t *pcVar4;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar auStack52 [4];\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack32;\n    uint uStack28;\n    \n    uStack72 = 0x49d100;\n    uStack28 = 1;\n    iVar3 = 0;\n    uStack44 = 1;\n    pcVar4 = L\"msctls_statusbar321\";\n    uStack40 = 0;\n    uStack32 = 0;\n    uStack68 = 0;\n    uStack64 = 0;\n    uStack60 = 0;\n    uStack56 = 0;\n    uStack48 = 0;\n    fcn.0040b5c1(L\"msctls_statusbar321\");\n    fcn.0040b5c1(0x49d0d0);\n    fcn.0040b5c1(0x49d0d0);\n    iVar2 = **(arg_8h + 4);\n    fcn.00466fef(iVar2);\n    if (pcVar4 < 0x2) {\n        arg_8h_00 = &uStack72;\n    }\n    else {\n        arg_8h_00 = *(*(arg_8h + 4) + 4);\n    }\n    fcn.00466fef(arg_8h_00);\n    fcn.00466fef(&uStack60);\n    cVar1 = fcn.0048f4b0(&stack0xffffffa0);\n    if (cVar1 == '\\0') {\n        iVar3 = *(*in_ECX + 4);\n        iVar2 = *(iVar3 + 8 + in_ECX);\n        if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x14) = 1;\n        iVar2 = *(iVar3 + 8 + in_ECX);\n        if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x18) = 0;\n    }\n    else {\n        if (iVar2 == 3) {\n            iVar3 = fcn.0040ce67();\n            iVar3 = iVar3 + -1;\n        }\n        fcn.0040c25d();\n        cVar1 = fcn.0046244f(iVar3, auStack52);\n        if (cVar1 == '\\0') {\n            iVar3 = *(*in_ECX + 4);\n            iVar2 = *(iVar3 + 8 + in_ECX);\n            if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                iVar2 = *(iVar2 + 0x38);\n            }\n            *(iVar2 + 0x14) = 1;\n            iVar2 = *(iVar3 + 8 + in_ECX);\n            if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                iVar2 = *(iVar2 + 0x38);\n            }\n            *(iVar2 + 0x18) = 0;\n        }\n        else {\n            fcn.00407c5d(&uStack60);\n        }\n        fcn.0040b1ff();\n    }\n    fcn.0040e8a0();\n    fcn.00466f23();\n    fcn.0041fd94(arg_8h_00);\n    fcn.0040e8a0();\n    return 0;\n}\n",
        "token_count": 883
    },
    "00490f26": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004912bc)\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00490f26(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    int32_t in_ECX;\n    uint32_t *puVar8;\n    uint32_t unaff_EBX;\n    code *pcVar9;\n    int32_t unaff_ESI;\n    int32_t iVar10;\n    int32_t unaff_EDI;\n    int32_t *piVar11;\n    int32_t in_stack_ffffff44;\n    int32_t iVar12;\n    int32_t iVar13;\n    uint uStack172;\n    uint32_t uStack168;\n    uint32_t uStack164;\n    uint32_t uStack156;\n    uint32_t uStack152;\n    int32_t *piStack148;\n    uint32_t uStack144;\n    uint uStack140;\n    uchar uStack136;\n    uint auStack128 [2];\n    int32_t iStack120;\n    uint uStack116;\n    uchar auStack104 [4];\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    \n    uStack144 = 0;\n    uVar2 = *(arg_8h + 8);\n    uStack140 = 0;\n    piStack148 = piStack148 & 0xffffff00;\n    uStack168 = uStack168;\n    uStack136 = 0;\n    uStack156 = 0;\n    uStack152 = uVar2;\n    if (3 < uVar2) {\n        in_stack_ffffff44 = 0x29;\n        uStack116 = *(*(arg_8h + 4) + 0xc);\n        cVar1 = fcn.00401fb9(0x29);\n        if (cVar1 == '\\0') {\n            fcn.00408e90();\n            piStack148 = **(iStack120 + 8);\n        }\n    }\n    if ((4 < uVar2) && (cVar1 = fcn.00401fb9(0x29),  cVar1 == '\\0')) {\n        piStack148 = fcn.0040ce67();\n    }\n    if ((5 < uVar2) && (cVar1 = fcn.00401fb9(0x29),  cVar1 == '\\0')) {\n        uStack164 = fcn.0040ce67();\n        uStack156 = fcn.0040ce67();\n        uStack156 = uStack156 & 1;\n        uVar2 = fcn.0040ce67();\n        unaff_EBX = unaff_EBX & 0xffffff | ((uVar2 & 2) != 0) << 0x18;\n        uVar2 = fcn.0040ce67();\n        uStack144 = uVar2 >> 2 & 0xffffff01;\n    }\n    uStack100 = 0x30;\n    uStack96 = 0x1a0;\n    if (uStack172._3_1_ != '\\0') {\n        uStack96 = 0x1a2;\n    }\n    uStack92 = 0;\n    uStack68 = 0;\n    uStack88 = 0;\n    iVar12 = **(arg_8h + 4);\n    fcn.00408e90();\n    uStack64 = **(iVar12 + 8);\n    uStack72 = 0;\n    uStack76 = 0;\n    uStack80 = 0;\n    uStack84 = 0;\n    puVar7 = &uStack168;\n    (*_sym.imp.USER32.dll_GetCursorPos)();\n    uStack172 = uStack172 + 0x10;\n    uStack168 = uStack168 + 0x10;\n    uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar3);\n    uVar2 = uStack168;\n    if ((1 < uStack168) && (cVar1 = fcn.00401fb9(0x29),  cVar1 == '\\0')) {\n        unaff_EDI = fcn.0040ce67();\n    }\n    if ((2 < uVar2) && (cVar1 = fcn.00401fb9(0x29),  cVar1 == '\\0')) {\n        unaff_ESI = fcn.0040ce67();\n    }\n    uVar2 = uStack164;\n    uVar4 = (*_sym.imp.USER32.dll_GetWindowLongW)(*(in_ECX + 0xe8), 0xfffffff0);\n    if (((uVar4 & 0x40) == 0) && (*(in_ECX + 0xec) == unaff_ESI)) {\n        puVar8 = *(in_ECX + 0xe8);\n        if (puVar8 != NULL) {\n            piVar11 = &iStack120;\n            uVar3 = 0x439;\n            pcVar9 = _sym.imp.USER32.dll_SendMessageW;\n            goto code_r0x00491150;\n        }\n    }\n    else {\n        iVar12 = unaff_ESI;\n        (*_sym.imp.USER32.dll_DestroyWindow)(*(in_ECX + 0xe8));\n        *(in_ECX + 0xe8) = 0;\n        *(in_ECX + 0xec) = unaff_ESI;\n        unaff_ESI = iVar12;\n    }\n    uVar3 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                      (8, L\"tooltips_class32\", 0, (uVar2 & 0xff) * 0x40 + 3, 0x80000000, 0x80000000, 0x80000000, \n                       0x80000000, 0, 0, 0, 0);\n    pcVar9 = _sym.imp.USER32.dll_SendMessageW;\n    *(in_ECX + 0xe8) = uVar3;\n    (*pcVar9)(uVar3, 0x432, 0, &uStack168);\n    uVar3 = 0x418;\n    puVar8 = *(in_ECX + 0xe8);\n    piVar11 = piStack148;\ncode_r0x00491150:\n    (*pcVar9)(puVar8, uVar3, 0);\n    iVar12 = unaff_EDI;\n    iVar13 = unaff_ESI;\n    iVar5 = (*pcVar9)(*(in_ECX + 0xe8), 0x421, unaff_ESI, unaff_EDI);\n    if (iVar5 == 0) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        (*pcVar9)(*(in_ECX + 0xe8), 0x41d, 0, 0);\n    }\n    iVar5 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(in_ECX + 0xe8));\n    if (iVar5 == 0) {\n        (*pcVar9)(*(in_ECX + 0xe8), 0x412, 0, 0xd8f0d8f0);\n        (*pcVar9)(*(in_ECX + 0xe8), 0x411, 1, &uStack172);\n    }\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0xe8), &uStack172);\n    iVar10 = uStack172 - iVar13;\n    iVar5 = (uStack168 - unaff_EBX) + 1;\n    uVar3 = (*_sym.imp.USER32.dll_MonitorFromPoint)(unaff_ESI, unaff_EDI, 2);\n    auStack128[0] = 0x28;\n    iVar6 = (*_sym.imp.USER32.dll_GetMonitorInfoW)(uVar3, auStack128);\n    if (iVar6 != 0) {\n        (*_sym.imp.USER32.dll_CopyRect)(&stack0xffffff40, auStack104);\n    }\n    if ((puVar8 < puVar7) || (puVar7 = iVar12 - (iVar10 + 1),  puVar7 < puVar8)) {\n        puVar8 = puVar7;\n    }\n    if ((iVar5 < in_stack_ffffff44) || (in_stack_ffffff44 = iVar13 - piVar11,  in_stack_ffffff44 < iVar5)) {\n        iVar5 = in_stack_ffffff44;\n    }\n    (*pcVar9)(*(in_ECX + 0xe8), 0x412, 0, iVar5 << 0x10 | puVar8 & 0xffff);\n    return 0;\n}\n",
        "token_count": 2023
    },
    "004912ea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004912ea(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    \n    fcn.00492a0b(arg_8h);\n    iVar2 = fcn.00492968(1);\n    if (iVar2 < 1) {\n        if (iVar2 < 0) {\n            iVar3 = *(*in_ECX + 4);\n            iVar4 = *(iVar3 + 8 + in_ECX);\n            if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = -iVar2;\n            iVar2 = *(iVar3 + 8 + in_ECX);\n            if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n                iVar2 = *(iVar2 + 0x38);\n            }\n            *(iVar2 + 0x18) = 0;\n        }\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        iVar2 = *in_ECX[0x7e];\n        iVar3 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n        if (iVar2 == iVar3) {\n            fcn.0046e899();\n        }\n        iVar2 = fcn.0041efad();\n        if (iVar2 == 0) {\n            fcn.0040e8a0();\n            *arg_ch = 0;\n            arg_ch[3] = 1;\n        }\n        else {\n            uVar1 = *in_ECX[0x7e];\n            fcn.0040e8a0();\n            arg_ch[3] = 7;\n            *arg_ch = uVar1;\n            fcn.00407cb4(iVar2, 0);\n        }\n        fcn.0046e899();\n    }\n    return 0;\n}\n",
        "token_count": 466
    },
    "00491441": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00491441(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    \n    fcn.00492a0b(arg_8h);\n    iVar2 = fcn.00492968(1);\n    if (iVar2 < 1) {\n        if (iVar2 < 0) {\n            iVar1 = *(*in_ECX + 4);\n            iVar3 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x14) = -iVar2;\n            iVar2 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar2 = *(iVar2 + 0x38);\n            }\n            *(iVar2 + 0x18) = 0;\n        }\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        (*_sym.imp.USER32.dll_PostMessageW)(*in_ECX[0x7e], 0x10, 0, 0);\n        fcn.0046e899();\n    }\n    return 0;\n}\n",
        "token_count": 324
    },
    "004914c4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004914c4(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    \n    fcn.00492a0b(arg_8h);\n    iVar2 = fcn.00492968(1);\n    if (iVar2 < 1) {\n        if (iVar2 < 0) {\n            iVar1 = *(*in_ECX + 4);\n            iVar3 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x14) = -iVar2;\n            iVar2 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar2 = *(iVar2 + 0x38);\n            }\n            *(iVar2 + 0x18) = 0;\n        }\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 279
    },
    "00491526": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00491526(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    \n    fcn.00492a0b(arg_8h);\n    iVar4 = fcn.00492968(1);\n    if (iVar4 < 1) {\n        if (iVar4 < 0) {\n            iVar1 = *(*in_ECX + 4);\n            iVar5 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar5 = *(iVar5 + 0x38);\n            }\n            *(iVar5 + 0x14) = -iVar4;\n            iVar4 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x18) = 0;\n        }\n    }\n    else {\n        cVar3 = fcn.00463c4b();\n        if (cVar3 == '\\0') {\n            uVar2 = *(arg_8h + 8);\n            iVar4 = 4;\n            if (2 < uVar2) {\n                iVar4 = fcn.0040ce67();\n            }\n            if (3 < uVar2) {\n                fcn.0040ce67();\n            }\n            if (iVar4 * 2 + -2 < 2) {\n                return 0;\n            }\n            iVar4 = iVar4 * 2 + -3;\n            do {\n                (*_sym.imp.USER32.dll_FlashWindow)(*in_ECX[0x7e], 1);\n                fcn.0046e899();\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            return 0;\n        }\n    }\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 489
    },
    "00491717": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00491717(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    \n    fcn.00492a0b(arg_8h);\n    iVar3 = fcn.00492968(1);\n    if (iVar3 < 1) {\n        iVar2 = *(*in_ECX + 4);\n        cVar1 = *(in_ECX + iVar2 + 0xd);\n        iVar4 = *(in_ECX + iVar2 + 8);\n        if (iVar3 < 0) {\n            if (cVar1 != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = -iVar3;\n        }\n        else {\n            if (cVar1 != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = 1;\n        }\n        iVar3 = *(in_ECX + iVar2 + 8);\n        if (*(in_ECX + iVar2 + 0xd) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n        fcn.0040b5c1(0x49d0d0);\n    }\n    else {\n        fcn.0040c25d();\n        fcn.0046da5a();\n        fcn.00407c5d(&stack0xffffffe0);\n        fcn.0040b1ff();\n    }\n    return 0;\n}\n",
        "token_count": 378
    },
    "004917c1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004917c1(uint arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uchar auStack32 [28];\n    \n    fcn.00492a0b(arg_8h);\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iVar3 = fcn.00492968(1);\n    if (iVar3 < 1) {\n        iVar2 = *(*in_ECX + 4);\n        cVar1 = *(in_ECX + iVar2 + 0xd);\n        iVar4 = *(in_ECX + iVar2 + 8);\n        if (iVar3 < 0) {\n            if (cVar1 != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = -iVar3;\n        }\n        else {\n            if (cVar1 != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = 1;\n        }\n        iVar4 = *(in_ECX + iVar2 + 8);\n        cVar1 = *(in_ECX + iVar2 + 0xd);\n    }\n    else {\n        iVar3 = (*_sym.imp.USER32.dll_GetClientRect)(*in_ECX[0x7e], auStack32);\n        if (iVar3 != 0) {\n            arg_8h_00 = fcn.00407d93();\n            fcn.004083e0(arg_8h_00, 1);\n            fcn.00408a30(arg_8h_00, &stack0xffffffc8, 1);\n            fcn.0040e8a0();\n            fcn.00408a30(arg_8h_00, &stack0xffffffc8, 1);\n            fcn.0040e8a0();\n            return 0;\n        }\n        iVar3 = *(*in_ECX + 4);\n        iVar4 = *(iVar3 + 8 + in_ECX);\n        if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 1;\n        iVar4 = *(iVar3 + 8 + in_ECX);\n        cVar1 = *(iVar3 + 0xd + in_ECX);\n    }\n    if (cVar1 != '\\0') {\n        iVar4 = *(iVar4 + 0x38);\n    }\n    *(iVar4 + 0x18) = 0;\n    return 0;\n}\n",
        "token_count": 627
    },
    "004918ef": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004918ef(uint arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    \n    fcn.00492a0b(arg_8h);\n    iVar4 = fcn.00492968(1);\n    if (iVar4 < 1) {\n        iVar2 = *(*in_ECX + 4);\n        cVar1 = *(in_ECX + iVar2 + 0xd);\n        iVar5 = *(in_ECX + iVar2 + 8);\n        if (iVar4 < 0) {\n            if (cVar1 != '\\0') {\n                iVar5 = *(iVar5 + 0x38);\n            }\n            *(iVar5 + 0x14) = -iVar4;\n        }\n        else {\n            if (cVar1 != '\\0') {\n                iVar5 = *(iVar5 + 0x38);\n            }\n            *(iVar5 + 0x14) = 1;\n        }\n        iVar4 = *(in_ECX + iVar2 + 8);\n        if (*(in_ECX + iVar2 + 0xd) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x18) = 0;\n        fcn.0040e8a0();\n        *arg_ch = 0;\n    }\n    else {\n        uVar3 = *in_ECX[0x7e];\n        fcn.0040e8a0();\n        *arg_ch = uVar3;\n    }\n    arg_ch[3] = 7;\n    return 0;\n}\n",
        "token_count": 384
    },
    "0049197c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0049197c(uint arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    int32_t iStack44;\n    int32_t aiStack40 [2];\n    uint uStack32;\n    uint uStack28;\n    \n    fcn.00492a0b(arg_8h);\n    iVar3 = fcn.00492968(1);\n    if (iVar3 < 1) {\n        iVar2 = *(*in_ECX + 4);\n        cVar1 = *(in_ECX + iVar2 + 0xd);\n        iVar4 = *(in_ECX + iVar2 + 8);\n        if (iVar3 < 0) {\n            if (cVar1 != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = -iVar3;\n        }\n        else {\n            if (cVar1 != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = 1;\n        }\n        iVar3 = *(in_ECX + iVar2 + 8);\n        if (*(in_ECX + iVar2 + 0xd) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n    }\n    else {\n        fcn.00463a9e(&stack0xffffffd0, 0);\n        arg_8h_00 = fcn.00407d93();\n        fcn.004083e0(arg_8h_00, 1);\n        uStack32 = 0;\n        uStack28 = 1;\n        fcn.00408a30(arg_8h_00, aiStack40, 1);\n        fcn.0040e8a0();\n        uStack32 = 0;\n        uStack28 = 1;\n        fcn.00408a30(arg_8h_00, aiStack40, 1);\n        fcn.0040e8a0();\n        aiStack40[0] = unaff_EBX - unaff_EDI;\n        uStack32 = 0;\n        uStack28 = 1;\n        fcn.00408a30(arg_8h_00, aiStack40, 1);\n        fcn.0040e8a0();\n        aiStack40[0] = iStack44 - unaff_ESI;\n        uStack32 = 0;\n        uStack28 = 1;\n        fcn.00408a30(arg_8h_00, aiStack40, 1);\n        fcn.0040e8a0();\n    }\n    return 0;\n}\n",
        "token_count": 694
    },
    "00491ad3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00491ad3(int32_t arg_8h, double *arg_ch)\n\n{\n    int32_t iVar1;\n    double dVar2;\n    double *pdVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    \n    fcn.00492a0b(arg_8h);\n    iVar4 = fcn.00492968(1);\n    pdVar3 = arg_ch;\n    if (iVar4 < 1) {\n        if (iVar4 < 0) {\n            iVar1 = *(*in_ECX + 4);\n            iVar5 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar5 = *(iVar5 + 0x38);\n            }\n            *(iVar5 + 0x14) = -iVar4;\n            iVar4 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x18) = 0;\n        }\n        fcn.0040e8a0();\n        *pdVar3 = 0xffffffff;\n        *(pdVar3 + 0xc) = 1;\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(*in_ECX[0x7e], &arg_8h);\n        pdVar3 = arg_ch;\n        dVar2 = arg_8h;\n        if (arg_8h < 0) {\n            dVar2 = dVar2 + *0x4c81d0;\n        }\n        fcn.0040e8a0();\n        *pdVar3 = dVar2;\n        *(pdVar3 + 0xc) = 3;\n    }\n    return 0;\n}\n",
        "token_count": 427
    },
    "00491b74": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00491b74(uint arg_8h, uint32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint32_t uVar5;\n    \n    uVar5 = 1;\n    fcn.00492a0b(arg_8h);\n    iVar2 = fcn.00492968(1);\n    if (iVar2 < 1) {\n        iVar4 = *(*in_ECX + 4);\n        cVar1 = *(in_ECX + iVar4 + 0xd);\n        iVar3 = *(in_ECX + iVar4 + 8);\n        if (iVar2 < 0) {\n            if (cVar1 != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x14) = -iVar2;\n        }\n        else {\n            if (cVar1 != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x14) = 1;\n        }\n        iVar2 = *(in_ECX + iVar4 + 8);\n        if (*(in_ECX + iVar4 + 0xd) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x18) = 0;\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        iVar2 = *in_ECX[0x7e];\n        iVar4 = (*_sym.imp.USER32.dll_IsWindowVisible)(iVar2);\n        if (iVar4 != 0) {\n            uVar5 = 3;\n        }\n        iVar4 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar2);\n        if (iVar4 != 0) {\n            uVar5 = uVar5 | 4;\n        }\n        iVar4 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n        if (iVar4 == iVar2) {\n            uVar5 = uVar5 | 8;\n        }\n        iVar4 = (*_sym.imp.USER32.dll_IsIconic)(iVar2);\n        if (iVar4 != 0) {\n            uVar5 = uVar5 | 0x10;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_IsZoomed)(iVar2);\n        if (iVar2 != 0) {\n            uVar5 = uVar5 | 0x20;\n        }\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = uVar5;\n    }\n    return 0;\n}\n",
        "token_count": 613
    },
    "00491c4f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00491c4f(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    \n    fcn.00492a0b(arg_8h);\n    iVar3 = fcn.00492968(1);\n    if (iVar3 < 1) {\n        if (iVar3 < 0) {\n            iVar1 = *(*in_ECX + 4);\n            iVar4 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = -iVar3;\n            iVar3 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x18) = 0;\n        }\n        fcn.0040b5c1(0x49d0d0);\n    }\n    else {\n        cVar2 = fcn.00463c4b();\n        if (cVar2 == '\\0') {\n            fcn.0040c25d();\n            fcn.0046df8c(&stack0xffffffe0);\n            fcn.00407c5d(&stack0xffffffe0);\n            fcn.0040b1ff();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 359
    },
    "00491cfd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00491cfd(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    \n    fcn.00492a0b(arg_8h);\n    iVar2 = fcn.00492968(1);\n    if (iVar2 < 1) {\n        if (iVar2 < 0) {\n            iVar1 = *(*in_ECX + 4);\n            iVar3 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x14) = -iVar2;\n            iVar2 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar2 = *(iVar2 + 0x38);\n            }\n            *(iVar2 + 0x18) = 0;\n        }\n        fcn.0040b5c1(0x49d0d0);\n    }\n    else {\n        fcn.0040c25d();\n        fcn.00463b0c(&stack0xffffffe0);\n        fcn.00407c5d(&stack0xffffffdc);\n        fcn.0040b1ff();\n    }\n    return 0;\n}\n",
        "token_count": 324
    },
    "00491d91": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00491d91(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    \n    fcn.00492a0b(arg_8h);\n    iVar2 = fcn.00492968(1);\n    if (iVar2 < 1) {\n        if (iVar2 < 0) {\n            iVar1 = *(*in_ECX + 4);\n            iVar3 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x14) = -iVar2;\n            iVar2 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar2 = *(iVar2 + 0x38);\n            }\n            *(iVar2 + 0x18) = 0;\n        }\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        fcn.0046ea3e();\n        fcn.0046e899();\n    }\n    return 0;\n}\n",
        "token_count": 303
    },
    "00491e0d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00491e0d(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    uint uVar3;\n    uint in_stack_ffffffac;\n    int32_t iVar4;\n    uint uVar5;\n    uchar auStack48 [8];\n    uint uStack40;\n    uint uStack36;\n    \n    arg_8h_00 = fcn.0041fd8b(0x10000);\n    fcn.004070c2(arg_8h_00);\n    uVar5 = 0x4c6b90;\n    fcn.0040b5c1(0x4c6b90);\n    iVar4 = 0x49d0d0;\n    fcn.004084e7(0x49d0d0);\n    if (*(arg_8h + 8) == 0) {\n        in_ECX[0xb1] = 4;\n    }\n    else {\n        iVar1 = **(arg_8h + 4);\n        fcn.00408e90();\n        in_stack_ffffffac = 0x491e8a;\n        fcn.00407c5d(*(iVar1 + 8));\n        if (1 < *(arg_8h + 8)) {\n            iVar1 = *(*(arg_8h + 4) + 4);\n            in_stack_ffffffac = 0x491e9f;\n            fcn.00408e90();\n            if (in_ECX + 0x7a != *(iVar1 + 8)) {\n                in_stack_ffffffac = *(iVar1 + 8);\n                fcn.0040c1c3(in_stack_ffffffac);\n            }\n        }\n    }\n    iVar1 = fcn.00492968(0);\n    if (iVar1 < 0) {\n        iVar4 = *(*in_ECX + 4);\n        iVar2 = *(in_ECX + iVar4 + 8);\n        if (*(in_ECX + iVar4 + 0xd) != '\\0') {\n            iVar2 = *(iVar2 + 0x38);\n        }\n        *(iVar2 + 0x14) = -iVar1;\n        iVar1 = *(in_ECX + iVar4 + 8);\n        if (*(in_ECX + iVar4 + 0xd) != '\\0') {\n            iVar1 = *(iVar1 + 0x38);\n        }\n        *(iVar1 + 0x18) = 0;\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n    }\n    else {\n        iVar1 = in_ECX[0xb6];\n        in_ECX[0xb1] = iVar4;\n        uVar3 = fcn.00407d93();\n        fcn.004083e0(uVar3, 2);\n        fcn.00408a30(uVar3, &stack0xffffffc0, 2);\n        fcn.0040e8a0();\n        iVar4 = 1;\n        if (0 < iVar1) {\n            do {\n                (*_sym.imp.USER32.dll_GetWindowTextW)(**(in_ECX[0xb5] + -4 + iVar4 * 4), uVar5, 0x7fff);\n                fcn.0041fd5b(0x10, in_stack_ffffffac);\n                uStack40 = fcn.0040b606(arg_8h_00);\n                uStack36 = 4;\n                fcn.00408a30(uVar3, &stack0xffffffd0, 2);\n                fcn.0040e8a0();\n                fcn.00408a30(uVar3, &stack0xffffffc0, 2);\n                fcn.0040e8a0();\n                iVar4 = iVar4 + 1;\n            } while (iVar4 <= iVar1);\n        }\n    }\n    *arg_8h_00 = *arg_8h_00 + -1;\n    if (*arg_8h_00 == 0) {\n        uVar3 = 4;\n        fcn.0041fd4d(arg_8h_00);\n        fcn.0041fd94(uVar5, arg_8h_00, uVar3);\n    }\n    return 0;\n}\n",
        "token_count": 979
    },
    "00492030": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00492030(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    int32_t iVar6;\n    uint var_28h;\n    int32_t *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar1 = *(arg_8h + 8);\n    uVar2 = fcn.0041fd8b(0x10000);\n    fcn.004070c2(uVar2);\n    var_14h = 0;\n    fcn.00492a0b(arg_8h);\n    iVar3 = fcn.00492968(1);\n    if (iVar3 < 1) {\n        if (iVar3 < 0) {\n            iVar5 = *(*in_ECX + 4);\n            iVar6 = *(iVar5 + 8 + in_ECX);\n            if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                iVar6 = *(iVar6 + 0x38);\n            }\n            *(iVar6 + 0x14) = -iVar3;\n            iVar3 = *(iVar5 + 8 + in_ECX);\n            if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x18) = 0;\n        }\n    }\n    else {\n        uVar2 = *in_ECX[0x7e];\n        var_8h = (*_sym.imp.USER32.dll_GetMenu)(uVar2);\n        if (var_8h != 0) {\n            var_ch = 3;\n            if (2 < uVar1) {\n                do {\n                    iVar3 = (*_sym.imp.USER32.dll_GetMenuItemCount)(var_8h);\n                    if (iVar3 == 0) goto code_r0x004921e6;\n                    var_4h = 0;\n                    while( true ) {\n                        (*_sym.imp.USER32.dll_GetMenuStringW)(var_8h, var_4h, var_28h, 0x7fff, 0x400);\n                        iVar5 = *(*(arg_8h + 4) + -4 + var_ch * 4);\n                        fcn.00408e90();\n                        uVar4 = **(iVar5 + 8);\n                        iVar5 = *(*(arg_8h + 4) + -4 + var_ch * 4);\n                        fcn.00408e90();\n                        arg_8h_00 = **(iVar5 + 8);\n                        uVar4 = fcn.004248f3(uVar4);\n                        iVar5 = fcn.0042637e(arg_8h_00, var_28h, uVar4);\n                        if (iVar5 == 0) break;\n                        var_4h = var_4h + 1;\n                        if (iVar3 - 1U < var_4h) {\n                            fcn.0040e8a0();\n                            *arg_ch = 0;\n                            arg_ch[3] = 1;\n                            goto code_r0x00492233;\n                        }\n                    }\n                    if (var_ch == uVar1) {\n                        var_14h = (*_sym.imp.USER32.dll_GetMenuItemID)(var_8h);\n                    }\n                    else {\n                        var_8h = (*_sym.imp.USER32.dll_GetSubMenu)(var_8h, var_4h);\n                        if (var_8h == 0) {\n                            fcn.0040e8a0();\n                            goto code_r0x004921f0;\n                        }\n                    }\n                    var_ch = var_ch + 1;\n                } while (var_ch <= uVar1);\n                if (var_14h == -1) {\n                    fcn.0040e8a0();\n                    *arg_ch = 0;\n                    arg_ch[3] = 1;\n                    goto code_r0x00492233;\n                }\n            }\n            fcn.00463985();\n            (*_sym.imp.USER32.dll_PostMessageW)(uVar2, 0x111, var_14h, 0);\n            fcn.00463985();\n            fcn.0046e899();\n            goto code_r0x00492233;\n        }\n    }\ncode_r0x004921e6:\n    fcn.0040e8a0();\ncode_r0x004921f0:\n    arg_ch[3] = 1;\n    *arg_ch = 0;\ncode_r0x00492233:\n    *var_24h = *var_24h + -1;\n    if (*var_24h == 0) {\n        uVar2 = 4;\n        fcn.0041fd4d(var_24h);\n        fcn.0041fd94(var_28h, var_24h, uVar2);\n    }\n    return 0;\n}\n",
        "token_count": 1173
    },
    "004922bd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004922bd(uint32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint8_t extraout_var;\n    uint32_t arg_ch_00;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uint32_t Y;\n    int32_t iVar5;\n    uint Y_00;\n    uint uVar6;\n    uint32_t uStack72;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iStack44;\n    int32_t iStack40;\n    uint32_t uStack36;\n    \n    uVar3 = *(arg_8h + 8);\n    uVar8 = arg_8h;\n    uStack36 = uVar3;\n    fcn.00492a0b(arg_8h);\n    uVar7 = 1;\n    iVar2 = fcn.00492968(1);\n    if (iVar2 < 1) {\n        if (iVar2 < 0) {\n            iVar5 = *(*in_ECX + 4);\n            iVar4 = *(iVar5 + 8 + in_ECX);\n            if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = -iVar2;\n            iVar2 = *(iVar5 + 8 + in_ECX);\n            if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                iVar2 = *(iVar2 + 0x38);\n            }\n            *(iVar2 + 0x18) = 0;\n        }\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_GetWindowLongW)();\n    arg_ch_00 = extraout_var >> 6 & 1;\n    uVar6 = 0x492356;\n    fcn.00463a9e(&stack0xffffffd8, arg_ch_00);\n    if (uVar3 < 5) {\ncode_r0x00492375:\n        unaff_ESI = iStack44 - unaff_ESI;\n    }\n    else {\n        uVar6 = 0x29;\n        cVar1 = fcn.00401fb9(0x29);\n        if (cVar1 != '\\0') goto code_r0x00492375;\n        unaff_ESI = fcn.0040ce67();\n    }\n    if ((uVar7 < 6) || (cVar1 = fcn.00401fb9(0x29),  cVar1 != '\\0')) {\n        iStack40 = iStack40 - unaff_EBX;\n    }\n    else {\n        iStack40 = fcn.0040ce67();\n    }\n    Y_00 = 0x29;\n    uStack72 = *(arg_8h + 4);\n    cVar1 = fcn.00401fb9(0x29);\n    uVar3 = uStack72;\n    if (cVar1 == '\\0') {\n        uStack72 = fcn.0040ce67();\n    }\n    cVar1 = fcn.00401fb9(0x29);\n    uVar7 = uVar3;\n    if (cVar1 == '\\0') {\n        uVar3 = fcn.0040ce67();\n    }\n    Y = uVar3;\n    if (6 < uStack72) {\n        iVar5 = 0x492411;\n        iVar2 = fcn.0040ce67();\n        Y = uVar3;\n        if (iVar2 != -1) {\n            if ((iVar2 < 1) || (100 < iVar2)) {\n                iVar5 = 10;\n                iVar2 = 10;\n            }\n            if ((arg_ch_00 != uVar8) || (arg_ch_00 = uVar8,  Y = uVar7,  uVar3 != uVar7)) {\n                while (cVar1 = fcn.0046e6c7(iVar2, 1, &stack0xffffffac, &stack0xffffffa8),  cVar1 != '\\0') {\n                    fcn.00463c6e(uVar6, Y_00, unaff_ESI, iStack40);\n                    iVar2 = iVar5;\n                    fcn.0046e899();\n                    iVar5 = iVar2;\n                }\n                goto code_r0x004924a5;\n            }\n        }\n    }\n    fcn.00463c6e(arg_ch_00, Y, unaff_ESI, iStack40);\ncode_r0x004924a5:\n    uVar6 = *in_ECX[0x7e];\n    fcn.0040e8a0();\n    arg_ch[3] = 7;\n    *arg_ch = uVar6;\n    return 0;\n}\n",
        "token_count": 1123
    },
    "0049258b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0049258b(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint arg_8h_00;\n    \n    fcn.00492a0b(arg_8h);\n    iVar2 = fcn.00492968(1);\n    if (iVar2 < 1) {\n        if (iVar2 < 0) {\n            iVar1 = *(*in_ECX + 4);\n            iVar3 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x14) = -iVar2;\n            iVar2 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar2 = *(iVar2 + 0x38);\n            }\n            *(iVar2 + 0x18) = 0;\n        }\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        iVar2 = fcn.0040ce67();\n        if (iVar2 == 0x40) {\n            arg_8h_00 = 1;\n        }\n        else {\n            if (iVar2 != 0x41) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*in_ECX[0x7e], iVar2);\n                fcn.0046e899();\n                return 0;\n            }\n            arg_8h_00 = 0;\n        }\n        fcn.004639b5(arg_8h_00);\n    }\n    return 0;\n}\n",
        "token_count": 412
    },
    "0049262d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0049262d(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    \n    fcn.00492a0b(arg_8h);\n    iVar3 = fcn.00492968(1);\n    if (iVar3 < 1) {\n        if (iVar3 < 0) {\n            iVar1 = *(*in_ECX + 4);\n            iVar4 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = -iVar3;\n            iVar3 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar3 = *(iVar3 + 0x38);\n            }\n            *(iVar3 + 0x18) = 0;\n        }\n    }\n    else {\n        iVar3 = *(*(arg_8h + 4) + 8);\n        fcn.00408e90();\n        cVar2 = fcn.00463c90(*(iVar3 + 8), 0);\n        if (cVar2 != '\\0') {\n            return 0;\n        }\n    }\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 359
    },
    "004926b5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004926b5(uint32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *in_ECX;\n    int32_t iVar6;\n    \n    uVar5 = arg_8h;\n    fcn.0040ce67();\n    uVar3 = fcn.0040ce67();\n    arg_8h = arg_8h & 0xffffff00 | uVar3;\n    fcn.00492a0b(uVar5);\n    iVar4 = fcn.00492968(1);\n    if (iVar4 < 1) {\n        if (iVar4 < 0) {\n            iVar1 = *(*in_ECX + 4);\n            iVar6 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar6 = *(iVar6 + 0x38);\n            }\n            *(iVar6 + 0x14) = -iVar4;\n            iVar4 = *(iVar1 + 8 + in_ECX);\n            if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x18) = 0;\n        }\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        uVar2 = *in_ECX[0x7e];\n        uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar2, 0xffffffec);\n        if ((uVar3 == 0xff) && ((uVar5 & 0x80000) != 0)) {\n            (*_sym.imp.USER32.dll_SetWindowLongW)(uVar2, 0xffffffec, uVar5 ^ 0x80000);\n        }\n        else {\n            (*_sym.imp.USER32.dll_SetWindowLongW)(uVar2, 0xffffffec, uVar5 | 0x80000);\n            (*_sym.imp.USER32.dll_SetLayeredWindowAttributes)(uVar2, 0, arg_8h, 2);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 528
    },
    "00492782": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00492782(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t arg_8h_00;\n    \n    fcn.00492a63(arg_8h);\n    arg_8h = 1;\n    fcn.00403310(&arg_8h);\n    in_ECX[0x3f] = 3;\n    fcn.0040f060(0);\n    arg_8h_00 = *(*(*in_ECX + 4) + 8 + in_ECX);\n    if (*(*(*in_ECX + 4) + 0xd + in_ECX) != '\\0') {\n        arg_8h_00 = *(arg_8h_00 + 0x38);\n    }\n    fcn.0040c5e7(arg_8h_00);\n    return 0;\n}\n",
        "token_count": 199
    },
    "004927de": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004927de(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t arg_8h_00;\n    \n    fcn.00492a63(arg_8h);\n    arg_8h = 1;\n    fcn.00403310(&arg_8h);\n    in_ECX[0x3f] = 5;\n    fcn.0040f060(0);\n    arg_8h_00 = *(*(*in_ECX + 4) + 8 + in_ECX);\n    if (*(*(*in_ECX + 4) + 0xd + in_ECX) != '\\0') {\n        arg_8h_00 = *(arg_8h_00 + 0x38);\n    }\n    fcn.0040c5e7(arg_8h_00);\n    return 0;\n}\n",
        "token_count": 199
    },
    "0049283a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0049283a(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t arg_8h_00;\n    \n    fcn.00492a63(arg_8h);\n    arg_8h = 1;\n    fcn.00403310(&arg_8h);\n    in_ECX[0x3f] = 4;\n    fcn.0040f060(0);\n    arg_8h_00 = *(*(*in_ECX + 4) + 8 + in_ECX);\n    if (*(*(*in_ECX + 4) + 0xd + in_ECX) != '\\0') {\n        arg_8h_00 = *(arg_8h_00 + 0x38);\n    }\n    fcn.0040c5e7(arg_8h_00);\n    return 0;\n}\n",
        "token_count": 200
    },
    "00492896": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00492896(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t arg_8h_00;\n    \n    fcn.00492a63(arg_8h);\n    arg_8h = 1;\n    fcn.00403310(&arg_8h);\n    in_ECX[0x3f] = 6;\n    fcn.0040f060(0);\n    arg_8h_00 = *(*(*in_ECX + 4) + 8 + in_ECX);\n    if (*(*(*in_ECX + 4) + 0xd + in_ECX) != '\\0') {\n        arg_8h_00 = *(arg_8h_00 + 0x38);\n    }\n    fcn.0040c5e7(arg_8h_00);\n    return 0;\n}\n",
        "token_count": 199
    },
    "004928f2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004928f2(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    \n    iVar1 = fcn.00492968(0);\n    if (iVar1 < 1) {\n        if (iVar1 < 0) {\n            iVar4 = *(*param_1 + 4);\n            iVar2 = *(iVar4 + 8 + param_1);\n            if (*(iVar4 + 0xd + param_1) != '\\0') {\n                iVar2 = *(iVar2 + 0x38);\n            }\n            *(iVar2 + 0x14) = -iVar1;\n            iVar2 = *(iVar4 + 8 + param_1);\n            if (*(iVar4 + 0xd + param_1) != '\\0') {\n                iVar2 = *(iVar2 + 0x38);\n            }\n            *(iVar2 + 0x18) = 0;\n        }\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n        iVar4 = 1;\n        if (0 < param_1[0xb6]) {\n            ppiVar3 = param_1[0xb5];\n            do {\n                if (**ppiVar3 == iVar1) {\n                    return 1;\n                }\n                iVar4 = iVar4 + 1;\n                ppiVar3 = ppiVar3 + 1;\n            } while (iVar4 <= param_1[0xb6]);\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 359
    },
    "00492c36": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00492c36(uint arg_8h, uint *hWnd, uint *arg_10h, int32_t nHeight, uint arg_18h, uint32_t arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    char cVar4;\n    \n    uVar1 = *hWnd;\n    if (hWnd[0x11] != 0) {\n        (*_sym.imp.GDI32.dll_DeleteObject)(hWnd[0x11]);\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n    iVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x5a);\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    uVar2 = (*_sym.imp.GDI32.dll_CreateFontW)\n                      ((iVar3 * nHeight) / -0x2d0, 0, 0, 0, arg_18h, arg_1ch & 2, arg_1ch & 4, arg_1ch & 8, 1, 4, 0, \n                       arg_20h, 0, *arg_10h);\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0x30, uVar2, 1);\n    cVar4 = *(hWnd + 0x24);\n    if (cVar4 == '\\x01') {\n        if (arg_24h == '\\0') goto code_r0x00492d1a;\n        (*_sym.imp.USER32.dll_MoveWindow)(*hWnd, *(hWnd + 0x22), *(hWnd + 0x8a), *(hWnd + 0x23), *(hWnd + 0x8e), 0);\n        cVar4 = *(hWnd + 0x24);\n    }\n    if ((cVar4 == '\\0') && (arg_24h != '\\0')) {\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0x142, 0, 0);\n    }\ncode_r0x00492d1a:\n    hWnd[0x11] = uVar2;\n    fcn.00497d04(arg_8h, hWnd, 1);\n    return;\n}\n",
        "token_count": 532
    },
    "00492d30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00492d30(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    \n    iVar4 = (*_sym.imp.USER32.dll_SendMessageW)(***(*0x4d1924 + arg_8h * 4), 0xf0, 0, 0);\n    if ((iVar4 != 0) || (arg_ch != 0)) {\n        iVar4 = arg_8h;\n        if (2 < arg_8h) {\n            do {\n                puVar1 = **(*0x4d1924 + iVar4 * 4);\n                if ((puVar1 == NULL) || (*(puVar1 + 0x24) != '\\x1a')) break;\n                uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(*puVar1, 0xfffffff0);\n                iVar6 = arg_8h;\n                if ((uVar5 & 0x20000) != 0) goto code_r0x00492dc5;\n                iVar4 = iVar4 + -1;\n            } while (2 < iVar4);\n        }\n        iVar4 = iVar4 + 1;\n        iVar6 = arg_8h;\ncode_r0x00492dc5:\n        do {\n            iVar2 = iVar6;\n            iVar6 = iVar2 + 1;\n            iVar3 = iVar4;\n            if (((*0x4d1934 < iVar6) || (puVar1 = **(*0x4d1924 + iVar6 * 4),  puVar1 == NULL)) ||\n               (*(puVar1 + 0x24) != '\\x1a')) break;\n            uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(*puVar1, 0xfffffff0);\n        } while ((uVar5 & 0x20000) == 0);\n        for (; iVar3 <= iVar2; iVar3 = iVar3 + 1) {\n            (*_sym.imp.USER32.dll_SendMessageW)(***(*0x4d1924 + iVar3 * 4), 0xf1, 0, 0);\n        }\n        if (arg_ch == 1) {\n            (*_sym.imp.USER32.dll_SendMessageW)(***(*0x4d1924 + arg_8h * 4), 0xf1, 1, 0);\n        }\n        else {\n            uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(***(*0x4d1924 + iVar4 * 4), 0xfffffff0);\n            (*_sym.imp.USER32.dll_SetWindowLongW)(***(*0x4d1924 + iVar4 * 4), 0xfffffff0, uVar5 | 0x10000);\n        }\n    }\n    return;\n}\n",
        "token_count": 652
    },
    "00492e4a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00492e4a(uint arg_8h, int32_t *arg_ch, uint arg_10h, int16_t *arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, uint noname_9, int32_t arg_30h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 2;\n    }\n    if (arg_28h < 0x10) {\n        arg_28h = arg_28h | 2;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 0x96;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x96;\n    }\n    if ((-1 < arg_30h) && (*arg_14h != 0)) {\n        iVar2 = fcn.004079b6(arg_8h, 0, L\"SysAnimate32\", 0, arg_28h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, \n                             arg_20h, 0);\n        *arg_ch = iVar2;\n        pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x467, 0, arg_14h);\n            if (((iVar2 != 0) || (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(arg_14h),  iVar2 == 0)) ||\n               (iVar2 = (*pcVar1)(*arg_ch, 0x467, iVar2, arg_30h),  iVar2 != 0)) {\n                if (*0x4d18b8 == 0) {\n                    *(arg_ch + 0x86) = 0x300;\n                }\n                return 1;\n            }\n            (*_sym.imp.USER32.dll_DestroyWindow)(*arg_ch);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 503
    },
    "00492f0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00492f0c(int32_t arg_8h, int32_t *arg_ch, uint noname_2, int32_t arg_14h, uint arg_18h, uint arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint unaff_EDI;\n    \n    if (arg_14h != 0) {\n        if (arg_20h == -1) {\n            arg_20h = 0x96;\n        }\n        if (arg_24h == -1) {\n            arg_24h = 0x96;\n        }\n        *(arg_ch + 0x8e) = arg_24h;\n        *(arg_ch + 0x22) = arg_18h;\n        *(arg_ch + 0x8a) = arg_1ch;\n        *(arg_ch + 0x23) = arg_20h;\n        if (*(arg_8h + 0x1cc) == 0) {\n            fcn.0041fd5b(0x1c, unaff_EDI);\n            uVar2 = fcn.00464f57(***(*0x4d1910 + *0x4d191c * 4));\n            *(arg_8h + 0x1cc) = uVar2;\n        }\n        iVar3 = fcn.00465115(arg_14h, arg_ch, arg_ch);\n        arg_ch[0x20] = iVar3;\n        if (*arg_ch != 0) {\n            if (*0x4d18b8 == 0) {\n                *(arg_ch + 0x86) = 0x300;\n            }\n            pcVar1 = _sym.imp.USER32.dll_SetWindowLongW;\n            (*_sym.imp.USER32.dll_SetWindowLongW)(*arg_ch, 0xfffffff0, -(arg_28h != 0xffffffff) & arg_28h | 0x50010000);\n            (*pcVar1)(*arg_ch, 0xffffffec, -(arg_2ch != 0xffffffff) & arg_2ch | 0x10000);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 524
    },
    "00493005": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00493005(uint *arg_8h, int32_t *arg_ch, uint wParam, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint32_t arg_18h_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    arg_18h_00 = fcn.00498021(-(arg_28h != 0xffffffff) & arg_28h | 0x10000);\n    uVar3 = arg_18h_00 & 1;\n    if (uVar3 != 0) {\n        arg_18h_00 = arg_18h_00 ^ 1;\n    }\n    if (arg_2ch == -1) {\n        arg_2ch = 0x100;\n    }\n    iVar1 = fcn.004079b6(arg_8h, arg_2ch, L\"button\", arg_14h, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, wParam, \n                         arg_2ch, 1);\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if (uVar3 != '\\0') {\n            (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, 0x401, wParam, 0);\n        }\n        if (*0x4d18b8 == 0) {\n            *(arg_ch + 0x86) = 0x300;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 406
    },
    "0049309e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0049309e(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint noname_10;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 3;\n    }\n    if ((arg_28h & 7) == 0) {\n        arg_28h = arg_28h | 3;\n    }\n    uVar1 = fcn.00498021(arg_28h | 0x10000);\n    iVar2 = fcn.004079b6(arg_8h, -(arg_2ch != 0xffffffff) & arg_2ch, L\"button\", arg_14h, uVar1, arg_18h, arg_1ch, \n                         arg_20h, arg_24h, arg_10h, noname_10, 1);\n    *arg_ch = iVar2;\n    if (iVar2 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n        arg_ch[0x13] = iVar2;\n        if (*0x4d18b8 == 0) {\n            *(arg_ch + 0x86) = 0x200;\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 370
    },
    "004931d9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004931d9(int32_t arg_8h, int32_t arg_ch, uint noname_2, int32_t arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t var_4h;\n    \n    iVar4 = arg_ch;\n    iVar2 = arg_8h;\n    if (arg_14h == -1) {\n        uVar6 = *(arg_8h + 0x1a0);\n        arg_ch = iVar4;\n        if (uVar6 == 0) {\n            uVar5 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n            *(iVar2 + 0x1a0) = uVar5;\n            *(iVar2 + 0x1a4) = uVar5;\n            *(iVar4 + 0xc) = uVar5;\n            uVar6 = *(iVar2 + 0x1a0);\n            arg_ch = iVar4;\n            if (uVar6 == 0) goto code_r0x00493219;\n        }\ncode_r0x00493294:\n        *(arg_ch + 0x92) = 0;\n        uVar6 = CONCAT31(uVar6 >> 8, 1);\n    }\n    else {\n        uVar6 = fcn.0040c4db(arg_14h, &arg_8h, &var_4h);\n        if (uVar6 != '\\0') {\n            iVar2 = **(*0x4d1910 + arg_8h * 4);\n            piVar3 = *(*0x4d1924 + var_4h * 4);\n            iVar4 = *piVar3;\n            cVar1 = *(iVar4 + 0x90);\n            uVar6 = piVar3 & 0xffffff00;\n            if ((((cVar1 != '\\x0e') && (cVar1 != '\\x0f')) && (cVar1 != '\\x02')) &&\n               ((cVar1 != '\\x03' && (*(iVar4 + 0xc) == 0)))) {\n                uVar5 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                *(arg_ch + 0xc) = uVar5;\n                *(iVar2 + 0x1a4) = uVar5;\n                uVar6 = *(arg_ch + 0xc);\n                *(**(*0x4d1924 + var_4h * 4) + 0xc) = uVar6;\n                if (*(arg_ch + 0xc) != 0) goto code_r0x00493294;\n            }\n        }\ncode_r0x00493219:\n        uVar6 = uVar6 & 0xffffff00;\n    }\n    return uVar6;\n}\n",
        "token_count": 634
    },
    "004932a2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004932a2(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint32_t arg_18h_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 4;\n    }\n    arg_18h_00 = fcn.00498021(arg_28h | 0x10000);\n    if (arg_2ch == -1) {\n        arg_2ch = 0x200;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 200;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x14;\n    }\n    iVar1 = fcn.004079b6(arg_8h, arg_2ch, L\"SysDateTimePick32\", 0, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, \n                         arg_10h, arg_24h, 1);\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        fcn.0046ec37(~(arg_18h_00 >> 3) & 1, 1);\n        (*_sym.imp.USER32.dll_SendMessageW)(*arg_ch, 0x1002, 0, &var_10h);\n        if (*0x4d18b8 == 0) {\n            *(arg_ch + 0x86) = 0x200;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 448
    },
    "0049335c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0049335c(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 0x3010c0;\n    }\n    if ((arg_28h & 0x800) == 0) {\n        arg_28h = arg_28h | 0x10004;\n    }\n    else {\n        arg_28h = arg_28h | 4;\n    }\n    uVar1 = fcn.00498021(arg_28h);\n    if (arg_2ch == -1) {\n        arg_2ch = 0x200;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 200;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x96;\n    }\n    iVar2 = fcn.004079b6(arg_8h, arg_2ch, L\"edit\", arg_14h, uVar1, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, arg_20h\n                         , 1);\n    *arg_ch = iVar2;\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthW)(iVar2);\n        uVar3 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_ch, 0xb1, uVar1, uVar1);\n        if (*0x4d18b8 == 0) {\n            *(arg_ch + 0x86) = 1;\n        }\n        uVar3 = uVar3 & 0xffffff00 | 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 490
    },
    "0049340b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0049340b(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    uint arg_18h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    arg_18h_00 = fcn.00498021(-(arg_28h != 0xffffffff) & arg_28h | 0x20007);\n    arg_2ch = -(arg_2ch != 0xffffffff) & arg_2ch;\n    if (arg_20h == -1) {\n        arg_20h = 200;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x96;\n    }\n    iVar1 = fcn.004079b6(arg_8h, arg_2ch, L\"button\", arg_14h, arg_18h_00, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, \n                         arg_2ch, 1);\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n        arg_ch[0x13] = uVar2;\n        if (*0x4d18b8 == 0) {\n            *(arg_ch + 0x86) = 1;\n        }\n        uVar2 = uVar2 & 0xffffff00 | 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 409
    },
    "0049349f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0049349f(uint arg_8h, int32_t *arg_ch, uint arg_10h, int16_t *arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, uint32_t arg_2ch, uint arg_30h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *arg_8h_00;\n    uint in_stack_ffffffac;\n    uint in_stack_ffffffb0;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 0x100;\n    }\n    uVar2 = fcn.00498021(arg_28h | 0x10003);\n    arg_2ch = -(arg_2ch != 0xffffffff) & arg_2ch;\n    if (arg_20h == -1) {\n        arg_20h = 0x20;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x20;\n    }\n    iVar3 = fcn.004079b6(arg_8h, arg_2ch, L\"static\", 0, uVar2, arg_18h, arg_1ch, 0, 0, arg_10h, arg_2ch, 0);\n    *arg_ch = iVar3;\n    if (iVar3 == 0) {\ncode_r0x0049355a:\n        uVar5 = 0;\n    }\n    else {\n        *(arg_ch + 0x8e) = arg_24h;\n        *(arg_ch + 0x23) = arg_20h;\n        uVar5 = 1;\n        if (*arg_14h != 0) {\n            *(arg_ch + 0x22) = arg_18h;\n            *(arg_ch + 0x8a) = arg_1ch;\n            arg_8h_00 = &arg_30h;\n            uVar2 = 0;\n            fcn.004119e0(arg_8h_00);\n            cVar1 = fcn.0049822e(arg_ch, arg_14h, arg_8h_00, in_stack_ffffffac, in_stack_ffffffb0, uVar2);\n            if (cVar1 == '\\0') {\n                (*_sym.imp.USER32.dll_DestroyWindow)(*arg_ch);\n                goto code_r0x0049355a;\n            }\n            (*_sym.imp.USER32.dll_MoveWindow)\n                      (*arg_ch, *(arg_ch + 0x22), *(arg_ch + 0x8a), *(arg_ch + 0x23), *(arg_ch + 0x8e), 1);\n        }\n        if (*0x4d18b8 == 0) {\n            *(arg_ch + 0x86) = 0x300;\n        }\n    }\n    uVar4 = fcn.0040e8a0();\n    return uVar4 & 0xffffff00 | uVar5;\n}\n",
        "token_count": 708
    },
    "004935ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004935ac(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 0x80;\n    }\n    if ((arg_28h & 0x800) == 0) {\n        arg_28h = arg_28h | 0x10000;\n    }\n    else {\n        arg_28h = arg_28h & 0xfffffffb;\n    }\n    uVar1 = fcn.00498021(arg_28h);\n    if (arg_2ch == -1) {\n        arg_2ch = 0x200;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 200;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x14;\n    }\n    iVar2 = fcn.004079b6(arg_8h, arg_2ch, L\"edit\", arg_14h, uVar1, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, arg_20h\n                         , 1);\n    *arg_ch = iVar2;\n    if (iVar2 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (*0x4d18b8 == 0) {\n            *(arg_ch + 0x86) = 0x200;\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 419
    },
    "00493643": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00493643(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    uint32_t arg_18h_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint noname_10;\n    int32_t lpRect;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    arg_18h_00 = fcn.00498021(-(arg_28h != 0xffffffff) & arg_28h | 0x100);\n    iVar1 = fcn.004079b6(arg_8h, -(arg_2ch != 0xffffffff) & arg_2ch, L\"static\", arg_14h, arg_18h_00, arg_18h, arg_1ch, \n                         arg_20h, arg_24h, arg_10h, noname_10, 1);\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if ((arg_18h_00 & 0x10) != 0) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar1, &lpRect);\n            *(arg_8h + 0x60) = var_8h - lpRect;\n            *(arg_8h + 100) = var_4h - var_ch;\n        }\n        iVar1 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n        arg_ch[0x13] = iVar1;\n        uVar2 = 1;\n        if (*0x4d18b8 == 0) {\n            *(arg_ch + 0x86) = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 453
    },
    "004936ea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004936ea(uint arg_8h, int32_t *arg_ch, uint arg_10h, int16_t *arg_14h, uint X, uint Y, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (arg_28h == 0xffffffff) {\n        arg_28h = 0xa00002;\n    }\n    uVar2 = fcn.00498021(arg_28h | 0x10001);\n    if (arg_2ch == -1) {\n        arg_2ch = 0x200;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 200;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x96;\n    }\n    iVar3 = fcn.004079b6(arg_8h, arg_2ch, L\"Listbox\", 0, uVar2, X, Y, arg_20h, arg_24h, arg_10h, arg_2ch, 1);\n    *arg_ch = iVar3;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iVar3 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if (*arg_14h != 0) {\n            (*_sym.imp.USER32.dll_SendMessageW)(iVar3, 0x180, 0, arg_14h);\n            (*pcVar1)(*arg_ch, 0x186, 0, 0);\n            iVar3 = *arg_ch;\n        }\n        if (*0x4d18b8 == 0) {\n            *(arg_ch + 0x86) = 1;\n        }\n        (*_sym.imp.USER32.dll_MoveWindow)(iVar3, X, Y, arg_20h, arg_24h, 0);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 477
    },
    "004937b9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl\nfcn.004937b9(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    ushort auStackY8228 [4048];\n    uint uStackY132;\n    int32_t iStackY128;\n    uint uStackY124;\n    int32_t iStackY120;\n    uint *puStackY116;\n    int32_t iStackY112;\n    uint uStackY108;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uchar *var_14h;\n    uint var_ch;\n    \n    fcn.00441ef0();\n    iVar7 = -1;\n    uVar4 = arg_28h;\n    if (arg_28h == 0xffffffff) {\n        uVar4 = 0xc;\n    }\n    var_14h = 0x4937e3;\n    uVar5 = fcn.00498021(uVar4 | 0x10001);\n    uVar4 = arg_2ch;\n    if (arg_2ch == 0xffffffff) {\n        uVar4 = 0x220;\n    }\n    arg_28h = uVar4 & 0x10;\n    if (arg_28h != 0) {\n        uVar4 = uVar4 ^ 0x10;\n    }\n    iVar6 = arg_20h;\n    if (arg_20h == -1) {\n        iVar6 = 0x96;\n    }\n    var_20h = arg_24h;\n    if (arg_24h == -1) {\n        var_20h = 0x96;\n    }\n    var_14h = NULL;\n    var_1ch = arg_10h;\n    var_18h = var_20h;\n    iVar6 = fcn.004079b6(arg_8h, uVar4, L\"SysListView32\", 0x49d0d0, uVar5, arg_18h, arg_1ch, iVar6, var_20h, arg_10h, \n                         var_20h, 0);\n    piVar2 = arg_ch;\n    *arg_ch = iVar6;\n    if (iVar6 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        if (arg_28h != 0) {\n            (*_sym.imp.USER32.dll_SendMessageW)();\n        }\n        (*_sym.imp.USER32.dll_SendMessageW)();\n        if (*(arg_8h + 0x188) != 0) {\n            uStackY108 = 0;\n            iStackY112 = *piVar2;\n            puStackY116 = 0x49388d;\n            (*_sym.imp.USER32.dll_SetWindowPos)();\n        }\n        pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n        var_14h = &stack0xffffdfdc;\n        var_1ch = 0;\n        var_20h = 0xf;\n        arg_8h = arg_14h;\n        while( true ) {\n            cVar3 = fcn.0049766b(&stack0xffffdfdc, &fcn.004937b9::arg_8h, 0x4d18c4);\n            if (cVar3 == '\\0') break;\n            arg_28h = fcn.004248f3(&stack0xffffdfdc);\n            uStackY108 = 0x4938e7;\n            fcn.00428fc8(&stack0xffffdfdc, L\"-----\");\n            uStackY108 = 0x1057;\n            iStackY112 = *piVar2;\n            puStackY116 = 0x4938fb;\n            var_18h = (*pcVar1)();\n            if (0x96 < var_18h) {\n                var_18h = 0x96;\n            }\n            iVar7 = iVar7 + 1;\n            *(&stack0xffffdfdc + arg_28h * 2) = 0;\n            puStackY116 = &fcn.004937b9::var_20h;\n            uStackY124 = 0x1061;\n            iStackY128 = *piVar2;\n            uStackY132 = 0x493929;\n            iStackY120 = iVar7;\n            (*pcVar1)();\n        }\n        *(piVar2 + 0x25) = iVar7;\n        *(piVar2 + 0x96) = 0xffff;\n        uVar5 = 1;\n        if (*0x4d18b8 == 0) {\n            *(piVar2 + 0x86) = 1;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 1219
    },
    "00493956": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: hWnd\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00493956(uint noname_0, int32_t arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint arg_8h;\n    uint uVar1;\n    code *pcVar2;\n    char cVar3;\n    ushort uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t iVar8;\n    int16_t iStackY8268;\n    uint uStackY160;\n    uint uStackY156;\n    uint uStackY152;\n    int32_t iStackY148;\n    uint uStackY144;\n    uint uStackY140;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t hWnd;\n    \n    hWnd = 0x493963;\n    fcn.00441ef0();\n    var_8h = unaff_ESI;\n    hWnd = unaff_EBX;\n    cVar3 = fcn.0040c4db(arg_18h, &fcn.00493956::var_8h, &fcn.00493956::hWnd);\n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    if (cVar3 != '\\0') {\n        arg_8h = **(*0x4d1910 + var_8h * 4);\n        uVar1 = ***(*0x4d1924 + hWnd * 4);\n        *(arg_ch + 0x34) = uVar1;\n        *(arg_ch + 0x93) = *(**(*0x4d1924 + hWnd * 4) + 0x93);\n        (*pcVar2)();\n        var_8h = (*pcVar2)();\n        *(arg_ch + 0x94) = var_8h;\n        *(**(*0x4d1924 + hWnd * 4) + 0x94) = var_8h;\n        uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)();\n        fcn.004222d0();\n        uVar4 = (*pcVar2)();\n        *(arg_ch + 0x88) = uVar4;\n        iVar8 = 1;\n        arg_18h = 1;\n        fcn.0049766b(&stack0xffffdfb4, &fcn.00493956::arg_14h, 0x4d18c4);\n        iVar6 = (*pcVar2)();\n        if (iVar6 != -1) {\n            while( true ) {\n                cVar3 = fcn.0049766b(&stack0xffffdfb4, &fcn.00493956::arg_14h, 0x4d18c4);\n                if (cVar3 == '\\0') {\n                    if (*(arg_ch + 0x93) != -1) {\n                        uStackY140 = 0x493b75;\n                        fcn.00497d04(arg_8h, **(*0x4d1924 + hWnd * 4), 1);\n                    }\n                    return 1;\n                }\n                if (var_8h <= iVar8) break;\n                if (iStackY8268 != 0) {\n                    uStackY144 = 0x493ae1;\n                    uStackY140 = uVar1;\n                    iVar6 = (*pcVar2)();\n                    if (iVar6 == 0) {\n                        return 0;\n                    }\n                }\n                if ((uVar5 & 1) != 0) {\n                    uStackY144 = 0x493afc;\n                    uStackY140 = uVar1;\n                    iVar6 = (*pcVar2)();\n                    iVar6 = iVar6 + 0xc;\n                    if (0x96 < iVar6) {\n                        iVar6 = 0x96;\n                    }\n                    uStackY144 = 0;\n                    iStackY148 = arg_18h;\n                    uStackY152 = 0x101d;\n                    uStackY160 = 0x493b17;\n                    uStackY156 = uVar1;\n                    iVar7 = (*pcVar2)();\n                    iVar8 = arg_18h;\n                    if (iVar7 <= iVar6) {\n                        (*pcVar2)();\n                    }\n                }\n                iVar8 = iVar8 + 1;\n                arg_18h = iVar8;\n            }\n            uStackY144 = 0x493b48;\n            uStackY140 = uVar1;\n            (*pcVar2)();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1116
    },
    "00493caf": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00493caf(uint *arg_8h, int32_t arg_ch, uint arg_10h, int32_t item, int16_t *arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint lpmii;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    int32_t var_24h;\n    int16_t *var_14h;\n    int32_t var_8h;\n    \n    lpmii = 0x30;\n    fcn.004222d0(&var_34h, 0, 0x2c);\n    if (item == -1) {\n        if (arg_8h[0x69] == 0) {\n            return 0;\n        }\n        *(arg_ch + 0xc) = arg_8h[0x67];\n        puVar4 = arg_8h;\n        iVar5 = arg_ch;\n    }\n    else {\n        cVar2 = fcn.0040c4db(item, &arg_8h, &var_8h);\n        iVar5 = arg_ch;\n        if (cVar2 == '\\0') {\n            return 0;\n        }\n        puVar4 = **(*0x4d1910 + arg_8h * 4);\n        if (puVar4[0x69] == 0) {\n            return 0;\n        }\n        iVar3 = *(**(*0x4d1924 + var_8h * 4) + 0xc);\n        if (iVar3 == 0) {\n            return 0;\n        }\n        *(arg_ch + 0xc) = iVar3;\n        if (*(**(*0x4d1924 + var_8h * 4) + 0x90) == '\\x0e') {\n            var_34h = 4;\n            iVar3 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(iVar3, item, 0, &lpmii);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            *(iVar5 + 0xc) = var_24h;\n            iVar3 = var_24h;\n        }\n        if (iVar3 == 0) {\n            return 0;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_IsMenu)(iVar3);\n        if (iVar3 == 0) {\n            return 0;\n        }\n    }\n    uVar1 = arg_1ch;\n    var_34h = 0x13;\n    var_30h = 0;\n    if (arg_20h == 1) {\n        var_30h = 0x200;\n    }\n    if (*arg_18h == 0) {\n        var_30h = 0x800;\n    }\n    else {\n        var_14h = arg_18h;\n    }\n    var_28h = arg_10h;\n    iVar3 = (*_sym.imp.USER32.dll_InsertMenuItemW)(*(iVar5 + 0xc), arg_1ch, 1, &lpmii);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    *(iVar5 + 0x88) = uVar1;\n    (*_sym.imp.USER32.dll_DrawMenuBar)(*puVar4);\n    return 1;\n}\n",
        "token_count": 771
    },
    "00493deb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00493deb(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint32_t arg_20h, \n            uint32_t arg_24h, uint32_t arg_28h, int32_t arg_2ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_20h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = fcn.00498021(-(arg_28h != 0xffffffff) & arg_28h | 0x10000);\n    if (arg_2ch == -1) {\n        arg_2ch = 0x200;\n    }\n    arg_20h = -(arg_20h != 0xffffffff) & arg_20h;\n    arg_24h = -(arg_24h != 0xffffffff) & arg_24h;\n    iVar3 = fcn.004079b6(arg_8h, arg_2ch, L\"SysMonthCal32\", 0, uVar2, arg_18h, arg_1ch, arg_20h, arg_24h, arg_10h, \n                         arg_2ch, 1);\n    *arg_ch = iVar3;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iVar3 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if ((arg_20h == 0) || (arg_24h == 0)) {\n            (*_sym.imp.USER32.dll_SendMessageW)(iVar3, 0x1009, 0, &var_10h);\n            (*_sym.imp.USER32.dll_SetWindowPos)(*arg_ch, 0, arg_18h, arg_1ch, var_8h, var_4h, 4);\n        }\n        fcn.0046ec37(1, 1);\n        (*pcVar1)(*arg_ch, 0x1002, 0, &var_20h);\n        if (*0x4d18b8 == 0) {\n            *(arg_ch + 0x86) = 0x300;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 532
    },
    "00493fe2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00493fe2(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    code *pcVar1;\n    uint arg_18h_00;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint noname_10;\n    \n    arg_18h_00 = fcn.00498021(-(arg_28h != 0xffffffff) & arg_28h);\n    iVar2 = fcn.004079b6(arg_8h, -(arg_2ch != 0xffffffff) & arg_2ch, L\"Msctls_Progress32\", 0, arg_18h_00, arg_18h, \n                         arg_1ch, arg_20h, arg_24h, arg_10h, noname_10, 0);\n    *arg_ch = iVar2;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x2001, 0, 0xff000000);\n        (*pcVar1)(*arg_ch, 0x409, 0, 0xff000000);\n        (*pcVar1)(*arg_ch, 0x402, 0, 0);\n        (*pcVar1)(*arg_ch, 0x401, 0, 0x640000);\n        uVar3 = (*pcVar1)(*arg_ch, 0x404, 1, 0);\n        if (*0x4d18b8 == 0) {\n            *(arg_ch + 0x86) = 1;\n        }\n        uVar3 = uVar3 & 0xffffff00 | 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 459
    },
    "00494095": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00494095(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    uint32_t arg_18h_00;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_18h_00 = fcn.00498021(-(arg_28h != 0xffffffff) & arg_28h | 9);\n    if (*(arg_8h + 0x69) == '\\0') {\n        arg_18h_00 = arg_18h_00 | 0x10000;\n        *(arg_8h + 0x69) = 1;\n    }\n    iVar1 = fcn.004079b6(arg_8h, -(arg_2ch != 0xffffffff) & arg_2ch, L\"button\", arg_14h, arg_18h_00, arg_18h, arg_1ch, \n                         arg_20h, arg_24h, arg_10h, arg_8h, 1);\n    *arg_ch = iVar1;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n        arg_ch[0x13] = iVar1;\n        if (*0x4d18b8 == 0) {\n            *(arg_ch + 0x86) = 0x200;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 390
    },
    "00494120": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00494120(uint arg_8h, int32_t *arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t arg_28h, uint32_t arg_2ch)\n\n{\n    code *pcVar1;\n    uint32_t arg_18h_00;\n    int32_t iVar2;\n    uint uVar3;\n    uint noname_10;\n    \n    if (arg_28h == -1) {\n        arg_28h = 1;\n    }\n    arg_18h_00 = fcn.00498021(arg_28h);\n    iVar2 = fcn.004079b6(arg_8h, -(arg_2ch != 0xffffffff) & arg_2ch, L\"msctls_trackbar32\", 0, arg_18h_00, arg_18h, \n                         arg_1ch, arg_20h, arg_24h, arg_10h, noname_10, 0);\n    *arg_ch = iVar2;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        (*_sym.imp.USER32.dll_SendMessageW)(iVar2, 0x405, 0, 0);\n        if ((arg_18h_00 & 1) != 0) {\n            (*pcVar1)(*arg_ch, 0x406, 0, 0x640000);\n            (*pcVar1)(*arg_ch, 0x414, 10, 0);\n        }\n        uVar3 = 1;\n        if (*0x4d18b8 == 0) {\n            *(arg_ch + 0x86) = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 428
    },
    "004941c2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.004941c2(int32_t arg_8h, uint32_t *arg_ch, uint arg_10h, uint noname_3, uint X, uint Y, int32_t cx, int32_t arg_24h\n            , uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    uint arg_18h;\n    \n    if (*(arg_8h + 0x188) == 0) {\n        arg_18h = fcn.00498021(-(arg_28h != 0xffffffff) & arg_28h | 0x4014000);\n        arg_2ch = -(arg_2ch != 0xffffffff) & arg_2ch;\n        if (cx == -1) {\n            cx = 0x96;\n        }\n        if (arg_24h == -1) {\n            arg_24h = 0x96;\n        }\n        in_EAX = fcn.004079b6(arg_8h, arg_2ch, L\"SysTabControl32\", 0x49d0d0, arg_18h, X, Y, cx, arg_24h, arg_10h, \n                              arg_2ch, 1);\n        *arg_ch = in_EAX;\n        if (in_EAX != 0) {\n            (*_sym.imp.USER32.dll_SetWindowPos)(in_EAX, 0xffffffff, X, Y, cx, arg_24h, 0x20);\n            uVar1 = *arg_ch;\n            *(arg_8h + 0x18c) = 0xffffffff;\n            *(arg_8h + 400) = 0xffffffff;\n            *(arg_8h + 0x194) = 0;\n            *(arg_8h + 0x188) = uVar1;\n            *(arg_8h + 0x198) = 1;\n            if (*0x4d18b8 == 0) {\n                *(arg_ch + 0x86) = 0x300;\n            }\n            return CONCAT31(uVar1 >> 8, 1);\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 499
    },
    "0049434b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0049434b(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint arg_1ch, int32_t arg_20h, \n            int32_t arg_24h, uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    \n    uVar1 = arg_28h;\n    if (arg_28h == 0xffffffff) {\n        uVar1 = 0x37;\n    }\n    uVar1 = fcn.00498021(uVar1 | 0x10000);\n    uVar4 = uVar1 & 0x100;\n    if (uVar4 != 0) {\n        uVar1 = uVar1 ^ 0x100;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 0x96;\n    }\n    if (arg_24h == -1) {\n        arg_24h = 0x96;\n    }\n    iVar2 = fcn.004079b6(arg_8h, -(arg_2ch != 0xffffffff) & arg_2ch, L\"SysTreeView32\", 0x49d0d0, uVar1, arg_18h, arg_1ch\n                         , arg_20h, arg_24h, arg_10h, uVar1, 0);\n    *arg_ch = iVar2;\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        if (*(arg_8h + 0x188) != 0) {\n            (*_sym.imp.USER32.dll_SetWindowPos)(iVar2, 0, 0, 0, 0, 0, 0x13);\n            iVar2 = *arg_ch;\n        }\n        *(arg_8h + 0x1ac) = iVar2;\n        if (uVar4 != 0) {\n            *(arg_ch + 0x24) = 0x10;\n            uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(*arg_ch, 0xfffffff0);\n            (*_sym.imp.USER32.dll_SetWindowLongW)(*arg_ch, 0xfffffff0, uVar1 | 0x100);\n        }\n        if (*(arg_8h + 0x38) != '\\0') {\n            iVar2 = *(arg_8h + 0x1c);\n            fcn.0040c4db(arg_10h, &arg_2ch, &arg_28h);\n            fcn.0041a654(arg_2ch, arg_28h);\n            if (iVar2 != -1) {\n                fcn.0041a654(arg_2ch, iVar2);\n            }\n        }\n        *(arg_8h + 0x1b4) = 0xffffffff;\n        *(arg_8h + 0x1b8) = 0xffffffff;\n        uVar3 = 1;\n        if (*0x4d18b8 == 0) {\n            *(arg_ch + 0x86) = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 738
    },
    "0049469d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049469d(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if ((*arg_8h != 0) && (arg_8h[2] == 0)) {\n        iVar1 = (*_sym.imp.USER32.dll_SetWindowLongW)(*arg_8h, 0xfffffffc, fcn.004986a4);\n        arg_8h[2] = iVar1;\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "004947a8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004947a8(uint item, uint32_t *hWnd, uint arg_10h)\n\n{\n    ushort *puVar1;\n    uint8_t uVar2;\n    uint *puVar3;\n    int64_t iVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    code *pcVar10;\n    bool bVar11;\n    bool bVar12;\n    uint uVar13;\n    uint uVar14;\n    uint var_c4h;\n    uint var_c0h;\n    uint32_t var_b8h;\n    int32_t var_a0h;\n    uint var_9ch;\n    uint var_94h;\n    uint var_90h;\n    uint var_88h;\n    uint32_t var_7ch;\n    uint var_78h;\n    uint var_72h;\n    uint var_68h;\n    uint var_64h;\n    uint32_t var_60h;\n    int32_t var_5ch;\n    uint32_t var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint32_t var_44h;\n    uint lParam;\n    int32_t var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint32_t var_ch;\n    uint *var_8h;\n    \n    cVar5 = fcn.0040c4db(item, &var_68h, &var_8h);\n    iVar7 = *0x4d1924;\n    if (cVar5 == '\\0') {\ncode_r0x00494eaa:\n        *hWnd = 0;\n        return 0;\n    }\n    *hWnd = 0xffffffff;\n    pcVar10 = _sym.imp.USER32.dll_SendMessageW;\n    puVar3 = **(iVar7 + var_8h * 4);\n    uVar2 = *(puVar3 + 0x24);\n    uVar13 = *puVar3;\n    var_8h = puVar3;\n    if (uVar2 < 0x12) {\n        if (uVar2 == 0x11) {\n            var_2ch = puVar3[4];\n            uVar13 = puVar3[0xd];\n            *hWnd = 0;\n            uVar6 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar13, 0xfffffff0);\n            lParam = 8;\n            var_24h = 0xf000;\n            if (arg_10h == '\\0') {\n                iVar7 = (*_sym.imp.USER32.dll_SendMessageW)(var_8h[0xd], 0x113e, 0, &lParam);\n                if (iVar7 == 0) {\n                    return 0;\n                }\n                if ((uVar6 & 0x100) != 0) {\n                    *hWnd = (-((var_28h & 0xfffff000) != 0x1000) & 0xfffffffd) + 4;\n                }\n                if ((var_28h & 2) != 0) {\n                    *hWnd = *hWnd | 0x100;\n                }\n                if ((var_28h & 0x20) != 0) {\n                    *hWnd = *hWnd | 0x400;\n                }\n                if ((var_28h & 0x10) == 0) {\n                    return 0;\n                }\n                *hWnd = *hWnd | 0x200;\n                return 0;\n            }\n            iVar7 = fcn.0041fd8b(0x2000);\n            uVar13 = var_8h[0xd];\n        }\n        else {\n            if (uVar2 < 0xb) {\n                if (uVar2 == 10) {\n                    uVar6 = (*_sym.imp.USER32.dll_SendMessageW)(uVar13, 0x130b, 0, 0);\n                    *hWnd = uVar6;\n                    if (arg_10h == '\\0') {\n                        return 0;\n                    }\n                    var_94h = 8;\n                    (*pcVar10)(uVar13, 0x133c, uVar6, &var_94h);\n                    goto code_r0x0049482e;\n                }\n                if (uVar2 == 0) {\n                    iVar7 = (*_sym.imp.USER32.dll_SendMessageW)(uVar13, 0x147, 0, 0);\n                    pcVar10 = _sym.imp.USER32.dll_SendMessageW;\n                    if (iVar7 != -1) {\n                        iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(uVar13, 0x149, iVar7, 0);\n                        iVar4 = (iVar8 + 1) * 2;\n                        iVar8 = fcn.0041fd8b(-(iVar4 >> 0x20 != 0) | iVar4);\n                        uVar14 = 0x148;\ncode_r0x0049487d:\n                        (*pcVar10)(uVar13, uVar14, iVar7, iVar8);\n                        return iVar8;\n                    }\ncode_r0x00494c63:\n                    iVar7 = (*_sym.imp.USER32.dll_SendMessageW)(uVar13, 0xe, 0, 0);\n                    iVar4 = (iVar7 + 1U) * 2;\n                    iVar8 = fcn.0041fd8b(-(iVar4 >> 0x20 != 0) | iVar4);\n                    (*_sym.imp.USER32.dll_GetWindowTextW)(uVar13, iVar8, iVar7 + 1U);\n                    return iVar8;\n                }\n                if (uVar2 == 1) {\n                    iVar7 = (*_sym.imp.USER32.dll_SendMessageW)(uVar13, 0x188, 0, 0);\n                    pcVar10 = _sym.imp.USER32.dll_SendMessageW;\n                    if (iVar7 != -1) {\n                        iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(uVar13, 0x18a, iVar7, 0);\n                        iVar4 = (iVar8 + 1) * 2;\n                        iVar8 = fcn.0041fd8b(-(iVar4 >> 0x20 != 0) | iVar4);\n                        uVar14 = 0x189;\n                        goto code_r0x0049487d;\n                    }\n                    goto code_r0x00494c63;\n                }\n                if (uVar2 != 8) goto code_r0x00494c63;\n                uVar14 = 0x408;\n                goto code_r0x00494827;\n            }\n            if (uVar2 == 0xc) goto code_r0x00494eaa;\n            if (uVar2 < 0xe) goto code_r0x00494c63;\n            if (uVar2 < 0x10) {\n                iVar7 = (*_sym.imp.USER32.dll_IsMenu)(puVar3[3]);\n                if (iVar7 == 0) {\n                    return 0;\n                }\n                iVar7 = fcn.0041fd8b(0x208);\n                var_c4h = 0x30;\n                if (arg_10h != '\\0') {\n                    var_c0h = 0x10;\n                    var_9ch = 0x104;\n                    var_a0h = iVar7;\n                    iVar8 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(var_8h[3], item, 0);\n                    if (iVar8 != 0) {\n                        return iVar7;\n                    }\n                    *hWnd = 0;\n                    goto code_r0x0049499d;\n                }\n                var_c0h = 1;\n                iVar8 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(var_8h[3], item, 0, &var_c4h);\n                fcn.0041fd94(iVar7);\n                if (iVar8 == 0) {\n                    return 0;\n                }\n                var_7ch = (-((var_b8h & 3) != 0) & 0x40) + 0x40;\n                if ((var_b8h & 0x8080) != 0) {\n                    var_7ch = var_7ch | 0x100;\n                }\n                var_7ch = (-((var_b8h & 8) != 0) & 0xfffffffd) + 4 | var_7ch;\n                if ((var_b8h & 0x1000) != 0) {\n                    var_7ch = var_7ch | 0x200;\n                }\n                goto code_r0x0049482e;\n            }\n            if (uVar2 != 0x10) goto code_r0x00494c63;\n            *hWnd = 0;\n            var_2ch = (*_sym.imp.USER32.dll_SendMessageW)(uVar13, 0x110a, 9, 0);\n            if (var_2ch == 0) {\n                return 0;\n            }\n            lParam = 4;\n            if (arg_10h == '\\0') {\n                iVar7 = (*_sym.imp.USER32.dll_SendMessageW)(uVar13, 0x113e, 0, &lParam);\n                var_7ch = var_ch;\n                if (iVar7 == 0) {\n                    return 0;\n                }\n                goto code_r0x0049482e;\n            }\n            iVar7 = fcn.0041fd8b(0x2000);\n        }\n        var_1ch = 0xfff;\n        lParam = 1;\n        var_20h = iVar7;\n        iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(uVar13, 0x113e, 0, &lParam);\n        if (iVar8 != 0) {\n            return iVar7;\n        }\ncode_r0x0049499d:\n        fcn.0041fd94(iVar7);\n        return 0;\n    }\n    if (uVar2 != 0x12) {\n        if (uVar2 == 0x13) {\n            uVar6 = (*_sym.imp.USER32.dll_SendMessageW)(uVar13, 0x100c, 0xffffffff, 2);\n            *hWnd = uVar6;\n            fcn.004222d0(&var_64h, 0, 0x34);\n            var_60h = *hWnd;\n            var_64h = 4;\n            iVar7 = (*pcVar10)(uVar13, 0x104b, 0, &var_64h);\n            var_7ch = -(iVar7 != 0) & var_44h;\n        }\n        else if (uVar2 == 0x14) {\n            uVar6 = (*_sym.imp.USER32.dll_GetWindowLongW)(puVar3[0xd], 0xffffffec);\n            fcn.004222d0(&var_64h, 0, 0x34);\n            puVar3 = var_8h;\n            var_88h = item;\n            var_90h = 1;\n            var_60h = (*_sym.imp.USER32.dll_SendMessageW)(var_8h[0xd], 0x1053, 0xffffffff, &var_90h);\n            if (var_60h == -1) {\n                return 0;\n            }\n            if (((uVar6 & 4) == 0) || (arg_10h == '\\0')) {\n                iVar8 = fcn.0041fd8b(0x2000);\n                var_64h = 1;\n                var_4ch = 0xfff;\n                bVar12 = false;\n                bVar11 = 0 < *(puVar3 + 0x25);\n                iVar9 = 0;\n                iVar7 = iVar8;\n                while( true ) {\n                    var_5ch = iVar9;\n                    var_50h = iVar7;\n                    if (bVar12 == bVar11) {\n                        (*_sym.imp.USER32.dll_SendMessageW)();\n                        return iVar8;\n                    }\n                    (*_sym.imp.USER32.dll_SendMessageW)(puVar3[0xd], 0x104b, 0, &var_64h);\n                    var_4ch = fcn.004248f3(iVar7);\n                    var_4ch = 0xffe - var_4ch;\n                    if (var_4ch < 1) break;\n                    iVar7 = fcn.004248f3(iVar8);\n                    puVar1 = iVar8 + iVar7 * 2;\n                    *puVar1 = *0x4d18c4;\n                    puVar1[1] = 0;\n                    iVar7 = (*_sym.imp.USER32.dll_CharNextW)(puVar1);\n                    iVar9 = iVar9 + 1;\n                    bVar12 = SBORROW4(iVar9, *(puVar3 + 0x25));\n                    bVar11 = iVar9 - *(puVar3 + 0x25) < 0;\n                }\n                return iVar8;\n            }\n            var_64h = 8;\n            var_54h = 0xf000;\n            iVar7 = (*_sym.imp.USER32.dll_SendMessageW)(puVar3[0xd], 0x104b, 0, &var_64h);\n            if (iVar7 == 0) {\n                return 0;\n            }\n            var_7ch = (-((var_58h & 0xfffff000) != 0x1000) & 0xfffffffd) + 4;\n        }\n        else {\n            if (uVar2 != 0x15) {\n                if (0x18 < uVar2) {\n                    if (uVar2 < 0x1b) {\n                        if (arg_10h == '\\0') {\n                            uVar6 = (*_sym.imp.USER32.dll_SendMessageW)(uVar13, 0xf0, 0, 0);\n                            *hWnd = uVar6;\n                            if (uVar6 != 0) {\n                                return 0;\n                            }\n                            *hWnd = 4;\n                            return 0;\n                        }\n                        iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(uVar13, 0xe);\n                        iVar4 = (iVar8 + 1U) * 2;\n                        iVar7 = fcn.0041fd8b(-(iVar4 >> 0x20 != 0) | iVar4);\n                        iVar8 = (*_sym.imp.USER32.dll_GetWindowTextW)(uVar13, iVar7, iVar8 + 1U);\n                        if (iVar8 != 0) {\n                            return iVar7;\n                        }\n                        *hWnd = 0;\n                        goto code_r0x0049499d;\n                    }\n                    if (uVar2 == 0x1c) {\n                        iVar7 = (*_sym.imp.USER32.dll_SendMessageW)(uVar13, 0x1001, 0, &var_78h);\n                        if (iVar7 != 0) {\n                            iVar7 = fcn.0041fd8b(0x16);\n                            (*_sym.imp.USER32.dll_wsprintfW)(iVar7, L\"%d/%02d/%02d\", var_78h, var_78h._2_2_, var_72h);\n                            return iVar7;\n                        }\n                        goto code_r0x00494eaa;\n                    }\n                }\n                goto code_r0x00494c63;\n            }\n            if (puVar3[0x1f] == 4) {\n                fcn.00408e90();\n                iVar4 = (*(puVar3[0x1e] + 4) + 1) * 2;\n                iVar8 = fcn.0041fd8b(-(iVar4 >> 0x20 != 0) | iVar4);\n                fcn.00408e90();\n                iVar7 = *(puVar3[0x1e] + 4);\n                fcn.00408e90();\n                fcn.004058a3(iVar7 + 1);\n                return iVar8;\n            }\n            var_7ch = fcn.0040ce67();\n        }\n        goto code_r0x0049482e;\n    }\n    uVar14 = 0x400;\ncode_r0x00494827:\n    var_7ch = (*_sym.imp.USER32.dll_SendMessageW)(uVar13, uVar14, 0, 0);\ncode_r0x0049482e:\n    *hWnd = var_7ch;\n    return 0;\n}\n",
        "token_count": 3723
    },
    "00495009": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00495009(uint arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint *hWnd;\n    uint uVar2;\n    code *pcVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t arg_8h_00;\n    uint uVar6;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar4 = fcn.0040c4db(arg_8h, &var_4h, &var_8h);\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    uVar6 = **(*0x4d1910 + var_4h * 4);\n    hWnd = **(*0x4d1924 + var_8h * 4);\n    uVar2 = *hWnd;\n    uVar1 = *(hWnd + 0x24);\n    var_8h = uVar2;\n    fcn.0041b058();\n    if (-1 < hWnd[0x12]) {\n        fcn.00496e88(hWnd[0x12]);\n    }\n    pcVar3 = _sym.imp.USER32.dll_SendMessageW;\n    if (uVar1 < 0x13) {\n        if (uVar1 == 0x12) {\n            if (arg_ch < -1) {\n                return 0;\n            }\n            hWnd[0x12] = arg_ch;\n            fcn.0041ab80(arg_ch, 1);\n            pcVar3 = _sym.imp.USER32.dll_ShowWindow;\n            if ((*(hWnd + 0x92) & 0x20) == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*hWnd, 0);\n                (*pcVar3)(*hWnd, 5);\n                (*_sym.imp.USER32.dll_SetFocus)(*hWnd);\n            }\n            goto code_r0x004951d8;\n        }\n        if (uVar1 == 0) {\n            arg_8h_00 = arg_ch;\n            if (arg_ch < 0) {\n                return 0;\n            }\ncode_r0x0049519e:\n            hWnd[0x12] = arg_8h_00;\n            fcn.0041ab80(arg_8h_00, 1);\n            goto code_r0x004951d8;\n        }\n        if (4 < uVar1) {\n            if (uVar1 == 8) {\n                if (arg_ch < 0) {\n                    return 0;\n                }\n                uVar6 = 0x2001;\n            }\n            else {\n                if (uVar1 != 0x10) {\n                    if (uVar1 != 0x11) {\n                        return 0;\n                    }\n                    goto code_r0x00495165;\n                }\n                if (arg_ch < 0) {\n                    return 0;\n                }\n                uVar6 = 0x111d;\n            }\n            (*_sym.imp.USER32.dll_SendMessageW)(uVar2, uVar6, 0, arg_ch);\n            goto code_r0x004951d8;\n        }\ncode_r0x00495155:\n        hWnd[0x12] = arg_ch;\n        fcn.0041ab80(arg_ch, 1);\n    }\n    else {\n        if (uVar1 != 0x13) {\n            if (uVar1 == 0x14) {\ncode_r0x00495165:\n                if (arg_ch < 0) {\n                    return 0;\n                }\n                hWnd[0x12] = arg_ch;\n                fcn.0041ab80(arg_ch, 1);\n                (*_sym.imp.USER32.dll_InvalidateRect)(hWnd[0xd], 0, 1);\n                goto code_r0x004951d8;\n            }\n            if (uVar1 != 0x17) {\n                if (uVar1 == 0x18) {\n                    if (arg_ch < 0) {\n                        return 0;\n                    }\n                    uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar2, 0xfffffff0);\n                    (*_sym.imp.USER32.dll_SetWindowLongW)(uVar2, 0xfffffff0, uVar5 | 0xb);\n                }\n                else {\n                    if (uVar1 < 0x19) {\n                        return 0;\n                    }\n                    if (0x1b < uVar1) {\n                        return 0;\n                    }\n                }\n            }\n            goto code_r0x00495155;\n        }\n        if (arg_ch == -2) {\n            return 0;\n        }\n        arg_8h_00 = -0x2000000;\n        if (arg_ch == -0x2000000) goto code_r0x0049519e;\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x1001, 0, arg_ch);\n        (*pcVar3)(var_8h, 0x1026, 0, arg_ch);\n    }\n    fcn.00497d04(uVar6, hWnd, 1);\ncode_r0x004951d8:\n    if ((*0x4d1390 != 0) && (uVar1 == 8)) {\n        return 0xffffffff;\n    }\n    return 1;\n}\n",
        "token_count": 1184
    },
    "004951f6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004951f6(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint *hWnd;\n    uint uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar3 = fcn.0040c4db(arg_8h, &var_4h, &var_8h);\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    uVar5 = **(*0x4d1910 + var_4h * 4);\n    hWnd = **(*0x4d1924 + var_8h * 4);\n    uVar2 = *hWnd;\n    uVar1 = *(hWnd + 0x24);\n    fcn.0041b058();\n    if (uVar1 < 0x14) {\n        if (uVar1 == 0x13) {\n            uVar5 = 0x1024;\n        }\n        else {\n            if (uVar1 < 5) goto code_r0x004952bd;\n            if (uVar1 == 8) {\n                uVar5 = 0x409;\n            }\n            else {\n                if (uVar1 != 0x10) {\n                    if (uVar1 != 0x11) {\n                        return 0;\n                    }\n                    goto code_r0x004952d0;\n                }\n                uVar5 = 0x111e;\n            }\n        }\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar2, uVar5, 0, arg_ch);\n    }\n    else {\n        if (uVar1 == 0x14) {\ncode_r0x004952d0:\n            hWnd[0x13] = arg_ch;\n            (*_sym.imp.USER32.dll_InvalidateRect)(hWnd[0xd], 0, 1);\n            goto code_r0x004952e3;\n        }\n        if (uVar1 != 0x17) {\n            if (uVar1 == 0x18) {\n                uVar4 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar2, 0xfffffff0);\n                (*_sym.imp.USER32.dll_SetWindowLongW)(uVar2, 0xfffffff0, uVar4 | 0xb);\n            }\n            else {\n                if (uVar1 < 0x19) {\n                    return 0;\n                }\n                if (0x1b < uVar1) {\n                    return 0;\n                }\n            }\n        }\ncode_r0x004952bd:\n        hWnd[0x13] = arg_ch;\n        fcn.00497d04(uVar5, hWnd, 1);\n    }\ncode_r0x004952e3:\n    if ((*0x4d1390 == 0) || ((((uVar1 != 8 && (uVar1 != 4)) && (uVar1 != 0x1a)) && (uVar1 != 0x19)))) {\n        uVar5 = 1;\n    }\n    else {\n        uVar5 = 0xffffffff;\n    }\n    return uVar5;\n}\n",
        "token_count": 717
    },
    "00495352": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: hWnd\n// WARNING: Variable defined which should be unmapped: Msg\n\nuint __cdecl fcn.00495352(uint item, int16_t *lpString, int16_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    uint *hWnd_00;\n    int16_t *arg_8h;\n    char cVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_ESI;\n    int32_t iVar5;\n    int16_t aiStackY8464 [4096];\n    uint var_10ch;\n    uint var_108h;\n    int16_t *var_fch;\n    uint var_e4h;\n    int16_t *var_d8h;\n    uint var_c8h;\n    uint var_c0h;\n    uint lpmii;\n    uint var_ach;\n    uint32_t var_a8h;\n    int16_t *var_8ch;\n    uint var_88h;\n    uint lParam;\n    int16_t *var_74h;\n    uint var_60h;\n    int32_t wParam;\n    int32_t var_58h;\n    uint uStackY88;\n    uint uStackY84;\n    int16_t *var_4ch;\n    uint uStackY76;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint Msg;\n    uint hWnd;\n    \n    fcn.00441ef0();\n    iVar5 = 0;\n    var_10h = 0;\n    cVar2 = fcn.0040c4db(item, 0, 0);\n    arg_8h = lpString;\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    iVar3 = **(*0x4d1910 + unaff_ESI * 4);\n    hWnd_00 = **(*0x4d1924 + 0x1254e00);\n    uVar1 = *(hWnd_00 + 0x24);\n    uStackY88 = *hWnd_00;\n    if (uVar1 == 0) {\n        var_10h = 0x14e;\n    }\n    else if (uVar1 == 1) {\n        var_10h = 0x186;\n    }\n    else if ((((uVar1 < 2) || ((3 < uVar1 && (uVar1 != 0x15)))) && (arg_10h != NULL)) && (*arg_10h != 0)) {\n        return 0;\n    }\n    // switch table (29 cases) at 0x495882\n    switch(uVar1) {\n    case 0:\n    case 1:\n        if (lpString == NULL) {\n            return 0xffffffff;\n        }\n        iVar5 = (*_sym.imp.USER32.dll_SendMessageW)();\n        if (iVar5 != -1) {\n            (*_sym.imp.USER32.dll_SendMessageW)();\n            uStackY76 = 0x49545c;\n            fcn.00497d04(iVar3, hWnd_00, 1);\n            return 0;\n        }\n        if ((*lpString != *0x4d18c4) && (pcVar4 = _sym.imp.USER32.dll_SendMessageW,  *lpString != 0))\n        goto code_r0x00495495;\n        lpString = (*_sym.imp.USER32.dll_CharNextW)();\n        pcVar4 = _sym.imp.USER32.dll_SendMessageW;\n        do {\n            uStackY76 = 0x4954bc;\n            (*pcVar4)();\ncode_r0x00495495:\n            cVar2 = fcn.0049766b(&stack0xffffdef0, &fcn.00495352::lpString, 0x4d18c4);\n        } while (cVar2 != '\\0');\n        if (arg_10h != NULL) {\n            uStackY76 = 0x4954d2;\n            var_4ch = (*pcVar4)();\n            if (var_4ch != 0xffffffff) {\n                uStackY76 = 0;\n                uStackY84 = var_10h;\n                var_58h = 0x4954e3;\n                (*pcVar4)();\n            }\n        }\n        break;\n    case 2:\n    case 3:\n        if ((arg_10h == NULL) || (*arg_10h == 0)) {\n            (*_sym.imp.USER32.dll_SetWindowTextW)();\n            (*_sym.imp.USER32.dll_SendMessageW)();\n            *(iVar3 + 0x1c4) = 0xffffffff;\n            return 1;\n        }\n        goto code_r0x004954fd;\n    default:\n        if (lpString == NULL) {\n            return 0xffffffff;\n        }\n        iVar5 = (*_sym.imp.USER32.dll_SetWindowTextW)();\n        if (iVar5 == 0) {\n            return 0;\n        }\n        fcn.00497d04(iVar3, hWnd_00, 1);\n        break;\n    case 5:\n    case 0x1c:\n        fcn.0046ec37(1, 1);\n        goto code_r0x0049574b;\n    case 6:\n    case 7:\n    case 0x16:\n        return 0xffffffff;\n    case 8:\n        fcn.0042cef5(lpString);\n        fcn.00442010();\n        goto code_r0x004954fd;\n    case 0xb:\n        var_d8h = lpString;\n        var_e4h = 1;\n        iVar5 = (*_sym.imp.USER32.dll_SendMessageW)();\n        if (iVar5 == 0) {\n            return 0;\n        }\n        if (*(hWnd_00 + 0x93) != -1) {\n            (*_sym.imp.USER32.dll_InvalidateRect)();\n        }\n        break;\n    case 0xe:\n    case 0xf:\n        var_8ch = fcn.0041fd8b();\n        lpmii = 0x30;\n        var_ach = 0x10;\n        var_88h = 0x104;\n        iVar5 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)();\n        if ((iVar5 != 0) && ((var_a8h & 0x800) == 0)) {\n            var_8ch = lpString;\n            iVar5 = (*_sym.imp.USER32.dll_SetMenuItemInfoW)();\n            if (iVar5 != 0) {\n                (*_sym.imp.USER32.dll_DrawMenuBar)();\n                fcn.0041fd94();\n                return 1;\n            }\n        }\n        fcn.0041fd94();\n        return 0;\n    case 0x11:\n        var_108h = hWnd_00[4];\n        var_fch = lpString;\n        var_10ch = 1;\n        goto code_r0x0049574b;\n    case 0x12:\n        fcn.0042cef5(lpString);\n        fcn.00442010();\ncode_r0x004954fd:\n        (*_sym.imp.USER32.dll_SendMessageW)();\n        break;\n    case 0x13:\n        if (lpString == NULL) {\n            return 0xffffffff;\n        }\n        fcn.004222d0();\n        lpString = arg_8h;\n        while (cVar2 = fcn.0049766b(&stack0xffffdef0, &fcn.00495352::lpString, 0x4d18c4),  cVar2 != '\\0') {\n            var_74h = &stack0xffffdef0;\n            lParam = 4;\n            if ((aiStackY8464[0] != 0) && (iVar5 = (*_sym.imp.USER32.dll_SendMessageW)(),  iVar5 == 0)) {\n                return 0;\n            }\n        }\n        iVar5 = fcn.004248f3(arg_8h);\n        if ((iVar5 != 0) && (iVar5 = fcn.004248f3(arg_8h),  arg_8h[iVar5 + -1] != *0x4d18c4)) {\n            return 1;\n        }\n        var_74h = lpString;\n        goto code_r0x0049574b;\n    case 0x14:\n        if (lpString == NULL) {\n            return 0xffffffff;\n        }\n        fcn.004222d0();\n        var_c0h = item;\n        var_c8h = 1;\n        wParam = (*_sym.imp.USER32.dll_SendMessageW)();\n        lpString = arg_8h;\n        if (wParam == -1) {\n            return 0;\n        }\n        while (cVar2 = fcn.0049766b(&stack0xffffdef0, &fcn.00495352::lpString, 0x4d18c4),  cVar2 != '\\0') {\n            var_4ch = &stack0xffffdef0;\n            var_60h = 1;\n            var_58h = iVar5;\n            if ((aiStackY8464[0] != 0) && (iVar3 = (*_sym.imp.USER32.dll_SendMessageW)(),  iVar3 == 0)) {\n                return 0;\n            }\n            iVar5 = iVar5 + 1;\n        }\n        iVar3 = fcn.004248f3(arg_8h);\n        if ((iVar3 != 0) && (iVar3 = fcn.004248f3(arg_8h),  arg_8h[iVar3 + -1] != *0x4d18c4)) {\n            return 1;\n        }\n        var_4ch = lpString;\n        var_58h = iVar5;\ncode_r0x0049574b:\n        iVar5 = (*_sym.imp.USER32.dll_SendMessageW)();\n        if (iVar5 == 0) {\n            return 0;\n        }\n        break;\n    case 0x15:\n        fcn.0040b5c1(lpString);\n    }\n    return 1;\n}\n",
        "token_count": 2306
    },
    "004958d3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004958d3(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t hWnd;\n    char cVar1;\n    uint uVar2;\n    double in_stack_00000018;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_4h;\n    \n    fcn.0040b606(arg_10h);\n    cVar1 = fcn.0040c4db(arg_8h, &arg_10h, &var_4h);\n    if (cVar1 != '\\0') {\n        arg_8h_00 = **(*0x4d1910 + arg_10h * 4);\n        hWnd = **(*0x4d1924 + var_4h * 4);\n        if ((*(hWnd + 0x91) & 1) == 0) {\n            if (*0x4c81f0 == in_stack_00000018) {\n                arg_10h = *(arg_8h_00 + 0x7c);\n            }\n            else {\n                arg_10h = fcn.00442010();\n            }\n            if (arg_ch == -1) {\n                arg_ch = *(arg_8h_00 + 0x80);\n            }\n            if (arg_14h == -1) {\n                arg_14h = *(arg_8h_00 + 0x84);\n            }\n            if ((var_10h == 0) && (&var_14h != arg_8h_00 + 0x6c)) {\n                fcn.0040c1c3(arg_8h_00 + 0x6c);\n            }\n            uVar2 = 1;\n            fcn.00492c36(arg_8h_00, hWnd, &var_14h, arg_10h, arg_ch, arg_14h, arg_18h, 1);\n            goto code_r0x0049599f;\n        }\n    }\n    uVar2 = 0;\ncode_r0x0049599f:\n    fcn.0040b1ff();\n    return uVar2;\n}\n",
        "token_count": 509
    },
    "004959af": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004959af(uint32_t arg_8h, int32_t lpszFile, uint32_t arg_10h, uint arg_14h)\n\n{\n    int32_t *arg_8h_00;\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    ulong uVar7;\n    uint *arg_8h_01;\n    uint in_stack_ffffff2c;\n    uint in_stack_ffffff30;\n    uint var_a8h;\n    uint32_t var_a4h;\n    uint var_a0h;\n    int32_t var_8ch;\n    uint var_74h;\n    uint var_70h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    uint lParam;\n    uint var_48h;\n    int32_t lprcUpdate;\n    uint var_38h;\n    int32_t lpRect;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t phiconLarge;\n    uint32_t nIconIndex;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t phiconSmall;\n    \n    var_1ch = fcn.0040ce67();\n    cVar2 = fcn.0040c4db(arg_8h, &var_ch, &var_20h);\n    if (cVar2 == '\\0') goto code_r0x0049603c;\n    var_10h = **(*0x4d1910 + var_ch * 4);\n    arg_8h_00 = **(*0x4d1924 + var_20h * 4);\n    iVar3 = *arg_8h_00;\n    arg_8h = arg_8h & 0xffffff | *(arg_8h_00 + 0x24) << 0x18;\n    var_ch = iVar3;\n    uVar7 = fcn.0046e034();\n    nIconIndex = uVar7;\n    uVar6 = uVar7 >> 0x20 & 0xff;\n    if (uVar6 < 0x12) {\n        if (0xf < uVar6) {\n            iVar5 = (*_sym.imp.SHELL32.dll_ExtractIconExW)(lpszFile, nIconIndex, 0, &phiconSmall, 1);\n            if (iVar5 < 1) goto code_r0x0049603c;\n            if (arg_8h._3_1_ == '\\x10') {\n                lpszFile = *0x4d1934;\n                var_ch = var_20h;\n                var_20h = 3;\n            }\n            else {\n                iVar3 = arg_8h_00[0xd];\n                var_ch = fcn.0041adc4(iVar3);\n                lpszFile = var_20h;\n            }\n            iVar5 = *(**(*0x4d1924 + var_ch * 4) + 0x40);\n            if (iVar5 == 0) {\n                var_1ch = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 1, 1);\n                *(**(*0x4d1924 + var_ch * 4) + 0x40) = var_1ch;\n                (*_sym.imp.USER32.dll_SendMessageW)(iVar3, 0x1109, 0, var_1ch);\n                iVar5 = var_1ch;\n                if (var_1ch != 0) goto code_r0x00495c17;\n            }\n            else {\ncode_r0x00495c17:\n                var_ch = (*_sym.imp.COMCTL32.dll_ImageList_ReplaceIcon)(iVar5, 0xffffffff, phiconSmall);\n                if (arg_8h._3_1_ == '\\x10') {\n                    if ((arg_10h & 2) != 0) {\n                        *(var_10h + 0x1b4) = var_ch;\n                    }\n                    if ((arg_10h & 4) != 0) {\n                        *(var_10h + 0x1b8) = var_ch;\n                    }\n                }\n                for (; var_20h <= lpszFile; var_20h = var_20h + 1) {\n                    iVar5 = **(*0x4d1924 + var_20h * 4);\n                    if ((((iVar5 != 0) && (*(iVar5 + 4) == *(var_10h + 4))) && (*(iVar5 + 0x90) == '\\x11')) &&\n                       (*(iVar5 + 0x34) == iVar3)) {\n                        var_70h = *(iVar5 + 0x10);\n                        var_74h = 0x32;\n                        (*_sym.imp.USER32.dll_SendMessageW)(iVar3, 0x113e, 0, &var_74h);\n                        if ((arg_10h & 2) != 0) {\n                            var_58h = var_ch;\n                        }\n                        if ((arg_10h & 4) != 0) {\n                            var_5ch = var_ch;\n                        }\n                        (*_sym.imp.USER32.dll_SendMessageW)(iVar3, 0x113f, 0, &var_74h);\n                    }\n                }\n            }\n            (*_sym.imp.USER32.dll_GetClientRect)(iVar3, &lprcUpdate);\n            (*_sym.imp.USER32.dll_RedrawWindow)(iVar3, &lprcUpdate, 0, 0);\ncode_r0x00495ce2:\n            (*_sym.imp.USER32.dll_DestroyIcon)(phiconSmall);\ncode_r0x00496037:\n            uVar4 = 1;\n            goto code_r0x0049603e;\n        }\n        if (uVar6 == 6) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar3, &lpRect);\n            arg_8h = var_28h - lpRect;\n            arg_10h = var_24h - var_2ch;\n            iVar3 = fcn.00498461(arg_8h_00, lpszFile, &arg_8h, &arg_10h);\n            if (iVar3 != 0) {\n                uVar4 = 1;\n                fcn.00497d04(var_10h, arg_8h_00, 1);\n                goto code_r0x0049603e;\n            }\n        }\n        else {\n            if (uVar6 != 7) {\n                if ((uVar6 != 0xb) ||\n                   (iVar3 = (*_sym.imp.SHELL32.dll_ExtractIconExW)(lpszFile, nIconIndex, 0, &phiconSmall, 1),  iVar3 < 1\n                   )) goto code_r0x0049603c;\n                lpszFile = *(var_10h + 0x188);\n                arg_10h = fcn.0041adc4(lpszFile);\n                iVar3 = *(**(*0x4d1924 + arg_10h * 4) + 0x40);\n                iVar5 = lpszFile;\n                if (iVar3 == 0) {\n                    iVar3 = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 1, 1);\n                    iVar5 = lpszFile;\n                    *(**(*0x4d1924 + arg_10h * 4) + 0x40) = iVar3;\n                    (*_sym.imp.USER32.dll_SendMessageW)(lpszFile, 0x1303, 0, iVar3);\n                    if (iVar3 != 0) goto code_r0x00495acb;\n                }\n                else {\ncode_r0x00495acb:\n                    uVar4 = (*_sym.imp.COMCTL32.dll_ImageList_ReplaceIcon)(iVar3, *(arg_8h_00 + 0x22), phiconSmall);\n                    lParam = 2;\n                    var_38h = uVar4;\n                    (*_sym.imp.USER32.dll_SendMessageW)(iVar5, 0x133d, *(arg_8h_00 + 0x93), &lParam);\n                    *(arg_8h_00 + 0x22) = uVar4;\n                }\n                goto code_r0x00495ce2;\n            }\n            arg_8h_01 = &arg_14h;\n            uVar4 = 0;\n            fcn.004119e0(arg_8h_01);\n            cVar2 = fcn.0049822e(arg_8h_00, lpszFile, arg_8h_01, in_stack_ffffff2c, in_stack_ffffff30, uVar4);\n            if (cVar2 != '\\0') {\n                fcn.00497d04(var_10h, arg_8h_00, 0);\n                goto code_r0x00496037;\n            }\n        }\n    }\n    else if (0x12 < uVar6) {\n        if (uVar6 < 0x15) {\n            iVar5 = (*_sym.imp.SHELL32.dll_ExtractIconExW)(lpszFile, nIconIndex, &phiconLarge, &phiconSmall, 1);\n            if (((0 < iVar5) ||\n                ((*_sym.imp.SHELL32.dll_ExtractIconExW)(lpszFile, 0xffffffff, &phiconLarge, &phiconSmall, 1), \n                phiconLarge != 0)) || (phiconSmall != 0)) {\n                if (arg_8h._3_1_ == '\\x13') {\n                    var_10h = 0;\n                    uVar6 = (*_sym.imp.USER32.dll_SendMessageW)(iVar3, 0x1004, 0, 0);\n                    lpszFile = var_20h;\n                }\n                else {\n                    iVar3 = arg_8h_00[0xd];\n                    var_ch = iVar3;\n                    lpszFile = fcn.0041adc4(iVar3);\n                    lprcUpdate = var_20h;\n                    var_48h = 1;\n                    var_10h = (*_sym.imp.USER32.dll_SendMessageW)(iVar3, 0x1053, 0xffffffff, &var_48h);\n                    uVar6 = var_10h;\n                    if (var_10h == 0xffffffff) goto code_r0x0049603c;\n                }\n                nIconIndex = uVar6;\n                iVar5 = **(*0x4d1924 + lpszFile * 4);\n                var_1ch = *(iVar5 + 0x38);\n                arg_10h = *(iVar5 + 0x3c);\n                if (var_1ch == 0) {\n                    var_1ch = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 0, 1);\n                    *(**(*0x4d1924 + lpszFile * 4) + 0x38) = var_1ch;\n                    (*_sym.imp.USER32.dll_SendMessageW)(iVar3, 0x1003, 1, var_1ch);\n                }\n                if (arg_10h == 0) {\n                    arg_10h = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x20, 0x20, 0x21, 0, 1);\n                    *(**(*0x4d1924 + lpszFile * 4) + 0x3c) = arg_10h;\n                    (*_sym.imp.USER32.dll_SendMessageW)(iVar3, 0x1003, 0, arg_10h);\n                }\n                pcVar1 = _sym.imp.COMCTL32.dll_ImageList_ReplaceIcon;\n                if ((var_1ch != 0) && (arg_10h != 0)) {\n                    lpszFile = (*_sym.imp.COMCTL32.dll_ImageList_ReplaceIcon)(var_1ch, 0xffffffff, phiconSmall);\n                    (*pcVar1)(arg_10h, 0xffffffff, phiconLarge);\n                    iVar3 = var_ch;\n                    if (arg_8h._3_1_ == '\\x13') {\n                        arg_8h_00[0x27] = lpszFile;\n                    }\n                    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n                    arg_10h = var_10h;\n                    if (var_10h <= nIconIndex) {\n                        do {\n                            var_a8h = 2;\n                            var_a0h = 0;\n                            var_a4h = arg_10h;\n                            (*pcVar1)(iVar3, 0x104b, 0, &var_a8h);\n                            if ((var_8ch == -2) || (arg_8h._3_1_ == '\\x14')) {\n                                var_8ch = lpszFile;\n                                (*pcVar1)(iVar3, 0x104c, 0, &var_a8h);\n                            }\n                            arg_10h = arg_10h + 1;\n                        } while (arg_10h <= nIconIndex);\n                    }\n                    (*pcVar1)(iVar3, 0x1015, var_10h, nIconIndex);\n                }\n                pcVar1 = _sym.imp.USER32.dll_DestroyIcon;\n                (*_sym.imp.USER32.dll_DestroyIcon)(phiconSmall);\n                (*pcVar1)(phiconLarge);\n                goto code_r0x00496037;\n            }\n        }\n        else if (uVar6 - 0x18 < 3) {\n            cVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(iVar3, 0xfffffff0);\n            if (cVar2 < '\\0') {\n                lpszFile = (*_sym.imp.USER32.dll_LoadImageW)(0, lpszFile, 0, 0, 0, 0x2010);\n                if (lpszFile == 0) goto code_r0x0049603c;\n                (*_sym.imp.USER32.dll_SendMessageW)(iVar3, 0xf7, 0, lpszFile);\n                if (arg_8h_00[0x19] != 0) {\n                    (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h_00[0x19]);\n                }\n                if (arg_8h_00[0x1a] != 0) {\n                    (*_sym.imp.USER32.dll_DestroyIcon)(arg_8h_00[0x1a]);\n                }\n                arg_8h_00[0x19] = lpszFile;\n                arg_8h_00[0x1a] = 0;\n            }\n            else {\n                if ((var_1ch == -1) && (arg_8h._3_1_ == '\\x18')) {\n                    lpszFile = (*_sym.imp.USER32.dll_LoadImageW)(0, lpszFile, 1, 0, 0, 0x2010);\n                    if (lpszFile == 0) goto code_r0x00496037;\n                    (*_sym.imp.USER32.dll_SendMessageW)(iVar3, 0xf7, 1, lpszFile);\n                    if (arg_8h_00[0x19] != 0) {\n                        (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h_00[0x19]);\n                    }\n                    if (arg_8h_00[0x1a] != 0) {\n                        (*_sym.imp.USER32.dll_DestroyIcon)(arg_8h_00[0x1a]);\n                    }\n                    arg_8h_00[0x19] = 0;\n                }\n                else {\n                    iVar5 = (*_sym.imp.SHELL32.dll_ExtractIconExW)(lpszFile, nIconIndex, &phiconLarge, &phiconSmall, 1);\n                    pcVar1 = _sym.imp.USER32.dll_DestroyIcon;\n                    if (iVar5 < 1) goto code_r0x0049603c;\n                    lpszFile = phiconSmall;\n                    if (arg_10h != 0) {\n                        lpszFile = phiconLarge;\n                        phiconLarge = phiconSmall;\n                    }\n                    (*_sym.imp.USER32.dll_DestroyIcon)(phiconLarge);\n                    (*_sym.imp.USER32.dll_SendMessageW)(iVar3, 0xf7, 1, lpszFile);\n                    if (arg_8h_00[0x19] != 0) {\n                        (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h_00[0x19]);\n                    }\n                    if (arg_8h_00[0x1a] != 0) {\n                        (*pcVar1)(arg_8h_00[0x1a]);\n                    }\n                    arg_8h_00[0x19] = 0;\n                }\n                arg_8h_00[0x1a] = lpszFile;\n            }\n            goto code_r0x00496037;\n        }\n    }\ncode_r0x0049603c:\n    uVar4 = 0;\ncode_r0x0049603e:\n    fcn.0040e8a0();\n    return uVar4;\n}\n",
        "token_count": 3874
    },
    "0049604f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0049604f(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint var_8h;\n    int32_t var_4h;\n    \n    cVar3 = fcn.0040c4db(arg_8h, &var_8h, &var_4h);\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    puVar1 = **(*0x4d1924 + var_4h * 4);\n    uVar2 = *puVar1;\n    cVar3 = *(puVar1 + 0x24);\n    if (cVar3 == '\\x01') {\n        if (arg_ch < 1) {\n            return 1;\n        }\n        uVar4 = 0;\n        uVar5 = 0x194;\n        arg_10h = arg_ch;\n    }\n    else {\n        if (cVar3 != '\\x02') {\n            if (cVar3 != '\\x03') {\n                if (cVar3 == '\\x12') {\n                    uVar4 = arg_10h & 0xffff | arg_ch << 0x10;\n                    arg_10h = 1;\n                    uVar5 = 0x406;\n                }\n                else {\n                    if (cVar3 != '\\x16') {\n                        return 0;\n                    }\n                    uVar5 = 0x46f;\n                    uVar4 = arg_ch;\n                }\n                goto code_r0x004960f2;\n            }\n            (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0xb1, 0, 0xffffffff);\n        }\n        if (arg_ch < 1) {\n            return 1;\n        }\n        uVar4 = 0;\n        uVar5 = 0xc5;\n        arg_10h = arg_ch;\n    }\ncode_r0x004960f2:\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar2, uVar5, arg_10h, uVar4);\n    return 1;\n}\n",
        "token_count": 493
    },
    "004962d3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004962d3(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar2 = fcn.0040c4db(arg_8h, &var_8h, &var_4h);\n    if (((cVar2 != '\\0') && (iVar1 = **(*0x4d1924 + var_4h * 4),  *(iVar1 + 0x86) != 0)) && (arg_ch < 0x400)) {\n        iVar3 = arg_ch;\n        if (arg_ch < 0) {\n            iVar3 = 0;\n        }\n        if ((0 < arg_ch) && (iVar3 < 0x400)) {\n            *(iVar1 + 0x86) = iVar3;\n        }\n        iVar1 = **(*0x4d1910 + var_8h * 4);\n        if (*(iVar1 + 0x3a) == '\\0') {\n            fcn.004076aa(iVar1, **(*0x4d1924 + var_4h * 4), 0);\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 295
    },
    "0049635b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0049635b(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    int32_t iVar10;\n    uint8_t uVar11;\n    uint *unaff_ESI;\n    int32_t *hWnd;\n    uchar *puVar12;\n    uchar *puVar13;\n    int32_t iVar14;\n    uint *puVar15;\n    uint *puVar16;\n    uint uVar17;\n    uint uVar18;\n    int32_t iVar19;\n    uint *in_stack_ffffff2c;\n    uint32_t uVar20;\n    uchar *arg_ch_00;\n    uint uVar21;\n    uint *arg_8h_00;\n    int32_t iStack184;\n    int32_t *piStack180;\n    uint32_t uStack176;\n    int32_t *piStack172;\n    int32_t iStack168;\n    uint32_t uStack164;\n    int32_t iStack160;\n    uchar auStack144 [8];\n    uint uStack136;\n    uint32_t uStack132;\n    uint uStack128;\n    uint uStack68;\n    int32_t iStack64;\n    uint32_t uStack60;\n    uint uStack56;\n    \n    puVar13 = &stack0xffffff5c;\n    arg_ch_00 = &stack0xffffff50;\n    uVar20 = 0x49637b;\n    cVar3 = fcn.0040c4db(arg_8h, arg_ch_00, puVar13);\n    if (cVar3 == '\\0') {\n        return NULL;\n    }\n    puVar12 = NULL;\n    uVar21 = 0;\n    piStack180 = **(*0x4d1910 + unaff_ESI * 4);\n    hWnd = **(*0x4d1924 + uStack176 * 4);\n    iStack184 = *hWnd;\n    uVar8 = puVar13 & 0xffffff | *(hWnd + 0x24) << 0x18;\n    if (arg_ch < 0) {\n        arg_ch = 0;\n    }\n    uStack164 = arg_ch & 0x100;\n    arg_8h_00 = unaff_ESI;\n    piStack172 = hWnd;\n    if (uStack164 != 0) {\n        uVar20 = uStack176;\n        fcn.0041a654(unaff_ESI, uStack176);\n        arg_ch_00 = 0x1;\n        in_stack_ffffff2c = unaff_ESI;\n    }\n    if ((arg_ch & 0x800) != 0) {\n        (*_sym.imp.USER32.dll_SetWindowPos)(uVar21, arg_8h >> 0x18 == '\\x17', 0, 0, 0, 0, 0x103);\n        arg_ch_00 = 0x1;\n    }\n    pcVar2 = _sym.imp.USER32.dll_MoveWindow;\n    uVar4 = arg_8h >> 0x18;\n    if (uVar4 < 0x15) {\n        if (uVar4 == 0x14) {\n            iVar6 = hWnd[0xd];\n            iStack160 = iStack184;\n            iStack168 = 1;\n            uVar20 = (*_sym.imp.USER32.dll_SendMessageW)(iVar6, 0x1053, 0xffffffff, &stack0xffffff58);\n            if (uVar20 == 0xffffffff) {\n                return NULL;\n            }\n            uStack128 = 0;\n            uStack136 = 8;\n            uStack132 = uVar20;\n            uVar8 = (*_sym.imp.USER32.dll_GetWindowLongW)(iVar6, 0xffffffec);\n            if ((arg_ch & 5) != 0 && (uVar8 & 4) != 0) {\n                uStack128 = 0xf000;\n                uStack132 = (-(arg_ch != 1) & 0xfffff000) + 0x2000;\n                puVar12 = (*_sym.imp.USER32.dll_SendMessageW)(iVar6, 0x104c, 0, &stack0xffffff70);\n            }\n            if ((arg_ch & 0x2100) != 0) {\n                if (uVar20 != 0) {\n                    uStack132 = 0xffffffff;\n                }\n                uStack128 = 3;\n                uStack132 = ~-((arg_ch & 0x2000) != 0) & uStack132;\n                puVar13 = (*_sym.imp.USER32.dll_SendMessageW)(iVar6, 0x102b, arg_8h, &stack0xffffff70);\n                return puVar13;\n            }\n            return puVar12;\n        }\n        if (uVar4 == 9) {\n            if ((arg_ch & 7) == 0) {\n                uVar18 = 0;\n                uVar17 = 0;\n                uVar5 = 0x466;\n            }\n            else {\n                if ((arg_ch & 7) != 1) {\ncode_r0x004967a7:\n                    (*_sym.imp.USER32.dll_SendMessageW)();\n                    goto code_r0x00496783;\n                }\n                uVar18 = 0xffff0000;\n                uVar17 = 0xffffffff;\n                uVar5 = 0x465;\n            }\n            iVar6 = (*_sym.imp.USER32.dll_SendMessageW)(uVar21, uVar5, uVar17, uVar18);\n            if (iVar6 == 0) goto code_r0x0049692a;\n        }\n        else if (uVar4 == 0xb) {\n            if ((arg_ch & 0x10) == 0) goto code_r0x0049692a;\n            uVar4 = *(hWnd + 0x93);\n            if (*(arg_8h_00 + 0x66) != '\\0') {\n                arg_8h_00[100] = arg_8h_00[0x65];\n            }\n            fcn.004980cd(arg_8h_00, uVar4);\n            *(uVar8 + 0x194) = *(hWnd + 0x93);\n        }\n        else {\n            if (uVar4 == 0xc) {\n                return NULL;\n            }\n            if (uVar4 < 0xe) goto code_r0x0049692a;\n            if (0xf < uVar4) {\n                if (uVar4 != 0x11) goto code_r0x0049692a;\n                iStack64 = hWnd[4];\n                uStack68 = 8;\n                uStack56 = 0xf010;\n                uStack60 = (-((arg_ch & 1) != 0) & 0x1000) + 0x1000;\n                if ((arg_ch & 0x200) != 0) {\n                    uStack60 = uStack60 | 0x10;\n                }\n                (*_sym.imp.USER32.dll_SendMessageW)(hWnd[0xd], 0x113f, 0, &stack0xffffffbc);\n                if ((arg_ch & 0x400) != 0) {\n                    (*_sym.imp.USER32.dll_SendMessageW)(hWnd[0xd], 0x1102, 2, hWnd[4]);\n                }\n                if (piStack172 != NULL) {\n                    uVar5 = fcn.0041adc4(hWnd[0xd]);\n                    fcn.0041a654(arg_ch_00, uVar5);\n                    goto code_r0x004967a7;\n                }\n                goto code_r0x00496783;\n            }\n            puVar13 = &stack0xffffff58;\n            iStack168 = 0x30;\n            puVar16 = NULL;\n            uStack164 = 1;\n            iVar6 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(hWnd[3], iStack184, 0, puVar13);\n            if (iVar6 == 0) {\n                return NULL;\n            }\n            if ((arg_ch & 0x20) != 0) {\n                return NULL;\n            }\n            piVar7 = -((arg_ch & 0x80) != 0) & 3;\n            if ((arg_ch & 1) != 0) {\n                piVar7 = piVar7 | 8;\n            }\n            if (arg_8h_00 != NULL) {\n                piVar7 = piVar7 | 0x80;\n            }\n            if (((piStack172 & 8) != 0) && ((arg_ch & 4) == 0)) {\n                piVar7 = piVar7 | 8;\n            }\n            piStack172 = piVar7;\n            (*_sym.imp.USER32.dll_SetMenuItemInfoW)(hWnd[3], arg_ch_00, 0, &stack0xffffff48);\n            if ((arg_ch & 0x200) == 0) {\n                iVar6 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(hWnd[3], puVar13, 0, &stack0xffffff38);\n                if ((iVar6 != 0) && ((arg_8h_00 & 0x1000) != 0)) {\n                    puVar13 = 0xffffffff;\n                    goto code_r0x004965c8;\n                }\n            }\n            else {\ncode_r0x004965c8:\n                (*_sym.imp.USER32.dll_SetMenuDefaultItem)(hWnd[3], puVar13, 0);\n            }\n            (*_sym.imp.USER32.dll_DrawMenuBar)(*puVar16);\n        }\n    }\n    else {\n        if (uVar4 == 0x16) {\n            piStack172 = 0x3;\n            if (2 < *0x4d1934) {\n                do {\n                    piVar7 = **(*0x4d1924 + piStack172 * 4);\n                    if ((((piVar7 != NULL) && (piVar7[1] == arg_8h_00[1])) && (*(piVar7 + 0x24) == '\\x03')) &&\n                       (*piVar7 == hWnd[0xd])) {\n                        if ((1U - ((*(hWnd + 0x92) & arg_ch) != 0) & *(hWnd + 0x92) >> 5 & 1) != 0) {\n                            iVar19 = 0;\n                            puVar16 = **(*0x4d1924 + piStack172 * 4);\n                            iVar6 = *(puVar16 + 0x8e);\n                            puVar9 = *(puVar16 + 0x8a);\n                            iVar10 = *(puVar16 + 0x22);\n                            puVar15 = *puVar16;\n                            (*_sym.imp.USER32.dll_MoveWindow)(puVar15, iVar10, puVar9, *(puVar16 + 0x23), iVar6, 0);\n                            iVar14 = 0;\n                            (*_sym.imp.USER32.dll_SendMessageW)(iVar19, 0x469, *(arg_8h + 0x34), 0);\n                            *(iVar6 + 0x92) = *(iVar6 + 0x92) & 0xdf | 0x10;\n                            puVar16 = *puVar9;\n                            (*_sym.imp.USER32.dll_GetWindowRect)(puVar16, &stack0xffffff30);\n                            (*pcVar2)(*puVar15, iVar19, in_stack_ffffff2c, (uVar20 - iVar19) + 1, \n                                      (arg_8h - in_stack_ffffff2c) + 1, 1);\n                            (*pcVar2)(*puVar16, iVar14, puVar15, iVar10 - iVar14, puVar9 - puVar15, 1);\n                            hWnd = piStack180;\n                        }\n                        break;\n                    }\n                    piStack172 = piStack172 + 1;\n                } while (piStack172 <= *0x4d1934);\n            }\n            goto code_r0x0049692a;\n        }\n        if (uVar4 == 0x18) {\n            if ((arg_ch & 0x200) == 0) goto code_r0x0049692a;\n            (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h_00, 0x401, iStack184, 0);\n            iVar6 = (*_sym.imp.USER32.dll_GetFocus)();\n            if (iVar6 == *hWnd) {\n                fcn.0041a654(uVar8, iStack184);\n            }\n        }\n        else {\n            if (uVar4 == 0x19) {\n                if ((arg_ch & 7) == 0) goto code_r0x0049692a;\n                goto code_r0x004967a7;\n            }\n            if ((uVar4 != 0x1a) || ((arg_ch & 7) == 0)) goto code_r0x0049692a;\n            fcn.00492d30(iStack184, arg_ch & 3);\n        }\n    }\ncode_r0x00496783:\n    arg_ch_00 = 0x1;\ncode_r0x0049692a:\n    if ((arg_ch & 0x10f8) != 0) {\n        arg_ch_00 = 0x1;\n        uVar11 = 0;\n        uVar4 = arg_ch & 0x10f8;\n        if (uVar4 < '\\0') {\n            uVar11 = 0xc0;\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar21, 0);\n        }\n        if ((arg_ch & 0x40) != 0) {\n            uVar11 = 0xc0;\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar21, 1);\n        }\n        if ((arg_ch & 0x20) != 0) {\n            uVar11 = uVar11 + 0x30;\n        }\n        piStack180 = arg_ch & 0x10;\n        if (piStack180 != NULL) {\n            uVar11 = uVar11 + 0x30;\n        }\n        if ((arg_ch & 8) != 0) {\n            uVar11 = uVar11 + 8;\n        }\n        if ((arg_ch & 0x1000) != 0) {\n            uVar11 = uVar11 + 8;\n        }\n        uVar1 = *(hWnd + 0x93);\n        *(hWnd + 0x92) = ~uVar11 & *(hWnd + 0x92) | uVar4;\n        uStack176 = uStack176 & 0xffffff | uVar1 << 0x18;\n        if (((uVar1 == 0xff) || (uVar1 == arg_8h_00[100])) || (arg_8h_00[100] == 0xffffffff)) {\n            if ((arg_ch & 0x20) != 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(uVar21, 0);\n            }\n            cVar3 = uVar21 >> 0x18;\n            if (((iStack168 != 0) && ((*_sym.imp.USER32.dll_ShowWindow)(),  cVar3 == '\\x1a')) &&\n               ((*(hWnd + 0x92) & 0x40) != 0)) {\n                (*_sym.imp.USER32.dll_EnableWindow)();\n            }\n            fcn.00497d04(uStack176, hWnd, 1);\n        }\n    }\n    return arg_ch_00;\n}\n",
        "token_count": 3487
    },
    "00496ba7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00496ba7(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint32_t arg_18h, uint32_t arg_1ch)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t unaff_EDI;\n    uchar *puStack152;\n    char16_t *pcStack148;\n    char16_t *pcStack144;\n    uint32_t uStack140;\n    uint32_t uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uchar *puStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uchar *arg_ch_00;\n    uchar *puVar8;\n    uchar auStack80 [4];\n    uchar auStack76 [4];\n    uchar auStack72 [4];\n    uint uStack68;\n    uint32_t uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    puVar8 = &stack0xffffffb0;\n    arg_ch_00 = &stack0xffffffb4;\n    cVar3 = fcn.0040c4db(arg_8h, arg_ch_00, &stack0xffffffb0);\n    if (cVar3 != '\\0') {\n        puVar1 = **(*0x4d1924 + puVar8 * 4);\n        cVar3 = *(puVar1 + 0x24);\n        if ((((((cVar3 != '\\x0e') && (cVar3 != '\\x0f')) && (cVar3 != '\\f')) && ((cVar3 != '\\t' && (cVar3 != '\\x14'))))\n            && ((cVar3 != '\\x11' && ((cVar3 != '\\x1d' && (cVar3 != '\\x1b')))))) && (cVar3 != '\\x15')) {\n            uStack64 = (arg_1ch & 0xff) * 2 | 0x11;\n            uStack52 = 0;\n            uStack48 = 0;\n            uStack44 = 0;\n            uStack40 = 0;\n            uStack28 = 0;\n            uStack24 = 0;\n            uStack68 = 0x30;\n            puStack60 = *puVar1;\n            uStack36 = *0x4d1904;\n            uStack56 = *puVar1;\n            uStack32 = arg_ch;\n            if (*(puVar1 + 0x24) == '\\v') {\n                puStack108 = 0x496c9d;\n                iVar4 = fcn.0041adc4(*(**(*0x4d1910 + unaff_EDI * 4) + 0x188));\n                iVar6 = **(*0x4d1924 + iVar4 * 4);\n                if ((*(iVar6 + 0x50) != 0) && (*(iVar6 + 0x58) != 0)) {\n                    puStack108 = *(iVar6 + 0x50);\n                    uStack112 = 0x496cbf;\n                    (*_sym.imp.USER32.dll_DestroyWindow)();\n                    *(**(*0x4d1924 + iVar4 * 4) + 0x50) = 0;\n                    puStack108 = 0x496ce4;\n                    fcn.004084e7(0x49d0d0);\n                }\n                puVar5 = puVar1[0x14];\n                uStack64 = *(puVar8 + 0x188);\n                puStack60 = arg_ch_00;\n                if (puVar5 == NULL) {\n                    uStack112 = *0x4d1904;\n                    puStack120 = *(puVar8 + 0x188);\n                    uStack124 = 0x80000000;\n                    uStack128 = 0x80000000;\n                    uStack132 = 0x80000000;\n                    uStack136 = 0x80000000;\n                    uStack140 = (arg_18h & 0xff) << 6 | 0x80000013;\n                    pcStack148 = L\"tooltips_class32\";\n                    puStack152 = 0x8;\n                    pcStack144 = puVar5;\n                    puStack116 = puVar5;\n                    puStack108 = puVar5;\n                    puVar5 = (*_sym.imp.USER32.dll_CreateWindowExW)();\n                    if (puVar5 == NULL) {\n                        return 0;\n                    }\n                    puVar1[0x14] = puVar5;\n                }\n                else {\n                    puStack108 = &stack0xffffffb8;\n                    uStack112 = 0;\n                    puStack116 = 0x433;\n                    uStack124 = 0x496d55;\n                    puStack120 = puVar5;\n                    (*_sym.imp.USER32.dll_SendMessageW)();\n                }\n                (*_sym.imp.USER32.dll_SendMessageW)(puVar5, 0x432, 0, &stack0xffffff88);\n                fcn.004084e7(arg_ch);\n            }\n            else {\n                if (puVar1[0x14] != 0) {\n                    puStack108 = 0x496d89;\n                    (*_sym.imp.USER32.dll_DestroyWindow)();\n                }\n                puStack108 = *0x4d1904;\n                uStack112 = 0;\n                puStack116 = *puVar1;\n                puStack120 = 0x80000000;\n                uStack124 = 0x80000000;\n                uStack128 = 0x80000000;\n                uStack132 = 0x80000000;\n                uStack136 = (arg_18h & 0xff) << 6 | 0x80000013;\n                uStack140 = 0;\n                pcStack144 = L\"tooltips_class32\";\n                pcStack148 = 0x8;\n                puStack152 = 0x496db8;\n                iVar6 = (*_sym.imp.USER32.dll_CreateWindowExW)();\n                if (iVar6 == 0) {\n                    return 0;\n                }\n                puStack152 = &stack0xffffff8c;\n                (*_sym.imp.USER32.dll_SendMessageW)(iVar6, 0x432, 0);\n                puVar1[0x14] = iVar6;\n                fcn.004084e7(arg_ch);\n                uVar7 = (*_sym.imp.USER32.dll_GetDesktopWindow)(&stack0xffffff68);\n                (*_sym.imp.USER32.dll_GetWindowRect)(uVar7);\n                pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n                (*_sym.imp.USER32.dll_SendMessageW)(iVar6, 0x418, 0, puStack152);\n                if (arg_10h != 0) {\n                    (*pcVar2)(iVar6, 0x421, arg_14h, arg_10h);\n                }\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1622
    },
    "00496e2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00496e2c(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    \n    if (*(arg_ch + 0x1cc) != 0) {\n        fcn.00465363(arg_8h);\n        iVar1 = fcn.00465310(arg_ch, 0x4d1920, *0x4d1934);\n        if (iVar1 == 0) {\n            iVar1 = *(arg_ch + 0x1cc);\n            if (iVar1 != 0) {\n                fcn.00464fca();\n                fcn.0041fd4d(iVar1);\n            }\n            *(arg_ch + 0x1cc) = 0;\n        }\n        *arg_8h = 0;\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "00496e88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00496e88(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **var_4h;\n    \n    var_4h = *0x4d1938;\n    while( true ) {\n        if (var_4h == NULL) {\n            return 0;\n        }\n        if (**var_4h == arg_8h) break;\n        var_4h = var_4h[1];\n    }\n    piVar1 = *var_4h + 1;\n    *piVar1 = *piVar1 + -1;\n    if ((*var_4h)[1] == 0) {\n        (*_sym.imp.GDI32.dll_DeleteObject)((*var_4h)[2]);\n        fcn.00498624(&var_4h);\n    }\n    return 1;\n}\n",
        "token_count": 192
    },
    "00496fa4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00496fa4(int32_t arg_8h, int32_t *hWnd)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uchar *puVar8;\n    uchar *puVar9;\n    uint32_t uStack208;\n    int32_t iStack204;\n    int32_t *piStack200;\n    uint32_t uStack196;\n    uchar *puStack192;\n    int32_t iStack188;\n    uint uStack184;\n    uint uStack180;\n    int32_t iStack176;\n    int32_t iStack172;\n    int32_t iStack168;\n    int32_t *piStack164;\n    int32_t iStack160;\n    uchar *puStack156;\n    uint uStack152;\n    uint uStack148;\n    int32_t iStack144;\n    int32_t iStack140;\n    uchar *puStack136;\n    int32_t iStack132;\n    uint uStack128;\n    int32_t iStack124;\n    uint *puStack120;\n    int32_t iStack116;\n    uint uStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    int32_t iStack100;\n    int32_t iStack96;\n    uint uStack92;\n    int32_t iStack88;\n    uint *puStack84;\n    int32_t iStack60;\n    uint uStack56;\n    uint32_t uStack52;\n    uint uStack48;\n    uint32_t uStack44;\n    uint32_t uStack36;\n    \n    if (*0x4d1390 == 0) {\n        uStack36 = *(arg_8h + 0x10);\n        iStack168 = *(arg_8h + 0x18);\n        uStack52 = uStack36 & 0x10;\n        uStack44 = uStack36 & 1;\n        uStack36 = uStack36 & 6;\n        iStack60 = iStack168;\n        if (uStack36 == 0) {\n            if (hWnd[0x13] == -1) {\n                (*_sym.imp.USER32.dll_GetSysColor)();\n            }\n            puStack84 = 0x497023;\n            iVar3 = iStack168;\n            uStack52 = (*_sym.imp.GDI32.dll_SetTextColor)();\n        }\n        else {\n            iVar3 = (*_sym.imp.USER32.dll_GetSysColor)();\n            iStack88 = 0x497004;\n            puStack84 = iStack168;\n            uStack52 = (*_sym.imp.GDI32.dll_SetTextColor)();\n        }\n        if (hWnd[0x12] == -1) {\n            iStack88 = 0xf;\n            uStack92 = 0x497035;\n            (*_sym.imp.USER32.dll_GetSysColorBrush)();\n            uStack92 = 0xf;\n            iStack96 = 0x497041;\n            iStack96 = (*_sym.imp.USER32.dll_GetSysColor)();\n        }\n        else {\n            iStack88 = hWnd[0x12];\n            uStack92 = 0x49704c;\n            (*_sym.imp.GDI32.dll_CreateSolidBrush)();\n            iStack96 = hWnd[0x12];\n        }\n        iStack104 = 0x49705b;\n        iStack100 = iStack168;\n        uStack56 = (*_sym.imp.GDI32.dll_SetBkColor)();\n        iStack104 = puStack84;\n        uStack112 = 0x49706a;\n        iStack108 = iStack168;\n        (*_sym.imp.GDI32.dll_SelectObject)();\n        puStack84 = arg_8h + 0x1c;\n        iStack60 = *puStack84;\n        uStack56 = *(arg_8h + 0x20);\n        uStack52 = *(arg_8h + 0x24);\n        uStack48 = *(arg_8h + 0x28);\n        if (iVar3 == 0) {\n            if (iStack88 != 0) {\n                uStack112 = 0xffffffff;\n                iStack116 = 0xffffffff;\n                puStack120 = &stack0xffffffc4;\n                iStack124 = 0x4970d2;\n                (*_sym.imp.USER32.dll_InflateRect)();\n            }\n            uStack112 = 0x10;\n            iStack116 = 4;\n            puStack120 = &stack0xffffffc4;\n            uStack128 = 0x4970e2;\n            iStack124 = iStack168;\n            (*_sym.imp.USER32.dll_DrawFrameControl)();\n        }\n        else {\n            uStack112 = 0xffffffff;\n            iStack116 = -1;\n            puStack120 = &stack0xffffffc4;\n            iStack124 = 0x497095;\n            (*_sym.imp.USER32.dll_InflateRect)();\n            iStack124 = 0x10;\n            uStack128 = 0x49709d;\n            uStack128 = (*_sym.imp.USER32.dll_GetSysColor)();\n            iStack132 = 0x4970a4;\n            iVar3 = (*_sym.imp.GDI32.dll_CreateSolidBrush)();\n            puStack136 = &stack0xffffffb0;\n            iStack144 = 0x4970b3;\n            iStack140 = iStack168;\n            iStack132 = iVar3;\n            (*_sym.imp.USER32.dll_FrameRect)();\n            uStack148 = 0x4970ba;\n            iStack144 = iVar3;\n            (*_sym.imp.GDI32.dll_DeleteObject)();\n        }\n        iVar3 = iStack116;\n        puStack156 = &stack0xffffffa0;\n        iStack96 = *puStack120;\n        uStack92 = puStack120[1];\n        iStack88 = puStack120[2];\n        puStack84 = puStack120[3];\n        if (iStack116 == 0) {\n            if (iStack124 == 0) {\n                uStack148 = 0xfffffffe;\n                uStack152 = 0xfffffffe;\n            }\n            else {\n                uStack148 = 0xfffffffd;\n                uStack152 = 0xfffffffd;\n            }\n            iStack160 = 0x49711f;\n            (*_sym.imp.USER32.dll_InflateRect)();\n            iStack108 = iStack108 + -1;\n            iStack104 = iStack104 + -1;\n        }\n        else {\n            uStack148 = 0xfffffffe;\n            uStack152 = 0xfffffffe;\n            iStack160 = 0x497105;\n            (*_sym.imp.USER32.dll_InflateRect)();\n        }\n        iStack160 = iStack140;\n        piStack164 = &stack0xffffff94;\n        iStack172 = 0x497137;\n        (*_sym.imp.USER32.dll_FillRect)();\n        if ((iVar3 != 0) || (iStack132 != 0)) {\n            puStack120 = puStack120 + 2;\n            iStack116 = iStack116 + 2;\n        }\n        iStack172 = -0x10;\n        iStack176 = *hWnd;\n        uStack180 = 0x497159;\n        uVar4 = (*_sym.imp.USER32.dll_GetWindowLongW)();\n        uVar6 = ~(uVar4 >> 8) & 0x20;\n        uVar7 = uVar6 | 0x104;\n        if ((uVar4 & 0x300) == 0x300) {\n            uVar7 = uVar6 | 0x105;\n        }\n        if ((uVar4 & 0x200) == 0) {\n            if ((uVar4 & 0x100) == 0) {\n                uVar7 = uVar7 | 1;\n            }\n        }\n        else {\n            uVar7 = uVar7 | 2;\n        }\n        uStack180 = 0;\n        uStack184 = 0;\n        iStack188 = 0xe;\n        puStack192 = *hWnd;\n        uStack196 = 0x4971a1;\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageW)();\n        iVar1 = (iVar3 + 1U) * 2;\n        uStack196 = -(iVar1 >> 0x20 != 0) | iVar1;\n        piStack200 = 0x4971ba;\n        piStack200 = fcn.0041fd8b();\n        iStack204 = *hWnd;\n        uStack208 = 0x4971c9;\n        uStack196 = iVar3 + 1U;\n        piStack164 = piStack200;\n        (*_sym.imp.USER32.dll_GetWindowTextW)();\n        puVar8 = &stack0xffffff64;\n        uVar2 = 0xffffffff;\n        puVar9 = puStack192;\n        uStack208 = uVar7;\n        (*_sym.imp.USER32.dll_DrawTextW)(puStack192, iStack176, 0xffffffff, puVar8);\n        if (iStack188 != 0) {\n            iStack168 = piStack200[2];\n            piStack164 = piStack200[3];\n            iStack176 = *piStack200 + 1;\n            iStack172 = piStack200[1] + 1;\n            uVar5 = (*_sym.imp.USER32.dll_GetSysColor)(0x11);\n            puVar8 = puVar9;\n            (*_sym.imp.GDI32.dll_SetTextColor)(uVar2, uVar5);\n            (*_sym.imp.USER32.dll_DrawTextW)(puVar8, uStack208, 0xffffffff, &stack0xffffff44, uVar7);\n        }\n        if (iStack204 != 0) {\n            iStack176 = *piStack200;\n            iStack172 = piStack200[1];\n            iStack168 = piStack200[2];\n            piStack164 = piStack200[3];\n            uVar5 = (*_sym.imp.GDI32.dll_CreateSolidBrush)(0);\n            (*_sym.imp.USER32.dll_FrameRect)(puVar8, &stack0xffffff4c, uVar5);\n            (*_sym.imp.GDI32.dll_DeleteObject)(uVar5);\n            (*_sym.imp.USER32.dll_InflateRect)(&stack0xffffff3c, 0xfffffffc, 0xfffffffc);\n            (*_sym.imp.USER32.dll_DrawFocusRect)(puVar8, &stack0xffffff30);\n        }\n        fcn.0041fd94(uStack196);\n        (*_sym.imp.GDI32.dll_SelectObject)(puVar8, uStack184);\n        (*_sym.imp.GDI32.dll_DeleteObject)(uVar2);\n        (*_sym.imp.GDI32.dll_SetTextColor)(puVar8, iStack204);\n        (*_sym.imp.GDI32.dll_SetBkColor)(puVar8, piStack200);\n        uVar2 = 1;\n    }\n    else {\n        puStack84 = 0x496fc4;\n        uVar2 = fcn.004972b7(arg_8h, hWnd);\n    }\n    return uVar2;\n}\n",
        "token_count": 2449
    },
    "004972b7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004972b7(uint32_t arg_8h, uint *hWnd)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    uint nLeftRect;\n    uint nTopRect;\n    uint nRightRect;\n    uint nBottomRect;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint lpchText;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint *crColor;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = _sym.imp.USER32.dll_GetSysColor;\n    uVar1 = *(arg_8h + 0x18);\n    var_10h = *(arg_8h + 0x10) & 0x10;\n    uVar6 = *(arg_8h + 0x10) & 6;\n    var_14h = uVar6;\n    if (uVar6 == 0) {\n        iVar5 = hWnd[0x13];\n        if (iVar5 != -1) goto code_r0x004972f2;\n        uVar8 = 0x12;\n    }\n    else {\n        uVar8 = 0xe;\n    }\n    iVar5 = (*_sym.imp.USER32.dll_GetSysColor)(uVar8);\ncode_r0x004972f2:\n    var_8h = (*_sym.imp.GDI32.dll_SetTextColor)(uVar1, iVar5);\n    if (hWnd[0x12] == -1) {\n        var_4h = (*_sym.imp.USER32.dll_GetSysColorBrush)(0xf);\n        crColor = (*pcVar3)(0xf);\n    }\n    else {\n        var_4h = (*_sym.imp.GDI32.dll_CreateSolidBrush)(hWnd[0x12]);\n        crColor = hWnd[0x12];\n    }\n    if (uVar6 == 0) {\n        uVar8 = 0x743c00;\n    }\n    else {\n        uVar8 = (*pcVar3)(0x11);\n    }\n    var_24h = (*_sym.imp.GDI32.dll_CreatePen)(0, 1, uVar8);\n    pcVar3 = _sym.imp.GDI32.dll_SelectObject;\n    var_20h = (*_sym.imp.GDI32.dll_SelectObject)(uVar1, var_24h);\n    var_28h = (*_sym.imp.GDI32.dll_SetBkColor)(uVar1, crColor);\n    var_1ch = (*pcVar3)(uVar1, var_4h);\n    crColor = arg_8h + 0x1c;\n    nLeftRect = *crColor;\n    nTopRect = *(arg_8h + 0x20);\n    nRightRect = *(arg_8h + 0x24);\n    nBottomRect = *(arg_8h + 0x28);\n    (*_sym.imp.USER32.dll_InflateRect)(&nLeftRect, 0xffffffff, 0xffffffff);\n    (*_sym.imp.GDI32.dll_RoundRect)(uVar1, nLeftRect, nTopRect, nRightRect, nBottomRect, 5, 5);\n    uVar6 = (*_sym.imp.USER32.dll_GetWindowLongW)(*hWnd, 0xfffffff0);\n    uVar7 = ~(uVar6 >> 8) & 0x20;\n    arg_8h = uVar7 | 0x104;\n    if ((uVar6 & 0x300) == 0x300) {\n        arg_8h = uVar7 | 0x105;\n    }\n    if ((uVar6 & 0x200) == 0) {\n        if ((uVar6 & 0x100) == 0) {\n            arg_8h = arg_8h | 1;\n        }\n    }\n    else {\n        arg_8h = arg_8h | 2;\n    }\n    iVar5 = (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0xe, 0, 0);\n    iVar2 = (iVar5 + 1U) * 2;\n    lpchText = fcn.0041fd8b(-(iVar2 >> 0x20 != 0) | iVar2);\n    (*_sym.imp.USER32.dll_GetWindowTextW)(*hWnd, lpchText, iVar5 + 1U);\n    if (var_10h != 0) {\n        nLeftRect = *crColor;\n        nTopRect = crColor[1];\n        nRightRect = crColor[2];\n        nBottomRect = crColor[3];\n        (*_sym.imp.USER32.dll_InflateRect)(&nLeftRect, 0xfffffffd, 0xfffffffd);\n        (*_sym.imp.USER32.dll_DrawFocusRect)(uVar1, &nLeftRect);\n    }\n    if (var_14h != 0) {\n        uVar8 = (*_sym.imp.USER32.dll_GetSysColor)(0x11);\n        (*_sym.imp.GDI32.dll_SetTextColor)(uVar1, uVar8);\n    }\n    uVar8 = lpchText;\n    (*_sym.imp.USER32.dll_DrawTextW)(uVar1, lpchText, 0xffffffff, &nLeftRect, arg_8h);\n    fcn.0041fd94(uVar8);\n    pcVar4 = _sym.imp.GDI32.dll_SelectObject;\n    (*_sym.imp.GDI32.dll_SelectObject)(uVar1, var_1ch);\n    pcVar3 = _sym.imp.GDI32.dll_DeleteObject;\n    (*_sym.imp.GDI32.dll_DeleteObject)(var_4h);\n    (*pcVar4)(uVar1, var_20h);\n    (*pcVar3)(var_24h);\n    (*_sym.imp.GDI32.dll_SetTextColor)(uVar1, var_8h);\n    (*_sym.imp.GDI32.dll_SetBkColor)(uVar1, var_28h);\n    return 1;\n}\n",
        "token_count": 1382
    },
    "00497543": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00497543(int32_t *hWnd, uint lpPoint, uint arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint lpRect;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    iVar4 = -1;\n    var_ch = -1;\n    (*_sym.imp.USER32.dll_ClientToScreen)(***(*0x4d1910 + *hWnd * 4), &lpPoint);\n    iVar6 = 0;\n    var_10h = *0x4d1914;\n    if (0 < *0x4d1914) {\n        do {\n            iVar3 = **(*0x4d1910 + iVar6 * 4);\n            var_8h = iVar3;\n            if ((iVar3 != 0) && (iVar5 = 3,  2 < *0x4d1934)) {\n                do {\n                    puVar1 = **(*0x4d1924 + iVar5 * 4);\n                    if (((puVar1 != NULL) && ((puVar1[1] == *(iVar3 + 4) && ((*(puVar1 + 0x92) & 0x20) == 0)))) &&\n                       ((*(puVar1 + 0x93) == 0xff || (*(puVar1 + 0x93) == *(iVar3 + 400))))) {\n                        (*_sym.imp.USER32.dll_GetWindowRect)(*puVar1, &lpRect);\n                        iVar2 = (*_sym.imp.USER32.dll_PtInRect)(&lpRect, lpPoint, arg_10h);\n                        iVar3 = var_8h;\n                        if (iVar2 != 0) {\n                            if (*hWnd != iVar6) {\n                                iVar4 = iVar6;\n                            }\n                            if ((*(**(*0x4d1924 + iVar5 * 4) + 0x92) & 8) != 0) {\n                                if (*hWnd == iVar6) {\n                                    return iVar5;\n                                }\n                                *hWnd = iVar4;\n                                return iVar5;\n                            }\n                            if (var_ch < 0) {\n                                var_ch = iVar5;\n                            }\n                        }\n                    }\n                    iVar5 = iVar5 + 1;\n                } while (iVar5 <= *0x4d1934);\n            }\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < var_10h);\n        if (-1 < var_ch) {\n            if (iVar4 < 0) {\n                return var_ch;\n            }\n            *hWnd = iVar4;\n            return var_ch;\n        }\n    }\n    (*_sym.imp.USER32.dll_MessageBeep)(0);\n    return -1;\n}\n",
        "token_count": 640
    },
    "004976d2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004976d2(void)\n\n{\n    uint *puVar1;\n    uint arg_8h;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    arg_8h = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    iVar2 = (*_sym.imp.USER32.dll_GetFocus)();\n    if (iVar2 != 0) {\n        iVar3 = fcn.0041b021(arg_8h);\n        if (iVar3 != -1) {\n            iVar3 = **(*0x4d1910 + iVar3 * 4);\n            iVar2 = fcn.0041adc4(iVar2);\n            if ((iVar2 != -1) && (**(*0x4d1924 + iVar2 * 4) != 0)) {\n                *(iVar3 + 0x1c) = iVar2;\n                puVar1 = **(*0x4d1924 + iVar2 * 4);\n                if (*(puVar1 + 0x24) == '\\x02') {\n                    (*_sym.imp.USER32.dll_SendMessageW)(*puVar1, 0xb0, iVar3 + 0x1bc, iVar3 + 0x1c0);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 277
    },
    "00497752": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00497752(int32_t arg_8h)\n\n{\n    bool bVar1;\n    \n    if (arg_8h != 0) {\n        *0x4d191c = fcn.0041b021(arg_8h);\n    }\n    bVar1 = *0x4d191c != -1;\n    if (bVar1) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(***(*0x4d1910 + *0x4d191c * 4));\n    }\n    return bVar1;\n}\n",
        "token_count": 125
    },
    "0049787a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0049787a(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x2c) != 0) {\n        uVar1 = **(param_1 + 0x30);\n        fcn.004060ff();\n        *0x4d2524 = 0;\n        return uVar1;\n    }\n    if (*(param_1 + 0xc) == '\\0') {\n        if ((*0x4d1a1c == 0) && (*0x4d2524 < 100)) {\n            *0x4d2524 = *0x4d2524 + 1;\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 10;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(uVar1);\n    }\n    return 0;\n}\n",
        "token_count": 199
    },
    "004978c7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004978c7(uint *arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    if (arg_10h != 0) {\n        *0x4d191c = fcn.0041b021(arg_10h);\n    }\n    bVar3 = *0x4d191c != -1;\n    if (bVar3) {\n        uVar2 = ***(*0x4d1910 + *0x4d191c * 4);\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar2, 0xfffffff0);\n        *arg_8h = uVar1;\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar2, 0xffffffec);\n        *arg_ch = uVar2;\n    }\n    return bVar3;\n}\n",
        "token_count": 217
    },
    "00497927": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00497927(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t **var_4h;\n    \n    var_4h = *0x4d197c;\n    do {\n        if (var_4h == NULL) {\n            if (arg_ch[1] == 0) {\n                uVar1 = 0;\n            }\n            else {\n                fcn.0040c25d();\n                var_18h = arg_8h;\n                if (&var_14h != arg_ch) {\n                    fcn.0040c1c3(arg_ch);\n                }\n                fcn.004985e6(&var_18h);\n                fcn.0040b1ff();\ncode_r0x004979b2:\n                uVar1 = 1;\n            }\n            return uVar1;\n        }\n        if (**var_4h == arg_8h) {\n            if (arg_ch[1] == 0) {\n                fcn.00498664(&var_4h);\n            }\n            else if (*var_4h + 1 != arg_ch) {\n                fcn.0040c1c3(arg_ch);\n            }\n            goto code_r0x004979b2;\n        }\n        var_4h = var_4h[1];\n    } while( true );\n}\n",
        "token_count": 318
    },
    "004979bb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004979bb(int32_t paccel, uint cAccel, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (arg_10h != 0) {\n        *0x4d191c = fcn.0041b021(arg_10h);\n    }\n    if (*0x4d191c != -1) {\n        piVar1 = **(*0x4d1910 + *0x4d191c * 4);\n        iVar2 = piVar1[6];\n        if (iVar2 != 0) {\n            if (*0x4d18d8 == *0x4d191c) {\n                *0x4d18d8 = -1;\n                iVar2 = piVar1[6];\n            }\n            (*_sym.imp.USER32.dll_DestroyAcceleratorTable)(iVar2);\n            piVar1[6] = 0;\n        }\n        if (paccel != 0) {\n            iVar2 = (*_sym.imp.USER32.dll_CreateAcceleratorTableW)(paccel, cAccel);\n            piVar1[6] = iVar2;\n            iVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n            if (*piVar1 == iVar2) {\n                *0x4d18d8 = *0x4d191c;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 314
    },
    "00497a43": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00497a43(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_18h != 0) {\n        *0x4d191c = fcn.0041b021(arg_18h);\n    }\n    if (*0x4d191c == -1) {\n        uVar2 = 0;\n    }\n    else {\n        iVar1 = **(*0x4d1910 + *0x4d191c * 4);\n        *(iVar1 + 0x58) = arg_8h;\n        *(iVar1 + 0x5c) = arg_ch;\n        if (0 < arg_10h) {\n            *(iVar1 + 0x60) = arg_10h;\n        }\n        if (0 < arg_14h) {\n            *(iVar1 + 100) = arg_14h;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 250
    },
    "00497aa3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00497aa3(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    \n    if (arg_10h != 0) {\n        *0x4d191c = fcn.0041b021(arg_10h);\n    }\n    if (*0x4d191c != -1) {\n        puVar1 = **(*0x4d1910 + *0x4d191c * 4);\n        puVar1[4] = arg_8h;\n        puVar1[5] = arg_ch;\n        (*_sym.imp.USER32.dll_PostMessageW)(*puVar1, 0x20, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "00497af6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00497af6(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    double in_stack_00000018;\n    \n    if (arg_18h != 0) {\n        *0x4d191c = fcn.0041b021(arg_18h);\n    }\n    if (*0x4d191c == -1) {\n        uVar2 = 0;\n    }\n    else {\n        iVar1 = **(*0x4d1910 + *0x4d191c * 4);\n        if (*0x4c81f0 != in_stack_00000018) {\n            uVar2 = fcn.00442010();\n            *(iVar1 + 0x7c) = uVar2;\n        }\n        if (arg_8h != -1) {\n            *(iVar1 + 0x80) = arg_8h;\n        }\n        if (arg_10h != -1) {\n            *(iVar1 + 0x84) = arg_10h;\n        }\n        if (iVar1 + 0x6c != arg_ch) {\n            fcn.0040c1c3(arg_ch);\n        }\n        *(iVar1 + 0x88) = arg_14h;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 330
    },
    "00497b91": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00497b91(uint32_t arg_8h, int32_t dwNewLong, int32_t hWnd)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    if (hWnd != 0) {\n        *0x4d191c = fcn.0041b021(hWnd);\n    }\n    if (*0x4d191c != -1) {\n        puVar1 = **(*0x4d1910 + *0x4d191c * 4);\n        uVar2 = *puVar1;\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar2, 0xfffffff0);\n        if (((arg_8h == 0xffffffff) ||\n            (iVar4 = (*_sym.imp.USER32.dll_SetWindowLongW)(uVar2, 0xfffffff0, arg_8h),  iVar4 != 0)) &&\n           ((dwNewLong == -1 ||\n            (iVar4 = (*_sym.imp.USER32.dll_SetWindowLongW)(uVar2, 0xffffffec, dwNewLong),  iVar4 != 0)))) {\n            if (*(puVar1 + 0xe) != '\\0') {\n                if (((uVar3 & 0xc00000) == 0xc00000) != ((arg_8h & 0xc00000) == 0xc00000)) {\n                    if ((arg_8h & 0xc00000) == 0xc00000) {\n                        iVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)();\n                        puVar1[0x12] = puVar1[0x12] + iVar4;\n                    }\n                    else {\n                        iVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(4);\n                        puVar1[0x12] = puVar1[0x12] - iVar4;\n                    }\n                }\n                (*_sym.imp.USER32.dll_SetWindowPos)(uVar2, 0, 0, 0, 0, 0, 0x47);\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 491
    },
    "00497d04": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00497d04(uint *arg_8h, uint *hWnd, uint bErase)\n\n{\n    uint lpRect;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint lpPoint;\n    uint var_8h;\n    \n    if ((*(arg_8h + 0x39) == '\\0') && (*(arg_8h + 0x3a) == '\\0')) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(*hWnd, &lpRect);\n        lpPoint = lpRect;\n        var_8h = var_18h;\n        (*_sym.imp.USER32.dll_ScreenToClient)(*arg_8h, &lpPoint);\n        lpRect = lpPoint;\n        var_18h = var_8h;\n        lpPoint = var_14h;\n        var_8h = var_10h;\n        (*_sym.imp.USER32.dll_ScreenToClient)(*arg_8h, &lpPoint);\n        var_14h = lpPoint;\n        var_10h = var_8h;\n        (*_sym.imp.USER32.dll_InvalidateRect)(*arg_8h, &lpRect, bErase);\n    }\n    return;\n}\n",
        "token_count": 274
    },
    "0047b780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047b780(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint32_t noname_4;\n    uint uVar3;\n    int32_t iVar4;\n    char cVar5;\n    uint uStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint auStack56 [2];\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint auStack24 [2];\n    uint uStack16;\n    uint uStack12;\n    \n    iVar4 = *0x4d152c;\n    iStack60 = *0x4d152c;\n    if ((*0x4d152c == 1) || (*0x4d1367 != '\\0')) {\ncode_r0x0047b931:\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 0;\n        uStack12 = 1;\n        noname_4 = 0;\n        *0x4d152c = 0;\n        auStack24[0] = 0;\n        uStack16 = 0;\n        auStack56[0] = 0;\n        uStack48 = 0;\n        uStack44 = 1;\n        uStack40 = 0x49d100;\n        uStack36 = 0;\n        uStack32 = 0;\n        uStack28 = 0;\n        iStack64 = 0;\n        if (*0x4d1900 != 0) {\n            do {\n                uVar1 = *0x4d18ec;\n                if (noname_4 == 0) {\n                    fcn.0040e8a0();\n                    auStack56[0] = uVar1;\n                    uStack44 = 1;\n                }\n                else {\n                    if (noname_4 == 1) {\n                        fcn.0040e8a0();\n                        auStack56[0] = arg_8h;\n                    }\n                    else {\n                        if (noname_4 != 2) {\n                            if (noname_4 == 3) {\n                                fcn.0040e8a0();\n                                uStack44 = 1;\n                                auStack56[0] = arg_10h;\n                            }\n                            goto code_r0x0047b861;\n                        }\n                        fcn.0040e8a0();\n                        auStack56[0] = arg_ch;\n                    }\n                    uStack44 = 1;\n                }\ncode_r0x0047b861:\n                fcn.00466fef(auStack56);\n                noname_4 = uStack68 + 1;\n                iVar4 = iStack64;\n                uStack68 = noname_4;\n            } while (noname_4 < *0x4d1900);\n        }\n        uStack68 = uStack68 & 0xffffff;\n        cVar5 = '\\0';\n        cVar2 = fcn.0047e315(0x4d18f0, &uStack40, auStack24, 0, noname_4, &uStack68 + 3);\n        if ((cVar2 != '\\0') && (*0x4d152c != 1)) {\n            *0x4d152c = iVar4;\n            if (cVar5 == '\\0') {\n                uStack68 = 0x49d100;\n                fcn.00466f23();\n                fcn.0041fd94(iStack64);\n                fcn.0040e8a0();\n                fcn.0040e8a0();\n                goto code_r0x0047b931;\n            }\n            uVar3 = fcn.0040ce67();\n        }\n        uStack68 = 0x49d100;\n        fcn.00466f23();\n        fcn.0041fd94(iStack64);\n        fcn.0040e8a0();\n        fcn.0040e8a0();\n    }\n    return uVar3;\n}\n",
        "token_count": 910
    },
    "00497d90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00497d90(int32_t nIDButton, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint *arg_8h;\n    int32_t **ppiVar2;\n    int32_t *arg_8h_00;\n    uint32_t uVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uint *in_stack_ffffffb0;\n    int32_t in_stack_ffffffb4;\n    uint in_stack_ffffffb8;\n    uint arg_18h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar3 = fcn.0040c4db(nIDButton, &fcn.00497d90::var_ch, &fcn.00497d90::var_10h);\n    if (uVar3 == '\\0') {\ncode_r0x00497fda:\n        return uVar3 & 0xffffff00;\n    }\n    arg_8h = **(*0x4d1910 + var_ch * 4);\n    ppiVar2 = *(*0x4d1924 + var_10h * 4);\n    arg_8h_00 = *ppiVar2;\n    var_1h._0_1_ = *(arg_8h_00 + 0x24);\n    uVar3 = ppiVar2 & 0xffffff00;\n    if (((((arg_ch == 6) && (var_1h == 0x18)) || ((arg_ch == 4 && (var_1h == 1)))) ||\n        (((arg_ch == 3 && (var_1h == 0)) || ((arg_ch == 0x100 && ((var_1h == 2 || (var_1h == 3)))))))) &&\n       (arg_8h[7] = var_10h,  arg_8h[0x73] != 0)) {\n        uVar3 = fcn.0046547c(arg_8h_00);\n    }\n    if (((*(arg_8h + 0xe) == '\\0') ||\n        ((((arg_ch == 0 && (*arg_8h_00 != 0)) && (iVar4 = (*_sym.imp.USER32.dll_IsWindow)(*arg_8h_00),  iVar4 != 0)) &&\n         (uVar3 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*arg_8h_00),  uVar3 == 0)))) ||\n       ((uVar1 = *(**(*0x4d1924 + var_10h * 4) + 0x93),  uVar1 != 0xff && (uVar3 = uVar1,  uVar3 != arg_8h[100]))))\n    goto code_r0x00497fda;\n    fcn.0041ea9a(arg_8h, 0);\n    var_8h = arg_8h[0x5d];\n    var_ch = arg_8h[0x5e];\n    if (0x1c < var_1h) goto code_r0x00497eee;\n    // switch table (29 cases) at 0x497fe4\n    switch(*(*(var_1h + 0x498004) * 4 + 0x497fe4)) {\n    case 0x497ea3:\n        bVar5 = arg_ch == 1;\n        goto code_r0x00497ea6;\n    case 0x497ea8:\n        goto code_r0x00497ea8;\n    case 0x497eb9:\n        if (arg_ch == 0) goto code_r0x00497ea8;\n        if (arg_ch == 0x300) {\n            iVar4 = arg_8h[0x71];\n            if ((0 < iVar4) && (iVar4 != nIDButton)) {\n                arg_8h[0x71] = 0;\n                fcn.00492b17(iVar4, arg_8h, *arg_8h_00, var_8h, var_ch);\n            }\n            arg_8h[0x71] = nIDButton;\n        }\n        else if (arg_ch == 0x200) {\n            if (*(arg_8h_00 + 0x24) == '\\x02') {\n                (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h_00, 0xb0, arg_8h + 0x6f, arg_8h + 0x70);\n            }\n            iVar4 = arg_8h[0x71];\n            if ((0 < iVar4) && (iVar4 == nIDButton)) {\n                arg_8h[0x71] = 0;\n                fcn.00492b17(iVar4, arg_8h, *arg_8h_00, var_8h, var_ch);\n            }\n        }\n        break;\n    case 0x497f75:\n        arg_18h = 0x497f81;\n        iVar4 = (*_sym.imp.USER32.dll_IsDlgButtonChecked)(*arg_8h, nIDButton);\n        if (iVar4 != 1) break;\n        goto code_r0x00497eb0;\n    case 0x497f99:\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowLongW)(*arg_8h_00, 0xffffffec);\n        if ((uVar3 & 0x100000) != 0) {\n            (*_sym.imp.USER32.dll_SendMessageW)(*arg_8h, 0xa1, 2, 0);\n        }\n    case 0x497fc1:\n        bVar5 = arg_ch == 0;\ncode_r0x00497ea6:\n        if (bVar5) goto code_r0x00497ea8;\n        break;\n    case 0x497fc8:\n        fcn.004980cd(arg_8h, arg_ch);\n        goto code_r0x00497ea8;\n    }\ncode_r0x00497eee:\n    arg_ch._3_1_ = 0;\ncode_r0x00497ef1:\n    uVar3 = **(*0x4d1924 + var_10h * 4);\n    if (*(uVar3 + 0x50) != 0) {\n        uVar3 = (*_sym.imp.USER32.dll_SendMessageW)(*(uVar3 + 0x50), 0x41c, 0, 0);\n    }\n    return uVar3 & 0xffffff00 | arg_ch._3_1_;\ncode_r0x00497ea8:\n    in_stack_ffffffb4 = *arg_8h_00;\n    in_stack_ffffffb0 = arg_8h;\n    in_stack_ffffffb8 = var_8h;\n    arg_18h = var_ch;\ncode_r0x00497eb0:\n    fcn.00492b17(nIDButton, in_stack_ffffffb0, in_stack_ffffffb4, in_stack_ffffffb8, arg_18h);\n    arg_ch._3_1_ = 1;\n    goto code_r0x00497ef1;\n}\n",
        "token_count": 1622
    },
    "00498021": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00498021(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = **(*0x4d1910 + *0x4d191c * 4);\n    if ((arg_8h & 0x20000) != 0) {\n        fcn.0041ea74(0);\n    }\n    if (*(iVar1 + 0x68) == '\\0') {\n        *(iVar1 + 0x68) = 1;\n        arg_8h = arg_8h | 0x20000;\n    }\n    return arg_8h;\n}\n",
        "token_count": 142
    },
    "004980cd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004980cd(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = 3;\n    iVar1 = *(arg_8h + 4);\n    if (*(arg_8h + 400) != arg_ch) {\n        iVar3 = iVar4;\n        if (2 < *0x4d1934) {\n            do {\n                puVar2 = **(*0x4d1924 + iVar3 * 4);\n                if ((((puVar2 != NULL) && (puVar2[1] == iVar1)) && (*(puVar2 + 0x24) != '\\v')) &&\n                   ((*(puVar2 + 0x93) == *(arg_8h + 400) ||\n                    (((*(arg_8h + 0x198) != '\\0' && (*(puVar2 + 0x93) != 0xff)) && (*(puVar2 + 0x24) != '\\n')))))) {\n                    (*_sym.imp.USER32.dll_ShowWindow)(*puVar2, 0);\n                    puVar2 = **(*0x4d1924 + iVar3 * 4);\n                    if (((*(puVar2 + 0x92) & 0x40) != 0) && (*(puVar2 + 0x24) == '\\x1a')) {\n                        (*_sym.imp.USER32.dll_EnableWindow)(*puVar2, 0);\n                    }\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 <= *0x4d1934);\n        }\n        *(arg_8h + 400) = arg_ch;\n    }\n    if (2 < *0x4d1934) {\n        do {\n            puVar2 = **(*0x4d1924 + iVar4 * 4);\n            if ((((puVar2 != NULL) && (puVar2[1] == iVar1)) && (*(puVar2 + 0x24) != '\\v')) &&\n               ((*(puVar2 + 0x93) == *(arg_8h + 400) && ((*(puVar2 + 0x92) & 0x20) == 0)))) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*puVar2, 0);\n                (*_sym.imp.USER32.dll_ShowWindow)(***(*0x4d1924 + iVar4 * 4), 4);\n                puVar2 = **(*0x4d1924 + iVar4 * 4);\n                if (((*(puVar2 + 0x92) & 0x40) != 0) && (*(puVar2 + 0x24) == '\\x1a')) {\n                    (*_sym.imp.USER32.dll_EnableWindow)(*puVar2, 1);\n                }\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 <= *0x4d1934);\n    }\n    (*_sym.imp.USER32.dll_SendMessageW)(*(arg_8h + 0x188), 0x130c, arg_ch, 0);\n    return;\n}\n",
        "token_count": 703
    },
    "0049822e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0049822e(uint *arg_8h, int32_t hLibModule, uint arg_10h, uint noname_3, uint32_t *arg_18h, int32_t arg_1ch)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    char cVar5;\n    char cVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    bool bVar11;\n    uint *puVar12;\n    uint *puVar13;\n    char16_t *pcVar14;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar7 = fcn.0040ce67();\n    cVar5 = '\\0';\n    uVar8 = fcn.004248f3(hLibModule);\n    if (4 < uVar8) {\n        pcVar14 = L\".icl\";\n        iVar9 = fcn.004248f3(hLibModule);\n        iVar9 = fcn.004249b8(hLibModule + (iVar9 + -4) * 2, pcVar14);\n        cVar5 = '\\x01' - (iVar9 != 0);\n        pcVar14 = L\".exe\";\n        iVar9 = fcn.004248f3(hLibModule);\n        iVar9 = fcn.004249b8(hLibModule + (iVar9 + -4) * 2, pcVar14);\n        pcVar14 = L\".dll\";\n        iVar10 = fcn.004248f3(hLibModule);\n        iVar10 = fcn.004249b8(hLibModule + (iVar10 + -4) * 2, pcVar14);\n        if ((iVar10 == 0) || (iVar9 == 0)) {\n            iVar9 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(hLibModule, 0, 0x32);\n            if (iVar9 == 0) goto code_r0x004982ed;\n            if (arg_1ch == 4) {\n                fcn.00408e90();\n                iVar10 = (*_sym.imp.USER32.dll_LoadImageW)(iVar9, *arg_18h, 1, *(arg_8h + 0x23), *(arg_8h + 0x8e), 0);\n                var_4h = iVar10;\n                if (iVar10 == 0) {\n                    iVar1 = *(arg_8h + 0x8e);\n                    iVar2 = *(arg_8h + 0x23);\n                    uVar8 = uVar7 & 0xffff;\ncode_r0x004983f0:\n                    var_4h = (*_sym.imp.USER32.dll_LoadImageW)(iVar9, uVar8, 1, iVar2, iVar1, iVar10);\n                }\n            }\n            else {\n                if (0 < uVar7) {\n                    var_4h = (*_sym.imp.USER32.dll_LoadImageW)\n                                       (iVar9, uVar7 & 0xffff, 1, *(arg_8h + 0x23), *(arg_8h + 0x8e), 0);\n                }\n                if (var_4h == 0) {\n                    fcn.00408e90();\n                    iVar10 = 0;\n                    uVar8 = *arg_18h;\n                    iVar1 = *(arg_8h + 0x8e);\n                    iVar2 = *(arg_8h + 0x23);\n                    goto code_r0x004983f0;\n                }\n            }\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar9);\n            goto code_r0x004982ed;\n        }\n        if (cVar5 != '\\0') goto code_r0x004982ed;\n    }\n    var_4h = (*_sym.imp.USER32.dll_LoadImageW)(0, hLibModule, 1, *(arg_8h + 0x23), *(arg_8h + 0x8e), 0x2010);\ncode_r0x004982ed:\n    if (((var_4h == 0) && (cVar6 = fcn.0046ff5f(),  cVar6 != '\\0')) && ((uVar7 < 1 || (cVar5 != '\\0')))) {\n        if (uVar7 < 0) {\n            uVar7 = -uVar7 - 1;\n        }\n        puVar13 = &var_4h;\n        if (*(arg_8h + 0x23) < 0x11) {\n            puVar12 = NULL;\n        }\n        else {\n            puVar12 = puVar13;\n            puVar13 = NULL;\n        }\n        (*_sym.imp.SHELL32.dll_ExtractIconExW)(hLibModule, uVar7, puVar12, puVar13, 1);\n    }\n    if (arg_8h[0x1a] != 0) {\n        (*_sym.imp.USER32.dll_DestroyIcon)(arg_8h[0x1a]);\n    }\n    pcVar4 = _sym.imp.USER32.dll_SendMessageW;\n    arg_8h[0x1a] = var_4h;\n    uVar3 = *arg_8h;\n    (*pcVar4)(uVar3, 0x170, var_4h, 0);\n    (*pcVar4)(uVar3, 100, 0x172, 1);\n    bVar11 = var_4h != 0;\n    uVar7 = fcn.0040e8a0();\n    return uVar7 & 0xffffff00 | bVar11;\n}\n",
        "token_count": 1276
    },
    "00498461": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00498461(uint *arg_8h, int16_t *hgdiobj, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint lpvObject;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint lpNumberOfBytesRead;\n    int32_t *lpPictDesc;\n    int32_t *var_4h;\n    \n    if (*hgdiobj == 0) {\n        hgdiobj = NULL;\ncode_r0x0049857f:\n        if (arg_8h[0x19] != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(arg_8h[0x19]);\n        }\n        arg_8h[0x19] = hgdiobj;\n        uVar2 = *arg_8h;\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar2, 0x172, 0, hgdiobj);\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(hgdiobj, 0x80000000, 0, 0, 3, 0, 0);\n        if (iVar1 != -1) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar1, 0);\n            iVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(2, uVar2);\n            if (iVar3 == 0) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            }\n            else {\n                uVar4 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar3);\n                iVar5 = (*_sym.imp.KERNEL32.dll_ReadFile)(iVar1, uVar4, uVar2, &lpNumberOfBytesRead, 0);\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar3);\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n                if (iVar5 != 0) {\n                    (*_sym.imp.ole32.dll_CreateStreamOnHGlobal)(iVar3, 1, &lpPictDesc);\n                    var_4h = NULL;\n                    (*_sym.imp.OLEAUT32.dll_OleCreatePictureIndirect)(lpPictDesc, 0, 0, 0x49fc54, &var_4h);\n                    (**(*lpPictDesc + 8))(lpPictDesc);\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar3);\n                    if (var_4h != NULL) {\n                        (**(*var_4h + 0xc))(var_4h, &hgdiobj);\n                        (*_sym.imp.GDI32.dll_GetObjectW)(hgdiobj, 0x18, &lpvObject);\n                        iVar1 = *arg_10h;\n                        if ((iVar1 == 0) && (iVar1 = 0,  *arg_14h == 0)) {\n                            *arg_10h = var_20h;\n                            *arg_14h = var_1ch;\n                            iVar1 = *arg_10h;\n                        }\n                        hgdiobj = (*_sym.imp.USER32.dll_CopyImage)(hgdiobj, 0, iVar1, *arg_14h, 0x2000);\n                        (**(*var_4h + 8))(var_4h);\n                        goto code_r0x0049857f;\n                    }\n                }\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 804
    },
    "004985b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004985b0(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t *in_ECX;\n    uint unaff_ESI;\n    \n    puVar2 = fcn.0041fd5b(8, unaff_ESI);\n    uVar1 = *arg_8h;\n    puVar2[1] = 0;\n    *puVar2 = uVar1;\n    if (in_ECX[1] == 0) {\n        in_ECX[1] = puVar2;\n    }\n    else {\n        *(in_ECX[2] + 4) = puVar2;\n    }\n    *in_ECX = *in_ECX + 1;\n    in_ECX[2] = puVar2;\n    return;\n}\n",
        "token_count": 182
    },
    "00498755": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00498755(uint arg_8h, uint X, uint Y, uint nXEnd, uint nYEnd, uint32_t arg_1ch)\n\n{\n    if ((arg_1ch & 2) != 0) {\n        fcn.0041aabf(arg_8h, 0, 0xffffffff, 2, 1);\n        (*_sym.imp.GDI32.dll_MoveToEx)(arg_8h, X, Y, 0);\n        (*_sym.imp.GDI32.dll_LineTo)(arg_8h, nXEnd, nYEnd);\n        if (*0x4d196c != '\\0') {\n            (*_sym.imp.GDI32.dll_EndPath)(arg_8h);\n            *0x4d196c = '\\0';\n        }\n        (*_sym.imp.GDI32.dll_StrokePath)(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "00498916": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00498916(uint hdc, int32_t X, int32_t Y, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    \n    if ((arg_14h & 1) != 0) {\n        fcn.0041aabf(hdc, 0, 0xffffffff, 0, 1);\n        (*_sym.imp.GDI32.dll_MoveToEx)(hdc, X + -2, Y, 0);\n        pcVar1 = _sym.imp.GDI32.dll_LineTo;\n        (*_sym.imp.GDI32.dll_LineTo)(hdc, X + 3, Y);\n        (*_sym.imp.GDI32.dll_MoveToEx)(hdc, X, Y + -2, 0);\n        (*pcVar1)(hdc, X, Y + 3);\n        if (*0x4d196c != '\\0') {\n            (*_sym.imp.GDI32.dll_EndPath)(hdc);\n            *0x4d196c = '\\0';\n        }\n        (*_sym.imp.GDI32.dll_StrokePath)(hdc);\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "0049899c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049899c(uint hDlg, uint noname_1, uint32_t arg_10h, int32_t arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0041b021(hDlg);\n    fcn.0041ea9a(**(*0x4d1910 + iVar1 * 4), 1);\n    if (arg_1ch == 0) {\n        uVar2 = 0x204;\n    }\n    else {\n        uVar2 = 0x201;\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, uVar2, arg_18h, arg_10h & 0xffff | arg_14h << 0x10);\n    return;\n}\n",
        "token_count": 194
    },
    "004989f4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004989f4(uint hDlg, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t item;\n    uint uVar5;\n    uchar *arg_ch_00;\n    uint uVar6;\n    uint *puVar7;\n    uchar auStack8 [4];\n    \n    iVar2 = fcn.0041b021(hDlg);\n    fcn.0041ea9a(**(*0x4d1910 + iVar2 * 4), 1);\n    iVar2 = arg_10h;\n    uVar4 = arg_ch;\n    if (arg_18h == 0) {\n        if (*0x4d1960 != 0) {\n            (*_sym.imp.COMCTL32.dll_ImageList_DragLeave)(0);\n            (*_sym.imp.COMCTL32.dll_ImageList_EndDrag)();\n            (*_sym.imp.USER32.dll_ReleaseCapture)();\n            item = iVar2;\n            iVar3 = fcn.00497543(&arg_18h, uVar4, iVar2);\n            if ((iVar3 != -1) && (iVar3 != *0x4d1960)) {\n                arg_14h = **(*0x4d1910 + arg_ch * 4);\n                puVar7 = **(*0x4d1924 + iVar3 * 4);\n                if ((*(puVar7 + 0x92) & 8) != 0) {\n                    arg_ch = *puVar7;\n                    puVar7 = &arg_10h;\n                    fcn.004947a8(*0x4d1960, puVar7, 0);\n                    uVar6 = 0;\n                    uVar5 = fcn.004947a8(item, &arg_ch, 0);\n                    cVar1 = *(**(*0x4d1924 + iVar3 * 4) + 0x90);\n                    if ((cVar1 == '\\x02') || (cVar1 == '\\x03')) {\n                        (*_sym.imp.USER32.dll_SetWindowTextW)(puVar7, uVar5);\n                        (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0xb1, 0, 0xffffffff);\n                    }\n                    fcn.0041fd94(uVar5);\n                    arg_ch = 0;\n                    arg_10h = 1;\n                    fcn.0040e8a0();\n                    arg_10h = 1;\n                    fcn.0040b606(L\"@GUI_DROPID\");\n                    arg_ch_00 = &stack0xfffffffc;\n                    fcn.0040c28f(&arg_10h, arg_ch_00, 1);\n                    fcn.0040b1ff();\n                    fcn.0040b5c1(0x49d0d0);\n                    fcn.0040b606(L\"@GUI_DRAGFILE\");\n                    fcn.0040c28f(auStack8, &stack0xffffffe8, 1);\n                    fcn.0040b1ff();\n                    fcn.00492bc6(0xfffffff3, arg_ch_00, 0, 0);\n                    fcn.0040e8a0();\n                }\n                *0x4d1960 = 0;\n            }\n        }\n        uVar4 = iVar2 << 0x10 | uVar4 & 0xffff;\n        uVar5 = 0x202;\n    }\n    else {\n        uVar4 = arg_ch & 0xffff | arg_10h << 0x10;\n        uVar5 = 0x205;\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, uVar5, arg_14h, uVar4);\n    return;\n}\n",
        "token_count": 858
    },
    "00498c00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00498c00(uint hDlg, uint32_t arg_ch, int32_t lParam, uint32_t arg_14h)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t unaff_EBX;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    uint32_t uStack80;\n    uint32_t uStack76;\n    uint32_t uStack72;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uchar auStack56 [8];\n    uint32_t uStack48;\n    uint uStack40;\n    uint uStack36;\n    int32_t iStack20;\n    \n    iStack68 = fcn.0041b021(hDlg);\n    iVar5 = **(*0x4d1910 + iStack68 * 4);\n    if (arg_ch == 2) {\n        if (*0x4d18b0 == '\\0') {\n            return;\n        }\n        uVar9 = 0xf060;\n        uVar8 = 0x112;\ncode_r0x00498c49:\n        (*_sym.imp.USER32.dll_PostMessageW)(hDlg, uVar8, uVar9, 0);\n        return;\n    }\n    if (arg_ch == 1) {\n        iStack68 = (*_sym.imp.USER32.dll_GetFocus)();\n        uVar9 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(iStack68);\n        fcn.004946c6(uVar9, &iStack60);\n        uVar4 = fcn.00428f54(*(iVar5 + 0x1c4));\n        if (uVar9 != uVar4) {\n            return;\n        }\n        *(iVar5 + 0x1c4) = 0;\n        if (arg_14h != 0) {\n            return;\n        }\n        if (lParam != 0) {\n            return;\n        }\n        uVar9 = uVar9 & 0xffff;\n        uVar8 = 0x111;\n        goto code_r0x00498c49;\n    }\n    iVar7 = 0;\n    if (arg_14h == 0) {\n        if (lParam == 0) {\n            uStack76 = arg_ch;\n            uVar4 = unaff_EBX;\n        }\n        else {\ncode_r0x00498d33:\n            uStack80 = fcn.0041adc4(lParam);\n            uVar4 = unaff_EBX;\n            uStack76 = uStack80;\n            if (uStack80 == 0xffffffff) goto code_r0x00498cf5;\n        }\n    }\n    else {\n        if ((arg_14h != 1) || (lParam != 0)) goto code_r0x00498d33;\n        uStack76 = arg_ch;\n        uVar4 = unaff_EBX;\n    }\n    arg_14h = uVar4;\n    uVar4 = uStack76;\n    cVar3 = fcn.0040c4db(uStack76, &uStack72, &uStack76);\n    if (cVar3 == '\\0') {\n        iVar7 = *(iVar5 + 0x1c4);\n        if (iVar7 != 0) {\n            *(iVar5 + 0x1c4) = 0;\n            fcn.00497d90(iVar7, 0);\n        }\n    }\n    else {\n        if (*(**(*0x4d1924 + arg_14h * 4) + 0x90) == '\\x0f') {\n            uStack40 = fcn.0041fd8b(0x208);\n            uVar8 = *(**(*0x4d1924 + arg_14h * 4) + 0xc);\n            uStack76 = 0x30;\n            fcn.004222d0(&uStack72, 0, 0x2c);\n            uStack72 = 0x10;\n            uStack36 = 0x104;\n            iVar5 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(uVar8, uVar4, 0, &uStack76);\n            if ((iVar5 != 0) && ((uStack48 & 0x200) != 0)) {\n                uStack76 = (*_sym.imp.USER32.dll_GetMenuItemCount)(uVar8);\n                if (uStack76 < 1) {\n                    uVar9 = 0xffffffff;\n                }\n                else {\n                    do {\n                        uVar9 = (*_sym.imp.USER32.dll_GetMenuItemID)(uVar8, iVar7);\n                        iVar5 = iVar7;\n                        if (uVar9 == uVar4) goto joined_r0x00498e15;\n                        iVar7 = iVar7 + 1;\n                    } while (iVar7 < uStack76);\n                }\n                iVar5 = iVar7;\n                if (uVar9 == uVar4) {\njoined_r0x00498e15:\n                    do {\n                        iStack60 = iVar5;\n                        iStack64 = iVar7;\n                        iVar5 = iStack60 + -1;\n                        iStack20 = iStack68;\n                        uVar9 = uStack76;\n                        iVar7 = iStack64;\n                        uVar2 = uStack76;\n                        if (iVar5 < 0) break;\n                        iVar6 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(uVar8, iVar5, 1, auStack56);\n                        iVar7 = iStack64;\n                    } while ((iVar6 == 0) ||\n                            (iStack20 = iStack68,  uVar9 = uStack76,  uVar2 = uStack76,  (uStack48 & 0x200) != 0));\n                    do {\n                        uStack76 = uVar2;\n                        iVar5 = iVar7;\n                        uVar2 = uStack76;\n                        iVar7 = iVar5 + 1;\n                        bVar1 = uStack76 <= iVar7;\n                        uStack76 = uVar9;\n                        if (bVar1) break;\n                        iVar6 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(uVar8, iVar7, 1, auStack56);\n                        uVar9 = uStack76;\n                        uVar4 = uStack72;\n                    } while ((iVar6 == 0) || ((uStack48 & 0x200) != 0));\n                    (*_sym.imp.USER32.dll_CheckMenuRadioItem)(uVar8, iStack60, iVar5, iStack64, 0x400);\n                }\n            }\n            fcn.0041fd94(iStack68);\n        }\n        cVar3 = fcn.00497d90(uVar4, uStack80);\n        arg_14h = uStack80;\n        if (cVar3 != '\\0') {\n            return;\n        }\n    }\ncode_r0x00498cf5:\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x111, arg_14h << 0x10 | arg_ch & 0xffff, lParam);\n    return;\n}\n",
        "token_count": 1595
    },
    "00499272": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00499272(uint noname_0, int32_t arg_ch, uint hDlg, uint wParam, uint lParam)\n\n{\n    int32_t arg_ch_00;\n    \n    arg_ch_00 = **(*0x4d1910 + arg_ch * 4);\n    if (*(arg_ch_00 + 0x184) != '\\0') {\n        fcn.00492bc6(0xfffffff4, arg_ch_00, 0, 0);\n    }\n    *(arg_ch_00 + 0x184) = 0;\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x232, wParam, lParam);\n    return;\n}\n",
        "token_count": 154
    },
    "004992bd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004992bd(uint noname_0, int32_t arg_ch, uint hDlg, uint wParam, uint lParam)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = **(*0x4d1910 + arg_ch * 4);\n    if (*(iVar1 + 0x2c) == 0) {\n        (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x53, wParam, lParam);\n    }\n    else {\n        fcn.00498064(*(iVar1 + 0x28));\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "004992f2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004992f2(uint hDlg, uint32_t arg_ch, uint32_t arg_10h, uint wParam)\n\n{\n    uint32_t in_ECX;\n    uint32_t lpPoint;\n    uint32_t y;\n    \n    lpPoint = in_ECX;\n    y = in_ECX;\n    if (*0x4d1960 != 0) {\n        lpPoint = arg_ch;\n        y = arg_10h;\n        (*_sym.imp.USER32.dll_ClientToScreen)(hDlg, &lpPoint);\n        (*_sym.imp.COMCTL32.dll_ImageList_DragMove)(lpPoint, y);\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x200, wParam, arg_10h << 0x10 | arg_ch & 0xffff);\n    return;\n}\n",
        "token_count": 184
    },
    "00499468": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00499468(int32_t hDlg, uint wParam, uint32_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t *arg_8h;\n    code *pcVar2;\n    char cVar3;\n    int16_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint32_t *arg_ch;\n    uint32_t *puVar9;\n    uint32_t uVar10;\n    uint uStack176;\n    uint32_t uStack172;\n    uint32_t uStack168;\n    uint uStack164;\n    uint32_t uStack160;\n    uint *puStack156;\n    uint32_t uStack152;\n    uint uStack148;\n    uint32_t uStack144;\n    uint32_t uStack132;\n    uint32_t uStack128;\n    uint uStack124;\n    uint32_t uStack120;\n    uint uStack108;\n    int32_t iStack104;\n    uint uStack96;\n    uint uStack88;\n    uint uStack68;\n    int32_t iStack64;\n    uint uStack36;\n    \n    iVar6 = hDlg;\n    uStack168 = fcn.0041b021(hDlg);\n    pcVar2 = _sym.imp.USER32.dll_GetKeyState;\n    uVar10 = **(*0x4d1910 + uStack168 * 4);\n    uVar7 = arg_10h[2];\n    uStack152 = uVar10;\n    if (uVar7 < 0xfffffe6f) {\n        if (uVar7 == 0xfffffe6e) {\ncode_r0x004996cf:\n            uVar10 = 0;\n            iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x110a);\n            if (iVar8 == 0) goto code_r0x00499503;\n            uStack108 = 4;\n            iStack104 = iVar8;\n            iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x113e, 0);\n            if (((iVar8 == 0) || (arg_10h[0xd] == arg_10h[0x17])) || (arg_10h[3] == 0x1000)) goto code_r0x00499503;\n            uVar7 = arg_10h[3] - 1;\n            goto joined_r0x004999ab;\n        }\n        if (uVar7 < 0xfffffdda) {\n            if (uVar7 == 0xfffffdd9) {\n                iVar6 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x130b);\n            }\n            else if (uVar7 == 0xfffffd09) {\n                *(uVar10 + 0x19a) = 1;\n                if (*(uVar10 + 0x199) != '\\0') goto code_r0x00499503;\n                *(uVar10 + 0x19a) = 0;\n            }\n            else {\n                if (uVar7 == 0xfffffd0e) {\n                    *(uVar10 + 0x199) = 1;\n                    goto code_r0x00499503;\n                }\n                if (uVar7 == 0xfffffd0f) {\n                    if (*(uVar10 + 0x19a) == '\\x01') {\n                        fcn.00497d90(arg_10h[1], 0xfffffd0f);\n                    }\n                    *(uVar10 + 0x199) = 0;\n                    goto code_r0x00499503;\n                }\n                if (uVar7 != 0xfffffd16) goto code_r0x00499503;\n            }\n        }\n        else {\n            if (uVar7 != 0xfffffdda) {\n                if (uVar7 == 0xfffffdee) {\n                    if ((*(uVar10 + 0x188) != 0) && (iVar6 = 3,  2 < *0x4d1934)) {\n                        do {\n                            iVar8 = **(*0x4d1924 + iVar6 * 4);\n                            if ((iVar8 != 0) && ((*(iVar8 + 4) == uStack168 && (*(iVar8 + 0x93) == arg_10h[1])))) break;\n                            iVar6 = iVar6 + 1;\n                        } while (iVar6 <= *0x4d1934);\n                        if (iVar6 <= *0x4d1934) {\n                            fcn.0042d27b(arg_10h + 4, *(**(*0x4d1924 + iVar6 * 4) + 0x54), 0x4f);\n                            *(arg_10h + 0xae) = 0;\n                            return 1;\n                        }\n                    }\n                    goto code_r0x00499503;\n                }\n                if (uVar7 != 0xfffffe3d) {\n                    if (uVar7 != 0xfffffe64) goto code_r0x00499503;\n                    uStack168 = *arg_10h;\n                    uVar10 = 0xfffffff0;\n                    uVar7 = (*_sym.imp.USER32.dll_GetWindowLongW)();\n                    if ((((uVar7 & 0x100) == 0) || (*(arg_10h + 3) != 0x20)) ||\n                       (iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(uStack172, 0x110a, 9),  iVar8 == 0))\n                    goto code_r0x00499503;\n                    uStack108 = 4;\n                    iStack104 = iVar8;\n                    uVar7 = (*_sym.imp.USER32.dll_SendMessageW)(uStack172, 0x113e, 0);\n                    goto joined_r0x004999ab;\n                }\n                goto code_r0x004996cf;\n            }\n            iVar4 = (*_sym.imp.USER32.dll_GetKeyState)();\n            if ((-1 < iVar4) || (iVar4 = (*pcVar2)(),  -1 < iVar4)) goto code_r0x00499503;\n            iVar6 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x130b, 0);\n            iVar4 = (*_sym.imp.USER32.dll_GetKeyState)(0x10);\n            iVar6 = (-1 < iVar4) * 2 + -1 + iVar6;\n        }\n        uVar10 = arg_10h[1];\n    }\n    else {\n        if (uVar7 < 0xfffffff1) {\n            if (uVar7 == 0xfffffff0) {\n                (*_sym.imp.USER32.dll_ReleaseCapture)();\n            }\n            else if ((uVar7 == 0xfffffec0) || (uVar7 == 0xfffffed4)) {\n                (*_sym.imp.USER32.dll_InvalidateRect)(*arg_10h);\n            }\n            else if (uVar7 == 0xffffff93) {\n                (*_sym.imp.COMCTL32.dll_ImageList_SetDragCursorImage)(*0x4d195c, 0);\n                (*_sym.imp.COMCTL32.dll_ImageList_BeginDrag)(*0x4d195c, 0, 0xfffffff8, 0xfffffff0);\n                (*_sym.imp.USER32.dll_SetCapture)(hDlg);\n                *0x4d1960 = wParam;\n                uStack176 = 0;\n                uStack172 = 1;\n                fcn.0040e8a0();\n                uStack172 = 1;\n                fcn.0040b606(L\"@GUI_DRAGID\");\n                fcn.0040c28f(&uStack164, &stack0xffffff44, 1);\n                fcn.0040b1ff();\n                (*_sym.imp.USER32.dll_ClientToScreen)(*arg_10h, arg_10h + 8);\n                (*_sym.imp.COMCTL32.dll_ImageList_DragEnter)(0, arg_10h[8], arg_10h[9]);\n                fcn.0040e8a0();\n            }\n            else if (uVar7 == 0xffffff94) {\n                arg_8h = arg_10h[1];\n                arg_ch = &uStack168;\n                puVar9 = arg_8h;\n                cVar3 = fcn.0040c4db(arg_8h, arg_ch, &uStack176);\n                if (cVar3 != '\\0') {\n                    *(**(*0x4d1924 + iVar6 * 4) + 0x96) = *(arg_10h + 4);\n                    fcn.00497d90(arg_10h[1], 0);\n                    if (*(**(*0x4d1924 + arg_ch * 4) + 0x28) != 0) {\n                        iVar6 = **(*0x4d1924 + arg_ch * 4) + 0x24;\n                        *0x4d18ec = arg_8h;\n                        if (iVar6 != 0x4d18f0) {\n                            arg_ch = puVar9;\n                            fcn.0040c1c3(iVar6);\n                        }\n                        *0x4d1900 = *(**(*0x4d1924 + arg_ch * 4) + 0x98);\n                        (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x1030, arg_10h[4], fcn.00497d85);\n                    }\n                }\n            }\n            goto code_r0x00499503;\n        }\n        if (uVar7 == 0xfffffff4) {\n            uVar10 = *arg_10h;\n            iVar6 = fcn.0041adc4(uVar10);\n            if (iVar6 != -1) {\n                iVar6 = **(*0x4d1924 + iVar6 * 4);\n                cVar3 = *(iVar6 + 0x90);\n                if ((cVar3 == '\\x10') || (cVar3 == '\\x13')) {\n                    if (arg_10h[3] == 1) {\n                        return 0x20;\n                    }\n                    if (arg_10h[3] == 0x10001) {\n                        puStack156 = *(iVar6 + 0x48);\n                        cVar3 = fcn.0040c4db(arg_10h[0xb], &uStack172, &stack0xffffff4c);\n                        if ((cVar3 != '\\0') &&\n                           (uVar7 = (*_sym.imp.USER32.dll_GetWindowLongW)\n                                              (*(**(*0x4d1924 + uVar10 * 4) + 0x34), 0xfffffff0), \n                           (uVar7 & 0x8000000) == 0)) {\n                            if (((*(arg_10h + 10) & 0x11) != 0) && (*(**(*0x4d1924 + uVar10 * 4) + 0x90) != '\\x14'))\n                            goto code_r0x00499503;\n                            uVar7 = *(**(*0x4d1924 + uVar10 * 4) + 0x4c);\n                            if (uVar7 != 0xffffffff) {\n                                arg_10h[0xc] = uVar7;\n                            }\n                            uVar10 = *(**(*0x4d1924 + uVar10 * 4) + 0x48);\n                            if ((-1 < uVar10) && ((puStack156 != 0xfe000000 || ((*(arg_10h + 9) & 1) != 0)))) {\n                                arg_10h[0xd] = uVar10;\n                            }\n                        }\n                        return 0;\n                    }\n                }\n            }\n            goto code_r0x00499503;\n        }\n        if (uVar7 == 0xfffffffb) {\n            uStack172 = uStack172 & 0xffffff;\n            fcn.0041ea9a(uVar10, 1);\n            (*_sym.imp.USER32.dll_GetCursorPos)(&uStack172);\n            (*_sym.imp.USER32.dll_ScreenToClient)(*arg_10h, &uStack176);\n            uVar10 = *arg_10h;\n            uStack160 = fcn.0041adc4(uVar10);\n            if (uStack160 == 0xffffffff) {\n                uVar10 = (*_sym.imp.USER32.dll_GetParent)();\n                uStack160 = fcn.0041adc4(uVar10);\n                if (uStack160 == 0xffffffff) goto code_r0x00499503;\n                uStack176 = CONCAT13(1, uStack176);\n            }\n            cVar3 = *(**(*0x4d1924 + uStack160 * 4) + 0x90);\n            uStack132 = uStack160;\n            if (cVar3 == '\\x10') {\n                uStack152 = uStack168;\n                uStack148 = uStack164;\n                uVar10 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x1111, 0);\n                if (uVar10 != 0) {\n                    uStack124 = 4;\n                    uStack120 = uVar10;\n                    (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x113e, 0, &uStack124);\n                    if ((uStack160 & 0x46) != 0) {\n                        fcn.0040c4db(uStack88, &stack0xffffff44, &stack0xffffff3c);\n                    }\n                }\n                (*_sym.imp.USER32.dll_ClientToScreen)(*arg_10h, &stack0xffffff48);\n                iVar6 = *(**(*0x4d1924 + uStack160 * 4) + 0xc);\n                if (iVar6 != 0) {\n                    (*_sym.imp.USER32.dll_TrackPopupMenuEx)(iVar6, 0x80, uStack168, uStack164, *puStack156);\n                    return 1;\n                }\n            }\n            else if (cVar3 == '\\x13') {\n                uStack128 = uStack168;\n                uStack124 = uStack164;\n                iVar6 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x1012, 0);\n                if ((-1 < iVar6) && (uStack176._3_1_ == '\\0')) {\n                    uStack68 = 4;\n                    iStack64 = iVar6;\n                    iVar6 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x104b, 0);\n                    if (iVar6 == 0) goto code_r0x00499503;\n                    if (((uStack120 & 0xe) != 0) &&\n                       (((cVar3 = fcn.0040c4db(uStack36, &uStack172, &stack0xffffff4c),  cVar3 == '\\0' ||\n                         (iVar6 = **(*0x4d1924 + uVar10 * 4),  iVar6 == 0)) ||\n                        (uStack172 = uVar10,  *(iVar6 + 0xc) == 0)))) {\n                        uStack172 = uStack144;\n                    }\n                }\n                (*_sym.imp.USER32.dll_ClientToScreen)(*arg_10h);\n                iVar6 = *(**(*0x4d1924 + uStack160 * 4) + 0xc);\n                if (iVar6 != 0) {\n                    (*_sym.imp.USER32.dll_TrackPopupMenuEx)(iVar6, 0, uStack168, uStack164, *puStack156);\n                }\n            }\n            goto code_r0x00499503;\n        }\n        if (uVar7 != 0xfffffffe) goto code_r0x00499503;\n        fcn.0041ea9a(uVar10, 1);\n        (*_sym.imp.USER32.dll_GetCursorPos)(&uStack172);\n        (*_sym.imp.USER32.dll_ScreenToClient)(*arg_10h, &uStack176);\n        uVar10 = *arg_10h;\n        iVar8 = fcn.0041adc4(uVar10);\n        if ((iVar8 == -1) || (uVar1 = *(**(*0x4d1924 + iVar8 * 4) + 0x90),  uVar1 < 0x10)) goto code_r0x00499503;\n        if (uVar1 < 0x12) {\n            uStack152 = uStack168;\n            uStack148 = uStack164;\n            iVar6 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x1111, 0);\n            if (iVar6 != 0) {\n                uStack108 = 0xc;\n                uStack96 = 0xf000;\n                iStack104 = iVar6;\n                (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x113e, 0);\n                pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n                if ((uStack144 & 0x46) != 0) {\n                    (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x110b, 9);\n                    (*pcVar2)(*arg_10h, 0x110b, 9, puStack156);\n                }\n            }\n            goto code_r0x00499503;\n        }\n        if (uVar1 != 0x13) goto code_r0x00499503;\n        uStack128 = uStack168;\n        uStack124 = uStack164;\n        iVar8 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x1012, 0);\n        if (iVar8 == -1) goto code_r0x00499503;\n        uStack68 = 4;\n        iStack64 = iVar8;\n        (*_sym.imp.USER32.dll_SendMessageW)(*arg_10h, 0x104b, 0);\n        uVar7 = uStack120 & 0xe;\njoined_r0x004999ab:\n        if (uVar7 == 0) goto code_r0x00499503;\n    }\n    fcn.00497d90(uVar10, iVar6);\ncode_r0x00499503:\n    uVar5 = (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x4e, wParam);\n    return uVar5;\n}\n",
        "token_count": 4111
    },
    "00499d66": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00499d66(uint hDlg, uint arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    int32_t nIDButton;\n    uint uVar2;\n    \n    nIDButton = fcn.0041adc4(arg_ch);\n    if (((nIDButton != -1) &&\n        (((arg_10h == 8 && (*(**(*0x4d1924 + nIDButton * 4) + 0x90) == '\\x12')) ||\n         ((arg_10h == 4 && (*(**(*0x4d1924 + nIDButton * 4) + 0x90) == '\\x16')))))) &&\n       (cVar1 = fcn.00497d90(nIDButton, arg_10h),  cVar1 != '\\0')) {\n        return;\n    }\n    if (arg_18h == 0) {\n        uVar2 = 0x115;\n    }\n    else {\n        uVar2 = 0x114;\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, uVar2, arg_14h << 0x10 | arg_10h & 0xffff, arg_ch);\n    return;\n}\n",
        "token_count": 291
    },
    "00499de5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00499de5(int32_t arg_8h, int32_t wParam, uint32_t arg_10h, int32_t lParam)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t lpRect;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t lpPoint;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0041b021(arg_8h);\n    iVar1 = **(*0x4d1910 + iVar1 * 4);\n    if (*(iVar1 + 0x14) == 0) {\n        if (arg_8h == wParam) {\n            (*_sym.imp.USER32.dll_GetClientRect)(arg_8h, &lpRect);\n            (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n            (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &lpPoint);\n            if ((((lpRect <= lpPoint) && (lpPoint <= var_10h)) && (var_14h <= var_4h)) && (var_4h <= var_ch))\n            goto code_r0x00499e0c;\n        }\n        uVar2 = (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, 0x20, wParam, arg_10h & 0xffff | lParam << 0x10);\n    }\n    else {\ncode_r0x00499e0c:\n        fcn.00496ed3(*(iVar1 + 0x10));\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 369
    },
    "00499e78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00499e78(int32_t hDlg, int32_t wParam, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint16_t uVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint16_t uVar7;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = fcn.0041b021(hDlg);\n    puVar2 = **(*0x4d1910 + iVar4 * 4);\n    if (*(puVar2 + 0x3a) != '\\0') {\n        puVar2[0x11] = arg_10h;\n        puVar2[0x12] = arg_14h;\n        if (puVar2[0x67] != 0) {\n            iVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xf);\n            puVar2[0x12] = puVar2[0x12] + iVar4;\n        }\n    }\n    iVar4 = puVar2[0x11];\n    var_8h = puVar2[0x12];\n    iVar5 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x11);\n    if (iVar5 < arg_14h) {\n        iVar5 = (*_sym.imp.USER32.dll_GetSystemMetrics)(4);\n        var_8h = var_8h + iVar5;\n    }\n    if (puVar2[0x67] != 0) {\n        iVar5 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xf);\n        var_8h = var_8h - iVar5;\n    }\n    if ((((iVar4 < 1) || (var_8h < 1)) || (arg_10h < 1)) || ((arg_14h < 1 || (wParam == 1)))) {\n        (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 5, wParam, arg_14h << 0x10 | arg_10h & 0xffff);\n    }\n    else {\n        var_14h = 3;\n        if (2 < *0x4d1934) {\n            do {\n                piVar3 = **(*0x4d1924 + var_14h * 4);\n                if (((piVar3 != NULL) && (piVar3[1] == puVar2[1])) && (*piVar3 != 0)) {\n                    uVar1 = *(piVar3 + 0x86);\n                    iVar5 = (*(piVar3 + 0x22) * arg_10h) / iVar4;\n                    iVar6 = (*(piVar3 + 0x8a) * arg_14h) / var_8h;\n                    wParam = (*(piVar3 + 0x23) * arg_10h) / iVar4;\n                    hDlg = (*(piVar3 + 0x8e) * arg_14h) / var_8h;\n                    uVar7 = *(piVar3 + 0x86);\n                    if (uVar7 != 0) {\n                        if (((uVar7 & 0x100) != 0) && (wParam = *(piVar3 + 0x23),  (uVar7 & 6) == 0)) {\n                            if ((uVar7 & 8) == 0) {\n                                if (arg_10h / 2 < iVar5) {\n                                    iVar5 = (arg_10h - (((iVar4 - *(piVar3 + 0x22)) - wParam) * arg_10h) / iVar4) -\n                                            wParam;\n                                }\n                            }\n                            else {\n                                iVar5 = (arg_10h - iVar4) / 2 + *(piVar3 + 0x22);\n                            }\n                            uVar7 = *(piVar3 + 0x86);\n                        }\n                        if ((uVar7 & 0x200) != 0) {\n                            hDlg = *(piVar3 + 0x8e);\n                            if ((uVar7 & 0x60) == 0) {\n                                if (uVar7 < '\\0') {\n                                    iVar6 = (arg_14h - var_8h) / 2 + *(piVar3 + 0x8a);\n                                }\n                                else if (arg_14h / 2 < iVar6) {\n                                    iVar6 = (arg_14h - (((var_8h - *(piVar3 + 0x8a)) - hDlg) * arg_14h) / var_8h) - hDlg\n                                    ;\n                                }\n                            }\n                        }\n                        if ((uVar1 & 2) != 0) {\n                            iVar5 = *(piVar3 + 0x22);\n                        }\n                        if ((uVar1 & 4) != 0) {\n                            if ((uVar1 & 2) == 0) {\n                                iVar5 = (((*(piVar3 + 0x23) + *(piVar3 + 0x22)) - wParam) - iVar4) + arg_10h;\n                            }\n                            else {\n                                wParam = (((*(piVar3 + 0x23) + *(piVar3 + 0x22)) - iVar5) - iVar4) + arg_10h;\n                            }\n                        }\n                        if ((uVar1 & 0x20) != 0) {\n                            iVar6 = *(piVar3 + 0x8a);\n                        }\n                        if ((uVar1 & 0x40) != 0) {\n                            if ((uVar1 & 0x20) == 0) {\n                                iVar6 = (((*(piVar3 + 0x8e) + *(piVar3 + 0x8a)) - hDlg) - var_8h) + arg_14h;\n                            }\n                            else {\n                                hDlg = (((*(piVar3 + 0x8e) + *(piVar3 + 0x8a)) - iVar6) - var_8h) + arg_14h;\n                            }\n                        }\n                    }\n                    (*_sym.imp.USER32.dll_MoveWindow)(*piVar3, iVar5, iVar6, wParam, hDlg, 0);\n                    if (*(piVar3 + 0x24) == '\\0') {\n                        (*_sym.imp.USER32.dll_SendMessageW)(*piVar3, 0x142, 0, 0xffff);\n                    }\n                    else if ((*(piVar3 + 0x24) == '\\x16') && ((*(piVar3 + 0x92) & 0x20) == 0)) {\n                        (*_sym.imp.USER32.dll_SendMessageW)(*piVar3, 0x469, piVar3[0xd], 0);\n                        if ((*(piVar3 + 0x93) != 0xff) && (*(piVar3 + 0x93) != puVar2[100])) {\n                            (*_sym.imp.USER32.dll_ShowWindow)(*piVar3, 0);\n                        }\n                    }\n                }\n                var_14h = var_14h + 1;\n            } while (var_14h <= *0x4d1934);\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(*puVar2, 0, 1);\n        *(puVar2 + 0x61) = 1;\n    }\n    return;\n}\n",
        "token_count": 1668
    },
    "0049a2b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.0049a2b4(uint32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint16_t *in_ECX;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *in_ECX;\n    do {\n        if (uVar1 == 0) {\n            return NULL;\n        }\n        if (uVar1 == 0x70) {\n            uVar2 = in_ECX[1];\ncode_r0x0049a3e3:\n            in_ECX = in_ECX + uVar2;\n        }\n        else if (uVar1 == 0x7c) {\n            if (arg_8h < 0) {\n                return in_ECX;\n            }\n            in_ECX = in_ECX + 2;\n        }\n        else {\n            if ((((uVar1 == 0x85) || (uVar1 == 0x8a)) || (uVar1 == 0x86)) || (uVar1 == 0x8b)) {\n                if (in_ECX[2] == arg_8h) {\n                    return in_ECX;\n                }\n                uVar2 = *(uVar1 + 0x4c2160);\n                goto code_r0x0049a3e3;\n            }\n            uVar2 = uVar1;\n            if (uVar2 < 0x96) {\n                if (uVar2 == 0x95) {\ncode_r0x0049a398:\n                    in_ECX = in_ECX + in_ECX[1];\n                }\n                else {\n                    if (uVar2 < 0x55) goto code_r0x0049a39f;\n                    if (uVar2 < 0x5b) {\ncode_r0x0049a36a:\n                        uVar1 = in_ECX[1];\n                    }\n                    else {\n                        if (0x5d < uVar2) {\n                            if (uVar2 < 0x61) goto code_r0x0049a36a;\n                            if (uVar2 != 0x61) goto code_r0x0049a39f;\n                        }\n                        uVar1 = in_ECX[2];\n                    }\n                    if ((uVar1 == 0x10) || (uVar1 == 0xf)) {\n                        in_ECX = in_ECX + 2;\n                    }\n                }\n            }\n            else if (((uVar2 == 0x97) || (uVar2 == 0x99)) || (uVar2 == 0x9b)) goto code_r0x0049a398;\ncode_r0x0049a39f:\n            in_ECX = in_ECX + *(uVar2 + 0x4c2160);\n            if (((in_EDX != 0) && (uVar2 - 0x1d < 0x38)) && ((in_ECX[-1] & 0xfc00) == 0xd800)) {\n                in_ECX = in_ECX + 1;\n            }\n        }\n        uVar1 = *in_ECX;\n    } while( true );\n}\n",
        "token_count": 711
    },
    "0049a9c2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0049a9c2(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    uint16_t *puVar4;\n    int32_t in_EDX;\n    uint32_t uVar5;\n    uint16_t *puVar6;\n    int32_t iVar7;\n    int32_t *var_14h;\n    uint16_t *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = -1;\n    puVar6 = in_ECX + 4;\n    var_8h = in_EDX;\ncode_r0x0049a9d7:\n    iVar7 = 0;\n    var_4h = iVar7;\ncode_r0x0049a9dc:\n    iVar2 = var_4h;\n    uVar5 = *puVar6;\n    // switch table (162 cases) at 0x49abee\n    switch(uVar5) {\n    case 0:\n    case 0x77:\n    case 0x78:\n    case 0x9e:\n    case 0x9f:\n        goto code_r0x0049aa45;\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n    case 0x17:\n    case 0x18:\n    case 0x19:\n    case 0x1a:\n    case 0x1b:\n    case 0x1c:\n    case 0x76:\n    case 0x7c:\n    case 0x8d:\n    case 0x8e:\n    case 0x8f:\n    case 0x90:\n    case 0x91:\n    case 0x96:\n    case 0x98:\n    case 0x9a:\n    case 0x9c:\n    case 0x9d:\n    case 0xa0:\n        puVar6 = puVar6 + *(uVar5 + 0x4c2160);\n        goto code_r0x0049a9dc;\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n    case 0x12:\n    case 0x13:\n    case 0x14:\n    case 0x15:\n        goto code_r0x0049ab85;\n    case 0xe:\n        return -2;\n    case 0xf:\n    case 0x10:\n        puVar6 = puVar6 + 2;\n        goto code_r0x0049ab85;\n    case 0x11:\n    case 0x16:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x27:\n    case 0x28:\n    case 0x2a:\n    case 0x2b:\n    case 0x2c:\n    case 0x2d:\n    case 0x2e:\n    case 0x2f:\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n    case 0x34:\n    case 0x35:\n    case 0x37:\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n    case 0x40:\n    case 0x41:\n    case 0x42:\n    case 0x44:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n    case 0x51:\n    case 0x52:\n    case 0x53:\n    case 0x54:\n    case 0x55:\n    case 0x56:\n    case 0x57:\n    case 0x58:\n    case 0x59:\n    case 0x5a:\n    case 0x5b:\n    case 0x5c:\n    case 0x5e:\n    case 0x5f:\n    case 0x60:\n    case 0x61:\n    case 0x71:\n    case 0x72:\n    case 0x73:\n    case 0x74:\n    case 0x79:\n    case 0x7a:\n    case 0x7b:\n    case 0x84:\n    case 0x86:\n    case 0x88:\n    case 0x89:\n    case 0x8a:\n    case 0x8b:\n    case 0x8c:\n    case 0x92:\n    case 0x93:\n    case 0x94:\n    case 0xa1:\n        goto code_r0x0049abe7;\n    case 0x1d:\n    case 0x1e:\n    case 0x1f:\n    case 0x20:\n        iVar7 = iVar7 + 1;\n        puVar6 = puVar6 + 2;\n        goto code_r0x0049ab2c;\n    case 0x29:\n    case 0x36:\n    case 0x43:\n    case 0x50:\n        iVar7 = iVar7 + puVar6[1];\n        puVar6 = puVar6 + 3;\ncode_r0x0049ab2c:\n        var_4h = iVar7;\n        if ((var_8h != 0) && ((puVar6[-1] & 0xfc00) == 0xd800)) goto code_r0x0049ab53;\n        goto code_r0x0049a9dc;\n    case 0x5d:\n        var_4h = iVar7 + puVar6[1];\n        if ((puVar6[2] == 0x10) || (puVar6[2] == 0xf)) {\n            puVar6 = puVar6 + 2;\n        }\n        goto code_r0x0049abc9;\n    default:\n        return -4;\n    case 0x6e:\n    case 0x6f:\n    case 0x70:\n        if (uVar5 == 0x70) {\n            uVar5 = puVar6[1];\n        }\n        else {\n            uVar5 = 0x11;\n        }\n        puVar6 = puVar6 + uVar5;\n        uVar1 = *puVar6;\n        if (uVar1 < 0x62) {\ncode_r0x0049abd1:\n            iVar7 = iVar7 + 1;\n            var_4h = iVar7;\n        }\n        else {\n            if (uVar1 < 0x68) {\n                return -1;\n            }\n            if (0x69 < uVar1) {\n                if (uVar1 < 0x6d) {\n                    return -1;\n                }\n                if (uVar1 != 0x6d) goto code_r0x0049abd1;\n            }\n            if (puVar6[1] != puVar6[2]) {\n                return -1;\n            }\n            var_4h = iVar7 + puVar6[1];\ncode_r0x0049abc9:\n            puVar6 = puVar6 + 3;\n            iVar7 = var_4h;\n        }\n        goto code_r0x0049a9dc;\n    case 0x75:\n        if (arg_8h == 0) {\n            return -3;\n        }\n        var_10h = *(arg_ch + 0x14) + puVar6[1] * 2;\n        puVar4 = var_10h;\n        do {\n            puVar4 = puVar4 + puVar4[1];\n        } while (*puVar4 == 0x77);\n        if ((var_10h < puVar6) && (puVar6 < puVar4)) {\n            return -1;\n        }\n        piVar3 = arg_10h;\n        if (arg_10h != NULL) {\n            do {\n                if (piVar3[1] == var_10h) break;\n                piVar3 = *piVar3;\n            } while (piVar3 != NULL);\n            if (piVar3 != NULL) {\n                return -1;\n            }\n        }\n        var_14h = arg_10h;\n        var_4h = fcn.0049a9c2(arg_8h, arg_ch, &var_14h);\n        if (var_4h < 0) {\n            return var_4h;\n        }\n        var_4h = iVar2 + var_4h;\n        break;\n    case 0x7d:\n    case 0x7e:\n    case 0x7f:\n    case 0x80:\n        do {\n            puVar6 = puVar6 + puVar6[1];\n        } while (*puVar6 == 0x77);\n        break;\n    case 0x81:\n    case 0x82:\n    case 0x83:\n    case 0x85:\n    case 0x87:\n        var_4h = fcn.0049a9c2(arg_8h, arg_ch, arg_10h);\n        if (var_4h < 0) {\n            return var_4h;\n        }\n        var_4h = iVar7 + var_4h;\n        do {\n            puVar6 = puVar6 + puVar6[1];\n        } while (*puVar6 == 0x77);\n        break;\n    case 0x95:\n    case 0x97:\n    case 0x99:\n    case 0x9b:\n        goto code_r0x0049ab04;\n    }\n    puVar6 = puVar6 + 2;\n    iVar7 = var_4h;\n    goto code_r0x0049a9dc;\ncode_r0x0049ab04:\n    puVar6 = puVar6 + *(uVar5 + 0x4c2160) + puVar6[1];\n    goto code_r0x0049a9dc;\ncode_r0x0049ab85:\n    iVar7 = iVar7 + 1;\ncode_r0x0049ab53:\n    puVar6 = puVar6 + 1;\n    var_4h = iVar7;\n    goto code_r0x0049a9dc;\ncode_r0x0049aa45:\n    iVar2 = iVar7;\n    if ((-1 < var_ch) && (iVar2 = var_ch,  var_ch != iVar7)) {\ncode_r0x0049abe7:\n        return -1;\n    }\n    var_ch = iVar2;\n    if (*puVar6 != 0x77) {\n        return var_ch;\n    }\n    puVar6 = puVar6 + 2;\n    goto code_r0x0049a9d7;\n}\n",
        "token_count": 2584
    },
    "0049adc5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0049adc5(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *in_ECX;\n    uint32_t uVar3;\n    uint32_t in_EDX;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    uVar4 = *in_ECX;\n    if (uVar4 <= in_EDX) {\n        do {\n            uVar3 = *((*(uVar4 / 0x80 + 0x4bff60) * 0x80 + uVar4 % 0x80) * 2 + 0x4b1c60);\n            uVar1 = *(uVar3 * 8 + 0x4af413);\n            if (uVar1 != 0) {\n                *arg_8h = uVar4;\n                *in_ECX = uVar4 + 1;\n                return uVar1;\n            }\n            uVar1 = *(uVar3 * 8 + 0x4af414) + uVar4;\n        } while ((uVar1 == uVar4) && (uVar4 = uVar4 + 1,  uVar4 <= in_EDX));\n        if (uVar4 <= in_EDX) {\n            *arg_8h = uVar1;\n            do {\n                uVar3 = uVar1;\n                uVar1 = uVar3 + 1;\n                uVar4 = uVar4 + 1;\n                if ((in_EDX < uVar4) ||\n                   (uVar2 = *((*(uVar4 / 0x80 + 0x4bff60) * 0x80 + uVar4 % 0x80) * 2 + 0x4b1c60), \n                   *(uVar2 * 8 + 0x4af413) != '\\0')) break;\n            } while (*(uVar2 * 8 + 0x4af414) + uVar4 == uVar1);\n            *in_ECX = uVar4;\n            *arg_ch = uVar3;\n            return 0;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 493
    },
    "0049ae7f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0049ae7f(uint32_t *arg_8h, uint32_t *arg_ch, uint *arg_10h)\n\n{\n    uint8_t uVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    int16_t **in_ECX;\n    uint *in_EDX;\n    int16_t *piVar6;\n    int32_t iVar7;\n    uint var_58h;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint *var_8h;\n    uint8_t *var_4h;\n    \n    piVar4 = *in_ECX;\n    piVar6 = piVar4 + 1;\n    var_58h._0_2_ = *piVar6;\n    if (var_58h != 0) {\n        iVar7 = 0;\n        *in_EDX = 0;\n        if (var_58h != 0x7b) {\n            var_58h._2_2_ = 0;\ncode_r0x0049aef5:\n            *in_ECX = piVar6;\n            var_ch = 0xa9;\n            do {\n                iVar5 = var_ch + iVar7 >> 1;\n                var_8h = &var_58h;\n                var_4h = *(iVar5 * 6 + 0x4c4f70) + 0x4c5460;\n                do {\n                    uVar3 = *var_8h;\n                    var_18h = uVar3;\n                    if ((uVar3 == 0) && (*var_4h == 0)) {\n                        *arg_8h = *(iVar5 * 6 + 0x4c4f72);\n                        *arg_ch = *(iVar5 * 6 + 0x4c4f74);\n                        return 1;\n                    }\n                    uVar1 = *var_4h;\n                    var_8h = var_8h + 2;\n                    var_4h = var_4h + 1;\n                    var_14h = uVar1;\n                } while (uVar3 == uVar1);\n                if (uVar3 < uVar1 || uVar3 == uVar1) {\n                    var_ch = iVar5;\n                }\n                else {\n                    iVar7 = iVar5 + 1;\n                }\n            } while (iVar7 < var_ch);\n            *arg_10h = 0x2f;\n            goto code_r0x0049aed9;\n        }\n        if (piVar4[2] == 0x5e) {\n            *in_EDX = 1;\n            piVar6 = piVar4 + 2;\n        }\n        iVar5 = 0;\n        do {\n            piVar6 = piVar6 + 1;\n            iVar2 = *piVar6;\n            if (iVar2 == 0) break;\n            if (iVar2 == 0x7d) {\n                *(&var_58h + iVar5 * 2) = 0;\n                goto code_r0x0049aef5;\n            }\n            *(&var_58h + iVar5 * 2) = iVar2;\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < 0x1f);\n    }\n    *arg_10h = 0x2e;\ncode_r0x0049aed9:\n    *in_ECX = piVar6;\n    return 0;\n}\n",
        "token_count": 793
    },
    "0049b122": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.0049b122(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint16_t *puVar2;\n    int32_t in_ECX;\n    uint16_t *in_EDX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    uVar3 = *in_EDX;\n    uVar4 = uVar3;\n    if (0xff < uVar3) {\n        uVar4 = 0xff;\n    }\n    arg_8h = ~-(0xff < uVar3) & arg_8h;\n    *((uVar4 >> 3) + in_ECX) = *((uVar4 >> 3) + in_ECX) | 1 << (uVar4 & 7);\n    if ((arg_10h == 0) || (uVar4 < 0x80)) {\n        if ((arg_8h != 0) && ((*(uVar4 + *(arg_ch + 0xc)) & 2) != 0)) {\n            uVar1 = *(*(arg_ch + 4) + uVar4);\n            uVar4 = uVar1 >> 3;\n            *(uVar4 + in_ECX) = *(uVar4 + in_ECX) | 1 << (uVar1 & 7);\n        }\n        puVar2 = in_EDX + 1;\n    }\n    else {\n        uVar4 = *in_EDX;\n        puVar2 = in_EDX + 1;\n        if ((uVar4 & 0xfc00) == 0xd800) {\n            uVar4 = ((uVar4 & 0x3ff) << 10 | *puVar2 & 0x3ff) + 0x10000;\n            puVar2 = in_EDX + 2;\n        }\n        if (arg_8h != 0) {\n            uVar4 = uVar4 + *(*((*((uVar4 >> 7) + 0x4bff60) * 0x80 + (uVar4 & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af414);\n            if (0xff < uVar4) {\n                uVar4 = 0xff;\n            }\n            *((uVar4 >> 3) + in_ECX) = *((uVar4 >> 3) + in_ECX) | 1 << (uVar4 & 7);\n        }\n    }\n    return puVar2;\n}\n",
        "token_count": 582
    },
    "0049b23b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0049b23b(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint32_t *puVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint16_t *in_EDX;\n    uint16_t *puVar5;\n    int32_t iVar6;\n    uint16_t *puVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint16_t *puVar10;\n    uint16_t *puVar11;\n    uint16_t *puVar12;\n    uint var_4h;\n    \n    puVar12 = *(arg_ch + 0x78) + *(*(arg_ch + 0xc) + in_ECX * 4) * 2;\n    if (arg_8h < 0) {\ncode_r0x0049b3c1:\n        iVar6 = -1;\n    }\n    else {\n        puVar7 = in_EDX;\n        if (arg_10h == 0) {\n            if (0 < arg_8h) {\n                do {\n                    arg_8h = arg_8h + -1;\n                    if (*(arg_ch + 0x7c) <= puVar7) {\n                        return -2;\n                    }\n                    uVar1 = *puVar12;\n                    puVar12 = puVar12 + 1;\n                    uVar2 = *puVar7;\n                    puVar7 = puVar7 + 1;\n                    if (uVar1 != uVar2) goto code_r0x0049b3c1;\n                } while (0 < arg_8h);\n            }\n        }\n        else if (*(arg_ch + 0x50) == 0) {\n            if (0 < arg_8h) {\n                iVar6 = arg_8h;\n                do {\n                    iVar6 = iVar6 + -1;\n                    if (*(arg_ch + 0x7c) <= puVar7) {\n                        return -2;\n                    }\n                    arg_8h = *((puVar12 - in_EDX) + puVar7);\n                    uVar9 = *puVar7;\n                    if (arg_8h < 0x100) {\n                        arg_8h = *(*(arg_ch + 0x3c) + arg_8h);\n                    }\n                    if (uVar9 < 0x100) {\n                        uVar9 = *(*(arg_ch + 0x3c) + uVar9);\n                    }\n                    if (arg_8h != uVar9) goto code_r0x0049b3c1;\n                    puVar7 = puVar7 + 1;\n                } while (0 < iVar6);\n            }\n        }\n        else if (puVar12 < puVar12 + arg_8h) {\n            puVar5 = in_EDX;\n            puVar10 = puVar12;\n            do {\n                if (*(arg_ch + 0x7c) <= puVar5) {\n                    return -2;\n                }\n                uVar9 = *puVar5;\n                puVar7 = puVar5 + 1;\n                if ((uVar9 & 0xfc00) == 0xd800) {\n                    uVar9 = ((uVar9 & 0x3ff) << 10 | *puVar7 & 0x3ff) + 0x10000;\n                    puVar7 = puVar5 + 2;\n                }\n                uVar8 = *puVar10;\n                puVar11 = puVar10 + 1;\n                if ((uVar8 & 0xfc00) == 0xd800) {\n                    uVar8 = ((uVar8 & 0x3ff) << 10 | *puVar11 & 0x3ff) + 0x10000;\n                    puVar11 = puVar10 + 2;\n                }\n                uVar4 = *((*((uVar8 >> 7) + 0x4bff60) * 0x80 + (uVar8 & 0x7f)) * 2 + 0x4b1c60);\n                if ((uVar9 != uVar8) && (uVar9 != *(uVar4 * 8 + 0x4af414) + uVar8)) {\n                    puVar3 = *(uVar4 * 8 + 0x4af413) * 4 + 0x4b0a90;\n                    do {\n                        uVar8 = *puVar3;\n                        if (uVar9 < uVar8) goto code_r0x0049b3c1;\n                        puVar3 = puVar3 + 1;\n                    } while (uVar9 != uVar8);\n                }\n                puVar5 = puVar7;\n                puVar10 = puVar11;\n            } while (puVar11 < puVar12 + arg_8h);\n        }\n        iVar6 = puVar7 - in_EDX >> 1;\n    }\n    return iVar6;\n}\n",
        "token_count": 1114
    },
    "0049b436": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint16_t __cdecl fcn.0049b436(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint16_t uVar5;\n    uint32_t in_ECX;\n    uint16_t *in_EDX;\n    uint32_t uVar6;\n    uint16_t uVar7;\n    uint16_t *puVar8;\n    uint16_t *puVar9;\n    uint16_t *puVar10;\n    bool bVar11;\n    bool bVar12;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar7 = *in_EDX;\n    uVar5 = uVar7 & 1;\n    if (in_ECX < 0x100) {\n        if ((uVar7 & 4) == 0) {\n            if ((uVar7 & 2) == 0) {\n                return uVar5;\n            }\n            return (*((in_ECX >> 3) + 2 + in_EDX) & 1 << (in_ECX & 7)) != 0;\n        }\n        if (((uVar7 & 2) != 0) && ((*((in_ECX >> 3) + 2 + in_EDX) & 1 << (in_ECX & 7)) != 0)) {\n            return uVar5 ^ 1;\n        }\n    }\n    puVar8 = in_EDX + 1;\n    if ((uVar7 & 2) != 0) {\n        puVar8 = in_EDX + 0x11;\n    }\n    uVar7 = *puVar8;\n    if (uVar7 != 0) {\n        do {\n            bVar11 = true;\n            uVar4 = puVar8[1];\n            if (uVar7 == 1) {\n                puVar10 = puVar8 + 2;\n                if ((arg_8h != 0) && ((uVar4 & 0xfc00) == 0xd800)) {\n                    uVar4 = ((uVar4 & 0x3ff) << 10 | *puVar10 & 0x3ff) + 0x10000;\n                    puVar10 = puVar8 + 3;\n                }\n                if (in_ECX == uVar4) goto code_r0x0049b81a;\n                goto code_r0x0049b5a8;\n            }\n            if (uVar7 == 2) {\n                puVar9 = puVar8 + 2;\n                if (arg_8h == 0) {\n                    uVar6 = *puVar9;\n                    puVar10 = puVar8 + 3;\n                }\n                else {\n                    if ((uVar4 & 0xfc00) == 0xd800) {\n                        uVar4 = ((uVar4 & 0x3ff) << 10 | *puVar9 & 0x3ff) + 0x10000;\n                        puVar9 = puVar8 + 3;\n                    }\n                    uVar6 = *puVar9;\n                    puVar10 = puVar9 + 1;\n                    if ((uVar6 & 0xfc00) == 0xd800) {\n                        uVar6 = ((uVar6 & 0x3ff) << 10 | *puVar10 & 0x3ff) + 0x10000;\n                        puVar10 = puVar9 + 2;\n                    }\n                }\n                if ((uVar4 <= in_ECX) && (in_ECX <= uVar6)) goto code_r0x0049b81a;\n                goto code_r0x0049b5a8;\n            }\n            uVar6 = *((*(in_ECX / 0x80 + 0x4bff60) * 0x80 + in_ECX % 0x80) * 2 + 0x4b1c60);\n    // switch table (14 cases) at 0x49b82e\n            switch(uVar4) {\n            case 0:\n                goto code_r0x0049b5f9;\n            case 1:\n                cVar1 = *(uVar6 * 8 + 0x4af411);\n                if ((cVar1 != '\\t') && (cVar1 != '\\x05')) {\n                    bVar12 = cVar1 == '\\b';\ncode_r0x0049b811:\n                    if (!bVar12) goto code_r0x0049b813;\n                }\n                break;\n            case 2:\n                bVar11 = puVar8[2] == *(*(uVar6 * 8 + 0x4af411) * 4 + 0x4c5370);\n                goto code_r0x0049b63a;\n            case 3:\n                uVar2 = *(uVar6 * 8 + 0x4af411);\n                goto code_r0x0049b64a;\n            case 4:\n                uVar2 = *(uVar6 * 8 + 0x4af410);\ncode_r0x0049b64a:\n                bVar11 = puVar8[2] == uVar2;\ncode_r0x0049b63a:\n                bVar11 = bVar11 == (uVar7 == 3);\n                goto code_r0x0049b7c0;\n            case 5:\n                iVar3 = *(*(uVar6 * 8 + 0x4af411) * 4 + 0x4c5370);\n                if (iVar3 != 1) {\n                    bVar12 = iVar3 == 3;\n                    goto code_r0x0049b811;\n                }\n                break;\n            case 6:\n            case 7:\n                if (in_ECX < 0x180f) {\n                    if (in_ECX != 0x180e) {\n                        if (in_ECX < 9) goto code_r0x0049b712;\n                        if ((((0xd < in_ECX) && (in_ECX != 0x20)) && (in_ECX != 0x85)) && (in_ECX != 0xa0)) {\n                            bVar11 = in_ECX == 0x1680;\ncode_r0x0049b70c:\n                            if (!bVar11) goto code_r0x0049b712;\n                        }\n                    }\n                }\n                else {\n                    if (in_ECX < 0x2000) {\ncode_r0x0049b712:\n                        bVar11 = *(*(uVar6 * 8 + 0x4af411) * 4 + 0x4c5370) == 6;\n                        goto code_r0x0049b63a;\n                    }\n                    if (0x200a < in_ECX) {\n                        if (in_ECX < 0x2028) goto code_r0x0049b712;\n                        if (((0x2029 < in_ECX) && (in_ECX != 0x202f)) && (in_ECX != 0x205f)) {\n                            bVar11 = in_ECX == 0x3000;\n                            goto code_r0x0049b70c;\n                        }\n                    }\n                }\n                goto code_r0x0049b5f9;\n            case 8:\n                iVar3 = *(*(uVar6 * 8 + 0x4af411) * 4 + 0x4c5370);\n                if ((iVar3 != 1) && (iVar3 != 3)) {\n                    bVar12 = in_ECX == 0x5f;\n                    goto code_r0x0049b811;\n                }\n                break;\n            default:\n                return 0;\n            case 10:\n                if (in_ECX < 0xa0) {\n                    if ((in_ECX != 0x24) && (in_ECX != 0x40)) {\n                        bVar12 = in_ECX == 0x60;\n                        goto code_r0x0049b811;\n                    }\n                }\n                else {\n                    bVar11 = 0x7ff < in_ECX - 0xd800;\n                }\n                break;\n            case 0xb:\n                uVar2 = *(uVar6 * 8 + 0x4af411);\n                iVar3 = *(uVar2 * 4 + 0x4c5370);\n                if (iVar3 != 6) {\n                    if (iVar3 != 0) break;\n                    if ((uVar2 == 1) && (in_ECX != 0x61c)) {\n                        bVar12 = in_ECX == 0x180e;\ncode_r0x0049b7a9:\n                        if ((!bVar12) && ((in_ECX < 0x2066 || (0x2069 < in_ECX)))) break;\n                    }\n                }\n                goto code_r0x0049b813;\n            case 0xc:\n                uVar2 = *(uVar6 * 8 + 0x4af411);\n                if ((uVar2 != 0x1b) && (uVar2 != 0x1c)) {\n                    if (*(uVar2 * 4 + 0x4c5370) != 0) break;\n                    if (uVar2 == 1) {\n                        bVar12 = in_ECX == 0x61c;\n                        goto code_r0x0049b7a9;\n                    }\n                }\ncode_r0x0049b813:\n                bVar11 = false;\n                break;\n            case 0xd:\n                iVar3 = *(*(uVar6 * 8 + 0x4af411) * 4 + 0x4c5370);\n                if (iVar3 != 4) {\n                    if (in_ECX < 0x80) {\n                        bVar12 = iVar3 == 5;\n                        goto code_r0x0049b811;\n                    }\n                    goto code_r0x0049b813;\n                }\n            }\n            bVar11 = bVar11 == (uVar7 == 3);\ncode_r0x0049b7c0:\n            if (bVar11) {\ncode_r0x0049b81a:\n                return uVar5 ^ 1;\n            }\n            puVar10 = puVar8 + 3;\ncode_r0x0049b5a8:\n            uVar7 = *puVar10;\n            puVar8 = puVar10;\n        } while (uVar7 != 0);\n    }\n    return uVar5;\ncode_r0x0049b5f9:\n    bVar11 = uVar7 == 3;\n    goto code_r0x0049b7c0;\n}\n",
        "token_count": 2386
    },
    "0049b974": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0049b974(uint16_t *arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint16_t *puVar2;\n    uint uVar3;\n    \n    uVar3 = 2;\n    puVar2 = in_ECX + -2;\n    uVar1 = *puVar2;\n    if (arg_10h != 0) {\n        if ((*puVar2 & 0xfc00) == 0xdc00) {\n            puVar2 = in_ECX + -4;\n            uVar1 = *puVar2;\n        }\n        if ((uVar1 & 0xfc00) == 0xd800) {\n            uVar1 = ((uVar1 & 0x3ff) << 10 | puVar2[1] & 0x3ff) + 0x10000;\n        }\n    }\n    if (in_EDX == 2) {\n        if (uVar1 == 10) {\n            if ((puVar2 <= arg_8h) || (puVar2[-1] != 0xd)) {\n                uVar3 = 1;\n            }\n            *arg_ch = uVar3;\n            return 1;\n        }\n        if (uVar1 != 0xd) {\n            return 0;\n        }\n    }\n    else {\n        if (uVar1 == 10) {\n            if ((puVar2 <= arg_8h) || (puVar2[-1] != 0xd)) {\n                uVar3 = 1;\n            }\n            *arg_ch = uVar3;\n            return 1;\n        }\n        if (uVar1 < 0xb) {\n            return 0;\n        }\n        if (((0xd < uVar1) && (uVar1 != 0x85)) && (1 < uVar1 - 0x2028)) {\n            return 0;\n        }\n    }\n    *arg_ch = 1;\n    return 1;\n}\n",
        "token_count": 461
    },
    "00401e55": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401e55(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint extraout_ECX;\n    uint var_4h;\n    \n    fcn.00401ea8(arg_10h);\n    var_4h = 0;\n    iVar1 = fcn.0041e2bf(arg_8h, arg_ch, &var_4h);\n    if (iVar1 == 0) {\n        if ((arg_10h == 8) || (arg_10h == 0x20)) {\n            uVar2 = fcn.00401f2d(extraout_ECX, extraout_ECX);\n            uVar2 = fcn.00401c11(arg_8h, arg_ch, uVar2);\n        }\n        else if (arg_10h == 2) {\n            uVar2 = fcn.00401f2d();\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = *(iVar1 + 0x28);\n    }\n    return uVar2;\n}\n",
        "token_count": 259
    },
    "00401f20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00401f20(int32_t param_1)\n\n{\n    if ((*(param_1 + 0xc) != 1) && (*(param_1 + 0xc) != 2)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 63
    },
    "0040615e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040615e(void)\n\n{\n    uint16_t uVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    code *pcVar5;\n    uint32_t arg_ch;\n    int32_t iVar6;\n    uint16_t uVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    uint lpVersionInformation;\n    int32_t var_144h;\n    int32_t var_140h;\n    uint32_t var_13ch;\n    uint var_134h;\n    uint var_30h;\n    uint lpSystemInfo;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0040c25d();\n    *0x4d13de = 0;\n    lpVersionInformation = 0x11c;\n    (*_sym.imp.KERNEL32.dll_GetVersionExW)(&lpVersionInformation);\n    *0x4d13a0 = var_144h;\n    *0x4d13a4 = var_140h;\n    *0x4d13a8 = var_13ch;\n    fcn.004084e7(&var_134h);\n    uVar3 = 0;\n    if (*0x4d13b0 != 0) {\n        do {\n            iVar9 = 0;\n            iVar6 = 0;\n            uVar1 = *(*0x4d13ac + uVar3 * 2);\n            var_8h = uVar1;\n            uVar7 = 0x20;\n            do {\n                if (uVar1 == uVar7) {\n                    iVar6 = iVar6 + 1;\n                }\n                uVar7 = *(iVar9 * 2 + 0x49d032);\n                iVar9 = iVar9 + 1;\n            } while (uVar7 != 0);\n            if (iVar6 == 0) goto code_r0x004061d5;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *0x4d13b0);\n    }\n    uVar3 = 0xffffffff;\ncode_r0x004061d5:\n    arg_ch = 0xffffffff;\n    if (uVar3 != 0xffffffff) {\n        arg_ch = uVar3;\n    }\n    fcn.0040ad22(0, arg_ch);\n    fcn.0040562b(0x49d030);\n    *0x4d13d9 = 0;\n    *0x4d13bc = 0;\n    *0x4d13c0 = 0;\n    *0x4d13c4 = 0;\n    *0x4d13c8 = 0;\n    *0x4d13cc = 0;\n    *0x4d13d0 = 0;\n    *0x4d13d4 = 0;\n    uVar4 = *0x4d13c0;\n    uVar2 = *0x4d13d9;\n    if (*0x4d13a0 != 5) {\n        if (*0x4d13a0 == 6) {\n            *0x4d13bc = 0x1000100;\n            if (*0x4d13a4 == 0) {\n                if (var_30h._2_1_ == '\\x01') {\n                    *0x4d13c0 = 0x101;\n                    uVar4 = *0x4d13c0;\n                }\n                else {\n                    *0x4d13c0 = 0x1010100;\n                    uVar4 = *0x4d13c0;\n                }\n            }\n            else if (*0x4d13a4 == 1) {\n                *0x4d13c0 = 0x1000100;\n                uVar4 = *0x4d13c0;\n                if (var_30h._2_1_ == '\\x01') {\n                    *0x4d13c4 = 0x101;\n                }\n                else {\n                    *0x4d13c4 = 0x1010100;\n                }\n            }\n            else if (*0x4d13a4 == 2) {\n                *0x4d13c4 = 0x1000100;\n                *0x4d13c0 = 0x100;\n                uVar4 = *0x4d13c0;\n                if (var_30h._2_1_ == '\\x01') {\n                    *0x4d13c8 = 0x101;\n                }\n                else {\n                    *0x4d13c8 = 0x1010100;\n                }\n            }\n            else if (*0x4d13a4 == 3) {\n                *0x4d13c8 = 0x1000100;\n                *0x4d13c4 = 0x1000100;\n                uVar4 = 0x100;\n                if (var_30h._2_1_ == '\\x01') {\n                    *0x4d13cc = 0x101;\n                }\n                else {\n                    *0x4d13cc = 0x1010100;\n                }\n            }\n        }\n        else if (*0x4d13a0 == 10) {\n            *0x4d13bc = 0x1000100;\n            *0x4d13c8 = 0x1000100;\n            *0x4d13c4 = 0x1000100;\n            *0x4d13c0 = 0x100;\n            *0x4d13cc = 0x1000100;\n            *0x4d13d0 = 0x100;\n            uVar4 = 0x100;\n            if (*0x4d13a4 == 0) {\n                uVar4 = *0x4d13c0;\n                if (var_30h._2_1_ == '\\x01') {\n                    if (var_13ch < 0x55ec) {\n                        *0x4d13d0 = 0x101;\n                        uVar4 = 0x100;\n                    }\n                    else {\n                        *0x4d13d0 = 0x1010100;\n                    }\n                }\n                else if (var_13ch < 0x44ff) {\n                    *0x4d13d4 = 0x101;\n                }\n                else {\n                    uVar2 = 1;\n                    if (var_13ch < 0x4f7c) {\n                        *0x4d13d4 = 0x1010000;\n                        uVar2 = *0x4d13d9;\n                    }\n                }\n            }\n        }\n        goto code_r0x0040629b;\n    }\n    if (*0x4d13a4 == 1) {\n        *0x4d13bc = 0x100;\ncode_r0x00444525:\n        *0x4d13bc = *0x4d13bc | 1;\n    }\n    else if (*0x4d13a4 == 2) {\n        *0x4d13bc = 0x1000100;\n        if (var_30h._2_1_ == '\\x01') goto code_r0x00444525;\n        *0x4d13bc = 0x1010100;\n    }\n    *0x4d13de = var_30h >> 6 & 1;\ncode_r0x0040629b:\n    *0x4d13d9 = uVar2;\n    *0x4d13c0 = uVar4;\n    *0x4d13da = '\\0';\n    var_4h = 0;\n    *0x4d13d8 = *0x4d13d9;\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(&var_4h);\n    (*_sym.imp.KERNEL32.dll_IsWow64Process)(uVar4);\n    if (var_4h == 1) {\n        *0x4d13da = '\\x01';\n    }\n    puVar8 = &lpSystemInfo;\n    for (iVar6 = 9; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    if (*0x4d13da == '\\0') {\n        (*_sym.imp.KERNEL32.dll_GetSystemInfo)(&lpSystemInfo);\n    }\n    else {\n        iVar6 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x49d0a8);\n        if ((iVar6 == 0) ||\n           (pcVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar6, \"GetNativeSystemInfo\"),  pcVar5 == NULL)) {\n            (*_sym.imp.KERNEL32.dll_GetSystemInfo)(&lpSystemInfo);\n        }\n        else {\n            (*pcVar5)(&lpSystemInfo);\n        }\n        if (iVar6 != 0) {\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar6);\n        }\n    }\n    *0x4d13dc = lpSystemInfo;\n    return 0x4d13a0;\n}\n",
        "token_count": 2075
    },
    "00406bff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406bff(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    char16_t *arg_8h_00;\n    uint16_t *puVar5;\n    uint *in_ECX;\n    uint *in_EDX;\n    uint32_t arg_8h_01;\n    uint32_t uVar6;\n    uint var_58h;\n    uint var_48h;\n    uint var_38h;\n    uint var_28h;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint *var_8h;\n    \n    var_8h = in_EDX;\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    var_18h = *in_ECX;\n    var_14h = in_ECX[1];\n    var_10h = in_ECX[2];\n    var_ch = in_ECX[3];\n    *var_ch = *var_ch + 1;\n    iVar3 = fcn.0040642a(0x49d034);\n    if (iVar3 == -1) {\n        fcn.0040c1c3(&var_18h);\n        fcn.0040bfbf();\n    }\n    else {\n        fcn.004086ac(&var_18h, iVar3 + 1, 0xffffffff);\n        fcn.0040ad22(iVar3 + 1, 0xffffffff);\n    }\n    iVar3 = fcn.0040642a(0x49d108);\n    if (iVar3 != -1) {\n        fcn.004086ac(&var_28h, iVar3, 0xffffffff);\n        fcn.0040ad22(iVar3, 0xffffffff);\n    }\n    uVar2 = var_14h;\n    arg_8h_01 = 0;\n    if (var_14h < 2) goto code_r0x00406ceb;\n    piVar4 = fcn.004058ca(0);\n    if ((*piVar4 != 0x5c) || (piVar4 = fcn.004058ca(1),  *piVar4 != 0x5c)) {\n        if ((1 < uVar2) && (piVar4 = fcn.0040660f(1),  *piVar4 == 0x3a)) {\n            arg_8h_01 = 2;\n            fcn.004086ac(&var_18h, 0, 2);\n        }\n        goto code_r0x00406ceb;\n    }\n    uVar6 = 2;\n    if (uVar2 < 4) {\ncode_r0x00444a7d:\n        arg_8h_00 = 0x4c59a4;\n        arg_8h_01 = uVar6;\n    }\n    else {\n        piVar4 = fcn.004058ca(2);\n        iVar1 = *piVar4;\n        if ((iVar1 == 0x3f) && (piVar4 = fcn.004058ca(3),  *piVar4 == 0x5c)) {\n            if ((((uVar2 < 8) || (piVar4 = fcn.004058ca(4),  *piVar4 != 0x55)) ||\n                (piVar4 = fcn.004058ca(5),  *piVar4 != 0x4e)) ||\n               ((piVar4 = fcn.004058ca(6),  *piVar4 != 0x43 || (piVar4 = fcn.004058ca(7),  *piVar4 != 0x5c)))) {\n                arg_8h_00 = L\"\\\\\\\\?\\\\\";\n                uVar6 = 1;\n                arg_8h_01 = 4;\n            }\n            else {\n                arg_8h_00 = L\"\\\\\\\\?\\\\UNC\\\\\";\n                arg_8h_01 = 8;\n            }\n        }\n        else {\n            if ((iVar1 != 0x2e) || (piVar4 = fcn.004058ca(3),  *piVar4 != 0x5c)) goto code_r0x00444a7d;\n            arg_8h_00 = 0x4c6828;\n            uVar6 = 1;\n            arg_8h_01 = 4;\n        }\n    }\n    fcn.004084e7(arg_8h_00);\n    while ((arg_8h_01 < uVar2 && (uVar6 != 0))) {\n        piVar4 = fcn.0040660f(arg_8h_01);\n        if (*piVar4 == 0x5c) {\n            uVar6 = uVar6 - 1;\n        }\n        if (uVar6 != 0) {\n            puVar5 = fcn.0040660f(arg_8h_01);\n            fcn.004051ec(*puVar5);\n            arg_8h_01 = arg_8h_01 + 1;\n        }\n    }\ncode_r0x00406ceb:\n    fcn.004086ac(&var_18h, arg_8h_01, 0xffffffff);\n    if ((var_8h != NULL) && (var_8h != &var_38h)) {\n        fcn.0040c1c3(&var_38h);\n    }\n    if ((arg_8h != NULL) && (arg_8h != &var_58h)) {\n        fcn.0040c1c3(&var_58h);\n    }\n    if ((arg_ch != NULL) && (arg_ch != &var_28h)) {\n        fcn.0040c1c3(&var_28h);\n    }\n    if ((arg_10h != NULL) && (arg_10h != &var_48h)) {\n        fcn.0040c1c3(&var_48h);\n    }\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return;\n}\n",
        "token_count": 1441
    },
    "00406d7e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406d7e(int32_t param_1)\n\n{\n    uint arg_ch;\n    uint arg_8h;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint lpNumberOfBytesRead;\n    bool bVar4;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(param_1 + 0x28) & 0x8001) == 0) {\n        return;\n    }\n    if ((*(param_1 + 0x28) & 0x10) != 0) {\n        return;\n    }\n    uVar3 = *(param_1 + 0x10);\n    arg_ch = *(param_1 + 0x14);\n    fcn.00406e66(0, 0, 0);\n    if ((*(param_1 + 0x28) & 0x4000) == 0) {\n        lpNumberOfBytesRead = 0x10000;\n    }\n    else {\n        lpNumberOfBytesRead = fcn.0041f9ef();\n    }\n    arg_8h = fcn.0041fd8b(lpNumberOfBytesRead);\n    fcn.004070c2(arg_8h);\n    iVar1 = fcn.0040b3b0(var_10h, lpNumberOfBytesRead);\n    fcn.00406e66(uVar3, arg_ch, 0);\n    if ((iVar1 == 0) && ((*(param_1 + 0x28) & 1) != 0)) goto code_r0x00406e46;\n    iVar2 = fcn.00407098();\n    if (iVar2 == 0) {\n        if ((*(param_1 + 0x28) & 0xff0) != 0) {\n            iVar1 = *(param_1 + 0x2c);\n            if (iVar1 == 7) {\n                iVar2 = 8;\n            }\n            else {\n                if (iVar1 != 5) {\n                    bVar4 = iVar1 == 3;\n                    goto code_r0x00406e34;\n                }\n                iVar2 = 6;\n            }\n            goto code_r0x00406e39;\n        }\n        iVar1 = fcn.00406fb0(var_10h, iVar1);\n        *(param_1 + 0x2c) = iVar1;\n        bVar4 = iVar1 == 2;\ncode_r0x00406e34:\n        if (bVar4) {\n            iVar2 = 4;\n            goto code_r0x00406e39;\n        }\n    }\n    else {\ncode_r0x00406e39:\n        *(param_1 + 0x2c) = iVar2;\n    }\n    uVar3 = fcn.00406f90();\n    *(param_1 + 0x30) = uVar3;\ncode_r0x00406e46:\n    *var_ch = *var_ch + -1;\n    if (*var_ch == 0) {\n        uVar3 = 4;\n        fcn.0041fd4d(var_ch);\n        fcn.0041fd94(var_10h, var_ch, uVar3);\n    }\n    return;\n}\n",
        "token_count": 751
    },
    "00406f90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00406f90(int32_t param_1)\n\n{\n    uint uStack4;\n    \n    if ((param_1 == 7) || (param_1 == 5)) {\n        uStack4 = 2;\n    }\n    else {\n        if (param_1 != 3) {\n            return 0;\n        }\n        uStack4 = 3;\n    }\n    return uStack4;\n}\n",
        "token_count": 94
    },
    "00407098": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00407098(char *param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    uint uStack4;\n    \n    if (param_2 < 2) {\ncode_r0x004070af:\n        uVar1 = 3;\n        if ((((param_2 < 3) || (*param_1 != -0x11)) || (param_1[1] != -0x45)) || (param_1[2] != -0x41)) {\n            uVar1 = 0;\n        }\n        return uVar1;\n    }\n    if ((*param_1 == -1) && (param_1[1] == -2)) {\n        uStack4 = 5;\n    }\n    else {\n        if ((*param_1 != -2) || (param_1[1] != -1)) goto code_r0x004070af;\n        uStack4 = 7;\n    }\n    return uStack4;\n}\n",
        "token_count": 216
    },
    "00407e34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407e34(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_10h;\n    uint var_10h;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.00408e90();\n    arg_10h = -1;\n    iVar1 = *(*(iVar2 + 8) + 4);\n    iVar2 = fcn.0040ce67();\n    iVar2 = iVar2 + -1;\n    if (2 < *(arg_8h + 8)) {\n        arg_10h = fcn.0040ce67();\n    }\n    fcn.0040c25d();\n    if ((iVar1 < iVar2) || (iVar2 < 0)) {\n        iVar2 = iVar1;\n    }\n    if ((arg_10h < 0) || (iVar1 - iVar2 < arg_10h)) {\n        arg_10h = iVar1 - iVar2;\n    }\n    iVar1 = **(arg_8h + 4);\n    fcn.00408e90();\n    fcn.004086ac(*(iVar1 + 8), iVar2, arg_10h);\n    fcn.00407c5d(&var_10h);\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 308
    },
    "0040b177": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b177(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = *(in_ECX + 0x2c);\n    if (iVar1 != 4) {\n        if ((((iVar1 == 5) || (iVar1 == 6)) || (iVar1 == 7)) || (iVar1 == 8)) {\n            fcn.0046ca4c(arg_8h);\n            return;\n        }\n        if (iVar1 != 3) {\n            fcn.0041d6a8(arg_8h);\n            return;\n        }\n    }\n    fcn.0040b1bd(arg_8h);\n    return;\n}\n",
        "token_count": 162
    },
    "0041b518": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b518(double *param_1)\n\n{\n    float10 fVar1;\n    \n    if (*(param_1 + 0xc) != 3) {\n        fVar1 = fcn.0040cfb5();\n        fcn.0040e8a0();\n        *param_1 = fVar1;\n        *(param_1 + 0xc) = 3;\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "0040b79d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b79d(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int16_t iVar4;\n    \n    uVar2 = *(arg_8h + 8);\n    if (uVar2 != 0) {\n        iVar3 = *(arg_8h + 4);\n        iVar1 = *(*(iVar3 + -4 + uVar2 * 4) + 8);\n        if ((((iVar1 < 0x40) || (0x5f < iVar1)) && (iVar1 != 0)) && (iVar1 != 0x30)) {\n            if (iVar1 != 5) {\n                return 0xffffffff;\n            }\n            if (uVar2 < 3) {\n                return 0xffffffff;\n            }\n            iVar1 = *(*(iVar3 + -8 + uVar2 * 4) + 8);\n            iVar4 = *(*(iVar3 + -0xc + uVar2 * 4) + 8);\n            if (((iVar1 == 0x49) || (iVar1 == 0x4a)) || (iVar1 == 0x4c)) {\n                if (uVar2 < 4) {\n                    return 0xffffffff;\n                }\n                if ((iVar4 != 0) && (iVar4 != 0x30)) {\n                    return 0xffffffff;\n                }\n                iVar4 = *(*(iVar3 + -0x10 + uVar2 * 4) + 8);\n            }\n            else if ((iVar1 != 0) && (iVar1 != 0x30)) {\n                return 0xffffffff;\n            }\n            if ((iVar4 != 0) && (iVar4 != 0x30)) {\n                return 0xffffffff;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 411
    },
    "0040cd9e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cd9e(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint uVar3;\n    uint arg_10h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h = 0xffffffff;\n    uVar3 = 0xffffffff;\n    var_10h = 0xffffffff;\n    var_ch = 0xffffffff;\n    var_8h = 0xffffffff;\n    var_4h = 0xffffffff;\n    iVar1 = fcn.0040ce67();\n    if (iVar1 < 1) {\n        uVar3 = 0;\n    }\n    else {\n        uVar2 = *(arg_8h + 8);\n        if (7 < uVar2) {\n            var_4h = fcn.0040ce67();\n            uVar2 = *(arg_8h + 8);\n        }\n        if (6 < uVar2) {\n            var_8h = fcn.0040ce67();\n            uVar2 = *(arg_8h + 8);\n        }\n        if (5 < uVar2) {\n            var_ch = fcn.0040ce67();\n            uVar2 = *(arg_8h + 8);\n        }\n        if (4 < uVar2) {\n            var_10h = fcn.0040ce67();\n            uVar2 = *(arg_8h + 8);\n        }\n        if (3 < uVar2) {\n            uVar3 = fcn.0040ce67();\n            uVar2 = *(arg_8h + 8);\n        }\n        if (2 < uVar2) {\n            arg_10h = fcn.0040ce67();\n        }\n        arg_ch_00 = fcn.0040ce67();\n        arg_8h_00 = fcn.0040ce67();\n        uVar3 = fcn.0040c3cb(arg_8h_00, arg_ch_00, arg_10h, uVar3, var_10h, var_ch, var_8h, var_4h);\n    }\n    fcn.0040e8a0();\n    arg_ch[3] = 1;\n    *arg_ch = uVar3;\n    return 0;\n}\n",
        "token_count": 546
    },
    "0041b07d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041b07d(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar4 = 0;\n    iVar2 = *(arg_8h + 4);\n    iVar5 = *arg_ch;\n    do {\n        piVar3 = *(iVar2 + iVar5 * 4);\n        iVar1 = *(piVar3 + 2);\n        if (iVar1 == 0x47) {\n            iVar4 = iVar4 + 1;\n        }\n        else if ((iVar1 == 0x48) && (iVar4 = iVar4 + -1,  iVar4 < 0)) {\n            return 0;\n        }\n        if (iVar1 == 0x7f) {\n            if (iVar4 == 0) {\n                return 0;\n            }\n            return 0xffffffff;\n        }\n        if (iVar4 == 0) {\n            if (iVar1 == 0) {\n                if (*piVar3 != 3) {\n                    if (*piVar3 < 0x27) {\n                        return 0;\n                    }\n                    if (0x2a < *piVar3) {\n                        return 0;\n                    }\n                }\n            }\n            else if (iVar1 == 0x40) {\n                return 0;\n            }\n        }\n        iVar5 = iVar5 + 1;\n        *arg_ch = iVar5;\n    } while( true );\n}\n",
        "token_count": 347
    },
    "0041b26a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041b26a(int32_t param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    if (1 < param_2) {\n        uVar3 = 0;\n        uVar4 = uVar3;\n        uVar5 = uVar3;\n        if (param_2 != 1) {\n            do {\n                cVar1 = *(uVar4 + param_1);\n                cVar2 = *(uVar4 + 1 + param_1);\n                uVar4 = uVar4 + 2;\n                if (cVar1 == '\\0') {\n                    if ((cVar2 == '\\n') || (cVar2 == '\\r')) {\n                        uVar5 = uVar5 + 1;\n                    }\n                }\n                else if ((cVar2 == '\\0') && ((cVar1 == '\\n' || (cVar1 == '\\r')))) {\n                    uVar3 = uVar3 + 1;\n                }\n                if ((uVar3 != 0) && (uVar5 != 0)) {\n                    return 0;\n                }\n            } while (uVar4 < param_2 - 1);\n            if (uVar3 != 0) {\n                return 6;\n            }\n            if (uVar5 != 0) {\n                return 8;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 344
    },
    "0041d449": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.0041d449(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t *puVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint16_t *in_ECX;\n    int32_t in_EDX;\n    uint16_t *puVar6;\n    int16_t iVar7;\n    uint32_t uVar8;\n    uint16_t *puVar9;\n    uint32_t *puVar10;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar3 = *in_ECX;\n    uVar8 = uVar3;\n    *arg_ch = uVar8;\n    arg_ch[1] = 0;\n    var_14h = 0x20;\n    puVar9 = in_ECX + 1;\n    if (uVar3 - 0x21 < 0x41) {\n        iVar2 = fcn.0041d564();\n        iVar7 = uVar3 - iVar2;\n        if ((((iVar7 == 6) || (iVar7 == 7)) || (iVar7 == 8)) || (iVar7 == 0xc)) {\n            puVar9 = in_ECX + 2;\n        }\n        if (((iVar7 == 2) || (iVar7 == 3)) || ((iVar7 == 8 || (iVar7 == 10)))) {\n            uVar8 = 0;\n        }\n        else {\n            uVar8 = 1;\n        }\n        arg_ch[1] = uVar8;\n        if (iVar2 == 0x21) {\n            var_14h = 0x1d;\ncode_r0x0041d517:\n            *arg_ch = var_14h;\n        }\n        else {\n            if (iVar2 == 0x2e) {\n                var_14h = 0x1e;\n                goto code_r0x0041d517;\n            }\n            if (iVar2 == 0x3b) {\n                var_14h = 0x1f;\n                goto code_r0x0041d517;\n            }\n            if (iVar2 == 0x48) goto code_r0x0041d517;\n            if (iVar2 == 0x55) {\n                var_14h = *puVar9;\n                puVar9 = puVar9 + 1;\n                goto code_r0x0041d517;\n            }\n        }\n        uVar8 = *arg_ch;\n    }\n    uVar3 = uVar8;\n    if (uVar3 < 0x1f) {\n        if (uVar3 != 0x1e) {\n            if (uVar3 < 6) {\n                return NULL;\n            }\n            if (uVar8 < 0xe) {\n                return puVar9;\n            }\n            if (uVar8 < 0xf) {\n                return NULL;\n            }\n            if (uVar3 < 0x11) {\n                puVar6 = puVar9 + 2;\n                if (*puVar9 == 9) {\n                    puVar10 = arg_ch + 2;\n                    puVar4 = puVar9[1] * 4 + 0x4b0a90;\n                    while (puVar10 < arg_ch + 8) {\n                        *puVar10 = *puVar4;\n                        puVar10 = puVar10 + 1;\n                        uVar8 = *puVar4;\n                        puVar4 = puVar4 + 1;\n                        if (uVar8 == 0xffffffff) {\n                            *arg_ch = (uVar3 != 0x10) * 2 + 0x1d;\n                            return puVar6;\n                        }\n                    }\n                    arg_ch[2] = *puVar6;\n                    uVar3 = puVar9[3];\n                }\n                else {\n                    arg_ch[2] = *puVar9;\n                    uVar3 = puVar9[1];\n                }\n                arg_ch[3] = uVar3;\n                return puVar6;\n            }\n            if (uVar8 < 0x1b) {\n                return puVar9;\n            }\n            if (uVar3 != 0x1d) {\n                return NULL;\n            }\ncode_r0x0045d669:\n            uVar8 = *puVar9;\n            puVar6 = puVar9 + 1;\n            if ((in_EDX != 0) && ((uVar8 & 0xfc00) == 0xd800)) {\n                uVar8 = ((uVar8 & 0x3ff) << 10 | *puVar6 & 0x3ff) + 0x10000;\n                puVar6 = puVar9 + 2;\n            }\n            arg_ch[2] = uVar8;\n            goto code_r0x0045d69e;\n        }\n    }\n    else {\n        if (uVar3 == 0x1f) goto code_r0x0045d669;\n        if (uVar3 != 0x20) {\n            if (uVar8 < 0x6e) {\n                return NULL;\n            }\n            if (0x70 < uVar3) {\n                return NULL;\n            }\n            if (uVar3 == 0x70) {\n                puVar6 = puVar9 + (*puVar9 - 1);\n            }\n            else {\n                puVar6 = puVar9 + 0x10;\n            }\n    // switch table (12 cases) at 0x45d82f\n            switch(*puVar6) {\n            case 0x62:\n            case 99:\n            case 0x66:\n            case 0x67:\n            case 0x6a:\n            case 0x6c:\n                arg_ch[1] = 1;\n            case 100:\n            case 0x65:\n            case 0x6b:\n                puVar6 = puVar6 + 1;\n                break;\n            case 0x68:\n            case 0x69:\n            case 0x6d:\n                puVar1 = puVar6 + 1;\n                puVar6 = puVar6 + 3;\n                arg_ch[1] = *puVar1 == 0;\n            }\n            arg_ch[2] = puVar6 - puVar9 >> 1;\n            return puVar6;\n        }\n    }\n    *arg_ch = (uVar3 != 0x1e) * 2 + 0x1d;\n    uVar8 = *puVar9;\n    puVar6 = puVar9 + 1;\n    if ((in_EDX != 0) && ((uVar8 & 0xfc00) == 0xd800)) {\n        uVar8 = ((uVar8 & 0x3ff) << 10 | *puVar6 & 0x3ff) + 0x10000;\n        puVar6 = puVar9 + 2;\n    }\n    arg_ch[2] = uVar8;\n    if ((uVar8 < 0x80) || ((uVar8 < 0x100 && (in_EDX == 0)))) {\n        uVar5 = *(uVar8 + arg_8h);\n    }\n    else {\n        uVar5 = *(*((*((uVar8 >> 7) + 0x4bff60) * 0x80 + (uVar8 & 0x7f)) * 2 + 0x4b1c60) * 8 + 0x4af414) + uVar8;\n    }\n    arg_ch[3] = uVar5;\n    if (uVar8 != uVar5) {\n        arg_ch[4] = 0xffffffff;\n        return puVar6;\n    }\ncode_r0x0045d69e:\n    arg_ch[3] = 0xffffffff;\n    return puVar6;\n}\n",
        "token_count": 1781
    },
    "0041dbc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041dbc0(char **arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t *in_ECX;\n    int32_t var_c4h;\n    int32_t var_c0h;\n    int32_t var_bch;\n    int32_t var_b8h;\n    uint var_2ch;\n    uint var_ch;\n    int32_t var_8h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    *arg_8h = NULL;\n    if ((in_ECX == NULL) || (*in_ECX != 0x50435245)) {\n        *arg_8h = \"argument is not a compiled regular expression\";\n        return NULL;\n    }\n    if ((*(in_ECX + 3) & 2) == 0) {\n        *arg_8h = \"argument not compiled in 16 bit mode\";\n        return NULL;\n    }\n    uVar1 = *(in_ECX + 9);\n    uVar2 = *(in_ECX + 0x26);\n    uVar3 = *(in_ECX + 0x22);\n    if (((*(in_ECX + 2) & 0x10) == 0) && ((in_ECX[3] & 0x110U) == 0)) {\n        var_8h = in_ECX[0xc];\n        if (var_8h == 0) {\n            fcn.0041e1d7(0xb, &var_8h);\n        }\n        var_c0h = var_8h + 0x100;\n        var_bch = var_8h + 0x200;\n        var_b8h = var_8h + 0x340;\n        var_c4h = var_8h;\n        fcn.004222d0(&var_2ch, 0, 0x20);\n        iVar4 = fcn.0041dfcd(in_ECX[2] >> 0xb & 1, &var_c4h);\n        if (iVar4 == 1) {\n            var_8h = 1;\n        }\n        else {\n            var_8h = 0;\n            if (iVar4 == 3) goto code_r0x0045e3b2;\n        }\n    }\n    iVar4 = fcn.0041dd5b(in_ECX + (uVar2 * uVar1 + uVar3) * 2, in_ECX[2], 0, &var_ch);\n    if (iVar4 != -3) {\n        if (iVar4 == -2) {\n            *arg_8h = \"internal error: missing capturing bracket\";\n            return NULL;\n        }\n        if ((var_8h == 0) && (iVar4 < 1)) {\n            return NULL;\n        }\n        puVar5 = fcn.0040ab22(0x4c);\n        if (puVar5 == NULL) {\n            *arg_8h = \"failed to get memory\";\n            return NULL;\n        }\n        puVar5[1] = puVar5 + 8;\n        *puVar5 = 1;\n        puVar5[8] = 0x2c;\n        puVar5[9] = 0;\n        if (var_8h == 0) {\n            fcn.004222d0(puVar5 + 10, 0);\n        }\n        else {\n            puVar5[9] = 1;\n            fcn.00420db0(puVar5 + 10, &var_2ch, 0x20);\n        }\n        if (iVar4 < 1) {\n            puVar5[0x12] = 0;\n            return puVar5;\n        }\n        puVar5[9] = puVar5[9] | 2;\n        puVar5[0x12] = iVar4;\n        return puVar5;\n    }\ncode_r0x0045e3b2:\n    *arg_8h = \"internal error: opcode not recognized\";\n    return NULL;\n}\n",
        "token_count": 923
    },
    "0041f220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.0041f220(uint arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint32_t *puVar3;\n    uchar uVar4;\n    char cVar5;\n    int32_t in_ECX;\n    uint32_t uVar6;\n    uint var_1h;\n    \n    iVar1 = *(in_ECX + 0x2c);\n    if ((((iVar1 != 5) && (iVar1 != 6)) && (iVar1 != 7)) && (iVar1 != 8)) {\n        if ((iVar1 == 3) || ((iVar1 == 4 && (*arg_ch < 0x3fffffff)))) {\n            uVar4 = fcn.0041f26d(arg_8h, arg_ch);\n        }\n        else {\n            uVar4 = fcn.0046cb10(arg_8h, arg_ch);\n        }\n        return uVar4;\n    }\n    fcn.0040bfbf();\n    puVar3 = arg_ch;\n    uVar6 = 0;\n    bVar2 = false;\n    if (*arg_ch != 0) {\n        do {\n            cVar5 = fcn.0046c9a7(&arg_ch);\n            if (cVar5 == '\\0') {\n                if (!bVar2) {\n                    return 0;\n                }\n                break;\n            }\n            bVar2 = true;\n            fcn.004051ec(arg_ch);\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < *puVar3);\n    }\n    *puVar3 = uVar6;\n    return 1;\n}\n",
        "token_count": 387
    },
    "00420961": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420961(int32_t **arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    \n    piVar1 = *arg_8h;\n    if (((*piVar1 == -0x1f928c9d) && (piVar1[4] == 3)) &&\n       ((iVar2 = piVar1[5],  iVar2 == 0x19930520 ||\n        (((iVar2 == 0x19930521 || (iVar2 == 0x19930522)) || (iVar2 == 0x1994000)))))) {\n        fcn.00432517();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 193
    },
    "00426e05": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.00426e05(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint32_t arg_8h;\n    uint uVar4;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.0042871d();\n    if (cVar1 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\ncode_r0x00426e2a:\n        puVar2 = fcn.0042f269();\n        *puVar2 = 0x16;\n        fcn.0043277c();\ncode_r0x00426e3a:\n        uVar3 = 0xffffffff;\n    }\n    else {\ncode_r0x00426ee5:\n        *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n        if (*(param_1 + 0x450) != 2) {\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x00426ed2:\n            cVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x31) = cVar1;\n            if (cVar1 != '\\0') {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                if (*(param_1 + 0x18) < 0) goto code_r0x00426ee5;\n                uVar3 = *(param_1 + 0x1c);\n                arg_8h = *(param_1 + 0x31);\n                uVar4 = fcn.00426c89(arg_8h, uVar3);\n                *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x426f01\n                switch(uVar4) {\n                case 0:\n                    cVar1 = fcn.004271db();\n                    break;\n                case 1:\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x00426ed2;\n                case 2:\n                    cVar1 = fcn.00427161();\n                    break;\n                case 3:\n                    cVar1 = fcn.00427e94();\n                    break;\n                case 4:\n                    goto code_r0x00426eac;\n                case 5:\n                    cVar1 = fcn.004272f9();\n                    break;\n                case 6:\n                    cVar1 = fcn.0042734a();\n                    break;\n                case 7:\n                    cVar1 = fcn.004277ab(arg_8h, uVar3, arg_8h, unaff_ESI, unaff_retaddr, param_2, param_3, param_4, \n                                         param_5, param_6, param_7);\n                    break;\n                case 0xbad1abe1:\n                    goto code_r0x00426e3a;\n                default:\n                    goto code_r0x00426e2a;\n                }\n                if (cVar1 == '\\0') goto code_r0x00426e3a;\n                goto code_r0x00426ed2;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n            goto code_r0x00426ee5;\n        }\n        uVar3 = *(param_1 + 0x18);\n    }\n    return uVar3;\ncode_r0x00426eac:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x00426ed2;\n}\n",
        "token_count": 963
    },
    "00426f21": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00426f21(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.004261e9();\n    if (cVar2 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\ncode_r0x00426f46:\n        puVar3 = fcn.0042f269();\n        *puVar3 = 0x16;\n        fcn.0043277c();\ncode_r0x00426f56:\n        uVar4 = 0xffffffff;\n    }\n    else {\ncode_r0x00427006:\n        *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n        if (*(param_1 + 0x450) != 2) {\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x00426fef:\n            iVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x32) = iVar1;\n            if (iVar1 != 0) {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                if (*(param_1 + 0x18) < 0) goto code_r0x00427006;\n                uVar4 = fcn.00426cbb(*(param_1 + 0x32), *(param_1 + 0x1c));\n                *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x427021\n                switch(uVar4) {\n                case 0:\n                    cVar2 = fcn.004271fa();\n                    break;\n                case 1:\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x00426fef;\n                case 2:\n                    cVar2 = fcn.0042719e();\n                    break;\n                case 3:\n                    cVar2 = fcn.00427ebf();\n                    break;\n                case 4:\n                    goto code_r0x00426fc9;\n                case 5:\n                    cVar2 = fcn.00427321();\n                    break;\n                case 6:\n                    cVar2 = fcn.004274b3();\n                    break;\n                case 7:\n                    cVar2 = fcn.004279da();\n                    break;\n                case 0xbad1abe1:\n                    goto code_r0x00426f56;\n                default:\n                    goto code_r0x00426f46;\n                }\n                if (cVar2 == '\\0') goto code_r0x00426f56;\n                goto code_r0x00426fef;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n            goto code_r0x00427006;\n        }\n        uVar4 = *(param_1 + 0x18);\n    }\n    return uVar4;\ncode_r0x00426fc9:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x00426fef;\n}\n",
        "token_count": 825
    },
    "00427041": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00427041(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.004261e9();\n    if (cVar2 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\ncode_r0x00427066:\n        puVar3 = fcn.0042f269();\n        *puVar3 = 0x16;\n        fcn.0043277c();\ncode_r0x00427076:\n        uVar4 = 0xffffffff;\n    }\n    else {\ncode_r0x00427126:\n        *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n        if (*(param_1 + 0x450) != 2) {\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x0042710f:\n            iVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x32) = iVar1;\n            if (iVar1 != 0) {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                if (*(param_1 + 0x18) < 0) goto code_r0x00427126;\n                uVar4 = fcn.00426cbb(*(param_1 + 0x32), *(param_1 + 0x1c));\n                *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x427141\n                switch(uVar4) {\n                case 0:\n                    cVar2 = fcn.00427219();\n                    break;\n                case 1:\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x0042710f;\n                case 2:\n                    cVar2 = fcn.0042719e();\n                    break;\n                case 3:\n                    cVar2 = fcn.00427ebf();\n                    break;\n                case 4:\n                    goto code_r0x004270e9;\n                case 5:\n                    cVar2 = fcn.00427321();\n                    break;\n                case 6:\n                    cVar2 = fcn.0042762f();\n                    break;\n                case 7:\n                    cVar2 = fcn.00427c37();\n                    break;\n                case 0xbad1abe1:\n                    goto code_r0x00427076;\n                default:\n                    goto code_r0x00427066;\n                }\n                if (cVar2 == '\\0') goto code_r0x00427076;\n                goto code_r0x0042710f;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n            goto code_r0x00427126;\n        }\n        uVar4 = *(param_1 + 0x18);\n    }\n    return uVar4;\ncode_r0x004270e9:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0042710f;\n}\n",
        "token_count": 824
    },
    "0046b459": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046b459(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint extraout_ECX;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.00401ea8(arg_ch);\n    var_4h = 0;\n    iVar1 = fcn.0046b3d3(arg_8h, &var_4h);\n    if (iVar1 == 0) {\n        if ((arg_ch == 8) || (arg_ch == 0x20)) {\n            arg_10h = 1;\n            uVar2 = fcn.00401f2d(extraout_ECX);\n            uVar2 = fcn.0046ba91(arg_8h, uVar2, arg_10h);\n        }\n        else if (arg_ch == 2) {\n            uVar2 = fcn.00401f2d();\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = *(iVar1 + 0x28);\n    }\n    return uVar2;\n}\n",
        "token_count": 256
    },
    "0046c2ea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046c2ea(int32_t hmenu, uint *arg_ch, uint32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    var_4h = -1;\n    if (((hmenu != 5) && (hmenu != 6)) &&\n       ((hmenu == 3 || ((hmenu == 4 || (cVar2 = fcn.0046c4b6(hmenu, &var_4h),  hmenu = var_4h,  cVar2 != '\\0')))))) {\n        piVar1 = *(hmenu * 4 + 0x4d1b44);\n        *arg_10h = 0;\n        if (piVar1 != NULL) {\n            iVar3 = *piVar1;\n            var_34h = 0x30;\n            fcn.004222d0(&var_30h, 0, 0x2c);\n            if (iVar3 != 0) {\n                var_10h = fcn.0041fd8b(0x208);\n                var_30h = 0x11;\n                *arg_ch = var_10h;\n                var_ch = 0x104;\n                iVar3 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(iVar3, hmenu, 0, &var_34h);\n                if ((iVar3 != 0) && ((var_2ch & 0x800) == 0)) {\n                    uVar4 = (-((var_28h & 3) != 0) & 0x40) + 0x40 | *arg_10h;\n                    if ((var_28h & 0x8080) != 0) {\n                        uVar4 = uVar4 | 0x100;\n                    }\n                    uVar4 = (-((var_28h & 8) != 0) & 0xfffffffd) + 4 | uVar4;\n                    *arg_10h = uVar4;\n                    if ((var_28h & 0x1000) != 0) {\n                        *arg_10h = uVar4 | 0x200;\n                    }\n                    return 1;\n                }\n                fcn.0041fd94(*arg_ch);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 585
    },
    "0046c9a7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046c9a7(ushort *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    if ((*(in_ECX + 0x2c) == 7) || (*(in_ECX + 0x2c) == 8)) {\n        var_4h = in_ECX;\n        iVar1 = fcn.0040b3b0(&var_4h, 2);\n        if (iVar1 == 2) {\n            *arg_8h = CONCAT31(var_4h, var_4h._1_1_);\n            return 1;\n        }\n    }\n    else {\n        iVar1 = fcn.0040b3b0(arg_8h, 2);\n        if (iVar1 == 2) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 205
    },
    "0046cc75": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0046cc75(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint var_14h;\n    \n    iVar1 = *(in_ECX + 0x2c);\n    if ((iVar1 == 5) || (iVar1 == 6)) {\n        iVar1 = arg_8h[1];\n        uVar3 = fcn.0046cc1d(*arg_8h, iVar1 * 2);\n        uVar2 = uVar3 == iVar1 * 2;\n    }\n    else if ((iVar1 == 7) || (iVar1 == 8)) {\n        uVar3 = fcn.0046cd0a(arg_8h);\n        uVar2 = uVar3;\n    }\n    else {\n        if ((iVar1 == 3) || (iVar1 == 4)) {\n            fcn.0040b443();\n            fcn.0046cbab();\n        }\n        else {\n            fcn.0040b443();\n            fcn.0041f7a8();\n        }\n        uVar2 = fcn.0046cc59(&var_14h);\n        uVar3 = fcn.0040b1ff();\n    }\n    return uVar3 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 310
    },
    "0046d1df": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0046d1df(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t *piStack24;\n    \n    uVar5 = 0x49d034;\n    **(param_1 + 0xc) = **(param_1 + 0xc) + 1;\n    fcn.0040562b(0x49d034);\n    iVar4 = unaff_EBX;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(unaff_EBX);\n    if (uVar2 == 0xffffffff) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar1 = 0;\n        if (iVar3 == 2) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(unaff_EBX, 0);\n            if (iVar3 != 0) goto code_r0x0046d2b0;\n        }\n        else if (iVar3 != 3) goto code_r0x0046d2b4;\n        iVar4 = 0x49d034;\n        *piStack24 = *piStack24 + 1;\n        uVar5 = 0x46d274;\n        iVar3 = fcn.0040642a(0x49d034);\n        if (iVar3 != -1) {\n            uVar5 = 0xffffffff;\n            fcn.0040ad22(iVar3, 0xffffffff);\n            uVar1 = fcn.0046d1df();\n            iVar4 = iVar3;\n            if (uVar1 != 0) {\n                iVar4 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(unaff_EBX, 0);\n                uVar1 = iVar4 != 0;\n                iVar4 = iVar3;\n            }\n        }\n        fcn.0040b1ff(iVar4, uVar5);\n    }\n    else {\n        if ((uVar2 & 0x10) == 0) {\ncode_r0x0046d2b4:\n            uVar1 = 0;\n            goto code_r0x0046d2b6;\n        }\ncode_r0x0046d2b0:\n        uVar1 = 1;\n    }\ncode_r0x0046d2b6:\n    uVar2 = fcn.0040b1ff(iVar4, uVar5);\n    return uVar2 & 0xffffff00 | uVar1;\n}\n",
        "token_count": 586
    },
    "0046ff5f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuchar fcn.0046ff5f(void)\n\n{\n    char cVar1;\n    int32_t extraout_ECX;\n    \n    cVar1 = fcn.00401f20();\n    if ((cVar1 == '\\0') && (*(extraout_ECX + 0xc) != 3)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 81
    },
    "00470d3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00470d3c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    double *in_ECX;\n    float10 fVar2;\n    \n    iVar1 = *(in_ECX + 0xc);\n    if (iVar1 < 1) goto code_r0x00470d73;\n    if (iVar1 < 3) {\ncode_r0x00470d62:\n        fcn.0041b518();\n    }\n    else if (iVar1 != 3) {\n        if (((iVar1 != 4) && (iVar1 != 9)) && (iVar1 != 0xb)) goto code_r0x00470d73;\n        goto code_r0x00470d62;\n    }\n    fVar2 = fcn.0040cfb5();\n    *in_ECX = *in_ECX / fVar2;\ncode_r0x00470d73:\n    if (*(in_ECX + 1) != 0) {\n        fcn.0041d962(*(in_ECX + 1));\n        *(in_ECX + 1) = 0;\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "00470fde": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00470fde(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = *(in_ECX + 0xc);\n    if (iVar1 < 1) {\n        return;\n    }\n    if (3 < iVar1) {\n        if (iVar1 == 4) goto code_r0x0047101f;\n        if (iVar1 != 7) {\n            if (iVar1 < 9) {\n                return;\n            }\n            if (10 < iVar1) {\n                if (iVar1 != 0xb) {\n                    return;\n                }\n                if (*(arg_8h + 0xc) == 0xb) {\n                    fcn.0040cb70(arg_8h);\n                    return;\n                }\n            }\n        }\n    }\n    fcn.0041f9a5();\ncode_r0x0047101f:\n    fcn.00408e90();\n    fcn.00407cf8(*(arg_8h + 8));\n    return;\n}\n",
        "token_count": 234
    },
    "00472187": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t fcn.00472187(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.004720ea(2);\n    iVar2 = iVar1;\n    iVar3 = 0;\n    if ((iVar1 == 3) && (iVar2 = fcn.004720ea(3),  iVar3 = iVar1,  iVar2 == 7)) {\n        iVar3 = 10;\n        iVar2 = fcn.004720ea(5);\n        if (iVar2 == 0x1f) {\n            iVar3 = 0x29;\n            iVar2 = fcn.004720ea(8);\n            if (iVar2 == 0xff) {\n                iVar3 = 0x128;\n                while (iVar2 = fcn.004720ea(8),  iVar2 == 0xff) {\n                    iVar3 = iVar3 + 0xff;\n                }\n            }\n        }\n    }\n    return iVar2 + iVar3 + 3;\n}\n",
        "token_count": 230
    },
    "00474023": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00474023(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t in_ECX;\n    uint32_t var_4h;\n    \n    var_4h = in_ECX & 0xffffff00;\n    if (2 < *(arg_8h + 8)) {\n        iVar2 = fcn.0040ce67();\n        if (iVar2 != 0) {\n            var_4h = CONCAT31(in_ECX >> 8, 1);\n        }\n    }\n    fcn.00408e90();\n    fcn.00408e90();\n    cVar1 = fcn.0046ce1e(var_4h);\n    if (cVar1 == '\\0') {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 223
    },
    "00474311": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00474311(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (2 < *(arg_8h + 8)) {\n        iVar2 = fcn.0040ce67();\n        if (iVar2 != 0) {\n            var_4h = 1;\n        }\n    }\n    fcn.00408e90();\n    fcn.00408e90();\n    cVar1 = fcn.0046e319(var_4h);\n    if (cVar1 == '\\0') {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 187
    },
    "00474387": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00474387(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    \n    if (1 < *(arg_8h + 8)) {\n        fcn.0040ce67();\n    }\n    fcn.00408e90();\n    cVar1 = fcn.0046e77b();\n    if (cVar1 == '\\0') {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 128
    },
    "00475499": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00475499(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t unaff_EBX;\n    uint8_t uStack68;\n    int32_t iStack56;\n    uchar auStack40 [36];\n    \n    if (2 < *(arg_8h + 8)) {\n        uVar2 = fcn.0040ce67();\n        uVar3 = fcn.0040ce67();\n        if ((uVar3 & 8) != 0) {\n            fcn.0040c25d();\n            fcn.0040c25d();\n            fcn.00408e90();\n            fcn.00406bff(auStack40, 0, 0);\n            fcn.00407cf8(auStack40);\n            if ((iStack56 != 0) && (cVar1 = fcn.0046d3ec(),  cVar1 == '\\0')) {\n                fcn.0040b606(uVar2 & 1);\n                cVar1 = fcn.0046d1df();\n                fcn.0040b1ff();\n                if (cVar1 == '\\0') {\n                    fcn.0040e8a0();\n                    *arg_ch = 0;\n                    arg_ch[3] = 1;\n                }\n            }\n            iVar4 = fcn.0040ce67();\n            fcn.0040b1ff();\n            fcn.0040b1ff();\n            if (iVar4 == 0) {\n                return 0;\n            }\n            unaff_EBX = unaff_EBX & 0xffffff00 | uStack68;\n        }\n    }\n    fcn.00408e90();\n    fcn.00408e90();\n    cVar1 = fcn.0046cf94(unaff_EBX, 0);\n    if (cVar1 == '\\0') {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 479
    },
    "0047601f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047601f(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint unaff_EDI;\n    uint32_t uVar5;\n    uint nNumberOfBytesToWrite;\n    int32_t var_4h;\n    \n    if (*(**(arg_8h + 4) + 0xc) == 4) {\n        puVar2 = fcn.0041fd5b(0x38, unaff_EDI);\n        *puVar2 = 0;\n        uVar3 = fcn.0041fd8b(0x10000);\n        puVar2[1] = uVar3;\n        fcn.00407bee();\n        fcn.0040c25d();\n        fcn.00407bee();\n        uVar5 = 0x4000;\n        if (1 < *(arg_8h + 8)) {\n            iVar4 = fcn.0040ce67();\n            uVar5 = -(iVar4 != 2) & 0x4000;\n        }\n        iVar4 = **(arg_8h + 4);\n        fcn.00408e90();\n        uVar3 = *(iVar4 + 8);\n        fcn.00407bee();\n        puVar2[10] = uVar5 | 0x8000;\n        cVar1 = fcn.004070e5(uVar3, uVar5 | 0x8000);\n        if (cVar1 == '\\0') {\n            fcn.00407bbe(extraout_ECX);\ncode_r0x00476120:\n            fcn.0040e8a0();\n            *arg_ch = 0xffffffff;\n            arg_ch[3] = 1;\n            return 0;\n        }\n        fcn.00406f3a();\n        fcn.00406d7e();\n        fcn.00406d67();\n        if (((*(puVar2 + 10) & 3) != 0) && (((*(puVar2 + 10) & 1) == 0 || ((puVar2[4] | puVar2[5]) == 0)))) {\n            if (puVar2[0xb] == 3) {\n                nNumberOfBytesToWrite = 3;\n                uVar3 = 0x4c364c;\n            }\n            else if (puVar2[0xb] == 5) {\n                nNumberOfBytesToWrite = 2;\n                uVar3 = 0x4c3654;\n            }\n            else {\n                if (puVar2[0xb] != 7) goto code_r0x00476157;\n                nNumberOfBytesToWrite = 2;\n                uVar3 = 0x4c3650;\n            }\n            fcn.0046cc1d(uVar3, nNumberOfBytesToWrite);\n        }\n    }\n    else {\n        var_4h = in_ECX;\n        cVar1 = fcn.00479bc8(&var_4h, **(arg_8h + 4), 0);\n        if (cVar1 == '\\0') goto code_r0x00476120;\n        puVar2 = *(**(*(in_ECX + 0x19c) + var_4h * 4) + 4);\n    }\ncode_r0x00476157:\n    uVar3 = fcn.0041f2ec();\n    fcn.0040e8a0();\n    arg_ch[3] = 1;\n    *arg_ch = uVar3;\n    if ((*(**(arg_8h + 4) + 0xc) == 4) && (fcn.00407bee(),  puVar2 != NULL)) {\n        fcn.00407bbe(extraout_ECX_00);\n    }\n    return 0;\n}\n",
        "token_count": 882
    },
    "004771df": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004771df(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t unaff_EBX;\n    uint8_t uStack84;\n    int32_t iStack56;\n    int32_t *piStack44;\n    uchar auStack40 [36];\n    \n    if (2 < *(arg_8h + 8)) {\n        uVar2 = fcn.0040ce67();\n        uVar3 = fcn.0040ce67();\n        if ((uVar3 & 8) != 0) {\n            fcn.0040c25d();\n            fcn.0040c25d();\n            fcn.00408e90();\n            fcn.00406bff(auStack40, 0, 0);\n            *piStack44 = *piStack44 + 1;\n            fcn.00407cf8(auStack40);\n            if ((iStack56 != 0) && (cVar1 = fcn.0046d3ec(),  cVar1 == '\\0')) {\n                fcn.0040b606(uVar2 & 1);\n                cVar1 = fcn.0046d1df();\n                fcn.0040b1ff();\n                if (cVar1 == '\\0') {\n                    fcn.0040e8a0();\n                    *arg_ch = 0;\n                    arg_ch[3] = 1;\n                }\n            }\n            iVar4 = fcn.0040ce67();\n            fcn.0040b1ff();\n            fcn.0040b1ff();\n            fcn.0040b1ff();\n            if (iVar4 == 0) {\n                return 0;\n            }\n            unaff_EBX = unaff_EBX & 0xffffff00 | uStack84;\n        }\n    }\n    fcn.00408e90();\n    fcn.00408e90();\n    cVar1 = fcn.0046cf94(unaff_EBX, 1);\n    if (cVar1 == '\\0') {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 512
    },
    "00478320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00478320(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uStack28;\n    uint uStack24;\n    \n    fcn.0040c25d();\n    fcn.00408e90();\n    fcn.0040592d();\n    cVar2 = fcn.0046d3ec();\n    if (cVar2 != '\\0') {\n        if ((*(arg_8h + 8) == 2) || ((*(arg_8h + 8) == 3 && (cVar2 = fcn.00401fb9(0x29),  cVar2 != '\\0')))) {\n            iVar3 = *(*(arg_8h + 4) + 4);\n            fcn.00408e90();\n            uVar4 = 0;\n        }\n        else {\n            iVar3 = *(*(arg_8h + 4) + 8);\n            fcn.00408e90();\n            uVar4 = **(iVar3 + 8);\n            iVar3 = *(*(arg_8h + 4) + 4);\n            fcn.00408e90();\n        }\n        pcVar1 = _sym.imp.KERNEL32.dll_WritePrivateProfileStringW;\n        iVar3 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)(**(iVar3 + 8), uVar4, 0, uStack28);\n        if (iVar3 != 0) {\n            (*pcVar1)(0, 0, 0, uStack24);\n            goto code_r0x004783e9;\n        }\n    }\n    fcn.0040e8a0();\n    arg_ch[3] = 1;\n    *arg_ch = 0;\ncode_r0x004783e9:\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 434
    },
    "0047a4fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047a4fc(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint item;\n    uint uVar2;\n    uint unaff_ESI;\n    uchar auStack24 [20];\n    \n    fcn.0040c25d();\n    if (2 < *(arg_8h + 8)) {\n        iVar1 = *(*(arg_8h + 4) + 8);\n        fcn.00408e90();\n        if (auStack24 != *(iVar1 + 8)) {\n            fcn.0040c1c3(*(iVar1 + 8));\n        }\n    }\n    iVar1 = *(*(arg_8h + 4) + 4);\n    fcn.00408e90();\n    uVar2 = **(iVar1 + 8);\n    item = fcn.0040ce67();\n    uVar2 = fcn.00495352(item, uVar2, unaff_ESI);\n    fcn.0040e8a0();\n    arg_ch[3] = 1;\n    *arg_ch = uVar2;\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 266
    },
    "0047a631": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047a631(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint arg_8h_00;\n    uint arg_14h;\n    uint var_14h;\n    uint var_4h;\n    \n    iVar2 = arg_8h;\n    uVar1 = *(arg_8h + 8);\n    fcn.0040c25d();\n    var_4h = 0xffffffff;\n    arg_8h = 2;\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    if (5 < uVar1) {\n        arg_8h = fcn.0040ce67();\n    }\n    if (4 < uVar1) {\n        iVar2 = *(*(iVar2 + 4) + 0x10);\n        if (*(iVar2 + 0xc) != 4) goto code_r0x0047a70d;\n        fcn.00408e90();\n        if (&var_14h != *(iVar2 + 8)) {\n            fcn.0040c1c3(*(iVar2 + 8));\n        }\n    }\n    if (3 < uVar1) {\n        var_4h = fcn.0040ce67();\n    }\n    if (uVar1 < 3) {\n        uVar3 = 0xffffffff;\n    }\n    else {\n        uVar3 = fcn.0040ce67();\n    }\n    fcn.0040cfb5();\n    arg_14h = var_4h;\n    arg_8h_00 = fcn.0040ce67();\n    uVar3 = fcn.004958d3(arg_8h_00, uVar3, var_14h, arg_14h, arg_8h);\n    fcn.0040e8a0();\n    arg_ch[3] = 1;\n    *arg_ch = uVar3;\ncode_r0x0047a70d:\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 480
    },
    "0047a71e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047a71e(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint uVar3;\n    uint lpszFile;\n    uchar *arg_8h_01;\n    uchar auStack28 [4];\n    uint uStack24;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack16 = 0;\n    uVar3 = 0xffffffff;\n    uStack24 = 0xffffffff;\n    uStack12 = 1;\n    uVar1 = *(arg_8h + 8);\n    if (3 < uVar1) {\n        uVar3 = fcn.0040ce67();\n    }\n    if (2 < uVar1) {\n        fcn.0040c5e7(*(*(arg_8h + 4) + 8));\n    }\n    arg_8h_01 = auStack28;\n    fcn.004119e0(arg_8h_01);\n    iVar2 = *(*(arg_8h + 4) + 4);\n    fcn.00408e90();\n    lpszFile = **(iVar2 + 8);\n    arg_8h_00 = fcn.0040ce67();\n    uVar3 = fcn.004959af(arg_8h_00, lpszFile, uVar3, arg_8h_01);\n    fcn.0040e8a0();\n    arg_ch[3] = 1;\n    *arg_ch = uVar3;\n    fcn.0040e8a0();\n    return 0;\n}\n",
        "token_count": 371
    },
    "0047a7ca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047a7ca(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    \n    uVar1 = 0;\n    if (2 < *(arg_8h + 8)) {\n        uVar1 = fcn.0040ce67();\n    }\n    arg_ch_00 = fcn.0040ce67();\n    arg_8h_00 = fcn.0040ce67();\n    uVar1 = fcn.0049604f(arg_8h_00, arg_ch_00, uVar1);\n    fcn.0040e8a0();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 181
    },
    "0047a945": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047a945(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint X;\n    uint hWnd;\n    uint arg_10h;\n    uint uVar2;\n    uint var_4h;\n    \n    uVar2 = 0xffffffff;\n    var_4h = 0xffffffff;\n    arg_10h = 0xffffffff;\n    uVar1 = *(arg_8h + 8);\n    if (4 < uVar1) {\n        var_4h = fcn.0040ce67();\n        uVar1 = *(arg_8h + 8);\n    }\n    if (3 < uVar1) {\n        uVar2 = fcn.0040ce67();\n        uVar1 = *(arg_8h + 8);\n    }\n    if (2 < uVar1) {\n        arg_10h = fcn.0040ce67();\n    }\n    X = fcn.0040ce67();\n    hWnd = fcn.0040ce67();\n    uVar2 = fcn.00496146(hWnd, X, arg_10h, uVar2, var_4h);\n    fcn.0040e8a0();\n    *arg_ch = uVar2;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 297
    },
    "0047aa5f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047aa5f(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint arg_ch_00;\n    uint hWnd;\n    \n    uVar1 = 0xffffffff;\n    if (2 < *(arg_8h + 8)) {\n        uVar1 = fcn.0040ce67();\n    }\n    arg_ch_00 = fcn.0040ce67();\n    hWnd = fcn.0040ce67();\n    uVar1 = fcn.00496a44(hWnd, arg_ch_00, uVar1);\n    fcn.0040e8a0();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 167
    },
    "0047aab4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047aab4(uint32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    char cVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    uint arg_8h_00;\n    uint uVar7;\n    uint arg_ch_00;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar3 = var_4h;\n    uVar2 = arg_8h;\n    uVar7 = 0;\n    var_8h = 0;\n    var_4h = var_4h & 0xffffff00;\n    arg_8h = arg_8h & 0xffffff00;\n    uVar6 = *(uVar2 + 8);\n    if (2 < uVar6) {\n        iVar1 = *(*(uVar2 + 4) + 8);\n        cVar4 = fcn.00401fb9(0x29);\n        if (cVar4 == '\\0') {\n            fcn.00408e90();\n            uVar7 = **(iVar1 + 8);\n        }\n    }\n    if (3 < uVar6) {\n        cVar4 = fcn.00401fb9(0x29);\n        if (cVar4 == '\\0') {\n            var_8h = fcn.0040ce67();\n        }\n    }\n    if (4 < uVar6) {\n        cVar4 = fcn.00401fb9(0x29);\n        if (cVar4 == '\\0') {\n            uVar5 = fcn.0040ce67();\n            var_4h = uVar3 & 0xffffff00 | uVar5 & 0xffffff01;\n            uVar6 = fcn.0040ce67();\n            arg_8h = uVar6 >> 1 & 1 | uVar2 & 0xffffff00;\n        }\n    }\n    iVar1 = *(*(uVar2 + 4) + 4);\n    fcn.00408e90();\n    arg_ch_00 = **(iVar1 + 8);\n    arg_8h_00 = fcn.0040ce67();\n    uVar7 = fcn.00496ba7(arg_8h_00, arg_ch_00, uVar7, var_8h, var_4h, arg_8h);\n    fcn.0040e8a0();\n    *arg_ch = uVar7;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 585
    },
    "0047b3bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047b3bc(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint arg_18h;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint uVar3;\n    \n    iVar2 = arg_8h;\n    uVar3 = 0xffffffff;\n    arg_8h = 0xffffffff;\n    uVar1 = *(iVar2 + 8);\n    if (2 < uVar1) {\n        uVar3 = fcn.0040ce67();\n    }\n    if (3 < uVar1) {\n        arg_8h = fcn.0040ce67();\n    }\n    if (uVar1 < 5) {\n        arg_18h = 0;\n    }\n    else {\n        arg_18h = fcn.00471dda();\n    }\n    arg_ch_00 = fcn.0040ce67();\n    arg_8h_00 = fcn.0040ce67();\n    uVar3 = fcn.00497a43(arg_8h_00, arg_ch_00, uVar3, arg_8h, arg_18h);\n    fcn.0040e8a0();\n    *arg_ch = uVar3;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 306
    },
    "0047dbef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0047dbef(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    float10 fVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = **(arg_8h + 4);\n    if (puVar2[3] == 6) {\n        puVar2 = *puVar2;\n    }\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    cVar1 = fcn.0046ff5f();\n    if ((cVar1 != '\\0') && (puVar2[3] == 3)) {\n        fcn.0040cfb5();\n        _var_8h = fcn.00442050();\n        fVar3 = fcn.0040cfb5();\n        if (_var_8h != fVar3) {\n            fcn.0040e8a0();\n            arg_ch[3] = 1;\n            *arg_ch = 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 267
    },
    "0047dcbc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0047dcbc(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint *puVar2;\n    float10 fVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = **(arg_8h + 4);\n    if (puVar2[3] == 6) {\n        puVar2 = *puVar2;\n    }\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    cVar1 = fcn.0046ff5f();\n    if (cVar1 != '\\0') {\n        if ((puVar2[3] != 1) && (puVar2[3] != 2)) {\n            fcn.0040cfb5();\n            _var_8h = fcn.00442050();\n            fVar3 = fcn.0040cfb5();\n            if (_var_8h != fVar3) {\n                return 0;\n            }\n        }\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 288
    },
    "0047e40c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047e40c(int32_t arg_8h, uint *arg_ch, uint hWnd)\n\n{\n    uint lpRect;\n    uint var_ch;\n    \n    if (arg_8h == 0) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n        *arg_ch = lpRect;\n        arg_ch[1] = var_ch;\n    }\n    else {\n        *arg_ch = 0;\n        arg_ch[1] = 0;\n        if (arg_8h == 2) {\n            (*_sym.imp.USER32.dll_ClientToScreen)(hWnd, arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "0047ee84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047ee84(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*(arg_8h + 8) < 2) {\n        iVar2 = **(arg_8h + 4);\n        fcn.00408e90();\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = (*(arg_8h + 4))[1];\n        fcn.00408e90();\n        uVar1 = **(iVar2 + 8);\n        iVar2 = **(arg_8h + 4);\n        fcn.00408e90();\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(**(iVar2 + 8), uVar1);\n    fcn.0040e8a0();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 218
    },
    "0047fa12": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047fa12(uint arg_8h, uint *arg_ch)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    int32_t *in_ECX;\n    uint32_t uStack36;\n    uint uStack32;\n    int32_t iStack24;\n    uint uStack20;\n    uint auStack16 [3];\n    \n    (*_sym.imp.USER32.dll_GetCursorPos)(auStack16);\n    bVar1 = false;\n    uStack32 = auStack16[0];\n    iStack24 = 1;\n    fcn.00408e90();\n    iVar3 = fcn.0046e1cb();\n    if (iVar3 == 0) {\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n    }\n    else if (uStack36 == 2) {\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        iVar3 = *(*in_ECX + 4);\n        iVar4 = *(iVar3 + 8 + in_ECX);\n        if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 5;\n        iVar4 = *(iVar3 + 8 + in_ECX);\n        if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x18) = 0;\n    }\n    else {\n        if (1 < uStack36) {\n            cVar2 = fcn.00401fb9(0x29);\n            if (cVar2 == '\\0') {\n                uStack32 = fcn.0040ce67();\n            }\n            cVar2 = fcn.00401fb9(0x29);\n            if (cVar2 == '\\0') {\n                fcn.0040ce67();\n            }\n            cVar2 = fcn.00401fb9(0x29);\n            if ((cVar2 == '\\0') || (cVar2 = fcn.00401fb9(0x29),  cVar2 == '\\0')) {\n                bVar1 = true;\n            }\n        }\n        if ((uStack36 < 4) || (iStack24 = fcn.0040ce67(),  0 < iStack24)) {\n            if (uStack36 < 5) {\n                arg_10h = 0xffffffff;\n            }\n            else {\n                arg_10h = fcn.0040ce67();\n            }\n            if (bVar1) {\n                fcn.00482201(uStack20, uStack32, arg_10h, 1);\n            }\n            if (0 < iStack24) {\n                do {\n                    fcn.00408e90();\n                    fcn.0046e273();\n                    fcn.0046e899();\n                    fcn.00408e90();\n                    fcn.0046e2a5();\n                    fcn.0046e899();\n                    iStack24 = iStack24 + -1;\n                } while (iStack24 != 0);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 760
    },
    "0047fbd3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047fbd3(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint arg_ch_00;\n    uint unaff_EBX;\n    int32_t arg_10h;\n    uint uStack28;\n    \n    arg_10h = -1;\n    fcn.00408e90();\n    iVar1 = fcn.0046e1cb();\n    if (iVar1 == 0) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        arg_8h_00 = fcn.0040ce67();\n        arg_ch_00 = fcn.0040ce67();\n        fcn.0040ce67();\n        fcn.0040ce67();\n        if (5 < *(arg_8h + 8)) {\n            arg_10h = fcn.0040ce67();\n        }\n        fcn.00482201(arg_8h_00, arg_ch_00, arg_10h, 1);\n        if ((arg_10h < 2) && (arg_10h != -1)) {\n            arg_10h = 2;\n        }\n        fcn.00408e90();\n        fcn.0046e273();\n        fcn.0046e899();\n        fcn.00482201(uStack28, unaff_EBX, arg_10h, 1);\n        fcn.0046e899();\n        fcn.00408e90();\n        fcn.0046e2a5();\n        fcn.0046e899();\n    }\n    return 0;\n}\n",
        "token_count": 383
    },
    "0047ffb9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047ffb9(int32_t arg_8h)\n\n{\n    uint arg_10h;\n    uint arg_ch;\n    uint arg_8h_00;\n    uint arg_14h;\n    \n    arg_10h = 0xffffffff;\n    if (*(arg_8h + 8) == 3) {\n        arg_10h = fcn.0040ce67();\n    }\n    arg_14h = 0;\n    arg_ch = fcn.0040ce67();\n    arg_8h_00 = fcn.0040ce67();\n    fcn.00482201(arg_8h_00, arg_ch, arg_10h, arg_14h);\n    return 0;\n}\n",
        "token_count": 161
    },
    "0048003b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048003b(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 1;\n    if (((*(arg_8h + 8) < 2) || (iVar3 = fcn.0040ce67(),  0 < iVar3)) && (iVar2 = 0,  0 < iVar3)) {\n        do {\n            fcn.00408e90();\n            cVar1 = fcn.0046e2d7();\n            if (cVar1 == '\\0') {\n                fcn.0040e8a0();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n                return 0;\n            }\n            fcn.0046e899();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < iVar3);\n    }\n    return 0;\n}\n",
        "token_count": 223
    },
    "00480857": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00480857(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (2 < *(arg_8h + 8)) {\n        uVar1 = fcn.00471dda();\n        iVar2 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n        if (iVar2 != 0) {\n            uVar1 = fcn.00471dda();\n            goto code_r0x00480895;\n        }\n    }\n    uVar1 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\ncode_r0x00480895:\n    iVar2 = fcn.0040ce67();\n    iVar3 = fcn.0040ce67();\n    fcn.0047e40c(*(var_4h + 0x10c), &var_ch, uVar1);\n    uVar1 = (*_sym.imp.USER32.dll_GetDC)(0);\n    uVar4 = (*_sym.imp.GDI32.dll_GetPixel)(uVar1, iVar2 + var_ch, iVar3 + var_8h);\n    fcn.0040e8a0();\n    arg_ch[3] = 1;\n    *arg_ch = uVar4 >> 0x10 & 0xffU | (uVar4 & 0xff) << 0x10 | uVar4 & 0xff00;\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar1);\n    return 0;\n}\n",
        "token_count": 376
    },
    "00480cc3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00480cc3(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(arg_8h + 8) == 2) {\n        iVar1 = fcn.0040ce67();\n        iVar2 = **(arg_8h + 4);\n        if (iVar1 != 0) {\n            fcn.00408e90();\n            fcn.0046a2b4(*(iVar2 + 8), 0);\n            return 0;\n        }\n    }\n    else {\n        iVar2 = **(arg_8h + 4);\n    }\n    fcn.00408e90();\n    fcn.0046a0e3(*(iVar2 + 8), 0);\n    return 0;\n}\n",
        "token_count": 179
    },
    "00480ddd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00480ddd(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*(arg_8h + 8) == 2) {\n        iVar1 = fcn.0040ce67();\n        if (iVar1 == 1) {\n            fcn.00408e90();\n            goto code_r0x00480e1c;\n        }\n    }\n    fcn.00408e90();\ncode_r0x00480e1c:\n    fcn.0046e91a();\n    return 0;\n}\n",
        "token_count": 125
    },
    "00481648": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00481648(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uStack960;\n    uint uStack956;\n    uint uStack952;\n    uint uStack948;\n    uchar auStack672 [510];\n    ushort uStack162;\n    int32_t iStack160;\n    uchar auStack156 [126];\n    ushort uStack30;\n    uint uStack28;\n    \n    uStack956 = *0x4d138c;\n    uStack960 = 0x3a8;\n    uStack948 = 0x10;\n    uStack952 = 1;\n    iVar1 = **(arg_8h + 4);\n    uVar2 = *(arg_8h + 8);\n    fcn.00408e90();\n    fcn.0042d27b(auStack156, **(iVar1 + 8), 0x3f);\n    uStack30 = 0;\n    iVar1 = *(*(arg_8h + 4) + 4);\n    fcn.00408e90();\n    fcn.0042d27b(auStack672, **(iVar1 + 8), 0xff);\n    uStack162 = 0;\n    iStack160 = fcn.0040ce67();\n    iStack160 = iStack160 * 1000;\n    if (uVar2 < 4) {\n        uStack28 = 0;\n    }\n    else {\n        uStack28 = fcn.0040ce67();\n    }\n    (*_sym.imp.SHELL32.dll_Shell_NotifyIconW)(1, &uStack960);\n    return 0;\n}\n",
        "token_count": 372
    },
    "00483b57": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00483be3)\n// WARNING: Removing unreachable block (ram,0x00483c0c)\n// WARNING: Removing unreachable block (ram,0x00483c98)\n// WARNING: Removing unreachable block (ram,0x00483cac)\n// WARNING: Removing unreachable block (ram,0x00483cb5)\n// WARNING: Removing unreachable block (ram,0x00483cce)\n\nuint __cdecl fcn.00483b57(int32_t arg_8h, uint arg_ch)\n\n{\n    uint16_t **ppuVar1;\n    uint16_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint uVar6;\n    int32_t *unaff_EBX;\n    uint uVar7;\n    int32_t unaff_ESI;\n    uint16_t *puVar8;\n    int32_t *unaff_EDI;\n    uint16_t *puVar9;\n    int32_t *piVar10;\n    int32_t *piStack164;\n    int32_t *piStack160;\n    int32_t *arg_14h;\n    int32_t *piVar11;\n    int32_t *piVar12;\n    int32_t iStack132;\n    int32_t *piVar13;\n    int32_t *piVar14;\n    uint uStack108;\n    uint16_t *apuStack100 [2];\n    int32_t iStack92;\n    uint32_t uStack88;\n    uint uStack84;\n    int32_t *piStack80;\n    uint uStack72;\n    int32_t *piStack68;\n    uint uStack64;\n    uint uStack52;\n    uint uStack48;\n    uint16_t *puStack44;\n    uint16_t *puStack40;\n    uint16_t *puStack36;\n    int32_t *piStack32;\n    uint uStack28;\n    \n    uStack88 = *(arg_8h + 8);\n    puStack40 = *0x49fbd4;\n    puStack36 = *0x49fbd8;\n    piStack32 = *0x49fbdc;\n    uStack28 = *0x49fbe0;\n    (*_sym.imp.OLEAUT32.dll_VariantClear)();\n    uVar7 = 0;\n    uStack52 = 0;\n    puVar9 = 0x49d0d0;\n    uStack48 = 0;\n    uStack88 = 0;\n    piStack80 = 0x1;\n    iStack132 = 0x483bb0;\n    fcn.0040b5c1(0x49d0d0);\n    iStack132 = 0;\n    iVar4 = (*_sym.imp.ole32.dll_CoInitialize)();\n    if (iVar4 == 1) {\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    piVar12 = 0x29;\n    piVar11 = 0x483bd0;\n    cVar3 = fcn.00401fb9(0x29);\n    if (cVar3 != '\\0') {\n        piVar11 = 0x49d0d0;\n        fcn.0040b5c1(0x49d0d0);\n    }\n    iVar4 = **(arg_8h + 4);\n    fcn.00408e90();\n    ppuVar1 = *(iVar4 + 8);\n    apuStack100[0] = *ppuVar1;\n    puVar8 = ppuVar1[1];\n    puStack36 = ppuVar1[2];\n    piStack32 = ppuVar1[3];\n    *piStack32 = *piStack32 + 1;\n    puStack44 = apuStack100[0];\n    puStack40 = puVar8;\n    puVar5 = fcn.004248f3(0x49d0d0);\n    puVar2 = apuStack100[0];\n    if (puVar8 == puVar5) {\n        for (; puVar8 != NULL; puVar8 = puVar8 + -1) {\n            if (*puVar2 != *puVar9) {\n                iVar4 = (-(*puVar2 < *puVar9) & 0xfffffffe) + 1;\n                goto code_r0x00483c82;\n            }\n            puVar9 = puVar9 + 1;\n            puVar2 = puVar2 + 1;\n        }\n        iVar4 = 0;\ncode_r0x00483c82:\n        if (iVar4 != 0) goto code_r0x00483dfa;\n        uStack108 = 0;\n        iVar4 = (*_sym.imp.ole32.dll_GetRunningObjectTable)();\n        if (-1 < iVar4) {\n            arg_14h = &stack0xffffff9c;\n            piVar10 = unaff_EBX;\n            iVar4 = (**(*unaff_EBX + 0x24))();\n            if (iVar4 < 0) {\n                (**(*unaff_EDI + 8))();\n                goto code_r0x00483cff;\n            }\n            piVar13 = NULL;\n            apuStack100[0] = 0x1;\n            (**(_pe_dos_header + 0x14))();\ncode_r0x00483d2d:\n            piStack160 = &stack0xffffff7c;\n            piStack164 = 0x1;\n            piVar14 = piVar10;\n            iVar4 = (**(*piVar10 + 0xc))();\n            if ((iVar4 != 0) || (unaff_EBX == NULL)) goto code_r0x00483de2;\n            iVar4 = (**(*piVar11 + 0x18))(piVar11, unaff_EBX, &stack0xffffff78);\n            if ((iVar4 < 0) || (iVar4 = (***unaff_EBX)(unaff_EBX, 0x49fbb4, &stack0xffffff5c),  iVar4 < 0))\n            goto code_r0x00483dc9;\n            (**(*unaff_EBX + 8))(unaff_EBX);\n            iVar4 = fcn.0046031f(1);\n            if (iVar4 != 1) {\ncode_r0x00483dbb:\n                (**(*piVar10 + 8))(piVar10);\n                piStack164 = NULL;\ncode_r0x00483dc9:\n                (**(*piStack160 + 8))(piStack160);\n                piVar10 = piVar14;\n                goto code_r0x00483d2d;\n            }\n            if (piVar12 != unaff_EBX) {\n                piVar12 = piVar12 + 1;\n                goto code_r0x00483dbb;\n            }\n            (**(*piStack164 + 8))(piStack164);\ncode_r0x00483de2:\n            (**(*piVar13 + 8))(piVar13);\n            (**(*arg_14h + 8))(arg_14h);\n            unaff_ESI = 0;\n            goto code_r0x00483e71;\n        }\ncode_r0x00483cff:\n        arg_14h = NULL;\n        unaff_EBX = NULL;\n        uStack108 = 0;\n        uVar7 = 0x80004005;\n    }\n    else {\ncode_r0x00483dfa:\n        arg_14h = 0x1;\n        uVar6 = (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n        uStack88 = 0;\n        unaff_EBX = &stack0xffffffa4;\n        uStack84 = 0;\n        uStack108 = 1;\n        piStack160 = 0x2;\n        piStack164 = 0x15;\n        iStack92 = 0x49fbb4;\n        iVar4 = (*_sym.imp.ole32.dll_CoGetInstanceFromFile)(0, 0, 0);\n        if (iVar4 < 0) {\n            unaff_EDI = NULL;\n            iVar4 = (*_sym.imp.ole32.dll_CoGetObject)(piVar12, 0, 0x49fbb4, &stack0xffffff80);\n            if (iVar4 < 0) {\n                uVar7 = fcn.004846fb(iVar4, 0, 0, 0);\n                (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar6);\n                goto code_r0x00483ef1;\n            }\n        }\n        piStack160 = unaff_EDI;\n        (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar6);\ncode_r0x00483e71:\n        if (piVar12 != NULL) {\n            if (unaff_ESI != 0) {\n                piStack164 = piStack68;\n                piStack160 = uStack64;\n                iVar4 = fcn.0046031f(uStack72);\n                if (iVar4 == 0) {\n                    piStack160 = 0x483ea6;\n                    (**(*piVar12 + 8))();\n                    arg_14h = NULL;\n                    unaff_EBX = NULL;\n                    uStack108 = 0;\n                    uVar7 = 0x80028ca0;\n                    goto code_r0x00483d07;\n                }\n            }\n            uStack88 = uStack88 & 0xffff0000 | 9;\n            piStack160 = 0x483ecc;\n            piStack80 = piVar12;\n            fcn.00470bfd(&stack0xffffffa8);\n            goto code_r0x00483ef1;\n        }\n        uVar7 = 0;\n        piStack164 = NULL;\n    }\ncode_r0x00483d07:\n    piStack160 = 0x483d10;\n    uVar7 = fcn.004846fb(uVar7, uStack108, unaff_EBX, arg_14h);\ncode_r0x00483ef1:\n    piStack160 = 0x483efa;\n    fcn.0040b1ff();\n    piStack160 = &stack0xffffffa4;\n    piStack164 = 0x483f05;\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n    return uVar7;\n}\n",
        "token_count": 2253
    },
    "00489cc5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00489cc5(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t var_18h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = **(arg_8h + 4);\n    if (piVar1[3] == 0xc) {\n        if (*(arg_8h + 8) < 2) {\n            if (piVar1[3] == 0xc) {\n                iVar2 = *piVar1;\n            }\n            else {\n                iVar2 = 0;\n            }\n            iVar2 = *(iVar2 + 8);\n            fcn.0040e8a0();\n            arg_ch[3] = 7;\n            *arg_ch = iVar2;\n        }\n        else {\n            var_8h = 0;\n            var_4h = 0;\n            var_10h = 0;\n            fcn.004119e0((*(arg_8h + 4))[1]);\n            if (var_ch != 4) {\n                var_18h = fcn.0040ce67();\n                var_18h = var_18h + -1;\n                fcn.0040e8a0();\n                var_ch = 1;\n            }\n            iVar2 = fcn.0046f80e(&var_18h, &var_8h, &var_4h);\n            fcn.0040e8a0();\n            if (iVar2 == 0) {\n                arg_ch[3] = 1;\n                *arg_ch = 0;\n                iVar2 = *(*in_ECX + 4);\n                iVar3 = *(iVar2 + 8 + in_ECX);\n                if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                    iVar3 = *(iVar3 + 0x38);\n                }\n                *(iVar3 + 0x14) = var_4h;\n                iVar3 = *(iVar2 + 8 + in_ECX);\n                if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                    iVar3 = *(iVar3 + 0x38);\n                }\n                *(iVar3 + 0x18) = 0;\n            }\n            else {\n                arg_ch[3] = 7;\n                *arg_ch = iVar2;\n            }\n            fcn.0040e8a0();\n        }\n    }\n    else {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        iVar2 = *(*in_ECX + 4);\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 1;\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 758
    },
    "0048aea5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048aea5(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    \n    cVar1 = fcn.0046ff5f();\n    if ((cVar1 != '\\0') && (iVar2 = fcn.0040ce67(),  iVar2 == 0)) {\n        return 0;\n    }\n    iVar2 = **(arg_8h + 4);\n    fcn.00408e90();\n    if (in_ECX + 0x410 != *(iVar2 + 8)) {\n        fcn.0040c1c3(*(iVar2 + 8));\n    }\n    if (arg_ch == 2) {\n        iVar2 = fcn.0040ce67();\n        iVar2 = iVar2 * 1000;\n    }\n    else {\n        iVar2 = 0;\n    }\n    *(in_ECX + 0x420) = iVar2;\n    uVar3 = (*_sym.imp.WINMM.dll_timeGetTime)();\n    *(in_ECX + 0x424) = uVar3;\n    return 1;\n}\n",
        "token_count": 269
    },
    "0048cc79": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048cc79(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int16_t *piVar1;\n    uint32_t uVar2;\n    \n    fcn.0040bfbf();\n    fcn.0040bfbf();\n    fcn.0040bfbf();\n    if (1 < arg_18h) {\n        piVar1 = fcn.0040660f(0);\n        if (*piVar1 == 0x5c) {\n            piVar1 = fcn.0040660f(1);\n            if (*piVar1 == 0x5c) {\n                fcn.0040ad22(0, 2);\n                uVar2 = fcn.0046ea9d(0x49d034);\n                if (uVar2 == 0xffffffff) {\n                    uVar2 = arg_18h;\n                }\n                fcn.004086ac(&arg_14h, 0, uVar2);\n                fcn.0040ad22(0, uVar2 + 1);\n                goto code_r0x0048cd07;\n            }\n        }\n    }\n    fcn.0040bfbf();\ncode_r0x0048cd07:\n    uVar2 = fcn.0046ea9d(0x49d034);\n    if (uVar2 == 0xffffffff) {\n        uVar2 = arg_18h;\n    }\n    fcn.004086ac(&arg_14h, 0, uVar2);\n    fcn.004086ac(&arg_14h, uVar2 + 1, (arg_18h - uVar2) + -1);\n    fcn.0040562b(0x49d034);\n    fcn.0040b1ff();\n    return;\n}\n",
        "token_count": 418
    },
    "0048d32a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048d32a(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t arg_8h_00;\n    uint var_4h;\n    \n    iVar1 = fcn.00471db4();\n    iVar2 = fcn.00471e24();\n    arg_8h_00 = -1;\n    iVar3 = fcn.0040ce67();\n    iVar3 = iVar3 + -1;\n    if (2 < *(arg_8h + 8)) {\n        arg_8h_00 = fcn.0040ce67();\n    }\n    if ((iVar2 < iVar3) || (iVar3 < 0)) {\n        iVar3 = iVar2;\n    }\n    if ((arg_8h_00 < 0) || (iVar2 - iVar3 < arg_8h_00)) {\n        arg_8h_00 = iVar2 - iVar3;\n    }\n    uVar4 = fcn.00470da3(arg_8h_00);\n    fcn.00420db0(uVar4, iVar1 + iVar3, arg_8h_00);\n    return 0;\n}\n",
        "token_count": 283
    },
    "0048d674": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048d674(int32_t arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    int32_t arg_ch_00;\n    uint16_t *puVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t extraout_ECX;\n    int32_t unaff_EBX;\n    int32_t *unaff_ESI;\n    int32_t arg_8h_00;\n    float10 fVar9;\n    int32_t *piVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t *piStack132;\n    int32_t iStack128;\n    int32_t aiStack124 [2];\n    int32_t **ppiStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack88;\n    int32_t iStack80;\n    int32_t iStack76;\n    uchar uStack72;\n    uint uStack60;\n    \n    iVar12 = *(arg_8h + 8);\n    fcn.00407c18(0x400);\n    uVar3 = fcn.0041fd8b(0x20000);\n    fcn.004070c2(uVar3);\n    uVar3 = fcn.0041fd8b(0x20000);\n    fcn.004070c2(uVar3);\n    iVar2 = **(arg_8h + 4);\n    fcn.00408e90();\n    iVar2 = *(iVar2 + 8);\n    fcn.0040c25d();\n    fcn.00408157();\n    fcn.0040b606(L\"\\\\\\\\[\\\\\\\\nrt]|%%|%[-+ 0#]?([0-9]*|\\\\*)?(\\\\.[0-9]*|\\\\.\\\\*)?[hlL]?[diouxXeEfgGs]\");\n    arg_ch_00 = extraout_ECX;\n    fcn.0040817f(&uStack100);\n    fcn.0040b1ff();\n    arg_8h_00 = 0;\n    uStack60 = *(iVar2 + 4);\n    iVar12 = iVar12 + -1;\n    uStack72 = 1;\n    uStack108 = 0x4af40c;\n    uStack104 = 0;\n    uStack100 = 0;\n    uStack96 = 0;\n    iVar8 = 0;\n    iStack76 = iVar2;\n    if (0 < *(iVar2 + 4)) {\n        do {\n            arg_8h_00 = iVar8;\n            iVar11 = arg_8h_00;\n            iVar8 = arg_8h_00;\n            iVar4 = fcn.004690f8(arg_8h_00, &uStack108);\n            if (iVar4 < 1) break;\n            iVar4 = **ppiStack116;\n            fcn.00407d1b(iVar2, arg_ch_00, iVar4 - arg_ch_00);\n            iVar12 = iVar4;\n            piVar5 = fcn.004058ca(iVar4);\n            if (*piVar5 == 0x25) {\n                iVar12 = iVar4 + 1;\n                piVar5 = fcn.004058ca(iVar12);\n                arg_8h_00 = iVar11;\n                if (*piVar5 != 0x25) goto code_r0x0048d7bd;\ncode_r0x0048d7af:\n                fcn.004051ec(iVar8);\n            }\n            else {\ncode_r0x0048d7bd:\n                piVar5 = fcn.004058ca(iVar4);\n                arg_8h_00 = 0x5c;\n                if (*piVar5 == 0x5c) {\n                    iVar8 = iVar4 + 1;\n                    piVar5 = fcn.004058ca(iVar8);\n                    iVar1 = *piVar5;\n                    if ((((iVar1 == 0x5c) || (iVar1 == 0x6e)) || (iVar1 == 0x72)) || (iVar1 == 0x74))\n                    goto code_r0x0048d7af;\n                }\n                else if (unaff_EBX != aiStack124[0]) {\n                    unaff_EBX = unaff_EBX + 1;\n                    arg_8h_00 = iStack128;\n                    fcn.004086ac(iVar2, iVar4, iStack128);\n                    arg_ch_00 = iStack80 + -1;\n                    puVar6 = fcn.0040660f(arg_ch_00);\n                    uVar7 = *puVar6;\n                    if (uVar7 < 0x6a) {\n                        if (uVar7 == 0x69) {\ncode_r0x0048d898:\n                            iVar8 = fcn.0040ce67();\n                            iVar11 = unaff_EBX;\n                            goto code_r0x0048d8ab;\n                        }\n                        if ((uVar7 != 0x45) && (uVar7 != 0x47)) {\n                            if ((uVar7 == 0x58) || (uVar7 == 100)) goto code_r0x0048d898;\n                            if (2 < uVar7 - 0x65) goto code_r0x0048d8b8;\n                        }\n                        fVar9 = fcn.0040cfb5();\n                        fcn.0041faa3(piStack132, uStack88, SUB84(fVar9, 0));\n                    }\n                    else {\n                        if (uVar7 == 0x6f) goto code_r0x0048d898;\n                        if (uVar7 != 0x73) {\n                            if ((uVar7 == 0x75) || (uVar7 == 0x78)) goto code_r0x0048d898;\n                            goto code_r0x0048d8b8;\n                        }\n                        iVar8 = *(*(arg_8h + 4) + arg_8h_00 * 4);\n                        fcn.00408e90();\n                        iVar11 = unaff_EBX;\n                        fcn.0042d27b(unaff_EBX, **(iVar8 + 8), 0xffff);\n                        *(unaff_EBX + 0x1fffe) = 0;\n                        iVar8 = unaff_EBX;\ncode_r0x0048d8ab:\n                        unaff_EBX = iVar11;\n                        fcn.0041faa3(piStack132, uStack88, iVar8);\n                    }\ncode_r0x0048d8b8:\n                    fcn.004052b7(piStack132);\n                }\n            }\n            iVar8 = arg_8h_00;\n        } while (arg_8h_00 < *(iVar2 + 4));\n    }\n    if (arg_8h_00 < *(iVar2 + 4)) {\n        fcn.00407d1b(iVar2, arg_8h_00, 0xffffffff);\n    }\n    fcn.00407c5d(aiStack124);\n    uStack112 = 0x4af40c;\n    fcn.00468d7c();\n    fcn.0041fd94(uStack108);\n    fcn.004082a1();\n    fcn.0040b1ff();\n    *unaff_ESI = *unaff_ESI + -1;\n    if (*unaff_ESI == 0) {\n        uVar3 = 4;\n        fcn.0041fd4d(unaff_ESI);\n        fcn.0041fd94(iVar12, unaff_ESI, uVar3);\n    }\n    *piStack132 = *piStack132 + -1;\n    if (*piStack132 == 0) {\n        uVar3 = 4;\n        piVar10 = piStack132;\n        fcn.0041fd4d(piStack132);\n        fcn.0041fd94(piStack132, piVar10, uVar3);\n    }\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 1825
    },
    "0048db5e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048db5e(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 1;\n    var_8h = -1;\n    var_4h = -1;\n    iVar4 = 0;\n    iVar1 = **(arg_8h + 4);\n    fcn.00408e90();\n    iVar1 = *(iVar1 + 8);\n    iVar3 = *(*(arg_8h + 4) + 4);\n    fcn.00408e90();\n    puVar2 = *(iVar3 + 8);\n    iVar3 = *(arg_8h + 8);\n    if (iVar3 == 2) {\ncode_r0x0048dc56:\n        iVar3 = 0;\n    }\n    else {\n        if (iVar3 != 3) {\n            if (iVar3 != 4) {\n                if (iVar3 != 5) {\n                    if (iVar3 != 6) goto code_r0x0048dc7b;\n                    var_4h = fcn.0040ce67();\n                    if (var_4h < 1) goto code_r0x0048dbe4;\n                }\n                var_8h = fcn.0040ce67();\n                var_8h = var_8h + -1;\n                if (var_8h < 0) goto code_r0x0048dbe4;\n            }\n            var_ch = fcn.0040ce67();\n            if (var_ch == 0) {\ncode_r0x0048dbe4:\n                fcn.0040e8a0();\n                *arg_ch = 0;\n                arg_ch[3] = 1;\n                iVar1 = *(*in_ECX + 4);\n                iVar3 = *(iVar1 + 8 + in_ECX);\n                if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                    iVar3 = *(iVar3 + 0x38);\n                }\n                *(iVar3 + 0x14) = 1;\n                iVar3 = *(iVar1 + 8 + in_ECX);\n                if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n                    iVar3 = *(iVar3 + 0x38);\n                }\n                *(iVar3 + 0x18) = 0;\n                return 0;\n            }\n        }\n        iVar3 = fcn.0040ce67();\n        if ((iVar3 < 0) || (3 < iVar3)) goto code_r0x0048dc56;\n    }\n    iVar4 = fcn.00468daa(*puVar2, iVar3, var_ch, puVar2[1], var_8h, var_4h);\ncode_r0x0048dc7b:\n    iVar1 = *(iVar1 + 4);\n    fcn.0040e8a0();\n    arg_ch[3] = 1;\n    *arg_ch = -(iVar4 != iVar1) & iVar4 + 1U;\n    return 0;\n}\n",
        "token_count": 745
    },
    "00492a0b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00492a0b(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.0040c5e7(**(arg_8h + 4));\n    if (*(arg_8h + 8) < 2) {\n        fcn.004084e7(0x49d0d0);\n    }\n    else {\n        iVar1 = *(*(arg_8h + 4) + 4);\n        fcn.00408e90();\n        if (in_ECX + 0x1e8 != *(iVar1 + 8)) {\n            fcn.0040c1c3(*(iVar1 + 8));\n        }\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "00492a63": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00492a63(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    fcn.00492a0b(arg_8h);\n    if (*(arg_8h + 8) == 3) {\n        iVar1 = fcn.0040ce67();\n        iVar1 = iVar1 * 1000;\n    }\n    else {\n        iVar1 = 0;\n    }\n    *(in_ECX + 0x2e0) = iVar1;\n    uVar2 = (*_sym.imp.WINMM.dll_timeGetTime)();\n    *(in_ECX + 0x2e8) = uVar2;\n    return;\n}\n",
        "token_count": 165
    },
    "00494588": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00494588(int32_t *arg_8h, int32_t *arg_ch, int32_t arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint noname_10;\n    \n    uVar4 = arg_18h;\n    if (arg_18h == 0xffffffff) {\n        uVar4 = 4;\n    }\n    if ((uVar4 & 0xc) == 0) {\n        uVar4 = uVar4 | 4;\n    }\n    uVar5 = fcn.00498021(uVar4 | 2);\n    iVar6 = fcn.004079b6(arg_8h, 0, L\"msctls_updown32\", 0, uVar5, 0, 0, 0, 0, arg_10h, noname_10, 0);\n    if (iVar6 != 0) {\n        fcn.0042cef5(arg_14h);\n        uVar5 = fcn.00442010();\n        cVar3 = fcn.0040c4db(uVar5, &arg_18h, &arg_10h);\n        pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n        if (((cVar3 != '\\0') && (*arg_8h == ***(*0x4d1910 + arg_18h * 4))) &&\n           (*(**(*0x4d1924 + arg_10h * 4) + 0x90) == '\\x03')) {\n            *arg_ch = iVar6;\n            iVar1 = ***(*0x4d1924 + arg_10h * 4);\n            arg_ch[0xd] = iVar1;\n            (*pcVar2)(iVar6, 0x469, iVar1, 0);\n            (*pcVar2)(iVar6, 0x465, 0, 0x80017fff);\n            return 1;\n        }\n        (*_sym.imp.USER32.dll_DestroyWindow)(iVar6);\n    }\n    return 0;\n}\n",
        "token_count": 497
    },
    "00496146": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00496146(uint hWnd, int32_t X, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint *arg_8h;\n    int32_t iVar1;\n    uint *puVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t *arg_ch;\n    int32_t iVar6;\n    int32_t lpRect;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t lpPoint;\n    int32_t var_4h;\n    \n    cVar3 = fcn.0040c4db(hWnd, &var_4h, &var_ch);\n    if (cVar3 == '\\0') {\n        uVar4 = 0;\n    }\n    else {\n        arg_8h = **(*0x4d1910 + var_4h * 4);\n        arg_ch = **(*0x4d1924 + var_ch * 4);\n        if ((((X != -1) || (arg_10h != -1)) || (arg_14h != -1)) || (arg_18h != -1)) {\n            iVar1 = *arg_ch;\n            var_ch = arg_ch;\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar1, &lpRect);\n            if (arg_14h == -1) {\n                arg_14h = var_14h - lpRect;\n            }\n            if (arg_18h == -1) {\n                arg_18h = var_10h - var_18h;\n            }\n            lpPoint = lpRect;\n            var_4h = var_18h;\n            (*_sym.imp.USER32.dll_ScreenToClient)(*arg_8h, &lpPoint);\n            if (X == -1) {\n                X = lpPoint;\n            }\n            if (arg_10h == -1) {\n                arg_10h = var_4h;\n            }\n            arg_8h[0x16] = X;\n            arg_8h[0x17] = arg_10h;\n            arg_8h[0x18] = arg_14h;\n            arg_8h[0x19] = arg_18h;\n            if (((*(arg_ch + 0x22) != X) || (*(arg_ch + 0x8a) != arg_10h)) ||\n               ((*(arg_ch + 0x23) != arg_14h || (*(arg_ch + 0x8e) != arg_18h)))) {\n                (*_sym.imp.USER32.dll_MoveWindow)(iVar1, X, arg_10h, arg_14h, arg_18h, 1);\n                fcn.004076aa(arg_8h, arg_ch, 1);\n                if ((*(arg_ch + 0x24) == '\\x03') && (iVar6 = 3,  iVar5 = *0x4d1934,  2 < *0x4d1934)) {\n                    do {\n                        puVar2 = **(*0x4d1924 + iVar6 * 4);\n                        if ((puVar2 != NULL) &&\n                           (((puVar2[1] == arg_8h[1] && (*(puVar2 + 0x24) == '\\x16')) && (puVar2[0xd] == iVar1)))) {\n                            (*_sym.imp.USER32.dll_SendMessageW)(*puVar2, 0x469, iVar1, 0);\n                            iVar5 = *0x4d1934;\n                        }\n                        iVar6 = iVar6 + 1;\n                        arg_ch = var_ch;\n                    } while (iVar6 <= iVar5);\n                }\n                fcn.00497d04(arg_8h, arg_ch, 1);\n            }\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 881
    },
    "00496a44": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00496a44(uint hWnd, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint *hWnd_00;\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    bool bVar4;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    cVar2 = fcn.0040c4db(hWnd, &var_8h, &var_4h);\n    if (cVar2 == '\\0') {\n        return false;\n    }\n    var_8h = **(*0x4d1910 + var_8h * 4);\n    hWnd_00 = **(*0x4d1924 + var_4h * 4);\n    uVar1 = *hWnd_00;\n    if (arg_ch == 0xffffffff) goto code_r0x00496b0c;\n    cVar2 = *(hWnd_00 + 0x24);\n    if (cVar2 == '\\x02') {\n        arg_ch = arg_ch | 4;\ncode_r0x00496ad6:\n        bVar4 = (arg_ch & 0x800) == 0;\n        if (bVar4) {\n            arg_ch = arg_ch | 0x10000;\n        }\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0xcf, !bVar4, 0);\n    }\n    else {\n        if (cVar2 == '\\x03') goto code_r0x00496ad6;\n        if (cVar2 == '\\x06') {\n            arg_ch = arg_ch | 0xe;\n        }\n        else if (cVar2 == '\\a') {\n            arg_ch = arg_ch | 3;\n        }\n        else if (cVar2 == '\\n') {\n            arg_ch = arg_ch | 0x4000000;\n        }\n        else if (cVar2 == '\\x16') {\n            return false;\n        }\n    }\n    iVar3 = (*_sym.imp.USER32.dll_SetWindowLongW)(uVar1, 0xfffffff0, arg_ch | 0x50000000);\ncode_r0x00496b0c:\n    if ((arg_10h != -1) &&\n       (iVar3 = (*_sym.imp.USER32.dll_SetWindowLongW)(uVar1, 0xffffffec, arg_10h), \n       *(**(*0x4d1924 + var_4h * 4) + 0x90) == '\\x13')) {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0x1036, 0, arg_10h);\n    }\n    if ((*(hWnd_00 + 0x93) == 0xff) || (*(hWnd_00 + 0x93) == *(var_8h + 400))) {\n        fcn.00497d04(var_8h, hWnd_00, 1);\n    }\n    else {\n        (*_sym.imp.USER32.dll_ShowWindow)(uVar1, 0);\n    }\n    if (((*(hWnd_00 + 0x24) == '\\x02') || (*(hWnd_00 + 0x24) == '\\x03')) || (arg_10h != -1)) {\n        (*_sym.imp.USER32.dll_SetWindowPos)(*hWnd_00, 0, 0, 0, 0, 0, 0x27);\n    }\n    return iVar3 != 0;\n}\n",
        "token_count": 787
    },
    "004987af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004987af(uint arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint X;\n    uint Y;\n    uint nXEnd;\n    uint nYEnd;\n    uint *puVar2;\n    uint arg_14h;\n    int32_t iVar3;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    var_1ch = 0;\n    arg_14h = 0;\n    var_24h = 0;\n    var_4h = 0;\n    if (arg_ch != 0) {\n        do {\n            iVar3 = 0;\n            if (0 < *(arg_ch + 0xc)) {\n                var_ch = arg_ch + 0x1c;\n                puVar2 = arg_ch + 0x10;\n                var_8h = arg_ch + 0x18;\n                var_14h = arg_ch + 0x14;\n                var_10h = arg_ch + 0x20;\n                do {\n                    X = *puVar2;\n                    Y = *var_14h;\n                    uVar1 = *(arg_ch + 0x810 + iVar3);\n                    nYEnd = var_24h;\n                    nXEnd = var_1ch;\n                    if (1 < uVar1) {\n                        if (uVar1 < 8) {\n                            fcn.00498916(arg_8h, X, Y, arg_14h);\n                            arg_14h = var_4h;\n                            nYEnd = Y;\n                            nXEnd = X;\n                            if ((*(arg_ch + 0x810 + iVar3) & 0xfe) == 4) {\n                                fcn.00498755(arg_8h, X, Y, var_1ch, var_24h, var_4h);\n                                fcn.00498916(arg_8h, *var_8h, *var_ch, var_4h);\n                                nXEnd = *var_8h;\n                                nYEnd = *var_ch;\n                                fcn.00498755(arg_8h, *var_10h, puVar2[5], nXEnd, nYEnd, var_4h);\n                                fcn.00498916(arg_8h, *var_10h, puVar2[5], var_4h);\n                                iVar3 = iVar3 + 2;\n                                var_8h = var_8h + 4;\n                                puVar2 = puVar2 + 4;\n                                var_14h = var_14h + 4;\n                                var_ch = var_ch + 4;\n                                var_10h = var_10h + 4;\n                            }\n                        }\n                        else if (uVar1 == 0x14) {\n                            arg_14h = X;\n                            var_4h = X;\n                        }\n                    }\n                    var_1ch = nXEnd;\n                    var_24h = nYEnd;\n                    var_8h = var_8h + 2;\n                    iVar3 = iVar3 + 1;\n                    var_14h = var_14h + 2;\n                    puVar2 = puVar2 + 2;\n                    var_ch = var_ch + 2;\n                    var_10h = var_10h + 2;\n                } while (iVar3 < *(arg_ch + 0xc));\n            }\n            arg_ch = *(arg_ch + 4);\n        } while (arg_ch != 0);\n    }\n    fcn.0041aa4b(arg_8h, 0xffffffff);\n    return;\n}\n",
        "token_count": 844
    },
    "00499010": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00499010(uint hDlg, uint hDrop)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uStack696;\n    int32_t iStack692;\n    uchar *puStack688;\n    uint uStack684;\n    uint uStack680;\n    int32_t iStack676;\n    uint uStack672;\n    uint uStack668;\n    uint uStack664;\n    uint uStack660;\n    uchar *puStack656;\n    uchar *puStack652;\n    uchar auStack608 [16];\n    uchar auStack592 [8];\n    uchar auStack584 [4];\n    uint uStack580;\n    uchar auStack568 [4];\n    uint uStack564;\n    int32_t iStack560;\n    uchar auStack556 [552];\n    \n    fcn.0041b021(hDlg);\n    (*_sym.imp.SHELL32.dll_DragQueryPoint)();\n    puStack652 = 0x499051;\n    iVar2 = fcn.00497543(&stack0xfffffd94, uStack564, iStack560);\n    uStack580 = **(*0x4d1910 + &stack0xfffffdd4 * 4);\n    if ((iVar2 == -1) || (puVar1 = **(*0x4d1924 + iVar2 * 4),  (*(puVar1 + 0x92) & 8) == 0)) {\n        puStack652 = NULL;\n        puStack656 = hDrop;\n        uStack660 = 0x233;\n        uStack664 = hDlg;\n        uStack668 = 0x499269;\n        (*_sym.imp.USER32.dll_DefDlgProcW)();\n    }\n    else {\n        uStack664 = *puVar1;\n        puStack652 = &stack0xfffffdc8;\n        puStack656 = &stack0xfffffdb8;\n        uStack660 = 0xb0;\n        iVar4 = 0;\n        uStack668 = 0x4990a8;\n        (*_sym.imp.USER32.dll_SendMessageW)();\n        uStack668 = 0;\n        uStack672 = 0;\n        iStack676 = 0xffffffff;\n        uStack680 = hDrop;\n        uStack684 = 0x4990b3;\n        iVar3 = (*_sym.imp.SHELL32.dll_DragQueryFileW)();\n        if (0 < iVar3) {\n            do {\n                uStack684 = 0x104;\n                puStack688 = &stack0xfffffdb0;\n                uStack696 = hDrop;\n                iStack692 = iVar4;\n                (*_sym.imp.SHELL32.dll_DragQueryFileW)();\n                if (iVar4 < iStack560) {\n                    if (*(**(*0x4d1924 + iVar2 * 4) + 0x90) == '\\x02') {\n                        uVar6 = 0x4af388;\n                    }\n                    else {\n                        uVar6 = 0x4af370;\n                    }\n                    fcn.00428fc8(&stack0xfffffda0, uVar6);\n                }\n                uVar5 = 0xc2;\n                uVar6 = uStack680;\n                (*_sym.imp.USER32.dll_SendMessageW)();\n                (*_sym.imp.USER32.dll_SendMessageW)(uStack696, 0xb0, &stack0xfffffd8c);\n                (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0xb1, uVar5, uVar5);\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < iVar3);\n        }\n        uStack684 = uStack660;\n        iStack692 = 0xb1;\n        uStack696 = uStack664;\n        (*_sym.imp.USER32.dll_SendMessageW)();\n        (*_sym.imp.SHELL32.dll_DragFinish)();\n        iStack676 = 0;\n        uStack668 = 0;\n        uStack664 = 1;\n        fcn.0040e8a0();\n        uStack664 = 1;\n        iStack676 = iVar2;\n        fcn.0040b606(L\"@GUI_DROPID\");\n        fcn.0040c28f(&stack0xfffffd68, &stack0xfffffd58, 1);\n        fcn.0040b1ff();\n        fcn.0040e8a0();\n        iStack692 = 0xffffffff;\n        uStack680 = 1;\n        fcn.0040b606(L\"@GUI_DRAGID\");\n        fcn.0040c28f(&stack0xfffffd58, &stack0xfffffd48, 1);\n        fcn.0040b1ff();\n        fcn.0040b5c1(&stack0xfffffd7c);\n        fcn.0040b606(L\"@GUI_DRAGFILE\");\n        fcn.0040c28f(&stack0xfffffd44, &stack0xfffffd34, 1);\n        fcn.0040b1ff();\n        fcn.00492bc6(0xfffffff3, uStack684, 0, 0);\n        fcn.0040e8a0();\n    }\n    return;\n}\n",
        "token_count": 1150
    },
    "0049a629": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0049a629(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint32_t in_ECX;\n    uint in_EDX;\n    uint32_t uVar6;\n    bool bVar7;\n    \n    uVar4 = *((*(in_ECX / 0x80 + 0x4bff60) * 0x80 + in_ECX % 0x80) * 2 + 0x4b1c60);\n    // switch table (9 cases) at 0x49a7e5\n    switch(in_EDX) {\n    case 1:\n        cVar1 = *(uVar4 * 8 + 0x4af411);\n        if (((cVar1 == '\\t') || (cVar1 == '\\x05')) || (cVar1 == '\\b')) {\n            uVar4 = 1;\n        }\n        else {\n            uVar4 = 0;\n        }\n        bVar7 = uVar4 == arg_ch;\n        goto code_r0x0049a67e;\n    case 2:\n        bVar7 = arg_8h == *(*(uVar4 * 8 + 0x4af411) * 4 + 0x4c5370);\n        goto code_r0x0049a69a;\n    case 3:\n        uVar2 = *(uVar4 * 8 + 0x4af411);\n        break;\n    case 4:\n        uVar2 = *(uVar4 * 8 + 0x4af410);\n        break;\n    case 5:\n        uVar6 = 1;\n        iVar3 = *(*(uVar4 * 8 + 0x4af411) * 4 + 0x4c5370);\n        if (iVar3 != 1) {\n            bVar7 = iVar3 == 3;\ncode_r0x0049a6dc:\n            uVar6 = 1;\n            if (!bVar7) {\n                uVar6 = 0;\n            }\n        }\n        goto code_r0x0049a6e0;\n    case 6:\n    case 7:\n        if (in_ECX < 0x180f) {\n            if (in_ECX == 0x180e) {\n                return arg_ch;\n            }\n            if (8 < in_ECX) {\n                if (in_ECX < 0xe) {\n                    return arg_ch;\n                }\n                if (in_ECX == 0x20) {\n                    return arg_ch;\n                }\n                if (in_ECX == 0x85) {\n                    return arg_ch;\n                }\n                if (in_ECX == 0xa0) {\n                    return arg_ch;\n                }\n                bVar7 = in_ECX == 0x1680;\ncode_r0x0049a76b:\n                if (bVar7) {\n                    return arg_ch;\n                }\n            }\n        }\n        else if (0x1fff < in_ECX) {\n            if (in_ECX < 0x200b) {\n                return arg_ch;\n            }\n            if (0x2027 < in_ECX) {\n                if (in_ECX < 0x202a) {\n                    return arg_ch;\n                }\n                if (in_ECX == 0x202f) {\n                    return arg_ch;\n                }\n                if (in_ECX == 0x205f) {\n                    return arg_ch;\n                }\n                bVar7 = in_ECX == 0x3000;\n                goto code_r0x0049a76b;\n            }\n        }\n        bVar7 = *(*(uVar4 * 8 + 0x4af411) * 4 + 0x4c5370) == 6;\n        goto code_r0x0049a69a;\n    case 8:\n        uVar6 = 1;\n        iVar3 = *(*(uVar4 * 8 + 0x4af411) * 4 + 0x4c5370);\n        if ((iVar3 != 1) && (iVar3 != 3)) {\n            bVar7 = in_ECX == 0x5f;\n            goto code_r0x0049a6dc;\n        }\ncode_r0x0049a6e0:\n        bVar7 = uVar6 == arg_ch;\ncode_r0x0049a67e:\n        return bVar7;\n    case 9:\n        puVar5 = *(uVar4 * 8 + 0x4af413) * 4 + 0x4b0a90;\n        while (uVar4 = *puVar5,  uVar4 <= in_ECX) {\n            puVar5 = puVar5 + 1;\n            if (in_ECX == uVar4) {\n                return arg_ch;\n            }\n        }\n        bVar7 = arg_ch == 0;\n        goto code_r0x0049a67e;\n    default:\n        return 0;\n    }\n    bVar7 = arg_8h == uVar2;\ncode_r0x0049a69a:\n    return bVar7 == arg_ch;\n}\n",
        "token_count": 1161
    },
    "00401f2d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00401f2d(void)\n\n{\n    char cVar1;\n    int32_t in_FS_OFFSET;\n    uint arg_10h;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint var_18h;\n    uint var_10h;\n    \n    if (*(**(in_FS_OFFSET + 0x2c) + 4) < *0x4d252c) {\n        fcn.004201c2(0x4d252c);\n        if (*0x4d252c == -1) {\n            fcn.00420023(0x4423d5);\n            in_stack_ffffffd0 = 0x401f85;\n            fcn.00420178(0x4d252c);\n        }\n    }\n    cVar1 = fcn.00401fb9(0x2a);\n    if (cVar1 == '\\0') {\n        arg_10h = 0x49d0d0;\n        fcn.0040b606(0x49d0d0);\n        fcn.00402032(0x2a, 0, arg_10h, in_stack_ffffffc8, in_stack_ffffffcc, in_stack_ffffffd0);\n        fcn.00401fd5(&fcn.00401f2d::var_18h);\n        fcn.0040b1ff();\n    }\n    return 0x4d0290;\n}\n",
        "token_count": 330
    },
    "004029fe": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004029fe(uint param_1)\n\n{\n    uint uVar1;\n    int32_t arg_8h;\n    uint extraout_EDX;\n    uint var_38h;\n    uint var_18h;\n    \n    *0x4d1430 = 0x49ce3c;\n    *0x4d189c = 0x49cdfc;\n    *0x4d18a0 = 0;\n    *0x4d18a4 = 0;\n    *0x4d18a8 = 0;\n    fcn.00402ca3(param_1);\n    *(*(*0x4d1430 + 4) + 0x4d1430) = 0x49ce24;\n    *(*(*0x4d1430 + 4) + 0x4d142c) = *(*0x4d1430 + 4) + -0x46c;\n    *0x4d14cc = 0;\n    *0x4d14d0 = 0;\n    *0x4d14d4 = 0;\n    fcn.004034ce();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    *0x4d1554 = 0;\n    *0x4d1558 = 0;\n    *0x4d155c = 0;\n    *0x4d1560 = 0;\n    *0x4d1564 = 0;\n    *0x4d1568 = 0;\n    *0x4d156c = 0;\n    *0x4d1570 = 0;\n    *0x4d1574 = 0;\n    *0x4d1578 = 0;\n    fcn.0040c25d();\n    *0x4d15ac = 0x49ce08;\n    *0x4d1594 = 0;\n    *0x4d1598 = 0;\n    *0x4d159c = 0;\n    *0x4d15a0 = 0;\n    *0x4d15a4 = 0;\n    *0x4d15a8 = 0;\n    *0x4d15b0 = 0;\n    *0x4d15b4 = 0;\n    *0x4d15b8 = 0;\n    *0x4d15bc = 0;\n    *0x4d15c0 = 0;\n    *0x4d15c4 = 0;\n    *0x4d15c8 = 0x49cde8;\n    *0x4d15cc = 0;\n    *0x4d15d0 = 0;\n    *0x4d15d4 = 0;\n    *0x4d15d8 = 0x49cde8;\n    *0x4d15dc = 0;\n    *0x4d15e0 = 0;\n    *0x4d15e4 = 0;\n    *0x4d15e8 = 0x49cde8;\n    *0x4d15ec = 0;\n    *0x4d15f0 = 0;\n    *0x4d15f4 = 0;\n    *0x4d15f8 = 0x49ce0c;\n    *0x4d15fc = 0;\n    *0x4d1600 = 0;\n    *0x4d1604 = 0;\n    *0x4d1608 = 0;\n    *0x4d1610 = 0;\n    *0x4d1614 = 1;\n    fcn.0040c25d();\n    fcn.00403027();\n    *0x4d1700 = 0x49ce08;\n    *0x4d1704 = 0;\n    *0x4d1708 = 0;\n    *0x4d170c = 0;\n    fcn.00403455();\n    fcn.0040c25d();\n    *0x4d1860 = 0;\n    *0x4d1864 = 0;\n    *0x4d1868 = 0;\n    *0x4d1870 = 0;\n    *0x4d1874 = 0;\n    *0x4d1878 = 0;\n    fcn.00413220(0);\n    uVar1 = fcn.00403430();\n    fcn.004033b6(uVar1);\n    fcn.0040e8a0();\n    fcn.0040e8a0();\n    *0x4d1530 = 0x100;\n    uVar1 = 0xfffffff6;\n    *0x4d152c = 0;\n    *0x4d1520 = 0;\n    *0x4d1524 = 0;\n    *0x4d1518 = 0;\n    *0x4d151c = 0;\n    *0x4d1528 = 0;\n    *0x4d1580 = 0;\n    *0x4d186c = 0;\n    *0x4d1894 = 0;\n    *0x4d157d = 0;\n    *0x4d185c = 0;\n    arg_8h = (*_sym.imp.KERNEL32.dll_GetStdHandle)();\n    if ((arg_8h == 0) || (arg_8h == -1)) {\n        *0x4d187c = 0;\n    }\n    else {\n        fcn.0041fd5b(0x3c, uVar1);\n        *0x4d187c = fcn.0047003b(arg_8h);\n        fcn.00470862();\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_8h);\n    }\n    fcn.00403354();\n    (*_sym.imp.ole32.dll_OleInitialize)(extraout_EDX);\n    return 0x4d1430;\n}\n",
        "token_count": 1374
    },
    "00404df1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x00404efc)\n\nuint __cdecl fcn.00404df1(double *arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint32_t arg_8h_00;\n    int32_t iVar6;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint8_t uVar7;\n    int32_t iVar8;\n    uint16_t *puVar9;\n    int32_t iVar10;\n    float10 fVar11;\n    uint64_t uVar12;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar8 = *in_EDX;\n    if (((*(in_ECX + iVar8 * 2) != 0x2e) || ((arg_10h != 0x33 && (iVar8 != 0)))) ||\n       ((uVar1 = *(in_ECX + 2 + iVar8 * 2),  uVar1 < 0x3a && (0x2f < uVar1)))) {\n        fcn.0040bfbf();\n        iVar8 = *in_EDX;\n        if ((*(in_ECX + iVar8 * 2) != 0x30) || ((iVar2 = *(in_ECX + 2 + iVar8 * 2),  iVar2 != 0x78 && (iVar2 != 0x58))))\n        {\n            if (arg_10h == 0x4a) {\n                fcn.004052b7(0x49cfbc);\n                iVar8 = *in_EDX;\n            }\n            bVar4 = false;\n            uVar7 = 0x17;\n            bVar3 = true;\n            do {\n                iVar10 = *in_EDX;\n                uVar1 = *(in_ECX + iVar10 * 2);\n                if (uVar1 == 0x2e) {\n                    if (bVar3) {\n                        uVar7 = 0x25;\n                        bVar3 = false;\n                    }\ncode_r0x00405020:\n                    bVar4 = true;\n                }\n                else if ((uVar1 == 0x2b) || (uVar1 == 0x2d)) {\n                    if ((uVar7 & 8) != 0) {\n                        uVar7 = 0x31;\n                        bVar3 = false;\n                    }\n                }\n                else {\n                    if (0x2f < uVar1) {\n                        if (uVar1 < 0x3a) {\n                            uVar7 = uVar7 & 0xe7 | 0x20;\n                            goto code_r0x00404e9b;\n                        }\n                        if ((uVar1 == 0x45) || (uVar1 == 0x65)) {\n                            if ((uVar7 & 0x14) == 4) {\n                                uVar7 = 0x39;\n                                bVar3 = false;\n                            }\n                            goto code_r0x00405020;\n                        }\n                    }\n                    if ((((0x40 < (uVar1 & 0xffdf)) && ((uVar1 & 0xffdf) < 0x5b)) || (uVar1 == 0x5f)) &&\n                       ((uVar7 & 0xfd) != 0)) {\n                        uVar7 = uVar7 | 0x10;\n                        *in_EDX = iVar8;\n                        iVar10 = iVar8;\n                    }\n                }\ncode_r0x00404e9b:\n                if ((uVar7 & 0x20) == 0) goto code_r0x00404ebc;\n                *in_EDX = iVar10 + 1;\n                fcn.004051ec(*(in_ECX + iVar10 * 2));\n                uVar7 = uVar7 & 0xdf;\n            } while( true );\n        }\n        *in_EDX = iVar8 + 2;\n        iVar8 = 0;\n        while( true ) {\n            uVar1 = *(in_ECX + *in_EDX * 2);\n            arg_8h_00 = uVar1;\n            if ((((uVar1 < 0x30) || (0x39 < uVar1)) && ((arg_8h_00 < 0x61 || (0x66 < arg_8h_00)))) &&\n               ((uVar1 < 0x41 || (0x46 < arg_8h_00)))) break;\n            *in_EDX = *in_EDX + 1;\n            fcn.004051ec(arg_8h_00);\n            iVar8 = iVar8 + 1;\n        }\n        cVar5 = fcn.004035b3(0x10);\n        if (cVar5 != '\\0') {\n            fcn.0040bef7(((8 < iVar8) - 1 & 0xfffffff5) + 0x10);\n            *arg_8h = var_20h;\n            *(arg_8h + 4) = in_EDX;\n            return 1;\n        }\n    }\n    return 0;\ncode_r0x00404ebc:\n    if ((uVar7 & 0x10) != 0) {\n        return 0;\n    }\n    if (bVar4) {\n        iVar10 = arg_ch[1];\n        puVar9 = 0x49d108;\n        iVar6 = fcn.004248f3(0x49d108);\n        if (iVar10 == iVar6) {\n            if (iVar10 != 0) {\n                do {\n                    uVar1 = *(*arg_ch + -0x49d108 + puVar9);\n                    if (uVar1 != *puVar9) {\n                        iVar10 = (-(uVar1 < *puVar9) & 0xfffffffe) + 1;\n                        goto code_r0x00443d34;\n                    }\n                    puVar9 = puVar9 + 1;\n                    iVar10 = iVar10 + -1;\n                } while (iVar10 != 0);\n            }\n            iVar10 = 0;\ncode_r0x00443d34:\n            if (iVar10 == 0) {\n                *in_EDX = iVar8;\n                return 0;\n            }\n        }\n        fcn.0040bef7(0x20);\n        fVar11 = fcn.0042cef5(*arg_ch);\n        *arg_8h = fVar11;\n        return 1;\n    }\n    uVar12 = fcn.0042628b(*arg_ch);\n    fcn.0040bef7(5);\n    if (arg_10h == 0x4a) {\n        if ((uVar12 < 0x8000000000000000) || ((-0x100000001 < uVar12 && (0x7fffffff < uVar12)))) goto code_r0x00404f08;\n    }\n    else if (uVar12 < 0x80000000) goto code_r0x00404f08;\n    fcn.0040bef7(0x10);\ncode_r0x00404f08:\n    *arg_8h = uVar12;\n    *(arg_8h + 4) = uVar12 >> 0x20;\n    return 1;\n}\n",
        "token_count": 1683
    },
    "004070e5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004070e5(uint *lpFileName, uint32_t arg_ch)\n\n{\n    uint32_t in_EAX;\n    uint32_t *in_ECX;\n    uint uVar1;\n    uint uVar2;\n    \n    *in_ECX = 0xffffffff;\n    if ((arg_ch & 0x8000) == 0) {\n        if ((arg_ch & 1) != 0) {\n            in_EAX = (*_sym.imp.KERNEL32.dll_CreateFileW)(*lpFileName, 0xc0000000, 7, 0, 4, 0x80, 0);\n            *in_ECX = in_EAX;\n            if (in_EAX != 0xffffffff) {\n                in_EAX = fcn.00406e66(0, 0, 2);\n            }\n            goto code_r0x0040711b;\n        }\n        if ((arg_ch & 2) == 0) goto code_r0x0040711b;\n        uVar2 = 2;\n        uVar1 = 0xc0000000;\n    }\n    else {\n        uVar2 = 3;\n        uVar1 = 0x80000000;\n    }\n    in_EAX = (*_sym.imp.KERNEL32.dll_CreateFileW)(*lpFileName, uVar1, 7, 0, uVar2, 0x80, 0);\n    *in_ECX = in_EAX;\ncode_r0x0040711b:\n    return in_EAX & 0xffffff00 | *in_ECX != 0xffffffff;\n}\n",
        "token_count": 350
    },
    "004078d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004078d0(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, int32_t arg_20h\n            , int32_t arg_24h, uint32_t arg_28h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t arg_8h_00;\n    \n    if (arg_24h == -1) {\n        arg_24h = 0x100;\n    }\n    if (arg_1ch == -1) {\n        arg_1ch = 0x96;\n    }\n    if (arg_20h == -1) {\n        arg_20h = 0x96;\n    }\n    arg_8h_00 = arg_8h;\n    iVar2 = fcn.004079b6(arg_8h, -(arg_28h != 0xffffffff) & arg_28h, L\"static\", 0x49d0d0, arg_24h, arg_14h, arg_18h, \n                         arg_1ch, arg_20h, arg_10h, arg_24h, 1);\n    *arg_ch = iVar2;\n    if (iVar2 == 0) {\n        uVar4 = 0;\n    }\n    else {\n        arg_ch[0x13] = -1;\n        *(arg_ch + 0x22) = arg_14h;\n        *(arg_ch + 0x8a) = arg_18h;\n        *(arg_ch + 0x23) = arg_1ch;\n        *(arg_ch + 0x8e) = arg_20h;\n        puVar3 = fcn.0041fd5b(0x910, arg_8h_00);\n        puVar3[3] = 0;\n        puVar3[1] = 0;\n        arg_ch[0x20] = puVar3;\n        *puVar3 = 0;\n        puVar3[2] = arg_ch;\n        puVar1 = *(arg_8h + 0x1c8);\n        if (*(arg_8h + 0x1c8) == NULL) {\n            *(arg_8h + 0x1c8) = puVar3;\n        }\n        else {\n            do {\n                puVar5 = puVar1;\n                puVar1 = *puVar5;\n            } while (puVar1 != NULL);\n            *puVar5 = puVar3;\n        }\n        uVar4 = 1;\n        *(arg_ch + 0x86) = *(arg_ch + 0x86) | 0x300;\n    }\n    return uVar4;\n}\n",
        "token_count": 635
    },
    "00407bee": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407bee(int32_t *param_1)\n\n{\n    if ((*param_1 != 0) && (*param_1 != -1)) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*param_1);\n        *param_1 = 0;\n    }\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    return;\n}\n",
        "token_count": 114
    },
    "0040ad22": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ad22(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    \n    if ((arg_ch != 0) && (arg_8h < in_ECX[1])) {\n        if ((arg_ch == -1) || (in_ECX[1] <= arg_8h + arg_ch && arg_8h + arg_ch != in_ECX[1])) {\n            arg_ch = in_ECX[1] - arg_8h;\n        }\n        fcn.0040c7c9();\n        fcn.00420db0(*in_ECX + arg_8h * 2, *in_ECX + (arg_8h + arg_ch) * 2, ((in_ECX[1] - arg_8h) - arg_ch) * 2 + 2);\n        in_ECX[1] = in_ECX[1] - arg_ch;\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "0040c467": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c467(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint unaff_EDI;\n    \n    puVar2 = *(arg_8h + 0x80);\n    do {\n        puVar3 = puVar2;\n        puVar2 = puVar3[1];\n    } while (puVar3[1] != NULL);\n    puVar2 = puVar3;\n    if (0xff < puVar3[3] + arg_18h) {\n        puVar2 = fcn.0041fd5b(0x910, unaff_EDI);\n        puVar2[3] = 0;\n        puVar2[1] = 0;\n        *puVar2 = 0;\n        puVar3[1] = puVar2;\n    }\n    iVar1 = puVar2[3];\n    *(iVar1 + 0x810 + puVar2) = arg_ch;\n    if (arg_ch == 8) {\n        if (arg_10h != -1) {\n            fcn.0041b058();\n        }\n        if (arg_14h != -1) {\n            fcn.0041b058();\n        }\n    }\n    puVar2[iVar1 * 2 + 4] = arg_10h;\n    puVar2[iVar1 * 2 + 5] = arg_14h;\n    puVar2[3] = iVar1 + 1;\n    return;\n}\n",
        "token_count": 369
    },
    "00413220": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00413220(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    int32_t in_FS_OFFSET;\n    \n    iVar1 = **(in_FS_OFFSET + 0x2c);\n    if (*(iVar1 + 4) < *0x4d2518) {\n        fcn.004201c2(0x4d2518);\n        if (*0x4d2518 == -1) {\n            *0x4cc97c = fcn.0041e40a;\n            *0x4cc980 = 0;\n            *0x4cc984 = 0;\n            *0x4cc988 = 1;\n            *0x4cc98c = 1;\n            *0x4cc990 = 0;\n            *0x4cc994 = L\"ACOS\";\n            *0x4cc9a0 = fcn.0047d30d;\n            *0x4cc9a4 = 0;\n            *0x4cc9a8 = 0;\n            *0x4cc9ac = 1;\n            *0x4cc9b0 = 1;\n            *0x4cc9b4 = 0;\n            *0x4cc9b8 = L\"ADLIBREGISTER\";\n            *0x4cc9c4 = fcn.00401202;\n            *0x4cc9c8 = 0;\n            *0x4cc9cc = 0;\n            *0x4cc9d0 = 1;\n            *0x4cc9d4 = 2;\n            *0x4cc9d8 = 0;\n            *0x4cc9dc = L\"ADLIBUNREGISTER\";\n            *0x4cc9e8 = fcn.0047e57a;\n            *0x4cc9ec = 0;\n            *0x4cc9f0 = 0;\n            *0x4cc9f4 = 0;\n            *0x4cc9f8 = 1;\n            *0x4cc9fc = 0;\n            *0x4cca00 = 0x49faa0;\n            *0x4cca0c = fcn.0047d38d;\n            *0x4cca10 = 0;\n            *0x4cca14 = 0;\n            *0x4cca18 = 1;\n            *0x4cca1c = 1;\n            *0x4cca20 = 0;\n            *0x4cca24 = L\"ASCW\";\n            *0x4cca30 = fcn.0047d3e7;\n            *0x4cca34 = 0;\n            *0x4cca38 = 0;\n            *0x4cca3c = 1;\n            *0x4cca40 = 1;\n            *0x4cca44 = 0;\n            *0x4cca48 = L\"ASIN\";\n            *0x4cca54 = fcn.0047d34d;\n            *0x4cca58 = 0;\n            *0x4cca5c = 0;\n            *0x4cca60 = 1;\n            *0x4cca64 = 1;\n            *0x4cca68 = 0;\n            *0x4cca6c = L\"ASSIGN\";\n            *0x4cca78 = fcn.0047e6b7;\n            *0x4cca7c = 0;\n            *0x4cca80 = 0;\n            *0x4cca84 = 2;\n            *0x4cca88 = 3;\n            *0x4cca8c = 0;\n            *0x4cca90 = L\"ATAN\";\n            *0x4cca9c = fcn.0041fa2d;\n            *0x4ccaa0 = 0;\n            *0x4ccaa4 = 0;\n            *0x4ccaa8 = 1;\n            *0x4ccaac = 1;\n            *0x4ccab0 = 0;\n            *0x4ccab4 = L\"AUTOITSETOPTION\";\n            *0x4ccac0 = fcn.00401641;\n            *0x4ccac4 = 0;\n            *0x4ccac8 = 0;\n            *0x4ccacc = 1;\n            *0x4ccad0 = 2;\n            *0x4ccad4 = 0;\n            *0x4ccad8 = L\"AUTOITWINGETTITLE\";\n            *0x4ccae4 = fcn.0047e8f7;\n            *0x4ccae8 = 0;\n            *0x4ccaec = 0;\n            *0x4ccaf0 = 0;\n            *0x4ccaf4 = 0;\n            *0x4ccaf8 = 0;\n            *0x4ccafc = L\"AUTOITWINSETTITLE\";\n            *0x4ccb08 = fcn.0047e950;\n            *0x4ccb0c = 0;\n            *0x4ccb10 = 0;\n            *0x4ccb14 = 1;\n            *0x4ccb18 = 1;\n            *0x4ccb1c = 0;\n            *0x4ccb20 = L\"BEEP\";\n            *0x4ccb2c = fcn.0047e97b;\n            *0x4ccb30 = 0;\n            *0x4ccb34 = 0;\n            *0x4ccb38 = 0;\n            *0x4ccb3c = 2;\n            *0x4ccb40 = 0;\n            *0x4ccb44 = L\"BINARY\";\n            *0x4ccb50 = fcn.0047d41e;\n            *0x4ccb54 = 0;\n            *0x4ccb58 = 0;\n            *0x4ccb5c = 1;\n            *0x4ccb60 = 1;\n            *0x4ccb64 = 0;\n            *0x4ccb68 = L\"BINARYLEN\";\n            *0x4ccb74 = fcn.0048d2f1;\n            *0x4ccb78 = 0;\n            *0x4ccb7c = 0;\n            *0x4ccb80 = 1;\n            *0x4ccb84 = 1;\n            *0x4ccb88 = 0;\n            *0x4ccb8c = L\"BINARYMID\";\n            *0x4ccb98 = fcn.0048d32a;\n            *0x4ccb9c = 0;\n            *0x4ccba0 = 0;\n            *0x4ccba4 = 2;\n            *0x4ccba8 = 3;\n            *0x4ccbac = 0;\n            *0x4ccbb0 = L\"BINARYTOSTRING\";\n            *0x4ccbbc = fcn.0048d3a9;\n            *0x4ccbc0 = 0;\n            *0x4ccbc4 = 0;\n            *0x4ccbc8 = 1;\n            *0x4ccbcc = 2;\n            *0x4ccbd0 = 0;\n            *0x4ccbd4 = L\"BITAND\";\n            *0x4ccbe0 = fcn.0047d43f;\n            *0x4ccbe4 = 0;\n            *0x4ccbe8 = 0;\n            *0x4ccbec = 2;\n            *0x4ccbf0 = 0xff;\n            *0x4ccbf4 = 0;\n            *0x4ccbf8 = L\"BITNOT\";\n            *0x4ccc04 = fcn.0047d491;\n            *0x4ccc08 = 0;\n            *0x4ccc0c = 0;\n            *0x4ccc10 = 1;\n            *0x4ccc14 = 1;\n            *0x4ccc18 = 0;\n            *0x4ccc1c = L\"BITOR\";\n            *0x4ccc28 = fcn.0047d4c2;\n            *0x4ccc2c = 0;\n            *0x4ccc30 = 0;\n            *0x4ccc34 = 2;\n            *0x4ccc38 = 0xff;\n            *0x4ccc3c = 0;\n            *0x4ccc40 = L\"BITROTATE\";\n            *0x4ccc4c = fcn.0047d514;\n            *0x4ccc50 = 0;\n            *0x4ccc54 = 0;\n            *0x4ccc58 = 1;\n            *0x4ccc5c = 3;\n            *0x4ccc60 = 0;\n            *0x4ccc64 = L\"BITSHIFT\";\n            *0x4ccc70 = fcn.0047d6b2;\n            *0x4ccc74 = 0;\n            *0x4ccc78 = 0;\n            *0x4ccc7c = 2;\n            *0x4ccc80 = 2;\n            *0x4ccc84 = 0;\n            *0x4ccc88 = L\"BITXOR\";\n            *0x4ccc94 = fcn.0047d71c;\n            *0x4ccc98 = 0;\n            *0x4ccc9c = 0;\n            *0x4ccca0 = 2;\n            *0x4ccca4 = 0xff;\n            *0x4ccca8 = 0;\n            *0x4cccac = L\"BLOCKINPUT\";\n            *0x4cccb8 = fcn.0047e9c9;\n            *0x4cccbc = 0;\n            *0x4cccc0 = 0;\n            *0x4cccc4 = 1;\n            *0x4cccc8 = 1;\n            *0x4ccccc = 0;\n            *0x4cccd0 = L\"BREAK\";\n            *0x4cccdc = fcn.0047ea07;\n            *0x4ccce0 = 0;\n            *0x4ccce4 = 0;\n            *0x4ccce8 = 1;\n            *0x4cccec = 1;\n            *0x4cccf0 = 0;\n            *0x4cccf4 = L\"CALL\";\n            *0x4ccd00 = 0x41face;\n            *0x4ccd04 = 0;\n            *0x4ccd08 = 0;\n            *0x4ccd0c = 1;\n            *0x4ccd10 = 0xff;\n            *0x4ccd14 = 0;\n            *0x4ccd18 = L\"CDTRAY\";\n            *0x4ccd24 = fcn.00473d97;\n            *0x4ccd28 = 0;\n            *0x4ccd2c = 0;\n            *0x4ccd30 = 2;\n            *0x4ccd34 = 2;\n            *0x4ccd38 = 0;\n            *0x4ccd3c = L\"CEILING\";\n            *0x4ccd48 = fcn.0047d76e;\n            *0x4ccd4c = 0;\n            *0x4ccd50 = 0;\n            *0x4ccd54 = 1;\n            *0x4ccd58 = 1;\n            *0x4ccd5c = 0;\n            *0x4ccd60 = 0x49fa90;\n            *0x4ccd6c = fcn.0047d7d3;\n            *0x4ccd70 = 0;\n            *0x4ccd74 = 0;\n            *0x4ccd78 = 1;\n            *0x4ccd7c = 1;\n            *0x4ccd80 = 0;\n            *0x4ccd84 = L\"CHRW\";\n            *0x4ccd90 = fcn.0047d8a4;\n            *0x4ccd94 = 0;\n            *0x4ccd98 = 0;\n            *0x4ccd9c = 1;\n            *0x4ccda0 = 1;\n            *0x4ccda4 = 0;\n            *0x4ccda8 = L\"CLIPGET\";\n            *0x4ccdb4 = fcn.0047ea26;\n            *0x4ccdb8 = 0;\n            *0x4ccdbc = 0;\n            *0x4ccdc0 = 0;\n            *0x4ccdc4 = 0;\n            *0x4ccdc8 = 0;\n            *0x4ccdcc = L\"CLIPPUT\";\n            *0x4ccdd8 = fcn.0047ec91;\n            *0x4ccddc = 0;\n            *0x4ccde0 = 0;\n            *0x4ccde4 = 1;\n            *0x4ccde8 = 1;\n            *0x4ccdec = 0;\n            *0x4ccdf0 = L\"CONSOLEREAD\";\n            *0x4ccdfc = fcn.0048cd57;\n            *0x4cce00 = 0;\n            *0x4cce04 = 0;\n            *0x4cce08 = 0;\n            *0x4cce0c = 2;\n            *0x4cce10 = 0;\n            *0x4cce14 = L\"CONSOLEWRITE\";\n            *0x4cce20 = fcn.0041f578;\n            *0x4cce24 = 0;\n            *0x4cce28 = 0;\n            *0x4cce2c = 1;\n            *0x4cce30 = 1;\n            *0x4cce34 = 0x100;\n            *0x4cce38 = L\"CONSOLEWRITEERROR\";\n            *0x4cce44 = fcn.0047edd9;\n            *0x4cce48 = 0;\n            *0x4cce4c = 0;\n            *0x4cce50 = 1;\n            *0x4cce54 = 1;\n            *0x4cce58 = 0x100;\n            *0x4cce5c = L\"CONTROLCLICK\";\n            *0x4cce68 = fcn.0048f5f3;\n            *0x4cce6c = 0;\n            *0x4cce70 = 0;\n            *0x4cce74 = 3;\n            *0x4cce78 = 7;\n            *0x4cce7c = 0;\n            *0x4cce80 = L\"CONTROLCOMMAND\";\n            *0x4cce8c = fcn.0048f6cb;\n            *0x4cce90 = 0;\n            *0x4cce94 = 0;\n            *0x4cce98 = 4;\n            *0x4cce9c = 5;\n            *0x4ccea0 = 0;\n            *0x4ccea4 = L\"CONTROLDISABLE\";\n            *0x4cceb0 = fcn.0048fd39;\n            *0x4cceb4 = 0;\n            *0x4cceb8 = 0;\n            *0x4ccebc = 3;\n            *0x4ccec0 = 3;\n            *0x4ccec4 = 0;\n            *0x4ccec8 = L\"CONTROLENABLE\";\n            *0x4cced4 = fcn.0048fd75;\n            *0x4cced8 = 0;\n            *0x4ccedc = 0;\n            *0x4ccee0 = 3;\n            *0x4ccee4 = 3;\n            *0x4ccee8 = 0;\n            *0x4cceec = L\"CONTROLFOCUS\";\n            *0x4ccef8 = fcn.0048fdb1;\n            *0x4ccefc = 0;\n            *0x4ccf00 = 0;\n            *0x4ccf04 = 3;\n            *0x4ccf08 = 3;\n            *0x4ccf0c = 0;\n            *0x4ccf10 = L\"CONTROLGETFOCUS\";\n            *0x4ccf1c = fcn.0048fded;\n            *0x4ccf20 = 0;\n            *0x4ccf24 = 0;\n            *0x4ccf28 = 1;\n            *0x4ccf2c = 2;\n            *0x4ccf30 = 0;\n            *0x4ccf34 = L\"CONTROLGETHANDLE\";\n            *0x4ccf40 = fcn.0048feb3;\n            *0x4ccf44 = 0;\n            *0x4ccf48 = 0;\n            *0x4ccf4c = 3;\n            *0x4ccf50 = 3;\n            *0x4ccf54 = 0;\n            *0x4ccf58 = L\"CONTROLGETPOS\";\n            *0x4ccf64 = fcn.0048ff24;\n            *0x4ccf68 = 0;\n            *0x4ccf6c = 0;\n            *0x4ccf70 = 3;\n            *0x4ccf74 = 3;\n            *0x4ccf78 = 0;\n            *0x4ccf7c = L\"CONTROLGETTEXT\";\n            *0x4ccf88 = fcn.00490076;\n            *0x4ccf8c = 0;\n            *0x4ccf90 = 0;\n            *0x4ccf94 = 3;\n            *0x4ccf98 = 3;\n            *0x4ccf9c = 0;\n            *0x4ccfa0 = L\"CONTROLHIDE\";\n            *0x4ccfac = fcn.00490135;\n            *0x4ccfb0 = 0;\n            *0x4ccfb4 = 0;\n            *0x4ccfb8 = 3;\n            *0x4ccfbc = 3;\n            *0x4ccfc0 = 0;\n            *0x4ccfc4 = L\"CONTROLLISTVIEW\";\n            *0x4ccfd0 = fcn.00490174;\n            *0x4ccfd4 = 0;\n            *0x4ccfd8 = 0;\n            *0x4ccfdc = 4;\n            *0x4ccfe0 = 6;\n            *0x4ccfe4 = 0;\n            *0x4ccfe8 = L\"CONTROLMOVE\";\n            *0x4ccff4 = fcn.00490634;\n            *0x4ccff8 = 0;\n            *0x4ccffc = 0;\n            *0x4cd000 = 5;\n            *0x4cd004 = 7;\n            *0x4cd008 = 0;\n            *0x4cd00c = L\"CONTROLSEND\";\n            *0x4cd018 = fcn.0049070f;\n            *0x4cd01c = 0;\n            *0x4cd020 = 0;\n            *0x4cd024 = 4;\n            *0x4cd028 = 5;\n            *0x4cd02c = 0;\n            *0x4cd030 = L\"CONTROLSETTEXT\";\n            *0x4cd03c = fcn.004907a2;\n            *0x4cd040 = 0;\n            *0x4cd044 = 0;\n            *0x4cd048 = 4;\n            *0x4cd04c = 5;\n            *0x4cd050 = 0;\n            *0x4cd054 = L\"CONTROLSHOW\";\n            *0x4cd060 = fcn.00490812;\n            *0x4cd064 = 0;\n            *0x4cd068 = 0;\n            *0x4cd06c = 3;\n            *0x4cd070 = 3;\n            *0x4cd074 = 0;\n            *0x4cd078 = L\"CONTROLTREEVIEW\";\n            *0x4cd084 = fcn.00490851;\n            *0x4cd088 = 0;\n            *0x4cd08c = 0;\n            *0x4cd090 = 4;\n            *0x4cd094 = 5;\n            *0x4cd098 = 0;\n            *0x4cd09c = 0x49fac8;\n            *0x4cd0a8 = fcn.0040cec9;\n            *0x4cd0ac = 0;\n            *0x4cd0b0 = 0;\n            *0x4cd0b4 = 1;\n            *0x4cd0b8 = 1;\n            *0x4cd0bc = 0;\n            *0x4cd0c0 = 0x49fa70;\n            *0x4cd0cc = fcn.0047d942;\n            *0x4cd0d0 = 0;\n            *0x4cd0d4 = 0;\n            *0x4cd0d8 = 1;\n            *0x4cd0dc = 2;\n            *0x4cd0e0 = 0;\n            *0x4cd0e4 = L\"DIRCOPY\";\n            *0x4cd0f0 = fcn.00474023;\n            *0x4cd0f4 = 0;\n            *0x4cd0f8 = 0;\n            *0x4cd0fc = 2;\n            *0x4cd100 = 3;\n            *0x4cd104 = 0;\n            *0x4cd108 = L\"DIRCREATE\";\n            *0x4cd114 = fcn.00474099;\n            *0x4cd118 = 0;\n            *0x4cd11c = 0;\n            *0x4cd120 = 1;\n            *0x4cd124 = 1;\n            *0x4cd128 = 0;\n            *0x4cd12c = L\"DIRGETSIZE\";\n            *0x4cd138 = fcn.004740d3;\n            *0x4cd13c = 0;\n            *0x4cd140 = 0;\n            *0x4cd144 = 1;\n            *0x4cd148 = 2;\n            *0x4cd14c = 0;\n            *0x4cd150 = L\"DIRMOVE\";\n            *0x4cd15c = fcn.00474311;\n            *0x4cd160 = 0;\n            *0x4cd164 = 0;\n            *0x4cd168 = 2;\n            *0x4cd16c = 3;\n            *0x4cd170 = 0;\n            *0x4cd174 = L\"DIRREMOVE\";\n            *0x4cd180 = fcn.00474387;\n            *0x4cd184 = 0;\n            *0x4cd188 = 0;\n            *0x4cd18c = 1;\n            *0x4cd190 = 2;\n            *0x4cd194 = 0;\n            *0x4cd198 = L\"DLLCALL\";\n            *0x4cd1a4 = fcn.004894b2;\n            *0x4cd1a8 = 0;\n            *0x4cd1ac = 0;\n            *0x4cd1b0 = 3;\n            *0x4cd1b4 = 0x43;\n            *0x4cd1b8 = 0;\n            *0x4cd1bc = L\"DLLCALLADDRESS\";\n            *0x4cd1c8 = fcn.004894c6;\n            *0x4cd1cc = 0;\n            *0x4cd1d0 = 0;\n            *0x4cd1d4 = 2;\n            *0x4cd1d8 = 0x42;\n            *0x4cd1dc = 0;\n            *0x4cd1e0 = L\"DLLCALLBACKFREE\";\n            *0x4cd1ec = fcn.004894da;\n            *0x4cd1f0 = 0;\n            *0x4cd1f4 = 0;\n            *0x4cd1f8 = 1;\n            *0x4cd1fc = 1;\n            *0x4cd200 = 0;\n            *0x4cd204 = L\"DLLCALLBACKGETPTR\";\n            *0x4cd210 = fcn.0048955b;\n            *0x4cd214 = 0;\n            *0x4cd218 = 0;\n            *0x4cd21c = 1;\n            *0x4cd220 = 1;\n            *0x4cd224 = 0;\n            *0x4cd228 = L\"DLLCALLBACKREGISTER\";\n            *0x4cd234 = fcn.004895bb;\n            *0x4cd238 = 0;\n            *0x4cd23c = 0;\n            *0x4cd240 = 3;\n            *0x4cd244 = 3;\n            *0x4cd248 = 0;\n            *0x4cd24c = L\"DLLCLOSE\";\n            *0x4cd258 = fcn.0048997f;\n            *0x4cd25c = 0;\n            *0x4cd260 = 0;\n            *0x4cd264 = 1;\n            *0x4cd268 = 1;\n            *0x4cd26c = 0;\n            *0x4cd270 = L\"DLLOPEN\";\n            *0x4cd27c = fcn.004899e2;\n            *0x4cd280 = 0;\n            *0x4cd284 = 0;\n            *0x4cd288 = 1;\n            *0x4cd28c = 1;\n            *0x4cd290 = 0;\n            *0x4cd294 = L\"DLLSTRUCTCREATE\";\n            *0x4cd2a0 = fcn.00489a7c;\n            *0x4cd2a4 = 0;\n            *0x4cd2a8 = 0;\n            *0x4cd2ac = 1;\n            *0x4cd2b0 = 2;\n            *0x4cd2b4 = 0;\n            *0x4cd2b8 = L\"DLLSTRUCTGETDATA\";\n            *0x4cd2c4 = fcn.00489b74;\n            *0x4cd2c8 = 0;\n            *0x4cd2cc = 0;\n            *0x4cd2d0 = 2;\n            *0x4cd2d4 = 3;\n            *0x4cd2d8 = 0;\n            *0x4cd2dc = L\"DLLSTRUCTGETPTR\";\n            *0x4cd2e8 = fcn.00489cc5;\n            *0x4cd2ec = 0;\n            *0x4cd2f0 = 0;\n            *0x4cd2f4 = 1;\n            *0x4cd2f8 = 2;\n            *0x4cd2fc = 0;\n            *0x4cd300 = L\"DLLSTRUCTGETSIZE\";\n            *0x4cd30c = fcn.00489e09;\n            *0x4cd310 = 0;\n            *0x4cd314 = 0;\n            *0x4cd318 = 1;\n            *0x4cd31c = 1;\n            *0x4cd320 = 0;\n            *0x4cd324 = L\"DLLSTRUCTSETDATA\";\n            *0x4cd330 = fcn.00489e76;\n            *0x4cd334 = 0;\n            *0x4cd338 = 0;\n            *0x4cd33c = 3;\n            *0x4cd340 = 4;\n            *0x4cd344 = 0;\n            *0x4cd348 = L\"DRIVEGETDRIVE\";\n            *0x4cd354 = fcn.004743de;\n            *0x4cd358 = 0;\n            *0x4cd35c = 0;\n            *0x4cd360 = 1;\n            *0x4cd364 = 1;\n            *0x4cd368 = 0;\n            *0x4cd36c = L\"DRIVEGETFILESYSTEM\";\n            *0x4cd378 = fcn.00474776;\n            *0x4cd37c = 0;\n            *0x4cd380 = 0;\n            *0x4cd384 = 1;\n            *0x4cd388 = 1;\n            *0x4cd38c = 0;\n            *0x4cd390 = L\"DRIVEGETLABEL\";\n            *0x4cd39c = fcn.00474844;\n            *0x4cd3a0 = 0;\n            *0x4cd3a4 = 0;\n            *0x4cd3a8 = 1;\n            *0x4cd3ac = 1;\n            *0x4cd3b0 = 0;\n            *0x4cd3b4 = L\"DRIVEGETSERIAL\";\n            *0x4cd3c0 = fcn.00474912;\n            *0x4cd3c4 = 0;\n            *0x4cd3c8 = 0;\n            *0x4cd3cc = 1;\n            *0x4cd3d0 = 1;\n            *0x4cd3d4 = 0;\n            *0x4cd3d8 = L\"DRIVEGETTYPE\";\n            *0x4cd3e4 = fcn.004749fd;\n            *0x4cd3e8 = 0;\n            *0x4cd3ec = 0;\n            *0x4cd3f0 = 1;\n            *0x4cd3f4 = 2;\n            *0x4cd3f8 = 0;\n            *0x4cd3fc = L\"DRIVEMAPADD\";\n            *0x4cd408 = fcn.00474ca5;\n            *0x4cd40c = 0;\n            *0x4cd410 = 0;\n            *0x4cd414 = 2;\n            *0x4cd418 = 5;\n            *0x4cd41c = 0;\n            *0x4cd420 = L\"DRIVEMAPDEL\";\n            *0x4cd42c = fcn.00474f5d;\n            *0x4cd430 = 0;\n            *0x4cd434 = 0;\n            *0x4cd438 = 1;\n            *0x4cd43c = 1;\n            *0x4cd440 = 0;\n            *0x4cd444 = L\"DRIVEMAPGET\";\n            *0x4cd450 = fcn.00474fbd;\n            *0x4cd454 = 0;\n            *0x4cd458 = 0;\n            *0x4cd45c = 1;\n            *0x4cd460 = 1;\n            *0x4cd464 = 0;\n            *0x4cd468 = L\"DRIVESETLABEL\";\n            *0x4cd474 = fcn.0047505a;\n            *0x4cd478 = 0;\n            *0x4cd47c = 0;\n            *0x4cd480 = 2;\n            *0x4cd484 = 2;\n            *0x4cd488 = 0;\n            *0x4cd48c = L\"DRIVESPACEFREE\";\n            *0x4cd498 = fcn.004750eb;\n            *0x4cd49c = 0;\n            *0x4cd4a0 = 0;\n            *0x4cd4a4 = 1;\n            *0x4cd4a8 = 1;\n            *0x4cd4ac = 0;\n            *0x4cd4b0 = L\"DRIVESPACETOTAL\";\n            *0x4cd4bc = fcn.004751ce;\n            *0x4cd4c0 = 0;\n            *0x4cd4c4 = 0;\n            *0x4cd4c8 = 1;\n            *0x4cd4cc = 1;\n            *0x4cd4d0 = 0;\n            *0x4cd4d4 = L\"DRIVESTATUS\";\n            *0x4cd4e0 = fcn.004752b1;\n            *0x4cd4e4 = 0;\n            *0x4cd4e8 = 0;\n            *0x4cd4ec = 1;\n            *0x4cd4f0 = 1;\n            *0x4cd4f4 = 0;\n            *0x4cd4f8 = L\"DUMMYSPEEDTEST\";\n            *0x4cd504 = 0x41face;\n            *0x4cd508 = 0;\n            *0x4cd50c = 0;\n            *0x4cd510 = 0;\n            *0x4cd514 = 8;\n            *0x4cd518 = 0;\n            *0x4cd51c = L\"ENVGET\";\n            *0x4cd528 = fcn.0047ee14;\n            *0x4cd52c = 0;\n            *0x4cd530 = 0;\n            *0x4cd534 = 1;\n            *0x4cd538 = 1;\n            *0x4cd53c = 0;\n            *0x4cd540 = L\"ENVSET\";\n            *0x4cd54c = fcn.0047ee84;\n            *0x4cd550 = 0;\n            *0x4cd554 = 0;\n            *0x4cd558 = 1;\n            *0x4cd55c = 2;\n            *0x4cd560 = 0;\n            *0x4cd564 = L\"ENVUPDATE\";\n            *0x4cd570 = fcn.0047eee8;\n            *0x4cd574 = 0;\n            *0x4cd578 = 0;\n            *0x4cd57c = 0;\n            *0x4cd580 = 0;\n            *0x4cd584 = 0;\n            *0x4cd588 = L\"EVAL\";\n            *0x4cd594 = fcn.0047ef56;\n            *0x4cd598 = 0;\n            *0x4cd59c = 0;\n            *0x4cd5a0 = 1;\n            *0x4cd5a4 = 1;\n            *0x4cd5a8 = 0;\n            *0x4cd5ac = L\"EXECUTE\";\n            *0x4cd5b8 = fcn.0047f013;\n            *0x4cd5bc = 0;\n            *0x4cd5c0 = 0;\n            *0x4cd5c4 = 1;\n            *0x4cd5c8 = 1;\n            *0x4cd5cc = 0;\n            *0x4cd5d0 = 0x49fa80;\n            *0x4cd5dc = fcn.0047da59;\n            *0x4cd5e0 = 0;\n            *0x4cd5e4 = 0;\n            *0x4cd5e8 = 1;\n            *0x4cd5ec = 1;\n            *0x4cd5f0 = 0;\n            *0x4cd5f4 = L\"FILECHANGEDIR\";\n            *0x4cd600 = fcn.004753d4;\n            *0x4cd604 = 0;\n            *0x4cd608 = 0;\n            *0x4cd60c = 1;\n            *0x4cd610 = 1;\n            *0x4cd614 = 0;\n            *0x4cd618 = L\"FILECLOSE\";\n            *0x4cd624 = fcn.00475411;\n            *0x4cd628 = 0;\n            *0x4cd62c = 0;\n            *0x4cd630 = 1;\n            *0x4cd634 = 1;\n            *0x4cd638 = 0;\n            *0x4cd63c = L\"FILECOPY\";\n            *0x4cd648 = fcn.00475499;\n            *0x4cd64c = 0;\n            *0x4cd650 = 0;\n            *0x4cd654 = 2;\n            *0x4cd658 = 3;\n            *0x4cd65c = 0;\n            *0x4cd660 = L\"FILECREATENTFSLINK\";\n            *0x4cd66c = fcn.004755f7;\n            *0x4cd670 = 0;\n            *0x4cd674 = 0;\n            *0x4cd678 = 2;\n            *0x4cd67c = 3;\n            *0x4cd680 = 0;\n            *0x4cd684 = L\"FILECREATESHORTCUT\";\n            *0x4cd690 = fcn.0047573c;\n            *0x4cd694 = 0;\n            *0x4cd698 = 0;\n            *0x4cd69c = 2;\n            *0x4cd6a0 = 9;\n            *0x4cd6a4 = 0;\n            *0x4cd6a8 = L\"FILEDELETE\";\n            *0x4cd6b4 = fcn.00475b25;\n            *0x4cd6b8 = 0;\n            *0x4cd6bc = 0;\n            *0x4cd6c0 = 1;\n            *0x4cd6c4 = 1;\n            *0x4cd6c8 = 0;\n            *0x4cd6cc = L\"FILEEXISTS\";\n            *0x4cd6d8 = fcn.00475b78;\n            *0x4cd6dc = 0;\n            *0x4cd6e0 = 0;\n            *0x4cd6e4 = 1;\n            *0x4cd6e8 = 1;\n            *0x4cd6ec = 0;\n            *0x4cd6f0 = L\"FILEFINDFIRSTFILE\";\n            *0x4cd6fc = fcn.00475bb5;\n            *0x4cd700 = 0;\n            *0x4cd704 = 0;\n            *0x4cd708 = 1;\n            *0x4cd70c = 1;\n            *0x4cd710 = 0;\n            *0x4cd714 = L\"FILEFINDNEXTFILE\";\n            *0x4cd720 = fcn.00475d58;\n            *0x4cd724 = 0;\n            *0x4cd728 = 0;\n            *0x4cd72c = 1;\n            *0x4cd730 = 2;\n            *0x4cd734 = 0;\n            *0x4cd738 = L\"FILEFLUSH\";\n            *0x4cd744 = fcn.00475f3a;\n            *0x4cd748 = 0;\n            *0x4cd74c = 0;\n            *0x4cd750 = 1;\n            *0x4cd754 = 1;\n            *0x4cd758 = 0;\n            *0x4cd75c = L\"FILEGETATTRIB\";\n            *0x4cd768 = fcn.00475f92;\n            *0x4cd76c = 0;\n            *0x4cd770 = 0;\n            *0x4cd774 = 1;\n            *0x4cd778 = 1;\n            *0x4cd77c = 0;\n            *0x4cd780 = L\"FILEGETENCODING\";\n            *0x4cd78c = fcn.0047601f;\n            *0x4cd790 = 0;\n            *0x4cd794 = 0;\n            *0x4cd798 = 1;\n            *0x4cd79c = 2;\n            *0x4cd7a0 = 0;\n            *0x4cd7a4 = L\"FILEGETLONGNAME\";\n            *0x4cd7b0 = fcn.0047619d;\n            *0x4cd7b4 = 0;\n            *0x4cd7b8 = 0;\n            *0x4cd7bc = 1;\n            *0x4cd7c0 = 2;\n            *0x4cd7c4 = 0;\n            *0x4cd7c8 = L\"FILEGETPOS\";\n            *0x4cd7d4 = fcn.00476263;\n            *0x4cd7d8 = 0;\n            *0x4cd7dc = 0;\n            *0x4cd7e0 = 1;\n            *0x4cd7e4 = 1;\n            *0x4cd7e8 = 0;\n            *0x4cd7ec = L\"FILEGETSHORTCUT\";\n            *0x4cd7f8 = fcn.004763ac;\n            *0x4cd7fc = 0;\n            *0x4cd800 = 0;\n            *0x4cd804 = 1;\n            *0x4cd808 = 1;\n            *0x4cd80c = 0;\n            *0x4cd810 = L\"FILEGETSHORTNAME\";\n            *0x4cd81c = fcn.004762f1;\n            *0x4cd820 = 0;\n            *0x4cd824 = 0;\n            *0x4cd828 = 1;\n            *0x4cd82c = 2;\n            *0x4cd830 = 0;\n            *0x4cd834 = L\"FILEGETSIZE\";\n            *0x4cd840 = fcn.0047680c;\n            *0x4cd844 = 0;\n            *0x4cd848 = 0;\n            *0x4cd84c = 1;\n            *0x4cd850 = 1;\n            *0x4cd854 = 0;\n            *0x4cd858 = L\"FILEGETTIME\";\n            *0x4cd864 = fcn.004768ad;\n            *0x4cd868 = 0;\n            *0x4cd86c = 0;\n            *0x4cd870 = 1;\n            *0x4cd874 = 3;\n            *0x4cd878 = 0;\n            *0x4cd87c = L\"FILEGETVERSION\";\n            *0x4cd888 = fcn.00476d50;\n            *0x4cd88c = 0;\n            *0x4cd890 = 0;\n            *0x4cd894 = 1;\n            *0x4cd898 = 2;\n            *0x4cd89c = 0;\n            *0x4cd8a0 = L\"FILEINSTALL\";\n            *0x4cd8ac = fcn.00476e0f;\n            *0x4cd8b0 = 0;\n            *0x4cd8b4 = 0;\n            *0x4cd8b8 = 2;\n            *0x4cd8bc = 3;\n            *0x4cd8c0 = 0;\n            *0x4cd8c4 = L\"FILEMOVE\";\n            *0x4cd8d0 = fcn.004771df;\n            *0x4cd8d4 = 0;\n            *0x4cd8d8 = 0;\n            *0x4cd8dc = 2;\n            *0x4cd8e0 = 3;\n            *0x4cd8e4 = 0;\n            *0x4cd8e8 = L\"FILEOPEN\";\n            *0x4cd8f4 = fcn.00477368;\n            *0x4cd8f8 = 0;\n            *0x4cd8fc = 0;\n            *0x4cd900 = 1;\n            *0x4cd904 = 2;\n            *0x4cd908 = 0;\n            *0x4cd90c = L\"FILEOPENDIALOG\";\n            *0x4cd918 = fcn.0047763c;\n            *0x4cd91c = 0;\n            *0x4cd920 = 0;\n            *0x4cd924 = 3;\n            *0x4cd928 = 6;\n            *0x4cd92c = 0;\n            *0x4cd930 = L\"FILEREAD\";\n            *0x4cd93c = fcn.0041f0d9;\n            *0x4cd940 = 0;\n            *0x4cd944 = 0;\n            *0x4cd948 = 1;\n            *0x4cd94c = 2;\n            *0x4cd950 = 0;\n            *0x4cd954 = L\"FILEREADLINE\";\n            *0x4cd960 = fcn.00407127;\n            *0x4cd964 = 0;\n            *0x4cd968 = 0;\n            *0x4cd96c = 1;\n            *0x4cd970 = 2;\n            *0x4cd974 = 0;\n            *0x4cd978 = L\"FILEREADTOARRAY\";\n            *0x4cd984 = fcn.00477654;\n            *0x4cd988 = 0;\n            *0x4cd98c = 0;\n            *0x4cd990 = 1;\n            *0x4cd994 = 1;\n            *0x4cd998 = 0;\n            *0x4cd99c = L\"FILERECYCLE\";\n            *0x4cd9a8 = fcn.004778ba;\n            *0x4cd9ac = 0;\n            *0x4cd9b0 = 0;\n            *0x4cd9b4 = 1;\n            *0x4cd9b8 = 1;\n            *0x4cd9bc = 0;\n            *0x4cd9c0 = L\"FILERECYCLEEMPTY\";\n            *0x4cd9cc = fcn.00477953;\n            *0x4cd9d0 = 0;\n            *0x4cd9d4 = 0;\n            *0x4cd9d8 = 0;\n            *0x4cd9dc = 1;\n            *0x4cd9e0 = 0;\n            *0x4cd9e4 = L\"FILESAVEDIALOG\";\n            *0x4cd9f0 = fcn.0047799c;\n            *0x4cd9f4 = 0;\n            *0x4cd9f8 = 0;\n            *0x4cd9fc = 3;\n            *0x4cda00 = 6;\n            *0x4cda04 = 0;\n            *0x4cda08 = L\"FILESELECTFOLDER\";\n            *0x4cda14 = fcn.004779b4;\n            *0x4cda18 = 0;\n            *0x4cda1c = 0;\n            *0x4cda20 = 2;\n            *0x4cda24 = 5;\n            *0x4cda28 = 0;\n            *0x4cda2c = L\"FILESETATTRIB\";\n            *0x4cda38 = fcn.00477d0e;\n            *0x4cda3c = 0;\n            *0x4cda40 = 0;\n            *0x4cda44 = 2;\n            *0x4cda48 = 3;\n            *0x4cda4c = 0;\n            *0x4cda50 = L\"FILESETEND\";\n            *0x4cda5c = fcn.00477fd5;\n            *0x4cda60 = 0;\n            *0x4cda64 = 0;\n            *0x4cda68 = 1;\n            *0x4cda6c = 1;\n            *0x4cda70 = 0;\n            *0x4cda74 = L\"FILESETPOS\";\n            *0x4cda80 = fcn.00478043;\n            *0x4cda84 = 0;\n            *0x4cda88 = 0;\n            *0x4cda8c = 3;\n            *0x4cda90 = 3;\n            *0x4cda94 = 0;\n            *0x4cda98 = L\"FILESETTIME\";\n            *0x4cdaa4 = fcn.004780b3;\n            *0x4cdaa8 = 0;\n            *0x4cdaac = 0;\n            *0x4cdab0 = 2;\n            *0x4cdab4 = 4;\n            *0x4cdab8 = 0;\n            *0x4cdabc = L\"FILEWRITE\";\n            *0x4cdac8 = fcn.004782f8;\n            *0x4cdacc = 0;\n            *0x4cdad0 = 0;\n            *0x4cdad4 = 2;\n            *0x4cdad8 = 2;\n            *0x4cdadc = 0;\n            *0x4cdae0 = L\"FILEWRITELINE\";\n            *0x4cdaec = fcn.0047830c;\n            *0x4cdaf0 = 0;\n            *0x4cdaf4 = 0;\n            *0x4cdaf8 = 2;\n            *0x4cdafc = 2;\n            *0x4cdb00 = 0;\n            *0x4cdb04 = L\"FLOOR\";\n            *0x4cdb10 = fcn.0047da99;\n            *0x4cdb14 = 0;\n            *0x4cdb18 = 0;\n            *0x4cdb1c = 1;\n            *0x4cdb20 = 1;\n            *0x4cdb24 = 0;\n            *0x4cdb28 = L\"FTPSETPROXY\";\n            *0x4cdb34 = fcn.0047c26e;\n            *0x4cdb38 = 0;\n            *0x4cdb3c = 0;\n            *0x4cdb40 = 1;\n            *0x4cdb44 = 4;\n            *0x4cdb48 = 0;\n            *0x4cdb4c = L\"FUNCNAME\";\n            *0x4cdb58 = fcn.0047f0f0;\n            *0x4cdb5c = 0;\n            *0x4cdb60 = 0;\n            *0x4cdb64 = 1;\n            *0x4cdb68 = 1;\n            *0x4cdb6c = 0;\n            *0x4cdb70 = L\"GUICREATE\";\n            *0x4cdb7c = fcn.0041e72f;\n            *0x4cdb80 = 0;\n            *0x4cdb84 = 0;\n            *0x4cdb88 = 1;\n            *0x4cdb8c = 8;\n            *0x4cdb90 = 0;\n            *0x4cdb94 = L\"GUICTRLCREATEAVI\";\n            *0x4cdba0 = fcn.00479c1c;\n            *0x4cdba4 = 0;\n            *0x4cdba8 = 0;\n            *0x4cdbac = 4;\n            *0x4cdbb0 = 8;\n            *0x4cdbb4 = 0;\n            *0x4cdbb8 = L\"GUICTRLCREATEBUTTON\";\n            *0x4cdbc4 = fcn.00479c30;\n            *0x4cdbc8 = 0;\n            *0x4cdbcc = 0;\n            *0x4cdbd0 = 3;\n            *0x4cdbd4 = 7;\n            *0x4cdbd8 = 0;\n            *0x4cdbdc = L\"GUICTRLCREATECHECKBOX\";\n            *0x4cdbe8 = fcn.00479c44;\n            *0x4cdbec = 0;\n            *0x4cdbf0 = 0;\n            *0x4cdbf4 = 3;\n            *0x4cdbf8 = 7;\n            *0x4cdbfc = 0;\n            *0x4cdc00 = L\"GUICTRLCREATECOMBO\";\n            *0x4cdc0c = fcn.00479c58;\n            *0x4cdc10 = 0;\n            *0x4cdc14 = 0;\n            *0x4cdc18 = 3;\n            *0x4cdc1c = 7;\n            *0x4cdc20 = 0;\n            *0x4cdc24 = L\"GUICTRLCREATECONTEXTMENU\";\n            *0x4cdc30 = fcn.00479c6c;\n            *0x4cdc34 = 0;\n            *0x4cdc38 = 0;\n            *0x4cdc3c = 0;\n            *0x4cdc40 = 1;\n            *0x4cdc44 = 0;\n            *0x4cdc48 = L\"GUICTRLCREATEDATE\";\n            *0x4cdc54 = fcn.00479c80;\n            *0x4cdc58 = 0;\n            *0x4cdc5c = 0;\n            *0x4cdc60 = 3;\n            *0x4cdc64 = 7;\n            *0x4cdc68 = 0;\n            *0x4cdc6c = L\"GUICTRLCREATEDUMMY\";\n            *0x4cdc78 = fcn.00479c94;\n            *0x4cdc7c = 0;\n            *0x4cdc80 = 0;\n            *0x4cdc84 = 0;\n            *0x4cdc88 = 0;\n            *0x4cdc8c = 0;\n            *0x4cdc90 = L\"GUICTRLCREATEEDIT\";\n            *0x4cdc9c = fcn.00479ca8;\n            *0x4cdca0 = 0;\n            *0x4cdca4 = 0;\n            *0x4cdca8 = 3;\n            *0x4cdcac = 7;\n            *0x4cdcb0 = 0;\n            *0x4cdcb4 = L\"GUICTRLCREATEGRAPHIC\";\n            *0x4cdcc0 = fcn.004072a0;\n            *0x4cdcc4 = 0;\n            *0x4cdcc8 = 0;\n            *0x4cdccc = 2;\n            *0x4cdcd0 = 5;\n            *0x4cdcd4 = 0;\n            *0x4cdcd8 = L\"GUICTRLCREATEGROUP\";\n            *0x4cdce4 = fcn.00479cbc;\n            *0x4cdce8 = 0;\n            *0x4cdcec = 0;\n            *0x4cdcf0 = 3;\n            *0x4cdcf4 = 7;\n            *0x4cdcf8 = 0;\n            *0x4cdcfc = L\"GUICTRLCREATEICON\";\n            *0x4cdd08 = fcn.00479cd0;\n            *0x4cdd0c = 0;\n            *0x4cdd10 = 0;\n            *0x4cdd14 = 4;\n            *0x4cdd18 = 8;\n            *0x4cdd1c = 0;\n            *0x4cdd20 = L\"GUICTRLCREATEINPUT\";\n            *0x4cdd2c = fcn.00479ce4;\n            *0x4cdd30 = 0;\n            *0x4cdd34 = 0;\n            *0x4cdd38 = 3;\n            *0x4cdd3c = 7;\n            *0x4cdd40 = 0;\n            *0x4cdd44 = L\"GUICTRLCREATELABEL\";\n            *0x4cdd50 = fcn.00479cf8;\n            *0x4cdd54 = 0;\n            *0x4cdd58 = 0;\n            *0x4cdd5c = 3;\n            *0x4cdd60 = 7;\n            *0x4cdd64 = 0;\n            *0x4cdd68 = L\"GUICTRLCREATELIST\";\n            *0x4cdd74 = fcn.00479d0c;\n            *0x4cdd78 = 0;\n            *0x4cdd7c = 0;\n            *0x4cdd80 = 3;\n            *0x4cdd84 = 7;\n            *0x4cdd88 = 0;\n            *0x4cdd8c = L\"GUICTRLCREATELISTVIEW\";\n            *0x4cdd98 = fcn.00479d20;\n            *0x4cdd9c = 0;\n            *0x4cdda0 = 0;\n            *0x4cdda4 = 3;\n            *0x4cdda8 = 7;\n            *0x4cddac = 0;\n            *0x4cddb0 = L\"GUICTRLCREATELISTVIEWITEM\";\n            *0x4cddbc = fcn.00479d34;\n            *0x4cddc0 = 0;\n            *0x4cddc4 = 0;\n            *0x4cddc8 = 2;\n            *0x4cddcc = 2;\n            *0x4cddd0 = 0;\n            *0x4cddd4 = L\"GUICTRLCREATEMENU\";\n            *0x4cdde0 = fcn.00479d48;\n            *0x4cdde4 = 0;\n            *0x4cdde8 = 0;\n            *0x4cddec = 1;\n            *0x4cddf0 = 3;\n            *0x4cddf4 = 0;\n            *0x4cddf8 = L\"GUICTRLCREATEMENUITEM\";\n            *0x4cde04 = fcn.00479d5c;\n            *0x4cde08 = 0;\n            *0x4cde0c = 0;\n            *0x4cde10 = 2;\n            *0x4cde14 = 4;\n            *0x4cde18 = 0;\n            *0x4cde1c = L\"GUICTRLCREATEMONTHCAL\";\n            *0x4cde28 = fcn.00479d70;\n            *0x4cde2c = 0;\n            *0x4cde30 = 0;\n            *0x4cde34 = 3;\n            *0x4cde38 = 7;\n            *0x4cde3c = 0;\n            *0x4cde40 = L\"GUICTRLCREATEOBJ\";\n            *0x4cde4c = fcn.00479d84;\n            *0x4cde50 = 0;\n            *0x4cde54 = 0;\n            *0x4cde58 = 3;\n            *0x4cde5c = 7;\n            *0x4cde60 = 0;\n            *0x4cde64 = L\"GUICTRLCREATEPIC\";\n            *0x4cde70 = fcn.00479d98;\n            *0x4cde74 = 0;\n            *0x4cde78 = 0;\n            *0x4cde7c = 3;\n            *0x4cde80 = 7;\n            *0x4cde84 = 0;\n            *0x4cde88 = L\"GUICTRLCREATEPROGRESS\";\n            *0x4cde94 = fcn.00479dac;\n            *0x4cde98 = 0;\n            *0x4cde9c = 0;\n            *0x4cdea0 = 2;\n            *0x4cdea4 = 6;\n            *0x4cdea8 = 0;\n            *0x4cdeac = L\"GUICTRLCREATERADIO\";\n            *0x4cdeb8 = fcn.00479dc0;\n            *0x4cdebc = 0;\n            *0x4cdec0 = 0;\n            *0x4cdec4 = 3;\n            *0x4cdec8 = 7;\n            *0x4cdecc = 0;\n            *0x4cded0 = L\"GUICTRLCREATESLIDER\";\n            *0x4cdedc = fcn.00479dd4;\n            *0x4cdee0 = 0;\n            *0x4cdee4 = 0;\n            *0x4cdee8 = 2;\n            *0x4cdeec = 6;\n            *0x4cdef0 = 0;\n            *0x4cdef4 = L\"GUICTRLCREATETAB\";\n            *0x4cdf00 = fcn.00479de8;\n            *0x4cdf04 = 0;\n            *0x4cdf08 = 0;\n            *0x4cdf0c = 2;\n            *0x4cdf10 = 6;\n            *0x4cdf14 = 0;\n            *0x4cdf18 = L\"GUICTRLCREATETABITEM\";\n            *0x4cdf24 = fcn.00479dfc;\n            *0x4cdf28 = 0;\n            *0x4cdf2c = 0;\n            *0x4cdf30 = 1;\n            *0x4cdf34 = 1;\n            *0x4cdf38 = 0;\n            *0x4cdf3c = L\"GUICTRLCREATETREEVIEW\";\n            *0x4cdf48 = fcn.00479e10;\n            *0x4cdf4c = 0;\n            *0x4cdf50 = 0;\n            *0x4cdf54 = 2;\n            *0x4cdf58 = 6;\n            *0x4cdf5c = 0;\n            *0x4cdf60 = L\"GUICTRLCREATETREEVIEWITEM\";\n            *0x4cdf6c = fcn.00479e24;\n            *0x4cdf70 = 0;\n            *0x4cdf74 = 0;\n            *0x4cdf78 = 2;\n            *0x4cdf7c = 2;\n            *0x4cdf80 = 0;\n            *0x4cdf84 = L\"GUICTRLCREATEUPDOWN\";\n            *0x4cdf90 = fcn.00479e38;\n            *0x4cdf94 = 0;\n            *0x4cdf98 = 0;\n            *0x4cdf9c = 1;\n            *0x4cdfa0 = 2;\n            *0x4cdfa4 = 0;\n            *0x4cdfa8 = L\"GUICTRLDELETE\";\n            *0x4cdfb4 = fcn.0041a2c5;\n            *0x4cdfb8 = 0;\n            *0x4cdfbc = 0;\n            *0x4cdfc0 = 1;\n            *0x4cdfc4 = 1;\n            *0x4cdfc8 = 0;\n            *0x4cdfcc = L\"GUICTRLGETHANDLE\";\n            *0x4cdfd8 = fcn.00479e4c;\n            *0x4cdfdc = 0;\n            *0x4cdfe0 = 0;\n            *0x4cdfe4 = 1;\n            *0x4cdfe8 = 1;\n            *0x4cdfec = 0;\n            *0x4cdff0 = L\"GUICTRLGETSTATE\";\n            *0x4cdffc = fcn.00479e93;\n            *0x4ce000 = 0;\n            *0x4ce004 = 0;\n            *0x4ce008 = 1;\n            *0x4ce00c = 1;\n            *0x4ce010 = 0;\n            *0x4ce014 = L\"GUICTRLREAD\";\n            *0x4ce020 = fcn.00479ec8;\n            *0x4ce024 = 0;\n            *0x4ce028 = 0;\n            *0x4ce02c = 1;\n            *0x4ce030 = 2;\n            *0x4ce034 = 0;\n            *0x4ce038 = L\"GUICTRLRECVMSG\";\n            *0x4ce044 = fcn.00479f4e;\n            *0x4ce048 = 0;\n            *0x4ce04c = 0;\n            *0x4ce050 = 2;\n            *0x4ce054 = 4;\n            *0x4ce058 = 0;\n            *0x4ce05c = L\"GUICTRLREGISTERLISTVIEWSORT\";\n            *0x4ce068 = fcn.0047a0e8;\n            *0x4ce06c = 0;\n            *0x4ce070 = 0;\n            *0x4ce074 = 2;\n            *0x4ce078 = 2;\n            *0x4ce07c = 0;\n            *0x4ce080 = L\"GUICTRLSENDMSG\";\n            *0x4ce08c = fcn.0047a24c;\n            *0x4ce090 = 0;\n            *0x4ce094 = 0;\n            *0x4ce098 = 4;\n            *0x4ce09c = 4;\n            *0x4ce0a0 = 0;\n            *0x4ce0a4 = L\"GUICTRLSENDTODUMMY\";\n            *0x4ce0b0 = fcn.0047a394;\n            *0x4ce0b4 = 0;\n            *0x4ce0b8 = 0;\n            *0x4ce0bc = 1;\n            *0x4ce0c0 = 2;\n            *0x4ce0c4 = 0;\n            *0x4ce0c8 = L\"GUICTRLSETBKCOLOR\";\n            *0x4ce0d4 = fcn.0047a404;\n            *0x4ce0d8 = 0;\n            *0x4ce0dc = 0;\n            *0x4ce0e0 = 2;\n            *0x4ce0e4 = 2;\n            *0x4ce0e8 = 0;\n            *0x4ce0ec = L\"GUICTRLSETCOLOR\";\n            *0x4ce0f8 = fcn.0047a460;\n            *0x4ce0fc = 0;\n            *0x4ce100 = 0;\n            *0x4ce104 = 2;\n            *0x4ce108 = 2;\n            *0x4ce10c = 0;\n            *0x4ce110 = L\"GUICTRLSETCURSOR\";\n            *0x4ce11c = fcn.0047a4bc;\n            *0x4ce120 = 0;\n            *0x4ce124 = 0;\n            *0x4ce128 = 2;\n            *0x4ce12c = 2;\n            *0x4ce130 = 0;\n            *0x4ce134 = L\"GUICTRLSETDATA\";\n            *0x4ce140 = fcn.0047a4fc;\n            *0x4ce144 = 0;\n            *0x4ce148 = 0;\n            *0x4ce14c = 2;\n            *0x4ce150 = 3;\n            *0x4ce154 = 0;\n            *0x4ce158 = L\"GUICTRLSETDEFBKCOLOR\";\n            *0x4ce164 = fcn.0047a587;\n            *0x4ce168 = 0;\n            *0x4ce16c = 0;\n            *0x4ce170 = 1;\n            *0x4ce174 = 2;\n            *0x4ce178 = 0;\n            *0x4ce17c = L\"GUICTRLSETDEFCOLOR\";\n            *0x4ce188 = fcn.0047a5dc;\n            *0x4ce18c = 0;\n            *0x4ce190 = 0;\n            *0x4ce194 = 1;\n            *0x4ce198 = 2;\n            *0x4ce19c = 0;\n            *0x4ce1a0 = L\"GUICTRLSETFONT\";\n            *0x4ce1ac = fcn.0047a631;\n            *0x4ce1b0 = 0;\n            *0x4ce1b4 = 0;\n            *0x4ce1b8 = 2;\n            *0x4ce1bc = 6;\n            *0x4ce1c0 = 0;\n            *0x4ce1c4 = L\"GUICTRLSETGRAPHIC\";\n            *0x4ce1d0 = fcn.0040cd9e;\n            *0x4ce1d4 = 0;\n            *0x4ce1d8 = 0;\n            *0x4ce1dc = 2;\n            *0x4ce1e0 = 8;\n            *0x4ce1e4 = 0;\n            *0x4ce1e8 = L\"GUICTRLSETIMAGE\";\n            *0x4ce1f4 = fcn.0047a71e;\n            *0x4ce1f8 = 0;\n            *0x4ce1fc = 0;\n            *0x4ce200 = 2;\n            *0x4ce204 = 4;\n            *0x4ce208 = 0;\n            *0x4ce20c = L\"GUICTRLSETLIMIT\";\n            *0x4ce218 = fcn.0047a7ca;\n            *0x4ce21c = 0;\n            *0x4ce220 = 0;\n            *0x4ce224 = 2;\n            *0x4ce228 = 3;\n            *0x4ce22c = 0;\n            *0x4ce230 = L\"GUICTRLSETONEVENT\";\n            *0x4ce23c = fcn.0047a81e;\n            *0x4ce240 = 0;\n            *0x4ce244 = 0;\n            *0x4ce248 = 2;\n            *0x4ce24c = 2;\n            *0x4ce250 = 0;\n            *0x4ce254 = L\"GUICTRLSETPOS\";\n            *0x4ce260 = fcn.0047a945;\n            *0x4ce264 = 0;\n            *0x4ce268 = 0;\n            *0x4ce26c = 2;\n            *0x4ce270 = 5;\n            *0x4ce274 = 0;\n            *0x4ce278 = L\"GUICTRLSETRESIZING\";\n            *0x4ce284 = fcn.0047a9d5;\n            *0x4ce288 = 0;\n            *0x4ce28c = 0;\n            *0x4ce290 = 2;\n            *0x4ce294 = 2;\n            *0x4ce298 = 0;\n            *0x4ce29c = L\"GUICTRLSETSTATE\";\n            *0x4ce2a8 = fcn.0047aa1f;\n            *0x4ce2ac = 0;\n            *0x4ce2b0 = 0;\n            *0x4ce2b4 = 2;\n            *0x4ce2b8 = 2;\n            *0x4ce2bc = 0;\n            *0x4ce2c0 = L\"GUICTRLSETSTYLE\";\n            *0x4ce2cc = fcn.0047aa5f;\n            *0x4ce2d0 = 0;\n            *0x4ce2d4 = 0;\n            *0x4ce2d8 = 2;\n            *0x4ce2dc = 3;\n            *0x4ce2e0 = 0;\n            *0x4ce2e4 = L\"GUICTRLSETTIP\";\n            *0x4ce2f0 = fcn.0047aab4;\n            *0x4ce2f4 = 0;\n            *0x4ce2f8 = 0;\n            *0x4ce2fc = 2;\n            *0x4ce300 = 5;\n            *0x4ce304 = 0;\n            *0x4ce308 = L\"GUIDELETE\";\n            *0x4ce314 = fcn.0047ab90;\n            *0x4ce318 = 0;\n            *0x4ce31c = 0;\n            *0x4ce320 = 0;\n            *0x4ce324 = 1;\n            *0x4ce328 = 0;\n            *0x4ce32c = L\"GUIGETCURSORINFO\";\n            *0x4ce338 = fcn.0047abcc;\n            *0x4ce33c = 0;\n            *0x4ce340 = 0;\n            *0x4ce344 = 0;\n            *0x4ce348 = 1;\n            *0x4ce34c = 0;\n            *0x4ce350 = L\"GUIGETMSG\";\n            *0x4ce35c = fcn.0047ad2a;\n            *0x4ce360 = 0;\n            *0x4ce364 = 0;\n            *0x4ce368 = 0;\n            *0x4ce36c = 1;\n            *0x4ce370 = 0;\n            *0x4ce374 = L\"GUIGETSTYLE\";\n            *0x4ce380 = fcn.0047afe0;\n            *0x4ce384 = 0;\n            *0x4ce388 = 0;\n            *0x4ce38c = 0;\n            *0x4ce390 = 1;\n            *0x4ce394 = 0;\n            *0x4ce398 = L\"GUIREGISTERMSG\";\n            *0x4ce3a4 = fcn.0047b0c1;\n            *0x4ce3a8 = 0;\n            *0x4ce3ac = 0;\n            *0x4ce3b0 = 2;\n            *0x4ce3b4 = 2;\n            *0x4ce3b8 = 0;\n            *0x4ce3bc = L\"GUISETACCELERATORS\";\n            *0x4ce3c8 = fcn.0047b1e8;\n            *0x4ce3cc = 0;\n            *0x4ce3d0 = 0;\n            *0x4ce3d4 = 1;\n            *0x4ce3d8 = 2;\n            *0x4ce3dc = 0;\n            *0x4ce3e0 = L\"GUISETBKCOLOR\";\n            *0x4ce3ec = fcn.0041a02f;\n            *0x4ce3f0 = 0;\n            *0x4ce3f4 = 0;\n            *0x4ce3f8 = 1;\n            *0x4ce3fc = 2;\n            *0x4ce400 = 0;\n            *0x4ce404 = L\"GUISETCOORD\";\n            *0x4ce410 = fcn.0047b3bc;\n            *0x4ce414 = 0;\n            *0x4ce418 = 0;\n            *0x4ce41c = 2;\n            *0x4ce420 = 5;\n            *0x4ce424 = 0;\n            *0x4ce428 = L\"GUISETCURSOR\";\n            *0x4ce434 = fcn.0047b445;\n            *0x4ce438 = 0;\n            *0x4ce43c = 0;\n            *0x4ce440 = 0;\n            *0x4ce444 = 3;\n            *0x4ce448 = 0;\n            *0x4ce44c = L\"GUISETFONT\";\n            *0x4ce458 = fcn.0047b4a9;\n            *0x4ce45c = 0;\n            *0x4ce460 = 0;\n            *0x4ce464 = 1;\n            *0x4ce468 = 6;\n            *0x4ce46c = 0;\n            *0x4ce470 = L\"GUISETHELP\";\n            *0x4ce47c = fcn.0047b5b1;\n            *0x4ce480 = 0;\n            *0x4ce484 = 0;\n            *0x4ce488 = 1;\n            *0x4ce48c = 2;\n            *0x4ce490 = 0;\n            *0x4ce494 = L\"GUISETICON\";\n            *0x4ce4a0 = fcn.0047b60b;\n            *0x4ce4a4 = 0;\n            *0x4ce4a8 = 0;\n            *0x4ce4ac = 1;\n            *0x4ce4b0 = 3;\n            *0x4ce4b4 = 0;\n            *0x4ce4b8 = L\"GUISETONEVENT\";\n            *0x4ce4c4 = fcn.004010d0;\n            *0x4ce4c8 = 0;\n            *0x4ce4cc = 0;\n            *0x4ce4d0 = 2;\n            *0x4ce4d4 = 3;\n            *0x4ce4d8 = 0;\n            *0x4ce4dc = L\"GUISETSTATE\";\n            *0x4ce4e8 = fcn.0041eea2;\n            *0x4ce4ec = 0;\n            *0x4ce4f0 = 0;\n            *0x4ce4f4 = 0;\n            *0x4ce4f8 = 2;\n            *0x4ce4fc = 0;\n            *0x4ce500 = L\"GUISETSTYLE\";\n            *0x4ce50c = fcn.0047b681;\n            *0x4ce510 = 0;\n            *0x4ce514 = 0;\n            *0x4ce518 = 1;\n            *0x4ce51c = 3;\n            *0x4ce520 = 0;\n            *0x4ce524 = L\"GUISTARTGROUP\";\n            *0x4ce530 = fcn.0047b6e9;\n            *0x4ce534 = 0;\n            *0x4ce538 = 0;\n            *0x4ce53c = 0;\n            *0x4ce540 = 1;\n            *0x4ce544 = 0;\n            *0x4ce548 = L\"GUISWITCH\";\n            *0x4ce554 = fcn.0047b734;\n            *0x4ce558 = 0;\n            *0x4ce55c = 0;\n            *0x4ce560 = 1;\n            *0x4ce564 = 2;\n            *0x4ce568 = 0;\n            *0x4ce56c = 0x49fab0;\n            *0x4ce578 = fcn.0040b4b7;\n            *0x4ce57c = 0;\n            *0x4ce580 = 0;\n            *0x4ce584 = 1;\n            *0x4ce588 = 2;\n            *0x4ce58c = 0;\n            *0x4ce590 = L\"HOTKEYSET\";\n            *0x4ce59c = fcn.004025f5;\n            *0x4ce5a0 = 0;\n            *0x4ce5a4 = 0;\n            *0x4ce5a8 = 1;\n            *0x4ce5ac = 2;\n            *0x4ce5b0 = 0;\n            *0x4ce5b4 = L\"HTTPSETPROXY\";\n            *0x4ce5c0 = fcn.0047c528;\n            *0x4ce5c4 = 0;\n            *0x4ce5c8 = 0;\n            *0x4ce5cc = 1;\n            *0x4ce5d0 = 4;\n            *0x4ce5d4 = 0;\n            *0x4ce5d8 = L\"HTTPSETUSERAGENT\";\n            *0x4ce5e4 = fcn.0047c53c;\n            *0x4ce5e8 = 0;\n            *0x4ce5ec = 0;\n            *0x4ce5f0 = 1;\n            *0x4ce5f4 = 1;\n            *0x4ce5f8 = 0;\n            *0x4ce5fc = L\"HWND\";\n            *0x4ce608 = fcn.0047dafe;\n            *0x4ce60c = 0;\n            *0x4ce610 = 0;\n            *0x4ce614 = 1;\n            *0x4ce618 = 1;\n            *0x4ce61c = 0;\n            *0x4ce620 = L\"INETCLOSE\";\n            *0x4ce62c = fcn.0047c5a3;\n            *0x4ce630 = 0;\n            *0x4ce634 = 0;\n            *0x4ce638 = 1;\n            *0x4ce63c = 1;\n            *0x4ce640 = 0;\n            *0x4ce644 = L\"INETGET\";\n            *0x4ce650 = fcn.0047c619;\n            *0x4ce654 = 0;\n            *0x4ce658 = 0;\n            *0x4ce65c = 2;\n            *0x4ce660 = 4;\n            *0x4ce664 = 0;\n            *0x4ce668 = L\"INETGETINFO\";\n            *0x4ce674 = fcn.0047c76f;\n            *0x4ce678 = 0;\n            *0x4ce67c = 0;\n            *0x4ce680 = 0;\n            *0x4ce684 = 2;\n            *0x4ce688 = 0;\n            *0x4ce68c = L\"INETGETSIZE\";\n            *0x4ce698 = fcn.0047ca4a;\n            *0x4ce69c = 0;\n            *0x4ce6a0 = 0;\n            *0x4ce6a4 = 1;\n            *0x4ce6a8 = 2;\n            *0x4ce6ac = 0;\n            *0x4ce6b0 = L\"INETREAD\";\n            *0x4ce6bc = fcn.0047cb2c;\n            *0x4ce6c0 = 0;\n            *0x4ce6c4 = 0;\n            *0x4ce6c8 = 1;\n            *0x4ce6cc = 2;\n            *0x4ce6d0 = 0;\n            *0x4ce6d4 = L\"INIDELETE\";\n            *0x4ce6e0 = fcn.00478320;\n            *0x4ce6e4 = 0;\n            *0x4ce6e8 = 0;\n            *0x4ce6ec = 2;\n            *0x4ce6f0 = 3;\n            *0x4ce6f4 = 0;\n            *0x4ce6f8 = L\"INIREAD\";\n            *0x4ce704 = fcn.004783fd;\n            *0x4ce708 = 0;\n            *0x4ce70c = 0;\n            *0x4ce710 = 4;\n            *0x4ce714 = 4;\n            *0x4ce718 = 0;\n            *0x4ce71c = L\"INIREADSECTION\";\n            *0x4ce728 = fcn.004784bf;\n            *0x4ce72c = 0;\n            *0x4ce730 = 0;\n            *0x4ce734 = 2;\n            *0x4ce738 = 2;\n            *0x4ce73c = 0;\n            *0x4ce740 = L\"INIREADSECTIONNAMES\";\n            *0x4ce74c = fcn.004787fc;\n            *0x4ce750 = 0;\n            *0x4ce754 = 0;\n            *0x4ce758 = 1;\n            *0x4ce75c = 1;\n            *0x4ce760 = 0;\n            *0x4ce764 = L\"INIRENAMESECTION\";\n            *0x4ce770 = fcn.00478a19;\n            *0x4ce774 = 0;\n            *0x4ce778 = 0;\n            *0x4ce77c = 3;\n            *0x4ce780 = 4;\n            *0x4ce784 = 0;\n            *0x4ce788 = L\"INIWRITE\";\n            *0x4ce794 = fcn.00478bba;\n            *0x4ce798 = 0;\n            *0x4ce79c = 0;\n            *0x4ce7a0 = 4;\n            *0x4ce7a4 = 4;\n            *0x4ce7a8 = 0;\n            *0x4ce7ac = L\"INIWRITESECTION\";\n            *0x4ce7b8 = fcn.00478c60;\n            *0x4ce7bc = 0;\n            *0x4ce7c0 = 0;\n            *0x4ce7c4 = 3;\n            *0x4ce7c8 = 4;\n            *0x4ce7cc = 0;\n            *0x4ce7d0 = L\"INPUTBOX\";\n            *0x4ce7dc = fcn.0047f195;\n            *0x4ce7e0 = 0;\n            *0x4ce7e4 = 0;\n            *0x4ce7e8 = 2;\n            *0x4ce7ec = 10;\n            *0x4ce7f0 = 0;\n            *0x4ce7f4 = 0x49fa78;\n            *0x4ce800 = fcn.0040b6ca;\n            *0x4ce804 = 0;\n            *0x4ce808 = 0;\n            *0x4ce80c = 1;\n            *0x4ce810 = 2;\n            *0x4ce814 = 0;\n            *0x4ce818 = L\"ISADMIN\";\n            *0x4ce824 = fcn.0047f635;\n            *0x4ce828 = 0;\n            *0x4ce82c = 0;\n            *0x4ce830 = 0;\n            *0x4ce834 = 0;\n            *0x4ce838 = 0;\n            *0x4ce83c = L\"ISARRAY\";\n            *0x4ce848 = fcn.0047db85;\n            *0x4ce84c = 0;\n            *0x4ce850 = 0;\n            *0x4ce854 = 1;\n            *0x4ce858 = 1;\n            *0x4ce85c = 1;\n            *0x4ce860 = L\"ISBINARY\";\n            *0x4ce86c = fcn.0047dbba;\n            *0x4ce870 = 0;\n            *0x4ce874 = 0;\n            *0x4ce878 = 1;\n            *0x4ce87c = 1;\n            *0x4ce880 = 1;\n            *0x4ce884 = L\"ISBOOL\";\n            *0x4ce890 = fcn.0047f65d;\n            *0x4ce894 = 0;\n            *0x4ce898 = 0;\n            *0x4ce89c = 1;\n            *0x4ce8a0 = 1;\n            *0x4ce8a4 = 1;\n            *0x4ce8a8 = L\"ISDECLARED\";\n            *0x4ce8b4 = fcn.0047f692;\n            *0x4ce8b8 = 0;\n            *0x4ce8bc = 0;\n            *0x4ce8c0 = 1;\n            *0x4ce8c4 = 1;\n            *0x4ce8c8 = 0;\n            *0x4ce8cc = L\"ISDLLSTRUCT\";\n            *0x4ce8d8 = fcn.00489fd4;\n            *0x4ce8dc = 0;\n            *0x4ce8e0 = 0;\n            *0x4ce8e4 = 1;\n            *0x4ce8e8 = 1;\n            *0x4ce8ec = 1;\n            *0x4ce8f0 = L\"ISFLOAT\";\n            *0x4ce8fc = fcn.0047dbef;\n            *0x4ce900 = 0;\n            *0x4ce904 = 0;\n            *0x4ce908 = 1;\n            *0x4ce90c = 1;\n            *0x4ce910 = 1;\n            *0x4ce914 = L\"ISFUNC\";\n            *0x4ce920 = fcn.0047f707;\n            *0x4ce924 = 0;\n            *0x4ce928 = 0;\n            *0x4ce92c = 1;\n            *0x4ce930 = 1;\n            *0x4ce934 = 1;\n            *0x4ce938 = L\"ISHWND\";\n            *0x4ce944 = fcn.0047dc6f;\n            *0x4ce948 = 0;\n            *0x4ce94c = 0;\n            *0x4ce950 = 1;\n            *0x4ce954 = 1;\n            *0x4ce958 = 1;\n            *0x4ce95c = L\"ISINT\";\n            *0x4ce968 = fcn.0047dcbc;\n            *0x4ce96c = 0;\n            *0x4ce970 = 0;\n            *0x4ce974 = 1;\n            *0x4ce978 = 1;\n            *0x4ce97c = 1;\n            *0x4ce980 = L\"ISKEYWORD\";\n            *0x4ce98c = fcn.0047f74f;\n            *0x4ce990 = 0;\n            *0x4ce994 = 0;\n            *0x4ce998 = 1;\n            *0x4ce99c = 1;\n            *0x4ce9a0 = 1;\n            *0x4ce9a4 = L\"ISMAP\";\n            *0x4ce9b0 = fcn.0047dd41;\n            *0x4ce9b4 = 0;\n            *0x4ce9b8 = 0;\n            *0x4ce9bc = 1;\n            *0x4ce9c0 = 1;\n            *0x4ce9c4 = 1;\n            *0x4ce9c8 = L\"ISNUMBER\";\n            *0x4ce9d4 = fcn.0047dd76;\n            *0x4ce9d8 = 0;\n            *0x4ce9dc = 0;\n            *0x4ce9e0 = 1;\n            *0x4ce9e4 = 1;\n            *0x4ce9e8 = 1;\n            *0x4ce9ec = L\"ISOBJ\";\n            *0x4ce9f8 = fcn.0048331d;\n            *0x4ce9fc = 0;\n            *0x4cea00 = 0;\n            *0x4cea04 = 1;\n            *0x4cea08 = 1;\n            *0x4cea0c = 1;\n            *0x4cea10 = L\"ISPTR\";\n            *0x4cea1c = fcn.0047ddae;\n            *0x4cea20 = 0;\n            *0x4cea24 = 0;\n            *0x4cea28 = 1;\n            *0x4cea2c = 1;\n            *0x4cea30 = 1;\n            *0x4cea34 = L\"ISSTRING\";\n            *0x4cea40 = fcn.0047dde3;\n            *0x4cea44 = 0;\n            *0x4cea48 = 0;\n            *0x4cea4c = 1;\n            *0x4cea50 = 1;\n            *0x4cea54 = 1;\n            *0x4cea58 = 0x49fac0;\n            *0x4cea64 = fcn.0047de18;\n            *0x4cea68 = 0;\n            *0x4cea6c = 0;\n            *0x4cea70 = 1;\n            *0x4cea74 = 1;\n            *0x4cea78 = 0;\n            *0x4cea7c = L\"MAPAPPEND\";\n            *0x4cea88 = fcn.0047f7ac;\n            *0x4cea8c = 0;\n            *0x4cea90 = 0;\n            *0x4cea94 = 2;\n            *0x4cea98 = 2;\n            *0x4cea9c = 1;\n            *0x4ceaa0 = L\"MAPEXISTS\";\n            *0x4ceaac = fcn.0047f847;\n            *0x4ceab0 = 0;\n            *0x4ceab4 = 0;\n            *0x4ceab8 = 2;\n            *0x4ceabc = 2;\n            *0x4ceac0 = 1;\n            *0x4ceac4 = L\"MAPKEYS\";\n            *0x4cead0 = fcn.0047f8da;\n            *0x4cead4 = 0;\n            *0x4cead8 = 0;\n            *0x4ceadc = 1;\n            *0x4ceae0 = 1;\n            *0x4ceae4 = 1;\n            *0x4ceae8 = L\"MAPREMOVE\";\n            *0x4ceaf4 = fcn.0047f97f;\n            *0x4ceaf8 = 0;\n            *0x4ceafc = 0;\n            *0x4ceb00 = 2;\n            *0x4ceb04 = 2;\n            *0x4ceb08 = 1;\n            *0x4ceb0c = L\"MEMGETSTATS\";\n            *0x4ceb18 = fcn.0041f370;\n            *0x4ceb1c = 0;\n            *0x4ceb20 = 0;\n            *0x4ceb24 = 0;\n            *0x4ceb28 = 0;\n            *0x4ceb2c = 0;\n            *0x4ceb30 = 0x49fa88;\n            *0x4ceb3c = fcn.0047de58;\n            *0x4ceb40 = 0;\n            *0x4ceb44 = 0;\n            *0x4ceb48 = 2;\n            *0x4ceb4c = 2;\n            *0x4ceb50 = 0;\n            *0x4ceb54 = L\"MOUSECLICK\";\n            *0x4ceb60 = fcn.0047fa12;\n            *0x4ceb64 = 0;\n            *0x4ceb68 = 0;\n            *0x4ceb6c = 1;\n            *0x4ceb70 = 5;\n            *0x4ceb74 = 0;\n            *0x4ceb78 = L\"MOUSECLICKDRAG\";\n            *0x4ceb84 = fcn.0047fbd3;\n            *0x4ceb88 = 0;\n            *0x4ceb8c = 0;\n            *0x4ceb90 = 5;\n            *0x4ceb94 = 6;\n            *0x4ceb98 = 0;\n            *0x4ceb9c = L\"MOUSEDOWN\";\n            *0x4ceba8 = fcn.0047fcf9;\n            *0x4cebac = 0;\n            *0x4cebb0 = 0;\n            *0x4cebb4 = 1;\n            *0x4cebb8 = 1;\n            *0x4cebbc = 0;\n            *0x4cebc0 = L\"MOUSEGETCURSOR\";\n            *0x4cebcc = fcn.0047fd35;\n            *0x4cebd0 = 0;\n            *0x4cebd4 = 0;\n            *0x4cebd8 = 0;\n            *0x4cebdc = 0;\n            *0x4cebe0 = 0;\n            *0x4cebe4 = L\"MOUSEGETPOS\";\n            *0x4cebf0 = fcn.0047fe92;\n            *0x4cebf4 = 0;\n            *0x4cebf8 = 0;\n            *0x4cebfc = 0;\n            *0x4cec00 = 1;\n            *0x4cec04 = 0;\n            *0x4cec08 = L\"MOUSEMOVE\";\n            *0x4cec14 = fcn.0047ffb9;\n            *0x4cec18 = 0;\n            *0x4cec1c = 0;\n            *0x4cec20 = 2;\n            *0x4cec24 = 3;\n            *0x4cec28 = 0;\n            *0x4cec2c = L\"MOUSEUP\";\n            *0x4cec38 = fcn.0047ffff;\n            *0x4cec3c = 0;\n            *0x4cec40 = 0;\n            *0x4cec44 = 1;\n            *0x4cec48 = 1;\n            *0x4cec4c = 0;\n            *0x4cec50 = L\"MOUSEWHEEL\";\n            *0x4cec5c = fcn.0048003b;\n            *0x4cec60 = 0;\n            *0x4cec64 = 0;\n            *0x4cec68 = 1;\n            *0x4cec6c = 2;\n            *0x4cec70 = 0;\n            *0x4cec74 = L\"MSGBOX\";\n            *0x4cec80 = fcn.004800ba;\n            *0x4cec84 = 0;\n            *0x4cec88 = 0;\n            *0x4cec8c = 3;\n            *0x4cec90 = 5;\n            *0x4cec94 = 0;\n            *0x4cec98 = L\"NUMBER\";\n            *0x4ceca4 = fcn.0040b703;\n            *0x4ceca8 = 0;\n            *0x4cecac = 0;\n            *0x4cecb0 = 1;\n            *0x4cecb4 = 2;\n            *0x4cecb8 = 0;\n            *0x4cecbc = L\"OBJCREATE\";\n            *0x4cecc8 = fcn.00483355;\n            *0x4ceccc = 0;\n            *0x4cecd0 = 0;\n            *0x4cecd4 = 1;\n            *0x4cecd8 = 4;\n            *0x4cecdc = 0;\n            *0x4cece0 = L\"OBJCREATEINTERFACE\";\n            *0x4cecec = fcn.00483653;\n            *0x4cecf0 = 0;\n            *0x4cecf4 = 0;\n            *0x4cecf8 = 2;\n            *0x4cecfc = 4;\n            *0x4ced00 = 0;\n            *0x4ced04 = L\"OBJEVENT\";\n            *0x4ced10 = fcn.0048386e;\n            *0x4ced14 = 0;\n            *0x4ced18 = 0;\n            *0x4ced1c = 1;\n            *0x4ced20 = 3;\n            *0x4ced24 = 0;\n            *0x4ced28 = L\"OBJGET\";\n            *0x4ced34 = fcn.00483b57;\n            *0x4ced38 = 0;\n            *0x4ced3c = 0;\n            *0x4ced40 = 1;\n            *0x4ced44 = 3;\n            *0x4ced48 = 0;\n            *0x4ced4c = L\"OBJNAME\";\n            *0x4ced58 = fcn.00483f10;\n            *0x4ced5c = 0;\n            *0x4ced60 = 0;\n            *0x4ced64 = 1;\n            *0x4ced68 = 2;\n            *0x4ced6c = 0;\n            *0x4ced70 = L\"ONAUTOITEXITREGISTER\";\n            *0x4ced7c = fcn.00480240;\n            *0x4ced80 = 0;\n            *0x4ced84 = 0;\n            *0x4ced88 = 1;\n            *0x4ced8c = 1;\n            *0x4ced90 = 0;\n            *0x4ced94 = L\"ONAUTOITEXITUNREGISTER\";\n            *0x4ceda0 = fcn.00480365;\n            *0x4ceda4 = 0;\n            *0x4ceda8 = 0;\n            *0x4cedac = 1;\n            *0x4cedb0 = 1;\n            *0x4cedb4 = 0;\n            *0x4cedb8 = 0x49fab8;\n            *0x4cedc4 = fcn.00401641;\n            *0x4cedc8 = 0;\n            *0x4cedcc = 0;\n            *0x4cedd0 = 1;\n            *0x4cedd4 = 2;\n            *0x4cedd8 = 0;\n            *0x4ceddc = L\"PING\";\n            *0x4cede8 = fcn.00480482;\n            *0x4cedec = 0;\n            *0x4cedf0 = 0;\n            *0x4cedf4 = 1;\n            *0x4cedf8 = 2;\n            *0x4cedfc = 0;\n            *0x4cee00 = L\"PIXELCHECKSUM\";\n            *0x4cee0c = fcn.0048071e;\n            *0x4cee10 = 0;\n            *0x4cee14 = 0;\n            *0x4cee18 = 4;\n            *0x4cee1c = 7;\n            *0x4cee20 = 0;\n            *0x4cee24 = L\"PIXELGETCOLOR\";\n            *0x4cee30 = fcn.00480857;\n            *0x4cee34 = 0;\n            *0x4cee38 = 0;\n            *0x4cee3c = 2;\n            *0x4cee40 = 3;\n            *0x4cee44 = 0;\n            *0x4cee48 = L\"PIXELSEARCH\";\n            *0x4cee54 = fcn.0048091e;\n            *0x4cee58 = 0;\n            *0x4cee5c = 0;\n            *0x4cee60 = 5;\n            *0x4cee64 = 8;\n            *0x4cee68 = 0;\n            *0x4cee6c = L\"PROCESSCLOSE\";\n            *0x4cee78 = fcn.0048a009;\n            *0x4cee7c = 0;\n            *0x4cee80 = 0;\n            *0x4cee84 = 1;\n            *0x4cee88 = 1;\n            *0x4cee8c = 0;\n            *0x4cee90 = L\"PROCESSEXISTS\";\n            *0x4cee9c = fcn.0048a211;\n            *0x4ceea0 = 0;\n            *0x4ceea4 = 0;\n            *0x4ceea8 = 1;\n            *0x4ceeac = 1;\n            *0x4ceeb0 = 0;\n            *0x4ceeb4 = L\"PROCESSGETSTATS\";\n            *0x4ceec0 = fcn.0048a2ae;\n            *0x4ceec4 = 0;\n            *0x4ceec8 = 0;\n            *0x4ceecc = 0;\n            *0x4ceed0 = 2;\n            *0x4ceed4 = 0;\n            *0x4ceed8 = L\"PROCESSLIST\";\n            *0x4ceee4 = fcn.0048a5a3;\n            *0x4ceee8 = 0;\n            *0x4ceeec = 0;\n            *0x4ceef0 = 0;\n            *0x4ceef4 = 1;\n            *0x4ceef8 = 0;\n            *0x4ceefc = L\"PROCESSSETPRIORITY\";\n            *0x4cef08 = fcn.0048a7ca;\n            *0x4cef0c = 0;\n            *0x4cef10 = 0;\n            *0x4cef14 = 2;\n            *0x4cef18 = 2;\n            *0x4cef1c = 0;\n            *0x4cef20 = L\"PROCESSWAIT\";\n            *0x4cef2c = fcn.0048a8f0;\n            *0x4cef30 = 0;\n            *0x4cef34 = 0;\n            *0x4cef38 = 1;\n            *0x4cef3c = 2;\n            *0x4cef40 = 0;\n            *0x4cef44 = L\"PROCESSWAITCLOSE\";\n            *0x4cef50 = fcn.0048a993;\n            *0x4cef54 = 0;\n            *0x4cef58 = 0;\n            *0x4cef5c = 1;\n            *0x4cef60 = 2;\n            *0x4cef64 = 0;\n            *0x4cef68 = L\"PROGRESSOFF\";\n            *0x4cef74 = fcn.00480bd2;\n            *0x4cef78 = 0;\n            *0x4cef7c = 0;\n            *0x4cef80 = 0;\n            *0x4cef84 = 0;\n            *0x4cef88 = 0;\n            *0x4cef8c = L\"PROGRESSON\";\n            *0x4cef98 = fcn.00480be7;\n            *0x4cef9c = 0;\n            *0x4cefa0 = 0;\n            *0x4cefa4 = 2;\n            *0x4cefa8 = 6;\n            *0x4cefac = 0;\n            *0x4cefb0 = L\"PROGRESSSET\";\n            *0x4cefbc = fcn.00480bfc;\n            *0x4cefc0 = 0;\n            *0x4cefc4 = 0;\n            *0x4cefc8 = 1;\n            *0x4cefcc = 3;\n            *0x4cefd0 = 0;\n            *0x4cefd4 = 0x49faa8;\n            *0x4cefe0 = fcn.0047df58;\n            *0x4cefe4 = 0;\n            *0x4cefe8 = 0;\n            *0x4cefec = 1;\n            *0x4ceff0 = 1;\n            *0x4ceff4 = 0;\n            *0x4ceff8 = L\"RANDOM\";\n            *0x4cf004 = fcn.0047df87;\n            *0x4cf008 = 0;\n            *0x4cf00c = 0;\n            *0x4cf010 = 0;\n            *0x4cf014 = 3;\n            *0x4cf018 = 0;\n            *0x4cf01c = L\"REGDELETE\";\n            *0x4cf028 = fcn.0048b535;\n            *0x4cf02c = 0;\n            *0x4cf030 = 0;\n            *0x4cf034 = 1;\n            *0x4cf038 = 2;\n            *0x4cf03c = 0;\n            *0x4cf040 = L\"REGENUMKEY\";\n            *0x4cf04c = fcn.0048b8f0;\n            *0x4cf050 = 0;\n            *0x4cf054 = 0;\n            *0x4cf058 = 2;\n            *0x4cf05c = 2;\n            *0x4cf060 = 0;\n            *0x4cf064 = L\"REGENUMVAL\";\n            *0x4cf070 = fcn.0048bb02;\n            *0x4cf074 = 0;\n            *0x4cf078 = 0;\n            *0x4cf07c = 2;\n            *0x4cf080 = 2;\n            *0x4cf084 = 0;\n            *0x4cf088 = L\"REGREAD\";\n            *0x4cf094 = fcn.0048bd6b;\n            *0x4cf098 = 0;\n            *0x4cf09c = 0;\n            *0x4cf0a0 = 2;\n            *0x4cf0a4 = 2;\n            *0x4cf0a8 = 0;\n            *0x4cf0ac = L\"REGWRITE\";\n            *0x4cf0b8 = fcn.0048c2de;\n            *0x4cf0bc = 0;\n            *0x4cf0c0 = 0;\n            *0x4cf0c4 = 1;\n            *0x4cf0c8 = 4;\n            *0x4cf0cc = 0;\n            *0x4cf0d0 = L\"ROUND\";\n            *0x4cf0dc = fcn.0041b1cb;\n            *0x4cf0e0 = 0;\n            *0x4cf0e4 = 0;\n            *0x4cf0e8 = 1;\n            *0x4cf0ec = 2;\n            *0x4cf0f0 = 0;\n            *0x4cf0f4 = 0x49fa98;\n            *0x4cf100 = fcn.0048aa8e;\n            *0x4cf104 = 0;\n            *0x4cf108 = 0;\n            *0x4cf10c = 1;\n            *0x4cf110 = 4;\n            *0x4cf114 = 0;\n            *0x4cf118 = L\"RUNAS\";\n            *0x4cf124 = fcn.0048aaa4;\n            *0x4cf128 = 0;\n            *0x4cf12c = 0;\n            *0x4cf130 = 5;\n            *0x4cf134 = 8;\n            *0x4cf138 = 0;\n            *0x4cf13c = L\"RUNASWAIT\";\n            *0x4cf148 = fcn.0048aaba;\n            *0x4cf14c = 0;\n            *0x4cf150 = 0;\n            *0x4cf154 = 5;\n            *0x4cf158 = 8;\n            *0x4cf15c = 0;\n            *0x4cf160 = L\"RUNWAIT\";\n            *0x4cf16c = fcn.0048ab1e;\n            *0x4cf170 = 0;\n            *0x4cf174 = 0;\n            *0x4cf178 = 1;\n            *0x4cf17c = 4;\n            *0x4cf180 = 0;\n            *0x4cf184 = L\"SEND\";\n            *0x4cf190 = fcn.00480cc3;\n            *0x4cf194 = 0;\n            *0x4cf198 = 0;\n            *0x4cf19c = 1;\n            *0x4cf1a0 = 2;\n            *0x4cf1a4 = 0;\n            *0x4cf1a8 = L\"SENDKEEPACTIVE\";\n            *0x4cf1b4 = fcn.00490d02;\n            *0x4cf1b8 = 0;\n            *0x4cf1bc = 0;\n            *0x4cf1c0 = 1;\n            *0x4cf1c4 = 2;\n            *0x4cf1c8 = 0;\n            *0x4cf1cc = L\"SETERROR\";\n            *0x4cf1d8 = fcn.00480d22;\n            *0x4cf1dc = 0;\n            *0x4cf1e0 = 0;\n            *0x4cf1e4 = 1;\n            *0x4cf1e8 = 3;\n            *0x4cf1ec = 0;\n            *0x4cf1f0 = L\"SETEXTENDED\";\n            *0x4cf1fc = fcn.00480d9e;\n            *0x4cf200 = 0;\n            *0x4cf204 = 0;\n            *0x4cf208 = 1;\n            *0x4cf20c = 2;\n            *0x4cf210 = 0;\n            *0x4cf214 = L\"SHELLEXECUTE\";\n            *0x4cf220 = fcn.0048ab82;\n            *0x4cf224 = 0;\n            *0x4cf228 = 0;\n            *0x4cf22c = 1;\n            *0x4cf230 = 5;\n            *0x4cf234 = 0;\n            *0x4cf238 = L\"SHELLEXECUTEWAIT\";\n            *0x4cf244 = fcn.0048ab9a;\n            *0x4cf248 = 0;\n            *0x4cf24c = 0;\n            *0x4cf250 = 1;\n            *0x4cf254 = 5;\n            *0x4cf258 = 0;\n            *0x4cf25c = L\"SHUTDOWN\";\n            *0x4cf268 = fcn.0048ac00;\n            *0x4cf26c = 0;\n            *0x4cf270 = 0;\n            *0x4cf274 = 1;\n            *0x4cf278 = 2;\n            *0x4cf27c = 0;\n            *0x4cf280 = 0x49fad0;\n            *0x4cf28c = fcn.0040cf09;\n            *0x4cf290 = 0;\n            *0x4cf294 = 0;\n            *0x4cf298 = 1;\n            *0x4cf29c = 1;\n            *0x4cf2a0 = 0;\n            *0x4cf2a4 = L\"SLEEP\";\n            *0x4cf2b0 = fcn.0041f724;\n            *0x4cf2b4 = 0;\n            *0x4cf2b8 = 0;\n            *0x4cf2bc = 1;\n            *0x4cf2c0 = 1;\n            *0x4cf2c4 = 0;\n            *0x4cf2c8 = L\"SOUNDPLAY\";\n            *0x4cf2d4 = fcn.00480ddd;\n            *0x4cf2d8 = 0;\n            *0x4cf2dc = 0;\n            *0x4cf2e0 = 1;\n            *0x4cf2e4 = 2;\n            *0x4cf2e8 = 0;\n            *0x4cf2ec = L\"SOUNDSETWAVEVOLUME\";\n            *0x4cf2f8 = fcn.00480e32;\n            *0x4cf2fc = 0;\n            *0x4cf300 = 0;\n            *0x4cf304 = 1;\n            *0x4cf308 = 1;\n            *0x4cf30c = 0;\n            *0x4cf310 = L\"SPLASHIMAGEON\";\n            *0x4cf31c = fcn.00480eae;\n            *0x4cf320 = 0;\n            *0x4cf324 = 0;\n            *0x4cf328 = 2;\n            *0x4cf32c = 7;\n            *0x4cf330 = 0;\n            *0x4cf334 = L\"SPLASHOFF\";\n            *0x4cf340 = fcn.00480ec3;\n            *0x4cf344 = 0;\n            *0x4cf348 = 0;\n            *0x4cf34c = 0;\n            *0x4cf350 = 0;\n            *0x4cf354 = 0;\n            *0x4cf358 = L\"SPLASHTEXTON\";\n            *0x4cf364 = fcn.00480ed8;\n            *0x4cf368 = 0;\n            *0x4cf36c = 0;\n            *0x4cf370 = 2;\n            *0x4cf374 = 10;\n            *0x4cf378 = 0;\n            *0x4cf37c = L\"SQRT\";\n            *0x4cf388 = fcn.0047e188;\n            *0x4cf38c = 0;\n            *0x4cf390 = 0;\n            *0x4cf394 = 1;\n            *0x4cf398 = 1;\n            *0x4cf39c = 0;\n            *0x4cf3a0 = L\"SRANDOM\";\n            *0x4cf3ac = fcn.0047e16b;\n            *0x4cf3b0 = 0;\n            *0x4cf3b4 = 0;\n            *0x4cf3b8 = 1;\n            *0x4cf3bc = 1;\n            *0x4cf3c0 = 0;\n            *0x4cf3c4 = L\"STATUSBARGETTEXT\";\n            *0x4cf3d0 = fcn.00490d8c;\n            *0x4cf3d4 = 0;\n            *0x4cf3d8 = 0;\n            *0x4cf3dc = 1;\n            *0x4cf3e0 = 3;\n            *0x4cf3e4 = 0;\n            *0x4cf3e8 = L\"STDERRREAD\";\n            *0x4cf3f4 = fcn.0048ce9f;\n            *0x4cf3f8 = 0;\n            *0x4cf3fc = 0;\n            *0x4cf400 = 1;\n            *0x4cf404 = 3;\n            *0x4cf408 = 0;\n            *0x4cf40c = L\"STDINWRITE\";\n            *0x4cf418 = fcn.0048cec0;\n            *0x4cf41c = 0;\n            *0x4cf420 = 0;\n            *0x4cf424 = 1;\n            *0x4cf428 = 2;\n            *0x4cf42c = 0;\n            *0x4cf430 = L\"STDIOCLOSE\";\n            *0x4cf43c = fcn.0048d033;\n            *0x4cf440 = 0;\n            *0x4cf444 = 0;\n            *0x4cf448 = 1;\n            *0x4cf44c = 1;\n            *0x4cf450 = 0;\n            *0x4cf454 = L\"STDOUTREAD\";\n            *0x4cf460 = fcn.0048d08d;\n            *0x4cf464 = 0;\n            *0x4cf468 = 0;\n            *0x4cf46c = 1;\n            *0x4cf470 = 3;\n            *0x4cf474 = 0;\n            *0x4cf478 = L\"STRING\";\n            *0x4cf484 = fcn.0047e1c8;\n            *0x4cf488 = 0;\n            *0x4cf48c = 0;\n            *0x4cf490 = 1;\n            *0x4cf494 = 1;\n            *0x4cf498 = 0;\n            *0x4cf49c = L\"STRINGADDCR\";\n            *0x4cf4a8 = fcn.0048d58d;\n            *0x4cf4ac = 0;\n            *0x4cf4b0 = 0;\n            *0x4cf4b4 = 1;\n            *0x4cf4b8 = 1;\n            *0x4cf4bc = 0;\n            *0x4cf4c0 = L\"STRINGCOMPARE\";\n            *0x4cf4cc = fcn.0048d5ee;\n            *0x4cf4d0 = 0;\n            *0x4cf4d4 = 0;\n            *0x4cf4d8 = 2;\n            *0x4cf4dc = 3;\n            *0x4cf4e0 = 0;\n            *0x4cf4e4 = L\"STRINGFORMAT\";\n            *0x4cf4f0 = fcn.0048d674;\n            *0x4cf4f4 = 0;\n            *0x4cf4f8 = 0;\n            *0x4cf4fc = 1;\n            *0x4cf500 = 0x21;\n            *0x4cf504 = 0;\n            *0x4cf508 = L\"STRINGFROMASCIIARRAY\";\n            *0x4cf514 = fcn.0048d9a0;\n            *0x4cf518 = 0;\n            *0x4cf51c = 0;\n            *0x4cf520 = 1;\n            *0x4cf524 = 4;\n            *0x4cf528 = 0;\n            *0x4cf52c = L\"STRINGINSTR\";\n            *0x4cf538 = fcn.0048db5e;\n            *0x4cf53c = 0;\n            *0x4cf540 = 0;\n            *0x4cf544 = 2;\n            *0x4cf548 = 6;\n            *0x4cf54c = 0;\n            *0x4cf550 = L\"STRINGISALNUM\";\n            *0x4cf55c = fcn.0048dd06;\n            *0x4cf560 = 0;\n            *0x4cf564 = 0;\n            *0x4cf568 = 1;\n            *0x4cf56c = 1;\n            *0x4cf570 = 0;\n            *0x4cf574 = L\"STRINGISALPHA\";\n            *0x4cf580 = fcn.0048dd6a;\n            *0x4cf584 = 0;\n            *0x4cf588 = 0;\n            *0x4cf58c = 1;\n            *0x4cf590 = 1;\n            *0x4cf594 = 0;\n            *0x4cf598 = L\"STRINGISASCII\";\n            *0x4cf5a4 = fcn.0048dca2;\n            *0x4cf5a8 = 0;\n            *0x4cf5ac = 0;\n            *0x4cf5b0 = 1;\n            *0x4cf5b4 = 1;\n            *0x4cf5b8 = 0;\n            *0x4cf5bc = L\"STRINGISDIGIT\";\n            *0x4cf5c8 = fcn.0048ddce;\n            *0x4cf5cc = 0;\n            *0x4cf5d0 = 0;\n            *0x4cf5d4 = 1;\n            *0x4cf5d8 = 1;\n            *0x4cf5dc = 0;\n            *0x4cf5e0 = L\"STRINGISFLOAT\";\n            *0x4cf5ec = fcn.0048de32;\n            *0x4cf5f0 = 0;\n            *0x4cf5f4 = 0;\n            *0x4cf5f8 = 1;\n            *0x4cf5fc = 1;\n            *0x4cf600 = 0;\n            *0x4cf604 = L\"STRINGISINT\";\n            *0x4cf610 = fcn.0048de62;\n            *0x4cf614 = 0;\n            *0x4cf618 = 0;\n            *0x4cf61c = 1;\n            *0x4cf620 = 1;\n            *0x4cf624 = 0;\n            *0x4cf628 = L\"STRINGISLOWER\";\n            *0x4cf634 = fcn.0048de92;\n            *0x4cf638 = 0;\n            *0x4cf63c = 0;\n            *0x4cf640 = 1;\n            *0x4cf644 = 1;\n            *0x4cf648 = 0;\n            *0x4cf64c = L\"STRINGISSPACE\";\n            *0x4cf658 = fcn.0048def6;\n            *0x4cf65c = 0;\n            *0x4cf660 = 0;\n            *0x4cf664 = 1;\n            *0x4cf668 = 1;\n            *0x4cf66c = 0;\n            *0x4cf670 = L\"STRINGISUPPER\";\n            *0x4cf67c = fcn.0048df5f;\n            *0x4cf680 = 0;\n            *0x4cf684 = 0;\n            *0x4cf688 = 1;\n            *0x4cf68c = 1;\n            *0x4cf690 = 0;\n            *0x4cf694 = L\"STRINGISXDIGIT\";\n            *0x4cf6a0 = fcn.0048dfc3;\n            *0x4cf6a4 = 0;\n            *0x4cf6a8 = 0;\n            *0x4cf6ac = 1;\n            *0x4cf6b0 = 1;\n            *0x4cf6b4 = 0;\n            *0x4cf6b8 = L\"STRINGLEFT\";\n            *0x4cf6c4 = fcn.0048e027;\n            *0x4cf6c8 = 0;\n            *0x4cf6cc = 0;\n            *0x4cf6d0 = 2;\n            *0x4cf6d4 = 2;\n            *0x4cf6d8 = 0;\n            *0x4cf6dc = L\"STRINGLEN\";\n            *0x4cf6e8 = fcn.0048e09b;\n            *0x4cf6ec = 0;\n            *0x4cf6f0 = 0;\n            *0x4cf6f4 = 1;\n            *0x4cf6f8 = 1;\n            *0x4cf6fc = 0;\n            *0x4cf700 = L\"STRINGLOWER\";\n            *0x4cf70c = fcn.0048e0d0;\n            *0x4cf710 = 0;\n            *0x4cf714 = 0;\n            *0x4cf718 = 1;\n            *0x4cf71c = 1;\n            *0x4cf720 = 0;\n            *0x4cf724 = L\"STRINGMID\";\n            *0x4cf730 = fcn.00407e34;\n            *0x4cf734 = 0;\n            *0x4cf738 = 0;\n            *0x4cf73c = 2;\n            *0x4cf740 = 3;\n            *0x4cf744 = 0;\n            *0x4cf748 = L\"STRINGREGEXP\";\n            *0x4cf754 = fcn.004095c0;\n            *0x4cf758 = 0;\n            *0x4cf75c = 0;\n            *0x4cf760 = 2;\n            *0x4cf764 = 4;\n            *0x4cf768 = 0;\n            *0x4cf76c = L\"STRINGREGEXPREPLACE\";\n            *0x4cf778 = fcn.00408577;\n            *0x4cf77c = 0;\n            *0x4cf780 = 0;\n            *0x4cf784 = 3;\n            *0x4cf788 = 4;\n            *0x4cf78c = 0;\n            *0x4cf790 = L\"STRINGREPLACE\";\n            *0x4cf79c = fcn.0048e131;\n            *0x4cf7a0 = 0;\n            *0x4cf7a4 = 0;\n            *0x4cf7a8 = 3;\n            *0x4cf7ac = 5;\n            *0x4cf7b0 = 0;\n            *0x4cf7b4 = L\"STRINGREVERSE\";\n            *0x4cf7c0 = fcn.0048e2dc;\n            *0x4cf7c4 = 0;\n            *0x4cf7c8 = 0;\n            *0x4cf7cc = 1;\n            *0x4cf7d0 = 2;\n            *0x4cf7d4 = 0;\n            *0x4cf7d8 = L\"STRINGRIGHT\";\n            *0x4cf7e4 = fcn.0048e438;\n            *0x4cf7e8 = 0;\n            *0x4cf7ec = 0;\n            *0x4cf7f0 = 2;\n            *0x4cf7f4 = 2;\n            *0x4cf7f8 = 0;\n            *0x4cf7fc = L\"STRINGSPLIT\";\n            *0x4cf808 = fcn.00408baa;\n            *0x4cf80c = 0;\n            *0x4cf810 = 0;\n            *0x4cf814 = 2;\n            *0x4cf818 = 3;\n            *0x4cf81c = 0;\n            *0x4cf820 = L\"STRINGSTRIPCR\";\n            *0x4cf82c = fcn.0048e4b0;\n            *0x4cf830 = 0;\n            *0x4cf834 = 0;\n            *0x4cf838 = 1;\n            *0x4cf83c = 1;\n            *0x4cf840 = 0;\n            *0x4cf844 = L\"STRINGSTRIPWS\";\n            *0x4cf850 = fcn.0048e511;\n            *0x4cf854 = 0;\n            *0x4cf858 = 0;\n            *0x4cf85c = 2;\n            *0x4cf860 = 2;\n            *0x4cf864 = 0;\n            *0x4cf868 = L\"STRINGTOASCIIARRAY\";\n            *0x4cf874 = fcn.0048e6d6;\n            *0x4cf878 = 0;\n            *0x4cf87c = 0;\n            *0x4cf880 = 1;\n            *0x4cf884 = 4;\n            *0x4cf888 = 0;\n            *0x4cf88c = L\"STRINGTOBINARY\";\n            *0x4cf898 = fcn.0048e8ab;\n            *0x4cf89c = 0;\n            *0x4cf8a0 = 0;\n            *0x4cf8a4 = 1;\n            *0x4cf8a8 = 2;\n            *0x4cf8ac = 0;\n            *0x4cf8b0 = L\"STRINGTRIMLEFT\";\n            *0x4cf8bc = fcn.00407db5;\n            *0x4cf8c0 = 0;\n            *0x4cf8c4 = 0;\n            *0x4cf8c8 = 2;\n            *0x4cf8cc = 2;\n            *0x4cf8d0 = 0;\n            *0x4cf8d4 = L\"STRINGTRIMRIGHT\";\n            *0x4cf8e0 = fcn.0048e9a1;\n            *0x4cf8e4 = 0;\n            *0x4cf8e8 = 0;\n            *0x4cf8ec = 2;\n            *0x4cf8f0 = 2;\n            *0x4cf8f4 = 0;\n            *0x4cf8f8 = L\"STRINGUPPER\";\n            *0x4cf904 = fcn.0048ea18;\n            *0x4cf908 = 0;\n            *0x4cf90c = 0;\n            *0x4cf910 = 1;\n            *0x4cf914 = 1;\n            *0x4cf918 = 0;\n            *0x4cf91c = 0x49fa68;\n            *0x4cf928 = fcn.0047e1ed;\n            *0x4cf92c = 0;\n            *0x4cf930 = 0;\n            *0x4cf934 = 1;\n            *0x4cf938 = 1;\n            *0x4cf93c = 0;\n            *0x4cf940 = L\"TCPACCEPT\";\n            *0x4cf94c = fcn.00480f0c;\n            *0x4cf950 = 0;\n            *0x4cf954 = 0;\n            *0x4cf958 = 1;\n            *0x4cf95c = 1;\n            *0x4cf960 = 0;\n            *0x4cf964 = L\"TCPCLOSESOCKET\";\n            *0x4cf970 = fcn.00480f72;\n            *0x4cf974 = 0;\n            *0x4cf978 = 0;\n            *0x4cf97c = 1;\n            *0x4cf980 = 1;\n            *0x4cf984 = 0;\n            *0x4cf988 = L\"TCPCONNECT\";\n            *0x4cf994 = fcn.00480fdf;\n            *0x4cf998 = 0;\n            *0x4cf99c = 0;\n            *0x4cf9a0 = 2;\n            *0x4cf9a4 = 2;\n            *0x4cf9a8 = 0;\n            *0x4cf9ac = L\"TCPLISTEN\";\n            *0x4cf9b8 = fcn.0048112b;\n            *0x4cf9bc = 0;\n            *0x4cf9c0 = 0;\n            *0x4cf9c4 = 2;\n            *0x4cf9c8 = 3;\n            *0x4cf9cc = 0;\n            *0x4cf9d0 = L\"TCPNAMETOIP\";\n            *0x4cf9dc = fcn.00481288;\n            *0x4cf9e0 = 0;\n            *0x4cf9e4 = 0;\n            *0x4cf9e8 = 1;\n            *0x4cf9ec = 1;\n            *0x4cf9f0 = 0;\n            *0x4cf9f4 = L\"TCPRECV\";\n            *0x4cfa00 = fcn.0048135a;\n            *0x4cfa04 = 0;\n            *0x4cfa08 = 0;\n            *0x4cfa0c = 2;\n            *0x4cfa10 = 3;\n            *0x4cfa14 = 0;\n            *0x4cfa18 = L\"TCPSEND\";\n            *0x4cfa24 = fcn.004814f1;\n            *0x4cfa28 = 0;\n            *0x4cfa2c = 0;\n            *0x4cfa30 = 2;\n            *0x4cfa34 = 2;\n            *0x4cfa38 = 0;\n            *0x4cfa3c = L\"TCPSHUTDOWN\";\n            *0x4cfa48 = fcn.00481581;\n            *0x4cfa4c = 0;\n            *0x4cfa50 = 0;\n            *0x4cfa54 = 0;\n            *0x4cfa58 = 0;\n            *0x4cfa5c = 0;\n            *0x4cfa60 = L\"TCPSTARTUP\";\n            *0x4cfa6c = fcn.004815da;\n            *0x4cfa70 = 0;\n            *0x4cfa74 = 0;\n            *0x4cfa78 = 0;\n            *0x4cfa7c = 0;\n            *0x4cfa80 = 0;\n            *0x4cfa84 = L\"TIMERDIFF\";\n            *0x4cfa90 = fcn.0041e300;\n            *0x4cfa94 = 0;\n            *0x4cfa98 = 0;\n            *0x4cfa9c = 1;\n            *0x4cfaa0 = 1;\n            *0x4cfaa4 = 0;\n            *0x4cfaa8 = L\"TIMERINIT\";\n            *0x4cfab4 = fcn.0041ed75;\n            *0x4cfab8 = 0;\n            *0x4cfabc = 0;\n            *0x4cfac0 = 0;\n            *0x4cfac4 = 0;\n            *0x4cfac8 = 0;\n            *0x4cfacc = L\"TOOLTIP\";\n            *0x4cfad8 = fcn.00490f26;\n            *0x4cfadc = 0;\n            *0x4cfae0 = 0;\n            *0x4cfae4 = 1;\n            *0x4cfae8 = 6;\n            *0x4cfaec = 0;\n            *0x4cfaf0 = L\"TRAYCREATEITEM\";\n            *0x4cfafc = fcn.0048ecb5;\n            *0x4cfb00 = 0;\n            *0x4cfb04 = 0;\n            *0x4cfb08 = 1;\n            *0x4cfb0c = 4;\n            *0x4cfb10 = 0;\n            *0x4cfb14 = L\"TRAYCREATEMENU\";\n            *0x4cfb20 = fcn.0048ecc9;\n            *0x4cfb24 = 0;\n            *0x4cfb28 = 0;\n            *0x4cfb2c = 1;\n            *0x4cfb30 = 4;\n            *0x4cfb34 = 0;\n            *0x4cfb38 = L\"TRAYGETMSG\";\n            *0x4cfb44 = fcn.0048ecdd;\n            *0x4cfb48 = 0;\n            *0x4cfb4c = 0;\n            *0x4cfb50 = 0;\n            *0x4cfb54 = 1;\n            *0x4cfb58 = 0;\n            *0x4cfb5c = L\"TRAYITEMDELETE\";\n            *0x4cfb68 = fcn.0048ed7c;\n            *0x4cfb6c = 0;\n            *0x4cfb70 = 0;\n            *0x4cfb74 = 1;\n            *0x4cfb78 = 1;\n            *0x4cfb7c = 0;\n            *0x4cfb80 = L\"TRAYITEMGETHANDLE\";\n            *0x4cfb8c = fcn.0048edb6;\n            *0x4cfb90 = 0;\n            *0x4cfb94 = 0;\n            *0x4cfb98 = 1;\n            *0x4cfb9c = 1;\n            *0x4cfba0 = 0;\n            *0x4cfba4 = L\"TRAYITEMGETSTATE\";\n            *0x4cfbb0 = fcn.0048ee03;\n            *0x4cfbb4 = 0;\n            *0x4cfbb8 = 0;\n            *0x4cfbbc = 1;\n            *0x4cfbc0 = 1;\n            *0x4cfbc4 = 0;\n            *0x4cfbc8 = L\"TRAYITEMGETTEXT\";\n            *0x4cfbd4 = fcn.0048ee4d;\n            *0x4cfbd8 = 0;\n            *0x4cfbdc = 0;\n            *0x4cfbe0 = 1;\n            *0x4cfbe4 = 1;\n            *0x4cfbe8 = 0;\n            *0x4cfbec = L\"TRAYITEMSETONEVENT\";\n            *0x4cfbf8 = fcn.0048eec9;\n            *0x4cfbfc = 0;\n            *0x4cfc00 = 0;\n            *0x4cfc04 = 2;\n            *0x4cfc08 = 2;\n            *0x4cfc0c = 0;\n            *0x4cfc10 = L\"TRAYITEMSETSTATE\";\n            *0x4cfc1c = fcn.0048efff;\n            *0x4cfc20 = 0;\n            *0x4cfc24 = 0;\n            *0x4cfc28 = 2;\n            *0x4cfc2c = 2;\n            *0x4cfc30 = 0;\n            *0x4cfc34 = L\"TRAYITEMSETTEXT\";\n            *0x4cfc40 = fcn.0048f044;\n            *0x4cfc44 = 0;\n            *0x4cfc48 = 0;\n            *0x4cfc4c = 2;\n            *0x4cfc50 = 2;\n            *0x4cfc54 = 0;\n            *0x4cfc58 = L\"TRAYSETCLICK\";\n            *0x4cfc64 = fcn.0048f08e;\n            *0x4cfc68 = 0;\n            *0x4cfc6c = 0;\n            *0x4cfc70 = 0;\n            *0x4cfc74 = 1;\n            *0x4cfc78 = 0;\n            *0x4cfc7c = L\"TRAYSETICON\";\n            *0x4cfc88 = fcn.0048f0be;\n            *0x4cfc8c = 0;\n            *0x4cfc90 = 0;\n            *0x4cfc94 = 0;\n            *0x4cfc98 = 2;\n            *0x4cfc9c = 0;\n            *0x4cfca0 = L\"TRAYSETONEVENT\";\n            *0x4cfcac = fcn.0048f131;\n            *0x4cfcb0 = 0;\n            *0x4cfcb4 = 0;\n            *0x4cfcb8 = 2;\n            *0x4cfcbc = 2;\n            *0x4cfcc0 = 0;\n            *0x4cfcc4 = L\"TRAYSETPAUSEICON\";\n            *0x4cfcd0 = fcn.0048f264;\n            *0x4cfcd4 = 0;\n            *0x4cfcd8 = 0;\n            *0x4cfcdc = 0;\n            *0x4cfce0 = 2;\n            *0x4cfce4 = 0;\n            *0x4cfce8 = L\"TRAYSETSTATE\";\n            *0x4cfcf4 = fcn.0048f2d7;\n            *0x4cfcf8 = 0;\n            *0x4cfcfc = 0;\n            *0x4cfd00 = 0;\n            *0x4cfd04 = 1;\n            *0x4cfd08 = 0;\n            *0x4cfd0c = L\"TRAYSETTOOLTIP\";\n            *0x4cfd18 = fcn.0048f2fc;\n            *0x4cfd1c = 0;\n            *0x4cfd20 = 0;\n            *0x4cfd24 = 0;\n            *0x4cfd28 = 1;\n            *0x4cfd2c = 0;\n            *0x4cfd30 = L\"TRAYTIP\";\n            *0x4cfd3c = fcn.00481648;\n            *0x4cfd40 = 0;\n            *0x4cfd44 = 0;\n            *0x4cfd48 = 3;\n            *0x4cfd4c = 4;\n            *0x4cfd50 = 0;\n            *0x4cfd54 = L\"UBOUND\";\n            *0x4cfd60 = fcn.0041e544;\n            *0x4cfd64 = 0;\n            *0x4cfd68 = 0;\n            *0x4cfd6c = 1;\n            *0x4cfd70 = 2;\n            *0x4cfd74 = 1;\n            *0x4cfd78 = L\"UDPBIND\";\n            *0x4cfd84 = fcn.0048172d;\n            *0x4cfd88 = 0;\n            *0x4cfd8c = 0;\n            *0x4cfd90 = 2;\n            *0x4cfd94 = 2;\n            *0x4cfd98 = 0;\n            *0x4cfd9c = L\"UDPCLOSESOCKET\";\n            *0x4cfda8 = fcn.004818dc;\n            *0x4cfdac = 0;\n            *0x4cfdb0 = 0;\n            *0x4cfdb4 = 1;\n            *0x4cfdb8 = 1;\n            *0x4cfdbc = 0;\n            *0x4cfdc0 = L\"UDPOPEN\";\n            *0x4cfdcc = fcn.004819fd;\n            *0x4cfdd0 = 0;\n            *0x4cfdd4 = 0;\n            *0x4cfdd8 = 2;\n            *0x4cfddc = 3;\n            *0x4cfde0 = 0;\n            *0x4cfde4 = L\"UDPRECV\";\n            *0x4cfdf0 = fcn.00481b87;\n            *0x4cfdf4 = 0;\n            *0x4cfdf8 = 0;\n            *0x4cfdfc = 2;\n            *0x4cfe00 = 3;\n            *0x4cfe04 = 0;\n            *0x4cfe08 = L\"UDPSEND\";\n            *0x4cfe14 = fcn.00481f24;\n            *0x4cfe18 = 0;\n            *0x4cfe1c = 0;\n            *0x4cfe20 = 2;\n            *0x4cfe24 = 2;\n            *0x4cfe28 = 0;\n            *0x4cfe2c = L\"UDPSHUTDOWN\";\n            *0x4cfe38 = fcn.00481581;\n            *0x4cfe3c = 0;\n            *0x4cfe40 = 0;\n            *0x4cfe44 = 0;\n            *0x4cfe48 = 0;\n            *0x4cfe4c = 0;\n            *0x4cfe50 = L\"UDPSTARTUP\";\n            *0x4cfe5c = fcn.004815da;\n            *0x4cfe60 = 0;\n            *0x4cfe64 = 0;\n            *0x4cfe68 = 0;\n            *0x4cfe6c = 0;\n            *0x4cfe70 = 0;\n            *0x4cfe74 = L\"VARGETTYPE\";\n            *0x4cfe80 = fcn.004820bc;\n            *0x4cfe84 = 0;\n            *0x4cfe88 = 0;\n            *0x4cfe8c = 1;\n            *0x4cfe90 = 1;\n            *0x4cfe94 = 0;\n            *0x4cfe98 = L\"WINACTIVATE\";\n            *0x4cfea4 = fcn.004912ea;\n            *0x4cfea8 = 0;\n            *0x4cfeac = 0;\n            *0x4cfeb0 = 1;\n            *0x4cfeb4 = 2;\n            *0x4cfeb8 = 0;\n            *0x4cfebc = L\"WINACTIVE\";\n            *0x4cfec8 = fcn.004913d1;\n            *0x4cfecc = 0;\n            *0x4cfed0 = 0;\n            *0x4cfed4 = 1;\n            *0x4cfed8 = 2;\n            *0x4cfedc = 0;\n            *0x4cfee0 = L\"WINCLOSE\";\n            *0x4cfeec = fcn.00491441;\n            *0x4cfef0 = 0;\n            *0x4cfef4 = 0;\n            *0x4cfef8 = 1;\n            *0x4cfefc = 2;\n            *0x4cff00 = 0;\n            *0x4cff04 = L\"WINEXISTS\";\n            *0x4cff10 = fcn.004914c4;\n            *0x4cff14 = 0;\n            *0x4cff18 = 0;\n            *0x4cff1c = 1;\n            *0x4cff20 = 2;\n            *0x4cff24 = 0;\n            *0x4cff28 = L\"WINFLASH\";\n            *0x4cff34 = fcn.00491526;\n            *0x4cff38 = 0;\n            *0x4cff3c = 0;\n            *0x4cff40 = 1;\n            *0x4cff44 = 4;\n            *0x4cff48 = 0;\n            *0x4cff4c = L\"WINGETCARETPOS\";\n            *0x4cff58 = fcn.0049160d;\n            *0x4cff5c = 0;\n            *0x4cff60 = 0;\n            *0x4cff64 = 0;\n            *0x4cff68 = 0;\n            *0x4cff6c = 0;\n            *0x4cff70 = L\"WINGETCLASSLIST\";\n            *0x4cff7c = fcn.00491717;\n            *0x4cff80 = 0;\n            *0x4cff84 = 0;\n            *0x4cff88 = 1;\n            *0x4cff8c = 2;\n            *0x4cff90 = 0;\n            *0x4cff94 = L\"WINGETCLIENTSIZE\";\n            *0x4cffa0 = fcn.004917c1;\n            *0x4cffa4 = 0;\n            *0x4cffa8 = 0;\n            *0x4cffac = 1;\n            *0x4cffb0 = 2;\n            *0x4cffb4 = 0;\n            *0x4cffb8 = L\"WINGETHANDLE\";\n            *0x4cffc4 = fcn.004918ef;\n            *0x4cffc8 = 0;\n            *0x4cffcc = 0;\n            *0x4cffd0 = 1;\n            *0x4cffd4 = 2;\n            *0x4cffd8 = 0;\n            *0x4cffdc = L\"WINGETPOS\";\n            *0x4cffe8 = fcn.0049197c;\n            *0x4cffec = 0;\n            *0x4cfff0 = 0;\n            *0x4cfff4 = 1;\n            *0x4cfff8 = 2;\n            *0x4cfffc = 0;\n            *0x4d0000 = L\"WINGETPROCESS\";\n            *0x4d000c = fcn.00491ad3;\n            *0x4d0010 = 0;\n            *0x4d0014 = 0;\n            *0x4d0018 = 1;\n            *0x4d001c = 2;\n            *0x4d0020 = 0;\n            *0x4d0024 = L\"WINGETSTATE\";\n            *0x4d0030 = fcn.00491b74;\n            *0x4d0034 = 0;\n            *0x4d0038 = 0;\n            *0x4d003c = 1;\n            *0x4d0040 = 2;\n            *0x4d0044 = 0;\n            *0x4d0048 = L\"WINGETTEXT\";\n            *0x4d0054 = fcn.00491c4f;\n            *0x4d0058 = 0;\n            *0x4d005c = 0;\n            *0x4d0060 = 1;\n            *0x4d0064 = 2;\n            *0x4d0068 = 0;\n            *0x4d006c = L\"WINGETTITLE\";\n            *0x4d0078 = fcn.00491cfd;\n            *0x4d007c = 0;\n            *0x4d0080 = 0;\n            *0x4d0084 = 1;\n            *0x4d0088 = 2;\n            *0x4d008c = 0;\n            *0x4d0090 = L\"WINKILL\";\n            *0x4d009c = fcn.00491d91;\n            *0x4d00a0 = 0;\n            *0x4d00a4 = 0;\n            *0x4d00a8 = 1;\n            *0x4d00ac = 2;\n            *0x4d00b0 = 0;\n            *0x4d00b4 = L\"WINLIST\";\n            *0x4d00c0 = fcn.00491e0d;\n            *0x4d00c4 = 0;\n            *0x4d00c8 = 0;\n            *0x4d00cc = 0;\n            *0x4d00d0 = 2;\n            *0x4d00d4 = 0;\n            *0x4d00d8 = L\"WINMENUSELECTITEM\";\n            *0x4d00e4 = fcn.00492030;\n            *0x4d00e8 = 0;\n            *0x4d00ec = 0;\n            *0x4d00f0 = 3;\n            *0x4d00f4 = 9;\n            *0x4d00f8 = 0;\n            *0x4d00fc = L\"WINMINIMIZEALL\";\n            *0x4d0108 = 0x492255;\n            *0x4d010c = 0;\n            *0x4d0110 = 0;\n            *0x4d0114 = 0;\n            *0x4d0118 = 0;\n            *0x4d011c = 0;\n            *0x4d0120 = L\"WINMINIMIZEALLUNDO\";\n            *0x4d012c = 0x492289;\n            *0x4d0130 = 0;\n            *0x4d0134 = 0;\n            *0x4d0138 = 0;\n            *0x4d013c = 0;\n            *0x4d0140 = 0;\n            *0x4d0144 = L\"WINMOVE\";\n            *0x4d0150 = fcn.004922bd;\n            *0x4d0154 = 0;\n            *0x4d0158 = 0;\n            *0x4d015c = 4;\n            *0x4d0160 = 7;\n            *0x4d0164 = 0;\n            *0x4d0168 = L\"WINSETONTOP\";\n            *0x4d0174 = fcn.004924cb;\n            *0x4d0178 = 0;\n            *0x4d017c = 0;\n            *0x4d0180 = 3;\n            *0x4d0184 = 3;\n            *0x4d0188 = 0;\n            *0x4d018c = L\"WINSETSTATE\";\n            *0x4d0198 = fcn.0049258b;\n            *0x4d019c = 0;\n            *0x4d01a0 = 0;\n            *0x4d01a4 = 3;\n            *0x4d01a8 = 3;\n            *0x4d01ac = 0;\n            *0x4d01b0 = L\"WINSETTITLE\";\n            *0x4d01bc = fcn.0049262d;\n            *0x4d01c0 = 0;\n            *0x4d01c4 = 0;\n            *0x4d01c8 = 3;\n            *0x4d01cc = 3;\n            *0x4d01d0 = 0;\n            *0x4d01d4 = L\"WINSETTRANS\";\n            *0x4d01e0 = fcn.004926b5;\n            *0x4d01e4 = 0;\n            *0x4d01e8 = 0;\n            *0x4d01ec = 3;\n            *0x4d01f0 = 3;\n            *0x4d01f4 = 0;\n            *0x4d01f8 = L\"WINWAIT\";\n            *0x4d0204 = fcn.00492782;\n            *0x4d0208 = 0;\n            *0x4d020c = 0;\n            *0x4d0210 = 1;\n            *0x4d0214 = 3;\n            *0x4d0218 = 0;\n            *0x4d021c = L\"WINWAITACTIVE\";\n            *0x4d0228 = fcn.004927de;\n            *0x4d022c = 0;\n            *0x4d0230 = 0;\n            *0x4d0234 = 1;\n            *0x4d0238 = 3;\n            *0x4d023c = 0;\n            *0x4d0240 = L\"WINWAITCLOSE\";\n            *0x4d024c = fcn.0049283a;\n            *0x4d0250 = 0;\n            *0x4d0254 = 0;\n            *0x4d0258 = 1;\n            *0x4d025c = 3;\n            *0x4d0260 = 0;\n            *0x4d0264 = L\"WINWAITNOTACTIVE\";\n            *0x4d0270 = fcn.00492896;\n            *0x4d0274 = 0;\n            *0x4d0278 = 0;\n            *0x4d027c = 1;\n            *0x4d0280 = 3;\n            *0x4d0284 = 0;\n            fcn.00420178(0x4d2518);\n        }\n        if (*0x4d2514 <= *(iVar1 + 4)) goto code_r0x0041324e;\n    }\n    else if (*0x4d2514 <= *(iVar1 + 4)) goto code_r0x0041324e;\n    fcn.004201c2(0x4d2514);\n    if (*0x4d2514 == -1) {\n        *in_ECX = 0x196;\n        fcn.00420178(0x4d2514);\n    }\ncode_r0x0041324e:\n    return arg_8h * 0x24 + 0x4cc970;\n}\n",
        "token_count": 37290
    },
    "0041a692": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a692(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint hdc;\n    int32_t iVar3;\n    int32_t arg_ch;\n    uint *puVar4;\n    uint *arg_ch_00;\n    uint uVar5;\n    uint *puVar6;\n    uchar auStack84 [8];\n    uint auStack76 [18];\n    \n    iVar2 = fcn.0041b021(arg_8h);\n    puVar4 = **(*0x4d1910 + iVar2 * 4);\n    puVar6 = &stack0xffffffb4;\n    uVar5 = *puVar4;\n    arg_ch_00 = puVar4[0x72];\n    hdc = (*_sym.imp.USER32.dll_BeginPaint)(uVar5, puVar6);\n    for (; arg_ch_00 != NULL; arg_ch_00 = *arg_ch_00) {\n        iVar2 = arg_ch_00[2];\n        if ((((*(iVar2 + 0x92) & 0x10) != 0) && (*(iVar2 + 0x93) == -1)) || (*(iVar2 + 0x93) == puVar4[100])) {\n            *0x4d1968 = 0;\n            *0x4d1964 = 0;\n            *0x4d1974 = 0xffffffff;\n            *0x4d1978 = 0xffffffff;\n            *0x4d196c = 0;\n            *0x4d1970 = 1;\n            (*_sym.imp.USER32.dll_GetWindowRect)(*arg_ch_00[2], &stack0xffffff9c);\n            (*_sym.imp.USER32.dll_ScreenToClient)(*puVar4, &stack0xffffff8c);\n            (*_sym.imp.GDI32.dll_SetViewportOrgEx)(hdc, uVar5, puVar6, 0);\n            iVar2 = *(arg_ch_00[2] + 0x48);\n            arg_ch = *(arg_ch_00[2] + 0x4c);\n            iVar3 = arg_ch;\n            if (((-1 < iVar2) && (iVar3 = iVar2,  arg_ch != -1)) || ((arg_ch = iVar3,  iVar3 != -1 || (-1 < iVar2)))) {\n                fcn.0041aabf(hdc, arg_ch, iVar2, 0, 1);\n                (*_sym.imp.GDI32.dll_Rectangle)(hdc, 0, 0, *(arg_ch_00[2] + 0x8c), *(arg_ch_00[2] + 0x8e));\n                fcn.0041aa4b(hdc, iVar2);\n            }\n            cVar1 = fcn.0041a910(hdc, arg_ch_00);\n            puVar6 = 0x41a791;\n            uVar5 = hdc;\n            puVar4 = arg_ch_00;\n            fcn.0041a7bf(hdc, arg_ch_00);\n            if (cVar1 != '\\0') {\n                uVar5 = hdc;\n                puVar6 = arg_ch_00;\n                fcn.004987af(hdc, arg_ch_00);\n            }\n        }\n    }\n    (*_sym.imp.USER32.dll_EndPaint)(*puVar4, &stack0xffffffac);\n    return;\n}\n",
        "token_count": 742
    },
    "0041a7bf": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a7bf(uint arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t *piVar3;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_4h = -2;\n    var_10h = 1;\n    (*_sym.imp.GDI32.dll_BeginPath)(arg_8h);\n    *0x4d196c = 1;\n    for (iVar5 = arg_ch; iVar5 != 0; iVar5 = *(iVar5 + 4)) {\n        arg_ch = NULL;\n        puVar4 = NULL;\n        fcn.0041aabf(arg_8h, var_8h, var_4h, 0, var_10h);\n        puVar2 = *(iVar5 + 0xc);\n        if (0 < puVar2) {\n            piVar3 = iVar5 + 0x10;\n            do {\n                puVar2 = arg_ch + iVar5 + 0x810;\n                uVar1 = *puVar2;\n                if (7 < uVar1) {\n                    if (puVar4 == arg_ch) {\n                        puVar2 = arg_ch + iVar5 + 0x810;\n                    }\n                    else {\n                        (*_sym.imp.GDI32.dll_PolyDraw)\n                                  (arg_8h, iVar5 + (puVar4 + 2) * 8, puVar4 + iVar5 + 0x810, arg_ch - puVar4);\n                        uVar1 = *puVar2;\n                    }\n                    puVar4 = puVar2 + (-0x80f - iVar5);\n                    if (uVar1 != 0x14) {\n                        if (uVar1 == 8) {\n                            if (var_8h != -1) {\n                                fcn.0041aa4b(arg_8h, var_4h);\n                            }\n                            if (*piVar3 != -1) {\n                                var_8h = *piVar3;\n                            }\n                            if (piVar3[1] != -1) {\n                                var_4h = piVar3[1];\n                            }\n                            fcn.0041aabf(arg_8h, var_8h, var_4h, 0, var_10h);\n                        }\n                        else if (uVar1 == 0x18) {\n                            var_10h = *piVar3;\n                        }\n                    }\n                }\n                puVar2 = *(iVar5 + 0xc);\n                arg_ch = arg_ch + 1;\n                piVar3 = piVar3 + 2;\n            } while (arg_ch < puVar2);\n        }\n        if (puVar4 != puVar2) {\n            (*_sym.imp.GDI32.dll_PolyDraw)(arg_8h, iVar5 + (puVar4 + 2) * 8, puVar4 + iVar5 + 0x810, puVar2 - puVar4);\n        }\n    }\n    fcn.0041aa4b(arg_8h, var_4h);\n    return;\n}\n",
        "token_count": 745
    },
    "0041e364": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nfloat10 fcn.0041e364(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    if ((*(**(in_FS_OFFSET + 0x2c) + 4) < *0x4d2530) && (fcn.004201c2(0x4d2530),  *0x4d2530 == -1)) {\n        fcn.0041e3aa();\n        fcn.00420178(0x4d2530);\n    }\n    return *0x4d2538;\n}\n",
        "token_count": 117
    },
    "0041fd5b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fd5b(int32_t noname_0, uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar auStack20 [4];\n    uint var_ch;\n    uint uStack12;\n    \n    do {\n        uStack12 = 0x41fd75;\n        iVar2 = fcn.0042e99c();\n        if (iVar2 != 0) {\n            return;\n        }\n        uStack12 = 0x41fd68;\n        iVar2 = fcn.00424e3d(noname_0);\n    } while (iVar2 != 0);\n    if (noname_0 != -1) {\n        fcn.0042051c();\n        fcn.00423234(&stack0xffffffec, 0x4c86f4);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.0042054f();\n    fcn.00423234(&stack0xffffffec, 0x4c8748);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 257
    },
    "00428669": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00428669(uint *param_1)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t arg_8h;\n    \n    param_1[5] = param_1[5] + 4;\n    arg_8h = param_1[10];\n    iVar1 = *(param_1[5] + -4);\n    param_1[0xd] = iVar1;\n    if (arg_8h == -1) {\n        arg_8h = 0x7fffffff;\n    }\n    cVar2 = fcn.0042670d(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n    if (cVar2 == '\\0') {\n        if (iVar1 == 0) {\n            param_1[0xd] = 0x4a087c;\n        }\n        uVar3 = fcn.004286dd(arg_8h);\n    }\n    else {\n        if (iVar1 == 0) {\n            param_1[0xd] = L\"(null)\";\n        }\n        *(param_1 + 0xf) = 1;\n        uVar3 = fcn.00433bcf(param_1[0xd], arg_8h);\n    }\n    param_1[0xe] = uVar3;\n    return 1;\n}\n",
        "token_count": 314
    },
    "00434e20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00434e20(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    uint uVar6;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x00434d75:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = 0;\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    iVar3 = arg_14h;\n                    iVar4 = arg_ch;\n                    piVar5 = arg_8h;\n                    if (arg_14h == -1) {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar5);\n                            *piVar5 = iVar1;\n                            piVar5 = piVar5 + 1;\n                            if (iVar1 == 0) break;\n                            iVar4 = iVar4 + -1;\n                        } while (iVar4 != 0);\n                    }\n                    else {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar5);\n                            *piVar5 = iVar1;\n                            piVar5 = piVar5 + 1;\n                            if ((iVar1 == 0) || (iVar4 = iVar4 + -1,  iVar4 == 0)) break;\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != 0);\n                        if (iVar3 == 0) {\n                            *piVar5 = 0;\n                        }\n                    }\n                    if (iVar4 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = 0;\n                        return 0x50;\n                    }\n                    *arg_8h = 0;\n                    puVar2 = fcn.0042f269();\n                    uVar6 = 0x22;\n                    goto code_r0x00434d9a;\n                }\n                *arg_8h = 0;\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x00434d75;\n    puVar2 = fcn.0042f269();\n    uVar6 = 0x16;\ncode_r0x00434d9a:\n    *puVar2 = uVar6;\n    fcn.0043277c();\n    return uVar6;\n}\n",
        "token_count": 622
    },
    "00434edc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00434edc(char *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint uVar6;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x00434e4d:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = '\\0';\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    iVar3 = arg_14h;\n                    iVar4 = arg_ch;\n                    pcVar5 = arg_8h;\n                    if (arg_14h == -1) {\n                        do {\n                            cVar1 = pcVar5[arg_10h - arg_8h];\n                            *pcVar5 = cVar1;\n                            pcVar5 = pcVar5 + 1;\n                            if (cVar1 == '\\0') break;\n                            iVar4 = iVar4 + -1;\n                        } while (iVar4 != 0);\n                    }\n                    else {\n                        do {\n                            cVar1 = pcVar5[arg_10h - arg_8h];\n                            *pcVar5 = cVar1;\n                            pcVar5 = pcVar5 + 1;\n                            if ((cVar1 == '\\0') || (iVar4 = iVar4 + -1,  iVar4 == 0)) break;\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != 0);\n                        if (iVar3 == 0) {\n                            *pcVar5 = '\\0';\n                        }\n                    }\n                    if (iVar4 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = '\\0';\n                        return 0x50;\n                    }\n                    *arg_8h = '\\0';\n                    puVar2 = fcn.0042f269();\n                    uVar6 = 0x22;\n                    goto code_r0x00434e6d;\n                }\n                *arg_8h = '\\0';\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x00434e4d;\n    puVar2 = fcn.0042f269();\n    uVar6 = 0x16;\ncode_r0x00434e6d:\n    *puVar2 = uVar6;\n    fcn.0043277c();\n    return uVar6;\n}\n",
        "token_count": 619
    },
    "0043921b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043921b(uint8_t **arg_8h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint arg_8h_00;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t *arg_ch;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.0042f269();\n        *puVar2 = 0x16;\n        fcn.0043277c();\n    }\n    else if (((arg_8h[3] >> 0xd & 1) != 0) && ((arg_8h[3] >> 0xc & 1) == 0)) {\n        if ((arg_8h[3] >> 1 & 1) == 0) {\n            LOCK();\n            arg_8h[3] = arg_8h[3] | 1;\n            if ((arg_8h[3] & 0x4c0) == 0) {\n                fcn.0043fd65(arg_8h);\n            }\n            *arg_8h = arg_8h[1];\n            puVar3 = arg_8h[6];\n            arg_ch = arg_8h[1];\n            arg_8h_00 = fcn.0042d8e5(arg_8h);\n            puVar3 = fcn.00438bd2(arg_8h_00, arg_ch, puVar3);\n            arg_8h[2] = puVar3;\n            puVar3 = arg_8h[2];\n            if ((puVar3 != NULL) && (puVar3 != 0xffffffff)) {\n                if ((arg_8h[3] & 6) == 0) {\n                    iVar4 = fcn.0042d8e5(arg_8h);\n                    if ((iVar4 == -1) || (iVar4 = fcn.0042d8e5(arg_8h),  iVar4 == -2)) {\n                        iVar4 = 0x4cc1e0;\n                    }\n                    else {\n                        iVar4 = fcn.0042d8e5(arg_8h);\n                        uVar5 = fcn.0042d8e5(arg_8h);\n                        iVar4 = (uVar5 & 0x3f) * 0x30 + *((iVar4 >> 6) * 4 + 0x4d0fe8);\n                    }\n                    if ((*(iVar4 + 0x28) & 0x82) == 0x82) {\n                        LOCK();\n                        arg_8h[3] = arg_8h[3] | 0x20;\n                    }\n                }\n                if (((arg_8h[6] == 0x200) && ((arg_8h[3] >> 6 & 1) != 0)) && ((arg_8h[3] & 0x100) == 0)) {\n                    arg_8h[6] = 0x1000;\n                }\n                arg_8h[2] = arg_8h[2] + -1;\n                uVar1 = **arg_8h;\n                *arg_8h = *arg_8h + 1;\n                return uVar1;\n            }\n            LOCK();\n            arg_8h[3] = arg_8h[3] | (puVar3 != NULL) * 8 + 8;\n            arg_8h[2] = NULL;\n        }\n        else {\n            LOCK();\n            arg_8h[3] = arg_8h[3] | 0x10;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 823
    },
    "00461c22": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00461c22(uint *lParam, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    uint extraout_ECX;\n    uint uVar3;\n    uint extraout_ECX_00;\n    uint *puVar4;\n    uint var_10h;\n    \n    fcn.0040b606(L\"ComboBox\");\n    puVar4 = &var_10h;\n    uVar3 = extraout_ECX;\n    cVar1 = fcn.00463bef(puVar4);\n    fcn.0040b1ff(puVar4, uVar3);\n    if (cVar1 == '\\0') {\n        fcn.0040b606(L\"ListBox\");\n        puVar4 = &var_10h;\n        uVar3 = extraout_ECX_00;\n        cVar1 = fcn.00463bef(puVar4);\n        fcn.0040b1ff(puVar4, uVar3);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        uVar3 = 0x1a2;\n    }\n    else {\n        uVar3 = 0x158;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, uVar3, 0xffffffff, *lParam);\n    *arg_ch = iVar2;\n    if (iVar2 == -1) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 337
    },
    "00461d26": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00461d26(uint arg_8h)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint *in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint *puVar7;\n    uint var_1ch;\n    uint32_t wParam;\n    uint Msg;\n    \n    fcn.0040b606(L\"ComboBox\");\n    puVar7 = &var_1ch;\n    uVar5 = extraout_ECX;\n    cVar2 = fcn.00463bef(puVar7);\n    fcn.0040b1ff(puVar7, uVar5);\n    if (cVar2 == '\\0') {\n        fcn.0040b606(L\"ListBox\");\n        puVar7 = &var_1ch;\n        uVar5 = extraout_ECX_00;\n        cVar2 = fcn.00463bef(puVar7);\n        uVar4 = fcn.0040b1ff(puVar7, uVar5);\n        if (cVar2 == '\\0') goto code_r0x00461e1a;\n        uVar3 = 0x188;\n        Msg = 0x189;\n        uVar5 = 0x18a;\n    }\n    else {\n        uVar3 = 0x147;\n        Msg = 0x148;\n        uVar5 = 0x149;\n    }\n    uVar4 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, uVar3, 0, 0);\n    if ((uVar4 != 0xffffffff) &&\n       (wParam = uVar4,  uVar4 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, uVar5, uVar4, 0),  uVar4 != 0xffffffff)) {\n        iVar1 = (uVar4 + 0x101) * 2;\n        uVar5 = fcn.0041fd8b(-(iVar1 >> 0x20 != 0) | iVar1);\n        iVar6 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, Msg, wParam, uVar5);\n        if (iVar6 != -1) {\n            fcn.004084e7(uVar5);\n        }\n        else {\n            fcn.004084e7(0x49d0d0);\n        }\n        uVar4 = fcn.0041fd94(uVar5);\n        return uVar4 & 0xffffff00 | iVar6 != -1;\n    }\ncode_r0x00461e1a:\n    return uVar4 & 0xffffff00;\n}\n",
        "token_count": 613
    },
    "00461e23": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00461e23(uint *arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *in_ECX;\n    uint extraout_ECX;\n    uint uVar6;\n    uint extraout_ECX_00;\n    uint *puVar7;\n    uint var_1ch;\n    uint *hWnd;\n    uint32_t lParam;\n    \n    hWnd = in_ECX;\n    fcn.0040b606(L\"ComboBox\");\n    puVar7 = &var_1ch;\n    uVar6 = extraout_ECX;\n    cVar3 = fcn.00463bef(puVar7);\n    fcn.0040b1ff(puVar7, uVar6);\n    if (cVar3 == '\\0') {\n        fcn.0040b606(L\"ListBox\");\n        puVar7 = &var_1ch;\n        uVar6 = extraout_ECX_00;\n        cVar3 = fcn.00463bef(puVar7);\n        fcn.0040b1ff(puVar7, uVar6);\n        if (cVar3 == '\\0') {\n            return 0;\n        }\n        uVar6 = 0x18c;\n        lParam = 0x20000;\n    }\n    else {\n        uVar6 = 0x14d;\n        lParam = 0x90000;\n    }\n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    iVar4 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, uVar6, 0xffffffff, *arg_8h);\n    if (iVar4 == -1) {\n        return 0;\n    }\n    uVar5 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*in_ECX, *in_ECX);\n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    uVar6 = (*_sym.imp.USER32.dll_GetParent)(*in_ECX, 0x111, uVar5 & 0xffff | 0x10000);\n    (*pcVar2)(uVar6);\n    uVar5 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*hWnd, *hWnd);\n    uVar6 = (*pcVar1)(*hWnd, 0x111, uVar5 & 0xffff | lParam);\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar6);\n    return 1;\n}\n",
        "token_count": 556
    },
    "00461f04": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00461f04(uint arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint *puVar7;\n    uint var_1ch;\n    uint *hWnd;\n    uint32_t lParam;\n    \n    hWnd = in_ECX;\n    fcn.0040b606(L\"ComboBox\");\n    puVar7 = &var_1ch;\n    uVar4 = extraout_ECX;\n    cVar3 = fcn.00463bef(puVar7);\n    fcn.0040b1ff(puVar7, uVar4);\n    if (cVar3 == '\\0') {\n        fcn.0040b606(L\"ListBox\");\n        puVar7 = &var_1ch;\n        uVar4 = extraout_ECX_00;\n        cVar3 = fcn.00463bef(puVar7);\n        fcn.0040b1ff(puVar7, uVar4);\n        if (cVar3 == '\\0') {\n            return 0;\n        }\n        uVar4 = 0x186;\n        lParam = 0x20000;\n    }\n    else {\n        uVar4 = 0x14e;\n        lParam = 0x90000;\n    }\n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    iVar5 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, uVar4, arg_8h, 0);\n    if (iVar5 == -1) {\n        return 0;\n    }\n    uVar6 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*in_ECX, *in_ECX);\n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    uVar4 = (*_sym.imp.USER32.dll_GetParent)(*in_ECX, 0x111, uVar6 & 0xffff | 0x10000);\n    (*pcVar2)(uVar4);\n    uVar6 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*hWnd, *hWnd);\n    uVar4 = (*pcVar1)(*hWnd, 0x111, uVar6 & 0xffff | lParam);\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar4);\n    return 1;\n}\n",
        "token_count": 552
    },
    "0046231f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046231f(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint arg_ch_00;\n    uint *in_ECX;\n    uint var_bch;\n    uint var_38h;\n    uint32_t var_2ch;\n    uint var_28h;\n    \n    fcn.004034ba();\n    var_28h = 2;\n    var_2ch = -(arg_8h != '\\0') & 2;\n    arg_ch_00 = fcn.0046b248(0x34, *in_ECX);\n    fcn.0046b321(&var_38h, arg_ch_00, 0x34);\n    if (arg_ch == -1) {\n        (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x102b, 0xffffffff, arg_ch_00);\n    }\n    else {\n        for (; arg_ch <= arg_10h; arg_ch = arg_ch + 1) {\n            (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x102b, arg_ch, arg_ch_00);\n        }\n    }\n    fcn.0040329e();\n    return 1;\n}\n",
        "token_count": 275
    },
    "00462583": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00462583(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_ECX;\n    \n    iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x130b, 0, 0);\n    *arg_8h = iVar1;\n    if (iVar1 == -1) {\n        uVar2 = 0xffffff00;\n    }\n    else {\n        *arg_8h = iVar1 + 1;\n        uVar2 = CONCAT31(iVar1 + 1 >> 8, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 149
    },
    "00462ffb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00462ffb(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    \n    fcn.0040c25d();\n    uVar1 = *(in_ECX + 4);\n    if (uVar1 < arg_ch) {\n        arg_ch = uVar1;\n    }\n    if ((arg_10h == 0xffffffff) || (uVar1 - arg_ch < arg_10h)) {\n        arg_10h = uVar1 - arg_ch;\n    }\n    fcn.004086ac(in_ECX, arg_ch, arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 161
    },
    "00463bef": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00463bef(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint extraout_ECX;\n    uint arg_8h_00;\n    uint uVar3;\n    uint lpClassName;\n    uint var_10h;\n    \n    fcn.0040c25d();\n    (*_sym.imp.USER32.dll_GetClassNameW)(*in_ECX, &lpClassName, 0xff);\n    fcn.004084e7(&lpClassName);\n    arg_8h_00 = *arg_8h;\n    uVar3 = extraout_ECX;\n    iVar1 = fcn.004639d3(arg_8h_00);\n    uVar2 = fcn.0040b1ff(arg_8h_00, uVar3);\n    return uVar2 & 0xffffff00 | iVar1 != -1;\n}\n",
        "token_count": 207
    },
    "00469d27": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00469d27(int32_t param_1, int32_t *param_2)\n\n{\n    uint16_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t arg_8h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar5 = 1;\n    arg_8h = *(param_1 + 4) + -1;\n    *param_2 = 0;\n    var_4h = 0;\n    while (-1 < arg_8h) {\n        puVar1 = fcn.004058ca(arg_8h);\n        uVar2 = *puVar1;\n        if ((*puVar1 < 0x30) || (0x39 < uVar2)) {\n            if ((uVar2 < 0x41) || (0x46 < uVar2)) {\n                if ((uVar2 < 0x61) || (0x66 < uVar2)) goto code_r0x00469d9d;\n                iVar3 = uVar2 - 0x57;\n            }\n            else {\n                iVar3 = uVar2 - 0x37;\n            }\n        }\n        else {\n            iVar3 = uVar2 - 0x30;\n        }\n        iVar3 = iVar3 * iVar5;\n        iVar5 = iVar5 << 4;\n        *param_2 = *param_2 + iVar3;\n        arg_8h = arg_8h + -1;\n        var_4h = var_4h + 1;\n        if (7 < var_4h) break;\n    }\n    if (arg_8h == -1) {\n        uVar4 = 1;\n    }\n    else {\ncode_r0x00469d9d:\n        *param_2 = 0;\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 439
    },
    "0046b37a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b37a(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    arg_8h_00 = 0;\n    uVar1 = *(in_ECX + 8);\n    iVar2 = *(in_ECX + 0xc);\n    *arg_ch = 0;\n    arg_ch[1] = 0;\n    if ((uVar1 != 0xffffffff) || (iVar2 != 0x7fffffff)) {\n        if ((uVar1 == 0) && (iVar2 == -0x80000000)) {\n            iVar2 = 0;\n        }\n        else {\n            arg_8h_00 = uVar1 + 1;\n            iVar2 = iVar2 + (0xfffffffe < uVar1);\n        }\n        *(in_ECX + 8) = arg_8h_00;\n        *(in_ECX + 0xc) = iVar2;\n        arg_ch[1] = iVar2;\n        *arg_ch = arg_8h_00;\n        fcn.00401c11(arg_8h_00, iVar2, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 289
    },
    "0046d3ec": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.0046d3ec(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0046dadc();\n    return uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n}\n",
        "token_count": 57
    },
    "0046d509": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0046d509(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_3ch;\n    uint var_20h;\n    uint lpInBuffer;\n    uint var_10h;\n    uint var_ch;\n    int32_t hObject;\n    uint var_4h;\n    \n    *param_2 = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(param_1, 0x80, 3, 0, 3, 0x80, 0);\n    if (iVar1 != -1) {\n        lpInBuffer = 0;\n        var_10h = 0;\n        puVar3 = &var_3ch;\n        hObject = iVar1;\n        for (iVar2 = 10; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n        }\n        var_ch = 0;\n        var_4h = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_DeviceIoControl)(iVar1, 0x2d1400, &lpInBuffer, 0xc, &var_3ch, 0x28, &var_4h, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        if (iVar1 != 0) {\n            *param_2 = var_20h;\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 356
    },
    "0046d588": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.0046d588(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_1ch;\n    uint uStack28;\n    uint var_14h;\n    uint lpInBuffer;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(param_1, 0x80, 3, 0, 3, 0x80, 0);\n    if (iVar1 != -1) {\n        lpInBuffer = 7;\n        var_ch = 0;\n        var_1ch = 0;\n        var_8h = 0;\n        var_4h = 0;\n        uStack28 = 0;\n        var_14h = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_DeviceIoControl)(iVar1, 0x2d1400, &lpInBuffer, 0xc, &var_1ch, 0xc, &var_4h, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        if (iVar2 != 0) {\n            return var_14h != '\\0';\n        }\n    }\n    return 0x80004005;\n}\n",
        "token_count": 304
    },
    "0046d6da": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046d6da(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int16_t *piVar2;\n    uint *arg_8h_00;\n    uint *in_EDX;\n    uint var_84h;\n    uint var_74h;\n    uint var_64h;\n    uint var_54h;\n    uint var_44h;\n    uint var_34h;\n    uint var_24h;\n    uint var_14h;\n    \n    iVar1 = fcn.0046ea9d(0x4c63d8);\n    if (iVar1 == -1) {\n        if (arg_8h == in_EDX) {\n            return;\n        }\n        fcn.0040c1c3(in_EDX);\n        return;\n    }\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.00406bff(0, &var_84h, &var_14h);\n    fcn.00406bff(&var_74h, &var_64h, &var_34h);\n    piVar2 = fcn.0040660f(0);\n    if (*piVar2 == 0x2e) {\n        fcn.0040ad22(0, 1);\n    }\n    piVar2 = fcn.0040660f(0);\n    if (*piVar2 == 0x2e) {\n        fcn.0040ad22(0, 1);\n    }\n    if (arg_8h != &var_44h) {\n        fcn.0040c1c3(&var_44h);\n    }\n    fcn.00407cf8(&var_74h);\n    fcn.0046d896(&var_54h);\n    fcn.0046d896(&var_24h);\n    piVar2 = fcn.0040660f(0);\n    if (*piVar2 == 0) {\n        piVar2 = fcn.0040660f(0);\n        if (*piVar2 == 0) goto code_r0x0046d843;\n        fcn.004052b7(0x49d108);\n        arg_8h_00 = &var_14h;\n    }\n    else {\n        fcn.004052b7(0x49d108);\n        arg_8h_00 = &var_54h;\n    }\n    fcn.00407cf8(arg_8h_00);\ncode_r0x0046d843:\n    fcn.00407cf8(&var_24h);\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return;\n}\n",
        "token_count": 718
    },
    "0046d896": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046d896(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int16_t *piVar2;\n    uint16_t *puVar3;\n    int32_t in_EDX;\n    int32_t arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = 0;\n    var_8h = 0;\n    fcn.0040bfbf();\n    iVar1 = fcn.0046ea9d(0x4c63d8);\n    if (iVar1 == -1) {\n        if (arg_8h != in_EDX) {\n            fcn.0040c1c3(in_EDX);\n        }\n    }\n    else {\n        while (piVar2 = fcn.004058ca(arg_8h_00),  *piVar2 != 0x2a) {\n            puVar3 = fcn.004058ca(arg_8h_00);\n            fcn.004051ec(*puVar3);\n            arg_8h_00 = arg_8h_00 + 1;\n        }\n        while (piVar2 = fcn.004058ca(var_8h),  *piVar2 != 0) {\n            puVar3 = fcn.004058ca(var_8h);\n            fcn.004051ec(*puVar3);\n            var_8h = var_8h + 1;\n        }\n        while( true ) {\n            arg_8h_00 = arg_8h_00 + 1;\n            piVar2 = fcn.004058ca(arg_8h_00);\n            if (*piVar2 == 0) break;\n            piVar2 = fcn.004058ca(arg_8h_00);\n            if (*piVar2 != 0x2a) {\n                puVar3 = fcn.004058ca(arg_8h_00);\n                fcn.004051ec(*puVar3);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 469
    },
    "0046dadc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuchar * __fastcall fcn.0046dadc(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_1);\n    if (*(param_1 + -2 + iVar1 * 2) != 0x22) {\n        puVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n        if (puVar2 != 0xffffffff) {\n            return puVar2;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(param_1);\n        if (iVar1 != -1) {\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n            return &stack0xfffffda0;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 187
    },
    "0046e0b7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0046e0b7(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n    if ((uVar1 != 0xffffffff) && ((uVar1 & 0x10) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 90
    },
    "0046eaef": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0046eaef(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint var_4h;\n    \n    if (param_1 != 0) {\n        if (param_2 == 0xffffffff) {\n            iVar1 = fcn.00428d10(param_1);\n            param_2 = iVar1 + 1;\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 1, param_1, param_2, 0, 0);\n        if (uVar2 != 0) {\n            uVar3 = param_2;\n            if (param_2 <= uVar2) {\n                uVar3 = uVar2;\n            }\n            uVar4 = fcn.0041fd8b(-(uVar3 * 2 >> 0x20 != 0) | uVar3 * 2);\n            (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 1, param_1, param_2, uVar4, uVar2);\n            return uVar4;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 286
    },
    "0046ee2e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0046ee2e(int16_t *param_1, int32_t *param_2)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.004248f3(param_1);\n    *param_2 = 0;\n    iVar6 = 1;\n    var_8h = 0;\n    iVar2 = iVar2 + -1;\n    do {\n        if (iVar2 < 0) break;\n        uVar1 = param_1[iVar2];\n        uVar5 = uVar1;\n        if (uVar1 - 0x30 < 10) {\n            iVar3 = uVar5 - 0x30;\n        }\n        else if (uVar1 - 0x41 < 6) {\n            iVar3 = uVar5 - 0x37;\n        }\n        else {\n            if (5 < uVar1 - 0x61) goto code_r0x0046eebe;\n            iVar3 = uVar5 - 0x57;\n        }\n        iVar3 = iVar3 * iVar6;\n        iVar6 = iVar6 << 4;\n        *param_2 = *param_2 + iVar3;\n        iVar2 = iVar2 + -1;\n        var_8h = var_8h + 1;\n    } while (var_8h < 8);\n    if ((iVar2 == -1) || (((param_1[1] == 0x78 || (param_1[1] == 0x58)) && (*param_1 == 0x30)))) {\n        uVar4 = 1;\n    }\n    else {\ncode_r0x0046eebe:\n        *param_2 = 0;\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 444
    },
    "0046eecc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0046eecc(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    if (param_1 != 0) {\n        if (param_2 == -1) {\n            param_2 = fcn.004248f3(param_1);\n            param_2 = param_2 + 1;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, param_2, 0, 0, 0, 0);\n        if (iVar1 != 0) {\n            iVar2 = iVar1;\n            if (iVar1 < param_2) {\n                iVar2 = param_2;\n            }\n            uVar3 = fcn.0041fd8b(iVar2);\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, param_2, uVar3, iVar1, 0, 0);\n            return uVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 263
    },
    "0046f8d6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0046f8d6(uint arg_8h, uint arg_ch, double *arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint32_t arg_ch_00;\n    uchar uVar1;\n    ushort uVar2;\n    double *arg_10h_00;\n    int32_t iVar3;\n    uint uVar4;\n    float fVar5;\n    float fVar6;\n    int32_t in_ECX;\n    int32_t iVar7;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    char cVar8;\n    int32_t iVar9;\n    float10 fVar10;\n    ulong uVar11;\n    int32_t var_4h;\n    double dStack12;\n    \n    uVar4 = arg_14h;\n    arg_14h = 0;\n    var_4h = in_ECX;\n    arg_10h_00 = fcn.0046f80e(arg_8h, &var_4h, &arg_14h);\n    iVar7 = arg_14h;\n    if (arg_10h_00 != NULL) {\n        iVar7 = *(in_ECX + 4);\n        var_4h = var_4h * 0x20;\n        arg_14h = *(var_4h + iVar7);\n        iVar9 = *(var_4h + 0x1c + iVar7);\n        iVar3 = *(var_4h + 4 + iVar7);\n        arg_ch_00 = *(var_4h + 8 + iVar7);\n        iVar7 = arg_18h;\n        if (arg_18h != -1) {\n            iVar7 = arg_18h * iVar3;\n            arg_14h = arg_14h + iVar7;\n            arg_10h_00 = arg_10h_00 + iVar7;\n        }\n        if (arg_14h < iVar9) {\n            if ((arg_ch_00 & 0x21) != 0) {\n                iVar7 = fcn.0046fb4d(arg_ch, arg_ch_00, arg_10h_00, iVar9, arg_14h, iVar7, uVar4, arg_10h);\n                return iVar7;\n            }\n            cVar8 = uVar4;\n            if ((((arg_ch_00 & 4) == 0) || (iVar7 != -1)) || (iVar9 = iVar9 - arg_14h,  (arg_ch_00 & 0x10) == 0)) {\n                if ((arg_ch_00 & 0x40) == 0) {\n                    if ((arg_ch_00 & 8) == 0) {\n                        if (iVar3 == 1) {\n                            if (cVar8 != '\\0') {\n                                uVar1 = fcn.0040cc8f();\n                                *arg_10h_00 = uVar1;\n                            }\n                            if ((arg_ch_00 & 2) == 0) {\n                                fVar5 = *arg_10h_00;\n                            }\n                            else {\n                                fVar5 = *arg_10h_00;\n                            }\n                        }\n                        else {\n                            if (iVar3 != 2) {\n                                if (iVar3 == 4) {\n                                    if (cVar8 != '\\0') {\n                                        fVar5 = fcn.0040cc8f();\n                                        *arg_10h_00 = fVar5;\n                                    }\n                                    fVar5 = *arg_10h_00;\n                                    if ((arg_ch_00 & 2) == 0) {\n                                        fcn.0040e8a0();\n                                        fVar6 = 1.401298e-45;\n                                    }\n                                    else {\n                                        fcn.0040e8a0();\n                                        *(arg_10h + 4) = 0.0;\n                                        fVar6 = 2.802597e-45;\n                                    }\n                                    *arg_10h = fVar5;\n                                    *(arg_10h + 0xc) = fVar6;\n                                    return 0;\n                                }\n                                if (iVar3 != 8) {\n                                    return 0;\n                                }\n                                if (cVar8 != '\\0') {\n                                    uVar11 = fcn.0040cc8f();\n                                    *arg_10h_00 = uVar11;\n                                    *(arg_10h_00 + 4) = uVar11 >> 0x20;\n                                }\n                                fVar5 = *arg_10h_00;\n                                fVar6 = *(arg_10h_00 + 4);\n                                fcn.0040e8a0();\n                                *(arg_10h + 0xc) = 2.802597e-45;\n                                *arg_10h = fVar5;\n                                *(arg_10h + 4) = fVar6;\n                                return 0;\n                            }\n                            if (cVar8 != '\\0') {\n                                uVar2 = fcn.0040cc8f();\n                                *arg_10h_00 = uVar2;\n                            }\n                            if ((arg_ch_00 & 2) == 0) {\n                                fVar5 = *arg_10h_00;\n                            }\n                            else {\n                                fVar5 = *arg_10h_00;\n                            }\n                        }\n                        fcn.0040e8a0();\n                        *(arg_10h + 0xc) = 1.401298e-45;\n                        *arg_10h = fVar5;\n                    }\n                    else {\n                        if (iVar3 == 4) {\n                            if (cVar8 == '\\0') {\n                                fVar5 = *arg_10h_00;\n                            }\n                            else {\n                                fVar10 = fcn.0040cfb5();\n                                fVar5 = fVar10;\n                                *arg_10h_00 = fVar5;\n                            }\n                            fcn.0040e8a0();\n                            dStack12 = fVar5;\n                        }\n                        else {\n                            if (iVar3 != 8) {\n                                return 0;\n                            }\n                            if (cVar8 != '\\0') {\n                                fVar10 = fcn.0040cfb5();\n                                *arg_10h_00 = fVar10;\n                            }\n                            dStack12 = *arg_10h_00;\n                            fcn.0040e8a0();\n                        }\n                        *arg_10h = dStack12;\n                        *(arg_10h + 0xc) = 4.203895e-45;\n                    }\n                }\n                else {\n                    if (cVar8 != '\\0') {\n                        fVar5 = fcn.00471dda();\n                        *arg_10h_00 = fVar5;\n                    }\n                    fVar5 = *arg_10h_00;\n                    fcn.0040e8a0();\n                    *(arg_10h + 0xc) = 9.809089e-45;\n                    *arg_10h = fVar5;\n                }\n            }\n            else {\n                iVar7 = iVar9;\n                if (cVar8 != '\\0') {\n                    fcn.00471db4();\n                    iVar3 = fcn.00471e24();\n                    if (iVar9 < iVar3) {\n                        iVar3 = iVar9;\n                    }\n                    uVar4 = fcn.00471db4(extraout_ECX, iVar3);\n                    fcn.00420db0(arg_10h_00, uVar4);\n                    iVar7 = iVar3;\n                    arg_10h_00 = fcn.00471db4(extraout_ECX_00, iVar3);\n                    iVar9 = iVar3;\n                }\n                uVar4 = fcn.00470da3(iVar9);\n                fcn.00420db0(uVar4, iVar9, arg_10h_00, iVar7);\n            }\n            return 0;\n        }\n        iVar7 = 3;\n    }\n    fcn.0040e8a0();\n    *arg_10h = 0.0;\n    *(arg_10h + 0xc) = 1.401298e-45;\n    return iVar7;\n}\n",
        "token_count": 1799
    },
    "004703f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004703f0(uint32_t arg_8h, uint nStdHandle, int32_t *arg_10h, uint hReadPipe)\n\n{\n    int32_t iVar1;\n    uint32_t *in_ECX;\n    uint lpSecurityAttributes;\n    uint var_8h;\n    uint var_4h;\n    \n    lpSecurityAttributes = 0xc;\n    var_4h = 0;\n    var_8h = 0;\n    if ((*in_ECX & 0x10) == 0) {\n        if ((arg_8h & *in_ECX) == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(nStdHandle);\n            *arg_10h = iVar1;\n            if ((iVar1 != 0) && (iVar1 != -1)) goto code_r0x00470424;\n            iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(0x4c6a14, 0x40000000, 2, &lpSecurityAttributes, 3, 0x80, 0);\n            *arg_10h = iVar1;\n            if ((iVar1 == -1) || (iVar1 == 0)) goto code_r0x004704bb;\n        }\n        else {\n            if (*arg_10h != 0) {\n                return *arg_10h;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_CreatePipe)(hReadPipe, arg_10h, &lpSecurityAttributes, 0);\n            if (iVar1 == 0) {\n                return -1;\n            }\n        }\n        fcn.0047028f(1);\n        if (*arg_10h != 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(*arg_10h);\n        }\n        *arg_10h = arg_10h;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(nStdHandle);\n        *arg_10h = iVar1;\n        if (iVar1 == -1) {\ncode_r0x004704bb:\n            *arg_10h = 0;\n            goto code_r0x004704bd;\n        }\ncode_r0x00470424:\n        fcn.0047028f(1);\n    }\ncode_r0x004704bd:\n    return *arg_10h;\n}\n",
        "token_count": 527
    },
    "004704c5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004704c5(uint noname_0, uint noname_1, int32_t *arg_10h, uint hWritePipe)\n\n{\n    int32_t iVar1;\n    uint32_t *in_ECX;\n    uint lpSecurityAttributes;\n    uint var_8h;\n    uint var_4h;\n    \n    lpSecurityAttributes = 0xc;\n    var_4h = 0;\n    var_8h = 0;\n    if ((*in_ECX & 0x10) == 0) {\n        if ((*in_ECX & 1) == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff6);\n            *arg_10h = iVar1;\n            if ((iVar1 != 0) && (iVar1 != -1)) goto code_r0x004704f8;\n            iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(0x4c6a14, 0x80000000, 1, &lpSecurityAttributes, 3, 0x80, 0);\n            *arg_10h = iVar1;\n            if ((iVar1 == -1) || (iVar1 == 0)) goto code_r0x0047058d;\n        }\n        else {\n            if (*arg_10h != 0) {\n                return *arg_10h;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_CreatePipe)(arg_10h, hWritePipe, &lpSecurityAttributes, 0);\n            if (iVar1 == 0) {\n                return -1;\n            }\n        }\n        fcn.0047028f(1);\n        if (*arg_10h != 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(*arg_10h);\n        }\n        *arg_10h = arg_10h;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff6);\n        *arg_10h = iVar1;\n        if (iVar1 == -1) {\ncode_r0x0047058d:\n            *arg_10h = 0;\n            goto code_r0x0047058f;\n        }\ncode_r0x004704f8:\n        fcn.0047028f(1);\n    }\ncode_r0x0047058f:\n    return *arg_10h;\n}\n",
        "token_count": 531
    },
    "00472ef6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00472ef6(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar1);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "004736d3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004736d3(void)\n\n{\n    uint extraout_ECX;\n    int32_t extraout_EDX;\n    ushort uStackY8196;\n    uint uStackY48;\n    \n    fcn.00441ef0();\n    uStackY8196 = 0;\n    if (extraout_EDX == -1) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    (*_sym.imp.KERNEL32.dll_FormatMessageW)();\n    uStackY48 = 0x473726;\n    fcn.0040b606(&stack0xffffdffc);\n    return extraout_ECX;\n}\n",
        "token_count": 137
    },
    "00473c3c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpFilePart\n\nuint __cdecl fcn.00473c3c(uint lpFileName, uint lpPathName, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar auStackY327668 [196588];\n    uchar auStackY131080 [65532];\n    int16_t aiStackY65548 [2];\n    uchar auStackY65544 [65440];\n    uint uStackY104;\n    int32_t iStackY100;\n    int32_t iStackY96;\n    uint uStackY92;\n    uint lpFilePart;\n    \n    fcn.00441ef0();\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetFullPathNameW)();\n    if (iVar1 != 0) {\n        fcn.0041faa3(&stack0xfffefff8, L\"\\\\??\\\\%s\", &stack0xfffdfff8);\n        iVar1 = fcn.004248f3(&stack0xfffefff8);\n        if ((*(&stack0xfffefff6 + iVar1 * 2) == 0x5c) && (*(&stack0xfffefff4 + iVar1 * 2) != 0x3a)) {\n            *(&stack0xfffefff6 + iVar1 * 2) = 0;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)();\n        if ((iVar1 != 0) || (arg_10h != '\\0')) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n            if (iVar1 != -1) {\n                fcn.004222d0();\n                uStackY92 = 0x473d43;\n                fcn.0042d27b(&stack0xfffb000c, &stack0xfffefff8, 0x7fff);\n                uStackY92 = 0x900a4;\n                iStackY100 = 0x473d79;\n                iStackY96 = iVar1;\n                iVar2 = (*_sym.imp.KERNEL32.dll_DeviceIoControl)();\n                iStackY100 = iVar1;\n                if (iVar2 != 0) {\n                    uStackY104 = 0x473d8f;\n                    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n                    return 1;\n                }\n                uStackY104 = 0x473d84;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            }\n            (*_sym.imp.KERNEL32.dll_RemoveDirectoryW)();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 567
    },
    "00475b78": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00475b78(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    \n    fcn.00408e90();\n    iVar1 = fcn.0046dadc();\n    if (iVar1 == -1) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 99
    },
    "00479bc8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00479bc8(int32_t *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t extraout_EDX;\n    \n    iVar3 = fcn.0040ce67();\n    *arg_8h = iVar3 + -1;\n    if ((((-1 < iVar3 + -1) && (cVar2 = fcn.0046ff5f(),  cVar2 != '\\0')) && (extraout_EDX < *(in_ECX + 0x1a0))) &&\n       ((piVar1 = **(*(in_ECX + 0x19c) + extraout_EDX * 4),  piVar1 != NULL && ((arg_10h == -1 || (*piVar1 == arg_10h)))\n        ))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 222
    },
    "0047e22d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t * __cdecl fcn.0047e22d(uint32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    *arg_8h = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 1;\n    if (arg_14h == 0) {\n        if (((-2 < arg_10h) && (((arg_10h < 0x80000000 || (0x7fffffff < arg_ch)) && (arg_10h < 1)))) &&\n           ((arg_10h < 0 || (arg_ch < 0x80000000)))) {\n            fcn.0040e8a0();\n            arg_8h[3] = 1;\n            goto code_r0x0047e2a8;\n        }\n    }\n    else if (arg_14h == 1) {\n        fcn.0040e8a0();\n        arg_8h[3] = 1;\n        *arg_8h = arg_ch;\n        return arg_8h;\n    }\n    fcn.0040e8a0();\n    arg_8h[3] = 2;\n    arg_8h[1] = arg_10h;\ncode_r0x0047e2a8:\n    *arg_8h = arg_ch;\n    return arg_8h;\n}\n",
        "token_count": 321
    },
    "004800ba": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004800ba(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = arg_8h;\n    var_10h = *(arg_8h + 8);\n    iVar5 = *(*(arg_8h + 4) + 4);\n    fcn.00408e90();\n    puVar1 = *(iVar5 + 8);\n    uVar7 = *puVar1;\n    var_1ch = puVar1[1];\n    var_18h = puVar1[2];\n    var_14h = puVar1[3];\n    *var_14h = *var_14h + 1;\n    iVar5 = *(*(arg_8h + 4) + 8);\n    var_20h = uVar7;\n    fcn.00408e90();\n    puVar1 = *(iVar5 + 8);\n    uVar8 = 0;\n    uVar2 = *puVar1;\n    var_ch = puVar1[1];\n    *puVar1[3] = *puVar1[3] + 1;\n    var_4h = uVar2;\n    iVar5 = fcn.0040ce67();\n    if ((iVar5 == -1) || (cVar4 = fcn.00401fb9(0x29),  cVar4 != '\\0')) {\n        uVar6 = 0;\n    }\n    else {\n        uVar6 = fcn.0040ce67();\n        uVar6 = uVar6 | 0x10000;\n    }\n    cVar4 = fcn.00401fb9(0x29);\n    arg_8h = uVar7;\n    if ((cVar4 != '\\0') && (&var_20h != var_8h + 0xb8)) {\n        fcn.0040c1c3(var_8h + 0xb8);\n        arg_8h = var_20h;\n    }\n    if (0x4000 < var_ch) {\n        fcn.0040ad22(0x4000, 0xffffffff);\n        var_4h = uVar2;\n    }\n    if (4 < var_10h) {\n        uVar8 = fcn.00471dda();\n    }\n    if ((*(iVar3 + 8) < 4) || (cVar4 = fcn.00401fb9(0x29),  cVar4 != '\\0')) {\n        uVar7 = (*_sym.imp.USER32.dll_MessageBoxW)(uVar8, var_4h, arg_8h, uVar6);\n    }\n    else {\n        fcn.0040cfb5();\n        uVar7 = fcn.00442010();\n        uVar7 = fcn.0046e0f4(arg_8h, uVar6, uVar7);\n    }\n    fcn.0040e8a0();\n    arg_ch[3] = 1;\n    *arg_ch = uVar7;\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 834
    },
    "00484ad4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00484ad4(uint arg_8h, uint arg_ch, uint32_t arg_10h, int32_t arg_14h, uint *arg_18h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    char16_t *arg_10h_00;\n    uint uVar5;\n    uint var_cch;\n    uint Clsid;\n    uint var_ach;\n    uint var_9ch;\n    uint var_98h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_7ch;\n    int32_t *var_74h;\n    uint pServerInfo;\n    uint pv;\n    uint *var_64h;\n    uint dwAuthnSvc;\n    uint dwAuthzSvc;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint *var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    uint pResults;\n    int32_t *var_ch;\n    uint32_t var_8h;\n    \n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    puVar2 = &dwAuthnSvc;\n    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.0040e8a0();\n    uVar5 = 0;\n    arg_18h[3] = 1;\n    *arg_18h = 0;\n    uVar1 = fcn.0045fef7(0);\n    if (uVar1 < 0) {\n        arg_10h_00 = NULL;\n        uVar3 = 0;\ncode_r0x00484d51:\n        arg_10h = arg_10h & 0xffffff00 | uVar3;\n    }\n    else {\n        var_7ch._0_2_ = 9;\n        uVar1 = fcn.004605c7(&Clsid, arg_10h, arg_14h);\n        if (-1 < uVar1) {\n            (*_sym.imp.ole32.dll_CoInitializeSecurity)(0, 0xffffffff, 0, 0, 2, 3, 0, 0, 0);\n            fcn.004222d0(&pServerInfo, 0, 0x10);\n            fcn.00460971();\n            if (arg_10h == 0) {\n                var_64h = NULL;\n            }\n            else {\n                var_24h = 1;\n                fcn.004084e7(arg_10h);\n                uVar1 = fcn.0046ea9d(0x49d034);\n                if (uVar1 == 0xffffffff) {\n                    var_3ch = var_20h;\n                    var_34h = 0;\n                    var_30h = 0;\n                }\n                else {\n                    arg_10h = uVar1;\n                    if (var_1ch < uVar1) {\n                        arg_10h = var_1ch;\n                    }\n                    fcn.0040c25d();\n                    fcn.004086ac(&var_20h, 0, arg_10h);\n                    fcn.0040c1c3(&var_ach);\n                    fcn.0040b1ff();\n                    var_34h = var_9ch;\n                    var_30h = var_98h;\n                    puVar2 = fcn.00462ffb(&var_cch, uVar1 + 1, 0xffffffff);\n                    if (&var_8ch != puVar2) {\n                        fcn.0040c1c3(puVar2);\n                    }\n                    fcn.0040b1ff();\n                    var_3ch = var_8ch;\n                }\n                if (arg_14h == 0) {\n                    var_2ch = 0;\n                    var_28h = 0;\n                }\n                else {\n                    var_2ch = arg_14h;\n                    var_28h = fcn.004248f3(arg_14h);\n                }\n                var_48h = &var_3ch;\n                var_50h = 2;\n                var_64h = &dwAuthnSvc;\n                dwAuthnSvc = 9;\n                dwAuthzSvc = 0;\n                var_44h = 0;\n                var_4ch = 3;\n                var_54h = 0;\n            }\n            var_74h = NULL;\n            fcn.004222d0(&pResults, 0, 0xc);\n            var_ch = var_74h;\n            pResults = 0x49fbb4;\n            var_8h = 0;\n            uVar1 = (*_sym.imp.ole32.dll_CoCreateInstanceEx)(&Clsid, 0, 0x15, &pServerInfo, 1, &pResults);\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(pv);\n            if ((-1 < uVar1) && (uVar1 = var_8h,  -1 < var_8h)) {\n                if ((var_64h != NULL) && (var_ch != NULL)) {\n                    uVar1 = (*_sym.imp.ole32.dll_CoSetProxyBlanket)\n                                      (var_ch, dwAuthnSvc, dwAuthzSvc, var_54h, var_50h, var_4ch, &var_3ch, 0x800);\n                }\n                var_74h = var_ch;\n                if (var_ch == NULL) {\n                    uVar3 = 1;\n                    arg_10h_00 = L\"NULL Pointer assignment\";\n                    uVar1 = uVar3;\n                    goto code_r0x00484d51;\n                }\n                if (-1 < uVar1) {\n                    fcn.00470bfd(&var_7ch);\n                    (**(*var_74h + 8))(var_74h);\n                    goto code_r0x00484d86;\n                }\n            }\n        }\n        arg_10h_00 = NULL;\n        arg_10h = arg_10h & 0xffffff00;\n    }\n    uVar5 = fcn.004846fb(uVar1, 0, arg_10h_00, arg_10h);\ncode_r0x00484d86:\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return uVar5;\n}\n",
        "token_count": 1562
    },
    "004857c9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004857c9(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *arg_ch_00;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    int32_t in_FS_OFFSET;\n    uint arg_8h_00;\n    int32_t in_stack_fffffeb4;\n    uint var_124h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    arg_ch_00 = arg_ch;\n    *arg_ch = *arg_ch + 1;\n    piVar2 = *(*(arg_8h + 4) + *arg_ch * 4);\n    var_8h = 0;\n    if ((*(piVar2 + 2) == 0) && (*piVar2 == 0x2c)) {\n        fcn.00485c5a(arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        arg_ch = NULL;\n        var_18h = 0;\n        if ((*(**(in_FS_OFFSET + 0x2c) + 4) < *0x4d2ff8) && (fcn.004201c2(0x4d2ff8),  *0x4d2ff8 == -1)) {\n            fcn.004013dc(0x49d0d0);\n            fcn.00420023(0x4423f3);\n            fcn.00420178(0x4d2ff8);\n        }\n        iVar5 = *arg_ch_00;\n        iVar6 = *(arg_8h + 4);\n        var_14h = 0x7f;\n        while (arg_8h_00 = var_14h,  *(*(iVar6 + iVar5 * 4) + 8) == 0x33) {\n            var_ch = **(iVar6 + iVar5 * 4);\n            iVar5 = fcn.0041da6c(var_ch, &var_18h, arg_10h);\n            if (iVar5 != 0) {\n                in_stack_fffffeb4 = *(*(*(arg_8h + 4) + *arg_ch_00 * 4) + 10);\n                if ((var_18h & 0x100) == 0) {\n                    arg_8h_00 = 0xa4;\n                }\n                else {\n                    arg_8h_00 = 0xae;\n                }\n                break;\n            }\n            var_10h = fcn.0040c117(var_ch, 0x4d25b0, 0x100, arg_10h);\n            *arg_ch_00 = *arg_ch_00 + 1;\n            if (*(*(*(arg_8h + 4) + *arg_ch_00 * 4) + 8) == 0x4e) {\n                iVar5 = fcn.0040149f(arg_8h, arg_ch_00, var_10h, &var_124h, &arg_ch);\n                if (iVar5 < 0) {\n                    return;\n                }\n                var_8h = arg_ch;\n            }\n            iVar5 = *arg_ch_00;\n            iVar6 = *(arg_8h + 4);\n            iVar3 = *(iVar6 + iVar5 * 4);\n            if (*(iVar3 + 8) != 0x41) {\n                in_stack_fffffeb4 = *(iVar3 + 10);\n                arg_8h_00 = 0x80;\n                break;\n            }\n            var_1ch = iVar5 + 1;\n            *arg_ch_00 = var_1ch;\n            iVar6 = *(iVar6 + var_1ch * 4);\n            var_20h = *(iVar6 + 10);\n            if (*(iVar6 + 8) == 0x4e) {\n                if (*(var_10h + 0xc) != 5) {\n                    *arg_ch_00 = iVar5;\n                    iVar5 = fcn.00485b33(arg_8h, arg_ch_00, var_10h, &var_124h, &arg_ch);\n                    if (iVar5 < 0) {\n                        return;\n                    }\n                    var_8h = arg_ch;\n                }\n                in_stack_fffffeb4 = var_ch;\n                iVar5 = fcn.0041ec9e(arg_8h, *arg_ch_00, var_ch);\n                if (iVar5 < 0) {\n                    return;\n                }\n                if (0 < var_8h) {\n                    puVar7 = &var_124h;\n                    for (iVar5 = var_8h; iVar5 != 0; iVar5 = iVar5 + -1) {\n                        *puVar7 = 0;\n                        puVar7 = puVar7 + 1;\n                    }\n                }\n                cVar4 = fcn.0041e596(arg_8h, arg_ch_00, var_10h, &var_124h, 1);\n                if (cVar4 == '\\0') {\n                    return;\n                }\n            }\n            else {\n                in_stack_fffffeb4 = var_ch;\n                iVar5 = fcn.0041ec9e(arg_8h, var_1ch, var_ch);\n                if (iVar5 < 0) {\n                    return;\n                }\n                iVar5 = fcn.00410540(arg_8h, arg_ch_00, var_10h, 0xffffffff);\n                if (iVar5 < 0) {\n                    arg_8h_00 = 0x6e;\n                    break;\n                }\n            }\n            iVar6 = *(arg_8h + 4);\n            iVar1 = *(*(iVar6 + *arg_ch_00 * 4) + 8);\n            if (iVar1 == var_14h) {\n                return;\n            }\n            arg_8h_00 = var_14h;\n            if (iVar1 != 0x40) break;\n            iVar5 = *arg_ch_00 + 1;\n            *arg_ch_00 = iVar5;\n        }\n        fcn.004734ba(arg_8h_00, in_stack_fffffeb4);\n    }\n    return;\n}\n",
        "token_count": 1458
    },
    "0048e511": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048e511(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    int32_t **arg_8h_00;\n    uint32_t arg_8h_01;\n    uint32_t unaff_EDI;\n    uint32_t uVar6;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    int32_t *piStack28;\n    uchar auStack24 [20];\n    \n    uVar3 = fcn.0040ce67();\n    iVar4 = **(arg_8h + 4);\n    fcn.00408e90();\n    puVar1 = *(iVar4 + 8);\n    uStack32 = puVar1[2];\n    uStack40 = *puVar1;\n    arg_8h_01 = puVar1[1];\n    piStack28 = puVar1[3];\n    *piStack28 = *piStack28 + 1;\n    uStack36 = arg_8h_01;\n    fcn.00407c18(arg_8h_01);\n    if (uVar3 == 8) {\n        uVar3 = 0;\n        if (arg_8h_01 != 0) {\n            do {\n                fcn.0040660f(uVar3);\n                iVar4 = fcn.0046e0cd();\n                if (iVar4 == 0) {\n                    puVar5 = fcn.0040660f(uVar3);\n                    fcn.004051ec(*puVar5);\n                }\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < arg_8h_01);\n        }\n        arg_8h_00 = &piStack28;\n    }\n    else {\n        if (((uVar3 & 1) != 0) && (arg_8h_01 != 0)) {\n            uVar6 = 0;\n            if (arg_8h_01 != 0) {\n                do {\n                    fcn.0040660f(uVar6);\n                    iVar4 = fcn.0046e0cd();\n                    if (iVar4 == 0) break;\n                    uVar6 = uVar6 + 1;\n                } while (uVar6 < arg_8h_01);\n            }\n            fcn.004086ac(&stack0xffffffd4, uVar6, arg_8h_01 - uVar6);\n            arg_8h_01 = unaff_EDI;\n            fcn.0040c1c3(&uStack40);\n        }\n        if (((uVar3 & 2) != 0) && (arg_8h_01 != 0)) {\n            do {\n                uVar6 = arg_8h_01;\n                arg_8h_01 = uVar6 - 1;\n                if (arg_8h_01 == 0xffffffff) break;\n                fcn.0040660f(arg_8h_01);\n                iVar4 = fcn.0046e0cd();\n            } while (iVar4 != 0);\n            fcn.004086ac(&piStack28, 0, uVar6);\n            fcn.0040c1c3(auStack24);\n            arg_8h_01 = uStack40;\n        }\n        if (((uVar3 & 4) != 0) && (arg_8h_01 != 0)) {\n            fcn.0040ad22(0, 0xffffffff);\n            bVar2 = false;\n            uVar3 = 0;\n            if (arg_8h_01 != 0) {\n                do {\n                    fcn.0040660f(uVar3);\n                    iVar4 = fcn.0046e0cd();\n                    if (iVar4 == 0) {\n                        bVar2 = false;\ncode_r0x0048e682:\n                        puVar5 = fcn.0040660f(uVar3);\n                        fcn.004051ec(*puVar5);\n                    }\n                    else if (!bVar2) {\n                        bVar2 = true;\n                        goto code_r0x0048e682;\n                    }\n                    uVar3 = uVar3 + 1;\n                } while (uVar3 < arg_8h_01);\n            }\n            fcn.0040c1c3(auStack24);\n        }\n        arg_8h_00 = &stack0xffffffd4;\n    }\n    fcn.00407c5d(arg_8h_00);\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 1052
    },
    "00493b79": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00493b79(uint *arg_8h, int32_t arg_ch, uint arg_10h, int32_t item, uint arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    uint lpmi;\n    uint var_30h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_10h;\n    int32_t var_4h;\n    \n    lpmi = 0x30;\n    fcn.004222d0(&var_30h, 0, 0x2c);\n    puVar4 = arg_8h;\n    if (item == -1) {\n        iVar3 = arg_8h[0x67];\n        if (iVar3 == 0) {\n            uVar2 = (*_sym.imp.USER32.dll_CreateMenu)();\n            puVar4[0x67] = uVar2;\n            (*_sym.imp.USER32.dll_SetMenu)(*puVar4, uVar2);\n            iVar3 = puVar4[0x67];\n            puVar4[0x69] = iVar3;\n        }\n        piVar5 = arg_ch + 0xc;\n        *piVar5 = iVar3;\n    }\n    else {\n        cVar1 = fcn.0040c4db(item, &arg_8h, &var_4h);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        puVar4 = **(*0x4d1910 + arg_8h * 4);\n        iVar3 = *(**(*0x4d1924 + var_4h * 4) + 0xc);\n        if (iVar3 == 0) {\n            return 0;\n        }\n        piVar5 = arg_ch + 0xc;\n        *piVar5 = iVar3;\n        if (*(**(*0x4d1924 + var_4h * 4) + 0x90) != '\\f') {\n            var_30h = 4;\n            iVar3 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(iVar3, item, 0, &lpmi);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            *piVar5 = var_20h;\n            iVar3 = var_20h;\n        }\n        if (iVar3 == 0) {\n            return 0;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_IsMenu)(iVar3);\n        if (iVar3 == 0) {\n            return 0;\n        }\n    }\n    iVar3 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n    if (iVar3 == 0) {\n        return 0;\n    }\n    var_10h = arg_18h;\n    var_30h = 0x46;\n    var_24h = arg_10h;\n    var_20h = iVar3;\n    (*_sym.imp.USER32.dll_InsertMenuItemW)(*piVar5, arg_1ch, 1, &lpmi);\n    (*_sym.imp.USER32.dll_DrawMenuBar)(*puVar4);\n    puVar4[0x69] = iVar3;\n    return 1;\n}\n",
        "token_count": 734
    },
    "00493ecb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00493ecb(uint *arg_8h, int32_t *arg_ch, uint arg_10h, uint arg_14h, uint X, uint Y, int32_t nWidth, int32_t nHeight\n            , uint32_t arg_28h, uint32_t arg_2ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint noname_10;\n    \n    uVar1 = arg_28h;\n    if (arg_28h == 0xffffffff) {\n        uVar1 = 0x100;\n    }\n    uVar2 = fcn.00498021(uVar1 | 0x20e);\n    iVar3 = fcn.004079b6(arg_8h, -(arg_2ch != 0xffffffff) & arg_2ch, L\"static\", 0, uVar2, X, Y, 0, 0, arg_10h, noname_10\n                         , 0);\n    *arg_ch = iVar3;\n    if (iVar3 != 0) {\n        if (nWidth == -1) {\n            nWidth = 0x96;\n        }\n        if (nHeight == -1) {\n            nHeight = 0x96;\n        }\n        if (*0x4d18b8 == 0) {\n            *(arg_ch + 0x86) = 0x300;\n        }\n        iVar3 = fcn.00498461(arg_ch, arg_14h, &nWidth, &nHeight);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_MoveWindow)(*arg_ch, X, Y, nWidth, nHeight, 0);\n            uVar2 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(0);\n            uVar4 = (*_sym.imp.USER32.dll_SendMessageW)(*arg_ch, 0x173, 0, 0);\n            (*_sym.imp.GDI32.dll_SelectObject)(uVar2, uVar4);\n            nHeight = (*_sym.imp.GDI32.dll_GetPixel)(uVar2, 0, 0);\n            (*_sym.imp.GDI32.dll_DeleteDC)(uVar2);\n            uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(*arg_8h, 0xffffffec);\n            if ((uVar1 & 0x80000) != 0) {\n                (*_sym.imp.USER32.dll_SetLayeredWindowAttributes)(*arg_8h, nHeight, 0, 1);\n            }\n            return 1;\n        }\n        (*_sym.imp.USER32.dll_DestroyWindow)(*arg_ch);\n    }\n    return 0;\n}\n",
        "token_count": 603
    },
    "0049779a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0049779a(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h, int32_t *arg_1ch)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    \n    iVar1 = *0x4d191c;\n    if (arg_8h != 0) {\n        iVar1 = fcn.0041b021(arg_8h);\n    }\n    if ((iVar1 != -1) &&\n       ((arg_8h_00 = **(*0x4d1910 + iVar1 * 4),  arg_8h != 0 ||\n        (iVar1 = (*_sym.imp.USER32.dll_GetActiveWindow)(),  *arg_8h_00 == iVar1)))) {\n        fcn.0041ea9a(arg_8h_00, 0xffffffff);\n        *arg_ch = arg_8h_00[0x5d];\n        *arg_10h = arg_8h_00[0x5e];\n        *arg_14h = arg_8h_00[0x5f];\n        *0x4d194c = 0;\n        *0x4d1950 = 0x7fffffff;\n        *arg_18h = arg_8h_00[0x60];\n        *0x4d1954 = arg_8h_00[0x5b];\n        *0x4d1958 = arg_8h_00[0x5c];\n        (*_sym.imp.USER32.dll_EnumChildWindows)(*arg_8h_00, fcn.004974c4, 0);\n        iVar1 = *0x4d194c;\n        *arg_1ch = -1;\n        if ((iVar1 != 0) && (iVar1 != *arg_8h_00)) {\n            iVar1 = fcn.0041adc4(iVar1);\n            *arg_1ch = iVar1;\n            if (iVar1 != -1) {\n                return 1;\n            }\n        }\n        *arg_1ch = 0;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 503
    },
    "00497c6e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00497c6e(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    if (*0x4d191c == -1) {\n        uVar4 = 0;\n    }\n    else {\n        uVar4 = ***(*0x4d1910 + *0x4d191c * 4);\n    }\n    arg_8h = fcn.0041b021(arg_8h);\n    if (arg_8h != -1) {\n        if (arg_ch == -1) {\n            *0x4d191c = arg_8h;\n            return uVar4;\n        }\n        *0x4d191c = arg_8h;\n        cVar3 = fcn.0040c4db(arg_ch, &arg_8h, &var_4h);\n        if (cVar3 != '\\0') {\n            iVar1 = **(*0x4d1910 + arg_8h * 4);\n            iVar2 = **(*0x4d1924 + var_4h * 4);\n            if (*(iVar2 + 0x90) == '\\v') {\n                *(iVar1 + 0x198) = 1;\n                *(iVar1 + 400) = *(iVar2 + 0x93);\n                return uVar4;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 340
    },
    "004986a4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004986a4(uint arg_8h, int32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041adc4(arg_8h);\n    if (iVar1 == -1) {\n    // WARNING: Could not recover jumptable at 0x004986c0. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.USER32.dll_DefDlgProcW)();\n        return;\n    }\n    if (arg_ch == 0x20) {\n        fcn.00498709(arg_8h, arg_10h, arg_14h & 0xffff, arg_14h >> 0x10);\n    }\n    else {\n        (*_sym.imp.USER32.dll_CallWindowProcW)(*(**(*0x4d1924 + iVar1 * 4) + 8), arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "00498ebb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00498ebb(int32_t arg_8h, int32_t wParam, uint32_t arg_10h, int32_t lParam)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint lpPoint;\n    uint var_4h;\n    \n    iVar4 = fcn.0041b021(arg_8h);\n    piVar2 = **(*0x4d1910 + iVar4 * 4);\n    if (wParam == arg_8h) {\n        if (piVar2[0x68] != 0) {\n            (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n            iVar4 = piVar2[0x68];\ncode_r0x00498f08:\n            (*_sym.imp.USER32.dll_TrackPopupMenuEx)(iVar4, 0, lpPoint, var_4h, arg_8h, 0);\n            return;\n        }\n    }\n    else {\n        iVar4 = fcn.0041adc4(wParam);\n        if (iVar4 != -1) {\n            iVar3 = **(*0x4d1924 + iVar4 * 4);\n            cVar1 = *(iVar3 + 0x90);\n            if ((((cVar1 != '\\x0e') && (cVar1 != '\\x0f')) && (cVar1 != '\\x13')) &&\n               ((cVar1 != '\\x10' && (*(iVar3 + 0xc) != 0)))) {\n                (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n                arg_8h = *piVar2;\n                iVar4 = *(**(*0x4d1924 + iVar4 * 4) + 0xc);\n                goto code_r0x00498f08;\n            }\n        }\n    }\n    (*_sym.imp.USER32.dll_DefDlgProcW)(arg_8h, 0x7b, wParam, arg_10h & 0xffff | lParam << 0x10);\n    return;\n}\n",
        "token_count": 455
    },
    "00498f93": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00498f93(uint hDlg, int32_t *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0041b021(hDlg);\n    puVar1 = **(*0x4d1910 + iVar2 * 4);\n    if (*arg_ch == 4) {\n        iVar2 = fcn.0041adc4(arg_ch[5]);\n        if (iVar2 != -1) {\n            fcn.00496fa4(arg_ch, **(*0x4d1924 + iVar2 * 4));\n            if ((*(arg_ch + 4) & 0x10) == 0) {\n                puVar1[0x71] = 0;\n            }\n            else {\n                (*_sym.imp.USER32.dll_SendMessageW)(*puVar1, 0x401, iVar2, 0);\n            }\n        }\n    }\n    else {\n        (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x2b, arg_ch[1], arg_ch);\n    }\n    return;\n}\n",
        "token_count": 245
    },
    "0049a3fd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0049a3fd(uint arg_8h, uint arg_ch, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    int32_t arg_10h_00;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = 0;\n    var_4h = 0;\n    arg_10h_00 = *arg_10h;\n    while (arg_10h_00 != -1) {\n        iVar3 = 0;\n        if (arg_10h_00 != arg_14h) {\n            piVar2 = arg_10h + 1;\n            if (*piVar2 == arg_10h_00 + 1) {\n                iVar1 = arg_10h_00 + 1;\n                do {\n                    iVar3 = iVar3 + 1;\n                    piVar2 = piVar2 + 1;\n                    iVar1 = iVar1 + 1;\n                } while (*piVar2 == iVar1);\n            }\n            iVar1 = fcn.0041ccf0(arg_8h, arg_ch, arg_10h_00, arg_10h[iVar3]);\n            iVar1 = var_4h + iVar1;\n            var_4h = iVar1;\n        }\n        arg_10h = arg_10h + iVar3 + 1;\n        arg_10h_00 = *arg_10h;\n    }\n    return iVar1;\n}\n",
        "token_count": 354
    },
    "0049a512": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0049a512(uint32_t arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar3 = *arg_10h;\n    iVar4 = 0;\n    if (iVar3 == 0) goto code_r0x0049a590;\n    iVar4 = fcn.0041ccf0(arg_8h, arg_ch, 0, iVar3 + -1);\n    while( true ) {\n        iVar3 = *arg_10h;\ncode_r0x0049a590:\n        if (iVar3 == -1) break;\n        while (piVar1 = arg_10h + 1,  *piVar1 == iVar3 + 1) {\n            arg_10h = piVar1;\n            iVar3 = *piVar1;\n        }\n        uVar2 = arg_10h[1];\n        if (uVar2 == 0xffffffff) {\n            uVar2 = -((arg_8h & 0x800) != 0) & 0x110000;\n        }\n        iVar3 = fcn.0041ccf0(arg_8h, arg_ch, *arg_10h + 1, uVar2 - 1);\n        iVar4 = iVar4 + iVar3;\n        arg_10h = arg_10h + 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 351
    },
    "00408388": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408388(uint *param_1)\n\n{\n    uint uVar1;\n    uint unaff_ESI;\n    \n    if (param_1[3] != 5) {\n        fcn.0040e8a0();\n        param_1[3] = 5;\n        fcn.0041fd5b(4, unaff_ESI);\n        uVar1 = fcn.004083b0();\n        *param_1 = uVar1;\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0041d0b1": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint16_t * __fastcall fcn.0041d0b1(uint16_t *param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    do {\n        uVar1 = *param_1;\n        if (uVar1 < 4) {\n            return param_1;\n        }\n        if (uVar1 < 6) {\n            if (param_2 == 0) {\n                return param_1;\n            }\n        }\n        else if (uVar1 != 0x76) {\n            if (uVar1 < 0x7e) {\n                return param_1;\n            }\n            if (uVar1 < 0x81) {\n                if (param_2 == 0) {\n                    return param_1;\n                }\n                do {\n                    param_1 = param_1 + param_1[1];\n                    uVar1 = *param_1;\n                } while (uVar1 == 0x77);\n            }\n            else {\n                if (uVar1 < 0x8d) {\n                    return param_1;\n                }\n                if (0x91 < uVar1) {\n                    return param_1;\n                }\n            }\n        }\n        param_1 = param_1 + *(uVar1 + 0x4c2160);\n    } while( true );\n}\n",
        "token_count": 294
    },
    "00437ae7": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00437ae7(uint param_1, int32_t param_2)\n\n{\n    float10 fVar1;\n    char cVar2;\n    uint8_t uVar3;\n    ushort uVar4;\n    int32_t unaff_EBP;\n    float10 in_ST0;\n    float10 in_ST1;\n    uint var_a2h;\n    uint var_94h;\n    uint var_90h;\n    \n    if (*(param_2 + 0xe) == '\\x05') {\n        uVar4 = CONCAT31(*(unaff_EBP + -0xa4) >> 8 & 0xfe | 2, 0x3f);\n    }\n    else {\n        uVar4 = 0x133f;\n    }\n    *(unaff_EBP + -0xa2) = uVar4;\n    fVar1 = 0;\n    *(unaff_EBP + -0x94) = param_2;\n    *(unaff_EBP + -0xa0) = (in_ST0 < fVar1) << 9 | (in_ST0 != fVar1) << 10 | (in_ST0 == fVar1) << 0xe;\n    *(unaff_EBP + -0x90) = 0;\n    fVar1 = 0;\n    *(unaff_EBP + -0xa0) = (in_ST1 < fVar1) << 9 | (in_ST1 != fVar1) << 10 | (in_ST1 == fVar1) << 0xe;\n    uVar3 = (*(unaff_EBP + -0x9f) << 1) >> 1;\n    cVar2 = (*(unaff_EBP + -0x9f) << 1) >> 1;\n    // WARNING: Could not recover jumptable at 0x00437b71. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(param_2 + (*(((cVar2 << 1 | cVar2 < '\\0') & 0xf) + 0x4a2f3e) |\n                  *(((uVar3 & 7) << 1 | uVar3 < '\\0') + 0x4a2f3e) << 2) + 0x10))();\n    return;\n}\n",
        "token_count": 509
    },
    "00471da8": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00471da8(uint *param_1)\n\n{\n    if (param_1[3] == 5) {\n        return *param_1;\n    }\n    return 0;\n}\n",
        "token_count": 47
    },
    "00473d97": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00473d97(int32_t arg_8h, uint *arg_ch)\n\n{\n    char16_t cVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    char16_t *pcVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint unaff_EDI;\n    uint uStack68;\n    int32_t iStack64;\n    uint uStack60;\n    int32_t iStack56;\n    int32_t iStack52;\n    int32_t iStack48;\n    int32_t *piStack44;\n    uchar auStack36 [12];\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t *piStack12;\n    \n    iVar7 = **(arg_8h + 4);\n    fcn.00408e90();\n    puVar2 = *(iVar7 + 8);\n    uStack60 = *puVar2;\n    uStack20 = puVar2[1];\n    uStack16 = puVar2[2];\n    piStack12 = puVar2[3];\n    *piStack12 = *piStack12 + 1;\n    iVar7 = *(*(arg_8h + 4) + 4);\n    uStack24 = uStack60;\n    fcn.00408e90();\n    piVar3 = *(iVar7 + 8);\n    iStack56 = *piVar3;\n    iStack52 = piVar3[1];\n    iStack48 = piVar3[2];\n    piStack44 = piVar3[3];\n    *piStack44 = *piStack44 + 1;\n    fcn.0040c7c9();\n    iVar8 = iStack52;\n    iVar7 = iStack56;\n    (*_sym.imp.USER32.dll_CharLowerBuffW)(iStack56, iStack52);\n    iVar5 = fcn.004248f3(L\"close\");\n    if (iVar8 == iVar5) {\n        if (iVar8 != 0) {\n            pcVar6 = L\"close\";\n            iVar5 = iVar8;\n            do {\n                cVar1 = *(iVar7 + -0x4c6c08 + pcVar6);\n                if (cVar1 != *pcVar6) {\n                    iVar7 = (-(cVar1 < *pcVar6) & 0xfffffffe) + 1;\n                    goto code_r0x00473e60;\n                }\n                pcVar6 = pcVar6 + 1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        iVar7 = 0;\ncode_r0x00473e60:\n        if (iVar7 == 0) {\n            fcn.004084e7(L\"closed\");\n            iVar8 = iStack64;\n        }\n    }\n    pcVar6 = L\"open\";\n    iVar7 = fcn.004248f3(L\"open\");\n    if (iVar8 == iVar7) {\n        if (iVar8 != 0) {\n            iVar7 = iVar8;\n            do {\n                cVar1 = *(iStack64 + -0x4c6c24 + pcVar6);\n                if (cVar1 != *pcVar6) {\n                    iVar7 = (-(cVar1 < *pcVar6) & 0xfffffffe) + 1;\n                    goto code_r0x00473eb1;\n                }\n                pcVar6 = pcVar6 + 1;\n                iVar7 = iVar7 + -1;\n            } while (iVar7 != 0);\n        }\n        iVar7 = 0;\ncode_r0x00473eb1:\n        if (iVar7 != 0) goto code_r0x00473eb5;\ncode_r0x00473ef0:\n        iVar7 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(uStack68);\n        if (iVar7 == 5) {\n            fcn.0040b606(L\"open \");\n            fcn.00407cf8(auStack36);\n            fcn.004052b7(L\" type cdaudio alias cd wait\");\n            pcVar4 = _sym.imp.WINMM.dll_mciSendStringW;\n            iVar7 = (*_sym.imp.WINMM.dll_mciSendStringW)(uStack60, 0, 0, 0);\n            if (iVar7 == 0) {\n                fcn.004084e7(L\"set cd door \");\n                fcn.00407cf8(&uStack68);\n                fcn.004052b7(L\" wait\");\n                iVar7 = (*pcVar4)(uStack60, 0, 0, 0);\n                if (iVar7 != 0) {\n                    fcn.0040e8a0();\n                    arg_ch[3] = 1;\n                    *arg_ch = 0;\n                }\n                fcn.004084e7(L\"close cd wait\");\n                (*pcVar4)(unaff_EDI, 0, 0, 0);\n            }\n            else {\n                fcn.0040e8a0();\n                arg_ch[3] = 1;\n                *arg_ch = 0;\n            }\n            fcn.0040b1ff();\n            goto code_r0x00474006;\n        }\n    }\n    else {\ncode_r0x00473eb5:\n        pcVar6 = L\"closed\";\n        iVar7 = fcn.004248f3(L\"closed\");\n        if (iVar8 == iVar7) {\n            if (iVar8 != 0) {\n                do {\n                    cVar1 = *(iStack64 + -0x4c6c14 + pcVar6);\n                    if (cVar1 != *pcVar6) {\n                        iVar7 = (-(cVar1 < *pcVar6) & 0xfffffffe) + 1;\n                        goto code_r0x00473ee8;\n                    }\n                    pcVar6 = pcVar6 + 1;\n                    iVar8 = iVar8 + -1;\n                } while (iVar8 != 0);\n            }\n            iVar7 = 0;\ncode_r0x00473ee8:\n            if (iVar7 == 0) goto code_r0x00473ef0;\n        }\n    }\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\ncode_r0x00474006:\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 1442
    },
    "0047db85": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047db85(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = **(arg_8h + 4);\n    if (puVar1[3] == 6) {\n        puVar1 = *puVar1;\n    }\n    if (puVar1[3] != 5) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 125
    },
    "004818dc": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004818dc(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    \n    if ((**(arg_8h + 4))[3] == 5) {\n        uVar3 = ***(arg_8h + 4);\n        iVar2 = fcn.00411df0(uVar3, 1, 1);\n        if (iVar2 == 0) {\n            fcn.0040e8a0();\n            arg_ch[3] = 1;\n            goto code_r0x00481905;\n        }\n        iVar2 = fcn.0040ce67();\n        if (iVar2 == 0x2b594d1) {\n            fcn.00411df0(uVar3, 1, 1);\n            uVar3 = fcn.0040ce67();\n            iVar2 = (*_sym.imp.WSOCK32.dll_closesocket)(uVar3);\n            fcn.0040e8a0();\n            arg_ch[3] = 1;\n            if (iVar2 == 0) {\n                *arg_ch = 1;\n                return 0;\n            }\n            *arg_ch = 0;\n            uVar3 = (*_sym.imp.WSOCK32.dll_WSAGetLastError)();\n            iVar2 = *(*in_ECX + 4);\n            iVar4 = *(iVar2 + 8 + in_ECX);\n            if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n                iVar4 = *(iVar4 + 0x38);\n            }\n            *(iVar4 + 0x14) = uVar3;\n            iVar4 = *(iVar2 + 8 + in_ECX);\n            cVar1 = *(iVar2 + 0xd + in_ECX);\n            goto code_r0x004819e8;\n        }\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        iVar2 = *(*in_ECX + 4);\n        iVar4 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 0xfffffffc;\n    }\n    else {\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\ncode_r0x00481905:\n        *arg_ch = 0;\n        iVar2 = *(*in_ECX + 4);\n        iVar4 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 0xfffffffd;\n    }\n    iVar4 = *(iVar2 + 8 + in_ECX);\n    cVar1 = *(iVar2 + 0xd + in_ECX);\ncode_r0x004819e8:\n    if (cVar1 != '\\0') {\n        iVar4 = *(iVar4 + 0x38);\n    }\n    *(iVar4 + 0x18) = 0;\n    return 0;\n}\n",
        "token_count": 746
    },
    "0048566c": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048566c(int32_t arg_8h, uint *arg_ch)\n\n{\n    char16_t cVar1;\n    char16_t cVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint arg_8h_00;\n    int32_t *piVar7;\n    uint uVar8;\n    char16_t *pcVar9;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t lpsz;\n    int32_t cchLength;\n    int32_t var_10h;\n    int32_t *var_ch;\n    uint32_t var_8h;\n    int32_t *var_4h;\n    \n    uVar8 = 0;\n    var_28h = 0x49d100;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    if (*(arg_8h + 8) == 1) {\n        ppiVar4 = **(arg_8h + 4);\n        if (ppiVar4[3] == 0x6) {\n            ppiVar4 = *ppiVar4;\n        }\n        if (ppiVar4[3] == 0x5) {\n            piVar7 = *ppiVar4;\n            var_4h = piVar7;\n            if (*(*piVar7 + 0x10c) == 1) {\n                iVar5 = fcn.00411df0(piVar7, 1, 1);\n                if (iVar5 != 0) {\n                    fcn.00408e90();\n                    piVar3 = *(iVar5 + 8);\n                    lpsz = *piVar3;\n                    cchLength = piVar3[1];\n                    var_10h = piVar3[2];\n                    var_ch = piVar3[3];\n                    *var_ch = *var_ch + 1;\n                    fcn.0040c7c9();\n                    (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n                    pcVar9 = L\"CALLARGARRAY\";\n                    iVar5 = fcn.004248f3(L\"CALLARGARRAY\");\n                    if (cchLength == iVar5) {\n                        if (cchLength != 0) {\n                            iVar5 = cchLength;\n                            do {\n                                cVar1 = *pcVar9;\n                                var_8h = cVar1;\n                                cVar2 = *(lpsz + -0x4c7280 + pcVar9);\n                                piVar7 = var_4h;\n                                if (cVar2 != cVar1) {\n                                    iVar5 = (-(cVar2 < cVar1) & 0xfffffffe) + 1;\n                                    goto code_r0x00485745;\n                                }\n                                pcVar9 = pcVar9 + 1;\n                                iVar5 = iVar5 + -1;\n                            } while (iVar5 != 0);\n                        }\n                        iVar5 = 0;\ncode_r0x00485745:\n                        if (iVar5 == 0) {\n                            iVar5 = 1;\n                            while( true ) {\n                                iVar6 = fcn.0041e703(1);\n                                if (iVar6 <= iVar5) break;\n                                arg_8h_00 = fcn.00411df0(piVar7, 2, 1);\n                                fcn.00466fef(arg_8h_00);\n                                iVar5 = iVar5 + 1;\n                            }\n                            *arg_ch = var_20h;\n                            fcn.0046638b(&var_28h);\n                            fcn.0040b1ff();\n                            goto code_r0x004857a8;\n                        }\n                    }\n                    fcn.0040b1ff();\n                }\n            }\n        }\n    }\n    uVar8 = 0xffffffff;\ncode_r0x004857a8:\n    var_28h = 0x49d100;\n    fcn.00466f23();\n    fcn.0041fd94(var_24h);\n    return uVar8;\n}\n",
        "token_count": 922
    },
    "00485b33": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00485b33(int32_t arg_8h, int32_t *arg_ch, int32_t **arg_10h, uint *arg_14h, int32_t *arg_18h)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t *arg_8h_00;\n    int32_t *extraout_ECX;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 10);\n    uVar3 = fcn.00402522(*arg_ch, arg_18h);\n    iVar4 = 1;\n    *arg_14h = uVar3;\n    if (1 < *arg_18h) {\n        do {\n            uVar3 = fcn.00402522(*arg_ch, 0);\n            arg_14h[iVar4] = uVar3;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < *arg_18h);\n    }\n    fcn.00407d93();\n    if (arg_10h[3] == 0x5) {\n        arg_8h_00 = *arg_10h;\n    }\n    else {\n        arg_8h_00 = NULL;\n    }\n    iVar4 = 0;\n    *(*arg_8h_00 + 0x210) = 0;\n    if (0 < *arg_18h) {\n        do {\n            fcn.004084b9(arg_14h[iVar4]);\n            iVar4 = iVar4 + 1;\n            arg_8h_00 = extraout_ECX;\n        } while (iVar4 < *arg_18h);\n    }\n    cVar2 = fcn.004083e0(arg_8h_00, 0);\n    if (cVar2 == '\\0') {\n        fcn.004734ba(0x82, iVar1);\n        uVar3 = 0xffffffff;\n    }\n    else {\n        *arg_ch = *arg_ch + 1;\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 491
    },
    "00485c5a": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n\nvoid __cdecl fcn.00485c5a(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint *var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    iVar3 = *(arg_8h + 4);\n    var_34h = 0x1;\n    var_18h = 1;\n    iVar6 = *arg_ch;\n    iVar5 = iVar6 + 1;\n    var_24h = 0;\n    var_1ch = 0;\n    *arg_ch = iVar5;\n    piVar4 = *(iVar3 + iVar5 * 4);\n    var_8h = 0xb;\n    if ((*(piVar4 + 2) == 0) && (*piVar4 == 0x10)) {\n        iVar6 = iVar6 + 2;\n        iVar8 = *(iVar3 + iVar6 * 4);\n        *arg_ch = iVar6;\n        iVar1 = *(iVar8 + 8);\n        if (iVar1 == 0x49) {\ncode_r0x00485cfc:\n            var_8h = 0xb;\n        }\n        else if (iVar1 == 0x4a) {\n            var_8h = 0xc;\n        }\n        else {\n            iVar6 = iVar5;\n            if (iVar1 != 0x4c) goto code_r0x00485cfc;\n            fcn.0040e8a0();\n            iVar6 = *arg_ch;\n            var_24h = 1;\n            iVar3 = *(arg_8h + 4);\n            var_8h = 0xd;\n        }\n        var_18h = 1;\n        *arg_ch = iVar6 + 1;\n        piVar4 = *(iVar3 + (iVar6 + 1) * 4);\n        if (*(piVar4 + 2) != 5) goto code_r0x00485e23;\n        puVar2 = *piVar4;\n        fcn.0040e8a0();\n        *arg_ch = *arg_ch + 1;\n        iVar5 = *arg_ch;\n        iVar3 = *(arg_8h + 4);\n        var_34h = puVar2;\n    }\n    while( true ) {\n        puVar2 = *(iVar3 + iVar5 * 4);\n        if (*(puVar2 + 2) != 0x33) break;\n        uVar7 = *puVar2;\n        iVar6 = -1;\n        *arg_ch = iVar5 + 1;\n        iVar8 = 0x33;\n        if (*(*(iVar3 + (iVar5 + 1) * 4) + 8) == 0x41) {\n            iVar8 = -1;\n            *arg_ch = iVar5 + 2;\n            iVar3 = fcn.00410540(arg_8h, arg_ch, &fcn.00485c5a::var_24h, 0xffffffff);\n            if (iVar3 < 0) {\n                uVar7 = 0x6e;\n                goto code_r0x00485e31;\n            }\n        }\n        iVar6 = iVar8;\n        var_34h = &fcn.00485c5a::var_10h;\n        iVar3 = fcn.0041da6c(uVar7, var_34h, arg_10h);\n        if (iVar3 != 0) {\n            uVar7 = 0xa3;\n            goto code_r0x00485e31;\n        }\n        fcn.0040c117(0x485da0, &fcn.00485c5a::var_24h, 0x100, arg_10h);\n        if (var_8h == 0xb) {\n            fcn.0040cb70(&fcn.00485c5a::var_34h);\n        }\n        else if (var_8h == 0xc) {\n            fcn.0041b4a2(&fcn.00485c5a::var_34h);\n        }\n        else if (var_8h == 0xd) {\n            fcn.0041b451(&fcn.00485c5a::var_34h);\n        }\n        iVar3 = *(arg_8h + 4);\n        iVar1 = *(*(iVar3 + *arg_ch * 4) + 8);\n        if (iVar1 == 0x7f) goto code_r0x00485e39;\n        if (iVar1 != 0x40) {\n            uVar7 = 0x7f;\n            goto code_r0x00485e31;\n        }\n        iVar5 = *arg_ch + 1;\n        *arg_ch = iVar5;\n    }\n    piVar4 = *(iVar3 + iVar5 * 4);\ncode_r0x00485e23:\n    uVar7 = 0x9d;\n    iVar6 = *(piVar4 + 10);\ncode_r0x00485e31:\n    fcn.004734ba(uVar7, iVar6);\ncode_r0x00485e39:\n    fcn.0040e8a0();\n    fcn.0040e8a0();\n    return;\n}\n",
        "token_count": 1270
    },
    "004878dd": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004878dd(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *arg_8h_00;\n    int32_t *extraout_ECX;\n    uint uVar5;\n    int32_t iStackY320;\n    uint auStack284 [64];\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_18h = 0;\n    var_10h = 0;\n    var_ch = 1;\n    iVar3 = *arg_ch;\n    var_4h = 0;\n    var_8h = *(*(*(arg_8h + 4) + -4 + iVar3 * 4) + 10);\n    uVar5 = 0xffffffff;\n    iVar1 = *(*(*(arg_8h + 4) + iVar3 * 4) + 8);\n    iVar2 = var_4h;\n    do {\n        var_4h = iVar2;\n        if (iVar1 != 0x4e) {\n            if ((*arg_10h)[3] == 0x5) {\n                arg_8h_00 = **arg_10h;\n            }\n            else {\n                arg_8h_00 = NULL;\n            }\n            iVar3 = 0;\n            *(*arg_8h_00 + 0x210) = 0;\n            if (0 < iVar2) {\n                do {\n                    fcn.004084b9(auStack284[iVar3]);\n                    iVar3 = iVar3 + 1;\n                    arg_8h_00 = extraout_ECX;\n                } while (iVar3 < iVar2);\n            }\n            iVar3 = fcn.00411df0(arg_8h_00, arg_14h, 0);\n            *arg_10h = iVar3;\n            if (iVar3 == 0) {\n                fcn.004734ba(0x7a, var_8h);\n                uVar5 = 0xffffffff;\n            }\n            else {\n                uVar5 = 0;\n            }\ncode_r0x00487a19:\n            fcn.0040e8a0();\n            return uVar5;\n        }\n        *arg_ch = iVar3 + 1;\n        iVar1 = *(*(*(arg_8h + 4) + (iVar3 + 1) * 4) + 10);\n        iVar3 = fcn.00410540(arg_8h, arg_ch, &var_18h, 0xffffffff);\n        if (iVar3 < 0) goto code_r0x00487a19;\n        iVar3 = fcn.0040ce67();\n        if (iVar3 < 0) {\ncode_r0x004879ba:\n            iStackY320 = iVar1;\n            fcn.004734ba(0x7b, iStackY320);\n            goto code_r0x00487a19;\n        }\n        iVar3 = *arg_ch;\n        if (*(*(*(arg_8h + 4) + iVar3 * 4) + 8) != 0x4f) {\n            iVar1 = *(*(*(arg_8h + 4) + -4 + iVar3 * 4) + 10);\n            goto code_r0x004879ba;\n        }\n        *arg_ch = iVar3 + 1;\n        uVar4 = fcn.0040ce67();\n        iVar3 = *arg_ch;\n        auStack284[var_4h] = uVar4;\n        var_4h = var_4h + 1;\n        iVar1 = *(*(*(arg_8h + 4) + iVar3 * 4) + 8);\n        iVar2 = var_4h;\n    } while( true );\n}\n",
        "token_count": 881
    },
    "0048f5f3": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048f5f3(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t hWnd;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar2 = fcn.0048f4b0(arg_8h);\n    hWnd = 1;\n    if (cVar2 == '\\0') {\ncode_r0x0048f687:\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        var_8h = 1;\n        uVar1 = *(arg_8h + 8);\n        var_4h = 0xffffffff;\n        arg_8h = 0xffffffff;\n        if (6 < uVar1) {\n            arg_8h = fcn.0040ce67();\n        }\n        if (5 < uVar1) {\n            var_4h = fcn.0040ce67();\n        }\n        if (4 < uVar1) {\n            var_8h = fcn.0040ce67();\n        }\n        iVar3 = hWnd;\n        if (3 < uVar1) {\n            fcn.00408e90();\n            iVar3 = fcn.0046e1cb();\n        }\n        if (iVar3 == 1) {\n            hWnd = 0;\n        }\n        else if (iVar3 == 2) {\n            hWnd = 2;\n        }\n        else if (iVar3 != 3) goto code_r0x0048f687;\n        fcn.00461845(hWnd, var_8h, var_4h, arg_8h);\n        fcn.0046e899();\n    }\n    return 0;\n}\n",
        "token_count": 412
    },
    "0049070f": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0049070f(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    cVar2 = fcn.0048f4b0(arg_8h);\n    if (cVar2 == '\\0') {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else if ((*(arg_8h + 8) < 5) || (iVar3 = fcn.0040ce67(),  iVar3 == 0)) {\n        uVar1 = **(in_ECX + 0x2ec);\n        iVar3 = *(*(arg_8h + 4) + 0xc);\n        fcn.00408e90();\n        fcn.0046a0e3(*(iVar3 + 8), uVar1);\n    }\n    else {\n        uVar1 = **(in_ECX + 0x2ec);\n        iVar3 = *(*(arg_8h + 4) + 0xc);\n        fcn.00408e90();\n        fcn.0046a2b4(*(iVar3 + 8), uVar1);\n    }\n    return 0;\n}\n",
        "token_count": 297
    },
    "0041d6fa": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint16_t __fastcall fcn.0041d6fa(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    \n    uVar1 = *(param_1 + 8) - 0x30;\n    return uVar1 & 0xff00 | 1 - (0xf < uVar1);\n}\n",
        "token_count": 73
    },
    "0043c577": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043c577(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    int16_t **ppiVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int16_t *piVar8;\n    int16_t **ppiVar9;\n    uint32_t uVar10;\n    int16_t **ppiVar11;\n    int32_t var_30h;\n    uint var_2ch;\n    int16_t **var_28h;\n    int16_t **var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    ushort var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4cc014 ^ &stack0xfffffffc;\n    if (arg_ch == NULL) {\n        puVar5 = fcn.0042f269();\n        *puVar5 = 0x16;\n        fcn.0043277c();\n    }\n    else {\n        *arg_ch = 0;\n        var_1ch = 0;\n        var_28h = NULL;\n        var_24h = NULL;\n        var_20h = 0;\n        iVar6 = *arg_8h;\n        ppiVar11 = var_28h;\n        ppiVar4 = var_24h;\n        while (var_28h = ppiVar11,  var_24h = ppiVar4,  iVar6 != 0) {\n            var_ch = 0x3f002a;\n            var_8h = 0;\n            iVar6 = fcn.00431506(*arg_8h, &var_ch);\n            if (iVar6 == 0) {\n                iVar6 = fcn.0043c242(*arg_8h, 0, 0, &var_28h);\n            }\n            else {\n                iVar6 = fcn.0043c2e0(*arg_8h, iVar6, &var_28h);\n            }\n            if (iVar6 != 0) goto code_r0x0043c21a;\n            arg_8h = arg_8h + 1;\n            ppiVar11 = var_28h;\n            ppiVar4 = var_24h;\n            iVar6 = *arg_8h;\n        }\n        var_14h = 0;\n        var_10h = 0;\n        var_18h = (ppiVar4 - ppiVar11 >> 2) + 1;\n        uVar10 = ~-(ppiVar4 < ppiVar11) & (ppiVar4 - ppiVar11) + 3U >> 2;\n        if (uVar10 != 0) {\n            var_14h = 0;\n            ppiVar9 = ppiVar11;\n            do {\n                piVar8 = *ppiVar9;\n                piVar1 = piVar8 + 1;\n                do {\n                    iVar2 = *piVar8;\n                    piVar8 = piVar8 + 1;\n                } while (iVar2 != var_1ch);\n                ppiVar9 = ppiVar9 + 1;\n                var_14h = var_14h + 1 + (piVar8 - piVar1 >> 1);\n                var_10h = var_10h + 1;\n            } while (var_10h != uVar10);\n        }\n        iVar6 = fcn.00431963(var_18h, var_14h, 2);\n        if (iVar6 != 0) {\n            var_30h = iVar6 + var_18h * 4;\n            var_18h = var_30h;\n            if (ppiVar11 != ppiVar4) {\n                var_ch = iVar6 - ppiVar11;\n                do {\n                    piVar8 = *ppiVar11;\n                    piVar1 = piVar8 + 1;\n                    do {\n                        iVar2 = *piVar8;\n                        piVar8 = piVar8 + 1;\n                    } while (iVar2 != var_1ch);\n                    var_10h = (piVar8 - piVar1 >> 1) + 1;\n                    iVar7 = fcn.00434e20(var_18h, var_14h - (var_18h - var_30h >> 1), *ppiVar11, var_10h);\n                    if (iVar7 != 0) {\n                        fcn.0043278c(0, 0, 0, 0, 0);\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                    *(var_ch + ppiVar11) = var_18h;\n                    ppiVar11 = ppiVar11 + 1;\n                    var_18h = var_18h + var_10h * 2;\n                } while (ppiVar11 != ppiVar4);\n            }\n            *arg_ch = iVar6;\n            iVar6 = 0;\n        }\n        fcn.00432958(iVar6);\ncode_r0x0043c21a:\n        fcn.0043c496();\n    }\n    fcn.00420a0c(var_30h);\n    return;\n}\n",
        "token_count": 1234
    },
    "0049a1f1": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049a1f1(uint hDlg, uint32_t wParam, uint32_t arg_10h, int32_t lParam)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0041b021(hDlg);\n    iVar1 = **(*0x4d1910 + iVar1 * 4);\n    uVar2 = wParam & 0xfff0;\n    if (uVar2 == 0xf000) {\n        *(iVar1 + 0x184) = 1;\n    }\n    else {\n        if (uVar2 == 0xf020) {\n            fcn.00492bc6(0xfffffffc, iVar1, 0, 0);\n            fcn.004976d2();\n        }\n        else if (uVar2 == 0xf030) {\n            fcn.00492bc6(0xfffffffa, iVar1, 0, 0);\n        }\n        else {\n            if (uVar2 == 0xf060) {\n                fcn.00492bc6(0xfffffffd, iVar1, 0, 0);\n                return;\n            }\n            if (uVar2 != 0xf120) goto code_r0x0049a290;\n            fcn.00492bc6(0xfffffffb, iVar1, 0, 0);\n        }\n        if ((*0x4d18c0 & 1) != 0) {\n            return;\n        }\n    }\ncode_r0x0049a290:\n    (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x112, wParam, arg_10h & 0xffff | lParam << 0x10);\n    return;\n}\n",
        "token_count": 380
    },
    "004023e8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004023e8(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.0040240a();\n    if ((arg_8h & 1) != 0) {\n        fcn.0041fd4d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "004024cd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004024cd(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    *in_ECX = 0x49cde8;\n    if (in_ECX[2] != 0) {\n        do {\n            fcn.0041fd4d(*(in_ECX[1] + uVar1 * 4));\n            *(in_ECX[1] + uVar1 * 4) = 0;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < in_ECX[2]);\n    }\n    in_ECX[2] = 0;\n    fcn.0041fd94(in_ECX[1]);\n    if ((arg_8h & 1) != 0) {\n        fcn.0041fd4d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "00405c2b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c2b(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    if ((arg_8h & 2) == 0) {\n        *in_ECX = 0x49d114;\n        fcn.00405fc0();\n        fcn.0041fd94(in_ECX[1]);\n        if ((arg_8h & 1) != 0) {\n            fcn.0041fd4d(in_ECX);\n        }\n    }\n    else {\n        fcn.00405f7b(in_ECX, 0x10, in_ECX[-1], 0x405fa5);\n        if ((arg_8h & 1) != 0) {\n            fcn.00420038(in_ECX + -1);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "0041ccf0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041ccf0(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint *in_EDX;\n    uint32_t uVar5;\n    ushort *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    ulong uVar9;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar7 = arg_14h;\n    if (0xff < arg_14h) {\n        uVar7 = 0xff;\n    }\n    var_4h = 0;\n    uVar8 = arg_10h;\n    uVar2 = arg_14h;\n    var_ch = in_EDX;\n    var_8h = in_ECX;\n    if ((arg_8h & 1) != 0) {\n        if ((arg_8h & 0x800) == 0) {\n            if (arg_10h <= uVar7) {\n                var_4h = (uVar7 - arg_10h) + 1;\n                uVar5 = arg_10h;\n                do {\n                    uVar1 = *(*(arg_ch + 4) + uVar5);\n                    uVar4 = uVar1 >> 3;\n                    uVar5 = uVar5 + 1;\n                    *(uVar4 + in_ECX) = *(uVar4 + in_ECX) | 1 << (uVar1 & 7);\n                } while (uVar5 <= uVar7);\n            }\n        }\n        else {\n            arg_8h = arg_8h & 0xfffffffe;\n            uVar5 = arg_10h;\n            uVar4 = arg_10h;\ncode_r0x0045c080:\n            while (arg_10h = uVar4,  uVar8 = uVar5,  iVar3 = fcn.0049adc5(&var_10h, &var_14h),  -1 < iVar3) {\n                if (0 < iVar3) {\n                    iVar3 = fcn.0049a3fd(arg_8h, arg_ch, iVar3 * 4 + 0x4b0a90, var_10h);\n                    goto code_r0x0045c110;\n                }\n                if (var_10h < uVar8) goto code_r0x0045c0eb;\n                uVar5 = uVar8;\n                uVar4 = arg_10h;\n                if (uVar2 < var_14h) goto code_r0x0045c0ca;\n            }\n        }\n    }\n    if (((arg_8h & 0x800) == 0) && (0xffff < uVar2)) {\n        arg_14h = 0xffff;\n        uVar2 = 0xffff;\n    }\n    uVar5 = uVar8;\n    if (uVar8 <= uVar7) {\n        var_4h = var_4h + 1 + (uVar7 - uVar8);\n        do {\n            uVar5 = uVar8 >> 3;\n            uVar2 = uVar8 & 7;\n            uVar8 = uVar8 + 1;\n            *(uVar5 + var_8h) = *(uVar5 + var_8h) | 1 << uVar2;\n            uVar5 = arg_10h;\n            uVar2 = arg_14h;\n        } while (uVar8 <= uVar7);\n    }\n    if (uVar5 < 0x100) {\n        uVar5 = 0x100;\n    }\n    if (uVar2 < uVar5) {\n        return var_4h;\n    }\n    puVar6 = *var_ch;\n    if ((arg_8h & 0x800) == 0) {\n        if (uVar5 < uVar2) {\n            *puVar6 = 2;\n            puVar6[1] = uVar5;\n            puVar6 = puVar6 + 2;\n            *puVar6 = uVar2;\n        }\n        else {\n            if (uVar5 != uVar2) goto code_r0x0045c1db;\n            *puVar6 = 1;\n            puVar6 = puVar6 + 1;\n            *puVar6 = uVar5;\n        }\n        puVar6 = puVar6 + 1;\n    }\n    else {\n        if (uVar5 < uVar2) {\n            *puVar6 = 2;\n            fcn.0049b8c1();\n        }\n        else {\n            if (uVar5 != uVar2) goto code_r0x0045c1db;\n            *puVar6 = 1;\n        }\n        uVar9 = fcn.0049b8c1();\n        puVar6 = (uVar9 >> 0x20) + uVar9 * 2;\n    }\ncode_r0x0045c1db:\n    *var_ch = puVar6;\n    return var_4h;\ncode_r0x0045c0eb:\n    uVar5 = var_10h;\n    uVar4 = var_10h;\n    if (var_14h < uVar8 - 1) {\ncode_r0x0045c0ca:\n        if ((uVar2 < var_14h) && (var_10h <= uVar2 + 1)) {\n            arg_14h = var_14h;\n            uVar5 = uVar8;\n            uVar2 = var_14h;\n            uVar4 = arg_10h;\n            if ((uVar7 < var_14h) && (uVar7 = var_14h,  0xff < var_14h)) {\n                uVar7 = 0xff;\n            }\n        }\n        else {\n            iVar3 = fcn.0041ccf0(arg_8h, arg_ch, var_10h, var_14h);\ncode_r0x0045c110:\n            var_4h = var_4h + iVar3;\n            uVar5 = uVar8;\n            uVar4 = arg_10h;\n        }\n    }\n    goto code_r0x0045c080;\n}\n",
        "token_count": 1458
    },
    "0041d0dc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041d0dc(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint arg_10h;\n    int32_t iVar2;\n    uint16_t *in_ECX;\n    uint32_t uVar3;\n    int32_t in_EDX;\n    uint16_t uVar4;\n    int32_t iVar5;\n    ushort uVar6;\n    uint var_3ch;\n    uint32_t var_38h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = *in_ECX;\n    if (uVar4 < 0xa2) {\n        var_18h = 0x21;\n        var_1ch = 0x61;\n        var_10h = 0x10;\n        var_14h = 0xf;\n        var_ch = in_EDX;\n        do {\n            var_4h = uVar4;\n            if ((uVar4 < var_18h) || (var_1ch < uVar4)) {\n                if ((uVar4 == 0x6e) || ((uVar4 == 0x6f || (uVar4 == 0x70)))) {\n                    if (uVar4 == 0x70) {\n                        iVar5 = in_ECX[1] * 2;\n                    }\n                    else {\n                        iVar5 = 0x22;\n                    }\n                    uVar4 = *(iVar5 + in_ECX);\n                    in_EDX = var_ch;\n                    if (uVar4 - 0x62 < 8) {\n                        var_4h = uVar4;\n                        arg_10h = fcn.0041d449(*(arg_8h + 4), &var_3ch);\n                        in_EDX = var_ch;\n                        var_8h = 1000;\n                        var_38h = ~uVar4 & 1;\n                        iVar2 = fcn.0041d3b5(arg_8h, &var_3ch, arg_10h, &var_8h);\n                        if ((iVar2 != 0) && (uVar3 = (var_4h & 0xffff) - 0x62,  uVar3 < 8)) {\n    // switch table (8 cases) at 0x45c61a\n                            switch(*(uVar3 * 4 + 0x45c61a)) {\n                            case 0x45c5cb:\n                                uVar6 = 0x6a;\n                                break;\n                            case 0x45c5cf:\n                                uVar6 = 0x6d;\n                                break;\n                            case 0x45c5db:\n                                uVar6 = 0x6b;\n                                break;\n                            case 0x45c5df:\n                                uVar6 = 0x6c;\n                            }\n                            *(iVar5 + in_ECX) = uVar6;\n                        }\n                    }\n                    goto code_r0x0041d260;\n                }\n                goto code_r0x0041d14c;\n            }\n            iVar1 = fcn.0041d564();\n            uVar4 = uVar4 + (0x21 - iVar1);\n            if (uVar4 < 0x29) {\n                iVar5 = fcn.0041d449(*(arg_8h + 4), &var_3ch);\n            }\n            else {\n                iVar5 = 0;\n            }\n            if ((((uVar4 == 0x21) || (uVar4 == 0x23)) || (uVar4 == 0x25)) || (uVar4 == 0x27)) {\n                var_38h = 1;\n            }\n            else {\n                var_38h = 0;\n            }\n            var_8h = 1000;\n            if ((iVar5 == 0) || (iVar5 = fcn.0041d3b5(arg_8h, &var_3ch, iVar5, &var_8h),  iVar5 == 0))\n            goto code_r0x0041d260;\n    // switch table (16 cases) at 0x45c5fa\n            switch(uVar4) {\n            case 0x21:\n                *in_ECX = *in_ECX + 9;\n                break;\n            case 0x22:\n            case 0x23:\n                iVar1 = 8;\n                goto code_r0x0045c554;\n            case 0x24:\n            case 0x25:\n                *in_ECX = *in_ECX + 7;\n                break;\n            case 0x26:\n            case 0x27:\n                iVar1 = 6;\ncode_r0x0045c554:\n                *in_ECX = *in_ECX + iVar1;\n                break;\n            case 0x28:\n                *in_ECX = *in_ECX + 5;\n            }\ncode_r0x0041d260:\n            uVar4 = *in_ECX;\ncode_r0x0041d14c:\n            uVar3 = uVar4;\n            if (uVar3 < 0x71) {\n                if (uVar3 == 0x70) goto code_r0x0045c5e3;\n                if (uVar3 < 0x5e) {\n                    if (0x5a < uVar3) {\ncode_r0x0041d2f7:\n                        uVar4 = in_ECX[2];\n                        goto code_r0x0041d2cf;\n                    }\n                    if (uVar3 == 0) {\n                        return;\n                    }\n                    if ((0x54 < uVar3) && (uVar3 < 0x5b)) goto code_r0x0041d2cb;\n                }\n                else {\n                    if (0x60 < uVar3) {\n                        if (uVar3 != 0x61) goto code_r0x0041d17c;\n                        goto code_r0x0041d2f7;\n                    }\ncode_r0x0041d2cb:\n                    uVar4 = in_ECX[1];\ncode_r0x0041d2cf:\n                    if ((uVar4 == var_10h) || (uVar4 == var_14h)) {\n                        in_ECX = in_ECX + 2;\n                    }\n                }\n            }\n            else {\n                if (((uVar3 != 0x95) && (uVar3 != 0x97)) && ((uVar3 != 0x99 && (uVar3 != 0x9b)))) goto code_r0x0041d17c;\ncode_r0x0045c5e3:\n                in_ECX = in_ECX + in_ECX[1];\n            }\ncode_r0x0041d17c:\n            in_ECX = in_ECX + *(uVar3 + 0x4c2160);\n            if (((in_EDX != 0) && (uVar3 - 0x1d < 0x38)) && ((in_ECX[-1] & 0xfc00) == 0xd800)) {\n                in_ECX = in_ECX + 1;\n            }\n            uVar4 = *in_ECX;\n        } while (uVar4 < 0xa2);\n    }\n    return;\n}\n",
        "token_count": 1645
    },
    "0041e1d7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041e1d7(uint32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    uint8_t *in_EDX;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar3 = 0;\n    puVar2 = NULL;\n    if ((in_ECX == NULL) || (arg_ch == NULL)) {\n        return -2;\n    }\n    if ((in_EDX != NULL) && ((*in_EDX & 1) != 0)) {\n        puVar2 = *(in_EDX + 4);\n    }\n    if (*in_ECX != 0x50435245) {\n        return ((*in_ECX == 0x45524350) - 1 & 0x19) - 0x1d;\n    }\n    uVar1 = in_ECX[3];\n    if ((uVar1 & 2) == 0) {\n        return -0x1c;\n    }\n    if (0x19 < arg_8h) {\n        return -3;\n    }\n    // switch table (26 cases) at 0x41e257\n    switch(*(arg_8h * 4 + 0x41e257)) {\n    case 0x41e220:\n        uVar1 = *(in_ECX + 0x1e);\n        break;\n    case 0x41e230:\n        *arg_ch = 0x4b0bd0;\n        return 0;\n    case 0x41e242:\n        uVar1 = in_ECX[1];\n        break;\n    case 0x45ea7b:\n        uVar1 = in_ECX[2] & 0x27ff7a7f;\n        break;\n    case 0x45ea88:\n        if (puVar2 != NULL) {\n            uVar3 = *puVar2;\n        }\n        goto code_r0x0045ea97;\n    case 0x45ea9e:\n        goto code_r0x0045ea97;\n    case 0x45eaa3:\n        uVar1 = *(in_ECX + 8);\n        break;\n    case 0x45eaac:\n        if ((uVar1 & 0x10) == 0) {\n            uVar1 = uVar1 >> 8 | 0xfffffffe;\n        }\n        else {\n            uVar1 = *(in_ECX + 6);\n        }\n        break;\n    case 0x45eac7:\n        if ((uVar1 & 0x10) != 0) {\n            uVar3 = *(in_ECX + 6);\n        }\n        goto code_r0x0045ea97;\n    case 0x45ead4:\n        if ((uVar1 & 0x10) == 0) {\n            uVar1 = uVar1 >> 7 & 2;\n        }\n        else {\n            uVar1 = 1;\n        }\n        break;\n    case 0x45eaee:\n        if ((puVar2 != NULL) && ((*(puVar2 + 1) & 1) != 0)) {\n            uVar3 = *(in_EDX + 4) + 8;\n        }\n        goto code_r0x0045ea97;\n    case 0x45eb03:\n        if ((puVar2 != NULL) && ((*(puVar2 + 1) & 2) != 0)) {\n            uVar1 = puVar2[10];\n            break;\n        }\ncode_r0x0045eb18:\n        uVar1 = 0xffffffff;\n        break;\n    case 0x45eb20:\n        if (((in_EDX != NULL) && ((*in_EDX & 0x40) != 0)) && (*(in_EDX + 0x1c) != 0)) {\n            uVar3 = 1;\n        }\n        goto code_r0x0045ea97;\n    case 0x45eb45:\n        if ((uVar1 & 0x40) != 0) {\n            uVar1 = *(in_ECX + 0x1a);\n            break;\n        }\n        goto code_r0x0045eb18;\n    case 0x45eb55:\n        if ((uVar1 & 0x40) != 0) {\n            uVar3 = *(in_ECX + 0x1a);\n        }\ncode_r0x0045ea97:\n        *arg_ch = uVar3;\n        return 0;\n    case 0x45eb65:\n        uVar1 = uVar1 >> 6;\n        goto code_r0x0045ebd1;\n    case 0x45eb6a:\n        uVar1 = *(in_ECX + 9);\n        break;\n    case 0x45eb73:\n        uVar1 = *(in_ECX + 0x26);\n        break;\n    case 0x45eb7c:\n        uVar1 = in_ECX + *(in_ECX + 0x22) * 2;\n        break;\n    case 0x45eb88:\n        uVar1 = ~(uVar1 >> 9);\n        goto code_r0x0045ebd1;\n    case 0x45eb8f:\n        uVar1 = uVar1 >> 10;\n        goto code_r0x0045ebd1;\n    case 0x45eb94:\n        uVar1 = uVar1 >> 0xb;\n        goto code_r0x0045ebd1;\n    case 0x45eb99:\n        uVar1 = *(in_ECX + 7);\n        break;\n    case 0x45eba2:\n        if ((uVar1 & 0x2000) == 0) {\n            return -0x21;\n        }\n        uVar1 = in_ECX[4];\n        break;\n    case 0x45ebb4:\n        if ((uVar1 & 0x4000) == 0) {\n            return -0x21;\n        }\n        uVar1 = in_ECX[5];\n        break;\n    case 0x45ebce:\n        uVar1 = uVar1 >> 0xf;\ncode_r0x0045ebd1:\n        uVar1 = uVar1 & 1;\n    }\n    *arg_ch = uVar1;\n    return 0;\n}\n",
        "token_count": 1425
    },
    "004285bf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004285bf(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.00428401(8, 0);\n    return;\n}\n",
        "token_count": 90
    },
    "0043594e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043594e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004209b0(0x4c8c58, 0x14);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        puVar1 = fcn.0042f256();\n        *puVar1 = 0;\n        puVar1 = fcn.0042f269();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < lpCriticalSection) && (lpCriticalSection < *0x4d11e8)) {\n            iVar3 = (lpCriticalSection & 0x3f) * 0x30;\n            *(unaff_EBP + -0x20) = iVar3;\n            if ((*(*((lpCriticalSection >> 6) * 4 + 0x4d0fe8) + 0x28 + iVar3) & 1) != 0) {\n                fcn.004350d7(lpCriticalSection);\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((lpCriticalSection >> 6) * 4 + 0x4d0fe8) + 0x28 + *(unaff_EBP + -0x20)) & 1) == 0) {\n                    puVar1 = fcn.0042f269();\n                    *puVar1 = 9;\n                    puVar1 = fcn.0042f256();\n                    *puVar1 = 0;\n                }\n                else {\n                    uVar2 = fcn.00435a39(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00435a10();\n                goto code_r0x00435a33;\n            }\n        }\n        puVar1 = fcn.0042f256();\n        *puVar1 = 0;\n        puVar1 = fcn.0042f269();\n        *puVar1 = 9;\n        fcn.0043277c();\n    }\ncode_r0x00435a33:\n    fcn.004209f6();\n    return;\n}\n",
        "token_count": 615
    },
    "0043600b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043600b(uint32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    arg_8h_00 = fcn.0042d8e5(arg_ch);\n    if ((arg_ch[3] & 6) == 0) {\n        puVar2 = fcn.0042f269();\n        *puVar2 = 9;\n    }\n    else {\n        if ((arg_ch[3] >> 0xc & 1) == 0) {\n            if ((arg_ch[3] & 1) != 0) {\n                arg_ch[2] = 0;\n                if ((arg_ch[3] >> 3 & 1) == 0) goto code_r0x00435c6f;\n                *arg_ch = arg_ch[1];\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffffe;\n            }\n            LOCK();\n            arg_ch[3] = arg_ch[3] | 2;\n            LOCK();\n            arg_ch[3] = arg_ch[3] & 0xfffffff7;\n            arg_ch[2] = 0;\n            if (((arg_ch[3] & 0x4c0) == 0) &&\n               (((puVar2 = fcn.004290c1(1),  arg_ch != puVar2 && (puVar2 = fcn.004290c1(2),  arg_ch != puVar2)) ||\n                (iVar3 = fcn.0043f83c(arg_8h_00),  iVar3 == 0)))) {\n                fcn.0043fd65(arg_ch);\n            }\n            cVar1 = fcn.00435e6b(arg_8h, arg_ch);\n            if (cVar1 == '\\0') {\n                LOCK();\n                arg_ch[3] = arg_ch[3] | 0x10;\n                return 0xffffffff;\n            }\n            return arg_8h & 0xff;\n        }\n        puVar2 = fcn.0042f269();\n        *puVar2 = 0x22;\n    }\ncode_r0x00435c6f:\n    LOCK();\n    arg_ch[3] = arg_ch[3] | 0x10;\n    return 0xffffffff;\n}\n",
        "token_count": 531
    },
    "00436016": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00436016(uint32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    arg_8h_00 = fcn.0042d8e5(arg_ch);\n    if ((arg_ch[3] & 6) == 0) {\n        puVar2 = fcn.0042f269();\n        *puVar2 = 9;\n    }\n    else {\n        if ((arg_ch[3] >> 0xc & 1) == 0) {\n            if ((arg_ch[3] & 1) != 0) {\n                arg_ch[2] = 0;\n                if ((arg_ch[3] >> 3 & 1) == 0) goto code_r0x00435d80;\n                *arg_ch = arg_ch[1];\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffffe;\n            }\n            LOCK();\n            arg_ch[3] = arg_ch[3] | 2;\n            LOCK();\n            arg_ch[3] = arg_ch[3] & 0xfffffff7;\n            arg_ch[2] = 0;\n            if (((arg_ch[3] & 0x4c0) == 0) &&\n               (((puVar2 = fcn.004290c1(1),  arg_ch != puVar2 && (puVar2 = fcn.004290c1(2),  arg_ch != puVar2)) ||\n                (iVar3 = fcn.0043f83c(arg_8h_00),  iVar3 == 0)))) {\n                fcn.0043fd65(arg_ch);\n            }\n            cVar1 = fcn.00435f37(arg_8h, arg_ch);\n            if (cVar1 == '\\0') {\n                LOCK();\n                arg_ch[3] = arg_ch[3] | 0x10;\n                return 0xffff;\n            }\n            return arg_8h & 0xffff;\n        }\n        puVar2 = fcn.0042f269();\n        *puVar2 = 0x22;\n    }\ncode_r0x00435d80:\n    LOCK();\n    arg_ch[3] = arg_ch[3] | 0x10;\n    return 0xffff;\n}\n",
        "token_count": 527
    },
    "00436021": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00436021(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    uint uVar4;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.004209b0();\n    uVar4 = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.004350d7(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = ***(unaff_EBP + 0xc);\n    if ((*(*((arg_8h_00 >> 6) * 4 + 0x4d0fe8) + 0x28 + (arg_8h_00 & 0x3f) * 0x30) & 1) != 0) {\n        uVar1 = fcn.00435354(arg_8h_00);\n        iVar2 = (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(uVar1);\n        if (iVar2 != 0) goto code_r0x00436091;\n        puVar3 = fcn.0042f256();\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        *puVar3 = uVar4;\n    }\n    puVar3 = fcn.0042f269();\n    *puVar3 = 9;\n    uVar4 = 0xffffffff;\ncode_r0x00436091:\n    *(unaff_EBP + -0x1c) = uVar4;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004360ad(0x4c8c78, noname_1, unaff_retaddr);\n    fcn.004209f6();\n    return;\n}\n",
        "token_count": 480
    },
    "00438525": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00438525(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    uint *puVar2;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.004209b0();\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.004350d7(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = ***(unaff_EBP + 0xc);\n    if ((*(*((arg_8h_00 >> 6) * 4 + 0x4d0fe8) + 0x28 + (arg_8h_00 & 0x3f) * 0x30) & 1) == 0) {\n        puVar2 = fcn.0042f269();\n        *puVar2 = 9;\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = fcn.0043864e(arg_8h_00);\n    }\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0043859b(0x4c8cd8, noname_1, unaff_retaddr);\n    fcn.004209f6();\n    return;\n}\n",
        "token_count": 380
    },
    "004385cf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004385cf(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_4h;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar1 = fcn.0042f256();\n        *puVar1 = 0;\n        puVar1 = fcn.0042f269();\n        *puVar1 = 9;\n    }\n    else {\n        if (((-1 < arg_8h) && (arg_8h < *0x4d11e8)) &&\n           ((*(*((arg_8h >> 6) * 4 + 0x4d0fe8) + 0x28 + (arg_8h & 0x3f) * 0x30) & 1) != 0)) {\n            var_4h = &arg_8h;\n            uVar2 = fcn.004385a7(arg_8h, &var_4h);\n            return uVar2;\n        }\n        puVar1 = fcn.0042f256();\n        *puVar1 = 0;\n        puVar1 = fcn.0042f269();\n        *puVar1 = 9;\n        fcn.0043277c();\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 295
    },
    "00473186": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00473186(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    \n    fcn.00402d1b();\n    iVar1 = in_ECX[2];\n    *in_ECX = 0x49cdfc;\n    while (iVar1 != 0) {\n        iVar1 = *(iVar1 + 0x38);\n        fcn.004032ee();\n    }\n    if ((arg_8h & 1) != 0) {\n        fcn.0041fd4d(in_ECX + -0x11b);\n    }\n    return in_ECX + -0x11b;\n}\n",
        "token_count": 151
    },
    "0045f494": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f494(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x49cdc8;\n    if ((arg_8h & 1) != 0) {\n        fcn.0041fd4d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 76
    },
    "00460a75": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460a75(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x49d0fc;\n    fcn.00408320();\n    fcn.0041fd94(in_ECX[1]);\n    if ((arg_8h & 1) != 0) {\n        fcn.0041fd4d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0046359e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004636ee)\n// WARNING: Removing unreachable block (ram,0x00463721)\n\nuint __cdecl fcn.0046359e(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t arg_10h;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t unaff_EBX;\n    uint32_t uVar6;\n    int32_t unaff_ESI;\n    uint32_t uVar7;\n    bool bVar8;\n    int32_t iStack2608;\n    int32_t iStack2604;\n    int32_t iStack2600;\n    int32_t aiStack2596 [3];\n    uchar auStack2584 [500];\n    uchar auStack2084 [8];\n    uchar auStack2076 [4];\n    uchar auStack2072 [4];\n    uchar auStack2068 [2064];\n    \n    uVar6 = 0;\n    uVar7 = 0;\n    uVar5 = *(arg_ch + 0x88);\n    if ((uVar5 & 8) == 0) {\n        if ((uVar5 & 0x400) != 0) {\n            iVar3 = fcn.0046b248(0x202, arg_8h);\n            if (iVar3 != 0) {\n                (*_sym.imp.USER32.dll_SendMessageTimeoutW)\n                          (arg_8h, *(arg_ch + 4), 0x101, iVar3, 2, 5000, &stack0xfffff5c8);\n                fcn.0046b2a9(unaff_EBX);\n            }\n            uVar5 = *(arg_ch + 0x88);\n            uVar7 = 1;\n            unaff_ESI = 1;\n        }\n        if ((uVar5 & 0x10) != 0) {\n            (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, auStack2072, 0x400);\n            fcn.0040b606(auStack2068);\n            *(arg_ch + 0xf0) = 1;\n            *(arg_ch + 0xec) = &iStack2608;\n            *(arg_ch + 0xfc) = iStack2604;\n            fcn.0040b1ff();\n            cVar1 = fcn.00469165();\n            uVar6 = cVar1 != '\\0';\n            uVar5 = *(arg_ch + 0x88);\n            uVar7 = unaff_ESI + 1;\n        }\n        if ((uVar5 & 0x20) == 0) {\n            if ((uVar5 & 0x3c0) != 0) {\n                (*_sym.imp.USER32.dll_GetWindowRect)(arg_8h, &iStack2608);\n                uVar4 = (*_sym.imp.USER32.dll_GetParent)(arg_8h, &stack0xfffff5c0);\n                (*_sym.imp.USER32.dll_ScreenToClient)(uVar4);\n                uVar5 = *(arg_ch + 0x88);\n                if ((uVar5 & 0x40) != 0) {\n                    if (*(arg_ch + 0xdc) == unaff_EBX) {\n                        uVar6 = uVar6 + 1;\n                    }\n                    uVar7 = uVar7 + 1;\n                }\n                if (uVar5 < '\\0') {\n                    if (*(arg_ch + 0xe0) == 0) {\n                        uVar6 = uVar6 + 1;\n                    }\n                    uVar7 = uVar7 + 1;\n                }\n                if ((uVar5 & 0x100) != 0) {\n                    if (*(arg_ch + 0xe4) == iStack2600 - iStack2608) {\n                        uVar6 = uVar6 + 1;\n                    }\n                    uVar7 = uVar7 + 1;\n                }\n                if ((uVar5 & 0x200) != 0) {\n                    if (*(arg_ch + 0xe8) == aiStack2596[0] - iStack2604) {\n                        uVar6 = uVar6 + 1;\n                    }\n                    uVar7 = uVar7 + 1;\n                }\n            }\n            if ((uVar5 & 1) != 0) {\n                (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, auStack2072, 0x100);\n                iVar3 = fcn.004251c2(*(arg_ch + 0x8c), auStack2072);\n                if (iVar3 == 0) {\n                    uVar6 = uVar6 + 1;\n                }\n                uVar5 = *(arg_ch + 0x88);\n                uVar7 = uVar7 + 1;\n            }\n            if ((uVar5 & 4) != 0) {\n                (*_sym.imp.USER32.dll_GetWindowTextW)(arg_8h, auStack2072, 0x400);\n                iVar3 = fcn.004251c2(*(arg_ch + 0xbc), auStack2084);\n                if (iVar3 == 0) {\n                    uVar6 = uVar6 + 1;\n                }\n                uVar5 = *(arg_ch + 0x88);\n                uVar7 = uVar7 + 1;\n            }\n            if ((uVar5 & 2) != 0) {\n                if ((uVar6 == uVar7) &&\n                   (*(arg_ch + 0x118) = *(arg_ch + 0x118) + 1,  *(arg_ch + 0x118) == *(arg_ch + 0xd0))) {\n                    uVar6 = uVar6 + 1;\n                }\n                uVar7 = uVar7 + 1;\n            }\n            bVar8 = uVar6 == uVar7;\n        }\n        else {\n            iVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(arg_8h);\n            bVar8 = *(arg_ch + 0xcc) == iVar3;\n        }\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetClassNameW)(arg_8h, auStack2584, 0x100);\n        arg_10h = fcn.004248f3(aiStack2596);\n        iVar3 = arg_10h;\n        if (arg_10h != 0) {\n            while ((iVar3 = iVar3 + -1,  -1 < iVar3 && (iVar2 = fcn.00426342(*(aiStack2596 + iVar3 * 2)),  iVar2 != 0)))\n            {\n                uVar6 = uVar6 + 1;\n            }\n        }\n        if (*(arg_ch + 0x11c) <= arg_10h) {\n            return 1;\n        }\n        if (*(arg_ch + 0x120) <= uVar6) {\n            return 1;\n        }\n        if (arg_10h != (*(arg_ch + 0x11c) - *(arg_ch + 0x120)) + uVar6) {\n            return 1;\n        }\n        iVar3 = fcn.0042637e(*(arg_ch + 0x9c), aiStack2596, arg_10h);\n        if (iVar3 != 0) {\n            return 1;\n        }\n        *(arg_ch + 0x118) = *(arg_ch + 0x118) + 1;\n        fcn.0041faa3(auStack2076, L\"%s%u\", aiStack2596);\n        iVar3 = fcn.004251c2(auStack2076, *(arg_ch + 0x9c));\n        bVar8 = iVar3 == 0;\n    }\n    if (!bVar8) {\n        return 1;\n    }\n    *(arg_ch + 0xd8) = arg_8h;\n    return 0;\n}\n",
        "token_count": 1758
    },
    "00463d68": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463d68(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x49ce08;\n    fcn.004030e0();\n    fcn.0041fd94(in_ECX[1]);\n    if ((arg_8h & 1) != 0) {\n        fcn.0041fd4d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "00464cba": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00464cba(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    \n    iVar1 = in_ECX[2];\n    *in_ECX = 0x49cdfc;\n    while (iVar1 != 0) {\n        iVar1 = *(iVar1 + 0x38);\n        fcn.004032ee();\n    }\n    if ((arg_8h & 1) != 0) {\n        fcn.0041fd4d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "00466006": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00466006(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4af374;\n    fcn.004661d4();\n    fcn.0041fd94(in_ECX[1]);\n    if ((arg_8h & 1) != 0) {\n        fcn.0041fd4d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "00466451": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00466451(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x49d100;\n    fcn.00466f23();\n    fcn.0041fd94(in_ECX[1]);\n    if ((arg_8h & 1) != 0) {\n        fcn.0041fd4d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "00466482": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00466482(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x49d104;\n    fcn.00466f52();\n    fcn.0041fd94(in_ECX[1]);\n    if ((arg_8h & 1) != 0) {\n        fcn.0041fd4d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0046941b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046941b(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x49ce0c;\n    fcn.00403109();\n    fcn.0041fd94(in_ECX[1]);\n    if ((arg_8h & 1) != 0) {\n        fcn.0041fd4d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0046a90b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0046a90b(uint32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint8_t uVar4;\n    uint32_t dwFlags;\n    uint var_4h;\n    \n    dwFlags = arg_8h & 0xff;\n    uVar2 = (*_sym.imp.USER32.dll_GetKeyState)(dwFlags);\n    pcVar1 = _sym.imp.USER32.dll_MapVirtualKeyW;\n    uVar4 = uVar2 & 1;\n    if (arg_ch != uVar4) {\n        uVar2 = dwFlags;\n        uVar3 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(dwFlags, 0, 0, extraout_ECX);\n        fcn.0046b144(arg_8h, uVar3, uVar2);\n        fcn.00469b7e();\n        uVar3 = (*pcVar1)(dwFlags, 0, 2, extraout_ECX_00);\n        fcn.0046b144(arg_8h, uVar3, dwFlags);\n        uVar2 = fcn.00469b67();\n    }\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 305
    },
    "0046b198": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046b198(uint arg_8h)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uchar *in_ECX;\n    \n    fcn.00469e9c();\n    *(in_ECX + 8) = arg_8h;\n    if (arg_8h != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_VkKeyScanW)(arg_8h);\n        uVar3 = uVar2 & 0xffff;\n        if (uVar3 != -1) {\n            *in_ECX = uVar3;\n            uVar3 = uVar3 >> 8;\n            uVar1 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(uVar2 & 0xff, 0);\n            in_ECX[7] = uVar1;\n            if ((uVar3 & 1) != 0) {\n                in_ECX[1] = 1;\n            }\n            if ((uVar3 & 2) != 0) {\n                in_ECX[3] = 1;\n            }\n            if ((uVar3 & 4) != 0) {\n                in_ECX[4] = 1;\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 293
    },
    "0046e814": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0046e814(uint32_t param_1, uint param_2)\n\n{\n    char cVar1;\n    uint extraout_ECX;\n    uint uVar2;\n    uint var_10h;\n    \n    fcn.0046cd88(L\"SeShutdownPrivilege\");\n    cVar1 = fcn.00461607(extraout_ECX);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else if ((param_1 == 0x20) || (param_1 == 0x40)) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_SetSystemPowerState)(param_1 == 0x20, 0);\n    }\n    else if ((param_1 & 0xb) == 0) {\n        uVar2 = (*_sym.imp.USER32.dll_ExitWindowsEx)(param_1, 0);\n    }\n    else {\n        uVar2 = (*_sym.imp.ADVAPI32.dll_InitiateSystemShutdownExW)\n                          (0, 0, 0, (param_1 & 0x14) != 0, param_1 >> 1 & 1, param_2);\n    }\n    fcn.00461003();\n    return uVar2;\n}\n",
        "token_count": 282
    },
    "00470108": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00470108(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4af394;\n    if ((arg_8h & 1) != 0) {\n        fcn.0041fd4d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "0047012b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047012b(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    \n    fcn.004700c3();\n    if ((arg_8h & 1) != 0) {\n        fcn.0041fd4d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00478f5d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00478f5d(uint32_t arg_8h, uint arg_ch)\n\n{\n    fcn.0040bfbf();\n    if ((arg_8h & 1) != 0) {\n        fcn.004052b7(str.RANOCT);\n    }\n    if ((arg_8h & 0x20) != 0) {\n        fcn.004052b7(str.RANOCT + 1);\n    }\n    if ((arg_8h & 4) != 0) {\n        fcn.004052b7(0x4c5968);\n    }\n    if ((arg_8h & 2) != 0) {\n        fcn.004052b7(L\"H\");\n    }\n    if (arg_8h < '\\0') {\n        fcn.004052b7(str.RANOCT + 2);\n    }\n    if ((arg_8h & 0x10) != 0) {\n        fcn.004052b7(0x4c596c);\n    }\n    if ((arg_8h & 0x1000) != 0) {\n        fcn.004052b7(str.RANOCT + 3);\n    }\n    if ((arg_8h & 0x800) != 0) {\n        fcn.004052b7(str.RANOCT + 4);\n    }\n    if ((arg_8h & 0x100) != 0) {\n        fcn.004052b7(str.RANOCT + 5);\n    }\n    if ((arg_8h & 0x4000) != 0) {\n        fcn.004052b7(L\"XYWH\");\n    }\n    return;\n}\n",
        "token_count": 378
    },
    "0047bc5c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0047bc5c(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint noname_6, \n            uint noname_7, uint noname_8, uint arg_2ch, uint noname_10, uint noname_11, uint noname_12, uint arg_3ch, \n            uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint arg_50h, uint noname_19, uint noname_20\n            , uint noname_21, uint arg_60h, uint noname_23, uint noname_24, uint noname_25, uint arg_70h, uint noname_27\n            , uint noname_28, uint noname_29, uint arg_80h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 0;\n    in_ECX[6] = 0;\n    in_ECX[7] = 0;\n    fcn.0040b606(arg_8h);\n    fcn.0040b606(arg_ch);\n    in_ECX[0x11] = 0x4af404;\n    in_ECX[0x12] = 0;\n    in_ECX[0x13] = 0;\n    in_ECX[0x14] = 0;\n    in_ECX[0x15] = 0;\n    fcn.0047bd61(&arg_18h);\n    *(in_ECX + 0x34) = arg_14h;\n    *0x4d2614 = *0x4d2614 + 1;\n    in_ECX[0x35] = 0;\n    in_ECX[0x36] = *0x4d2614;\n    *(in_ECX + 0x37) = 1;\n    *(in_ECX + 0xc) = in_ECX[0xe] == 0;\n    if ((arg_10h & 1) != 0) {\n        in_ECX[0x15] = in_ECX[0x15] | 0x80000000;\n    }\n    if ((arg_10h & 2) != 0) {\n        in_ECX[0x15] = in_ECX[0x15] | 0x3000;\n    }\n    if ((arg_10h & 0xc) == 4) {\n        in_ECX[0x15] = in_ECX[0x15] | 1;\n    }\n    if ((arg_10h & 0xc) == 8) {\n        in_ECX[0x15] = in_ECX[0x15] | 2;\n    }\n    if ((arg_10h & 0x10) != 0) {\n        *(in_ECX + 0x37) = 0;\n    }\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return;\n}\n",
        "token_count": 791
    },
    "0047bf25": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047bf25(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4af404;\n    fcn.0047d225();\n    fcn.0041fd94(in_ECX[1]);\n    if ((arg_8h & 1) != 0) {\n        fcn.0041fd4d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0047bf56": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0047bf56(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    \n    fcn.00403181();\n    iVar1 = in_ECX[2];\n    *in_ECX = 0x49cdfc;\n    while (iVar1 != 0) {\n        iVar1 = *(iVar1 + 0x38);\n        fcn.004032ee();\n    }\n    if ((arg_8h & 1) != 0) {\n        fcn.0041fd4d(in_ECX + -0x22);\n    }\n    return in_ECX + -0x22;\n}\n",
        "token_count": 148
    },
    "00487e4f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00487e4f(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4af408;\n    fcn.0048b420();\n    fcn.0041fd94(in_ECX[1]);\n    if ((arg_8h & 1) != 0) {\n        fcn.0041fd4d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0048d2c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048d2c0(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4af40c;\n    fcn.00468d7c();\n    fcn.0041fd94(in_ECX[1]);\n    if ((arg_8h & 1) != 0) {\n        fcn.0041fd4d(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "0041f370": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f370(uint noname_0, uint arg_ch)\n\n{\n    uint arg_8h;\n    double dStack192;\n    uint uStack184;\n    uint uStack180;\n    double dStack176;\n    uint uStack168;\n    uint uStack164;\n    double dStack160;\n    uint uStack152;\n    uint uStack148;\n    double dStack144;\n    uint uStack136;\n    uint uStack132;\n    double dStack128;\n    uint uStack120;\n    uint uStack116;\n    double dStack112;\n    uint uStack104;\n    uint uStack100;\n    double dStack96;\n    uint uStack88;\n    uint uStack84;\n    int32_t iStack76;\n    int64_t iStack72;\n    int64_t iStack64;\n    int64_t iStack56;\n    int64_t iStack48;\n    int64_t iStack40;\n    int64_t iStack32;\n    \n    (*_sym.imp.KERNEL32.dll_Sleep)(0);\n    iStack76 = 0x40;\n    (*_sym.imp.KERNEL32.dll_GlobalMemoryStatusEx)(&iStack76);\n    arg_8h = fcn.00407d93();\n    fcn.004083e0(arg_8h, 1);\n    dStack192 = iStack76;\n    if (iStack76 < 0) {\n        dStack192 = dStack192 + *0x4c81d0;\n    }\n    uStack184 = 0;\n    uStack180 = 3;\n    fcn.00408a30(arg_8h, &dStack192, 1);\n    fcn.0040e8a0();\n    dStack176 = iStack72 * *0x4b1110;\n    uStack168 = 0;\n    uStack164 = 3;\n    fcn.00408a30(arg_8h, &dStack176, 1);\n    fcn.0040e8a0();\n    dStack160 = iStack64 * *0x4b1110;\n    uStack152 = 0;\n    uStack148 = 3;\n    fcn.00408a30(arg_8h, &dStack160, 1);\n    fcn.0040e8a0();\n    dStack144 = iStack56 * *0x4b1110;\n    uStack136 = 0;\n    uStack132 = 3;\n    fcn.00408a30(arg_8h, &dStack144, 1);\n    fcn.0040e8a0();\n    dStack128 = iStack48 * *0x4b1110;\n    uStack120 = 0;\n    uStack116 = 3;\n    fcn.00408a30(arg_8h, &dStack128, 1);\n    fcn.0040e8a0();\n    dStack112 = iStack40 * *0x4b1110;\n    uStack104 = 0;\n    uStack100 = 3;\n    fcn.00408a30(arg_8h, &dStack112, 1);\n    fcn.0040e8a0();\n    dStack96 = iStack32 * *0x4b1110;\n    uStack88 = 0;\n    uStack84 = 3;\n    fcn.00408a30(arg_8h, &dStack96, 1);\n    fcn.0040e8a0();\n    return 0;\n}\n",
        "token_count": 769
    },
    "004662a2": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004662a2(uint arg_8h, int32_t *arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t *in_ECX;\n    int32_t iVar4;\n    int32_t *var_4h;\n    \n    iVar4 = 0;\n    *in_ECX = 0x4c6018;\n    ppiVar1 = in_ECX + 8;\n    in_ECX[1] = 0;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    *ppiVar1 = NULL;\n    in_ECX[9] = 1;\n    in_ECX[10] = *arg_ch;\n    in_ECX[0xb] = arg_ch[1];\n    in_ECX[0xc] = arg_ch[2];\n    piVar2 = arg_ch[3];\n    in_ECX[0xd] = piVar2;\n    *piVar2 = *piVar2 + 1;\n    in_ECX[0xe] = arg_18h;\n    in_ECX[0xf] = arg_14h;\n    in_ECX[0x12] = 0;\n    var_4h = in_ECX;\n    fcn.004119e0(arg_8h);\n    if (in_ECX[0x13] == 8) {\n        iVar4 = in_ECX[0x10];\n    }\n    puVar3 = *(iVar4 + 8);\n    if (puVar3 == NULL) {\n        in_ECX[1] = -0x7fffbffd;\n    }\n    else {\n        iVar4 = (***puVar3)(puVar3, 0x49fc14, &var_4h);\n        if (iVar4 < 0) {\n            in_ECX[1] = iVar4;\n        }\n        else {\n            iVar4 = fcn.00460746(in_ECX + 3, in_ECX + 4);\n            if (-1 < iVar4) {\n                (**(*in_ECX[3] + 4))(in_ECX[3]);\n                iVar4 = (**(*var_4h + 0x10))(var_4h, in_ECX + 4, ppiVar1);\n                if (-1 < iVar4) {\n                    (**(**ppiVar1 + 4))(*ppiVar1);\n                    iVar4 = (**(**ppiVar1 + 0x14))(*ppiVar1);\n                }\n            }\n            in_ECX[1] = iVar4;\n            (**(*var_4h + 8))(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 620
    },
    "004664b3": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004664b3(uint *param_1)\n\n{\n    int32_t *piVar1;\n    \n    *param_1 = 0x4c6018;\n    fcn.00466da5();\n    piVar1 = param_1[3];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n    }\n    fcn.0040e8a0();\n    fcn.0040b1ff();\n    fcn.0041fd4d(param_1);\n    return param_1;\n}\n",
        "token_count": 130
    },
    "0047be2b": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0047be2b(uint param_1)\n\n{\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    return param_1;\n}\n",
        "token_count": 95
    },
    "0047beea": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047beea(uint *param_1)\n\n{\n    uint unaff_ESI;\n    \n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    *param_1[3] = *param_1[3] + -1;\n    if (*param_1[3] == 0) {\n        fcn.0041fd94(*param_1, unaff_ESI);\n        fcn.0041fd4d(param_1[3]);\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "0047d012": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0047d012(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.004222d0(&var_4ch, 0, 0x3c);\n    var_4ch = 0x7c;\n    var_2ch = 1;\n    var_38h = 1;\n    var_44h = 1;\n    var_14h = 1;\n    var_1ch = 1;\n    var_24h = 1;\n    puVar4 = &var_4ch;\n    uVar3 = 0;\n    uVar1 = fcn.004248f3(arg_8h);\n    iVar2 = (*_sym.imp.WININET.dll_InternetCrackUrlW)(arg_8h, uVar1, uVar3, puVar4);\n    if (iVar2 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        fcn.00408817(var_48h, 0, var_44h);\n        fcn.00408817(var_3ch, 0, var_38h);\n        fcn.00408817(var_30h, 0, var_2ch);\n        fcn.00408817(var_28h, 0, var_24h);\n        fcn.00408817(var_20h, 0, var_1ch);\n        fcn.00408817(var_18h, 0, var_14h);\n        iVar2 = fcn.004609c0(&var_10h, arg_ch + 0x50);\n        if (arg_ch + 0x60 != iVar2) {\n            fcn.0040c1c3(iVar2);\n        }\n        fcn.0040b1ff();\n        *(arg_ch + 0x78) = var_34h;\n        *(arg_ch + 0x74) = var_40h;\n        iVar2 = var_40h + -1;\n        if (iVar2 == 0) {\n            *(arg_ch + 0x70) = 1;\n        }\n        else {\n            iVar2 = var_40h + -2;\n            if (iVar2 == 0) {\n                *(arg_ch + 0x70) = 2;\n            }\n            else {\n                *(arg_ch + 0x70) = 3;\n            }\n        }\n        uVar1 = CONCAT31(iVar2 >> 8, 1);\n    }\n    return uVar1;\n}\n",
        "token_count": 703
    },
    "00483355": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00483355(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t *extraout_EDX;\n    int32_t *piVar4;\n    int32_t unaff_EBX;\n    uint uVar5;\n    int32_t unaff_ESI;\n    int32_t iVar6;\n    uint uVar7;\n    uchar *arg_8h_00;\n    int32_t iStack76;\n    int32_t iStack72;\n    int32_t iStack68;\n    ushort auStack64 [2];\n    uchar auStack60 [4];\n    uint uStack56;\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uint uStack40;\n    \n    iStack76 = in_ECX;\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iStack72 = 0;\n    iVar2 = (*_sym.imp.ole32.dll_CoInitialize)(0);\n    if (iVar2 == 1) {\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    arg_8h_00 = auStack60;\n    (*_sym.imp.OLEAUT32.dll_VariantClear)();\n    uStack56 = 0;\n    uStack52 = 0;\n    auStack64[0] = 9;\n    iVar2 = *(arg_8h + 8);\n    if (iVar2 == 1) {\n        fcn.0041fd5b(0x3c, arg_8h_00);\n        iVar2 = **(arg_8h + 4);\n        fcn.00408e90();\n        iVar3 = 0;\n        iStack68 = fcn.004670f4(**(iVar2 + 8), 0, 0);\n        iVar2 = *(iStack68 + 4);\n        if (iVar2 < 0) {\n            uStack52 = 0;\ncode_r0x00483601:\n            iVar6 = 0;\n            unaff_EBX = iVar2;\n            iStack48 = iVar2;\n        }\n        else {\n            uVar5 = fcn.00470bfd(&iStack76);\n            uStack40 = 0;\n            fcn.004119e0(uVar5);\n            iVar3 = 0;\n            iVar6 = 1;\n        }\ncode_r0x0048360a:\n        if (iVar3 != 0) {\n            fcn.0040e8a0();\n        }\n        if (iVar6 != 0) {\n            fcn.0040e8a0();\n        }\ncode_r0x00483628:\n        if (unaff_EBX < 0) {\n            fcn.004846fb(unaff_EBX, 0, 0, 0);\n        }\n    }\n    else {\n        if (iVar2 == 2) {\n            iVar2 = *(*(arg_8h + 4) + 4);\n            fcn.00408e90();\n            uVar7 = **(iVar2 + 8);\n            iVar2 = **(arg_8h + 4);\n            fcn.00408e90();\n            iVar3 = 0;\n            uVar5 = 0;\n        }\n        else {\n            if (iVar2 == 3) {\n                iStack68 = *(*(arg_8h + 4) + 8);\n                cVar1 = fcn.00401f20();\n                if (cVar1 != '\\0') {\n                    iVar2 = fcn.0040ce67();\n                    if ((iVar2 < 1) || (iVar2 = *(in_ECX + 0x1b0),  iVar3 = fcn.0040ce67(),  iVar2 < iVar3)) {\n                        iStack76 = 0;\n                    }\n                    else {\n                        iVar2 = fcn.0040ce67();\n                        iStack76 = **(*(unaff_ESI + 0x1ac) + -4 + iVar2 * 4);\n                    }\n                    iStack68 = fcn.0041fd5b(0x3c, arg_8h_00);\n                    iVar3 = 0x29;\n                    iVar2 = *(*(arg_8h + 4) + 4);\n                    cVar1 = fcn.00401fb9(0x29);\n                    if (cVar1 == '\\0') {\n                        fcn.00408e90();\n                        piVar4 = *(arg_8h + 4);\n                        uVar5 = **(iVar2 + 8);\n                    }\n                    else {\n                        uVar5 = 0;\n                        piVar4 = extraout_EDX;\n                    }\n                    iVar2 = *piVar4;\n                    fcn.00408e90();\n                    iStack72 = fcn.004670f4(**(iVar2 + 8), uVar5, unaff_EBX);\n                    iVar2 = *(iStack72 + 4);\n                    if (iVar2 < 0) {\n                        uStack56 = 0;\n                        uStack52 = 1;\n                        goto code_r0x00483601;\n                    }\n                    uVar5 = fcn.00470bfd(&stack0xffffffb0);\n                    uStack44 = 0;\n                    fcn.004119e0(uVar5);\n                    iVar3 = 0;\n                    iVar6 = 4;\n                    goto code_r0x0048360a;\n                }\n                fcn.00408e90();\n                uVar5 = **(iStack68 + 8);\n                iVar2 = *(*(arg_8h + 4) + 4);\n                fcn.00408e90();\n                uVar7 = **(iVar2 + 8);\n                iVar2 = **(arg_8h + 4);\n                fcn.00408e90();\n                fcn.00484ad4(**(iVar2 + 8), uVar7, uVar5, 0, arg_ch);\n                goto code_r0x00483628;\n            }\n            if (iVar2 != 4) goto code_r0x0048363d;\n            iVar2 = *(*(arg_8h + 4) + 0xc);\n            fcn.00408e90();\n            iStack76 = **(iVar2 + 8);\n            iVar2 = *(*(arg_8h + 4) + 8);\n            fcn.00408e90();\n            uVar5 = **(iVar2 + 8);\n            iVar2 = *(*(arg_8h + 4) + 4);\n            fcn.00408e90();\n            uVar7 = **(iVar2 + 8);\n            iVar2 = **(arg_8h + 4);\n            fcn.00408e90();\n            iVar3 = iStack76;\n        }\n        fcn.00484ad4(**(iVar2 + 8), uVar7, uVar5, iVar3, arg_ch);\n    }\ncode_r0x0048363d:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack64);\n    return 0;\n}\n",
        "token_count": 1586
    },
    "004867e8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004867e8(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t **ppiVar2;\n    int16_t iVar3;\n    char cVar4;\n    uint uVar5;\n    int32_t extraout_EDX;\n    int32_t iVar6;\n    int32_t extraout_EDX_00;\n    uint unaff_EBX;\n    uchar *arg_10h_00;\n    uint in_stack_ffffff7c;\n    int32_t iVar7;\n    uint16_t uVar8;\n    int32_t iVar9;\n    uint32_t in_stack_ffffffa0;\n    uchar auStack92 [4];\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint auStack76 [2];\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    int32_t iStack56;\n    uint uStack52;\n    uchar auStack48 [8];\n    uint uStack40;\n    uint uStack32;\n    uint uStack28;\n    uchar auStack24 [20];\n    \n    if (*(arg_10h + 0xc) == 0xf) {\n        uVar5 = fcn.00486bd4(arg_8h, arg_ch, arg_10h);\n        return uVar5;\n    }\n    uStack88 = 0x49d100;\n    uStack84 = 0;\n    uStack80 = 0;\n    auStack76[0] = 0;\n    uStack40 = 0;\n    uStack32 = 0;\n    uStack28 = 1;\n    fcn.0040c25d();\n    iVar7 = *(arg_8h + 4);\n    cVar4 = fcn.00485520();\n    if (cVar4 == '\\0') {\n        iVar7 = 0xa9;\ncode_r0x00486876:\n        fcn.004734ba(in_stack_ffffff7c, iVar7);\ncode_r0x0048687d:\n        fcn.0040b1ff();\n        fcn.0040e8a0();\n        fcn.00466f23();\n        fcn.0041fd94(in_stack_ffffffa0);\n        return 0xffffffff;\n    }\n    ppiVar2 = *(iVar7 + extraout_EDX * 4);\n    in_stack_ffffffa0 = 0x35;\n    iVar6 = extraout_EDX;\n    iVar9 = iVar7;\n    if (*(ppiVar2 + 2) == 0x35) {\n        if (&iStack56 != *ppiVar2) {\n            fcn.0040c1c3(*ppiVar2);\n            iVar6 = *arg_ch;\n            iVar7 = *(arg_8h + 4);\n        }\n        iVar6 = iVar6 + 1;\n        *arg_ch = iVar6;\n    }\n    uVar8 = iVar9;\n    iVar9 = *(iVar7 + iVar6 * 4);\n    if (*(iVar9 + 8) == 0x47) {\n        *arg_ch = iVar6 + -1;\n        iVar7 = fcn.00485396(arg_8h, arg_ch, auStack92);\n        if (iVar7 < 0) goto code_r0x0048687d;\n        iVar6 = *arg_ch;\n        iVar7 = *(arg_8h + 4);\n    }\n    else if (iStack56 == 0) {\n        iVar7 = *(iVar9 + 10);\n        in_stack_ffffff7c = 0x80;\n        goto code_r0x00486876;\n    }\n    uVar1 = *(*(iVar7 + iVar6 * 4) + 8);\n    in_stack_ffffffa0 = uVar1;\n    if ((uVar1 == uVar8) || (uVar1 == 0x47)) {\n        fcn.0040b606(uStack60);\n        arg_10h_00 = &stack0xffffffa0;\n        iVar7 = fcn.004852bf(unaff_EBX, arg_10h, &uStack32, arg_10h_00, unaff_EBX);\n        fcn.0040b1ff();\n        if (iVar7 < 0) goto code_r0x0048687d;\n        uVar5 = fcn.004867e8(arg_8h, arg_ch, arg_10h_00);\n        goto code_r0x00486b9c;\n    }\n    cVar4 = fcn.00470aae();\n    if (cVar4 == '\\0') {\n        fcn.0040b606(uStack60);\n        iVar7 = fcn.004852bf(unaff_EBX, arg_10h, &uStack32, &stack0xffffffa0, unaff_EBX);\n        fcn.0040b1ff();\n        if (iVar7 < 0) goto code_r0x0048687d;\n        iVar7 = *(*(arg_8h + 4) + *arg_ch * 4);\n        if (*(iVar7 + 8) == 0x7f) {\n            uVar5 = 0;\n            goto code_r0x00486b9c;\n        }\n        fcn.004734ba(0x72, *(iVar7 + 10));\n    }\n    else {\n        auStack76[0] = 0;\n        *arg_ch = extraout_EDX_00 + 1;\n        uStack68 = 0;\n        uStack64 = 1;\n        iVar7 = arg_8h;\n        iVar6 = fcn.00410540(arg_8h, arg_ch, auStack76, 0xffffffff);\n        if (-1 < iVar6) {\n            iVar6 = *(*(arg_8h + 4) + *arg_ch * 4);\n            if (*(iVar6 + 8) == 0x7f) {\n                iVar3 = iVar7;\n                if (iVar3 != 0x41) {\n                    fcn.0040b606(auStack76[0]);\n                    iVar7 = fcn.004852bf(0, arg_10h, auStack48, &stack0xffffff90, &stack0xffffff7c);\n                    fcn.0040b1ff();\n                    if (-1 < iVar7) {\n                        if (iVar3 == 0x52) {\n                            fcn.0040cb70(&stack0xffffff90);\n                        }\n                        else {\n                            if (iVar3 == 0x53) {\n                                fcn.0041b4a2(&stack0xffffff8c);\n                            }\n                            else if (iVar3 == 0x54) {\n                                fcn.00470d3c(&stack0xffffff8c);\n                            }\n                            else {\n                                if (iVar3 == 0x55) {\n                                    fcn.0041b451(&stack0xffffff90);\n                                    goto code_r0x00486b06;\n                                }\n                                fcn.00470fde(&stack0xffffff8c);\n                            }\n                            fcn.0040c5e7(auStack48);\n                        }\n                    }\n                }\ncode_r0x00486b06:\n                fcn.00466fef(&uStack64);\n                fcn.0040b606(uStack52);\n                uVar5 = fcn.0048532f(arg_10h, auStack24, &uStack88);\n                fcn.0040b1ff();\n                fcn.0040e8a0();\n                goto code_r0x00486b9c;\n            }\n            fcn.004734ba(0x72, *(iVar6 + 10));\n        }\n        fcn.0040e8a0();\n    }\n    uVar5 = 0xffffffff;\ncode_r0x00486b9c:\n    fcn.0040b1ff();\n    fcn.0040e8a0();\n    fcn.00466f23();\n    fcn.0041fd94(in_stack_ffffffa0);\n    return uVar5;\n}\n",
        "token_count": 1771
    },
    "00490174": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00490174(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    char16_t cVar1;\n    char16_t cVar2;\n    char cVar3;\n    int32_t iVar4;\n    char16_t *pcVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    int32_t *in_ECX;\n    uint32_t unaff_EBX;\n    uint *puVar8;\n    uint *puVar9;\n    uint uVar10;\n    int32_t iVar11;\n    uint *puVar12;\n    int32_t *piStack76;\n    int32_t iStack72;\n    int32_t iStack68;\n    uint uStack56;\n    uint uStack52;\n    int32_t *piStack48;\n    uchar auStack40 [36];\n    \n    cVar3 = fcn.0048f4b0(arg_8h);\n    if (cVar3 == '\\0') {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        iVar4 = *(*in_ECX + 4);\n        iVar11 = *(iVar4 + 8 + in_ECX);\n        if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n            iVar11 = *(iVar11 + 0x38);\n        }\n        *(iVar11 + 0x14) = 1;\n        iVar11 = *(iVar4 + 8 + in_ECX);\n        if (*(iVar4 + 0xd + in_ECX) != '\\0') {\n            iVar11 = *(iVar11 + 0x38);\n        }\n        *(iVar11 + 0x18) = 0;\n        return 0;\n    }\n    fcn.0040c25d();\n    iVar4 = *(*(arg_8h + 4) + 0xc);\n    fcn.00408e90();\n    puVar9 = *(iVar4 + 8);\n    uVar10 = *puVar9;\n    uStack56 = puVar9[1];\n    uStack52 = puVar9[2];\n    piStack48 = puVar9[3];\n    *piStack48 = *piStack48 + 1;\n    fcn.0040c7c9();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(uVar10, uStack56);\n    fcn.004013dc(0x49d0d0);\n    while (*(arg_8h + 8) < 6) {\n        fcn.00466fef(auStack40);\n    }\n    puVar9 = in_ECX[0xbb];\n    puVar12 = puVar9;\n    iVar4 = fcn.004248f3(L\"GETITEMCOUNT\");\n    if (iStack68 == iVar4) {\n        if (iStack68 != 0) {\n            pcVar5 = L\"GETITEMCOUNT\";\n            iVar4 = iStack68;\n            do {\n                cVar1 = *(iStack72 + -0x4c7c10 + pcVar5);\n                unaff_EBX = cVar1;\n                if (cVar1 != *pcVar5) {\n                    iVar4 = (-(cVar1 < *pcVar5) & 0xfffffffe) + 1;\n                    puVar8 = puVar12;\n                    goto code_r0x00490296;\n                }\n                pcVar5 = pcVar5 + 1;\n                iVar4 = iVar4 + -1;\n                puVar9 = puVar12;\n            } while (iVar4 != 0);\n        }\n        iVar4 = 0;\n        puVar8 = puVar9;\ncode_r0x00490296:\n        puVar9 = puVar8;\n        if (iVar4 != 0) goto code_r0x004902b7;\n        uVar10 = 0x1004;\ncode_r0x004903f6:\n        uVar7 = (*_sym.imp.USER32.dll_SendMessageW)(*puVar8, uVar10, 0, 0);\n    }\n    else {\ncode_r0x004902b7:\n        iVar4 = fcn.004248f3(L\"GETSUBITEMCOUNT\");\n        if (iStack68 == iVar4) {\n            if (iStack68 != 0) {\n                pcVar5 = L\"GETSUBITEMCOUNT\";\n                iVar4 = iStack68;\n                do {\n                    cVar1 = *(iStack72 + -0x4c7c30 + pcVar5);\n                    cVar2 = *pcVar5;\n                    unaff_EBX = cVar2;\n                    puVar9 = puVar12;\n                    if (cVar1 != cVar2) {\n                        iVar4 = (-(cVar1 < cVar2) & 0xfffffffe) + 1;\n                        goto code_r0x004902fe;\n                    }\n                    pcVar5 = pcVar5 + 1;\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            iVar4 = 0;\ncode_r0x004902fe:\n            if (iVar4 != 0) goto code_r0x0049031f;\n            uVar7 = fcn.00462257();\n        }\n        else {\ncode_r0x0049031f:\n            iVar4 = fcn.004248f3(L\"GETTEXT\");\n            if (iStack68 == iVar4) {\n                if (iStack68 != 0) {\n                    pcVar5 = L\"GETTEXT\";\n                    iVar4 = iStack68;\n                    do {\n                        cVar1 = *(iStack72 + -0x4c7c50 + pcVar5);\n                        cVar2 = *pcVar5;\n                        unaff_EBX = cVar2;\n                        puVar9 = puVar12;\n                        if (cVar1 != cVar2) {\n                            iVar4 = (-(cVar1 < cVar2) & 0xfffffffe) + 1;\n                            goto code_r0x00490366;\n                        }\n                        pcVar5 = pcVar5 + 1;\n                        iVar4 = iVar4 + -1;\n                    } while (iVar4 != 0);\n                }\n                iVar4 = 0;\ncode_r0x00490366:\n                if (iVar4 != 0) goto code_r0x004903a3;\n                puVar9 = &uStack56;\n                uVar10 = fcn.0040ce67();\n                uVar6 = fcn.0040ce67();\n                fcn.00462279(uVar6, uVar10, puVar9);\ncode_r0x00490548:\n                fcn.00407c5d(&uStack52);\n                goto code_r0x0049060e;\n            }\ncode_r0x004903a3:\n            puVar8 = puVar12;\n            iVar4 = fcn.004248f3(L\"GETSELECTEDCOUNT\");\n            if (iStack68 == iVar4) {\n                if (iStack68 != 0) {\n                    pcVar5 = L\"GETSELECTEDCOUNT\";\n                    unaff_EBX = iStack72 - 0x4c7c60;\n                    do {\n                        if (*(unaff_EBX + pcVar5) != *pcVar5) {\n                            iVar4 = (-(*(unaff_EBX + pcVar5) < *pcVar5) & 0xfffffffe) + 1;\n                            goto code_r0x004903eb;\n                        }\n                        pcVar5 = pcVar5 + 1;\n                        iStack68 = iStack68 + -1;\n                        puVar9 = puVar8;\n                    } while (iStack68 != 0);\n                }\n                puVar8 = puVar9;\n                iVar4 = 0;\ncode_r0x004903eb:\n                puVar9 = puVar8;\n                if (iVar4 == 0) {\n                    uVar10 = 0x1032;\n                    goto code_r0x004903f6;\n                }\n            }\n            cVar3 = fcn.00403536();\n            if (cVar3 == '\\0') {\n                cVar3 = fcn.00403536();\n                if (cVar3 == '\\0') {\n                    cVar3 = fcn.00403536();\n                    if (cVar3 == '\\0') {\n                        cVar3 = fcn.00403536();\n                        if (cVar3 != '\\0') {\n                            iVar11 = fcn.0040ce67();\n                            iVar4 = fcn.0040ce67();\n                            if (iVar4 == 0) {\n                                iVar4 = iVar11;\n                            }\n                            goto code_r0x004904ad;\n                        }\n                        cVar3 = fcn.00403536();\n                        if (cVar3 != '\\0') {\n                            fcn.004623b0();\n                            goto code_r0x0049060e;\n                        }\n                        cVar3 = fcn.00403536();\n                        if (cVar3 == '\\0') {\n                            cVar3 = fcn.00403536();\n                            if (cVar3 != '\\0') {\n                                iVar4 = fcn.0040ce67();\n                                fcn.00462183(unaff_EBX & 0xffffff00 | iVar4 != 0, &uStack56);\n                                goto code_r0x00490548;\n                            }\n                            cVar3 = fcn.00403536();\n                            if (cVar3 == '\\0') {\n                                cVar3 = fcn.00403536();\n                                if (cVar3 == '\\0') {\n                                    fcn.0040e8a0();\n                                    *arg_ch = 0;\n                                    arg_ch[3] = 1;\n                                    iVar4 = *(*piStack76 + 4);\n                                    iVar11 = *(iVar4 + 8 + piStack76);\n                                    if (*(iVar4 + 0xd + piStack76) != '\\0') {\n                                        iVar11 = *(iVar11 + 0x38);\n                                    }\n                                    *(iVar11 + 0x14) = 1;\n                                    iVar11 = *(iVar4 + 8 + piStack76);\n                                    if (*(iVar4 + 0xd + piStack76) != '\\0') {\n                                        iVar11 = *(iVar11 + 0x38);\n                                    }\n                                    *(iVar11 + 0x18) = 0;\n                                }\n                                else {\n                                    iVar4 = *(*(arg_8h + 4) + 0x10);\n                                    fcn.00408e90();\n                                    fcn.00461fe3(*(iVar4 + 8));\n                                }\n                                goto code_r0x0049060e;\n                            }\n                            iVar4 = *(*(arg_8h + 4) + 0x10);\n                            fcn.00408e90();\n                            uVar10 = *(iVar4 + 8);\n                            uVar6 = fcn.0040ce67();\n                            uVar7 = fcn.004620a3(uVar10, uVar6);\n                            goto code_r0x00490593;\n                        }\n                        iVar11 = fcn.0040ce67();\n                        iVar4 = fcn.0040ce67();\n                        if (iVar4 == 0) {\n                            iVar4 = iVar11;\n                        }\n                    }\n                    else {\n                        iVar11 = -1;\n                        iVar4 = -1;\n                    }\n                    uVar10 = 0;\n                }\n                else {\n                    iVar11 = -1;\n                    iVar4 = -1;\ncode_r0x004904ad:\n                    uVar10 = 1;\n                }\n                fcn.0046231f(uVar10, iVar11, iVar4);\n                goto code_r0x0049060e;\n            }\n            uVar10 = fcn.0040ce67();\n            iVar4 = (*_sym.imp.USER32.dll_SendMessageW)(*puVar9, 0x102c, uVar10, 2);\n            uVar7 = iVar4 != 0;\n        }\n    }\ncode_r0x00490593:\n    fcn.0040e8a0();\n    arg_ch[3] = 1;\n    *arg_ch = uVar7;\ncode_r0x0049060e:\n    fcn.0040e8a0();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 2687
    },
    "00490851": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00490851(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    char16_t cVar1;\n    uint32_t *puVar2;\n    char cVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    char16_t *pcVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t in_ECX;\n    int32_t *unaff_EDI;\n    uint uVar9;\n    uchar *arg_8h_00;\n    uint32_t uVar10;\n    int32_t *piVar11;\n    uint *puVar12;\n    int32_t *piStack76;\n    int32_t iStack68;\n    uchar auStack64 [4];\n    uint32_t uStack60;\n    uint32_t uStack56;\n    uint32_t uStack52;\n    int32_t *piStack48;\n    uchar auStack40 [36];\n    \n    cVar3 = fcn.0048f4b0(arg_8h);\n    if (cVar3 == '\\0') {\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = 0;\n        iVar5 = *(*piStack76 + 4);\n        iVar8 = *(iVar5 + 8 + piStack76);\n        if (*(iVar5 + 0xd + piStack76) != '\\0') {\n            iVar8 = *(iVar8 + 0x38);\n        }\n        *(iVar8 + 0x14) = 1;\n        iVar8 = *(iVar5 + 8 + piStack76);\n        if (*(iVar5 + 0xd + piStack76) != '\\0') {\n            iVar8 = *(iVar8 + 0x38);\n        }\n        *(iVar8 + 0x18) = 0;\n        return 0;\n    }\n    fcn.0040c25d();\n    iVar5 = *(*(arg_8h + 4) + 0xc);\n    fcn.00408e90();\n    puVar2 = *(iVar5 + 8);\n    uStack60 = *puVar2;\n    uStack56 = puVar2[1];\n    uStack52 = puVar2[2];\n    piStack48 = puVar2[3];\n    *piStack48 = *piStack48 + 1;\n    fcn.0040c7c9();\n    uVar10 = uStack60;\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(uStack60, uStack56);\n    arg_8h_00 = 0x49d0d0;\n    fcn.004013dc(0x49d0d0);\n    while (*(arg_8h + 8) < 6) {\n        arg_8h_00 = auStack40;\n        fcn.00466fef(arg_8h_00);\n    }\n    puVar12 = unaff_EDI[0xbb];\n    piVar11 = unaff_EDI;\n    iVar5 = fcn.004248f3(L\"GETTOTALCOUNT\");\n    if (iStack68 == iVar5) {\n        if (iStack68 != 0) {\n            pcVar6 = L\"GETTOTALCOUNT\";\n            iVar5 = iStack68;\n            do {\n                cVar1 = *(in_ECX + -0x4c7d70 + pcVar6);\n                unaff_EDI = piVar11;\n                if (cVar1 != *pcVar6) {\n                    iVar5 = (-(cVar1 < *pcVar6) & 0xfffffffe) + 1;\n                    goto code_r0x00490976;\n                }\n                pcVar6 = pcVar6 + 1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        iVar5 = 0;\ncode_r0x00490976:\n        if (iVar5 != 0) goto code_r0x004909b8;\n        uVar7 = (*_sym.imp.USER32.dll_SendMessageW)(*puVar12, 0x1105, 0, 0);\n        goto code_r0x0049098f;\n    }\ncode_r0x004909b8:\n    iVar5 = fcn.004248f3(L\"CHECK\");\n    if (iStack68 == iVar5) {\n        if (iStack68 != 0) {\n            pcVar6 = L\"CHECK\";\n            iVar5 = iStack68;\n            do {\n                cVar1 = *(pcVar6 + in_ECX + -0x4c7b24);\n                unaff_EDI = piVar11;\n                if (cVar1 != *pcVar6) {\n                    iVar5 = (-(cVar1 < *pcVar6) & 0xfffffffe) + 1;\n                    goto code_r0x004909ff;\n                }\n                pcVar6 = pcVar6 + 1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        iVar5 = 0;\ncode_r0x004909ff:\n        if (iVar5 != 0) goto code_r0x00490a34;\n        iVar5 = *(*(arg_8h + 4) + 0x10);\n        fcn.00408e90();\n        uVar9 = 1;\n        unaff_EDI = piVar11;\ncode_r0x00490a12:\n        cVar3 = fcn.004625ae(*(iVar5 + 8), uVar9);\n        goto code_r0x00490caf;\n    }\ncode_r0x00490a34:\n    iVar5 = fcn.004248f3(L\"COLLAPSE\");\n    if (iStack68 == iVar5) {\n        if (iStack68 != 0) {\n            pcVar6 = L\"COLLAPSE\";\n            iVar5 = iStack68;\n            do {\n                cVar1 = *(pcVar6 + in_ECX + -0x4c7d90);\n                unaff_EDI = piVar11;\n                if (cVar1 != *pcVar6) {\n                    iVar5 = (-(cVar1 < *pcVar6) & 0xfffffffe) + 1;\n                    goto code_r0x00490a7b;\n                }\n                pcVar6 = pcVar6 + 1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        iVar5 = 0;\ncode_r0x00490a7b:\n        if (iVar5 != 0) goto code_r0x00490aaf;\n        iVar5 = *(*(arg_8h + 4) + 0x10);\n        fcn.00408e90();\n        uVar9 = 0;\n        unaff_EDI = piVar11;\ncode_r0x00490a8d:\n        cVar3 = fcn.00462623(*(iVar5 + 8), uVar9);\n    }\n    else {\ncode_r0x00490aaf:\n        iVar5 = fcn.004248f3(L\"EXISTS\");\n        if (iStack68 == iVar5) {\n            if (iStack68 != 0) {\n                pcVar6 = L\"EXISTS\";\n                do {\n                    cVar1 = *(pcVar6 + in_ECX + -0x4c6770);\n                    if (cVar1 != *pcVar6) {\n                        iVar5 = (-(cVar1 < *pcVar6) & 0xfffffffe) + 1;\n                        goto code_r0x00490af6;\n                    }\n                    pcVar6 = pcVar6 + 1;\n                    iStack68 = iStack68 + -1;\n                } while (iStack68 != 0);\n            }\n            iVar5 = 0;\ncode_r0x00490af6:\n            if (iVar5 == 0) {\n                iVar5 = *(*(arg_8h + 4) + 0x10);\n                fcn.00408e90();\n                iVar5 = fcn.004627af(*(iVar5 + 8));\n                uVar7 = iVar5 != 0;\n                goto code_r0x0049098f;\n            }\n        }\n        cVar3 = fcn.00403536();\n        if (cVar3 != '\\0') {\n            iVar5 = *(*(arg_8h + 4) + 0x10);\n            fcn.00408e90();\n            uVar9 = 1;\n            unaff_EDI = piVar11;\n            goto code_r0x00490a8d;\n        }\n        cVar3 = fcn.00403536();\n        if (cVar3 != '\\0') {\n            iVar5 = *(*(arg_8h + 4) + 0x10);\n            fcn.00408e90();\n            uVar7 = fcn.0046289c(*(iVar5 + 8));\ncode_r0x0049098f:\n            fcn.0040e8a0();\n            arg_ch[3] = 1;\n            *arg_ch = uVar7;\n            goto code_r0x00490cdc;\n        }\n        cVar3 = fcn.00403536();\n        if (cVar3 == '\\0') {\n            cVar3 = fcn.00403536();\n            if (cVar3 == '\\0') {\n                cVar3 = fcn.00403536();\n                if (cVar3 != '\\0') {\n                    iVar5 = *(*(arg_8h + 4) + 0x10);\n                    fcn.00408e90();\n                    uVar7 = fcn.00462c76(*(iVar5 + 8));\n                    goto code_r0x0049098f;\n                }\n                cVar3 = fcn.00403536();\n                if (cVar3 == '\\0') {\n                    cVar3 = fcn.00403536();\n                    if (cVar3 != '\\0') {\n                        iVar5 = *(*(arg_8h + 4) + 0x10);\n                        fcn.00408e90();\n                        uVar9 = 0;\n                        unaff_EDI = piVar11;\n                        goto code_r0x00490a12;\n                    }\n                    unaff_EDI = piVar11;\n                    fcn.0040e8a0();\n                    arg_ch[3] = 1;\n                    cVar3 = '\\0';\n                    *arg_ch = 0;\n                }\n                else {\n                    iVar5 = *(*(arg_8h + 4) + 0x10);\n                    fcn.00408e90();\n                    unaff_EDI = piVar11;\n                    cVar3 = fcn.00462ca4(*(iVar5 + 8));\n                }\n            }\n            else {\n                iVar5 = *(*(arg_8h + 4) + 0x10);\n                fcn.00408e90();\n                uVar4 = fcn.00462b82(*(iVar5 + 8), &uStack56);\n                uVar10 = uVar10 & 0xffffff | uVar4 << 0x18;\n                unaff_EDI = piVar11;\n                fcn.00407c5d(auStack64);\n                cVar3 = arg_8h_00 >> 0x18;\n            }\n        }\n        else {\n            uVar7 = fcn.0041daf6();\n            uVar4 = fcn.00462b2c(&uStack56, uVar7 & 0xff);\n            uVar10 = uVar10 & 0xffffff | uVar4 << 0x18;\n            fcn.00407c5d(auStack64);\n            cVar3 = arg_8h_00 >> 0x18;\n        }\n    }\ncode_r0x00490caf:\n    if (cVar3 == '\\0') {\n        iVar5 = *(*unaff_EDI + 4);\n        iVar8 = *(iVar5 + 8 + unaff_EDI);\n        if (*(iVar5 + 0xd + unaff_EDI) != '\\0') {\n            iVar8 = *(iVar8 + 0x38);\n        }\n        *(iVar8 + 0x14) = 1;\n        iVar8 = *(iVar5 + 8 + unaff_EDI);\n        if (*(iVar5 + 0xd + unaff_EDI) != '\\0') {\n            iVar8 = *(iVar8 + 0x38);\n        }\n        *(iVar8 + 0x18) = 0;\n    }\ncode_r0x00490cdc:\n    fcn.0040e8a0(arg_8h_00, uVar10);\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 2805
    },
    "00401fb9": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401fb9(uint32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t **in_ECX;\n    \n    if ((in_ECX[3] == 0xa) && (in_EAX = **in_ECX,  in_EAX == arg_8h)) {\n        uVar1 = CONCAT31(in_EAX >> 8, 1);\n    }\n    else {\n        uVar1 = in_EAX & 0xffffff00;\n    }\n    return uVar1;\n}\n",
        "token_count": 129
    },
    "0040ca74": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.0040ca74(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    ushort extraout_var;\n    int32_t *piVar4;\n    uint uVar5;\n    uint uVar6;\n    uint arg_8h;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t iVar7;\n    uint8_t extraout_DL;\n    uint32_t uVar8;\n    int32_t iVar9;\n    bool bVar10;\n    float10 fVar11;\n    float10 fVar12;\n    int64_t iVar13;\n    int64_t iVar14;\n    ulong uVar15;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    int32_t **var_4h;\n    \n    piVar4 = param_1[3];\n    piVar1 = param_2[3];\n    piVar3 = *((piVar1 + piVar4 * 4) * 4 + 0x4b1448) + -1;\n    var_4h = param_2;\n    // switch table (14 cases) at 0x40cb2c\n    switch(piVar3) {\n    case NULL:\n        piVar4 = fcn.0040ce67();\n        piVar3 = fcn.0040ce67();\n        goto code_r0x0040cab6;\n    case 0x1:\n        iVar13 = fcn.0040cc8f();\n        iVar14 = fcn.0040cc8f();\n        piVar3 = iVar14;\n        if (iVar13 == iVar14) {\ncode_r0x0040cb27:\n            return CONCAT31(piVar3 >> 8, 1);\n        }\n        break;\n    case 0x2:\n        fVar11 = fcn.0040cfb5();\n        _var_8h = fVar11;\n        fVar11 = fcn.0040cfb5();\n        fVar12 = _var_8h;\n        piVar3 = CONCAT22(extraout_var, (fVar12 < fVar11) << 8 | (fVar12 == fVar11) << 0xe);\n        if (fVar12 == fVar11) goto code_r0x0040cb27;\n        break;\n    case 0x3:\n        fcn.00408e90();\n        piVar4 = param_2[2];\n        fcn.00408e90();\n        iVar9 = fcn.0041d5dc(*param_1[2], param_1[2][1], *piVar4, piVar4[1], 0);\ncode_r0x0040cb1f:\n        return -iVar9 & 0xffffff00U | 1 - (iVar9 != 0);\n    case 0x6:\n        piVar4 = fcn.00471dda();\n        piVar3 = fcn.00471dda();\ncode_r0x0040cab6:\n        bVar10 = piVar4 == piVar3;\ncode_r0x0040cab8:\n        return piVar3 & 0xffffff00 | bVar10;\n    case 0x7:\n        uVar8 = 0;\n        if (piVar4 == 0x8) {\n            piVar4 = *param_1;\n        }\n        else {\n            piVar4 = NULL;\n        }\n        if (piVar4 != NULL) {\n            if (piVar1 == 0x8) {\n                piVar4 = *param_2;\n            }\n            else {\n                piVar4 = NULL;\n            }\n            if ((piVar4 != NULL) && (piVar4 = fcn.00470c77(),  piVar4 != '\\0')) {\n                uVar8 = 1;\n            }\n        }\n        goto code_r0x004508ab;\n    case 0x8:\n        fcn.0041daf6();\n        uVar8 = fcn.0041daf6();\n        return uVar8 & 0xffffff00 | extraout_DL ^ uVar8 ^ 1;\n    case 0x9:\n        iVar9 = 0;\n        if (piVar4 == 0xa) {\n            piVar3 = *param_1;\n            iVar7 = *piVar3;\n        }\n        else {\n            iVar7 = 0;\n        }\n        if (piVar1 == 0xa) {\n            piVar3 = *param_2;\n            iVar9 = *piVar3;\n        }\n        goto code_r0x0045082e;\n    case 0xa:\n        if ((piVar4 != 0xb) || (piVar1 != 0xb)) {\n            uVar8 = 0;\n            var_18h = 0;\n            fcn.004119e0(param_1);\n            _var_8h = ZEXT48(var_4h) << 0x20;\n            fcn.004119e0(param_2);\n            fcn.00470e85();\n            fcn.00470e85();\n            fcn.00471e24();\n            uVar15 = fcn.00471e24();\n            iVar9 = uVar15 >> 0x20;\n            if (iVar9 == uVar15) {\n                uVar5 = fcn.00471db4(extraout_ECX_00);\n                uVar6 = fcn.00471db4();\n                iVar9 = fcn.00421324(uVar6, uVar5, iVar9);\n                uVar8 = 1 - (iVar9 != 0);\n            }\n            fcn.0040e8a0();\n            piVar4 = fcn.0040e8a0();\n            goto code_r0x004508ab;\n        }\n        fcn.00471e24();\n        uVar15 = fcn.00471e24();\n        piVar3 = uVar15;\n        if (uVar15 >> 0x20 == piVar3) {\n            uVar5 = fcn.00471e24();\n            uVar6 = fcn.00471db4(extraout_ECX);\n            arg_8h = fcn.00471db4();\n            iVar9 = fcn.00421324(arg_8h, uVar6, uVar5);\n            goto code_r0x0040cb1f;\n        }\n        break;\n    case 0xc:\n        iVar9 = 0;\n        if (piVar4 == 0xd) {\n            piVar3 = *param_1;\n            iVar7 = piVar3[4];\n        }\n        else {\n            iVar7 = 0;\n        }\n        if (piVar1 == 0xd) {\n            piVar3 = *param_2;\n            iVar9 = piVar3[4];\n        }\ncode_r0x0045082e:\n        bVar10 = iVar7 == iVar9;\n        goto code_r0x0040cab8;\n    case 0xd:\n        fcn.00471037(&var_10h);\n        fcn.00471037(&var_20h);\n        uVar2 = fcn.004082dc();\n        uVar8 = uVar2;\n        fcn.0040b1ff();\n        piVar4 = fcn.0040b1ff();\ncode_r0x004508ab:\n        return piVar4 & 0xffffff00 | uVar8;\n    }\n    return piVar3 & 0xffffff00;\n}\n",
        "token_count": 1678
    },
    "0046cdb4": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046cdb4(uint *param_1)\n\n{\n    uint32_t arg_8h;\n    int16_t *piVar1;\n    uint16_t *puVar2;\n    uint32_t arg_8h_00;\n    uint var_10h;\n    \n    arg_8h = param_1[1];\n    fcn.00407c18(arg_8h);\n    arg_8h_00 = 0;\n    if (arg_8h != 0) {\n        do {\n            piVar1 = fcn.0040660f(arg_8h_00);\n            if (*piVar1 == 10) {\n                fcn.004051ec(0xd);\n            }\n            puVar2 = fcn.0040660f(arg_8h_00);\n            fcn.004051ec(*puVar2);\n            arg_8h_00 = arg_8h_00 + 1;\n        } while (arg_8h_00 < arg_8h);\n    }\n    if (param_1 != &var_10h) {\n        fcn.0040c1c3(&var_10h);\n    }\n    fcn.0040b1ff();\n    return;\n}\n",
        "token_count": 271
    },
    "0046deb3": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046deb3(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint in_ECX;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    int32_t var_14h;\n    int32_t *var_10h;\n    uint hdc;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = fcn.00408fa0();\n    fcn.004070c2(uVar1);\n    uVar4 = 0;\n    var_4h = 0;\n    arg_8h[1] = 0;\n    *arg_8h = 0;\n    var_8h = 1;\n    iVar2 = fcn.004248f3(var_14h);\n    if (iVar2 != 0) {\n        var_8h = 1;\n        do {\n            if (*(var_14h + uVar4 * 2) == 10) {\n                var_8h = var_8h + 1;\n            }\n            uVar4 = uVar4 + 1;\n            uVar3 = fcn.004248f3(var_14h);\n        } while (uVar4 < uVar3);\n    }\n    iVar2 = fcn.0042d678(var_14h, 0x4af388, 0);\n    if (iVar2 != 0) {\n        var_4h = 0;\n        do {\n            piVar5 = arg_8h;\n            uVar1 = fcn.004248f3(iVar2);\n            (*_sym.imp.GDI32.dll_GetTextExtentPoint32W)(in_ECX, iVar2, uVar1, piVar5);\n            if (*arg_8h != var_4h && var_4h <= *arg_8h) {\n                var_4h = *arg_8h;\n            }\n            iVar2 = fcn.0042d678(0, 0x4af388, 0);\n        } while (iVar2 != 0);\n    }\n    *arg_8h = var_4h;\n    arg_8h[1] = arg_8h[1] * var_8h;\n    *var_10h = *var_10h + -1;\n    if (*var_10h == 0) {\n        uVar1 = 4;\n        fcn.0041fd4d(var_10h);\n        fcn.0041fd94(var_14h, var_10h, uVar1);\n    }\n    return;\n}\n",
        "token_count": 589
    },
    "004946c6": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004946c6(uint item, uint *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint var_38h;\n    uint var_34h;\n    uint var_24h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    cVar3 = fcn.0040c4db(item, &var_8h, &var_4h);\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    puVar2 = **(*0x4d1924 + var_4h * 4);\n    uVar1 = *(puVar2 + 0x24);\n    if (uVar1 < 0x11) {\n        if ((uVar1 != 0x10) && (10 < uVar1)) {\n            if (uVar1 != 0xc) {\n                if (uVar1 != 0xe) {\n                    return 0;\n                }\n                var_38h = 0x30;\n                var_34h = 4;\n                iVar4 = (*_sym.imp.USER32.dll_GetMenuItemInfoW)(puVar2[3], item, 0, &var_38h);\n                if (iVar4 != 0) {\n                    *arg_ch = var_24h;\n                    return 1;\n                }\n                return 0;\n            }\n            uVar5 = puVar2[3];\n            goto code_r0x00494751;\n        }\n    }\n    else {\n        if (uVar1 == 0x11) {\n            uVar5 = puVar2[4];\n            goto code_r0x00494751;\n        }\n        if (uVar1 < 0x12) {\n            return 0;\n        }\n        if (0x13 < uVar1) {\n            if (uVar1 < 0x16) {\n                return 0;\n            }\n            if (0x1c < uVar1) {\n                return 0;\n            }\n        }\n    }\n    uVar5 = *puVar2;\ncode_r0x00494751:\n    *arg_ch = uVar5;\n    return 1;\n}\n",
        "token_count": 499
    },
    "0041b058": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b058(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *param_1;\n    if (0 < uVar1) {\n        *param_1 = (uVar1 & 0xff) << 0x10 | uVar1 >> 0x10 & 0xffU | uVar1 & 0xff00;\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0047203b": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047203b(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    if (arg_ch != 0) {\n        uVar2 = *in_ECX;\n        uVar3 = *(in_ECX + 2);\n        if (0 < arg_ch) {\n            iVar1 = 0;\n            do {\n                uVar2 = (*(iVar1 + arg_8h) + uVar2) % 0xfff1;\n                uVar3 = (uVar3 + uVar2) % 0xfff1;\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < arg_ch);\n        }\n        *in_ECX = uVar3 * 0x10000 + uVar2;\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "00482316": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00482316(uint8_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint8_t *puVar1;\n    double dVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    uint32_t uVar10;\n    uint var_4h;\n    \n    uVar5 = 1;\n    puVar3 = arg_8h + arg_ch;\n    uVar10 = 0;\n    puVar1 = arg_8h + arg_10h * 4;\n    puVar9 = arg_8h;\n    if (arg_8h < puVar1) {\n        do {\n            iVar4 = 0x15ae;\n            do {\n                iVar6 = uVar5 + puVar9[2];\n                iVar7 = iVar6 + puVar9[1];\n                puVar8 = puVar9 + arg_10h * arg_14h * 4;\n                uVar5 = iVar7 + *puVar9;\n                uVar10 = uVar10 + iVar6 + iVar7 + uVar5;\n                puVar9 = puVar8;\n                if (puVar3 <= puVar8) {\n                    arg_8h = arg_8h + arg_14h * 4;\n                    puVar9 = arg_8h;\n                }\n                iVar4 = iVar4 + -3;\n            } while ((iVar4 != 0) && (arg_8h < puVar1));\n            uVar5 = (uVar5 & 0xffff) + (uVar5 >> 0x10) * 0xf;\n            uVar10 = (uVar10 & 0xffff) + (uVar10 >> 0x10) * 0xf;\n        } while (arg_8h < puVar1);\n        if (0xfff0 < uVar5) {\n            uVar5 = uVar5 - 0xfff1;\n        }\n    }\n    uVar10 = (uVar10 >> 0x10) * 0xf + (uVar10 & 0xffff);\n    if (0xfff0 < uVar10) {\n        uVar10 = uVar10 - 0xfff1;\n    }\n    uVar5 = uVar10 << 0x10 | uVar5;\n    dVar2 = uVar5;\n    if (uVar5 < 0) {\n        dVar2 = dVar2 + *0x4c81d0;\n    }\n    return dVar2;\n}\n",
        "token_count": 605
    },
    "00498709": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00498709(uint arg_8h, uint arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = fcn.0041adc4(arg_8h);\n    iVar2 = **(*0x4d1924 + iVar2 * 4);\n    iVar1 = *(iVar2 + 0x84);\n    if (iVar1 == -1) {\n        uVar3 = (**(iVar2 + 8))(arg_8h, 0x20, arg_ch, arg_10h & 0xffff | arg_14h << 0x10);\n    }\n    else {\n        fcn.00496ed3(iVar1);\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 195
    },
    "0049942c": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0049942c(uint hDlg, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(hDlg, 0xffffffec);\n    if ((uVar1 & 0x10000) == 0) {\n        uVar2 = (*_sym.imp.USER32.dll_DefDlgProcW)(hDlg, 0x84, 0, arg_ch & 0xffff | arg_10h << 0x10);\n    }\n    else {\n        uVar2 = 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 155
    },
    "00403181": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403181(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(*(*(param_1 + -0x88) + 4) + -0x88 + param_1) = 0x49ce30;\n    fcn.00403207();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    iVar1 = *(param_1 + -0x84);\n    while (iVar1 != 0) {\n        iVar1 = *(iVar1 + 4);\n        fcn.0047bf9f();\n    }\n    *(param_1 + -0x7c) = 0;\n    return;\n}\n",
        "token_count": 205
    },
    "004050f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004050f7(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint *arg_14h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    \n    fcn.0040bfbf();\n    while( true ) {\n        uVar1 = *(arg_8h + *arg_ch * 2);\n        if ((((0x5a < uVar1) || (uVar1 < 0x41)) && ((uVar1 < 0x61 || (0x7a < uVar1)))) &&\n           (((uVar1 < 0x30 || (0x39 < uVar1)) && (uVar1 != 0x5f)))) break;\n        fcn.004051ec(uVar1);\n        *arg_ch = *arg_ch + 1;\n    }\n    fcn.0040c7c9();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(*arg_14h, arg_14h[1]);\n    iVar2 = fcn.0040528d();\n    if (iVar2 < 0) {\n        iVar2 = (**(**0x4d2394 + 4))(*arg_14h);\n        if (iVar2 < 0) {\n            fcn.0040bef7(0x34);\n            fcn.0040bf6f(arg_14h);\n            return;\n        }\n        arg_8h_00 = 1;\n    }\n    else {\n        if ((((uVar1 != 0x20) && (uVar1 != 0x2c)) &&\n            (((uVar1 != 0x29 && ((uVar1 != 9 && (uVar1 != 0x3d)))) && (uVar1 != 0x28)))) &&\n           ((uVar1 != 0x5d && (uVar1 != 0)))) {\n            fcn.0040bef7(0xffffffff);\n            *arg_10h = -1;\n            return;\n        }\n        arg_8h_00 = 0;\n    }\n    fcn.0040bef7(arg_8h_00);\n    *arg_10h = iVar2;\n    return;\n}\n",
        "token_count": 501
    },
    "00462d4e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00462d4e(uint arg_8h, uint *arg_ch, uint arg_10h, uint32_t *arg_14h, uint32_t arg_18h)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    uint32_t in_EAX;\n    int16_t *piVar3;\n    uint16_t *puVar4;\n    uint32_t arg_8h_00;\n    uint32_t uVar5;\n    \n    if (arg_18h <= *arg_14h && *arg_14h != arg_18h) {\ncode_r0x00462e8c:\n        return in_EAX & 0xffffff00;\n    }\n    fcn.004084e7(0x49d0d0);\n    while( true ) {\n        piVar3 = fcn.004058ca(*arg_14h);\n        iVar1 = *piVar3;\n        if ((((iVar1 == 0x3a) || (iVar1 == 0x3b)) || (iVar1 == 0x5d)) || (uVar5 = *arg_14h,  arg_18h < uVar5)) break;\n        *arg_14h = uVar5 + 1;\n        puVar4 = fcn.004058ca(uVar5);\n        fcn.004051ec(*puVar4);\n    }\n    in_EAX = fcn.00403536();\n    if (in_EAX != '\\0') goto code_r0x00462e8c;\n    fcn.0040c7c9();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(*arg_ch, arg_ch[1]);\n    uVar5 = *arg_14h;\n    puVar4 = fcn.004058ca(uVar5);\n    uVar2 = *puVar4;\n    in_EAX = uVar2;\n    if (uVar2 != 0x3a) {\n        if ((uVar2 != 0x3b) && (uVar2 != 0x5d)) goto code_r0x00462e8c;\n        if (uVar2 != 0x3a) goto code_r0x00462e14;\n    }\n    *arg_14h = uVar5 + 1;\ncode_r0x00462e14:\n    fcn.004084e7(0x49d0d0);\n    while (uVar5 = *arg_14h,  uVar5 <= arg_18h) {\n        puVar4 = fcn.004058ca(uVar5);\n        uVar2 = *puVar4;\n        arg_8h_00 = uVar5 + 1;\n        piVar3 = fcn.004058ca(arg_8h_00);\n        if (uVar2 == 0x3b) {\n            if (*piVar3 != 0x3b) goto code_r0x00462e6f;\n            arg_8h_00 = uVar5 + 2;\n        }\n        *arg_14h = arg_8h_00;\n        fcn.004051ec(uVar2);\n    }\n    while( true ) {\n        piVar3 = fcn.004058ca(uVar5);\n        iVar1 = *piVar3;\n        if ((iVar1 != 0x20) && (iVar1 != 9)) break;\ncode_r0x00462e6f:\n        uVar5 = uVar5 + 1;\n        *arg_14h = uVar5;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 799
    },
    "00463f58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00463f58(uint arg_8h, uint32_t *arg_ch, uint32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    uint32_t in_EAX;\n    int16_t *piVar3;\n    uint16_t *puVar4;\n    uint *in_EDX;\n    uint32_t arg_8h_00;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    if (arg_10h <= *arg_ch && *arg_ch != arg_10h) {\ncode_r0x00464097:\n        return in_EAX & 0xffffff00;\n    }\n    fcn.004084e7(0x49d0d0);\n    while( true ) {\n        piVar3 = fcn.004058ca(*arg_ch);\n        iVar1 = *piVar3;\n        if ((((iVar1 == 0x3a) || (iVar1 == 0x3b)) || (iVar1 == 0x5d)) || (uVar5 = *arg_ch,  arg_10h < uVar5)) break;\n        *arg_ch = uVar5 + 1;\n        puVar4 = fcn.004058ca(uVar5);\n        fcn.004051ec(*puVar4);\n    }\n    in_EAX = fcn.00403536();\n    if (in_EAX != '\\0') goto code_r0x00464097;\n    fcn.0040c7c9();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(*in_EDX, in_EDX[1]);\n    uVar5 = *arg_ch;\n    puVar4 = fcn.004058ca(uVar5);\n    uVar2 = *puVar4;\n    in_EAX = uVar2;\n    if (uVar2 != 0x3a) {\n        if ((uVar2 != 0x3b) && (uVar2 != 0x5d)) goto code_r0x00464097;\n        if (uVar2 != 0x3a) goto code_r0x0046401f;\n    }\n    *arg_ch = uVar5 + 1;\ncode_r0x0046401f:\n    fcn.004084e7(0x49d0d0);\n    while (uVar5 = *arg_ch,  uVar5 <= arg_10h) {\n        puVar4 = fcn.004058ca(uVar5);\n        uVar2 = *puVar4;\n        arg_8h_00 = uVar5 + 1;\n        piVar3 = fcn.004058ca(arg_8h_00);\n        if (uVar2 == 0x3b) {\n            if (*piVar3 != 0x3b) goto code_r0x0046407a;\n            arg_8h_00 = uVar5 + 2;\n        }\n        *arg_ch = arg_8h_00;\n        fcn.004051ec(uVar2);\n    }\n    while( true ) {\n        piVar3 = fcn.004058ca(uVar5);\n        iVar1 = *piVar3;\n        if ((iVar1 != 0x20) && (iVar1 != 9)) break;\ncode_r0x0046407a:\n        uVar5 = uVar5 + 1;\n        *arg_ch = uVar5;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 773
    },
    "00468894": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00468894(int16_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    \n    puVar2 = fcn.0041fd8b(4);\n    if (*arg_8h == 9) {\n        *puVar2 = *(arg_8h + 4);\n        piVar1 = *(arg_8h + 4);\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 4))(piVar1);\n        }\n    }\n    else {\n        *puVar2 = 0;\n    }\n    return puVar2;\n}\n",
        "token_count": 144
    },
    "0047f65d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047f65d(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = **(arg_8h + 4);\n    if (puVar1[3] == 6) {\n        puVar1 = *puVar1;\n    }\n    if (puVar1[3] != 9) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 126
    },
    "00406328": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00406328(uint *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint32_t *puVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint arg_8h_00;\n    uint var_68h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_40h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    uVar7 = 0;\n    iVar2 = fcn.0040686d(*arg_8h, 1);\n    if ((iVar2 == 0) || (iVar2 = fcn.0040686d(*arg_8h, 2),  iVar2 == 0)) {\n        iVar2 = fcn.00472c17(L\">>>AUTOIT SCRIPT<<<\", &fcn.00406328::arg_ch, &fcn.00406328::arg_10h);\n        if (iVar2 == 0) {\n            iVar8 = 4;\n            var_18h._0_2_ = 0xffff;\n            iVar2 = *arg_ch;\n            *(in_ECX + 0x10) = iVar2;\n            arg_10h = iVar2 + 1;\n            uVar3 = -(ZEXT48(arg_10h) * 0x10 >> 0x20 != 0) | ZEXT48(arg_10h) * 0x10;\n            puVar4 = fcn.0041fd8b(-(0xfffffffb < uVar3) | uVar3 + 4);\n            if (puVar4 == NULL) {\n                puVar6 = NULL;\n            }\n            else {\n                puVar6 = puVar4 + 1;\n                *puVar4 = arg_10h;\n                puVar4 = puVar6;\n                for (uVar3 = arg_10h; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar4 = 0x49d114;\n                    puVar4[1] = 0;\n                    puVar4[2] = 0;\n                    puVar4[3] = 0;\n                    puVar4 = puVar4 + 4;\n                }\n            }\n            *(in_ECX + 0x4c) = puVar6;\n            var_18h._2_2_ = 0xffff;\n            var_10h = 1;\n            if (0 < *(in_ECX + 0x10)) {\n                var_ch = 0x10;\n                do {\n                    fcn.00405fc0();\ncode_r0x0044463b:\n                    do {\n                        iVar2 = iVar8 + 1;\n                        arg_10h = arg_10h & 0xffffff | *(arg_ch + iVar8) << 0x18;\n                        var_8h = iVar2;\n                        fcn.0040bef7(*(arg_ch + iVar8));\n                        if (var_18h < 0x10) {\n                            _var_20h = _var_20h & 0xffffffff00000000 | *(arg_ch + iVar2);\n                            iVar8 = iVar8 + 5;\n                        }\n                        else {\n                            cVar1 = fcn.00470af0();\n                            if (cVar1 == '\\0') {\n                                cVar1 = fcn.00470adc();\n                                if (cVar1 == '\\0') {\n                                    cVar1 = fcn.0041d6fa();\n                                    iVar8 = iVar2;\n                                    if (cVar1 != '\\0') {\n                                        uVar5 = fcn.0046959c(arg_ch, &fcn.00406328::var_8h);\n                                        var_14h = uVar5;\n                                        if (arg_10h._3_1_ == '1') {\n                                            fcn.0040b606(uVar5);\n                                            uVar3 = (**(**(in_ECX + 4) + 4))(var_40h);\n                                            fcn.0040b1ff();\n                                            arg_8h_00 = 1;\ncode_r0x00444719:\n                                            fcn.0040bef7(arg_8h_00);\n                                            _var_20h = _var_20h & 0xffffffff00000000 | uVar3;\n                                            uVar5 = var_14h;\n                                        }\n                                        else {\n                                            if (arg_10h._3_1_ == '0') {\n                                                fcn.0040b606(uVar5);\n                                                uVar3 = fcn.0040528d();\n                                                fcn.0040b1ff();\n                                                arg_8h_00 = 0;\n                                                goto code_r0x00444719;\n                                            }\n                                            if (arg_10h._3_1_ == '7') {\n                                                iVar2 = fcn.004694cb(uVar5);\n                                                if (iVar2 == 0) {\n                                                    fcn.004697b9(arg_8h, var_10h, L\"Bad directive syntax error\", \n                                                                 0x49d0d0);\n                                                    fcn.0041fd94(uVar5);\n                                                    fcn.0042490e(arg_ch);\n                                                    goto code_r0x004447a0;\n                                                }\n                                                fcn.0041fd94(uVar5);\n                                                iVar8 = var_8h;\n                                                goto code_r0x0044463b;\n                                            }\n                                            arg_8h_00 = 0x444753;\n                                            fcn.00470a78(uVar5);\n                                        }\n                                        fcn.0041fd94(uVar5, arg_8h_00);\n                                        iVar8 = var_8h;\n                                    }\n                                }\n                                else {\n                                    _var_20h = *(arg_ch + iVar2);\n                                    iVar8 = iVar8 + 9;\n                                }\n                            }\n                            else {\n                                _var_20h = *(arg_ch + iVar2);\n                                iVar8 = iVar8 + 9;\n                            }\n                        }\n                        fcn.0040bd9d(&fcn.00406328::var_20h);\n                    } while (arg_10h._3_1_ != '\\x7f');\n                    fcn.00405e82(0x444782);\n                    var_ch = var_ch + 0x10;\n                    var_10h = var_10h + 1;\n                } while (var_10h <= *(in_ECX + 0x10));\n            }\n            fcn.0042490e(arg_ch);\n            uVar7 = 1;\ncode_r0x004447a0:\n            fcn.004068db();\n            fcn.00405fc0();\n            fcn.0041fd94(0);\n            uVar3 = fcn.0041d6ea();\n            goto code_r0x0040638f;\n        }\n        fcn.004068db();\n        uVar5 = extraout_ECX_00;\n    }\n    else {\n        uVar5 = extraout_ECX;\n        if (*arg_10h != 4) {\n            *arg_10h = 2;\n            uVar3 = fcn.0040ad7c(arg_8h, arg_ch, arg_8h, 0x49d0d0, 0);\n            uVar7 = uVar3 & 0xff;\n            goto code_r0x0040638f;\n        }\n    }\n    uVar3 = fcn.0046d978(uVar5, *(in_ECX + 2));\ncode_r0x0040638f:\n    return uVar3 & 0xffffff00 | uVar7;\n}\n",
        "token_count": 1833
    },
    "0040d7c0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d7c0(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    char cVar3;\n    int32_t in_ECX;\n    int32_t extraout_EDX;\n    int32_t iVar4;\n    int32_t unaff_EDI;\n    uint in_stack_ffffffb8;\n    int32_t in_stack_ffffffbc;\n    uchar uStack33;\n    uint uStack32;\n    int32_t iStack28;\n    uint auStack24 [2];\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 1;\n    auStack24[0] = 0;\n    iVar4 = -1;\n    uStack16 = 0;\n    uStack32 = 0;\n    iStack28 = **(arg_8h + 4);\n    iVar2 = *(iStack28 + 8);\n    if (iVar2 == 0) {\n        fcn.0040f650(arg_8h, arg_ch);\ncode_r0x0040d832:\n        if ((iVar4 < 0) || (iVar4 = *(*(arg_8h + 4) + unaff_EDI * 4),  *(iVar4 + 8) == 0x7f)) goto code_r0x0040d815;\n        in_stack_ffffffbc = *(iVar4 + 10);\n        in_stack_ffffffb8 = 0x72;\n    }\n    else {\n        if (iVar2 == 1) {\n            iVar4 = fcn.00412c10(0, arg_8h, &uStack32, auStack24);\n            goto code_r0x0040d832;\n        }\n        if (iVar2 == 0x33) {\n            fcn.0040f8d0(arg_8h);\n            goto code_r0x0040d815;\n        }\n        if (iVar2 == 0x34) {\n            iVar4 = fcn.0040d840(0, arg_8h, &uStack32, auStack24, &uStack33);\n            goto code_r0x0040d832;\n        }\n        if (iVar2 != 0x35) {\n            if (iVar2 == 0x7f) goto code_r0x0040d815;\n            iVar4 = fcn.00410540(arg_8h, &uStack32, auStack24, 0xffffffff);\n            goto code_r0x0040d832;\n        }\n        cVar1 = *(in_ECX + 0x179);\n        cVar3 = fcn.00485520();\n        if (cVar3 != '\\0') {\n            iVar4 = extraout_EDX;\n            if (cVar1 != '\\0') {\n                iVar4 = *(extraout_EDX + 0x10);\n            }\n            iVar4 = fcn.004867e8(arg_8h, &uStack32, iVar4);\n            goto code_r0x0040d832;\n        }\n    }\n    fcn.004734ba(in_stack_ffffffb8, in_stack_ffffffbc);\ncode_r0x0040d815:\n    fcn.0040e8a0();\n    return;\n}\n",
        "token_count": 714
    },
    "0041ec9e": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ec9e(int32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = *(arg_8h + 8);\n    iVar5 = 0;\n    if (arg_ch < uVar2) {\n        piVar4 = *(arg_8h + 4) + arg_ch * 4;\n        do {\n            iVar1 = *(*piVar4 + 8);\n            if ((iVar1 == 0x33) && (cVar3 = fcn.004082dc(),  cVar3 != '\\0')) {\n                fcn.004734ba(0xb1, *(*piVar4 + 10));\n                return 0xffffffff;\n            }\n            if (iVar1 == 0x4e) {\ncode_r0x0041ed15:\n                iVar5 = iVar5 + 1;\n            }\n            else if (iVar1 == 0x4f) {\ncode_r0x0041ed12:\n                iVar5 = iVar5 + -1;\n            }\n            else {\n                if (iVar1 == 0x47) goto code_r0x0041ed15;\n                if (iVar1 == 0x48) goto code_r0x0041ed12;\n                if ((iVar1 == 0x40) && (iVar5 == 0)) {\n                    return 0;\n                }\n                if (iVar1 == 0x7f) {\n                    return 0;\n                }\n            }\n            arg_ch = arg_ch + 1;\n            piVar4 = piVar4 + 1;\n        } while (arg_ch < uVar2);\n    }\n    return 0;\n}\n",
        "token_count": 418
    },
    "004874c0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004874c0(uchar *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *in_EDX;\n    iVar3 = 0;\n    do {\n        iVar1 = *(*(*(in_ECX + 4) + iVar2 * 4) + 8);\n        if (iVar1 == 0x35) {\n            *in_EDX = iVar2 + 1;\n            if ((iVar3 == 0) && (arg_8h != NULL)) {\n                *arg_8h = 0;\n            }\n        }\n        else {\n            if (iVar1 == 0x47) {\n                iVar3 = iVar3 + 1;\n            }\n            else if (iVar1 == 0x48) {\n                if ((iVar3 == 0) && (*(*(*(in_ECX + 4) + 4 + iVar2 * 4) + 8) != 0x35)) {\n                    return;\n                }\n                iVar3 = iVar3 + -1;\n            }\n            else if (iVar1 == 0x7f) {\n                return;\n            }\n            *in_EDX = iVar2 + 1;\n            if ((iVar3 < 1) && (*(*(*(in_ECX + 4) + 4 + iVar2 * 4) + 8) != 0x35)) {\n                if (iVar1 != 0x48) {\n                    *in_EDX = iVar2;\n                }\n                return;\n            }\n        }\n        iVar2 = iVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 390
    },
    "004043c1": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004043c1(int32_t *param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int64_t iVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint var_ch;\n    uint var_8h;\n    \n    if (5 < param_1[3]) {\n        iVar3 = param_1[3] * 4;\n        iVar6 = fcn.0041fd8b(-(iVar3 >> 0x20 != 0) | iVar3);\n        iVar9 = *param_1;\n        iVar8 = 0;\n        iVar7 = param_1[3];\n        param_1[2] = iVar6;\n        if (0 < iVar7) {\n            do {\n                *(param_1[2] + iVar8 * 4) = iVar9;\n                iVar8 = iVar8 + 1;\n                iVar7 = param_1[3];\n                iVar9 = *(iVar9 + 0x24);\n            } while (iVar8 < iVar7);\n        }\n        do {\n            bVar4 = false;\n            iVar9 = 0;\n            if (iVar7 == 1 || iVar7 + -1 < 0) {\n                return;\n            }\n            do {\n                uVar1 = *(param_1[2] + iVar9 * 4);\n                uVar2 = *(param_1[2] + 4 + iVar9 * 4);\n                cVar5 = fcn.0041db5c();\n                if (cVar5 != '\\0') {\n                    bVar4 = true;\n                    *(param_1[2] + iVar9 * 4) = uVar2;\n                    *(param_1[2] + 4 + iVar9 * 4) = uVar1;\n                }\n                iVar7 = param_1[3];\n                iVar9 = iVar9 + 1;\n            } while (iVar9 < iVar7 + -1);\n        } while (bVar4);\n    }\n    return;\n}\n",
        "token_count": 468
    },
    "0045f696": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f696(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint8_t uVar3;\n    char cVar4;\n    uint uVar5;\n    ushort *in_ECX;\n    int32_t arg_8h_00;\n    float10 fVar6;\n    ulong uVar7;\n    ushort *arg_8h_01;\n    uint var_14h;\n    \n    arg_8h_01 = in_ECX;\n    (*_sym.imp.OLEAUT32.dll_VariantClear)();\n    arg_8h_00 = 0;\n    *(in_ECX + 4) = 0;\n    *(in_ECX + 6) = 0;\n    iVar1 = arg_8h[3];\n    if (0xe < iVar1 - 1U) {\n        return;\n    }\n    // switch table (15 cases) at 0x45f896\n    switch(*((iVar1 - 1U) * 4 + 0x45f896)) {\n    case 0x45f6c9:\n        *in_ECX = 0xb;\n        uVar3 = fcn.0041daf6();\n        in_ECX[4] = (uVar3 ^ 1) - 1;\n        break;\n    case 0x45f6e6:\n        *in_ECX = 3;\n        uVar5 = fcn.0040ce67();\n        goto code_r0x0045f6f3;\n    case 0x45f6fb:\n        *in_ECX = 5;\n        fVar6 = fcn.0040cfb5();\n        *(in_ECX + 4) = fVar6;\n        break;\n    case 0x45f710:\n        *in_ECX = 0x14;\n        uVar7 = fcn.0040cc8f();\n        *(in_ECX + 4) = uVar7;\n        *(in_ECX + 6) = uVar7 >> 0x20;\n        break;\n    case 0x45f728:\n        *in_ECX = 0x13;\n        uVar5 = fcn.00471dda();\n        goto code_r0x0045f6f3;\n    case 0x45f737:\n        *in_ECX = 8;\n        fcn.00408e90();\n        uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(*arg_8h[2]);\n        goto code_r0x0045f6f3;\n    case 0x45f751:\n        *in_ECX = 0x200c;\n        uVar5 = fcn.0045f971(arg_8h);\n        goto code_r0x0045f6f3;\n    case 0x45f761:\n        if (iVar1 == 8) {\n            arg_8h_00 = *arg_8h;\n        }\n        if (arg_8h_00 != 0) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopyInd)();\n        }\n        break;\n    case 0x45f77d:\n        if (iVar1 == 6) {\n            arg_8h_00 = *arg_8h;\n        }\n        fcn.0045f696(arg_8h_00);\n        pcVar2 = _sym.imp.OLEAUT32.dll_VariantCopy;\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n        (*_sym.imp.OLEAUT32.dll_VariantCopyInd)();\n        (*pcVar2)(&var_14h);\n        break;\n    case 0x45f7ab:\n        cVar4 = fcn.00401fb9(0x29);\n        if (cVar4 == '\\0') {\n            cVar4 = fcn.00401fb9(0x2a);\n            if (cVar4 != '\\0') {\n                *in_ECX = 1;\n            }\n        }\n        else {\n            *in_ECX = 10;\n            *(in_ECX + 4) = 0x80020004;\n        }\n        break;\n    case 0x45f7e4:\n        *in_ECX = 0x2011;\n        uVar5 = fcn.0045fae1(arg_8h);\ncode_r0x0045f6f3:\n        *(in_ECX + 4) = uVar5;\n        break;\n    case 0x45f7f7:\n        *in_ECX = 0x24;\n        fcn.0041fd5b(0x28, arg_8h_01);\n        if (arg_8h[3] == 0xc) {\n            arg_8h_00 = *arg_8h;\n        }\n        uVar5 = fcn.0045fbbe(arg_8h_00);\n        goto code_r0x0045f815;\n    case 0x45f81a:\n        *in_ECX = 0x24;\n        fcn.0041fd5b(0x28, arg_8h_01);\n        if (arg_8h[3] == 0xf) {\n            arg_8h_00 = *arg_8h;\n        }\n        uVar5 = fcn.0045fc00(arg_8h_00);\ncode_r0x0045f815:\n        *(in_ECX + 6) = uVar5;\n        break;\n    case 0x45f83a:\n        *in_ECX = 0x24;\n        fcn.0041fd5b(0x28, arg_8h_01);\n        if (arg_8h[3] == 0xd) {\n            arg_8h_00 = *(*arg_8h + 0x10);\n        }\n        uVar5 = fcn.0045fb87(arg_8h_00);\n        goto code_r0x0045f815;\n    case 0x45f85d:\n        *in_ECX = 0x24;\n        fcn.0041fd5b(0x28, arg_8h_01);\n        uVar5 = fcn.00471037(&var_14h);\n        uVar5 = fcn.0045fb43(uVar5);\n        *(in_ECX + 6) = uVar5;\n        fcn.0040b1ff();\n    }\n    return;\n}\n",
        "token_count": 1424
    },
    "0045fe17": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0045fe17(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *extraout_ECX;\n    uint extraout_EDX;\n    uint16_t uVar3;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_8h = param_1;\n    if (param_1 == NULL) {\n        var_4h = param_1;\n        fcn.0045fed6(0x80070057);\n        param_1 = extraout_ECX;\n        param_2 = extraout_EDX;\n    }\n    var_4h = NULL;\n    uVar3 = 0x1d;\n    iVar1 = (**(*param_1 + 0x38))(param_1, param_2, &var_4h);\n    if (iVar1 < 0) {\n        piVar2 = var_4h;\n        if (var_4h != NULL) {\n            piVar2 = (**(*var_4h + 8))(var_4h);\n        }\n        goto code_r0x0045fecf;\n    }\n    var_8h = NULL;\n    piVar2 = (**(*var_4h + 0xc))(var_4h, &var_8h);\n    if (piVar2 < 0) {\ncode_r0x0045feb4:\n        if (var_8h != NULL) {\n            piVar2 = (**(*var_4h + 0x4c))(var_4h, var_8h);\n        }\n    }\n    else if (var_8h != NULL) {\n        piVar2 = *(var_8h + 0x28);\n        if ((piVar2 == 0x6) || (piVar2 == NULL)) {\n            uVar3 = *(var_8h + 0x40);\n            if (uVar3 == 0x1d) {\n                piVar2 = fcn.0045fe17();\n                uVar3 = piVar2;\n            }\n            else if (piVar2 == NULL) {\n                uVar3 = 3;\n            }\n            else if (piVar2 + -3 == NULL) {\n                uVar3 = 0xd;\n                piVar2 = piVar2 + -3;\n            }\n            else {\n                piVar2 = piVar2 + -1;\n                if (piVar2 == NULL) {\n                    uVar3 = 9;\n                }\n            }\n        }\n        goto code_r0x0045feb4;\n    }\n    if (var_4h != NULL) {\n        piVar2 = (**(*var_4h + 8))(var_4h);\n    }\ncode_r0x0045fecf:\n    return piVar2 & 0xffff0000 | uVar3;\n}\n",
        "token_count": 640
    },
    "0047dbba": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047dbba(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = **(arg_8h + 4);\n    if (puVar1[3] == 6) {\n        puVar1 = *puVar1;\n    }\n    if (puVar1[3] != 0xb) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 126
    },
    "0047dc6f": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047dc6f(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    puVar3 = **(arg_8h + 4);\n    if (puVar3[3] == 6) {\n        puVar3 = *puVar3;\n    }\n    if (puVar3[3] == 7) {\n        uVar1 = fcn.00471dda();\n        iVar2 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x0047dca1;\n        }\n    }\n    uVar1 = 0;\ncode_r0x0047dca1:\n    fcn.0040e8a0();\n    *arg_ch = uVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 220
    },
    "0047dd41": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047dd41(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = **(arg_8h + 4);\n    if (puVar1[3] == 6) {\n        puVar1 = *puVar1;\n    }\n    if (puVar1[3] != 0xf) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 126
    },
    "0047dd76": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047dd76(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.0046ff5f();\n    if (cVar1 == '\\0') {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 94
    },
    "0047ddae": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047ddae(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = **(arg_8h + 4);\n    if (puVar1[3] == 6) {\n        puVar1 = *puVar1;\n    }\n    if (puVar1[3] != 7) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 125
    },
    "0047dde3": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047dde3(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = **(arg_8h + 4);\n    if (puVar1[3] == 6) {\n        puVar1 = *puVar1;\n    }\n    if (puVar1[3] != 4) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 125
    },
    "0047f707": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047f707(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = **(arg_8h + 4);\n    if (puVar2[3] == 6) {\n        puVar2 = *puVar2;\n    }\n    iVar1 = puVar2[3];\n    fcn.0040e8a0();\n    arg_ch[3] = 1;\n    if (iVar1 == 0xd) {\n        *arg_ch = 2;\n    }\n    else {\n        *arg_ch = iVar1 == 0xe;\n    }\n    return 0;\n}\n",
        "token_count": 158
    },
    "0047f74f": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047f74f(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    \n    cVar1 = fcn.00401fb9(0x29);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.00401fb9(0x2a);\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        uVar2 = -(cVar1 != '\\0') & 2;\n    }\n    else {\n        fcn.0040e8a0();\n        uVar2 = 1;\n        arg_ch[3] = 1;\n    }\n    *arg_ch = uVar2;\n    return 0;\n}\n",
        "token_count": 178
    },
    "0047f8da": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047f8da(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint *puVar3;\n    uint uStack28;\n    uint uStack24;\n    int32_t iStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    puVar3 = **(arg_8h + 4);\n    if (puVar3[3] == 6) {\n        puVar3 = *puVar3;\n    }\n    uStack24 = 0x49d100;\n    iStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    if (puVar3[3] == 0xf) {\n        fcn.0046b90f(&uStack24);\n        if (iStack20 != 0) goto code_r0x0047f950;\n    }\n    iVar1 = *(*in_ECX + 4);\n    iVar2 = *(iVar1 + 8 + in_ECX);\n    if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n        iVar2 = *(iVar2 + 0x38);\n    }\n    *(iVar2 + 0x14) = 1;\n    iVar2 = *(iVar1 + 8 + in_ECX);\n    if (*(iVar1 + 0xd + in_ECX) != '\\0') {\n        iVar2 = *(iVar2 + 0x38);\n    }\n    *(iVar2 + 0x18) = 0;\ncode_r0x0047f950:\n    fcn.00470b9e(&uStack28);\n    fcn.00466f23();\n    fcn.0041fd94(uStack28);\n    return 0;\n}\n",
        "token_count": 404
    },
    "0048331d": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048331d(int32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.0041da5f();\n    if (cVar1 == '\\0') {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 94
    },
    "00489fd4": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00489fd4(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    \n    puVar1 = **(arg_8h + 4);\n    if (puVar1[3] == 6) {\n        puVar1 = *puVar1;\n    }\n    if (puVar1[3] != 0xc) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 126
    },
    "0048ea79": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0048ea79(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t **ppuVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint16_t *arg_8h_00;\n    uint16_t *puVar6;\n    \n    fcn.00408e90();\n    ppuVar2 = *(arg_8h + 8);\n    iVar5 = 1;\n    arg_8h_00 = *ppuVar2;\n    if ((((arg_8h_00 == NULL) || (ppuVar2 = NULL,  *arg_8h_00 == 0)) ||\n        (ppuVar2 = fcn.004251c2(arg_8h_00, 0x49d108),  ppuVar2 == NULL)) ||\n       ((ppuVar2 = fcn.004251c2(arg_8h_00, 0x4c7888),  ppuVar2 == NULL ||\n        (ppuVar2 = fcn.004251c2(arg_8h_00, 0x4c7890),  ppuVar2 == NULL)))) {\ncode_r0x0048ebc7:\n        uVar4 = ppuVar2 & 0xffffff00;\n    }\n    else {\n        if (*arg_8h_00 != 0) {\n            do {\n                puVar6 = arg_8h_00;\n                if (iVar5 == 1) {\n                    uVar1 = *arg_8h_00;\n                    ppuVar2 = uVar1;\n                    if ((uVar1 == 0x2b) || (uVar1 == 0x2d)) {\n                        arg_8h_00 = arg_8h_00 + 1;\n                    }\n                    else {\n                        if (uVar1 == 0x2e) {\ncode_r0x0048eb93:\n                            iVar5 = 3;\n                            goto code_r0x0048ebd9;\n                        }\n                        if ((ppuVar2 < 0x30) || (0x39 < ppuVar2)) goto code_r0x0048ebc7;\n                    }\n                    iVar5 = 2;\n                    puVar6 = arg_8h_00;\n                }\n                else if (iVar5 == 2) {\n                    iVar3 = fcn.00426342(*arg_8h_00);\n                    if (iVar3 == 0) {\n                        uVar1 = *arg_8h_00;\n                        ppuVar2 = uVar1;\n                        if (uVar1 == 0x2e) goto code_r0x0048eb93;\n                        if (uVar1 != 0x65) goto code_r0x0048ebc7;\n                        iVar5 = 5;\n                    }\n                    else {\n                        puVar6 = arg_8h_00 + 1;\n                    }\n                }\n                else if (iVar5 == 3) {\n                    iVar5 = 4;\n                    puVar6 = arg_8h_00 + 1;\n                }\n                else if (iVar5 == 4) {\ncode_r0x0048eb25:\n                    iVar3 = fcn.00426342(*arg_8h_00);\n                    if (iVar3 == 0) {\n                        ppuVar2 = NULL;\n                        if ((*arg_8h_00 != 0x65) || (iVar5 == 6)) goto code_r0x0048ebc7;\n                        iVar5 = 5;\n                    }\n                    else {\n                        puVar6 = arg_8h_00 + 1;\n                    }\n                }\n                else if (iVar5 == 5) {\n                    iVar5 = 6;\n                    uVar1 = arg_8h_00[1];\n                    if ((uVar1 == 0x2b) || (puVar6 = arg_8h_00 + 1,  uVar1 == 0x2d)) {\n                        puVar6 = arg_8h_00 + 2;\n                    }\n                }\n                else if (iVar5 == 6) goto code_r0x0048eb25;\ncode_r0x0048ebd9:\n                arg_8h_00 = puVar6;\n            } while (*puVar6 != 0);\n            if (iVar5 == 4) {\n                return 1;\n            }\n            if (iVar5 == 6) {\n                return 1;\n            }\n        }\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 1011
    },
    "00490634": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00490634(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar1 = *(arg_8h + 8);\n    cVar2 = fcn.0048f4b0(arg_8h);\n    if ((cVar2 == '\\0') || (cVar2 = fcn.00463a9e(&var_14h, 1),  cVar2 == '\\0')) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        if (uVar1 < 6) {\n            var_ch = var_ch - var_14h;\n        }\n        else {\n            var_ch = fcn.0040ce67();\n        }\n        if (uVar1 < 7) {\n            var_8h = var_8h - var_10h;\n        }\n        else {\n            var_8h = fcn.0040ce67();\n        }\n        cVar2 = fcn.00401fb9(0x29);\n        if (cVar2 == '\\0') {\n            var_14h = fcn.0040ce67();\n        }\n        cVar2 = fcn.00401fb9(0x29);\n        if (cVar2 == '\\0') {\n            var_10h = fcn.0040ce67();\n        }\n        fcn.00463c6e(var_14h, var_10h, var_ch, var_8h);\n    }\n    return 0;\n}\n",
        "token_count": 402
    },
    "0046db2c": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0046db2c(uint arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_EDX;\n    uint lpdwHandle;\n    uint puLen;\n    uint32_t *var_10h;\n    uint32_t var_ch;\n    int32_t lplpBuffer;\n    uint pBlock;\n    \n    iVar2 = (*_sym.imp.VERSION.dll_GetFileVersionInfoSizeW)();\n    if (iVar2 == 0) {\n        var_ch = 0;\n    }\n    else {\n        pBlock = fcn.0041fd8b(iVar2);\n        var_ch = 0;\n        (*_sym.imp.VERSION.dll_GetFileVersionInfoW)();\n        iVar2 = fcn.004248f3(arg_8h);\n        iVar1 = (iVar2 + 0x1a) * 2;\n        iVar2 = fcn.0041fd8b(-(iVar1 >> 0x20 != 0) | iVar1);\n        fcn.00424913(iVar2, 0x49d034);\n        iVar3 = fcn.004251c2(arg_8h, 0x49d034);\n        if (iVar3 != 0) {\n            fcn.00428fc8(iVar2, L\"StringFileInfo\\\\\");\n            iVar3 = fcn.0042242a(arg_8h, 0x49d034);\n            if (iVar3 == 0) {\n                iVar3 = (*_sym.imp.VERSION.dll_VerQueryValueW)(pBlock, L\"\\\\VarFileInfo\\\\Translation\", &var_10h, &puLen);\n                if (iVar3 == 0) {\n                    fcn.00428fc8(iVar2, L\"04090000\");\n                }\n                else {\n                    arg_8h_00 = *var_10h;\n                    fcn.0040b66c(arg_8h_00, 0);\n                    fcn.0040b66c(arg_8h_00 >> 0x10, 0);\n                }\n                fcn.00428fc8(iVar2, 0x49d034);\n                fcn.00428fc8(iVar2, arg_8h);\n            }\n            else {\n                fcn.00428fc8(iVar2, arg_8h);\n            }\n        }\n        iVar3 = fcn.004249b8(arg_8h, L\"DefaultLangCodepage\");\n        if (iVar3 == 0) {\n            fcn.0042d27b(in_EDX, iVar2 + 0x20, 8);\n            *(in_EDX + 0x10) = 0;\n            fcn.0041fd94(pBlock);\n            fcn.0041fd94(iVar2);\n            var_ch = 1;\n        }\n        else {\n            iVar3 = (*_sym.imp.VERSION.dll_VerQueryValueW)(pBlock, iVar2, &lplpBuffer, &puLen);\n            if (iVar3 != 0) {\n                iVar3 = fcn.004251c2(arg_8h, 0x49d034);\n                if (iVar3 == 0) {\n                    fcn.0041faa3(in_EDX, L\"%u.%u.%u.%u\", *(lplpBuffer + 8) >> 0x10);\n                }\n                else {\n                    fcn.0042d27b(in_EDX, lplpBuffer, 0x200);\n                    *(in_EDX + 0x400) = 0;\n                }\n                var_ch = CONCAT31(var_ch._1_3_, 1);\n            }\n            fcn.0041fd94(pBlock);\n            fcn.0041fd94(iVar2);\n            var_ch = var_ch & 0xff;\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 870
    },
    "0040533e": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040533e(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int32_t *unaff_EBX;\n    int32_t unaff_EDI;\n    bool bVar5;\n    ushort in_stack_00000018;\n    ushort in_stack_0000001c;\n    uint uVar6;\n    uint uVar7;\n    uchar *puVar8;\n    \n    fcn.00441ef0();\n    bVar5 = false;\n    *0x4d2394 = arg_8h;\n    *0x4d2390 = 0;\n    *0x4d2392 = 0;\n    *0x4d2398 = 0;\n    *0x4d239c = 0;\n    *0x4d23a0 = 0;\n    *0x4d23a4 = 0;\n    *0x4d23a8 = 0x49d0fc;\n    *0x4d23ac = 0;\n    *0x4d23b0 = 0;\n    *0x4d23b4 = 0;\n    *0x4d23b8 = 0x49ce0c;\n    *0x4d23bc = 0;\n    *0x4d23c0 = 0;\n    *0x4d23c4 = 0;\n    *0x4d23c8 = 0x49d0fc;\n    *0x4d23cc = 0;\n    *0x4d23d0 = 0;\n    *0x4d23d4 = 0;\n    *0x4d23dc = 0;\n    *0x4d23e0 = 0x49ce08;\n    *0x4d23e4 = 0;\n    *0x4d23e8 = 0;\n    *0x4d23ec = 0;\n    *0x4d23f0 = 0x66;\n    fcn.0040c25d();\n    fcn.004058e5();\n    fcn.00404d82();\n    fcn.004052b7(L\"\\\\Include\\\\\");\n    fcn.00406aff(&stack0x00000010);\n    fcn.0040c25d();\n    fcn.0040bfbf();\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegQueryValueExW;\n    if (iVar2 == 0) {\n        puVar8 = &stack0xffffffe4;\n        uVar7 = 0;\n        uVar6 = 0;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(&stack0xfffffff4, 0x4af378, 0, 0);\n        if (iVar2 == 0) {\n            arg_8h_00 = fcn.0041fd8b(-(ZEXT48(puVar8 + 1) * 2 >> 0x20 != 0) | ZEXT48(puVar8 + 1) * 2);\n            fcn.004070c2(arg_8h_00);\n            iVar2 = (*pcVar1)(uVar6, 0x4af378, 0, 0, unaff_EDI, &stack0xffffffc8);\n            bVar5 = iVar2 == 0;\n            if (bVar5) {\n                *(unaff_EDI + (puVar8 & 0xfffffffe)) = 0;\n                fcn.004084e7(unaff_EDI);\n            }\n            *unaff_EBX = *unaff_EBX + -1;\n            if (*unaff_EBX == 0) {\n                uVar6 = 4;\n                fcn.0041fd4d(unaff_EBX);\n                fcn.0041fd94(unaff_EDI, unaff_EBX, uVar6);\n            }\n        }\n        iVar2 = 0;\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uVar7);\n        if (bVar5) {\n            in_stack_00000018 = 0;\n            do {\n                fcn.0040660f(iVar2);\n                piVar3 = fcn.0040660f(iVar2);\n                if ((*piVar3 == 0) || (piVar3 = fcn.0040660f(iVar2),  *piVar3 == 0x3b)) {\n                    iVar4 = fcn.004248f3(&stack0x00000024);\n                    if ((iVar4 != 0) &&\n                       (iVar4 = fcn.004248f3(&stack0x00000024),  *(&stack0x00000022 + iVar4 * 2) != 0x5c)) {\n                        fcn.00428fc8(&stack0x00000024, 0x49d034);\n                    }\n                    fcn.0040b606(&stack0x00000024);\n                    fcn.00406aff(&stack0x00000010);\n                    fcn.0040b1ff();\n                    in_stack_0000001c = 0;\n                    piVar3 = fcn.0040660f(iVar2);\n                    if (*piVar3 == 0) break;\n                }\n                else {\n                    fcn.00428fc8(&stack0x0000000c, &stack0xffffffd4);\n                }\n                iVar2 = iVar2 + 1;\n            } while( true );\n        }\n    }\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return 0x4d2390;\n}\n",
        "token_count": 1293
    },
    "004605c7": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004605c7(uint pclsid, int32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    int16_t *in_EDX;\n    uint lpData;\n    uint var_60h;\n    uint var_5ch;\n    uint var_4ch;\n    uint var_40h;\n    uint lpSubKey;\n    uint lpMachineName;\n    uint hKey;\n    uint phkResult;\n    uint32_t lpcbData;\n    \n    hKey = 0;\n    phkResult = 0;\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.004084e7(0x4c5970);\n    fcn.004052b7(in_ECX);\n    fcn.004052b7(L\"\\\\CLSID\");\n    fcn.0040bfbf();\n    if (in_EDX != NULL) {\n        if ((*in_EDX != 0x5c) && (in_EDX[1] != 0x5c)) {\n            fcn.004084e7(0x4c59a4);\n            fcn.004052b7(in_EDX);\n        }\n    }\n    if (arg_ch != 0) {\n        fcn.004222d0(&var_60h, 0, 0x20);\n        var_5ch = 0;\n        fcn.0040c1c3(&lpMachineName);\n        fcn.004052b7(L\"\\\\IPC$\");\n        var_4ch = var_40h;\n        iVar3 = (*_sym.imp.MPR.dll_WNetAddConnection2W)(&var_60h, arg_10h, arg_ch, 0);\n        if (iVar3 < 0) goto code_r0x00460727;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegConnectRegistryW)(lpMachineName, reloc.WSOCK32.dll_bind, &hKey);\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(hKey, lpSubKey, 0, 0x20019, &phkResult);\n        pcVar2 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n        if (iVar3 == 0) {\n            lpcbData = 0x1fe;\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(phkResult, 0, 0, 0, &lpData, &lpcbData);\n            if (iVar3 == 0) {\n                uVar1 = lpcbData & 0xfffffffe;\n                lpcbData = lpcbData >> 1;\n                *(&lpData + uVar1) = 0;\n                iVar3 = (*_sym.imp.ole32.dll_CLSIDFromString)(&lpData, pclsid);\n            }\n            (*pcVar2)(phkResult);\n        }\n        (*pcVar2)(hKey);\n    }\ncode_r0x00460727:\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return iVar3;\n}\n",
        "token_count": 744
    },
    "00471e7a": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t fcn.00471e7a(void)\n\n{\n    uint32_t uVar1;\n    \n    *0x4d06e0 = *0x4d06e0 + -1;\n    if (*0x4d06e0 == 0) {\n        fcn.00471f64();\n    }\n    uVar1 = **0x4d2fe4 ^ **0x4d2fe4 >> 0xb;\n    uVar1 = uVar1 ^ (uVar1 & 0xff3a58ad) << 7;\n    uVar1 = uVar1 ^ (uVar1 & 0xffffdf8c) << 0xf;\n    *0x4d2fe4 = *0x4d2fe4 + 1;\n    return (uVar1 >> 0x12 ^ uVar1) >> 1;\n}\n",
        "token_count": 194
    },
    "0040bef7": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bef7(uint arg_8h)\n\n{\n    uint *arg_8h_00;\n    ulong *in_ECX;\n    \n    if ((*(in_ECX + 1) - 0x30U < 0x10) && (arg_8h_00 = *in_ECX,  arg_8h_00 != NULL)) {\n        *arg_8h_00[3] = *arg_8h_00[3] + -1;\n        if (*arg_8h_00[3] == 0) {\n            fcn.0041fd94(*arg_8h_00);\n            fcn.0041fd4d(arg_8h_00[3]);\n        }\n        fcn.0041fd4d(arg_8h_00);\n    }\n    *(in_ECX + 1) = arg_8h;\n    if ((0x3f < arg_8h) || (arg_8h < 0x30)) {\n        if (arg_8h == 0x10) {\n            *(in_ECX + 4) = 0;\n        }\n        else if (arg_8h == 0x20) {\n            *in_ECX = 0;\n            return;\n        }\n    }\n    *in_ECX = 0;\n    return;\n}\n",
        "token_count": 295
    },
    "0040bf6f": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bf6f(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t *in_ECX;\n    int32_t in_stack_fffffff4;\n    int32_t iVar3;\n    \n    if (((0x2f < *(in_ECX + 2)) && (*(in_ECX + 2) < 0x40)) && (iVar3 = *in_ECX,  iVar3 != 0)) {\n        fcn.0041d962();\n        in_stack_fffffff4 = iVar3;\n    }\n    puVar2 = fcn.0041fd5b(0x10, in_stack_fffffff4);\n    *puVar2 = *arg_8h;\n    puVar2[1] = arg_8h[1];\n    puVar2[2] = arg_8h[2];\n    piVar1 = arg_8h[3];\n    puVar2[3] = piVar1;\n    *piVar1 = *piVar1 + 1;\n    *in_ECX = puVar2;\n    return;\n}\n",
        "token_count": 251
    },
    "0040b606": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b606(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    uint *puVar3;\n    uint *in_ECX;\n    \n    iVar1 = fcn.004248f3(arg_8h);\n    in_ECX[1] = iVar1;\n    if (iVar1 + 1 == 0) {\n        uVar2 = 8;\n    }\n    else {\n        uVar2 = iVar1 + 8U & 0xfffffff8;\n    }\n    in_ECX[2] = uVar2;\n    arg_8h_00 = fcn.0041fd8b(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n    *in_ECX = arg_8h_00;\n    fcn.00420db0(arg_8h_00, arg_8h, (iVar1 + 1) * 2);\n    puVar3 = fcn.0041fd5b(4, arg_8h_00);\n    *puVar3 = 1;\n    in_ECX[3] = puVar3;\n    return;\n}\n",
        "token_count": 274
    },
    "0040c7c9": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c7c9(uint *param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint unaff_EBX;\n    int32_t iVar4;\n    \n    iVar4 = *param_1[3];\n    if (1 < iVar4) {\n        *param_1[3] = iVar4 + -1;\n        puVar1 = fcn.0041fd5b(4, unaff_EBX);\n        *puVar1 = 1;\n        param_1[3] = puVar1;\n        iVar4 = param_1[1] + 1;\n        if (iVar4 == 0) {\n            uVar2 = 8;\n        }\n        else {\n            uVar2 = param_1[1] + 8 & 0xfffffff8;\n        }\n        param_1[2] = uVar2;\n        uVar3 = fcn.0041fd8b(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n        fcn.00420db0(uVar3, *param_1, iVar4 * 2);\n        *param_1 = uVar3;\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "0046c743": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046c743(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t var_4h;\n    \n    var_4h = -1;\n    cVar1 = fcn.0046c4b6(arg_8h, &var_4h);\n    if (((cVar1 == '\\0') || (var_4h < 7)) || (*0x4d2360 < var_4h)) {\n        uVar2 = 0;\n    }\n    else {\n        if (*(var_4h * 4 + 0x4d1b44) + 8 != arg_ch) {\n            fcn.0040c1c3(arg_ch);\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 188
    },
    "0046ebcd": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0046ebcd(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_EDX;\n    int32_t iVar2;\n    ulong uVar3;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = 0;\n    uVar1 = in_EDX - 1;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    if (uVar1 < 8) {\n        var_4h = 0;\n        var_8h = 1;\n        if (0 < in_EDX) {\n            do {\n                uVar3 = fcn.00441ce0();\n                uVar1 = *arg_8h;\n                *arg_8h = *arg_8h + uVar3;\n                arg_8h[1] = arg_8h[1] + (uVar3 >> 0x20) + CARRY4(uVar1, uVar3);\n                iVar2 = iVar2 + 1;\n                uVar1 = var_4h << 8 | var_8h >> 0x18;\n                var_8h = var_8h << 8;\n                var_4h = uVar1;\n            } while (iVar2 < in_EDX);\n        }\n        uVar1 = CONCAT31(uVar1 >> 8, 1);\n    }\n    else {\n        uVar1 = uVar1 & 0xffffff00;\n    }\n    return uVar1;\n}\n",
        "token_count": 354
    },
    "00471dda": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint32_t ** __fastcall fcn.00471dda(int32_t **param_1)\n\n{\n    int16_t *arg_8h;\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    float10 extraout_ST0;\n    int64_t iVar3;\n    int32_t **ppiStack12;\n    int32_t **ppiStack8;\n    \n    piVar1 = param_1[3];\n    if (piVar1 < 1) {\n        return NULL;\n    }\n    if (4 < piVar1) {\n        if (piVar1 == 0x7) {\n            return *param_1;\n        }\n        if (piVar1 != 0x8) {\n            return NULL;\n        }\n        return (*param_1)[2];\n    }\n    piVar1 = param_1[3];\n    if (piVar1 != 0x1) {\n        if (piVar1 == 0x2) {\n            return *param_1;\n        }\n        ppiStack12 = param_1;\n        ppiStack8 = param_1;\n        if (piVar1 == 0x3) {\n            iVar3 = fcn.00442050();\n            ppiVar2 = iVar3;\n            if (extraout_ST0 <= 0) {\n                return ppiVar2;\n            }\n            if (0xffffffff < iVar3) {\n                return ppiVar2;\n            }\n            if (-1 < iVar3) {\n                return ppiVar2;\n            }\n            return 0xffffffff;\n        }\n        if (piVar1 == 0x4) {\n            arg_8h = *param_1[2];\n            if ((*arg_8h == 0x30) && (((arg_8h[1] == 0x78 || (arg_8h[1] == 0x58)) && (param_1[2][1] < 0x13)))) {\n                fcn.004035b3(0x10);\n                return ppiStack12;\n            }\n            ppiVar2 = fcn.0042628b(arg_8h);\n            return ppiVar2;\n        }\n        if (piVar1 != 0x7) {\n            if (piVar1 == 0x9) {\n                if (*param_1 != '\\0') {\n                    return 0x1;\n                }\n            }\n            else if (piVar1 == 0xb) {\n                if (**param_1 < 5) {\n                    fcn.0046ebcd(&ppiStack12);\n                    return ppiStack12;\n                }\n                if (**param_1 < 9) {\n                    fcn.0046ebcd(&ppiStack12);\n                    return ppiStack12;\n                }\n            }\n            return NULL;\n        }\n    }\n    return *param_1;\n}\n",
        "token_count": 622
    },
    "00471e24": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00471e24(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = param_1[3];\n    if (piVar1 < 8) {\n        if ((piVar1 == 0x7) || (piVar1 == 0x1)) {\n            return 4;\n        }\n        if ((piVar1 == 0x2) || (piVar1 == 0x3)) {\n            return 8;\n        }\n        if (piVar1 == 0x4) {\n            return param_1[2][1] * 2 + 2;\n        }\n    }\n    else {\n        if (piVar1 == 0x9) {\n            return 1;\n        }\n        if (piVar1 == 0xb) {\n            return **param_1;\n        }\n        if (piVar1 == 0xc) {\n            return (*param_1)[3];\n        }\n    }\n    return 0;\n}\n",
        "token_count": 225
    },
    "0048f4b0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048f531)\n\nuint32_t __cdecl fcn.0048f4b0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint arg_ch;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint32_t uVar5;\n    uint arg_8h_00;\n    uchar auStack40 [36];\n    \n    arg_8h_00 = **(arg_8h + 4);\n    fcn.0040c5e7(arg_8h_00);\n    iVar1 = *(*(arg_8h + 4) + 4);\n    fcn.00408e90();\n    if (in_ECX + 0x1e8 != *(iVar1 + 8)) {\n        fcn.0040c1c3(*(iVar1 + 8));\n    }\n    uVar5 = 1;\n    uVar4 = fcn.00492968(1);\n    if (uVar4 < 1) {\n        uVar4 = uVar4 & 0xffffff00;\n    }\n    else {\n        fcn.004119e0(*(*(arg_8h + 4) + 8));\n        cVar2 = fcn.0046ff5f();\n        if (cVar2 == '\\0') {\n            uVar5 = 0;\n        }\n        else {\n            cVar2 = fcn.004039e5();\n            if (cVar2 == '\\0') {\n                fcn.0040c25d();\n                cVar2 = fcn.00462e95(arg_8h_00, auStack40);\n                if (cVar2 == '\\0') {\n                    fcn.00463908(arg_8h_00);\n                }\n                fcn.0040b1ff();\n            }\n            else {\n                cVar2 = fcn.0046ff5f();\n                if (cVar2 == '\\0') {\n                    fcn.00408e90();\n                    uVar3 = fcn.0046303a(arg_8h_00, unaff_EBX);\n                }\n                else {\n                    arg_ch = fcn.0040ce67();\n                    uVar3 = fcn.0046354b(arg_8h_00, arg_ch);\n                }\n                uVar5 = uVar3;\n            }\n        }\n        uVar4 = fcn.0040e8a0();\n        uVar4 = uVar4 & 0xffffff00 | uVar5;\n    }\n    return uVar4;\n}\n",
        "token_count": 583
    },
    "00492968": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00492968(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    fcn.004030e0();\n    if (*(in_ECX + 0x1e4) == 7) {\n        uVar1 = fcn.00471dda();\n        arg_8h = uVar1;\n        iVar2 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n        if (iVar2 != 0) {\n            fcn.00463908(uVar1);\n            fcn.004640c5(&arg_8h);\n            return 1;\n        }\n    }\n    else if (*(in_ECX + 0x1e4) == 4) {\n        fcn.00408e90();\n        uVar1 = fcn.00464144(*(in_ECX + 0x1e0), in_ECX + 0x1e8, in_ECX + 0x2d0, *(in_ECX + 0x2c4), *(in_ECX + 0x2cd), \n                             *(in_ECX + 0x2cc), arg_8h);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 280
    },
    "0041cd85": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041cd85(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint16_t *in_ECX;\n    uint8_t *in_EDX;\n    \n    do {\n        if (arg_8h == 0) {\n            return 0;\n        }\n        uVar2 = *in_ECX;\n        arg_8h = arg_8h + -1;\n        uVar1 = *in_EDX;\n        in_ECX = in_ECX + 1;\n        in_EDX = in_EDX + 1;\n    } while (uVar1 == uVar2);\n    return (-(uVar1 < uVar2) & 2) - 1;\n}\n",
        "token_count": 170
    },
    "00469b67": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00469b67(uint32_t *param_1)\n\n{\n    double dVar1;\n    double dVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    float10 fVar5;\n    uint32_t uStack28;\n    int32_t iStack24;\n    uint32_t uStack20;\n    int32_t iStack16;\n    double dStack12;\n    \n    uVar3 = -(param_1[8] != 0) & 2;\n    if (uVar3 <= *param_1) {\n        uVar3 = *param_1;\n    }\n    if (-1 < uVar3) {\n        if (uVar3 == 0) {\n            uVar3 = 0;\n        }\n        else if ((uVar3 < 0xf) && (iVar4 = (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&uStack28),  iVar4 != 0)) {\n            dStack12 = uVar3;\n            dVar1 = dStack12;\n            if (uVar3 < 0) {\n                dStack12 = dStack12 + *0x4c81d0;\n                dVar1 = dStack12;\n            }\n            do {\n                (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&uStack20);\n                dStack12 = CONCAT44((iStack16 - iStack24) - (uStack20 < uStack28), uStack20 - uStack28);\n                dVar2 = dStack12;\n                fVar5 = fcn.0041e364();\n            } while (dVar2 / fVar5 < dVar1);\n            return;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(uVar3);\n    }\n    return;\n}\n",
        "token_count": 403
    },
    "00469b7e": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00469b7e(int32_t param_1)\n\n{\n    double dVar1;\n    double dVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    float10 fVar5;\n    uint32_t uStack28;\n    int32_t iStack24;\n    uint32_t uStack20;\n    int32_t iStack16;\n    double dStack12;\n    \n    uVar3 = -(*(param_1 + 0x20) != 0) & 2;\n    if (uVar3 <= *(param_1 + 4)) {\n        uVar3 = *(param_1 + 4);\n    }\n    if (-1 < uVar3) {\n        if (uVar3 == 0) {\n            uVar3 = 0;\n        }\n        else if ((uVar3 < 0xf) && (iVar4 = (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&uStack28),  iVar4 != 0)) {\n            dStack12 = uVar3;\n            dVar1 = dStack12;\n            if (uVar3 < 0) {\n                dStack12 = dStack12 + *0x4c81d0;\n                dVar1 = dStack12;\n            }\n            do {\n                (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&uStack20);\n                dStack12 = CONCAT44((iStack16 - iStack24) - (uStack20 < uStack28), uStack20 - uStack28);\n                dVar2 = dStack12;\n                fVar5 = fcn.0041e364();\n            } while (dVar2 / fVar5 < dVar1);\n            return;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(uVar3);\n    }\n    return;\n}\n",
        "token_count": 413
    },
    "0049b866": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0049b866(int32_t param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    \n    param_1 = param_1 - param_2;\n    while ((uVar1 = *(param_1 + param_2),  uVar1 != 0 || (*param_2 != 0))) {\n        uVar2 = *param_2;\n        param_2 = param_2 + 1;\n        if (uVar1 != uVar2) {\n            return (-(uVar2 < uVar1) & 2) - 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 156
    },
    "0049b891": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0049b891(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint16_t *in_EDX;\n    \n    if (arg_8h != 0) {\n        iVar3 = in_ECX - in_EDX;\n        do {\n            uVar1 = *(iVar3 + in_EDX);\n            arg_8h = arg_8h + -1;\n            uVar2 = *in_EDX;\n            in_EDX = in_EDX + 1;\n            if (uVar2 != uVar1) {\n                return (-(uVar2 < uVar1) & 2) - 1;\n            }\n        } while (arg_8h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 193
    },
    "0047c171": {
        "rules": [
            "check HTTP status code/09dd97b2e76544bcbbe79d95da398605"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0047c171(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    ulong uVar5;\n    uint var_24h;\n    ushort var_6h;\n    uint var_4h;\n    \n    uVar4 = 0;\n    arg_8h_00 = (*_sym.imp.WININET.dll_InternetOpenUrlW)\n                          (*(in_ECX + 4), *(in_ECX + 0x20), 0, 0, *(in_ECX + 0x54) & 0x80000000, 0);\n    if (arg_8h_00 == 0) {\n        *(in_ECX + 0x18) = 0x29;\n    }\n    else {\n        fcn.0047cf1f(arg_8h_00, arg_8h);\n        iVar1 = (*_sym.imp.WININET.dll_HttpSendRequestW)(arg_8h_00, 0, 0, 0, 0);\n        if (iVar1 != 0) {\n            iVar1 = fcn.0047c355(arg_8h_00);\n            if (iVar1 == 200) {\n                arg_8h = 0;\n                var_4h = 0x20;\n                (*_sym.imp.WININET.dll_HttpQueryInfoW)(arg_8h_00, 5, &var_24h, &var_4h, &arg_8h);\n                var_6h = 0;\n                uVar5 = fcn.0042628b(&var_24h);\n                *(in_ECX + 0x10) = uVar5;\n                *(in_ECX + 0x14) = uVar5 >> 0x20;\n                if (arg_ch == '\\0') {\n                    *(in_ECX + 0x18) = 0;\n                    uVar3 = *(in_ECX + 0xd4);\n                    if (uVar3 != 0) {\n                        uVar3 = (*_sym.imp.KERNEL32.dll_SetEvent)(uVar3);\n                    }\n                    uVar4 = 1;\n                }\n                else {\n                    if (*(in_ECX + 0x30) == '\\0') {\n                        uVar3 = fcn.0047cd62(arg_8h_00);\n                    }\n                    else {\n                        uVar3 = fcn.0047ce38(arg_8h_00);\n                    }\n                    uVar4 = uVar3 & 0xff;\n                }\n                goto code_r0x0047c25a;\n            }\n        }\n        *(in_ECX + 0x18) = 0x2a;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    *(in_ECX + 0x1c) = uVar2;\n    uVar3 = *(in_ECX + 0xd4);\n    if (uVar3 != 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_SetEvent)(uVar3);\n    }\ncode_r0x0047c25a:\n    if (arg_8h_00 != 0) {\n        uVar3 = (*_sym.imp.WININET.dll_InternetCloseHandle)(arg_8h_00);\n    }\n    return uVar3 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 782
    },
    "0047c394": {
        "rules": [
            "check HTTP status code/09dd97b2e76544bcbbe79d95da398605"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0047c394(int32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    ulong uVar5;\n    uint var_24h;\n    ushort var_6h;\n    uint32_t var_4h;\n    \n    iVar2 = arg_8h;\n    var_4h = in_ECX[0x15];\n    if (*(arg_8h + 0x74) == 4) {\n        var_4h = var_4h | 0x800000;\n    }\n    uVar4 = 0;\n    iVar1 = (*_sym.imp.WININET.dll_InternetConnectW)\n                      (in_ECX[1], *(arg_8h + 0x10), *(arg_8h + 0x78), *(arg_8h + 0x20), *(arg_8h + 0x30), \n                       *(arg_8h + 0x70), 0, 0);\n    *in_ECX = iVar1;\n    if (iVar1 == 0) {\n        in_ECX[6] = 0xb;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        in_ECX[7] = iVar2;\n        uVar4 = in_ECX[0x35];\n        if (uVar4 != 0) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_SetEvent)(uVar4);\n        }\n        return uVar4 & 0xffffff00;\n    }\n    iVar2 = (*_sym.imp.WININET.dll_HttpOpenRequestW)(iVar1, 0, *(iVar2 + 0x60), 0, 0, 0, var_4h, 0);\n    if (iVar2 == 0) {\n        in_ECX[6] = 0xc;\n    }\n    else {\n        if (arg_ch != '\\0') {\n            fcn.0047cf1f(iVar2, arg_8h);\n        }\n        if ((var_4h & 0x1000) != 0) {\n            arg_8h = 4;\n            (*_sym.imp.WININET.dll_InternetQueryOptionW)(iVar2, 0x1f, &arg_ch, &arg_8h);\n            arg_ch = arg_ch | 0x100;\n            (*_sym.imp.WININET.dll_InternetSetOptionW)(iVar2, 0x1f, &arg_ch, 4);\n        }\n        iVar1 = (*_sym.imp.WININET.dll_HttpSendRequestW)(iVar2, 0, 0, 0, 0);\n        if ((iVar1 != 0) && (iVar1 = fcn.0047c355(iVar2),  iVar1 == 200)) {\n            arg_ch = 0;\n            arg_8h = 0x20;\n            (*_sym.imp.WININET.dll_HttpQueryInfoW)(iVar2, 5, &var_24h, &arg_8h, &arg_ch);\n            var_6h = 0;\n            uVar5 = fcn.0042628b(&var_24h);\n            in_ECX[4] = uVar5;\n            in_ECX[5] = uVar5 >> 0x20;\n            if (arg_10h == '\\0') {\n                in_ECX[6] = 0;\n                uVar3 = in_ECX[0x35];\n                if (uVar3 != 0) {\n                    uVar3 = (*_sym.imp.KERNEL32.dll_SetEvent)(uVar3);\n                }\n                uVar4 = 1;\n            }\n            else {\n                if (*(in_ECX + 0xc) == '\\0') {\n                    uVar3 = fcn.0047cd62(iVar2);\n                }\n                else {\n                    uVar3 = fcn.0047ce38(iVar2);\n                }\n                uVar4 = uVar3 & 0xff;\n            }\n            goto code_r0x0047c514;\n        }\n        in_ECX[6] = 0xd;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    in_ECX[7] = iVar1;\n    uVar3 = in_ECX[0x35];\n    if (uVar3 != 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_SetEvent)(uVar3);\n    }\ncode_r0x0047c514:\n    if (iVar2 != 0) {\n        uVar3 = (*_sym.imp.WININET.dll_InternetCloseHandle)(iVar2);\n    }\n    return uVar3 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 1075
    },
    "00408273": {
        "rules": [
            "hash data using djb2/7c4211d97aa54a3fa9be92a08fd675ee"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408273(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar1 = arg_8h[1] * 2;\n    iVar2 = 0x1505;\n    if (0 < iVar1) {\n        do {\n            iVar2 = iVar2 * 0x21 + *(iVar3 + *arg_8h);\n            iVar3 = iVar3 + 1;\n        } while (SBORROW4(iVar3, iVar1) != iVar3 + arg_8h[1] * -2 < 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 161
    },
    "00471ec0": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nfloat10 fcn.00471ec0(void)\n\n{\n    double dVar1;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    *0x4d06e0 = *0x4d06e0 + -1;\n    if (*0x4d06e0 == 0) {\n        fcn.00471f64();\n    }\n    uVar2 = **0x4d2fe4 ^ **0x4d2fe4 >> 0xb;\n    uVar2 = uVar2 ^ (uVar2 & 0xff3a58ad) << 7;\n    uVar2 = uVar2 ^ (uVar2 & 0xffffdf8c) << 0xf;\n    uVar2 = uVar2 >> 0x12 ^ uVar2;\n    dVar1 = uVar2;\n    if (uVar2 < 0) {\n        dVar1 = dVar1 + *0x4c81d0;\n    }\n    *0x4d2fe4 = *0x4d2fe4 + 1;\n    return dVar1 * *0x4c81a0;\n}\n",
        "token_count": 258
    },
    "00463b0c": {
        "rules": [
            "search for credit card data/ac143e9ae29c414184a69c9308e24693",
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00463b0c(uint arg_8h)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t arg_8h_00;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *in_ECX;\n    uint var_18h;\n    uint hWnd;\n    \n    fcn.0040bfbf();\n    uVar3 = *in_ECX;\n    cVar2 = fcn.00463c4b();\n    if (cVar2 == '\\0') {\n        uVar4 = fcn.00463bcd();\n        if (uVar4 == 0) {\n            uVar4 = 0x7fff;\n        }\n        iVar1 = (uVar4 + 1) * 2;\n        arg_8h_00 = fcn.0041fd8b(-(iVar1 >> 0x20 != 0) | iVar1);\n        iVar5 = (*_sym.imp.USER32.dll_SendMessageW)(uVar3, 0xd, uVar4 + 1, arg_8h_00);\n        if (0 < iVar5) {\n            uVar6 = fcn.00428d10(arg_8h_00);\n            if (uVar6 == uVar4) {\n                uVar4 = 0;\n                if (uVar6 != 0) {\n                    do {\n                        if (0x5e < *(uVar4 + arg_8h_00) - 0x20U) goto code_r0x00463bb4;\n                        uVar4 = uVar4 + 1;\n                    } while (uVar4 < uVar6);\n                }\n                fcn.00463930(arg_8h_00);\n                fcn.00408725();\n                fcn.0040b1ff();\n            }\n            else {\ncode_r0x00463bb4:\n                fcn.004084e7(arg_8h_00);\n            }\n        }\n        fcn.0041fd94(arg_8h_00);\n        uVar3 = 1;\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 492
    },
    "00468cd3": {
        "rules": [
            "search for credit card data/ac143e9ae29c414184a69c9308e24693",
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00468cd3(uint lpString2)\n\n{\n    int16_t iVar1;\n    int64_t iVar2;\n    bool bVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    ushort extraout_var;\n    uint uVar6;\n    int32_t iVar7;\n    int16_t iVar8;\n    uint var_4h;\n    \n    iVar7 = 0;\n    iVar8 = 0;\n    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2);\n    iVar2 = (iVar4 + 1) * 2;\n    iVar5 = fcn.0041fd8b(-(iVar2 >> 0x20 != 0) | iVar2);\n    (*_sym.imp.KERNEL32.dll_lstrcpyW)(iVar5, lpString2);\n    *(iVar5 + iVar4 * 2) = 0;\n    iVar1 = *(iVar5 + -2 + iVar4 * 2);\n    if ((iVar1 == 0x2a) || (iVar1 == 0x5e)) {\n        iVar8 = 0x4000;\n        *(iVar5 + -2 + iVar4 * 2) = 0;\n    }\n    do {\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(*(iVar7 * 4 + 0x4c6320), iVar5);\n        if (iVar4 == 0) {\n            iVar8 = iVar8 + *(iVar7 * 2 + 0x4c62d8);\n            bVar3 = true;\n            goto code_r0x00468d60;\n        }\n        iVar7 = iVar7 + 1;\n    } while (iVar7 < 0x24);\n    bVar3 = false;\ncode_r0x00468d60:\n    fcn.0041fd94(iVar5);\n    if (bVar3) {\n        uVar6 = CONCAT22(extraout_var, iVar8);\n    }\n    else {\n        uVar6 = 0xffff;\n    }\n    return uVar6;\n}\n",
        "token_count": 454
    },
    "0046303a": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0046303a(uint arg_8h, int32_t arg_ch)\n\n{\n    char16_t cVar1;\n    char16_t cVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    code *pcVar5;\n    char cVar6;\n    int16_t *piVar7;\n    int32_t iVar8;\n    char16_t *pcVar9;\n    uint16_t *puVar10;\n    uint uVar11;\n    uint32_t uVar12;\n    int32_t in_ECX;\n    int32_t iVar13;\n    uint *puVar14;\n    uint32_t uVar15;\n    int32_t in_stack_ffffffac;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_28h;\n    uint32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar15 = 0;\n    *(in_ECX + 0x88) = 0;\n    *(in_ECX + 0xd8) = 0;\n    var_ch = in_ECX;\n    fcn.0040c25d();\n    fcn.0040c25d();\n    iVar13 = *(arg_ch + 4);\n    if (iVar13 != 0) {\n        in_stack_ffffffac = 0x463080;\n        piVar7 = fcn.004058ca(0);\n        if (*piVar7 == 0x5b) {\n            in_stack_ffffffac = iVar13 + -1;\n            piVar7 = fcn.004058ca(in_stack_ffffffac);\n            if (*piVar7 == 0x5d) {\n                var_4h = iVar13 + -2;\n                var_14h = 1;\ncode_r0x004630ad:\n                do {\n                    while( true ) {\n                        in_stack_ffffffac = arg_ch;\n                        cVar6 = fcn.00462d4e(arg_ch, &fcn.0046303a::var_38h, &fcn.0046303a::var_28h, \n                                             &fcn.0046303a::var_14h, var_4h);\n                        if (cVar6 == '\\0') goto code_r0x00463450;\n                        iVar8 = fcn.004248f3(L\"CLASS\");\n                        iVar13 = var_34h;\n                        var_10h = var_34h;\n                        var_8h = var_38h;\n                        if (var_34h != iVar8) break;\n                        pcVar9 = L\"CLASS\";\n                        if (var_34h != 0) {\n                            iVar8 = var_34h;\n                            do {\n                                cVar1 = *pcVar9;\n                                var_18h = cVar1;\n                                cVar2 = *(var_38h + -0x4c5bc0 + pcVar9);\n                                in_ECX = var_ch;\n                                if (cVar2 != cVar1) {\n                                    iVar8 = (-(cVar2 < cVar1) & 0xfffffffe) + 1;\n                                    goto code_r0x00463111;\n                                }\n                                pcVar9 = pcVar9 + 1;\n                                iVar8 = iVar8 + -1;\n                            } while (iVar8 != 0);\n                        }\n                        iVar8 = 0;\ncode_r0x00463111:\n                        if (iVar8 != 0) break;\n                        *(in_ECX + 0x88) = *(in_ECX + 0x88) | 1;\n                        puVar14 = in_ECX + 0x8c;\ncode_r0x004633dd:\n                        if (puVar14 != &fcn.0046303a::var_28h) {\n                            fcn.0040c1c3(&fcn.0046303a::var_28h);\n                        }\n                    }\n                    iVar8 = fcn.004248f3(L\"CLASSNN\");\n                    if (iVar13 == iVar8) {\n                        pcVar9 = L\"CLASSNN\";\n                        if (iVar13 != 0) {\n                            do {\n                                cVar1 = *pcVar9;\n                                var_18h = cVar1;\n                                cVar2 = *(pcVar9 + var_8h + -0x4c5bd0);\n                                in_ECX = var_ch;\n                                if (cVar2 != cVar1) {\n                                    iVar8 = (-(cVar2 < cVar1) & 0xfffffffe) + 1;\n                                    goto code_r0x00463173;\n                                }\n                                pcVar9 = pcVar9 + 1;\n                                iVar13 = iVar13 + -1;\n                            } while (iVar13 != 0);\n                        }\n                        iVar8 = 0;\ncode_r0x00463173:\n                        iVar13 = var_10h;\n                        if (iVar8 == 0) {\n                            *(in_ECX + 0x88) = *(in_ECX + 0x88) | 8;\n                            puVar14 = in_ECX + 0x9c;\n                            goto code_r0x004633dd;\n                        }\n                    }\n                    iVar8 = fcn.004248f3(L\"REGEXPCLASS\");\n                    if (iVar13 == iVar8) {\n                        pcVar9 = L\"REGEXPCLASS\";\n                        if (iVar13 != 0) {\n                            do {\n                                cVar1 = *pcVar9;\n                                var_18h = cVar1;\n                                cVar2 = *(pcVar9 + var_8h + -0x4c5be0);\n                                in_ECX = var_ch;\n                                if (cVar2 != cVar1) {\n                                    iVar8 = (-(cVar2 < cVar1) & 0xfffffffe) + 1;\n                                    goto code_r0x004631d5;\n                                }\n                                pcVar9 = pcVar9 + 1;\n                                iVar13 = iVar13 + -1;\n                            } while (iVar13 != 0);\n                        }\n                        iVar8 = 0;\ncode_r0x004631d5:\n                        iVar13 = var_10h;\n                        if (iVar8 != 0) goto code_r0x0046320d;\n                        *(in_ECX + 0x88) = *(in_ECX + 0x88) | 0x10;\n                        fcn.004082a1();\n                        iVar13 = fcn.0040817f(&fcn.0046303a::var_28h);\n                    }\n                    else {\ncode_r0x0046320d:\n                        iVar8 = fcn.004248f3(0x4c5bf8);\n                        if (iVar13 == iVar8) {\n                            puVar10 = 0x4c5bf8;\n                            if (iVar13 != 0) {\n                                do {\n                                    uVar3 = *puVar10;\n                                    var_18h = uVar3;\n                                    uVar4 = *(var_8h + -0x4c5bf8 + puVar10);\n                                    in_ECX = var_ch;\n                                    if (uVar4 != uVar3) {\n                                        iVar8 = (-(uVar4 < uVar3) & 0xfffffffe) + 1;\n                                        goto code_r0x0046324a;\n                                    }\n                                    puVar10 = puVar10 + 1;\n                                    iVar13 = iVar13 + -1;\n                                } while (iVar13 != 0);\n                            }\n                            iVar8 = 0;\ncode_r0x0046324a:\n                            iVar13 = var_10h;\n                            if (iVar8 == 0) {\n                                *(in_ECX + 0x88) = *(in_ECX + 0x88) | 0x20;\n                                uVar11 = fcn.00426261(var_28h);\n                                *(in_ECX + 0xcc) = uVar11;\n                                goto code_r0x004630ad;\n                            }\n                        }\n                        iVar8 = fcn.004248f3(L\"NAME\");\n                        if (iVar13 == iVar8) {\n                            pcVar9 = L\"NAME\";\n                            if (iVar13 != 0) {\n                                do {\n                                    cVar1 = *pcVar9;\n                                    var_18h = cVar1;\n                                    cVar2 = *(var_8h + -0x4c5c00 + pcVar9);\n                                    in_ECX = var_ch;\n                                    if (cVar2 != cVar1) {\n                                        iVar8 = (-(cVar2 < cVar1) & 0xfffffffe) + 1;\n                                        goto code_r0x004632b5;\n                                    }\n                                    pcVar9 = pcVar9 + 1;\n                                    iVar13 = iVar13 + -1;\n                                } while (iVar13 != 0);\n                            }\n                            iVar8 = 0;\ncode_r0x004632b5:\n                            iVar13 = var_10h;\n                            if (iVar8 == 0) {\n                                *(in_ECX + 0x88) = *(in_ECX + 0x88) | 0x400;\n                                puVar14 = in_ECX + 0xac;\n                                goto code_r0x004633dd;\n                            }\n                        }\n                        cVar6 = fcn.00403536();\n                        if (cVar6 != '\\0') {\n                            *(in_ECX + 0x88) = *(in_ECX + 0x88) | 0x40;\n                            uVar11 = fcn.00426261(var_28h);\n                            *(in_ECX + 0xdc) = uVar11;\n                            goto code_r0x004630ad;\n                        }\n                        cVar6 = fcn.00403536();\n                        if (cVar6 != '\\0') {\n                            *(in_ECX + 0x88) = *(in_ECX + 0x88) | 0x80;\n                            uVar11 = fcn.00426261(var_28h);\n                            *(in_ECX + 0xe0) = uVar11;\n                            goto code_r0x004630ad;\n                        }\n                        cVar6 = fcn.00403536();\n                        if (cVar6 != '\\0') {\n                            *(in_ECX + 0x88) = *(in_ECX + 0x88) | 0x100;\n                            uVar11 = fcn.00426261(var_28h);\n                            *(in_ECX + 0xe4) = uVar11;\n                            goto code_r0x004630ad;\n                        }\n                        cVar6 = fcn.00403536();\n                        if (cVar6 != '\\0') {\n                            *(in_ECX + 0x88) = *(in_ECX + 0x88) | 0x200;\n                            uVar11 = fcn.00426261(var_28h);\n                            *(in_ECX + 0xe8) = uVar11;\n                            goto code_r0x004630ad;\n                        }\n                        cVar6 = fcn.00403536();\n                        if (cVar6 != '\\0') {\n                            *(in_ECX + 0x88) = *(in_ECX + 0x88) | 2;\n                            uVar11 = fcn.00426261(var_28h);\n                            *(in_ECX + 0xd0) = uVar11;\n                            goto code_r0x004630ad;\n                        }\n                        cVar6 = fcn.00403536();\n                        if (cVar6 != '\\0') {\n                            *(in_ECX + 0x88) = *(in_ECX + 0x88) | 4;\n                            puVar14 = in_ECX + 0xbc;\n                            goto code_r0x004633dd;\n                        }\n                        iVar8 = fcn.004248f3(0x49d0d0);\n                        if (iVar13 != iVar8) break;\n                        puVar10 = 0x49d0d0;\n                        if (iVar13 != 0) {\n                            var_8h = var_8h + -0x49d0d0;\n                            do {\n                                if (*(puVar10 + var_8h) != *puVar10) {\n                                    iVar13 = (-(*(puVar10 + var_8h) < *puVar10) & 0xfffffffe) + 1;\n                                    goto code_r0x00463435;\n                                }\n                                puVar10 = puVar10 + 1;\n                                iVar13 = iVar13 + -1;\n                            } while (iVar13 != 0);\n                        }\n                        iVar13 = 0;\n                    }\ncode_r0x00463435:\n                } while (iVar13 == 0);\n                goto code_r0x00463532;\n            }\n        }\ncode_r0x00463450:\n        uVar15 = *(in_ECX + 0x88);\n        if (uVar15 == 0) {\n            *(in_ECX + 0x88) = 8;\n            uVar15 = 8;\n            if (in_ECX + 0x9c != arg_ch) {\n                fcn.0040c1c3(arg_ch);\n                uVar15 = *(in_ECX + 0x88);\n            }\n        }\n        if ((uVar15 & 8) != 0) {\n            iVar13 = *(in_ECX + 0xa0);\n            *(in_ECX + 0x11c) = iVar13;\n            *(in_ECX + 0x120) = 0;\n            if (iVar13 != 0) {\n                while (iVar13 = iVar13 + -1,  -1 < iVar13) {\n                    in_stack_ffffffac = iVar13;\n                    puVar10 = fcn.0040660f(iVar13);\n                    iVar8 = fcn.00426342(*puVar10);\n                    if (iVar8 == 0) break;\n                    *(in_ECX + 0x120) = *(in_ECX + 0x120) + 1;\n                }\n            }\n        }\n        pcVar5 = _sym.imp.USER32.dll_EnumChildWindows;\n        uVar15 = 0;\n        *(in_ECX + 0x118) = 0;\n        (*pcVar5)(arg_8h, fcn.0046359e, in_ECX);\n        if ((*(in_ECX + 0xd8) == 0) && ((*(in_ECX + 0x88) & 8) != 0)) {\n            *(in_ECX + 0x118) = 0;\n            *(in_ECX + 0x88) = 4;\n            if (in_ECX + 0xbc != in_ECX + 0x9c) {\n                fcn.0040c1c3(in_ECX + 0x9c);\n            }\n            (*pcVar5)(arg_8h, fcn.0046359e, in_ECX);\n        }\n        if (*(in_ECX + 0xd8) == 0) goto code_r0x00463532;\n    }\n    fcn.00463908(in_stack_ffffffac);\n    uVar15 = 1;\ncode_r0x00463532:\n    fcn.0040b1ff();\n    uVar12 = fcn.0040b1ff();\n    return uVar12 & 0xffffff00 | uVar15;\n}\n",
        "token_count": 3370
    },
    "0049accc": {
        "rules": [
            "parse credit card information/29d58176023943f783771ab0ee81acbc"
        ],
        "decompiled_code": "\nuint16_t * __fastcall fcn.0049accc(uint16_t *param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *param_1;\n    do {\n        if (uVar1 == 0) {\n            return NULL;\n        }\n        uVar2 = uVar1;\n        if (uVar1 == 0x75) {\n            return param_1;\n        }\n        if (uVar1 == 0x70) {\n            param_1 = param_1 + param_1[1];\n        }\n        else {\n            if (uVar2 < 0x96) {\n                if (uVar2 == 0x95) {\ncode_r0x0049adb8:\n                    param_1 = param_1 + param_1[1];\n                }\n                else {\n                    if (uVar2 < 0x55) goto code_r0x0049ad4d;\n                    if (uVar2 < 0x5b) {\ncode_r0x0049ad8f:\n                        if ((param_1[1] == 0x10) || (param_1[1] == 0xf)) {\n                            param_1 = param_1 + 2;\n                        }\n                    }\n                    else {\n                        if (0x5d < uVar2) {\n                            if (uVar2 < 0x61) goto code_r0x0049ad8f;\n                            if (uVar2 != 0x61) goto code_r0x0049ad4d;\n                        }\n                        if ((param_1[2] == 0x10) || (param_1[2] == 0xf)) {\n                            param_1 = param_1 + 2;\n                        }\n                    }\n                }\n            }\n            else if (((uVar2 == 0x97) || (uVar2 == 0x99)) || (uVar2 == 0x9b)) goto code_r0x0049adb8;\ncode_r0x0049ad4d:\n            param_1 = param_1 + *(uVar2 + 0x4c2160);\n            if (((param_2 != 0) && (uVar2 - 0x1d < 0x38)) && ((param_1[-1] & 0xfc00) == 0xd800)) {\n                param_1 = param_1 + 1;\n            }\n        }\n        uVar1 = *param_1;\n    } while( true );\n}\n",
        "token_count": 573
    },
    "0049b8c1": {
        "rules": [
            "encrypt data using HC-128/11bb23636d2a4650a9dbaa6512d69580"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0049b8c1(uint32_t param_1, uint16_t *param_2)\n\n{\n    if (param_1 < 0x10000) {\n        *param_2 = param_1;\n        return 1;\n    }\n    *param_2 = param_1 - 0x10000 >> 10 | 0xd800;\n    param_2[1] = param_1 - 0x10000 & 0x3ff | 0xdc00;\n    return 2;\n}\n",
        "token_count": 119
    },
    "004350d7": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004350d7(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x30 + *((lpCriticalSection >> 6) * 4 + 0x4d0fe8));\n    return;\n}\n",
        "token_count": 71
    },
    "0043518e": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043518e(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x30 + *((lpCriticalSection >> 6) * 4 + 0x4d0fe8));\n    return;\n}\n",
        "token_count": 72
    },
    "0043abce": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0043abce(uint param_1, uint param_2, int32_t param_3, uint param_4)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    bool bVar7;\n    uint16_t in_FPUControlWord;\n    uint16_t in_FPUStatusWord;\n    unkbyte10 extraout_ST0;\n    float10 fVar8;\n    uchar in_XMM0 [16];\n    uint64_t uVar9;\n    uint unaff_retaddr;\n    uint32_t arg_8h;\n    \n    uVar1 = SUB162(in_XMM0 >> 0x30, 0);\n    uVar2 = (uVar1 & 0x7fff) + 0xcfd0;\n    bVar7 = uVar2 == 0x10c5;\n    if (uVar2 < 0x10c6) {\n        iVar6 = (ROUND(*0x4a3610 * SUB168(in_XMM0, 0)) + 0x1c7610U & 0x3f) * 0x20;\n        return CONCAT44(iVar6, iVar6 + 0x4ae1c0);\n    }\n    if (uVar2 < 0x10c6) {\n        uVar3 = uVar1 & 0x7fff;\n        pinsrw(in_XMM0, uVar3, 3);\n        return CONCAT44(param_2, uVar3);\n    }\n    uVar9 = fcn.00437d25();\n    uVar3 = uVar9;\n    arg_8h = uVar9 >> 0x20 & 0xffff0000 | in_FPUControlWord;\n    if (!bVar7) {\n        fVar8 = fcos(extraout_ST0);\n        uVar3 = uVar3 & 0xffff0000 | in_FPUStatusWord;\n        if ((in_FPUStatusWord & 0x400) != 0) {\n            do {\n                fVar8 = fVar8 - (fVar8 / *0x4a2f5a) * *0x4a2f5a;\n                uVar3 = uVar3 & 0xffff0000 | in_FPUStatusWord;\n            } while ((in_FPUStatusWord & 0x400) != 0);\n            fcos(fVar8);\n        }\n        if (*0x4d11f0 == 0) {\n            uVar4 = uVar3 & 0xffff0000 | in_FPUControlWord;\n            if (in_FPUControlWord != 0x27f) {\n                if (((in_FPUControlWord & 0x20) != 0) &&\n                   (uVar4 = uVar3 & 0xffff0000 | in_FPUStatusWord,  (in_FPUStatusWord & 0x20) != 0)) {\n                    uVar5 = fcn.00437c97(arg_8h, unaff_retaddr, param_3, param_4);\n                    return CONCAT44(arg_8h, uVar5);\n                }\n                uVar4 = uVar4 & 0xffff0020;\n            }\n            return CONCAT44(arg_8h, uVar4);\n        }\ncode_r0x00437d7e:\n        return CONCAT44(arg_8h, uVar3);\n    }\n    if (((uVar9 & 0xfffff) == 0) && (param_3 == 0)) {\n        uVar3 = 1;\n        if (*0x4d11f0 != 0) goto code_r0x00437d7e;\n        uVar3 = fcn.00437c97(arg_8h, unaff_retaddr, 0, param_4);\n    }\n    return CONCAT44(arg_8h, uVar3);\n}\n",
        "token_count": 869
    },
    "0046f1b8": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0046f1b8(int32_t param_1)\n\n{\n    uint *arg_8h;\n    \n    arg_8h = param_1 + -4;\n    fcn.00405f7b(param_1, 0x20, *arg_8h, 0x46f160);\n    fcn.00420038(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 95
    },
    "0046f80e": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046f80e(int32_t arg_8h, int32_t *arg_ch, uint *arg_10h)\n\n{\n    uint arg_ch_00;\n    int32_t *in_ECX;\n    int32_t iVar1;\n    \n    if (*(arg_8h + 0xc) == 4) {\n        iVar1 = 0;\n        *arg_ch = 0;\n        if (0 < *in_ECX) {\n            do {\n                arg_ch_00 = *(iVar1 * 0x20 + 0xc + in_ECX[1]);\n                fcn.00408e90();\n                iVar1 = fcn.004249b8(**(arg_8h + 8), arg_ch_00);\n                if (iVar1 == 0) break;\n                iVar1 = *arg_ch + 1;\n                *arg_ch = iVar1;\n            } while (iVar1 < *in_ECX);\n        }\n    }\n    else {\n        iVar1 = fcn.0040ce67();\n        *arg_ch = iVar1;\n    }\n    iVar1 = *arg_ch;\n    if ((iVar1 < *in_ECX) && (-1 < iVar1)) {\n        iVar1 = *(iVar1 * 0x20 + in_ECX[1]) + in_ECX[2];\n    }\n    else {\n        *arg_10h = 2;\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 321
    },
    "0043d266": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043d266(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.004209b0();\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00432eee(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    uVar1 = *0x4cc014 & 0x1f;\n    *(unaff_EBP + -0x1c) = (*0x4cc014 ^ *0x4d130c) >> uVar1 | (*0x4cc014 ^ *0x4d130c) << 0x20 - uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0043d2b4(0x4c8dd8, noname_1, unaff_retaddr);\n    fcn.004209f6();\n    return;\n}\n",
        "token_count": 282
    },
    "00401405": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00401405(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    int32_t var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    var_8h = 1;\n    _auStack8 = 0;\n    if (in_ECX == 0) {\n        return 0;\n    }\n    while (iVar2 = fcn.00426355(*(in_ECX + *in_EDX * 2)),  iVar2 != 0) {\n        *in_EDX = *in_EDX + 1;\n    }\n    iVar2 = *in_EDX;\n    uVar3 = *(in_ECX + iVar2 * 2);\n    *arg_8h = 0;\n    uVar4 = uVar3 - 0x2b;\n    if (uVar4 != 0) {\n        uVar4 = uVar3 - 0x2d;\n        if (uVar4 != 0) goto code_r0x0040144a;\n        var_8h = -1;\n    }\n    iVar2 = iVar2 + 1;\n    *in_EDX = iVar2;\ncode_r0x0040144a:\n    iVar1 = *(in_ECX + iVar2 * 2);\n    while ((iVar1 != 0 && (uVar4 = fcn.00428f9b(*(in_ECX + iVar2 * 2)),  uVar4 != 0))) {\n        _auStack8 = 0x1000000;\n        iVar2 = *in_EDX + 1;\n        *arg_8h = *arg_8h * 10 + -0x30 + *(in_ECX + *in_EDX * 2);\n        uVar4 = 0;\n        *in_EDX = iVar2;\n        iVar1 = *(in_ECX + iVar2 * 2);\n    }\n    *arg_8h = *arg_8h * var_8h;\n    return uVar4 & 0xffffff00 | _auStack8 >> 0x18;\n}\n",
        "token_count": 520
    },
    "004022cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004022cb(uint *param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint unaff_EDI;\n    \n    *param_1 = 0x49cdd8;\n    param_1[2] = 0;\n    param_1[3] = 0x80000000;\n    puVar1 = fcn.0041fd5b(0x10, unaff_EDI);\n    *puVar1 = 0x49cde8;\n    puVar1[1] = 0;\n    puVar1[2] = 0;\n    puVar1[3] = 0;\n    param_1[4] = puVar1;\n    uVar2 = fcn.0041fd8b(0x400);\n    param_1[5] = uVar2;\n    iVar3 = 0;\n    do {\n        *(iVar3 + param_1[5]) = 0;\n        iVar3 = iVar3 + 4;\n    } while (iVar3 < 0x400);\n    puVar1 = fcn.0041fd5b(4, unaff_EDI);\n    *puVar1 = 1;\n    param_1[1] = puVar1;\n    return param_1;\n}\n",
        "token_count": 294
    },
    "00402522": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402522(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_EDX;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar7 = 0;\n    iVar4 = *(in_EDX + 4);\n    var_4h = 0;\n    uVar2 = *(*(iVar4 + -4 + arg_8h * 4) + 8) == 0x4e;\n    do {\n        iVar1 = *(*(iVar4 + arg_8h * 4) + 8);\n        if (iVar1 == 0x4e) {\n            if (iVar7 == 0) {\n                uVar2 = uVar2 + 1;\n            }\n            else {\ncode_r0x004025bb:\n                if (uVar2 == 0) {\n                    return -1;\n                }\n            }\n        }\n        else if (iVar1 == 0x4f) {\n            if (iVar7 != 0) goto code_r0x004025bb;\n            uVar2 = uVar2 - 1;\n        }\n        else {\n            if ((iVar1 == 0x41) && (uVar2 == 0)) {\n                arg_8h = arg_8h + 1;\n                if (*(*(iVar4 + arg_8h * 4) + 8) != 0x4e) {\n                    return 0;\n                }\n                var_8h = 1;\n                if (arg_ch != NULL) {\n                    *arg_ch = 1;\n                    iVar3 = arg_8h * 4 + 4;\n                    iVar4 = *(in_EDX + 4);\n                    iVar1 = *(*(iVar3 + iVar4) + 8);\n                    while (iVar1 == 0x4e) {\n                        *arg_ch = *arg_ch + 1;\n                        iVar3 = iVar3 + 4;\n                        iVar4 = *(in_EDX + 4);\n                        iVar7 = var_4h;\n                        iVar1 = *(*(iVar3 + iVar4) + 8);\n                    }\n                }\n                iVar6 = 1;\n                iVar3 = 1;\n                piVar5 = iVar4 + arg_8h * 4;\n                do {\n                    piVar5 = piVar5 + 1;\n                    iVar1 = *(*piVar5 + 8);\n                    if (iVar1 == 0x4e) {\n                        if (iVar7 != 0) goto code_r0x00442cf1;\n                        iVar3 = iVar3 + 1;\n                    }\n                    else if (iVar1 == 0x4f) {\n                        if (iVar7 != 0) goto code_r0x00442cf1;\n                        iVar3 = iVar3 + -1;\n                    }\n                    else if (iVar1 == 0x47) {\n                        iVar7 = iVar7 + 1;\n                    }\n                    else if (iVar1 == 0x48) {\n                        iVar7 = iVar7 + -1;\n                    }\n                    else {\n                        if (iVar1 == 0x40) {\n                            if ((iVar3 == in_ECX + 1) && (iVar7 == 0)) {\n                                iVar6 = iVar6 + 1;\n                                goto code_r0x00442cf5;\n                            }\n                        }\n                        else if (iVar1 == 0x7f) {\n                            return var_8h;\n                        }\ncode_r0x00442cf1:\n                        if (iVar3 == 0) {\n                            return var_8h;\n                        }\n                    }\ncode_r0x00442cf5:\n                    if (iVar3 < in_ECX + 1) {\n                        if (var_8h < iVar6) {\n                            var_8h = iVar6;\n                        }\n                        iVar6 = 1;\n                    }\n                } while( true );\n            }\n            if (iVar1 == 0x47) {\n                iVar7 = iVar7 + 1;\n                var_4h = iVar7;\n            }\n            else {\n                if (iVar1 != 0x48) {\n                    if (iVar1 == 0x7f) {\n                        return -1;\n                    }\n                    goto code_r0x004025bb;\n                }\n                iVar7 = iVar7 + -1;\n                var_4h = iVar7;\n            }\n        }\n        arg_8h = arg_8h + 1;\n    } while( true );\n}\n",
        "token_count": 1091
    },
    "004025c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004025c1(uint *arg_8h)\n\n{\n    uint lpsz;\n    uint cchLength;\n    uint noname_2;\n    int32_t *arg_14h;\n    \n    lpsz = *arg_8h;\n    cchLength = arg_8h[1];\n    noname_2 = arg_8h[2];\n    arg_14h = arg_8h[3];\n    *arg_14h = *arg_14h + 1;\n    fcn.0040c6f0(lpsz, cchLength, noname_2, arg_14h);\n    return;\n}\n",
        "token_count": 143
    },
    "00403536": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00403536(int32_t *param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    uVar4 = param_1[1];\n    uVar2 = fcn.004248f3(param_2);\n    if (uVar4 == uVar2) {\n        if (uVar4 != 0) {\n            iVar3 = *param_1 - param_2;\n            do {\n                uVar1 = *(iVar3 + param_2);\n                if (uVar1 != *param_2) {\n                    uVar2 = (-(uVar1 < *param_2) & 0xfffffffe) + 1;\n                    goto code_r0x004432eb;\n                }\n                param_2 = param_2 + 1;\n                uVar4 = uVar4 - 1;\n            } while (uVar4 != 0);\n        }\n        uVar2 = 0;\ncode_r0x004432eb:\n        if (uVar2 == 0) {\n            return 1;\n        }\n    }\n    return uVar2 & 0xffffff00;\n}\n",
        "token_count": 276
    },
    "00403b6d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403b6d(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    bool bVar4;\n    int32_t extraout_ECX;\n    ulong uVar5;\n    uint var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_18h;\n    uint var_4h;\n    \n    fcn.00404343();\n    var_38h = 2;\n    bVar4 = false;\n    iVar1 = *arg_ch;\n    var_34h = iVar1 + -1;\n    while( true ) {\n        iVar2 = *arg_ch;\n        *arg_ch = iVar2 + 1;\n        uVar5 = fcn.004041dc(iVar2);\n        if ((uVar5 == 0) || (bVar4)) break;\n        piVar3 = **(uVar5 + 4);\n        if ((((*(piVar3 + 2) == 0) && (iVar2 = *piVar3,  iVar2 != 0xb)) && (iVar2 == 0xc)) && (extraout_ECX == 0)) {\n            bVar4 = true;\n            var_30h = uVar5 >> 0x20;\n        }\n    }\n    fcn.004042c5(&var_38h);\n    *arg_ch = iVar1;\n    fcn.0040e8a0();\n    fcn.0040e8a0();\n    return;\n}\n",
        "token_count": 358
    },
    "004041dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004041dc(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if ((*0x4d23a0 < arg_8h) || (arg_8h < 1)) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = arg_8h * 0x10 + *0x4d23dc;\n    }\n    return iVar1;\n}\n",
        "token_count": 98
    },
    "00404862": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00404862(uint32_t arg_8h, uchar *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_70h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    iVar4 = 0;\n    fcn.0040c25d();\n    var_5ch = 0x49d0fc;\n    var_58h = 0;\n    var_54h = 0;\n    var_50h = 0;\n    var_4ch._0_1_ = 0;\n    fcn.00406485(arg_8h);\n    *arg_ch = var_4ch;\n    fcn.004058e5();\n    fcn.0040b606(L\">>>AUTOIT NO CMDEXECUTE<<<\");\n    var_3ch = 0;\n    var_38h = 0;\n    var_34h._0_1_ = 0;\n    iVar1 = fcn.0040686d(*0x4d1418, 1);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00472c17(var_20h, &arg_8h, &arg_ch);\n        if (iVar1 == 0) {\n            fcn.0042490e(arg_8h);\n            fcn.004068db();\n            arg_8h = CONCAT13(1, arg_8h);\n            goto code_r0x004048db;\n        }\n        fcn.004068db();\n    }\n    arg_8h = arg_8h & 0xffffff;\ncode_r0x004048db:\n    fcn.0040b1ff();\n    fcn.0040c1c3(0x4d1418);\n    fcn.0040890f(&var_6ch);\n    fcn.0040b606(L\"CMDLINERAW\");\n    fcn.0040c117(&var_20h, &var_40h, 1, 0);\n    fcn.0040b1ff();\n    var_20h = 0x100;\n    var_18h = 0;\n    var_14h = 1;\n    fcn.0040b606(L\"CMDLINE\");\n    arg_ch = fcn.0040c117(&var_30h, &var_20h, 0, 0);\n    fcn.0040b1ff();\n    fcn.0040e8a0();\n    iVar1 = var_54h;\n    fcn.0040c25d();\n    fcn.00404aaf(&var_10h);\n    uVar3 = var_10h;\n    iVar2 = fcn.004249b8(L\"/ErrorStdOut\", var_10h);\n    if (iVar2 == 0) {\n        *0x4d1364 = 1;\n        iVar1 = iVar1 + -1;\n        fcn.00404aaf(&var_10h);\n        uVar3 = var_10h;\n    }\n    iVar2 = fcn.004249b8(L\"/AutoIt3OutputDebug\", uVar3);\n    if (iVar2 == 0) {\n        *0x4d1363 = 1;\n        iVar1 = iVar1 + -1;\n        fcn.00404aaf(&var_10h);\n        uVar3 = var_10h;\n    }\n    iVar2 = fcn.004249b8(L\"/AutoIt3ExecuteLine\", uVar3);\n    if (iVar2 == 0) {\n        *0x4d1404 = 1;\n        *0x4d1400 = arg_8h._3_1_ == '\\0';\n        fcn.004058e5();\n        fcn.00404aaf(&var_10h);\n        fcn.0040c1c3(&var_10h);\n        iVar1 = iVar1 + -2;\n        fcn.00404aaf(&var_10h);\n        uVar3 = var_10h;\n    }\n    iVar2 = fcn.004249b8(L\"/AutoIt3ExecuteScript\", uVar3);\n    if (iVar2 == 0) {\n        *0x4d1400 = 0;\n        if (arg_8h._3_1_ == '\\0') {\n            *0x4d1400 = 3;\n        }\n        fcn.00404aaf(&var_10h);\n        fcn.0040c1c3(&var_10h);\n        iVar1 = iVar1 + -2;\n        fcn.00404aaf(&var_10h);\n    }\n    if (*0x4d141c == 0) {\n        fcn.0040c1c3(&var_10h);\n        iVar1 = iVar1 + -1;\n        fcn.00404aaf(&var_10h);\n    }\n    if (iVar1 < 0) {\n        iVar1 = iVar4;\n    }\n    uVar3 = fcn.00407d93();\n    fcn.004083e0(uVar3, 1);\n    var_18h = 0;\n    var_14h = 1;\n    var_20h = iVar1;\n    fcn.00408a30(uVar3, &var_20h, 1);\n    fcn.0040e8a0();\n    if (0 < iVar1) {\n        do {\n            fcn.0040890f(&var_10h);\n            iVar4 = iVar4 + 1;\n            fcn.00408a30(uVar3, &var_30h, 1);\n            fcn.0040e8a0();\n            fcn.00404aaf(&var_10h);\n        } while (iVar4 < iVar1);\n    }\n    fcn.0040b1ff();\n    fcn.0040e8a0();\n    fcn.00404ae8();\n    return;\n}\n",
        "token_count": 1443
    },
    "00404cf7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404cf7(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *arg_8h_00;\n    int32_t in_ECX;\n    uint unaff_EDI;\n    int32_t *var_4h;\n    \n    piVar1 = fcn.0041fd5b(0x14, unaff_EDI);\n    fcn.0040c25d();\n    arg_8h_00 = in_ECX + 0x184 + arg_8h * 0x10;\n    var_4h = piVar1;\n    if (piVar1 + 1 != arg_8h_00) {\n        fcn.0040c1c3(arg_8h_00);\n    }\n    *piVar1 = arg_8h;\n    fcn.00404d4c(&var_4h);\n    return;\n}\n",
        "token_count": 204
    },
    "0040507f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040507f(uint arg_8h, int32_t arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    int32_t arg_10h_00;\n    \n    fcn.0040bfbf();\n    arg_10h_00 = *arg_10h;\n    uVar3 = *(arg_ch + arg_10h_00 * 2);\n    iVar1 = arg_10h_00 + 1;\n    *arg_10h = iVar1;\n    iVar2 = *(arg_ch + iVar1 * 2);\n    do {\n        if (iVar2 == 0) {\n            fcn.00469600(arg_8h, 0x138a, arg_10h_00);\n            return 0xffffffff;\n        }\n        uVar4 = *(arg_ch + iVar1 * 2);\n        if (uVar4 == uVar3) {\n            if (*(arg_ch + 2 + iVar1 * 2) != uVar3) {\n                *arg_10h = iVar1 + 1;\n                return 0;\n            }\n            fcn.004051ec(uVar4);\n            *arg_10h = *arg_10h + 2;\n        }\n        else {\n            fcn.004051ec(uVar4);\n            *arg_10h = *arg_10h + 1;\n        }\n        iVar1 = *arg_10h;\n        iVar2 = *(arg_ch + iVar1 * 2);\n    } while( true );\n}\n",
        "token_count": 368
    },
    "004052b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004052b7(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint *in_ECX;\n    uint unaff_EDI;\n    \n    iVar2 = *in_ECX[3];\n    if (1 < iVar2) {\n        *in_ECX[3] = iVar2 + -1;\n        puVar1 = fcn.0041fd5b(4, unaff_EDI);\n        *puVar1 = 1;\n        in_ECX[3] = puVar1;\n        iVar2 = fcn.004248f3(arg_8h);\n        iVar2 = iVar2 + in_ECX[1] + 1;\n        if (iVar2 == 0) {\n            uVar3 = 8;\n        }\n        else {\n            uVar3 = iVar2 + 7U & 0xfffffff8;\n        }\n        in_ECX[2] = uVar3;\n        uVar4 = fcn.0041fd8b(-(uVar3 * 2 >> 0x20 != 0) | uVar3 * 2);\n        fcn.00420db0(uVar4, *in_ECX, in_ECX[1] * 2 + 2);\n        *in_ECX = uVar4;\n    }\n    fcn.004052df(arg_8h);\n    return;\n}\n",
        "token_count": 321
    },
    "004052df": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004052df(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *in_ECX;\n    uint unaff_EDI;\n    \n    iVar1 = fcn.004248f3(arg_8h);\n    iVar3 = *in_ECX[3];\n    if (iVar3 < 2) {\n        fcn.0040be83(in_ECX[1] + iVar1);\n        iVar3 = *in_ECX;\n    }\n    else {\n        *in_ECX[3] = iVar3 + -1;\n        puVar2 = fcn.0041fd5b(4, unaff_EDI);\n        *puVar2 = 1;\n        in_ECX[3] = puVar2;\n        iVar3 = in_ECX[1] + 1 + iVar1;\n        if (iVar3 == 0) {\n            uVar4 = 8;\n        }\n        else {\n            uVar4 = iVar3 + 7U & 0xfffffff8;\n        }\n        in_ECX[2] = uVar4;\n        iVar3 = fcn.0041fd8b(-(uVar4 * 2 >> 0x20 != 0) | uVar4 * 2);\n        fcn.00420db0(iVar3, *in_ECX, in_ECX[1] * 2 + 2);\n        *in_ECX = iVar3;\n    }\n    fcn.00420db0(iVar3 + in_ECX[1] * 2, arg_8h, iVar1 * 2);\n    in_ECX[1] = in_ECX[1] + iVar1;\n    *(*in_ECX + in_ECX[1] * 2) = 0;\n    return;\n}\n",
        "token_count": 413
    },
    "004054e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004054e4(void)\n\n{\n    int32_t iVar1;\n    \n    *0x4d19a0 = 0xffffffff;\n    *0x4d19a4 = 0xffffffff;\n    *0x4d1994 = 0x1010101;\n    *0x4d1990 = 0;\n    *0x4d1998 = 0;\n    *0x4d199a = 1;\n    *0x4d199c = 9;\n    *0x4d19a8 = 0;\n    fcn.0040b606(L\"Exit\");\n    fcn.0040b606(L\"Script Paused\");\n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    *0x4d19fc = *0x4d19ac;\n    *0x4d1a00 = *0x4d19b0;\n    *0x4d1a04 = *0x4d19b4;\n    *0x4d1a08 = *0x4d19b8;\n    iVar1 = 0xf;\n    **0x4d19b8 = **0x4d19b8 + 1;\n    *0x4d1a0c = *0x4d19bc;\n    *0x4d1a10 = *0x4d19c0;\n    *0x4d1a14 = *0x4d19c4;\n    *0x4d1a18 = *0x4d19c8;\n    **0x4d19c8 = **0x4d19c8 + 1;\n    *0x4d1a1c = 0;\n    *0x4d1a20 = 0;\n    *0x4d1a24 = 0;\n    *0x4d1a30 = 0;\n    do {\n        fcn.0040c25d();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    *0x4d1b24 = 0;\n    *0x4d1b28 = 0;\n    *0x4d1b2c = 0;\n    *0x4d1b30 = 0;\n    *0x4d1b34 = 0;\n    *0x4d1b38 = 0;\n    *0x4d1b3c = 0;\n    *0x4d1b40 = 0;\n    *0x4d2360 = 0;\n    *0x4d2364 = 0xffffffff;\n    return 0x4d1990;\n}\n",
        "token_count": 611
    },
    "004058a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004058a3(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint in_EDX;\n    \n    if (arg_8h != 0) {\n        fcn.0042d27b(in_ECX, in_EDX, arg_8h + -1);\n        *(in_ECX + -2 + arg_8h * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0040597b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0040597b(void)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    \n    uVar1 = fcn.004059a7(L\"SwapMouseButtons\", 4, &var_8h);\n    return uVar1 & 0xffffff00 | var_8h == 0x31;\n}\n",
        "token_count": 89
    },
    "00405b89": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00405b89(uint *param_1)\n\n{\n    fcn.0041fd4d(*param_1);\n    fcn.0041fd4d(param_1);\n    return param_1;\n}\n",
        "token_count": 53
    },
    "00405ba6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405ba6(ushort *param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    \n    puVar2 = *(param_1 + 4);\n    while (puVar2 != NULL) {\n        puVar1 = puVar2[3];\n        fcn.0041fd94(*puVar2);\n        fcn.0041fd4d(puVar2);\n        puVar2 = puVar1;\n    }\n    puVar2 = *(param_1 + 0x26);\n    uVar3 = 0;\n    if (puVar2 != NULL) {\n        if (puVar2[-1] == 0) {\n            fcn.0041fd94(puVar2 + -1);\n        }\n        else {\n            (***puVar2)(3);\n        }\n    }\n    fcn.0041fd94(*(param_1 + 10));\n    *(param_1 + 4) = 0;\n    *(param_1 + 6) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 10) = 0;\n    *(param_1 + 0x26) = 0;\n    *param_1 = 0;\n    fcn.00408320();\n    fcn.00403109();\n    if (*(param_1 + 0x2c) != 0) {\n        do {\n            puVar2 = **(*(param_1 + 0x2a) + uVar3 * 4);\n            if (puVar2 != NULL) {\n                (***puVar2)(1);\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *(param_1 + 0x2c));\n    }\n    uVar3 = 0;\n    if (*(param_1 + 0x2c) != 0) {\n        do {\n            fcn.0041fd4d(*(*(param_1 + 0x2a) + uVar3 * 4));\n            *(*(param_1 + 0x2a) + uVar3 * 4) = 0;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *(param_1 + 0x2c));\n    }\n    *(param_1 + 0x2c) = 0;\n    return;\n}\n",
        "token_count": 539
    },
    "00405f7b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405f7b(uint arg_8h, int32_t arg_ch, int32_t arg_10h, code *arg_14h)\n\n{\n    arg_ch = arg_ch * arg_10h;\n    if (arg_10h != 0) {\n        do {\n            arg_ch = (*arg_14h)();\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return arg_ch;\n}\n",
        "token_count": 113
    },
    "00407bbe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00407bbe(int32_t param_1)\n\n{\n    fcn.00407bee();\n    fcn.0040b1ff();\n    fcn.00407bee();\n    fcn.0041fd94(*(param_1 + 4));\n    fcn.0041fd4d(param_1);\n    return param_1;\n}\n",
        "token_count": 82
    },
    "0040817f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040817f(uint arg_8h)\n\n{\n    uint32_t *arg_ch;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.004082a1();\n    uVar2 = arg_8h;\n    iVar1 = fcn.0040822d(arg_8h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0041b728(0, &var_4h, &arg_8h);\n        *(in_ECX + 8) = iVar1;\n        if (iVar1 == 0) {\n            return arg_8h;\n        }\n        uVar3 = fcn.0041dbc0(&var_4h);\n        arg_ch = in_ECX + 0x18;\n        *(in_ECX + 0xc) = uVar3;\n        fcn.0041e1d7(2, arg_ch);\n        uVar4 = (*arg_ch + 1) * 3;\n        *arg_ch = uVar4;\n        fcn.0041f6a6(uVar2, *(in_ECX + 8), *(in_ECX + 0xc), uVar4);\n        uVar4 = *arg_ch;\n    }\n    else {\n        *(in_ECX + 8) = *(iVar1 + 0x14);\n        *(in_ECX + 0xc) = *(iVar1 + 0x18);\n        uVar4 = *(iVar1 + 0x1c);\n        *(in_ECX + 0x18) = uVar4;\n    }\n    uVar2 = fcn.0041fd8b(-(uVar4 * 4 >> 0x20 != 0) | uVar4 * 4);\n    *(in_ECX + 0x14) = uVar2;\n    return 0;\n}\n",
        "token_count": 439
    },
    "0040822d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040822d(uint arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    iVar3 = fcn.00408273(arg_8h);\n    piVar4 = 0x4d2400;\n    while( true ) {\n        iVar1 = *piVar4;\n        if (iVar1 == 0) {\n            return 0;\n        }\n        if ((*(iVar1 + 0x10) == iVar3) && (cVar2 = fcn.004082dc(),  cVar2 != '\\0')) break;\n        piVar4 = piVar4 + 1;\n        if (0x4d24ff < piVar4) {\n            return 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 191
    },
    "004082dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004082dc(int32_t *param_1, uint16_t **param_2)\n\n{\n    uint16_t uVar1;\n    uint32_t in_EAX;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    \n    puVar4 = param_1[1];\n    if (puVar4 == param_2[1]) {\n        puVar2 = *param_2;\n        if (puVar4 != NULL) {\n            iVar3 = *param_1 - puVar2;\n            do {\n                uVar1 = *(iVar3 + puVar2);\n                if (uVar1 != *puVar2) {\n                    in_EAX = (-(uVar1 < *puVar2) & 0xfffffffe) + 1;\n                    goto code_r0x0040830e;\n                }\n                puVar2 = puVar2 + 1;\n                puVar4 = puVar4 + -1;\n            } while (puVar4 != NULL);\n        }\n        in_EAX = 0;\ncode_r0x0040830e:\n        if (in_EAX == 0) {\n            return 1;\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 282
    },
    "004083e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004083e0(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    \n    fcn.0040c910();\n    if ((arg_ch != 0) && (*(*arg_8h + 0x210) = 0,  0 < arg_ch)) {\n        puVar5 = &arg_ch;\n        iVar7 = arg_ch;\n        do {\n            puVar1 = puVar5 + 1;\n            puVar5 = puVar5 + 1;\n            fcn.004084b9(*puVar1);\n            iVar7 = iVar7 + -1;\n        } while (iVar7 != 0);\n    }\n    iVar6 = 0;\n    *(*arg_8h + 0x10c) = *(*arg_8h + 0x210);\n    *(*arg_8h + 8) = 1;\n    iVar7 = *arg_8h;\n    if (0 < *(iVar7 + 0x10c)) {\n        iVar8 = 0xc;\n        do {\n            *(iVar8 + iVar7) = *(iVar8 + 0x104 + iVar7);\n            iVar7 = *arg_8h;\n            uVar3 = *(iVar8 + iVar7) * *(iVar7 + 8);\n            *(iVar7 + 8) = uVar3;\n            iVar7 = *arg_8h;\n            if (0x1000000 < *(iVar7 + 8)) {\n                *(iVar7 + 8) = 0;\n                return uVar3 & 0xffffff00;\n            }\n            iVar6 = iVar6 + 1;\n            iVar8 = iVar8 + 4;\n        } while (iVar6 < *(iVar7 + 0x10c));\n    }\n    iVar2 = *(iVar7 + 8) * 4;\n    uVar4 = fcn.0041fd8b(-(iVar2 >> 0x20 != 0) | iVar2);\n    *(*arg_8h + 4) = uVar4;\n    iVar6 = 0;\n    iVar7 = *arg_8h;\n    if (0 < *(iVar7 + 8)) {\n        do {\n            *(*(iVar7 + 4) + iVar6 * 4) = 0;\n            iVar6 = iVar6 + 1;\n            iVar7 = *arg_8h;\n        } while (iVar6 < *(iVar7 + 8));\n    }\n    return CONCAT31(iVar6 >> 8, 1);\n}\n",
        "token_count": 608
    },
    "004088bb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004088bb(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    if (in_ECX[2] < arg_8h + 1U) {\n        if (arg_8h == -1) {\n            uVar1 = 8;\n        }\n        else {\n            uVar1 = arg_8h + 8U & 0xfffffff8;\n        }\n        in_ECX[2] = uVar1;\n        fcn.0041fd94(*in_ECX);\n        iVar2 = fcn.0041fd8b(-(in_ECX[2] * 2 >> 0x20 != 0) | in_ECX[2] * 2);\n        *in_ECX = iVar2;\n        *(iVar2 + arg_8h * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "00408e71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00408e71(int32_t arg_8h)\n\n{\n    int16_t *in_ECX;\n    int16_t in_DX;\n    \n    if (arg_8h != 0) {\n        do {\n            if (*in_ECX == in_DX) {\n                return in_ECX;\n            }\n            in_ECX = in_ECX + 1;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return NULL;\n}\n",
        "token_count": 119
    },
    "00408fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00408fa0(uint param_1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    \n    iVar2 = fcn.004248f3(param_1);\n    iVar1 = (iVar2 + 1) * 2;\n    arg_8h = fcn.0041fd8b(-(iVar1 >> 0x20 != 0) | iVar1);\n    fcn.00424913(arg_8h, param_1);\n    return arg_8h;\n}\n",
        "token_count": 123
    },
    "0040c0a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040c0a8(uint16_t **arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint16_t *puVar5;\n    bool bVar6;\n    \n    puVar5 = in_ECX[1];\n    puVar4 = arg_8h[1];\n    if (puVar5 == NULL) {\n        if (puVar4 != NULL) {\n            return -1;\n        }\n    }\n    else if (puVar4 == NULL) {\n        return 1;\n    }\n    puVar2 = *arg_8h;\n    if (puVar5 < puVar4) {\n        if (puVar4 != NULL) {\n            iVar3 = *in_ECX - puVar2;\n            do {\n                uVar1 = *(iVar3 + puVar2);\n                bVar6 = uVar1 < *puVar2;\n                if (uVar1 != *puVar2) goto code_r0x0040c0e8;\n                puVar2 = puVar2 + 1;\n                puVar4 = puVar4 + -1;\n            } while (puVar4 != NULL);\n        }\n    }\n    else if (puVar5 != NULL) {\n        iVar3 = *in_ECX - puVar2;\n        do {\n            uVar1 = *(iVar3 + puVar2);\n            bVar6 = uVar1 < *puVar2;\n            if (uVar1 != *puVar2) {\ncode_r0x0040c0e8:\n                return (-bVar6 & 0xfffffffe) + 1;\n            }\n            puVar2 = puVar2 + 1;\n            puVar5 = puVar5 + -1;\n        } while (puVar5 != NULL);\n    }\n    return 0;\n}\n",
        "token_count": 429
    },
    "0040c6c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c6c9(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EDI;\n    uint var_4h;\n    \n    for (; arg_ch != 0; arg_ch = *(arg_ch + 0x1c)) {\n        iVar1 = fcn.0041fd5b(0x20, unaff_EDI);\n        fcn.0040c25d();\n        *arg_8h = iVar1;\n        if (iVar1 != arg_ch) {\n            fcn.0040c1c3(arg_ch);\n            iVar1 = *arg_8h;\n        }\n        *(iVar1 + 0x10) = *(arg_ch + 0x10);\n        *(*arg_8h + 0x14) = *(arg_ch + 0x14);\n        *(*arg_8h + 0x18) = 0;\n        *(*arg_8h + 0x1c) = 0;\n        unaff_EDI = *arg_8h + 0x18;\n        fcn.0040c6c9(unaff_EDI, *(arg_ch + 0x18));\n        arg_8h = *arg_8h + 0x1c;\n    }\n    *arg_8h = 0;\n    return;\n}\n",
        "token_count": 303
    },
    "0040c910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c910(int32_t **param_1)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t *extraout_EDX;\n    uint unaff_ESI;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    cVar1 = fcn.0041d5c5();\n    if (cVar1 == '\\0') {\n        *extraout_EDX = *extraout_EDX + -1;\n        piVar2 = fcn.0041fd5b(0x214, unaff_ESI);\n        iVar4 = 0;\n        iVar3 = (*param_1)[0x84];\n        piVar2[0x84] = iVar3;\n        if (0 < iVar3) {\n            iVar3 = 0x110;\n            do {\n                iVar4 = iVar4 + 1;\n                *(iVar3 + piVar2) = *(iVar3 + *param_1);\n                iVar3 = iVar3 + 4;\n            } while (iVar4 < piVar2[0x84]);\n        }\n        *param_1 = piVar2;\n    }\n    else {\n        iVar3 = 0;\n        piVar2 = extraout_EDX;\n        if (0 < extraout_EDX[2]) {\n            do {\n                iVar4 = *(piVar2[1] + iVar3 * 4);\n                if (iVar4 != 0) {\n                    fcn.0040c990();\n                    fcn.0041fd4d(iVar4);\n                    piVar2 = *param_1;\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < piVar2[2]);\n        }\n        fcn.0041fd94(piVar2[1]);\n        piVar2 = *param_1;\n    }\n    piVar2[1] = 0;\n    **param_1 = 1;\n    (*param_1)[2] = 0;\n    (*param_1)[0x43] = 0;\n    return;\n}\n",
        "token_count": 453
    },
    "0040cec9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cec9(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.0040cfb5();\n    fVar1 = fcn.0042f950(fVar1);\n    fcn.0040e8a0();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 100
    },
    "0040cf09": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cf09(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.0040cfb5();\n    fVar1 = fcn.0042fa80(fVar1);\n    fcn.0040e8a0();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 100
    },
    "0040cf49": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00450c5f)\n\nuint32_t __fastcall fcn.0040cf49(int32_t param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    ushort extraout_var;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    float10 fVar7;\n    float10 fVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    \n    iVar4 = *((*(param_1 + 0xc) * 0x10 + *(param_2 + 0xc)) * 4 + 0x4b1448);\n    if (iVar4 == 1) {\ncode_r0x0040cf9c:\n        iVar4 = fcn.0040ce67();\n        uVar5 = fcn.0040ce67();\n        return uVar5 & 0xffffff00 | iVar4 < uVar5;\n    }\n    if (iVar4 == 2) {\n        iVar9 = fcn.0040cc8f();\n        iVar10 = fcn.0040cc8f();\n        uVar5 = iVar10;\n        if (iVar9 < iVar10) {\ncode_r0x0040cfb1:\n            return CONCAT31(uVar5 >> 8, 1);\n        }\n    }\n    else if (iVar4 == 3) {\n        fVar7 = fcn.0040cfb5();\n        fVar8 = fcn.0040cfb5();\n        uVar2 = (fVar8 < fVar7) << 8;\n        uVar3 = (fVar8 == fVar7) << 0xe;\n        uVar5 = CONCAT22(extraout_var, uVar2 | uVar3);\n        if ((uVar2 | uVar3) == 0) goto code_r0x0040cfb1;\n    }\n    else {\n        if (iVar4 == 4) {\n            fcn.00408e90();\n            puVar1 = *(param_2 + 8);\n            fcn.00408e90();\n            uVar5 = fcn.0041d5dc(**(param_1 + 8), (*(param_1 + 8))[1], *puVar1, puVar1[1], 0);\n            return uVar5 & 0xffffff00 | uVar5 < 0;\n        }\n        if (iVar4 == 7) {\n            uVar5 = fcn.00471dda();\n            uVar6 = fcn.00471dda();\n            return uVar6 & 0xffffff00 | uVar5 < uVar6;\n        }\n        uVar5 = iVar4 - 9;\n        if (uVar5 == 0) goto code_r0x0040cf9c;\n    }\n    return uVar5 & 0xffffff00;\n}\n",
        "token_count": 648
    },
    "0041ab80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041ab80(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    ppiVar2 = *0x4d1938;\n    while( true ) {\n        if (ppiVar2 == NULL) {\n            var_ch = arg_8h;\n            var_8h = 1;\n            var_4h = (*_sym.imp.GDI32.dll_CreateSolidBrush)(arg_8h);\n            fcn.0041abd7(&var_ch);\n            return var_4h;\n        }\n        if (**ppiVar2 == arg_8h) break;\n        ppiVar2 = ppiVar2[1];\n    }\n    piVar1 = *ppiVar2 + 1;\n    *piVar1 = *piVar1 + arg_ch;\n    return (*ppiVar2)[2];\n}\n",
        "token_count": 228
    },
    "0041adc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041adc4(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    \n    if ((((arg_8h != 0) && (uVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(arg_8h, 0xffffffeb),  uVar2 < *0x4d1928)) &&\n        (piVar1 = **(*0x4d1924 + uVar2 * 4),  piVar1 != NULL)) && (*piVar1 == arg_8h)) {\n        return uVar2;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 149
    },
    "0041d564": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0041d564(uint16_t param_1)\n\n{\n    uint32_t uStack4;\n    \n    if (0x61 < param_1) {\n        return param_1;\n    }\n    uStack4 = 0x55;\n    if (param_1 < 0x55) {\n        uStack4 = 0x48;\n        if (param_1 < 0x48) {\n            uStack4 = 0x3b;\n            if (param_1 < 0x3b) {\n                return (-(param_1 < 0x2e) & 0xfffffff3) + 0x2e;\n            }\n        }\n    }\n    return uStack4;\n}\n",
        "token_count": 162
    },
    "0041db5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041db5c(int32_t *param_1, uint16_t **param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    unkuint3 Var3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint16_t *puVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar6 = param_1[1];\n    if (param_2[1] <= puVar6 && puVar6 != param_2[1]) {\n        puVar6 = param_2[1];\n    }\n    puVar2 = *param_2;\n    if (puVar6 != NULL) {\n        iVar4 = *param_1 - puVar2;\n        puVar5 = puVar6;\n        do {\n            uVar1 = *(iVar4 + puVar2);\n            if (uVar1 != *puVar2) {\n                iVar4 = (-(uVar1 < *puVar2) & 0xfffffffe) + 1;\n                goto code_r0x0041dba8;\n            }\n            puVar2 = puVar2 + 1;\n            puVar5 = puVar5 + -1;\n        } while (puVar5 != NULL);\n    }\n    iVar4 = 0;\ncode_r0x0041dba8:\n    Var3 = iVar4 >> 8;\n    if ((iVar4 < 0) || ((iVar4 == 0 && (puVar6 < param_2[1])))) {\n        iVar4 = CONCAT31(Var3, 1);\n    }\n    else {\n        iVar4 = Var3 << 8;\n    }\n    return iVar4;\n}\n",
        "token_count": 381
    },
    "0041e40a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e40a(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.0040cfb5();\n    fVar1 = fcn.0042e0b3(SUB84(fVar1, 0), fVar1 >> 0x20);\n    fcn.0040e8a0();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 118
    },
    "0041eb70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0041eb70(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    param_1[7] = 0xffffffff;\n    *param_1 = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 2;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[8] = 0;\n    param_1[9] = 0;\n    fcn.0040c25d();\n    *(param_1 + 0xe) = 0;\n    *(param_1 + 0x3a) = 1;\n    param_1[0xf] = 0;\n    param_1[0x10] = 0;\n    param_1[0x13] = 0xffffffff;\n    param_1[0x14] = 0xffffffff;\n    param_1[0x15] = 0xffffffff;\n    param_1[0x16] = 0xffffffff;\n    param_1[0x17] = 0xffffffff;\n    param_1[0x18] = 0xffffffff;\n    param_1[0x19] = 0xffffffff;\n    fcn.0040c25d();\n    param_1[0x21] = 0;\n    param_1[0x22] = 2;\n    param_1[0x1f] = 0x55;\n    param_1[0x20] = 400;\n    iVar1 = 0xe;\n    do {\n        fcn.0040c25d();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    param_1[99] = 0xffffffff;\n    param_1[100] = 0xffffffff;\n    param_1[0x6f] = 0xffffffff;\n    param_1[0x70] = 0xffffffff;\n    param_1[0x5b] = 0;\n    param_1[0x5c] = 0;\n    param_1[0x5d] = 0;\n    param_1[0x5e] = 0;\n    param_1[0x5f] = 0;\n    param_1[0x60] = 0;\n    *(param_1 + 0x61) = 0;\n    param_1[0x62] = 0;\n    param_1[0x65] = 0;\n    *(param_1 + 0x66) = 0;\n    *(param_1 + 0x19a) = 0;\n    param_1[0x67] = 0;\n    param_1[0x68] = 0;\n    param_1[0x69] = 0;\n    param_1[0x6b] = 0;\n    param_1[0x6c] = 0;\n    param_1[0x71] = 0;\n    param_1[0x72] = 0;\n    param_1[0x73] = 0;\n    *(param_1 + 0x6a) = 1;\n    return param_1;\n}\n",
        "token_count": 731
    },
    "0041f676": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041f676(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint in_EDX;\n    uint arg_10h_00;\n    uint arg_1ch;\n    \n    arg_1ch = 0;\n    puVar1 = fcn.0041f6a0();\n    iVar2 = fcn.00428cde(*puVar1, puVar1[1], arg_10h_00, in_EDX, arg_8h, arg_1ch, arg_10h);\n    if (-1 < iVar2) {\n        return iVar2;\n    }\n    return -1;\n}\n",
        "token_count": 163
    },
    "0041f867": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f867(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    \n    if (in_ECX[2] < arg_8h + 1U) {\n        if (arg_8h == -1) {\n            uVar1 = 0x10;\n        }\n        else {\n            uVar1 = arg_8h + 0x10U & 0xfffffff0;\n        }\n        in_ECX[2] = uVar1;\n        fcn.0041fd94(*in_ECX);\n        iVar2 = fcn.0041fd8b(in_ECX[2]);\n        *in_ECX = iVar2;\n        *(iVar2 + arg_8h) = 0;\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "0041fa2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041fa2d(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.0040cfb5();\n    fVar1 = fcn.0042f460(fVar1);\n    fcn.0040e8a0();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 101
    },
    "0041faa3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041faa3(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint in_ECX;\n    \n    fcn.0041f676(arg_ch, in_ECX, &arg_10h);\n    return;\n}\n",
        "token_count": 61
    },
    "00420d15": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00420d15(int32_t param_1)\n\n{\n    fcn.004222d0(param_1 + 0x14, 0, 0x18);\n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x30) = 0;\n    *(param_1 + 0x34) = 0;\n    return param_1;\n}\n",
        "token_count": 99
    },
    "00424b5f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00424b5f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    fcn.00441c80(0x4c88c8, 0xc);\n    iVar1 = *(unaff_EBP + 0x10);\n    if (iVar1 == 0) {\n        cVar5 = fcn.00424cb9();\n        if (cVar5 != '\\0') {\n            fcn.00424cfd(*(unaff_EBP + 8));\n        }\n    }\n    fcn.00432eee(2);\n    *(unaff_EBP + -4) = 0;\n    if (*0x4d0b60 != '\\0') goto code_r0x00424c36;\n    *0x4d0b58 = 1;\n    *(unaff_EBP + -4) = 1;\n    iVar2 = *(unaff_EBP + 0xc);\n    if (iVar2 == 0) {\n        uVar4 = *0x4cc014 & 0x1f;\n        uVar3 = 0x20 - uVar4 & 0x1f;\n        if (*0x4d0b5c != ((0U >> uVar3 | 0 << 0x20 - uVar3) ^ *0x4cc014)) {\n            uVar6 = *0x4cc014 ^ *0x4d0b5c;\n            (**0x49c894)(0, 0, 0);\n            (*(uVar6 >> uVar4 | uVar6 << 0x20 - uVar4))();\n        }\n        arg_8h_00 = 0x4d0d94;\ncode_r0x00424bfb:\n        fcn.00432138(arg_8h_00);\n    }\n    else if (iVar2 == 1) {\n        arg_8h_00 = 0x4d0da0;\n        goto code_r0x00424bfb;\n    }\n    *(unaff_EBP + -4) = 0;\n    if (iVar2 == 0) {\n        fcn.004323b1(0x49c8fc, 0x49c90c);\n    }\n    fcn.004323b1(0x49c910, 0x49c914);\n    if (iVar1 == 0) {\n        *0x4d0b60 = '\\x01';\n    }\ncode_r0x00424c36:\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00424c69();\n    if (iVar1 == 0) {\n        fcn.00424c78(*(unaff_EBP + 8));\n        fcn.00424b4c(***(unaff_EBP + -0x14));\n        return;\n    }\n    fcn.00441cc9();\n    return;\n}\n",
        "token_count": 736
    },
    "004272f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004272f9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x31) != '*') {\n        uVar2 = fcn.00426d4b(param_1 + 0x28);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *(param_1 + 0x28) = iVar1;\n    if (iVar1 < 0) {\n        *(param_1 + 0x28) = 0xffffffff;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 182
    },
    "00427321": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00427321(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar2 = fcn.00426da7(param_1 + 0x28);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *(param_1 + 0x28) = iVar1;\n    if (iVar1 < 0) {\n        *(param_1 + 0x28) = 0xffffffff;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 184
    },
    "00427e94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00427e94(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x31) != '*') {\n        uVar2 = fcn.00426d4b(param_1 + 0x24);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *(param_1 + 0x24) = iVar1;\n    if (iVar1 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        *(param_1 + 0x24) = -*(param_1 + 0x24);\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 215
    },
    "00427ebf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00427ebf(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar2 = fcn.00426da7(param_1 + 0x24);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *(param_1 + 0x24) = iVar1;\n    if (iVar1 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        *(param_1 + 0x24) = -*(param_1 + 0x24);\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 218
    },
    "00428cde": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00428cde(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    fcn.004264aa(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    return;\n}\n",
        "token_count": 96
    },
    "0042911d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042911d(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 42
    },
    "00429131": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429131(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 42
    },
    "004293b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_310h\n\nvoid __cdecl fcn.004293b5(int32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h)\n\n{\n    int32_t arg_10h_00;\n    uint *puVar1;\n    uint arg_8h_00;\n    uint var_310h;\n    uint32_t var_4h;\n    \n    arg_10h_00 = arg_14h;\n    var_4h = *0x4cc014 ^ &stack0xfffffffc;\n    if ((arg_14h == 0) || (arg_8h == 0)) {\n        puVar1 = fcn.0042f269();\n        *puVar1 = 0x16;\n        fcn.0043277c();\n    }\n    else {\n        arg_8h_00 = fcn.0042942b(arg_8h, &arg_ch, &var_310h);\n        fcn.0042a4e9(arg_8h_00, &var_310h, arg_10h_00);\n    }\n    if (arg_10h != NULL) {\n        *arg_10h = arg_ch;\n    }\n    fcn.00420a0c(var_310h);\n    return;\n}\n",
        "token_count": 294
    },
    "004327bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004327bf(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if ((arg_ch == 0) || (arg_10h <= 0xffffffe0 / arg_ch)) {\n        if (arg_8h == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.0043e236(arg_8h);\n        }\n        arg_ch = arg_ch * arg_10h;\n        iVar2 = fcn.0043e269(arg_8h, arg_ch);\n        if ((iVar2 != 0) && (uVar3 < arg_ch)) {\n            fcn.004222d0(iVar2 + uVar3, 0, arg_ch - uVar3);\n        }\n    }\n    else {\n        puVar1 = fcn.0042f269();\n        *puVar1 = 0xc;\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 249
    },
    "00432eee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432eee(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection * 0x18 + 0x4d0dc8);\n    return;\n}\n",
        "token_count": 50
    },
    "00432f36": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432f36(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection * 0x18 + 0x4d0dc8);\n    return;\n}\n",
        "token_count": 52
    },
    "00432f4d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432f4d(void)\n\n{\n    fcn.00432f67(1, \"CompareStringEx\", 0x4a2260, \"CompareStringEx\");\n    return;\n}\n",
        "token_count": 46
    },
    "0043382a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043382a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.00425278(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.004254bb(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 119
    },
    "00439bbe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00439e62)\n\nfloat10 fcn.00439bbe(double param_1)\n\n{\n    int32_t iVar1;\n    double dVar2;\n    double dVar3;\n    int32_t iVar4;\n    double dVar5;\n    double dVar6;\n    uchar auVar7 [16];\n    double dVar8;\n    double in_XMM7_Qa;\n    \n    dVar2 = in_XMM7_Qa & *0x4a31f0;\n    dVar3 = in_XMM7_Qa & *0x4a31f8;\n    if (*0x4a3318 <= dVar2) {\n        return *0x4a3328 + *((param_1._4_4_ >> 0x1f) * -8 + 0x4a3200);\n    }\n    if (*0x4a3308 <= dVar2) {\n        if (*0x4a3300 <= dVar2) {\n            if (*0x4a32f8 <= dVar2) {\n                iVar1 = 0x300;\n                dVar3 = *0x4a32e0 / dVar2;\n            }\n            else {\n                iVar4 = (dVar2 + *0x4a32f0 >> 0x2c) - *0x4a32d0;\n                iVar1 = iVar4 * 3;\n                dVar3 = *(iVar4 * 0x18 + 0x4a9cc0);\n                dVar3 = (dVar2 - dVar3) / (dVar2 * dVar3 + *0x4a32e8);\n            }\n            dVar5 = dVar3 * dVar3;\n            dVar6 = dVar5 * dVar5;\n            dVar8 = dVar3 * dVar3 * dVar3 * dVar3;\n            dVar5 = (((*0x4a32c0 * dVar6 + *0x4a32b0) * dVar6 + *0x4a32a0) * dVar6 + *0x4a3290) * dVar5;\n            auVar7 = CONCAT88(((*0x4a32c8 * dVar8 + *0x4a32b8) * dVar8 + *0x4a32a8) * dVar8 + *0x4a3298, dVar5);\n            auVar7 = shufpd(auVar7, auVar7, 1);\n            return *(iVar1 * 8 + 0x4a9cb0) - (((dVar5 + SUB168(auVar7, 0)) * dVar3 - *(iVar1 * 8 + 0x4a9cb8)) - dVar3) |\n                   in_XMM7_Qa ^ dVar2;\n        }\n        dVar2 = dVar2 * dVar2;\n        dVar5 = dVar2 * dVar2;\n        dVar3 = dVar3 * dVar3 * dVar3 * dVar3;\n        dVar2 = (((((((*0x4a3280 * dVar5 + *0x4a3270) * dVar5 + *0x4a3260) * dVar5 + *0x4a3250) * dVar5 + *0x4a3240) *\n                   dVar5 + *0x4a3230) * dVar5 + *0x4a3220) * dVar5 + _str.RUUUUU) * dVar2;\n        auVar7 = CONCAT88(((((((*0x4a3288 * dVar3 + *0x4a3278) * dVar3 + *0x4a3268) * dVar3 + *0x4a3258) * dVar3 +\n                            *0x4a3248) * dVar3 + *0x4a3238) * dVar3 + *0x4a3228) * dVar3 + *0x4a3218, dVar2);\n        auVar7 = shufpd(auVar7, auVar7, 1);\n        return in_XMM7_Qa - (dVar2 + SUB168(auVar7, 0)) * in_XMM7_Qa;\n    }\n    if (*0x4a3310 <= dVar2) {\n        dVar2 = dVar2 * dVar2;\n        dVar5 = dVar2 * dVar2;\n        dVar3 = dVar3 * dVar3 * dVar3 * dVar3;\n        dVar2 = (((*0x4a32c0 * dVar5 + *0x4a32b0) * dVar5 + *0x4a32a0) * dVar5 + *0x4a3290) * dVar2;\n        auVar7 = CONCAT88(((*0x4a32c8 * dVar3 + *0x4a32b8) * dVar3 + *0x4a32a8) * dVar3 + *0x4a3298, dVar2);\n        auVar7 = shufpd(auVar7, auVar7, 1);\n        return in_XMM7_Qa - (dVar2 + SUB168(auVar7, 0)) * in_XMM7_Qa;\n    }\n    if (dVar2 != *0x4a32d8) {\n        if (*0x4a3320 <= dVar2) {\n            return *0x4a3328 * *0x4a3328 + param_1;\n        }\n        return *0x4a3328 * *0x4a3328 + param_1;\n    }\n    return param_1;\n}\n",
        "token_count": 1280
    },
    "0043c4bb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043c4bb(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.0043c4f0();\n    if (iVar1 == 0) {\n        **(in_ECX + 4) = arg_8h;\n        *(in_ECX + 4) = *(in_ECX + 4) + 4;\n        iVar1 = 0;\n    }\n    else {\n        fcn.00432958(arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 131
    },
    "0043d3a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0043d3a4(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00432d04();\n    return iVar1 + 8;\n}\n",
        "token_count": 45
    },
    "00440925": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440925(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00440022(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 76
    },
    "00440ab2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00440ab2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004209b0(0x4c8e38, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.00432eee(0xb);\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.00440a0a(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00440a01();\n    fcn.004209f6();\n    return;\n}\n",
        "token_count": 253
    },
    "00442050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00442050(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    float fVar4;\n    float10 in_ST0;\n    uint32_t uStack32;\n    float fStack28;\n    \n    uVar1 = ROUND(in_ST0);\n    uStack32 = uVar1;\n    fStack28 = uVar1 >> 0x20;\n    fVar4 = in_ST0;\n    if ((uStack32 != 0) || (fVar4 = fStack28,  (uVar1 & 0x7fffffff00000000) != 0)) {\n        if (fVar4 < 0) {\n            uVar2 = 0x80000000 < (in_ST0 - uVar1 ^ 0x80000000);\n            bVar3 = CARRY4(uStack32, uVar2);\n            uStack32 = uStack32 + uVar2;\n            fStack28 = fStack28 + bVar3;\n        }\n        else {\n            uVar2 = 0x80000000 < in_ST0 - uVar1;\n            bVar3 = uStack32 < uVar2;\n            uStack32 = uStack32 - uVar2;\n            fStack28 = fStack28 - bVar3;\n        }\n    }\n    return CONCAT44(fStack28, uStack32);\n}\n",
        "token_count": 305
    },
    "0041b3f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041b3f8(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = 0;\n    iVar3 = *(in_ECX + -0x18) + -1;\n    if (-1 < iVar3) {\n        do {\n            arg_8h_00 = (iVar3 + iVar4) / 2;\n            puVar1 = fcn.00413220(arg_8h_00);\n            iVar2 = fcn.004251c2(arg_8h, *puVar1);\n            if (iVar2 < 0) {\n                iVar3 = arg_8h_00 + -1;\n            }\n            else {\n                if (iVar2 < 1) break;\n                iVar4 = arg_8h_00 + 1;\n            }\n        } while (iVar4 <= iVar3);\n        if (iVar4 <= iVar3) {\n            return arg_8h_00;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 267
    },
    "0042317c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042317c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00424079(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "0045f4eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0045f4eb(int32_t **param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    piVar2 = *param_1;\n    iVar1 = piVar2[0x43];\n    if (iVar1 == piVar2[0x84]) {\n        iVar3 = 0;\n        if (0 < iVar1) {\n            piVar2 = piVar2 + 3;\n            do {\n                if ((piVar2[0x41] < 0) || (*piVar2 <= piVar2[0x41])) goto code_r0x0045f51f;\n                iVar3 = iVar3 + 1;\n                piVar2 = piVar2 + 1;\n            } while (iVar3 < iVar1);\n        }\n        return CONCAT31(piVar2 >> 8, 1);\n    }\ncode_r0x0045f51f:\n    return piVar2 & 0xffffff00;\n}\n",
        "token_count": 227
    },
    "0045f523": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045f523(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_4h;\n    \n    iVar1 = *param_1;\n    iVar3 = *(iVar1 + 8);\n    if ((iVar3 == 0) || (cVar2 = fcn.0045f4eb(),  cVar2 == '\\0')) {\n        iVar5 = -1;\n    }\n    else {\n        iVar6 = *(iVar1 + 0x10c);\n        iVar5 = 0;\n        if (0 < iVar6) {\n            piVar4 = iVar1 + 0x110;\n            do {\n                iVar3 = iVar3 / piVar4[-0x41];\n                iVar5 = iVar5 + *piVar4 * iVar3;\n                piVar4 = piVar4 + 1;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 256
    },
    "0045f5a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045f5a8(uint32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    uint32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    puVar1 = arg_8h;\n    iVar3 = *in_ECX;\n    iVar5 = *(iVar3 + 0x10c);\n    if ((iVar5 == 0) || (in_EAX = *arg_8h,  iVar5 != *(in_EAX + 0x10c))) {\n        uVar4 = in_EAX & 0xffffff00;\n    }\n    else {\n        iVar6 = 0;\n        if (0 < iVar5) {\n            iVar5 = 0x110;\n            do {\n                *(iVar5 + iVar3) = 0;\n                *(iVar5 + *arg_8h) = 0;\n                iVar6 = iVar6 + 1;\n                iVar3 = *in_ECX;\n                iVar5 = iVar5 + 4;\n            } while (iVar6 < *(iVar3 + 0x10c));\n        }\n        do {\n            iVar3 = fcn.0045f523();\n            if (((-1 < iVar3) && (iVar3 = *(*(*puVar1 + 4) + iVar3 * 4),  iVar3 != 0)) &&\n               (iVar5 = fcn.00411df0(in_ECX, 2, 0),  iVar5 != 0)) {\n                fcn.0040c5e7(iVar3);\n            }\n            iVar3 = *in_ECX;\n            arg_8h = NULL;\n            iVar5 = 0;\n            if (0 < *(iVar3 + 0x10c)) {\n                iVar6 = 0x110;\n                do {\n                    *(iVar6 + iVar3) = *(iVar6 + iVar3) + 1;\n                    *(iVar6 + *puVar1) = *(iVar6 + *puVar1) + 1;\n                    cVar2 = fcn.0045f4eb();\n                    if ((cVar2 != '\\0') && (cVar2 = fcn.0045f4eb(),  iVar5 = arg_8h,  cVar2 != '\\0')) break;\n                    *(iVar6 + *in_ECX) = 0;\n                    *(iVar6 + *puVar1) = 0;\n                    iVar5 = arg_8h + 1;\n                    iVar3 = *in_ECX;\n                    iVar6 = iVar6 + 4;\n                    arg_8h = iVar5;\n                } while (iVar5 < *(iVar3 + 0x10c));\n            }\n        } while (iVar5 < *(*in_ECX + 0x10c));\n        uVar4 = CONCAT31(*in_ECX >> 8, 1);\n    }\n    return uVar4;\n}\n",
        "token_count": 664
    },
    "0045fae1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045fae1(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    uint var_14h;\n    uint var_ch;\n    \n    uVar1 = fcn.00471e24();\n    iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayCopyData)(0x11, 0, uVar1);\n    if (iVar2 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        fcn.004119e0(arg_8h);\n        uVar1 = fcn.00471e24();\n        uVar1 = fcn.00471db4(extraout_ECX, uVar1);\n        fcn.00420db0(iVar2 + 0x18, uVar1);\n        fcn.0040e8a0();\n    }\n    return iVar2;\n}\n",
        "token_count": 206
    },
    "0045fc95": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045fc95(int32_t arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(arg_8h + 4);\n    return;\n}\n",
        "token_count": 45
    },
    "0045fd6d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045fd6d(int32_t *arg_8h, uint arg_ch, int32_t **arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00421324(arg_ch, 0x49fb94, 0x10);\n    if ((iVar1 != 0) && (iVar1 = fcn.00421324(arg_ch, 0x49fbc4, 0x10),  iVar1 != 0)) {\n        return 0x80004002;\n    }\n    (**(*arg_8h + 4))(arg_8h);\n    *arg_10h = arg_8h;\n    return 0;\n}\n",
        "token_count": 157
    },
    "0045fed6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045fed6(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    \n    fcn.004609ab(((arg_8h != -0x7ff8fff2) - 1 & 0xfffffffa) + 0xc000001d, 1);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 90
    },
    "0045ff68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045ff68(uint lpString2, uint noname_1, uint *arg_10h)\n\n{\n    ushort *puVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    ushort uVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t *lpString1;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    *arg_10h = 0;\n    arg_10h[3] = 0;\n    var_4h = NULL;\n    iVar5 = (**(*in_ECX + 0x10))();\n    if (iVar5 < 0) goto code_r0x004602b6;\n    if (var_4h == NULL) {\n        iVar5 = -0x7fffbfff;\n        goto code_r0x004602b6;\n    }\n    var_8h = NULL;\n    iVar5 = (**(*var_4h + 0xc))(var_4h, &var_ch);\n    if (iVar5 < 0) goto code_r0x004602b6;\n    if ((*(var_ch + 0x28) == 3) && ((*(var_ch + 0x36) & 0x40) != 0)) {\n        (**(*var_4h + 0x4c))(var_4h, var_ch);\n        iVar5 = (**(*var_4h + 0x20))(var_4h, 0xffffffff, &var_18h);\n        if (iVar5 < 0) {\n            iVar5 = -0x7fffbffb;\n            goto code_r0x004602b6;\n        }\n        lpString1 = NULL;\n        iVar5 = (**(*var_4h + 0x38))(var_4h, var_18h, &lpString1);\n        if (iVar5 < 0) {\n            iVar5 = -0x7fffbffb;\n        }\n        else {\n            fcn.0045fde1(&lpString1);\n            iVar5 = (**(*var_4h + 0xc))(var_4h, &var_ch);\n            if (-1 < iVar5) {\n                if (lpString1 != NULL) {\n                    (**(*lpString1 + 8))(lpString1);\n                }\n                goto code_r0x00460065;\n            }\n        }\n        if (lpString1 != NULL) {\n            (**(*lpString1 + 8))(lpString1);\n        }\n        goto code_r0x004602b6;\n    }\ncode_r0x00460065:\n    var_14h = -1;\n    iVar5 = (**(*var_4h + 0x28))(var_4h, &lpString2, 1, &var_14h);\n    if (iVar5 < 0) {\n        lpString1 = NULL;\n        iVar5 = (**(*var_4h + 0x1c))(var_4h);\n        if (-1 < iVar5) {\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(lpString1);\n            var_14h = in_EDX;\n            goto code_r0x004600ac;\n        }\n        uVar3 = 0;\n        if (*(var_ch + 0x2c) != 0) {\n            do {\n                iVar5 = (**(*var_4h + 0x14))(var_4h, uVar3, &var_8h);\n                if (iVar5 < 0) goto code_r0x004601bc;\n                (**(*var_4h + 0x30))(var_4h, *var_8h, &lpString1, 0, 0, 0);\n                if (((*(var_8h + 4) & 3) != 0) &&\n                   (iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(lpString1, lpString2),  iVar5 == 0)) {\n                    (*_sym.imp.OLEAUT32.dll_SysStringLen)(lpString1);\n                    break;\n                }\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)(lpString1);\n                (**(*var_4h + 0x50))(var_4h, var_8h);\n                var_8h = NULL;\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < *(var_ch + 0x2c));\n        }\n    }\n    else {\ncode_r0x004600ac:\n        uVar3 = 0;\n        if (*(var_ch + 0x2c) != 0) {\n            do {\n                iVar5 = (**(*var_4h + 0x14))(var_4h, uVar3, &var_8h);\n                if (iVar5 < 0) goto code_r0x004601bc;\n                if (((*(var_8h + 4) & 3) != 0) && (*var_8h == var_14h)) break;\n                (**(*var_4h + 0x50))(var_4h, var_8h);\n                var_8h = NULL;\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < *(var_ch + 0x2c));\n        }\n    }\n    (**(*var_4h + 0x4c))(var_4h, var_ch);\n    if (var_8h != NULL) {\n        if (*(var_8h + 6) < 0x21) {\n            var_18h = 0;\n            *arg_10h = 1;\n            piVar6 = var_8h;\n            if (0 < *(var_8h + 6)) {\n                iVar5 = 0;\n                puVar8 = arg_10h + 4;\n                iVar7 = 0;\n                do {\n                    uVar3 = *(piVar6[2] + 4 + iVar7);\n                    *puVar8 = uVar3;\n                    if (uVar3 == 0x1a) {\n                        uVar3 = *(*(piVar6[2] + iVar7) + 4) | 0x4000;\n                        *puVar8 = uVar3;\n                    }\n                    if (uVar3 == 0x1b) {\n                        uVar3 = *(*(piVar6[2] + iVar7) + 4) | 0x2000;\n                        *puVar8 = uVar3;\n                    }\n                    if (uVar3 == 0x1d) {\n                        uVar4 = fcn.0045fe17();\n                        *puVar8 = uVar4;\n                        piVar6 = var_8h;\n                    }\n                    iVar5 = iVar5 + 1;\n                    puVar1 = piVar6[2] + 0xc + iVar7;\n                    iVar7 = iVar7 + 0x10;\n                    *(puVar8 + 2) = *puVar1;\n                    puVar8 = puVar8 + 1;\n                } while (iVar5 < *(piVar6 + 6));\n            }\n            uVar4 = 3;\n            iVar2 = *(piVar6 + 9);\n            if (iVar2 != 0x16) {\n                if (iVar2 == 0x17) {\n                    uVar4 = 0x13;\n                }\n                else if (iVar2 == 0x18) {\n                    uVar4 = 0;\n                }\n                else {\n                    uVar4 = 10;\n                }\n            }\n            *(arg_10h + 3) = uVar4;\n            arg_10h[1] = piVar6[4];\n            arg_10h[2] = piVar6[5];\n            *(arg_10h + 0xe) = *(piVar6 + 6);\n            (**(*var_4h + 0x50))(var_4h, piVar6);\n            iVar5 = 0;\n            goto code_r0x004602b6;\n        }\n        (**(*var_4h + 0x50))(var_4h, var_8h);\n    }\n    iVar5 = -0x7fffbffb;\ncode_r0x004602b6:\n    if (var_4h != NULL) {\n        (**(*var_4h + 8))(var_4h);\n    }\n    return iVar5;\ncode_r0x004601bc:\n    (**(*var_4h + 0x4c))(var_4h, var_ch);\n    goto code_r0x004602b6;\n}\n",
        "token_count": 1954
    },
    "00460971": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00460971(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 == 0) {\n        *param_2 = 0;\n    }\n    else {\n        iVar1 = fcn.004248f3(param_1);\n        iVar1 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)((iVar1 + 1) * 2);\n        *param_2 = iVar1;\n        if (iVar1 == 0) {\n            return 0x8007000e;\n        }\n        fcn.00424913(iVar1, param_1);\n    }\n    return 0;\n}\n",
        "token_count": 156
    },
    "004609c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004609c0(int32_t *arg_8h, uint *arg_ch)\n\n{\n    uint *in_ECX;\n    \n    fcn.00407c18(in_ECX[1] + arg_ch[1]);\n    fcn.00420db0(*arg_8h, *in_ECX, in_ECX[1] * 2);\n    fcn.00420db0(*arg_8h + in_ECX[1] * 2, *arg_ch, arg_ch[1] * 2 + 2);\n    arg_8h[1] = in_ECX[1] + arg_ch[1];\n    return arg_8h;\n}\n",
        "token_count": 155
    },
    "00461607": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "modify access privileges"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00461607(int32_t *param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint unaff_EDI;\n    uint32_t uVar4;\n    uint *puVar5;\n    int32_t var_ch;\n    int32_t *var_8h;\n    \n    iVar2 = param_1[1] * 0xc + 4;\n    iVar1 = iVar2;\n    var_ch = iVar2;\n    arg_8h = fcn.0041fd5b(iVar2, unaff_EDI);\n    var_8h = arg_8h;\n    iVar1 = fcn.0041fd5b(iVar2, iVar1);\n    param_1[2] = iVar1;\n    *arg_8h = param_1[1];\n    if (param_1[1] != 0) {\n        piVar3 = arg_8h + 1;\n        uVar4 = 0;\n        do {\n            piVar3[2] = 2;\n            (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueW)(0, *(*param_1 + uVar4 * 4), piVar3);\n            uVar4 = uVar4 + 1;\n            piVar3 = piVar3 + 3;\n            iVar2 = var_ch;\n            arg_8h = var_8h;\n        } while (uVar4 < param_1[1]);\n    }\n    if (param_1[2] == 0) {\n        puVar5 = &var_ch;\n    }\n    else {\n        puVar5 = NULL;\n        iVar2 = 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(param_1[3], 0, arg_8h, iVar2, 0, puVar5);\n    fcn.0041fd4d(arg_8h);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    return -iVar2 & 0xffffff00U | 1 - (iVar2 != 0);\n}\n",
        "token_count": 481
    },
    "004616a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004616a1(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint in_ECX;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    uint32_t *var_8h;\n    uint nDestinationSidLength;\n    \n    var_8h = NULL;\n    nDestinationSidLength = 0;\n    uVar6 = 0;\n    piVar3 = fcn.00460ef8(&var_8h, in_ECX, &nDestinationSidLength);\n    puVar2 = var_8h;\n    uVar7 = 0;\n    if ((piVar3 != '\\0') && (uVar8 = 0,  uVar7 = uVar6,  puVar1 = var_8h,  *var_8h != 0)) {\n        do {\n            piVar3 = puVar1[2] & 0xc0000000;\n            if (piVar3 == 0xc0000000) {\n                nDestinationSidLength = (*_sym.imp.ADVAPI32.dll_GetLengthSid)(var_8h[uVar8 * 2 + 1]);\n                uVar5 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, nDestinationSidLength);\n                iVar4 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar5);\n                *arg_ch = iVar4;\n                piVar3 = arg_ch;\n                if ((iVar4 != 0) &&\n                   (piVar3 = (*_sym.imp.ADVAPI32.dll_CopySid)(nDestinationSidLength, iVar4, puVar2[uVar8 * 2 + 1]), \n                   piVar3 != NULL)) {\n                    uVar7 = 1;\n                }\n                break;\n            }\n            uVar8 = uVar8 + 1;\n            puVar1 = puVar1 + 2;\n        } while (uVar8 < *var_8h);\n    }\n    if (puVar2 != NULL) {\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, puVar2);\n        piVar3 = (*_sym.imp.KERNEL32.dll_HeapFree)(uVar5);\n    }\n    return piVar3 & 0xffffff00 | uVar7;\n}\n",
        "token_count": 550
    },
    "004619ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004619ee(int32_t wParam, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    int32_t *piVar4;\n    uint lParam;\n    uint var_4h;\n    \n    uVar1 = fcn.0041fd8b(0x10000);\n    fcn.004070c2(uVar1);\n    *in_ECX = 0x7fff;\n    iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0xc4, wParam + -1, in_ECX);\n    if (iVar2 == 0) {\n        uVar3 = fcn.004084e7(0x49d0d0);\n    }\n    else {\n        *(in_ECX + iVar2 * 2) = 0;\n        uVar3 = fcn.004084e7(in_ECX);\n    }\n    *in_ECX = *in_ECX + -1;\n    if (*in_ECX == 0) {\n        uVar1 = 4;\n        piVar4 = in_ECX;\n        fcn.0041fd4d(in_ECX);\n        uVar3 = fcn.0041fd94(in_ECX, piVar4, uVar1);\n    }\n    return uVar3 & 0xffffff00 | iVar2 != 0;\n}\n",
        "token_count": 318
    },
    "0046265a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0046265a(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_a8h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint *hWnd;\n    \n    hWnd = in_ECX;\n    fcn.004034ba();\n    var_14h = arg_8h;\n    uVar1 = fcn.0046b248(0x10, *in_ECX);\n    fcn.0046b321(&var_14h, uVar1, 0x10);\n    uVar3 = 0;\n    (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x1104, 0, uVar1);\n    fcn.0046b2ec(uVar1, &var_14h, 0x10);\n    iVar4 = var_14h;\n    uVar1 = *in_ECX;\n    var_20h = (var_8h - var_10h) / 2 + var_10h;\n    arg_ch[1] = var_20h;\n    uVar1 = fcn.0046b248(0x10, uVar1);\n    if (iVar4 <= var_ch) {\n        do {\n            var_24h = iVar4;\n            fcn.0046b321(&var_24h, uVar1, 0x10);\n            (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x1111, 0, uVar1);\n            fcn.0046b2ec(uVar1, &var_24h, 0x10);\n            if ((var_1ch & 0x40) != 0) break;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 <= var_ch);\n        iVar5 = iVar4;\n        if (iVar4 <= var_ch) {\n            do {\n                var_24h = iVar5;\n                fcn.0046b321(&var_24h, uVar1, 0x10);\n                (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x1111, 0, uVar1);\n                fcn.0046b2ec(uVar1, &var_24h, 0x10);\n                if ((var_1ch & 0x40) == 0) break;\n                iVar5 = iVar5 + 1;\n            } while (iVar5 <= var_ch);\n            if (iVar5 <= var_ch) {\n                uVar3 = 1;\n                *arg_ch = (iVar5 - iVar4) / 2 + iVar4;\n            }\n        }\n    }\n    uVar2 = fcn.0040329e();\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 716
    },
    "004627af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004627af(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h_00;\n    int16_t *piVar2;\n    uint16_t *puVar3;\n    uint *in_ECX;\n    uint32_t arg_8h_01;\n    uint var_1ch;\n    uint *hWnd;\n    int32_t var_8h;\n    \n    arg_8h_01 = 0;\n    hWnd = in_ECX;\n    arg_8h_00 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x110a, 0, 0);\n    if ((arg_8h_00 != 0) && (uVar1 = *(arg_8h + 4),  var_8h = arg_8h_00,  uVar1 != 0)) {\n        while ((arg_8h_01 == 0 ||\n               (arg_8h_00 = (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x110a, 4, arg_8h_00),  var_8h = arg_8h_00, \n               arg_8h_00 != 0))) {\n            fcn.0040b606(0x49d0d0);\n            for (; arg_8h_01 < uVar1; arg_8h_01 = arg_8h_01 + 1) {\n                piVar2 = fcn.004058ca(arg_8h_01);\n                if (*piVar2 == 0x7c) {\n                    piVar2 = fcn.004058ca(arg_8h_01 + 1);\n                    arg_8h_00 = var_8h;\n                    if (*piVar2 != 0x7c) break;\n                    fcn.004051ec(0x7c);\n                    arg_8h_01 = arg_8h_01 + 2;\n                }\n                puVar3 = fcn.004058ca(arg_8h_01);\n                fcn.004051ec(*puVar3);\n                arg_8h_00 = var_8h;\n            }\n            arg_8h_00 = fcn.00462a60(arg_8h_00, &var_1ch);\n            var_8h = arg_8h_00;\n            fcn.0040b1ff();\n            if (arg_8h_00 == 0) {\n                return 0;\n            }\n            arg_8h_01 = arg_8h_01 + 1;\n            if (uVar1 <= arg_8h_01) {\n                return arg_8h_00;\n            }\n        }\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 618
    },
    "00462e95": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00462e95(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint lpClassName;\n    \n    fcn.004084e7(0x49d0d0);\n    fcn.00462ceb();\n    iVar1 = (*_sym.imp.USER32.dll_GetFocus)();\n    *(in_ECX + 0xd8) = iVar1;\n    if ((iVar1 != 0) && (iVar1 = fcn.00462d32(),  iVar1 != 0)) {\n        fcn.00463908(*(in_ECX + 0xd8));\n        *(in_ECX + 0xd4) = arg_8h;\n        (*_sym.imp.USER32.dll_GetClassNameW)(*(in_ECX + 0xd8), &lpClassName, 0x100);\n        fcn.004084e7(&lpClassName);\n        *(in_ECX + 0x118) = 0;\n        (*_sym.imp.USER32.dll_EnumChildWindows)(arg_8h, fcn.00462f7e);\n        fcn.0041faa3(&lpClassName, L\"%s%d\", *(in_ECX + 0x8c));\n        fcn.004084e7(&lpClassName);\n        fcn.00462ceb();\n        return 1;\n    }\n    fcn.00462ceb();\n    return 0;\n}\n",
        "token_count": 316
    },
    "00463930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463930(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    uint *puVar3;\n    uint *in_ECX;\n    \n    iVar1 = fcn.00428d10(arg_8h);\n    in_ECX[1] = iVar1;\n    if (iVar1 + 1 == 0) {\n        uVar2 = 0x10;\n    }\n    else {\n        uVar2 = iVar1 + 0x10U & 0xfffffff0;\n    }\n    in_ECX[2] = uVar2;\n    arg_8h_00 = fcn.0041fd8b(uVar2);\n    *in_ECX = arg_8h_00;\n    fcn.00420db0(arg_8h_00, arg_8h, iVar1 + 1);\n    puVar3 = fcn.0041fd5b(4, arg_8h_00);\n    *puVar3 = 1;\n    in_ECX[3] = puVar3;\n    return;\n}\n",
        "token_count": 252
    },
    "00464cf5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t ** __cdecl fcn.00464cf5(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t **arg_14h)\n\n{\n    int32_t **ppiVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int32_t *piVar4;\n    char cVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t **in_ECX;\n    int32_t *extraout_EDX;\n    int32_t iVar8;\n    uint unaff_EDI;\n    uint arg_14h_00;\n    uint var_14h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t **var_4h;\n    \n    piVar4 = arg_10h;\n    *in_ECX = NULL;\n    ppiVar1 = in_ECX + 3;\n    *ppiVar1 = NULL;\n    in_ECX[10] = NULL;\n    in_ECX[0xc] = NULL;\n    in_ECX[0xd] = NULL;\n    *(in_ECX + 0xf) = 0;\n    in_ECX[2] = NULL;\n    if (arg_ch == NULL) {\n        return in_ECX;\n    }\n    if (arg_10h == NULL) {\n        return in_ECX;\n    }\n    if (arg_14h == NULL) {\n        return in_ECX;\n    }\n    if (arg_8h == NULL) {\n        return in_ECX;\n    }\n    *arg_14h = NULL;\n    in_ECX[4] = *(arg_10h + 0x22);\n    in_ECX[6] = *(arg_10h + 0x23) + *(arg_10h + 0x22);\n    in_ECX[5] = *(arg_10h + 0x8a);\n    iVar2 = *(arg_10h + 0x8a);\n    iVar3 = *(arg_10h + 0x8e);\n    in_ECX[1] = arg_10h;\n    in_ECX[7] = iVar3 + iVar2;\n    *in_ECX = arg_8h;\n    var_4h = in_ECX;\n    cVar5 = fcn.0041da5f();\n    if (cVar5 == '\\0') {\n        iVar6 = -0x7fffbffb;\n    }\n    else {\n        if (extraout_EDX[3] == 8) {\n            iVar6 = *extraout_EDX;\n        }\n        else {\n            iVar6 = 0;\n        }\n        iVar6 = (****(iVar6 + 8))(*(iVar6 + 8), 0x49fc84, ppiVar1);\n        if (-1 < iVar6) {\n            piVar7 = fcn.0041fd5b(0xc, unaff_EDI);\n            *piVar7 = 0x4c5ea4;\n            piVar7[2] = in_ECX;\n            piVar7[1] = 1;\n            in_ECX[10] = piVar7;\n            piVar7 = fcn.0041fd5b(8, unaff_EDI);\n            *piVar7 = 0x4c5e68;\n            piVar7[1] = in_ECX;\n            in_ECX[0xc] = piVar7;\n            piVar7 = fcn.0041fd5b(0xc, unaff_EDI);\n            piVar7[2] = 0;\n            *piVar7 = 0x4c5e00;\n            piVar7[1] = in_ECX;\n            in_ECX[0xb] = piVar7;\n            piVar7 = fcn.0041fd5b(8, unaff_EDI);\n            *piVar7 = 0x4c5da0;\n            piVar7[1] = in_ECX;\n            in_ECX[0xd] = piVar7;\n            (**(**ppiVar1 + 0x14))(*ppiVar1, L\"Container\", L\"AutoIt3GUI\");\n            var_ch = *(piVar4 + 0x23);\n            var_8h = *(piVar4 + 0x8e);\n            fcn.00465153();\n            (**(**ppiVar1 + 0x44))(*ppiVar1, 1, &var_14h);\n            (**(**ppiVar1 + 0xc))(*ppiVar1, in_ECX[10]);\n            (**(**ppiVar1 + 0x4c))(*ppiVar1, in_ECX[0xd], in_ECX + 0xe);\n            iVar6 = (****ppiVar1)(*ppiVar1, 0x49fce4, &arg_8h);\n            if (-1 < iVar6) {\n                (**(*arg_8h + 0x1c))(arg_8h, 1, 2, in_ECX[0xd]);\n                (**(*arg_8h + 8))(arg_8h);\n            }\n            (*_sym.imp.ole32.dll_OleSetContainedObject)(*ppiVar1, 1);\n            (**(**ppiVar1 + 0x2c))(*ppiVar1, 0xffffffff, 0, in_ECX[10], 0xffffffff, (*in_ECX)[5], in_ECX + 4);\n            iVar8 = 5;\n            do {\n                iVar6 = (**(**ppiVar1 + 0x38))(*ppiVar1);\n                iVar8 = iVar8 + -1;\n                if (iVar6 == 0) break;\n            } while (iVar8 != 0);\n            if (-1 < iVar6) {\n                iVar6 = (****ppiVar1)(*ppiVar1, 0x49fcc4, &arg_ch);\n                if (iVar6 < 0) {\n                    fcn.004651cc();\n                    arg_14h_00 = 1;\n                    goto code_r0x00464f44;\n                }\n                iVar6 = (**(*arg_ch + 0xc))(arg_ch, var_4h + 2);\n                (**(*arg_ch + 8))(arg_ch);\n                if (-1 < iVar6) {\n                    *arg_14h = var_4h[2];\n                    return var_4h;\n                }\n            }\n            fcn.004651cc();\n            arg_14h_00 = 1;\n            goto code_r0x00464f44;\n        }\n    }\n    arg_14h_00 = 0;\n    var_4h = in_ECX;\ncode_r0x00464f44:\n    fcn.004846fb(iVar6, 0, 0, arg_14h_00);\n    return var_4h;\n}\n",
        "token_count": 1504
    },
    "00464f57": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00464f57(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    uint unaff_ESI;\n    uint arg_8h_00;\n    uint uVar2;\n    \n    uVar2 = 0xc;\n    puVar1 = fcn.0041fd5b(0xc, unaff_ESI);\n    arg_8h_00 = 8;\n    *puVar1 = 0x4c5de8;\n    puVar1[2] = 1;\n    puVar1[1] = in_ECX;\n    *in_ECX = puVar1;\n    puVar1 = fcn.0041fd5b(8, uVar2);\n    uVar2 = 8;\n    *puVar1 = 0x4c5e4c;\n    puVar1[1] = in_ECX;\n    in_ECX[1] = puVar1;\n    puVar1 = fcn.0041fd5b(8, arg_8h_00);\n    *puVar1 = 0x4c5dc0;\n    puVar1[1] = in_ECX;\n    in_ECX[2] = puVar1;\n    puVar1 = fcn.0041fd5b(0xc, uVar2);\n    puVar1[1] = in_ECX;\n    *puVar1 = 0x4c5e10;\n    puVar1[2] = arg_8h;\n    in_ECX[4] = 0;\n    in_ECX[3] = puVar1;\n    in_ECX[5] = arg_8h;\n    *(in_ECX + 6) = 0;\n    return;\n}\n",
        "token_count": 389
    },
    "00465065": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00465065(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    \n    piVar1 = arg_8h;\n    if (*arg_8h[1] != 0) {\n        *(*arg_8h[1] + 0x18) = 0;\n    }\n    if (arg_ch == NULL) {\n        iVar2 = (****(arg_8h[1] + 0xc))(*(arg_8h[1] + 0xc), 0x49fcf4, &arg_8h);\n        if (iVar2 < 0) {\n            return 0x80004005;\n        }\n        (**(*arg_8h + 0xc))(arg_8h, 0, 0, 0, piVar1 + 2);\n        (**(*arg_8h + 8))(arg_8h);\n        piVar3 = piVar1[2];\n    }\n    else {\n        arg_8h[2] = arg_ch;\n        piVar3 = arg_ch;\n    }\n    ppiVar4 = piVar1 + 2;\n    (**(*piVar3 + 4))(piVar3);\n    iVar2 = (**(**ppiVar4 + 0xc))(*ppiVar4, *(piVar1[1] + 0x30));\n    if (iVar2 < 0) {\n        return 0x80004005;\n    }\n    (**(**ppiVar4 + 0x28))(*ppiVar4, 1);\n    (**(**ppiVar4 + 0x18))(*ppiVar4, piVar1[1] + 0x10);\n    (**(**ppiVar4 + 0x24))(*ppiVar4, 1);\n    if (*piVar1[1] != 0) {\n        *(*piVar1[1] + 0x18) = 1;\n    }\n    return 0;\n}\n",
        "token_count": 460
    },
    "0046541b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046541b(int32_t arg_8h, uint *arg_ch, uint *arg_10h, uint arg_14h, uint arg_18h, uint *arg_1ch)\n\n{\n    *arg_10h = 0;\n    *arg_ch = *(**(arg_8h + 4) + 0xc);\n    (*_sym.imp.USER32.dll_CopyRect)(arg_14h, *(arg_8h + 4) + 0x10);\n    (*_sym.imp.USER32.dll_CopyRect)(arg_18h, *(arg_8h + 4) + 0x10);\n    arg_1ch[1] = 0;\n    *arg_1ch = 0x14;\n    arg_1ch[2] = *(**(arg_8h + 4) + 0x14);\n    arg_1ch[3] = 0;\n    arg_1ch[4] = 0;\n    return 0;\n}\n",
        "token_count": 222
    },
    "00465578": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00465578(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_ECX;\n    \n    iVar1 = fcn.00421324(arg_8h, 0x49fc74, 0x10);\n    if (iVar1 != 0) {\n        iVar1 = fcn.00421324(arg_8h, 0x49fc94, 0x10);\n        if ((iVar1 == 0) || (iVar1 = fcn.00421324(arg_8h, 0x49fcd4, 0x10),  iVar1 == 0)) {\n            iVar1 = in_ECX[0xc];\n            goto code_r0x0046559c;\n        }\n        iVar1 = fcn.00421324(arg_8h, 0x49fcb4, 0x10);\n        if ((iVar1 == 0) || (iVar1 = fcn.00421324(arg_8h, 0x49fca4, 0x10),  iVar1 == 0)) {\n            iVar1 = *(*in_ECX + 0xc);\n            goto code_r0x0046559c;\n        }\n        iVar1 = fcn.00421324(arg_8h, 0x49fc04, 0x10);\n        if (iVar1 == 0) {\n            iVar1 = in_ECX[0xd];\n            goto code_r0x0046559c;\n        }\n        iVar1 = fcn.00421324(arg_8h, 0x49fd04, 0x10);\n        if (iVar1 == 0) {\n            iVar1 = in_ECX[0xb];\n            goto code_r0x0046559c;\n        }\n        iVar1 = fcn.00421324(arg_8h, 0x49fb94, 0x10);\n        if (iVar1 != 0) {\n            if (*in_ECX != 0) {\n                uVar2 = fcn.00465667(arg_8h, arg_ch);\n                return uVar2;\n            }\n            return 0x80004002;\n        }\n    }\n    iVar1 = in_ECX[10];\ncode_r0x0046559c:\n    *arg_ch = iVar1;\n    return 0;\n}\n",
        "token_count": 524
    },
    "00465667": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00465667(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint uVar2;\n    \n    iVar1 = fcn.00421324(arg_8h, 0x49fb94, 0x10);\n    if ((iVar1 == 0) || (iVar1 = fcn.00421324(arg_8h, 0x49fc64, 0x10),  iVar1 == 0)) {\n        uVar2 = *in_ECX;\n    }\n    else {\n        iVar1 = fcn.00421324(arg_8h, 0x49fbb4, 0x10);\n        if (iVar1 == 0) {\n            uVar2 = in_ECX[1];\n        }\n        else {\n            iVar1 = fcn.00421324(arg_8h, 0x49fc34, 0x10);\n            if (iVar1 == 0) {\n                uVar2 = in_ECX[2];\n            }\n            else {\n                iVar1 = fcn.00421324(arg_8h, 0x49fcb4, 0x10);\n                if (iVar1 != 0) {\n                    return 0x80004002;\n                }\n                uVar2 = in_ECX[3];\n            }\n        }\n    }\n    *arg_ch = uVar2;\n    return 0;\n}\n",
        "token_count": 318
    },
    "004656fa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004656fa(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    piVar2 = arg_8h;\n    iVar3 = *(arg_8h[1] + 4);\n    *(arg_8h[1] + 0x10) = *(iVar3 + 0x88);\n    *(arg_8h[1] + 0x18) = *(iVar3 + 0x8c) + *(iVar3 + 0x88);\n    *(arg_8h[1] + 0x14) = *(iVar3 + 0x8a);\n    *(arg_8h[1] + 0x1c) = *(iVar3 + 0x8e) + *(iVar3 + 0x8a);\n    iVar3 = (****(arg_8h[1] + 0xc))(*(arg_8h[1] + 0xc), 0x49fcc4, &arg_8h);\n    if (iVar3 < 0) {\n        uVar4 = 0x8000ffff;\n    }\n    else {\n        iVar3 = piVar2[1];\n        piVar1 = *(iVar3 + 0xc);\n        (**(*piVar1 + 0x48))(piVar1, 1, iVar3 + 0x20);\n        (**(*arg_8h + 0x1c))(arg_8h, arg_ch, piVar2[1] + 0x10);\n        (**(*arg_8h + 8))(arg_8h);\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 396
    },
    "00465ec4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00465ec4(int32_t param_1, uint16_t **param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    \n    puVar3 = param_2[1];\n    puVar2 = fcn.004248f3(param_1);\n    if (puVar2 == puVar3) {\n        puVar2 = *param_2;\n        if (puVar3 != NULL) {\n            param_1 = param_1 - puVar2;\n            do {\n                uVar1 = *(param_1 + puVar2);\n                if (uVar1 != *puVar2) {\n                    puVar2 = (-(uVar1 < *puVar2) & 0xfffffffe) + 1;\n                    goto code_r0x00465ef7;\n                }\n                puVar2 = puVar2 + 1;\n                puVar3 = puVar3 + -1;\n            } while (puVar3 != NULL);\n        }\n        puVar2 = NULL;\ncode_r0x00465ef7:\n        if (puVar2 == NULL) {\n            return 1;\n        }\n    }\n    return puVar2 & 0xffffff00;\n}\n",
        "token_count": 280
    },
    "00466037": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00466037(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    do {\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*(*(param_1 + 0x1c) + iVar1));\n        iVar1 = iVar1 + 4;\n    } while (iVar1 < 0x24);\n    return;\n}\n",
        "token_count": 91
    },
    "00466120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466120(int32_t *arg_8h, uint arg_ch, int32_t **arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00421324(arg_ch, 0x49fb94, 0x10);\n    if ((iVar1 != 0) && (iVar1 = fcn.00421324(arg_ch, 0x49fbb4, 0x10),  iVar1 != 0)) {\n        return 0x80004002;\n    }\n    (**(*arg_8h + 4))(arg_8h);\n    *arg_10h = arg_8h;\n    return 0;\n}\n",
        "token_count": 155
    },
    "0046642a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0046642a(uint *param_1)\n\n{\n    *param_1 = 0x49d100;\n    fcn.00466f23();\n    fcn.0041fd94(param_1[1]);\n    fcn.0041fd4d(param_1);\n    return param_1;\n}\n",
        "token_count": 75
    },
    "004664ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004664ee(int32_t arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(arg_8h + 0x24);\n    return;\n}\n",
        "token_count": 46
    },
    "00466bdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466bdc(uint noname_0, uint noname_1, uint *arg_10h, uint noname_3, uint noname_4, uint *arg_1ch)\n\n{\n    char16_t cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char16_t *pcVar4;\n    int32_t var_10h;\n    int32_t var_ch;\n    \n    if ((arg_10h == NULL) || (arg_1ch == NULL)) {\n        uVar3 = 0x80020006;\n    }\n    else {\n        fcn.0040b606(*arg_10h);\n        fcn.0040c7c9();\n        (*_sym.imp.USER32.dll_CharUpperBuffW)(var_10h, var_ch);\n        pcVar4 = L\"STOP\";\n        iVar2 = fcn.004248f3(L\"STOP\");\n        if (var_ch == iVar2) {\n            if (var_ch != 0) {\n                do {\n                    cVar1 = *(var_10h + -0x4c5f98 + pcVar4);\n                    if (cVar1 != *pcVar4) {\n                        iVar2 = (-(cVar1 < *pcVar4) & 0xfffffffe) + 1;\n                        goto code_r0x00466c41;\n                    }\n                    pcVar4 = pcVar4 + 1;\n                    var_ch = var_ch + -1;\n                } while (var_ch != 0);\n            }\n            iVar2 = 0;\ncode_r0x00466c41:\n            if (iVar2 == 0) {\n                *arg_1ch = 0xfffffc19;\n            }\n        }\n        fcn.0040b1ff();\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 406
    },
    "00466d1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466d1c(int32_t *arg_8h, uint arg_ch, int32_t **arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00421324(arg_ch, 0x49fb94, 0x10);\n    if (((iVar1 != 0) && (iVar1 = fcn.00421324(arg_ch, 0x49fbb4, 0x10),  iVar1 != 0)) &&\n       (iVar1 = fcn.00421324(arg_ch, arg_8h + 4, 0x10),  iVar1 != 0)) {\n        return 0x80004002;\n    }\n    (**(*arg_8h + 4))(arg_8h);\n    *arg_10h = arg_8h;\n    return 0;\n}\n",
        "token_count": 192
    },
    "00466dc7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00466dc7(uint32_t arg_8h, uint noname_1, double *pvargDest)\n\n{\n    uint8_t uVar1;\n    ushort uVar2;\n    int32_t *arg_8h_00;\n    float fVar3;\n    uint16_t uVar4;\n    uint in_ECX;\n    int32_t iVar5;\n    float10 fVar6;\n    ulong uVar7;\n    uint pvarSrc;\n    uint var_4h;\n    \n    if ((arg_8h & 0x4000) == 0) {\n        return;\n    }\n    iVar5 = 0;\n    var_4h = 0;\n    arg_8h_00 = fcn.0041da6c(in_ECX, &var_4h, 1);\n    if (0x17 < (arg_8h & 0xfff) - 2) {\n        return;\n    }\n    // switch table (24 cases) at 0x466edf\n    switch(*(*((arg_8h & 0xfff) + 0x466f09) * 4 + 0x466edf)) {\n    case 0x466e12:\n        uVar1 = fcn.004039e5();\n        uVar4 = (uVar1 ^ 1) - 1;\n        goto code_r0x00466e20;\n    case 0x466e2b:\n        if (pvargDest != NULL) {\n            fcn.00408e90();\n            (*_sym.imp.OLEAUT32.dll_SysAllocStringLen)(pvargDest, *arg_8h_00[2]);\n        }\n        break;\n    case 0x466e4e:\n        fcn.0045f8d2(arg_8h_00);\n        (*_sym.imp.OLEAUT32.dll_VariantChangeType)(pvargDest, &pvarSrc);\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvarSrc);\n        break;\n    case 0x466e70:\n        fVar3 = fcn.0040ce67();\n        *pvargDest = fVar3;\n        break;\n    case 0x466e7e:\n        uVar7 = fcn.0040cc8f();\n        *pvargDest = uVar7;\n        *(pvargDest + 4) = uVar7 >> 0x20;\n        break;\n    case 0x466e8f:\n        uVar2 = fcn.0040ce67();\n        *pvargDest = uVar2;\n        break;\n    case 0x466e9e:\n        uVar1 = fcn.0040ce67();\n        uVar4 = uVar1;\ncode_r0x00466e20:\n        *pvargDest = uVar4;\n        break;\n    case 0x466ead:\n        fVar6 = fcn.0040cfb5();\n        *pvargDest = fVar6;\n        break;\n    case 0x466ebb:\n        fVar6 = fcn.0040cfb5();\n        *pvargDest = fVar6;\n        break;\n    case 0x466ec9:\n        if (arg_8h_00[3] == 8) {\n            iVar5 = *arg_8h_00;\n        }\n        *pvargDest = *(iVar5 + 8);\n    }\n    return;\n}\n",
        "token_count": 755
    },
    "00467277": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00467277(int32_t arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(arg_8h + 0x38);\n    return;\n}\n",
        "token_count": 46
    },
    "00467629": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00467629(int32_t param_1)\n\n{\n    uint *arg_8h;\n    \n    arg_8h = param_1 + -4;\n    fcn.00405f7b(param_1, 0x10, *arg_8h, 0x45f920);\n    fcn.00420038(arg_8h);\n    return arg_8h;\n}\n",
        "token_count": 92
    },
    "00468910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00468910(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0041fd8b(8);\n    var_8h = *(arg_8h + 8);\n    var_4h = *(arg_8h + 0xc);\n    fcn.00420db0(uVar1, &var_8h, 8);\n    return uVar1;\n}\n",
        "token_count": 115
    },
    "00468b06": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00468b06(int16_t *arg_8h, int32_t *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t *arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t **ppiVar5;\n    uint pvargDest;\n    int32_t *var_1ch;\n    uint var_18h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    \n    piVar2 = arg_20h;\n    if (*arg_8h == 0x24) {\n        (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n        var_1ch = NULL;\n        var_18h = 0;\n        iVar4 = (**(**(arg_8h + 6) + 0x28))(*(arg_8h + 6), 0, 0, &pvargDest);\n        piVar3 = var_1ch;\n        var_10h = var_1ch;\n        if ((-1 < iVar4) && (0 < var_1ch)) {\n            iVar4 = (**(**(arg_8h + 6) + 0x2c))(*(arg_8h + 6), 0, 0, &pvargDest, 0);\n            if (-1 < iVar4) {\n                iVar4 = *piVar2;\n                arg_20h = var_1ch;\n                if ((*arg_ch & 0x4000) == 0) {\n                    var_ch = var_1ch[3] + (1 - piVar3) * 4;\n                    iVar1 = var_1ch[2];\n                    arg_ch = NULL;\n                    if (piVar3 != NULL) {\n                        var_8h = piVar3 + -1;\n                        do {\n                            arg_20h = *(iVar1 + arg_ch * 4);\n                            (*_sym.imp.OLEAUT32.dll_VariantCopy)(iVar4 * 0x10 + arg_10h);\n                            iVar4 = *piVar2;\n                            *(iVar4 * 0x10 + arg_10h) = 0x13;\n                            ppiVar5 = arg_10h + 8 + iVar4 * 0x10;\n                            if (arg_ch == var_8h) {\n                                *ppiVar5 = NULL;\n                                fcn.00420db0(ppiVar5, &arg_20h, var_ch);\n                                iVar4 = *piVar2;\n                            }\n                            else {\n                                *ppiVar5 = arg_20h;\n                            }\n                            *(arg_18h + iVar4 * 2) = 0x13;\n                            *(arg_1ch + iVar4 * 4) = iVar4 * 0x10 + arg_10h;\n                            *(arg_14h + iVar4 * 4) = 0;\n                            iVar4 = iVar4 + 1;\n                            arg_ch = arg_ch + 1;\n                            *piVar2 = iVar4;\n                        } while (arg_ch < var_10h);\n                    }\n                    *piVar2 = iVar4 + -1;\n                }\n                else {\n                    *arg_ch = 0x13;\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(iVar4 * 0x10 + arg_10h);\n                    iVar4 = *piVar2;\n                    *(arg_10h + iVar4 * 0x10) = *arg_ch;\n                    *(arg_10h + 8 + iVar4 * 0x10) = arg_20h[2];\n                }\n            }\n        }\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n    }\n    else if ((*arg_ch & 0x4000) != 0) {\n        *arg_ch = 0x13;\n        *(arg_10h + *arg_20h * 0x10) = 0x13;\n        (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(arg_8h, arg_8h, 0, 0x13);\n        *(arg_10h + 8 + *piVar2 * 0x10) = *(arg_8h + 4);\n    }\n    return;\n}\n",
        "token_count": 989
    },
    "00468fa4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00468fa4(int32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_10h;\n    int32_t in_ECX;\n    \n    if (arg_8h < *(in_ECX + 0x1c)) {\n        arg_10h = fcn.0049b3c9(*(in_ECX + 0x1c), arg_8h, &arg_8h);\n        fcn.00408817(arg_8h, 0, arg_10h);\n        fcn.0040ab2b(arg_8h);\n    }\n    else {\n        fcn.0040ad22(0, 0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "00469227": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00469227(uint *arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint var_2ch;\n    uint var_1ch;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    fcn.0040c25d();\n    iVar2 = arg_8h[1];\n    var_ch = iVar2;\n    fcn.00407c18(*(in_ECX + 4));\n    if (arg_10h < 0) {\n        iVar2 = fcn.00468daa(*arg_8h, arg_14h, arg_10h, iVar2, 0xffffffff, 0x7fffffff);\n        if (iVar2 < 0) {\n            arg_10h = -iVar2;\n            iVar2 = 0;\n        }\n        else {\n            fcn.004086ac(in_ECX, 0, iVar2);\n        }\n        iVar3 = 0;\n        arg_10h = -arg_10h;\n    }\n    else {\n        iVar3 = 0;\n        iVar2 = 0;\n    }\n    do {\n        iVar1 = var_4h;\n        var_8h = fcn.00468daa(*arg_8h, arg_14h, 1, var_ch, iVar2, 0xffffffff);\n        arg_8h_00 = var_4h;\n        iVar1 = *(iVar1 + 4);\n        fcn.004086ac(var_4h, iVar2, var_8h - iVar2);\n        fcn.00407cf8(&var_2ch);\n        if (var_8h == iVar1) goto code_r0x00469312;\n        fcn.00407cf8(arg_ch);\n        iVar3 = iVar3 + 1;\n        iVar2 = var_8h + var_ch;\n    } while ((arg_10h == 0) || (iVar3 != arg_10h));\n    fcn.004086ac(arg_8h_00, iVar2, *(arg_8h_00 + 4) - iVar2);\n    fcn.00407cf8(&var_2ch);\ncode_r0x00469312:\n    if (iVar3 != 0) {\n        fcn.0040c1c3(&var_1ch);\n    }\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return iVar3;\n}\n",
        "token_count": 608
    },
    "004694cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004694cb(uint arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *arg_8h_00;\n    uchar *in_ECX;\n    uint uVar3;\n    \n    iVar2 = fcn.00428d9b(arg_8h, L\"#notrayicon\", 0xb);\n    if (iVar2 == 0) {\n        *in_ECX = 1;\n        return 1;\n    }\n    iVar2 = fcn.00428d9b(arg_8h, L\"#requireadmin\", 0xd);\n    if (iVar2 == 0) {\n        in_ECX[1] = 1;\n        return 1;\n    }\n    iVar2 = fcn.00428d9b(arg_8h, L\"#OnAutoItStartRegister\", 0x16);\n    if (iVar2 != 0) {\n        return 1;\n    }\n    arg_8h_00 = fcn.00408fa0();\n    fcn.00408fd0(arg_8h_00);\n    fcn.004090bd(arg_8h_00);\n    iVar2 = fcn.004248f3(arg_8h_00);\n    iVar1 = arg_8h_00[iVar2 + -1];\n    if ((iVar1 == 0x22) || (iVar1 == 0x27)) {\n        if (*arg_8h_00 != iVar1) goto code_r0x00469573;\n        arg_8h_00[iVar2 + -1] = 0;\n        (**(**(in_ECX + 4) + 8))(arg_8h_00 + 1);\n    }\n    else {\n        if ((*arg_8h_00 == 0x22) || (*arg_8h_00 == 0x27)) {\ncode_r0x00469573:\n            uVar3 = 0;\n            goto code_r0x0046958d;\n        }\n        (**(**(in_ECX + 4) + 8))(arg_8h_00);\n    }\n    uVar3 = 1;\ncode_r0x0046958d:\n    fcn.0041fd94(arg_8h_00);\n    return uVar3;\n}\n",
        "token_count": 503
    },
    "0046959c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046959c(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    iVar2 = *(*arg_ch + arg_8h);\n    *arg_ch = *arg_ch + 4;\n    iVar3 = (iVar2 + 1) * 2;\n    iVar5 = fcn.0041fd8b(-(iVar3 >> 0x20 != 0) | iVar3);\n    iVar4 = iVar2 * 2;\n    fcn.00420db0(iVar5, *arg_ch + arg_8h, iVar4);\n    *arg_ch = *arg_ch + iVar4;\n    iVar6 = 0;\n    *(iVar4 + iVar5) = 0;\n    if (0 < iVar2) {\n        do {\n            puVar1 = iVar5 + iVar6 * 2;\n            *puVar1 = *puVar1 ^ iVar2;\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < iVar2);\n    }\n    return iVar5;\n}\n",
        "token_count": 275
    },
    "00469af8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00469af8(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_10h;\n    uint *puVar1;\n    uint arg_18h;\n    uint *arg_1ch;\n    \n    arg_10h = fcn.004290c1(1);\n    arg_1ch = &arg_ch;\n    arg_18h = 0;\n    puVar1 = fcn.0041f6a0();\n    fcn.00428c67(*puVar1, puVar1[1], arg_10h, arg_8h, arg_18h, arg_1ch);\n    return;\n}\n",
        "token_count": 145
    },
    "0046b22b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b22b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint in_ECX;\n    \n    fcn.0041f676(arg_ch, in_ECX, &arg_10h);\n    return;\n}\n",
        "token_count": 61
    },
    "0046b2a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b2a9(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    piVar1 = in_ECX + 4;\n    do {\n        if (*piVar1 == arg_8h) {\n            (*_sym.imp.KERNEL32.dll_VirtualFreeEx)(*(in_ECX + iVar2 * 8), *piVar1, 0, 0x8000);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(*(in_ECX + iVar2 * 8));\n            *(in_ECX + 4 + iVar2 * 8) = 0;\n            return;\n        }\n        iVar2 = iVar2 + 1;\n        piVar1 = piVar1 + 2;\n    } while (iVar2 < 0x10);\n    return;\n}\n",
        "token_count": 206
    },
    "0046b2ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b2ec(int32_t arg_8h, uint lpBuffer, uint nSize)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t *piVar2;\n    \n    piVar2 = in_ECX + 4;\n    iVar1 = 0;\n    do {\n        if (*piVar2 == arg_8h) break;\n        iVar1 = iVar1 + 1;\n        piVar2 = piVar2 + 2;\n    } while (iVar1 < 0x10);\n    if (iVar1 != 0x10) {\n        (*_sym.imp.KERNEL32.dll_ReadProcessMemory)(*(in_ECX + iVar1 * 8), arg_8h, lpBuffer, nSize, 0);\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "0046b321": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b321(uint lpBuffer, int32_t arg_ch, uint nSize)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t *piVar2;\n    \n    piVar2 = in_ECX + 4;\n    iVar1 = 0;\n    do {\n        if (*piVar2 == arg_ch) break;\n        iVar1 = iVar1 + 1;\n        piVar2 = piVar2 + 2;\n    } while (iVar1 < 0x10);\n    if (iVar1 != 0x10) {\n        (*_sym.imp.KERNEL32.dll_WriteProcessMemory)(*(in_ECX + iVar1 * 8), arg_ch, lpBuffer, nSize, 0);\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "0046b4e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0046b4e6(int32_t *arg_8h)\n\n{\n    char16_t cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    char16_t *pcVar7;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *arg_8h;\n    iVar6 = arg_8h[1];\n    *arg_8h[3] = *arg_8h[3] + 1;\n    fcn.0040c7c9();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(iVar2, iVar6);\n    pcVar7 = L\"REMOVE\";\n    iVar3 = fcn.004248f3(L\"REMOVE\");\n    if (iVar6 == iVar3) {\n        if (iVar6 != 0) {\n            iVar3 = iVar6;\n            do {\n                cVar1 = *(iVar2 + -0x4c6754 + pcVar7);\n                if (cVar1 != *pcVar7) {\n                    iVar3 = (-(cVar1 < *pcVar7) & 0xfffffffe) + 1;\n                    goto code_r0x0046b55d;\n                }\n                pcVar7 = pcVar7 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar3 = 0;\ncode_r0x0046b55d:\n        if (iVar3 != 0) goto code_r0x0046b565;\n    }\n    else {\ncode_r0x0046b565:\n        pcVar7 = L\"KEYS\";\n        iVar3 = fcn.004248f3(L\"KEYS\");\n        if (iVar6 == iVar3) {\n            if (iVar6 != 0) {\n                iVar3 = iVar6;\n                do {\n                    cVar1 = *(iVar2 + -0x4c6764 + pcVar7);\n                    if (cVar1 != *pcVar7) {\n                        iVar3 = (-(cVar1 < *pcVar7) & 0xfffffffe) + 1;\n                        goto code_r0x0046b5a0;\n                    }\n                    pcVar7 = pcVar7 + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            iVar3 = 0;\ncode_r0x0046b5a0:\n            if (iVar3 == 0) goto code_r0x0046b612;\n        }\n        pcVar7 = L\"EXISTS\";\n        iVar3 = fcn.004248f3(L\"EXISTS\");\n        if (iVar6 == iVar3) {\n            if (iVar6 != 0) {\n                iVar3 = iVar6;\n                do {\n                    cVar1 = *(iVar2 + -0x4c6770 + pcVar7);\n                    if (cVar1 != *pcVar7) {\n                        iVar3 = (-(cVar1 < *pcVar7) & 0xfffffffe) + 1;\n                        goto code_r0x0046b5db;\n                    }\n                    pcVar7 = pcVar7 + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            iVar3 = 0;\ncode_r0x0046b5db:\n            if (iVar3 == 0) goto code_r0x0046b612;\n        }\n        uVar5 = 0;\n        pcVar7 = L\"APPEND\";\n        iVar3 = fcn.004248f3(L\"APPEND\");\n        if (iVar6 != iVar3) goto code_r0x0046b614;\n        uVar4 = uVar5;\n        if (iVar6 != 0) {\n            do {\n                cVar1 = *(iVar2 + -0x4c6780 + pcVar7);\n                if (cVar1 != *pcVar7) {\n                    uVar4 = (-(cVar1 < *pcVar7) & 0xfffffffe) + 1;\n                    break;\n                }\n                pcVar7 = pcVar7 + 1;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n        }\n        if (uVar4 != 0) goto code_r0x0046b614;\n    }\ncode_r0x0046b612:\n    uVar5 = 1;\ncode_r0x0046b614:\n    uVar4 = fcn.0040b1ff();\n    return uVar4 & 0xffffff00 | uVar5;\n}\n",
        "token_count": 1046
    },
    "0046b9ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b9ef(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    \n    iVar3 = *arg_8h;\n    piVar1 = arg_8h[1];\n    if (iVar3 != 0) {\n        *(iVar3 + 4) = piVar1;\n    }\n    if (piVar1 != NULL) {\n        *piVar1 = *arg_8h;\n    }\n    if (iVar3 == 0) {\n        *(*(in_ECX + 0x14) + *arg_ch * 4) = piVar1;\n    }\n    iVar3 = arg_8h[10];\n    if (iVar3 != 0) {\n        fcn.004024b5(iVar3);\n        iVar3 = extraout_ECX;\n    }\n    fcn.0040249a(iVar3);\n    iVar5 = 0;\n    iVar3 = *(*(in_ECX + 0x10) + 8);\n    if (0 < iVar3) {\n        puVar4 = *(*(in_ECX + 0x10) + 4);\n        do {\n            if (**puVar4 == arg_8h) break;\n            iVar5 = iVar5 + 1;\n            puVar4 = puVar4 + 1;\n        } while (iVar5 < iVar3);\n    }\n    for (; iVar5 < iVar3 + -1; iVar5 = iVar5 + 1) {\n        iVar2 = *(*(in_ECX + 0x10) + 4);\n        **(iVar2 + iVar5 * 4) = **(iVar2 + 4 + iVar5 * 4);\n    }\n    iVar3 = *(in_ECX + 0x10);\n    *(iVar3 + 8) = *(iVar3 + 8) + -1;\n    fcn.0041fd4d(*(*(iVar3 + 4) + *(iVar3 + 8) * 4));\n    *(*(iVar3 + 4) + *(iVar3 + 8) * 4) = 0;\n    return;\n}\n",
        "token_count": 516
    },
    "0046bb28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046bb28(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_ECX;\n    int32_t *arg_8h_00;\n    uint unaff_EDI;\n    int32_t *var_4h;\n    \n    piVar1 = fcn.0041fd5b(0x14, unaff_EDI);\n    fcn.0040c25d();\n    arg_8h_00 = *(in_ECX + 0x1b4 + arg_8h * 4) + 8;\n    var_4h = piVar1;\n    if (piVar1 + 1 != arg_8h_00) {\n        fcn.0040c1c3(arg_8h_00);\n    }\n    *piVar1 = arg_8h;\n    fcn.00404d4c(&var_4h);\n    return;\n}\n",
        "token_count": 209
    },
    "0046c85f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046c85f(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    if (arg_8h + 0xeU < 0xc) {\n        if (arg_8h * 0x10 + 0x4d1b14 != arg_ch) {\n            fcn.0040c1c3(arg_ch);\n        }\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 123
    },
    "0046c979": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046c979(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = param_1[1];\n    if (iVar1 != 0) {\n        fcn.0046cac0();\n        fcn.00420db0(*param_1, *param_1 + iVar1, (param_1[1] - iVar1) + 1);\n        param_1[1] = param_1[1] - iVar1;\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "0046cac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046cac0(uint *param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint unaff_EBX;\n    int32_t iVar4;\n    \n    iVar4 = *param_1[3];\n    if (1 < iVar4) {\n        *param_1[3] = iVar4 + -1;\n        puVar1 = fcn.0041fd5b(4, unaff_EBX);\n        *puVar1 = 1;\n        param_1[3] = puVar1;\n        iVar4 = param_1[1] + 1;\n        if (iVar4 == 0) {\n            uVar2 = 0x10;\n        }\n        else {\n            uVar2 = param_1[1] + 0x10 & 0xfffffff0;\n        }\n        param_1[2] = uVar2;\n        uVar3 = fcn.0041fd8b(uVar2);\n        fcn.00420db0(uVar3, *param_1, iVar4);\n        *param_1 = uVar3;\n    }\n    return;\n}\n",
        "token_count": 260
    },
    "0046cc1d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046cc1d(uint lpBuffer, uint nNumberOfBytesToWrite)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint *lpNumberOfBytesWritten;\n    \n    lpNumberOfBytesWritten = in_ECX;\n    if (in_ECX[2] != 0) {\n        in_ECX[2] = 0;\n        in_ECX[3] = 0;\n        fcn.0046cb55();\n    }\n    (*_sym.imp.KERNEL32.dll_WriteFile)(*in_ECX, lpBuffer, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n    puVar1 = in_ECX + 4;\n    uVar2 = *puVar1;\n    *puVar1 = *puVar1 + lpNumberOfBytesWritten;\n    in_ECX[5] = in_ECX[5] + CARRY4(uVar2, lpNumberOfBytesWritten);\n    return;\n}\n",
        "token_count": 217
    },
    "0046cd0a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0046cd0a(uint *arg_8h)\n\n{\n    uchar uVar1;\n    uint32_t nNumberOfBytesToWrite;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uchar *puVar6;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puVar6 = *arg_8h;\n    nNumberOfBytesToWrite = arg_8h[1] * 2;\n    uVar2 = fcn.0041fd8b(nNumberOfBytesToWrite);\n    fcn.004070c2(uVar2);\n    uVar5 = 0;\n    if (nNumberOfBytesToWrite != 0) {\n        iVar4 = var_ch - puVar6;\n        do {\n            puVar6[iVar4] = puVar6[1];\n            uVar1 = *puVar6;\n            puVar6 = puVar6 + 2;\n            *(var_ch + 1 + uVar5) = uVar1;\n            uVar5 = uVar5 + 2;\n        } while (uVar5 < nNumberOfBytesToWrite);\n    }\n    uVar5 = fcn.0046cc1d(var_ch, nNumberOfBytesToWrite);\n    uVar3 = uVar5 & 0xffffff00 | uVar5 == nNumberOfBytesToWrite;\n    *var_8h = *var_8h + -1;\n    if (*var_8h == 0) {\n        uVar2 = 4;\n        fcn.0041fd4d(var_8h);\n        uVar3 = fcn.0041fd94(var_ch, var_8h, uVar2);\n        uVar3 = uVar3 & 0xffffff00 | uVar5 == nNumberOfBytesToWrite;\n    }\n    return uVar3;\n}\n",
        "token_count": 428
    },
    "0046d978": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046d978(uint noname_0, uint arg_ch)\n\n{\n    uint uVar1;\n    uint lpText;\n    uint lpCaption;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    (*_sym.imp.USER32.dll_LoadStringW)(uVar1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0, 0x1389, &lpText, 0x100);\n    (*_sym.imp.USER32.dll_LoadStringW)(uVar1);\n    if (arg_ch == '\\0') {\n        (*_sym.imp.USER32.dll_MessageBoxW)(0, &lpText, &lpCaption, 0x11010);\n    }\n    else {\n        fcn.00469af8(L\"%s (%d) : ==> %s: \\n%s \\n%s\\n\", &lpCaption);\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "0046e04a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0046e04a(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_ch;\n    \n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.00406bff(0, 0, 0);\n    fcn.00406bff(0, 0, 0);\n    iVar1 = fcn.0041d5dc(var_20h, var_1ch, var_10h, var_ch, 0);\n    fcn.0040b1ff();\n    uVar2 = fcn.0040b1ff();\n    return uVar2 & 0xffffff00 | iVar1 != 0;\n}\n",
        "token_count": 184
    },
    "0046e186": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e186(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t in_ECX;\n    uint32_t in_EDX;\n    uint32_t lprc;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    lprc = -(in_ECX != 0x80000000) & in_ECX;\n    var_ch = -(in_EDX != 0x80000000) & in_EDX;\n    var_4h = arg_ch + var_ch;\n    var_8h = arg_8h + lprc;\n    (*_sym.imp.USER32.dll_MonitorFromRect)(&lprc, 0);\n    return;\n}\n",
        "token_count": 171
    },
    "0046e6c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046e6c7(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    iVar1 = *arg_10h;\n    if ((iVar1 == in_ECX) && (*arg_14h == in_EDX)) {\n        return 0;\n    }\n    if (iVar1 < in_ECX) {\n        iVar2 = (in_ECX - iVar1) / arg_8h;\n        if ((iVar2 == 0) || (iVar2 < arg_ch)) {\n            iVar2 = arg_ch;\n        }\n        if (iVar2 + iVar1 <= in_ECX) {\n            in_ECX = iVar2 + iVar1;\n        }\n    }\n    else {\n        if (iVar1 <= in_ECX) goto code_r0x0046e72f;\n        iVar2 = (iVar1 - in_ECX) / arg_8h;\n        if ((iVar2 == 0) || (iVar2 < arg_ch)) {\n            iVar2 = arg_ch;\n        }\n        if (in_ECX <= iVar1 - iVar2) {\n            *arg_10h = iVar1 - iVar2;\n            goto code_r0x0046e72f;\n        }\n    }\n    *arg_10h = in_ECX;\ncode_r0x0046e72f:\n    iVar1 = *arg_14h;\n    if (iVar1 < in_EDX) {\n        arg_8h = (in_EDX - iVar1) / arg_8h;\n        if ((arg_8h == 0) || (arg_8h < arg_ch)) {\n            arg_8h = arg_ch;\n        }\n        if (arg_8h + iVar1 <= in_EDX) {\n            in_EDX = arg_8h + iVar1;\n        }\n    }\n    else {\n        if (iVar1 <= in_EDX) {\n            return 1;\n        }\n        arg_8h = (iVar1 - in_EDX) / arg_8h;\n        if ((arg_8h == 0) || (arg_8h < arg_ch)) {\n            arg_8h = arg_ch;\n        }\n        if (in_EDX <= iVar1 - arg_8h) {\n            *arg_14h = iVar1 - arg_8h;\n            return 1;\n        }\n    }\n    *arg_14h = in_EDX;\n    return 1;\n}\n",
        "token_count": 572
    },
    "0046edb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.0046edb8(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar1 = fcn.004248f3(param_1);\n    uVar2 = uVar1 - (uVar1 >> 0x1f) & 0xfffffffe;\n    if (uVar1 == uVar2) {\n        iVar4 = 0;\n        if (0 < uVar1) {\n            do {\n                uVar2 = fcn.004035b3(8);\n                if (uVar2 == '\\0') goto code_r0x0046ee27;\n                iVar3 = iVar4;\n                if (iVar4 < 0) {\n                    iVar3 = iVar4 + 1;\n                }\n                iVar4 = iVar4 + 2;\n                uVar2 = uVar2 & 0xffffff00;\n                *((iVar3 >> 1) + param_2) = var_14h;\n            } while (iVar4 < uVar1);\n        }\n        uVar2 = CONCAT31(uVar2 >> 8, 1);\n    }\n    else {\ncode_r0x0046ee27:\n        uVar2 = uVar2 & 0xffffff00;\n    }\n    return uVar2;\n}\n",
        "token_count": 334
    },
    "0046f05f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046f05f(uint32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t *in_ECX;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    in_ECX[1] = 0;\n    in_ECX[2] = 0;\n    piVar1 = arg_8h[4];\n    in_ECX[4] = piVar1;\n    if (piVar1 != NULL) {\n        *piVar1 = *piVar1 + 1;\n    }\n    in_ECX[2] = arg_8h[2];\n    in_ECX[3] = arg_8h[3];\n    uVar6 = *arg_8h;\n    *in_ECX = uVar6;\n    if (uVar6 != 0) {\n        uVar3 = -(uVar6 * 0x20 >> 0x20 != 0) | uVar6 * 0x20;\n        puVar2 = fcn.0041fd8b(-(0xfffffffb < uVar3) | uVar3 + 4);\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            *puVar2 = uVar6;\n            puVar2 = puVar2 + 1;\n            for (; uVar6 != 0; uVar6 = uVar6 - 1) {\n                fcn.0046f151();\n            }\n        }\n        iVar7 = 0;\n        in_ECX[1] = puVar2;\n        if (0 < *in_ECX) {\n            var_4h = 0;\n            do {\n                puVar4 = arg_8h[1] + var_4h;\n                puVar5 = in_ECX[1] + var_4h;\n                *puVar5 = *puVar4;\n                puVar5[1] = puVar4[1];\n                puVar5[2] = puVar4[2];\n                if (puVar5 + 3 != puVar4 + 3) {\n                    fcn.0040c1c3(puVar4 + 3);\n                }\n                iVar7 = iVar7 + 1;\n                puVar5[7] = puVar4[7];\n                var_4h = var_4h + 0x20;\n            } while (iVar7 < *in_ECX);\n        }\n    }\n    return;\n}\n",
        "token_count": 605
    },
    "0046f88f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046f88f(uint *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1[1] != 0) {\n        fcn.0046f1b8(param_1[1]);\n        param_1[1] = 0;\n    }\n    piVar1 = param_1[4];\n    if (piVar1 != NULL) {\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.0041fd4d(param_1[4]);\n            fcn.0041fd4d(param_1[2]);\n        }\n        param_1[4] = 0;\n    }\n    param_1[2] = 0;\n    *param_1 = 0;\n    param_1[3] = 0;\n    return;\n}\n",
        "token_count": 198
    },
    "0046ff72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046ff72(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    \n    *in_ECX = *arg_8h;\n    in_ECX[1] = arg_8h[1];\n    iVar1 = arg_8h[8];\n    in_ECX[8] = iVar1;\n    if (iVar1 != 0) {\n        *(iVar1 + 4) = *(iVar1 + 4) + 1;\n    }\n    iVar1 = arg_8h[9];\n    in_ECX[9] = iVar1;\n    if (iVar1 != 0) {\n        *(iVar1 + 4) = *(iVar1 + 4) + 1;\n    }\n    fcn.0047028f(0);\n    fcn.0047028f(0);\n    fcn.0047028f(0);\n    fcn.0047028f(0);\n    fcn.0047028f(0);\n    fcn.0047028f(0);\n    return;\n}\n",
        "token_count": 239
    },
    "004701d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004701d2(uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 0x18);\n    uVar1 = *(in_ECX + 0x10);\n    fcn.00470da3(*(in_ECX + 0x10));\n    uVar2 = fcn.00471db4(*(in_ECX + 0xc), *(in_ECX + 0x10));\n    fcn.00420db0(uVar2);\n    fcn.004222d0(*(in_ECX + 0xc), 0, *(in_ECX + 0x10));\n    *(in_ECX + 0x10) = 0;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 0x18);\n    return uVar1;\n}\n",
        "token_count": 210
    },
    "00470b9e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00470b9e(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t **in_ECX;\n    uint32_t uVar3;\n    \n    fcn.00408388();\n    piVar1 = *in_ECX;\n    fcn.0040c910();\n    uVar3 = 0;\n    *(*piVar1 + 0x210) = 0;\n    uVar2 = *(arg_8h + 8);\n    if (uVar2 != 0) {\n        fcn.004083e0(*in_ECX, 1);\n        if (uVar2 != 0) {\n            do {\n                fcn.00408a30(*in_ECX, *(*(arg_8h + 4) + uVar3 * 4), 1);\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "00470c77": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00470c77(uint16_t *param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint arg_10h;\n    \n    uVar1 = *param_1;\n    if (uVar1 != *param_2) {\n        return (uVar1 >> 8) << 8;\n    }\n    if ((uVar1 == 0) || (uVar1 == 1)) {\n        uVar3 = uVar1 & 0xff00 | 1;\n    }\n    else if ((uVar1 & 0x6000) == 0) {\n        if (uVar1 == 0xe) {\n            arg_10h = 0x10;\n        }\n        else {\n            arg_10h = 4;\n    // switch table (35 cases) at 0x470cf3\n            switch(uVar1) {\n            case 2:\n            case 10:\n            case 0xb:\n            case 0x12:\n                arg_10h = 2;\n                break;\n            case 5:\n            case 6:\n            case 7:\n            case 0x14:\n            case 0x15:\n            case 0x24:\n                arg_10h = 8;\n                break;\n            case 0x10:\n            case 0x11:\n                arg_10h = 1;\n            }\n            param_2 = param_2 + 4;\n            param_1 = param_1 + 4;\n        }\n        iVar2 = fcn.00421324(param_1, param_2, arg_10h);\n        uVar3 = -iVar2 & 0xffffff00U | 1 - (iVar2 != 0);\n    }\n    else {\n        uVar3 = *(param_1 + 4) & 0xffffff00 | *(param_1 + 4) == *(param_2 + 4);\n    }\n    return uVar3;\n}\n",
        "token_count": 450
    },
    "00470da3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00470da3(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **in_ECX;\n    uint unaff_ESI;\n    \n    fcn.0040e8a0();\n    piVar1 = fcn.0041fd5b(8, unaff_ESI);\n    *in_ECX = piVar1;\n    *piVar1 = arg_8h;\n    if (arg_8h == 0) {\n        iVar2 = fcn.0041fd8b(1);\n        (*in_ECX)[1] = iVar2;\n        *(*in_ECX)[1] = 0;\n    }\n    else {\n        iVar2 = fcn.0041fd8b(**in_ECX);\n        (*in_ECX)[1] = iVar2;\n        fcn.004222d0((*in_ECX)[1], 0, **in_ECX);\n    }\n    in_ECX[3] = 0xb;\n    return (*in_ECX)[1];\n}\n",
        "token_count": 240
    },
    "00470e85": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00470e85(uint64_t *param_1)\n\n{\n    char cVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t extraout_EDX;\n    uint unaff_EDI;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    iVar5 = *(param_1 + 0xc);\n    if (iVar5 == 0xb) {\n        return 1;\n    }\n    if (iVar5 == 1) {\ncode_r0x00470f90:\n        uVar3 = *param_1;\ncode_r0x00470f92:\n        iVar5 = 4;\n        _var_10h = _var_10h & 0xffffffff00000000 | uVar3;\n    }\n    else if (iVar5 == 2) {\n        _var_10h = *param_1;\n        iVar5 = 8;\n    }\n    else {\n        if (iVar5 != 3) {\n            if (iVar5 == 4) {\n                var_4h = *(param_1 + 1);\n                cVar1 = fcn.0040c566();\n                iVar5 = extraout_EDX;\n                if (cVar1 != '\\0') {\n                    iVar5 = *(extraout_EDX + 4) + -2 >> 1;\n                    puVar2 = fcn.0041fd8b(iVar5);\n                    cVar1 = fcn.0046edb8();\n                    if (cVar1 != '\\0') goto code_r0x00470fae;\n                    fcn.0041fd94(puVar2);\n                    iVar5 = var_4h;\n                }\n                iVar5 = *(iVar5 + 4);\n                if (iVar5 != 0) {\n                    puVar2 = fcn.0041fd8b(iVar5);\n                    fcn.0041f2b7(iVar5);\n                    fcn.0041f7a8();\n                    fcn.00420db0(puVar2, var_20h, iVar5);\n                    fcn.0040b1ff();\n                    goto code_r0x00470fae;\n                }\n            }\n            else {\n                if (iVar5 == 7) goto code_r0x00470f90;\n                if (iVar5 == 9) {\n                    iVar5 = 1;\n                    _var_10h = _var_10h & 0xffffffffffffff00 | *param_1;\n                    goto code_r0x00470f98;\n                }\n                if (iVar5 == 10) {\n                    uVar3 = *(*param_1 + 4);\n                    goto code_r0x00470f92;\n                }\n                fcn.0040e8a0();\n                iVar5 = 0;\n            }\n            puVar2 = fcn.0041fd8b(1);\n            *puVar2 = 0;\n            goto code_r0x00470fae;\n        }\n        _var_10h = *param_1;\n        iVar5 = 8;\n    }\ncode_r0x00470f98:\n    puVar2 = fcn.0041fd8b(iVar5);\n    fcn.00420db0(puVar2, &var_10h, iVar5);\ncode_r0x00470fae:\n    piVar4 = fcn.0041fd5b(8, unaff_EDI);\n    *param_1 = piVar4;\n    *piVar4 = iVar5;\n    *(*param_1 + 4) = puVar2;\n    if (*(param_1 + 1) != 0) {\n        fcn.0041d962(*(param_1 + 1));\n        *(param_1 + 1) = 0;\n    }\n    *(param_1 + 0xc) = 0xb;\n    return 1;\n}\n",
        "token_count": 878
    },
    "004710a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004710a5(uint16_t *pdblOut)\n\n{\n    int32_t *piVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t **in_ECX;\n    char **ppcVar6;\n    char **ppcVar7;\n    int32_t arg_8h;\n    int32_t iVar8;\n    uint uVar9;\n    uint var_34h;\n    int32_t var_2ch;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    char **var_ch;\n    int32_t var_8h;\n    \n    if ((*pdblOut & 0x2000) == 0) {\n        return 0;\n    }\n    ppcVar7 = *(pdblOut + 4);\n    if ((*pdblOut & 0x4000) != 0) {\n        ppcVar7 = *ppcVar7;\n    }\n    if (ppcVar7 == NULL) {\n        return 0;\n    }\n    var_ch = ppcVar7;\n    fcn.00408388();\n    piVar1 = *in_ECX;\n    fcn.0040c910();\n    *(*piVar1 + 0x210) = 0;\n    uVar3 = *ppcVar7;\n    pdblOut = uVar3;\n    if (0 < uVar3) {\n        ppcVar6 = ppcVar7 + 4;\n        do {\n            fcn.004084b9(*ppcVar6);\n            ppcVar6 = ppcVar6 + 2;\n            uVar3 = uVar3 - 1;\n            ppcVar7 = var_ch;\n        } while (uVar3 != 0);\n    }\n    fcn.004083e0(*in_ECX, 0);\n    piVar1 = *in_ECX;\n    uVar9 = 2;\n    fcn.0045f4b7(2);\n    var_10h = *(*piVar1 + 4);\n    arg_8h = *(*piVar1 + 8);\n    uVar2 = *(ppcVar7 + 2) & 0xf00;\n    if (uVar2 == 0x100) {\n        puVar5 = &var_20h;\n        iVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(ppcVar7);\n        iVar8 = var_10h;\n        if (iVar4 < 0) {\n            return 1;\n        }\n        iVar4 = 0;\n        if (0 < arg_8h) {\n            do {\n                puVar5 = fcn.0041fd5b(0x10, puVar5);\n                *puVar5 = 0;\n                puVar5[2] = 0;\n                puVar5[3] = 1;\n                *(iVar8 + iVar4 * 4) = puVar5;\n                var_34h._0_2_ = 8;\n                var_2ch = *(var_20h + iVar4 * 4);\n                puVar5 = &var_34h;\n                fcn.00470bfd(puVar5);\n                iVar4 = iVar4 + 1;\n                ppcVar7 = var_ch;\n            } while (iVar4 < arg_8h);\n        }\n        goto code_r0x004711c5;\n    }\n    if (uVar2 == 0x200) goto code_r0x00471339;\n    if (uVar2 == 0x400) {\n        puVar5 = &var_1ch;\n        iVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(ppcVar7);\n        iVar8 = var_10h;\n        if (iVar4 < 0) {\n            return 1;\n        }\n        iVar4 = 0;\n        if (0 < arg_8h) {\n            do {\n                puVar5 = fcn.0041fd5b(0x10, puVar5);\n                *puVar5 = 0;\n                puVar5[2] = 0;\n                puVar5[3] = 1;\n                *(iVar8 + iVar4 * 4) = puVar5;\n                var_34h._0_2_ = 9;\n                var_2ch = var_1ch + iVar4 * 4;\n                puVar5 = &var_34h;\n                fcn.00470bfd(puVar5);\n                iVar4 = iVar4 + 1;\n                ppcVar7 = var_ch;\n            } while (iVar4 < arg_8h);\n        }\n        goto code_r0x004711c5;\n    }\n    if (uVar2 == 0x800) {\n        puVar5 = &var_18h;\n        iVar8 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(ppcVar7);\n        if (iVar8 < 0) {\n            return 1;\n        }\n        iVar8 = 0;\n        if (0 < arg_8h) {\n            iVar4 = 0;\n            do {\n                puVar5 = fcn.0041fd5b(0x10, puVar5);\n                *puVar5 = 0;\n                puVar5[2] = 0;\n                puVar5[3] = 1;\n                *(var_10h + iVar8 * 4) = puVar5;\n                var_34h._0_2_ = 0x400c;\n                var_2ch = var_18h + iVar4;\n                puVar5 = &var_34h;\n                fcn.00470bfd(puVar5);\n                iVar8 = iVar8 + 1;\n                iVar4 = iVar4 + 0x10;\n                ppcVar7 = var_ch;\n            } while (iVar8 < arg_8h);\n        }\n        goto code_r0x004711c5;\n    }\n    if (-1 < *(ppcVar7 + 2)) goto code_r0x00471339;\n    (*_sym.imp.OLEAUT32.dll_VarR8FromUI1)(ppcVar7, &pdblOut);\n    if ((pdblOut & 0xffff) - 2 < 0x16) {\n    // switch table (22 cases) at 0x4713ad\n        switch(*(*((pdblOut & 0xffff) + 0x4713c3) * 4 + 0x4713ad)) {\n        case 0x47119d:\n            iVar8 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(ppcVar7, &var_8h);\n            if (-1 < iVar8) {\n                iVar8 = var_8h;\n                iVar4 = arg_8h;\n                uVar9 = fcn.00470da3(arg_8h);\n                fcn.00420db0(uVar9, arg_8h, iVar8, iVar4);\n                goto code_r0x004711c5;\n            }\n            goto code_r0x00471339;\n        case 0x4711d3:\n            iVar8 = 1;\n            break;\n        case 0x4711d8:\n            iVar8 = 2;\n            break;\n        case 0x4711dc:\n            iVar8 = 8;\n            break;\n        case 0x4711e0:\n            goto code_r0x004711e0;\n        case 0x4711ee:\ncode_r0x004711ee:\n            iVar8 = 4;\n        }\n        iVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(ppcVar7, &var_8h);\n        if (iVar4 < 0) {\n            return 1;\n        }\n        var_14h = 0;\n        if (0 < arg_8h) {\n            iVar4 = 0;\n            do {\n                puVar5 = fcn.0041fd5b(0x10, uVar9);\n                *puVar5 = 0;\n                puVar5[2] = 0;\n                puVar5[3] = 1;\n                *(var_10h + iVar4 * 4) = puVar5;\n                if ((pdblOut & 0x4000) == 0) {\n                    var_34h._0_2_ = pdblOut | 0x4000;\n                    var_2ch = var_8h;\n                }\n                else {\n                    var_34h._0_2_ = pdblOut;\n                    fcn.00420db0(&var_2ch, var_8h, iVar8);\n                }\n                fcn.00470bfd(&var_34h);\n                var_8h = var_8h + iVar8;\n                iVar4 = iVar4 + 1;\n                ppcVar7 = var_ch;\n            } while (iVar4 < arg_8h);\n        }\ncode_r0x004711c5:\n        (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(ppcVar7);\n        return 1;\n    }\ncode_r0x004711e0:\n    if ((pdblOut & 0x4000) == 0) {\ncode_r0x00471339:\n        fcn.0040e8a0();\n        return 0;\n    }\n    goto code_r0x004711ee;\n}\n",
        "token_count": 2125
    },
    "00471a18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ndouble * __cdecl fcn.00471a18(double *arg_8h, uint arg_ch)\n\n{\n    double dVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    float10 fVar6;\n    float10 fVar7;\n    ulong uVar8;\n    double dVar9;\n    uint var_4h;\n    \n    *arg_8h = 0;\n    *(arg_8h + 1) = 0;\n    *(arg_8h + 0xc) = 1;\n    uVar2 = fcn.00471d00();\n    uVar3 = fcn.00471d00();\n    if ((uVar2 & 0x40060) == 0) {\n        bVar5 = (uVar2 & 0x701f8) == 0;\n        if (bVar5 || (uVar3 & 0x40060) == 0) {\n            if ((uVar2 & 0x204) == 0 || (uVar3 & 0x701f8) == 0) {\n                if (!bVar5 && (uVar3 & 0x204) != 0) {\n                    if ((uVar3 & 0x200) == 0) {\n                        if ((uVar2 & 0x100000) == 0) {\n                            fcn.0040e8a0();\n                            *(arg_8h + 0xc) = 3;\n                            dVar9 = *0x4c81e0;\n                            if ((uVar2 & 0x10038) != 0) goto code_r0x00471bfd;\n                            goto code_r0x00471afa;\n                        }\n                        dVar9 = *0x4c8200;\n                        if ((uVar2 & 0x10000) != 0) {\n                            dVar9 = *0x4c81e8;\n                        }\n                    }\n                    else {\n                        dVar9 = *0x4c81e0;\n                        if ((uVar2 & 0x10038) != 0) {\n                            dVar9 = 0.0;\n                        }\n                    }\n                    fcn.0040e8a0();\n                    *(arg_8h + 0xc) = 3;\n                    goto code_r0x00471afa;\n                }\n                fVar6 = fcn.0040cfb5();\n                dVar9 = fVar6;\n                fVar6 = fcn.0040cfb5();\n                dVar1 = fVar6;\n                if ((uVar2 & 0xffff0000) == 0 || (uVar3 & 0x10038) == 0) {\n                    fVar6 = fcn.0042e170(dVar1, dVar9);\ncode_r0x00471c7b:\n                    fcn.0040e8a0();\n                    *arg_8h = fVar6;\n                    *(arg_8h + 0xc) = 3;\n                }\n                else {\n                    fVar6 = fcn.0042e0b3(SUB84(dVar1, 0), dVar1 >> 0x20);\n                    fVar6 = fcn.0042e170(fVar6, dVar9);\n                    fcn.0040e8a0();\n                    *(arg_8h + 0xc) = 3;\n                    *arg_8h = fVar6;\n                    if ((uVar2 & 0x100000) != 0) {\n                        fVar6 = fcn.0040cfb5();\n                        fVar6 = -fVar6;\n                        goto code_r0x00471c7b;\n                    }\n                }\n                uVar4 = fcn.00471d00();\n                if (((((uVar4 & 0xffff0000) != 0) && (uVar3 == 0)) && (uVar2 == 0)) &&\n                   ((fVar6 = fcn.0040cfb5(),  fVar6 < *0x4c81d8 &&\n                    (fVar6 = fcn.0040cfb5(),  ((fVar6 < *0x4c81f8) << 8 | (fVar6 == *0x4c81f8) << 0xe) == 0)))) {\n                    uVar8 = fcn.0040cc8f();\n                    fcn.0040e8a0();\n                    *(arg_8h + 0xc) = 2;\n                    *arg_8h = uVar8;\n                    *(arg_8h + 4) = uVar8 >> 0x20;\n                }\n                goto code_r0x00471cef;\n            }\n            fVar6 = fcn.0040cfb5();\n            fVar7 = fcn.0042e0b3(SUB84(fVar6, 0), fVar6 >> 0x20);\n            fVar6 = 1;\n            dVar9 = *0x4c81e0;\n            if (((fVar6 < fVar7) << 8 | (fVar6 == fVar7) << 0xe) == 0) {\n                if ((uVar2 & 0x200) != 0) {\ncode_r0x00471b3e:\n                    dVar9 = 0.0;\n                }\ncode_r0x00471b48:\n                fcn.0040e8a0();\n            }\n            else {\n                if (fVar6 < fVar7) {\n                    if ((uVar2 & 0x200) == 0) goto code_r0x00471b3e;\n                    goto code_r0x00471b48;\n                }\n                fcn.0040e8a0();\n                dVar9 = *0x4c8208;\n            }\n            *(arg_8h + 0xc) = 3;\n        }\n        else {\n            fcn.0040e8a0();\n            *(arg_8h + 0xc) = 3;\n            if ((uVar2 & 0x100000) == 0) {\n                dVar9 = *0x4c81e0;\n                if ((uVar2 & 0x10038) == 0) {\ncode_r0x00471bfd:\n                    dVar9 = 0.0;\n                }\n            }\n            else if ((uVar2 & 0x10000) == 0) {\n                *arg_8h = 0.0;\n                if ((uVar3 & 0x20) == 0) goto code_r0x00471cef;\n                fcn.0040e8a0();\n                dVar9 = *0x4c81e8;\n                *(arg_8h + 0xc) = 3;\n            }\n            else {\n                *arg_8h = *0x4c81e0;\n                if ((uVar3 & 0x20) == 0) goto code_r0x00471cef;\n                fcn.0040e8a0();\n                dVar9 = *0x4c8200;\n                *(arg_8h + 0xc) = 3;\n            }\n        }\n    }\n    else {\n        fcn.0040e8a0();\n        *(arg_8h + 0xc) = 3;\n        dVar9 = 1.0;\n    }\ncode_r0x00471afa:\n    *arg_8h = dVar9;\ncode_r0x00471cef:\n    fcn.0040e8a0();\n    return arg_8h;\n}\n",
        "token_count": 1683
    },
    "00471f24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encode data using XOR",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00471f24(uint param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = 1;\n    *0x4d2620 = param_1;\n    do {\n        uVar1 = *(iVar2 * 4 + 0x4d261c);\n        *(iVar2 * 4 + 0x4d2620) = (uVar1 >> 0x1e ^ uVar1) * 0x6c078965 + iVar2;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x270);\n    *0x4d06e0 = 1;\n    *0x4d2fe0 = 1;\n    return;\n}\n",
        "token_count": 172
    },
    "00472429": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00472429(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*0x4d2fe8 < 0x1001) {\n        *0x4d2fe8 = *0x4d2fe8 + 1;\n    }\n    else {\n        *0x4d2fe8 = 0;\n        if (*(param_1 + 0x454) != NULL) {\n            iVar1 = (**(param_1 + 0x454))(*(param_1 + 0xc), *(param_1 + 8), (*(param_1 + 8) * 100) / *(param_1 + 0x10));\n            if (iVar1 == 0) {\n                *(param_1 + 0x448) = 1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "004725b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004725b1(int32_t param_1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + 0x464);\n    if ((iVar2 == 0) || (iVar2 == 0x10000)) {\n        fcn.0042e854(*(param_1 + 0x45c), 1, 0x10000, *(param_1 + 0x1c));\n        iVar2 = 0;\n        *(param_1 + 0x464) = 0;\n    }\n    uVar1 = *(iVar2 + *(param_1 + 0x45c));\n    *(param_1 + 0x464) = iVar2 + 1;\n    return *(param_1 + 0x45c) & 0xffffff00 | uVar1;\n}\n",
        "token_count": 197
    },
    "004725f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004725f5(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(*(in_ECX + 0x458) + *(in_ECX + 0x460)) = arg_8h;\n    *(in_ECX + 0x460) = *(in_ECX + 0x460) + 1;\n    if (*(in_ECX + 0x460) == 0x10000) {\n        fcn.0042db43(*(in_ECX + 0x458), 1, 0x10000, *(in_ECX + 0x20));\n        *(in_ECX + 0x460) = 0;\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "00472642": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00472642(int32_t param_1)\n\n{\n    if (*(param_1 + 0x460) != 0) {\n        fcn.0042db43(*(param_1 + 0x458), 1, *(param_1 + 0x460), *(param_1 + 0x20));\n        *(param_1 + 0x460) = 0;\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "004726b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004726b0(uint32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint *in_ECX;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    \n    arg_8h = arg_8h & 0xffff;\n    iVar3 = 0x11;\n    puVar1 = in_ECX + 2;\n    puVar2 = puVar1;\n    do {\n        arg_8h = arg_8h * -0x53a9b4fb + 1;\n        *puVar2 = arg_8h;\n        puVar2 = puVar2 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    *in_ECX = 0;\n    in_ECX[1] = 10;\n    fcn.00420db0(in_ECX + 0x13, puVar1, 0x44);\n    fcn.00420db0(in_ECX + 0x24, puVar1, 0x44);\n    iVar3 = 9;\n    do {\n        fcn.00472718();\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    return;\n}\n",
        "token_count": 282
    },
    "00472718": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __fastcall fcn.00472718(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    double dVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar3 = fcn.0042e9a7(param_1[*param_1 + 2], 9);\n    iVar4 = fcn.0042e9a7(param_1[param_1[1] + 2], 0xd);\n    uVar5 = iVar3 + iVar4;\n    param_1[*param_1 + 2] = uVar5;\n    iVar3 = *param_1 + -1;\n    *param_1 = iVar3;\n    if (iVar3 < 0) {\n        *param_1 = 0x10;\n        iVar3 = 0x10;\n    }\n    piVar1 = param_1 + 1;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 < 0) {\n        param_1[1] = 0x10;\n    }\n    if ((param_1[iVar3 + 2] == param_1[0x13]) &&\n       (iVar3 = fcn.00421324(param_1 + 2, param_1 + (0x24 - iVar3), 0x44),  iVar3 == 0)) {\n        return 0;\n    }\n    if (param_1[0x35] == 0) {\n        var_8h = uVar5 * 0x100000;\n        var_4h = uVar5 >> 0xc | 0x3ff00000;\n    }\n    else {\n        if (param_1[0x35] != 1) {\n            dVar2 = uVar5;\n            if (uVar5 < 0) {\n                dVar2 = dVar2 + *0x4c81d0;\n            }\n            return dVar2 * *0x4c81a0;\n        }\n        var_4h = uVar5 * 0x100000;\n        var_8h = uVar5 >> 0xc | 0x3ff00000;\n    }\n    return CONCAT44(var_4h, var_8h) - *0x4c3400;\n}\n",
        "token_count": 534
    },
    "00472f6b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00472f6b(uint *param_1)\n\n{\n    uint var_160h;\n    uint var_80h;\n    uint var_44h;\n    uint var_3ch;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_14h;\n    \n    fcn.00406abf(*param_1, 0, 0);\n    fcn.00406a95(&var_80h, 0x40, 1, *param_1);\n    fcn.00406abf(*param_1, var_44h, 0);\n    fcn.00406abf(*param_1, 4, 1);\n    fcn.00406a95(&var_14h, 0x14, 1, *param_1);\n    fcn.00406a95(&var_160h, 0x60, 1, *param_1);\n    if (var_160h == 0x20b) {\n        fcn.00406abf(*param_1, 0x10, 1);\n    }\n    fcn.00406abf(*param_1, 0x80, 1);\n    fcn.00406abf(*param_1, var_14h._2_2_ * 0x28 + -0x28, 1);\n    fcn.00406a95(&var_3ch, 0x28, 1, *param_1);\n    fcn.00406abf(*param_1, var_2ch + var_28h, 0);\n    return;\n}\n",
        "token_count": 375
    },
    "0047372c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047372c(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    if ((arg_8h < 0) || (*(in_ECX + 0x454) <= arg_8h)) {\n        fcn.0040bfbf();\n        uVar2 = 0;\n    }\n    else {\n        puVar1 = fcn.00413220(arg_8h);\n        fcn.004084e7(*puVar1);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 144
    },
    "00473ac6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00473ac6(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint arg_8h;\n    uint unaff_EDI;\n    uint var_38h;\n    uint var_18h;\n    \n    fcn.0041fd5b(0x58, unaff_EDI);\n    puVar1 = fcn.00473101();\n    *puVar1 = *(param_1 + 0xf8);\n    fcn.0040c5e7(param_1 + 0x1d8);\n    if (puVar1 + 6 != param_1 + 0x1e8) {\n        fcn.0040c1c3(param_1 + 0x1e8);\n    }\n    puVar1[10] = *(param_1 + 0x98);\n    puVar1[0xb] = *(param_1 + 0x2e0);\n    puVar1[0xc] = **(param_1 + 0x1f8);\n    puVar1[0xd] = *(param_1 + 0x2e8);\n    if (puVar1 + 0xe != param_1 + 0x410) {\n        fcn.0040c1c3(param_1 + 0x410);\n    }\n    puVar1[0x12] = *(param_1 + 0x420);\n    puVar1[0x13] = *(param_1 + 0x424);\n    puVar1[0x14] = *(param_1 + 0x42c);\n    puVar1[0x15] = *(param_1 + 0xfc);\n    arg_8h = fcn.00403430();\n    fcn.004033b6(arg_8h);\n    fcn.0040e8a0();\n    fcn.0040e8a0();\n    return puVar1;\n}\n",
        "token_count": 428
    },
    "00474f5d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00474f5d(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = **(arg_8h + 4);\n    fcn.00408e90();\n    iVar1 = (*_sym.imp.MPR.dll_WNetCancelConnection2W)(**(iVar1 + 8), 1, 1);\n    if (iVar1 != 0) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        fcn.00407cb4(iVar1, 0);\n    }\n    (*_sym.imp.KERNEL32.dll_Sleep)(10);\n    return 0;\n}\n",
        "token_count": 164
    },
    "00475b25": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00475b25(uint arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    \n    fcn.00408e90();\n    cVar1 = fcn.0046d2c7();\n    if (cVar1 == '\\0') {\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00407cb4(arg_8h_00, 0);\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 148
    },
    "004783fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004783fd(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_18h;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    fcn.0040c25d();\n    uVar3 = fcn.0041fd8b(0x1fffe);\n    fcn.004070c2(uVar3);\n    fcn.00408e90();\n    fcn.0040592d();\n    iVar1 = *(*(arg_8h + 4) + 0xc);\n    fcn.00408e90();\n    uVar3 = **(iVar1 + 8);\n    iVar1 = *(*(arg_8h + 4) + 8);\n    fcn.00408e90();\n    uVar2 = **(iVar1 + 8);\n    iVar1 = *(*(arg_8h + 4) + 4);\n    fcn.00408e90();\n    (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)(**(iVar1 + 8), uVar2, uVar3, var_8h, 0xffff, var_18h);\n    fcn.0040b5c1(var_8h);\n    *var_4h = *var_4h + -1;\n    if (*var_4h == 0) {\n        uVar3 = 4;\n        fcn.0041fd4d(var_4h);\n        fcn.0041fd94(var_8h, var_4h, uVar3);\n    }\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 384
    },
    "0047a24c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047a24c(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    char cVar7;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(*(arg_8h + 4) + 8);\n    iVar2 = *(*(arg_8h + 4) + 0xc);\n    cVar7 = *(iVar1 + 0xc) == 4;\n    if (*(iVar2 + 0xc) == 4) {\n        cVar7 = cVar7 + '\\x02';\n    }\n    if (cVar7 == '\\0') {\n        uVar5 = fcn.0040ce67();\n        uVar6 = fcn.0040ce67();\n        uVar3 = fcn.0040ce67();\n        uVar4 = fcn.0040ce67();\n        uVar5 = fcn.0049465e(uVar4, uVar3, uVar6, uVar5);\n    }\n    else if (cVar7 == '\\x01') {\n        fcn.00408e90();\n        uVar5 = **(iVar1 + 8);\n        uVar6 = fcn.0040ce67();\n        uVar3 = fcn.0040ce67();\n        uVar4 = fcn.0040ce67();\n        uVar5 = fcn.0049465e(uVar4, uVar3, uVar5, uVar6);\n    }\n    else if (cVar7 == '\\x02') {\n        fcn.00408e90();\n        uVar5 = **(iVar2 + 8);\n        uVar6 = fcn.0040ce67();\n        uVar3 = fcn.0040ce67();\n        uVar4 = fcn.0040ce67();\n        uVar5 = fcn.0049465e(uVar4, uVar3, uVar6, uVar5);\n    }\n    else {\n        if (cVar7 != '\\x03') {\n            return 0;\n        }\n        fcn.00408e90();\n        uVar5 = **(iVar2 + 8);\n        iVar1 = *(*(arg_8h + 4) + 8);\n        fcn.00408e90();\n        uVar6 = **(iVar1 + 8);\n        uVar3 = fcn.0040ce67();\n        uVar4 = fcn.0040ce67();\n        uVar5 = fcn.0049465e(uVar4, uVar3, uVar6, uVar5);\n    }\n    fcn.0040e8a0();\n    *arg_ch = uVar5;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 646
    },
    "0047a404": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047a404(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    int32_t iVar1;\n    \n    arg_ch_00 = fcn.0040ce67();\n    arg_8h_00 = fcn.0040ce67();\n    iVar1 = fcn.00495009(arg_8h_00, arg_ch_00);\n    if (iVar1 < 0) {\n        fcn.00407cb4(-iVar1, 0);\n        iVar1 = 1;\n    }\n    fcn.0040e8a0();\n    *arg_ch = iVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 170
    },
    "0047a460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047a460(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    int32_t iVar1;\n    \n    arg_ch_00 = fcn.0040ce67();\n    arg_8h_00 = fcn.0040ce67();\n    iVar1 = fcn.004951f6(arg_8h_00, arg_ch_00);\n    if (iVar1 < 0) {\n        fcn.00407cb4(-iVar1, 0);\n        iVar1 = 1;\n    }\n    fcn.0040e8a0();\n    *arg_ch = iVar1;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 171
    },
    "0047bfce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047bfce(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t arg_8h_00;\n    uint32_t uVar5;\n    int32_t iVar6;\n    \n    iVar6 = 0;\n    arg_8h_00 = 0;\n    iVar3 = *(in_ECX + 8);\n    if (iVar3 != 0) {\n        piVar4 = *(in_ECX + 4);\n        do {\n            iVar1 = *piVar4;\n            piVar4 = piVar4 + 1;\n            arg_8h_00 = arg_8h_00 + *(iVar1 + 4);\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    iVar3 = fcn.00470da3(arg_8h_00);\n    uVar5 = 0;\n    if (*(in_ECX + 8) != 0) {\n        do {\n            puVar2 = *(*(in_ECX + 4) + uVar5 * 4);\n            fcn.00420db0(iVar6 + iVar3, *puVar2, puVar2[1]);\n            iVar6 = iVar6 + *(*(*(in_ECX + 4) + uVar5 * 4) + 4);\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < *(in_ECX + 8));\n    }\n    return;\n}\n",
        "token_count": 358
    },
    "0047c26e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047c26e(uint arg_8h)\n\n{\n    fcn.0047cf79();\n    return 0;\n}\n",
        "token_count": 34
    },
    "0047c528": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047c528(uint arg_8h)\n\n{\n    fcn.0047cf79();\n    return 0;\n}\n",
        "token_count": 33
    },
    "0047ccf5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0047ccf5(int16_t *arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    pcVar2 = _sym.imp.WININET.dll_InternetQueryOptionW;\n    uVar5 = 0;\n    uVar3 = *arg_8h - 1;\n    if (uVar3 != 0) {\n        uVar3 = *arg_8h - 2;\n        if (uVar3 == 0) {\n            uVar5 = 1;\n        }\n        else {\n            arg_8h = NULL;\n            uVar3 = (*_sym.imp.WININET.dll_InternetQueryOptionW)(0, 0x26, 0, &arg_8h);\n            if (arg_8h != NULL) {\n                iVar4 = fcn.0041fd8b(arg_8h);\n                fcn.004222d0(iVar4, 0, arg_8h);\n                (*pcVar2)(0, 0x26, iVar4, &arg_8h);\n                iVar1 = *(iVar4 + 4);\n                uVar3 = fcn.0041fd94(iVar4);\n                uVar5 = iVar1 != 0;\n            }\n        }\n    }\n    return uVar3 & 0xffffff00 | uVar5;\n}\n",
        "token_count": 324
    },
    "0047ce38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047ce38(uint arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint uVar4;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 1;\n    var_8h = 1;\n    (*_sym.imp.WININET.dll_InternetQueryDataAvailable)(arg_8h, &var_8h, 0, 0);\n    if (var_8h == 0) {\n        var_8h = 0x400;\n    }\n    do {\n        if (var_4h == 0) {\ncode_r0x0047cec3:\n            if ((*(in_ECX + 8) | *(in_ECX + 0xc)) == 0) {\n                *(in_ECX + 0x18) = 0x21;\ncode_r0x0047ced2:\n                uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                *(in_ECX + 0x1c) = uVar4;\n                if (*(in_ECX + 0xd4) != 0) {\n                    (*_sym.imp.KERNEL32.dll_SetEvent)(*(in_ECX + 0xd4));\n                }\n                uVar4 = 0;\n            }\n            else {\n                *(in_ECX + 0x18) = 0;\n                if (*(in_ECX + 0xd4) != 0) {\n                    (*_sym.imp.KERNEL32.dll_SetEvent)(*(in_ECX + 0xd4));\n                }\n                uVar4 = 1;\n            }\n            return uVar4;\n        }\n        if (var_8h == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.0041fd8b(var_8h);\n        }\n        iVar3 = (*_sym.imp.WININET.dll_InternetReadFile)(arg_8h, uVar4, var_8h, &var_4h);\n        if (iVar3 == 0) {\n            fcn.0041fd4d(uVar4);\n            *(in_ECX + 0x18) = 0x20;\n            goto code_r0x0047ced2;\n        }\n        if (var_4h == 0) {\n            fcn.0041fd4d(uVar4);\n            goto code_r0x0047cec3;\n        }\n        fcn.0047d19c(uVar4, var_4h);\n        puVar1 = in_ECX + 8;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 + var_4h;\n        *(in_ECX + 0xc) = *(in_ECX + 0xc) + CARRY4(uVar2, var_4h);\n    } while( true );\n}\n",
        "token_count": 656
    },
    "0047cf1f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047cf1f(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint *puVar3;\n    \n    uVar2 = -(*(arg_ch + 0x70) != 1) & 0xffffffcc;\n    iVar1 = *(uVar2 + 0x94 + in_ECX);\n    puVar3 = (-(*(arg_ch + 0x70) != 1) & 0xffffffcc) + 0xa0 + in_ECX;\n    if (iVar1 != 0) {\n        (*_sym.imp.WININET.dll_InternetSetOptionW)(arg_8h, 0x2b, *(uVar2 + 0x90 + in_ECX), iVar1 + 1);\n        (*_sym.imp.WININET.dll_InternetSetOptionW)(arg_8h, 0x2c, *puVar3, puVar3[1] + 1);\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "0047d225": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047d225(int32_t param_1)\n\n{\n    uint *arg_8h;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            iVar1 = *(param_1 + 4);\n            arg_8h = *(iVar1 + uVar2 * 4);\n            if (arg_8h != NULL) {\n                fcn.0041fd4d(*arg_8h);\n                fcn.0041fd4d(arg_8h);\n                iVar1 = *(param_1 + 4);\n            }\n            *(iVar1 + uVar2 * 4) = 0;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *(param_1 + 8));\n    }\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 215
    },
    "0047d30d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047d30d(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.0040cfb5();\n    fVar1 = fcn.0042f580(fVar1);\n    fcn.0040e8a0();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 101
    },
    "0047d34d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047d34d(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.0040cfb5();\n    fVar1 = fcn.0042f6d0(fVar1);\n    fcn.0040e8a0();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 103
    },
    "0047d76e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047d76e(uint arg_8h, double *arg_ch)\n\n{\n    uint uVar1;\n    float10 fVar2;\n    ulong uVar3;\n    uint var_10h;\n    double dStack12;\n    \n    fcn.0040cfb5();\n    fVar2 = fcn.0042fda0();\n    dStack12 = fVar2;\n    fcn.0040e8a0();\n    *arg_ch = dStack12;\n    *(arg_ch + 0xc) = 3;\n    uVar1 = 0;\n    uVar3 = fcn.0040cc8f();\n    uVar1 = fcn.0047e22d(&var_10h, uVar3, uVar3 >> 0x20, uVar1);\n    fcn.0040c5e7(uVar1);\n    fcn.0040e8a0();\n    return 0;\n}\n",
        "token_count": 212
    },
    "0047da59": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047da59(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.0040cfb5();\n    fVar1 = fcn.0042f280(SUB84(fVar1, 0), fVar1 >> 0x20);\n    fcn.0040e8a0();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 115
    },
    "0047da99": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047da99(uint arg_8h, double *arg_ch)\n\n{\n    uint uVar1;\n    float10 fVar2;\n    ulong uVar3;\n    uint var_10h;\n    double dStack12;\n    \n    fcn.0040cfb5();\n    fVar2 = fcn.0042fca0();\n    dStack12 = fVar2;\n    fcn.0040e8a0();\n    *arg_ch = dStack12;\n    *(arg_ch + 0xc) = 3;\n    uVar1 = 0;\n    uVar3 = fcn.0040cc8f();\n    uVar1 = fcn.0047e22d(&var_10h, uVar3, uVar3 >> 0x20, uVar1);\n    fcn.0040c5e7(uVar1);\n    fcn.0040e8a0();\n    return 0;\n}\n",
        "token_count": 211
    },
    "0047de18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047de18(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.0040cfb5();\n    fVar1 = fcn.0042f310(fVar1);\n    fcn.0040e8a0();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 100
    },
    "0047de58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047de58(int32_t arg_8h, double *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    float10 fVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    ulong uVar7;\n    double dVar8;\n    \n    if (((*(**(arg_8h + 4) + 0xc) == 1) && (*((*(arg_8h + 4))[1] + 0xc) == 1)) && (iVar2 = fcn.0040ce67(),  iVar2 != 0))\n    {\n        iVar2 = fcn.0040ce67();\n        iVar3 = fcn.0040ce67();\n        fcn.0040e8a0();\n        *(arg_ch + 0xc) = 1;\n        *arg_ch = iVar3 % iVar2;\n        return 0;\n    }\n    cVar1 = fcn.00401f20();\n    if (((cVar1 != '\\0') && (cVar1 = fcn.00401f20(),  cVar1 != '\\0')) && (iVar5 = fcn.0040cc8f(),  iVar5 != 0)) {\n        uVar6 = fcn.0040cc8f();\n        uVar7 = fcn.0040cc8f();\n        uVar6 = fcn.00441f20(uVar7, uVar6);\n        fcn.0040e8a0();\n        *(arg_ch + 0xc) = 2;\n        *arg_ch = uVar6;\n        *(arg_ch + 4) = uVar6 >> 0x20;\n        return 0;\n    }\n    fVar4 = fcn.0040cfb5();\n    dVar8 = fVar4;\n    fVar4 = fcn.0040cfb5();\n    fVar4 = fcn.0042fbb0(SUB84(fVar4, 0), fVar4 >> 0x20, SUB84(dVar8, 0), dVar8 >> 0x20);\n    fcn.0040e8a0();\n    *arg_ch = fVar4;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 509
    },
    "0047e188": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047e188(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.0040cfb5();\n    fVar1 = fcn.0042fbf4(fVar1);\n    fcn.0040e8a0();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 101
    },
    "0047e1ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047e1ed(uint arg_8h, double *arg_ch)\n\n{\n    float10 fVar1;\n    \n    fVar1 = fcn.0040cfb5();\n    fVar1 = fcn.0042f820(fVar1);\n    fcn.0040e8a0();\n    *arg_ch = fVar1;\n    *(arg_ch + 0xc) = 3;\n    return 0;\n}\n",
        "token_count": 101
    },
    "0047e452": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047e452(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char32_t *arg_8h_00;\n    uint32_t arg_14h_00;\n    uint var_a0h;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004025c1(arg_8h);\n    if (iVar1 != 0) {\n        var_ch = 0;\n        var_8h = 0;\n        var_4h = 0;\n        iVar2 = *(arg_ch + 8) - arg_14h;\n        if ((*(iVar1 + 0x18) <= iVar2) && (iVar2 <= *(iVar1 + 0x14))) {\n            if (arg_10h != arg_8h) {\n                fcn.0040c1c3(arg_8h);\n            }\n            fcn.004052b7(L\"()*+\\x000a0020\\x000a0020\\n\\x000a000a\");\n            arg_14h_00 = arg_14h;\n            if (arg_14h < *(arg_ch + 8)) {\n                do {\n                    fcn.004832ec(&var_a0h, 0x40, L\"AUTOITCALLVARIABLE%d\", arg_14h_00);\n                    fcn.0040b606(&var_a0h);\n                    fcn.0040c117(&var_20h, *(*(arg_ch + 4) + arg_14h_00 * 4), 0, 1);\n                    fcn.0040b1ff();\n                    arg_8h_00 = L\"$()*+\\x000a0020\\x000a0020\\n\\x000a000a\";\n                    if (arg_14h_00 != arg_14h) {\n                        arg_8h_00 = 0x4c6f30;\n                    }\n                    fcn.004052b7(arg_8h_00);\n                    fcn.004052b7(&var_a0h);\n                    arg_14h_00 = arg_14h_00 + 1;\n                } while (arg_14h_00 < *(arg_ch + 8));\n            }\n            fcn.004052b7(L\")*+\\x000a0020\\x000a0020\\n\\x000a000a\");\n            var_10h = 0x49d100;\n            fcn.00466f23();\n            fcn.0041fd94(var_ch);\n            return 1;\n        }\n        var_10h = 0x49d100;\n        fcn.00466f23();\n        fcn.0041fd94(var_ch);\n    }\n    return 0;\n}\n",
        "token_count": 649
    },
    "0047e8f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047e8f7(uint noname_0, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    int32_t *piVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0041fd8b(0x10000);\n    fcn.004070c2(uVar1);\n    (*_sym.imp.USER32.dll_GetWindowTextW)(*0x4d138c, in_ECX, 0x7fff);\n    fcn.0040b5c1(in_ECX);\n    *in_ECX = *in_ECX + -1;\n    if (*in_ECX == 0) {\n        uVar1 = 4;\n        piVar2 = in_ECX;\n        fcn.0041fd4d(in_ECX);\n        fcn.0041fd94(in_ECX, piVar2, uVar1);\n    }\n    return 0;\n}\n",
        "token_count": 220
    },
    "0047ee14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047ee14(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    ushort *var_8h;\n    int32_t *var_4h;\n    \n    uVar2 = fcn.0041fd8b(0x10000);\n    fcn.004070c2(uVar2);\n    *var_8h = 0;\n    iVar1 = **(arg_8h + 4);\n    fcn.00408e90();\n    (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)(**(iVar1 + 8), var_8h, 0x7fff);\n    fcn.00470b6e(&var_8h);\n    *var_4h = *var_4h + -1;\n    if (*var_4h == 0) {\n        uVar2 = 4;\n        fcn.0041fd4d(var_4h);\n        fcn.0041fd94(var_8h, var_4h, uVar2);\n    }\n    return 0;\n}\n",
        "token_count": 247
    },
    "0047fd35": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047fd35(uint noname_0, int32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch;\n    \n    pcVar1 = _sym.imp.USER32.dll_LoadCursorW;\n    iVar3 = 0;\n    var_54h = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f89);\n    var_50h = (*pcVar1)(0, 0x7f8a);\n    var_4ch = (*pcVar1)(0, 0x7f00);\n    var_48h = (*pcVar1)(0, 0x7f03);\n    var_44h = (*pcVar1)(0, 0x7f8b);\n    var_40h = (*pcVar1)(0, 0x7f01);\n    var_3ch = (*pcVar1)(0, 0x7f81);\n    var_38h = (*pcVar1)(0, 0x7f88);\n    var_34h = (*pcVar1)(0, 0x7f80);\n    var_30h = (*pcVar1)(0, 0x7f86);\n    var_2ch = (*pcVar1)(0, 0x7f83);\n    var_28h = (*pcVar1)(0, 0x7f85);\n    var_24h = (*pcVar1)(0, 0x7f82);\n    var_20h = (*pcVar1)(0, 0x7f84);\n    var_1ch = (*pcVar1)(0, 0x7f04);\n    var_18h = (*pcVar1)(0, 0x7f02);\n    var_14h = 0x14;\n    iVar2 = (*_sym.imp.USER32.dll_GetCursorInfo)(&var_14h);\n    if (iVar2 == 0) {\n        fcn.0040e8a0();\n        *arg_ch = -1;\n        arg_ch[3] = 1;\n        iVar2 = *(*in_ECX + 4);\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x14) = 1;\n        iVar3 = *(iVar2 + 8 + in_ECX);\n        if (*(iVar2 + 0xd + in_ECX) != '\\0') {\n            iVar3 = *(iVar3 + 0x38);\n        }\n        *(iVar3 + 0x18) = 0;\n        arg_8h = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00407cb4(arg_8h, 0);\n    }\n    else {\n        do {\n            if ((var_ch != 0) && (var_ch == (&var_54h)[iVar3])) break;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x10);\n        if (0xf < iVar3) {\n            iVar3 = -1;\n        }\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 892
    },
    "00480240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00480240(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint uVar5;\n    bool bVar6;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    int32_t *piStack28;\n    uchar auStack24 [20];\n    \n    iVar4 = **(arg_8h + 4);\n    bVar6 = *(iVar4 + 0xc) != 0xe;\n    if (bVar6) {\n        fcn.00408e90();\n        puVar3 = *(iVar4 + 8);\n        uVar5 = *puVar3;\n        uStack36 = puVar3[1];\n        uStack32 = puVar3[2];\n        piStack28 = puVar3[3];\n        puVar3 = &uStack40;\n        *piStack28 = *piStack28 + 1;\n        uStack40 = uVar5;\n    }\n    else {\n        puVar3 = fcn.00471037(auStack24);\n        uVar5 = *puVar3;\n    }\n    uVar1 = puVar3[1];\n    *puVar3[3] = *puVar3[3] + 1;\n    if (bVar6) {\n        fcn.0040b1ff();\n    }\n    else {\n        fcn.0040b1ff();\n    }\n    fcn.0040c7c9();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(uVar5, uVar1);\n    iVar4 = fcn.004025c1(&stack0xffffffbc);\n    if (iVar4 == 0) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        for (iVar4 = *(in_ECX + 0x130); iVar4 != 0; iVar4 = *(iVar4 + 4)) {\n            cVar2 = fcn.004082dc();\n            if (cVar2 != '\\0') {\n                fcn.00407cb4(1, 0);\n                goto code_r0x00480351;\n            }\n        }\n        fcn.00473b96(&stack0xffffffb8);\n    }\ncode_r0x00480351:\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 560
    },
    "004823e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "hash data with CRC32"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.004823e8(uint8_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint8_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    double dVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    \n    uVar6 = 0xffffffff;\n    puVar5 = arg_8h + arg_ch;\n    puVar2 = arg_8h + arg_10h * 4;\n    puVar7 = arg_8h;\n    do {\n        puVar1 = arg_8h + 1;\n        uVar6 = uVar6 >> 8 ^ *((uVar6 & 0xff ^ arg_8h[2]) * 4 + 0x4c3660);\n        uVar3 = *arg_8h;\n        arg_8h = arg_8h + arg_10h * arg_14h * 4;\n        uVar6 = uVar6 >> 8 ^ *((uVar6 & 0xff ^ *puVar1) * 4 + 0x4c3660);\n        uVar6 = uVar6 >> 8 ^ *((uVar6 & 0xff ^ uVar3) * 4 + 0x4c3660);\n        if (puVar5 <= arg_8h) {\n            arg_8h = puVar7 + arg_14h * 4;\n            puVar7 = arg_8h;\n        }\n    } while (puVar7 < puVar2);\n    dVar4 = ~uVar6;\n    if (-1 < uVar6) {\n        dVar4 = dVar4 + *0x4c81d0;\n    }\n    return dVar4;\n}\n",
        "token_count": 421
    },
    "00482483": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00482483(int32_t arg_8h, int32_t *arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    int32_t iVar7;\n    int32_t *piVar8;\n    uint var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint hgdiobj;\n    int32_t nWidth;\n    int32_t nHeight;\n    \n    var_24h = *arg_ch;\n    piVar8 = arg_ch + 2;\n    iVar6 = *piVar8;\n    var_14h = arg_ch[3];\n    var_18h = arg_ch[1];\n    if (iVar6 < var_24h) {\n        *arg_ch = iVar6;\n        *piVar8 = var_24h;\n    }\n    if (var_14h < var_18h) {\n        arg_ch[1] = var_14h;\n        arg_ch[3] = var_18h;\n    }\n    fcn.0047e40c(*(in_ECX + 0x10c), &var_34h, arg_8h);\n    var_1ch = arg_ch[1] + var_30h;\n    *arg_ch = *arg_ch + var_34h;\n    *piVar8 = *piVar8 + var_34h;\n    arg_ch[1] = var_1ch;\n    var_28h = arg_ch[3] + var_30h;\n    nWidth = (*piVar8 - *arg_ch) + 1;\n    arg_ch[3] = var_28h;\n    nHeight = (var_28h - var_1ch) + 1;\n    var_10h = (*_sym.imp.USER32.dll_GetDC)(0);\n    hgdiobj = (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(var_10h, nWidth, nHeight);\n    var_20h = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(var_10h);\n    var_2ch = (*_sym.imp.GDI32.dll_SelectObject)(var_20h, hgdiobj);\n    iVar3 = nHeight;\n    var_5ch = nWidth;\n    uVar2 = var_20h;\n    iVar4 = nHeight;\n    if (var_14h < var_18h) {\n        iVar4 = -nHeight;\n    }\n    if (iVar6 < var_24h) {\n        arg_8h = -nWidth;\n    }\n    else {\n        arg_8h = nWidth;\n    }\n    if (var_14h < var_18h) {\n        iVar7 = arg_ch[3];\n    }\n    else {\n        iVar7 = arg_ch[1];\n    }\n    if (var_24h <= iVar6) {\n        piVar8 = arg_ch;\n    }\n    var_18h = iVar4;\n    (*_sym.imp.GDI32.dll_StretchBlt)(var_20h, 0, 0, nWidth, nHeight, var_10h, *piVar8, iVar7, arg_8h, iVar4, 0xcc0020);\n    pcVar1 = _sym.imp.GDI32.dll_GetDIBits;\n    var_58h = (var_1ch - var_28h) + -1;\n    var_60h = 0x28;\n    var_54h._0_2_ = 1;\n    var_54h._2_2_ = 0x20;\n    var_50h = 0;\n    (*_sym.imp.GDI32.dll_GetDIBits)(uVar2, hgdiobj, 0, 0, 0, &var_60h, 0);\n    *arg_10h = var_4ch;\n    uVar5 = fcn.0041fd8b(var_4ch);\n    uVar2 = var_20h;\n    iVar6 = (*pcVar1)(var_20h, hgdiobj, 0, iVar3, uVar5, &var_60h, 0);\n    (*_sym.imp.GDI32.dll_SelectObject)(uVar2, var_2ch);\n    (*_sym.imp.GDI32.dll_DeleteObject)(hgdiobj);\n    (*_sym.imp.GDI32.dll_DeleteDC)(uVar2);\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, var_10h);\n    if (iVar6 == 0) {\n        fcn.0041fd94(uVar5);\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 1171
    },
    "00485bf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00485bf0(int32_t param_1, int32_t *param_2)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_4h;\n    \n    iVar5 = 0;\n    iVar2 = *(param_1 + 4);\n    iVar6 = *param_2;\n    if (*(*(iVar2 + iVar6 * 4) + 8) != 0x7f) {\n        piVar4 = iVar2 + 4 + iVar6 * 4;\n        do {\n            iVar1 = *(*(iVar2 + iVar6 * 4) + 8);\n            if (iVar1 == 0x47) {\ncode_r0x00485c33:\n                iVar5 = iVar5 + 1;\n            }\n            else if (iVar1 == 0x48) {\ncode_r0x00485c30:\n                iVar5 = iVar5 + -1;\n            }\n            else {\n                if (iVar1 == 0x4e) goto code_r0x00485c33;\n                if (iVar1 == 0x4f) goto code_r0x00485c30;\n            }\n            iVar6 = iVar6 + 1;\n            *param_2 = iVar6;\n            if ((iVar5 == 0) && (*(*piVar4 + 8) == 0x40)) {\n                return;\n            }\n            iVar3 = *piVar4;\n            piVar4 = piVar4 + 1;\n        } while (*(iVar3 + 8) != 0x7f);\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "00486fc3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00486fc3(int32_t param_1, int32_t *param_2, uint param_3)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    uint arg_8h;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    int32_t *piStack92;\n    int32_t aiStack88 [2];\n    uint *puStack80;\n    int32_t iStack76;\n    uint uStack72;\n    int32_t iStack68;\n    int32_t *apiStack56 [2];\n    ushort uStack48;\n    ushort uStack46;\n    uint32_t uStack44;\n    uint uStack40;\n    int32_t *piStack36;\n    uint uStack32;\n    int32_t iStack28;\n    int32_t *piStack24;\n    uchar uStack17;\n    \n    iVar4 = *(param_1 + 4);\n    iVar3 = *param_2 + 2;\n    uStack32 = 0x48;\n    *param_2 = iVar3;\n    if (*(*(iVar4 + iVar3 * 4) + 8) == 0x48) {\n        fcn.004734ba(0x70, *(*(iVar4 + -8 + iVar3 * 4) + 10));\n        return 0xffffffff;\n    }\n    fcn.004855b0(param_1);\n    iVar4 = *param_2;\n    iVar3 = 0;\n    uStack40 = 0;\n    piStack36 = 0x47;\n    do {\n        iVar1 = *(*(iStack68 + iVar4 * 4) + 8);\n        if (iVar1 == 0x47) {\n            iVar3 = iVar3 + 1;\n        }\n        else if (iVar1 == uStack32) {\n            iVar3 = iVar3 + -1;\n        }\n        else if ((iVar1 == 0x40) && (iVar3 == 0)) break;\n        if (iVar3 < 0) break;\n        iVar4 = iVar4 + 1;\n    } while( true );\n    aiStack88[0] = 0;\n    puStack80 = NULL;\n    iStack76 = 1;\n    iVar4 = fcn.00410540(&uStack72, param_2, aiStack88, iVar4);\n    if (iVar4 < 0) {\n        uStack40 = 0xffffffff;\n        goto code_r0x00487330;\n    }\n    iVar4 = *param_2;\n    if (*(*(iStack68 + iVar4 * 4) + 8) == 0x40) {\n        iVar4 = iVar4 + -1;\n    }\n    else {\n        iVar4 = iVar4 + -2;\n    }\n    *param_2 = iVar4;\n    fcn.0040bef7(0x47);\n    iStack28 = -1;\n    if (iStack76 == 0xd) {\n        uStack48 = 0xffff;\n        uStack46 = 0;\n        fcn.0040bef7(1);\n        if (iStack76 == 0xd) {\n            apiStack56[0] = *(aiStack88[0] + 0x10);\n        }\n        else {\n            apiStack56[0] = NULL;\n        }\n        fcn.004709ea(apiStack56);\n        iStack28 = fcn.00412c10(1, &uStack72, param_2, param_3);\n        fcn.0041d6ea();\n        iVar4 = iStack28;\ncode_r0x0048727d:\n        if (-1 < iVar4) goto code_r0x00487330;\n    }\n    else {\n        if (iStack76 == 0xe) {\n            fcn.0040bef7(0x34);\n            arg_8h = fcn.00471037(&uStack104);\n            fcn.0040bf6f(arg_8h);\n            fcn.0040b1ff();\n            iVar4 = fcn.0040d840(1, &uStack72, param_2, param_3, &uStack17);\n            goto code_r0x0048727d;\n        }\n        if (iStack76 == 4) {\n            fcn.00408e90();\n            uStack104 = *puStack80;\n            uStack100 = puStack80[1];\n            uStack96 = puStack80[2];\n            piStack92 = puStack80[3];\n            *piStack92 = *piStack92 + 1;\n            fcn.0040c7c9();\n            (*_sym.imp.USER32.dll_CharUpperBuffW)(uStack104, uStack100);\n            piStack36 = (**(**0x4d2394 + 4))(uStack104);\n            if (piStack36 < 1) {\n                fcn.00408e90();\n                iVar4 = fcn.004025c1(puStack80);\n                if (iVar4 != 0) {\n                    fcn.0040bef7(0x34);\n                    fcn.00408e90();\n                    fcn.0040bf6f(puStack80);\n                    iStack28 = fcn.0040d840(1, &uStack72, param_2, param_3, &uStack17);\n                }\n            }\n            else {\n                uStack48 = 0xffff;\n                uStack46 = 0;\n                fcn.0040bef7(1);\n                apiStack56[0] = piStack36;\n                fcn.004709ea(apiStack56);\n                iStack28 = fcn.00412c10(1, &uStack72, param_2, param_3);\n                fcn.0041d6ea();\n            }\n            fcn.0040b1ff();\n            iVar4 = iStack28;\n            goto code_r0x0048727d;\n        }\n    }\n    iVar4 = *param_2;\n    iStack28 = 0;\n    if (*(*(iStack68 + iVar4 * 4) + 8) != 0x7f) {\n        piStack36 = iStack68 + iVar4 * 4 + 4;\n        do {\n            iVar3 = *piStack36;\n            *param_2 = iVar4 + 1;\n            uVar2 = *(iVar3 + 8);\n            uStack44 = uVar2;\n            if (uVar2 == 0x47) {\n                iStack28 = iStack28 + 1;\n            }\n            else if ((uVar2 == uStack32) && (iStack28 = iStack28 + -1,  iStack28 < 1)) {\n                *param_2 = iVar4 + 2;\n                break;\n            }\n            piStack36 = piStack36 + 1;\n            iVar4 = iVar4 + 1;\n        } while (uVar2 != 0x7f);\n    }\n    iVar4 = *(*piStack24 + 4);\n    iVar3 = *(iVar4 + 8 + piStack24);\n    if (*(iVar4 + 0xd + piStack24) != '\\0') {\n        iVar3 = *(iVar3 + 0x38);\n    }\n    *(iVar3 + 0x14) = 0xdead;\n    iVar3 = *(iVar4 + 8 + piStack24);\n    if (*(iVar4 + 0xd + piStack24) != '\\0') {\n        iVar3 = *(iVar3 + 0x38);\n    }\n    *(iVar3 + 0x18) = 0;\n    fcn.00407cb4(0xbeef, 0);\ncode_r0x00487330:\n    fcn.0040e8a0();\n    uStack72 = 0x49d114;\n    fcn.00405fc0();\n    fcn.0041fd94(iStack68);\n    return uStack40;\n}\n",
        "token_count": 1765
    },
    "004873a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004873a5(int32_t param_1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    fcn.00424913(param_1, L\"3, 3, 16, 0\");\n    iVar4 = 0;\n    iVar3 = 0;\n    iVar2 = fcn.004248f3(param_1);\n    iVar5 = iVar4;\n    if (0 < iVar2) {\n        do {\n            iVar1 = *(param_1 + iVar3 * 2);\n            iVar4 = iVar5;\n            if (iVar1 != 0x20) {\n                iVar4 = iVar5 + 1;\n                if (iVar1 == 0x2c) {\n                    iVar1 = 0x2e;\n                }\n                *(param_1 + iVar5 * 2) = iVar1;\n            }\n            iVar3 = iVar3 + 1;\n            iVar2 = fcn.004248f3(param_1);\n            iVar5 = iVar4;\n        } while (iVar3 < iVar2);\n    }\n    *(param_1 + iVar4 * 2) = 0;\n    return;\n}\n",
        "token_count": 278
    },
    "00488444": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00488444(uint arg_8h, uint *arg_ch)\n\n{\n    int16_t *piVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint var_510h;\n    uint var_50ch;\n    uint var_508h;\n    uint var_4f0h;\n    uint var_4ech;\n    uint var_4e8h;\n    uint uStack1256;\n    char16_t cStack1252;\n    uint var_4deh;\n    uint uStack1246;\n    uint uStack1242;\n    uint uStack1238;\n    uint uStack1234;\n    ushort uStack1230;\n    uint var_4c8h;\n    uint var_4c4h;\n    uint var_4c0h;\n    uint var_4bch;\n    uint var_4b8h;\n    uint var_4a0h;\n    uint var_49ch;\n    uint var_498h;\n    uint uStack1176;\n    ushort uStack1172;\n    uint var_48eh;\n    uint uStack1166;\n    uint uStack1162;\n    uint uStack1158;\n    uint uStack1154;\n    ushort uStack1150;\n    uint var_478h;\n    uint var_474h;\n    uint var_470h;\n    uint uStack1136;\n    ushort uStack1132;\n    uint var_466h;\n    uint uStack1126;\n    uint uStack1122;\n    uint uStack1118;\n    uint uStack1114;\n    ushort uStack1110;\n    uint var_450h;\n    uint var_44ch;\n    uint var_448h;\n    uint uStack1096;\n    ushort uStack1092;\n    uint var_43eh;\n    uint uStack1086;\n    uint uStack1082;\n    uint uStack1078;\n    uint uStack1074;\n    ushort uStack1070;\n    uint var_428h;\n    uint var_424h;\n    uint var_420h;\n    uint uStack1056;\n    uint uStack1052;\n    uint var_414h;\n    uint uStack1044;\n    uint uStack1040;\n    uint uStack1036;\n    uint uStack1032;\n    uint var_400h;\n    uint var_3fch;\n    uint var_3f8h;\n    uint uStack1016;\n    uint uStack1012;\n    uint var_3ech;\n    uint uStack1004;\n    uint uStack1000;\n    uint uStack996;\n    uint uStack992;\n    uint var_3d8h;\n    uint var_3d4h;\n    uint var_3d0h;\n    uint uStack976;\n    uint uStack972;\n    uint var_3c4h;\n    uint uStack964;\n    uint uStack960;\n    uint uStack956;\n    uint uStack952;\n    uint var_3b0h;\n    uint var_3ach;\n    uint var_3a8h;\n    uint uStack936;\n    uint uStack932;\n    ushort uStack928;\n    uint var_39ah;\n    uint uStack922;\n    uint uStack918;\n    uint uStack914;\n    ushort uStack910;\n    uint var_388h;\n    uint var_384h;\n    uint var_380h;\n    uint uStack896;\n    ushort uStack892;\n    uint var_376h;\n    uint uStack886;\n    uint uStack882;\n    uint uStack878;\n    uint uStack874;\n    ushort uStack870;\n    uint var_360h;\n    uint var_35ch;\n    uint var_358h;\n    uint uStack856;\n    ushort uStack852;\n    uint var_34eh;\n    uint uStack846;\n    uint uStack842;\n    uint uStack838;\n    uint uStack834;\n    ushort uStack830;\n    uint var_338h;\n    uint var_334h;\n    uint var_330h;\n    uint uStack816;\n    uint uStack812;\n    uint var_324h;\n    uint uStack804;\n    uint uStack800;\n    uint uStack796;\n    uint uStack792;\n    uint var_310h;\n    uint var_30ch;\n    uint var_308h;\n    uint uStack776;\n    uint uStack772;\n    uint uStack768;\n    uint var_2f8h;\n    uint uStack760;\n    uint uStack756;\n    uint uStack752;\n    uint var_2e8h;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint uStack736;\n    uint uStack732;\n    uint var_2d4h;\n    uint uStack724;\n    uint uStack720;\n    uint uStack716;\n    uint uStack712;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint uStack696;\n    uint uStack692;\n    char16_t cStack688;\n    uint var_2aah;\n    uint uStack682;\n    uint uStack678;\n    uint uStack674;\n    ushort uStack670;\n    uint var_298h;\n    uint var_294h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_270h;\n    uint var_26ch;\n    uint var_268h;\n    uint uStack616;\n    char16_t cStack612;\n    uint var_25eh;\n    uint uStack606;\n    uint uStack602;\n    uint uStack598;\n    uint uStack594;\n    ushort uStack590;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint uStack576;\n    uint uStack572;\n    char16_t cStack568;\n    uint var_232h;\n    uint uStack562;\n    uint uStack558;\n    uint uStack554;\n    ushort uStack550;\n    uint var_220h;\n    uint var_21ch;\n    uint var_218h;\n    uint uStack536;\n    uint uStack532;\n    uint uStack528;\n    uint var_208h;\n    uint uStack520;\n    uint uStack516;\n    uint uStack512;\n    uint var_1f8h;\n    uint var_1f4h;\n    uint var_1f0h;\n    uint uStack496;\n    uint uStack492;\n    ushort uStack488;\n    uint var_1e2h;\n    uint uStack482;\n    uint uStack478;\n    uint uStack474;\n    ushort uStack470;\n    uint var_1d0h;\n    uint var_1cch;\n    uint var_1c8h;\n    uint uStack456;\n    uint uStack452;\n    ushort uStack448;\n    uint var_1bah;\n    uint uStack442;\n    uint uStack438;\n    uint uStack434;\n    ushort uStack430;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint uStack416;\n    uint uStack412;\n    uint var_194h;\n    uint uStack404;\n    uint uStack400;\n    uint uStack396;\n    uint uStack392;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint uStack376;\n    uint uStack372;\n    ushort uStack368;\n    uint var_16ah;\n    uint uStack362;\n    uint uStack358;\n    uint uStack354;\n    ushort uStack350;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint var_140h;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    ushort uStack284;\n    uint var_116h;\n    uint uStack278;\n    uint uStack274;\n    ushort uStack270;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    ushort uStack244;\n    uint var_eeh;\n    uint uStack238;\n    uint uStack234;\n    ushort uStack230;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_c4h;\n    uint uStack196;\n    uint uStack192;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_9ch;\n    uint uStack156;\n    uint uStack152;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_74h;\n    uint uStack116;\n    uint uStack112;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint uStack96;\n    uint uStack92;\n    ushort uStack88;\n    uint var_52h;\n    uint uStack82;\n    uint uStack78;\n    uint uStack74;\n    ushort uStack70;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    \n    var_510h = *0x4c615c;\n    var_50ch = *0x4c6160;\n    iVar5 = 6;\n    puVar2 = &var_508h;\n    for (iVar4 = iVar5; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    var_4f0h = 6;\n    var_4ech = 4;\n    var_4e8h = str.wstr._0_4_;\n    uStack1256 = str.wstr._4_4_;\n    cStack1252 = str.wstr[4];\n    var_4deh = 0;\n    uStack1246 = 0;\n    uStack1242 = 0;\n    uStack1238 = 0;\n    uStack1234 = 0;\n    uStack1230 = 0;\n    var_4c0h = *0x4c60fc;\n    var_4bch = *0x4c6100;\n    var_4c4h = 4;\n    var_4c8h = 7;\n    puVar2 = &var_4b8h;\n    for (; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    var_4a0h = 4;\n    var_49ch = 4;\n    var_498h = *0x4c6098;\n    uStack1176 = *0x4c609c;\n    uStack1172 = *0x4c60a0;\n    var_48eh = 0;\n    uStack1166 = 0;\n    uStack1162 = 0;\n    uStack1158 = 0;\n    uStack1154 = 0;\n    uStack1150 = 0;\n    var_478h = 4;\n    var_474h = 4;\n    var_470h = *0x4c60e4;\n    uStack1136 = *0x4c60e8;\n    uStack1132 = *0x4c60ec;\n    var_466h = 0;\n    uStack1126 = 0;\n    uStack1122 = 0;\n    uStack1118 = 0;\n    uStack1114 = 0;\n    uStack1110 = 0;\n    var_450h = 5;\n    var_44ch = 4;\n    var_448h = *0x4c60f0;\n    uStack1096 = *0x4c60f4;\n    uStack1092 = *0x4c60f8;\n    var_43eh = 0;\n    uStack1086 = 0;\n    uStack1082 = 0;\n    uStack1078 = 0;\n    uStack1074 = 0;\n    uStack1070 = 0;\n    var_428h = 4;\n    var_424h = 4;\n    var_420h = *0x4c60d8;\n    uStack1056 = *0x4c60dc;\n    uStack1052 = *0x4c60e0;\n    var_414h = 0;\n    uStack1044 = 0;\n    uStack1040 = 0;\n    uStack1036 = 0;\n    uStack1032 = 0;\n    var_400h = 5;\n    var_3fch = 4;\n    var_3f8h = *0x4c60cc;\n    uStack1016 = *0x4c60d0;\n    uStack1012 = *0x4c60d4;\n    var_3ech = 0;\n    uStack1004 = 0;\n    uStack1000 = 0;\n    uStack996 = 0;\n    uStack992 = 0;\n    var_3d8h = 5;\n    var_3d4h = 4;\n    var_3d0h = str.short._0_4_;\n    uStack976 = str.short._4_4_;\n    uStack972 = str.short._8_4_;\n    var_3c4h = 0;\n    uStack964 = 0;\n    uStack960 = 0;\n    uStack956 = 0;\n    uStack952 = 0;\n    var_3b0h = 2;\n    var_3ach = 4;\n    var_3a8h = *0x4c60b0;\n    uStack936 = *0x4c60b4;\n    uStack932 = *0x4c60b8;\n    uStack928 = *0x4c60bc;\n    var_39ah = 0;\n    uStack922 = 0;\n    uStack918 = 0;\n    uStack914 = 0;\n    uStack910 = 0;\n    var_388h = 3;\n    var_384h = 4;\n    var_380h = *0x4c60c0;\n    uStack896 = *0x4c60c4;\n    uStack892 = *0x4c60c8;\n    var_376h = 0;\n    uStack886 = 0;\n    uStack882 = 0;\n    uStack878 = 0;\n    uStack874 = 0;\n    uStack870 = 0;\n    var_360h = 3;\n    var_35ch = 4;\n    var_358h = *0x4c607c;\n    uStack856 = *0x4c6080;\n    uStack852 = *0x4c6084;\n    var_34eh = 0;\n    uStack846 = 0;\n    uStack842 = 0;\n    uStack838 = 0;\n    uStack834 = 0;\n    uStack830 = 0;\n    var_334h = 4;\n    var_338h = 1;\n    var_330h = *0x4c76c0;\n    uStack816 = *0x4c76c4;\n    uStack812 = *0x4c76c8;\n    var_324h = 0;\n    uStack804 = 0;\n    uStack800 = 0;\n    uStack796 = 0;\n    uStack792 = 0;\n    var_30ch = 4;\n    var_310h = 1;\n    var_308h = *0x4c6088;\n    uStack776 = *0x4c608c;\n    uStack772 = *0x4c6090;\n    uStack768 = *0x4c6094;\n    var_2f8h = 0;\n    uStack760 = 0;\n    uStack756 = 0;\n    uStack752 = 0;\n    var_2e4h = 4;\n    var_2e8h = 1;\n    var_2e0h = str.float._0_4_;\n    uStack736 = str.float._4_4_;\n    uStack732 = str.float._8_4_;\n    var_2d4h = 0;\n    uStack724 = 0;\n    uStack720 = 0;\n    uStack716 = 0;\n    uStack712 = 0;\n    var_2bch = 4;\n    var_2c0h = 9;\n    var_2b8h = str.double._0_4_;\n    uStack696 = str.double._4_4_;\n    uStack692 = str.double._8_4_;\n    cStack688 = str.double[6];\n    var_2aah = 0;\n    uStack682 = 0;\n    uStack678 = 0;\n    uStack674 = 0;\n    uStack670 = 0;\n    var_290h = *0x4c617c;\n    var_298h = 10;\n    var_294h = 8;\n    var_28ch = *0x4c6180;\n    puVar2 = &var_288h;\n    for (iVar4 = 6; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    var_270h = 8;\n    var_26ch = 4;\n    var_268h = str.hwnd._0_4_;\n    uStack616 = str.hwnd._4_4_;\n    cStack612 = str.hwnd[4];\n    var_25eh = 0;\n    uStack606 = 0;\n    uStack602 = 0;\n    uStack598 = 0;\n    uStack594 = 0;\n    uStack590 = 0;\n    var_248h = 8;\n    var_244h = 4;\n    var_240h = str.handle._0_4_;\n    uStack576 = str.handle._4_4_;\n    uStack572 = str.handle._8_4_;\n    cStack568 = str.handle[6];\n    var_232h = 0;\n    uStack562 = 0;\n    uStack558 = 0;\n    uStack554 = 0;\n    uStack550 = 0;\n    var_220h = 8;\n    var_21ch = 4;\n    var_218h = *0x4c61c4;\n    uStack536 = *0x4c61c8;\n    uStack532 = *0x4c61cc;\n    uStack528 = *0x4c61d0;\n    var_208h = 0;\n    uStack520 = 0;\n    uStack516 = 0;\n    uStack512 = 0;\n    var_1f8h = 0xb;\n    var_1f4h = 4;\n    var_1f0h = *0x4c61d4;\n    uStack496 = *0x4c61d8;\n    uStack492 = *0x4c61dc;\n    uStack488 = *0x4c61e0;\n    var_1e2h = 0;\n    uStack482 = 0;\n    uStack478 = 0;\n    uStack474 = 0;\n    uStack470 = 0;\n    var_1d0h = 0xb;\n    var_1cch = 4;\n    var_1c8h = *0x4c6220;\n    uStack456 = *0x4c6224;\n    uStack452 = *0x4c6228;\n    uStack448 = *0x4c622c;\n    var_1bah = 0;\n    uStack442 = 0;\n    uStack438 = 0;\n    uStack434 = 0;\n    uStack430 = 0;\n    var_1a4h = 4;\n    var_1a8h = 0xc;\n    var_1a0h = *0x4c6114;\n    uStack416 = *0x4c6118;\n    uStack412 = *0x4c611c;\n    var_194h = 0;\n    uStack404 = 0;\n    uStack400 = 0;\n    uStack396 = 0;\n    uStack392 = 0;\n    var_180h = 0xd;\n    var_17ch = 8;\n    var_178h = *0x4c6120;\n    uStack376 = *0x4c6124;\n    uStack372 = *0x4c6128;\n    uStack368 = *0x4c612c;\n    var_16ah = 0;\n    uStack362 = 0;\n    uStack358 = 0;\n    uStack354 = 0;\n    uStack350 = 0;\n    var_158h = 0xe;\n    var_154h = 8;\n    var_150h = str.int_ptr._0_4_;\n    uStack336 = str.int_ptr._4_4_;\n    uStack332 = str.int_ptr._8_4_;\n    uStack328 = str.int_ptr._12_4_;\n    var_140h = 0;\n    uStack320 = 0;\n    uStack316 = 0;\n    uStack312 = 0;\n    var_130h = 0xb;\n    var_12ch = 4;\n    var_128h = *0x4c61e4;\n    uStack296 = *0x4c61e8;\n    uStack292 = *0x4c61ec;\n    uStack288 = *0x4c61f0;\n    uStack284 = *0x4c61f4;\n    var_116h = 0;\n    uStack278 = 0;\n    uStack274 = 0;\n    uStack270 = 0;\n    var_108h = 0xc;\n    var_104h = 4;\n    var_100h = *0x4c61b0;\n    uStack256 = *0x4c61b4;\n    uStack252 = *0x4c61b8;\n    uStack248 = *0x4c61bc;\n    uStack244 = *0x4c61c0;\n    var_eeh = 0;\n    uStack238 = 0;\n    uStack234 = 0;\n    uStack230 = 0;\n    var_e0h = 0xb;\n    var_dch = 4;\n    puVar2 = 0x4c61f8;\n    puVar7 = &var_d8h;\n    for (iVar4 = 5; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar7 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    var_c4h = 0;\n    uStack196 = 0;\n    uStack192 = 0;\n    var_b8h = 0xc;\n    var_b4h = 4;\n    puVar2 = 0x4c620c;\n    puVar7 = &var_b0h;\n    for (iVar4 = 5; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar7 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    var_9ch = 0;\n    uStack156 = 0;\n    uStack152 = 0;\n    var_90h = 0xc;\n    var_8ch = 4;\n    puVar2 = L\"idispatch\";\n    puVar7 = &var_88h;\n    for (iVar4 = 5; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar7 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    var_74h = 0;\n    uStack116 = 0;\n    uStack112 = 0;\n    var_68h = 0xf;\n    var_64h = 4;\n    var_60h = *0x4c6254;\n    uStack96 = *0x4c6258;\n    uStack92 = *0x4c625c;\n    uStack88 = *0x4c6260;\n    var_52h = 0;\n    uStack82 = 0;\n    uStack78 = 0;\n    uStack74 = 0;\n    uStack70 = 0;\n    var_40h = 0x10;\n    var_3ch = 4;\n    iVar5 = 0;\n    puVar2 = &var_38h;\n    for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    var_18h = 0;\n    var_14h = 0;\n    fcn.0040c25d();\n    arg_ch[2] = 4;\n    arg_ch[3] = 0;\n    *arg_ch = 0;\n    arg_ch[1] = 0;\n    arg_ch[5] = 0;\n    while ((piVar1 = fcn.0040660f(iVar5),  *piVar1 != 0 && (piVar1 = fcn.0040660f(iVar5),  *piVar1 != 0x3b))) {\n        iVar5 = iVar5 + 1;\n    }\n    uVar6 = 1;\n    if (iVar5 != 0) {\n        fcn.004086ac(arg_8h, 0, iVar5);\n        piVar1 = fcn.0040660f(iVar5);\n        if (*piVar1 == 0x3b) {\n            iVar5 = iVar5 + 1;\n        }\n        fcn.0040ad22(0, iVar5);\n        if (var_ch == 0) {\ncode_r0x00488a2e:\n            arg_ch[3] = 0;\n        }\n        else {\n            piVar1 = fcn.0040660f(var_ch + -1);\n            if (*piVar1 != 0x2a) goto code_r0x00488a2e;\n            arg_ch[3] = 1;\n            fcn.0040ad22(var_ch + -1, 1);\n        }\n        puVar2 = &var_510h;\n        iVar4 = 0;\n        do {\n            if (*puVar2 == 0) goto code_r0x00488a8d;\n            iVar5 = fcn.004249b8(puVar2, var_10h);\n            if (iVar5 == 0) {\n                arg_ch[2] = (&var_4f0h)[iVar4 * 10];\n                if (arg_ch[3] == 1) {\n                    arg_ch[4] = 4;\n                }\n                else {\n                    arg_ch[4] = (&var_4ech)[iVar4 * 10];\n                }\n                break;\n            }\n            puVar2 = puVar2 + 10;\n            iVar4 = iVar4 + 1;\n        } while (-1 < iVar4);\n        if (-1 < iVar4) goto code_r0x00488a91;\n    }\ncode_r0x00488a8d:\n    uVar6 = 0;\ncode_r0x00488a91:\n    uVar3 = fcn.0040b1ff();\n    return uVar3 & 0xffffff00 | uVar6;\n}\n",
        "token_count": 6310
    },
    "00488bfa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00488bfa(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    char16_t cVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    uint16_t *puVar10;\n    char16_t *pcVar11;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    uVar9 = 0;\n    *(arg_ch + 4) = 0;\n    fcn.0040c7c9();\n    (*_sym.imp.USER32.dll_CharLowerBuffW)(*arg_8h, arg_8h[1]);\n    uVar5 = fcn.00468daa(0x4c7698, 1, 1, 0xffffffff, 0xffffffff, 0xffffffff);\n    if ((uVar5 != 0) && (uVar5 < arg_8h[1])) {\n        fcn.0040c25d();\n        fcn.004086ac(arg_8h, uVar5 + 1, (arg_8h[1] - uVar5) + -1);\n        fcn.0040ad22(uVar5, 0xffffffff);\n        puVar10 = 0x4c6064;\n        iVar6 = fcn.004248f3(0x4c6064);\n        if (var_10h == iVar6) {\n            if (var_10h != 0) {\n                iVar6 = var_10h;\n                do {\n                    uVar1 = *puVar10;\n                    var_4h = uVar1;\n                    uVar2 = *(var_14h + -0x4c6064 + puVar10);\n                    if (uVar2 != uVar1) {\n                        iVar6 = (-(uVar2 < uVar1) & 0xfffffffe) + 1;\n                        goto code_r0x00488ca7;\n                    }\n                    puVar10 = puVar10 + 1;\n                    iVar6 = iVar6 + -1;\n                } while (iVar6 != 0);\n            }\n            iVar6 = 0;\ncode_r0x00488ca7:\n            if (iVar6 != 0) goto code_r0x00488cbd;\n            uVar7 = 1;\n        }\n        else {\ncode_r0x00488cbd:\n            puVar10 = 0x4c769c;\n            iVar6 = fcn.004248f3(0x4c769c);\n            if (var_10h == iVar6) {\n                if (var_10h != 0) {\n                    iVar6 = var_10h;\n                    do {\n                        uVar1 = *puVar10;\n                        var_4h = uVar1;\n                        uVar2 = *(var_14h + -0x4c769c + puVar10);\n                        if (uVar2 != uVar1) {\n                            iVar6 = (-(uVar2 < uVar1) & 0xfffffffe) + 1;\n                            goto code_r0x00488cf9;\n                        }\n                        puVar10 = puVar10 + 1;\n                        iVar6 = iVar6 + -1;\n                    } while (iVar6 != 0);\n                }\n                iVar6 = 0;\ncode_r0x00488cf9:\n                if (iVar6 != 0) goto code_r0x00488cfd;\n            }\n            else {\ncode_r0x00488cfd:\n                pcVar11 = L\"stdcall\";\n                iVar6 = fcn.004248f3(L\"stdcall\");\n                if (var_10h != iVar6) {\ncode_r0x00488df7:\n                    uVar5 = fcn.0040b1ff();\n                    return uVar5 & 0xffffff00;\n                }\n                if (var_10h != 0) {\n                    do {\n                        cVar3 = *(var_14h + -0x4c76b0 + pcVar11);\n                        if (cVar3 != *pcVar11) {\n                            iVar6 = (-(cVar3 < *pcVar11) & 0xfffffffe) + 1;\n                            goto code_r0x00488d3d;\n                        }\n                        pcVar11 = pcVar11 + 1;\n                        var_10h = var_10h + -1;\n                    } while (var_10h != 0);\n                }\n                iVar6 = 0;\ncode_r0x00488d3d:\n                if (iVar6 != 0) goto code_r0x00488df7;\n            }\n            uVar7 = 0;\n        }\n        *(arg_ch + 4) = uVar7;\n        fcn.0040b1ff();\n    }\n    *(arg_ch + 0x10) = 1;\n    var_14h = *arg_8h;\n    var_10h = arg_8h[1];\n    var_ch = arg_8h[2];\n    var_8h = arg_8h[3];\n    *var_8h = *var_8h + 1;\n    cVar4 = fcn.00488444(&var_14h, arg_ch + 0x18);\n    if (cVar4 == '\\0') {\n        iVar6 = arg_8h[1];\n        pcVar11 = L\"none\";\n        iVar8 = fcn.004248f3(L\"none\");\n        if (iVar6 != iVar8) goto code_r0x00488dcc;\n        if (iVar6 != 0) {\n            do {\n                cVar3 = *(*arg_8h + -0x4c6070 + pcVar11);\n                if (cVar3 != *pcVar11) {\n                    iVar6 = (-(cVar3 < *pcVar11) & 0xfffffffe) + 1;\n                    goto code_r0x00488dc0;\n                }\n                pcVar11 = pcVar11 + 1;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n        }\n        iVar6 = 0;\ncode_r0x00488dc0:\n        if (iVar6 != 0) goto code_r0x00488dcc;\n        *(arg_ch + 0x10) = 0;\n    }\n    uVar9 = 1;\ncode_r0x00488dcc:\n    uVar5 = fcn.0040b1ff();\n    return uVar5 & 0xffffff00 | uVar9;\n}\n",
        "token_count": 1491
    },
    "004893ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004893ee(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_10h;\n    \n    iVar2 = fcn.004025c1(arg_8h);\n    if ((iVar2 == 0) || (*(iVar2 + 0x18) != *(iVar2 + 0x14))) {\ncode_r0x004894a9:\n        uVar4 = 0;\n    }\n    else {\n        fcn.00406aff(arg_8h);\n        iVar3 = fcn.004041dc(*(iVar2 + 0x10));\n        iVar6 = 0;\n        if (0 < *(iVar2 + 0x14)) {\n            iVar5 = (*(iVar2 + 0x20) != '\\0') * 4 + 0xc;\n            do {\n                fcn.0040c25d();\n                if (iVar6 != 0) {\n                    if (*(*(*(iVar3 + 4) + iVar5) + 8) == 0x40) {\n                        iVar5 = iVar5 + 4;\n                        goto code_r0x00489462;\n                    }\ncode_r0x004894a1:\n                    fcn.0040b1ff();\n                    goto code_r0x004894a9;\n                }\ncode_r0x00489462:\n                piVar1 = *(iVar5 + *(iVar3 + 4));\n                if (*(piVar1 + 2) != 0x33) goto code_r0x004894a1;\n                if (&var_10h != *piVar1) {\n                    fcn.0040c1c3(*piVar1);\n                }\n                fcn.00406aff(&var_10h);\n                iVar5 = iVar5 + 4;\n                fcn.0040b1ff();\n                iVar6 = iVar6 + 1;\n            } while (iVar6 < *(iVar2 + 0x14));\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 480
    },
    "0048a5a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0048a5a3(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *arg_8h_00;\n    int32_t iVar2;\n    uint arg_8h_01;\n    int32_t **ppiVar3;\n    double *pdVar4;\n    uchar *arg_8h_02;\n    int32_t **ppiStack684;\n    ulong uStack680;\n    uchar *puStack652;\n    int32_t *piStack648;\n    uchar auStack620 [8];\n    uchar auStack612 [36];\n    int32_t *apiStack576 [2];\n    uint uStack568;\n    uchar auStack548 [544];\n    \n    uStack680 = 9.881312916824931e-324;\n    uStack568 = 0x22c;\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)();\n    ppiStack684 = apiStack576;\n    (*_sym.imp.KERNEL32.dll_Process32FirstW)();\n    do {\n        fcn.0040c25d();\n        fcn.0040c25d();\n        arg_8h_02 = auStack548;\n        fcn.0040b606(arg_8h_02);\n        fcn.00406bff(0, &uStack680 + 4, auStack620);\n        fcn.0040b1ff();\n        fcn.00407cf8(auStack620);\n        if (*(arg_8h + 8) == 0) {\ncode_r0x0048a66a:\n            *arg_8h_00 = *arg_8h_00 + 1;\n            fcn.0048b49b(&stack0xfffffd68);\n            fcn.0040b1ff();\n            puStack652 = arg_8h_02;\n            piStack648 = arg_8h_00;\n        }\n        else {\n            iVar2 = **(arg_8h + 4);\n            fcn.00408e90();\n            puVar1 = *(iVar2 + 8);\n            iVar2 = fcn.0041d5dc(uStack680, uStack680._4_4_, *puVar1, puVar1[1], 0);\n            if (iVar2 == 0) goto code_r0x0048a66a;\n        }\n        fcn.0040b1ff();\n        fcn.0040b1ff();\n        iVar2 = (*_sym.imp.KERNEL32.dll_Process32NextW)(arg_8h_00, auStack612);\n        if (iVar2 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            arg_8h_01 = fcn.00407d93();\n            fcn.004083e0(arg_8h_01, 2);\n            ppiVar3 = fcn.00411df0(arg_8h_01, 2, 2);\n            fcn.0040e8a0();\n            *ppiVar3 = piStack648;\n            ppiVar3[3] = 0x1;\n            if (piStack648 != NULL) {\n                uStack680 = uStack680 & 0xffffffff00000000 | ZEXT48(puStack652);\n                do {\n                    fcn.00411df0(arg_8h_01, 2, 2);\n                    fcn.00407c5d(arg_8h_00);\n                    uStack680 = **ppiStack684;\n                    if (**ppiStack684 < 0) {\n                        uStack680 = uStack680 + *0x4c81d0;\n                    }\n                    pdVar4 = fcn.00411df0(arg_8h_01, 2, 2);\n                    fcn.0040e8a0();\n                    *pdVar4 = uStack680;\n                    *(pdVar4 + 0xc) = 3;\n                    ppiStack684 = ppiStack684 + 1;\n                    piStack648 = piStack648 + -1;\n                } while (piStack648 != NULL);\n            }\n            fcn.0048b420();\n            fcn.0041fd94(puStack652);\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 952
    },
    "0048a993": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "open process"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048a993(uint32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint *puVar4;\n    uint var_4h;\n    \n    cVar1 = fcn.0048aea5(arg_8h, *(arg_8h + 8));\n    puVar4 = arg_ch;\n    if (cVar1 == '\\0') {\n        fcn.0040e8a0();\n    }\n    else {\n        arg_8h = arg_8h & 0xffffff;\n        cVar1 = fcn.0046d3fa(&arg_8h + 3);\n        puVar4 = arg_ch;\n        if (cVar1 != '\\0') {\n            if (arg_8h._3_1_ != '\\0') {\n                iVar3 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x100400, 0, in_ECX);\n                in_ECX[0x10b] = iVar3;\n                arg_8h = 1;\n                fcn.00403310(&arg_8h);\n                in_ECX[0x3f] = 9;\n                fcn.0040f060(0);\n                iVar3 = *(*(*in_ECX + 4) + 8 + in_ECX);\n                if (*(*(*in_ECX + 4) + 0xd + in_ECX) != '\\0') {\n                    iVar3 = *(iVar3 + 0x38);\n                }\n                fcn.0040c5e7(iVar3);\n                return 0;\n            }\n            fcn.00407cb4(0xcccccccc, 0);\n            return 0;\n        }\n        fcn.0040e8a0();\n    }\n    *puVar4 = 0;\n    puVar4[3] = 1;\n    iVar3 = *(*in_ECX + 4);\n    iVar2 = *(iVar3 + 8 + in_ECX);\n    if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n        iVar2 = *(iVar2 + 0x38);\n    }\n    *(iVar2 + 0x14) = 1;\n    iVar2 = *(iVar3 + 8 + in_ECX);\n    if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n        iVar2 = *(iVar2 + 0x38);\n    }\n    *(iVar2 + 0x18) = 0;\n    return 0;\n}\n",
        "token_count": 575
    },
    "0048c8bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0048c8bf(code **arg_8h, uint *arg_ch, int32_t lpsz, uint32_t cchLength)\n\n{\n    uint16_t uVar1;\n    char16_t cVar2;\n    bool bVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint16_t *puVar6;\n    uint32_t uVar7;\n    code *pcVar8;\n    uint32_t uVar9;\n    char16_t *pcVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_4h;\n    \n    fcn.0040c7c9();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n    uVar9 = 0;\n    *arg_ch = 0;\n    uVar11 = 2;\n    if (cchLength < 2) {\n        uVar11 = cchLength;\n    }\n    fcn.0040c25d();\n    fcn.004086ac(&lpsz, cchLength - uVar11, uVar11);\n    iVar5 = fcn.004248f3(0x4c76cc);\n    if (var_10h == iVar5) {\n        puVar6 = 0x4c76cc;\n        if (var_10h != 0) {\n            do {\n                uVar1 = *(var_14h + -0x4c76cc + puVar6);\n                if (uVar1 != *puVar6) {\n                    iVar5 = (-(uVar1 < *puVar6) & 0xfffffffe) + 1;\n                    goto code_r0x0048c947;\n                }\n                puVar6 = puVar6 + 1;\n                var_10h = var_10h + -1;\n            } while (var_10h != 0);\n        }\n        iVar5 = 0;\ncode_r0x0048c947:\n        bVar3 = true;\n        if (iVar5 != 0) goto code_r0x0048c94f;\n    }\n    else {\ncode_r0x0048c94f:\n        bVar3 = false;\n    }\n    fcn.0040b1ff();\n    if (bVar3) {\n        fcn.0040562b(0x4c76cc);\n        if ((*0x4d13da != '\\0') || (*0x4d13dc == 0)) {\n            *arg_ch = 0x100;\n        }\n    }\n    uVar11 = cchLength;\n    pcVar10 = L\"HKEY_LOCAL_MACHINE\";\n    uVar7 = fcn.004248f3(L\"HKEY_LOCAL_MACHINE\");\n    uVar12 = cchLength;\n    if (uVar11 == uVar7) {\n        if (uVar11 != 0) {\n            do {\n                cVar2 = *(lpsz + -0x4c76e0 + pcVar10);\n                if (cVar2 != *pcVar10) {\n                    iVar5 = (-(cVar2 < *pcVar10) & 0xfffffffe) + 1;\n                    goto code_r0x0048c9b8;\n                }\n                pcVar10 = pcVar10 + 1;\n                uVar11 = uVar11 - 1;\n            } while (uVar11 != 0);\n        }\n        iVar5 = 0;\ncode_r0x0048c9b8:\n        if (iVar5 != 0) goto code_r0x0048c9bc;\ncode_r0x0048c9f2:\n        pcVar8 = reloc.WSOCK32.dll_bind;\n    }\n    else {\ncode_r0x0048c9bc:\n        pcVar10 = L\"HKLM\";\n        uVar7 = fcn.004248f3(L\"HKLM\");\n        uVar11 = cchLength;\n        if (uVar12 == uVar7) {\n            if (uVar12 != 0) {\n                do {\n                    cVar2 = *(lpsz + -0x4c7708 + pcVar10);\n                    if (cVar2 != *pcVar10) {\n                        iVar5 = (-(cVar2 < *pcVar10) & 0xfffffffe) + 1;\n                        goto code_r0x0048c9ee;\n                    }\n                    pcVar10 = pcVar10 + 1;\n                    uVar12 = uVar12 - 1;\n                } while (uVar12 != 0);\n            }\n            iVar5 = 0;\ncode_r0x0048c9ee:\n            if (iVar5 == 0) goto code_r0x0048c9f2;\n        }\n        pcVar10 = L\"HKEY_CLASSES_ROOT\";\n        uVar7 = fcn.004248f3(L\"HKEY_CLASSES_ROOT\");\n        uVar12 = cchLength;\n        if (uVar11 == uVar7) {\n            if (uVar11 != 0) {\n                do {\n                    cVar2 = *(lpsz + -0x4c7720 + pcVar10);\n                    if (cVar2 != *pcVar10) {\n                        iVar5 = (-(cVar2 < *pcVar10) & 0xfffffffe) + 1;\n                        goto code_r0x0048ca49;\n                    }\n                    pcVar10 = pcVar10 + 1;\n                    uVar11 = uVar11 - 1;\n                } while (uVar11 != 0);\n            }\n            iVar5 = 0;\ncode_r0x0048ca49:\n            if (iVar5 != 0) goto code_r0x0048ca4d;\ncode_r0x0048ca83:\n            pcVar8 = 0x80000000;\n        }\n        else {\ncode_r0x0048ca4d:\n            pcVar10 = L\"HKCR\";\n            uVar7 = fcn.004248f3(L\"HKCR\");\n            uVar11 = cchLength;\n            if (uVar12 == uVar7) {\n                if (uVar12 != 0) {\n                    do {\n                        cVar2 = *(lpsz + -0x4c7744 + pcVar10);\n                        if (cVar2 != *pcVar10) {\n                            iVar5 = (-(cVar2 < *pcVar10) & 0xfffffffe) + 1;\n                            goto code_r0x0048ca7f;\n                        }\n                        pcVar10 = pcVar10 + 1;\n                        uVar12 = uVar12 - 1;\n                    } while (uVar12 != 0);\n                }\n                iVar5 = 0;\ncode_r0x0048ca7f:\n                if (iVar5 == 0) goto code_r0x0048ca83;\n            }\n            pcVar10 = L\"HKEY_CURRENT_CONFIG\";\n            uVar12 = fcn.004248f3(L\"HKEY_CURRENT_CONFIG\");\n            if (uVar11 == uVar12) {\n                if (uVar11 != 0) {\n                    do {\n                        cVar2 = *(lpsz + -0x4c7750 + pcVar10);\n                        if (cVar2 != *pcVar10) {\n                            iVar5 = (-(cVar2 < *pcVar10) & 0xfffffffe) + 1;\n                            goto code_r0x0048cacf;\n                        }\n                        pcVar10 = pcVar10 + 1;\n                        uVar11 = uVar11 - 1;\n                    } while (uVar11 != 0);\n                }\n                iVar5 = 0;\ncode_r0x0048cacf:\n                if (iVar5 != 0) goto code_r0x0048cad3;\n            }\n            else {\ncode_r0x0048cad3:\n                cVar4 = fcn.00403536();\n                if (cVar4 == '\\0') {\n                    cVar4 = fcn.00403536();\n                    if (cVar4 == '\\0') {\n                        cVar4 = fcn.00403536();\n                        if (cVar4 == '\\0') {\n                            cVar4 = fcn.00403536();\n                            if (cVar4 == '\\0') {\n                                cVar4 = fcn.00403536();\n                                if (cVar4 == '\\0') goto code_r0x0048cb4a;\n                            }\n                            pcVar8 = 0x80000003;\n                            goto code_r0x0048cb43;\n                        }\n                    }\n                    pcVar8 = 0x80000001;\n                    goto code_r0x0048cb43;\n                }\n            }\n            pcVar8 = 0x80000005;\n        }\n    }\ncode_r0x0048cb43:\n    uVar9 = 1;\n    *arg_8h = pcVar8;\ncode_r0x0048cb4a:\n    uVar11 = fcn.0040b1ff();\n    return uVar11 & 0xffffff00 | uVar9;\n}\n",
        "token_count": 1989
    },
    "0048dca2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048dca2(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.00408e90();\n    puVar3 = **(iVar2 + 8);\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    uVar1 = *puVar3;\n    if (uVar1 != 0) {\n        do {\n            iVar2 = fcn.0042632e(uVar1);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            puVar3 = puVar3 + 1;\n            uVar1 = *puVar3;\n        } while (uVar1 != 0);\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 242
    },
    "0048dd06": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048dd06(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.00408e90();\n    piVar3 = **(iVar2 + 8);\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iVar1 = *piVar3;\n    if (iVar1 != 0) {\n        do {\n            iVar2 = (*_sym.imp.USER32.dll_IsCharAlphaNumericW)(iVar1);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            piVar3 = piVar3 + 1;\n            iVar1 = *piVar3;\n        } while (iVar1 != 0);\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 241
    },
    "0048dd6a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048dd6a(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.00408e90();\n    piVar3 = **(iVar2 + 8);\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iVar1 = *piVar3;\n    if (iVar1 != 0) {\n        do {\n            iVar2 = (*_sym.imp.USER32.dll_IsCharAlphaW)(iVar1);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            piVar3 = piVar3 + 1;\n            iVar1 = *piVar3;\n        } while (iVar1 != 0);\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 241
    },
    "0048ddce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048ddce(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.00408e90();\n    puVar3 = **(iVar2 + 8);\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    uVar1 = *puVar3;\n    if (uVar1 != 0) {\n        do {\n            iVar2 = fcn.00426342(uVar1);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            puVar3 = puVar3 + 1;\n            uVar1 = *puVar3;\n        } while (uVar1 != 0);\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 240
    },
    "0048de92": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048de92(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.00408e90();\n    piVar3 = **(iVar2 + 8);\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iVar1 = *piVar3;\n    if (iVar1 != 0) {\n        do {\n            iVar2 = (*_sym.imp.USER32.dll_IsCharLowerW)(iVar1);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            piVar3 = piVar3 + 1;\n            iVar1 = *piVar3;\n        } while (iVar1 != 0);\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 240
    },
    "0048df5f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048df5f(int32_t arg_8h, uint *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *piVar3;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.00408e90();\n    piVar3 = **(iVar2 + 8);\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    iVar1 = *piVar3;\n    if (iVar1 != 0) {\n        do {\n            iVar2 = (*_sym.imp.USER32.dll_IsCharUpperW)(iVar1);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            piVar3 = piVar3 + 1;\n            iVar1 = *piVar3;\n        } while (iVar1 != 0);\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 241
    },
    "0048dfc3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048dfc3(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.00408e90();\n    puVar3 = **(iVar2 + 8);\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\n    uVar1 = *puVar3;\n    if (uVar1 != 0) {\n        do {\n            iVar2 = fcn.00426368(uVar1);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            puVar3 = puVar3 + 1;\n            uVar1 = *puVar3;\n        } while (uVar1 != 0);\n        fcn.0040e8a0();\n        arg_ch[3] = 1;\n        *arg_ch = 1;\n    }\n    return 0;\n}\n",
        "token_count": 241
    },
    "0048ebf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048ebf4(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint16_t *arg_8h_00;\n    int32_t iVar4;\n    \n    fcn.00408e90();\n    iVar4 = 1;\n    arg_8h_00 = **(arg_8h + 8);\n    if ((((arg_8h_00 == NULL) || (*arg_8h_00 == 0)) || (iVar2 = fcn.004251c2(arg_8h_00, 0x4c63dc),  iVar2 == 0)) ||\n       (iVar2 = fcn.004251c2(arg_8h_00, 0x49cfbc),  iVar2 == 0)) {\ncode_r0x0048ec39:\n        uVar3 = 0;\n    }\n    else {\n        while (*arg_8h_00 != 0) {\n            if (iVar4 == 1) {\n                uVar1 = *arg_8h_00;\n                if ((uVar1 == 0x2b) || (uVar1 == 0x2d)) {\n                    arg_8h_00 = arg_8h_00 + 1;\n                }\n                else if ((uVar1 < 0x30) || (0x39 < uVar1)) goto code_r0x0048ec39;\n                iVar4 = 2;\n            }\n            else if (iVar4 == 2) {\n                iVar2 = fcn.00428f9b(*arg_8h_00);\n                if (iVar2 == 0) goto code_r0x0048ec39;\n                arg_8h_00 = arg_8h_00 + 1;\n            }\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 425
    },
    "0048ec8b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048ec8b(uint *param_1)\n\n{\n    ushort uVar1;\n    ushort *puVar2;\n    ushort *puVar3;\n    \n    if (param_1[1] != 0) {\n        puVar2 = *param_1;\n        puVar3 = puVar2 + param_1[1] + -1;\n        for (; puVar2 < puVar3; puVar2 = puVar2 + 1) {\n            uVar1 = *puVar2;\n            *puVar2 = *puVar3;\n            *puVar3 = uVar1;\n            puVar3 = puVar3 + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "0049160d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0049160d(uint noname_0, uint *arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    int32_t var_24h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetForegroundWindow;\n    uVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    var_4h = uVar2;\n    fcn.00463985();\n    iVar3 = (*_sym.imp.USER32.dll_GetCaretPos)(&var_ch);\n    if (iVar3 == 0) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n        iVar3 = *(*in_ECX + 4);\n        iVar4 = *(iVar3 + 8 + in_ECX);\n        if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 1;\n        iVar4 = *(iVar3 + 8 + in_ECX);\n        if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x18) = 0;\n    }\n    else {\n        (*_sym.imp.USER32.dll_ClientToScreen)(uVar2, &var_ch);\n        uVar2 = (*pcVar1)();\n        fcn.0047e40c(in_ECX[0x44], &var_14h, uVar2);\n        var_ch = var_ch - var_14h;\n        var_8h = var_8h - var_10h;\n        uVar2 = fcn.00407d93();\n        fcn.004083e0(uVar2, 1);\n        var_24h = var_ch;\n        var_1ch = 0;\n        var_18h = 1;\n        fcn.00408a30(uVar2, &var_24h, 1);\n        fcn.0040e8a0();\n        var_24h = var_8h;\n        var_1ch = 0;\n        var_18h = 1;\n        fcn.00408a30(uVar2, &var_24h, 1);\n        fcn.0040e8a0();\n    }\n    fcn.00463985();\n    return 0;\n}\n",
        "token_count": 624
    },
    "00492b17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00492b17(uint arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t arg_8h_00;\n    uint *puVar1;\n    char cVar2;\n    uint arg_8h_01;\n    uint *puVar3;\n    uint *arg_8h_02;\n    uint unaff_EDI;\n    uint arg_10h_00;\n    uint arg_14h_00;\n    uint arg_18h_00;\n    uint *var_4h;\n    \n    puVar1 = arg_ch;\n    arg_8h_00 = arg_ch[0x71];\n    if (0 < arg_8h_00) {\n        arg_ch[0x71] = 0;\n        puVar3 = arg_ch;\n        arg_10h_00 = arg_10h;\n        arg_14h_00 = arg_14h;\n        arg_18h_00 = arg_18h;\n        arg_8h_01 = fcn.00428f54(arg_8h_00);\n        fcn.00492b17(arg_8h_01, puVar3, arg_10h_00, arg_14h_00, arg_18h_00);\n    }\n    cVar2 = fcn.0040c4db(arg_8h, &var_4h, &arg_ch);\n    if (cVar2 != '\\0') {\n        puVar3 = fcn.0041fd5b(0x24, unaff_EDI);\n        fcn.0040c25d();\n        arg_8h_02 = **(*0x4d1924 + arg_ch * 4) + 0x14;\n        var_4h = puVar3;\n        if (puVar3 + 1 != arg_8h_02) {\n            fcn.0040c1c3(arg_8h_02);\n        }\n        *puVar3 = arg_8h;\n        puVar3[5] = *puVar1;\n        puVar3[6] = arg_10h;\n        puVar3[7] = arg_14h;\n        puVar3[8] = arg_18h;\n        fcn.004985b0(&var_4h);\n    }\n    return;\n}\n",
        "token_count": 524
    },
    "00492bc6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00492bc6(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    uint unaff_EDI;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    piVar1 = fcn.0041fd5b(0x24, unaff_EDI);\n    fcn.0040c25d();\n    var_4h = piVar1;\n    if (piVar1 + 1 != arg_ch + arg_8h * 4 + 0x57) {\n        fcn.0040c1c3(arg_ch + arg_8h * 4 + 0x57);\n    }\n    *piVar1 = arg_8h;\n    piVar1[5] = *arg_ch;\n    piVar1[6] = 0;\n    piVar1[7] = arg_10h;\n    piVar1[8] = arg_14h;\n    fcn.004985b0(&var_4h);\n    return;\n}\n",
        "token_count": 253
    },
    "00494fad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00494fad(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uint var_8h;\n    int32_t var_4h;\n    \n    cVar1 = fcn.0040c4db(arg_8h, &var_8h, &var_4h);\n    if ((cVar1 == '\\0') || (*(**(*0x4d1924 + var_4h * 4) + 0x90) != '\\x15')) {\n        uVar2 = 0;\n    }\n    else {\n        fcn.0040c5e7(&arg_ch);\n        uVar2 = fcn.00497d90(arg_8h, 0);\n    }\n    fcn.0040e8a0();\n    return uVar2;\n}\n",
        "token_count": 188
    },
    "00496105": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00496105(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint var_8h;\n    int32_t var_4h;\n    \n    cVar1 = fcn.0040c4db(arg_8h, &var_8h, &var_4h);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        if (**(*0x4d1924 + var_4h * 4) + 0x14 != arg_ch) {\n            fcn.0040c1c3(arg_ch);\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 167
    },
    "0049766b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0049766b(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t arg_10h_00;\n    \n    uVar1 = fcn.00431506(*arg_ch, arg_10h);\n    if (uVar1 == 0) {\n        uVar2 = fcn.004248f3(*arg_ch);\n        arg_10h_00 = uVar2;\n    }\n    else {\n        uVar2 = uVar1;\n        arg_10h_00 = uVar1 - *arg_ch >> 1;\n    }\n    if (arg_10h_00 < 0xfff) {\n        fcn.0042d27b(arg_8h, *arg_ch, arg_10h_00);\n        *(arg_8h + arg_10h_00 * 2) = 0;\n        if (uVar1 != 0) {\n            arg_10h_00 = arg_10h_00 + 1;\n        }\n        uVar2 = arg_10h_00 * 2;\n        *arg_ch = *arg_ch + uVar2;\n        if (arg_10h_00 != 0) {\n            return CONCAT31(uVar2 >> 8, 1);\n        }\n    }\n    return uVar2 & 0xffffff00;\n}\n",
        "token_count": 321
    },
    "00498064": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00498064(uint lpCommandLine)\n\n{\n    int32_t iVar1;\n    \n    fcn.004222d0(0x4d3008, 0, 0x44);\n    fcn.004222d0(0x4d304c, 0, 0x10);\n    *0x4d3008 = 0x44;\n    *0x4d3034 = 1;\n    *0x4d3038 = 1;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessW)(0, lpCommandLine, 0, 0, 0, 0x20, 0, 0, 0x4d3008, 0x4d304c);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x4d304c);\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "0049934a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049934a(uint X)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t lpRect;\n    int32_t var_18h;\n    int32_t nWidth;\n    int32_t nHeight;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t Y;\n    \n    iVar3 = fcn.0041b021(X);\n    piVar1 = **(*0x4d1910 + iVar3 * 4);\n    (*_sym.imp.USER32.dll_GetWindowRect)(*piVar1, &lpRect);\n    iVar3 = lpRect - piVar1[0xf];\n    Y = var_18h - piVar1[0x10];\n    if (piVar1[3] == -0x80000000) {\n        var_8h = 0;\n        var_ch = *0x4d1914;\n        uVar4 = 0;\n        uVar5 = *0x4d1914;\n        if (*0x4d1914 != 0) {\n            do {\n                if (*0x4d18d0 <= var_8h) break;\n                puVar2 = **(*0x4d1910 + uVar4 * 4);\n                if ((puVar2 != NULL) && (var_8h = var_8h + 1,  puVar2[2] == *piVar1)) {\n                    (*_sym.imp.USER32.dll_GetWindowRect)(*puVar2, &lpRect);\n                    nHeight = nHeight - var_18h;\n                    nWidth = nWidth - lpRect;\n                    lpRect = lpRect + iVar3;\n                    var_18h = var_18h + Y;\n                    (*_sym.imp.USER32.dll_MoveWindow)(***(*0x4d1910 + uVar4 * 4), lpRect, var_18h, nWidth, nHeight, 1);\n                    uVar5 = var_ch;\n                }\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < uVar5);\n        }\n    }\n    piVar1[0xf] = piVar1[0xf] + iVar3;\n    piVar1[0x10] = piVar1[0x10] + Y;\n    return;\n}\n",
        "token_count": 536
    },
    "0049a472": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049a472(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    int32_t iVar2;\n    ushort *puVar3;\n    bool bVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 0;\n    puVar3 = *(in_ECX + 0x2c);\n    if (0 < *(in_ECX + 0x30)) {\n        do {\n            iVar1 = fcn.00421324(in_EDX, puVar3 + 1, arg_8h * 2);\n            bVar4 = iVar1 < 0;\n            if (iVar1 == 0) {\n                if (puVar3[arg_8h + 1] != 0) {\n                    bVar4 = true;\n                    goto code_r0x0049a4b8;\n                }\n            }\n            else {\ncode_r0x0049a4b8:\n                if (bVar4) {\n                    fcn.004226b0(puVar3 + *(in_ECX + 0x34), puVar3, (*(in_ECX + 0x30) - iVar2) * *(in_ECX + 0x34) * 2);\n                    break;\n                }\n            }\n            iVar2 = iVar2 + 1;\n            puVar3 = puVar3 + *(in_ECX + 0x34);\n        } while (iVar2 < *(in_ECX + 0x30));\n    }\n    *puVar3 = arg_ch;\n    fcn.00420db0(puVar3 + 1, in_EDX, arg_8h * 2);\n    puVar3[arg_8h + 1] = 0;\n    *(in_ECX + 0x30) = *(in_ECX + 0x30) + 1;\n    return;\n}\n",
        "token_count": 431
    },
    "0049a59c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049a59c(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint32_t in_ECX;\n    uint16_t *puVar3;\n    int16_t in_DX;\n    uint var_ch;\n    uint var_8h;\n    \ncode_r0x0049a5b9:\n    iVar2 = fcn.0049accc();\n    puVar3 = *(arg_ch + 0x10) + arg_10h * 2;\n    puVar1 = *(arg_ch + 0x20);\n    if (iVar2 == 0) {\n        if (puVar3 < puVar1) {\n            do {\n                *puVar3 = *puVar3 + in_DX;\n                puVar3 = puVar3 + 1;\n            } while (puVar3 < *(arg_ch + 0x20));\n        }\n        return;\n    }\n    if (puVar3 < puVar1) goto code_r0x0049a5d6;\n    goto code_r0x0049a5f8;\ncode_r0x0049a5d6:\n    do {\n        if (*(arg_ch + 0x14) + *puVar3 * 2 == iVar2 + 2) break;\n        puVar3 = puVar3 + 1;\n    } while (puVar3 < puVar1);\n    if (puVar1 <= puVar3) {\ncode_r0x0049a5f8:\n        if (in_ECX <= *(arg_ch + 0x14) + *(iVar2 + 2) * 2) {\n            *(iVar2 + 2) = *(iVar2 + 2) + in_DX;\n        }\n    }\n    goto code_r0x0049a5b9;\n}\n",
        "token_count": 413
    },
    "0049a809": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0049a809(uint param_1, uint32_t param_2)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    uVar2 = 5;\n    while ((param_2 != uVar2 || (iVar3 = fcn.0041cd85(param_2),  iVar3 != 0))) {\n        puVar1 = iVar4 + 0x4c4ef5;\n        uVar2 = *puVar1;\n        iVar4 = iVar4 + 1;\n        if (*puVar1 == 0) {\n            return -1;\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 184
    },
    "0049a854": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0049a854(int32_t param_1, int16_t **param_2)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = param_1 + 4;\n    iVar2 = *piVar1;\n    do {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        if (iVar2 == 0x5c) {\n            if ((piVar1[1] != 0x5d) && (iVar2 = 0x5c,  piVar1[1] != 0x5c)) {\ncode_r0x0049a8bc:\n                if (iVar2 == 0x5d) {\n                    return 0;\n                }\n                goto code_r0x0049a8c4;\n            }\n            piVar1 = piVar1 + 1;\n        }\n        else {\n            if (iVar2 != 0x5b) goto code_r0x0049a8bc;\n            if (piVar1[1] == *(param_1 + 2)) {\n                return 0;\n            }\n            iVar2 = 0x5b;\ncode_r0x0049a8c4:\n            if ((iVar2 == *(param_1 + 2)) && (piVar1[1] == 0x5d)) {\n                *param_2 = piVar1;\n                return 1;\n            }\n        }\n        piVar1 = piVar1 + 1;\n        iVar2 = *piVar1;\n    } while( true );\n}\n",
        "token_count": 363
    },
    "0049a8ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0049a8ea(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t in_ECX;\n    \n    for (; (arg_8h != NULL && (in_ECX <= arg_8h[1])); arg_8h = *arg_8h) {\n        iVar1 = fcn.0041cdaf(arg_ch, arg_10h, 0);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 128
    },
    "0049a928": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0049a928(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = *(param_1 + 0x3c);\n    iVar2 = iVar1 * 2;\n    if (0x32000 < iVar2) {\n        iVar2 = 0x32000;\n    }\n    if ((iVar1 < 0x32000) && (99 < iVar2 - iVar1)) {\n        iVar1 = fcn.0040ab22(iVar2 * 2);\n        if (iVar1 == 0) {\n            uVar3 = 0x15;\n        }\n        else {\n            fcn.00420db0(iVar1, *(param_1 + 0x10), *(param_1 + 0x3c) * 2);\n            *(param_1 + 0x20) = iVar1 + (*(param_1 + 0x20) - *(param_1 + 0x10) >> 1) * 2;\n            if (0x800 < *(param_1 + 0x3c)) {\n                fcn.0040ab2b(*(param_1 + 0x10));\n            }\n            *(param_1 + 0x10) = iVar1;\n            uVar3 = 0;\n            *(param_1 + 0x3c) = iVar2;\n        }\n    }\n    else {\n        uVar3 = 0x48;\n    }\n    return uVar3;\n}\n",
        "token_count": 341
    },
    "0049af93": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0049af93(int16_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    \n    if (*param_1 - 0x30U < 10) {\n        puVar2 = param_1 + 1;\n        uVar1 = *puVar2;\n        while ((0x2f < uVar1 && (uVar1 < 0x3a))) {\n            puVar2 = puVar2 + 1;\n            uVar1 = *puVar2;\n        }\n        if (uVar1 == 0x7d) {\n            return true;\n        }\n        if (uVar1 == 0x2c) {\n            if (puVar2[1] == 0x7d) {\n                return true;\n            }\n            if (puVar2[1] - 0x30 < 10) {\n                puVar2 = puVar2 + 2;\n                uVar1 = *puVar2;\n                while ((0x2f < uVar1 && (uVar1 < 0x3a))) {\n                    puVar2 = puVar2 + 1;\n                    uVar1 = *puVar2;\n                }\n                return uVar1 == 0x7d;\n            }\n        }\n    }\n    return false;\n}\n",
        "token_count": 294
    },
    "0049b037": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.0049b037(int32_t *arg_8h, uint *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 0;\n    uVar1 = *in_ECX;\n    while ((0x2f < uVar1 && (uVar1 < 0x3a))) {\n        in_ECX = in_ECX + 1;\n        iVar2 = (uVar1 - 0x30) + iVar2 * 10;\n        if (0xffff < iVar2) goto code_r0x0049b0a7;\n        uVar1 = *in_ECX;\n    }\n    iVar3 = iVar2;\n    if (uVar1 != 0x7d) {\n        in_ECX = in_ECX + 1;\n        uVar1 = *in_ECX;\n        iVar3 = -1;\n        if (uVar1 != 0x7d) {\n            iVar3 = 0;\n            while ((0x2f < uVar1 && (uVar1 < 0x3a))) {\n                in_ECX = in_ECX + 1;\n                iVar3 = (uVar1 - 0x30) + iVar3 * 10;\n                if (0xffff < iVar3) {\ncode_r0x0049b0a7:\n                    *arg_ch = 5;\n                    return in_ECX;\n                }\n                uVar1 = *in_ECX;\n            }\n            if (iVar3 < iVar2) {\n                *arg_ch = 4;\n                return in_ECX;\n            }\n        }\n    }\n    *in_EDX = iVar2;\n    *arg_8h = iVar3;\n    return in_ECX;\n}\n",
        "token_count": 429
    },
    "0049b103": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049b103(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    iVar1 = *(arg_ch + 8);\n    do {\n        *(uVar2 + in_ECX) = *(uVar2 + in_ECX) | ~*(in_EDX + iVar1 + uVar2);\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 0x20);\n    return;\n}\n",
        "token_count": 141
    },
    "0049b21e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0049b21e(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    iVar1 = *(arg_ch + 8);\n    do {\n        *(uVar2 + in_ECX) = *(uVar2 + in_ECX) | *(in_EDX + iVar1 + uVar2);\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 0x20);\n    return;\n}\n",
        "token_count": 141
    },
    "0049b3c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0049b3c9(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_ch < 0) || (arg_8h <= arg_ch)) {\n        iVar2 = -7;\n    }\n    else {\n        iVar2 = *(in_EDX + 4 + arg_ch * 8) - *(in_EDX + arg_ch * 8);\n        iVar1 = iVar2 * 2;\n        iVar3 = fcn.0040ab22(iVar1 + 2);\n        if (iVar3 == 0) {\n            iVar2 = -6;\n        }\n        else {\n            fcn.00420db0(iVar3, in_ECX + *(in_EDX + arg_ch * 8) * 2, iVar1);\n            *(iVar1 + iVar3) = 0;\n            *arg_10h = iVar3;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 269
    },
    "0049b8f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0049b8f7(int32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t *in_ECX;\n    int32_t in_EDX;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint uVar5;\n    \n    uVar5 = 2;\n    puVar4 = in_ECX;\n    if (in_EDX < 0) {\n        uVar1 = *in_ECX;\n        puVar2 = in_ECX;\n        while (uVar1 != 0) {\n            puVar2 = puVar2 + 1;\n            uVar1 = *puVar2;\n        }\n        in_EDX = puVar2 - in_ECX >> 1;\n    }\n    do {\n        if (in_EDX < 1) {\n            return 0;\n        }\n        iVar3 = in_EDX + -1;\n        if ((*puVar4 & 0xf800) == 0xd800) {\n            if ((*puVar4 & 0x400) != 0) {\n                uVar5 = 3;\ncode_r0x0049b967:\n                *arg_8h = puVar4 - in_ECX >> 1;\n                return uVar5;\n            }\n            if (iVar3 == 0) {\n                uVar5 = 1;\n                goto code_r0x0049b967;\n            }\n            puVar4 = puVar4 + 1;\n            iVar3 = in_EDX + -2;\n            if ((*puVar4 & 0xfc00) != 0xdc00) goto code_r0x0049b967;\n        }\n        in_EDX = iVar3;\n        puVar4 = puVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 402
    },
    "00401d5f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401d5f(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    uint arg_10h_00;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    iVar4 = *(arg_8h + 4);\n    iVar1 = *arg_ch;\n    iVar3 = *(*(iVar4 + iVar1 * 4) + 8);\n    while( true ) {\n        if (iVar3 != 0x4e) {\n            return 0;\n        }\n        if (*(*arg_10h + 0xc) != 0xf) {\n            fcn.004734ba(0x7a, *(*(iVar4 + iVar1 * 4) + 10));\n            return 0xffffffff;\n        }\n        *arg_ch = iVar1 + 1;\n        iVar3 = *(*(iVar4 + (iVar1 + 1) * 4) + 10);\n        var_18h = 0;\n        var_10h = 0;\n        var_ch = 1;\n        fcn.00410540(arg_8h, arg_ch, &var_18h, 0xffffffff);\n        cVar2 = fcn.00401f20();\n        if ((cVar2 != '\\0') && (iVar4 = fcn.0040ce67(),  iVar4 < 0)) break;\n        iVar4 = *arg_ch;\n        if (*(*(*(arg_8h + 4) + iVar4 * 4) + 8) != 0x4f) {\n            iVar3 = *(*(*(arg_8h + 4) + -4 + iVar4 * 4) + 10);\n            break;\n        }\n        *arg_ch = iVar4 + 1;\n        if (var_ch == 4) {\n            fcn.00408e90();\n            iVar4 = fcn.0046b459(var_10h, arg_14h);\n        }\n        else {\n            arg_10h_00 = arg_14h;\n            uVar5 = fcn.0040cc8f();\n            iVar4 = fcn.00401e55(uVar5, uVar5 >> 0x20, arg_10h_00);\n        }\n        *arg_10h = iVar4;\n        fcn.0040e8a0();\n        if (iVar4 == 0) {\n            return 0;\n        }\n        iVar1 = *arg_ch;\n        iVar4 = *(arg_8h + 4);\n        iVar3 = *(*(iVar4 + iVar1 * 4) + 8);\n    }\n    fcn.004734ba(0x7b, iVar3);\n    fcn.0040e8a0();\n    return 0xffffffff;\n}\n",
        "token_count": 668
    },
    "00405489": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint32_t __cdecl fcn.00405489(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.0040c25d();\n    fcn.0040592d();\n    uVar4 = 0;\n    if (*(in_ECX + 0x20) != 0) {\n        do {\n            puVar1 = *(*(in_ECX + 0x1c) + uVar4 * 4);\n            iVar3 = fcn.0041d5dc(var_14h, var_10h, *puVar1, puVar1[1], 0);\n            if (iVar3 == 0) {\n                piVar2 = *(*(in_ECX + 0x2c) + uVar4 * 4);\n                *piVar2 = *piVar2 + 1;\n                goto code_r0x004054d4;\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *(in_ECX + 0x20));\n    }\n    fcn.00406aff(&var_14h);\n    arg_8h = 1;\n    fcn.0040285a(&arg_8h);\n    uVar4 = *(in_ECX + 0x20) - 1;\ncode_r0x004054d4:\n    fcn.0040b1ff();\n    return uVar4;\n}\n",
        "token_count": 388
    },
    "00407cf8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407cf8(int32_t arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    uint var_14h;\n    \n    if (in_ECX == arg_8h) {\n        arg_8h_00 = fcn.004609c0(&var_14h, in_ECX);\n        if (in_ECX != arg_8h_00) {\n            fcn.0040c1c3(arg_8h_00);\n        }\n        fcn.0040b1ff();\n    }\n    else {\n        fcn.00407d1b(arg_8h, 0, 0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "0040b6ca": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b6ca(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    ulong uVar3;\n    uchar auStack24 [20];\n    \n    uVar2 = 1;\n    if (*(arg_8h + 8) < 2) {\ncode_r0x0040b6e4:\n        fcn.0040c5e7(**(arg_8h + 4));\n        fcn.0040cd15();\n    }\n    else {\n        iVar1 = fcn.0040ce67();\n        if (iVar1 != 1) {\n            if (iVar1 != 2) goto code_r0x0040b6e4;\n            uVar2 = 2;\n        }\n        uVar3 = fcn.0040cc8f();\n        uVar2 = fcn.0047e22d(auStack24, uVar3, uVar3 >> 0x20, uVar2);\n        fcn.0040c5e7(uVar2);\n        fcn.0040e8a0();\n    }\n    return 0;\n}\n",
        "token_count": 257
    },
    "0041e465": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0041e465(void)\n\n{\n    (*_sym.imp.WINMM.dll_timeGetTime)();\n    return;\n}\n",
        "token_count": 29
    },
    "0041efad": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "log keystrokes",
            "find graphical window",
            "find taskbar"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041efad(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    code *pcVar8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    if (param_1 == iVar2) {\n        uVar7 = 1;\n    }\n    else {\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.USER32.dll_FindWindowW)(L\"Shell_TrayWnd\", 0);\n        }\n        iVar3 = (*_sym.imp.USER32.dll_IsIconic)(param_1);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(param_1, 9);\n        }\n        iVar3 = (*_sym.imp.USER32.dll_SetForegroundWindow)(param_1);\n        pcVar8 = _sym.imp.USER32.dll_GetWindowThreadProcessId;\n        if (iVar3 == 0) {\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(iVar2, 0);\n            uVar5 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            uVar6 = (*pcVar8)(param_1, 0);\n            pcVar8 = _sym.imp.USER32.dll_AttachThreadInput;\n            (*_sym.imp.USER32.dll_AttachThreadInput)(uVar5, uVar6, 1);\n            (*pcVar8)(uVar5, uVar4, 1);\n            (*pcVar8)(uVar4, uVar6, 1);\n            iVar2 = (*_sym.imp.USER32.dll_SetForegroundWindow)(param_1);\n            pcVar1 = _sym.imp.USER32.dll_MapVirtualKeyW;\n            if (iVar2 == 0) {\n                uVar7 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(0x12, 0, 0, 0);\n                pcVar8 = _sym.imp.USER32.dll_keybd_event;\n                (*_sym.imp.USER32.dll_keybd_event)(0x12, uVar7);\n                uVar7 = (*pcVar1)(0x12, 0, 2, 0);\n                (*pcVar8)(0x12, uVar7);\n                uVar7 = (*pcVar1)(0x12, 0, 0, 0);\n                (*pcVar8)(0x12, uVar7);\n                uVar7 = (*pcVar1)(0x12, 0, 2, 0);\n                (*pcVar8)(0x12, uVar7);\n                iVar2 = (*_sym.imp.USER32.dll_SetForegroundWindow)(param_1);\n                pcVar8 = _sym.imp.USER32.dll_AttachThreadInput;\n                if (iVar2 == 0) {\n                    uVar7 = 0;\n                }\n                else {\n                    uVar7 = 4;\n                }\n            }\n            else {\n                uVar7 = 3;\n            }\n            (*pcVar8)(uVar5, uVar6, 0);\n            (*pcVar8)(uVar5, uVar4, 0);\n            (*pcVar8)(uVar4, uVar6, 0);\n        }\n        else {\n            uVar7 = 2;\n        }\n    }\n    return uVar7;\n}\n",
        "token_count": 780
    },
    "004314c7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004314c7(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.00432958(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "00461a70": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get graphical window text"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00461a70(uint arg_8h)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_ECX;\n    uint32_t uVar6;\n    uint hWnd;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_SendMessageW;\n    (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0xb0, &var_8h, &var_4h);\n    uVar3 = var_8h;\n    if (var_8h < var_4h) {\n        uVar6 = 0;\n        uVar3 = (*pcVar2)(*in_ECX, 0xe, 0, 0);\n        if (((uVar3 != 0) && (var_8h <= uVar3)) && (var_4h <= uVar3)) {\n            iVar1 = (uVar3 + 1) * 2;\n            iVar4 = fcn.0041fd8b(-(iVar1 >> 0x20 != 0) | iVar1);\n            iVar5 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0xd, uVar3 + 1, iVar4);\n            if (iVar5 != 0) {\n                if (var_4h != uVar3) {\n                    *(iVar4 + var_4h * 2) = 0;\n                }\n                fcn.004084e7(iVar4 + var_8h * 2);\n                uVar6 = 1;\n            }\n            uVar3 = fcn.0041fd94(iVar4);\n            return uVar3 & 0xffffff00 | uVar6;\n        }\n    }\n    return uVar3 & 0xffffff00;\n}\n",
        "token_count": 432
    },
    "0046244f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0046244f(int32_t wParam, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    uint32_t uVar2;\n    uint *in_ECX;\n    uint32_t uVar3;\n    uint var_888h;\n    uint var_88h;\n    uint *hWnd;\n    \n    hWnd = in_ECX;\n    fcn.004034ba();\n    uVar3 = 0;\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x406, 0, 0);\n    if ((-1 < wParam) && (wParam < iVar1)) {\n        arg_8h = fcn.0046b248(0x800, *in_ECX);\n        (*_sym.imp.USER32.dll_SendMessageW)(*hWnd, 0x40d, wParam, arg_8h);\n        fcn.0046b2ec(arg_8h, &var_888h, 0x800);\n        fcn.004084e7(&var_888h);\n        uVar3 = 1;\n    }\n    uVar2 = fcn.0040329e();\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 280
    },
    "0046767c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046767c(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint lpsz;\n    uint rguid;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n    if (arg_ch == 0x1f) {\n        puVar6 = NULL;\n        if (*(arg_8h + 8) != NULL) {\n            puVar6 = *(arg_8h + 8);\n        }\n    }\n    else {\n        if (arg_ch == 0x1e) {\n            uVar5 = *(arg_8h + 8);\n            uVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, uVar5, 0xffffffff, 0, 0);\n            uVar3 = fcn.0041fd8b(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n            (*pcVar1)(0, 0, uVar5, 0xffffffff, uVar3, uVar2);\n            uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(uVar3);\n            fcn.0041fd94(uVar3);\n            return uVar5;\n        }\n        if (arg_ch == 8) {\n            uVar5 = *(arg_8h + 8);\n            uVar3 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(uVar5);\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(uVar5);\n            return uVar3;\n        }\n        if (arg_ch != 0x48) {\n            return 0;\n        }\n        puVar6 = *(arg_8h + 8);\n        rguid = *puVar6;\n        uStack16 = puVar6[1];\n        uStack12 = puVar6[2];\n        uStack8 = puVar6[3];\n        iVar4 = (*_sym.imp.ole32.dll_StringFromGUID2)(&rguid, &lpsz, 0x28);\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar6 = &lpsz;\n    }\n    uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(puVar6);\n    return uVar5;\n}\n",
        "token_count": 582
    },
    "00467753": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00467753(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint lpsz;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n    puVar6 = NULL;\n    if (arg_ch == 0x1f) {\n        if (*(arg_8h + 8) != NULL) {\n            puVar6 = **(arg_8h + 8);\n        }\n    }\n    else {\n        if (arg_ch == 0x1e) {\n            uVar5 = **(arg_8h + 8);\n            uVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, uVar5, 0xffffffff, 0, 0);\n            uVar3 = fcn.0041fd8b(-(uVar2 * 2 >> 0x20 != 0) | uVar2 * 2);\n            (*pcVar1)(0, 0, uVar5, 0xffffffff, uVar3, uVar2);\n            uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(uVar3);\n            fcn.0041fd94(uVar3);\n            return uVar5;\n        }\n        if (arg_ch == 8) {\n            uVar5 = **(arg_8h + 8);\n            uVar3 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(uVar5);\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(uVar5);\n            return uVar3;\n        }\n        if (arg_ch != 0x48) {\n            return 0;\n        }\n        iVar4 = (*_sym.imp.ole32.dll_StringFromGUID2)(*(arg_8h + 8), &lpsz, 0x28);\n        if (iVar4 == 0) {\n            return 0;\n        }\n        puVar6 = &lpsz;\n    }\n    uVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(puVar6);\n    return uVar5;\n}\n",
        "token_count": 510
    },
    "004687f8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.004687f8(int16_t *arg_8h)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint pvargDest;\n    int32_t var_ch;\n    uint var_8h;\n    \n    puVar2 = fcn.0041fd8b(0x10);\n    if (*arg_8h == 8) {\n        (*_sym.imp.ole32.dll_CLSIDFromString)(*(arg_8h + 4), puVar2);\n    }\n    else if (*arg_8h == 0x24) {\n        (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n        var_ch = 0;\n        var_8h = 0;\n        iVar3 = (**(**(arg_8h + 6) + 0x2c))(*(arg_8h + 6), 0, 0, &pvargDest, 0);\n        if (iVar3 < 0) {\n            fcn.0041fd94(puVar2);\n            puVar2 = NULL;\n        }\n        else {\n            if (pvargDest == -0x7ff4) {\n                puVar1 = *(var_ch + 8);\n                *puVar2 = *puVar1;\n                puVar2[1] = puVar1[1];\n                puVar2[2] = puVar1[2];\n                puVar2[3] = puVar1[3];\n            }\n            pvargDest._0_2_ = 0x1a;\n        }\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n    }\n    else {\n        puVar1 = *(arg_8h + 4);\n        *puVar2 = *puVar1;\n        puVar2[1] = puVar1[1];\n        puVar2[2] = puVar1[2];\n        puVar2[3] = puVar1[3];\n    }\n    return puVar2;\n}\n",
        "token_count": 462
    },
    "0046e899": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "delay execution"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e899(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint lpFrequency;\n    double dStack36;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t lpPerformanceCount;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    if (-1 < param_1) {\n        if (param_1 == 0) {\n            param_1 = 0;\n        }\n        else if ((param_1 < 0xf) &&\n                (iVar1 = (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&lpPerformanceCount),  iVar1 != 0)) {\n            (*_sym.imp.KERNEL32.dll_QueryPerformanceFrequency)(&lpFrequency);\n            do {\n                (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&var_8h);\n                var_18h = var_8h - lpPerformanceCount;\n                var_14h = (var_4h - var_ch) - (var_8h < lpPerformanceCount);\n                dStack36 = _lpFrequency;\n                uVar2 = fcn.00442050();\n            } while (uVar2 < param_1);\n            return;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(param_1);\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "00470adc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint16_t __fastcall fcn.00470adc(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    \n    uVar1 = *(param_1 + 8) - 0x20;\n    return uVar1 & 0xff00 | 1 - (0xf < uVar1);\n}\n",
        "token_count": 71
    },
    "00470af0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint16_t __fastcall fcn.00470af0(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    \n    uVar1 = *(param_1 + 8) - 0x10;\n    return uVar1 & 0xff00 | 1 - (0xf < uVar1);\n}\n",
        "token_count": 72
    },
    "0047191b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0047191b(int32_t arg_8h)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t in_ECX;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    ulong uVar3;\n    uint var_24h;\n    uint var_14h;\n    \n    if ((*(in_ECX + 0xc) != 8) && (*(arg_8h + 0xc) != 8)) {\n        cVar1 = fcn.00401fb9(0x2a);\n        arg_8h_01 = arg_8h_00;\n        if (cVar1 == '\\0') {\n            uVar3 = fcn.00401fb9(arg_8h_00);\n            arg_8h_01 = uVar3 >> 0x20;\n            if (uVar3 == '\\0') {\n                if (*(in_ECX + 0xc) == 0xe) {\n                    if (*(arg_8h + 0xc) != 0xe) {\n                        return 0;\n                    }\n                    fcn.00471037(&var_24h);\n                    fcn.00471037(&var_14h);\n                    uVar2 = fcn.004082dc();\n                    fcn.0040b1ff();\n                    fcn.0040b1ff();\n                    return uVar2;\n                }\n                if (*(arg_8h + 0xc) == 0xe) {\n                    return 0;\n                }\n                fcn.00408e90();\n                fcn.00408e90();\n                uVar2 = fcn.004082dc();\n                return uVar2;\n            }\n        }\n        uVar3 = fcn.00401fb9(arg_8h_01);\n        if ((uVar3 != '\\0') && (cVar1 = fcn.00401fb9(uVar3 >> 0x20),  cVar1 != '\\0')) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 450
    },
    "0047a394": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047a394(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint *arg_8h_00;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 1;\n    var_10h = 0;\n    var_8h = 0;\n    if (1 < *(arg_8h + 8)) {\n        fcn.0040c5e7(*(*(arg_8h + 4) + 4));\n    }\n    arg_8h_00 = &var_10h;\n    fcn.004119e0(arg_8h_00);\n    uVar1 = fcn.0040ce67();\n    uVar1 = fcn.00494fad(uVar1, arg_8h_00);\n    fcn.0040e8a0();\n    arg_ch[3] = 1;\n    *arg_ch = uVar1;\n    fcn.0040e8a0();\n    return 0;\n}\n",
        "token_count": 242
    },
    "00480365": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00480365(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint uVar5;\n    bool bVar6;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    int32_t *piStack28;\n    uchar auStack24 [20];\n    \n    iVar4 = **(arg_8h + 4);\n    bVar6 = *(iVar4 + 0xc) != 0xe;\n    if (bVar6) {\n        fcn.00408e90();\n        puVar3 = *(iVar4 + 8);\n        uVar5 = *puVar3;\n        uStack36 = puVar3[1];\n        uStack32 = puVar3[2];\n        piStack28 = puVar3[3];\n        puVar3 = &uStack40;\n        *piStack28 = *piStack28 + 1;\n        uStack40 = uVar5;\n    }\n    else {\n        puVar3 = fcn.00471037(auStack24);\n        uVar5 = *puVar3;\n    }\n    uVar1 = puVar3[1];\n    *puVar3[3] = *puVar3[3] + 1;\n    if (bVar6) {\n        fcn.0040b1ff();\n    }\n    else {\n        fcn.0040b1ff();\n    }\n    fcn.0040c7c9();\n    (*_sym.imp.USER32.dll_CharUpperBuffW)(uVar5, uVar1);\n    iVar4 = fcn.004025c1(&stack0xffffffbc);\n    if (iVar4 != 0) {\n        for (iVar4 = *(in_ECX + 0x130); iVar4 != 0; iVar4 = *(iVar4 + 4)) {\n            cVar2 = fcn.004082dc();\n            if (cVar2 != '\\0') {\n                fcn.00483242(&stack0xffffffb4);\n                goto code_r0x0048046e;\n            }\n        }\n    }\n    fcn.0040e8a0();\n    *arg_ch = 0;\n    arg_ch[3] = 1;\ncode_r0x0048046e:\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 542
    },
    "00487aa5": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00487aa5(int32_t arg_8h, int32_t *arg_ch, int32_t **arg_10h, uint arg_14h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    int32_t *piVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *in_ECX;\n    uint arg_10h_00;\n    int32_t *extraout_EDX;\n    uint arg_ch_00;\n    uint uVar7;\n    int32_t in_FS_OFFSET;\n    uint in_stack_ffffff64;\n    int32_t in_stack_ffffff68;\n    uint arg_10h_01;\n    uint in_stack_ffffff94;\n    uint in_stack_ffffff98;\n    uint uVar8;\n    uint var_48h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t *var_10h;\n    uint *var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_24h = 0x49d100;\n    var_20h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    fcn.0040c25d();\n    uVar7 = 0xffffffff;\n    if (*(**(in_FS_OFFSET + 0x2c) + 4) < *0x4d3000) {\n        uVar8 = 0x487aec;\n        fcn.004201c2(0x4d3000);\n        if (*0x4d3000 == -1) {\n            arg_10h_01 = 0x49d0d0;\n            fcn.0040b606(0x49d0d0);\n            fcn.00402032(0x2a, 0, arg_10h_01, in_stack_ffffff94, in_stack_ffffff98, uVar8);\n            fcn.00420023(0x442411);\n            fcn.00420178(0x4d3000);\n        }\n    }\n    var_ch = &fcn.00487aa5::var_48h;\n    var_48h = 0;\n    var_40h = 0;\n    var_3ch = 1;\n    var_10h = *(*(arg_8h + 4) + *arg_ch * 4);\n    var_4h = *(var_10h + 10);\n    cVar4 = fcn.00485520();\n    piVar3 = var_10h;\n    if (cVar4 == '\\0') {\n        iVar5 = fcn.004846fb(0xa9, 0, L\"Variable must be of type \\'Object\\'.\", 1);\n        if (-1 < iVar5) {\n            fcn.004874c0(0);\ncode_r0x00487cf0:\n            fcn.00401fd5(in_stack_ffffff64);\n            iVar5 = *(*in_ECX + 4);\n            iVar6 = *(iVar5 + 8 + in_ECX);\n            if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                iVar6 = *(iVar6 + 0x38);\n            }\n            *(iVar6 + 0x14) = 1;\n            iVar6 = *(iVar5 + 8 + in_ECX);\n            if (*(iVar5 + 0xd + in_ECX) != '\\0') {\n                iVar6 = *(iVar6 + 0x38);\n            }\n            *(iVar6 + 0x18) = 0;\ncode_r0x00487d21:\n            uVar7 = 0;\n            goto code_r0x00487d36;\n        }\n    }\n    else {\n        var_10h = 0x35;\n        var_8h = 0x47;\n        uVar1 = *(piVar3 + 2);\n        var_14h = uVar1;\n        if (uVar1 != 0x35) {\n            if (uVar1 == 0x47) {\n                *extraout_EDX = *extraout_EDX + -1;\n                fcn.004084e7(0x49d0d0);\n                goto code_r0x00487bf3;\n            }\n            fcn.0040c5e7(arg_10h);\n            goto code_r0x00487d21;\n        }\n        if (&fcn.00487aa5::var_34h != *piVar3) {\n            fcn.0040c1c3(*piVar3);\n        }\ncode_r0x00487bf3:\n        if (*(*(*(arg_8h + 4) + 4 + *arg_ch * 4) + 8) == var_8h) {\n            if ((arg_10h[3] != 0xf) || (cVar4 = (**(**arg_10h + 8))(&fcn.00487aa5::var_34h),  cVar4 != '\\0')) {\n                iVar5 = fcn.00485396(arg_8h, arg_ch, &fcn.00487aa5::var_24h);\n                if (iVar5 < 0) {\n                    fcn.004732a6();\n                    goto code_r0x00487d36;\n                }\n                uVar8 = 1;\n                goto code_r0x00487c67;\n            }\n        }\n        else if ((arg_10h[3] != 0xf) || (cVar4 = (**(**arg_10h + 0xc))(&fcn.00487aa5::var_34h),  cVar4 != '\\0')) {\n            *arg_ch = *arg_ch + 1;\n            uVar8 = 0;\ncode_r0x00487c67:\n            iVar5 = fcn.004852bf(uVar8, arg_10h, &fcn.00487aa5::var_34h, &fcn.00487aa5::var_24h, &fcn.00487aa5::var_ch);\n            if (-1 < iVar5) {\n                iVar2 = *(*(*(arg_8h + 4) + *arg_ch * 4) + 8);\n                if ((iVar2 != var_10h) && (iVar2 != var_8h)) {\n                    fcn.0040c5e7(var_ch);\n                    uVar7 = 0;\n                    goto code_r0x00487d36;\n                }\n                cVar4 = fcn.00485520();\n                if (cVar4 != '\\0') {\n                    uVar7 = fcn.00487aa5(arg_8h, arg_ch_00, arg_10h_00, arg_14h);\n                    goto code_r0x00487d36;\n                }\n                arg_ch = CONCAT13(1, arg_ch._0_3_);\n                if (*(in_ECX + 0x119) == '\\0') {\n                    fcn.004874c0(&fcn.00487aa5::arg_ch + 3);\n                    if (arg_ch._3_1_ == '\\0') goto code_r0x00487cf0;\n                }\n                goto code_r0x00487d21;\n            }\n        }\n        in_stack_ffffff64 = 0xaa;\n        in_stack_ffffff68 = var_4h;\n    }\n    fcn.004734ba(in_stack_ffffff64, in_stack_ffffff68);\ncode_r0x00487d36:\n    fcn.0040e8a0();\n    fcn.0040b1ff();\n    var_24h = 0x49d100;\n    fcn.00466f23();\n    fcn.0041fd94(var_20h);\n    return uVar7;\n}\n",
        "token_count": 1770
    },
    "00488e0b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.00488e0b(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t *in_ECX;\n    uint lpProcName;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar3 = *(*(arg_ch + 4) + 8);\n    fcn.00408e90();\n    bVar2 = false;\n    piVar1 = *(*(iVar3 + 8) + 0xc);\n    *piVar1 = *piVar1 + 1;\n    iVar3 = **(arg_ch + 4);\n    if (*(iVar3 + 0xc) == 4) {\n        fcn.00408e90();\n        iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(**(iVar3 + 8));\n        bVar2 = true;\n    }\n    else {\n        iVar3 = fcn.0040ce67();\n        if ((iVar3 < 1) || (iVar3 = in_ECX[0x6c],  iVar4 = fcn.0040ce67(),  iVar3 < iVar4)) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.0040ce67();\n            iVar3 = **(in_ECX[0x6b] + -4 + iVar3 * 4);\n        }\n    }\n    if (iVar3 == 0) {\n        iVar3 = *(*in_ECX + 4);\n        iVar4 = *(iVar3 + 8 + in_ECX);\n        if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 1;\n    }\n    else {\n        if (*(*(*(arg_ch + 4) + 8) + 0xc) == 4) {\n            fcn.0040b443();\n            fcn.0041f7a8();\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, lpProcName);\n            *arg_8h = iVar4;\n            fcn.0040b1ff();\n        }\n        else {\n            uVar5 = fcn.0040ce67();\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, uVar5);\n            *arg_8h = iVar4;\n        }\n        if (*arg_8h != 0) goto code_r0x00488fac;\n        if (*(*(*(arg_ch + 4) + 8) + 0xc) == 4) {\n            fcn.004051ec(0x41);\n            fcn.0040b443();\n            fcn.0041f7a8();\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, lpProcName);\n            *arg_8h = iVar4;\n            fcn.0040b1ff();\n            if (*arg_8h != 0) goto code_r0x00488fac;\n        }\n        if (bVar2) {\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar3);\n        }\n        iVar3 = *(*in_ECX + 4);\n        iVar4 = *(iVar3 + 8 + in_ECX);\n        if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n            iVar4 = *(iVar4 + 0x38);\n        }\n        *(iVar4 + 0x14) = 3;\n    }\n    iVar4 = *(iVar3 + 8 + in_ECX);\n    if (*(iVar3 + 0xd + in_ECX) != '\\0') {\n        iVar4 = *(iVar4 + 0x38);\n    }\n    *(iVar4 + 0x18) = 0;\n    iVar3 = 0;\ncode_r0x00488fac:\n    fcn.0040b1ff();\n    return iVar3;\n}\n",
        "token_count": 946
    },
    "0048cb5b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "link function at runtime on Windows",
            "delete registry key",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0048cb5b(uint param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint lpSubKey;\n    uint var_18h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint phkResult;\n    uint var_4h;\n    \n    var_4h = 0xff;\n    var_ch = param_2;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExW)(param_1, 0, &lpSubKey, &var_4h, 0, 0, 0, &var_18h);\n    if (iVar2 != 0x103) {\n        var_10h = param_2 | 0x20019;\n        do {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(param_1, &lpSubKey, 0, var_10h, &phkResult);\n            if (iVar2 != 0) {\n                return 0;\n            }\n            cVar1 = fcn.0048cb5b();\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n            if (cVar1 == '\\0') {\n                return 0;\n            }\n            iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"advapi32.dll\");\n            if ((iVar2 == 0) ||\n               (pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"RegDeleteKeyExW\"),  pcVar3 == NULL)) {\n                iVar4 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(param_1, &lpSubKey);\n            }\n            else {\n                iVar4 = (*pcVar3)(param_1, &lpSubKey, var_ch, 0);\n            }\n            if (iVar4 != 0) {\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar2);\n                return 0;\n            }\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar2);\n            }\n            var_4h = 0xff;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExW)(param_1, 0, &lpSubKey, &var_4h, 0, 0, 0, &var_18h);\n        } while (iVar2 != 0x103);\n    }\n    return 1;\n}\n",
        "token_count": 586
    },
    "004974c4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004974c4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetWindowRect)(arg_8h, &var_10h);\n    iVar2 = (var_4h - var_ch) * (var_8h - var_10h);\n    if ((((var_10h <= *0x4d1954) && (*0x4d1954 <= var_8h)) && (var_ch <= *0x4d1958)) &&\n       ((*0x4d1958 <= var_4h && (iVar2 - *0x4d1950 == 0 || iVar2 < *0x4d1950)))) {\n        iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(arg_8h);\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(arg_8h);\n            if (iVar1 != 0) {\n                *0x4d194c = arg_8h;\n                *0x4d1950 = iVar2;\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 299
    },
    "004013a0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004013a0(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    \n    *in_ECX = *arg_8h;\n    in_ECX[1] = arg_8h[1];\n    in_ECX[2] = arg_8h[2];\n    piVar1 = arg_8h[3];\n    in_ECX[3] = piVar1;\n    *piVar1 = *piVar1 + 1;\n    *(in_ECX + 4) = *(arg_8h + 4);\n    *(in_ECX + 0x11) = *(arg_8h + 0x11);\n    in_ECX[5] = arg_8h[5];\n    in_ECX[6] = arg_8h[6];\n    return;\n}\n",
        "token_count": 192
    },
    "004033ec": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004033ec(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    *(in_ECX + 8) = 0;\n    fcn.004119e0(arg_8h);\n    *(in_ECX + 0x10) = *(arg_8h + 0x10);\n    *(in_ECX + 0x14) = *(arg_8h + 0x14);\n    *(in_ECX + 0x18) = *(arg_8h + 0x18);\n    *(in_ECX + 0x28) = 0;\n    fcn.004119e0(arg_8h + 0x20);\n    *(in_ECX + 0x30) = *(arg_8h + 0x30);\n    return;\n}\n",
        "token_count": 183
    },
    "00403430": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00403430(uint *param_1)\n\n{\n    *param_1 = 0;\n    param_1[3] = 1;\n    param_1[2] = 0;\n    *(param_1 + 4) = 0;\n    param_1[5] = 0;\n    *(param_1 + 6) = 0;\n    param_1[0xb] = 1;\n    param_1[8] = 0;\n    param_1[10] = 0;\n    *(param_1 + 0xc) = 0;\n    return param_1;\n}\n",
        "token_count": 141
    },
    "004034ce": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771",
            "log keystrokes"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004034ce(uint *param_1)\n\n{\n    code *pcVar1;\n    uchar uVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_MapVirtualKeyW;\n    *param_1 = 5;\n    param_1[1] = 5;\n    *(param_1 + 2) = 1;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[3] = 4;\n    uVar2 = (*pcVar1)(0x5b, 0);\n    *(param_1 + 0x29) = uVar2;\n    uVar2 = (*pcVar1)(0x10, 0);\n    *(param_1 + 0x26) = uVar2;\n    uVar2 = (*pcVar1)(0xa0, 0);\n    *(param_1 + 0x27) = uVar2;\n    uVar2 = (*pcVar1)(0xa1, 0);\n    *(param_1 + 10) = uVar2;\n    uVar2 = (*pcVar1)(0x11, 0);\n    *(param_1 + 9) = uVar2;\n    uVar2 = (*pcVar1)(0x12, 0);\n    *(param_1 + 0x25) = uVar2;\n    return;\n}\n",
        "token_count": 334
    },
    "004063f0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004063f0(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    if (in_ECX != arg_8h) {\n        fcn.0040c1c3(arg_8h);\n    }\n    *(in_ECX + 0x10) = *(arg_8h + 0x10);\n    *(in_ECX + 0x14) = *(arg_8h + 0x14);\n    *(in_ECX + 0x18) = *(arg_8h + 0x18);\n    *(in_ECX + 0x1c) = *(arg_8h + 0x1c);\n    *(in_ECX + 0x20) = *(arg_8h + 0x20);\n    return;\n}\n",
        "token_count": 180
    },
    "00408157": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00408157(int32_t param_1)\n\n{\n    *(param_1 + 0x24) = 0x2800;\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x1c) = 0;\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x28) = 0x2000;\n    return param_1;\n}\n",
        "token_count": 164
    },
    "0040c28f": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c28f(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    uint uVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint unaff_EDI;\n    \n    cVar1 = fcn.0040d4e0(arg_8h, in_ECX);\n    if (cVar1 == '\\0') {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = *in_ECX;\n    }\n    if (iVar3 == 0) {\n        arg_8h_00 = fcn.0041fd5b(0x20, unaff_EDI);\n        iVar3 = 0x40c2c8;\n        fcn.0040c25d();\n        if (arg_8h_00 != arg_8h) {\n            fcn.0040c1c3(arg_8h);\n            iVar3 = arg_8h;\n        }\n        *(arg_8h_00 + 0x10) = arg_10h & 0xff00;\n        iVar3 = fcn.0041fd5b(0x10, iVar3);\n        *(iVar3 + 8) = 0;\n        fcn.004119e0(arg_ch);\n        *(arg_8h_00 + 0x1c) = 0;\n        *(arg_8h_00 + 0x18) = 0;\n        *(arg_8h_00 + 0x14) = iVar3;\n        iVar3 = fcn.0040c165(arg_8h_00, *in_ECX);\n        *in_ECX = iVar3;\n        uVar2 = *(arg_8h_00 + 0x14);\n    }\n    else {\n        fcn.0040c5e7(arg_ch);\n        uVar2 = *(iVar3 + 0x14);\n    }\n    return uVar2;\n}\n",
        "token_count": 452
    },
    "0045fb87": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045fb87(uint arg_8h)\n\n{\n    uint *in_ECX;\n    \n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    *in_ECX = 0x4c35f0;\n    in_ECX[1] = 1;\n    fcn.0040c25d();\n    in_ECX[5] = arg_8h;\n    in_ECX[2] = 0xd;\n    return;\n}\n",
        "token_count": 113
    },
    "004658cf": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004658cf(uint *param_1)\n\n{\n    ulong uVar1;\n    \n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    param_1[0x15] = 0;\n    *(param_1 + 8) = 0;\n    fcn.004084e7(0x49d0d0);\n    uVar1 = *0x4c81f0;\n    *param_1 = 0xffffffff;\n    param_1[1] = 0xffffffff;\n    param_1[2] = 0x80000000;\n    param_1[3] = 0x80000000;\n    *(param_1 + 6) = uVar1;\n    param_1[0x16] = 0;\n    param_1[5] = 0;\n    param_1[4] = 0;\n    fcn.004084e7(0x49d0d0);\n    fcn.004084e7(0x49d0d0);\n    return param_1;\n}\n",
        "token_count": 254
    },
    "0046750f": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046750f(uint rclsid, int32_t *pdwRegister, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    uint var_4h;\n    \n    var_4h = 0;\n    piVar1 = in_ECX + 7;\n    *in_ECX = 0x4c63b0;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 0;\n    in_ECX[6] = 0;\n    *piVar1 = 0;\n    in_ECX[8] = 1;\n    in_ECX[9] = arg_10h;\n    if (pdwRegister != NULL) {\n        fcn.004681ee(pdwRegister);\n        iVar2 = (*_sym.imp.OLEAUT32.dll_CreateStdDispatch)(in_ECX[4], 0x800, piVar1);\n        if ((-1 < iVar2) && (*piVar1 != 0)) {\n            fcn.004680d5();\n            iVar2 = (*_sym.imp.OLEAUT32.dll_RegisterActiveObject)(0, rclsid, *piVar1, &pdwRegister);\n            if (-1 < iVar2) {\n                in_ECX[5] = rclsid;\n                iVar2 = (***pdwRegister)(pdwRegister, 0x49fbb4, &var_4h);\n                (**(*pdwRegister + 8))(pdwRegister);\n                if (-1 < iVar2) {\n                    in_ECX[6] = var_4h;\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 397
    },
    "0046fff7": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046fff7(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_ECX;\n    \n    *in_ECX = arg_8h;\n    in_ECX[1] = 0;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 0;\n    in_ECX[6] = 0;\n    in_ECX[7] = 0;\n    in_ECX[8] = 0;\n    in_ECX[9] = 0;\n    *(in_ECX + 2) = 0;\n    uVar1 = *in_ECX;\n    if ((uVar1 & 8) != 0) {\n        uVar1 = uVar1 | 6;\n        *in_ECX = uVar1;\n    }\n    if ((uVar1 & 0x10) != 0) {\n        *in_ECX = 0x10;\n    }\n    return;\n}\n",
        "token_count": 244
    },
    "00470b04": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00470b04(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_ECX;\n    uint unaff_EDI;\n    \n    iVar1 = fcn.0041dad8(arg_8h);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0041fd5b(0x20, unaff_EDI);\n        fcn.0040c25d();\n        if (iVar1 != arg_8h) {\n            fcn.0040c1c3(arg_8h);\n        }\n        *(iVar1 + 0x1c) = 0;\n        *(iVar1 + 0x18) = 0;\n        *(iVar1 + 0x10) = arg_10h & 0xff00 | 1;\n        *(iVar1 + 0x14) = arg_ch;\n        uVar2 = fcn.0040c165(iVar1, *in_ECX);\n        *in_ECX = uVar2;\n    }\n    else {\n        *(iVar1 + 0x14) = arg_ch;\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "004724f4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004724f4(uint *param_1)\n\n{\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    *(param_1 + 9) = 0;\n    *(param_1 + 0x22e) = 0;\n    param_1[0x115] = 0;\n    return;\n}\n",
        "token_count": 161
    },
    "00473101": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00473101(int32_t param_1)\n\n{\n    *(param_1 + 8) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 1;\n    fcn.0040c25d();\n    fcn.0040c25d();\n    return param_1;\n}\n",
        "token_count": 90
    },
    "00473127": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00473127(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.0040c5e7(arg_8h);\n    *(in_ECX + 0x10) = *(arg_8h + 0x10);\n    *(in_ECX + 0x14) = *(arg_8h + 0x14);\n    *(in_ECX + 0x18) = *(arg_8h + 0x18);\n    fcn.0040c5e7(arg_8h + 0x20);\n    *(in_ECX + 0x30) = *(arg_8h + 0x30);\n    return;\n}\n",
        "token_count": 159
    },
    "0047bb94": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047bb94(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    \n    *in_ECX = *arg_8h;\n    in_ECX[1] = arg_8h[1];\n    in_ECX[2] = arg_8h[2];\n    in_ECX[3] = arg_8h[3];\n    in_ECX[4] = arg_8h[4];\n    in_ECX[5] = arg_8h[5];\n    in_ECX[6] = arg_8h[6];\n    in_ECX[7] = arg_8h[7];\n    in_ECX[8] = arg_8h[8];\n    in_ECX[9] = arg_8h[9];\n    in_ECX[10] = arg_8h[10];\n    piVar1 = arg_8h[0xb];\n    in_ECX[0xb] = piVar1;\n    *piVar1 = *piVar1 + 1;\n    *(in_ECX + 0xc) = *(arg_8h + 0xc);\n    in_ECX[0xd] = arg_8h[0xd];\n    in_ECX[0xe] = arg_8h[0xe];\n    in_ECX[0xf] = arg_8h[0xf];\n    piVar1 = arg_8h[0x10];\n    in_ECX[0x10] = piVar1;\n    *piVar1 = *piVar1 + 1;\n    fcn.0047bb18(arg_8h + 0x11);\n    in_ECX[0x15] = arg_8h[0x15];\n    fcn.0047bd61(arg_8h + 0x16);\n    *(in_ECX + 0x34) = *(arg_8h + 0x34);\n    in_ECX[0x35] = arg_8h[0x35];\n    in_ECX[0x36] = arg_8h[0x36];\n    *(in_ECX + 0x37) = *(arg_8h + 0x37);\n    return;\n}\n",
        "token_count": 495
    },
    "0047bdcb": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047bdcb(ushort *arg_8h)\n\n{\n    int32_t *piVar1;\n    ushort *in_ECX;\n    \n    *in_ECX = *arg_8h;\n    *(in_ECX + 2) = *(arg_8h + 2);\n    *(in_ECX + 4) = *(arg_8h + 4);\n    *(in_ECX + 6) = *(arg_8h + 6);\n    piVar1 = *(arg_8h + 8);\n    *(in_ECX + 8) = piVar1;\n    *piVar1 = *piVar1 + 1;\n    *(in_ECX + 10) = *(arg_8h + 10);\n    *(in_ECX + 0xc) = *(arg_8h + 0xc);\n    *(in_ECX + 0xe) = *(arg_8h + 0xe);\n    piVar1 = *(arg_8h + 0x10);\n    *(in_ECX + 0x10) = piVar1;\n    *piVar1 = *piVar1 + 1;\n    *(in_ECX + 0x12) = *(arg_8h + 0x12);\n    *(in_ECX + 0x14) = *(arg_8h + 0x14);\n    *(in_ECX + 0x16) = *(arg_8h + 0x16);\n    piVar1 = *(arg_8h + 0x18);\n    *(in_ECX + 0x18) = piVar1;\n    *piVar1 = *piVar1 + 1;\n    return;\n}\n",
        "token_count": 374
    },
    "00402002": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402002(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    \n    *in_ECX = *arg_8h;\n    in_ECX[1] = arg_8h[1];\n    in_ECX[2] = arg_8h[2];\n    in_ECX[3] = arg_8h[3];\n    in_ECX[4] = arg_8h[4];\n    piVar1 = arg_8h[5];\n    in_ECX[5] = piVar1;\n    *piVar1 = *piVar1 + 1;\n    return;\n}\n",
        "token_count": 149
    },
    "00402032": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402032(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t *arg_1ch)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = arg_8h;\n    in_ECX[1] = arg_ch;\n    in_ECX[2] = arg_10h;\n    in_ECX[3] = arg_14h;\n    in_ECX[4] = arg_18h;\n    in_ECX[5] = arg_1ch;\n    *arg_1ch = *arg_1ch + 1;\n    fcn.0040b1ff();\n    return;\n}\n",
        "token_count": 160
    },
    "004023a4": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004023a4(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint *in_ECX;\n    \n    *in_ECX = 0x49cdd8;\n    piVar1 = *(arg_8h + 4);\n    in_ECX[1] = piVar1;\n    in_ECX[2] = *(arg_8h + 8);\n    in_ECX[3] = *(arg_8h + 0xc);\n    in_ECX[4] = *(arg_8h + 0x10);\n    in_ECX[5] = *(arg_8h + 0x14);\n    if (*piVar1 == 0x7fffffff) {\n        puVar2 = in_ECX;\n        fcn.0040206c(in_ECX);\n        puVar2 = fcn.0041fd5b(4, puVar2);\n        *puVar2 = 1;\n        in_ECX[1] = puVar2;\n    }\n    else {\n        *piVar1 = *piVar1 + 1;\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "00407b21": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00407b21(uint *param_1)\n\n{\n    *param_1 = 0;\n    param_1[1] = 0xffffffff;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    fcn.0040c25d();\n    fcn.0040c25d();\n    param_1[0xd] = 0;\n    param_1[0xe] = 0;\n    param_1[0xf] = 0;\n    param_1[0x10] = 0;\n    param_1[0x11] = 0;\n    param_1[0x12] = 0xffffffff;\n    param_1[0x13] = 0xffffffff;\n    param_1[0x14] = 0;\n    fcn.0040c25d();\n    param_1[0x19] = 0;\n    param_1[0x1a] = 0;\n    param_1[0x1c] = 0;\n    param_1[0x1e] = 0;\n    param_1[0x1f] = 1;\n    *(param_1 + 0x21) = 0xffff;\n    *(param_1 + 0x22) = 0xffff;\n    *(param_1 + 0x8a) = 0xffff;\n    *(param_1 + 0x23) = 0xffff;\n    *(param_1 + 0x8e) = 0xffff;\n    param_1[0x27] = 0xffffffff;\n    param_1[0x20] = 0;\n    *(param_1 + 0x26) = 0;\n    *(param_1 + 0x93) = 0xff;\n    return param_1;\n}\n",
        "token_count": 422
    },
    "0041e3db": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e3db(uint *param_1)\n\n{\n    uint *dwMoveMethod;\n    uint *var_4h;\n    \n    param_1[2] = 0;\n    param_1[3] = 0;\n    dwMoveMethod = param_1;\n    var_4h = param_1;\n    (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(*param_1, 0, 0, &dwMoveMethod, 1);\n    param_1[4] = dwMoveMethod;\n    param_1[5] = var_4h;\n    return;\n}\n",
        "token_count": 137
    },
    "00420cc2": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "print debug messages"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00420cc2(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.00420d15();\n    *param_1 = 0x38;\n    param_1[2] = 0x400000;\n    param_1[1] = 0x400000;\n    param_1[3] = 0xe00;\n    param_1[4] = 0x49fe5c;\n    iVar1 = fcn.0041f8a8();\n    if (iVar1 < 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n        if (iVar1 != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)\n                      (L\"ERROR : Unable to initialize critical section in CAtlBaseModule\\n\");\n        }\n        *0x4d1340 = 1;\n    }\n    return param_1;\n}\n",
        "token_count": 209
    },
    "0046cb55": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046cb55(uint *param_1)\n\n{\n    code *pcVar1;\n    uint *var_8h;\n    uint *var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_SetFilePointerEx;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    var_8h = param_1;\n    var_4h = param_1;\n    (*pcVar1)(*param_1, 0, 0, &var_8h, 1);\n    (*pcVar1)(*param_1, param_1[4] - var_8h, (param_1[5] - var_4h) - (param_1[4] < var_8h), 0, 1);\n    (*pcVar1)(*param_1, 0, 0, &var_8h, 1);\n    param_1[4] = var_8h;\n    param_1[5] = var_4h;\n    return;\n}\n",
        "token_count": 236
    },
    "00470604": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00470604(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00470379(param_1 + 0x14, param_1 + 0x10, param_1 + 0xc, param_1 + 8);\n    if (iVar1 == 0) {\n        fcn.004703f0(4, 0xfffffff4, param_1 + 0x14, param_1 + 0x10);\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "004706de": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004706de(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00470379(param_1 + 0xc, param_1 + 8, param_1 + 0x14, param_1 + 0x10);\n    if (iVar1 == 0) {\n        fcn.004703f0(2, 0xfffffff5, param_1 + 0xc, param_1 + 8);\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00471e01": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00471e01(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_ECX;\n    \n    *arg_8h = *(in_ECX + 8);\n    arg_8h[1] = *(in_ECX + 0xc);\n    piVar1 = *(in_ECX + 0x14);\n    arg_8h[2] = *(in_ECX + 0x10);\n    arg_8h[3] = piVar1;\n    *piVar1 = *piVar1 + 1;\n    return;\n}\n",
        "token_count": 135
    },
    "0048d58d": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048d58d(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t *piStack12;\n    \n    iVar1 = **(arg_8h + 4);\n    fcn.00408e90();\n    puVar2 = *(iVar1 + 8);\n    uStack24 = *puVar2;\n    uStack20 = puVar2[1];\n    uStack16 = puVar2[2];\n    piStack12 = puVar2[3];\n    *piStack12 = *piStack12 + 1;\n    fcn.0046cdb4();\n    fcn.00407c5d(&uStack24);\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 198
    },
    "0048e4b0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048e4b0(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t *piStack12;\n    \n    iVar1 = **(arg_8h + 4);\n    fcn.00408e90();\n    puVar2 = *(iVar1 + 8);\n    uStack24 = *puVar2;\n    uStack20 = puVar2[1];\n    uStack16 = puVar2[2];\n    piStack12 = puVar2[3];\n    *piStack12 = *piStack12 + 1;\n    fcn.0046e9d4();\n    fcn.00407c5d(&uStack24);\n    fcn.0040b1ff();\n    return 0;\n}\n",
        "token_count": 201
    },
    "00405652": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405652(int16_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = 0;\n    uVar1 = in_ECX[1];\n    if (uVar1 != 0) {\n        uVar4 = uVar1;\n        do {\n            uVar4 = uVar4 - 1;\n            iVar5 = 0;\n            iVar3 = 0;\n            if (*arg_8h == 0) {\n                return uVar4;\n            }\n            iVar2 = *arg_8h;\n            do {\n                if (*(*in_ECX + uVar4 * 2) == iVar2) {\n                    iVar3 = iVar3 + 1;\n                }\n                iVar5 = iVar5 + 1;\n                iVar2 = arg_8h[iVar5];\n            } while (iVar2 != 0);\n            if (iVar3 == 0) {\n                return uVar4;\n            }\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < uVar1);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 318
    },
    "0040642a": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040642a(int16_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    uVar5 = 0;\n    uVar1 = in_ECX[1];\n    if (uVar1 != 0) {\n        iVar2 = *arg_8h;\n        uVar4 = uVar1;\n        do {\n            uVar4 = uVar4 - 1;\n            iVar3 = 0;\n            if (iVar2 != 0) {\n                iVar2 = *arg_8h;\n                do {\n                    if (*(*in_ECX + uVar4 * 2) == iVar2) {\n                        return uVar4;\n                    }\n                    iVar3 = iVar3 + 1;\n                    iVar2 = arg_8h[iVar3];\n                } while (iVar2 != 0);\n                iVar2 = *arg_8h;\n            }\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < uVar1);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 276
    },
    "0046b144": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046b144(uint bVk, uint bScan, uint dwFlags)\n\n{\n    int32_t in_ECX;\n    uint pInputs;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    if ((*(in_ECX + 0xc) & 4) == 0) {\n        (*_sym.imp.USER32.dll_keybd_event)(bVk, bScan, dwFlags, 0);\n    }\n    else {\n        var_10h = 0;\n        var_ch = 0;\n        var_18h._0_2_ = bVk;\n        var_18h._2_2_ = bScan;\n        var_14h = dwFlags;\n        pInputs = 1;\n        (*_sym.imp.USER32.dll_SendInput)(1, &pInputs, 0x1c);\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "0046ea9d": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046ea9d(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar3 = 0;\n    uVar4 = 0;\n    if (in_ECX[1] != 0) {\n        iVar1 = *arg_8h;\n        do {\n            iVar2 = 0;\n            if (iVar1 != 0) {\n                iVar1 = *arg_8h;\n                do {\n                    if (*(*in_ECX + iVar3 * 2) == iVar1) {\n                        return iVar3;\n                    }\n                    iVar2 = iVar2 + 1;\n                    iVar1 = arg_8h[iVar2];\n                } while (iVar1 != 0);\n                iVar1 = *arg_8h;\n            }\n            iVar3 = iVar3 + 1;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < in_ECX[1]);\n    }\n    return -1;\n}\n",
        "token_count": 248
    },
    "00441290": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00441290(void)\n\n{\n    *0x4cc950 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 62
    },
    "0041f724": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041f724(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.0040ce67();\n    if (iVar1 < 1) {\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n    }\n    else {\n        uVar2 = (*_sym.imp.WINMM.dll_timeGetTime)();\n        *(in_ECX + 0x2e8) = uVar2;\n        uVar2 = fcn.0040ce67();\n        *(in_ECX + 0x2e0) = uVar2;\n        *(in_ECX + 0xfc) = 2;\n        fcn.0040f060(0);\n    }\n    return 0;\n}\n",
        "token_count": 180
    },
    "004617b8": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004617b8(uint *arg_8h)\n\n{\n    uint uVar1;\n    \n    (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*arg_8h, 0xffffffff);\n    (*_sym.imp.USERENV.dll_UnloadUserProfile)(arg_8h[2], arg_8h[1]);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_8h[2]);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(*arg_8h);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, arg_8h);\n    (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n    return 0;\n}\n",
        "token_count": 159
    },
    "0046afc6": {
        "rules": [
            "delay execution",
            "delay execution",
            "delay execution"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0046afc6(uint32_t param_1)\n\n{\n    double dVar1;\n    double dVar2;\n    int32_t iVar3;\n    float10 fVar4;\n    uint32_t lpPerformanceCount;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (-1 < param_1) {\n        if (param_1 == 0) {\n            param_1 = 0;\n        }\n        else if ((param_1 < 0xf) &&\n                (iVar3 = (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&lpPerformanceCount),  iVar3 != 0)) {\n            _var_8h = param_1;\n            dVar1 = _var_8h;\n            if (param_1 < 0) {\n                _var_8h = _var_8h + *0x4c81d0;\n                dVar1 = _var_8h;\n            }\n            do {\n                (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(&var_10h);\n                _var_8h = CONCAT44((var_ch - var_14h) - (var_10h < lpPerformanceCount), var_10h - lpPerformanceCount);\n                dVar2 = _var_8h;\n                fVar4 = fcn.0041e364();\n            } while (dVar2 / fVar4 < dVar1);\n            return;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(param_1);\n    }\n    return;\n}\n",
        "token_count": 386
    },
    "00490135": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00490135(uint arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    \n    cVar1 = fcn.0048f4b0(arg_8h);\n    if (cVar1 == '\\0') {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    else {\n        (*_sym.imp.USER32.dll_ShowWindow)(**(in_ECX + 0x2ec), 0);\n    }\n    return 0;\n}\n",
        "token_count": 134
    },
    "004651cc": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004651cc(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_8h = NULL;\n    var_4h = NULL;\n    piVar1 = param_1[3];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0x2c))(piVar1, 0xfffffffd, 0, param_1[10], 0xffffffff, *(*param_1 + 0x14), param_1 + 4);\n        if ((*(param_1 + 0x3d) != '\\0') || (*(param_1 + 0xf) != '\\0')) {\n            (***param_1[3])(param_1[3], 0x49fcc4, &var_8h);\n            if (var_8h != NULL) {\n                if (*(param_1 + 0x3d) != '\\0') {\n                    (**(*var_8h + 0x18))(var_8h);\n                }\n                if (*(param_1 + 0xf) != '\\0') {\n                    (**(*var_8h + 0x14))(var_8h);\n                }\n            }\n        }\n        (*_sym.imp.ole32.dll_OleSetContainedObject)(param_1[3], 0);\n        (***param_1[3])(param_1[3], 0x49fce4, &var_4h);\n        if (var_4h != NULL) {\n            (**(*var_4h + 0x1c))(var_4h, 1, 2, 0);\n            (**(*var_4h + 8))(var_4h);\n            var_4h = NULL;\n        }\n        (**(*param_1[3] + 0x50))(param_1[3], param_1[0xe]);\n        (**(*param_1[3] + 0xc))(param_1[3], 0);\n        (**(*param_1[3] + 0x14))(param_1[3], 0x49d0d0, 0);\n        iVar2 = (*_sym.imp.USER32.dll_IsWindow)(param_1[2]);\n        if (iVar2 != 0) {\n            (*_sym.imp.USER32.dll_DestroyWindow)(param_1[2]);\n        }\n        (**(*param_1[3] + 8))(param_1[3]);\n        param_1[3] = 0;\n    }\n    param_1[2] = 0;\n    *(param_1 + 0xf) = 0;\n    if (param_1[0xd] != 0) {\n        fcn.0041fd4d(param_1[0xd]);\n        param_1[0xd] = 0;\n    }\n    if (param_1[0xb] != 0) {\n        fcn.0046503b(param_1[0xb]);\n        param_1[0xb] = 0;\n    }\n    if (param_1[0xc] != 0) {\n        fcn.0041fd4d(param_1[0xc]);\n        param_1[0xc] = 0;\n    }\n    if (param_1[10] != 0) {\n        fcn.0041fd4d(param_1[10]);\n        param_1[10] = 0;\n    }\n    return;\n}\n",
        "token_count": 782
    },
    "00460f58": {
        "rules": [
            "get token privileges/64a4ac2ad8dc404e9f897e2196104caf",
            "get token privileges"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00460f58(uint32_t *arg_8h, uint noname_1, uint *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    bool bVar4;\n    \n    uVar1 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)();\n    bVar4 = uVar1 == 0;\n    uVar2 = uVar1;\n    if (bVar4) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (uVar2 == 0x7a) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, *arg_10h);\n            uVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar3);\n            *arg_8h = uVar2;\n            if (uVar2 != 0) {\n                uVar2 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)();\n                uVar1 = uVar2;\n            }\n        }\n        bVar4 = uVar1 == 0;\n    }\n    return uVar2 & 0xffffff00 | !bVar4;\n}\n",
        "token_count": 272
    },
    "00461747": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00461747(uint *hSourceProcessHandle, uint *lpThreadAttributes, uint *hSourceHandle)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0xc);\n    iVar3 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar2);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetCurrentProcess;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(iVar3, 0, 0, 2);\n    uVar2 = (*pcVar1)(*hSourceProcessHandle, uVar2);\n    (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar2);\n    uVar2 = (*pcVar1)(iVar3 + 8, 0, 0, 2);\n    uVar2 = (*pcVar1)(*hSourceHandle, uVar2);\n    (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar2);\n    *(iVar3 + 4) = *lpThreadAttributes;\n    (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.004617b8, iVar3, 0, 0);\n    return;\n}\n",
        "token_count": 287
    },
    "00470862": {
        "rules": [
            "create thread",
            "create thread"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00470862(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t lpThreadId;\n    \n    if (*(param_1 + 0x34) == 0) {\n        lpThreadId = param_1;\n        uVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00470848, param_1, 0, &lpThreadId);\n        *(param_1 + 0x34) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "0047281c": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047281c(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t in_ECX;\n    uint32_t in_EDX;\n    uint32_t uVar2;\n    uint var_dch;\n    \n    fcn.0047266c();\n    fcn.004726b0(arg_8h);\n    uVar2 = 0;\n    if (in_EDX != 0) {\n        do {\n            uVar1 = fcn.004727f0();\n            *(uVar2 + in_ECX) = *(uVar2 + in_ECX) ^ uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < in_EDX);\n    }\n    return;\n}\n",
        "token_count": 169
    },
    "0047d71c": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047d71c(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar1 = *(arg_8h + 8);\n    uVar2 = fcn.0040ce67();\n    uVar4 = 1;\n    if (1 < uVar1) {\n        do {\n            uVar3 = fcn.0040ce67();\n            uVar2 = uVar2 ^ uVar3;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < uVar1);\n    }\n    fcn.0040e8a0();\n    *arg_ch = uVar2;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 197
    },
    "0046ea3e": {
        "rules": [
            "open process"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046ea3e(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpdwResult;\n    uint lpdwProcessId;\n    \n    lpdwResult = param_1;\n    lpdwProcessId = param_1;\n    (*_sym.imp.USER32.dll_PostMessageW)(param_1, 0x10, 0, 0);\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageTimeoutW)(param_1, 0x10, 0, 0, 2, 500, &lpdwResult);\n    if (iVar1 == 0) {\n        (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(param_1, &lpdwProcessId);\n        uVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1f0fff, 0, lpdwProcessId);\n        (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar2, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar2);\n    }\n    return;\n}\n",
        "token_count": 246
    },
    "00402331": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402331(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint *in_ECX;\n    uint32_t uVar3;\n    uint unaff_EDI;\n    uint32_t uVar4;\n    \n    *in_ECX = 0x49cde8;\n    uVar4 = *(arg_8h + 8);\n    in_ECX[2] = uVar4;\n    if (uVar4 == 0) {\n        in_ECX[3] = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        uVar3 = 8;\n        if (7 < uVar4) {\n            uVar3 = uVar4;\n        }\n        in_ECX[3] = uVar3;\n        uVar1 = fcn.0041fd8b(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        uVar4 = 0;\n        in_ECX[1] = uVar1;\n        if (in_ECX[2] != 0) {\n            do {\n                puVar2 = fcn.0041fd5b(4, unaff_EDI);\n                *puVar2 = **(*(arg_8h + 4) + uVar4 * 4);\n                *(in_ECX[1] + uVar4 * 4) = puVar2;\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < in_ECX[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "004030e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004030e0(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            fcn.0041fd4d(*(*(param_1 + 4) + uVar1 * 4));\n            *(*(param_1 + 4) + uVar1 * 4) = 0;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(param_1 + 8));\n    }\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 149
    },
    "00403109": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403109(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            fcn.0041fd4d(*(*(param_1 + 4) + uVar1 * 4));\n            *(*(param_1 + 4) + uVar1 * 4) = 0;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(param_1 + 8));\n    }\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 148
    },
    "00403139": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403139(int32_t param_1)\n\n{\n    while (*(param_1 + 0x164) != 0) {\n        fcn.00404271();\n    }\n    fcn.004030e0();\n    while (*(param_1 + 0x170) != 0) {\n        fcn.00485538();\n    }\n    while (*(param_1 + 0x18c) != 0) {\n        fcn.00466f80();\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "004031ed": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004031ed(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    fcn.00403207();\n    for (piVar2 = *(param_1 + 0x440); piVar2 != NULL; piVar2 = piVar2[1]) {\n        iVar1 = *piVar2;\n        if (*(iVar1 + 0x20) != 0) {\n            fcn.00470889();\n        }\n        if (*(iVar1 + 0x24) != 0) {\n            fcn.00470889();\n        }\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "00403207": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403207(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    for (iVar1 = *(param_1 + 4); iVar1 != 0; iVar1 = *(iVar1 + 4)) {\n        fcn.0047d16f();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "0040324f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040324f(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 != 0) {\n        fcn.004030f6(*param_1);\n    }\n    fcn.004082a1();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    iVar1 = 0;\n    do {\n        if (param_1[iVar1 * 2 + 3] != 0) {\n            (*_sym.imp.KERNEL32.dll_VirtualFreeEx)(param_1[iVar1 * 2 + 2], param_1[iVar1 * 2 + 3], 0, 0x8000);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(param_1[iVar1 * 2 + 2]);\n        }\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x10);\n    return;\n}\n",
        "token_count": 232
    },
    "0040329e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040329e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    do {\n        iVar1 = *(param_1 + 4 + iVar2 * 8);\n        if (iVar1 != 0) {\n            (*_sym.imp.KERNEL32.dll_VirtualFreeEx)(*(param_1 + iVar2 * 8), iVar1, 0, 0x8000);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + iVar2 * 8));\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x10);\n    return;\n}\n",
        "token_count": 160
    },
    "004034ba": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004034ba(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = param_1 + 4;\n    iVar2 = 0x10;\n    do {\n        *puVar1 = 0;\n        puVar1 = puVar1 + 2;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return param_1;\n}\n",
        "token_count": 107
    },
    "00403555": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00403555(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    uint32_t uVar3;\n    uint16_t in_CX;\n    uint8_t uVar4;\n    int32_t arg_8h_00;\n    uint var_4h;\n    \n    fcn.0040bfbf();\n    uVar4 = 0;\n    arg_8h_00 = *arg_ch;\n    while( true ) {\n        puVar2 = fcn.004058ca(arg_8h_00);\n        uVar1 = *puVar2;\n        if ((uVar1 == 0) || (uVar4 != 0)) break;\n        if (uVar1 == in_CX) {\n            uVar4 = 1;\n        }\n        else {\n            fcn.004051ec(uVar1);\n            arg_8h_00 = *arg_ch;\n        }\n        arg_8h_00 = arg_8h_00 + 1;\n        *arg_ch = arg_8h_00;\n    }\n    uVar3 = CONCAT31(uVar1 >> 8, 1);\n    if (in_CX != 0) {\n        uVar3 = uVar1 & 0xff00 | uVar4;\n    }\n    return uVar3;\n}\n",
        "token_count": 308
    },
    "00403a26": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403a26(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    uint extraout_ECX;\n    char extraout_DL;\n    char cVar2;\n    \n    arg_8h_00 = *arg_8h;\n    do {\n        *arg_8h = arg_8h_00 + 1;\n        iVar1 = fcn.004041dc(arg_8h_00);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        cVar2 = extraout_DL;\n        if ((*(**(iVar1 + 4) + 2) == 0) && (***(iVar1 + 4) == 0x21)) {\n            cVar2 = '\\x01';\n        }\n        arg_8h_00 = arg_8h_00 + 1;\n        *0x4d1528 = extraout_ECX;\n    } while (cVar2 == '\\0');\n    return 0;\n}\n",
        "token_count": 231
    },
    "004041ff": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004041ff(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    \n    arg_8h = *(param_1 + 4);\n    if (arg_8h != 0) {\n        do {\n            iVar1 = *(arg_8h + 4);\n            fcn.0041fd4d(arg_8h);\n            arg_8h = iVar1;\n        } while (iVar1 != 0);\n        return;\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "0040528d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040528d(uint *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    do {\n        iVar1 = fcn.004251c2(*(iVar2 * 4 + 0x4b1390), *param_1);\n        if (iVar1 == 0) {\n            return iVar2;\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x2d);\n    return -1;\n}\n",
        "token_count": 122
    },
    "00406633": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00406633(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    *0x4d18cc = 2;\n    *0x4d18b8 = 0;\n    *0x4d18bc = 0;\n    *0x4d18b0 = 1;\n    *0x4d18b4 = 1;\n    *0x4d18c0 = 0;\n    *0x4d18c8 = 1;\n    *0x4d18d0 = 0;\n    *0x4d18d4 = 0;\n    *0x4d18d8 = 0xffffffff;\n    *0x4d18dc = 0;\n    *0x4d18e0 = 0;\n    *0x4d18e4 = 0;\n    *0x4d18e8 = 0;\n    fcn.0040c25d();\n    iVar2 = 3;\n    *0x4d18c4 = 0x7c;\n    *0x4d190c = 0x49ce08;\n    *0x4d1910 = 0;\n    *0x4d1914 = 0;\n    *0x4d1918 = 0;\n    *0x4d191c = 0xffffffff;\n    *0x4d1920 = 0x49cde8;\n    *0x4d1924 = 0;\n    *0x4d1928 = 0;\n    *0x4d192c = 0;\n    *0x4d1930 = 3;\n    *0x4d1934 = 2;\n    *0x4d1938 = 0;\n    *0x4d193c = 0;\n    *0x4d1940 = 0;\n    *0x4d1944 = 0xffffffff;\n    *0x4d1948 = 0xffffffff;\n    *0x4d197c = 0;\n    *0x4d1980 = 0;\n    *0x4d1984 = 0;\n    *0x4d1988 = 0xffffffff;\n    *0x4d18c6 = 0;\n    cVar1 = fcn.0040597b();\n    if (cVar1 != '\\0') {\n        *0x4d18c8 = 2;\n        *0x4d18cc = 1;\n    }\n    var_4h = 0;\n    do {\n        fcn.00406b97(&var_4h);\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return 0x4d18b0;\n}\n",
        "token_count": 620
    },
    "00408fd0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408fd0(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint32_t arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    iVar3 = 0;\n    while( true ) {\n        arg_8h_00 = *(arg_8h + iVar4 * 2);\n        iVar2 = fcn.0042632e(arg_8h_00);\n        if (iVar2 == 0) break;\n        iVar2 = fcn.00426355(arg_8h_00);\n        if (iVar2 == 0) break;\n        iVar4 = iVar4 + 1;\n    }\n    for (; iVar1 = *(arg_8h + iVar4 * 2),  iVar1 != 0; iVar4 = iVar4 + 1) {\n        *(arg_8h + iVar3 * 2) = iVar1;\n        iVar3 = iVar3 + 1;\n    }\n    *(arg_8h + iVar3 * 2) = 0;\n    return;\n}\n",
        "token_count": 254
    },
    "004090bd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004090bd(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.004248f3(arg_8h);\n    if (iVar1 != 0) {\n        do {\n            iVar1 = iVar1 + -1;\n            if (iVar1 < 0) break;\n            iVar2 = fcn.00408f0a();\n        } while (iVar2 != 0);\n        *(arg_8h + 2 + iVar1 * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "0040ab22": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040ab22(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (param_1 < 0xffffffe1) {\n        if (param_1 == 0) {\n            param_1 = 1;\n        }\n        do {\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x4d1300, 0, param_1);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar1 = fcn.00424f33();\n        } while ((iVar1 != 0) && (iVar1 = fcn.00424e3d(param_1),  iVar1 != 0));\n    }\n    puVar2 = fcn.0042f269();\n    *puVar2 = 0xc;\n    return 0;\n}\n",
        "token_count": 196
    },
    "0040b126": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.0040b126(uint arg_8h, uint32_t *arg_ch)\n\n{\n    bool bVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_1h;\n    \n    fcn.0040b38e();\n    puVar2 = arg_ch;\n    uVar4 = 0;\n    bVar1 = false;\n    if (*arg_ch != 0) {\n        do {\n            iVar3 = fcn.0040b3b0(&arg_ch, 1);\n            if (iVar3 == 0) {\n                if (!bVar1) {\n                    return 0;\n                }\n                break;\n            }\n            bVar1 = true;\n            fcn.0040b471(arg_ch);\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < *puVar2);\n    }\n    *puVar2 = uVar4;\n    return 1;\n}\n",
        "token_count": 236
    },
    "0040b66c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040b66c(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_28h;\n    int32_t var_4h;\n    \n    puVar3 = L\"0123456789ABCDEF\";\n    puVar4 = &var_28h;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_4h = in_EDX;\n    *puVar4 = *puVar3;\n    for (iVar2 = in_EDX + -1; -1 < iVar2; iVar2 = iVar2 + -1) {\n        uVar1 = arg_8h & 0xf;\n        arg_8h = arg_8h >> 4 | arg_ch << 0x1c;\n        arg_ch = arg_ch >> 4;\n        *(in_ECX + iVar2 * 2) = *(&var_28h + uVar1 * 2);\n        in_EDX = var_4h;\n    }\n    *(in_ECX + in_EDX * 2) = 0;\n    if ((arg_8h | arg_ch) == 0) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 358
    },
    "0040c58d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c58d(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h, int32_t *arg_14h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    *arg_ch = *arg_ch + 1;\n    iVar4 = 0;\n    iVar3 = *arg_ch;\n    *arg_10h = iVar3;\n    iVar2 = *(arg_8h + 4);\n    do {\n        iVar1 = *(*(iVar2 + iVar3 * 4) + 8);\n        if (iVar1 == 0x47) {\n            iVar4 = iVar4 + 1;\n        }\n        else if (iVar1 == 0x48) {\n            if (iVar4 == 0) {\n                *arg_14h = iVar3;\n                *arg_ch = iVar3 + 1;\n                return 0;\n            }\n            iVar4 = iVar4 + -1;\n        }\n        else if (iVar1 == 0x7f) {\n            fcn.004734ba(0x6f, *(*(iVar2 + -4 + iVar3 * 4) + 10));\n            return 0xffffffff;\n        }\n        iVar3 = iVar3 + 1;\n        *arg_ch = iVar3;\n    } while( true );\n}\n",
        "token_count": 312
    },
    "0041a4d7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a4d7(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h_00;\n    uint *puVar2;\n    uint *arg_8h_01;\n    \n    puVar2 = arg_8h[0x72];\n    arg_8h_01 = arg_8h[0x72];\n    while (arg_8h_01 != NULL) {\n        if ((arg_ch == 0) || (arg_8h_01 == *(arg_ch + 0x80))) {\n            arg_8h_00 = arg_8h_01[1];\n            while (arg_8h_00 != 0) {\n                iVar1 = *(arg_8h_00 + 4);\n                fcn.0041fd4d(arg_8h_00);\n                arg_8h_00 = iVar1;\n            }\n            if ((arg_8h_01 == arg_8h[0x72]) || (*puVar2 == arg_8h[0x72])) {\n                arg_8h[0x72] = *arg_8h_01;\n            }\n            else {\n                *puVar2 = *arg_8h_01;\n            }\n            fcn.0041fd4d(arg_8h_01);\n            if (arg_ch != 0) break;\n        }\n        if (arg_ch == 0) {\n            puVar2 = arg_8h[0x72];\n            arg_8h_01 = arg_8h[0x72];\n        }\n        else {\n            puVar2 = arg_8h_01;\n            arg_8h_01 = *arg_8h_01;\n        }\n    }\n    (*_sym.imp.USER32.dll_InvalidateRect)(*arg_8h, 0, 1);\n    return;\n}\n",
        "token_count": 419
    },
    "0041a585": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041a585(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0xe;\n    do {\n        fcn.0040b1ff();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0041fd4d(param_1);\n    return param_1;\n}\n",
        "token_count": 106
    },
    "0041e2bf": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e2bf(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.00441f20(arg_8h, arg_ch, 0x100, 0);\n    *arg_10h = iVar1;\n    for (iVar1 = *(*(in_ECX + 0x14) + iVar1 * 4);\n        (iVar1 != 0 && ((*(iVar1 + 0x20) != arg_8h || (*(iVar1 + 0x24) != arg_ch)))); iVar1 = *(iVar1 + 4)) {\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "0041e48c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e48c(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_20h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_10h = *0x4d135c;\n    var_4h = 1;\n    fcn.0040b606(L\"@EXITCODE\");\n    fcn.0040c28f(&var_20h, &var_10h, 1);\n    fcn.0040b1ff();\n    uVar1 = *0x4d1350;\n    fcn.0040e8a0();\n    var_4h = 1;\n    var_10h = uVar1;\n    fcn.0040b606(0x49d12c);\n    fcn.0040c28f(&var_20h, &var_10h, 1);\n    fcn.0040b1ff();\n    *(param_1 + 0xfc) = 0;\n    puVar3 = *(param_1 + 0x134);\n    *0x4d1367 = 0;\n    for (; puVar3 != NULL; puVar3 = puVar3[2]) {\n        iVar2 = fcn.004025c1(*puVar3);\n        if (iVar2 != 0) {\n            fcn.004738e9(*(iVar2 + 0x10) + 1, 1);\n        }\n    }\n    *(param_1 + 0xfc) = 1;\n    fcn.0040e8a0();\n    return;\n}\n",
        "token_count": 385
    },
    "0041ed18": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ed18(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint32_t uVar6;\n    uint var_4h;\n    \n    uVar6 = 0;\n    if ((*arg_8h != 0) && (uVar1 = *(in_ECX + 100),  uVar1 != 0)) {\n        do {\n            puVar2 = **(*(in_ECX + 0x60) + uVar6 * 4);\n            if (puVar2 != NULL) {\n                if ((puVar2[0x73] != 0) && (piVar3 = *(puVar2[0x73] + 0x10),  piVar3 != NULL)) {\n                    iVar5 = (**(*piVar3 + 0x14))(piVar3, arg_8h);\n                    if (iVar5 == 0) {\n                        return 1;\n                    }\n                    iVar4 = (*_sym.imp.USER32.dll_GetClassLongW)(*arg_8h, 0xffffffe0);\n                    if ((iVar4 != *0x4d1394) && (iVar4 != *0x4d1354)) {\n                        return 0;\n                    }\n                }\n                iVar5 = (*_sym.imp.USER32.dll_IsDialogMessageW)(*puVar2, arg_8h);\n                if (iVar5 != 0) {\n                    return 1;\n                }\n            }\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < uVar1);\n    }\n    return 0;\n}\n",
        "token_count": 387
    },
    "0041fd8b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041fd8b(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar auStack20 [8];\n    uint uStack12;\n    \n    do {\n        uStack12 = 0x41fd75;\n        iVar2 = fcn.0042e99c();\n        if (iVar2 != 0) {\n            return;\n        }\n        uStack12 = 0x41fd68;\n        iVar2 = fcn.00424e3d(param_1);\n    } while (iVar2 != 0);\n    if (param_1 != -1) {\n        fcn.0042051c();\n        fcn.00423234(auStack20, 0x4c86f4);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.0042054f();\n    fcn.00423234(auStack20, 0x4c8748);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 239
    },
    "00460fb8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00460fb8(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    param_1[1] = 4;\n    param_1[2] = 0;\n    fcn.0046156f();\n    iVar1 = fcn.0041fd8b(-(param_1[1] * 4 >> 0x20 != 0) | param_1[1] * 4);\n    *param_1 = iVar1;\n    if (param_1[1] != 0) {\n        do {\n            *(*param_1 + uVar2 * 4) = *(uVar2 * 4 + 0x4d0350);\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < param_1[1]);\n    }\n    return param_1;\n}\n",
        "token_count": 211
    },
    "004620a3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004620a3(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_8c8h;\n    uint var_c8h;\n    uint var_c0h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_8h;\n    uint lParam;\n    \n    iVar3 = 0;\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x1004, 0, 0);\n    fcn.004034ba();\n    lParam = fcn.0046b248(0x34, *in_ECX);\n    var_28h = fcn.0046b248(0x800, *in_ECX);\n    var_34h = arg_ch;\n    var_24h = 0x400;\n    var_8h = var_28h;\n    fcn.0046b321(&var_3ch, lParam, 0x34);\n    if (0 < iVar1) {\n        do {\n            (*_sym.imp.USER32.dll_SendMessageW)(*in_ECX, 0x1073, iVar3, lParam);\n            fcn.0046b2ec(var_8h, &var_8c8h, 0x800);\n            var_c8h._0_2_ = 0;\n            iVar2 = fcn.004249b8(&var_8c8h, *arg_8h);\n            if (iVar2 == 0) break;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar1);\n    }\n    if (iVar3 == iVar1) {\n        iVar3 = -1;\n    }\n    fcn.0040329e();\n    return iVar3;\n}\n",
        "token_count": 439
    },
    "004623b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004623b0(uint *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    arg_ch = 0;\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageW)(*param_1, 0x1004, 0, 0);\n    var_4h = param_1;\n    if (0 < iVar1) {\n        do {\n            iVar2 = (*_sym.imp.USER32.dll_SendMessageW)(*param_1, 0x102c, arg_ch, 2);\n            var_4h = var_4h & 0xffffff00 | 1 - (iVar2 != 0);\n            fcn.0046231f(var_4h, arg_ch, arg_ch);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < iVar1);\n    }\n    return 1;\n}\n",
        "token_count": 219
    },
    "0046289c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046289c(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    int32_t iVar4;\n    uint uVar5;\n    \n    iVar2 = fcn.004627af(arg_8h);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (iVar2 != 0) {\n        iVar4 = 0;\n        iVar3 = iVar2;\n        if (*(arg_8h + 4) == 0) goto code_r0x004628d0;\n        uVar5 = 4;\n        while( true ) {\n            iVar3 = (*pcVar1)(*in_ECX, 0x110a, uVar5, iVar3);\ncode_r0x004628d0:\n            iVar2 = iVar4;\n            if (iVar3 == 0) break;\n            iVar4 = iVar2 + 1;\n            uVar5 = 1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 238
    },
    "00462d32": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00462d32(int32_t param_1, int32_t param_2)\n\n{\n    do {\n        param_1 = (*_sym.imp.USER32.dll_GetParent)(param_1);\n        if (param_1 == 0) {\n            return 0;\n        }\n    } while (param_1 != param_2);\n    return 1;\n}\n",
        "token_count": 84
    },
    "00463a47": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00463a47(uint *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = *param_1;\n    uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar3, 0xfffffff0);\n    while( true ) {\n        if ((uVar1 & 0x40000000) == 0) {\n            return uVar3;\n        }\n        iVar2 = fcn.00463a81();\n        if (iVar2 == 0) break;\n        uVar3 = fcn.00463a81();\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowLongW)(uVar3, 0xfffffff0);\n    }\n    return uVar3;\n}\n",
        "token_count": 182
    },
    "00463ee6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463ee6(uint *param_1)\n\n{\n    int16_t *piVar1;\n    uint16_t *puVar2;\n    int32_t arg_8h;\n    uint var_10h;\n    \n    fcn.0040c25d();\n    arg_8h = 0;\n    while( true ) {\n        piVar1 = fcn.0040660f(arg_8h);\n        if (*piVar1 == 0) break;\n        piVar1 = fcn.0040660f(arg_8h);\n        if (*piVar1 == 0x3b) {\n            fcn.004051ec(0x3b);\n        }\n        puVar2 = fcn.0040660f(arg_8h);\n        fcn.004051ec(*puVar2);\n        arg_8h = arg_8h + 1;\n    }\n    if (param_1 != &var_10h) {\n        fcn.0040c1c3(&var_10h);\n    }\n    fcn.0040b1ff();\n    return;\n}\n",
        "token_count": 244
    },
    "00465f0d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00465f0d(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint pvargDest;\n    uint var_ch;\n    uint var_8h;\n    \n    *in_ECX = 0x4c5fe0;\n    in_ECX[1] = 1;\n    in_ECX[4] = 0;\n    fcn.004119e0(&arg_ch);\n    in_ECX[6] = 0x4af374;\n    in_ECX[7] = 0;\n    in_ECX[8] = 0;\n    in_ECX[9] = 0;\n    in_ECX[10] = arg_8h;\n    in_ECX[0xb] = *(arg_8h + 8);\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n    var_ch = 0;\n    var_8h = 0;\n    iVar1 = 9;\n    do {\n        fcn.00466218(&pvargDest);\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n    fcn.0040e8a0();\n    return;\n}\n",
        "token_count": 297
    },
    "00465f91": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00465f91(uint *param_1)\n\n{\n    int32_t *piVar1;\n    uint *arg_8h;\n    uint32_t uVar2;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t iVar3;\n    \n    uVar2 = param_1[0xb];\n    *param_1 = 0x4c5fe0;\n    for (; iVar3 = param_1[10],  uVar2 < *(iVar3 + 8) - 1U; uVar2 = uVar2 + 1) {\n        **(*(param_1[10] + 4) + uVar2 * 4) = **(*(param_1[10] + 4) + 4 + uVar2 * 4);\n    }\n    *(iVar3 + 8) = *(iVar3 + 8) + -1;\n    fcn.0041fd4d(*(*(iVar3 + 4) + *(iVar3 + 8) * 4));\n    *(*(iVar3 + 4) + *(iVar3 + 8) * 4) = 0;\n    fcn.004661d4();\n    param_1[6] = 0x4af374;\n    fcn.004661d4();\n    fcn.0041fd94(param_1[7]);\n    piVar1 = param_1 + 2;\n    arg_8h = param_1[4];\n    if (arg_8h == NULL) {\n        iVar3 = param_1[5];\n    }\n    else {\n        *arg_8h[3] = *arg_8h[3] + -1;\n        if (*arg_8h[3] == 0) {\n            fcn.0041fd94(*arg_8h, unaff_EDI, unaff_ESI);\n            fcn.0041fd4d(arg_8h[3]);\n        }\n        fcn.0041fd4d(arg_8h);\n        param_1[4] = 0;\n        iVar3 = param_1[5];\n    }\n    if (iVar3 < 5) goto code_r0x0040e8b3;\n    switch(iVar3) {\n    case 5:\n        iVar3 = *piVar1;\n        if (iVar3 == 0) goto code_r0x0040e8b3;\n        fcn.0041d593();\n        break;\n    default:\n        goto code_r0x0040e8b3;\n    case 8:\n        if (*piVar1 == 0) goto code_r0x0040e8b3;\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*piVar1);\n        iVar3 = *piVar1;\n        break;\n    case 10:\n        iVar3 = *piVar1;\n        if (iVar3 == 0) goto code_r0x0040e8b3;\n        fcn.0040b1ff();\n        break;\n    case 0xb:\n        fcn.0041fd94(*(*piVar1 + 4), unaff_EDI, unaff_ESI);\n        fcn.0041fd4d(*piVar1);\n        goto code_r0x0040e8b3;\n    case 0xc:\n        if (*piVar1 != 0) {\n            fcn.0045fc42(*piVar1);\n        }\n        goto code_r0x0040e8b3;\n    case 0xd:\n    case 0xe:\n        iVar3 = *piVar1;\n        if (iVar3 == 0) goto code_r0x0040e8b3;\n        fcn.0040b1ff();\n        break;\n    case 0xf:\n        if (*piVar1 != NULL) {\n            (****piVar1)(1);\n        }\n        goto code_r0x0040e8b3;\n    }\n    fcn.0041fd4d(iVar3);\ncode_r0x0040e8b3:\n    param_1[5] = 1;\n    *piVar1 = 0;\n    return;\n}\n",
        "token_count": 913
    },
    "00466054": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466054(uint noname_0, uint noname_1, uint *arg_10h, uint noname_3, uint noname_4, uint32_t *arg_1ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint var_10h;\n    uint var_ch;\n    \n    if ((arg_10h != NULL) && (arg_1ch != NULL)) {\n        fcn.0040b606(*arg_10h);\n        fcn.0040c7c9();\n        (*_sym.imp.USER32.dll_CharUpperBuffW)(var_10h, var_ch);\n        uVar2 = 0;\n        do {\n            cVar1 = fcn.00465ec4();\n            if (cVar1 != '\\0') {\n                *arg_1ch = uVar2;\n                fcn.0040b1ff();\n                return 0;\n            }\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0xc);\n        fcn.0040b1ff();\n    }\n    return 0x80020006;\n}\n",
        "token_count": 253
    },
    "004661d4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004661d4(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            iVar1 = *(param_1 + 4);\n            arg_8h = *(iVar1 + uVar2 * 4);\n            if (arg_8h != 0) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(arg_8h);\n                *(arg_8h + 8) = 0;\n                *(arg_8h + 0xc) = 0;\n                fcn.0041fd4d(arg_8h);\n                iVar1 = *(param_1 + 4);\n            }\n            *(iVar1 + uVar2 * 4) = 0;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *(param_1 + 8));\n    }\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 250
    },
    "00466f23": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00466f23(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            iVar2 = *(param_1 + 4);\n            iVar1 = *(iVar2 + uVar3 * 4);\n            if (iVar1 != 0) {\n                fcn.004024b5(iVar1);\n                iVar2 = *(param_1 + 4);\n            }\n            *(iVar2 + uVar3 * 4) = 0;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *(param_1 + 8));\n    }\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 194
    },
    "00466f52": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00466f52(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            fcn.0041fd4d(*(*(param_1 + 4) + uVar1 * 4));\n            *(*(param_1 + 4) + uVar1 * 4) = 0;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(param_1 + 8));\n    }\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 149
    },
    "0046784b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046784b(uint lpString2, uint *arg_ch, int16_t *arg_10h)\n\n{\n    int16_t *piVar1;\n    int64_t iVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    int16_t *lpString2_00;\n    int32_t iVar5;\n    \n    *arg_ch = 4;\n    iVar3 = fcn.00468cd3(lpString2);\n    *arg_10h = iVar3;\n    if (iVar3 == -1) {\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2);\n        iVar2 = (iVar4 + 1) * 2;\n        lpString2_00 = fcn.0041fd8b(-(iVar2 >> 0x20 != 0) | iVar2);\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)(lpString2_00, lpString2);\n        lpString2_00[iVar4] = 0;\n        iVar4 = 0;\n        iVar3 = *lpString2_00;\n        piVar1 = lpString2_00;\n        while (iVar3 != 0) {\n            if (iVar3 == 0x3a) {\n                iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(piVar1 + 1, 0x4c6064);\n                if (iVar5 == 0) {\n                    *arg_ch = 1;\n                }\n                lpString2_00[iVar4] = 0;\n                iVar3 = fcn.00468cd3(lpString2_00);\n                *arg_10h = iVar3;\n                break;\n            }\n            iVar4 = iVar4 + 1;\n            piVar1 = lpString2_00 + iVar4;\n            iVar3 = *piVar1;\n        }\n        fcn.0041fd94(lpString2_00);\n    }\n    return;\n}\n",
        "token_count": 429
    },
    "0046790a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046790a(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar2 = *arg_8h;\n    piVar1 = arg_8h;\n    while (iVar2 != 0) {\n        if (arg_ch == 0) {\n            if (*piVar1 == 0x2e) {\n                *piVar1 = 0x2c;\n            }\n        }\n        else if (*piVar1 == 0x2c) {\n            *piVar1 = 0x2e;\n        }\n        iVar3 = iVar3 + 1;\n        piVar1 = arg_8h + iVar3;\n        iVar2 = *piVar1;\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "00468d7c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00468d7c(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            fcn.0041fd4d(*(*(param_1 + 4) + uVar1 * 4));\n            *(*(param_1 + 4) + uVar1 * 4) = 0;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *(param_1 + 8));\n    }\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 150
    },
    "004698c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004698c0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (((*0x4d2398 == 0) || (*0x4d23a0 < arg_8h)) || (arg_8h < 1)) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        arg_8h = arg_8h + -1;\n        iVar1 = *0x4d2398;\n        if (0 < arg_8h) {\n            do {\n                iVar1 = *(iVar1 + 0xc);\n                arg_8h = arg_8h + -1;\n            } while (arg_8h != 0);\n        }\n        uVar2 = *(iVar1 + 4);\n    }\n    return uVar2;\n}\n",
        "token_count": 189
    },
    "004698f4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004698f4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (((*0x4d2398 == 0) || (*0x4d23a0 < arg_8h)) || (arg_8h < 1)) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        arg_8h = arg_8h + -1;\n        iVar1 = *0x4d2398;\n        if (0 < arg_8h) {\n            do {\n                iVar1 = *(iVar1 + 0xc);\n                arg_8h = arg_8h + -1;\n            } while (arg_8h != 0);\n        }\n        uVar2 = *(iVar1 + 8);\n    }\n    return uVar2;\n}\n",
        "token_count": 189
    },
    "0046a242": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046a242(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t iVar1;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint *arg_8h_00;\n    uint *in_stack_ffffffd8;\n    int32_t arg_8h_01;\n    uint noname_3;\n    uint var_ch;\n    uint in_stack_fffffff4;\n    uint in_stack_fffffff8;\n    \n    if (0 < arg_ch) {\n        fcn.00469b24();\n        arg_8h_01 = 0x46a264;\n        noname_3 = arg_8h;\n        fcn.0046b198(arg_8h);\n        iVar1 = arg_ch;\n        if (var_ch != -1) {\n            arg_8h_01 = &fcn.0046a242::var_ch + 1;\n            fcn.00469eaf(arg_8h_01);\n            in_stack_ffffffd8 = in_ECX + 0x14;\n            fcn.0046abf8(in_stack_ffffffd8);\n        }\n        do {\n            arg_8h_00 = &fcn.0046a242::var_ch;\n            fcn.0046a975(arg_8h_00, in_stack_ffffffd8, arg_8h_01, noname_3, unaff_EBX, unaff_EDI, unaff_ESI, var_ch, \n                         in_stack_fffffff4, in_stack_fffffff8, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, \n                         in_stack_0000000c, in_stack_00000010, in_stack_00000014, in_stack_00000018, in_stack_0000001c, \n                         in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c, in_stack_00000030, \n                         in_stack_00000034, in_stack_00000038, in_stack_0000003c, in_stack_00000040, in_stack_00000044, \n                         in_stack_00000048, in_stack_0000004c);\n            in_stack_ffffffd8 = &fcn.0046a242::var_ch;\n            fcn.0046aaba(in_stack_ffffffd8, arg_8h_00, in_stack_ffffffd8, arg_8h_01, noname_3, unaff_EBX, unaff_EDI, \n                         unaff_ESI, var_ch, in_stack_fffffff4, in_stack_fffffff8, unaff_EBP, unaff_retaddr, arg_8h, \n                         arg_ch, in_stack_0000000c, in_stack_00000010, in_stack_00000014, in_stack_00000018, \n                         in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c, \n                         in_stack_00000030, in_stack_00000034, in_stack_00000038, in_stack_0000003c, in_stack_00000040, \n                         in_stack_00000044, in_stack_00000048);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n        if (var_ch != -1) {\n            fcn.0046add8(in_ECX + 0x14);\n        }\n    }\n    return;\n}\n",
        "token_count": 989
    },
    "0046a8a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0046a8a0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint *arg_8h_00;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t iVar1;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint *arg_8h_01;\n    uint *noname_1;\n    uint *arg_8h_02;\n    uint noname_3;\n    uint var_14h;\n    uint in_stack_ffffffec;\n    uint in_stack_fffffff0;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (0 < arg_ch) {\n        fcn.00469b24();\n        noname_3 = arg_8h;\n        fcn.0046b1fd(arg_8h);\n        var_8h = 0;\n        var_4h = var_4h._2_2_ << 0x10;\n        arg_8h_02 = &var_8h;\n        fcn.00469eaf(arg_8h_02);\n        arg_8h_00 = in_ECX + 0x14;\n        noname_1 = arg_8h_00;\n        fcn.0046abf8(arg_8h_00);\n        iVar1 = arg_ch;\n        do {\n            arg_8h_01 = &var_14h;\n            fcn.0046a975(arg_8h_01, noname_1, arg_8h_02, noname_3, unaff_EBX, unaff_EDI, unaff_ESI, var_14h, \n                         in_stack_ffffffec, in_stack_fffffff0, var_8h, var_4h, unaff_EBP, unaff_retaddr, arg_8h, arg_ch\n                         , in_stack_0000000c, in_stack_00000010, in_stack_00000014, in_stack_00000018, in_stack_0000001c\n                         , in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c, in_stack_00000030\n                         , in_stack_00000034, in_stack_00000038, in_stack_0000003c, in_stack_00000040, in_stack_00000044\n                        );\n            noname_1 = &var_14h;\n            fcn.0046aaba(noname_1, arg_8h_01, noname_1, arg_8h_02, noname_3, unaff_EBX, unaff_EDI, unaff_ESI, var_14h, \n                         in_stack_ffffffec, in_stack_fffffff0, var_8h, var_4h, unaff_EBP, unaff_retaddr, arg_8h, arg_ch\n                         , in_stack_0000000c, in_stack_00000010, in_stack_00000014, in_stack_00000018, in_stack_0000001c\n                         , in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c, in_stack_00000030\n                         , in_stack_00000034, in_stack_00000038, in_stack_0000003c, in_stack_00000040);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n        fcn.0046add8(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 1001
    },
    "0046b3d3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046b3d3(uint arg_8h, uint32_t *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    \n    uVar2 = fcn.00408273(arg_8h);\n    *arg_ch = uVar2 & 0xff;\n    iVar3 = *(*(in_ECX + 0x14) + (uVar2 & 0xff) * 4);\n    while( true ) {\n        if (iVar3 == 0) {\n            return 0;\n        }\n        cVar1 = fcn.004082dc();\n        if (cVar1 != '\\0') break;\n        iVar3 = *(iVar3 + 4);\n    }\n    return iVar3;\n}\n",
        "token_count": 183
    },
    "0046ca4c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0046ca4c(uint arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    fcn.0040bfbf();\n    bVar1 = false;\n    do {\n        cVar2 = fcn.0046c9a7(&var_4h);\n        if (cVar2 == '\\0') {\n            if (bVar1) {\ncode_r0x0046caaf:\n                uVar3 = 1;\n            }\n            else {\n                uVar3 = 0;\n            }\n            return uVar3;\n        }\n        bVar1 = true;\n        if (var_4h == 0xd) {\n            cVar2 = fcn.0046c9a7(&var_4h);\n            if ((cVar2 != '\\0') && (var_4h != 10)) {\n                fcn.00406e66(0xfffffffe, 0xffffffff, 1);\n            }\n            goto code_r0x0046caaf;\n        }\n        if (var_4h == 10) goto code_r0x0046caaf;\n        fcn.004051ec(var_4h);\n    } while( true );\n}\n",
        "token_count": 290
    },
    "0046de15": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0046de15(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0;\n    uVar1 = *param_1;\n    while( true ) {\n        if (uVar1 == 0) {\n            uVar3 = fcn.0042628b(param_1);\n            return uVar3;\n        }\n        iVar2 = fcn.00426342(uVar1);\n        if (iVar2 == 0) break;\n        iVar4 = iVar4 + 1;\n        uVar1 = param_1[iVar4];\n    }\n    return 0;\n}\n",
        "token_count": 161
    },
    "0046e9d4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e9d4(uint *param_1)\n\n{\n    uint32_t arg_8h;\n    int16_t *piVar1;\n    uint16_t *puVar2;\n    uint32_t arg_8h_00;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    arg_8h = param_1[1];\n    fcn.00407c18(arg_8h);\n    arg_8h_00 = 0;\n    if (arg_8h != 0) {\n        do {\n            piVar1 = fcn.0040660f(arg_8h_00);\n            var_4h = arg_8h_00 + 1;\n            if (*piVar1 != 0xd) {\n                puVar2 = fcn.0040660f(arg_8h_00);\n                fcn.004051ec(*puVar2);\n            }\n            arg_8h_00 = var_4h;\n        } while (var_4h < arg_8h);\n    }\n    if (param_1 != &var_14h) {\n        fcn.0040c1c3(&var_14h);\n    }\n    fcn.0040b1ff();\n    return;\n}\n",
        "token_count": 281
    },
    "0046eb5c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046eb5c(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    ushort *in_EDX;\n    uint *puVar3;\n    ushort *puVar4;\n    uint *puVar5;\n    uint var_28h;\n    int32_t var_4h;\n    \n    puVar3 = L\"0123456789ABCDEF\";\n    puVar5 = &var_28h;\n    var_4h = in_ECX;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = *puVar3;\n    *in_EDX = 0x30;\n    in_EDX[1] = 0x78;\n    iVar2 = arg_8h + -1;\n    if (-1 < iVar2) {\n        puVar4 = in_EDX + arg_8h * 2;\n        do {\n            uVar1 = *(iVar2 + var_4h);\n            iVar2 = iVar2 + -1;\n            puVar4[1] = *(&var_28h + (uVar1 & 0xf) * 2);\n            *puVar4 = *(&var_28h + (uVar1 >> 4) * 2);\n            puVar4 = puVar4 + -2;\n        } while (-1 < iVar2);\n    }\n    in_EDX[arg_8h * 2 + 2] = 0;\n    return;\n}\n",
        "token_count": 385
    },
    "0047bb18": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047bb18(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint *in_ECX;\n    uint unaff_EDI;\n    \n    *in_ECX = 0x4af404;\n    uVar2 = *(arg_8h + 8);\n    in_ECX[2] = uVar2;\n    if (uVar2 == 0) {\n        in_ECX[3] = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        if (uVar2 < 8) {\n            uVar2 = 8;\n        }\n        in_ECX[3] = uVar2;\n        uVar3 = fcn.0041fd8b(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n        uVar2 = 0;\n        in_ECX[1] = uVar3;\n        if (in_ECX[2] != 0) {\n            do {\n                puVar4 = fcn.0041fd5b(8, unaff_EDI);\n                puVar1 = *(*(arg_8h + 4) + uVar2 * 4);\n                *puVar4 = *puVar1;\n                puVar4[1] = puVar1[1];\n                *(in_ECX[1] + uVar2 * 4) = puVar4;\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < in_ECX[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 371
    },
    "0047c5a3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047c5a3(int32_t *arg_8h, uchar *arg_ch)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar2 = fcn.0040ce67();\n    puVar1 = arg_ch;\n    fcn.0040e8a0();\n    *(puVar1 + 0xc) = 9;\n    *puVar1 = 0;\n    arg_8h = *(in_ECX + 4);\n    while( true ) {\n        if (arg_8h == NULL) {\n            return 0;\n        }\n        if (*(*arg_8h + 0xd8) == iVar2) {\n            fcn.0047d16f();\n            fcn.0047d2cd(&arg_8h);\n            fcn.0040e8a0();\n            *(puVar1 + 0xc) = 9;\n            *puVar1 = 1;\n        }\n        if (arg_8h == NULL) break;\n        arg_8h = arg_8h[1];\n    }\n    return 0;\n}\n",
        "token_count": 256
    },
    "0047d43f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047d43f(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar1 = *(arg_8h + 8);\n    uVar2 = fcn.0040ce67();\n    uVar4 = 1;\n    if (1 < uVar1) {\n        do {\n            uVar3 = fcn.0040ce67();\n            uVar2 = uVar2 & uVar3;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < uVar1);\n    }\n    fcn.0040e8a0();\n    *arg_ch = uVar2;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 197
    },
    "0047d4c2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0047d4c2(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar1 = *(arg_8h + 8);\n    uVar2 = fcn.0040ce67();\n    uVar4 = 1;\n    if (1 < uVar1) {\n        do {\n            uVar3 = fcn.0040ce67();\n            uVar2 = uVar2 | uVar3;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < uVar1);\n    }\n    fcn.0040e8a0();\n    *arg_ch = uVar2;\n    arg_ch[3] = 1;\n    return 0;\n}\n",
        "token_count": 198
    },
    "004855b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004855b0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint32_t uVar2;\n    uint unaff_EDI;\n    uint32_t uVar3;\n    \n    *in_ECX = 0x49d114;\n    uVar3 = *(arg_8h + 8);\n    in_ECX[2] = uVar3;\n    if (uVar3 == 0) {\n        in_ECX[3] = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        uVar2 = 8;\n        if (7 < uVar3) {\n            uVar2 = uVar3;\n        }\n        in_ECX[3] = uVar2;\n        uVar1 = fcn.0041fd8b(-(uVar2 * 4 >> 0x20 != 0) | uVar2 * 4);\n        uVar3 = 0;\n        in_ECX[1] = uVar1;\n        if (in_ECX[2] != 0) {\n            do {\n                fcn.0041fd5b(0xc, unaff_EDI);\n                unaff_EDI = *(*(arg_8h + 4) + uVar3 * 4);\n                uVar1 = fcn.00470977(unaff_EDI);\n                *(in_ECX[1] + uVar3 * 4) = uVar1;\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < in_ECX[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "00487559": {
        "rules": [
            "contain loop",
            "query environment variable"
        ],
        "decompiled_code": "\nvoid fcn.00487559(void)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uchar *arg_8h;\n    int32_t extraout_ECX;\n    int32_t iVar5;\n    ushort uStackY8236;\n    uint lpName;\n    int32_t var_14h;\n    uint var_10h;\n    \n    fcn.00441ef0();\n    var_10h = 0x487576;\n    var_14h = extraout_ECX;\n    fcn.0040c25d();\n    iVar5 = 0;\n    var_10h = 0x487581;\n    fcn.00408e90();\n    bVar3 = false;\n    puVar2 = **(extraout_ECX + 8);\n    uVar1 = *puVar2;\n    if (uVar1 != 0) {\n        do {\n            var_10h = 0x25;\n            iVar5 = iVar5 + 1;\n            if (uVar1 == 0x25) {\n                if (puVar2[iVar5] == 0x25) {\n                    var_14h = 0x4875b0;\n                    fcn.004051ec(0x25);\n                }\n                else {\n                    var_14h = 0x4875c2;\n                    fcn.0040b606(0x49d0d0);\n                    var_14h = 0x25;\n                    while( true ) {\n                        uVar1 = puVar2[iVar5];\n                        if ((uVar1 == 0x25) || (uVar1 == 0)) break;\n                        fcn.004051ec(uVar1);\n                        iVar5 = iVar5 + 1;\n                    }\n                    if (puVar2[iVar5] == 0) {\n                        bVar3 = true;\n                        fcn.004052b7(0x4c7348);\n                        var_10h = 0x487673;\n                        fcn.00407cf8(&fcn.00487559::lpName);\n                        var_10h = 0x48767b;\n                        fcn.0040b1ff();\n                        break;\n                    }\n                    uStackY8236 = 0;\n                    var_10h = lpName;\n                    var_14h = 0x487603;\n                    iVar4 = (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableW)();\n                    if (iVar4 == 0) {\n                        var_10h = 0x48761d;\n                        fcn.004052b7(0x4c7348);\n                        var_14h = 0x487629;\n                        fcn.00407cf8(&fcn.00487559::lpName);\n                        arg_8h = 0x4c7348;\n                    }\n                    else {\n                        arg_8h = &stack0xffffdfd4;\n                    }\n                    var_10h = 0x487634;\n                    fcn.004052b7(arg_8h);\n                    var_10h = 0x48763c;\n                    fcn.0040b1ff();\n                }\n                bVar3 = true;\n                iVar5 = iVar5 + 1;\n            }\n            else {\n                var_14h = 0x48764a;\n                fcn.004051ec(uVar1);\n            }\n            uVar1 = puVar2[iVar5];\n        } while (uVar1 != 0);\n        if (bVar3) {\n            var_14h = 0x48768b;\n            fcn.00407c5d(&fcn.00487559::var_10h);\n        }\n    }\n    var_10h = 0x487693;\n    fcn.0040b1ff();\n    return;\n}\n",
        "token_count": 835
    },
    "00487698": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00487698(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    char32_t *arg_8h_00;\n    int32_t iVar4;\n    int32_t iVar5;\n    char32_t *unaff_EDI;\n    uint var_54h;\n    char32_t *var_4ch;\n    uint var_48h;\n    uint var_40h;\n    uint lpsz;\n    uint cchLength;\n    uint var_20h;\n    char32_t *var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.0040c25d();\n    fcn.0040c25d();\n    fcn.0040c25d();\n    iVar5 = 0;\n    fcn.00408e90();\n    var_48h = 1;\n    puVar2 = **(arg_8h + 8);\n    bVar3 = false;\n    var_8h = 0;\n    var_54h = 0;\n    var_4ch = NULL;\n    uVar1 = *puVar2;\n    if (uVar1 != 0) {\n        var_10h = 0x4c734c;\n        do {\n            arg_8h_00 = uVar1;\n            iVar5 = iVar5 + 1;\n            if (uVar1 == 0x24) {\n                if (puVar2[iVar5] == 0x24) {\ncode_r0x004877a7:\n                    fcn.004051ec(unaff_EDI);\n                }\n                else {\n                    fcn.004084e7(0x49d0d0);\n                    while( true ) {\n                        uVar1 = puVar2[iVar5];\n                        if ((uVar1 == 0x24) || (uVar1 == 0)) break;\n                        fcn.004051ec(uVar1);\n                        iVar5 = iVar5 + 1;\n                    }\n                    if (puVar2[iVar5] == 0) {\n                        fcn.004052b7(L\"$()*+\\x000a0020\\x000a0020\\n\\x000a000a\");\n                        fcn.00407cf8(&var_40h);\n                        goto code_r0x004878aa;\n                    }\n                    fcn.0040c1c3(&var_40h);\n                    fcn.0040c7c9();\n                    (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n                    iVar4 = fcn.0041da6c(&lpsz, &var_8h, 0);\n                    if (iVar4 == 0) {\n                        unaff_EDI = L\"$()*+\\x000a0020\\x000a0020\\n\\x000a000a\";\ncode_r0x00487836:\n                        fcn.004052b7(unaff_EDI);\n                        fcn.00407cf8(&var_40h);\n                    }\n                    else {\n                        fcn.00408e90();\n                        unaff_EDI = **(iVar4 + 8);\n                    }\n                    fcn.004052b7(unaff_EDI);\n                }\ncode_r0x00487854:\n                bVar3 = true;\n                iVar5 = iVar5 + 1;\n                arg_8h_00 = unaff_EDI;\n            }\n            else {\n                if (uVar1 == 0x40) {\n                    if (puVar2[iVar5] == 0x40) goto code_r0x004877a7;\n                    fcn.004084e7(0x49d0d0);\n                    while( true ) {\n                        uVar1 = puVar2[iVar5];\n                        if ((uVar1 == 0x40) || (uVar1 == 0)) break;\n                        fcn.004051ec(uVar1);\n                        iVar5 = iVar5 + 1;\n                    }\n                    if (puVar2[iVar5] != 0) {\n                        fcn.0040c1c3(&var_40h);\n                        fcn.0040c7c9();\n                        (*_sym.imp.USER32.dll_CharUpperBuffW)(lpsz, cchLength);\n                        iVar4 = fcn.0041d70e(&lpsz, &var_54h);\n                        unaff_EDI = var_10h;\n                        if (iVar4 < 0) goto code_r0x00487836;\n                        fcn.00408e90();\n                        unaff_EDI = var_4ch;\n                        fcn.00407cf8(var_4ch);\n                        goto code_r0x00487854;\n                    }\n                    bVar3 = true;\n                    fcn.004052b7(0x4c734c);\n                    fcn.00407cf8(&var_40h);\n                    break;\n                }\n                fcn.004051ec(arg_8h_00);\n            }\n            uVar1 = puVar2[iVar5];\n            unaff_EDI = arg_8h_00;\n        } while (uVar1 != 0);\n        if (bVar3) {\ncode_r0x004878aa:\n            fcn.00407c5d(&var_20h);\n        }\n    }\n    fcn.0040e8a0();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    fcn.0040b1ff();\n    return;\n}\n",
        "token_count": 1197
    },
    "00487a2a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00487a2a(int32_t arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    uint *puVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = *(arg_8h + 4);\n    iVar3 = *arg_ch;\n    if (*(*(iVar4 + iVar3 * 4) + 8) == 0x35) {\n        iVar2 = *arg_10h;\n        do {\n            puVar1 = *(iVar4 + iVar3 * 4);\n            if (*(iVar2 + 0xc) != 0xf) {\n                fcn.004734ba(0x7a, *(puVar1 + 10));\n                return 0xffffffff;\n            }\n            arg_8h_00 = *puVar1;\n            *arg_ch = iVar3 + 1;\n            iVar2 = fcn.0046b459(arg_8h_00, 0x10);\n            *arg_10h = iVar2;\n            if (iVar2 == 0) {\n                return 0;\n            }\n            iVar3 = *arg_ch;\n            iVar4 = *(arg_8h + 4);\n        } while (*(*(iVar4 + iVar3 * 4) + 8) == 0x35);\n    }\n    return 0;\n}\n",
        "token_count": 327
    },
    "00487dad": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00487dad(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint *in_ECX;\n    uint32_t uVar3;\n    uint unaff_EDI;\n    uint32_t uVar4;\n    \n    *in_ECX = 0x49cde8;\n    uVar4 = *(arg_8h + 8);\n    in_ECX[2] = uVar4;\n    if (uVar4 == 0) {\n        in_ECX[3] = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        uVar3 = 8;\n        if (7 < uVar4) {\n            uVar3 = uVar4;\n        }\n        in_ECX[3] = uVar3;\n        uVar1 = fcn.0041fd8b(-(uVar3 * 4 >> 0x20 != 0) | uVar3 * 4);\n        uVar4 = 0;\n        in_ECX[1] = uVar1;\n        if (in_ECX[2] != 0) {\n            do {\n                puVar2 = fcn.0041fd5b(4, unaff_EDI);\n                *puVar2 = **(*(arg_8h + 4) + uVar4 * 4);\n                *(in_ECX[1] + uVar4 * 4) = puVar2;\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < in_ECX[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "0048b420": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048b420(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(param_1 + 8) != 0) {\n        do {\n            iVar1 = *(param_1 + 4);\n            arg_8h = *(iVar1 + uVar2 * 4);\n            if (arg_8h != 0) {\n                fcn.0040b1ff();\n                fcn.0041fd4d(arg_8h);\n                iVar1 = *(param_1 + 4);\n            }\n            *(iVar1 + uVar2 * 4) = 0;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *(param_1 + 8));\n    }\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 212
    },
    "0048d0ae": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048d0ae(int32_t **arg_8h, int32_t **arg_ch)\n\n{\n    double dVar1;\n    int32_t *piVar2;\n    double in_stack_0000000c;\n    \n    piVar2 = *arg_ch;\n    while( true ) {\n        if (piVar2 == NULL) {\n            *arg_8h = NULL;\n            return;\n        }\n        dVar1 = *(*piVar2 + 4);\n        if (*(*piVar2 + 4) < 0) {\n            dVar1 = dVar1 + *0x4c81d0;\n        }\n        if (dVar1 == in_stack_0000000c) break;\n        piVar2 = piVar2[1];\n    }\n    *arg_8h = piVar2;\n    return;\n}\n",
        "token_count": 188
    },
    "0048def6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0048def6(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t arg_8h_00;\n    \n    iVar2 = **(arg_8h + 4);\n    fcn.00408e90();\n    uVar1 = *(*(iVar2 + 8) + 4);\n    fcn.0040e8a0();\n    arg_8h_00 = 0;\n    arg_ch[3] = 1;\n    *arg_ch = 0;\n    if (uVar1 != 0) {\n        do {\n            fcn.004058ca(arg_8h_00);\n            iVar2 = fcn.0046e0cd();\n            if (iVar2 == 0) {\n                return 0;\n            }\n            arg_8h_00 = arg_8h_00 + 1;\n        } while (arg_8h_00 < uVar1);\n    }\n    fcn.0040e8a0();\n    arg_ch[3] = 1;\n    *arg_ch = 1;\n    return 0;\n}\n",
        "token_count": 260
    },
    "00497d85": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00497d85(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    char cVar2;\n    uint32_t noname_4;\n    uint uVar3;\n    int32_t iVar4;\n    char cVar5;\n    uint uStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint auStack56 [2];\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint auStack24 [2];\n    uint uStack16;\n    uint uStack12;\n    \n    iVar4 = *0x4d152c;\n    iStack60 = *0x4d152c;\n    if ((*0x4d152c == 1) || (*0x4d1367 != '\\0')) {\ncode_r0x0047b931:\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 0;\n        uStack12 = 1;\n        noname_4 = 0;\n        *0x4d152c = 0;\n        auStack24[0] = 0;\n        uStack16 = 0;\n        auStack56[0] = 0;\n        uStack48 = 0;\n        uStack44 = 1;\n        uStack40 = 0x49d100;\n        uStack36 = 0;\n        uStack32 = 0;\n        uStack28 = 0;\n        iStack64 = 0;\n        if (*0x4d1900 != 0) {\n            do {\n                uVar1 = *0x4d18ec;\n                if (noname_4 == 0) {\n                    fcn.0040e8a0();\n                    auStack56[0] = uVar1;\n                    uStack44 = 1;\n                }\n                else {\n                    if (noname_4 == 1) {\n                        fcn.0040e8a0();\n                        auStack56[0] = param_1;\n                    }\n                    else {\n                        if (noname_4 != 2) {\n                            if (noname_4 == 3) {\n                                fcn.0040e8a0();\n                                uStack44 = 1;\n                                auStack56[0] = param_3;\n                            }\n                            goto code_r0x0047b861;\n                        }\n                        fcn.0040e8a0();\n                        auStack56[0] = param_2;\n                    }\n                    uStack44 = 1;\n                }\ncode_r0x0047b861:\n                fcn.00466fef(auStack56);\n                noname_4 = uStack68 + 1;\n                iVar4 = iStack64;\n                uStack68 = noname_4;\n            } while (noname_4 < *0x4d1900);\n        }\n        uStack68 = uStack68 & 0xffffff;\n        cVar5 = '\\0';\n        cVar2 = fcn.0047e315(0x4d18f0, &uStack40, auStack24, 0, noname_4, &uStack68 + 3);\n        if ((cVar2 != '\\0') && (*0x4d152c != 1)) {\n            *0x4d152c = iVar4;\n            if (cVar5 == '\\0') {\n                uStack68 = 0x49d100;\n                fcn.00466f23();\n                fcn.0041fd94(iStack64);\n                fcn.0040e8a0();\n                fcn.0040e8a0();\n                goto code_r0x0047b931;\n            }\n            uVar3 = fcn.0040ce67();\n        }\n        uStack68 = 0x49d100;\n        fcn.00466f23();\n        fcn.0041fd94(iStack64);\n        fcn.0040e8a0();\n        fcn.0040e8a0();\n    }\n    return uVar3;\n}\n",
        "token_count": 906
    },
    "0049a9a2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.0049a9a2(int32_t param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = \"no error\";\n    while( true ) {\n        if (param_1 < 1) {\n            return pcVar2;\n        }\n        do {\n            cVar1 = *pcVar2;\n            pcVar2 = pcVar2 + 1;\n        } while (cVar1 != '\\0');\n        if (*pcVar2 == '\\0') break;\n        param_1 = param_1 + -1;\n    }\n    return \"Error text not found (please report)\";\n}\n",
        "token_count": 144
    },
    "0046b1fd": {
        "rules": [
            "log keystrokes"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0046b1fd(uint arg_8h)\n\n{\n    char cVar1;\n    char *in_ECX;\n    \n    fcn.00469e9c();\n    *in_ECX = arg_8h;\n    if (arg_8h != -1) {\n        cVar1 = (*_sym.imp.USER32.dll_MapVirtualKeyW)(arg_8h, 0);\n        in_ECX[7] = cVar1;\n    }\n    return arg_8h != -1;\n}\n",
        "token_count": 116
    },
    "0041f962": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.0041f962(void)\n\n{\n    uchar auStackY65540 [65516];\n    uint uStackY24;\n    \n    fcn.00441ef0();\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)();\n    uStackY24 = 0x41f992;\n    fcn.004084e7(&stack0xfffefffc);\n    return;\n}\n",
        "token_count": 87
    },
    "0046de45": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046de45(uint param_1)\n\n{\n    uint hwndOwner;\n    \n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, param_1, 0, 0, &hwndOwner);\n    fcn.004084e7(&hwndOwner);\n    return;\n}\n",
        "token_count": 69
    },
    "00472f35": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00472f35(uint param_1)\n\n{\n    uint lpPathName;\n    \n    (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x104, &lpPathName);\n    (*_sym.imp.KERNEL32.dll_GetTempFileNameW)(&lpPathName, 0x4c6a90, 0, param_1);\n    return;\n}\n",
        "token_count": 86
    },
    "004753d4": {
        "rules": [
            "set current directory"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004753d4(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = **(arg_8h + 4);\n    fcn.00408e90();\n    iVar1 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(**(iVar1 + 8));\n    if (iVar1 == 0) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 127
    },
    "00406122": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406122(int32_t param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint hResData;\n    \n    ppiVar1 = param_1 + 0x10;\n    iVar2 = (*_sym.imp.ole32.dll_CreateStreamOnHGlobal)(0, 1, ppiVar1);\n    if ((((-1 < iVar2) &&\n         (iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceExW)(*(param_1 + 0xc), 10, L\"SCRIPT\", 0),  iVar2 != 0)) &&\n        (iVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(*(param_1 + 0xc), iVar2),  iVar3 != 0)) &&\n       ((iVar2 = (*_sym.imp.KERNEL32.dll_SizeofResource)(*(param_1 + 0xc), iVar2),  iVar2 != 0 &&\n        (iVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar3),  iVar3 != 0)))) {\n        (**(**ppiVar1 + 0x10))(*ppiVar1, iVar3, iVar2, 0);\n        (**(**ppiVar1 + 0x14))(*ppiVar1, 0, 0, 0, 0);\n        *(param_1 + 0x14) = 1;\n    }\n    return;\n}\n",
        "token_count": 322
    },
    "004067fb": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004067fb(uint *param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x49d0a8);\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"Wow64RevertWow64FsRedirection\");\n        if (pcVar2 != NULL) {\n            (*pcVar2)(*param_1);\n        }\n        if (iVar1 != 0) {\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00406832": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00406832(uint *param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    \n    *param_1 = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x49d0a8);\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"Wow64DisableWow64FsRedirection\");\n        if (pcVar2 != NULL) {\n            (*pcVar2)(param_1);\n        }\n        if (iVar1 != 0) {\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar1);\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 163
    },
    "0046d1ba": {
        "rules": [
            "copy file"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0046d1ba(uint *param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CopyFileExW)(*param_1, *param_2, 0, 0, &var_4h, 8);\n    return -(iVar1 + -1) & 0xffffff00U | 1 - (iVar1 + -1 != 0);\n}\n",
        "token_count": 122
    },
    "0046e77b": {
        "rules": [
            "delete directory"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ah\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0046e77b(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    uint unaff_EBX;\n    uchar auStackY65572 [2];\n    ushort auStackY65570 [32767];\n    uint lpFileOp;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    ushort var_10h;\n    uint var_eh;\n    uint var_ah;\n    uint var_6h;\n    ushort uStack6;\n    \n    var_6h._2_1_ = 0x88;\n    var_6h._3_1_ = 0xe7;\n    uStack6 = 0x46;\n    fcn.00441ef0();\n    var_6h._2_1_ = unaff_EBX;\n    var_6h._3_1_ = unaff_EBX >> 8;\n    uStack6 = unaff_EBX >> 0x10;\n    var_ah._2_1_ = SUB41(auStackY65572, 0);\n    var_ah._3_1_ = auStackY65572 >> 8;\n    var_6h._0_2_ = auStackY65572 >> 0x10;\n    var_eh._2_1_ = 0x9e;\n    var_eh._3_1_ = 0xe7;\n    var_ah._0_2_ = 0x46;\n    fcn.0046dcfe(auStackY65572);\n    var_ah._2_1_ = 0xaa;\n    var_ah._3_1_ = 0xe7;\n    var_6h._0_2_ = 0x46;\n    cVar1 = fcn.0046e0b7();\n    if (cVar1 != '\\0') {\n        var_ah._2_1_ = SUB41(auStackY65572, 0);\n        var_ah._3_1_ = auStackY65572 >> 8;\n        var_6h._0_2_ = auStackY65572 >> 0x10;\n        if (extraout_DL == '\\0') {\n            var_eh._2_1_ = 0xbf;\n            var_eh._3_1_ = 0xe7;\n            var_ah._0_2_ = 0x46;\n            iVar2 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryW)();\n            if (iVar2 != 0) {\n                return 1;\n            }\n        }\n        else {\n            var_eh._2_1_ = 0xcd;\n            var_eh._3_1_ = 0xe7;\n            var_ah._0_2_ = 0x46;\n            iVar2 = fcn.004248f3(auStackY65572);\n            var_1ch = 3;\n            auStackY65570[iVar2] = 0;\n            var_18h = auStackY65572;\n            var_14h = 0;\n            var_6h._2_1_ = 0;\n            var_6h._3_1_ = 0;\n            var_eh._0_2_ = 0;\n            lpFileOp = 0;\n            var_10h = 0x614;\n            var_ah._2_1_ = SUB41(&lpFileOp, 0);\n            var_ah._3_1_ = &lpFileOp >> 8;\n            var_6h._0_2_ = &lpFileOp >> 0x10;\n            var_eh._2_1_ = 0xc;\n            var_eh._3_1_ = 0xe8;\n            var_ah._0_2_ = 0x46;\n            iVar2 = (*_sym.imp.SHELL32.dll_SHFileOperationW)();\n            if (iVar2 == 0) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 910
    },
    "00477953": {
        "rules": [
            "empty the recycle bin"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00477953(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = 0;\n    if (*(arg_8h + 8) != 0) {\n        iVar2 = **(arg_8h + 4);\n        fcn.00408e90();\n        uVar1 = **(iVar2 + 8);\n    }\n    iVar2 = (*_sym.imp.SHELL32.dll_SHEmptyRecycleBinW)(0, uVar1, 7);\n    if (iVar2 != 0) {\n        fcn.0040e8a0();\n        *arg_ch = 0;\n        arg_ch[3] = 1;\n    }\n    return 0;\n}\n",
        "token_count": 177
    }
}